

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 17 21:59:41 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83   000000                     
    84                           ; Generated 12/10/2023 GMT
    85                           ; 
    86                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F46K22 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118   000000                     
   119                           	psect	idataBANK1
   120   0051EC                     __pidataBANK1:
   121                           	callstack 0
   122                           
   123                           ;initializer for moveDisplay@F6965
   124   0051EC  DC                 	db	low STR_19
   125   0051ED  FF                 	db	high STR_19
   126   0051EE  E1                 	db	low STR_20
   127   0051EF  FF                 	db	high STR_20
   128   0051F0  FB                 	db	low STR_21
   129   0051F1  FF                 	db	high STR_21
   130   0051F2  F7                 	db	low STR_22
   131   0051F3  FF                 	db	high STR_22
   132   0051F4  F3                 	db	low STR_23
   133   0051F5  FF                 	db	high STR_23
   134   0051F6  D7                 	db	low STR_24
   135   0051F7  FF                 	db	high STR_24
   136   0051F8  C6                 	db	low STR_25
   137   0051F9  FF                 	db	high STR_25
   138   0051FA  D6                 	db	low (STR_30+4)
   139   0051FB  FF                 	db	high (STR_30+4)
   140                           
   141                           ;initializer for runGPIO@F6993
   142   0051FC  20                 	db	32
   143   0051FD  30                 	db	48
   144   0051FE  18                 	db	24
   145   0051FF  0C                 	db	12
   146   005200  06                 	db	6
   147   005201  03                 	db	3
   148   005202  01                 	db	1
   149   005203  03                 	db	3
   150   005204  06                 	db	6
   151   005205  0C                 	db	12
   152   005206  18                 	db	24
   153   005207  30                 	db	48
   154                           
   155                           ;initializer for runGPIO@F6975
   156   005208  CE                 	db	low _LED1_Control
   157   005209  52                 	db	high _LED1_Control
   158   00520A  C0                 	db	low _LED2_Control
   159   00520B  52                 	db	high _LED2_Control
   160   00520C  B2                 	db	low _LED3_Control
   161   00520D  52                 	db	high _LED3_Control
   162   00520E  A4                 	db	low _LED4_Control
   163   00520F  52                 	db	high _LED4_Control
   164   005210  96                 	db	low _LED5_Control
   165   005211  52                 	db	high _LED5_Control
   166   005212  DC                 	db	low _LED6_Control
   167   005213  52                 	db	high _LED6_Control
   168                           
   169                           	psect	mediumconst
   170   00FE36                     __pmediumconst:
   171                           	callstack 0
   172   00FE36  00                 	db	0
   173   00FE37  6C3C               	dw	27708
   174   00FE39  3636               	dw	13878
   175   00FE3B                     __end_of_S4:
   176                           	callstack 0
   177   00FE3B  07CF               	dw	1999
   178   00FE3D  B950               	dw	47440
   179   00FE3F                     __end_of_S3:
   180                           	callstack 0
   181   00FE3F  8884               	dw	34948
   182   00FE41  3C08               	dw	15368
   183   00FE43                     __end_of_S2:
   184                           	callstack 0
   185   00FE43  AAAB               	dw	43691
   186   00FE45  BE2A               	dw	48682
   187   00FE47                     __end_of_S1:
   188                           	callstack 0
   189   00FE47  85A3               	dw	34211
   190   00FE49  3288               	dw	12936
   191   00FE4B                     __end_of_pio2_1t:
   192                           	callstack 0
   193   00FE4B  0FDA               	dw	4058
   194   00FE4D  3FC9               	dw	16329
   195   00FE4F                     __end_of_pio2_1:
   196                           	callstack 0
   197   00FE4F  F983               	dw	63875
   198   00FE51  3F22               	dw	16162
   199   00FE53                     __end_of_invpio2:
   200                           	callstack 0
   201   00FE53  0000               	dw	0
   202   00FE55  3F00               	dw	16128
   203   00FE57                     __end_of_half:
   204                           	callstack 0
   205   00FE57  9A17               	dw	39447
   206   00FE59  37CC               	dw	14284
   207   00FE5B                     __end_of_C3:
   208                           	callstack 0
   209   00FE5B  043F               	dw	1087
   210   00FE5D  BAB6               	dw	47798
   211   00FE5F                     __end_of_C2:
   212                           	callstack 0
   213   00FE5F  AA9F               	dw	43679
   214   00FE61  3D2A               	dw	15658
   215   00FE63                     __end_of_C1:
   216                           	callstack 0
   217   00FE63  0000               	dw	0
   218   00FE65  BF00               	dw	48896
   219   00FE67                     __end_of_C0:
   220                           	callstack 0
   221   00FE67  0FDB               	dw	4059
   222   00FE69  40C9               	dw	16585
   223   00FE6B                     __end_of_s4pio2:
   224                           	callstack 0
   225   00FE6B  CBE4               	dw	52196
   226   00FE6D  4096               	dw	16534
   227   00FE6F                     __end_of_s3pio2:
   228                           	callstack 0
   229   00FE6F  0FDB               	dw	4059
   230   00FE71  4049               	dw	16457
   231   00FE73                     __end_of_s2pio2:
   232                           	callstack 0
   233   00FE73  0FDB               	dw	4059
   234   00FE75  3FC9               	dw	16329
   235   00FE77                     __end_of_s1pio2:
   236                           	callstack 0
   237   000000                     _ADRESL	set	4035
   238   000000                     _RCREG1	set	4014
   239   000000                     _ANSELCbits	set	3898
   240   000000                     _TXREG1	set	4013
   241   000000                     _ADRESH	set	4036
   242   000000                     _LATBbits	set	3978
   243   000000                     _TXSTA1bits	set	4012
   244   000000                     _ANSELBbits	set	3897
   245   000000                     _TRISBbits	set	3987
   246   000000                     _SSP2STATbits	set	3949
   247   000000                     _SSP2ADD	set	3950
   248   000000                     _ANSELDbits	set	3899
   249   000000                     _PORTAbits	set	3968
   250   000000                     _PORTCbits	set	3970
   251   000000                     _LATCbits	set	3979
   252   000000                     _LATDbits	set	3980
   253   000000                     _ANSELAbits	set	3896
   254   000000                     _TRISAbits	set	3986
   255   000000                     _TRISCbits	set	3988
   256   000000                     _TMR2IE	set	31977
   257   000000                     _TMR2IF	set	31985
   258   000000                     _RC1IF	set	31989
   259   000000                     _RC1IE	set	31981
   260   000000                     _TMR1ON	set	32360
   261   000000                     _TMR1IF	set	31984
   262   000000                     _GIE	set	32663
   263   000000                     _TX1IF	set	31988
   264   000000                     _GODONE	set	32273
   265   000000                     _TRISDbits	set	3989
   266   000000                     _TMR1IE	set	31976
   267   000000                     _SSP1IF	set	31987
   268   000000                     _SSP2IF	set	32039
   269   000000                     _LATAbits	set	3977
   270   000000                     _CCPTMRS0bits	set	3913
   271   000000                     _ANSELEbits	set	3900
   272   000000                     _SSP2CON2bits	set	3947
   273   000000                     _SSP2CON1bits	set	3948
   274   000000                     _SSP2BUF	set	3951
   275   000000                     _RCSTA1bits	set	4011
   276   000000                     _SPBRG1	set	4015
   277   000000                     _ADCON2bits	set	4032
   278   000000                     _SSP1CON1bits	set	4038
   279   000000                     _SSP1BUF	set	4041
   280   000000                     _SSP1STATbits	set	4039
   281   000000                     _ADCON0bits	set	4034
   282   000000                     _PR2	set	4027
   283   000000                     _TMR2ON	set	32210
   284   000000                     _T1CONbits	set	4045
   285   000000                     _TMR1	set	4046
   286   000000                     _PEIE	set	32662
   287   000000                     _CCP1CONbits	set	4029
   288   000000                     _CCPR1L	set	4030
   289   00FE77                     STR_31:
   290   00FE77  25                 	db	37
   291   00FE78  75                 	db	117	;'u'
   292   00FE79  20                 	db	32
   293   00FE7A  20                 	db	32
   294   00FE7B  20                 	db	32
   295   00FE7C  20                 	db	32
   296   00FE7D  20                 	db	32
   297   00FE7E  20                 	db	32
   298   00FE7F  20                 	db	32
   299   00FE80  20                 	db	32
   300   00FE81  20                 	db	32
   301   00FE82  20                 	db	32
   302   00FE83  20                 	db	32
   303   00FE84  20                 	db	32
   304   00FE85  20                 	db	32
   305   00FE86  20                 	db	32
   306   00FE87  20                 	db	32
   307   00FE88  20                 	db	32
   308   00FE89  00                 	db	0
   309   00FE8A                     STR_29:
   310   00FE8A  50                 	db	80	;'P'
   311   00FE8B  4F                 	db	79	;'O'
   312   00FE8C  54                 	db	84	;'T'
   313   00FE8D  31                 	db	49	;'1'
   314   00FE8E  3A                 	db	58	;':'
   315   00FE8F  25                 	db	37
   316   00FE90  2E                 	db	46
   317   00FE91  31                 	db	49	;'1'
   318   00FE92  66                 	db	102	;'f'
   319   00FE93  50                 	db	80	;'P'
   320   00FE94  4F                 	db	79	;'O'
   321   00FE95  54                 	db	84	;'T'
   322   00FE96  32                 	db	50	;'2'
   323   00FE97  3A                 	db	58	;':'
   324   00FE98  25                 	db	37
   325   00FE99  2E                 	db	46
   326   00FE9A  31                 	db	49	;'1'
   327   00FE9B  66                 	db	102	;'f'
   328   00FE9C  00                 	db	0
   329   00FE9D                     STR_34:
   330   00FE9D  53                 	db	83	;'S'
   331   00FE9E  6B                 	db	107	;'k'
   332   00FE9F  6F                 	db	111	;'o'
   333   00FEA0  72                 	db	114	;'r'
   334   00FEA1  65                 	db	101	;'e'
   335   00FEA2  3A                 	db	58	;':'
   336   00FEA3  20                 	db	32
   337   00FEA4  25                 	db	37
   338   00FEA5  75                 	db	117	;'u'
   339   00FEA6  20                 	db	32
   340   00FEA7  20                 	db	32
   341   00FEA8  20                 	db	32
   342   00FEA9  20                 	db	32
   343   00FEAA  20                 	db	32
   344   00FEAB  20                 	db	32
   345   00FEAC  20                 	db	32
   346   00FEAD  20                 	db	32
   347   00FEAE  00                 	db	0
   348   00FEAF                     STR_32:
   349   00FEAF  25                 	db	37
   350   00FEB0  68                 	db	104	;'h'
   351   00FEB1  75                 	db	117	;'u'
   352   00FEB2  20                 	db	32
   353   00FEB3  20                 	db	32
   354   00FEB4  20                 	db	32
   355   00FEB5  20                 	db	32
   356   00FEB6  20                 	db	32
   357   00FEB7  20                 	db	32
   358   00FEB8  20                 	db	32
   359   00FEB9  20                 	db	32
   360   00FEBA  20                 	db	32
   361   00FEBB  20                 	db	32
   362   00FEBC  20                 	db	32
   363   00FEBD  20                 	db	32
   364   00FEBE  20                 	db	32
   365   00FEBF  00                 	db	0
   366   00FEC0                     STR_35:
   367   00FEC0  47                 	db	71	;'G'
   368   00FEC1  41                 	db	65	;'A'
   369   00FEC2  4D                 	db	77	;'M'
   370   00FEC3  45                 	db	69	;'E'
   371   00FEC4  20                 	db	32
   372   00FEC5  4F                 	db	79	;'O'
   373   00FEC6  56                 	db	86	;'V'
   374   00FEC7  45                 	db	69	;'E'
   375   00FEC8  52                 	db	82	;'R'
   376   00FEC9  20                 	db	32
   377   00FECA  20                 	db	32
   378   00FECB  20                 	db	32
   379   00FECC  20                 	db	32
   380   00FECD  20                 	db	32
   381   00FECE  20                 	db	32
   382   00FECF  20                 	db	32
   383   00FED0  00                 	db	0
   384   00FED1                     STR_16:
   385   00FED1  4E                 	db	78	;'N'
   386   00FED2  65                 	db	101	;'e'
   387   00FED3  62                 	db	98	;'b'
   388   00FED4  79                 	db	121	;'y'
   389   00FED5  6C                 	db	108	;'l'
   390   00FED6  6F                 	db	111	;'o'
   391   00FED7  20                 	db	32
   392   00FED8  20                 	db	32
   393   00FED9  20                 	db	32
   394   00FEDA  20                 	db	32
   395   00FEDB  20                 	db	32
   396   00FEDC  20                 	db	32
   397   00FEDD  20                 	db	32
   398   00FEDE  20                 	db	32
   399   00FEDF  20                 	db	32
   400   00FEE0  20                 	db	32
   401   00FEE1  00                 	db	0
   402   00FEE2                     STR_5:
   403   00FEE2  42                 	db	66	;'B'
   404   00FEE3  52                 	db	82	;'R'
   405   00FEE4  3A                 	db	58	;':'
   406   00FEE5  20                 	db	32
   407   00FEE6  31                 	db	49	;'1'
   408   00FEE7  39                 	db	57	;'9'
   409   00FEE8  32                 	db	50	;'2'
   410   00FEE9  30                 	db	48	;'0'
   411   00FEEA  30                 	db	48	;'0'
   412   00FEEB  20                 	db	32
   413   00FEEC  20                 	db	32
   414   00FEED  20                 	db	32
   415   00FEEE  20                 	db	32
   416   00FEEF  20                 	db	32
   417   00FEF0  20                 	db	32
   418   00FEF1  20                 	db	32
   419   00FEF2  00                 	db	0
   420   00FEF3                     STR_1:
   421   00FEF3  56                 	db	86	;'V'
   422   00FEF4  79                 	db	121	;'y'
   423   00FEF5  74                 	db	116	;'t'
   424   00FEF6  76                 	db	118	;'v'
   425   00FEF7  6F                 	db	111	;'o'
   426   00FEF8  72                 	db	114	;'r'
   427   00FEF9  69                 	db	105	;'i'
   428   00FEFA  6C                 	db	108	;'l'
   429   00FEFB  3A                 	db	58	;':'
   430   00FEFC  20                 	db	32
   431   00FEFD  20                 	db	32
   432   00FEFE  20                 	db	32
   433   00FEFF  20                 	db	32
   434   00FF00  20                 	db	32
   435   00FF01  20                 	db	32
   436   00FF02  20                 	db	32
   437   00FF03  00                 	db	0
   438   00FF04                     STR_14:
   439   00FF04  50                 	db	80	;'P'
   440   00FF05  72                 	db	114	;'r'
   441   00FF06  69                 	db	105	;'i'
   442   00FF07  70                 	db	112	;'p'
   443   00FF08  72                 	db	114	;'r'
   444   00FF09  61                 	db	97	;'a'
   445   00FF0A  76                 	db	118	;'v'
   446   00FF0B  69                 	db	105	;'i'
   447   00FF0C  74                 	db	116	;'t'
   448   00FF0D  20                 	db	32
   449   00FF0E  20                 	db	32
   450   00FF0F  20                 	db	32
   451   00FF10  20                 	db	32
   452   00FF11  20                 	db	32
   453   00FF12  20                 	db	32
   454   00FF13  20                 	db	32
   455   00FF14  00                 	db	0
   456   00FF15                     STR_3:
   457   00FF15  50                 	db	80	;'P'
   458   00FF16  6F                 	db	111	;'o'
   459   00FF17  7A                 	db	122	;'z'
   460   00FF18  6F                 	db	111	;'o'
   461   00FF19  72                 	db	114	;'r'
   462   00FF1A  21                 	db	33
   463   00FF1B  20                 	db	32
   464   00FF1C  48                 	db	72	;'H'
   465   00FF1D  61                 	db	97	;'a'
   466   00FF1E  64                 	db	100	;'d'
   467   00FF1F  21                 	db	33
   468   00FF20  21                 	db	33
   469   00FF21  21                 	db	33
   470   00FF22  20                 	db	32
   471   00FF23  20                 	db	32
   472   00FF24  20                 	db	32
   473   00FF25  00                 	db	0
   474   00FF26                     STR_2:
   475   00FF26  44                 	db	68	;'D'
   476   00FF27  61                 	db	97	;'a'
   477   00FF28  76                 	db	118	;'v'
   478   00FF29  69                 	db	105	;'i'
   479   00FF2A  64                 	db	100	;'d'
   480   00FF2B  20                 	db	32
   481   00FF2C  53                 	db	83	;'S'
   482   00FF2D  74                 	db	116	;'t'
   483   00FF2E  72                 	db	114	;'r'
   484   00FF2F  61                 	db	97	;'a'
   485   00FF30  73                 	db	115	;'s'
   486   00FF31  61                 	db	97	;'a'
   487   00FF32  6B                 	db	107	;'k'
   488   00FF33  20                 	db	32
   489   00FF34  20                 	db	32
   490   00FF35  20                 	db	32
   491   00FF36  00                 	db	0
   492   00FF37                     STR_12:
   493   00FF37  4C                 	db	76	;'L'
   494   00FF38  61                 	db	97	;'a'
   495   00FF39  64                 	db	100	;'d'
   496   00FF3A  65                 	db	101	;'e'
   497   00FF3B  6E                 	db	110	;'n'
   498   00FF3C  69                 	db	105	;'i'
   499   00FF3D  20                 	db	32
   500   00FF3E  70                 	db	112	;'p'
   501   00FF3F  6F                 	db	111	;'o'
   502   00FF40  74                 	db	116	;'t'
   503   00FF41  61                 	db	97	;'a'
   504   00FF42  6B                 	db	107	;'k'
   505   00FF43  75                 	db	117	;'u'
   506   00FF44  20                 	db	32
   507   00FF45  20                 	db	32
   508   00FF46  20                 	db	32
   509   00FF47  00                 	db	0
   510   00FF48                     STR_7:
   511   00FF48  5A                 	db	90	;'Z'
   512   00FF49  6D                 	db	109	;'m'
   513   00FF4A  61                 	db	97	;'a'
   514   00FF4B  63                 	db	99	;'c'
   515   00FF4C  6B                 	db	107	;'k'
   516   00FF4D  6E                 	db	110	;'n'
   517   00FF4E  65                 	db	101	;'e'
   518   00FF4F  74                 	db	116	;'t'
   519   00FF50  65                 	db	101	;'e'
   520   00FF51  20                 	db	32
   521   00FF52  42                 	db	66	;'B'
   522   00FF53  54                 	db	84	;'T'
   523   00FF54  4E                 	db	78	;'N'
   524   00FF55  32                 	db	50	;'2'
   525   00FF56  20                 	db	32
   526   00FF57  20                 	db	32
   527   00FF58  00                 	db	0
   528   00FF59                     STR_17:
   529   00FF59  49                 	db	73	;'I'
   530   00FF5A  6D                 	db	109	;'m'
   531   00FF5B  70                 	db	112	;'p'
   532   00FF5C  6C                 	db	108	;'l'
   533   00FF5D  65                 	db	101	;'e'
   534   00FF5E  6D                 	db	109	;'m'
   535   00FF5F  65                 	db	101	;'e'
   536   00FF60  6E                 	db	110	;'n'
   537   00FF61  74                 	db	116	;'t'
   538   00FF62  6F                 	db	111	;'o'
   539   00FF63  76                 	db	118	;'v'
   540   00FF64  61                 	db	97	;'a'
   541   00FF65  6E                 	db	110	;'n'
   542   00FF66  6F                 	db	111	;'o'
   543   00FF67  20                 	db	32
   544   00FF68  20                 	db	32
   545   00FF69  00                 	db	0
   546   00FF6A                     STR_10:
   547   00FF6A  52                 	db	82	;'R'
   548   00FF6B  42                 	db	66	;'B'
   549   00FF6C  30                 	db	48	;'0'
   550   00FF6D  2D                 	db	45
   551   00FF6E  41                 	db	65	;'A'
   552   00FF6F  32                 	db	50	;'2'
   553   00FF70  2C                 	db	44
   554   00FF71  20                 	db	32
   555   00FF72  42                 	db	66	;'B'
   556   00FF73  52                 	db	82	;'R'
   557   00FF74  3A                 	db	58	;':'
   558   00FF75  31                 	db	49	;'1'
   559   00FF76  39                 	db	57	;'9'
   560   00FF77  32                 	db	50	;'2'
   561   00FF78  30                 	db	48	;'0'
   562   00FF79  30                 	db	48	;'0'
   563   00FF7A  00                 	db	0
   564   00FF7B                     STR_9:
   565   00FF7B  56                 	db	86	;'V'
   566   00FF7C  6F                 	db	111	;'o'
   567   00FF7D  6C                 	db	108	;'l'
   568   00FF7E  74                 	db	116	;'t'
   569   00FF7F  79                 	db	121	;'y'
   570   00FF80  20                 	db	32
   571   00FF81  6E                 	db	110	;'n'
   572   00FF82  61                 	db	97	;'a'
   573   00FF83  20                 	db	32
   574   00FF84  50                 	db	80	;'P'
   575   00FF85  4F                 	db	79	;'O'
   576   00FF86  54                 	db	84	;'T'
   577   00FF87  65                 	db	101	;'e'
   578   00FF88  63                 	db	99	;'c'
   579   00FF89  68                 	db	104	;'h'
   580   00FF8A  3A                 	db	58	;':'
   581   00FF8B  00                 	db	0
   582   00FF8C                     STR_6:
   583   00FF8C  4B                 	db	75	;'K'
   584   00FF8D  6F                 	db	111	;'o'
   585   00FF8E  6E                 	db	110	;'n'
   586   00FF8F  65                 	db	101	;'e'
   587   00FF90  63                 	db	99	;'c'
   588   00FF91  20                 	db	32
   589   00FF92  2D                 	db	45
   590   00FF93  20                 	db	32
   591   00FF94  6E                 	db	110	;'n'
   592   00FF95  65                 	db	101	;'e'
   593   00FF96  77                 	db	119	;'w'
   594   00FF97  20                 	db	32
   595   00FF98  6C                 	db	108	;'l'
   596   00FF99  69                 	db	105	;'i'
   597   00FF9A  6E                 	db	110	;'n'
   598   00FF9B  65                 	db	101	;'e'
   599   00FF9C  00                 	db	0
   600   00FF9D                     STR_11:
   601   00FF9D  31                 	db	49	;'1'
   602   00FF9E  3A                 	db	58	;':'
   603   00FF9F  74                 	db	116	;'t'
   604   00FFA0  72                 	db	114	;'r'
   605   00FFA1  2C                 	db	44
   606   00FFA2  32                 	db	50	;'2'
   607   00FFA3  3A                 	db	58	;':'
   608   00FFA4  73                 	db	115	;'s'
   609   00FFA5  69                 	db	105	;'i'
   610   00FFA6  6E                 	db	110	;'n'
   611   00FFA7  2C                 	db	44
   612   00FFA8  33                 	db	51	;'3'
   613   00FFA9  3A                 	db	58	;':'
   614   00FFAA  70                 	db	112	;'p'
   615   00FFAB  69                 	db	105	;'i'
   616   00FFAC  6C                 	db	108	;'l'
   617   00FFAD  00                 	db	0
   618   00FFAE                     STR_15:
   619   00FFAE  20                 	db	32
   620   00FFAF  20                 	db	32
   621   00FFB0  20                 	db	32
   622   00FFB1  20                 	db	32
   623   00FFB2  20                 	db	32
   624   00FFB3  20                 	db	32
   625   00FFB4  20                 	db	32
   626   00FFB5  20                 	db	32
   627   00FFB6  20                 	db	32
   628   00FFB7  20                 	db	32
   629   00FFB8  20                 	db	32
   630   00FFB9  50                 	db	80	;'P'
   631   00FFBA  6F                 	db	111	;'o'
   632   00FFBB  7A                 	db	122	;'z'
   633   00FFBC  6F                 	db	111	;'o'
   634   00FFBD  72                 	db	114	;'r'
   635   00FFBE  00                 	db	0
   636   00FFBF                     STR_42:
   637   00FFBF  28                 	db	40
   638   00FFC0  6E                 	db	110	;'n'
   639   00FFC1  75                 	db	117	;'u'
   640   00FFC2  6C                 	db	108	;'l'
   641   00FFC3  6C                 	db	108	;'l'
   642   00FFC4  29                 	db	41
   643   00FFC5  00                 	db	0
   644   00FFC6                     STR_25:
   645   00FFC6  4D                 	db	77	;'M'
   646   00FFC7  55                 	db	85	;'U'
   647   00FFC8  53                 	db	83	;'S'
   648   00FFC9  49                 	db	73	;'I'
   649   00FFCA  43                 	db	67	;'C'
   650   00FFCB  00                 	db	0
   651   00FFCC                     STR_27:
   652   00FFCC  3E                 	db	62	;'>'
   653   00FFCD  25                 	db	37
   654   00FFCE  2D                 	db	45
   655   00FFCF  2A                 	db	42
   656   00FFD0  73                 	db	115	;'s'
   657   00FFD1  00                 	db	0
   658   00FFD2                     STR_30:
   659   00FFD2  25                 	db	37
   660   00FFD3  73                 	db	115	;'s'
   661   00FFD4  20                 	db	32
   662   00FFD5  0A                 	db	10
   663   00FFD6  00                 	db	0
   664   00FFD7                     STR_24:
   665   00FFD7  47                 	db	71	;'G'
   666   00FFD8  41                 	db	65	;'A'
   667   00FFD9  4D                 	db	77	;'M'
   668   00FFDA  45                 	db	69	;'E'
   669   00FFDB  00                 	db	0
   670   00FFDC                     STR_19:
   671   00FFDC  47                 	db	71	;'G'
   672   00FFDD  50                 	db	80	;'P'
   673   00FFDE  49                 	db	73	;'I'
   674   00FFDF  4F                 	db	79	;'O'
   675   00FFE0  00                 	db	0
   676   00FFE1                     STR_20:
   677   00FFE1  55                 	db	85	;'U'
   678   00FFE2  41                 	db	65	;'A'
   679   00FFE3  52                 	db	82	;'R'
   680   00FFE4  54                 	db	84	;'T'
   681   00FFE5  00                 	db	0
   682   00FFE6                     STR_18:
   683   00FFE6  25                 	db	37
   684   00FFE7  64                 	db	100	;'d'
   685   00FFE8  20                 	db	32
   686   00FFE9  0D                 	db	13
   687   00FFEA  00                 	db	0
   688   00FFEB                     STR_36:
   689   00FFEB  69                 	db	105	;'i'
   690   00FFEC  6E                 	db	110	;'n'
   691   00FFED  66                 	db	102	;'f'
   692   00FFEE  00                 	db	0
   693   00FFEF                     STR_39:
   694   00FFEF  6E                 	db	110	;'n'
   695   00FFF0  61                 	db	97	;'a'
   696   00FFF1  6E                 	db	110	;'n'
   697   00FFF2  00                 	db	0
   698   00FFF3                     STR_23:
   699   00FFF3  44                 	db	68	;'D'
   700   00FFF4  41                 	db	65	;'A'
   701   00FFF5  43                 	db	67	;'C'
   702   00FFF6  00                 	db	0
   703   00FFF7                     STR_22:
   704   00FFF7  41                 	db	65	;'A'
   705   00FFF8  44                 	db	68	;'D'
   706   00FFF9  43                 	db	67	;'C'
   707   00FFFA  00                 	db	0
   708   00FFFB                     STR_21:
   709   00FFFB  50                 	db	80	;'P'
   710   00FFFC  57                 	db	87	;'W'
   711   00FFFD  4D                 	db	77	;'M'
   712   00FFFE  00                 	db	0
   713   00FFFF  00                 	db	0	; dummy byte at the end
   714   000000                     
   715                           ; #config settings
   716                           
   717                           	psect	cinit
   718   004EA8                     __pcinit:
   719                           	callstack 0
   720   004EA8                     start_initialization:
   721                           	callstack 0
   722   004EA8                     __initialization:
   723                           	callstack 0
   724                           
   725                           ; Initialize objects allocated to BANK1 (40 bytes)
   726                           ; load TBLPTR registers with __pidataBANK1
   727   004EA8  0EEC               	movlw	low __pidataBANK1
   728   004EAA  6EF6               	movwf	tblptrl,c
   729   004EAC  0E51               	movlw	high __pidataBANK1
   730   004EAE  6EF7               	movwf	tblptrh,c
   731   004EB0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   732   004EB2  6EF8               	movwf	tblptru,c
   733   004EB4  EE01  F0CE         	lfsr	0,__pdataBANK1
   734   004EB8  EE10 F028          	lfsr	1,40
   735   004EBC                     copy_data0:
   736   004EBC  0009               	tblrd		*+
   737   004EBE  CFF5 FFEE          	movff	tablat,postinc0
   738   004EC2  50E5               	movf	postdec1,w,c
   739   004EC4  50E1               	movf	fsr1l,w,c
   740   004EC6  E1FA               	bnz	copy_data0
   741                           
   742                           ; Clear objects allocated to BANK2 (42 bytes)
   743   004EC8  EE02  F000         	lfsr	0,__pbssBANK2
   744   004ECC  0E2A               	movlw	42
   745   004ECE                     clear_0:
   746   004ECE  6AEE               	clrf	postinc0,c
   747   004ED0  06E8               	decf	wreg,f,c
   748   004ED2  E1FD               	bnz	clear_0
   749                           
   750                           ; Clear objects allocated to BANK1 (155 bytes)
   751   004ED4  EE01  F000         	lfsr	0,__pbssBANK1
   752   004ED8  0E9B               	movlw	155
   753   004EDA                     clear_1:
   754   004EDA  6AEE               	clrf	postinc0,c
   755   004EDC  06E8               	decf	wreg,f,c
   756   004EDE  E1FD               	bnz	clear_1
   757                           
   758                           ; Clear objects allocated to BANK0 (1 bytes)
   759   004EE0  0100               	movlb	0
   760   004EE2  6BFE               	clrf	__pbssBANK0& (0+255),b
   761                           
   762                           ; Clear objects allocated to COMRAM (5 bytes)
   763   004EE4  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   764   004EE6  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   765   004EE8  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   766   004EEA  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   767   004EEC  6A55               	clrf	__pbssCOMRAM& (0+255),c
   768   004EEE                     end_of_initialization:
   769                           	callstack 0
   770   004EEE                     __end_of__initialization:
   771                           	callstack 0
   772   004EEE  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   773   004EF0  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   774   004EF2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   775   004EF4  6EF8               	movwf	tblptru,c
   776   004EF6  0100               	movlb	0
   777   004EF8  EFF8  F014         	goto	_main	;jump to C main() function
   778                           
   779                           	psect	bssCOMRAM
   780   000055                     __pbssCOMRAM:
   781                           	callstack 0
   782   000055                     _width:
   783                           	callstack 0
   784   000055                     	ds	2
   785   000057                     _prec:
   786                           	callstack 0
   787   000057                     	ds	2
   788   000059                     _flags:
   789                           	callstack 0
   790   000059                     	ds	1
   791                           
   792                           	psect	bssBANK0
   793   0000FE                     __pbssBANK0:
   794                           	callstack 0
   795   0000FE                     _keepStateGPIO:
   796                           	callstack 0
   797   0000FE                     	ds	1
   798                           
   799                           	psect	bssBANK1
   800   000100                     __pbssBANK1:
   801                           	callstack 0
   802   000100                     	ds	17
   803   000111                     fabsf@F465:
   804                           	callstack 0
   805   000111                     	ds	4
   806   000115                     ___rem_pio2f@F526:
   807                           	callstack 0
   808   000115                     	ds	4
   809   000119                     floorf@F521:
   810                           	callstack 0
   811   000119                     	ds	4
   812   00011D                     ___fpclassifyf@F465:
   813                           	callstack 0
   814   00011D                     	ds	4
   815   000121                     ISR@i:
   816                           	callstack 0
   817   000121                     	ds	2
   818   000123                     _GAMEtime:
   819                           	callstack 0
   820   000123                     	ds	1
   821   000124                     _GAMEIE:
   822                           	callstack 0
   823   000124                     	ds	1
   824   000125                     _UARTIE:
   825                           	callstack 0
   826   000125                     	ds	1
   827   000126                     _GPIOIE:
   828                           	callstack 0
   829   000126                     	ds	1
   830   000127                     _dbuf:
   831                           	callstack 0
   832   000127                     	ds	80
   833   000177                     _gmail:
   834                           	callstack 0
   835   000177                     	ds	32
   836   000197                     _seed:
   837                           	callstack 0
   838   000197                     	ds	4
   839                           
   840                           	psect	dataBANK1
   841   0001CE                     __pdataBANK1:
   842                           	callstack 0
   843   0001CE                     moveDisplay@F6965:
   844                           	callstack 0
   845   0001CE                     	ds	16
   846   0001DE                     runGPIO@F6993:
   847                           	callstack 0
   848   0001DE                     	ds	12
   849   0001EA                     runGPIO@F6975:
   850                           	callstack 0
   851   0001EA                     	ds	12
   852                           
   853                           	psect	bssBANK2
   854   000200                     __pbssBANK2:
   855                           	callstack 0
   856   000200                     	ds	25
   857   000219                     	ds	17
   858                           
   859                           	psect	cstackBANK1
   860   00019B                     __pcstackBANK1:
   861                           	callstack 0
   862   00019B                     moveDisplay@menuItem1:
   863                           	callstack 0
   864   00019B                     runADC@text:
   865                           	callstack 0
   866   00019B                     runGAME@text:
   867                           	callstack 0
   868                           
   869                           ; 17 bytes @ 0x0
   870   00019B                     	ds	17
   871   0001AC                     runADC@voltage1:
   872                           	callstack 0
   873   0001AC                     moveDisplay@menuItem2:
   874                           	callstack 0
   875   0001AC                     runGAME@approxText:
   876                           	callstack 0
   877                           
   878                           ; 25 bytes @ 0x11
   879   0001AC                     	ds	4
   880   0001B0                     runADC@voltage2:
   881                           	callstack 0
   882                           
   883                           ; 4 bytes @ 0x15
   884   0001B0                     	ds	4
   885   0001B4                     runADC@pot1:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x19
   889   0001B4                     	ds	2
   890   0001B6                     runADC@pot2:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x1B
   894   0001B6                     	ds	2
   895   0001B8                     runADC@keepState:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x1D
   899   0001B8                     	ds	5
   900   0001BD                     moveDisplay@menuItems:
   901                           	callstack 0
   902                           
   903                           ; 16 bytes @ 0x22
   904   0001BD                     	ds	8
   905   0001C5                     runGAME@keepStateGAME:
   906                           	callstack 0
   907                           
   908                           ; 1 bytes @ 0x2A
   909   0001C5                     	ds	1
   910   0001C6                     runGAME@GAMEpart:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0x2B
   914   0001C6                     	ds	1
   915   0001C7                     runGAME@GAMEround:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x2C
   919   0001C7                     	ds	1
   920   0001C8                     runGAME@GAMEdivider:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x2D
   924   0001C8                     	ds	1
   925   0001C9                     runGAME@pot1:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x2E
   929   0001C9                     	ds	2
   930   0001CB                     runGAME@randomNumber:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x30
   934   0001CB                     	ds	2
   935   0001CD                     moveDisplay@menuI:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x32
   939   0001CD                     	ds	1
   940                           
   941                           	psect	cstackBANK0
   942   000060                     __pcstackBANK0:
   943                           	callstack 0
   944   000060                     ___fladd@signs:
   945                           	callstack 0
   946   000060                     floorf@m:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x0
   950   000060                     	ds	1
   951   000061                     ___fladd@aexp:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0x1
   955   000061                     	ds	1
   956   000062                     ___fladd@bexp:
   957                           	callstack 0
   958                           
   959                           ; 1 bytes @ 0x2
   960   000062                     	ds	1
   961   000063                     ___fladd@grs:
   962                           	callstack 0
   963                           
   964                           ; 1 bytes @ 0x3
   965   000063                     	ds	1
   966   000064                     ?___flsub:
   967                           	callstack 0
   968   000064                     ?___sindf:
   969                           	callstack 0
   970   000064                     ?___cosdf:
   971                           	callstack 0
   972   000064                     ?___fltol:
   973                           	callstack 0
   974   000064                     floorf@e:
   975                           	callstack 0
   976   000064                     ___fltol@f1:
   977                           	callstack 0
   978   000064                     ___flsub@b:
   979                           	callstack 0
   980   000064                     ___cosdf@x:
   981                           	callstack 0
   982   000064                     ___sindf@x:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x4
   986   000064                     	ds	2
   987   000066                     floorf@u:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x6
   991   000066                     	ds	2
   992   000068                     ??___fltol:
   993   000068                     ___flsub@a:
   994                           	callstack 0
   995   000068                     ___cosdf@r:
   996                           	callstack 0
   997   000068                     ___sindf@r:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x8
  1001   000068                     	ds	4
  1002   00006C                     ___sindf@w:
  1003                           	callstack 0
  1004   00006C                     ___cosdf$4530:
  1005                           	callstack 0
  1006                           
  1007                           ; 4 bytes @ 0xC
  1008   00006C                     	ds	4
  1009   000070                     ___cosdf$4531:
  1010                           	callstack 0
  1011   000070                     ___sindf$4534:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x10
  1015   000070                     	ds	4
  1016   000074                     ___cosdf$4532:
  1017                           	callstack 0
  1018   000074                     ___sindf$4535:
  1019                           	callstack 0
  1020                           
  1021                           ; 4 bytes @ 0x14
  1022   000074                     	ds	4
  1023   000078                     ___cosdf@w:
  1024                           	callstack 0
  1025   000078                     ___sindf$4536:
  1026                           	callstack 0
  1027                           
  1028                           ; 4 bytes @ 0x18
  1029   000078                     	ds	4
  1030   00007C                     ___cosdf@z:
  1031                           	callstack 0
  1032   00007C                     ___sindf@s:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x1C
  1036   00007C                     	ds	4
  1037   000080                     ?___flneg:
  1038                           	callstack 0
  1039   000080                     ___flneg@f1:
  1040                           	callstack 0
  1041   000080                     ___sindf@z:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x20
  1045   000080                     	ds	4
  1046   000084                     ?___rem_pio2f:
  1047                           	callstack 0
  1048   000084                     efgtoa@fp:
  1049                           	callstack 0
  1050   000084                     ___rem_pio2f@x:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0x24
  1054   000084                     	ds	2
  1055   000086                     efgtoa@f:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0x26
  1059   000086                     	ds	2
  1060   000088                     ___rem_pio2f@y:
  1061                           	callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x28
  1064   000088                     	ds	1
  1065   000089                     ??___rem_pio2f:
  1066                           
  1067                           ; 1 bytes @ 0x29
  1068   000089                     	ds	1
  1069   00008A                     efgtoa@c:
  1070                           	callstack 0
  1071                           
  1072                           ; 1 bytes @ 0x2A
  1073   00008A                     	ds	1
  1074   00008B                     ??_efgtoa:
  1075   00008B                     ___rem_pio2f@ty:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x2B
  1079   00008B                     	ds	2
  1080   00008D                     efgtoa@ne:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x2D
  1084   00008D                     	ds	2
  1085   00008F                     efgtoa@p:
  1086                           	callstack 0
  1087   00008F                     ___rem_pio2f$4533:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0x2F
  1091   00008F                     	ds	2
  1092   000091                     efgtoa@t:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x31
  1096   000091                     	ds	2
  1097   000093                     ___rem_pio2f@sign:
  1098                           	callstack 0
  1099   000093                     _efgtoa$4070:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x33
  1103   000093                     	ds	1
  1104   000094                     ___rem_pio2f@ux:
  1105                           	callstack 0
  1106                           
  1107                           ; 4 bytes @ 0x34
  1108   000094                     	ds	1
  1109   000095                     efgtoa@pp:
  1110                           	callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x35
  1113   000095                     	ds	1
  1114   000096                     efgtoa@mode:
  1115                           	callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x36
  1118   000096                     	ds	1
  1119   000097                     efgtoa@nmode:
  1120                           	callstack 0
  1121                           
  1122                           ; 1 bytes @ 0x37
  1123   000097                     	ds	1
  1124   000098                     efgtoa@d:
  1125                           	callstack 0
  1126   000098                     ___rem_pio2f@fn:
  1127                           	callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x38
  1130   000098                     	ds	2
  1131   00009A                     efgtoa@m:
  1132                           	callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x3A
  1135   00009A                     	ds	2
  1136   00009C                     efgtoa@e:
  1137                           	callstack 0
  1138   00009C                     ___rem_pio2f@t:
  1139                           	callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x3C
  1142   00009C                     	ds	2
  1143   00009E                     efgtoa@w:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x3E
  1147   00009E                     	ds	2
  1148   0000A0                     efgtoa@ou:
  1149                           	callstack 0
  1150   0000A0                     ___rem_pio2f@n:
  1151                           	callstack 0
  1152                           
  1153                           ; 4 bytes @ 0x40
  1154   0000A0                     	ds	4
  1155   0000A4                     ?_sinf:
  1156                           	callstack 0
  1157   0000A4                     efgtoa@i:
  1158                           	callstack 0
  1159   0000A4                     sinf@x:
  1160                           	callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x44
  1163   0000A4                     	ds	2
  1164   0000A6                     efgtoa@h:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x46
  1168   0000A6                     	ds	2
  1169   0000A8                     _sinf$4245:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x48
  1173   0000A8                     	ds	2
  1174   0000AA                     efgtoa@l:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x4A
  1178   0000AA                     	ds	2
  1179   0000AC                     _sinf$4246:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x4C
  1183   0000AC                     	ds	2
  1184   0000AE                     efgtoa@sign:
  1185                           	callstack 0
  1186                           
  1187                           ; 1 bytes @ 0x4E
  1188   0000AE                     	ds	1
  1189   0000AF                     efgtoa@g:
  1190                           	callstack 0
  1191                           
  1192                           ; 4 bytes @ 0x4F
  1193   0000AF                     	ds	1
  1194   0000B0                     sinf@n:
  1195                           	callstack 0
  1196                           
  1197                           ; 1 bytes @ 0x50
  1198   0000B0                     	ds	1
  1199   0000B1                     sinf@sign:
  1200                           	callstack 0
  1201                           
  1202                           ; 1 bytes @ 0x51
  1203   0000B1                     	ds	1
  1204   0000B2                     _sinf$4529:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x52
  1208   0000B2                     	ds	1
  1209   0000B3                     efgtoa@n:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x53
  1213   0000B3                     	ds	2
  1214   0000B5                     efgtoa@u:
  1215                           	callstack 0
  1216                           
  1217                           ; 4 bytes @ 0x55
  1218   0000B5                     	ds	1
  1219   0000B6                     sinf@y:
  1220                           	callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x56
  1223   0000B6                     	ds	3
  1224   0000B9                     vfpfcnvrt@fp:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x59
  1228   0000B9                     	ds	1
  1229   0000BA                     sinf@ux:
  1230                           	callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x5A
  1233   0000BA                     	ds	1
  1234   0000BB                     vfpfcnvrt@fmt:
  1235                           	callstack 0
  1236                           
  1237                           ; 1 bytes @ 0x5B
  1238   0000BB                     	ds	1
  1239   0000BC                     vfpfcnvrt@ap:
  1240                           	callstack 0
  1241                           
  1242                           ; 1 bytes @ 0x5C
  1243   0000BC                     	ds	1
  1244   0000BD                     ??_vfpfcnvrt:
  1245                           
  1246                           ; 1 bytes @ 0x5D
  1247   0000BD                     	ds	2
  1248   0000BF                     vfpfcnvrt@done:
  1249                           	callstack 0
  1250                           
  1251                           ; 1 bytes @ 0x5F
  1252   0000BF                     	ds	1
  1253   0000C0                     vfpfcnvrt@convarg:
  1254                           	callstack 0
  1255                           
  1256                           ; 4 bytes @ 0x60
  1257   0000C0                     	ds	4
  1258   0000C4                     vfpfcnvrt@c:
  1259                           	callstack 0
  1260                           
  1261                           ; 1 bytes @ 0x64
  1262   0000C4                     	ds	1
  1263   0000C5                     vfpfcnvrt@cp:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x65
  1267   0000C5                     	ds	2
  1268   0000C7                     ?_vfprintf:
  1269                           	callstack 0
  1270   0000C7                     vfprintf@fp:
  1271                           	callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x67
  1274   0000C7                     	ds	2
  1275   0000C9                     vfprintf@fmt:
  1276                           	callstack 0
  1277                           
  1278                           ; 2 bytes @ 0x69
  1279   0000C9                     	ds	2
  1280   0000CB                     vfprintf@ap:
  1281                           	callstack 0
  1282                           
  1283                           ; 1 bytes @ 0x6B
  1284   0000CB                     	ds	1
  1285   0000CC                     vfprintf@cfmt:
  1286                           	callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x6C
  1289   0000CC                     	ds	2
  1290   0000CE                     ?_printf:
  1291                           	callstack 0
  1292   0000CE                     ?_sprintf:
  1293                           	callstack 0
  1294   0000CE                     sprintf@s:
  1295                           	callstack 0
  1296   0000CE                     printf@fmt:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x6E
  1300   0000CE                     	ds	2
  1301   0000D0                     sprintf@fmt:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x70
  1305   0000D0                     	ds	2
  1306   0000D2                     ??_runUART:
  1307   0000D2                     ??_runDAC:
  1308                           
  1309                           ; 1 bytes @ 0x72
  1310   0000D2                     	ds	1
  1311   0000D3                     _runDAC$4526:
  1312                           	callstack 0
  1313                           
  1314                           ; 4 bytes @ 0x73
  1315   0000D3                     	ds	1
  1316   0000D4                     runUART@reversed:
  1317                           	callstack 0
  1318                           
  1319                           ; 31 bytes @ 0x74
  1320   0000D4                     	ds	3
  1321   0000D7                     _runDAC$4527:
  1322                           	callstack 0
  1323                           
  1324                           ; 4 bytes @ 0x77
  1325   0000D7                     	ds	3
  1326   0000DA                     sprintf@ap:
  1327                           	callstack 0
  1328                           
  1329                           ; 1 bytes @ 0x7A
  1330   0000DA                     	ds	1
  1331   0000DB                     runDAC@keepState:
  1332                           	callstack 0
  1333   0000DB                     sprintf@f:
  1334                           	callstack 0
  1335                           
  1336                           ; 12 bytes @ 0x7B
  1337   0000DB                     	ds	1
  1338   0000DC                     runDAC@selectModeDAC:
  1339                           	callstack 0
  1340                           
  1341                           ; 1 bytes @ 0x7C
  1342   0000DC                     	ds	1
  1343   0000DD                     runDAC@DACindex:
  1344                           	callstack 0
  1345                           
  1346                           ; 1 bytes @ 0x7D
  1347   0000DD                     	ds	10
  1348   0000E7                     ??_runADC:
  1349   0000E7                     ??_runGAME:
  1350   0000E7                     moveDisplay@where:
  1351                           	callstack 0
  1352                           
  1353                           ; 1 bytes @ 0x87
  1354   0000E7                     	ds	1
  1355   0000E8                     ??_moveDisplay:
  1356                           
  1357                           ; 1 bytes @ 0x88
  1358   0000E8                     	ds	11
  1359   0000F3                     runUART@keepState:
  1360                           	callstack 0
  1361                           
  1362                           ; 1 bytes @ 0x93
  1363   0000F3                     	ds	1
  1364   0000F4                     runUART@len:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x94
  1368   0000F4                     	ds	2
  1369   0000F6                     runUART@i:
  1370                           	callstack 0
  1371                           
  1372                           ; 2 bytes @ 0x96
  1373   0000F6                     	ds	2
  1374   0000F8                     runUART@p:
  1375                           	callstack 0
  1376                           
  1377                           ; 2 bytes @ 0x98
  1378   0000F8                     	ds	2
  1379   0000FA                     ??_main:
  1380                           
  1381                           ; 1 bytes @ 0x9A
  1382   0000FA                     	ds	2
  1383   0000FC                     main@setUpAgain:
  1384                           	callstack 0
  1385                           
  1386                           ; 1 bytes @ 0x9C
  1387   0000FC                     	ds	1
  1388   0000FD                     main@menuI:
  1389                           	callstack 0
  1390                           
  1391                           ; 1 bytes @ 0x9D
  1392   0000FD                     	ds	1
  1393                           
  1394                           	psect	cstackCOMRAM
  1395   000001                     __pcstackCOMRAM:
  1396                           	callstack 0
  1397   000001                     ??_ISR:
  1398                           
  1399                           ; 1 bytes @ 0x0
  1400   000001                     	ds	4
  1401   000005                     ISR@temp:
  1402                           	callstack 0
  1403                           
  1404                           ; 1 bytes @ 0x4
  1405   000005                     	ds	1
  1406   000006                     ?_strlen:
  1407                           	callstack 0
  1408   000006                     ?___fpclassifyf:
  1409                           	callstack 0
  1410   000006                     ?___wmul:
  1411                           	callstack 0
  1412   000006                     ?___awmod:
  1413                           	callstack 0
  1414   000006                     ?___lwdiv:
  1415                           	callstack 0
  1416   000006                     ?___lwmod:
  1417                           	callstack 0
  1418   000006                     ?_labs:
  1419                           	callstack 0
  1420   000006                     ?_fabsf:
  1421                           	callstack 0
  1422   000006                     ?___lmul:
  1423                           	callstack 0
  1424   000006                     ?___xxtofl:
  1425                           	callstack 0
  1426   000006                     LCD_Send@data:
  1427                           	callstack 0
  1428   000006                     SPI_write@MSB:
  1429                           	callstack 0
  1430   000006                     putch@data:
  1431                           	callstack 0
  1432   000006                     LED1_Control@state:
  1433                           	callstack 0
  1434   000006                     LED2_Control@state:
  1435                           	callstack 0
  1436   000006                     LED3_Control@state:
  1437                           	callstack 0
  1438   000006                     LED4_Control@state:
  1439                           	callstack 0
  1440   000006                     LED5_Control@state:
  1441                           	callstack 0
  1442   000006                     LED6_Control@state:
  1443                           	callstack 0
  1444   000006                     ___lbdiv@divisor:
  1445                           	callstack 0
  1446   000006                     ___wmul@multiplier:
  1447                           	callstack 0
  1448   000006                     ___awmod@dividend:
  1449                           	callstack 0
  1450   000006                     ___lwdiv@dividend:
  1451                           	callstack 0
  1452   000006                     ___lwmod@dividend:
  1453                           	callstack 0
  1454   000006                     memcpy@d1:
  1455                           	callstack 0
  1456   000006                     strcpy@dest:
  1457                           	callstack 0
  1458   000006                     strlen@s:
  1459                           	callstack 0
  1460   000006                     ___lmul@multiplier:
  1461                           	callstack 0
  1462   000006                     ___fleq@ff1:
  1463                           	callstack 0
  1464   000006                     ___xxtofl@val:
  1465                           	callstack 0
  1466   000006                     ___fpclassifyf@x:
  1467                           	callstack 0
  1468   000006                     labs@a:
  1469                           	callstack 0
  1470   000006                     fabsf@x:
  1471                           	callstack 0
  1472                           
  1473                           ; 4 bytes @ 0x5
  1474   000006                     	ds	1
  1475   000007                     ??_LCD_Init:
  1476   000007                     ??_runGPIO:
  1477   000007                     SPI_write@LSB:
  1478                           	callstack 0
  1479   000007                     ___lbdiv@dividend:
  1480                           	callstack 0
  1481   000007                     LCD_ShowString@textData:
  1482                           	callstack 0
  1483   000007                     fputc@c:
  1484                           	callstack 0
  1485                           
  1486                           ; 2 bytes @ 0x6
  1487   000007                     	ds	1
  1488   000008                     SPI_write@data:
  1489                           	callstack 0
  1490   000008                     ___lbdiv@counter:
  1491                           	callstack 0
  1492   000008                     ___wmul@multiplicand:
  1493                           	callstack 0
  1494   000008                     ___awmod@divisor:
  1495                           	callstack 0
  1496   000008                     ___lwdiv@divisor:
  1497                           	callstack 0
  1498   000008                     ___lwmod@divisor:
  1499                           	callstack 0
  1500   000008                     memcpy@s1:
  1501                           	callstack 0
  1502   000008                     strcpy@src:
  1503                           	callstack 0
  1504   000008                     strlen@a:
  1505                           	callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x7
  1508   000008                     	ds	1
  1509   000009                     ??_LCD_ShowString:
  1510   000009                     ___lbdiv@quotient:
  1511                           	callstack 0
  1512   000009                     fputc@fp:
  1513                           	callstack 0
  1514   000009                     runGPIO@states:
  1515                           	callstack 0
  1516                           
  1517                           ; 12 bytes @ 0x8
  1518   000009                     	ds	1
  1519   00000A                     ??___fpclassifyf:
  1520   00000A                     ??_labs:
  1521   00000A                     ??___xxtofl:
  1522   00000A                     ___awmod@counter:
  1523                           	callstack 0
  1524   00000A                     ___lwdiv@counter:
  1525                           	callstack 0
  1526   00000A                     ___lwmod@counter:
  1527                           	callstack 0
  1528   00000A                     ___wmul@product:
  1529                           	callstack 0
  1530   00000A                     memcpy@n:
  1531                           	callstack 0
  1532   00000A                     strcpy@d:
  1533                           	callstack 0
  1534   00000A                     ___lmul@multiplicand:
  1535                           	callstack 0
  1536   00000A                     ___fleq@ff2:
  1537                           	callstack 0
  1538   00000A                     fabsf@u:
  1539                           	callstack 0
  1540                           
  1541                           ; 4 bytes @ 0x9
  1542   00000A                     	ds	1
  1543   00000B                     ??_fputc:
  1544   00000B                     LCD_ShowString@lineNum:
  1545                           	callstack 0
  1546   00000B                     ___awmod@sign:
  1547                           	callstack 0
  1548   00000B                     ___lwdiv@quotient:
  1549                           	callstack 0
  1550                           
  1551                           ; 2 bytes @ 0xA
  1552   00000B                     	ds	1
  1553   00000C                     ?_abs:
  1554                           	callstack 0
  1555   00000C                     ?_read_prec_or_width:
  1556                           	callstack 0
  1557   00000C                     LCD_ShowString@i:
  1558                           	callstack 0
  1559   00000C                     read_prec_or_width@fmt:
  1560                           	callstack 0
  1561   00000C                     memcpy@tmp:
  1562                           	callstack 0
  1563   00000C                     abs@a:
  1564                           	callstack 0
  1565                           
  1566                           ; 2 bytes @ 0xB
  1567   00000C                     	ds	1
  1568   00000D                     read_prec_or_width@ap:
  1569                           	callstack 0
  1570   00000D                     memcpy@d:
  1571                           	callstack 0
  1572                           
  1573                           ; 2 bytes @ 0xC
  1574   00000D                     	ds	1
  1575   00000E                     ??_abs:
  1576   00000E                     ??___fleq:
  1577   00000E                     ___xxtofl@sign:
  1578                           	callstack 0
  1579   00000E                     read_prec_or_width@c:
  1580                           	callstack 0
  1581   00000E                     ___fpclassifyf@e:
  1582                           	callstack 0
  1583   00000E                     ___lmul@product:
  1584                           	callstack 0
  1585                           
  1586                           ; 4 bytes @ 0xD
  1587   00000E                     	ds	1
  1588   00000F                     ___xxtofl@exp:
  1589                           	callstack 0
  1590   00000F                     read_prec_or_width@n:
  1591                           	callstack 0
  1592   00000F                     memcpy@s:
  1593                           	callstack 0
  1594                           
  1595                           ; 2 bytes @ 0xE
  1596   00000F                     	ds	1
  1597   000010                     stoa@fp:
  1598                           	callstack 0
  1599   000010                     fputs@s:
  1600                           	callstack 0
  1601   000010                     ___xxtofl@arg:
  1602                           	callstack 0
  1603   000010                     ___fpclassifyf@u:
  1604                           	callstack 0
  1605                           
  1606                           ; 4 bytes @ 0xF
  1607   000010                     	ds	2
  1608   000012                     ?_rand:
  1609                           	callstack 0
  1610   000012                     stoa@s:
  1611                           	callstack 0
  1612   000012                     fputs@fp:
  1613                           	callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x11
  1616   000012                     	ds	2
  1617   000014                     ??_rand:
  1618   000014                     ??_stoa:
  1619   000014                     ?___flmul:
  1620                           	callstack 0
  1621   000014                     fputs@c:
  1622                           	callstack 0
  1623   000014                     ___flmul@b:
  1624                           	callstack 0
  1625                           
  1626                           ; 4 bytes @ 0x13
  1627   000014                     	ds	1
  1628   000015                     fputs@i:
  1629                           	callstack 0
  1630   000015                     runGPIO@LEDControl:
  1631                           	callstack 0
  1632                           
  1633                           ; 12 bytes @ 0x14
  1634   000015                     	ds	1
  1635   000016                     stoa@p:
  1636                           	callstack 0
  1637                           
  1638                           ; 2 bytes @ 0x15
  1639   000016                     	ds	1
  1640   000017                     pad@fp:
  1641                           	callstack 0
  1642                           
  1643                           ; 2 bytes @ 0x16
  1644   000017                     	ds	1
  1645   000018                     ?___awdiv:
  1646                           	callstack 0
  1647   000018                     ___awdiv@dividend:
  1648                           	callstack 0
  1649   000018                     stoa@w:
  1650                           	callstack 0
  1651   000018                     ___flmul@a:
  1652                           	callstack 0
  1653                           
  1654                           ; 4 bytes @ 0x17
  1655   000018                     	ds	1
  1656   000019                     pad@buf:
  1657                           	callstack 0
  1658                           
  1659                           ; 2 bytes @ 0x18
  1660   000019                     	ds	1
  1661   00001A                     ___awdiv@divisor:
  1662                           	callstack 0
  1663   00001A                     stoa@cp:
  1664                           	callstack 0
  1665                           
  1666                           ; 2 bytes @ 0x19
  1667   00001A                     	ds	1
  1668   00001B                     pad@p:
  1669                           	callstack 0
  1670                           
  1671                           ; 2 bytes @ 0x1A
  1672   00001B                     	ds	1
  1673   00001C                     ??___flmul:
  1674   00001C                     ___awdiv@counter:
  1675                           	callstack 0
  1676   00001C                     stoa@l:
  1677                           	callstack 0
  1678                           
  1679                           ; 2 bytes @ 0x1B
  1680   00001C                     	ds	1
  1681   00001D                     ??_pad:
  1682   00001D                     ___awdiv@sign:
  1683                           	callstack 0
  1684                           
  1685                           ; 1 bytes @ 0x1C
  1686   00001D                     	ds	1
  1687   00001E                     ___awdiv@quotient:
  1688                           	callstack 0
  1689   00001E                     pad@i:
  1690                           	callstack 0
  1691                           
  1692                           ; 2 bytes @ 0x1D
  1693   00001E                     	ds	2
  1694   000020                     ??_runPWM:
  1695   000020                     ___flmul@sign:
  1696                           	callstack 0
  1697   000020                     dtoa@fp:
  1698                           	callstack 0
  1699   000020                     utoa@fp:
  1700                           	callstack 0
  1701                           
  1702                           ; 2 bytes @ 0x1F
  1703   000020                     	ds	1
  1704   000021                     ___flmul@aexp:
  1705                           	callstack 0
  1706   000021                     runGPIO@numberOfStates:
  1707                           	callstack 0
  1708                           
  1709                           ; 2 bytes @ 0x20
  1710   000021                     	ds	1
  1711   000022                     runPWM@keepState:
  1712                           	callstack 0
  1713   000022                     dtoa@d:
  1714                           	callstack 0
  1715   000022                     utoa@d:
  1716                           	callstack 0
  1717   000022                     ___flmul@grs:
  1718                           	callstack 0
  1719                           
  1720                           ; 4 bytes @ 0x21
  1721   000022                     	ds	1
  1722   000023                     runGPIO@GPIOi:
  1723                           	callstack 0
  1724   000023                     runPWM@multiplier:
  1725                           	callstack 0
  1726                           
  1727                           ; 1 bytes @ 0x22
  1728   000023                     	ds	1
  1729   000024                     runGPIO@j:
  1730                           	callstack 0
  1731   000024                     _dtoa$4039:
  1732                           	callstack 0
  1733   000024                     utoa@w:
  1734                           	callstack 0
  1735                           
  1736                           ; 2 bytes @ 0x23
  1737   000024                     	ds	2
  1738   000026                     ___flmul@bexp:
  1739                           	callstack 0
  1740   000026                     dtoa@w:
  1741                           	callstack 0
  1742   000026                     utoa@p:
  1743                           	callstack 0
  1744                           
  1745                           ; 2 bytes @ 0x25
  1746   000026                     	ds	1
  1747   000027                     ___flmul@prod:
  1748                           	callstack 0
  1749                           
  1750                           ; 4 bytes @ 0x26
  1751   000027                     	ds	1
  1752   000028                     dtoa@p:
  1753                           	callstack 0
  1754   000028                     utoa@i:
  1755                           	callstack 0
  1756                           
  1757                           ; 2 bytes @ 0x27
  1758   000028                     	ds	2
  1759   00002A                     dtoa@s:
  1760                           	callstack 0
  1761                           
  1762                           ; 1 bytes @ 0x29
  1763   00002A                     	ds	1
  1764   00002B                     ___flmul@temp:
  1765                           	callstack 0
  1766   00002B                     dtoa@i:
  1767                           	callstack 0
  1768                           
  1769                           ; 2 bytes @ 0x2A
  1770   00002B                     	ds	2
  1771   00002D                     ?___fldiv:
  1772                           	callstack 0
  1773   00002D                     ___flge@ff1:
  1774                           	callstack 0
  1775   00002D                     ___fldiv@b:
  1776                           	callstack 0
  1777                           
  1778                           ; 4 bytes @ 0x2C
  1779   00002D                     	ds	4
  1780   000031                     ___flge@ff2:
  1781                           	callstack 0
  1782   000031                     ___fldiv@a:
  1783                           	callstack 0
  1784                           
  1785                           ; 4 bytes @ 0x30
  1786   000031                     	ds	4
  1787   000035                     ??___fldiv:
  1788   000035                     ??___flge:
  1789                           
  1790                           ; 1 bytes @ 0x34
  1791   000035                     	ds	4
  1792   000039                     ___fldiv@rem:
  1793                           	callstack 0
  1794                           
  1795                           ; 4 bytes @ 0x38
  1796   000039                     	ds	4
  1797   00003D                     ___fldiv@sign:
  1798                           	callstack 0
  1799                           
  1800                           ; 1 bytes @ 0x3C
  1801   00003D                     	ds	1
  1802   00003E                     ___fldiv@new_exp:
  1803                           	callstack 0
  1804                           
  1805                           ; 2 bytes @ 0x3D
  1806   00003E                     	ds	2
  1807   000040                     ___fldiv@grs:
  1808                           	callstack 0
  1809                           
  1810                           ; 4 bytes @ 0x3F
  1811   000040                     	ds	4
  1812   000044                     ___fldiv@bexp:
  1813                           	callstack 0
  1814                           
  1815                           ; 1 bytes @ 0x43
  1816   000044                     	ds	1
  1817   000045                     ___fldiv@aexp:
  1818                           	callstack 0
  1819                           
  1820                           ; 1 bytes @ 0x44
  1821   000045                     	ds	1
  1822   000046                     ?___fladd:
  1823                           	callstack 0
  1824   000046                     ?_floorf:
  1825                           	callstack 0
  1826   000046                     ___fladd@b:
  1827                           	callstack 0
  1828   000046                     floorf@x:
  1829                           	callstack 0
  1830                           
  1831                           ; 4 bytes @ 0x45
  1832   000046                     	ds	4
  1833   00004A                     ??_floorf:
  1834   00004A                     ___fladd@a:
  1835                           	callstack 0
  1836                           
  1837                           ; 4 bytes @ 0x49
  1838   00004A                     	ds	4
  1839   00004E                     ??___fladd:
  1840                           
  1841                           ; 1 bytes @ 0x4D
  1842   00004E                     	ds	4
  1843   000052                     ___fltol@sign1:
  1844                           	callstack 0
  1845                           
  1846                           ; 1 bytes @ 0x51
  1847   000052                     	ds	1
  1848   000053                     ___fltol@exp1:
  1849                           	callstack 0
  1850                           
  1851                           ; 1 bytes @ 0x52
  1852   000053                     	ds	1
  1853   000054                     printf@ap:
  1854                           	callstack 0
  1855                           
  1856                           ; 1 bytes @ 0x53
  1857   000054                     	ds	1
  1858                           
  1859 ;;
  1860 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1861 ;;
  1862 ;; *************** function _main *****************
  1863 ;; Defined at:
  1864 ;;		line 10 in file "main.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  menuI           1  157[BANK0 ] unsigned char 
  1869 ;;  setUpAgain      1  156[BANK0 ] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1883 ;;Total ram usage:        4 bytes
  1884 ;; Hardware stack levels required when called: 10
  1885 ;; This function calls:
  1886 ;;		_LCD_Init
  1887 ;;		_LCD_ShowString
  1888 ;;		_moveDisplay
  1889 ;;		_runADC
  1890 ;;		_runDAC
  1891 ;;		_runGAME
  1892 ;;		_runGPIO
  1893 ;;		_runMUSIC
  1894 ;;		_runPWM
  1895 ;;		_runUART
  1896 ;; This function is called by:
  1897 ;;		Startup code after reset
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text0
  1902   0029F0                     __ptext0:
  1903                           	callstack 0
  1904   0029F0                     _main:
  1905                           	callstack 21
  1906   0029F0                     
  1907                           ;main.c: 11:     _delay((unsigned long)((100)*(32E6/4000.0)));
  1908   0029F0  0E05               	movlw	5
  1909   0029F2  0100               	movlb	0	; () banked
  1910   0029F4  6FFB               	movwf	(??_main+1)& (0+255),b
  1911   0029F6  0E0F               	movlw	15
  1912   0029F8  6FFA               	movwf	??_main& (0+255),b
  1913   0029FA  0EF1               	movlw	241
  1914   0029FC                     u10357:
  1915   0029FC  2EE8               	decfsz	wreg,f,c
  1916   0029FE  D7FE               	bra	u10357
  1917   002A00  2FFA               	decfsz	??_main& (0+255),f,b
  1918   002A02  D7FC               	bra	u10357
  1919   002A04  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1920   002A06  D7FA               	bra	u10357
  1921   002A08                     
  1922                           ;main.c: 13:     TRISCbits.RC0 = 1;
  1923   002A08  8094               	bsf	148,0,c	;volatile
  1924   002A0A                     
  1925                           ;main.c: 14:     TRISAbits.RA4 = 1;
  1926   002A0A  8892               	bsf	146,4,c	;volatile
  1927   002A0C                     
  1928                           ;main.c: 15:     TRISAbits.RA3 = 1;
  1929   002A0C  8692               	bsf	146,3,c	;volatile
  1930   002A0E                     
  1931                           ;main.c: 16:     TRISAbits.RA2 = 1;
  1932   002A0E  8492               	bsf	146,2,c	;volatile
  1933   002A10                     
  1934                           ;main.c: 17:     ANSELAbits.ANSA3 = 0;
  1935   002A10  010F               	movlb	15	; () banked
  1936   002A12  9738               	bcf	56,3,b	;volatile
  1937   002A14                     
  1938                           ; BSR set to: 15
  1939                           ;main.c: 18:     ANSELAbits.ANSA2 = 0;
  1940   002A14  9538               	bcf	56,2,b	;volatile
  1941   002A16                     
  1942                           ; BSR set to: 15
  1943                           ;main.c: 21:     TRISDbits.RD2 = 0;
  1944   002A16  9495               	bcf	149,2,c	;volatile
  1945   002A18                     
  1946                           ; BSR set to: 15
  1947                           ;main.c: 22:     TRISDbits.RD3 = 0;
  1948   002A18  9695               	bcf	149,3,c	;volatile
  1949   002A1A                     
  1950                           ; BSR set to: 15
  1951                           ;main.c: 23:     TRISCbits.RC4 = 0;
  1952   002A1A  9894               	bcf	148,4,c	;volatile
  1953   002A1C                     
  1954                           ; BSR set to: 15
  1955                           ;main.c: 24:     TRISDbits.RD4 = 0;
  1956   002A1C  9895               	bcf	149,4,c	;volatile
  1957   002A1E                     
  1958                           ; BSR set to: 15
  1959                           ;main.c: 25:     TRISDbits.RD5 = 0;
  1960   002A1E  9A95               	bcf	149,5,c	;volatile
  1961   002A20                     
  1962                           ; BSR set to: 15
  1963                           ;main.c: 26:     TRISDbits.RD6 = 0;
  1964   002A20  9C95               	bcf	149,6,c	;volatile
  1965   002A22                     
  1966                           ; BSR set to: 15
  1967                           ;main.c: 27:     LATDbits.LD2 = 1;
  1968   002A22  848C               	bsf	140,2,c	;volatile
  1969   002A24                     
  1970                           ; BSR set to: 15
  1971                           ;main.c: 28:     LATDbits.LD3 = 1;
  1972   002A24  868C               	bsf	140,3,c	;volatile
  1973   002A26                     
  1974                           ; BSR set to: 15
  1975                           ;main.c: 29:     LATCbits.LC4 = 1;
  1976   002A26  888B               	bsf	139,4,c	;volatile
  1977   002A28                     
  1978                           ; BSR set to: 15
  1979                           ;main.c: 30:     LATDbits.LD4 = 1;
  1980   002A28  888C               	bsf	140,4,c	;volatile
  1981   002A2A                     
  1982                           ; BSR set to: 15
  1983                           ;main.c: 31:     LATDbits.LD5 = 1;
  1984   002A2A  8A8C               	bsf	140,5,c	;volatile
  1985   002A2C                     
  1986                           ; BSR set to: 15
  1987                           ;main.c: 32:     LATDbits.LD6 = 1;
  1988   002A2C  8C8C               	bsf	140,6,c	;volatile
  1989   002A2E                     
  1990                           ; BSR set to: 15
  1991                           ;main.c: 35:     LCD_Init();
  1992   002A2E  EC43  F023         	call	_LCD_Init	;wreg free
  1993   002A32                     
  1994                           ;main.c: 36:     uint8_t menuI = 0;
  1995   002A32  0E00               	movlw	0
  1996   002A34  0100               	movlb	0	; () banked
  1997   002A36  6FFD               	movwf	main@menuI& (0+255),b
  1998   002A38                     
  1999                           ; BSR set to: 0
  2000                           ;main.c: 37:     uint8_t setUpAgain = 0;
  2001   002A38  0E00               	movlw	0
  2002   002A3A  6FFC               	movwf	main@setUpAgain& (0+255),b
  2003   002A3C                     
  2004                           ; BSR set to: 0
  2005                           ;main.c: 39:     LCD_ShowString((char)1, "Vytvoril:       ");
  2006   002A3C  0EF3               	movlw	low STR_1
  2007   002A3E  6E07               	movwf	LCD_ShowString@textData^0,c
  2008   002A40  0EFE               	movlw	high STR_1
  2009   002A42  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2010   002A44  0E01               	movlw	1
  2011   002A46  EC77  F024         	call	_LCD_ShowString
  2012   002A4A                     
  2013                           ;main.c: 40:     LCD_ShowString((char)2, "David Strasak   ");
  2014   002A4A  0E26               	movlw	low STR_2
  2015   002A4C  6E07               	movwf	LCD_ShowString@textData^0,c
  2016   002A4E  0EFF               	movlw	high STR_2
  2017   002A50  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2018   002A52  0E02               	movlw	2
  2019   002A54  EC77  F024         	call	_LCD_ShowString
  2020   002A58                     
  2021                           ;main.c: 41:     _delay((unsigned long)((2000)*(32E6/4000.0)));
  2022   002A58  0E52               	movlw	82
  2023   002A5A  0100               	movlb	0	; () banked
  2024   002A5C  6FFB               	movwf	(??_main+1)& (0+255),b
  2025   002A5E  0E2B               	movlw	43
  2026   002A60  6FFA               	movwf	??_main& (0+255),b
  2027   002A62  0E00               	movlw	0
  2028   002A64                     u10367:
  2029   002A64  2EE8               	decfsz	wreg,f,c
  2030   002A66  D7FE               	bra	u10367
  2031   002A68  2FFA               	decfsz	??_main& (0+255),f,b
  2032   002A6A  D7FC               	bra	u10367
  2033   002A6C  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2034   002A6E  D7FA               	bra	u10367
  2035   002A70  0000               	nop	
  2036   002A72                     
  2037                           ;main.c: 44:     menuI = moveDisplay(menuI,0);
  2038   002A72  0E00               	movlw	0
  2039   002A74  0100               	movlb	0	; () banked
  2040   002A76  6FE7               	movwf	moveDisplay@where& (0+255),b
  2041   002A78  51FD               	movf	main@menuI& (0+255),w,b
  2042   002A7A  ECBD  F020         	call	_moveDisplay
  2043   002A7E  0100               	movlb	0	; () banked
  2044   002A80  6FFD               	movwf	main@menuI& (0+255),b
  2045   002A82                     l8428:
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;main.c: 47:         if(PORTCbits.RC0){
  2049   002A82  A082               	btfss	130,0,c	;volatile
  2050   002A84  EF46  F015         	goto	u10251
  2051   002A88  EF48  F015         	goto	u10250
  2052   002A8C                     u10251:
  2053   002A8C  EF6A  F015         	goto	l56
  2054   002A90                     u10250:
  2055   002A90                     
  2056                           ; BSR set to: 0
  2057                           ;main.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2058   002A90  0E03               	movlw	3
  2059   002A92  0100               	movlb	0	; () banked
  2060   002A94  6FFB               	movwf	(??_main+1)& (0+255),b
  2061   002A96  0E08               	movlw	8
  2062   002A98  6FFA               	movwf	??_main& (0+255),b
  2063   002A9A  0E77               	movlw	119
  2064   002A9C                     u10377:
  2065   002A9C  2EE8               	decfsz	wreg,f,c
  2066   002A9E  D7FE               	bra	u10377
  2067   002AA0  2FFA               	decfsz	??_main& (0+255),f,b
  2068   002AA2  D7FC               	bra	u10377
  2069   002AA4  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2070   002AA6  D7FA               	bra	u10377
  2071   002AA8                     
  2072                           ;main.c: 49:             if(PORTCbits.RC0){
  2073   002AA8  A082               	btfss	130,0,c	;volatile
  2074   002AAA  EF59  F015         	goto	u10261
  2075   002AAE  EF5B  F015         	goto	u10260
  2076   002AB2                     u10261:
  2077   002AB2  EF6A  F015         	goto	l56
  2078   002AB6                     u10260:
  2079   002AB6                     
  2080                           ;main.c: 50:                 menuI = moveDisplay(menuI,2);
  2081   002AB6  0E02               	movlw	2
  2082   002AB8  0100               	movlb	0	; () banked
  2083   002ABA  6FE7               	movwf	moveDisplay@where& (0+255),b
  2084   002ABC  51FD               	movf	main@menuI& (0+255),w,b
  2085   002ABE  ECBD  F020         	call	_moveDisplay
  2086   002AC2  0100               	movlb	0	; () banked
  2087   002AC4  6FFD               	movwf	main@menuI& (0+255),b
  2088   002AC6                     l58:
  2089   002AC6  B082               	btfsc	130,0,c	;volatile
  2090   002AC8  EF68  F015         	goto	u10271
  2091   002ACC  EF6A  F015         	goto	u10270
  2092   002AD0                     u10271:
  2093   002AD0  EF63  F015         	goto	l58
  2094   002AD4                     u10270:
  2095   002AD4                     l56:
  2096                           
  2097                           ;main.c: 54:         if(PORTAbits.RA4){
  2098   002AD4  A880               	btfss	128,4,c	;volatile
  2099   002AD6  EF6F  F015         	goto	u10281
  2100   002ADA  EF71  F015         	goto	u10280
  2101   002ADE                     u10281:
  2102   002ADE  EF93  F015         	goto	l61
  2103   002AE2                     u10280:
  2104   002AE2                     
  2105                           ;main.c: 55:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2106   002AE2  0E03               	movlw	3
  2107   002AE4  0100               	movlb	0	; () banked
  2108   002AE6  6FFB               	movwf	(??_main+1)& (0+255),b
  2109   002AE8  0E08               	movlw	8
  2110   002AEA  6FFA               	movwf	??_main& (0+255),b
  2111   002AEC  0E77               	movlw	119
  2112   002AEE                     u10387:
  2113   002AEE  2EE8               	decfsz	wreg,f,c
  2114   002AF0  D7FE               	bra	u10387
  2115   002AF2  2FFA               	decfsz	??_main& (0+255),f,b
  2116   002AF4  D7FC               	bra	u10387
  2117   002AF6  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2118   002AF8  D7FA               	bra	u10387
  2119   002AFA                     
  2120                           ;main.c: 56:             if(PORTAbits.RA4){
  2121   002AFA  A880               	btfss	128,4,c	;volatile
  2122   002AFC  EF82  F015         	goto	u10291
  2123   002B00  EF84  F015         	goto	u10290
  2124   002B04                     u10291:
  2125   002B04  EF93  F015         	goto	l61
  2126   002B08                     u10290:
  2127   002B08                     
  2128                           ;main.c: 57:                 menuI = moveDisplay(menuI,1);
  2129   002B08  0E01               	movlw	1
  2130   002B0A  0100               	movlb	0	; () banked
  2131   002B0C  6FE7               	movwf	moveDisplay@where& (0+255),b
  2132   002B0E  51FD               	movf	main@menuI& (0+255),w,b
  2133   002B10  ECBD  F020         	call	_moveDisplay
  2134   002B14  0100               	movlb	0	; () banked
  2135   002B16  6FFD               	movwf	main@menuI& (0+255),b
  2136   002B18                     l63:
  2137   002B18  B880               	btfsc	128,4,c	;volatile
  2138   002B1A  EF91  F015         	goto	u10301
  2139   002B1E  EF93  F015         	goto	u10300
  2140   002B22                     u10301:
  2141   002B22  EF8C  F015         	goto	l63
  2142   002B26                     u10300:
  2143   002B26                     l61:
  2144                           
  2145                           ;main.c: 61:         if(PORTAbits.RA3){
  2146   002B26  A680               	btfss	128,3,c	;volatile
  2147   002B28  EF98  F015         	goto	u10311
  2148   002B2C  EF9A  F015         	goto	u10310
  2149   002B30                     u10311:
  2150   002B30  EF90  F016         	goto	l66
  2151   002B34                     u10310:
  2152   002B34                     
  2153                           ;main.c: 62:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2154   002B34  0E03               	movlw	3
  2155   002B36  0100               	movlb	0	; () banked
  2156   002B38  6FFB               	movwf	(??_main+1)& (0+255),b
  2157   002B3A  0E08               	movlw	8
  2158   002B3C  6FFA               	movwf	??_main& (0+255),b
  2159   002B3E  0E77               	movlw	119
  2160   002B40                     u10397:
  2161   002B40  2EE8               	decfsz	wreg,f,c
  2162   002B42  D7FE               	bra	u10397
  2163   002B44  2FFA               	decfsz	??_main& (0+255),f,b
  2164   002B46  D7FC               	bra	u10397
  2165   002B48  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2166   002B4A  D7FA               	bra	u10397
  2167   002B4C                     
  2168                           ;main.c: 63:             if(PORTAbits.RA3){
  2169   002B4C  A680               	btfss	128,3,c	;volatile
  2170   002B4E  EFAB  F015         	goto	u10321
  2171   002B52  EFAD  F015         	goto	u10320
  2172   002B56                     u10321:
  2173   002B56  EF90  F016         	goto	l66
  2174   002B5A                     u10320:
  2175   002B5A                     l68:
  2176   002B5A  B680               	btfsc	128,3,c	;volatile
  2177   002B5C  EFB2  F015         	goto	u10331
  2178   002B60  EFB4  F015         	goto	u10330
  2179   002B64                     u10331:
  2180   002B64  EFAD  F015         	goto	l68
  2181   002B68                     u10330:
  2182   002B68  EF70  F016         	goto	l8502
  2183   002B6C                     l8448:
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;main.c: 67:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  2187   002B6C  0E15               	movlw	low STR_3
  2188   002B6E  6E07               	movwf	LCD_ShowString@textData^0,c
  2189   002B70  0EFF               	movlw	high STR_3
  2190   002B72  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2191   002B74  0E01               	movlw	1
  2192   002B76  EC77  F024         	call	_LCD_ShowString
  2193                           
  2194                           ;main.c: 68:                         LCD_ShowString((char)2, "                ");
  2195   002B7A  0E79               	movlw	low (STR_31+2)
  2196   002B7C  6E07               	movwf	LCD_ShowString@textData^0,c
  2197   002B7E  0EFE               	movlw	high (STR_31+2)
  2198   002B80  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2199   002B82  0E02               	movlw	2
  2200   002B84  EC77  F024         	call	_LCD_ShowString
  2201   002B88                     
  2202                           ;main.c: 69:                         runGPIO();
  2203   002B88  EC64  F01F         	call	_runGPIO	;wreg free
  2204   002B8C                     l8452:
  2205                           
  2206                           ;main.c: 70:                         setUpAgain = 1;
  2207   002B8C  0E01               	movlw	1
  2208   002B8E  0100               	movlb	0	; () banked
  2209   002B90  6FFC               	movwf	main@setUpAgain& (0+255),b
  2210                           
  2211                           ;main.c: 71:                         break;
  2212   002B92  EF90  F016         	goto	l66
  2213   002B96                     l8454:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;main.c: 73:                         LCD_ShowString((char)1, "BR: 19200       ");
  2217   002B96  0EE2               	movlw	low STR_5
  2218   002B98  6E07               	movwf	LCD_ShowString@textData^0,c
  2219   002B9A  0EFE               	movlw	high STR_5
  2220   002B9C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2221   002B9E  0E01               	movlw	1
  2222   002BA0  EC77  F024         	call	_LCD_ShowString
  2223                           
  2224                           ;main.c: 74:                         LCD_ShowString((char)2, "Konec - new line");
  2225   002BA4  0E8C               	movlw	low STR_6
  2226   002BA6  6E07               	movwf	LCD_ShowString@textData^0,c
  2227   002BA8  0EFF               	movlw	high STR_6
  2228   002BAA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2229   002BAC  0E02               	movlw	2
  2230   002BAE  EC77  F024         	call	_LCD_ShowString
  2231   002BB2                     
  2232                           ;main.c: 75:                         runUART();
  2233   002BB2  ECAE  F01E         	call	_runUART	;wreg free
  2234   002BB6  EFC6  F015         	goto	l8452
  2235   002BBA                     l8460:
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;main.c: 79:                         LCD_ShowString((char)1, "Zmacknete BTN2  ");
  2239   002BBA  0E48               	movlw	low STR_7
  2240   002BBC  6E07               	movwf	LCD_ShowString@textData^0,c
  2241   002BBE  0EFF               	movlw	high STR_7
  2242   002BC0  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2243   002BC2  0E01               	movlw	1
  2244   002BC4  EC77  F024         	call	_LCD_ShowString
  2245                           
  2246                           ;main.c: 80:                         LCD_ShowString((char)2, "                ");
  2247   002BC8  0E79               	movlw	low (STR_31+2)
  2248   002BCA  6E07               	movwf	LCD_ShowString@textData^0,c
  2249   002BCC  0EFE               	movlw	high (STR_31+2)
  2250   002BCE  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2251   002BD0  0E02               	movlw	2
  2252   002BD2  EC77  F024         	call	_LCD_ShowString
  2253   002BD6                     
  2254                           ;main.c: 81:                         runPWM();
  2255   002BD6  EC1A  F020         	call	_runPWM	;wreg free
  2256   002BDA  EFC6  F015         	goto	l8452
  2257   002BDE                     l8466:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;main.c: 85:                         LCD_ShowString((char)1, "Volty na POTech:");
  2261   002BDE  0E7B               	movlw	low STR_9
  2262   002BE0  6E07               	movwf	LCD_ShowString@textData^0,c
  2263   002BE2  0EFF               	movlw	high STR_9
  2264   002BE4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2265   002BE6  0E01               	movlw	1
  2266   002BE8  EC77  F024         	call	_LCD_ShowString
  2267   002BEC                     
  2268                           ;main.c: 86:                         runADC();
  2269   002BEC  EC3F  F01A         	call	_runADC	;wreg free
  2270   002BF0  EFC6  F015         	goto	l8452
  2271   002BF4                     l8472:
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;main.c: 90:                         LCD_ShowString((char)1, "RB0-A2, BR:19200");
  2275   002BF4  0E6A               	movlw	low STR_10
  2276   002BF6  6E07               	movwf	LCD_ShowString@textData^0,c
  2277   002BF8  0EFF               	movlw	high STR_10
  2278   002BFA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2279   002BFC  0E01               	movlw	1
  2280   002BFE  EC77  F024         	call	_LCD_ShowString
  2281                           
  2282                           ;main.c: 91:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  2283   002C02  0E9D               	movlw	low STR_11
  2284   002C04  6E07               	movwf	LCD_ShowString@textData^0,c
  2285   002C06  0EFF               	movlw	high STR_11
  2286   002C08  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2287   002C0A  0E02               	movlw	2
  2288   002C0C  EC77  F024         	call	_LCD_ShowString
  2289   002C10                     
  2290                           ;main.c: 92:                         runDAC();
  2291   002C10  ECA7  F016         	call	_runDAC	;wreg free
  2292   002C14  EFC6  F015         	goto	l8452
  2293   002C18                     l8478:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;main.c: 96:                         LCD_ShowString((char)1, "Ladeni potaku   ");
  2297   002C18  0E37               	movlw	low STR_12
  2298   002C1A  6E07               	movwf	LCD_ShowString@textData^0,c
  2299   002C1C  0EFF               	movlw	high STR_12
  2300   002C1E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2301   002C20  0E01               	movlw	1
  2302   002C22  EC77  F024         	call	_LCD_ShowString
  2303                           
  2304                           ;main.c: 97:                         LCD_ShowString((char)2, "                ");
  2305   002C26  0E79               	movlw	low (STR_31+2)
  2306   002C28  6E07               	movwf	LCD_ShowString@textData^0,c
  2307   002C2A  0EFE               	movlw	high (STR_31+2)
  2308   002C2C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2309   002C2E  0E02               	movlw	2
  2310   002C30  EC77  F024         	call	_LCD_ShowString
  2311   002C34                     
  2312                           ;main.c: 98:                         _delay((unsigned long)((1000)*(32E6/4000.0)));
  2313   002C34  0E29               	movlw	41
  2314   002C36  0100               	movlb	0	; () banked
  2315   002C38  6FFB               	movwf	(??_main+1)& (0+255),b
  2316   002C3A  0E96               	movlw	150
  2317   002C3C  6FFA               	movwf	??_main& (0+255),b
  2318   002C3E  0E7F               	movlw	127
  2319   002C40                     u10407:
  2320   002C40  2EE8               	decfsz	wreg,f,c
  2321   002C42  D7FE               	bra	u10407
  2322   002C44  2FFA               	decfsz	??_main& (0+255),f,b
  2323   002C46  D7FC               	bra	u10407
  2324   002C48  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2325   002C4A  D7FA               	bra	u10407
  2326   002C4C                     
  2327                           ;main.c: 99:                         LCD_ShowString((char)1, "Pripravit       ");
  2328   002C4C  0E04               	movlw	low STR_14
  2329   002C4E  6E07               	movwf	LCD_ShowString@textData^0,c
  2330   002C50  0EFF               	movlw	high STR_14
  2331   002C52  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2332   002C54  0E01               	movlw	1
  2333   002C56  EC77  F024         	call	_LCD_ShowString
  2334                           
  2335                           ;main.c: 100:                         _delay((unsigned long)((1000)*(32E6/4000.0)));
  2336   002C5A  0E29               	movlw	41
  2337   002C5C  0100               	movlb	0	; () banked
  2338   002C5E  6FFB               	movwf	(??_main+1)& (0+255),b
  2339   002C60  0E96               	movlw	150
  2340   002C62  6FFA               	movwf	??_main& (0+255),b
  2341   002C64  0E7F               	movlw	127
  2342   002C66                     u10417:
  2343   002C66  2EE8               	decfsz	wreg,f,c
  2344   002C68  D7FE               	bra	u10417
  2345   002C6A  2FFA               	decfsz	??_main& (0+255),f,b
  2346   002C6C  D7FC               	bra	u10417
  2347   002C6E  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2348   002C70  D7FA               	bra	u10417
  2349   002C72                     
  2350                           ;main.c: 101:                         LCD_ShowString((char)2, "           Pozor");
  2351   002C72  0EAE               	movlw	low STR_15
  2352   002C74  6E07               	movwf	LCD_ShowString@textData^0,c
  2353   002C76  0EFF               	movlw	high STR_15
  2354   002C78  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2355   002C7A  0E02               	movlw	2
  2356   002C7C  EC77  F024         	call	_LCD_ShowString
  2357   002C80                     
  2358                           ;main.c: 102:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2359   002C80  0E52               	movlw	82
  2360   002C82  0100               	movlb	0	; () banked
  2361   002C84  6FFB               	movwf	(??_main+1)& (0+255),b
  2362   002C86  0E2B               	movlw	43
  2363   002C88  6FFA               	movwf	??_main& (0+255),b
  2364   002C8A  0E00               	movlw	0
  2365   002C8C                     u10427:
  2366   002C8C  2EE8               	decfsz	wreg,f,c
  2367   002C8E  D7FE               	bra	u10427
  2368   002C90  2FFA               	decfsz	??_main& (0+255),f,b
  2369   002C92  D7FC               	bra	u10427
  2370   002C94  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2371   002C96  D7FA               	bra	u10427
  2372   002C98  0000               	nop	
  2373   002C9A                     
  2374                           ;main.c: 103:                         runGAME();
  2375   002C9A  EC4F  F00F         	call	_runGAME	;wreg free
  2376   002C9E  EFC6  F015         	goto	l8452
  2377   002CA2                     l8492:
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;main.c: 107:                         LCD_ShowString((char)1, "Nebylo          ");
  2381   002CA2  0ED1               	movlw	low STR_16
  2382   002CA4  6E07               	movwf	LCD_ShowString@textData^0,c
  2383   002CA6  0EFE               	movlw	high STR_16
  2384   002CA8  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2385   002CAA  0E01               	movlw	1
  2386   002CAC  EC77  F024         	call	_LCD_ShowString
  2387                           
  2388                           ;main.c: 108:                         LCD_ShowString((char)2, "Implementovano  ");
  2389   002CB0  0E59               	movlw	low STR_17
  2390   002CB2  6E07               	movwf	LCD_ShowString@textData^0,c
  2391   002CB4  0EFF               	movlw	high STR_17
  2392   002CB6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2393   002CB8  0E02               	movlw	2
  2394   002CBA  EC77  F024         	call	_LCD_ShowString
  2395   002CBE                     
  2396                           ;main.c: 109:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2397   002CBE  0E52               	movlw	82
  2398   002CC0  0100               	movlb	0	; () banked
  2399   002CC2  6FFB               	movwf	(??_main+1)& (0+255),b
  2400   002CC4  0E2B               	movlw	43
  2401   002CC6  6FFA               	movwf	??_main& (0+255),b
  2402   002CC8  0E00               	movlw	0
  2403   002CCA                     u10437:
  2404   002CCA  2EE8               	decfsz	wreg,f,c
  2405   002CCC  D7FE               	bra	u10437
  2406   002CCE  2FFA               	decfsz	??_main& (0+255),f,b
  2407   002CD0  D7FC               	bra	u10437
  2408   002CD2  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2409   002CD4  D7FA               	bra	u10437
  2410   002CD6  0000               	nop	
  2411   002CD8                     
  2412                           ;main.c: 110:                         runMUSIC();
  2413   002CD8  EC75  F029         	call	_runMUSIC	;wreg free
  2414   002CDC  EFC6  F015         	goto	l8452
  2415   002CE0                     l8502:
  2416   002CE0  0100               	movlb	0	; () banked
  2417   002CE2  51FD               	movf	main@menuI& (0+255),w,b
  2418                           
  2419                           ; Switch size 1, requested type "simple"
  2420                           ; Number of cases is 7, Range of values is 0 to 6
  2421                           ; switch strategies available:
  2422                           ; Name         Instructions Cycles
  2423                           ; simple_byte           22    12 (average)
  2424                           ;	Chosen strategy is simple_byte
  2425   002CE4  0A00               	xorlw	0	; case 0
  2426   002CE6  B4D8               	btfsc	status,2,c
  2427   002CE8  EFB6  F015         	goto	l8448
  2428   002CEC  0A01               	xorlw	1	; case 1
  2429   002CEE  B4D8               	btfsc	status,2,c
  2430   002CF0  EFCB  F015         	goto	l8454
  2431   002CF4  0A03               	xorlw	3	; case 2
  2432   002CF6  B4D8               	btfsc	status,2,c
  2433   002CF8  EFDD  F015         	goto	l8460
  2434   002CFC  0A01               	xorlw	1	; case 3
  2435   002CFE  B4D8               	btfsc	status,2,c
  2436   002D00  EFEF  F015         	goto	l8466
  2437   002D04  0A07               	xorlw	7	; case 4
  2438   002D06  B4D8               	btfsc	status,2,c
  2439   002D08  EFFA  F015         	goto	l8472
  2440   002D0C  0A01               	xorlw	1	; case 5
  2441   002D0E  B4D8               	btfsc	status,2,c
  2442   002D10  EF0C  F016         	goto	l8478
  2443   002D14  0A03               	xorlw	3	; case 6
  2444   002D16  B4D8               	btfsc	status,2,c
  2445   002D18  EF51  F016         	goto	l8492
  2446   002D1C  EF90  F016         	goto	l66
  2447   002D20                     l66:
  2448                           
  2449                           ;main.c: 117:         if(PORTAbits.RA2){
  2450   002D20  5080               	movf	128,w,c	;volatile
  2451   002D22                     
  2452                           ;main.c: 121:         if(setUpAgain){
  2453   002D22  0100               	movlb	0	; () banked
  2454   002D24  51FC               	movf	main@setUpAgain& (0+255),w,b
  2455   002D26  B4D8               	btfsc	status,2,c
  2456   002D28  EF98  F016         	goto	u10341
  2457   002D2C  EF9A  F016         	goto	u10340
  2458   002D30                     u10341:
  2459   002D30  EF41  F015         	goto	l8428
  2460   002D34                     u10340:
  2461   002D34                     
  2462                           ; BSR set to: 0
  2463                           ;main.c: 122:         menuI = moveDisplay(menuI,0);
  2464   002D34  0E00               	movlw	0
  2465   002D36  6FE7               	movwf	moveDisplay@where& (0+255),b
  2466   002D38  51FD               	movf	main@menuI& (0+255),w,b
  2467   002D3A  ECBD  F020         	call	_moveDisplay
  2468   002D3E  0100               	movlb	0	; () banked
  2469   002D40  6FFD               	movwf	main@menuI& (0+255),b
  2470   002D42                     
  2471                           ; BSR set to: 0
  2472                           ;main.c: 123:         setUpAgain = 0;
  2473   002D42  0E00               	movlw	0
  2474   002D44  6FFC               	movwf	main@setUpAgain& (0+255),b
  2475   002D46  EF41  F015         	goto	l8428
  2476   002D4A  EFA7  F000         	goto	start
  2477   002D4E                     __end_of_main:
  2478                           	callstack 0
  2479                           
  2480 ;; *************** function _runUART *****************
  2481 ;; Defined at:
  2482 ;;		line 4 in file "UART.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  p               2  152[BANK0 ] int 
  2487 ;;  i               2  150[BANK0 ] unsigned int 
  2488 ;;  reversed       31  116[BANK0 ] unsigned char [31]
  2489 ;;  len             2  148[BANK0 ] unsigned int 
  2490 ;;  keepState       1  147[BANK0 ] unsigned char 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      void 
  2493 ;; Registers used:
  2494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;Total ram usage:       40 bytes
  2505 ;; Hardware stack levels used: 1
  2506 ;; Hardware stack levels required when called: 9
  2507 ;; This function calls:
  2508 ;;		_printf
  2509 ;;		_strlen
  2510 ;; This function is called by:
  2511 ;;		_main
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text1
  2516   003D5C                     __ptext1:
  2517                           	callstack 0
  2518   003D5C                     _runUART:
  2519                           	callstack 21
  2520   003D5C                     
  2521                           ;UART.c: 6:     TRISAbits.RA2 = 1;
  2522   003D5C  8492               	bsf	146,2,c	;volatile
  2523                           
  2524                           ;UART.c: 8:     ANSELCbits.ANSC6 = 0;
  2525   003D5E  010F               	movlb	15	; () banked
  2526   003D60  9D3A               	bcf	58,6,b	;volatile
  2527                           
  2528                           ;UART.c: 9:     ANSELCbits.ANSC7 = 0;
  2529   003D62  9F3A               	bcf	58,7,b	;volatile
  2530                           
  2531                           ;UART.c: 10:     TRISCbits.TRISC6 = 1;
  2532   003D64  8C94               	bsf	148,6,c	;volatile
  2533                           
  2534                           ;UART.c: 11:     TRISCbits.TRISC7 = 1;
  2535   003D66  8E94               	bsf	148,7,c	;volatile
  2536   003D68                     
  2537                           ; BSR set to: 15
  2538                           ;UART.c: 14:     SPBRG1 = 25;
  2539   003D68  0E19               	movlw	25
  2540   003D6A  6EAF               	movwf	175,c	;volatile
  2541   003D6C                     
  2542                           ; BSR set to: 15
  2543                           ;UART.c: 16:     TXSTA1bits.SYNC = 0;
  2544   003D6C  98AC               	bcf	172,4,c	;volatile
  2545   003D6E                     
  2546                           ; BSR set to: 15
  2547                           ;UART.c: 17:     RCSTA1bits.SPEN = 1;
  2548   003D6E  8EAB               	bsf	171,7,c	;volatile
  2549   003D70                     
  2550                           ; BSR set to: 15
  2551                           ;UART.c: 18:     TXSTA1bits.TXEN = 1;
  2552   003D70  8AAC               	bsf	172,5,c	;volatile
  2553   003D72                     
  2554                           ; BSR set to: 15
  2555                           ;UART.c: 19:     RCSTA1bits.CREN = 1;
  2556   003D72  88AB               	bsf	171,4,c	;volatile
  2557                           
  2558                           ;UART.c: 21:     UARTIE = 1;
  2559   003D74  0E01               	movlw	1
  2560   003D76  0101               	movlb	1	; () banked
  2561   003D78  6F25               	movwf	_UARTIE& (0+255),b
  2562   003D7A                     
  2563                           ; BSR set to: 1
  2564                           ;UART.c: 22:     RC1IE = 1;
  2565   003D7A  8A9D               	bsf	3997,5,c	;volatile
  2566   003D7C                     
  2567                           ; BSR set to: 1
  2568                           ;UART.c: 23:     PEIE = 1;
  2569   003D7C  8CF2               	bsf	4082,6,c	;volatile
  2570   003D7E                     
  2571                           ; BSR set to: 1
  2572                           ;UART.c: 24:     GIE = 1;
  2573   003D7E  8EF2               	bsf	4082,7,c	;volatile
  2574                           
  2575                           ;UART.c: 26:     uint8_t keepState = 1;
  2576   003D80  0E01               	movlw	1
  2577   003D82  0100               	movlb	0	; () banked
  2578   003D84  6FF3               	movwf	runUART@keepState& (0+255),b
  2579                           
  2580                           ;UART.c: 28:     while(keepState){
  2581   003D86  EF51  F01F         	goto	l579
  2582   003D8A                     l8054:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;UART.c: 29:         if(gmail.full){
  2586   003D8A  0101               	movlb	1	; () banked
  2587   003D8C  5196               	movf	(_gmail+31)& (0+255),w,b	;volatile
  2588   003D8E  B4D8               	btfsc	status,2,c
  2589   003D90  EFCC  F01E         	goto	u9841
  2590   003D94  EFCE  F01E         	goto	u9840
  2591   003D98                     u9841:
  2592   003D98  EF2D  F01F         	goto	l581
  2593   003D9C                     u9840:
  2594   003D9C                     
  2595                           ; BSR set to: 1
  2596                           ;UART.c: 30:             char reversed[31];;UART.c: 31:             size_t len = strlen(
      +                          (const char*)gmail.data);
  2597   003D9C  0E77               	movlw	low _gmail
  2598   003D9E  6E06               	movwf	strlen@s^0,c
  2599   003DA0  0E01               	movlw	high _gmail
  2600   003DA2  6E07               	movwf	(strlen@s+1)^0,c
  2601   003DA4  EC8C  F028         	call	_strlen	;wreg free
  2602   003DA8  C006  F0F4         	movff	?_strlen,runUART@len
  2603   003DAC  C007  F0F5         	movff	?_strlen+1,runUART@len+1
  2604   003DB0                     
  2605                           ;UART.c: 33:             for(size_t i = 0; i < len; i++) {
  2606   003DB0  0E00               	movlw	0
  2607   003DB2  0100               	movlb	0	; () banked
  2608   003DB4  6FF7               	movwf	(runUART@i+1)& (0+255),b
  2609   003DB6  0E00               	movlw	0
  2610   003DB8  6FF6               	movwf	runUART@i& (0+255),b
  2611   003DBA  EFF5  F01E         	goto	l8064
  2612   003DBE                     l8060:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;UART.c: 34:                 reversed[i] = gmail.data[len - 1 - i];
  2616   003DBE  0E76               	movlw	low (_gmail+65535)
  2617   003DC0  6FD2               	movwf	??_runUART& (0+255),b
  2618   003DC2  0E01               	movlw	high (_gmail+65535)
  2619   003DC4  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2620   003DC6  51F6               	movf	runUART@i& (0+255),w,b
  2621   003DC8  5FD2               	subwf	??_runUART& (0+255),f,b
  2622   003DCA  51F7               	movf	(runUART@i+1)& (0+255),w,b
  2623   003DCC  5BD3               	subwfb	(??_runUART+1)& (0+255),f,b
  2624   003DCE  51F4               	movf	runUART@len& (0+255),w,b
  2625   003DD0  25D2               	addwf	??_runUART& (0+255),w,b
  2626   003DD2  6ED9               	movwf	fsr2l,c
  2627   003DD4  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2628   003DD6  21D3               	addwfc	(??_runUART+1)& (0+255),w,b
  2629   003DD8  6EDA               	movwf	fsr2h,c
  2630   003DDA  51F6               	movf	runUART@i& (0+255),w,b
  2631   003DDC  0FD4               	addlw	low runUART@reversed
  2632   003DDE  6EE1               	movwf	fsr1l,c
  2633   003DE0  6AE2               	clrf	fsr1h,c
  2634   003DE2  CFDF FFE7          	movff	indf2,indf1
  2635   003DE6                     
  2636                           ; BSR set to: 0
  2637                           ;UART.c: 35:             }
  2638   003DE6  4BF6               	infsnz	runUART@i& (0+255),f,b
  2639   003DE8  2BF7               	incf	(runUART@i+1)& (0+255),f,b
  2640   003DEA                     l8064:
  2641                           
  2642                           ; BSR set to: 0
  2643   003DEA  51F4               	movf	runUART@len& (0+255),w,b
  2644   003DEC  5DF6               	subwf	runUART@i& (0+255),w,b
  2645   003DEE  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2646   003DF0  59F7               	subwfb	(runUART@i+1)& (0+255),w,b
  2647   003DF2  A0D8               	btfss	status,0,c
  2648   003DF4  EFFE  F01E         	goto	u9851
  2649   003DF8  EF00  F01F         	goto	u9850
  2650   003DFC                     u9851:
  2651   003DFC  EFDF  F01E         	goto	l8060
  2652   003E00                     u9850:
  2653   003E00                     
  2654                           ; BSR set to: 0
  2655                           ;UART.c: 36:             reversed[len] = '\0';
  2656   003E00  51F4               	movf	runUART@len& (0+255),w,b
  2657   003E02  0FD4               	addlw	low runUART@reversed
  2658   003E04  6ED9               	movwf	fsr2l,c
  2659   003E06  6ADA               	clrf	fsr2h,c
  2660   003E08  6ADF               	clrf	indf2,c
  2661   003E0A                     
  2662                           ; BSR set to: 0
  2663                           ;UART.c: 37:             printf("%s \n", reversed);
  2664   003E0A  0ED2               	movlw	low STR_30
  2665   003E0C  6FCE               	movwf	printf@fmt& (0+255),b
  2666   003E0E  0EFF               	movlw	high STR_30
  2667   003E10  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  2668   003E12  0ED4               	movlw	low runUART@reversed
  2669   003E14  6FD0               	movwf	(?_printf+2)& (0+255),b
  2670   003E16  6BD1               	clrf	(?_printf+3)& (0+255),b
  2671   003E18  EC30  F029         	call	_printf	;wreg free
  2672   003E1C                     
  2673                           ;UART.c: 39:             gmail.full = 0;
  2674   003E1C  0E00               	movlw	0
  2675   003E1E  0101               	movlb	1	; () banked
  2676   003E20  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
  2677   003E22                     
  2678                           ; BSR set to: 1
  2679                           ;UART.c: 41:             for(int p = 0; p < 31; p++) {
  2680   003E22  0E00               	movlw	0
  2681   003E24  0100               	movlb	0	; () banked
  2682   003E26  6FF9               	movwf	(runUART@p+1)& (0+255),b
  2683   003E28  0E00               	movlw	0
  2684   003E2A  6FF8               	movwf	runUART@p& (0+255),b
  2685   003E2C                     l8078:
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;UART.c: 42:                 gmail.data[p] = '\0';
  2689   003E2C  0E77               	movlw	low _gmail
  2690   003E2E  25F8               	addwf	runUART@p& (0+255),w,b
  2691   003E30  6ED9               	movwf	fsr2l,c
  2692   003E32  0E01               	movlw	high _gmail
  2693   003E34  21F9               	addwfc	(runUART@p+1)& (0+255),w,b
  2694   003E36  6EDA               	movwf	fsr2h,c
  2695   003E38  6ADF               	clrf	indf2,c
  2696   003E3A                     
  2697                           ; BSR set to: 0
  2698                           ;UART.c: 43:             }
  2699   003E3A  4BF8               	infsnz	runUART@p& (0+255),f,b
  2700   003E3C  2BF9               	incf	(runUART@p+1)& (0+255),f,b
  2701   003E3E                     
  2702                           ; BSR set to: 0
  2703   003E3E  BFF9               	btfsc	(runUART@p+1)& (0+255),7,b
  2704   003E40  EF2B  F01F         	goto	u9861
  2705   003E44  51F9               	movf	(runUART@p+1)& (0+255),w,b
  2706   003E46  E109               	bnz	u9860
  2707   003E48  0E1F               	movlw	31
  2708   003E4A  5DF8               	subwf	runUART@p& (0+255),w,b
  2709   003E4C  A0D8               	btfss	status,0,c
  2710   003E4E  EF2B  F01F         	goto	u9861
  2711   003E52  EF2D  F01F         	goto	u9860
  2712   003E56                     u9861:
  2713   003E56  EF16  F01F         	goto	l8078
  2714   003E5A                     u9860:
  2715   003E5A                     l581:
  2716                           
  2717                           ;UART.c: 47:         if(PORTAbits.RA2){
  2718   003E5A  A480               	btfss	128,2,c	;volatile
  2719   003E5C  EF32  F01F         	goto	u9871
  2720   003E60  EF34  F01F         	goto	u9870
  2721   003E64                     u9871:
  2722   003E64  EF51  F01F         	goto	l579
  2723   003E68                     u9870:
  2724   003E68                     
  2725                           ;UART.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2726   003E68  0E03               	movlw	3
  2727   003E6A  0100               	movlb	0	; () banked
  2728   003E6C  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2729   003E6E  0E08               	movlw	8
  2730   003E70  6FD2               	movwf	??_runUART& (0+255),b
  2731   003E72  0E77               	movlw	119
  2732   003E74                     u10447:
  2733   003E74  2EE8               	decfsz	wreg,f,c
  2734   003E76  D7FE               	bra	u10447
  2735   003E78  2FD2               	decfsz	??_runUART& (0+255),f,b
  2736   003E7A  D7FC               	bra	u10447
  2737   003E7C  2FD3               	decfsz	(??_runUART+1)& (0+255),f,b
  2738   003E7E  D7FA               	bra	u10447
  2739   003E80                     
  2740                           ;UART.c: 49:             if(PORTAbits.RA2){
  2741   003E80  A480               	btfss	128,2,c	;volatile
  2742   003E82  EF45  F01F         	goto	u9881
  2743   003E86  EF47  F01F         	goto	u9880
  2744   003E8A                     u9881:
  2745   003E8A  EF51  F01F         	goto	l579
  2746   003E8E                     u9880:
  2747   003E8E                     l589:
  2748   003E8E  B480               	btfsc	128,2,c	;volatile
  2749   003E90  EF4C  F01F         	goto	u9891
  2750   003E94  EF4E  F01F         	goto	u9890
  2751   003E98                     u9891:
  2752   003E98  EF47  F01F         	goto	l589
  2753   003E9C                     u9890:
  2754   003E9C                     
  2755                           ;UART.c: 51:                 keepState = 0;
  2756   003E9C  0E00               	movlw	0
  2757   003E9E  0100               	movlb	0	; () banked
  2758   003EA0  6FF3               	movwf	runUART@keepState& (0+255),b
  2759   003EA2                     l579:
  2760                           
  2761                           ;UART.c: 28:     while(keepState){
  2762   003EA2  0100               	movlb	0	; () banked
  2763   003EA4  51F3               	movf	runUART@keepState& (0+255),w,b
  2764   003EA6  A4D8               	btfss	status,2,c
  2765   003EA8  EF58  F01F         	goto	u9901
  2766   003EAC  EF5A  F01F         	goto	u9900
  2767   003EB0                     u9901:
  2768   003EB0  EFC5  F01E         	goto	l8054
  2769   003EB4                     u9900:
  2770   003EB4                     
  2771                           ; BSR set to: 0
  2772                           ;UART.c: 58:     RCSTA1bits.SPEN = 0;
  2773   003EB4  9EAB               	bcf	171,7,c	;volatile
  2774                           
  2775                           ;UART.c: 59:     TXSTA1bits.TXEN = 0;
  2776   003EB6  9AAC               	bcf	172,5,c	;volatile
  2777                           
  2778                           ;UART.c: 60:     RCSTA1bits.CREN = 0;
  2779   003EB8  98AB               	bcf	171,4,c	;volatile
  2780   003EBA                     
  2781                           ; BSR set to: 0
  2782                           ;UART.c: 61:     UARTIE = 0;
  2783   003EBA  0E00               	movlw	0
  2784   003EBC  0101               	movlb	1	; () banked
  2785   003EBE  6F25               	movwf	_UARTIE& (0+255),b
  2786   003EC0                     
  2787                           ; BSR set to: 1
  2788                           ;UART.c: 62:     RC1IE = 0;
  2789   003EC0  9A9D               	bcf	3997,5,c	;volatile
  2790   003EC2                     
  2791                           ; BSR set to: 1
  2792                           ;UART.c: 63:     PEIE = 0;
  2793   003EC2  9CF2               	bcf	4082,6,c	;volatile
  2794   003EC4                     
  2795                           ; BSR set to: 1
  2796                           ;UART.c: 64:     GIE = 0;
  2797   003EC4  9EF2               	bcf	4082,7,c	;volatile
  2798   003EC6                     
  2799                           ; BSR set to: 1
  2800   003EC6  0012               	return		;funcret
  2801   003EC8                     __end_of_runUART:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _strlen *****************
  2805 ;; Defined at:
  2806 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strlen.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  s               2    5[COMRAM] PTR const unsigned char 
  2809 ;;		 -> gmail$data(31), gmail(32), 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  a               2    7[COMRAM] PTR const unsigned char 
  2812 ;;		 -> gmail$data(31), gmail(32), 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  2    5[COMRAM] unsigned int 
  2815 ;; Registers used:
  2816 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;Total ram usage:        4 bytes
  2827 ;; Hardware stack levels used: 1
  2828 ;; Hardware stack levels required when called: 1
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_runUART
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text2
  2837   005118                     __ptext2:
  2838                           	callstack 0
  2839   005118                     _strlen:
  2840                           	callstack 28
  2841   005118  C006  F008         	movff	strlen@s,strlen@a
  2842   00511C  C007  F009         	movff	strlen@s+1,strlen@a+1
  2843   005120  EF94  F028         	goto	l7916
  2844   005124                     l7914:
  2845   005124  4A06               	infsnz	strlen@s^0,f,c
  2846   005126  2A07               	incf	(strlen@s+1)^0,f,c
  2847   005128                     l7916:
  2848   005128  C006  FFD9         	movff	strlen@s,fsr2l
  2849   00512C  C007  FFDA         	movff	strlen@s+1,fsr2h
  2850   005130  50DF               	movf	indf2,w,c
  2851   005132  A4D8               	btfss	status,2,c
  2852   005134  EF9E  F028         	goto	u9651
  2853   005138  EFA0  F028         	goto	u9650
  2854   00513C                     u9651:
  2855   00513C  EF92  F028         	goto	l7914
  2856   005140                     u9650:
  2857   005140  5008               	movf	strlen@a^0,w,c
  2858   005142  5C06               	subwf	strlen@s^0,w,c
  2859   005144  6E06               	movwf	?_strlen^0,c
  2860   005146  5009               	movf	(strlen@a+1)^0,w,c
  2861   005148  5807               	subwfb	(strlen@s+1)^0,w,c
  2862   00514A  6E07               	movwf	(?_strlen+1)^0,c
  2863   00514C  0012               	return		;funcret
  2864   00514E                     __end_of_strlen:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function _runPWM *****************
  2868 ;; Defined at:
  2869 ;;		line 11 in file "PWM.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  multiplier      1   34[COMRAM] unsigned char 
  2874 ;;  keepState       1   33[COMRAM] unsigned char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;Total ram usage:        4 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; Hardware stack levels required when called: 2
  2891 ;; This function calls:
  2892 ;;		___awdiv
  2893 ;; This function is called by:
  2894 ;;		_main
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text3
  2899   004034                     __ptext3:
  2900                           	callstack 0
  2901   004034                     _runPWM:
  2902                           	callstack 28
  2903   004034                     
  2904                           ;PWM.c: 13:     TRISCbits.RC2 = 1;
  2905   004034  8494               	bsf	148,2,c	;volatile
  2906   004036                     
  2907                           ;PWM.c: 14:     CCPTMRS0bits.C1TSEL = 0b00;
  2908   004036  0EFC               	movlw	-4
  2909   004038  010F               	movlb	15	; () banked
  2910   00403A  1749               	andwf	73,f,b	;volatile
  2911                           
  2912                           ;PWM.c: 15:     PR2 = 199;
  2913   00403C  0EC7               	movlw	199
  2914   00403E  6EBB               	movwf	187,c	;volatile
  2915                           
  2916                           ;PWM.c: 16:     CCP1CONbits.CCP1M |= 0b1100;
  2917   004040  0E0C               	movlw	12
  2918   004042  12BD               	iorwf	189,f,c	;volatile
  2919                           
  2920                           ;PWM.c: 17:     CCP1CONbits.P1M = 0b10;
  2921   004044  50BD               	movf	189,w,c	;volatile
  2922   004046  0B3F               	andlw	-193
  2923   004048  0980               	iorlw	128
  2924   00404A  6EBD               	movwf	189,c	;volatile
  2925                           
  2926                           ;PWM.c: 18:     CCPR1L = 0;
  2927   00404C  0E00               	movlw	0
  2928   00404E  6EBE               	movwf	190,c	;volatile
  2929   004050                     
  2930                           ; BSR set to: 15
  2931                           ;PWM.c: 19:     TMR2IF = 0;
  2932   004050  929E               	bcf	3998,1,c	;volatile
  2933   004052                     
  2934                           ; BSR set to: 15
  2935                           ;PWM.c: 20:     TMR2ON = 1;
  2936   004052  84BA               	bsf	4026,2,c	;volatile
  2937   004054                     l519:
  2938   004054  A29E               	btfss	3998,1,c	;volatile
  2939   004056  EF2F  F020         	goto	u9911
  2940   00405A  EF31  F020         	goto	u9910
  2941   00405E                     u9911:
  2942   00405E  EF2A  F020         	goto	l519
  2943   004062                     u9910:
  2944   004062                     
  2945                           ;PWM.c: 22:     TRISCbits.RC2 = 1;
  2946   004062  8494               	bsf	148,2,c	;volatile
  2947                           
  2948                           ;PWM.c: 25:     TRISAbits.RA4 = 1;
  2949   004064  8892               	bsf	146,4,c	;volatile
  2950                           
  2951                           ;PWM.c: 26:     TRISAbits.RA2 = 1;
  2952   004066  8492               	bsf	146,2,c	;volatile
  2953                           
  2954                           ;PWM.c: 28:     TRISDbits.RD2 = 0;
  2955   004068  9495               	bcf	149,2,c	;volatile
  2956                           
  2957                           ;PWM.c: 29:     TRISDbits.RD3 = 0;
  2958   00406A  9695               	bcf	149,3,c	;volatile
  2959                           
  2960                           ;PWM.c: 30:     TRISCbits.RC4 = 0;
  2961   00406C  9894               	bcf	148,4,c	;volatile
  2962                           
  2963                           ;PWM.c: 31:     TRISDbits.RD4 = 0;
  2964   00406E  9895               	bcf	149,4,c	;volatile
  2965                           
  2966                           ;PWM.c: 32:     TRISDbits.RD5 = 0;
  2967   004070  9A95               	bcf	149,5,c	;volatile
  2968                           
  2969                           ;PWM.c: 33:     TRISDbits.RD6 = 0;
  2970   004072  9C95               	bcf	149,6,c	;volatile
  2971                           
  2972                           ;PWM.c: 34:     LATDbits.LD2 = 1;
  2973   004074  848C               	bsf	140,2,c	;volatile
  2974                           
  2975                           ;PWM.c: 35:     LATDbits.LD3 = 1;
  2976   004076  868C               	bsf	140,3,c	;volatile
  2977                           
  2978                           ;PWM.c: 36:     LATCbits.LC4 = 1;
  2979   004078  888B               	bsf	139,4,c	;volatile
  2980                           
  2981                           ;PWM.c: 37:     LATDbits.LD4 = 1;
  2982   00407A  888C               	bsf	140,4,c	;volatile
  2983                           
  2984                           ;PWM.c: 38:     LATDbits.LD5 = 1;
  2985   00407C  8A8C               	bsf	140,5,c	;volatile
  2986                           
  2987                           ;PWM.c: 39:     LATDbits.LD6 = 1;
  2988   00407E  8C8C               	bsf	140,6,c	;volatile
  2989   004080                     
  2990                           ;PWM.c: 41:     uint8_t keepState;;PWM.c: 42:     keepState = 1;
  2991   004080  0E01               	movlw	1
  2992   004082  6E22               	movwf	runPWM@keepState^0,c
  2993                           
  2994                           ;PWM.c: 44:     uint8_t multiplier;;PWM.c: 45:     multiplier = 0;
  2995   004084  0E00               	movlw	0
  2996   004086  6E23               	movwf	runPWM@multiplier^0,c
  2997                           
  2998                           ;PWM.c: 47:     while(keepState){
  2999   004088  EFB0  F020         	goto	l522
  3000   00408C                     l8112:
  3001                           
  3002                           ;PWM.c: 49:         CCPR1L = multiplier*199/5;
  3003   00408C  5023               	movf	runPWM@multiplier^0,w,c
  3004   00408E  0DC7               	mullw	199
  3005   004090  CFF3 F018          	movff	prodl,___awdiv@dividend
  3006   004094  CFF4 F019          	movff	prodh,___awdiv@dividend+1
  3007   004098  0E00               	movlw	0
  3008   00409A  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  3009   00409C  0E05               	movlw	5
  3010   00409E  6E1A               	movwf	___awdiv@divisor^0,c
  3011   0040A0  EC15  F024         	call	___awdiv	;wreg free
  3012   0040A4  5018               	movf	?___awdiv^0,w,c
  3013   0040A6  6EBE               	movwf	190,c	;volatile
  3014   0040A8                     
  3015                           ;PWM.c: 51:         if(PORTAbits.RA4){
  3016   0040A8  A880               	btfss	128,4,c	;volatile
  3017   0040AA  EF59  F020         	goto	u9921
  3018   0040AE  EF5B  F020         	goto	u9920
  3019   0040B2                     u9921:
  3020   0040B2  EF8D  F020         	goto	l8130
  3021   0040B6                     u9920:
  3022   0040B6                     
  3023                           ;PWM.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  3024   0040B6  0E03               	movlw	3
  3025   0040B8  6E21               	movwf	(??_runPWM+1)^0,c
  3026   0040BA  0E08               	movlw	8
  3027   0040BC  6E20               	movwf	??_runPWM^0,c
  3028   0040BE  0E77               	movlw	119
  3029   0040C0                     u10457:
  3030   0040C0  2EE8               	decfsz	wreg,f,c
  3031   0040C2  D7FE               	bra	u10457
  3032   0040C4  2E20               	decfsz	??_runPWM^0,f,c
  3033   0040C6  D7FC               	bra	u10457
  3034   0040C8  2E21               	decfsz	(??_runPWM+1)^0,f,c
  3035   0040CA  D7FA               	bra	u10457
  3036   0040CC  0000               	nop	
  3037   0040CE                     
  3038                           ;PWM.c: 53:             if(PORTAbits.RA4){
  3039   0040CE  A880               	btfss	128,4,c	;volatile
  3040   0040D0  EF6C  F020         	goto	u9931
  3041   0040D4  EF6E  F020         	goto	u9930
  3042   0040D8                     u9931:
  3043   0040D8  EF8D  F020         	goto	l8130
  3044   0040DC                     u9930:
  3045   0040DC                     l526:
  3046   0040DC  B880               	btfsc	128,4,c	;volatile
  3047   0040DE  EF73  F020         	goto	u9941
  3048   0040E2  EF75  F020         	goto	u9940
  3049   0040E6                     u9941:
  3050   0040E6  EF6E  F020         	goto	l526
  3051   0040EA                     u9940:
  3052   0040EA                     
  3053                           ;PWM.c: 55:                 if(multiplier == 5 ){
  3054   0040EA  0E05               	movlw	5
  3055   0040EC  1823               	xorwf	runPWM@multiplier^0,w,c
  3056   0040EE  A4D8               	btfss	status,2,c
  3057   0040F0  EF7C  F020         	goto	u9951
  3058   0040F4  EF7E  F020         	goto	u9950
  3059   0040F8                     u9951:
  3060   0040F8  EF82  F020         	goto	l8126
  3061   0040FC                     u9950:
  3062   0040FC                     
  3063                           ;PWM.c: 56:                     multiplier = 0;
  3064   0040FC  0E00               	movlw	0
  3065   0040FE  6E23               	movwf	runPWM@multiplier^0,c
  3066                           
  3067                           ;PWM.c: 57:                 } else if(multiplier <5){
  3068   004100  EF8D  F020         	goto	l8130
  3069   004104                     l8126:
  3070   004104  0E05               	movlw	5
  3071   004106  6023               	cpfslt	runPWM@multiplier^0,c
  3072   004108  EF88  F020         	goto	u9961
  3073   00410C  EF8A  F020         	goto	u9960
  3074   004110                     u9961:
  3075   004110  EF8D  F020         	goto	l525
  3076   004114                     u9960:
  3077   004114                     
  3078                           ;PWM.c: 58:                     multiplier++;
  3079   004114  2A23               	incf	runPWM@multiplier^0,f,c
  3080   004116  EF8D  F020         	goto	l8130
  3081   00411A                     l525:
  3082   00411A                     l8130:
  3083                           
  3084                           ;PWM.c: 63:         if(PORTAbits.RA2){
  3085   00411A  A480               	btfss	128,2,c	;volatile
  3086   00411C  EF92  F020         	goto	u9971
  3087   004120  EF94  F020         	goto	u9970
  3088   004124                     u9971:
  3089   004124  EFB0  F020         	goto	l522
  3090   004128                     u9970:
  3091   004128                     
  3092                           ;PWM.c: 64:         _delay((unsigned long)((50)*(32E6/4000.0)));
  3093   004128  0E03               	movlw	3
  3094   00412A  6E21               	movwf	(??_runPWM+1)^0,c
  3095   00412C  0E08               	movlw	8
  3096   00412E  6E20               	movwf	??_runPWM^0,c
  3097   004130  0E77               	movlw	119
  3098   004132                     u10467:
  3099   004132  2EE8               	decfsz	wreg,f,c
  3100   004134  D7FE               	bra	u10467
  3101   004136  2E20               	decfsz	??_runPWM^0,f,c
  3102   004138  D7FC               	bra	u10467
  3103   00413A  2E21               	decfsz	(??_runPWM+1)^0,f,c
  3104   00413C  D7FA               	bra	u10467
  3105   00413E  0000               	nop	
  3106   004140                     
  3107                           ;PWM.c: 65:         if(PORTAbits.RA2){
  3108   004140  A480               	btfss	128,2,c	;volatile
  3109   004142  EFA5  F020         	goto	u9981
  3110   004146  EFA7  F020         	goto	u9980
  3111   00414A                     u9981:
  3112   00414A  EFB0  F020         	goto	l522
  3113   00414E                     u9980:
  3114   00414E                     l534:
  3115   00414E  B480               	btfsc	128,2,c	;volatile
  3116   004150  EFAC  F020         	goto	u9991
  3117   004154  EFAE  F020         	goto	u9990
  3118   004158                     u9991:
  3119   004158  EFA7  F020         	goto	l534
  3120   00415C                     u9990:
  3121   00415C                     
  3122                           ;PWM.c: 67:             keepState = 0;
  3123   00415C  0E00               	movlw	0
  3124   00415E  6E22               	movwf	runPWM@keepState^0,c
  3125   004160                     l522:
  3126                           
  3127                           ;PWM.c: 47:     while(keepState){
  3128   004160  5022               	movf	runPWM@keepState^0,w,c
  3129   004162  A4D8               	btfss	status,2,c
  3130   004164  EFB6  F020         	goto	u10001
  3131   004168  EFB8  F020         	goto	u10000
  3132   00416C                     u10001:
  3133   00416C  EF46  F020         	goto	l8112
  3134   004170                     u10000:
  3135   004170                     
  3136                           ;PWM.c: 74:     CCP1CONbits.CCP1M = 0b0000;
  3137   004170  0EF0               	movlw	-16
  3138   004172  16BD               	andwf	189,f,c	;volatile
  3139   004174                     
  3140                           ;PWM.c: 75:     TMR2ON = 0;
  3141   004174  94BA               	bcf	4026,2,c	;volatile
  3142   004176                     
  3143                           ;PWM.c: 76:     TMR2IE = 0;
  3144   004176  929D               	bcf	3997,1,c	;volatile
  3145   004178  0012               	return		;funcret
  3146   00417A                     __end_of_runPWM:
  3147                           	callstack 0
  3148                           
  3149 ;; *************** function _runMUSIC *****************
  3150 ;; Defined at:
  3151 ;;		line 10 in file "MUSIC.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;		None
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  1    wreg      void 
  3158 ;; Registers used:
  3159 ;;		None
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;Total ram usage:        0 bytes
  3170 ;; Hardware stack levels used: 1
  3171 ;; Hardware stack levels required when called: 1
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_main
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text4
  3180   0052EA                     __ptext4:
  3181                           	callstack 0
  3182   0052EA                     _runMUSIC:
  3183                           	callstack 29
  3184   0052EA  0012               	return		;funcret
  3185   0052EC                     __end_of_runMUSIC:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function _runGPIO *****************
  3189 ;; Defined at:
  3190 ;;		line 19 in file "GPIO.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  j               2   35[COMRAM] int 
  3195 ;;  states         12    8[COMRAM] unsigned char [12]
  3196 ;;  LEDControl     12   20[COMRAM] PTR FTN(unsigned char ,)
  3197 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  3198 ;;		 -> LED2_Control(1), LED1_Control(1), 
  3199 ;;  numberOfStat    2   32[COMRAM] int 
  3200 ;;  GPIOi           1   34[COMRAM] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      void 
  3203 ;; Registers used:
  3204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Locals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;Total ram usage:       31 bytes
  3215 ;; Hardware stack levels used: 1
  3216 ;; Hardware stack levels required when called: 2
  3217 ;; This function calls:
  3218 ;;		_LED1_Control
  3219 ;;		_LED2_Control
  3220 ;;		_LED3_Control
  3221 ;;		_LED4_Control
  3222 ;;		_LED5_Control
  3223 ;;		_LED6_Control
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text5
  3230   003EC8                     __ptext5:
  3231                           	callstack 0
  3232   003EC8                     _runGPIO:
  3233                           	callstack 28
  3234   003EC8                     
  3235                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  3236   003EC8  9495               	bcf	149,2,c	;volatile
  3237                           
  3238                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  3239   003ECA  9695               	bcf	149,3,c	;volatile
  3240                           
  3241                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  3242   003ECC  9894               	bcf	148,4,c	;volatile
  3243                           
  3244                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  3245   003ECE  9895               	bcf	149,4,c	;volatile
  3246                           
  3247                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  3248   003ED0  9A95               	bcf	149,5,c	;volatile
  3249                           
  3250                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  3251   003ED2  9C95               	bcf	149,6,c	;volatile
  3252                           
  3253                           ;GPIO.c: 27:     ANSELDbits.ANSD2 = 0;
  3254   003ED4  010F               	movlb	15	; () banked
  3255   003ED6  953B               	bcf	59,2,b	;volatile
  3256                           
  3257                           ;GPIO.c: 28:     ANSELDbits.ANSD3 = 0;
  3258   003ED8  973B               	bcf	59,3,b	;volatile
  3259                           
  3260                           ;GPIO.c: 29:     ANSELCbits.ANSC4 = 0;
  3261   003EDA  993A               	bcf	58,4,b	;volatile
  3262                           
  3263                           ;GPIO.c: 30:     ANSELDbits.ANSD4 = 0;
  3264   003EDC  993B               	bcf	59,4,b	;volatile
  3265                           
  3266                           ;GPIO.c: 31:     ANSELDbits.ANSD5 = 0;
  3267   003EDE  9B3B               	bcf	59,5,b	;volatile
  3268                           
  3269                           ;GPIO.c: 32:     ANSELDbits.ANSD6 = 0;
  3270   003EE0  9D3B               	bcf	59,6,b	;volatile
  3271                           
  3272                           ;GPIO.c: 33:     LATDbits.LD2 = 1;
  3273   003EE2  848C               	bsf	140,2,c	;volatile
  3274                           
  3275                           ;GPIO.c: 34:     LATDbits.LD3 = 1;
  3276   003EE4  868C               	bsf	140,3,c	;volatile
  3277                           
  3278                           ;GPIO.c: 35:     LATCbits.LC4 = 1;
  3279   003EE6  888B               	bsf	139,4,c	;volatile
  3280                           
  3281                           ;GPIO.c: 36:     LATDbits.LD4 = 1;
  3282   003EE8  888C               	bsf	140,4,c	;volatile
  3283                           
  3284                           ;GPIO.c: 37:     LATDbits.LD5 = 1;
  3285   003EEA  8A8C               	bsf	140,5,c	;volatile
  3286                           
  3287                           ;GPIO.c: 38:     LATDbits.LD6 = 1;
  3288   003EEC  8C8C               	bsf	140,6,c	;volatile
  3289                           
  3290                           ;GPIO.c: 41:     TRISAbits.RA2 = 1;
  3291   003EEE  8492               	bsf	146,2,c	;volatile
  3292                           
  3293                           ;GPIO.c: 42:     ANSELAbits.ANSA2 = 0;
  3294   003EF0  9538               	bcf	56,2,b	;volatile
  3295   003EF2                     
  3296                           ; BSR set to: 15
  3297                           ;GPIO.c: 47:     T1CONbits.TMR1CS = 0b00;
  3298   003EF2  0E3F               	movlw	-193
  3299   003EF4  16CD               	andwf	205,f,c	;volatile
  3300                           
  3301                           ;GPIO.c: 48:     T1CONbits.T1CKPS = 0b11;
  3302   003EF6  0E30               	movlw	48
  3303   003EF8  12CD               	iorwf	205,f,c	;volatile
  3304   003EFA                     
  3305                           ; BSR set to: 15
  3306                           ;GPIO.c: 49:     TMR1IE = 1;
  3307   003EFA  809D               	bsf	3997,0,c	;volatile
  3308   003EFC                     
  3309                           ; BSR set to: 15
  3310                           ;GPIO.c: 50:     PEIE = 1;
  3311   003EFC  8CF2               	bsf	4082,6,c	;volatile
  3312   003EFE                     
  3313                           ; BSR set to: 15
  3314                           ;GPIO.c: 51:     GIE = 1;
  3315   003EFE  8EF2               	bsf	4082,7,c	;volatile
  3316                           
  3317                           ;GPIO.c: 52:     GPIOIE = 1;
  3318   003F00  0E01               	movlw	1
  3319   003F02  0101               	movlb	1	; () banked
  3320   003F04  6F26               	movwf	_GPIOIE& (0+255),b
  3321   003F06                     
  3322                           ; BSR set to: 1
  3323                           ;GPIO.c: 53:     TMR1IF = 1;
  3324   003F06  809E               	bsf	3998,0,c	;volatile
  3325                           
  3326                           ;GPIO.c: 54:     TMR1 = 0xFFFF - (25000 - 1);
  3327   003F08  0E9E               	movlw	158
  3328   003F0A  6ECF               	movwf	207,c	;volatile
  3329   003F0C  0E58               	movlw	88
  3330   003F0E  6ECE               	movwf	206,c	;volatile
  3331   003F10                     
  3332                           ; BSR set to: 1
  3333                           ;GPIO.c: 55:     TMR1ON = 1;
  3334   003F10  80CD               	bsf	4045,0,c	;volatile
  3335                           
  3336                           ;GPIO.c: 58:     keepStateGPIO = 1;
  3337   003F12  0E01               	movlw	1
  3338   003F14  0100               	movlb	0	; () banked
  3339   003F16  6FFE               	movwf	_keepStateGPIO& (0+255),b
  3340   003F18                     
  3341                           ; BSR set to: 0
  3342                           ;GPIO.c: 60:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  3343   003F18  EE21  F0EA         	lfsr	2,runGPIO@F6975
  3344   003F1C  EE10  F015         	lfsr	1,runGPIO@LEDControl
  3345   003F20  0E0B               	movlw	11
  3346   003F22                     u9751:
  3347   003F22  CFDB FFE3          	movff	plusw2,plusw1
  3348   003F26  06E8               	decf	wreg,f,c
  3349   003F28  E2FC               	bc	u9751
  3350   003F2A                     
  3351                           ; BSR set to: 0
  3352                           ;GPIO.c: 61:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  3353   003F2A  EE21  F0DE         	lfsr	2,runGPIO@F6993
  3354   003F2E  EE10  F009         	lfsr	1,runGPIO@states
  3355   003F32  0E0B               	movlw	11
  3356   003F34                     u9761:
  3357   003F34  CFDB FFE3          	movff	plusw2,plusw1
  3358   003F38  06E8               	decf	wreg,f,c
  3359   003F3A  E2FC               	bc	u9761
  3360                           
  3361                           ;GPIO.c: 62:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  3362   003F3C  0E00               	movlw	0
  3363   003F3E  6E22               	movwf	(runGPIO@numberOfStates+1)^0,c
  3364   003F40  0E0C               	movlw	12
  3365   003F42  6E21               	movwf	runGPIO@numberOfStates^0,c
  3366                           
  3367                           ;GPIO.c: 63:     uint8_t GPIOi;;GPIO.c: 64:     GPIOi = 0;
  3368   003F44  0E00               	movlw	0
  3369   003F46  6E23               	movwf	runGPIO@GPIOi^0,c
  3370                           
  3371                           ;GPIO.c: 66:     while(keepStateGPIO){
  3372   003F48  EF05  F020         	goto	l372
  3373   003F4C                     l8014:
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;GPIO.c: 68:         for(int j = 0; j < 6; j++) {
  3377   003F4C  0E00               	movlw	0
  3378   003F4E  6E25               	movwf	(runGPIO@j+1)^0,c
  3379   003F50  0E00               	movlw	0
  3380   003F52  6E24               	movwf	runGPIO@j^0,c
  3381   003F54                     l8020:
  3382                           
  3383                           ;GPIO.c: 69:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  3384   003F54  5024               	movf	runGPIO@j^0,w,c
  3385   003F56  0D02               	mullw	2
  3386   003F58  50F3               	movf	243,w,c
  3387   003F5A  0F15               	addlw	low runGPIO@LEDControl
  3388   003F5C  6ED9               	movwf	fsr2l,c
  3389   003F5E  6ADA               	clrf	fsr2h,c
  3390   003F60  D802               	call	u9778
  3391   003F62  EFD7  F01F         	goto	u9779
  3392   003F66                     u9778:
  3393   003F66  0005               	push	
  3394   003F68  6EFA               	movwf	pclath,c
  3395   003F6A  50DE               	movf	postinc2,w,c
  3396   003F6C  6EFD               	movwf	tosl,c
  3397   003F6E  50DE               	movf	postinc2,w,c
  3398   003F70  6EFE               	movwf	tosh,c
  3399   003F72  50F8               	movf	tblptru,w,c
  3400   003F74  6EFF               	movwf	tosu,c
  3401   003F76  50FA               	movf	pclath,w,c
  3402   003F78  5024               	movf	runGPIO@j^0,w,c
  3403   003F7A  0805               	sublw	5
  3404   003F7C  6E07               	movwf	??_runGPIO^0,c
  3405   003F7E  5023               	movf	runGPIO@GPIOi^0,w,c
  3406   003F80  0F09               	addlw	low runGPIO@states
  3407   003F82  6ED9               	movwf	fsr2l,c
  3408   003F84  6ADA               	clrf	fsr2h,c
  3409   003F86  50DF               	movf	indf2,w,c
  3410   003F88  6E08               	movwf	(??_runGPIO+1)^0,c
  3411   003F8A  2A07               	incf	??_runGPIO^0,f,c
  3412   003F8C  EFCA  F01F         	goto	u9784
  3413   003F90                     u9785:
  3414   003F90  90D8               	bcf	status,0,c
  3415   003F92  3208               	rrcf	(??_runGPIO+1)^0,f,c
  3416   003F94                     u9784:
  3417   003F94  2E07               	decfsz	??_runGPIO^0,f,c
  3418   003F96  EFC8  F01F         	goto	u9785
  3419   003F9A  A008               	btfss	(??_runGPIO+1)^0,0,c
  3420   003F9C  EFD2  F01F         	goto	u9791
  3421   003FA0  EFD5  F01F         	goto	u9790
  3422   003FA4                     u9791:
  3423   003FA4  0E01               	movlw	1
  3424   003FA6  EFD6  F01F         	goto	u9800
  3425   003FAA                     u9790:
  3426   003FAA  0E00               	movlw	0
  3427   003FAC                     u9800:
  3428   003FAC  0012               	return		;indir
  3429   003FAE                     u9779:
  3430   003FAE                     
  3431                           ;GPIO.c: 70:         }
  3432   003FAE  4A24               	infsnz	runGPIO@j^0,f,c
  3433   003FB0  2A25               	incf	(runGPIO@j+1)^0,f,c
  3434   003FB2  BE25               	btfsc	(runGPIO@j+1)^0,7,c
  3435   003FB4  EFE5  F01F         	goto	u9811
  3436   003FB8  5025               	movf	(runGPIO@j+1)^0,w,c
  3437   003FBA  E109               	bnz	u9810
  3438   003FBC  0E06               	movlw	6
  3439   003FBE  5C24               	subwf	runGPIO@j^0,w,c
  3440   003FC0  A0D8               	btfss	status,0,c
  3441   003FC2  EFE5  F01F         	goto	u9811
  3442   003FC6  EFE7  F01F         	goto	u9810
  3443   003FCA                     u9811:
  3444   003FCA  EFAA  F01F         	goto	l8020
  3445   003FCE                     u9810:
  3446   003FCE                     
  3447                           ;GPIO.c: 71:         _delay((unsigned long)((400)*(32E6/4000.0)));
  3448   003FCE  0E11               	movlw	17
  3449   003FD0  6E08               	movwf	(??_runGPIO+1)^0,c
  3450   003FD2  0E3C               	movlw	60
  3451   003FD4  6E07               	movwf	??_runGPIO^0,c
  3452   003FD6  0ECB               	movlw	203
  3453   003FD8                     u10477:
  3454   003FD8  2EE8               	decfsz	wreg,f,c
  3455   003FDA  D7FE               	bra	u10477
  3456   003FDC  2E07               	decfsz	??_runGPIO^0,f,c
  3457   003FDE  D7FC               	bra	u10477
  3458   003FE0  2E08               	decfsz	(??_runGPIO+1)^0,f,c
  3459   003FE2  D7FA               	bra	u10477
  3460   003FE4  0000               	nop	
  3461   003FE6                     
  3462                           ;GPIO.c: 72:         GPIOi++;
  3463   003FE6  2A23               	incf	runGPIO@GPIOi^0,f,c
  3464                           
  3465                           ;GPIO.c: 73:         if(GPIOi == numberOfStates){
  3466   003FE8  5023               	movf	runGPIO@GPIOi^0,w,c
  3467   003FEA  6E07               	movwf	??_runGPIO^0,c
  3468   003FEC  6A08               	clrf	(??_runGPIO+1)^0,c
  3469   003FEE  5021               	movf	runGPIO@numberOfStates^0,w,c
  3470   003FF0  1807               	xorwf	??_runGPIO^0,w,c
  3471   003FF2  E107               	bnz	u9821
  3472   003FF4  5022               	movf	(runGPIO@numberOfStates+1)^0,w,c
  3473   003FF6  1808               	xorwf	(??_runGPIO+1)^0,w,c
  3474   003FF8  A4D8               	btfss	status,2,c
  3475   003FFA  EF01  F020         	goto	u9821
  3476   003FFE  EF03  F020         	goto	u9820
  3477   004002                     u9821:
  3478   004002  EF05  F020         	goto	l372
  3479   004006                     u9820:
  3480   004006                     
  3481                           ;GPIO.c: 74:             GPIOi = 0;
  3482   004006  0E00               	movlw	0
  3483   004008  6E23               	movwf	runGPIO@GPIOi^0,c
  3484   00400A                     l372:
  3485                           
  3486                           ;GPIO.c: 66:     while(keepStateGPIO){
  3487   00400A  0100               	movlb	0	; () banked
  3488   00400C  51FE               	movf	_keepStateGPIO& (0+255),w,b
  3489   00400E  A4D8               	btfss	status,2,c
  3490   004010  EF0C  F020         	goto	u9831
  3491   004014  EF0E  F020         	goto	u9830
  3492   004018                     u9831:
  3493   004018  EFA6  F01F         	goto	l8014
  3494   00401C                     u9830:
  3495   00401C                     
  3496                           ; BSR set to: 0
  3497                           ;GPIO.c: 79:     LATDbits.LD2 = 1;
  3498   00401C  848C               	bsf	140,2,c	;volatile
  3499                           
  3500                           ;GPIO.c: 80:     LATDbits.LD3 = 1;
  3501   00401E  868C               	bsf	140,3,c	;volatile
  3502                           
  3503                           ;GPIO.c: 81:     LATCbits.LC4 = 1;
  3504   004020  888B               	bsf	139,4,c	;volatile
  3505                           
  3506                           ;GPIO.c: 82:     LATDbits.LD4 = 1;
  3507   004022  888C               	bsf	140,4,c	;volatile
  3508                           
  3509                           ;GPIO.c: 83:     LATDbits.LD5 = 1;
  3510   004024  8A8C               	bsf	140,5,c	;volatile
  3511                           
  3512                           ;GPIO.c: 84:     LATDbits.LD6 = 1;
  3513   004026  8C8C               	bsf	140,6,c	;volatile
  3514                           
  3515                           ;GPIO.c: 85:     TMR1ON = 0;
  3516   004028  90CD               	bcf	4045,0,c	;volatile
  3517                           
  3518                           ;GPIO.c: 86:     TMR1IE = 0;
  3519   00402A  909D               	bcf	3997,0,c	;volatile
  3520   00402C                     
  3521                           ; BSR set to: 0
  3522                           ;GPIO.c: 87:     GPIOIE = 0;
  3523   00402C  0E00               	movlw	0
  3524   00402E  0101               	movlb	1	; () banked
  3525   004030  6F26               	movwf	_GPIOIE& (0+255),b
  3526   004032                     
  3527                           ; BSR set to: 1
  3528   004032  0012               	return		;funcret
  3529   004034                     __end_of_runGPIO:
  3530                           	callstack 0
  3531                           
  3532 ;; *************** function _LED5_Control *****************
  3533 ;; Defined at:
  3534 ;;		line 14 in file "GPIO.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  state           1    wreg     unsigned char 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  state           1    5[COMRAM] unsigned char 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;Total ram usage:        1 bytes
  3553 ;; Hardware stack levels used: 1
  3554 ;; Hardware stack levels required when called: 1
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_runGPIO
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text6
  3563   005296                     __ptext6:
  3564                           	callstack 0
  3565   005296                     _LED5_Control:
  3566                           	callstack 28
  3567                           
  3568                           ; BSR set to: 1
  3569                           ;incstack = 0
  3570                           ;LED5_Control@state stored from wreg
  3571   005296  6E06               	movwf	LED5_Control@state^0,c
  3572   005298  B006               	btfsc	LED5_Control@state^0,0,c
  3573   00529A  D002               	bra	u9635
  3574   00529C  9A8C               	bcf	140,5,c	;volatile
  3575   00529E  D001               	bra	u9636
  3576   0052A0                     u9635:
  3577   0052A0  8A8C               	bsf	140,5,c	;volatile
  3578   0052A2                     u9636:
  3579   0052A2  0012               	return		;funcret
  3580   0052A4                     __end_of_LED5_Control:
  3581                           	callstack 0
  3582                           
  3583 ;; *************** function _LED4_Control *****************
  3584 ;; Defined at:
  3585 ;;		line 13 in file "GPIO.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  state           1    wreg     unsigned char 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  state           1    5[COMRAM] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      void 
  3592 ;; Registers used:
  3593 ;;		wreg
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;Total ram usage:        1 bytes
  3604 ;; Hardware stack levels used: 1
  3605 ;; Hardware stack levels required when called: 1
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_runGPIO
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text7
  3614   0052A4                     __ptext7:
  3615                           	callstack 0
  3616   0052A4                     _LED4_Control:
  3617                           	callstack 28
  3618                           
  3619                           ;incstack = 0
  3620                           ;LED4_Control@state stored from wreg
  3621   0052A4  6E06               	movwf	LED4_Control@state^0,c
  3622   0052A6  B006               	btfsc	LED4_Control@state^0,0,c
  3623   0052A8  D002               	bra	u9625
  3624   0052AA  988C               	bcf	140,4,c	;volatile
  3625   0052AC  D001               	bra	u9626
  3626   0052AE                     u9625:
  3627   0052AE  888C               	bsf	140,4,c	;volatile
  3628   0052B0                     u9626:
  3629   0052B0  0012               	return		;funcret
  3630   0052B2                     __end_of_LED4_Control:
  3631                           	callstack 0
  3632                           
  3633 ;; *************** function _LED3_Control *****************
  3634 ;; Defined at:
  3635 ;;		line 12 in file "GPIO.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  state           1    wreg     unsigned char 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  state           1    5[COMRAM] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;Total ram usage:        1 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 1
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_runGPIO
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text8
  3664   0052B2                     __ptext8:
  3665                           	callstack 0
  3666   0052B2                     _LED3_Control:
  3667                           	callstack 28
  3668                           
  3669                           ;incstack = 0
  3670                           ;LED3_Control@state stored from wreg
  3671   0052B2  6E06               	movwf	LED3_Control@state^0,c
  3672   0052B4  B006               	btfsc	LED3_Control@state^0,0,c
  3673   0052B6  D002               	bra	u9615
  3674   0052B8  988B               	bcf	139,4,c	;volatile
  3675   0052BA  D001               	bra	u9616
  3676   0052BC                     u9615:
  3677   0052BC  888B               	bsf	139,4,c	;volatile
  3678   0052BE                     u9616:
  3679   0052BE  0012               	return		;funcret
  3680   0052C0                     __end_of_LED3_Control:
  3681                           	callstack 0
  3682                           
  3683 ;; *************** function _LED2_Control *****************
  3684 ;; Defined at:
  3685 ;;		line 11 in file "GPIO.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  state           1    wreg     unsigned char 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  state           1    5[COMRAM] unsigned char 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3702 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3703 ;;Total ram usage:        1 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; Hardware stack levels required when called: 1
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_runGPIO
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           	psect	text9
  3714   0052C0                     __ptext9:
  3715                           	callstack 0
  3716   0052C0                     _LED2_Control:
  3717                           	callstack 28
  3718                           
  3719                           ;incstack = 0
  3720                           ;LED2_Control@state stored from wreg
  3721   0052C0  6E06               	movwf	LED2_Control@state^0,c
  3722   0052C2  B006               	btfsc	LED2_Control@state^0,0,c
  3723   0052C4  D002               	bra	u9605
  3724   0052C6  968C               	bcf	140,3,c	;volatile
  3725   0052C8  D001               	bra	u9606
  3726   0052CA                     u9605:
  3727   0052CA  868C               	bsf	140,3,c	;volatile
  3728   0052CC                     u9606:
  3729   0052CC  0012               	return		;funcret
  3730   0052CE                     __end_of_LED2_Control:
  3731                           	callstack 0
  3732                           
  3733 ;; *************** function _LED1_Control *****************
  3734 ;; Defined at:
  3735 ;;		line 10 in file "GPIO.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  state           1    wreg     unsigned char 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  state           1    5[COMRAM] unsigned char 
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;Total ram usage:        1 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; Hardware stack levels required when called: 1
  3756 ;; This function calls:
  3757 ;;		Nothing
  3758 ;; This function is called by:
  3759 ;;		_runGPIO
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text10
  3764   0052CE                     __ptext10:
  3765                           	callstack 0
  3766   0052CE                     _LED1_Control:
  3767                           	callstack 28
  3768                           
  3769                           ;incstack = 0
  3770                           ;LED1_Control@state stored from wreg
  3771   0052CE  6E06               	movwf	LED1_Control@state^0,c
  3772   0052D0  B006               	btfsc	LED1_Control@state^0,0,c
  3773   0052D2  D002               	bra	u9595
  3774   0052D4  948C               	bcf	140,2,c	;volatile
  3775   0052D6  D001               	bra	u9596
  3776   0052D8                     u9595:
  3777   0052D8  848C               	bsf	140,2,c	;volatile
  3778   0052DA                     u9596:
  3779   0052DA  0012               	return		;funcret
  3780   0052DC                     __end_of_LED1_Control:
  3781                           	callstack 0
  3782                           
  3783 ;; *************** function _LED6_Control *****************
  3784 ;; Defined at:
  3785 ;;		line 15 in file "GPIO.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  state           1    wreg     unsigned char 
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;  state           1    5[COMRAM] unsigned char 
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      void 
  3792 ;; Registers used:
  3793 ;;		wreg
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3803 ;;Total ram usage:        1 bytes
  3804 ;; Hardware stack levels used: 1
  3805 ;; Hardware stack levels required when called: 1
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_runGPIO
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text11
  3814   0052DC                     __ptext11:
  3815                           	callstack 0
  3816   0052DC                     _LED6_Control:
  3817                           	callstack 28
  3818                           
  3819                           ;incstack = 0
  3820                           ;LED6_Control@state stored from wreg
  3821   0052DC  6E06               	movwf	LED6_Control@state^0,c
  3822   0052DE  B006               	btfsc	LED6_Control@state^0,0,c
  3823   0052E0  D002               	bra	u9645
  3824   0052E2  9C8C               	bcf	140,6,c	;volatile
  3825   0052E4  D001               	bra	u9646
  3826   0052E6                     u9645:
  3827   0052E6  8C8C               	bsf	140,6,c	;volatile
  3828   0052E8                     u9646:
  3829   0052E8  0012               	return		;funcret
  3830   0052EA                     __end_of_LED6_Control:
  3831                           	callstack 0
  3832                           
  3833 ;; *************** function _runGAME *****************
  3834 ;; Defined at:
  3835 ;;		line 10 in file "GAME.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;		None
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  approxText     25   17[BANK1 ] unsigned char [25]
  3840 ;;  text           17    0[BANK1 ] unsigned char [17]
  3841 ;;  randomNumber    2   48[BANK1 ] unsigned short 
  3842 ;;  pot1            2   46[BANK1 ] unsigned short 
  3843 ;;  GAMEdivider     1   45[BANK1 ] unsigned char 
  3844 ;;  GAMEround       1   44[BANK1 ] unsigned char 
  3845 ;;  GAMEpart        1   43[BANK1 ] unsigned char 
  3846 ;;  keepStateGAM    1   42[BANK1 ] unsigned char 
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1    wreg      void 
  3849 ;; Registers used:
  3850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;Total ram usage:       52 bytes
  3861 ;; Hardware stack levels used: 1
  3862 ;; Hardware stack levels required when called: 9
  3863 ;; This function calls:
  3864 ;;		_LCD_ShowString
  3865 ;;		___awdiv
  3866 ;;		___lbdiv
  3867 ;;		_rand
  3868 ;;		_sprintf
  3869 ;; This function is called by:
  3870 ;;		_main
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text12
  3875   001E9E                     __ptext12:
  3876                           	callstack 0
  3877   001E9E                     _runGAME:
  3878                           	callstack 21
  3879   001E9E                     
  3880                           ;GAME.c: 12:     TRISDbits.RD2 = 0;
  3881   001E9E  9495               	bcf	149,2,c	;volatile
  3882                           
  3883                           ;GAME.c: 13:     TRISDbits.RD3 = 0;
  3884   001EA0  9695               	bcf	149,3,c	;volatile
  3885                           
  3886                           ;GAME.c: 14:     TRISCbits.RC4 = 0;
  3887   001EA2  9894               	bcf	148,4,c	;volatile
  3888                           
  3889                           ;GAME.c: 15:     TRISDbits.RD4 = 0;
  3890   001EA4  9895               	bcf	149,4,c	;volatile
  3891                           
  3892                           ;GAME.c: 16:     TRISDbits.RD5 = 0;
  3893   001EA6  9A95               	bcf	149,5,c	;volatile
  3894                           
  3895                           ;GAME.c: 17:     TRISDbits.RD6 = 0;
  3896   001EA8  9C95               	bcf	149,6,c	;volatile
  3897                           
  3898                           ;GAME.c: 18:     ANSELDbits.ANSD2 = 0;
  3899   001EAA  010F               	movlb	15	; () banked
  3900   001EAC  953B               	bcf	59,2,b	;volatile
  3901                           
  3902                           ;GAME.c: 19:     ANSELDbits.ANSD3 = 0;
  3903   001EAE  973B               	bcf	59,3,b	;volatile
  3904                           
  3905                           ;GAME.c: 20:     ANSELCbits.ANSC4 = 0;
  3906   001EB0  993A               	bcf	58,4,b	;volatile
  3907                           
  3908                           ;GAME.c: 21:     ANSELDbits.ANSD4 = 0;
  3909   001EB2  993B               	bcf	59,4,b	;volatile
  3910                           
  3911                           ;GAME.c: 22:     ANSELDbits.ANSD5 = 0;
  3912   001EB4  9B3B               	bcf	59,5,b	;volatile
  3913                           
  3914                           ;GAME.c: 23:     ANSELDbits.ANSD6 = 0;
  3915   001EB6  9D3B               	bcf	59,6,b	;volatile
  3916                           
  3917                           ;GAME.c: 24:     LATDbits.LD2 = 1;
  3918   001EB8  848C               	bsf	140,2,c	;volatile
  3919                           
  3920                           ;GAME.c: 25:     LATDbits.LD3 = 1;
  3921   001EBA  868C               	bsf	140,3,c	;volatile
  3922                           
  3923                           ;GAME.c: 26:     LATCbits.LC4 = 1;
  3924   001EBC  888B               	bsf	139,4,c	;volatile
  3925                           
  3926                           ;GAME.c: 27:     LATDbits.LD4 = 1;
  3927   001EBE  888C               	bsf	140,4,c	;volatile
  3928                           
  3929                           ;GAME.c: 28:     LATDbits.LD5 = 1;
  3930   001EC0  8A8C               	bsf	140,5,c	;volatile
  3931                           
  3932                           ;GAME.c: 29:     LATDbits.LD6 = 1;
  3933   001EC2  8C8C               	bsf	140,6,c	;volatile
  3934                           
  3935                           ;GAME.c: 32:     TRISAbits.RA2 = 1;
  3936   001EC4  8492               	bsf	146,2,c	;volatile
  3937                           
  3938                           ;GAME.c: 33:     ANSELAbits.ANSA2 = 0;
  3939   001EC6  9538               	bcf	56,2,b	;volatile
  3940                           
  3941                           ;GAME.c: 36:     ANSELAbits.ANSA5 = 1;
  3942   001EC8  8B38               	bsf	56,5,b	;volatile
  3943                           
  3944                           ;GAME.c: 37:     ADCON2bits.ADFM = 1;
  3945   001ECA  8EC0               	bsf	192,7,c	;volatile
  3946   001ECC                     
  3947                           ; BSR set to: 15
  3948                           ;GAME.c: 38:     ADCON2bits.ADCS = 0b110;
  3949   001ECC  50C0               	movf	192,w,c	;volatile
  3950   001ECE  0BF8               	andlw	-8
  3951   001ED0  0906               	iorlw	6
  3952   001ED2  6EC0               	movwf	192,c	;volatile
  3953                           
  3954                           ;GAME.c: 39:     ADCON2bits.ACQT = 0b110;
  3955   001ED4  50C0               	movf	192,w,c	;volatile
  3956   001ED6  0BC7               	andlw	-57
  3957   001ED8  0930               	iorlw	48
  3958   001EDA  6EC0               	movwf	192,c	;volatile
  3959   001EDC                     
  3960                           ; BSR set to: 15
  3961                           ;GAME.c: 40:     ADCON0bits.ADON = 1;
  3962   001EDC  80C2               	bsf	194,0,c	;volatile
  3963   001EDE                     
  3964                           ; BSR set to: 15
  3965                           ;GAME.c: 42:     uint16_t pot1;;GAME.c: 43:     char text[17] = "";
  3966   001EDE  EE21  F09B         	lfsr	2,runGAME@text
  3967   001EE2  0E10               	movlw	16
  3968   001EE4                     u10161:
  3969   001EE4  6ADE               	clrf	postinc2,c
  3970   001EE6  06E8               	decf	wreg,f,c
  3971   001EE8  E2FD               	bc	u10161
  3972   001EEA                     
  3973                           ; BSR set to: 15
  3974                           ;GAME.c: 44:     uint8_t keepStateGAME;;GAME.c: 48:     T1CONbits.TMR1CS = 0b00;
  3975   001EEA  0E3F               	movlw	-193
  3976   001EEC  16CD               	andwf	205,f,c	;volatile
  3977   001EEE                     
  3978                           ; BSR set to: 15
  3979                           ;GAME.c: 49:     T1CONbits.T1CKPS = 0b11;
  3980   001EEE  0E30               	movlw	48
  3981   001EF0  12CD               	iorwf	205,f,c	;volatile
  3982   001EF2                     
  3983                           ; BSR set to: 15
  3984                           ;GAME.c: 50:     TMR1IE = 1;
  3985   001EF2  809D               	bsf	3997,0,c	;volatile
  3986   001EF4                     
  3987                           ; BSR set to: 15
  3988                           ;GAME.c: 51:     PEIE = 1;
  3989   001EF4  8CF2               	bsf	4082,6,c	;volatile
  3990   001EF6                     
  3991                           ; BSR set to: 15
  3992                           ;GAME.c: 52:     GIE = 1;
  3993   001EF6  8EF2               	bsf	4082,7,c	;volatile
  3994   001EF8                     
  3995                           ; BSR set to: 15
  3996                           ;GAME.c: 53:     GAMEIE = 1;
  3997   001EF8  0E01               	movlw	1
  3998   001EFA  0101               	movlb	1	; () banked
  3999   001EFC  6F24               	movwf	_GAMEIE& (0+255),b
  4000   001EFE                     
  4001                           ; BSR set to: 1
  4002                           ;GAME.c: 54:     TMR1IF = 1;
  4003   001EFE  809E               	bsf	3998,0,c	;volatile
  4004   001F00                     
  4005                           ; BSR set to: 1
  4006                           ;GAME.c: 55:     TMR1 = 0xFFFF - (62500 - 1);
  4007   001F00  0E0B               	movlw	11
  4008   001F02  6ECF               	movwf	207,c	;volatile
  4009   001F04  0EDC               	movlw	220
  4010   001F06  6ECE               	movwf	206,c	;volatile
  4011   001F08                     
  4012                           ; BSR set to: 1
  4013                           ;GAME.c: 56:     TMR1ON = 1;
  4014   001F08  80CD               	bsf	4045,0,c	;volatile
  4015   001F0A                     
  4016                           ; BSR set to: 1
  4017                           ;GAME.c: 58:     GAMEtime = 0;
  4018   001F0A  0E00               	movlw	0
  4019   001F0C  6F23               	movwf	_GAMEtime& (0+255),b
  4020   001F0E                     
  4021                           ; BSR set to: 1
  4022                           ;GAME.c: 59:     uint8_t GAMEround = 1;
  4023   001F0E  0E01               	movlw	1
  4024   001F10  6FC7               	movwf	runGAME@GAMEround& (0+255),b
  4025   001F12                     
  4026                           ; BSR set to: 1
  4027                           ;GAME.c: 62:     char approxText[25] = "";
  4028   001F12  EE21  F0AC         	lfsr	2,runGAME@approxText
  4029   001F16  0E18               	movlw	24
  4030   001F18                     u10171:
  4031   001F18  6ADE               	clrf	postinc2,c
  4032   001F1A  06E8               	decf	wreg,f,c
  4033   001F1C  E2FD               	bc	u10171
  4034   001F1E                     
  4035                           ; BSR set to: 1
  4036                           ;GAME.c: 65:     uint16_t randomNumber;;GAME.c: 66:     randomNumber = (uint16_t)(2 + ra
      +                          nd() / ((0x7fff) / (1023 - 2 + 1) + 1));
  4037   001F1E  EC5D  F026         	call	_rand
  4038   001F22  C012  F018         	movff	?_rand,___awdiv@dividend
  4039   001F26  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  4040   001F2A  0E00               	movlw	0
  4041   001F2C  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  4042   001F2E  0E21               	movlw	33
  4043   001F30  6E1A               	movwf	___awdiv@divisor^0,c
  4044   001F32  EC15  F024         	call	___awdiv	;wreg free
  4045   001F36  0E02               	movlw	2
  4046   001F38  2418               	addwf	?___awdiv^0,w,c
  4047   001F3A  0101               	movlb	1	; () banked
  4048   001F3C  6FCB               	movwf	runGAME@randomNumber& (0+255),b
  4049   001F3E  0E00               	movlw	0
  4050   001F40  2019               	addwfc	(?___awdiv+1)^0,w,c
  4051   001F42  6FCC               	movwf	(runGAME@randomNumber+1)& (0+255),b
  4052   001F44                     
  4053                           ; BSR set to: 1
  4054                           ;GAME.c: 67:     sprintf(approxText, "%u                ", randomNumber);
  4055   001F44  0EAC               	movlw	low runGAME@approxText
  4056   001F46  0100               	movlb	0	; () banked
  4057   001F48  6FCE               	movwf	sprintf@s& (0+255),b
  4058   001F4A  0E01               	movlw	high runGAME@approxText
  4059   001F4C  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4060   001F4E  0E77               	movlw	low STR_31
  4061   001F50  6FD0               	movwf	sprintf@fmt& (0+255),b
  4062   001F52  0EFE               	movlw	high STR_31
  4063   001F54  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4064   001F56  C1CB  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  4065   001F5A  C1CC  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  4066   001F5E  ECEF  F027         	call	_sprintf	;wreg free
  4067   001F62                     
  4068                           ;GAME.c: 68:     LCD_ShowString((char)1, approxText);
  4069   001F62  0EAC               	movlw	low runGAME@approxText
  4070   001F64  6E07               	movwf	LCD_ShowString@textData^0,c
  4071   001F66  0E01               	movlw	high runGAME@approxText
  4072   001F68  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4073   001F6A  0E01               	movlw	1
  4074   001F6C  EC77  F024         	call	_LCD_ShowString
  4075   001F70                     
  4076                           ;GAME.c: 69:     keepStateGAME = 1;
  4077   001F70  0E01               	movlw	1
  4078   001F72  0101               	movlb	1	; () banked
  4079   001F74  6FC5               	movwf	runGAME@keepStateGAME& (0+255),b
  4080                           
  4081                           ;GAME.c: 72:     while(keepStateGAME){
  4082   001F76  EF36  F011         	goto	l8368
  4083   001F7A                     l8302:
  4084                           
  4085                           ; BSR set to: 1
  4086                           ;GAME.c: 74:         ADCON0bits.CHS = 4;
  4087   001F7A  50C2               	movf	194,w,c	;volatile
  4088   001F7C  0B83               	andlw	-125
  4089   001F7E  0910               	iorlw	16
  4090   001F80  6EC2               	movwf	194,c	;volatile
  4091   001F82                     
  4092                           ; BSR set to: 1
  4093                           ;GAME.c: 75:         GODONE = 1;
  4094   001F82  82C2               	bsf	4034,1,c	;volatile
  4095   001F84                     l664:
  4096   001F84  B2C2               	btfsc	4034,1,c	;volatile
  4097   001F86  EFC7  F00F         	goto	u10181
  4098   001F8A  EFC9  F00F         	goto	u10180
  4099   001F8E                     u10181:
  4100   001F8E  EFC2  F00F         	goto	l664
  4101   001F92                     u10180:
  4102   001F92                     
  4103                           ;GAME.c: 77:         pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  4104   001F92  50C3               	movf	195,w,c	;volatile
  4105   001F94  CFC4 F0E7          	movff	4036,??_runGAME	;volatile
  4106   001F98  0100               	movlb	0	; () banked
  4107   001F9A  6BE8               	clrf	(??_runGAME+1)& (0+255),b
  4108   001F9C  C0E7  F0E8         	movff	??_runGAME,??_runGAME+1
  4109   001FA0  6BE7               	clrf	??_runGAME& (0+255),b
  4110   001FA2  11E7               	iorwf	??_runGAME& (0+255),w,b
  4111   001FA4  0101               	movlb	1	; () banked
  4112   001FA6  6FC9               	movwf	runGAME@pot1& (0+255),b
  4113   001FA8  0100               	movlb	0	; () banked
  4114   001FAA  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  4115   001FAC  0101               	movlb	1	; () banked
  4116   001FAE  6FCA               	movwf	(runGAME@pot1+1)& (0+255),b
  4117   001FB0                     
  4118                           ; BSR set to: 1
  4119                           ;GAME.c: 79:         sprintf(text, "%hu             ", pot1);
  4120   001FB0  0E9B               	movlw	low runGAME@text
  4121   001FB2  0100               	movlb	0	; () banked
  4122   001FB4  6FCE               	movwf	sprintf@s& (0+255),b
  4123   001FB6  0E01               	movlw	high runGAME@text
  4124   001FB8  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4125   001FBA  0EAF               	movlw	low STR_32
  4126   001FBC  6FD0               	movwf	sprintf@fmt& (0+255),b
  4127   001FBE  0EFE               	movlw	high STR_32
  4128   001FC0  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4129   001FC2  C1C9  F0D2         	movff	runGAME@pot1,?_sprintf+4
  4130   001FC6  C1CA  F0D3         	movff	runGAME@pot1+1,?_sprintf+5
  4131   001FCA  ECEF  F027         	call	_sprintf	;wreg free
  4132   001FCE                     
  4133                           ;GAME.c: 80:         LCD_ShowString((char)2, text);
  4134   001FCE  0E9B               	movlw	low runGAME@text
  4135   001FD0  6E07               	movwf	LCD_ShowString@textData^0,c
  4136   001FD2  0E01               	movlw	high runGAME@text
  4137   001FD4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4138   001FD6  0E02               	movlw	2
  4139   001FD8  EC77  F024         	call	_LCD_ShowString
  4140                           
  4141                           ;GAME.c: 82:         switch(GAMEround){
  4142   001FDC  EF04  F010         	goto	l8324
  4143   001FE0                     l8312:
  4144                           
  4145                           ; BSR set to: 1
  4146                           ;GAME.c: 84:                 GAMEdivider = 26;
  4147   001FE0  0E1A               	movlw	26
  4148   001FE2  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4149                           
  4150                           ;GAME.c: 85:                 break;
  4151   001FE4  EF18  F010         	goto	l8326
  4152   001FE8                     l8314:
  4153                           
  4154                           ; BSR set to: 1
  4155                           ;GAME.c: 87:                 GAMEdivider = 24;
  4156   001FE8  0E18               	movlw	24
  4157   001FEA  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4158                           
  4159                           ;GAME.c: 88:                 break;
  4160   001FEC  EF18  F010         	goto	l8326
  4161   001FF0                     l8316:
  4162                           
  4163                           ; BSR set to: 1
  4164                           ;GAME.c: 90:                 GAMEdivider = 18;
  4165   001FF0  0E12               	movlw	18
  4166   001FF2  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4167                           
  4168                           ;GAME.c: 91:                 break;
  4169   001FF4  EF18  F010         	goto	l8326
  4170   001FF8                     l8318:
  4171                           
  4172                           ; BSR set to: 1
  4173                           ;GAME.c: 93:                 GAMEdivider = 16;
  4174   001FF8  0E10               	movlw	16
  4175   001FFA  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4176                           
  4177                           ;GAME.c: 94:                 break;
  4178   001FFC  EF18  F010         	goto	l8326
  4179   002000                     l8320:
  4180                           
  4181                           ; BSR set to: 1
  4182                           ;GAME.c: 96:                 GAMEdivider = 15;
  4183   002000  0E0F               	movlw	15
  4184   002002  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4185                           
  4186                           ;GAME.c: 97:                 break;
  4187   002004  EF18  F010         	goto	l8326
  4188   002008                     l8324:
  4189   002008  0101               	movlb	1	; () banked
  4190   00200A  51C7               	movf	runGAME@GAMEround& (0+255),w,b
  4191                           
  4192                           ; Switch size 1, requested type "simple"
  4193                           ; Number of cases is 4, Range of values is 1 to 4
  4194                           ; switch strategies available:
  4195                           ; Name         Instructions Cycles
  4196                           ; simple_byte           13     7 (average)
  4197                           ;	Chosen strategy is simple_byte
  4198   00200C  0A01               	xorlw	1	; case 1
  4199   00200E  B4D8               	btfsc	status,2,c
  4200   002010  EFF0  F00F         	goto	l8312
  4201   002014  0A03               	xorlw	3	; case 2
  4202   002016  B4D8               	btfsc	status,2,c
  4203   002018  EFF4  F00F         	goto	l8314
  4204   00201C  0A01               	xorlw	1	; case 3
  4205   00201E  B4D8               	btfsc	status,2,c
  4206   002020  EFF8  F00F         	goto	l8316
  4207   002024  0A07               	xorlw	7	; case 4
  4208   002026  B4D8               	btfsc	status,2,c
  4209   002028  EFFC  F00F         	goto	l8318
  4210   00202C  EF00  F010         	goto	l8320
  4211   002030                     l8326:
  4212                           
  4213                           ; BSR set to: 1
  4214                           ;GAME.c: 100:         GAMEpart = GAMEtime/GAMEdivider;
  4215   002030  C1C8  F006         	movff	runGAME@GAMEdivider,___lbdiv@divisor
  4216   002034  5123               	movf	_GAMEtime& (0+255),w,b
  4217   002036  ECFB  F026         	call	___lbdiv
  4218   00203A  0101               	movlb	1	; () banked
  4219   00203C  6FC6               	movwf	runGAME@GAMEpart& (0+255),b
  4220   00203E                     
  4221                           ; BSR set to: 1
  4222                           ;GAME.c: 102:         if(PORTAbits.RA2){
  4223   00203E  A480               	btfss	128,2,c	;volatile
  4224   002040  EF24  F010         	goto	u10191
  4225   002044  EF26  F010         	goto	u10190
  4226   002048                     u10191:
  4227   002048  EF12  F011         	goto	l8366
  4228   00204C                     u10190:
  4229   00204C                     
  4230                           ; BSR set to: 1
  4231                           ;GAME.c: 103:             _delay((unsigned long)((50)*(32E6/4000.0)));
  4232   00204C  0E03               	movlw	3
  4233   00204E  0100               	movlb	0	; () banked
  4234   002050  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4235   002052  0E08               	movlw	8
  4236   002054  6FE7               	movwf	??_runGAME& (0+255),b
  4237   002056  0E77               	movlw	119
  4238   002058                     u10487:
  4239   002058  2EE8               	decfsz	wreg,f,c
  4240   00205A  D7FE               	bra	u10487
  4241   00205C  2FE7               	decfsz	??_runGAME& (0+255),f,b
  4242   00205E  D7FC               	bra	u10487
  4243   002060  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  4244   002062  D7FA               	bra	u10487
  4245   002064                     
  4246                           ;GAME.c: 104:             if(PORTAbits.RA2){
  4247   002064  A480               	btfss	128,2,c	;volatile
  4248   002066  EF37  F010         	goto	u10201
  4249   00206A  EF39  F010         	goto	u10200
  4250   00206E                     u10201:
  4251   00206E  EF12  F011         	goto	l8366
  4252   002072                     u10200:
  4253   002072                     l676:
  4254   002072  B480               	btfsc	128,2,c	;volatile
  4255   002074  EF3E  F010         	goto	u10211
  4256   002078  EF40  F010         	goto	u10210
  4257   00207C                     u10211:
  4258   00207C  EF39  F010         	goto	l676
  4259   002080                     u10210:
  4260   002080                     
  4261                           ;GAME.c: 106:                 GAMEpart = 7;
  4262   002080  0E07               	movlw	7
  4263   002082  0101               	movlb	1	; () banked
  4264   002084  6FC6               	movwf	runGAME@GAMEpart& (0+255),b
  4265   002086  EF12  F011         	goto	l8366
  4266   00208A                     l680:
  4267                           
  4268                           ; BSR set to: 1
  4269                           ;GAME.c: 112:                 LATDbits.LD2 = 1;
  4270   00208A  848C               	bsf	140,2,c	;volatile
  4271                           
  4272                           ;GAME.c: 113:                 LATDbits.LD3 = 1;
  4273   00208C  868C               	bsf	140,3,c	;volatile
  4274                           
  4275                           ;GAME.c: 114:                 LATCbits.LC4 = 1;
  4276   00208E  888B               	bsf	139,4,c	;volatile
  4277                           
  4278                           ;GAME.c: 115:                 LATDbits.LD4 = 1;
  4279   002090  888C               	bsf	140,4,c	;volatile
  4280                           
  4281                           ;GAME.c: 116:                 LATDbits.LD5 = 1;
  4282   002092  8A8C               	bsf	140,5,c	;volatile
  4283                           
  4284                           ;GAME.c: 117:                 LATDbits.LD6 = 1;
  4285   002094  8C8C               	bsf	140,6,c	;volatile
  4286                           
  4287                           ;GAME.c: 118:                 break;
  4288   002096  EF36  F011         	goto	l8368
  4289   00209A                     l682:
  4290                           
  4291                           ; BSR set to: 1
  4292                           ;GAME.c: 120:                 LATDbits.LD2 = 0;
  4293   00209A  948C               	bcf	140,2,c	;volatile
  4294                           
  4295                           ;GAME.c: 121:                 LATDbits.LD3 = 1;
  4296   00209C  868C               	bsf	140,3,c	;volatile
  4297                           
  4298                           ;GAME.c: 122:                 LATCbits.LC4 = 1;
  4299   00209E  888B               	bsf	139,4,c	;volatile
  4300                           
  4301                           ;GAME.c: 123:                 LATDbits.LD4 = 1;
  4302   0020A0  888C               	bsf	140,4,c	;volatile
  4303                           
  4304                           ;GAME.c: 124:                 LATDbits.LD5 = 1;
  4305   0020A2  8A8C               	bsf	140,5,c	;volatile
  4306                           
  4307                           ;GAME.c: 125:                 LATDbits.LD6 = 1;
  4308   0020A4  8C8C               	bsf	140,6,c	;volatile
  4309                           
  4310                           ;GAME.c: 126:                 break;
  4311   0020A6  EF36  F011         	goto	l8368
  4312   0020AA                     l683:
  4313                           
  4314                           ; BSR set to: 1
  4315                           ;GAME.c: 128:                 LATDbits.LD2 = 0;
  4316   0020AA  948C               	bcf	140,2,c	;volatile
  4317                           
  4318                           ;GAME.c: 129:                 LATDbits.LD3 = 0;
  4319   0020AC  968C               	bcf	140,3,c	;volatile
  4320                           
  4321                           ;GAME.c: 130:                 LATCbits.LC4 = 1;
  4322   0020AE  888B               	bsf	139,4,c	;volatile
  4323                           
  4324                           ;GAME.c: 131:                 LATDbits.LD4 = 1;
  4325   0020B0  888C               	bsf	140,4,c	;volatile
  4326                           
  4327                           ;GAME.c: 132:                 LATDbits.LD5 = 1;
  4328   0020B2  8A8C               	bsf	140,5,c	;volatile
  4329                           
  4330                           ;GAME.c: 133:                 LATDbits.LD6 = 1;
  4331   0020B4  8C8C               	bsf	140,6,c	;volatile
  4332                           
  4333                           ;GAME.c: 134:                 break;
  4334   0020B6  EF36  F011         	goto	l8368
  4335   0020BA                     l684:
  4336                           
  4337                           ; BSR set to: 1
  4338                           ;GAME.c: 136:                 LATDbits.LD2 = 0;
  4339   0020BA  948C               	bcf	140,2,c	;volatile
  4340                           
  4341                           ;GAME.c: 137:                 LATDbits.LD3 = 0;
  4342   0020BC  968C               	bcf	140,3,c	;volatile
  4343                           
  4344                           ;GAME.c: 138:                 LATCbits.LC4 = 0;
  4345   0020BE  988B               	bcf	139,4,c	;volatile
  4346                           
  4347                           ;GAME.c: 139:                 LATDbits.LD4 = 1;
  4348   0020C0  888C               	bsf	140,4,c	;volatile
  4349                           
  4350                           ;GAME.c: 140:                 LATDbits.LD5 = 1;
  4351   0020C2  8A8C               	bsf	140,5,c	;volatile
  4352                           
  4353                           ;GAME.c: 141:                 LATDbits.LD6 = 1;
  4354   0020C4  8C8C               	bsf	140,6,c	;volatile
  4355                           
  4356                           ;GAME.c: 142:                 break;
  4357   0020C6  EF36  F011         	goto	l8368
  4358   0020CA                     l685:
  4359                           
  4360                           ; BSR set to: 1
  4361                           ;GAME.c: 144:                 LATDbits.LD2 = 0;
  4362   0020CA  948C               	bcf	140,2,c	;volatile
  4363                           
  4364                           ;GAME.c: 145:                 LATDbits.LD3 = 0;
  4365   0020CC  968C               	bcf	140,3,c	;volatile
  4366                           
  4367                           ;GAME.c: 146:                 LATCbits.LC4 = 0;
  4368   0020CE  988B               	bcf	139,4,c	;volatile
  4369                           
  4370                           ;GAME.c: 147:                 LATDbits.LD4 = 0;
  4371   0020D0  988C               	bcf	140,4,c	;volatile
  4372                           
  4373                           ;GAME.c: 148:                 LATDbits.LD5 = 1;
  4374   0020D2  8A8C               	bsf	140,5,c	;volatile
  4375                           
  4376                           ;GAME.c: 149:                 LATDbits.LD6 = 1;
  4377   0020D4  8C8C               	bsf	140,6,c	;volatile
  4378                           
  4379                           ;GAME.c: 150:                 break;
  4380   0020D6  EF36  F011         	goto	l8368
  4381   0020DA                     l686:
  4382                           
  4383                           ; BSR set to: 1
  4384                           ;GAME.c: 152:                 LATDbits.LD2 = 0;
  4385   0020DA  948C               	bcf	140,2,c	;volatile
  4386                           
  4387                           ;GAME.c: 153:                 LATDbits.LD3 = 0;
  4388   0020DC  968C               	bcf	140,3,c	;volatile
  4389                           
  4390                           ;GAME.c: 154:                 LATCbits.LC4 = 0;
  4391   0020DE  988B               	bcf	139,4,c	;volatile
  4392                           
  4393                           ;GAME.c: 155:                 LATDbits.LD4 = 0;
  4394   0020E0  988C               	bcf	140,4,c	;volatile
  4395                           
  4396                           ;GAME.c: 156:                 LATDbits.LD5 = 0;
  4397   0020E2  9A8C               	bcf	140,5,c	;volatile
  4398                           
  4399                           ;GAME.c: 157:                 LATDbits.LD6 = 1;
  4400   0020E4  8C8C               	bsf	140,6,c	;volatile
  4401                           
  4402                           ;GAME.c: 158:                 break;
  4403   0020E6  EF36  F011         	goto	l8368
  4404   0020EA                     l687:
  4405                           
  4406                           ; BSR set to: 1
  4407                           ;GAME.c: 160:                 LATDbits.LD2 = 0;
  4408   0020EA  948C               	bcf	140,2,c	;volatile
  4409                           
  4410                           ;GAME.c: 161:                 LATDbits.LD3 = 0;
  4411   0020EC  968C               	bcf	140,3,c	;volatile
  4412                           
  4413                           ;GAME.c: 162:                 LATCbits.LC4 = 0;
  4414   0020EE  988B               	bcf	139,4,c	;volatile
  4415                           
  4416                           ;GAME.c: 163:                 LATDbits.LD4 = 0;
  4417   0020F0  988C               	bcf	140,4,c	;volatile
  4418                           
  4419                           ;GAME.c: 164:                 LATDbits.LD5 = 0;
  4420   0020F2  9A8C               	bcf	140,5,c	;volatile
  4421                           
  4422                           ;GAME.c: 165:                 LATDbits.LD6 = 0;
  4423   0020F4  9C8C               	bcf	140,6,c	;volatile
  4424                           
  4425                           ;GAME.c: 166:                 break;
  4426   0020F6  EF36  F011         	goto	l8368
  4427   0020FA                     l8338:
  4428                           
  4429                           ; BSR set to: 1
  4430                           ;GAME.c: 168:                 GAMEtime = 0;
  4431   0020FA  0E00               	movlw	0
  4432   0020FC  6F23               	movwf	_GAMEtime& (0+255),b
  4433   0020FE                     
  4434                           ; BSR set to: 1
  4435                           ;GAME.c: 169:                 if(pot1 >= randomNumber - 2 && pot1 <= randomNumber + 2){
  4436   0020FE  0EFE               	movlw	254
  4437   002100  25CB               	addwf	runGAME@randomNumber& (0+255),w,b
  4438   002102  0100               	movlb	0	; () banked
  4439   002104  6FE7               	movwf	??_runGAME& (0+255),b
  4440   002106  0EFF               	movlw	255
  4441   002108  0101               	movlb	1	; () banked
  4442   00210A  21CC               	addwfc	(runGAME@randomNumber+1)& (0+255),w,b
  4443   00210C  0100               	movlb	0	; () banked
  4444   00210E  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4445   002110  51E7               	movf	??_runGAME& (0+255),w,b
  4446   002112  0101               	movlb	1	; () banked
  4447   002114  5DC9               	subwf	runGAME@pot1& (0+255),w,b
  4448   002116  0100               	movlb	0	; () banked
  4449   002118  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  4450   00211A  0101               	movlb	1	; () banked
  4451   00211C  59CA               	subwfb	(runGAME@pot1+1)& (0+255),w,b
  4452   00211E  A0D8               	btfss	status,0,c
  4453   002120  EF94  F010         	goto	u10221
  4454   002124  EF96  F010         	goto	u10220
  4455   002128                     u10221:
  4456   002128  EFDE  F010         	goto	l689
  4457   00212C                     u10220:
  4458   00212C                     
  4459                           ; BSR set to: 1
  4460   00212C  0E02               	movlw	2
  4461   00212E  25CB               	addwf	runGAME@randomNumber& (0+255),w,b
  4462   002130  0100               	movlb	0	; () banked
  4463   002132  6FE7               	movwf	??_runGAME& (0+255),b
  4464   002134  0E00               	movlw	0
  4465   002136  0101               	movlb	1	; () banked
  4466   002138  21CC               	addwfc	(runGAME@randomNumber+1)& (0+255),w,b
  4467   00213A  0100               	movlb	0	; () banked
  4468   00213C  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4469   00213E  0101               	movlb	1	; () banked
  4470   002140  51C9               	movf	runGAME@pot1& (0+255),w,b
  4471   002142  0100               	movlb	0	; () banked
  4472   002144  5DE7               	subwf	??_runGAME& (0+255),w,b
  4473   002146  0101               	movlb	1	; () banked
  4474   002148  51CA               	movf	(runGAME@pot1+1)& (0+255),w,b
  4475   00214A  0100               	movlb	0	; () banked
  4476   00214C  59E8               	subwfb	(??_runGAME+1)& (0+255),w,b
  4477   00214E  A0D8               	btfss	status,0,c
  4478   002150  EFAC  F010         	goto	u10231
  4479   002154  EFAE  F010         	goto	u10230
  4480   002158                     u10231:
  4481   002158  EFDE  F010         	goto	l689
  4482   00215C                     u10230:
  4483   00215C                     
  4484                           ; BSR set to: 0
  4485                           ;GAME.c: 170:                     GAMEround += 1;
  4486   00215C  0101               	movlb	1	; () banked
  4487   00215E  2BC7               	incf	runGAME@GAMEround& (0+255),f,b
  4488   002160                     
  4489                           ; BSR set to: 1
  4490                           ;GAME.c: 171:                     randomNumber = (uint16_t)(2 + rand() / ((0x7fff) / (10
      +                          23 - 2 + 1) + 1));
  4491   002160  EC5D  F026         	call	_rand	;wreg free
  4492   002164  C012  F018         	movff	?_rand,___awdiv@dividend
  4493   002168  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  4494   00216C  0E00               	movlw	0
  4495   00216E  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  4496   002170  0E21               	movlw	33
  4497   002172  6E1A               	movwf	___awdiv@divisor^0,c
  4498   002174  EC15  F024         	call	___awdiv	;wreg free
  4499   002178  0E02               	movlw	2
  4500   00217A  2418               	addwf	?___awdiv^0,w,c
  4501   00217C  0101               	movlb	1	; () banked
  4502   00217E  6FCB               	movwf	runGAME@randomNumber& (0+255),b
  4503   002180  0E00               	movlw	0
  4504   002182  2019               	addwfc	(?___awdiv+1)^0,w,c
  4505   002184  6FCC               	movwf	(runGAME@randomNumber+1)& (0+255),b
  4506   002186                     
  4507                           ; BSR set to: 1
  4508                           ;GAME.c: 172:                     sprintf(approxText, "%u                ", randomNumber
      +                          );
  4509   002186  0EAC               	movlw	low runGAME@approxText
  4510   002188  0100               	movlb	0	; () banked
  4511   00218A  6FCE               	movwf	sprintf@s& (0+255),b
  4512   00218C  0E01               	movlw	high runGAME@approxText
  4513   00218E  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4514   002190  0E77               	movlw	low STR_31
  4515   002192  6FD0               	movwf	sprintf@fmt& (0+255),b
  4516   002194  0EFE               	movlw	high STR_31
  4517   002196  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4518   002198  C1CB  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  4519   00219C  C1CC  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  4520   0021A0  ECEF  F027         	call	_sprintf	;wreg free
  4521   0021A4                     
  4522                           ;GAME.c: 173:                     keepStateGAME = 1;
  4523   0021A4  0E01               	movlw	1
  4524   0021A6  0101               	movlb	1	; () banked
  4525   0021A8  6FC5               	movwf	runGAME@keepStateGAME& (0+255),b
  4526   0021AA                     
  4527                           ; BSR set to: 1
  4528                           ;GAME.c: 174:                     LCD_ShowString((char)1, approxText);
  4529   0021AA  0EAC               	movlw	low runGAME@approxText
  4530   0021AC  6E07               	movwf	LCD_ShowString@textData^0,c
  4531   0021AE  0E01               	movlw	high runGAME@approxText
  4532   0021B0  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4533   0021B2  0E01               	movlw	1
  4534   0021B4  EC77  F024         	call	_LCD_ShowString
  4535                           
  4536                           ;GAME.c: 175:                 } else {
  4537   0021B8  EF36  F011         	goto	l8368
  4538   0021BC                     l689:
  4539                           
  4540                           ;GAME.c: 176:                     ADCON0bits.ADON = 0;
  4541   0021BC  90C2               	bcf	194,0,c	;volatile
  4542   0021BE                     
  4543                           ;GAME.c: 177:                     sprintf(approxText, "Skore: %u        ", GAMEround - 1
      +                          );
  4544   0021BE  0EAC               	movlw	low runGAME@approxText
  4545   0021C0  0100               	movlb	0	; () banked
  4546   0021C2  6FCE               	movwf	sprintf@s& (0+255),b
  4547   0021C4  0E01               	movlw	high runGAME@approxText
  4548   0021C6  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4549   0021C8  0E9D               	movlw	low STR_34
  4550   0021CA  6FD0               	movwf	sprintf@fmt& (0+255),b
  4551   0021CC  0EFE               	movlw	high STR_34
  4552   0021CE  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4553   0021D0  0EFF               	movlw	255
  4554   0021D2  0101               	movlb	1	; () banked
  4555   0021D4  25C7               	addwf	runGAME@GAMEround& (0+255),w,b
  4556   0021D6  0100               	movlb	0	; () banked
  4557   0021D8  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  4558   0021DA  6BD3               	clrf	(?_sprintf+5)& (0+255),b
  4559   0021DC  0EFF               	movlw	255
  4560   0021DE  23D3               	addwfc	(?_sprintf+5)& (0+255),f,b
  4561   0021E0  ECEF  F027         	call	_sprintf	;wreg free
  4562   0021E4                     
  4563                           ;GAME.c: 178:                     LCD_ShowString((char)1, "GAME OVER       ");
  4564   0021E4  0EC0               	movlw	low STR_35
  4565   0021E6  6E07               	movwf	LCD_ShowString@textData^0,c
  4566   0021E8  0EFE               	movlw	high STR_35
  4567   0021EA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4568   0021EC  0E01               	movlw	1
  4569   0021EE  EC77  F024         	call	_LCD_ShowString
  4570   0021F2                     
  4571                           ;GAME.c: 179:                     LCD_ShowString((char)2, approxText);
  4572   0021F2  0EAC               	movlw	low runGAME@approxText
  4573   0021F4  6E07               	movwf	LCD_ShowString@textData^0,c
  4574   0021F6  0E01               	movlw	high runGAME@approxText
  4575   0021F8  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4576   0021FA  0E02               	movlw	2
  4577   0021FC  EC77  F024         	call	_LCD_ShowString
  4578   002200                     
  4579                           ;GAME.c: 180:                     keepStateGAME = 0;
  4580   002200  0E00               	movlw	0
  4581   002202  0101               	movlb	1	; () banked
  4582   002204  6FC5               	movwf	runGAME@keepStateGAME& (0+255),b
  4583   002206                     
  4584                           ; BSR set to: 1
  4585                           ;GAME.c: 181:                     _delay((unsigned long)((2000)*(32E6/4000.0)));
  4586   002206  0E52               	movlw	82
  4587   002208  0100               	movlb	0	; () banked
  4588   00220A  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4589   00220C  0E2B               	movlw	43
  4590   00220E  6FE7               	movwf	??_runGAME& (0+255),b
  4591   002210  0E00               	movlw	0
  4592   002212                     u10497:
  4593   002212  2EE8               	decfsz	wreg,f,c
  4594   002214  D7FE               	bra	u10497
  4595   002216  2FE7               	decfsz	??_runGAME& (0+255),f,b
  4596   002218  D7FC               	bra	u10497
  4597   00221A  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  4598   00221C  D7FA               	bra	u10497
  4599   00221E  0000               	nop	
  4600   002220  EF36  F011         	goto	l8368
  4601   002224                     l8366:
  4602   002224  0101               	movlb	1	; () banked
  4603   002226  51C6               	movf	runGAME@GAMEpart& (0+255),w,b
  4604                           
  4605                           ; Switch size 1, requested type "simple"
  4606                           ; Number of cases is 8, Range of values is 0 to 7
  4607                           ; switch strategies available:
  4608                           ; Name         Instructions Cycles
  4609                           ; simple_byte           25    13 (average)
  4610                           ;	Chosen strategy is simple_byte
  4611   002228  0A00               	xorlw	0	; case 0
  4612   00222A  B4D8               	btfsc	status,2,c
  4613   00222C  EF45  F010         	goto	l680
  4614   002230  0A01               	xorlw	1	; case 1
  4615   002232  B4D8               	btfsc	status,2,c
  4616   002234  EF4D  F010         	goto	l682
  4617   002238  0A03               	xorlw	3	; case 2
  4618   00223A  B4D8               	btfsc	status,2,c
  4619   00223C  EF55  F010         	goto	l683
  4620   002240  0A01               	xorlw	1	; case 3
  4621   002242  B4D8               	btfsc	status,2,c
  4622   002244  EF5D  F010         	goto	l684
  4623   002248  0A07               	xorlw	7	; case 4
  4624   00224A  B4D8               	btfsc	status,2,c
  4625   00224C  EF65  F010         	goto	l685
  4626   002250  0A01               	xorlw	1	; case 5
  4627   002252  B4D8               	btfsc	status,2,c
  4628   002254  EF6D  F010         	goto	l686
  4629   002258  0A03               	xorlw	3	; case 6
  4630   00225A  B4D8               	btfsc	status,2,c
  4631   00225C  EF75  F010         	goto	l687
  4632   002260  0A01               	xorlw	1	; case 7
  4633   002262  B4D8               	btfsc	status,2,c
  4634   002264  EF7D  F010         	goto	l8338
  4635   002268  EF36  F011         	goto	l8368
  4636   00226C                     l8368:
  4637                           
  4638                           ;GAME.c: 72:     while(keepStateGAME){
  4639   00226C  0101               	movlb	1	; () banked
  4640   00226E  51C5               	movf	runGAME@keepStateGAME& (0+255),w,b
  4641   002270  A4D8               	btfss	status,2,c
  4642   002272  EF3D  F011         	goto	u10241
  4643   002276  EF3F  F011         	goto	u10240
  4644   00227A                     u10241:
  4645   00227A  EFBD  F00F         	goto	l8302
  4646   00227E                     u10240:
  4647   00227E                     
  4648                           ; BSR set to: 1
  4649                           ;GAME.c: 188:     LATDbits.LD2 = 1;
  4650   00227E  848C               	bsf	140,2,c	;volatile
  4651                           
  4652                           ;GAME.c: 189:     LATDbits.LD3 = 1;
  4653   002280  868C               	bsf	140,3,c	;volatile
  4654                           
  4655                           ;GAME.c: 190:     LATCbits.LC4 = 1;
  4656   002282  888B               	bsf	139,4,c	;volatile
  4657                           
  4658                           ;GAME.c: 191:     LATDbits.LD4 = 1;
  4659   002284  888C               	bsf	140,4,c	;volatile
  4660                           
  4661                           ;GAME.c: 192:     LATDbits.LD5 = 1;
  4662   002286  8A8C               	bsf	140,5,c	;volatile
  4663                           
  4664                           ;GAME.c: 193:     LATDbits.LD6 = 1;
  4665   002288  8C8C               	bsf	140,6,c	;volatile
  4666                           
  4667                           ;GAME.c: 194:     TMR1ON = 0;
  4668   00228A  90CD               	bcf	4045,0,c	;volatile
  4669                           
  4670                           ;GAME.c: 195:     TMR1IE = 0;
  4671   00228C  909D               	bcf	3997,0,c	;volatile
  4672   00228E                     
  4673                           ; BSR set to: 1
  4674                           ;GAME.c: 196:     GAMEIE = 0;
  4675   00228E  0E00               	movlw	0
  4676   002290  6F24               	movwf	_GAMEIE& (0+255),b
  4677   002292                     
  4678                           ; BSR set to: 1
  4679   002292  0012               	return		;funcret
  4680   002294                     __end_of_runGAME:
  4681                           	callstack 0
  4682                           
  4683 ;; *************** function _rand *****************
  4684 ;; Defined at:
  4685 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\rand.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;		None
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;		None
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  2   17[COMRAM] int 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0, cstack
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;Total ram usage:        6 bytes
  4704 ;; Hardware stack levels used: 1
  4705 ;; Hardware stack levels required when called: 2
  4706 ;; This function calls:
  4707 ;;		___lmul
  4708 ;; This function is called by:
  4709 ;;		_runGAME
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text13
  4714   004CBA                     __ptext13:
  4715                           	callstack 0
  4716   004CBA                     _rand:
  4717                           	callstack 27
  4718   004CBA  C197  F006         	movff	_seed,___lmul@multiplier
  4719   004CBE  C198  F007         	movff	_seed+1,___lmul@multiplier+1
  4720   004CC2  C199  F008         	movff	_seed+2,___lmul@multiplier+2
  4721   004CC6  C19A  F009         	movff	_seed+3,___lmul@multiplier+3
  4722   004CCA  0E2D               	movlw	45
  4723   004CCC  6E0A               	movwf	___lmul@multiplicand^0,c
  4724   004CCE  0E7F               	movlw	127
  4725   004CD0  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  4726   004CD2  0E95               	movlw	149
  4727   004CD4  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  4728   004CD6  0E4C               	movlw	76
  4729   004CD8  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  4730   004CDA  EC94  F026         	call	___lmul	;wreg free
  4731   004CDE  0E01               	movlw	1
  4732   004CE0  2406               	addwf	?___lmul^0,w,c
  4733   004CE2  0101               	movlb	1	; () banked
  4734   004CE4  6F97               	movwf	_seed& (0+255),b
  4735   004CE6  0E00               	movlw	0
  4736   004CE8  2007               	addwfc	(?___lmul+1)^0,w,c
  4737   004CEA  6F98               	movwf	(_seed+1)& (0+255),b
  4738   004CEC  0E00               	movlw	0
  4739   004CEE  2008               	addwfc	(?___lmul+2)^0,w,c
  4740   004CF0  6F99               	movwf	(_seed+2)& (0+255),b
  4741   004CF2  0E00               	movlw	0
  4742   004CF4  2009               	addwfc	(?___lmul+3)^0,w,c
  4743   004CF6  6F9A               	movwf	(_seed+3)& (0+255),b
  4744   004CF8                     
  4745                           ; BSR set to: 1
  4746   004CF8  C197  F014         	movff	_seed,??_rand
  4747   004CFC  C198  F015         	movff	_seed+1,??_rand+1
  4748   004D00  C199  F016         	movff	_seed+2,??_rand+2
  4749   004D04  C19A  F017         	movff	_seed+3,??_rand+3
  4750   004D08  0E12               	movlw	18
  4751   004D0A  EF8C  F026         	goto	u9660
  4752   004D0E                     u9665:
  4753   004D0E  90D8               	bcf	status,0,c
  4754   004D10  3217               	rrcf	(??_rand+3)^0,f,c
  4755   004D12  3216               	rrcf	(??_rand+2)^0,f,c
  4756   004D14  3215               	rrcf	(??_rand+1)^0,f,c
  4757   004D16  3214               	rrcf	??_rand^0,f,c
  4758   004D18                     u9660:
  4759   004D18  2EE8               	decfsz	wreg,f,c
  4760   004D1A  EF87  F026         	goto	u9665
  4761   004D1E  C014  F012         	movff	??_rand,?_rand
  4762   004D22  C015  F013         	movff	??_rand+1,?_rand+1
  4763   004D26                     
  4764                           ; BSR set to: 1
  4765   004D26  0012               	return		;funcret
  4766   004D28                     __end_of_rand:
  4767                           	callstack 0
  4768                           
  4769 ;; *************** function ___lmul *****************
  4770 ;; Defined at:
  4771 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul32.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;  multiplier      4    5[COMRAM] unsigned long 
  4774 ;;  multiplicand    4    9[COMRAM] unsigned long 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  product         4   13[COMRAM] unsigned long 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  4    5[COMRAM] unsigned long 
  4779 ;; Registers used:
  4780 ;;		wreg, status,2, status,0
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4786 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4790 ;;Total ram usage:       12 bytes
  4791 ;; Hardware stack levels used: 1
  4792 ;; Hardware stack levels required when called: 1
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		_rand
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text14
  4801   004D28                     __ptext14:
  4802                           	callstack 0
  4803   004D28                     ___lmul:
  4804                           	callstack 27
  4805   004D28  0E00               	movlw	0
  4806   004D2A  6E0E               	movwf	___lmul@product^0,c
  4807   004D2C  0E00               	movlw	0
  4808   004D2E  6E0F               	movwf	(___lmul@product+1)^0,c
  4809   004D30  0E00               	movlw	0
  4810   004D32  6E10               	movwf	(___lmul@product+2)^0,c
  4811   004D34  0E00               	movlw	0
  4812   004D36  6E11               	movwf	(___lmul@product+3)^0,c
  4813   004D38                     l7668:
  4814   004D38  A006               	btfss	___lmul@multiplier^0,0,c
  4815   004D3A  EFA1  F026         	goto	u9281
  4816   004D3E  EFA3  F026         	goto	u9280
  4817   004D42                     u9281:
  4818   004D42  EFAB  F026         	goto	l7672
  4819   004D46                     u9280:
  4820   004D46  500A               	movf	___lmul@multiplicand^0,w,c
  4821   004D48  260E               	addwf	___lmul@product^0,f,c
  4822   004D4A  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  4823   004D4C  220F               	addwfc	(___lmul@product+1)^0,f,c
  4824   004D4E  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  4825   004D50  2210               	addwfc	(___lmul@product+2)^0,f,c
  4826   004D52  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  4827   004D54  2211               	addwfc	(___lmul@product+3)^0,f,c
  4828   004D56                     l7672:
  4829   004D56  90D8               	bcf	status,0,c
  4830   004D58  360A               	rlcf	___lmul@multiplicand^0,f,c
  4831   004D5A  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4832   004D5C  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4833   004D5E  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4834   004D60  90D8               	bcf	status,0,c
  4835   004D62  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  4836   004D64  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  4837   004D66  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  4838   004D68  3206               	rrcf	___lmul@multiplier^0,f,c
  4839   004D6A  5006               	movf	___lmul@multiplier^0,w,c
  4840   004D6C  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  4841   004D6E  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  4842   004D70  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  4843   004D72  A4D8               	btfss	status,2,c
  4844   004D74  EFBE  F026         	goto	u9291
  4845   004D78  EFC0  F026         	goto	u9290
  4846   004D7C                     u9291:
  4847   004D7C  EF9C  F026         	goto	l7668
  4848   004D80                     u9290:
  4849   004D80  C00E  F006         	movff	___lmul@product,?___lmul
  4850   004D84  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  4851   004D88  C010  F008         	movff	___lmul@product+2,?___lmul+2
  4852   004D8C  C011  F009         	movff	___lmul@product+3,?___lmul+3
  4853   004D90  0012               	return		;funcret
  4854   004D92                     __end_of___lmul:
  4855                           	callstack 0
  4856                           
  4857 ;; *************** function ___lbdiv *****************
  4858 ;; Defined at:
  4859 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lbdiv.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  dividend        1    wreg     unsigned char 
  4862 ;;  divisor         1    5[COMRAM] unsigned char 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  dividend        1    6[COMRAM] unsigned char 
  4865 ;;  quotient        1    8[COMRAM] unsigned char 
  4866 ;;  counter         1    7[COMRAM] unsigned char 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      unsigned char 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2, status,0
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4876 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;Total ram usage:        4 bytes
  4881 ;; Hardware stack levels used: 1
  4882 ;; Hardware stack levels required when called: 1
  4883 ;; This function calls:
  4884 ;;		Nothing
  4885 ;; This function is called by:
  4886 ;;		_runGAME
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text15
  4891   004DF6                     __ptext15:
  4892                           	callstack 0
  4893   004DF6                     ___lbdiv:
  4894                           	callstack 28
  4895                           
  4896                           ;incstack = 0
  4897                           ;___lbdiv@dividend stored from wreg
  4898   004DF6  6E07               	movwf	___lbdiv@dividend^0,c
  4899   004DF8  0E00               	movlw	0
  4900   004DFA  6E09               	movwf	___lbdiv@quotient^0,c
  4901   004DFC  5006               	movf	___lbdiv@divisor^0,w,c
  4902   004DFE  B4D8               	btfsc	status,2,c
  4903   004E00  EF04  F027         	goto	u9671
  4904   004E04  EF06  F027         	goto	u9670
  4905   004E08                     u9671:
  4906   004E08  EF27  F027         	goto	l7950
  4907   004E0C                     u9670:
  4908   004E0C  0E01               	movlw	1
  4909   004E0E  6E08               	movwf	___lbdiv@counter^0,c
  4910   004E10  EF0D  F027         	goto	l7938
  4911   004E14                     l7934:
  4912   004E14  90D8               	bcf	status,0,c
  4913   004E16  3606               	rlcf	___lbdiv@divisor^0,f,c
  4914   004E18  2A08               	incf	___lbdiv@counter^0,f,c
  4915   004E1A                     l7938:
  4916   004E1A  AE06               	btfss	___lbdiv@divisor^0,7,c
  4917   004E1C  EF12  F027         	goto	u9681
  4918   004E20  EF14  F027         	goto	u9680
  4919   004E24                     u9681:
  4920   004E24  EF0A  F027         	goto	l7934
  4921   004E28                     u9680:
  4922   004E28                     l7940:
  4923   004E28  90D8               	bcf	status,0,c
  4924   004E2A  3609               	rlcf	___lbdiv@quotient^0,f,c
  4925   004E2C  5006               	movf	___lbdiv@divisor^0,w,c
  4926   004E2E  5C07               	subwf	___lbdiv@dividend^0,w,c
  4927   004E30  A0D8               	btfss	status,0,c
  4928   004E32  EF1D  F027         	goto	u9691
  4929   004E36  EF1F  F027         	goto	u9690
  4930   004E3A                     u9691:
  4931   004E3A  EF22  F027         	goto	l7946
  4932   004E3E                     u9690:
  4933   004E3E  5006               	movf	___lbdiv@divisor^0,w,c
  4934   004E40  5E07               	subwf	___lbdiv@dividend^0,f,c
  4935   004E42  8009               	bsf	___lbdiv@quotient^0,0,c
  4936   004E44                     l7946:
  4937   004E44  90D8               	bcf	status,0,c
  4938   004E46  3206               	rrcf	___lbdiv@divisor^0,f,c
  4939   004E48  2E08               	decfsz	___lbdiv@counter^0,f,c
  4940   004E4A  EF14  F027         	goto	l7940
  4941   004E4E                     l7950:
  4942   004E4E  5009               	movf	___lbdiv@quotient^0,w,c
  4943   004E50  0012               	return		;funcret
  4944   004E52                     __end_of___lbdiv:
  4945                           	callstack 0
  4946                           
  4947 ;; *************** function _runDAC *****************
  4948 ;; Defined at:
  4949 ;;		line 10 in file "DAC.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;		None
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  DACindex        1  125[BANK0 ] unsigned char 
  4954 ;;  selectModeDA    1  124[BANK0 ] unsigned char 
  4955 ;;  keepState       1  123[BANK0 ] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;Total ram usage:       12 bytes
  4970 ;; Hardware stack levels used: 1
  4971 ;; Hardware stack levels required when called: 9
  4972 ;; This function calls:
  4973 ;;		_SPI_write
  4974 ;;		___fladd
  4975 ;;		___fldiv
  4976 ;;		___flmul
  4977 ;;		___fltol
  4978 ;;		___xxtofl
  4979 ;;		_printf
  4980 ;;		_sinf
  4981 ;; This function is called by:
  4982 ;;		_main
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text16
  4987   002D4E                     __ptext16:
  4988                           	callstack 0
  4989   002D4E                     _runDAC:
  4990                           	callstack 21
  4991   002D4E                     
  4992                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  4993   002D4E  8094               	bsf	148,0,c	;volatile
  4994                           
  4995                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  4996   002D50  8892               	bsf	146,4,c	;volatile
  4997                           
  4998                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  4999   002D52  8692               	bsf	146,3,c	;volatile
  5000                           
  5001                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  5002   002D54  8492               	bsf	146,2,c	;volatile
  5003                           
  5004                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  5005   002D56  010F               	movlb	15	; () banked
  5006   002D58  9738               	bcf	56,3,b	;volatile
  5007                           
  5008                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  5009   002D5A  9538               	bcf	56,2,b	;volatile
  5010                           
  5011                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  5012   002D5C  9693               	bcf	147,3,c	;volatile
  5013                           
  5014                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  5015   002D5E  9694               	bcf	148,3,c	;volatile
  5016                           
  5017                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  5018   002D60  9A94               	bcf	148,5,c	;volatile
  5019   002D62                     
  5020                           ; BSR set to: 15
  5021                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  5022   002D62  50C6               	movf	198,w,c	;volatile
  5023   002D64  0BF0               	andlw	-16
  5024   002D66  0902               	iorlw	2
  5025   002D68  6EC6               	movwf	198,c	;volatile
  5026   002D6A                     
  5027                           ; BSR set to: 15
  5028                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  5029   002D6A  98C6               	bcf	198,4,c	;volatile
  5030   002D6C                     
  5031                           ; BSR set to: 15
  5032                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  5033   002D6C  8CC7               	bsf	199,6,c	;volatile
  5034   002D6E                     
  5035                           ; BSR set to: 15
  5036                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  5037   002D6E  8AC6               	bsf	198,5,c	;volatile
  5038   002D70                     
  5039                           ; BSR set to: 15
  5040                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  5041   002D70  8139               	bsf	57,0,b	;volatile
  5042   002D72                     
  5043                           ; BSR set to: 15
  5044                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  5045   002D72  9EC0               	bcf	192,7,c	;volatile
  5046                           
  5047                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  5048   002D74  50C0               	movf	192,w,c	;volatile
  5049   002D76  0BF8               	andlw	-8
  5050   002D78  0906               	iorlw	6
  5051   002D7A  6EC0               	movwf	192,c	;volatile
  5052                           
  5053                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  5054   002D7C  50C0               	movf	192,w,c	;volatile
  5055   002D7E  0BC7               	andlw	-57
  5056   002D80  0930               	iorlw	48
  5057   002D82  6EC0               	movwf	192,c	;volatile
  5058   002D84                     
  5059                           ; BSR set to: 15
  5060                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  5061   002D84  80C2               	bsf	194,0,c	;volatile
  5062                           
  5063                           ;DAC.c: 38:     SPBRG1 = 25;
  5064   002D86  0E19               	movlw	25
  5065   002D88  6EAF               	movwf	175,c	;volatile
  5066   002D8A                     
  5067                           ; BSR set to: 15
  5068                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  5069   002D8A  8EAB               	bsf	171,7,c	;volatile
  5070   002D8C                     
  5071                           ; BSR set to: 15
  5072                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  5073   002D8C  98AC               	bcf	172,4,c	;volatile
  5074   002D8E                     
  5075                           ; BSR set to: 15
  5076                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  5077   002D8E  8AAC               	bsf	172,5,c	;volatile
  5078   002D90                     
  5079                           ; BSR set to: 15
  5080                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  5081   002D90  88AB               	bsf	171,4,c	;volatile
  5082   002D92                     
  5083                           ; BSR set to: 15
  5084                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  5085   002D92  868A               	bsf	138,3,c	;volatile
  5086                           
  5087                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  5088   002D94  50C2               	movf	194,w,c	;volatile
  5089   002D96  0B83               	andlw	-125
  5090   002D98  0930               	iorlw	48
  5091   002D9A  6EC2               	movwf	194,c	;volatile
  5092                           
  5093                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  5094   002D9C  0E01               	movlw	1
  5095   002D9E  0100               	movlb	0	; () banked
  5096   002DA0  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5097                           
  5098                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  5099   002DA2  0E01               	movlw	1
  5100   002DA4  6FDB               	movwf	runDAC@keepState& (0+255),b
  5101                           
  5102                           ;DAC.c: 52:     uint8_t DACindex = 0;
  5103   002DA6  0E00               	movlw	0
  5104   002DA8  6FDD               	movwf	runDAC@DACindex& (0+255),b
  5105                           
  5106                           ;DAC.c: 54:     while(keepState){
  5107   002DAA  EF11  F018         	goto	l8256
  5108   002DAE                     l8214:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;DAC.c: 57:                 if(DACindex<255/2){
  5112   002DAE  0E7F               	movlw	127
  5113   002DB0  61DD               	cpfslt	runDAC@DACindex& (0+255),b
  5114   002DB2  EFDD  F016         	goto	u10081
  5115   002DB6  EFDF  F016         	goto	u10080
  5116   002DBA                     u10081:
  5117   002DBA  EF07  F017         	goto	l8218
  5118   002DBE                     u10080:
  5119   002DBE                     
  5120                           ; BSR set to: 0
  5121                           ;DAC.c: 58:                     SPI_write((uint8_t)(1.9*DACindex));
  5122   002DBE  0E33               	movlw	51
  5123   002DC0  6E18               	movwf	___flmul@a^0,c
  5124   002DC2  0E33               	movlw	51
  5125   002DC4  6E19               	movwf	(___flmul@a+1)^0,c
  5126   002DC6  0EF3               	movlw	243
  5127   002DC8  6E1A               	movwf	(___flmul@a+2)^0,c
  5128   002DCA  0E3F               	movlw	63
  5129   002DCC  6E1B               	movwf	(___flmul@a+3)^0,c
  5130   002DCE  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5131   002DD0  6E06               	movwf	___xxtofl@val^0,c
  5132   002DD2  6A07               	clrf	(___xxtofl@val+1)^0,c
  5133   002DD4  6A08               	clrf	(___xxtofl@val+2)^0,c
  5134   002DD6  6A09               	clrf	(___xxtofl@val+3)^0,c
  5135   002DD8  0E01               	movlw	1
  5136   002DDA  EC47  F01C         	call	___xxtofl
  5137   002DDE  C006  F014         	movff	?___xxtofl,___flmul@b
  5138   002DE2  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5139   002DE6  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5140   002DEA  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5141   002DEE  EC3A  F00D         	call	___flmul	;wreg free
  5142   002DF2  C014  F064         	movff	?___flmul,___fltol@f1
  5143   002DF6  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  5144   002DFA  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  5145   002DFE  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  5146   002E02  EC46  F021         	call	___fltol	;wreg free
  5147   002E06  0100               	movlb	0	; () banked
  5148   002E08  5164               	movf	?___fltol& (0+255),w,b
  5149   002E0A  EC34  F028         	call	_SPI_write
  5150   002E0E                     l8218:
  5151                           
  5152                           ;DAC.c: 60:                 if(DACindex>=255/2){
  5153   002E0E  0E7E               	movlw	126
  5154   002E10  0100               	movlb	0	; () banked
  5155   002E12  65DD               	cpfsgt	runDAC@DACindex& (0+255),b
  5156   002E14  EF0E  F017         	goto	u10091
  5157   002E18  EF10  F017         	goto	u10090
  5158   002E1C                     u10091:
  5159   002E1C  EFCC  F017         	goto	l231
  5160   002E20                     u10090:
  5161   002E20                     
  5162                           ; BSR set to: 0
  5163                           ;DAC.c: 61:                     SPI_write((uint8_t)(1.9*(255-DACindex)));
  5164   002E20  0E33               	movlw	51
  5165   002E22  6E18               	movwf	___flmul@a^0,c
  5166   002E24  0E33               	movlw	51
  5167   002E26  6E19               	movwf	(___flmul@a+1)^0,c
  5168   002E28  0EF3               	movlw	243
  5169   002E2A  6E1A               	movwf	(___flmul@a+2)^0,c
  5170   002E2C  0E3F               	movlw	63
  5171   002E2E  6E1B               	movwf	(___flmul@a+3)^0,c
  5172   002E30  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5173   002E32  0AFF               	xorlw	255
  5174   002E34  6FD2               	movwf	??_runDAC& (0+255),b
  5175   002E36  51D2               	movf	??_runDAC& (0+255),w,b
  5176   002E38  6E06               	movwf	___xxtofl@val^0,c
  5177   002E3A  6A07               	clrf	(___xxtofl@val+1)^0,c
  5178   002E3C  6A08               	clrf	(___xxtofl@val+2)^0,c
  5179   002E3E  6A09               	clrf	(___xxtofl@val+3)^0,c
  5180   002E40  0E01               	movlw	1
  5181   002E42  EC47  F01C         	call	___xxtofl
  5182   002E46  C006  F014         	movff	?___xxtofl,___flmul@b
  5183   002E4A  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5184   002E4E  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5185   002E52  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5186   002E56  EC3A  F00D         	call	___flmul	;wreg free
  5187   002E5A  C014  F064         	movff	?___flmul,___fltol@f1
  5188   002E5E  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  5189   002E62  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  5190   002E66  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  5191   002E6A  EC46  F021         	call	___fltol	;wreg free
  5192   002E6E  0100               	movlb	0	; () banked
  5193   002E70  5164               	movf	?___fltol& (0+255),w,b
  5194   002E72  EC34  F028         	call	_SPI_write
  5195   002E76  EFCC  F017         	goto	l231
  5196   002E7A                     l8222:
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5200   002E7A  0E00               	movlw	0
  5201   002E7C  6E31               	movwf	___fldiv@a^0,c
  5202   002E7E  0E00               	movlw	0
  5203   002E80  6E32               	movwf	(___fldiv@a+1)^0,c
  5204   002E82  0E7F               	movlw	127
  5205   002E84  6E33               	movwf	(___fldiv@a+2)^0,c
  5206   002E86  0E43               	movlw	67
  5207   002E88  6E34               	movwf	(___fldiv@a+3)^0,c
  5208   002E8A  0EC3               	movlw	195
  5209   002E8C  6E18               	movwf	___flmul@a^0,c
  5210   002E8E  0EF5               	movlw	245
  5211   002E90  6E19               	movwf	(___flmul@a+1)^0,c
  5212   002E92  0EC8               	movlw	200
  5213   002E94  6E1A               	movwf	(___flmul@a+2)^0,c
  5214   002E96  0E40               	movlw	64
  5215   002E98  6E1B               	movwf	(___flmul@a+3)^0,c
  5216   002E9A  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5217   002E9C  6E06               	movwf	___xxtofl@val^0,c
  5218   002E9E  6A07               	clrf	(___xxtofl@val+1)^0,c
  5219   002EA0  6A08               	clrf	(___xxtofl@val+2)^0,c
  5220   002EA2  6A09               	clrf	(___xxtofl@val+3)^0,c
  5221   002EA4  0E01               	movlw	1
  5222   002EA6  EC47  F01C         	call	___xxtofl
  5223   002EAA  C006  F014         	movff	?___xxtofl,___flmul@b
  5224   002EAE  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5225   002EB2  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5226   002EB6  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5227   002EBA  EC3A  F00D         	call	___flmul	;wreg free
  5228   002EBE  C014  F02D         	movff	?___flmul,___fldiv@b
  5229   002EC2  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  5230   002EC6  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  5231   002ECA  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  5232   002ECE  EC2B  F013         	call	___fldiv	;wreg free
  5233   002ED2  C02D  F0D3         	movff	?___fldiv,_runDAC$4526
  5234   002ED6  C02E  F0D4         	movff	?___fldiv+1,_runDAC$4526+1
  5235   002EDA  C02F  F0D5         	movff	?___fldiv+2,_runDAC$4526+2
  5236   002EDE  C030  F0D6         	movff	?___fldiv+3,_runDAC$4526+3
  5237   002EE2                     
  5238                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5239   002EE2  C0D3  F0A4         	movff	_runDAC$4526,sinf@x
  5240   002EE6  C0D4  F0A5         	movff	_runDAC$4526+1,sinf@x+1
  5241   002EEA  C0D5  F0A6         	movff	_runDAC$4526+2,sinf@x+2
  5242   002EEE  C0D6  F0A7         	movff	_runDAC$4526+3,sinf@x+3
  5243   002EF2  EC54  F008         	call	_sinf	;wreg free
  5244   002EF6  C0A4  F0D7         	movff	?_sinf,_runDAC$4527
  5245   002EFA  C0A5  F0D8         	movff	?_sinf+1,_runDAC$4527+1
  5246   002EFE  C0A6  F0D9         	movff	?_sinf+2,_runDAC$4527+2
  5247   002F02  C0A7  F0DA         	movff	?_sinf+3,_runDAC$4527+3
  5248   002F06                     
  5249                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5250   002F06  0E00               	movlw	0
  5251   002F08  6E4A               	movwf	___fladd@a^0,c
  5252   002F0A  0E00               	movlw	0
  5253   002F0C  6E4B               	movwf	(___fladd@a+1)^0,c
  5254   002F0E  0EFE               	movlw	254
  5255   002F10  6E4C               	movwf	(___fladd@a+2)^0,c
  5256   002F12  0E42               	movlw	66
  5257   002F14  6E4D               	movwf	(___fladd@a+3)^0,c
  5258   002F16  0E00               	movlw	0
  5259   002F18  6E18               	movwf	___flmul@a^0,c
  5260   002F1A  0E00               	movlw	0
  5261   002F1C  6E19               	movwf	(___flmul@a+1)^0,c
  5262   002F1E  0EFE               	movlw	254
  5263   002F20  6E1A               	movwf	(___flmul@a+2)^0,c
  5264   002F22  0E42               	movlw	66
  5265   002F24  6E1B               	movwf	(___flmul@a+3)^0,c
  5266   002F26  C0D7  F014         	movff	_runDAC$4527,___flmul@b
  5267   002F2A  C0D8  F015         	movff	_runDAC$4527+1,___flmul@b+1
  5268   002F2E  C0D9  F016         	movff	_runDAC$4527+2,___flmul@b+2
  5269   002F32  C0DA  F017         	movff	_runDAC$4527+3,___flmul@b+3
  5270   002F36  EC3A  F00D         	call	___flmul	;wreg free
  5271   002F3A  C014  F046         	movff	?___flmul,___fladd@b
  5272   002F3E  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5273   002F42  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5274   002F46  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5275   002F4A  ECD9  F00A         	call	___fladd	;wreg free
  5276   002F4E  C046  F064         	movff	?___fladd,___fltol@f1
  5277   002F52  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  5278   002F56  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  5279   002F5A  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  5280   002F5E  EC46  F021         	call	___fltol	;wreg free
  5281   002F62  0100               	movlb	0	; () banked
  5282   002F64  5164               	movf	?___fltol& (0+255),w,b
  5283   002F66  EC34  F028         	call	_SPI_write
  5284                           
  5285                           ;DAC.c: 66:                 break;
  5286   002F6A  EFCC  F017         	goto	l231
  5287   002F6E                     l8228:
  5288                           
  5289                           ; BSR set to: 0
  5290                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  5291   002F6E  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5292   002F70  0AFF               	xorlw	255
  5293   002F72  EC34  F028         	call	_SPI_write
  5294                           
  5295                           ;DAC.c: 69:                 break;
  5296   002F76  EFCC  F017         	goto	l231
  5297   002F7A                     l8232:
  5298                           
  5299                           ; BSR set to: 0
  5300   002F7A  51DC               	movf	runDAC@selectModeDAC& (0+255),w,b
  5301                           
  5302                           ; Switch size 1, requested type "simple"
  5303                           ; Number of cases is 3, Range of values is 1 to 3
  5304                           ; switch strategies available:
  5305                           ; Name         Instructions Cycles
  5306                           ; simple_byte           10     6 (average)
  5307                           ;	Chosen strategy is simple_byte
  5308   002F7C  0A01               	xorlw	1	; case 1
  5309   002F7E  B4D8               	btfsc	status,2,c
  5310   002F80  EFD7  F016         	goto	l8214
  5311   002F84  0A03               	xorlw	3	; case 2
  5312   002F86  B4D8               	btfsc	status,2,c
  5313   002F88  EF3D  F017         	goto	l8222
  5314   002F8C  0A01               	xorlw	1	; case 3
  5315   002F8E  B4D8               	btfsc	status,2,c
  5316   002F90  EFB7  F017         	goto	l8228
  5317   002F94  EFCC  F017         	goto	l231
  5318   002F98                     l231:
  5319                           
  5320                           ;DAC.c: 71:         GODONE = 1;
  5321   002F98  82C2               	bsf	4034,1,c	;volatile
  5322   002F9A                     l234:
  5323   002F9A  B2C2               	btfsc	4034,1,c	;volatile
  5324   002F9C  EFD2  F017         	goto	u10101
  5325   002FA0  EFD4  F017         	goto	u10100
  5326   002FA4                     u10101:
  5327   002FA4  EFCD  F017         	goto	l234
  5328   002FA8                     u10100:
  5329   002FA8                     
  5330                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  5331   002FA8  0EE6               	movlw	low STR_18
  5332   002FAA  0100               	movlb	0	; () banked
  5333   002FAC  6FCE               	movwf	printf@fmt& (0+255),b
  5334   002FAE  0EFF               	movlw	high STR_18
  5335   002FB0  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  5336   002FB2  CFC4 F0D0          	movff	4036,?_printf+2	;volatile
  5337   002FB6  6BD1               	clrf	(?_printf+3)& (0+255),b
  5338   002FB8  EC30  F029         	call	_printf	;wreg free
  5339   002FBC                     
  5340                           ;DAC.c: 75:         if(PORTCbits.RC0){
  5341   002FBC  A082               	btfss	130,0,c	;volatile
  5342   002FBE  EFE3  F017         	goto	u10111
  5343   002FC2  EFE5  F017         	goto	u10110
  5344   002FC6                     u10111:
  5345   002FC6  EFE8  F017         	goto	l8240
  5346   002FCA                     u10110:
  5347   002FCA                     
  5348                           ;DAC.c: 76:             selectModeDAC = 1;
  5349   002FCA  0E01               	movlw	1
  5350   002FCC  0100               	movlb	0	; () banked
  5351   002FCE  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5352   002FD0                     l8240:
  5353                           
  5354                           ;DAC.c: 78:         if(PORTAbits.RA4){
  5355   002FD0  A880               	btfss	128,4,c	;volatile
  5356   002FD2  EFED  F017         	goto	u10121
  5357   002FD6  EFEF  F017         	goto	u10120
  5358   002FDA                     u10121:
  5359   002FDA  EFF2  F017         	goto	l8244
  5360   002FDE                     u10120:
  5361   002FDE                     
  5362                           ;DAC.c: 79:             selectModeDAC = 2;
  5363   002FDE  0E02               	movlw	2
  5364   002FE0  0100               	movlb	0	; () banked
  5365   002FE2  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5366   002FE4                     l8244:
  5367                           
  5368                           ;DAC.c: 81:         if(PORTAbits.RA3){
  5369   002FE4  A680               	btfss	128,3,c	;volatile
  5370   002FE6  EFF7  F017         	goto	u10131
  5371   002FEA  EFF9  F017         	goto	u10130
  5372   002FEE                     u10131:
  5373   002FEE  EFFC  F017         	goto	l8248
  5374   002FF2                     u10130:
  5375   002FF2                     
  5376                           ;DAC.c: 82:             selectModeDAC = 3;
  5377   002FF2  0E03               	movlw	3
  5378   002FF4  0100               	movlb	0	; () banked
  5379   002FF6  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5380   002FF8                     l8248:
  5381                           
  5382                           ;DAC.c: 84:         if(PORTAbits.RA2){
  5383   002FF8  A480               	btfss	128,2,c	;volatile
  5384   002FFA  EF01  F018         	goto	u10141
  5385   002FFE  EF03  F018         	goto	u10140
  5386   003002                     u10141:
  5387   003002  EF06  F018         	goto	l8252
  5388   003006                     u10140:
  5389   003006                     
  5390                           ;DAC.c: 85:             keepState = 0;
  5391   003006  0E00               	movlw	0
  5392   003008  0100               	movlb	0	; () banked
  5393   00300A  6FDB               	movwf	runDAC@keepState& (0+255),b
  5394   00300C                     l8252:
  5395                           
  5396                           ;DAC.c: 87:         DACindex++;
  5397   00300C  0100               	movlb	0	; () banked
  5398   00300E  2BDD               	incf	runDAC@DACindex& (0+255),f,b
  5399   003010                     
  5400                           ; BSR set to: 0
  5401                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  5402   003010  0E68               	movlw	104
  5403   003012  0100               	movlb	0	; () banked
  5404   003014  6FD2               	movwf	??_runDAC& (0+255),b
  5405   003016  0EE4               	movlw	228
  5406   003018                     u10507:
  5407   003018  2EE8               	decfsz	wreg,f,c
  5408   00301A  D7FE               	bra	u10507
  5409   00301C  2FD2               	decfsz	??_runDAC& (0+255),f,b
  5410   00301E  D7FC               	bra	u10507
  5411   003020  0000               	nop	
  5412   003022                     l8256:
  5413                           
  5414                           ;DAC.c: 54:     while(keepState){
  5415   003022  0100               	movlb	0	; () banked
  5416   003024  51DB               	movf	runDAC@keepState& (0+255),w,b
  5417   003026  A4D8               	btfss	status,2,c
  5418   003028  EF18  F018         	goto	u10151
  5419   00302C  EF1A  F018         	goto	u10150
  5420   003030                     u10151:
  5421   003030  EFBD  F017         	goto	l8232
  5422   003034                     u10150:
  5423   003034                     
  5424                           ; BSR set to: 0
  5425   003034  0012               	return		;funcret
  5426   003036                     __end_of_runDAC:
  5427                           	callstack 0
  5428                           
  5429 ;; *************** function _sinf *****************
  5430 ;; Defined at:
  5431 ;;		line 27 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sinf.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;  x               4   68[BANK0 ] float 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;  ux              4   90[BANK0 ] struct .
  5436 ;;  y               4   86[BANK0 ] struct .
  5437 ;;  sign            1   81[BANK0 ] _Bool 
  5438 ;;  n               1   80[BANK0 ] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  4   68[BANK0 ] float 
  5441 ;; Registers used:
  5442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5448 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;Total ram usage:       26 bytes
  5453 ;; Hardware stack levels used: 1
  5454 ;; Hardware stack levels required when called: 4
  5455 ;; This function calls:
  5456 ;;		___cosdf
  5457 ;;		___fladd
  5458 ;;		___flneg
  5459 ;;		___rem_pio2f
  5460 ;;		___sindf
  5461 ;; This function is called by:
  5462 ;;		_runDAC
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           	psect	text17
  5467   0010A8                     __ptext17:
  5468                           	callstack 0
  5469   0010A8                     _sinf:
  5470                           	callstack 25
  5471   0010A8  C0A4  F0BA         	movff	sinf@x,sinf@ux
  5472   0010AC  C0A5  F0BB         	movff	sinf@x+1,sinf@ux+1
  5473   0010B0  C0A6  F0BC         	movff	sinf@x+2,sinf@ux+2
  5474   0010B4  C0A7  F0BD         	movff	sinf@x+3,sinf@ux+3
  5475   0010B8  0100               	movlb	0	; () banked
  5476   0010BA  BFBD               	btfsc	(sinf@ux+3)& (0+255),7,b
  5477   0010BC  EF62  F008         	goto	u9461
  5478   0010C0  EF65  F008         	goto	u9460
  5479   0010C4                     u9461:
  5480   0010C4  0E01               	movlw	1
  5481   0010C6  EF66  F008         	goto	u9470
  5482   0010CA                     u9460:
  5483   0010CA  0E00               	movlw	0
  5484   0010CC                     u9470:
  5485   0010CC  6FB1               	movwf	sinf@sign& (0+255),b
  5486   0010CE                     
  5487                           ; BSR set to: 0
  5488   0010CE  9FBD               	bcf	(sinf@ux+3)& (0+255),7,b
  5489   0010D0                     
  5490                           ; BSR set to: 0
  5491   0010D0  0EDB               	movlw	219
  5492   0010D2  5DBA               	subwf	sinf@ux& (0+255),w,b
  5493   0010D4  0E0F               	movlw	15
  5494   0010D6  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5495   0010D8  0E49               	movlw	73
  5496   0010DA  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5497   0010DC  0E3F               	movlw	63
  5498   0010DE  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5499   0010E0  B0D8               	btfsc	status,0,c
  5500   0010E2  EF75  F008         	goto	u9481
  5501   0010E6  EF77  F008         	goto	u9480
  5502   0010EA                     u9481:
  5503   0010EA  EFA0  F008         	goto	l7794
  5504   0010EE                     u9480:
  5505   0010EE                     
  5506                           ; BSR set to: 0
  5507   0010EE  0E80               	movlw	128
  5508   0010F0  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  5509   0010F2  0E39               	movlw	57
  5510   0010F4  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5511   0010F6  B0D8               	btfsc	status,0,c
  5512   0010F8  EF80  F008         	goto	u9491
  5513   0010FC  EF82  F008         	goto	u9490
  5514   001100                     u9491:
  5515   001100  EF8C  F008         	goto	l7790
  5516   001104                     u9490:
  5517   001104                     
  5518                           ; BSR set to: 0
  5519   001104  C0A4  F0A4         	movff	sinf@x,?_sinf
  5520   001108  C0A5  F0A5         	movff	sinf@x+1,?_sinf+1
  5521   00110C  C0A6  F0A6         	movff	sinf@x+2,?_sinf+2
  5522   001110  C0A7  F0A7         	movff	sinf@x+3,?_sinf+3
  5523   001114  EFD8  F00A         	goto	l1694
  5524   001118                     l7790:
  5525                           
  5526                           ; BSR set to: 0
  5527   001118  C0A4  F064         	movff	sinf@x,___sindf@x
  5528   00111C  C0A5  F065         	movff	sinf@x+1,___sindf@x+1
  5529   001120  C0A6  F066         	movff	sinf@x+2,___sindf@x+2
  5530   001124  C0A7  F067         	movff	sinf@x+3,___sindf@x+3
  5531   001128  EC1B  F018         	call	___sindf	;wreg free
  5532   00112C  C064  F0A4         	movff	?___sindf,?_sinf
  5533   001130  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5534   001134  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5535   001138  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5536   00113C  EFD8  F00A         	goto	l1694
  5537   001140                     l7794:
  5538                           
  5539                           ; BSR set to: 0
  5540   001140  0ED2               	movlw	210
  5541   001142  5DBA               	subwf	sinf@ux& (0+255),w,b
  5542   001144  0E53               	movlw	83
  5543   001146  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5544   001148  0E7B               	movlw	123
  5545   00114A  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5546   00114C  0E40               	movlw	64
  5547   00114E  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5548   001150  B0D8               	btfsc	status,0,c
  5549   001152  EFAD  F008         	goto	u9501
  5550   001156  EFAF  F008         	goto	u9500
  5551   00115A                     u9501:
  5552   00115A  EF92  F009         	goto	l7824
  5553   00115E                     u9500:
  5554   00115E                     
  5555                           ; BSR set to: 0
  5556   00115E  0EE4               	movlw	228
  5557   001160  5DBA               	subwf	sinf@ux& (0+255),w,b
  5558   001162  0ECB               	movlw	203
  5559   001164  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5560   001166  0E16               	movlw	22
  5561   001168  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5562   00116A  0E40               	movlw	64
  5563   00116C  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5564   00116E  B0D8               	btfsc	status,0,c
  5565   001170  EFBC  F008         	goto	u9511
  5566   001174  EFBE  F008         	goto	u9510
  5567   001178                     u9511:
  5568   001178  EF2C  F009         	goto	l7814
  5569   00117C                     u9510:
  5570   00117C                     
  5571                           ; BSR set to: 0
  5572   00117C  51B1               	movf	sinf@sign& (0+255),w,b
  5573   00117E  B4D8               	btfsc	status,2,c
  5574   001180  EFC4  F008         	goto	u9521
  5575   001184  EFC6  F008         	goto	u9520
  5576   001188                     u9521:
  5577   001188  EFFE  F008         	goto	l7808
  5578   00118C                     u9520:
  5579   00118C                     
  5580                           ; BSR set to: 0
  5581   00118C  0EDB               	movlw	219
  5582   00118E  6E4A               	movwf	___fladd@a^0,c
  5583   001190  0E0F               	movlw	15
  5584   001192  6E4B               	movwf	(___fladd@a+1)^0,c
  5585   001194  0EC9               	movlw	201
  5586   001196  6E4C               	movwf	(___fladd@a+2)^0,c
  5587   001198  0E3F               	movlw	63
  5588   00119A  6E4D               	movwf	(___fladd@a+3)^0,c
  5589   00119C  C0A4  F046         	movff	sinf@x,___fladd@b
  5590   0011A0  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5591   0011A4  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5592   0011A8  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5593   0011AC  ECD9  F00A         	call	___fladd	;wreg free
  5594   0011B0  C046  F0B2         	movff	?___fladd,_sinf$4529
  5595   0011B4  C047  F0B3         	movff	?___fladd+1,_sinf$4529+1
  5596   0011B8  C048  F0B4         	movff	?___fladd+2,_sinf$4529+2
  5597   0011BC  C049  F0B5         	movff	?___fladd+3,_sinf$4529+3
  5598   0011C0                     l7802:
  5599   0011C0  C0B2  F064         	movff	_sinf$4529,___cosdf@x
  5600   0011C4  C0B3  F065         	movff	_sinf$4529+1,___cosdf@x+1
  5601   0011C8  C0B4  F066         	movff	_sinf$4529+2,___cosdf@x+2
  5602   0011CC  C0B5  F067         	movff	_sinf$4529+3,___cosdf@x+3
  5603   0011D0  EC48  F01B         	call	___cosdf	;wreg free
  5604   0011D4  C064  F080         	movff	?___cosdf,___flneg@f1
  5605   0011D8  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  5606   0011DC  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  5607   0011E0  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  5608   0011E4  EC53  F028         	call	___flneg	;wreg free
  5609   0011E8  C080  F0A4         	movff	?___flneg,?_sinf
  5610   0011EC  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  5611   0011F0  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  5612   0011F4  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  5613   0011F8  EFD8  F00A         	goto	l1694
  5614   0011FC                     l7808:
  5615                           
  5616                           ; BSR set to: 0
  5617   0011FC  C0A4  F046         	movff	sinf@x,___fladd@b
  5618   001200  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5619   001204  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5620   001208  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5621   00120C  0EDB               	movlw	219
  5622   00120E  6E4A               	movwf	___fladd@a^0,c
  5623   001210  0E0F               	movlw	15
  5624   001212  6E4B               	movwf	(___fladd@a+1)^0,c
  5625   001214  0EC9               	movlw	201
  5626   001216  6E4C               	movwf	(___fladd@a+2)^0,c
  5627   001218  0EBF               	movlw	191
  5628   00121A  6E4D               	movwf	(___fladd@a+3)^0,c
  5629   00121C  ECD9  F00A         	call	___fladd	;wreg free
  5630   001220  C046  F0B2         	movff	?___fladd,_sinf$4529
  5631   001224  C047  F0B3         	movff	?___fladd+1,_sinf$4529+1
  5632   001228  C048  F0B4         	movff	?___fladd+2,_sinf$4529+2
  5633   00122C  C049  F0B5         	movff	?___fladd+3,_sinf$4529+3
  5634   001230                     l7810:
  5635   001230  C0B2  F064         	movff	_sinf$4529,___cosdf@x
  5636   001234  C0B3  F065         	movff	_sinf$4529+1,___cosdf@x+1
  5637   001238  C0B4  F066         	movff	_sinf$4529+2,___cosdf@x+2
  5638   00123C  C0B5  F067         	movff	_sinf$4529+3,___cosdf@x+3
  5639   001240  EC48  F01B         	call	___cosdf	;wreg free
  5640   001244  C064  F0A4         	movff	?___cosdf,?_sinf
  5641   001248  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  5642   00124C  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  5643   001250  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  5644   001254  EFD8  F00A         	goto	l1694
  5645   001258                     l7814:
  5646                           
  5647                           ; BSR set to: 0
  5648   001258  51B1               	movf	sinf@sign& (0+255),w,b
  5649   00125A  A4D8               	btfss	status,2,c
  5650   00125C  EF32  F009         	goto	u9531
  5651   001260  EF34  F009         	goto	u9530
  5652   001264                     u9531:
  5653   001264  EF5A  F009         	goto	l7818
  5654   001268                     u9530:
  5655   001268                     
  5656                           ; BSR set to: 0
  5657   001268  0EDB               	movlw	219
  5658   00126A  6E4A               	movwf	___fladd@a^0,c
  5659   00126C  0E0F               	movlw	15
  5660   00126E  6E4B               	movwf	(___fladd@a+1)^0,c
  5661   001270  0E49               	movlw	73
  5662   001272  6E4C               	movwf	(___fladd@a+2)^0,c
  5663   001274  0EC0               	movlw	192
  5664   001276  6E4D               	movwf	(___fladd@a+3)^0,c
  5665   001278  C0A4  F046         	movff	sinf@x,___fladd@b
  5666   00127C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5667   001280  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5668   001284  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5669   001288  ECD9  F00A         	call	___fladd	;wreg free
  5670   00128C  C046  F080         	movff	?___fladd,___flneg@f1
  5671   001290  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5672   001294  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5673   001298  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5674   00129C  EC53  F028         	call	___flneg	;wreg free
  5675   0012A0  C080  F0A8         	movff	?___flneg,_sinf$4245
  5676   0012A4  C081  F0A9         	movff	?___flneg+1,_sinf$4245+1
  5677   0012A8  C082  F0AA         	movff	?___flneg+2,_sinf$4245+2
  5678   0012AC  C083  F0AB         	movff	?___flneg+3,_sinf$4245+3
  5679   0012B0  EF7E  F009         	goto	l7820
  5680   0012B4                     l7818:
  5681                           
  5682                           ; BSR set to: 0
  5683   0012B4  0EDB               	movlw	219
  5684   0012B6  6E4A               	movwf	___fladd@a^0,c
  5685   0012B8  0E0F               	movlw	15
  5686   0012BA  6E4B               	movwf	(___fladd@a+1)^0,c
  5687   0012BC  0E49               	movlw	73
  5688   0012BE  6E4C               	movwf	(___fladd@a+2)^0,c
  5689   0012C0  0E40               	movlw	64
  5690   0012C2  6E4D               	movwf	(___fladd@a+3)^0,c
  5691   0012C4  C0A4  F046         	movff	sinf@x,___fladd@b
  5692   0012C8  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5693   0012CC  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5694   0012D0  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5695   0012D4  ECD9  F00A         	call	___fladd	;wreg free
  5696   0012D8  C046  F080         	movff	?___fladd,___flneg@f1
  5697   0012DC  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5698   0012E0  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5699   0012E4  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5700   0012E8  EC53  F028         	call	___flneg	;wreg free
  5701   0012EC  C080  F0A8         	movff	?___flneg,_sinf$4245
  5702   0012F0  C081  F0A9         	movff	?___flneg+1,_sinf$4245+1
  5703   0012F4  C082  F0AA         	movff	?___flneg+2,_sinf$4245+2
  5704   0012F8  C083  F0AB         	movff	?___flneg+3,_sinf$4245+3
  5705   0012FC                     l7820:
  5706   0012FC  C0A8  F064         	movff	_sinf$4245,___sindf@x
  5707   001300  C0A9  F065         	movff	_sinf$4245+1,___sindf@x+1
  5708   001304  C0AA  F066         	movff	_sinf$4245+2,___sindf@x+2
  5709   001308  C0AB  F067         	movff	_sinf$4245+3,___sindf@x+3
  5710   00130C  EC1B  F018         	call	___sindf	;wreg free
  5711   001310  C064  F0A4         	movff	?___sindf,?_sinf
  5712   001314  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5713   001318  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5714   00131C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5715   001320  EFD8  F00A         	goto	l1694
  5716   001324                     l7824:
  5717                           
  5718                           ; BSR set to: 0
  5719   001324  0ED6               	movlw	214
  5720   001326  5DBA               	subwf	sinf@ux& (0+255),w,b
  5721   001328  0E31               	movlw	49
  5722   00132A  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5723   00132C  0EE2               	movlw	226
  5724   00132E  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5725   001330  0E40               	movlw	64
  5726   001332  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5727   001334  B0D8               	btfsc	status,0,c
  5728   001336  EF9F  F009         	goto	u9541
  5729   00133A  EFA1  F009         	goto	u9540
  5730   00133E                     u9541:
  5731   00133E  EF42  F00A         	goto	l7854
  5732   001342                     u9540:
  5733   001342                     
  5734                           ; BSR set to: 0
  5735   001342  0EE0               	movlw	224
  5736   001344  5DBA               	subwf	sinf@ux& (0+255),w,b
  5737   001346  0EED               	movlw	237
  5738   001348  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5739   00134A  0EAF               	movlw	175
  5740   00134C  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5741   00134E  0E40               	movlw	64
  5742   001350  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5743   001352  B0D8               	btfsc	status,0,c
  5744   001354  EFAE  F009         	goto	u9551
  5745   001358  EFB0  F009         	goto	u9550
  5746   00135C                     u9551:
  5747   00135C  EFF0  F009         	goto	l7844
  5748   001360                     u9550:
  5749   001360                     
  5750                           ; BSR set to: 0
  5751   001360  51B1               	movf	sinf@sign& (0+255),w,b
  5752   001362  B4D8               	btfsc	status,2,c
  5753   001364  EFB6  F009         	goto	u9561
  5754   001368  EFB8  F009         	goto	u9560
  5755   00136C                     u9561:
  5756   00136C  EFD4  F009         	goto	l7838
  5757   001370                     u9560:
  5758   001370                     
  5759                           ; BSR set to: 0
  5760   001370  C0A4  F046         	movff	sinf@x,___fladd@b
  5761   001374  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5762   001378  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5763   00137C  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5764   001380  0EE4               	movlw	228
  5765   001382  6E4A               	movwf	___fladd@a^0,c
  5766   001384  0ECB               	movlw	203
  5767   001386  6E4B               	movwf	(___fladd@a+1)^0,c
  5768   001388  0E96               	movlw	150
  5769   00138A  6E4C               	movwf	(___fladd@a+2)^0,c
  5770   00138C  0E40               	movlw	64
  5771   00138E  6E4D               	movwf	(___fladd@a+3)^0,c
  5772   001390  ECD9  F00A         	call	___fladd	;wreg free
  5773   001394  C046  F0B2         	movff	?___fladd,_sinf$4529
  5774   001398  C047  F0B3         	movff	?___fladd+1,_sinf$4529+1
  5775   00139C  C048  F0B4         	movff	?___fladd+2,_sinf$4529+2
  5776   0013A0  C049  F0B5         	movff	?___fladd+3,_sinf$4529+3
  5777   0013A4  EF18  F009         	goto	l7810
  5778   0013A8                     l7838:
  5779                           
  5780                           ; BSR set to: 0
  5781   0013A8  0EE4               	movlw	228
  5782   0013AA  6E4A               	movwf	___fladd@a^0,c
  5783   0013AC  0ECB               	movlw	203
  5784   0013AE  6E4B               	movwf	(___fladd@a+1)^0,c
  5785   0013B0  0E96               	movlw	150
  5786   0013B2  6E4C               	movwf	(___fladd@a+2)^0,c
  5787   0013B4  0EC0               	movlw	192
  5788   0013B6  6E4D               	movwf	(___fladd@a+3)^0,c
  5789   0013B8  C0A4  F046         	movff	sinf@x,___fladd@b
  5790   0013BC  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5791   0013C0  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5792   0013C4  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5793   0013C8  ECD9  F00A         	call	___fladd	;wreg free
  5794   0013CC  C046  F0B2         	movff	?___fladd,_sinf$4529
  5795   0013D0  C047  F0B3         	movff	?___fladd+1,_sinf$4529+1
  5796   0013D4  C048  F0B4         	movff	?___fladd+2,_sinf$4529+2
  5797   0013D8  C049  F0B5         	movff	?___fladd+3,_sinf$4529+3
  5798   0013DC  EFE0  F008         	goto	l7802
  5799   0013E0                     l7844:
  5800                           
  5801                           ; BSR set to: 0
  5802   0013E0  51B1               	movf	sinf@sign& (0+255),w,b
  5803   0013E2  A4D8               	btfss	status,2,c
  5804   0013E4  EFF6  F009         	goto	u9571
  5805   0013E8  EFF8  F009         	goto	u9570
  5806   0013EC                     u9571:
  5807   0013EC  EF14  F00A         	goto	l7848
  5808   0013F0                     u9570:
  5809   0013F0                     
  5810                           ; BSR set to: 0
  5811   0013F0  C0A4  F046         	movff	sinf@x,___fladd@b
  5812   0013F4  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5813   0013F8  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5814   0013FC  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5815   001400  0EDB               	movlw	219
  5816   001402  6E4A               	movwf	___fladd@a^0,c
  5817   001404  0E0F               	movlw	15
  5818   001406  6E4B               	movwf	(___fladd@a+1)^0,c
  5819   001408  0EC9               	movlw	201
  5820   00140A  6E4C               	movwf	(___fladd@a+2)^0,c
  5821   00140C  0EC0               	movlw	192
  5822   00140E  6E4D               	movwf	(___fladd@a+3)^0,c
  5823   001410  ECD9  F00A         	call	___fladd	;wreg free
  5824   001414  C046  F0AC         	movff	?___fladd,_sinf$4246
  5825   001418  C047  F0AD         	movff	?___fladd+1,_sinf$4246+1
  5826   00141C  C048  F0AE         	movff	?___fladd+2,_sinf$4246+2
  5827   001420  C049  F0AF         	movff	?___fladd+3,_sinf$4246+3
  5828   001424  EF2E  F00A         	goto	l7850
  5829   001428                     l7848:
  5830                           
  5831                           ; BSR set to: 0
  5832   001428  C0A4  F046         	movff	sinf@x,___fladd@b
  5833   00142C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5834   001430  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5835   001434  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5836   001438  0EDB               	movlw	219
  5837   00143A  6E4A               	movwf	___fladd@a^0,c
  5838   00143C  0E0F               	movlw	15
  5839   00143E  6E4B               	movwf	(___fladd@a+1)^0,c
  5840   001440  0EC9               	movlw	201
  5841   001442  6E4C               	movwf	(___fladd@a+2)^0,c
  5842   001444  0E40               	movlw	64
  5843   001446  6E4D               	movwf	(___fladd@a+3)^0,c
  5844   001448  ECD9  F00A         	call	___fladd	;wreg free
  5845   00144C  C046  F0AC         	movff	?___fladd,_sinf$4246
  5846   001450  C047  F0AD         	movff	?___fladd+1,_sinf$4246+1
  5847   001454  C048  F0AE         	movff	?___fladd+2,_sinf$4246+2
  5848   001458  C049  F0AF         	movff	?___fladd+3,_sinf$4246+3
  5849   00145C                     l7850:
  5850   00145C  C0AC  F064         	movff	_sinf$4246,___sindf@x
  5851   001460  C0AD  F065         	movff	_sinf$4246+1,___sindf@x+1
  5852   001464  C0AE  F066         	movff	_sinf$4246+2,___sindf@x+2
  5853   001468  C0AF  F067         	movff	_sinf$4246+3,___sindf@x+3
  5854   00146C  EC1B  F018         	call	___sindf	;wreg free
  5855   001470  C064  F0A4         	movff	?___sindf,?_sinf
  5856   001474  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5857   001478  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5858   00147C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5859   001480  EFD8  F00A         	goto	l1694
  5860   001484                     l7854:
  5861                           
  5862                           ; BSR set to: 0
  5863   001484  0E80               	movlw	128
  5864   001486  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  5865   001488  0E7F               	movlw	127
  5866   00148A  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5867   00148C  A0D8               	btfss	status,0,c
  5868   00148E  EF4B  F00A         	goto	u9581
  5869   001492  EF4D  F00A         	goto	u9580
  5870   001496                     u9581:
  5871   001496  EF5F  F00A         	goto	l7862
  5872   00149A                     u9580:
  5873   00149A                     
  5874                           ; BSR set to: 0
  5875   00149A  0EFF               	movlw	255
  5876   00149C  13BA               	iorwf	sinf@ux& (0+255),f,b
  5877   00149E  0EFF               	movlw	255
  5878   0014A0  13BB               	iorwf	(sinf@ux+1)& (0+255),f,b
  5879   0014A2  0EFF               	movlw	255
  5880   0014A4  13BC               	iorwf	(sinf@ux+2)& (0+255),f,b
  5881   0014A6  0E00               	movlw	0
  5882   0014A8  13BD               	iorwf	(sinf@ux+3)& (0+255),f,b
  5883   0014AA                     
  5884                           ; BSR set to: 0
  5885   0014AA  C0BA  F0A4         	movff	sinf@ux,?_sinf
  5886   0014AE  C0BB  F0A5         	movff	sinf@ux+1,?_sinf+1
  5887   0014B2  C0BC  F0A6         	movff	sinf@ux+2,?_sinf+2
  5888   0014B6  C0BD  F0A7         	movff	sinf@ux+3,?_sinf+3
  5889   0014BA  EFD8  F00A         	goto	l1694
  5890   0014BE                     l7862:
  5891                           
  5892                           ; BSR set to: 0
  5893   0014BE  C0A4  F084         	movff	sinf@x,___rem_pio2f@x
  5894   0014C2  C0A5  F085         	movff	sinf@x+1,___rem_pio2f@x+1
  5895   0014C6  C0A6  F086         	movff	sinf@x+2,___rem_pio2f@x+2
  5896   0014CA  C0A7  F087         	movff	sinf@x+3,___rem_pio2f@x+3
  5897   0014CE  0EB6               	movlw	low sinf@y
  5898   0014D0  6F88               	movwf	___rem_pio2f@y& (0+255),b
  5899   0014D2  EC4A  F011         	call	___rem_pio2f	;wreg free
  5900   0014D6  0100               	movlb	0	; () banked
  5901   0014D8  5184               	movf	?___rem_pio2f& (0+255),w,b
  5902   0014DA  0B03               	andlw	3
  5903   0014DC  6FB0               	movwf	sinf@n& (0+255),b
  5904   0014DE  EFC9  F00A         	goto	l7880
  5905   0014E2                     l7864:
  5906                           
  5907                           ; BSR set to: 0
  5908   0014E2  C0B6  F080         	movff	sinf@y,___flneg@f1
  5909   0014E6  C0B7  F081         	movff	sinf@y+1,___flneg@f1+1
  5910   0014EA  C0B8  F082         	movff	sinf@y+2,___flneg@f1+2
  5911   0014EE  C0B9  F083         	movff	sinf@y+3,___flneg@f1+3
  5912   0014F2  EC53  F028         	call	___flneg	;wreg free
  5913   0014F6  C080  F0B6         	movff	?___flneg,sinf@y
  5914   0014FA  C081  F0B7         	movff	?___flneg+1,sinf@y+1
  5915   0014FE  C082  F0B8         	movff	?___flneg+2,sinf@y+2
  5916   001502  C083  F0B9         	movff	?___flneg+3,sinf@y+3
  5917   001506                     l7866:
  5918   001506  C0B6  F064         	movff	sinf@y,___sindf@x
  5919   00150A  C0B7  F065         	movff	sinf@y+1,___sindf@x+1
  5920   00150E  C0B8  F066         	movff	sinf@y+2,___sindf@x+2
  5921   001512  C0B9  F067         	movff	sinf@y+3,___sindf@x+3
  5922   001516  EC1B  F018         	call	___sindf	;wreg free
  5923   00151A  C064  F0A4         	movff	?___sindf,?_sinf
  5924   00151E  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5925   001522  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5926   001526  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5927   00152A  EFD8  F00A         	goto	l1694
  5928   00152E                     l7870:
  5929                           
  5930                           ; BSR set to: 0
  5931   00152E  C0B6  F064         	movff	sinf@y,___cosdf@x
  5932   001532  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  5933   001536  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  5934   00153A  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  5935   00153E  EC48  F01B         	call	___cosdf	;wreg free
  5936   001542  C064  F0A4         	movff	?___cosdf,?_sinf
  5937   001546  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  5938   00154A  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  5939   00154E  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  5940   001552  EFD8  F00A         	goto	l1694
  5941   001556                     l7874:
  5942                           
  5943                           ; BSR set to: 0
  5944   001556  C0B6  F064         	movff	sinf@y,___cosdf@x
  5945   00155A  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  5946   00155E  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  5947   001562  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  5948   001566  EC48  F01B         	call	___cosdf	;wreg free
  5949   00156A  C064  F080         	movff	?___cosdf,___flneg@f1
  5950   00156E  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  5951   001572  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  5952   001576  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  5953   00157A  EC53  F028         	call	___flneg	;wreg free
  5954   00157E  C080  F0A4         	movff	?___flneg,?_sinf
  5955   001582  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  5956   001586  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  5957   00158A  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  5958   00158E  EFD8  F00A         	goto	l1694
  5959   001592                     l7880:
  5960                           
  5961                           ; BSR set to: 0
  5962   001592  51B0               	movf	sinf@n& (0+255),w,b
  5963                           
  5964                           ; Switch size 1, requested type "simple"
  5965                           ; Number of cases is 3, Range of values is 0 to 2
  5966                           ; switch strategies available:
  5967                           ; Name         Instructions Cycles
  5968                           ; simple_byte           10     6 (average)
  5969                           ;	Chosen strategy is simple_byte
  5970   001594  0A00               	xorlw	0	; case 0
  5971   001596  B4D8               	btfsc	status,2,c
  5972   001598  EF83  F00A         	goto	l7866
  5973   00159C  0A01               	xorlw	1	; case 1
  5974   00159E  B4D8               	btfsc	status,2,c
  5975   0015A0  EF97  F00A         	goto	l7870
  5976   0015A4  0A03               	xorlw	3	; case 2
  5977   0015A6  B4D8               	btfsc	status,2,c
  5978   0015A8  EF71  F00A         	goto	l7864
  5979   0015AC  EFAB  F00A         	goto	l7874
  5980   0015B0                     l1694:
  5981   0015B0  0012               	return		;funcret
  5982   0015B2                     __end_of_sinf:
  5983                           	callstack 0
  5984                           
  5985 ;; *************** function ___sindf *****************
  5986 ;; Defined at:
  5987 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__sindf.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;  x               4    4[BANK0 ] float 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;  z               4   32[BANK0 ] float 
  5992 ;;  s               4   28[BANK0 ] float 
  5993 ;;  w               4   12[BANK0 ] float 
  5994 ;;  r               4    8[BANK0 ] float 
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  4    4[BANK0 ] float 
  5997 ;; Registers used:
  5998 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6004 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6005 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6008 ;;Total ram usage:       32 bytes
  6009 ;; Hardware stack levels used: 1
  6010 ;; Hardware stack levels required when called: 2
  6011 ;; This function calls:
  6012 ;;		___fladd
  6013 ;;		___flmul
  6014 ;; This function is called by:
  6015 ;;		_sinf
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text18
  6020   003036                     __ptext18:
  6021                           	callstack 0
  6022   003036                     ___sindf:
  6023                           	callstack 26
  6024   003036  C064  F014         	movff	___sindf@x,___flmul@b
  6025   00303A  C065  F015         	movff	___sindf@x+1,___flmul@b+1
  6026   00303E  C066  F016         	movff	___sindf@x+2,___flmul@b+2
  6027   003042  C067  F017         	movff	___sindf@x+3,___flmul@b+3
  6028   003046  C064  F018         	movff	___sindf@x,___flmul@a
  6029   00304A  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  6030   00304E  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  6031   003052  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  6032   003056  EC3A  F00D         	call	___flmul	;wreg free
  6033   00305A  C014  F080         	movff	?___flmul,___sindf@z
  6034   00305E  C015  F081         	movff	?___flmul+1,___sindf@z+1
  6035   003062  C016  F082         	movff	?___flmul+2,___sindf@z+2
  6036   003066  C017  F083         	movff	?___flmul+3,___sindf@z+3
  6037   00306A  C080  F014         	movff	___sindf@z,___flmul@b
  6038   00306E  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6039   003072  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6040   003076  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6041   00307A  C080  F018         	movff	___sindf@z,___flmul@a
  6042   00307E  C081  F019         	movff	___sindf@z+1,___flmul@a+1
  6043   003082  C082  F01A         	movff	___sindf@z+2,___flmul@a+2
  6044   003086  C083  F01B         	movff	___sindf@z+3,___flmul@a+3
  6045   00308A  EC3A  F00D         	call	___flmul	;wreg free
  6046   00308E  C014  F06C         	movff	?___flmul,___sindf@w
  6047   003092  C015  F06D         	movff	?___flmul+1,___sindf@w+1
  6048   003096  C016  F06E         	movff	?___flmul+2,___sindf@w+2
  6049   00309A  C017  F06F         	movff	?___flmul+3,___sindf@w+3
  6050   00309E  0E3C               	movlw	60
  6051   0030A0  6E18               	movwf	___flmul@a^0,c
  6052   0030A2  0E6C               	movlw	108
  6053   0030A4  6E19               	movwf	(___flmul@a+1)^0,c
  6054   0030A6  0E36               	movlw	54
  6055   0030A8  6E1A               	movwf	(___flmul@a+2)^0,c
  6056   0030AA  0E36               	movlw	54
  6057   0030AC  6E1B               	movwf	(___flmul@a+3)^0,c
  6058   0030AE  C080  F014         	movff	___sindf@z,___flmul@b
  6059   0030B2  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6060   0030B6  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6061   0030BA  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6062   0030BE  EC3A  F00D         	call	___flmul	;wreg free
  6063   0030C2  C014  F046         	movff	?___flmul,___fladd@b
  6064   0030C6  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6065   0030CA  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6066   0030CE  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6067   0030D2  0ECF               	movlw	207
  6068   0030D4  6E4A               	movwf	___fladd@a^0,c
  6069   0030D6  0E07               	movlw	7
  6070   0030D8  6E4B               	movwf	(___fladd@a+1)^0,c
  6071   0030DA  0E50               	movlw	80
  6072   0030DC  6E4C               	movwf	(___fladd@a+2)^0,c
  6073   0030DE  0EB9               	movlw	185
  6074   0030E0  6E4D               	movwf	(___fladd@a+3)^0,c
  6075   0030E2  ECD9  F00A         	call	___fladd	;wreg free
  6076   0030E6  C046  F068         	movff	?___fladd,___sindf@r
  6077   0030EA  C047  F069         	movff	?___fladd+1,___sindf@r+1
  6078   0030EE  C048  F06A         	movff	?___fladd+2,___sindf@r+2
  6079   0030F2  C049  F06B         	movff	?___fladd+3,___sindf@r+3
  6080   0030F6  C080  F014         	movff	___sindf@z,___flmul@b
  6081   0030FA  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6082   0030FE  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6083   003102  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6084   003106  C064  F018         	movff	___sindf@x,___flmul@a
  6085   00310A  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  6086   00310E  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  6087   003112  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  6088   003116  EC3A  F00D         	call	___flmul	;wreg free
  6089   00311A  C014  F07C         	movff	?___flmul,___sindf@s
  6090   00311E  C015  F07D         	movff	?___flmul+1,___sindf@s+1
  6091   003122  C016  F07E         	movff	?___flmul+2,___sindf@s+2
  6092   003126  C017  F07F         	movff	?___flmul+3,___sindf@s+3
  6093   00312A  0EAB               	movlw	171
  6094   00312C  6E4A               	movwf	___fladd@a^0,c
  6095   00312E  0EAA               	movlw	170
  6096   003130  6E4B               	movwf	(___fladd@a+1)^0,c
  6097   003132  0E2A               	movlw	42
  6098   003134  6E4C               	movwf	(___fladd@a+2)^0,c
  6099   003136  0EBE               	movlw	190
  6100   003138  6E4D               	movwf	(___fladd@a+3)^0,c
  6101   00313A  0E84               	movlw	132
  6102   00313C  6E18               	movwf	___flmul@a^0,c
  6103   00313E  0E88               	movlw	136
  6104   003140  6E19               	movwf	(___flmul@a+1)^0,c
  6105   003142  0E08               	movlw	8
  6106   003144  6E1A               	movwf	(___flmul@a+2)^0,c
  6107   003146  0E3C               	movlw	60
  6108   003148  6E1B               	movwf	(___flmul@a+3)^0,c
  6109   00314A  C080  F014         	movff	___sindf@z,___flmul@b
  6110   00314E  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6111   003152  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6112   003156  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6113   00315A  EC3A  F00D         	call	___flmul	;wreg free
  6114   00315E  C014  F046         	movff	?___flmul,___fladd@b
  6115   003162  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6116   003166  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6117   00316A  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6118   00316E  ECD9  F00A         	call	___fladd	;wreg free
  6119   003172  C046  F070         	movff	?___fladd,___sindf$4534
  6120   003176  C047  F071         	movff	?___fladd+1,___sindf$4534+1
  6121   00317A  C048  F072         	movff	?___fladd+2,___sindf$4534+2
  6122   00317E  C049  F073         	movff	?___fladd+3,___sindf$4534+3
  6123   003182  C06C  F018         	movff	___sindf@w,___flmul@a
  6124   003186  C06D  F019         	movff	___sindf@w+1,___flmul@a+1
  6125   00318A  C06E  F01A         	movff	___sindf@w+2,___flmul@a+2
  6126   00318E  C06F  F01B         	movff	___sindf@w+3,___flmul@a+3
  6127   003192  C07C  F014         	movff	___sindf@s,___flmul@b
  6128   003196  C07D  F015         	movff	___sindf@s+1,___flmul@b+1
  6129   00319A  C07E  F016         	movff	___sindf@s+2,___flmul@b+2
  6130   00319E  C07F  F017         	movff	___sindf@s+3,___flmul@b+3
  6131   0031A2  EC3A  F00D         	call	___flmul	;wreg free
  6132   0031A6  C014  F074         	movff	?___flmul,___sindf$4535
  6133   0031AA  C015  F075         	movff	?___flmul+1,___sindf$4535+1
  6134   0031AE  C016  F076         	movff	?___flmul+2,___sindf$4535+2
  6135   0031B2  C017  F077         	movff	?___flmul+3,___sindf$4535+3
  6136   0031B6  C064  F04A         	movff	___sindf@x,___fladd@a
  6137   0031BA  C065  F04B         	movff	___sindf@x+1,___fladd@a+1
  6138   0031BE  C066  F04C         	movff	___sindf@x+2,___fladd@a+2
  6139   0031C2  C067  F04D         	movff	___sindf@x+3,___fladd@a+3
  6140   0031C6  C07C  F018         	movff	___sindf@s,___flmul@a
  6141   0031CA  C07D  F019         	movff	___sindf@s+1,___flmul@a+1
  6142   0031CE  C07E  F01A         	movff	___sindf@s+2,___flmul@a+2
  6143   0031D2  C07F  F01B         	movff	___sindf@s+3,___flmul@a+3
  6144   0031D6  C070  F014         	movff	___sindf$4534,___flmul@b
  6145   0031DA  C071  F015         	movff	___sindf$4534+1,___flmul@b+1
  6146   0031DE  C072  F016         	movff	___sindf$4534+2,___flmul@b+2
  6147   0031E2  C073  F017         	movff	___sindf$4534+3,___flmul@b+3
  6148   0031E6  EC3A  F00D         	call	___flmul	;wreg free
  6149   0031EA  C014  F046         	movff	?___flmul,___fladd@b
  6150   0031EE  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6151   0031F2  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6152   0031F6  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6153   0031FA  ECD9  F00A         	call	___fladd	;wreg free
  6154   0031FE  C046  F078         	movff	?___fladd,___sindf$4536
  6155   003202  C047  F079         	movff	?___fladd+1,___sindf$4536+1
  6156   003206  C048  F07A         	movff	?___fladd+2,___sindf$4536+2
  6157   00320A  C049  F07B         	movff	?___fladd+3,___sindf$4536+3
  6158   00320E  C078  F046         	movff	___sindf$4536,___fladd@b
  6159   003212  C079  F047         	movff	___sindf$4536+1,___fladd@b+1
  6160   003216  C07A  F048         	movff	___sindf$4536+2,___fladd@b+2
  6161   00321A  C07B  F049         	movff	___sindf$4536+3,___fladd@b+3
  6162   00321E  C068  F018         	movff	___sindf@r,___flmul@a
  6163   003222  C069  F019         	movff	___sindf@r+1,___flmul@a+1
  6164   003226  C06A  F01A         	movff	___sindf@r+2,___flmul@a+2
  6165   00322A  C06B  F01B         	movff	___sindf@r+3,___flmul@a+3
  6166   00322E  C074  F014         	movff	___sindf$4535,___flmul@b
  6167   003232  C075  F015         	movff	___sindf$4535+1,___flmul@b+1
  6168   003236  C076  F016         	movff	___sindf$4535+2,___flmul@b+2
  6169   00323A  C077  F017         	movff	___sindf$4535+3,___flmul@b+3
  6170   00323E  EC3A  F00D         	call	___flmul	;wreg free
  6171   003242  C014  F04A         	movff	?___flmul,___fladd@a
  6172   003246  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6173   00324A  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6174   00324E  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6175   003252  ECD9  F00A         	call	___fladd	;wreg free
  6176   003256  C046  F064         	movff	?___fladd,?___sindf
  6177   00325A  C047  F065         	movff	?___fladd+1,?___sindf+1
  6178   00325E  C048  F066         	movff	?___fladd+2,?___sindf+2
  6179   003262  C049  F067         	movff	?___fladd+3,?___sindf+3
  6180   003266  0012               	return		;funcret
  6181   003268                     __end_of___sindf:
  6182                           	callstack 0
  6183                           
  6184 ;; *************** function ___rem_pio2f *****************
  6185 ;; Defined at:
  6186 ;;		line 44 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__rem_pio2f.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;  x               4   36[BANK0 ] float 
  6189 ;;  y               1   40[BANK0 ] PTR 
  6190 ;;		 -> sinf@y(4), 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  n               4   64[BANK0 ] long 
  6193 ;;  t               4   60[BANK0 ] float 
  6194 ;;  fn              4   56[BANK0 ] float 
  6195 ;;  ux              4   52[BANK0 ] struct .
  6196 ;;  ty              4   43[BANK0 ] [1]
  6197 ;;  sign            1   51[BANK0 ] _Bool 
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  2   36[BANK0 ] int 
  6200 ;; Registers used:
  6201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6207 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6209 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6210 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6211 ;;Total ram usage:       32 bytes
  6212 ;; Hardware stack levels used: 1
  6213 ;; Hardware stack levels required when called: 3
  6214 ;; This function calls:
  6215 ;;		___fladd
  6216 ;;		___flmul
  6217 ;;		___flneg
  6218 ;;		___flsub
  6219 ;;		___fltol
  6220 ;;		___xxtofl
  6221 ;;		_fabsf
  6222 ;; This function is called by:
  6223 ;;		_sinf
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text19
  6228   002294                     __ptext19:
  6229                           	callstack 0
  6230   002294                     ___rem_pio2f:
  6231                           	callstack 25
  6232   002294  C115  F094         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  6233   002298  C116  F095         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  6234   00229C  C117  F096         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  6235   0022A0  C118  F097         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  6236   0022A4  C084  F094         	movff	___rem_pio2f@x,___rem_pio2f@ux
  6237   0022A8  C085  F095         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  6238   0022AC  C086  F096         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  6239   0022B0  C087  F097         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  6240   0022B4  0100               	movlb	0	; () banked
  6241   0022B6  BF97               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  6242   0022B8  EF60  F011         	goto	u9311
  6243   0022BC  EF63  F011         	goto	u9310
  6244   0022C0                     u9311:
  6245   0022C0  0E01               	movlw	1
  6246   0022C2  EF64  F011         	goto	u9320
  6247   0022C6                     u9310:
  6248   0022C6  0E00               	movlw	0
  6249   0022C8                     u9320:
  6250   0022C8  6F93               	movwf	___rem_pio2f@sign& (0+255),b
  6251   0022CA                     
  6252                           ; BSR set to: 0
  6253   0022CA  9F97               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  6254   0022CC                     
  6255                           ; BSR set to: 0
  6256   0022CC  0EDB               	movlw	219
  6257   0022CE  5D94               	subwf	___rem_pio2f@ux& (0+255),w,b
  6258   0022D0  0E0F               	movlw	15
  6259   0022D2  5995               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  6260   0022D4  0EC9               	movlw	201
  6261   0022D6  5996               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  6262   0022D8  0E4D               	movlw	77
  6263   0022DA  5997               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  6264   0022DC  B0D8               	btfsc	status,0,c
  6265   0022DE  EF73  F011         	goto	u9331
  6266   0022E2  EF75  F011         	goto	u9330
  6267   0022E6                     u9331:
  6268   0022E6  EF61  F012         	goto	l7720
  6269   0022EA                     u9330:
  6270   0022EA                     
  6271                           ; BSR set to: 0
  6272   0022EA  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  6273   0022EE  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  6274   0022F2  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  6275   0022F6  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  6276   0022FA  ECC2  F028         	call	_fabsf	;wreg free
  6277   0022FE  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  6278   002302  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  6279   002306  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  6280   00230A  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  6281   00230E  0E00               	movlw	0
  6282   002310  6E4A               	movwf	___fladd@a^0,c
  6283   002312  0E00               	movlw	0
  6284   002314  6E4B               	movwf	(___fladd@a+1)^0,c
  6285   002316  0E00               	movlw	0
  6286   002318  6E4C               	movwf	(___fladd@a+2)^0,c
  6287   00231A  0E3F               	movlw	63
  6288   00231C  6E4D               	movwf	(___fladd@a+3)^0,c
  6289   00231E  0E83               	movlw	131
  6290   002320  6E18               	movwf	___flmul@a^0,c
  6291   002322  0EF9               	movlw	249
  6292   002324  6E19               	movwf	(___flmul@a+1)^0,c
  6293   002326  0E22               	movlw	34
  6294   002328  6E1A               	movwf	(___flmul@a+2)^0,c
  6295   00232A  0E3F               	movlw	63
  6296   00232C  6E1B               	movwf	(___flmul@a+3)^0,c
  6297   00232E  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  6298   002332  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  6299   002336  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  6300   00233A  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  6301   00233E  EC3A  F00D         	call	___flmul	;wreg free
  6302   002342  C014  F046         	movff	?___flmul,___fladd@b
  6303   002346  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6304   00234A  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6305   00234E  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6306   002352  ECD9  F00A         	call	___fladd	;wreg free
  6307   002356  C046  F064         	movff	?___fladd,___fltol@f1
  6308   00235A  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  6309   00235E  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  6310   002362  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  6311   002366  EC46  F021         	call	___fltol	;wreg free
  6312   00236A  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  6313   00236E  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  6314   002372  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  6315   002376  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  6316   00237A  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  6317   00237E  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  6318   002382  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  6319   002386  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  6320   00238A  0E01               	movlw	1
  6321   00238C  EC47  F01C         	call	___xxtofl
  6322   002390  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  6323   002394  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  6324   002398  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  6325   00239C  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  6326   0023A0  0EDA               	movlw	218
  6327   0023A2  6E18               	movwf	___flmul@a^0,c
  6328   0023A4  0E0F               	movlw	15
  6329   0023A6  6E19               	movwf	(___flmul@a+1)^0,c
  6330   0023A8  0EC9               	movlw	201
  6331   0023AA  6E1A               	movwf	(___flmul@a+2)^0,c
  6332   0023AC  0E3F               	movlw	63
  6333   0023AE  6E1B               	movwf	(___flmul@a+3)^0,c
  6334   0023B0  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6335   0023B4  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6336   0023B8  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6337   0023BC  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6338   0023C0  EC3A  F00D         	call	___flmul	;wreg free
  6339   0023C4  C014  F068         	movff	?___flmul,___flsub@a
  6340   0023C8  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6341   0023CC  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6342   0023D0  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6343   0023D4  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  6344   0023D8  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  6345   0023DC  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  6346   0023E0  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  6347   0023E4  ECCB  F027         	call	___flsub	;wreg free
  6348   0023E8  C064  F08F         	movff	?___flsub,___rem_pio2f$4533
  6349   0023EC  C065  F090         	movff	?___flsub+1,___rem_pio2f$4533+1
  6350   0023F0  C066  F091         	movff	?___flsub+2,___rem_pio2f$4533+2
  6351   0023F4  C067  F092         	movff	?___flsub+3,___rem_pio2f$4533+3
  6352   0023F8  C08F  F064         	movff	___rem_pio2f$4533,___flsub@b
  6353   0023FC  C090  F065         	movff	___rem_pio2f$4533+1,___flsub@b+1
  6354   002400  C091  F066         	movff	___rem_pio2f$4533+2,___flsub@b+2
  6355   002404  C092  F067         	movff	___rem_pio2f$4533+3,___flsub@b+3
  6356   002408  0EA3               	movlw	163
  6357   00240A  6E18               	movwf	___flmul@a^0,c
  6358   00240C  0E85               	movlw	133
  6359   00240E  6E19               	movwf	(___flmul@a+1)^0,c
  6360   002410  0E88               	movlw	136
  6361   002412  6E1A               	movwf	(___flmul@a+2)^0,c
  6362   002414  0E32               	movlw	50
  6363   002416  6E1B               	movwf	(___flmul@a+3)^0,c
  6364   002418  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6365   00241C  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6366   002420  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6367   002424  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6368   002428  EC3A  F00D         	call	___flmul	;wreg free
  6369   00242C  C014  F068         	movff	?___flmul,___flsub@a
  6370   002430  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6371   002434  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6372   002438  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6373   00243C  ECCB  F027         	call	___flsub	;wreg free
  6374   002440  0100               	movlb	0	; () banked
  6375   002442  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6376   002444  6ED9               	movwf	fsr2l,c
  6377   002446  6ADA               	clrf	fsr2h,c
  6378   002448  C064  FFDE         	movff	?___flsub,postinc2
  6379   00244C  C065  FFDE         	movff	?___flsub+1,postinc2
  6380   002450  C066  FFDE         	movff	?___flsub+2,postinc2
  6381   002454  C067  FFDE         	movff	?___flsub+3,postinc2
  6382   002458                     
  6383                           ; BSR set to: 0
  6384   002458  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  6385   00245A  B4D8               	btfsc	status,2,c
  6386   00245C  EF32  F012         	goto	u9341
  6387   002460  EF34  F012         	goto	u9340
  6388   002464                     u9341:
  6389   002464  EF5B  F012         	goto	l1744
  6390   002468                     u9340:
  6391   002468                     l7714:
  6392                           
  6393                           ; BSR set to: 0
  6394   002468  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6395   00246A  6ED9               	movwf	fsr2l,c
  6396   00246C  6ADA               	clrf	fsr2h,c
  6397   00246E  CFDE F080          	movff	postinc2,___flneg@f1
  6398   002472  CFDE F081          	movff	postinc2,___flneg@f1+1
  6399   002476  CFDE F082          	movff	postinc2,___flneg@f1+2
  6400   00247A  CFDE F083          	movff	postinc2,___flneg@f1+3
  6401   00247E  EC53  F028         	call	___flneg	;wreg free
  6402   002482  0100               	movlb	0	; () banked
  6403   002484  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6404   002486  6ED9               	movwf	fsr2l,c
  6405   002488  6ADA               	clrf	fsr2h,c
  6406   00248A  C080  FFDE         	movff	?___flneg,postinc2
  6407   00248E  C081  FFDE         	movff	?___flneg+1,postinc2
  6408   002492  C082  FFDE         	movff	?___flneg+2,postinc2
  6409   002496  C083  FFDE         	movff	?___flneg+3,postinc2
  6410   00249A                     
  6411                           ; BSR set to: 0
  6412   00249A  C0A0  F089         	movff	___rem_pio2f@n,??___rem_pio2f
  6413   00249E  C0A1  F08A         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  6414   0024A2  1F89               	comf	??___rem_pio2f& (0+255),f,b
  6415   0024A4  1F8A               	comf	(??___rem_pio2f+1)& (0+255),f,b
  6416   0024A6  4B89               	infsnz	??___rem_pio2f& (0+255),f,b
  6417   0024A8  2B8A               	incf	(??___rem_pio2f+1)& (0+255),f,b
  6418   0024AA  C089  F084         	movff	??___rem_pio2f,?___rem_pio2f
  6419   0024AE  C08A  F085         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  6420   0024B2  EF2A  F013         	goto	l1745
  6421   0024B6                     l1744:
  6422                           
  6423                           ; BSR set to: 0
  6424   0024B6  C0A0  F084         	movff	___rem_pio2f@n,?___rem_pio2f
  6425   0024BA  C0A1  F085         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  6426   0024BE  EF2A  F013         	goto	l1745
  6427   0024C2                     l7720:
  6428                           
  6429                           ; BSR set to: 0
  6430   0024C2  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  6431   0024C6  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  6432   0024CA  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  6433   0024CE  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  6434   0024D2  ECC2  F028         	call	_fabsf	;wreg free
  6435   0024D6  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  6436   0024DA  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  6437   0024DE  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  6438   0024E2  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  6439   0024E6  0E00               	movlw	0
  6440   0024E8  6E4A               	movwf	___fladd@a^0,c
  6441   0024EA  0E00               	movlw	0
  6442   0024EC  6E4B               	movwf	(___fladd@a+1)^0,c
  6443   0024EE  0E00               	movlw	0
  6444   0024F0  6E4C               	movwf	(___fladd@a+2)^0,c
  6445   0024F2  0E3F               	movlw	63
  6446   0024F4  6E4D               	movwf	(___fladd@a+3)^0,c
  6447   0024F6  0E83               	movlw	131
  6448   0024F8  6E18               	movwf	___flmul@a^0,c
  6449   0024FA  0EF9               	movlw	249
  6450   0024FC  6E19               	movwf	(___flmul@a+1)^0,c
  6451   0024FE  0E22               	movlw	34
  6452   002500  6E1A               	movwf	(___flmul@a+2)^0,c
  6453   002502  0E3F               	movlw	63
  6454   002504  6E1B               	movwf	(___flmul@a+3)^0,c
  6455   002506  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  6456   00250A  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  6457   00250E  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  6458   002512  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  6459   002516  EC3A  F00D         	call	___flmul	;wreg free
  6460   00251A  C014  F046         	movff	?___flmul,___fladd@b
  6461   00251E  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6462   002522  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6463   002526  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6464   00252A  ECD9  F00A         	call	___fladd	;wreg free
  6465   00252E  C046  F064         	movff	?___fladd,___fltol@f1
  6466   002532  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  6467   002536  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  6468   00253A  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  6469   00253E  EC46  F021         	call	___fltol	;wreg free
  6470   002542  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  6471   002546  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  6472   00254A  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  6473   00254E  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  6474   002552  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  6475   002556  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  6476   00255A  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  6477   00255E  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  6478   002562  0E01               	movlw	1
  6479   002564  EC47  F01C         	call	___xxtofl
  6480   002568  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  6481   00256C  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  6482   002570  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  6483   002574  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  6484   002578  0EDA               	movlw	218
  6485   00257A  6E18               	movwf	___flmul@a^0,c
  6486   00257C  0E0F               	movlw	15
  6487   00257E  6E19               	movwf	(___flmul@a+1)^0,c
  6488   002580  0EC9               	movlw	201
  6489   002582  6E1A               	movwf	(___flmul@a+2)^0,c
  6490   002584  0E3F               	movlw	63
  6491   002586  6E1B               	movwf	(___flmul@a+3)^0,c
  6492   002588  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6493   00258C  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6494   002590  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6495   002594  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6496   002598  EC3A  F00D         	call	___flmul	;wreg free
  6497   00259C  C014  F068         	movff	?___flmul,___flsub@a
  6498   0025A0  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6499   0025A4  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6500   0025A8  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6501   0025AC  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  6502   0025B0  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  6503   0025B4  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  6504   0025B8  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  6505   0025BC  ECCB  F027         	call	___flsub	;wreg free
  6506   0025C0  C064  F08F         	movff	?___flsub,___rem_pio2f$4533
  6507   0025C4  C065  F090         	movff	?___flsub+1,___rem_pio2f$4533+1
  6508   0025C8  C066  F091         	movff	?___flsub+2,___rem_pio2f$4533+2
  6509   0025CC  C067  F092         	movff	?___flsub+3,___rem_pio2f$4533+3
  6510   0025D0  C08F  F064         	movff	___rem_pio2f$4533,___flsub@b
  6511   0025D4  C090  F065         	movff	___rem_pio2f$4533+1,___flsub@b+1
  6512   0025D8  C091  F066         	movff	___rem_pio2f$4533+2,___flsub@b+2
  6513   0025DC  C092  F067         	movff	___rem_pio2f$4533+3,___flsub@b+3
  6514   0025E0  0EA3               	movlw	163
  6515   0025E2  6E18               	movwf	___flmul@a^0,c
  6516   0025E4  0E85               	movlw	133
  6517   0025E6  6E19               	movwf	(___flmul@a+1)^0,c
  6518   0025E8  0E88               	movlw	136
  6519   0025EA  6E1A               	movwf	(___flmul@a+2)^0,c
  6520   0025EC  0E32               	movlw	50
  6521   0025EE  6E1B               	movwf	(___flmul@a+3)^0,c
  6522   0025F0  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6523   0025F4  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6524   0025F8  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6525   0025FC  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6526   002600  EC3A  F00D         	call	___flmul	;wreg free
  6527   002604  C014  F068         	movff	?___flmul,___flsub@a
  6528   002608  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6529   00260C  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6530   002610  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6531   002614  ECCB  F027         	call	___flsub	;wreg free
  6532   002618  C064  F08B         	movff	?___flsub,___rem_pio2f@ty
  6533   00261C  C065  F08C         	movff	?___flsub+1,___rem_pio2f@ty+1
  6534   002620  C066  F08D         	movff	?___flsub+2,___rem_pio2f@ty+2
  6535   002624  C067  F08E         	movff	?___flsub+3,___rem_pio2f@ty+3
  6536   002628  0100               	movlb	0	; () banked
  6537   00262A  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6538   00262C  6ED9               	movwf	fsr2l,c
  6539   00262E  6ADA               	clrf	fsr2h,c
  6540   002630  C08B  FFDE         	movff	___rem_pio2f@ty,postinc2
  6541   002634  C08C  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  6542   002638  C08D  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  6543   00263C  C08E  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  6544   002640                     
  6545                           ; BSR set to: 0
  6546   002640  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  6547   002642  B4D8               	btfsc	status,2,c
  6548   002644  EF26  F013         	goto	u9351
  6549   002648  EF28  F013         	goto	u9350
  6550   00264C                     u9351:
  6551   00264C  EF5B  F012         	goto	l1744
  6552   002650                     u9350:
  6553   002650  EF34  F012         	goto	l7714
  6554   002654                     l1745:
  6555                           
  6556                           ; BSR set to: 0
  6557   002654  0012               	return		;funcret
  6558   002656                     __end_of___rem_pio2f:
  6559                           	callstack 0
  6560                           
  6561 ;; *************** function _fabsf *****************
  6562 ;; Defined at:
  6563 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fabsf.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  x               4    5[COMRAM] float 
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;  u               4    9[COMRAM] struct .
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  4    5[COMRAM] float 
  6570 ;; Registers used:
  6571 ;;		status,2, status,0
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6580 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6581 ;;Total ram usage:        8 bytes
  6582 ;; Hardware stack levels used: 1
  6583 ;; Hardware stack levels required when called: 1
  6584 ;; This function calls:
  6585 ;;		Nothing
  6586 ;; This function is called by:
  6587 ;;		___rem_pio2f
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text20
  6592   005184                     __ptext20:
  6593                           	callstack 0
  6594   005184                     _fabsf:
  6595                           	callstack 26
  6596   005184  C111  F00A         	movff	fabsf@F465,fabsf@u
  6597   005188  C112  F00B         	movff	fabsf@F465+1,fabsf@u+1
  6598   00518C  C113  F00C         	movff	fabsf@F465+2,fabsf@u+2
  6599   005190  C114  F00D         	movff	fabsf@F465+3,fabsf@u+3
  6600   005194  C006  F00A         	movff	fabsf@x,fabsf@u
  6601   005198  C007  F00B         	movff	fabsf@x+1,fabsf@u+1
  6602   00519C  C008  F00C         	movff	fabsf@x+2,fabsf@u+2
  6603   0051A0  C009  F00D         	movff	fabsf@x+3,fabsf@u+3
  6604   0051A4  9E0D               	bcf	(fabsf@u+3)^0,7,c
  6605   0051A6  C00A  F006         	movff	fabsf@u,?_fabsf
  6606   0051AA  C00B  F007         	movff	fabsf@u+1,?_fabsf+1
  6607   0051AE  C00C  F008         	movff	fabsf@u+2,?_fabsf+2
  6608   0051B2  C00D  F009         	movff	fabsf@u+3,?_fabsf+3
  6609   0051B6  0012               	return		;funcret
  6610   0051B8                     __end_of_fabsf:
  6611                           	callstack 0
  6612                           
  6613 ;; *************** function ___cosdf *****************
  6614 ;; Defined at:
  6615 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__cosdf.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;  x               4    4[BANK0 ] float 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;  z               4   28[BANK0 ] float 
  6620 ;;  w               4   24[BANK0 ] float 
  6621 ;;  r               4    8[BANK0 ] float 
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  4    4[BANK0 ] float 
  6624 ;; Registers used:
  6625 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6631 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6632 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6634 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6635 ;;Total ram usage:       28 bytes
  6636 ;; Hardware stack levels used: 1
  6637 ;; Hardware stack levels required when called: 2
  6638 ;; This function calls:
  6639 ;;		___fladd
  6640 ;;		___flmul
  6641 ;; This function is called by:
  6642 ;;		_sinf
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           	psect	text21
  6647   003690                     __ptext21:
  6648                           	callstack 0
  6649   003690                     ___cosdf:
  6650                           	callstack 26
  6651   003690  C064  F014         	movff	___cosdf@x,___flmul@b
  6652   003694  C065  F015         	movff	___cosdf@x+1,___flmul@b+1
  6653   003698  C066  F016         	movff	___cosdf@x+2,___flmul@b+2
  6654   00369C  C067  F017         	movff	___cosdf@x+3,___flmul@b+3
  6655   0036A0  C064  F018         	movff	___cosdf@x,___flmul@a
  6656   0036A4  C065  F019         	movff	___cosdf@x+1,___flmul@a+1
  6657   0036A8  C066  F01A         	movff	___cosdf@x+2,___flmul@a+2
  6658   0036AC  C067  F01B         	movff	___cosdf@x+3,___flmul@a+3
  6659   0036B0  EC3A  F00D         	call	___flmul	;wreg free
  6660   0036B4  C014  F07C         	movff	?___flmul,___cosdf@z
  6661   0036B8  C015  F07D         	movff	?___flmul+1,___cosdf@z+1
  6662   0036BC  C016  F07E         	movff	?___flmul+2,___cosdf@z+2
  6663   0036C0  C017  F07F         	movff	?___flmul+3,___cosdf@z+3
  6664   0036C4  C07C  F014         	movff	___cosdf@z,___flmul@b
  6665   0036C8  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6666   0036CC  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6667   0036D0  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6668   0036D4  C07C  F018         	movff	___cosdf@z,___flmul@a
  6669   0036D8  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6670   0036DC  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6671   0036E0  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6672   0036E4  EC3A  F00D         	call	___flmul	;wreg free
  6673   0036E8  C014  F078         	movff	?___flmul,___cosdf@w
  6674   0036EC  C015  F079         	movff	?___flmul+1,___cosdf@w+1
  6675   0036F0  C016  F07A         	movff	?___flmul+2,___cosdf@w+2
  6676   0036F4  C017  F07B         	movff	?___flmul+3,___cosdf@w+3
  6677   0036F8  0E17               	movlw	23
  6678   0036FA  6E18               	movwf	___flmul@a^0,c
  6679   0036FC  0E9A               	movlw	154
  6680   0036FE  6E19               	movwf	(___flmul@a+1)^0,c
  6681   003700  0ECC               	movlw	204
  6682   003702  6E1A               	movwf	(___flmul@a+2)^0,c
  6683   003704  0E37               	movlw	55
  6684   003706  6E1B               	movwf	(___flmul@a+3)^0,c
  6685   003708  C07C  F014         	movff	___cosdf@z,___flmul@b
  6686   00370C  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6687   003710  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6688   003714  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6689   003718  EC3A  F00D         	call	___flmul	;wreg free
  6690   00371C  C014  F046         	movff	?___flmul,___fladd@b
  6691   003720  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6692   003724  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6693   003728  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6694   00372C  0E3F               	movlw	63
  6695   00372E  6E4A               	movwf	___fladd@a^0,c
  6696   003730  0E04               	movlw	4
  6697   003732  6E4B               	movwf	(___fladd@a+1)^0,c
  6698   003734  0EB6               	movlw	182
  6699   003736  6E4C               	movwf	(___fladd@a+2)^0,c
  6700   003738  0EBA               	movlw	186
  6701   00373A  6E4D               	movwf	(___fladd@a+3)^0,c
  6702   00373C  ECD9  F00A         	call	___fladd	;wreg free
  6703   003740  C046  F068         	movff	?___fladd,___cosdf@r
  6704   003744  C047  F069         	movff	?___fladd+1,___cosdf@r+1
  6705   003748  C048  F06A         	movff	?___fladd+2,___cosdf@r+2
  6706   00374C  C049  F06B         	movff	?___fladd+3,___cosdf@r+3
  6707   003750  0E00               	movlw	0
  6708   003752  6E4A               	movwf	___fladd@a^0,c
  6709   003754  0E00               	movlw	0
  6710   003756  6E4B               	movwf	(___fladd@a+1)^0,c
  6711   003758  0E80               	movlw	128
  6712   00375A  6E4C               	movwf	(___fladd@a+2)^0,c
  6713   00375C  0E3F               	movlw	63
  6714   00375E  6E4D               	movwf	(___fladd@a+3)^0,c
  6715   003760  0E00               	movlw	0
  6716   003762  6E18               	movwf	___flmul@a^0,c
  6717   003764  0E00               	movlw	0
  6718   003766  6E19               	movwf	(___flmul@a+1)^0,c
  6719   003768  0E00               	movlw	0
  6720   00376A  6E1A               	movwf	(___flmul@a+2)^0,c
  6721   00376C  0EBF               	movlw	191
  6722   00376E  6E1B               	movwf	(___flmul@a+3)^0,c
  6723   003770  C07C  F014         	movff	___cosdf@z,___flmul@b
  6724   003774  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6725   003778  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6726   00377C  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6727   003780  EC3A  F00D         	call	___flmul	;wreg free
  6728   003784  C014  F046         	movff	?___flmul,___fladd@b
  6729   003788  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6730   00378C  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6731   003790  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6732   003794  ECD9  F00A         	call	___fladd	;wreg free
  6733   003798  C046  F06C         	movff	?___fladd,___cosdf$4530
  6734   00379C  C047  F06D         	movff	?___fladd+1,___cosdf$4530+1
  6735   0037A0  C048  F06E         	movff	?___fladd+2,___cosdf$4530+2
  6736   0037A4  C049  F06F         	movff	?___fladd+3,___cosdf$4530+3
  6737   0037A8  C07C  F018         	movff	___cosdf@z,___flmul@a
  6738   0037AC  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6739   0037B0  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6740   0037B4  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6741   0037B8  C078  F014         	movff	___cosdf@w,___flmul@b
  6742   0037BC  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6743   0037C0  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6744   0037C4  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6745   0037C8  EC3A  F00D         	call	___flmul	;wreg free
  6746   0037CC  C014  F070         	movff	?___flmul,___cosdf$4531
  6747   0037D0  C015  F071         	movff	?___flmul+1,___cosdf$4531+1
  6748   0037D4  C016  F072         	movff	?___flmul+2,___cosdf$4531+2
  6749   0037D8  C017  F073         	movff	?___flmul+3,___cosdf$4531+3
  6750   0037DC  0E9F               	movlw	159
  6751   0037DE  6E18               	movwf	___flmul@a^0,c
  6752   0037E0  0EAA               	movlw	170
  6753   0037E2  6E19               	movwf	(___flmul@a+1)^0,c
  6754   0037E4  0E2A               	movlw	42
  6755   0037E6  6E1A               	movwf	(___flmul@a+2)^0,c
  6756   0037E8  0E3D               	movlw	61
  6757   0037EA  6E1B               	movwf	(___flmul@a+3)^0,c
  6758   0037EC  C078  F014         	movff	___cosdf@w,___flmul@b
  6759   0037F0  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6760   0037F4  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6761   0037F8  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6762   0037FC  EC3A  F00D         	call	___flmul	;wreg free
  6763   003800  C014  F04A         	movff	?___flmul,___fladd@a
  6764   003804  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6765   003808  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6766   00380C  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6767   003810  C06C  F046         	movff	___cosdf$4530,___fladd@b
  6768   003814  C06D  F047         	movff	___cosdf$4530+1,___fladd@b+1
  6769   003818  C06E  F048         	movff	___cosdf$4530+2,___fladd@b+2
  6770   00381C  C06F  F049         	movff	___cosdf$4530+3,___fladd@b+3
  6771   003820  ECD9  F00A         	call	___fladd	;wreg free
  6772   003824  C046  F074         	movff	?___fladd,___cosdf$4532
  6773   003828  C047  F075         	movff	?___fladd+1,___cosdf$4532+1
  6774   00382C  C048  F076         	movff	?___fladd+2,___cosdf$4532+2
  6775   003830  C049  F077         	movff	?___fladd+3,___cosdf$4532+3
  6776   003834  C074  F046         	movff	___cosdf$4532,___fladd@b
  6777   003838  C075  F047         	movff	___cosdf$4532+1,___fladd@b+1
  6778   00383C  C076  F048         	movff	___cosdf$4532+2,___fladd@b+2
  6779   003840  C077  F049         	movff	___cosdf$4532+3,___fladd@b+3
  6780   003844  C068  F018         	movff	___cosdf@r,___flmul@a
  6781   003848  C069  F019         	movff	___cosdf@r+1,___flmul@a+1
  6782   00384C  C06A  F01A         	movff	___cosdf@r+2,___flmul@a+2
  6783   003850  C06B  F01B         	movff	___cosdf@r+3,___flmul@a+3
  6784   003854  C070  F014         	movff	___cosdf$4531,___flmul@b
  6785   003858  C071  F015         	movff	___cosdf$4531+1,___flmul@b+1
  6786   00385C  C072  F016         	movff	___cosdf$4531+2,___flmul@b+2
  6787   003860  C073  F017         	movff	___cosdf$4531+3,___flmul@b+3
  6788   003864  EC3A  F00D         	call	___flmul	;wreg free
  6789   003868  C014  F04A         	movff	?___flmul,___fladd@a
  6790   00386C  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6791   003870  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6792   003874  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6793   003878  ECD9  F00A         	call	___fladd	;wreg free
  6794   00387C  C046  F064         	movff	?___fladd,?___cosdf
  6795   003880  C047  F065         	movff	?___fladd+1,?___cosdf+1
  6796   003884  C048  F066         	movff	?___fladd+2,?___cosdf+2
  6797   003888  C049  F067         	movff	?___fladd+3,?___cosdf+3
  6798   00388C  0012               	return		;funcret
  6799   00388E                     __end_of___cosdf:
  6800                           	callstack 0
  6801                           
  6802 ;; *************** function _printf *****************
  6803 ;; Defined at:
  6804 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\printf.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  6807 ;;		 -> STR_30(5), STR_18(5), 
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;  ret             2    0        int 
  6810 ;;  ap              1   83[COMRAM] PTR void [1]
  6811 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  2  110[BANK0 ] int 
  6814 ;; Registers used:
  6815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6821 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6824 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6825 ;;Total ram usage:        5 bytes
  6826 ;; Hardware stack levels used: 1
  6827 ;; Hardware stack levels required when called: 8
  6828 ;; This function calls:
  6829 ;;		_vfprintf
  6830 ;; This function is called by:
  6831 ;;		_runDAC
  6832 ;;		_runUART
  6833 ;; This function uses a non-reentrant model
  6834 ;;
  6835                           
  6836                           	psect	text22
  6837   005260                     __ptext22:
  6838                           	callstack 0
  6839   005260                     _printf:
  6840                           	callstack 21
  6841   005260  0ED0               	movlw	low (?_printf+2)
  6842   005262  6E54               	movwf	printf@ap^0,c
  6843   005264  0E00               	movlw	0
  6844   005266  0100               	movlb	0	; () banked
  6845   005268  6FC7               	movwf	vfprintf@fp& (0+255),b
  6846   00526A  0E00               	movlw	0
  6847   00526C  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6848   00526E  C0CE  F0C9         	movff	printf@fmt,vfprintf@fmt
  6849   005272  C0CF  F0CA         	movff	printf@fmt+1,vfprintf@fmt+1
  6850   005276  0E54               	movlw	low printf@ap
  6851   005278  6FCB               	movwf	vfprintf@ap& (0+255),b
  6852   00527A  ECA6  F027         	call	_vfprintf	;wreg free
  6853   00527E  0012               	return		;funcret
  6854   005280                     __end_of_printf:
  6855                           	callstack 0
  6856                           
  6857 ;; *************** function _SPI_write *****************
  6858 ;; Defined at:
  6859 ;;		line 93 in file "DAC.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  data            1    wreg     unsigned char 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;  data            1    7[COMRAM] unsigned char 
  6864 ;;  LSB             1    6[COMRAM] unsigned char 
  6865 ;;  MSB             1    5[COMRAM] unsigned char 
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  1    wreg      void 
  6868 ;; Registers used:
  6869 ;;		wreg, status,2, status,0
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6876 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;Total ram usage:        3 bytes
  6880 ;; Hardware stack levels used: 1
  6881 ;; Hardware stack levels required when called: 1
  6882 ;; This function calls:
  6883 ;;		Nothing
  6884 ;; This function is called by:
  6885 ;;		_runDAC
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           
  6889                           	psect	text23
  6890   005068                     __ptext23:
  6891                           	callstack 0
  6892   005068                     _SPI_write:
  6893                           	callstack 28
  6894                           
  6895                           ;incstack = 0
  6896                           ;SPI_write@data stored from wreg
  6897   005068  6E08               	movwf	SPI_write@data^0,c
  6898   00506A                     
  6899                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  6900   00506A  3808               	swapf	SPI_write@data^0,w,c
  6901   00506C  0B0F               	andlw	15
  6902   00506E  0930               	iorlw	48
  6903   005070  6E06               	movwf	SPI_write@MSB^0,c
  6904                           
  6905                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  6906   005072  3808               	swapf	SPI_write@data^0,w,c
  6907   005074  0BF0               	andlw	240
  6908   005076  6E07               	movwf	SPI_write@LSB^0,c
  6909   005078                     
  6910                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  6911   005078  968A               	bcf	138,3,c	;volatile
  6912   00507A                     
  6913                           ;DAC.c: 101:     SSP1BUF = MSB;
  6914   00507A  C006  FFC9         	movff	SPI_write@MSB,4041	;volatile
  6915   00507E                     l245:
  6916   00507E  A69E               	btfss	3998,3,c	;volatile
  6917   005080  EF44  F028         	goto	u9441
  6918   005084  EF46  F028         	goto	u9440
  6919   005088                     u9441:
  6920   005088  EF3F  F028         	goto	l245
  6921   00508C                     u9440:
  6922   00508C                     
  6923                           ;DAC.c: 103:     SSP1IF = 0;
  6924   00508C  969E               	bcf	3998,3,c	;volatile
  6925                           
  6926                           ;DAC.c: 105:     SSP1BUF = LSB;
  6927   00508E  C007  FFC9         	movff	SPI_write@LSB,4041	;volatile
  6928   005092                     l248:
  6929   005092  A69E               	btfss	3998,3,c	;volatile
  6930   005094  EF4E  F028         	goto	u9451
  6931   005098  EF50  F028         	goto	u9450
  6932   00509C                     u9451:
  6933   00509C  EF49  F028         	goto	l248
  6934   0050A0                     u9450:
  6935   0050A0                     
  6936                           ;DAC.c: 107:     SSP1IF = 0;
  6937   0050A0  969E               	bcf	3998,3,c	;volatile
  6938                           
  6939                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  6940   0050A2  868A               	bsf	138,3,c	;volatile
  6941   0050A4  0012               	return		;funcret
  6942   0050A6                     __end_of_SPI_write:
  6943                           	callstack 0
  6944                           
  6945 ;; *************** function _runADC *****************
  6946 ;; Defined at:
  6947 ;;		line 13 in file "ADC.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;		None
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;  text           17    0[BANK1 ] unsigned char [17]
  6952 ;;  voltage2        4   21[BANK1 ] float 
  6953 ;;  voltage1        4   17[BANK1 ] float 
  6954 ;;  pot2            2   27[BANK1 ] unsigned short 
  6955 ;;  pot1            2   25[BANK1 ] unsigned short 
  6956 ;;  keepState       1   29[BANK1 ] unsigned char 
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  1    wreg      void 
  6959 ;; Registers used:
  6960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6967 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6968 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6969 ;;      Totals:         0       2      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6970 ;;Total ram usage:       32 bytes
  6971 ;; Hardware stack levels used: 1
  6972 ;; Hardware stack levels required when called: 9
  6973 ;; This function calls:
  6974 ;;		_LCD_ShowString
  6975 ;;		___fldiv
  6976 ;;		___flmul
  6977 ;;		___xxtofl
  6978 ;;		_sprintf
  6979 ;; This function is called by:
  6980 ;;		_main
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984                           	psect	text24
  6985   00347E                     __ptext24:
  6986                           	callstack 0
  6987   00347E                     _runADC:
  6988                           	callstack 21
  6989   00347E                     
  6990                           ;ADC.c: 16: ANSELAbits.ANSA5 = 1;
  6991   00347E  010F               	movlb	15	; () banked
  6992   003480  8B38               	bsf	56,5,b	;volatile
  6993                           
  6994                           ;ADC.c: 17: ANSELEbits.ANSE0 = 1;
  6995   003482  813C               	bsf	60,0,b	;volatile
  6996                           
  6997                           ;ADC.c: 19: ADCON2bits.ADFM = 1;
  6998   003484  8EC0               	bsf	192,7,c	;volatile
  6999   003486                     
  7000                           ; BSR set to: 15
  7001                           ;ADC.c: 20: ADCON2bits.ADCS = 0b110;
  7002   003486  50C0               	movf	192,w,c	;volatile
  7003   003488  0BF8               	andlw	-8
  7004   00348A  0906               	iorlw	6
  7005   00348C  6EC0               	movwf	192,c	;volatile
  7006                           
  7007                           ;ADC.c: 21: ADCON2bits.ACQT = 0b110;
  7008   00348E  50C0               	movf	192,w,c	;volatile
  7009   003490  0BC7               	andlw	-57
  7010   003492  0930               	iorlw	48
  7011   003494  6EC0               	movwf	192,c	;volatile
  7012   003496                     
  7013                           ; BSR set to: 15
  7014                           ;ADC.c: 22: ADCON0bits.ADON = 1;
  7015   003496  80C2               	bsf	194,0,c	;volatile
  7016   003498                     
  7017                           ; BSR set to: 15
  7018                           ;ADC.c: 25: uint16_t pot1, pot2;;ADC.c: 26: float voltage1, voltage2;;ADC.c: 27: char te
      +                          xt[17] = "";
  7019   003498  EE21  F09B         	lfsr	2,runADC@text
  7020   00349C  0E10               	movlw	16
  7021   00349E                     u10011:
  7022   00349E  6ADE               	clrf	postinc2,c
  7023   0034A0  06E8               	decf	wreg,f,c
  7024   0034A2  E2FD               	bc	u10011
  7025   0034A4                     
  7026                           ; BSR set to: 15
  7027                           ;ADC.c: 28: uint8_t keepState = 1;
  7028   0034A4  0E01               	movlw	1
  7029   0034A6  0101               	movlb	1	; () banked
  7030   0034A8  6FB8               	movwf	runADC@keepState& (0+255),b
  7031                           
  7032                           ;ADC.c: 30: while(keepState){
  7033   0034AA  EF3D  F01B         	goto	l462
  7034   0034AE                     l8158:
  7035                           
  7036                           ; BSR set to: 1
  7037                           ;ADC.c: 32:     ADCON0bits.CHS = 5;
  7038   0034AE  50C2               	movf	194,w,c	;volatile
  7039   0034B0  0B83               	andlw	-125
  7040   0034B2  0914               	iorlw	20
  7041   0034B4  6EC2               	movwf	194,c	;volatile
  7042   0034B6                     
  7043                           ; BSR set to: 1
  7044                           ;ADC.c: 33:     GODONE = 1;
  7045   0034B6  82C2               	bsf	4034,1,c	;volatile
  7046   0034B8                     l464:
  7047   0034B8  B2C2               	btfsc	4034,1,c	;volatile
  7048   0034BA  EF61  F01A         	goto	u10021
  7049   0034BE  EF63  F01A         	goto	u10020
  7050   0034C2                     u10021:
  7051   0034C2  EF5C  F01A         	goto	l464
  7052   0034C6                     u10020:
  7053   0034C6                     
  7054                           ;ADC.c: 35:     pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  7055   0034C6  50C3               	movf	195,w,c	;volatile
  7056   0034C8  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  7057   0034CC  0100               	movlb	0	; () banked
  7058   0034CE  6BE8               	clrf	(??_runADC+1)& (0+255),b
  7059   0034D0  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  7060   0034D4  6BE7               	clrf	??_runADC& (0+255),b
  7061   0034D6  11E7               	iorwf	??_runADC& (0+255),w,b
  7062   0034D8  0101               	movlb	1	; () banked
  7063   0034DA  6FB4               	movwf	runADC@pot1& (0+255),b
  7064   0034DC  0100               	movlb	0	; () banked
  7065   0034DE  51E8               	movf	(??_runADC+1)& (0+255),w,b
  7066   0034E0  0101               	movlb	1	; () banked
  7067   0034E2  6FB5               	movwf	(runADC@pot1+1)& (0+255),b
  7068   0034E4                     
  7069                           ; BSR set to: 1
  7070                           ;ADC.c: 36:     voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  7071   0034E4  0E00               	movlw	0
  7072   0034E6  6E31               	movwf	___fldiv@a^0,c
  7073   0034E8  0EC0               	movlw	192
  7074   0034EA  6E32               	movwf	(___fldiv@a+1)^0,c
  7075   0034EC  0E7F               	movlw	127
  7076   0034EE  6E33               	movwf	(___fldiv@a+2)^0,c
  7077   0034F0  0E44               	movlw	68
  7078   0034F2  6E34               	movwf	(___fldiv@a+3)^0,c
  7079   0034F4  C1B4  F006         	movff	runADC@pot1,___xxtofl@val
  7080   0034F8  C1B5  F007         	movff	runADC@pot1+1,___xxtofl@val+1
  7081   0034FC  6A08               	clrf	(___xxtofl@val+2)^0,c
  7082   0034FE  6A09               	clrf	(___xxtofl@val+3)^0,c
  7083   003500  0E00               	movlw	0
  7084   003502  EC47  F01C         	call	___xxtofl
  7085   003506  C006  F02D         	movff	?___xxtofl,___fldiv@b
  7086   00350A  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  7087   00350E  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  7088   003512  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  7089   003516  EC2B  F013         	call	___fldiv	;wreg free
  7090   00351A  C02D  F014         	movff	?___fldiv,___flmul@b
  7091   00351E  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  7092   003522  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  7093   003526  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  7094   00352A  0E33               	movlw	51
  7095   00352C  6E18               	movwf	___flmul@a^0,c
  7096   00352E  0E33               	movlw	51
  7097   003530  6E19               	movwf	(___flmul@a+1)^0,c
  7098   003532  0E53               	movlw	83
  7099   003534  6E1A               	movwf	(___flmul@a+2)^0,c
  7100   003536  0E40               	movlw	64
  7101   003538  6E1B               	movwf	(___flmul@a+3)^0,c
  7102   00353A  EC3A  F00D         	call	___flmul	;wreg free
  7103   00353E  C014  F1AC         	movff	?___flmul,runADC@voltage1
  7104   003542  C015  F1AD         	movff	?___flmul+1,runADC@voltage1+1
  7105   003546  C016  F1AE         	movff	?___flmul+2,runADC@voltage1+2
  7106   00354A  C017  F1AF         	movff	?___flmul+3,runADC@voltage1+3
  7107   00354E                     
  7108                           ;ADC.c: 39:     ADCON0bits.CHS = 4;
  7109   00354E  50C2               	movf	194,w,c	;volatile
  7110   003550  0B83               	andlw	-125
  7111   003552  0910               	iorlw	16
  7112   003554  6EC2               	movwf	194,c	;volatile
  7113   003556                     
  7114                           ;ADC.c: 40:     GODONE = 1;
  7115   003556  82C2               	bsf	4034,1,c	;volatile
  7116   003558                     l467:
  7117   003558  B2C2               	btfsc	4034,1,c	;volatile
  7118   00355A  EFB1  F01A         	goto	u10031
  7119   00355E  EFB3  F01A         	goto	u10030
  7120   003562                     u10031:
  7121   003562  EFAC  F01A         	goto	l467
  7122   003566                     u10030:
  7123   003566                     
  7124                           ;ADC.c: 42:     pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  7125   003566  50C3               	movf	195,w,c	;volatile
  7126   003568  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  7127   00356C  0100               	movlb	0	; () banked
  7128   00356E  6BE8               	clrf	(??_runADC+1)& (0+255),b
  7129   003570  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  7130   003574  6BE7               	clrf	??_runADC& (0+255),b
  7131   003576  11E7               	iorwf	??_runADC& (0+255),w,b
  7132   003578  0101               	movlb	1	; () banked
  7133   00357A  6FB6               	movwf	runADC@pot2& (0+255),b
  7134   00357C  0100               	movlb	0	; () banked
  7135   00357E  51E8               	movf	(??_runADC+1)& (0+255),w,b
  7136   003580  0101               	movlb	1	; () banked
  7137   003582  6FB7               	movwf	(runADC@pot2+1)& (0+255),b
  7138   003584                     
  7139                           ; BSR set to: 1
  7140                           ;ADC.c: 43:     voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  7141   003584  0E00               	movlw	0
  7142   003586  6E31               	movwf	___fldiv@a^0,c
  7143   003588  0EC0               	movlw	192
  7144   00358A  6E32               	movwf	(___fldiv@a+1)^0,c
  7145   00358C  0E7F               	movlw	127
  7146   00358E  6E33               	movwf	(___fldiv@a+2)^0,c
  7147   003590  0E44               	movlw	68
  7148   003592  6E34               	movwf	(___fldiv@a+3)^0,c
  7149   003594  C1B6  F006         	movff	runADC@pot2,___xxtofl@val
  7150   003598  C1B7  F007         	movff	runADC@pot2+1,___xxtofl@val+1
  7151   00359C  6A08               	clrf	(___xxtofl@val+2)^0,c
  7152   00359E  6A09               	clrf	(___xxtofl@val+3)^0,c
  7153   0035A0  0E00               	movlw	0
  7154   0035A2  EC47  F01C         	call	___xxtofl
  7155   0035A6  C006  F02D         	movff	?___xxtofl,___fldiv@b
  7156   0035AA  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  7157   0035AE  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  7158   0035B2  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  7159   0035B6  EC2B  F013         	call	___fldiv	;wreg free
  7160   0035BA  C02D  F014         	movff	?___fldiv,___flmul@b
  7161   0035BE  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  7162   0035C2  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  7163   0035C6  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  7164   0035CA  0E33               	movlw	51
  7165   0035CC  6E18               	movwf	___flmul@a^0,c
  7166   0035CE  0E33               	movlw	51
  7167   0035D0  6E19               	movwf	(___flmul@a+1)^0,c
  7168   0035D2  0E53               	movlw	83
  7169   0035D4  6E1A               	movwf	(___flmul@a+2)^0,c
  7170   0035D6  0E40               	movlw	64
  7171   0035D8  6E1B               	movwf	(___flmul@a+3)^0,c
  7172   0035DA  EC3A  F00D         	call	___flmul	;wreg free
  7173   0035DE  C014  F1B0         	movff	?___flmul,runADC@voltage2
  7174   0035E2  C015  F1B1         	movff	?___flmul+1,runADC@voltage2+1
  7175   0035E6  C016  F1B2         	movff	?___flmul+2,runADC@voltage2+2
  7176   0035EA  C017  F1B3         	movff	?___flmul+3,runADC@voltage2+3
  7177   0035EE                     
  7178                           ;ADC.c: 45:     sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  7179   0035EE  0E9B               	movlw	low runADC@text
  7180   0035F0  0100               	movlb	0	; () banked
  7181   0035F2  6FCE               	movwf	sprintf@s& (0+255),b
  7182   0035F4  0E01               	movlw	high runADC@text
  7183   0035F6  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7184   0035F8  0E8A               	movlw	low STR_29
  7185   0035FA  6FD0               	movwf	sprintf@fmt& (0+255),b
  7186   0035FC  0EFE               	movlw	high STR_29
  7187   0035FE  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7188   003600  C1AC  F0D2         	movff	runADC@voltage1,?_sprintf+4
  7189   003604  C1AD  F0D3         	movff	runADC@voltage1+1,?_sprintf+5
  7190   003608  C1AE  F0D4         	movff	runADC@voltage1+2,?_sprintf+6
  7191   00360C  C1AF  F0D5         	movff	runADC@voltage1+3,?_sprintf+7
  7192   003610  C1B0  F0D6         	movff	runADC@voltage2,?_sprintf+8
  7193   003614  C1B1  F0D7         	movff	runADC@voltage2+1,?_sprintf+9
  7194   003618  C1B2  F0D8         	movff	runADC@voltage2+2,?_sprintf+10
  7195   00361C  C1B3  F0D9         	movff	runADC@voltage2+3,?_sprintf+11
  7196   003620  ECEF  F027         	call	_sprintf	;wreg free
  7197   003624                     
  7198                           ;ADC.c: 46:     LCD_ShowString(2, text);
  7199   003624  0E9B               	movlw	low runADC@text
  7200   003626  6E07               	movwf	LCD_ShowString@textData^0,c
  7201   003628  0E01               	movlw	high runADC@text
  7202   00362A  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7203   00362C  0E02               	movlw	2
  7204   00362E  EC77  F024         	call	_LCD_ShowString
  7205   003632                     
  7206                           ;ADC.c: 48:     if(PORTAbits.RA2){
  7207   003632  A480               	btfss	128,2,c	;volatile
  7208   003634  EF1E  F01B         	goto	u10041
  7209   003638  EF20  F01B         	goto	u10040
  7210   00363C                     u10041:
  7211   00363C  EF3D  F01B         	goto	l462
  7212   003640                     u10040:
  7213   003640                     
  7214                           ;ADC.c: 49:         _delay((unsigned long)((50)*(32E6/4000.0)));
  7215   003640  0E03               	movlw	3
  7216   003642  0100               	movlb	0	; () banked
  7217   003644  6FE8               	movwf	(??_runADC+1)& (0+255),b
  7218   003646  0E08               	movlw	8
  7219   003648  6FE7               	movwf	??_runADC& (0+255),b
  7220   00364A  0E77               	movlw	119
  7221   00364C                     u10517:
  7222   00364C  2EE8               	decfsz	wreg,f,c
  7223   00364E  D7FE               	bra	u10517
  7224   003650  2FE7               	decfsz	??_runADC& (0+255),f,b
  7225   003652  D7FC               	bra	u10517
  7226   003654  2FE8               	decfsz	(??_runADC+1)& (0+255),f,b
  7227   003656  D7FA               	bra	u10517
  7228   003658                     
  7229                           ;ADC.c: 50:         if(PORTAbits.RA2){
  7230   003658  A480               	btfss	128,2,c	;volatile
  7231   00365A  EF31  F01B         	goto	u10051
  7232   00365E  EF33  F01B         	goto	u10050
  7233   003662                     u10051:
  7234   003662  EF3D  F01B         	goto	l462
  7235   003666                     u10050:
  7236   003666                     l472:
  7237   003666  B480               	btfsc	128,2,c	;volatile
  7238   003668  EF38  F01B         	goto	u10061
  7239   00366C  EF3A  F01B         	goto	u10060
  7240   003670                     u10061:
  7241   003670  EF33  F01B         	goto	l472
  7242   003674                     u10060:
  7243   003674                     
  7244                           ;ADC.c: 52:             keepState = 0;
  7245   003674  0E00               	movlw	0
  7246   003676  0101               	movlb	1	; () banked
  7247   003678  6FB8               	movwf	runADC@keepState& (0+255),b
  7248   00367A                     l462:
  7249                           
  7250                           ;ADC.c: 30: while(keepState){
  7251   00367A  0101               	movlb	1	; () banked
  7252   00367C  51B8               	movf	runADC@keepState& (0+255),w,b
  7253   00367E  A4D8               	btfss	status,2,c
  7254   003680  EF44  F01B         	goto	u10071
  7255   003684  EF46  F01B         	goto	u10070
  7256   003688                     u10071:
  7257   003688  EF57  F01A         	goto	l8158
  7258   00368C                     u10070:
  7259   00368C                     
  7260                           ; BSR set to: 1
  7261                           ;ADC.c: 58: ADCON0bits.ADON = 0;
  7262   00368C  90C2               	bcf	194,0,c	;volatile
  7263   00368E                     
  7264                           ; BSR set to: 1
  7265   00368E  0012               	return		;funcret
  7266   003690                     __end_of_runADC:
  7267                           	callstack 0
  7268                           
  7269 ;; *************** function ___xxtofl *****************
  7270 ;; Defined at:
  7271 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\xxtofl.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;  sign            1    wreg     unsigned char 
  7274 ;;  val             4    5[COMRAM] long 
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;  sign            1   13[COMRAM] unsigned char 
  7277 ;;  arg             4   15[COMRAM] unsigned long 
  7278 ;;  exp             1   14[COMRAM] unsigned char 
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  4    5[COMRAM] unsigned char 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2, status,0
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7288 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7290 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7291 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7292 ;;Total ram usage:       14 bytes
  7293 ;; Hardware stack levels used: 1
  7294 ;; Hardware stack levels required when called: 1
  7295 ;; This function calls:
  7296 ;;		Nothing
  7297 ;; This function is called by:
  7298 ;;		_runDAC
  7299 ;;		_runADC
  7300 ;;		___rem_pio2f
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           	psect	text25
  7305   00388E                     __ptext25:
  7306                           	callstack 0
  7307   00388E                     ___xxtofl:
  7308                           	callstack 26
  7309                           
  7310                           ; BSR set to: 1
  7311                           ;incstack = 0
  7312                           ;___xxtofl@sign stored from wreg
  7313   00388E  6E0E               	movwf	___xxtofl@sign^0,c
  7314   003890  500E               	movf	___xxtofl@sign^0,w,c
  7315   003892  B4D8               	btfsc	status,2,c
  7316   003894  EF4E  F01C         	goto	u9031
  7317   003898  EF50  F01C         	goto	u9030
  7318   00389C                     u9031:
  7319   00389C  EF72  F01C         	goto	l1365
  7320   0038A0                     u9030:
  7321   0038A0  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7322   0038A2  EF57  F01C         	goto	u9040
  7323   0038A6  EF55  F01C         	goto	u9041
  7324   0038AA                     u9041:
  7325   0038AA  EF72  F01C         	goto	l1365
  7326   0038AE                     u9040:
  7327   0038AE  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  7328   0038B2  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  7329   0038B6  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  7330   0038BA  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  7331   0038BE  1E0A               	comf	??___xxtofl^0,f,c
  7332   0038C0  1E0B               	comf	(??___xxtofl+1)^0,f,c
  7333   0038C2  1E0C               	comf	(??___xxtofl+2)^0,f,c
  7334   0038C4  1E0D               	comf	(??___xxtofl+3)^0,f,c
  7335   0038C6  2A0A               	incf	??___xxtofl^0,f,c
  7336   0038C8  0E00               	movlw	0
  7337   0038CA  220B               	addwfc	(??___xxtofl+1)^0,f,c
  7338   0038CC  220C               	addwfc	(??___xxtofl+2)^0,f,c
  7339   0038CE  220D               	addwfc	(??___xxtofl+3)^0,f,c
  7340   0038D0  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  7341   0038D4  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  7342   0038D8  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  7343   0038DC  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  7344   0038E0  EF7A  F01C         	goto	l7462
  7345   0038E4                     l1365:
  7346   0038E4  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  7347   0038E8  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7348   0038EC  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7349   0038F0  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7350   0038F4                     l7462:
  7351   0038F4  5006               	movf	___xxtofl@val^0,w,c
  7352   0038F6  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  7353   0038F8  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  7354   0038FA  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  7355   0038FC  A4D8               	btfss	status,2,c
  7356   0038FE  EF83  F01C         	goto	u9051
  7357   003902  EF85  F01C         	goto	u9050
  7358   003906                     u9051:
  7359   003906  EF8F  F01C         	goto	l7468
  7360   00390A                     u9050:
  7361   00390A  0E00               	movlw	0
  7362   00390C  6E06               	movwf	?___xxtofl^0,c
  7363   00390E  0E00               	movlw	0
  7364   003910  6E07               	movwf	(?___xxtofl+1)^0,c
  7365   003912  0E00               	movlw	0
  7366   003914  6E08               	movwf	(?___xxtofl+2)^0,c
  7367   003916  0E00               	movlw	0
  7368   003918  6E09               	movwf	(?___xxtofl+3)^0,c
  7369   00391A  EF20  F01D         	goto	l1368
  7370   00391E                     l7468:
  7371   00391E  0E96               	movlw	150
  7372   003920  6E0F               	movwf	___xxtofl@exp^0,c
  7373   003922  EF99  F01C         	goto	l7472
  7374   003926                     l7470:
  7375   003926  2A0F               	incf	___xxtofl@exp^0,f,c
  7376   003928  90D8               	bcf	status,0,c
  7377   00392A  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7378   00392C  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7379   00392E  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7380   003930  3210               	rrcf	___xxtofl@arg^0,f,c
  7381   003932                     l7472:
  7382   003932  0E00               	movlw	0
  7383   003934  1410               	andwf	___xxtofl@arg^0,w,c
  7384   003936  6E0A               	movwf	??___xxtofl^0,c
  7385   003938  0E00               	movlw	0
  7386   00393A  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7387   00393C  6E0B               	movwf	(??___xxtofl+1)^0,c
  7388   00393E  0E00               	movlw	0
  7389   003940  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7390   003942  6E0C               	movwf	(??___xxtofl+2)^0,c
  7391   003944  0EFE               	movlw	254
  7392   003946  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7393   003948  6E0D               	movwf	(??___xxtofl+3)^0,c
  7394   00394A  500A               	movf	??___xxtofl^0,w,c
  7395   00394C  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7396   00394E  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7397   003950  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7398   003952  A4D8               	btfss	status,2,c
  7399   003954  EFAE  F01C         	goto	u9061
  7400   003958  EFB0  F01C         	goto	u9060
  7401   00395C                     u9061:
  7402   00395C  EF93  F01C         	goto	l7470
  7403   003960                     u9060:
  7404   003960  EFBE  F01C         	goto	l1372
  7405   003964                     l7474:
  7406   003964  2A0F               	incf	___xxtofl@exp^0,f,c
  7407   003966  0E01               	movlw	1
  7408   003968  2610               	addwf	___xxtofl@arg^0,f,c
  7409   00396A  0E00               	movlw	0
  7410   00396C  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  7411   00396E  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  7412   003970  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  7413   003972  90D8               	bcf	status,0,c
  7414   003974  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7415   003976  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7416   003978  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7417   00397A  3210               	rrcf	___xxtofl@arg^0,f,c
  7418   00397C                     l1372:
  7419   00397C  0E00               	movlw	0
  7420   00397E  1410               	andwf	___xxtofl@arg^0,w,c
  7421   003980  6E0A               	movwf	??___xxtofl^0,c
  7422   003982  0E00               	movlw	0
  7423   003984  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7424   003986  6E0B               	movwf	(??___xxtofl+1)^0,c
  7425   003988  0E00               	movlw	0
  7426   00398A  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7427   00398C  6E0C               	movwf	(??___xxtofl+2)^0,c
  7428   00398E  0EFF               	movlw	255
  7429   003990  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7430   003992  6E0D               	movwf	(??___xxtofl+3)^0,c
  7431   003994  500A               	movf	??___xxtofl^0,w,c
  7432   003996  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7433   003998  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7434   00399A  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7435   00399C  A4D8               	btfss	status,2,c
  7436   00399E  EFD3  F01C         	goto	u9071
  7437   0039A2  EFD5  F01C         	goto	u9070
  7438   0039A6                     u9071:
  7439   0039A6  EFB2  F01C         	goto	l7474
  7440   0039AA                     u9070:
  7441   0039AA  EFDD  F01C         	goto	l7482
  7442   0039AE                     l7480:
  7443   0039AE  060F               	decf	___xxtofl@exp^0,f,c
  7444   0039B0  90D8               	bcf	status,0,c
  7445   0039B2  3610               	rlcf	___xxtofl@arg^0,f,c
  7446   0039B4  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  7447   0039B6  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  7448   0039B8  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  7449   0039BA                     l7482:
  7450   0039BA  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  7451   0039BC  EFE2  F01C         	goto	u9081
  7452   0039C0  EFE4  F01C         	goto	u9080
  7453   0039C4                     u9081:
  7454   0039C4  EFEC  F01C         	goto	l1379
  7455   0039C8                     u9080:
  7456   0039C8  0E02               	movlw	2
  7457   0039CA  600F               	cpfslt	___xxtofl@exp^0,c
  7458   0039CC  EFEA  F01C         	goto	u9091
  7459   0039D0  EFEC  F01C         	goto	u9090
  7460   0039D4                     u9091:
  7461   0039D4  EFD7  F01C         	goto	l7480
  7462   0039D8                     u9090:
  7463   0039D8                     l1379:
  7464   0039D8  B00F               	btfsc	___xxtofl@exp^0,0,c
  7465   0039DA  EFF1  F01C         	goto	u9101
  7466   0039DE  EFF3  F01C         	goto	u9100
  7467   0039E2                     u9101:
  7468   0039E2  EFF4  F01C         	goto	l7488
  7469   0039E6                     u9100:
  7470   0039E6  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  7471   0039E8                     l7488:
  7472   0039E8  90D8               	bcf	status,0,c
  7473   0039EA  320F               	rrcf	___xxtofl@exp^0,f,c
  7474   0039EC  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  7475   0039F0  6A0B               	clrf	(??___xxtofl+1)^0,c
  7476   0039F2  6A0C               	clrf	(??___xxtofl+2)^0,c
  7477   0039F4  6A0D               	clrf	(??___xxtofl+3)^0,c
  7478   0039F6  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  7479   0039FA  6A0C               	clrf	(??___xxtofl+2)^0,c
  7480   0039FC  6A0B               	clrf	(??___xxtofl+1)^0,c
  7481   0039FE  6A0A               	clrf	??___xxtofl^0,c
  7482   003A00  500A               	movf	??___xxtofl^0,w,c
  7483   003A02  1210               	iorwf	___xxtofl@arg^0,f,c
  7484   003A04  500B               	movf	(??___xxtofl+1)^0,w,c
  7485   003A06  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  7486   003A08  500C               	movf	(??___xxtofl+2)^0,w,c
  7487   003A0A  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  7488   003A0C  500D               	movf	(??___xxtofl+3)^0,w,c
  7489   003A0E  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  7490   003A10  500E               	movf	___xxtofl@sign^0,w,c
  7491   003A12  B4D8               	btfsc	status,2,c
  7492   003A14  EF0E  F01D         	goto	u9111
  7493   003A18  EF10  F01D         	goto	u9110
  7494   003A1C                     u9111:
  7495   003A1C  EF18  F01D         	goto	l7498
  7496   003A20                     u9110:
  7497   003A20  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7498   003A22  EF17  F01D         	goto	u9120
  7499   003A26  EF15  F01D         	goto	u9121
  7500   003A2A                     u9121:
  7501   003A2A  EF18  F01D         	goto	l7498
  7502   003A2E                     u9120:
  7503   003A2E  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  7504   003A30                     l7498:
  7505   003A30  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  7506   003A34  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  7507   003A38  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  7508   003A3C  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  7509   003A40                     l1368:
  7510   003A40  0012               	return		;funcret
  7511   003A42                     __end_of___xxtofl:
  7512                           	callstack 0
  7513                           
  7514 ;; *************** function _moveDisplay *****************
  7515 ;; Defined at:
  7516 ;;		line 11 in file "menu.c"
  7517 ;; Parameters:    Size  Location     Type
  7518 ;;  menuI           1    wreg     unsigned char 
  7519 ;;  where           1  135[BANK0 ] unsigned char 
  7520 ;; Auto vars:     Size  Location     Type
  7521 ;;  menuI           1   50[BANK1 ] unsigned char 
  7522 ;;  menuItem2      17   17[BANK1 ] unsigned char [17]
  7523 ;;  menuItem1      17    0[BANK1 ] unsigned char [17]
  7524 ;;  menuItems      16   34[BANK1 ] PTR unsigned char [8]
  7525 ;;		 -> STR_26(1), STR_25(6), STR_24(5), STR_23(4), 
  7526 ;;		 -> STR_22(4), STR_21(4), STR_20(5), STR_19(5), 
  7527 ;; Return value:  Size  Location     Type
  7528 ;;                  1    wreg      unsigned char 
  7529 ;; Registers used:
  7530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7536 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7537 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7538 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7539 ;;      Totals:         0       3      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7540 ;;Total ram usage:       54 bytes
  7541 ;; Hardware stack levels used: 1
  7542 ;; Hardware stack levels required when called: 9
  7543 ;; This function calls:
  7544 ;;		_LCD_Clear
  7545 ;;		_LCD_ShowString
  7546 ;;		_sprintf
  7547 ;; This function is called by:
  7548 ;;		_main
  7549 ;; This function uses a non-reentrant model
  7550 ;;
  7551                           
  7552                           	psect	text26
  7553   00417A                     __ptext26:
  7554                           	callstack 0
  7555   00417A                     _moveDisplay:
  7556                           	callstack 21
  7557                           
  7558                           ;incstack = 0
  7559                           ;moveDisplay@menuI stored from wreg
  7560   00417A  0101               	movlb	1	; () banked
  7561   00417C  6FCD               	movwf	moveDisplay@menuI& (0+255),b
  7562   00417E                     
  7563                           ;menu.c: 12:     LCD_Clear();
  7564   00417E  ECA7  F028         	call	_LCD_Clear	;wreg free
  7565   004182                     
  7566                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  7567   004182  EE21  F0CE         	lfsr	2,moveDisplay@F6965
  7568   004186  EE11  F0BD         	lfsr	1,moveDisplay@menuItems
  7569   00418A  0E0F               	movlw	15
  7570   00418C                     u9721:
  7571   00418C  CFDB FFE3          	movff	plusw2,plusw1
  7572   004190  06E8               	decf	wreg,f,c
  7573   004192  E2FC               	bc	u9721
  7574                           
  7575                           ;menu.c: 14:     switch (where){
  7576   004194  EFE4  F020         	goto	l7984
  7577   004198                     l7974:
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;menu.c: 18:             if(menuI<6){
  7581   004198  0E06               	movlw	6
  7582   00419A  0101               	movlb	1	; () banked
  7583   00419C  61CD               	cpfslt	moveDisplay@menuI& (0+255),b
  7584   00419E  EFD3  F020         	goto	u9731
  7585   0041A2  EFD5  F020         	goto	u9730
  7586   0041A6                     u9731:
  7587   0041A6  EFF4  F020         	goto	l7986
  7588   0041AA                     u9730:
  7589   0041AA                     
  7590                           ; BSR set to: 1
  7591                           ;menu.c: 19:             menuI++;
  7592   0041AA  2BCD               	incf	moveDisplay@menuI& (0+255),f,b
  7593   0041AC  EFF4  F020         	goto	l7986
  7594   0041B0                     l7978:
  7595                           
  7596                           ; BSR set to: 0
  7597                           ;menu.c: 23:             if(menuI>0){
  7598   0041B0  0101               	movlb	1	; () banked
  7599   0041B2  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7600   0041B4  B4D8               	btfsc	status,2,c
  7601   0041B6  EFDF  F020         	goto	u9741
  7602   0041BA  EFE1  F020         	goto	u9740
  7603   0041BE                     u9741:
  7604   0041BE  EFF4  F020         	goto	l7986
  7605   0041C2                     u9740:
  7606   0041C2                     
  7607                           ; BSR set to: 1
  7608                           ;menu.c: 24:             menuI--;
  7609   0041C2  07CD               	decf	moveDisplay@menuI& (0+255),f,b
  7610   0041C4  EFF4  F020         	goto	l7986
  7611   0041C8                     l7984:
  7612   0041C8  0100               	movlb	0	; () banked
  7613   0041CA  51E7               	movf	moveDisplay@where& (0+255),w,b
  7614                           
  7615                           ; Switch size 1, requested type "simple"
  7616                           ; Number of cases is 3, Range of values is 0 to 2
  7617                           ; switch strategies available:
  7618                           ; Name         Instructions Cycles
  7619                           ; simple_byte           10     6 (average)
  7620                           ;	Chosen strategy is simple_byte
  7621   0041CC  0A00               	xorlw	0	; case 0
  7622   0041CE  B4D8               	btfsc	status,2,c
  7623   0041D0  EFF4  F020         	goto	l7986
  7624   0041D4  0A01               	xorlw	1	; case 1
  7625   0041D6  B4D8               	btfsc	status,2,c
  7626   0041D8  EFCC  F020         	goto	l7974
  7627   0041DC  0A03               	xorlw	3	; case 2
  7628   0041DE  B4D8               	btfsc	status,2,c
  7629   0041E0  EFD8  F020         	goto	l7978
  7630   0041E4  EFF4  F020         	goto	l7986
  7631   0041E8                     l7986:
  7632                           
  7633                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  7634   0041E8  0E9B               	movlw	low moveDisplay@menuItem1
  7635   0041EA  0100               	movlb	0	; () banked
  7636   0041EC  6FCE               	movwf	sprintf@s& (0+255),b
  7637   0041EE  0E01               	movlw	high moveDisplay@menuItem1
  7638   0041F0  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7639   0041F2  0ECC               	movlw	low STR_27
  7640   0041F4  6FD0               	movwf	sprintf@fmt& (0+255),b
  7641   0041F6  0EFF               	movlw	high STR_27
  7642   0041F8  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7643   0041FA  0E00               	movlw	0
  7644   0041FC  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7645   0041FE  0E0F               	movlw	15
  7646   004200  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7647   004202  0101               	movlb	1	; () banked
  7648   004204  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7649   004206  0D02               	mullw	2
  7650   004208  0EBD               	movlw	low moveDisplay@menuItems
  7651   00420A  24F3               	addwf	243,w,c
  7652   00420C  6ED9               	movwf	fsr2l,c
  7653   00420E  0E01               	movlw	high moveDisplay@menuItems
  7654   004210  20F4               	addwfc	prodh,w,c
  7655   004212  6EDA               	movwf	fsr2h,c
  7656   004214  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7657   004218  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7658   00421C  ECEF  F027         	call	_sprintf	;wreg free
  7659                           
  7660                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  7661   004220  0EAC               	movlw	low moveDisplay@menuItem2
  7662   004222  0100               	movlb	0	; () banked
  7663   004224  6FCE               	movwf	sprintf@s& (0+255),b
  7664   004226  0E01               	movlw	high moveDisplay@menuItem2
  7665   004228  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7666   00422A  0ECD               	movlw	low (STR_27+1)
  7667   00422C  6FD0               	movwf	sprintf@fmt& (0+255),b
  7668   00422E  0EFF               	movlw	high (STR_27+1)
  7669   004230  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7670   004232  0E00               	movlw	0
  7671   004234  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7672   004236  0E10               	movlw	16
  7673   004238  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7674   00423A  0101               	movlb	1	; () banked
  7675   00423C  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7676   00423E  0100               	movlb	0	; () banked
  7677   004240  6FE8               	movwf	??_moveDisplay& (0+255),b
  7678   004242  6BE9               	clrf	(??_moveDisplay+1)& (0+255),b
  7679   004244  90D8               	bcf	status,0,c
  7680   004246  37E8               	rlcf	??_moveDisplay& (0+255),f,b
  7681   004248  37E9               	rlcf	(??_moveDisplay+1)& (0+255),f,b
  7682   00424A  0E02               	movlw	2
  7683   00424C  27E8               	addwf	??_moveDisplay& (0+255),f,b
  7684   00424E  0E00               	movlw	0
  7685   004250  23E9               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  7686   004252  0EBD               	movlw	low moveDisplay@menuItems
  7687   004254  25E8               	addwf	??_moveDisplay& (0+255),w,b
  7688   004256  6ED9               	movwf	fsr2l,c
  7689   004258  0E01               	movlw	high moveDisplay@menuItems
  7690   00425A  21E9               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  7691   00425C  6EDA               	movwf	fsr2h,c
  7692   00425E  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7693   004262  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7694   004266  ECEF  F027         	call	_sprintf	;wreg free
  7695   00426A                     
  7696                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  7697   00426A  0E9B               	movlw	low moveDisplay@menuItem1
  7698   00426C  6E07               	movwf	LCD_ShowString@textData^0,c
  7699   00426E  0E01               	movlw	high moveDisplay@menuItem1
  7700   004270  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7701   004272  0E01               	movlw	1
  7702   004274  EC77  F024         	call	_LCD_ShowString
  7703   004278                     
  7704                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  7705   004278  0EAC               	movlw	low moveDisplay@menuItem2
  7706   00427A  6E07               	movwf	LCD_ShowString@textData^0,c
  7707   00427C  0E01               	movlw	high moveDisplay@menuItem2
  7708   00427E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7709   004280  0E02               	movlw	2
  7710   004282  EC77  F024         	call	_LCD_ShowString
  7711   004286                     
  7712                           ;menu.c: 35:     return menuI;
  7713   004286  0101               	movlb	1	; () banked
  7714   004288  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7715   00428A                     
  7716                           ; BSR set to: 1
  7717   00428A  0012               	return		;funcret
  7718   00428C                     __end_of_moveDisplay:
  7719                           	callstack 0
  7720                           
  7721 ;; *************** function _sprintf *****************
  7722 ;; Defined at:
  7723 ;;		line 9 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_sprintf.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;  s               2  110[BANK0 ] PTR unsigned char 
  7726 ;;		 -> runGAME@approxText(25), runGAME@text(17), runADC@text(17), moveDisplay@menuItem2(17), 
  7727 ;;		 -> moveDisplay@menuItem1(17), 
  7728 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  7729 ;;		 -> STR_34(18), STR_33(19), STR_32(17), STR_31(19), 
  7730 ;;		 -> STR_29(19), STR_28(5), STR_27(6), 
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;  f              12  123[BANK0 ] struct _IO_FILE
  7733 ;;  ret             2    0        int 
  7734 ;;  ap              1  122[BANK0 ] PTR void [1]
  7735 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  2  110[BANK0 ] int 
  7738 ;; Registers used:
  7739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7745 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7746 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7748 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7749 ;;Total ram usage:       25 bytes
  7750 ;; Hardware stack levels used: 1
  7751 ;; Hardware stack levels required when called: 8
  7752 ;; This function calls:
  7753 ;;		_vfprintf
  7754 ;; This function is called by:
  7755 ;;		_moveDisplay
  7756 ;;		_runADC
  7757 ;;		_runGAME
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           	psect	text27
  7762   004FDE                     __ptext27:
  7763                           	callstack 0
  7764   004FDE                     _sprintf:
  7765                           	callstack 21
  7766   004FDE  0ED2               	movlw	low (?_sprintf+4)
  7767   004FE0  0100               	movlb	0	; () banked
  7768   004FE2  6FDA               	movwf	sprintf@ap& (0+255),b
  7769   004FE4  C0CE  F0DB         	movff	sprintf@s,sprintf@f
  7770   004FE8  C0CF  F0DC         	movff	sprintf@s+1,sprintf@f+1
  7771   004FEC                     
  7772                           ; BSR set to: 0
  7773   004FEC  0E00               	movlw	0
  7774   004FEE  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  7775   004FF0  0E00               	movlw	0
  7776   004FF2  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  7777   004FF4                     
  7778                           ; BSR set to: 0
  7779   004FF4  0E00               	movlw	0
  7780   004FF6  6FE6               	movwf	(sprintf@f+11)& (0+255),b
  7781   004FF8  0E00               	movlw	0
  7782   004FFA  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  7783   004FFC                     
  7784                           ; BSR set to: 0
  7785   004FFC  0EDB               	movlw	low sprintf@f
  7786   004FFE  6FC7               	movwf	vfprintf@fp& (0+255),b
  7787   005000  6BC8               	clrf	(vfprintf@fp+1)& (0+255),b
  7788   005002  C0D0  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  7789   005006  C0D1  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7790   00500A  0EDA               	movlw	low sprintf@ap
  7791   00500C  6FCB               	movwf	vfprintf@ap& (0+255),b
  7792   00500E  ECA6  F027         	call	_vfprintf	;wreg free
  7793   005012  0100               	movlb	0	; () banked
  7794   005014  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  7795   005016  25CE               	addwf	sprintf@s& (0+255),w,b
  7796   005018  6ED9               	movwf	fsr2l,c
  7797   00501A  51DF               	movf	(sprintf@f+4)& (0+255),w,b
  7798   00501C  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  7799   00501E  6EDA               	movwf	fsr2h,c
  7800   005020  6ADF               	clrf	indf2,c
  7801   005022                     
  7802                           ; BSR set to: 0
  7803   005022  0012               	return		;funcret
  7804   005024                     __end_of_sprintf:
  7805                           	callstack 0
  7806                           
  7807 ;; *************** function _vfprintf *****************
  7808 ;; Defined at:
  7809 ;;		line 1817 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  7812 ;;		 -> NULL(0), sprintf@f(12), 
  7813 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  7814 ;;		 -> STR_34(18), STR_33(19), STR_32(17), STR_31(19), 
  7815 ;;		 -> STR_30(5), STR_29(19), STR_28(5), STR_27(6), 
  7816 ;;		 -> STR_18(5), 
  7817 ;;  ap              1  107[BANK0 ] PTR PTR void 
  7818 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  7821 ;;		 -> STR_34(18), STR_33(19), STR_32(17), STR_31(19), 
  7822 ;;		 -> STR_30(5), STR_29(19), STR_28(5), STR_27(6), 
  7823 ;;		 -> STR_18(5), 
  7824 ;; Return value:  Size  Location     Type
  7825 ;;                  2  103[BANK0 ] int 
  7826 ;; Registers used:
  7827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7828 ;; Tracked objects:
  7829 ;;		On entry : 0/0
  7830 ;;		On exit  : 0/0
  7831 ;;		Unchanged: 0/0
  7832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7833 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7834 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7836 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7837 ;;Total ram usage:        7 bytes
  7838 ;; Hardware stack levels used: 1
  7839 ;; Hardware stack levels required when called: 7
  7840 ;; This function calls:
  7841 ;;		_vfpfcnvrt
  7842 ;; This function is called by:
  7843 ;;		_sprintf
  7844 ;;		_printf
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848                           	psect	text28
  7849   004F4C                     __ptext28:
  7850                           	callstack 0
  7851   004F4C                     _vfprintf:
  7852                           	callstack 21
  7853   004F4C                     
  7854                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE *fp, const 
      +                          char *fmt, va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1818: {;D:\MP
      +                          LABX\Compiler\pic\sources\c99\common\doprnt.c: 1820:     char *cfmt;;D:\MPLABX\Compiler\
      +                          pic\sources\c99\common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7855   004F4C  C0C9  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  7856   004F50  C0CA  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7857                           
  7858                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  7859   004F54  EFB7  F027         	goto	l7680
  7860   004F58                     l7678:
  7861                           
  7862                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt, ap);
  7863   004F58  C0C7  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  7864   004F5C  C0C8  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7865   004F60  0ECC               	movlw	low vfprintf@cfmt
  7866   004F62  0100               	movlb	0	; () banked
  7867   004F64  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  7868   004F66  C0CB  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  7869   004F6A  ECA6  F005         	call	_vfpfcnvrt	;wreg free
  7870   004F6E                     l7680:
  7871                           
  7872                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  7873   004F6E  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  7874   004F72  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7875   004F76                     	if	0	;tblptru may be non-zero
  7876   004F76                     	endif
  7877   004F76                     	if	0	;tblptru may be non-zero
  7878   004F76                     	endif
  7879   004F76  0008               	tblrd		*
  7880   004F78  50F5               	movf	tablat,w,c
  7881   004F7A  0900               	iorlw	0
  7882   004F7C  A4D8               	btfss	status,2,c
  7883   004F7E  EFC3  F027         	goto	u9301
  7884   004F82  EFC5  F027         	goto	u9300
  7885   004F86                     u9301:
  7886   004F86  EFAC  F027         	goto	l7678
  7887   004F8A                     u9300:
  7888   004F8A                     
  7889                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  7890   004F8A  0E00               	movlw	0
  7891   004F8C  0100               	movlb	0	; () banked
  7892   004F8E  6FC8               	movwf	(?_vfprintf+1)& (0+255),b
  7893   004F90  0E00               	movlw	0
  7894   004F92  6FC7               	movwf	?_vfprintf& (0+255),b
  7895   004F94                     
  7896                           ; BSR set to: 0
  7897   004F94  0012               	return		;funcret
  7898   004F96                     __end_of_vfprintf:
  7899                           	callstack 0
  7900                           
  7901 ;; *************** function _vfpfcnvrt *****************
  7902 ;; Defined at:
  7903 ;;		line 1177 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  7906 ;;		 -> NULL(0), sprintf@f(12), 
  7907 ;;  fmt             1   91[BANK0 ] PTR PTR unsigned char 
  7908 ;;		 -> vfprintf@cfmt(2), 
  7909 ;;  ap              1   92[BANK0 ] PTR PTR void 
  7910 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;  convarg         4   96[BANK0 ] struct .
  7913 ;;  cp              2  101[BANK0 ] PTR unsigned char 
  7914 ;;		 -> STR_34(18), STR_33(19), STR_32(17), STR_31(19), 
  7915 ;;		 -> STR_30(5), STR_29(19), STR_28(5), STR_27(6), 
  7916 ;;		 -> STR_18(5), 
  7917 ;;  c               1  100[BANK0 ] unsigned char 
  7918 ;;  done            1   95[BANK0 ] _Bool 
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  1    wreg      void 
  7921 ;; Registers used:
  7922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7928 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7929 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7930 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7931 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7932 ;;Total ram usage:       14 bytes
  7933 ;; Hardware stack levels used: 1
  7934 ;; Hardware stack levels required when called: 6
  7935 ;; This function calls:
  7936 ;;		_dtoa
  7937 ;;		_efgtoa
  7938 ;;		_fputc
  7939 ;;		_read_prec_or_width
  7940 ;;		_stoa
  7941 ;;		_utoa
  7942 ;; This function is called by:
  7943 ;;		_vfprintf
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text29
  7948   000B4C                     __ptext29:
  7949                           	callstack 0
  7950   000B4C                     _vfpfcnvrt:
  7951                           	callstack 21
  7952   000B4C                     
  7953                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1178: {;D:\MPLABX\Co
      +                          mpiler\pic\sources\c99\common\doprnt.c: 1179:     char c, *cp;;D:\MPLABX\Compiler\pic\so
      +                          urces\c99\common\doprnt.c: 1180:     _Bool done;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1188:  } convarg;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1201:
      +                               if ((*fmt)[0] == '%') {
  7954   000B4C  0100               	movlb	0	; () banked
  7955   000B4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7956   000B50  6ED9               	movwf	fsr2l,c
  7957   000B52  6ADA               	clrf	fsr2h,c
  7958   000B54  CFDE FFF6          	movff	postinc2,tblptrl
  7959   000B58  CFDD FFF7          	movff	postdec2,tblptrh
  7960   000B5C                     	if	0	;tblptru may be non-zero
  7961   000B5C                     	endif
  7962   000B5C                     	if	0	;tblptru may be non-zero
  7963   000B5C                     	endif
  7964   000B5C  0008               	tblrd		*
  7965   000B5E  50F5               	movf	tablat,w,c
  7966   000B60  0A25               	xorlw	37
  7967   000B62  A4D8               	btfss	status,2,c
  7968   000B64  EFB6  F005         	goto	u9131
  7969   000B68  EFB8  F005         	goto	u9130
  7970   000B6C                     u9131:
  7971   000B6C  EF40  F008         	goto	l7650
  7972   000B70                     u9130:
  7973   000B70                     
  7974                           ; BSR set to: 0
  7975                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  7976   000B70  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7977   000B72  6ED9               	movwf	fsr2l,c
  7978   000B74  6ADA               	clrf	fsr2h,c
  7979   000B76  2ADE               	incf	postinc2,f,c
  7980   000B78  0E00               	movlw	0
  7981   000B7A  22DD               	addwfc	postdec2,f,c
  7982   000B7C                     
  7983                           ; BSR set to: 0
  7984                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1204:         flags = width = 0;
  7985   000B7C  0E00               	movlw	0
  7986   000B7E  6E56               	movwf	(_width+1)^0,c
  7987   000B80  0E00               	movlw	0
  7988   000B82  6E55               	movwf	_width^0,c
  7989   000B84  C055  F059         	movff	_width,_flags
  7990   000B88                     
  7991                           ; BSR set to: 0
  7992                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1205:         prec = -1;
  7993   000B88  6857               	setf	_prec^0,c
  7994   000B8A  6858               	setf	(_prec+1)^0,c
  7995   000B8C                     
  7996                           ; BSR set to: 0
  7997                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1209:         done = 0;
  7998   000B8C  0E00               	movlw	0
  7999   000B8E  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8000                           
  8001                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  8002   000B90  EFE6  F005         	goto	l7522
  8003   000B94                     l7512:
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1214:                     flags |= 
      +                          (1 << 0);
  8007   000B94  8059               	bsf	_flags^0,0,c
  8008   000B96                     
  8009                           ; BSR set to: 0
  8010                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1215:                     ++*fmt;
  8011   000B96  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8012   000B98  6ED9               	movwf	fsr2l,c
  8013   000B9A  6ADA               	clrf	fsr2h,c
  8014   000B9C  2ADE               	incf	postinc2,f,c
  8015   000B9E  0E00               	movlw	0
  8016   000BA0  22DD               	addwfc	postdec2,f,c
  8017                           
  8018                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1216:                     break;
  8019   000BA2  EFE6  F005         	goto	l7522
  8020   000BA6                     l7516:
  8021                           
  8022                           ; BSR set to: 0
  8023                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1243:                     done = 1;
  8024   000BA6  0E01               	movlw	1
  8025   000BA8  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8026                           
  8027                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1244:                     break;
  8028   000BAA  EFE6  F005         	goto	l7522
  8029   000BAE                     l7520:
  8030                           
  8031                           ; BSR set to: 0
  8032   000BAE  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8033   000BB0  6ED9               	movwf	fsr2l,c
  8034   000BB2  6ADA               	clrf	fsr2h,c
  8035   000BB4  CFDE FFF6          	movff	postinc2,tblptrl
  8036   000BB8  CFDD FFF7          	movff	postdec2,tblptrh
  8037   000BBC                     	if	0	;tblptru may be non-zero
  8038   000BBC                     	endif
  8039   000BBC                     	if	0	;tblptru may be non-zero
  8040   000BBC                     	endif
  8041   000BBC  0008               	tblrd		*
  8042   000BBE  50F5               	movf	tablat,w,c
  8043                           
  8044                           ; Switch size 1, requested type "simple"
  8045                           ; Number of cases is 1, Range of values is 45 to 45
  8046                           ; switch strategies available:
  8047                           ; Name         Instructions Cycles
  8048                           ; simple_byte            4     3 (average)
  8049                           ;	Chosen strategy is simple_byte
  8050   000BC0  0A2D               	xorlw	45	; case 45
  8051   000BC2  B4D8               	btfsc	status,2,c
  8052   000BC4  EFCA  F005         	goto	l7512
  8053   000BC8  EFD3  F005         	goto	l7516
  8054   000BCC                     l7522:
  8055                           
  8056                           ; BSR set to: 0
  8057                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  8058   000BCC  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  8059   000BCE  B4D8               	btfsc	status,2,c
  8060   000BD0  EFEC  F005         	goto	u9141
  8061   000BD4  EFEE  F005         	goto	u9140
  8062   000BD8                     u9141:
  8063   000BD8  EFD7  F005         	goto	l7520
  8064   000BDC                     u9140:
  8065   000BDC                     
  8066                           ; BSR set to: 0
  8067                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1256:   width = read_prec_or_width(
      +                          fmt, ap);
  8068   000BDC  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  8069   000BE0  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  8070   000BE4  EC28  F025         	call	_read_prec_or_width	;wreg free
  8071   000BE8  C00C  F055         	movff	?_read_prec_or_width,_width
  8072   000BEC  C00D  F056         	movff	?_read_prec_or_width+1,_width+1
  8073   000BF0                     
  8074                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1257:   if (width < 0) {
  8075   000BF0  BE56               	btfsc	(_width+1)^0,7,c
  8076   000BF2  EFFF  F005         	goto	u9150
  8077   000BF6  EFFD  F005         	goto	u9151
  8078   000BFA                     u9151:
  8079   000BFA  EF04  F006         	goto	l7530
  8080   000BFE                     u9150:
  8081   000BFE                     
  8082                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1258:    flags |= (1 << 0);
  8083   000BFE  8059               	bsf	_flags^0,0,c
  8084                           
  8085                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1259:    width = -width;
  8086   000C00  6C55               	negf	_width^0,c
  8087   000C02  1E56               	comf	(_width+1)^0,f,c
  8088   000C04  B0D8               	btfsc	status,0,c
  8089   000C06  2A56               	incf	(_width+1)^0,f,c
  8090   000C08                     l7530:
  8091                           
  8092                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1265:         if ((*fmt)[0] == '.')
      +                           {
  8093   000C08  0100               	movlb	0	; () banked
  8094   000C0A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8095   000C0C  6ED9               	movwf	fsr2l,c
  8096   000C0E  6ADA               	clrf	fsr2h,c
  8097   000C10  CFDE FFF6          	movff	postinc2,tblptrl
  8098   000C14  CFDD FFF7          	movff	postdec2,tblptrh
  8099   000C18                     	if	0	;tblptru may be non-zero
  8100   000C18                     	endif
  8101   000C18                     	if	0	;tblptru may be non-zero
  8102   000C18                     	endif
  8103   000C18  0008               	tblrd		*
  8104   000C1A  50F5               	movf	tablat,w,c
  8105   000C1C  0A2E               	xorlw	46
  8106   000C1E  A4D8               	btfss	status,2,c
  8107   000C20  EF14  F006         	goto	u9161
  8108   000C24  EF16  F006         	goto	u9160
  8109   000C28                     u9161:
  8110   000C28  EF26  F006         	goto	l7536
  8111   000C2C                     u9160:
  8112   000C2C                     
  8113                           ; BSR set to: 0
  8114                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1266:             ++*fmt;
  8115   000C2C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8116   000C2E  6ED9               	movwf	fsr2l,c
  8117   000C30  6ADA               	clrf	fsr2h,c
  8118   000C32  2ADE               	incf	postinc2,f,c
  8119   000C34  0E00               	movlw	0
  8120   000C36  22DD               	addwfc	postdec2,f,c
  8121   000C38                     
  8122                           ; BSR set to: 0
  8123                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1267:    prec = read_prec_or_width(
      +                          fmt, ap);
  8124   000C38  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  8125   000C3C  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  8126   000C40  EC28  F025         	call	_read_prec_or_width	;wreg free
  8127   000C44  C00C  F057         	movff	?_read_prec_or_width,_prec
  8128   000C48  C00D  F058         	movff	?_read_prec_or_width+1,_prec+1
  8129   000C4C                     l7536:
  8130                           
  8131                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt;
  8132   000C4C  0100               	movlb	0	; () banked
  8133   000C4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8134   000C50  6ED9               	movwf	fsr2l,c
  8135   000C52  6ADA               	clrf	fsr2h,c
  8136   000C54  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  8137   000C58  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  8138   000C5C                     
  8139                           ; BSR set to: 0
  8140                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  8141   000C5C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8142   000C60  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8143   000C64                     	if	0	;tblptru may be non-zero
  8144   000C64                     	endif
  8145   000C64                     	if	0	;tblptru may be non-zero
  8146   000C64                     	endif
  8147   000C64  0008               	tblrd		*
  8148   000C66  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  8149                           
  8150                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1294:   switch(c) {
  8151   000C6A  EF43  F006         	goto	l7548
  8152   000C6E                     l7540:
  8153                           
  8154                           ; BSR set to: 0
  8155                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1298:     cp++;
  8156   000C6E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  8157   000C70  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  8158                           
  8159                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1305:     break;
  8160   000C72  EF56  F006         	goto	l7550
  8161   000C76                     l7542:
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1350:     c = 'i';
  8165   000C76  0E69               	movlw	105
  8166   000C78  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8167                           
  8168                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1351:     break;
  8169   000C7A  EF56  F006         	goto	l7550
  8170   000C7E                     l7544:
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  8174   000C7E  0E00               	movlw	0
  8175   000C80  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8176                           
  8177                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1354:     break;
  8178   000C82  EF56  F006         	goto	l7550
  8179   000C86                     l7548:
  8180                           
  8181                           ; BSR set to: 0
  8182   000C86  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8183                           
  8184                           ; Switch size 1, requested type "simple"
  8185                           ; Number of cases is 4, Range of values is 100 to 117
  8186                           ; switch strategies available:
  8187                           ; Name         Instructions Cycles
  8188                           ; simple_byte           13     7 (average)
  8189                           ;	Chosen strategy is simple_byte
  8190   000C88  0A64               	xorlw	100	; case 100
  8191   000C8A  B4D8               	btfsc	status,2,c
  8192   000C8C  EF3B  F006         	goto	l7542
  8193   000C90  0A0C               	xorlw	12	; case 104
  8194   000C92  B4D8               	btfsc	status,2,c
  8195   000C94  EF37  F006         	goto	l7540
  8196   000C98  0A01               	xorlw	1	; case 105
  8197   000C9A  B4D8               	btfsc	status,2,c
  8198   000C9C  EF3B  F006         	goto	l7542
  8199   000CA0  0A1C               	xorlw	28	; case 117
  8200   000CA2  B4D8               	btfsc	status,2,c
  8201   000CA4  EF3B  F006         	goto	l7542
  8202   000CA8  EF3F  F006         	goto	l7544
  8203   000CAC                     l7550:
  8204                           
  8205                           ; BSR set to: 0
  8206                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1361:   if (*cp == 'd' || *cp == 'i
      +                          ') {
  8207   000CAC  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8208   000CB0  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8209   000CB4                     	if	0	;tblptru may be non-zero
  8210   000CB4                     	endif
  8211   000CB4                     	if	0	;tblptru may be non-zero
  8212   000CB4                     	endif
  8213   000CB4  0008               	tblrd		*
  8214   000CB6  50F5               	movf	tablat,w,c
  8215   000CB8  0A64               	xorlw	100
  8216   000CBA  B4D8               	btfsc	status,2,c
  8217   000CBC  EF62  F006         	goto	u9171
  8218   000CC0  EF64  F006         	goto	u9170
  8219   000CC4                     u9171:
  8220   000CC4  EF90  F006         	goto	l7560
  8221   000CC8                     u9170:
  8222   000CC8                     
  8223                           ; BSR set to: 0
  8224   000CC8  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8225   000CCC  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8226   000CD0                     	if	0	;tblptru may be non-zero
  8227   000CD0                     	endif
  8228   000CD0                     	if	0	;tblptru may be non-zero
  8229   000CD0                     	endif
  8230   000CD0  0008               	tblrd		*
  8231   000CD2  50F5               	movf	tablat,w,c
  8232   000CD4  0A69               	xorlw	105
  8233   000CD6  A4D8               	btfss	status,2,c
  8234   000CD8  EF70  F006         	goto	u9181
  8235   000CDC  EF72  F006         	goto	u9180
  8236   000CE0                     u9181:
  8237   000CE0  EFB4  F006         	goto	l7568
  8238   000CE4                     u9180:
  8239   000CE4  EF90  F006         	goto	l7560
  8240   000CE8                     l7554:
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1365:      convarg.sint = (vfpf_sin
      +                          t_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8244   000CE8  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8245   000CEA  6ED9               	movwf	fsr2l,c
  8246   000CEC  6ADA               	clrf	fsr2h,c
  8247   000CEE  0E02               	movlw	2
  8248   000CF0  26DF               	addwf	indf2,f,c
  8249   000CF2  5CDF               	subwf	indf2,w,c
  8250   000CF4  6ED9               	movwf	fsr2l,c
  8251   000CF6  6ADA               	clrf	fsr2h,c
  8252   000CF8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8253   000CFC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8254                           
  8255                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1366:      break;
  8256   000D00  EF9B  F006         	goto	l7562
  8257   000D04                     l7556:
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1369:      convarg.sint = (vfpf_sin
      +                          t_t)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  8261   000D04  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8262   000D06  6ED9               	movwf	fsr2l,c
  8263   000D08  6ADA               	clrf	fsr2h,c
  8264   000D0A  0E02               	movlw	2
  8265   000D0C  26DF               	addwf	indf2,f,c
  8266   000D0E  5CDF               	subwf	indf2,w,c
  8267   000D10  6ED9               	movwf	fsr2l,c
  8268   000D12  6ADA               	clrf	fsr2h,c
  8269   000D14  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8270   000D18  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8271                           
  8272                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1370:      break;
  8273   000D1C  EF9B  F006         	goto	l7562
  8274   000D20                     l7560:
  8275                           
  8276                           ; BSR set to: 0
  8277   000D20  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8278                           
  8279                           ; Switch size 1, requested type "simple"
  8280                           ; Number of cases is 2, Range of values is 104 to 105
  8281                           ; switch strategies available:
  8282                           ; Name         Instructions Cycles
  8283                           ; simple_byte            7     4 (average)
  8284                           ;	Chosen strategy is simple_byte
  8285   000D22  0A68               	xorlw	104	; case 104
  8286   000D24  B4D8               	btfsc	status,2,c
  8287   000D26  EF82  F006         	goto	l7556
  8288   000D2A  0A01               	xorlw	1	; case 105
  8289   000D2C  B4D8               	btfsc	status,2,c
  8290   000D2E  EF74  F006         	goto	l7554
  8291   000D32  EF9B  F006         	goto	l7562
  8292   000D36                     l7562:
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1406:    *fmt = cp+1;
  8296   000D36  0E01               	movlw	1
  8297   000D38  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8298   000D3A  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8299   000D3C  0E00               	movlw	0
  8300   000D3E  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8301   000D40  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8302   000D42  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8303   000D44  6ED9               	movwf	fsr2l,c
  8304   000D46  6ADA               	clrf	fsr2h,c
  8305   000D48  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8306   000D4C  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8307   000D50                     
  8308                           ; BSR set to: 0
  8309                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1432:    return (void) dtoa(fp, con
      +                          varg.sint);;	Return value of _vfpfcnvrt is never used
  8310   000D50  C0B9  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  8311   000D54  C0BA  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8312   000D58  C0C0  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  8313   000D5C  C0C1  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  8314   000D60  ECF0  F01D         	call	_dtoa	;wreg free
  8315   000D64  EF53  F008         	goto	l1560
  8316   000D68                     l7568:
  8317                           
  8318                           ; BSR set to: 0
  8319   000D68  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8320   000D6C  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8321   000D70                     	if	0	;tblptru may be non-zero
  8322   000D70                     	endif
  8323   000D70                     	if	0	;tblptru may be non-zero
  8324   000D70                     	endif
  8325   000D70  0008               	tblrd		*
  8326   000D72  50F5               	movf	tablat,w,c
  8327   000D74  0A75               	xorlw	117
  8328   000D76  A4D8               	btfss	status,2,c
  8329   000D78  EFC0  F006         	goto	u9191
  8330   000D7C  EFC2  F006         	goto	u9190
  8331   000D80                     u9191:
  8332   000D80  EF12  F007         	goto	l7588
  8333   000D84                     u9190:
  8334   000D84  EFE0  F006         	goto	l7576
  8335   000D88                     l7570:
  8336                           
  8337                           ; BSR set to: 0
  8338                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1456:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8339   000D88  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8340   000D8A  6ED9               	movwf	fsr2l,c
  8341   000D8C  6ADA               	clrf	fsr2h,c
  8342   000D8E  0E02               	movlw	2
  8343   000D90  26DF               	addwf	indf2,f,c
  8344   000D92  5CDF               	subwf	indf2,w,c
  8345   000D94  6ED9               	movwf	fsr2l,c
  8346   000D96  6ADA               	clrf	fsr2h,c
  8347   000D98  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8348   000D9C  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8349                           
  8350                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1457:      break;
  8351   000DA0  EFEB  F006         	goto	l7578
  8352   000DA4                     l7572:
  8353                           
  8354                           ; BSR set to: 0
  8355                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1460:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned short)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8356   000DA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8357   000DA6  6ED9               	movwf	fsr2l,c
  8358   000DA8  6ADA               	clrf	fsr2h,c
  8359   000DAA  0E02               	movlw	2
  8360   000DAC  26DF               	addwf	indf2,f,c
  8361   000DAE  5CDF               	subwf	indf2,w,c
  8362   000DB0  6ED9               	movwf	fsr2l,c
  8363   000DB2  6ADA               	clrf	fsr2h,c
  8364   000DB4  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8365   000DB8  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8366                           
  8367                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1461:      break;
  8368   000DBC  EFEB  F006         	goto	l7578
  8369   000DC0                     l7576:
  8370                           
  8371                           ; BSR set to: 0
  8372   000DC0  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8373                           
  8374                           ; Switch size 1, requested type "simple"
  8375                           ; Number of cases is 2, Range of values is 104 to 105
  8376                           ; switch strategies available:
  8377                           ; Name         Instructions Cycles
  8378                           ; simple_byte            7     4 (average)
  8379                           ;	Chosen strategy is simple_byte
  8380   000DC2  0A68               	xorlw	104	; case 104
  8381   000DC4  B4D8               	btfsc	status,2,c
  8382   000DC6  EFD2  F006         	goto	l7572
  8383   000DCA  0A01               	xorlw	1	; case 105
  8384   000DCC  B4D8               	btfsc	status,2,c
  8385   000DCE  EFC4  F006         	goto	l7570
  8386   000DD2  EFEB  F006         	goto	l7578
  8387   000DD6                     l7578:
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1497:    *fmt = cp+1;
  8391   000DD6  0E01               	movlw	1
  8392   000DD8  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8393   000DDA  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8394   000DDC  0E00               	movlw	0
  8395   000DDE  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8396   000DE0  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8397   000DE2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8398   000DE4  6ED9               	movwf	fsr2l,c
  8399   000DE6  6ADA               	clrf	fsr2h,c
  8400   000DE8  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8401   000DEC  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8402                           
  8403                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1498:    switch (*cp) {
  8404   000DF0  EF06  F007         	goto	l7586
  8405   000DF4                     l7580:
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1542:      return (void) utoa(fp, c
      +                          onvarg.uint);;	Return value of _vfpfcnvrt is never used
  8409   000DF4  C0B9  F020         	movff	vfpfcnvrt@fp,utoa@fp
  8410   000DF8  C0BA  F021         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  8411   000DFC  C0C0  F022         	movff	vfpfcnvrt@convarg,utoa@d
  8412   000E00  C0C1  F023         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  8413   000E04  ECCB  F022         	call	_utoa	;wreg free
  8414   000E08  EF53  F008         	goto	l1560
  8415   000E0C                     l7586:
  8416                           
  8417                           ; BSR set to: 0
  8418   000E0C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8419   000E10  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8420   000E14                     	if	0	;tblptru may be non-zero
  8421   000E14                     	endif
  8422   000E14                     	if	0	;tblptru may be non-zero
  8423   000E14                     	endif
  8424   000E14  0008               	tblrd		*
  8425   000E16  50F5               	movf	tablat,w,c
  8426                           
  8427                           ; Switch size 1, requested type "simple"
  8428                           ; Number of cases is 1, Range of values is 117 to 117
  8429                           ; switch strategies available:
  8430                           ; Name         Instructions Cycles
  8431                           ; simple_byte            4     3 (average)
  8432                           ;	Chosen strategy is simple_byte
  8433   000E18  0A75               	xorlw	117	; case 117
  8434   000E1A  B4D8               	btfsc	status,2,c
  8435   000E1C  EFFA  F006         	goto	l7580
  8436   000E20  EF12  F007         	goto	l7588
  8437   000E24                     l7588:
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  8441   000E24  0E00               	movlw	0
  8442   000E26  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8443   000E28                     
  8444                           ; BSR set to: 0
  8445                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt)[0] == 's') {
  8446   000E28  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8447   000E2A  6ED9               	movwf	fsr2l,c
  8448   000E2C  6ADA               	clrf	fsr2h,c
  8449   000E2E  CFDE FFF6          	movff	postinc2,tblptrl
  8450   000E32  CFDD FFF7          	movff	postdec2,tblptrh
  8451   000E36                     	if	0	;tblptru may be non-zero
  8452   000E36                     	endif
  8453   000E36                     	if	0	;tblptru may be non-zero
  8454   000E36                     	endif
  8455   000E36  0008               	tblrd		*
  8456   000E38  50F5               	movf	tablat,w,c
  8457   000E3A  0A73               	xorlw	115
  8458   000E3C  A4D8               	btfss	status,2,c
  8459   000E3E  EF23  F007         	goto	u9201
  8460   000E42  EF25  F007         	goto	u9200
  8461   000E46                     u9201:
  8462   000E46  EF2F  F007         	goto	l7596
  8463   000E4A                     u9200:
  8464   000E4A                     
  8465                           ; BSR set to: 0
  8466                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  8467   000E4A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8468   000E4C  6ED9               	movwf	fsr2l,c
  8469   000E4E  6ADA               	clrf	fsr2h,c
  8470   000E50  2ADE               	incf	postinc2,f,c
  8471   000E52  0E00               	movlw	0
  8472   000E54  22DD               	addwfc	postdec2,f,c
  8473   000E56                     l7594:
  8474                           
  8475                           ; BSR set to: 0
  8476                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1659:    done = 1;
  8477   000E56  0E01               	movlw	1
  8478   000E58  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8479                           
  8480                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1660:   }
  8481   000E5A  EF7B  F007         	goto	l7606
  8482   000E5E                     l7596:
  8483                           
  8484                           ; BSR set to: 0
  8485   000E5E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8486   000E60  6ED9               	movwf	fsr2l,c
  8487   000E62  6ADA               	clrf	fsr2h,c
  8488   000E64  CFDE FFF6          	movff	postinc2,tblptrl
  8489   000E68  CFDD FFF7          	movff	postdec2,tblptrh
  8490   000E6C                     	if	0	;tblptru may be non-zero
  8491   000E6C                     	endif
  8492   000E6C                     	if	0	;tblptru may be non-zero
  8493   000E6C                     	endif
  8494   000E6C  0008               	tblrd		*
  8495   000E6E  50F5               	movf	tablat,w,c
  8496   000E70  0A6C               	xorlw	108
  8497   000E72  A4D8               	btfss	status,2,c
  8498   000E74  EF3E  F007         	goto	u9211
  8499   000E78  EF40  F007         	goto	u9210
  8500   000E7C                     u9211:
  8501   000E7C  EF7B  F007         	goto	l7606
  8502   000E80                     u9210:
  8503   000E80                     
  8504                           ; BSR set to: 0
  8505   000E80  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8506   000E82  6ED9               	movwf	fsr2l,c
  8507   000E84  6ADA               	clrf	fsr2h,c
  8508   000E86  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8509   000E8A  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8510   000E8E  0E01               	movlw	1
  8511   000E90  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8512   000E92  0E00               	movlw	0
  8513   000E94  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8514   000E96  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8515   000E9A  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8516   000E9E                     	if	0	;tblptru may be non-zero
  8517   000E9E                     	endif
  8518   000E9E                     	if	0	;tblptru may be non-zero
  8519   000E9E                     	endif
  8520   000E9E  0008               	tblrd		*
  8521   000EA0  50F5               	movf	tablat,w,c
  8522   000EA2  0A6C               	xorlw	108
  8523   000EA4  A4D8               	btfss	status,2,c
  8524   000EA6  EF57  F007         	goto	u9221
  8525   000EAA  EF59  F007         	goto	u9220
  8526   000EAE                     u9221:
  8527   000EAE  EF7B  F007         	goto	l7606
  8528   000EB2                     u9220:
  8529   000EB2                     
  8530                           ; BSR set to: 0
  8531   000EB2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8532   000EB4  6ED9               	movwf	fsr2l,c
  8533   000EB6  6ADA               	clrf	fsr2h,c
  8534   000EB8  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8535   000EBC  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8536   000EC0  0E02               	movlw	2
  8537   000EC2  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8538   000EC4  0E00               	movlw	0
  8539   000EC6  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8540   000EC8  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8541   000ECC  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8542   000ED0                     	if	0	;tblptru may be non-zero
  8543   000ED0                     	endif
  8544   000ED0                     	if	0	;tblptru may be non-zero
  8545   000ED0                     	endif
  8546   000ED0  0008               	tblrd		*
  8547   000ED2  50F5               	movf	tablat,w,c
  8548   000ED4  0A73               	xorlw	115
  8549   000ED6  A4D8               	btfss	status,2,c
  8550   000ED8  EF70  F007         	goto	u9231
  8551   000EDC  EF72  F007         	goto	u9230
  8552   000EE0                     u9231:
  8553   000EE0  EF7B  F007         	goto	l7606
  8554   000EE4                     u9230:
  8555   000EE4                     
  8556                           ; BSR set to: 0
  8557                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 3;
  8558   000EE4  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8559   000EE6  6ED9               	movwf	fsr2l,c
  8560   000EE8  6ADA               	clrf	fsr2h,c
  8561   000EEA  0E03               	movlw	3
  8562   000EEC  26DE               	addwf	postinc2,f,c
  8563   000EEE  0E00               	movlw	0
  8564   000EF0  22DD               	addwfc	postdec2,f,c
  8565   000EF2  EF2B  F007         	goto	l7594
  8566   000EF6                     l7606:
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1665:   if (done) {
  8570   000EF6  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  8571   000EF8  B4D8               	btfsc	status,2,c
  8572   000EFA  EF81  F007         	goto	u9241
  8573   000EFE  EF83  F007         	goto	u9240
  8574   000F02                     u9241:
  8575   000F02  EF97  F007         	goto	l7612
  8576   000F06                     u9240:
  8577   000F06                     
  8578                           ; BSR set to: 0
  8579                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1682:    return (void) stoa(fp, (*(
      +                          char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpfcnvrt is never use
      +                          d
  8580   000F06  C0B9  F010         	movff	vfpfcnvrt@fp,stoa@fp
  8581   000F0A  C0BA  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8582   000F0E  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8583   000F10  6ED9               	movwf	fsr2l,c
  8584   000F12  6ADA               	clrf	fsr2h,c
  8585   000F14  0E02               	movlw	2
  8586   000F16  26DF               	addwf	indf2,f,c
  8587   000F18  5CDF               	subwf	indf2,w,c
  8588   000F1A  6ED9               	movwf	fsr2l,c
  8589   000F1C  6ADA               	clrf	fsr2h,c
  8590   000F1E  CFDE F012          	movff	postinc2,stoa@s
  8591   000F22  CFDE F013          	movff	postinc2,stoa@s+1
  8592   000F26  EC21  F01D         	call	_stoa	;wreg free
  8593   000F2A  EF53  F008         	goto	l1560
  8594   000F2E                     l7612:
  8595                           
  8596                           ; BSR set to: 0
  8597                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt;
  8598   000F2E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8599   000F30  6ED9               	movwf	fsr2l,c
  8600   000F32  6ADA               	clrf	fsr2h,c
  8601   000F34  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  8602   000F38  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  8603   000F3C                     
  8604                           ; BSR set to: 0
  8605                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  8606   000F3C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8607   000F40  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8608   000F44                     	if	0	;tblptru may be non-zero
  8609   000F44                     	endif
  8610   000F44                     	if	0	;tblptru may be non-zero
  8611   000F44                     	endif
  8612   000F44  0008               	tblrd		*
  8613   000F46  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  8614                           
  8615                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1691:   switch(c) {
  8616   000F4A  EFB3  F007         	goto	l7624
  8617   000F4E                     l7616:
  8618                           
  8619                           ; BSR set to: 0
  8620                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  8621   000F4E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  8622   000F50  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  8623                           
  8624                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1696:     break;
  8625   000F52  EFC2  F007         	goto	l7626
  8626   000F56                     l7618:
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1721:     c = 'l';
  8630   000F56  0E6C               	movlw	108
  8631   000F58  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8632                           
  8633                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1722:     break;
  8634   000F5A  EFC2  F007         	goto	l7626
  8635   000F5E                     l7620:
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  8639   000F5E  0E00               	movlw	0
  8640   000F60  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8641                           
  8642                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1725:     break;
  8643   000F62  EFC2  F007         	goto	l7626
  8644   000F66                     l7624:
  8645                           
  8646                           ; BSR set to: 0
  8647   000F66  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8648                           
  8649                           ; Switch size 1, requested type "simple"
  8650                           ; Number of cases is 3, Range of values is 76 to 108
  8651                           ; switch strategies available:
  8652                           ; Name         Instructions Cycles
  8653                           ; simple_byte           10     6 (average)
  8654                           ;	Chosen strategy is simple_byte
  8655   000F68  0A4C               	xorlw	76	; case 76
  8656   000F6A  B4D8               	btfsc	status,2,c
  8657   000F6C  EFA7  F007         	goto	l7616
  8658   000F70  0A2A               	xorlw	42	; case 102
  8659   000F72  B4D8               	btfsc	status,2,c
  8660   000F74  EFAB  F007         	goto	l7618
  8661   000F78  0A0A               	xorlw	10	; case 108
  8662   000F7A  B4D8               	btfsc	status,2,c
  8663   000F7C  EFA7  F007         	goto	l7616
  8664   000F80  EFAF  F007         	goto	l7620
  8665   000F84                     l7626:
  8666                           
  8667                           ; BSR set to: 0
  8668   000F84  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8669   000F88  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8670   000F8C                     	if	0	;tblptru may be non-zero
  8671   000F8C                     	endif
  8672   000F8C                     	if	0	;tblptru may be non-zero
  8673   000F8C                     	endif
  8674   000F8C  0008               	tblrd		*
  8675   000F8E  50F5               	movf	tablat,w,c
  8676   000F90  0A66               	xorlw	102
  8677   000F92  A4D8               	btfss	status,2,c
  8678   000F94  EFCE  F007         	goto	u9251
  8679   000F98  EFD0  F007         	goto	u9250
  8680   000F9C                     u9251:
  8681   000F9C  EF37  F008         	goto	l7646
  8682   000FA0                     u9250:
  8683   000FA0  EFFA  F007         	goto	l7634
  8684   000FA4                     l7628:
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1756:      convarg.f = (long double
      +                          )(*(double *)__va_arg(*(double **)ap, (double)0));
  8688   000FA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8689   000FA6  6ED9               	movwf	fsr2l,c
  8690   000FA8  6ADA               	clrf	fsr2h,c
  8691   000FAA  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8692   000FAE  0E04               	movlw	4
  8693   000FB0  26DF               	addwf	indf2,f,c
  8694   000FB2  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8695   000FB4  6ED9               	movwf	fsr2l,c
  8696   000FB6  6ADA               	clrf	fsr2h,c
  8697   000FB8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8698   000FBC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8699   000FC0  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8700   000FC4  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8701                           
  8702                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1757:      break;
  8703   000FC8  EF05  F008         	goto	l7636
  8704   000FCC                     l7630:
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1759:      convarg.f = (long double
      +                          )(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  8708   000FCC  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8709   000FCE  6ED9               	movwf	fsr2l,c
  8710   000FD0  6ADA               	clrf	fsr2h,c
  8711   000FD2  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8712   000FD6  0E04               	movlw	4
  8713   000FD8  26DF               	addwf	indf2,f,c
  8714   000FDA  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8715   000FDC  6ED9               	movwf	fsr2l,c
  8716   000FDE  6ADA               	clrf	fsr2h,c
  8717   000FE0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8718   000FE4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8719   000FE8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8720   000FEC  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8721                           
  8722                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1760:      break;
  8723   000FF0  EF05  F008         	goto	l7636
  8724   000FF4                     l7634:
  8725                           
  8726                           ; BSR set to: 0
  8727   000FF4  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8728                           
  8729                           ; Switch size 1, requested type "simple"
  8730                           ; Number of cases is 2, Range of values is 76 to 108
  8731                           ; switch strategies available:
  8732                           ; Name         Instructions Cycles
  8733                           ; simple_byte            7     4 (average)
  8734                           ;	Chosen strategy is simple_byte
  8735   000FF6  0A4C               	xorlw	76	; case 76
  8736   000FF8  B4D8               	btfsc	status,2,c
  8737   000FFA  EFE6  F007         	goto	l7630
  8738   000FFE  0A20               	xorlw	32	; case 108
  8739   001000  B4D8               	btfsc	status,2,c
  8740   001002  EFD2  F007         	goto	l7628
  8741   001006  EF05  F008         	goto	l7636
  8742   00100A                     l7636:
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1762:    *fmt = cp+1;
  8746   00100A  0E01               	movlw	1
  8747   00100C  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8748   00100E  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8749   001010  0E00               	movlw	0
  8750   001012  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8751   001014  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8752   001016  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8753   001018  6ED9               	movwf	fsr2l,c
  8754   00101A  6ADA               	clrf	fsr2h,c
  8755   00101C  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8756   001020  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8757                           
  8758                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1763:    switch (*cp) {
  8759   001024  EF2B  F008         	goto	l7644
  8760   001028                     l7638:
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1790:      return (void) efgtoa(fp,
      +                           convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  8764   001028  C0B9  F084         	movff	vfpfcnvrt@fp,efgtoa@fp
  8765   00102C  C0BA  F085         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  8766   001030  C0C0  F086         	movff	vfpfcnvrt@convarg,efgtoa@f
  8767   001034  C0C1  F087         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  8768   001038  C0C2  F088         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  8769   00103C  C0C3  F089         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  8770   001040  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8771   001044  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8772   001048                     	if	0	;tblptru may be non-zero
  8773   001048                     	endif
  8774   001048                     	if	0	;tblptru may be non-zero
  8775   001048                     	endif
  8776   001048  0008               	tblrd		*
  8777   00104A  CFF5 F08A          	movff	tablat,efgtoa@c
  8778   00104E  ECA9  F000         	call	_efgtoa	;wreg free
  8779   001052  EF53  F008         	goto	l1560
  8780   001056                     l7644:
  8781                           
  8782                           ; BSR set to: 0
  8783   001056  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8784   00105A  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8785   00105E                     	if	0	;tblptru may be non-zero
  8786   00105E                     	endif
  8787   00105E                     	if	0	;tblptru may be non-zero
  8788   00105E                     	endif
  8789   00105E  0008               	tblrd		*
  8790   001060  50F5               	movf	tablat,w,c
  8791                           
  8792                           ; Switch size 1, requested type "simple"
  8793                           ; Number of cases is 1, Range of values is 102 to 102
  8794                           ; switch strategies available:
  8795                           ; Name         Instructions Cycles
  8796                           ; simple_byte            4     3 (average)
  8797                           ;	Chosen strategy is simple_byte
  8798   001062  0A66               	xorlw	102	; case 102
  8799   001064  B4D8               	btfsc	status,2,c
  8800   001066  EF14  F008         	goto	l7638
  8801   00106A  EF37  F008         	goto	l7646
  8802   00106E                     l7646:
  8803                           
  8804                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  8805   00106E  0100               	movlb	0	; () banked
  8806   001070  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8807   001072  6ED9               	movwf	fsr2l,c
  8808   001074  6ADA               	clrf	fsr2h,c
  8809   001076  2ADE               	incf	postinc2,f,c
  8810   001078  0E00               	movlw	0
  8811   00107A  22DD               	addwfc	postdec2,f,c
  8812   00107C  EF53  F008         	goto	l1560
  8813   001080                     l7650:
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*fmt)[0], fp)
      +                          ;
  8817   001080  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8818   001082  6ED9               	movwf	fsr2l,c
  8819   001084  6ADA               	clrf	fsr2h,c
  8820   001086  CFDE FFF6          	movff	postinc2,tblptrl
  8821   00108A  CFDD FFF7          	movff	postdec2,tblptrh
  8822   00108E                     	if	0	;tblptru may be non-zero
  8823   00108E                     	endif
  8824   00108E                     	if	0	;tblptru may be non-zero
  8825   00108E                     	endif
  8826   00108E  0008               	tblrd		*
  8827   001090  50F5               	movf	tablat,w,c
  8828   001092  6E07               	movwf	fputc@c^0,c
  8829   001094  6A08               	clrf	(fputc@c+1)^0,c
  8830   001096  C0B9  F009         	movff	vfpfcnvrt@fp,fputc@fp
  8831   00109A  C0BA  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8832   00109E  ECB0  F023         	call	_fputc	;wreg free
  8833   0010A2  EF37  F008         	goto	l7646
  8834   0010A6                     l1560:
  8835   0010A6  0012               	return		;funcret
  8836   0010A8                     __end_of_vfpfcnvrt:
  8837                           	callstack 0
  8838                           
  8839 ;; *************** function _utoa *****************
  8840 ;; Defined at:
  8841 ;;		line 1001 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  8844 ;;		 -> NULL(0), sprintf@f(12), 
  8845 ;;  d               2   33[COMRAM] unsigned int 
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;  i               2   39[COMRAM] int 
  8848 ;;  p               2   37[COMRAM] int 
  8849 ;;  w               2   35[COMRAM] int 
  8850 ;; Return value:  Size  Location     Type
  8851 ;;                  1    wreg      void 
  8852 ;; Registers used:
  8853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8860 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;Total ram usage:       10 bytes
  8864 ;; Hardware stack levels used: 1
  8865 ;; Hardware stack levels required when called: 5
  8866 ;; This function calls:
  8867 ;;		___lwdiv
  8868 ;;		___lwmod
  8869 ;;		_pad
  8870 ;; This function is called by:
  8871 ;;		_vfpfcnvrt
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           	psect	text30
  8876   004596                     __ptext30:
  8877                           	callstack 0
  8878   004596                     _utoa:
  8879                           	callstack 21
  8880   004596                     
  8881                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1001: static void utoa(FILE *fp, vf
      +                          pf_uint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1002: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 1003:     int i, w;;D:\MPLABX\Compiler\pic\sources\
      +                          c99\common\doprnt.c: 1005:  int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1
      +                          017:     p = (0 <= prec) ? prec : 1;
  8882   004596  BE58               	btfsc	(_prec+1)^0,7,c
  8883   004598  EFD2  F022         	goto	u8970
  8884   00459C  EFD0  F022         	goto	u8971
  8885   0045A0                     u8971:
  8886   0045A0  EFD8  F022         	goto	l1517
  8887   0045A4                     u8970:
  8888   0045A4  0E00               	movlw	0
  8889   0045A6  6E27               	movwf	(utoa@p+1)^0,c
  8890   0045A8  0E01               	movlw	1
  8891   0045AA  6E26               	movwf	utoa@p^0,c
  8892   0045AC  EFDC  F022         	goto	l1519
  8893   0045B0                     l1517:
  8894   0045B0  C057  F026         	movff	_prec,utoa@p
  8895   0045B4  C058  F027         	movff	_prec+1,utoa@p+1
  8896   0045B8                     l1519:
  8897                           
  8898                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1019:     w = width;
  8899   0045B8  C055  F024         	movff	_width,utoa@w
  8900   0045BC  C056  F025         	movff	_width+1,utoa@w+1
  8901   0045C0                     
  8902                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1022:     i = sizeof(dbuf) - 1;
  8903   0045C0  0E00               	movlw	0
  8904   0045C2  6E29               	movwf	(utoa@i+1)^0,c
  8905   0045C4  0E4F               	movlw	79
  8906   0045C6  6E28               	movwf	utoa@i^0,c
  8907   0045C8                     
  8908                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i] = '\0';
  8909   0045C8  0E00               	movlw	0
  8910   0045CA  0101               	movlb	1	; () banked
  8911   0045CC  6F76               	movwf	(_dbuf+79)& (0+255),b
  8912                           
  8913                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  8914   0045CE  EF13  F023         	goto	l7432
  8915   0045D2                     l7422:
  8916                           
  8917                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1033:     )) {;D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 1034:         --i;
  8918   0045D2  0628               	decf	utoa@i^0,f,c
  8919   0045D4  A0D8               	btfss	status,0,c
  8920   0045D6  0629               	decf	(utoa@i+1)^0,f,c
  8921   0045D8                     
  8922                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1035:         dbuf[i] = '0' + (d % 
      +                          10);
  8923   0045D8  0E27               	movlw	low _dbuf
  8924   0045DA  2428               	addwf	utoa@i^0,w,c
  8925   0045DC  6ED9               	movwf	fsr2l,c
  8926   0045DE  0E01               	movlw	high _dbuf
  8927   0045E0  2029               	addwfc	(utoa@i+1)^0,w,c
  8928   0045E2  6EDA               	movwf	fsr2h,c
  8929   0045E4  C022  F006         	movff	utoa@d,___lwmod@dividend
  8930   0045E8  C023  F007         	movff	utoa@d+1,___lwmod@dividend+1
  8931   0045EC  0E00               	movlw	0
  8932   0045EE  6E09               	movwf	(___lwmod@divisor+1)^0,c
  8933   0045F0  0E0A               	movlw	10
  8934   0045F2  6E08               	movwf	___lwmod@divisor^0,c
  8935   0045F4  ECC9  F026         	call	___lwmod	;wreg free
  8936   0045F8  5006               	movf	?___lwmod^0,w,c
  8937   0045FA  0F30               	addlw	48
  8938   0045FC  6EDF               	movwf	indf2,c
  8939   0045FE                     
  8940                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1037:         --p;
  8941   0045FE  0626               	decf	utoa@p^0,f,c
  8942   004600  A0D8               	btfss	status,0,c
  8943   004602  0627               	decf	(utoa@p+1)^0,f,c
  8944   004604                     
  8945                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1041:         --w;
  8946   004604  0624               	decf	utoa@w^0,f,c
  8947   004606  A0D8               	btfss	status,0,c
  8948   004608  0625               	decf	(utoa@w+1)^0,f,c
  8949   00460A                     
  8950                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1042:         d = d / 10;
  8951   00460A  C022  F006         	movff	utoa@d,___lwdiv@dividend
  8952   00460E  C023  F007         	movff	utoa@d+1,___lwdiv@dividend+1
  8953   004612  0E00               	movlw	0
  8954   004614  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  8955   004616  0E0A               	movlw	10
  8956   004618  6E08               	movwf	___lwdiv@divisor^0,c
  8957   00461A  EC23  F026         	call	___lwdiv	;wreg free
  8958   00461E  C006  F022         	movff	?___lwdiv,utoa@d
  8959   004622  C007  F023         	movff	?___lwdiv+1,utoa@d+1
  8960   004626                     l7432:
  8961                           
  8962                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  8963   004626  5028               	movf	utoa@i^0,w,c
  8964   004628  1029               	iorwf	(utoa@i+1)^0,w,c
  8965   00462A  B4D8               	btfsc	status,2,c
  8966   00462C  EF1A  F023         	goto	u8981
  8967   004630  EF1C  F023         	goto	u8980
  8968   004634                     u8981:
  8969   004634  EF32  F023         	goto	l7438
  8970   004638                     u8980:
  8971   004638  5022               	movf	utoa@d^0,w,c
  8972   00463A  1023               	iorwf	(utoa@d+1)^0,w,c
  8973   00463C  A4D8               	btfss	status,2,c
  8974   00463E  EF23  F023         	goto	u8991
  8975   004642  EF25  F023         	goto	u8990
  8976   004646                     u8991:
  8977   004646  EFE9  F022         	goto	l7422
  8978   00464A                     u8990:
  8979   00464A  BE27               	btfsc	(utoa@p+1)^0,7,c
  8980   00464C  EF32  F023         	goto	u9000
  8981   004650  5027               	movf	(utoa@p+1)^0,w,c
  8982   004652  E106               	bnz	u9001
  8983   004654  0426               	decf	utoa@p^0,w,c
  8984   004656  B0D8               	btfsc	status,0,c
  8985   004658  EF30  F023         	goto	u9001
  8986   00465C  EF32  F023         	goto	u9000
  8987   004660                     u9001:
  8988   004660  EFE9  F022         	goto	l7422
  8989   004664                     u9000:
  8990   004664                     l7438:
  8991                           
  8992                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1046:     return (void) pad(fp, &db
      +                          uf[i], w);
  8993   004664  C020  F017         	movff	utoa@fp,pad@fp
  8994   004668  C021  F018         	movff	utoa@fp+1,pad@fp+1
  8995   00466C  0E27               	movlw	low _dbuf
  8996   00466E  2428               	addwf	utoa@i^0,w,c
  8997   004670  6E19               	movwf	pad@buf^0,c
  8998   004672  0E01               	movlw	high _dbuf
  8999   004674  2029               	addwfc	(utoa@i+1)^0,w,c
  9000   004676  6E1A               	movwf	(pad@buf+1)^0,c
  9001   004678  C024  F01B         	movff	utoa@w,pad@p
  9002   00467C  C025  F01C         	movff	utoa@w+1,pad@p+1
  9003   004680  ECD4  F025         	call	_pad	;wreg free
  9004   004684  0012               	return		;funcret
  9005   004686                     __end_of_utoa:
  9006                           	callstack 0
  9007                           
  9008 ;; *************** function ___lwmod *****************
  9009 ;; Defined at:
  9010 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwmod.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  dividend        2    5[COMRAM] unsigned int 
  9013 ;;  divisor         2    7[COMRAM] unsigned int 
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;  counter         1    9[COMRAM] unsigned char 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  2    5[COMRAM] unsigned int 
  9018 ;; Registers used:
  9019 ;;		wreg, status,2, status,0
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9025 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9028 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9029 ;;Total ram usage:        5 bytes
  9030 ;; Hardware stack levels used: 1
  9031 ;; Hardware stack levels required when called: 1
  9032 ;; This function calls:
  9033 ;;		Nothing
  9034 ;; This function is called by:
  9035 ;;		_utoa
  9036 ;; This function uses a non-reentrant model
  9037 ;;
  9038                           
  9039                           	psect	text31
  9040   004D92                     __ptext31:
  9041                           	callstack 0
  9042   004D92                     ___lwmod:
  9043                           	callstack 24
  9044   004D92  5008               	movf	___lwmod@divisor^0,w,c
  9045   004D94  1009               	iorwf	(___lwmod@divisor+1)^0,w,c
  9046   004D96  B4D8               	btfsc	status,2,c
  9047   004D98  EFD0  F026         	goto	u8171
  9048   004D9C  EFD2  F026         	goto	u8170
  9049   004DA0                     u8171:
  9050   004DA0  EFF6  F026         	goto	l1211
  9051   004DA4                     u8170:
  9052   004DA4  0E01               	movlw	1
  9053   004DA6  6E0A               	movwf	___lwmod@counter^0,c
  9054   004DA8  EFDA  F026         	goto	l7006
  9055   004DAC                     l7004:
  9056   004DAC  90D8               	bcf	status,0,c
  9057   004DAE  3608               	rlcf	___lwmod@divisor^0,f,c
  9058   004DB0  3609               	rlcf	(___lwmod@divisor+1)^0,f,c
  9059   004DB2  2A0A               	incf	___lwmod@counter^0,f,c
  9060   004DB4                     l7006:
  9061   004DB4  AE09               	btfss	(___lwmod@divisor+1)^0,7,c
  9062   004DB6  EFDF  F026         	goto	u8181
  9063   004DBA  EFE1  F026         	goto	u8180
  9064   004DBE                     u8181:
  9065   004DBE  EFD6  F026         	goto	l7004
  9066   004DC2                     u8180:
  9067   004DC2                     l7008:
  9068   004DC2  5008               	movf	___lwmod@divisor^0,w,c
  9069   004DC4  5C06               	subwf	___lwmod@dividend^0,w,c
  9070   004DC6  5009               	movf	(___lwmod@divisor+1)^0,w,c
  9071   004DC8  5807               	subwfb	(___lwmod@dividend+1)^0,w,c
  9072   004DCA  A0D8               	btfss	status,0,c
  9073   004DCC  EFEA  F026         	goto	u8191
  9074   004DD0  EFEC  F026         	goto	u8190
  9075   004DD4                     u8191:
  9076   004DD4  EFF0  F026         	goto	l7012
  9077   004DD8                     u8190:
  9078   004DD8  5008               	movf	___lwmod@divisor^0,w,c
  9079   004DDA  5E06               	subwf	___lwmod@dividend^0,f,c
  9080   004DDC  5009               	movf	(___lwmod@divisor+1)^0,w,c
  9081   004DDE  5A07               	subwfb	(___lwmod@dividend+1)^0,f,c
  9082   004DE0                     l7012:
  9083   004DE0  90D8               	bcf	status,0,c
  9084   004DE2  3209               	rrcf	(___lwmod@divisor+1)^0,f,c
  9085   004DE4  3208               	rrcf	___lwmod@divisor^0,f,c
  9086   004DE6  2E0A               	decfsz	___lwmod@counter^0,f,c
  9087   004DE8  EFE1  F026         	goto	l7008
  9088   004DEC                     l1211:
  9089   004DEC  C006  F006         	movff	___lwmod@dividend,?___lwmod
  9090   004DF0  C007  F007         	movff	___lwmod@dividend+1,?___lwmod+1
  9091   004DF4  0012               	return		;funcret
  9092   004DF6                     __end_of___lwmod:
  9093                           	callstack 0
  9094                           
  9095 ;; *************** function ___lwdiv *****************
  9096 ;; Defined at:
  9097 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwdiv.c"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;  dividend        2    5[COMRAM] unsigned int 
  9100 ;;  divisor         2    7[COMRAM] unsigned int 
  9101 ;; Auto vars:     Size  Location     Type
  9102 ;;  quotient        2   10[COMRAM] unsigned int 
  9103 ;;  counter         1    9[COMRAM] unsigned char 
  9104 ;; Return value:  Size  Location     Type
  9105 ;;                  2    5[COMRAM] unsigned int 
  9106 ;; Registers used:
  9107 ;;		wreg, status,2, status,0
  9108 ;; Tracked objects:
  9109 ;;		On entry : 0/0
  9110 ;;		On exit  : 0/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9114 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9116 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9117 ;;Total ram usage:        7 bytes
  9118 ;; Hardware stack levels used: 1
  9119 ;; Hardware stack levels required when called: 1
  9120 ;; This function calls:
  9121 ;;		Nothing
  9122 ;; This function is called by:
  9123 ;;		_utoa
  9124 ;; This function uses a non-reentrant model
  9125 ;;
  9126                           
  9127                           	psect	text32
  9128   004C46                     __ptext32:
  9129                           	callstack 0
  9130   004C46                     ___lwdiv:
  9131                           	callstack 24
  9132   004C46  0E00               	movlw	0
  9133   004C48  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9134   004C4A  0E00               	movlw	0
  9135   004C4C  6E0B               	movwf	___lwdiv@quotient^0,c
  9136   004C4E  5008               	movf	___lwdiv@divisor^0,w,c
  9137   004C50  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9138   004C52  B4D8               	btfsc	status,2,c
  9139   004C54  EF2E  F026         	goto	u8141
  9140   004C58  EF30  F026         	goto	u8140
  9141   004C5C                     u8141:
  9142   004C5C  EF58  F026         	goto	l1201
  9143   004C60                     u8140:
  9144   004C60  0E01               	movlw	1
  9145   004C62  6E0A               	movwf	___lwdiv@counter^0,c
  9146   004C64  EF38  F026         	goto	l6986
  9147   004C68                     l6984:
  9148   004C68  90D8               	bcf	status,0,c
  9149   004C6A  3608               	rlcf	___lwdiv@divisor^0,f,c
  9150   004C6C  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9151   004C6E  2A0A               	incf	___lwdiv@counter^0,f,c
  9152   004C70                     l6986:
  9153   004C70  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  9154   004C72  EF3D  F026         	goto	u8151
  9155   004C76  EF3F  F026         	goto	u8150
  9156   004C7A                     u8151:
  9157   004C7A  EF34  F026         	goto	l6984
  9158   004C7E                     u8150:
  9159   004C7E                     l6988:
  9160   004C7E  90D8               	bcf	status,0,c
  9161   004C80  360B               	rlcf	___lwdiv@quotient^0,f,c
  9162   004C82  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9163   004C84  5008               	movf	___lwdiv@divisor^0,w,c
  9164   004C86  5C06               	subwf	___lwdiv@dividend^0,w,c
  9165   004C88  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9166   004C8A  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9167   004C8C  A0D8               	btfss	status,0,c
  9168   004C8E  EF4B  F026         	goto	u8161
  9169   004C92  EF4D  F026         	goto	u8160
  9170   004C96                     u8161:
  9171   004C96  EF52  F026         	goto	l6996
  9172   004C9A                     u8160:
  9173   004C9A  5008               	movf	___lwdiv@divisor^0,w,c
  9174   004C9C  5E06               	subwf	___lwdiv@dividend^0,f,c
  9175   004C9E  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9176   004CA0  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9177   004CA2  800B               	bsf	___lwdiv@quotient^0,0,c
  9178   004CA4                     l6996:
  9179   004CA4  90D8               	bcf	status,0,c
  9180   004CA6  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9181   004CA8  3208               	rrcf	___lwdiv@divisor^0,f,c
  9182   004CAA  2E0A               	decfsz	___lwdiv@counter^0,f,c
  9183   004CAC  EF3F  F026         	goto	l6988
  9184   004CB0                     l1201:
  9185   004CB0  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  9186   004CB4  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9187   004CB8  0012               	return		;funcret
  9188   004CBA                     __end_of___lwdiv:
  9189                           	callstack 0
  9190                           
  9191 ;; *************** function _stoa *****************
  9192 ;; Defined at:
  9193 ;;		line 942 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  9196 ;;		 -> NULL(0), sprintf@f(12), 
  9197 ;;  s               2   17[COMRAM] PTR unsigned char 
  9198 ;;		 -> ?_printf(2), ?_sprintf(2), runUART@reversed(31), STR_26(1), 
  9199 ;;		 -> STR_25(6), STR_24(5), STR_23(4), STR_22(4), 
  9200 ;;		 -> STR_21(4), STR_20(5), STR_19(5), 
  9201 ;; Auto vars:     Size  Location     Type
  9202 ;;  l               2   27[COMRAM] int 
  9203 ;;  cp              2   25[COMRAM] PTR unsigned char 
  9204 ;;		 -> ?_printf(2), STR_42(7), ?_sprintf(2), runUART@reversed(31), 
  9205 ;;		 -> STR_26(1), STR_25(6), STR_24(5), STR_23(4), 
  9206 ;;		 -> STR_22(4), STR_21(4), STR_20(5), STR_19(5), 
  9207 ;;  w               2   23[COMRAM] int 
  9208 ;;  p               2   21[COMRAM] int 
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  1    wreg      void 
  9211 ;; Registers used:
  9212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/0
  9215 ;;		On exit  : 0/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9218 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9219 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9220 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9221 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9222 ;;Total ram usage:       14 bytes
  9223 ;; Hardware stack levels used: 1
  9224 ;; Hardware stack levels required when called: 3
  9225 ;; This function calls:
  9226 ;;		_fputc
  9227 ;; This function is called by:
  9228 ;;		_vfpfcnvrt
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           	psect	text33
  9233   003A42                     __ptext33:
  9234                           	callstack 0
  9235   003A42                     _stoa:
  9236                           	callstack 23
  9237   003A42                     
  9238                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 942: static void stoa(FILE *fp, cha
      +                          r *s);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 943: {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 944:     char *cp;;D:\MPLABX\Compiler\pic\sources\c99\commo
      +                          n\doprnt.c: 945:     int l, p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 947: 
      +                           int w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 951:     cp = s;
  9239   003A42  C012  F01A         	movff	stoa@s,stoa@cp
  9240   003A46  C013  F01B         	movff	stoa@s+1,stoa@cp+1
  9241                           
  9242                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 952:     if (!cp) {
  9243   003A4A  501A               	movf	stoa@cp^0,w,c
  9244   003A4C  101B               	iorwf	(stoa@cp+1)^0,w,c
  9245   003A4E  A4D8               	btfss	status,2,c
  9246   003A50  EF2C  F01D         	goto	u8861
  9247   003A54  EF2E  F01D         	goto	u8860
  9248   003A58                     u8861:
  9249   003A58  EF32  F01D         	goto	l7380
  9250   003A5C                     u8860:
  9251   003A5C                     
  9252                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 953:         cp = "(null)";
  9253   003A5C  0EBF               	movlw	low STR_42
  9254   003A5E  6E1A               	movwf	stoa@cp^0,c
  9255   003A60  0EFF               	movlw	high STR_42
  9256   003A62  6E1B               	movwf	(stoa@cp+1)^0,c
  9257   003A64                     l7380:
  9258                           
  9259                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 957:  for (l = 0; cp[l] != '\0'; l+
      +                          +) {
  9260   003A64  0E00               	movlw	0
  9261   003A66  6E1D               	movwf	(stoa@l+1)^0,c
  9262   003A68  0E00               	movlw	0
  9263   003A6A  6E1C               	movwf	stoa@l^0,c
  9264   003A6C  EF3A  F01D         	goto	l7384
  9265   003A70                     l7382:
  9266   003A70  4A1C               	infsnz	stoa@l^0,f,c
  9267   003A72  2A1D               	incf	(stoa@l+1)^0,f,c
  9268   003A74                     l7384:
  9269   003A74  501C               	movf	stoa@l^0,w,c
  9270   003A76  241A               	addwf	stoa@cp^0,w,c
  9271   003A78  6E14               	movwf	??_stoa^0,c
  9272   003A7A  501D               	movf	(stoa@l+1)^0,w,c
  9273   003A7C  201B               	addwfc	(stoa@cp+1)^0,w,c
  9274   003A7E  6E15               	movwf	(??_stoa+1)^0,c
  9275   003A80  C014  FFF6         	movff	??_stoa,tblptrl
  9276   003A84  C015  FFF7         	movff	??_stoa+1,tblptrh
  9277   003A88  0E00               	movlw	low (__mediumconst shr (0+16))
  9278   003A8A  6EF8               	movwf	tblptru,c
  9279   003A8C  0E0F               	movlw	(high __ramtop+-1)
  9280   003A8E  64F7               	cpfsgt	tblptrh,c
  9281   003A90  D003               	bra	u8877
  9282   003A92  0008               	tblrd		*
  9283   003A94  50F5               	movf	tablat,w,c
  9284   003A96  D005               	bra	u8870
  9285   003A98                     u8877:
  9286   003A98  CFF6 FFE1          	movff	tblptrl,fsr1l
  9287   003A9C  CFF7 FFE2          	movff	tblptrh,fsr1h
  9288   003AA0  50E7               	movf	indf1,w,c
  9289   003AA2                     u8870:
  9290   003AA2  0900               	iorlw	0
  9291   003AA4  A4D8               	btfss	status,2,c
  9292   003AA6  EF57  F01D         	goto	u8881
  9293   003AAA  EF59  F01D         	goto	u8880
  9294   003AAE                     u8881:
  9295   003AAE  EF38  F01D         	goto	l7382
  9296   003AB2                     u8880:
  9297   003AB2                     
  9298                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 961:  if (!(prec < 0) && (prec < l)
      +                          ) {
  9299   003AB2  BE58               	btfsc	(_prec+1)^0,7,c
  9300   003AB4  EF5E  F01D         	goto	u8891
  9301   003AB8  EF60  F01D         	goto	u8890
  9302   003ABC                     u8891:
  9303   003ABC  EF73  F01D         	goto	l1501
  9304   003AC0                     u8890:
  9305   003AC0  501C               	movf	stoa@l^0,w,c
  9306   003AC2  5C57               	subwf	_prec^0,w,c
  9307   003AC4  5058               	movf	(_prec+1)^0,w,c
  9308   003AC6  0A80               	xorlw	128
  9309   003AC8  6E14               	movwf	??_stoa^0,c
  9310   003ACA  501D               	movf	(stoa@l+1)^0,w,c
  9311   003ACC  0A80               	xorlw	128
  9312   003ACE  5814               	subwfb	??_stoa^0,w,c
  9313   003AD0  B0D8               	btfsc	status,0,c
  9314   003AD2  EF6D  F01D         	goto	u8901
  9315   003AD6  EF6F  F01D         	goto	u8900
  9316   003ADA                     u8901:
  9317   003ADA  EF73  F01D         	goto	l1501
  9318   003ADE                     u8900:
  9319   003ADE                     
  9320                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 962:   l = prec;
  9321   003ADE  C057  F01C         	movff	_prec,stoa@l
  9322   003AE2  C058  F01D         	movff	_prec+1,stoa@l+1
  9323   003AE6                     l1501:
  9324                           
  9325                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 965:     p = l;
  9326   003AE6  C01C  F016         	movff	stoa@l,stoa@p
  9327   003AEA  C01D  F017         	movff	stoa@l+1,stoa@p+1
  9328                           
  9329                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 969:     w = width;
  9330   003AEE  C055  F018         	movff	_width,stoa@w
  9331   003AF2  C056  F019         	movff	_width+1,stoa@w+1
  9332                           
  9333                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 970:     if (!(flags & (1 << 0))) {
  9334   003AF6  B059               	btfsc	_flags^0,0,c
  9335   003AF8  EF80  F01D         	goto	u8911
  9336   003AFC  EF82  F01D         	goto	u8910
  9337   003B00                     u8911:
  9338   003B00  EFBE  F01D         	goto	l7404
  9339   003B04                     u8910:
  9340   003B04  EF90  F01D         	goto	l7398
  9341   003B08                     l7394:
  9342                           
  9343                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 972:             fputc(' ', fp);
  9344   003B08  0E00               	movlw	0
  9345   003B0A  6E08               	movwf	(fputc@c+1)^0,c
  9346   003B0C  0E20               	movlw	32
  9347   003B0E  6E07               	movwf	fputc@c^0,c
  9348   003B10  C010  F009         	movff	stoa@fp,fputc@fp
  9349   003B14  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9350   003B18  ECB0  F023         	call	_fputc	;wreg free
  9351   003B1C                     
  9352                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 973:             ++l;
  9353   003B1C  4A1C               	infsnz	stoa@l^0,f,c
  9354   003B1E  2A1D               	incf	(stoa@l+1)^0,f,c
  9355   003B20                     l7398:
  9356                           
  9357                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 971:         while (l < w) {
  9358   003B20  5018               	movf	stoa@w^0,w,c
  9359   003B22  5C1C               	subwf	stoa@l^0,w,c
  9360   003B24  501D               	movf	(stoa@l+1)^0,w,c
  9361   003B26  0A80               	xorlw	128
  9362   003B28  6E14               	movwf	??_stoa^0,c
  9363   003B2A  5019               	movf	(stoa@w+1)^0,w,c
  9364   003B2C  0A80               	xorlw	128
  9365   003B2E  5814               	subwfb	??_stoa^0,w,c
  9366   003B30  A0D8               	btfss	status,0,c
  9367   003B32  EF9D  F01D         	goto	u8921
  9368   003B36  EF9F  F01D         	goto	u8920
  9369   003B3A                     u8921:
  9370   003B3A  EF84  F01D         	goto	l7394
  9371   003B3E                     u8920:
  9372   003B3E  EFBE  F01D         	goto	l7404
  9373   003B42                     l7400:
  9374                           
  9375                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 980:         fputc(*cp, fp);
  9376   003B42  C01A  FFF6         	movff	stoa@cp,tblptrl
  9377   003B46  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  9378   003B4A  0E00               	movlw	low (__mediumconst shr (0+16))
  9379   003B4C  6EF8               	movwf	tblptru,c
  9380   003B4E  0E0F               	movlw	(high __ramtop+-1)
  9381   003B50  64F7               	cpfsgt	tblptrh,c
  9382   003B52  D003               	bra	u8937
  9383   003B54  0008               	tblrd		*
  9384   003B56  50F5               	movf	tablat,w,c
  9385   003B58  D005               	bra	u8930
  9386   003B5A                     u8937:
  9387   003B5A  CFF6 FFE1          	movff	tblptrl,fsr1l
  9388   003B5E  CFF7 FFE2          	movff	tblptrh,fsr1h
  9389   003B62  50E7               	movf	indf1,w,c
  9390   003B64                     u8930:
  9391   003B64  6E14               	movwf	??_stoa^0,c
  9392   003B66  5014               	movf	??_stoa^0,w,c
  9393   003B68  6E07               	movwf	fputc@c^0,c
  9394   003B6A  6A08               	clrf	(fputc@c+1)^0,c
  9395   003B6C  C010  F009         	movff	stoa@fp,fputc@fp
  9396   003B70  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9397   003B74  ECB0  F023         	call	_fputc	;wreg free
  9398   003B78                     
  9399                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 981:         ++cp;
  9400   003B78  4A1A               	infsnz	stoa@cp^0,f,c
  9401   003B7A  2A1B               	incf	(stoa@cp+1)^0,f,c
  9402   003B7C                     l7404:
  9403                           
  9404                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 979:     while (p--) {
  9405   003B7C  0616               	decf	stoa@p^0,f,c
  9406   003B7E  A0D8               	btfss	status,0,c
  9407   003B80  0617               	decf	(stoa@p+1)^0,f,c
  9408   003B82  2816               	incf	stoa@p^0,w,c
  9409   003B84  E106               	bnz	u8941
  9410   003B86  2817               	incf	(stoa@p+1)^0,w,c
  9411   003B88  A4D8               	btfss	status,2,c
  9412   003B8A  EFC9  F01D         	goto	u8941
  9413   003B8E  EFCB  F01D         	goto	u8940
  9414   003B92                     u8941:
  9415   003B92  EFA1  F01D         	goto	l7400
  9416   003B96                     u8940:
  9417   003B96                     
  9418                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 986:     if (flags & (1 << 0)) {
  9419   003B96  A059               	btfss	_flags^0,0,c
  9420   003B98  EFD0  F01D         	goto	u8951
  9421   003B9C  EFD2  F01D         	goto	u8950
  9422   003BA0                     u8951:
  9423   003BA0  EFEF  F01D         	goto	l1513
  9424   003BA4                     u8950:
  9425   003BA4  EFE0  F01D         	goto	l7412
  9426   003BA8                     l7408:
  9427                           
  9428                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 988:             fputc(' ', fp);
  9429   003BA8  0E00               	movlw	0
  9430   003BAA  6E08               	movwf	(fputc@c+1)^0,c
  9431   003BAC  0E20               	movlw	32
  9432   003BAE  6E07               	movwf	fputc@c^0,c
  9433   003BB0  C010  F009         	movff	stoa@fp,fputc@fp
  9434   003BB4  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9435   003BB8  ECB0  F023         	call	_fputc	;wreg free
  9436   003BBC                     
  9437                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 989:             ++l;
  9438   003BBC  4A1C               	infsnz	stoa@l^0,f,c
  9439   003BBE  2A1D               	incf	(stoa@l+1)^0,f,c
  9440   003BC0                     l7412:
  9441                           
  9442                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 987:         while (l < w) {
  9443   003BC0  5018               	movf	stoa@w^0,w,c
  9444   003BC2  5C1C               	subwf	stoa@l^0,w,c
  9445   003BC4  501D               	movf	(stoa@l+1)^0,w,c
  9446   003BC6  0A80               	xorlw	128
  9447   003BC8  6E14               	movwf	??_stoa^0,c
  9448   003BCA  5019               	movf	(stoa@w+1)^0,w,c
  9449   003BCC  0A80               	xorlw	128
  9450   003BCE  5814               	subwfb	??_stoa^0,w,c
  9451   003BD0  A0D8               	btfss	status,0,c
  9452   003BD2  EFED  F01D         	goto	u8961
  9453   003BD6  EFEF  F01D         	goto	u8960
  9454   003BDA                     u8961:
  9455   003BDA  EFD4  F01D         	goto	l7408
  9456   003BDE                     u8960:
  9457   003BDE                     l1513:
  9458   003BDE  0012               	return		;funcret
  9459   003BE0                     __end_of_stoa:
  9460                           	callstack 0
  9461                           
  9462 ;; *************** function _read_prec_or_width *****************
  9463 ;; Defined at:
  9464 ;;		line 1158 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9465 ;; Parameters:    Size  Location     Type
  9466 ;;  fmt             1   11[COMRAM] PTR PTR const unsigned c
  9467 ;;		 -> vfprintf@cfmt(2), 
  9468 ;;  ap              1   12[COMRAM] PTR PTR void [1]
  9469 ;;		 -> printf@ap(1), sprintf@ap(1), 
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;  c               1   13[COMRAM] unsigned char 
  9472 ;;  n               2   14[COMRAM] int 
  9473 ;; Return value:  Size  Location     Type
  9474 ;;                  2   11[COMRAM] int 
  9475 ;; Registers used:
  9476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9477 ;; Tracked objects:
  9478 ;;		On entry : 0/0
  9479 ;;		On exit  : 0/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9482 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9483 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9485 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9486 ;;Total ram usage:        5 bytes
  9487 ;; Hardware stack levels used: 1
  9488 ;; Hardware stack levels required when called: 2
  9489 ;; This function calls:
  9490 ;;		___wmul
  9491 ;; This function is called by:
  9492 ;;		_vfpfcnvrt
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496                           	psect	text34
  9497   004A50                     __ptext34:
  9498                           	callstack 0
  9499   004A50                     _read_prec_or_width:
  9500                           	callstack 24
  9501   004A50                     
  9502                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1159:     int n = 0;
  9503   004A50  0E00               	movlw	0
  9504   004A52  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9505   004A54  0E00               	movlw	0
  9506   004A56  6E0F               	movwf	read_prec_or_width@n^0,c
  9507   004A58                     
  9508                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1160:     if ((*fmt)[0] == '*') {
  9509   004A58  500C               	movf	read_prec_or_width@fmt^0,w,c
  9510   004A5A  6ED9               	movwf	fsr2l,c
  9511   004A5C  6ADA               	clrf	fsr2h,c
  9512   004A5E  CFDE FFF6          	movff	postinc2,tblptrl
  9513   004A62  CFDD FFF7          	movff	postdec2,tblptrh
  9514   004A66                     	if	0	;tblptru may be non-zero
  9515   004A66                     	endif
  9516   004A66                     	if	0	;tblptru may be non-zero
  9517   004A66                     	endif
  9518   004A66  0008               	tblrd		*
  9519   004A68  50F5               	movf	tablat,w,c
  9520   004A6A  0A2A               	xorlw	42
  9521   004A6C  A4D8               	btfss	status,2,c
  9522   004A6E  EF3B  F025         	goto	u9011
  9523   004A72  EF3D  F025         	goto	u9010
  9524   004A76                     u9011:
  9525   004A76  EF67  F025         	goto	l7454
  9526   004A7A                     u9010:
  9527   004A7A                     
  9528                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1161:         ++*fmt;
  9529   004A7A  500C               	movf	read_prec_or_width@fmt^0,w,c
  9530   004A7C  6ED9               	movwf	fsr2l,c
  9531   004A7E  6ADA               	clrf	fsr2h,c
  9532   004A80  2ADE               	incf	postinc2,f,c
  9533   004A82  0E00               	movlw	0
  9534   004A84  22DD               	addwfc	postdec2,f,c
  9535   004A86                     
  9536                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1162:         n = (*(int *)__va_arg
      +                          (*(int **)*ap, (int)0));
  9537   004A86  500D               	movf	read_prec_or_width@ap^0,w,c
  9538   004A88  6ED9               	movwf	fsr2l,c
  9539   004A8A  6ADA               	clrf	fsr2h,c
  9540   004A8C  0E02               	movlw	2
  9541   004A8E  26DF               	addwf	indf2,f,c
  9542   004A90  5CDF               	subwf	indf2,w,c
  9543   004A92  6ED9               	movwf	fsr2l,c
  9544   004A94  6ADA               	clrf	fsr2h,c
  9545   004A96  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  9546   004A9A  CFDE F010          	movff	postinc2,read_prec_or_width@n+1
  9547                           
  9548                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1163:     } else {
  9549   004A9E  EF7A  F025         	goto	l1529
  9550   004AA2                     l7450:
  9551                           
  9552                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1166:             n = n * 10 + c;
  9553   004AA2  C00F  F006         	movff	read_prec_or_width@n,___wmul@multiplier
  9554   004AA6  C010  F007         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  9555   004AAA  0E00               	movlw	0
  9556   004AAC  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  9557   004AAE  0E0A               	movlw	10
  9558   004AB0  6E08               	movwf	___wmul@multiplicand^0,c
  9559   004AB2  EC0A  F029         	call	___wmul	;wreg free
  9560   004AB6  500E               	movf	read_prec_or_width@c^0,w,c
  9561   004AB8  2406               	addwf	?___wmul^0,w,c
  9562   004ABA  6E0F               	movwf	read_prec_or_width@n^0,c
  9563   004ABC  0E00               	movlw	0
  9564   004ABE  2007               	addwfc	(?___wmul+1)^0,w,c
  9565   004AC0  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9566   004AC2                     
  9567                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1167:             ++*fmt;
  9568   004AC2  500C               	movf	read_prec_or_width@fmt^0,w,c
  9569   004AC4  6ED9               	movwf	fsr2l,c
  9570   004AC6  6ADA               	clrf	fsr2h,c
  9571   004AC8  2ADE               	incf	postinc2,f,c
  9572   004ACA  0E00               	movlw	0
  9573   004ACC  22DD               	addwfc	postdec2,f,c
  9574   004ACE                     l7454:
  9575                           
  9576                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1165:         while ((c = ((unsigne
      +                          d)(*fmt)[0]) - '0') < 10) {
  9577   004ACE  500C               	movf	read_prec_or_width@fmt^0,w,c
  9578   004AD0  6ED9               	movwf	fsr2l,c
  9579   004AD2  6ADA               	clrf	fsr2h,c
  9580   004AD4  CFDE FFF6          	movff	postinc2,tblptrl
  9581   004AD8  CFDD FFF7          	movff	postdec2,tblptrh
  9582   004ADC                     	if	0	;tblptru may be non-zero
  9583   004ADC                     	endif
  9584   004ADC                     	if	0	;tblptru may be non-zero
  9585   004ADC                     	endif
  9586   004ADC  0008               	tblrd		*
  9587   004ADE  50F5               	movf	tablat,w,c
  9588   004AE0  0FD0               	addlw	208
  9589   004AE2  6E0E               	movwf	read_prec_or_width@c^0,c
  9590   004AE4  0E09               	movlw	9
  9591   004AE6  640E               	cpfsgt	read_prec_or_width@c^0,c
  9592   004AE8  EF78  F025         	goto	u9021
  9593   004AEC  EF7A  F025         	goto	u9020
  9594   004AF0                     u9021:
  9595   004AF0  EF51  F025         	goto	l7450
  9596   004AF4                     u9020:
  9597   004AF4                     l1529:
  9598                           
  9599                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1170:     return n;
  9600   004AF4  C00F  F00C         	movff	read_prec_or_width@n,?_read_prec_or_width
  9601   004AF8  C010  F00D         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  9602   004AFC  0012               	return		;funcret
  9603   004AFE                     __end_of_read_prec_or_width:
  9604                           	callstack 0
  9605                           
  9606 ;; *************** function ___wmul *****************
  9607 ;; Defined at:
  9608 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul16.c"
  9609 ;; Parameters:    Size  Location     Type
  9610 ;;  multiplier      2    5[COMRAM] unsigned int 
  9611 ;;  multiplicand    2    7[COMRAM] unsigned int 
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;  product         2    9[COMRAM] unsigned int 
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  2    5[COMRAM] unsigned int 
  9616 ;; Registers used:
  9617 ;;		wreg, status,2, status,0, prodl, prodh
  9618 ;; Tracked objects:
  9619 ;;		On entry : 0/0
  9620 ;;		On exit  : 0/0
  9621 ;;		Unchanged: 0/0
  9622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9626 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9627 ;;Total ram usage:        6 bytes
  9628 ;; Hardware stack levels used: 1
  9629 ;; Hardware stack levels required when called: 1
  9630 ;; This function calls:
  9631 ;;		Nothing
  9632 ;; This function is called by:
  9633 ;;		_read_prec_or_width
  9634 ;; This function uses a non-reentrant model
  9635 ;;
  9636                           
  9637                           	psect	text35
  9638   005214                     __ptext35:
  9639                           	callstack 0
  9640   005214                     ___wmul:
  9641                           	callstack 24
  9642   005214  5006               	movf	___wmul@multiplier^0,w,c
  9643   005216  0208               	mulwf	___wmul@multiplicand^0,c
  9644   005218  CFF3 F00A          	movff	prodl,___wmul@product
  9645   00521C  CFF4 F00B          	movff	prodh,___wmul@product+1
  9646   005220  5006               	movf	___wmul@multiplier^0,w,c
  9647   005222  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  9648   005224  50F3               	movf	243,w,c
  9649   005226  260B               	addwf	(___wmul@product+1)^0,f,c
  9650   005228  5007               	movf	(___wmul@multiplier+1)^0,w,c
  9651   00522A  0208               	mulwf	___wmul@multiplicand^0,c
  9652   00522C  50F3               	movf	243,w,c
  9653   00522E  260B               	addwf	(___wmul@product+1)^0,f,c
  9654   005230  C00A  F006         	movff	___wmul@product,?___wmul
  9655   005234  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  9656   005238  0012               	return		;funcret
  9657   00523A                     __end_of___wmul:
  9658                           	callstack 0
  9659                           
  9660 ;; *************** function _efgtoa *****************
  9661 ;; Defined at:
  9662 ;;		line 587 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9663 ;; Parameters:    Size  Location     Type
  9664 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  9665 ;;		 -> NULL(0), sprintf@f(12), 
  9666 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  9667 ;;  c               1   42[BANK0 ] unsigned char 
  9668 ;; Auto vars:     Size  Location     Type
  9669 ;;  u               4   85[BANK0 ] struct flui
  9670 ;;  g               4   79[BANK0 ] struct flui
  9671 ;;  l               4   74[BANK0 ] struct flui
  9672 ;;  h               4   70[BANK0 ] struct flui
  9673 ;;  ou              4   64[BANK0 ] struct flui
  9674 ;;  n               2   83[BANK0 ] int 
  9675 ;;  i               2   68[BANK0 ] int 
  9676 ;;  w               2   62[BANK0 ] int 
  9677 ;;  e               2   60[BANK0 ] int 
  9678 ;;  m               2   58[BANK0 ] int 
  9679 ;;  d               2   56[BANK0 ] int 
  9680 ;;  t               2   49[BANK0 ] int 
  9681 ;;  p               2   47[BANK0 ] int 
  9682 ;;  ne              2   45[BANK0 ] int 
  9683 ;;  sign            1   78[BANK0 ] unsigned char 
  9684 ;;  nmode           1   55[BANK0 ] unsigned char 
  9685 ;;  mode            1   54[BANK0 ] unsigned char 
  9686 ;;  pp              1   53[BANK0 ] unsigned char 
  9687 ;;  esign           1    0        unsigned char 
  9688 ;; Return value:  Size  Location     Type
  9689 ;;                  1    wreg      void 
  9690 ;; Registers used:
  9691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9692 ;; Tracked objects:
  9693 ;;		On entry : 0/0
  9694 ;;		On exit  : 0/0
  9695 ;;		Unchanged: 0/0
  9696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9697 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9698 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9699 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9700 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9701 ;;Total ram usage:       53 bytes
  9702 ;; Hardware stack levels used: 1
  9703 ;; Hardware stack levels required when called: 5
  9704 ;; This function calls:
  9705 ;;		___fladd
  9706 ;;		___fldiv
  9707 ;;		___fleq
  9708 ;;		___flge
  9709 ;;		___flmul
  9710 ;;		___flneg
  9711 ;;		___flsub
  9712 ;;		___fltol
  9713 ;;		___fpclassifyf
  9714 ;;		_floorf
  9715 ;;		_labs
  9716 ;;		_memcpy
  9717 ;;		_pad
  9718 ;;		_strcpy
  9719 ;; This function is called by:
  9720 ;;		_vfpfcnvrt
  9721 ;; This function uses a non-reentrant model
  9722 ;;
  9723                           
  9724                           	psect	text36
  9725   000152                     __ptext36:
  9726                           	callstack 0
  9727   000152                     _efgtoa:
  9728                           	callstack 21
  9729   000152                     
  9730                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 587: static void efgtoa(FILE *fp, l
      +                          ong double f, char c);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 588: {;D:\MPLA
      +                          BX\Compiler\pic\sources\c99\common\doprnt.c: 589:     char mode, nmode, pp, sign, esign;
      +                          ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, 
      +                          t, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 591:     long double h, l;;D:\
      +                          MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 592:  union flui g, u, ou;
  9731   000152  0E00               	movlw	0
  9732   000154  0100               	movlb	0	; () banked
  9733   000156  6FAE               	movwf	efgtoa@sign& (0+255),b
  9734   000158                     
  9735                           ; BSR set to: 0
  9736                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  9737   000158  C086  F0AF         	movff	efgtoa@f,efgtoa@g
  9738   00015C  C087  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  9739   000160  C088  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  9740   000164  C089  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  9741   000168                     
  9742                           ; BSR set to: 0
  9743                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 597:     if (g.f < 0.0) {
  9744   000168  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  9745   00016A  EFBB  F000         	goto	u8540
  9746   00016E  EFB9  F000         	goto	u8541
  9747   000172                     u8541:
  9748   000172  EFCF  F000         	goto	l7164
  9749   000176                     u8540:
  9750   000176                     
  9751                           ; BSR set to: 0
  9752                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 598:         sign = 1;
  9753   000176  0E01               	movlw	1
  9754   000178  6FAE               	movwf	efgtoa@sign& (0+255),b
  9755   00017A                     
  9756                           ; BSR set to: 0
  9757                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 599:         g.f = -g.f;
  9758   00017A  C0AF  F080         	movff	efgtoa@g,___flneg@f1
  9759   00017E  C0B0  F081         	movff	efgtoa@g+1,___flneg@f1+1
  9760   000182  C0B1  F082         	movff	efgtoa@g+2,___flneg@f1+2
  9761   000186  C0B2  F083         	movff	efgtoa@g+3,___flneg@f1+3
  9762   00018A  EC53  F028         	call	___flneg	;wreg free
  9763   00018E  C080  F0AF         	movff	?___flneg,efgtoa@g
  9764   000192  C081  F0B0         	movff	?___flneg+1,efgtoa@g+1
  9765   000196  C082  F0B1         	movff	?___flneg+2,efgtoa@g+2
  9766   00019A  C083  F0B2         	movff	?___flneg+3,efgtoa@g+3
  9767   00019E                     l7164:
  9768                           
  9769                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  9770   00019E  0E00               	movlw	0
  9771   0001A0  0100               	movlb	0	; () banked
  9772   0001A2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9773   0001A4  0E00               	movlw	0
  9774   0001A6  6FB3               	movwf	efgtoa@n& (0+255),b
  9775   0001A8                     
  9776                           ; BSR set to: 0
  9777                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 604:     w = width;
  9778   0001A8  C055  F09E         	movff	_width,efgtoa@w
  9779   0001AC  C056  F09F         	movff	_width+1,efgtoa@w+1
  9780   0001B0                     
  9781                           ; BSR set to: 0
  9782                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 605:     if (sign
  9783   0001B0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9784   0001B2  B4D8               	btfsc	status,2,c
  9785   0001B4  EFDE  F000         	goto	u8551
  9786   0001B8  EFE0  F000         	goto	u8550
  9787   0001BC                     u8551:
  9788   0001BC  EFF4  F000         	goto	l7178
  9789   0001C0                     u8550:
  9790   0001C0                     
  9791                           ; BSR set to: 0
  9792                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 609:    ) {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 610:   sign = sign ? '-' : '+';
  9793   0001C0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9794   0001C2  A4D8               	btfss	status,2,c
  9795   0001C4  EFE6  F000         	goto	u8561
  9796   0001C8  EFE8  F000         	goto	u8560
  9797   0001CC                     u8561:
  9798   0001CC  EFEE  F000         	goto	l7174
  9799   0001D0                     u8560:
  9800   0001D0                     
  9801                           ; BSR set to: 0
  9802   0001D0  0E00               	movlw	0
  9803   0001D2  6F94               	movwf	(_efgtoa$4070+1)& (0+255),b
  9804   0001D4  0E2B               	movlw	43
  9805   0001D6  6F93               	movwf	_efgtoa$4070& (0+255),b
  9806   0001D8  EFF2  F000         	goto	l7176
  9807   0001DC                     l7174:
  9808                           
  9809                           ; BSR set to: 0
  9810   0001DC  0E00               	movlw	0
  9811   0001DE  6F94               	movwf	(_efgtoa$4070+1)& (0+255),b
  9812   0001E0  0E2D               	movlw	45
  9813   0001E2  6F93               	movwf	_efgtoa$4070& (0+255),b
  9814   0001E4                     l7176:
  9815                           
  9816                           ; BSR set to: 0
  9817   0001E4  C093  F0AE         	movff	_efgtoa$4070,efgtoa@sign
  9818   0001E8                     l7178:
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 619:     if (( __fpclassifyf(g.f) =
      +                          = 1 )) {
  9822   0001E8  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  9823   0001EC  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9824   0001F0  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9825   0001F4  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9826   0001F8  EC4C  F022         	call	___fpclassifyf	;wreg free
  9827   0001FC  0406               	decf	?___fpclassifyf^0,w,c
  9828   0001FE  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9829   000200  A4D8               	btfss	status,2,c
  9830   000202  EF05  F001         	goto	u8571
  9831   000206  EF07  F001         	goto	u8570
  9832   00020A                     u8571:
  9833   00020A  EF3A  F001         	goto	l7196
  9834   00020E                     u8570:
  9835   00020E                     
  9836                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 620:   if (sign) {
  9837   00020E  0100               	movlb	0	; () banked
  9838   000210  51AE               	movf	efgtoa@sign& (0+255),w,b
  9839   000212  B4D8               	btfsc	status,2,c
  9840   000214  EF0E  F001         	goto	u8581
  9841   000218  EF10  F001         	goto	u8580
  9842   00021C                     u8581:
  9843   00021C  EF19  F001         	goto	l7188
  9844   000220                     u8580:
  9845   000220                     
  9846                           ; BSR set to: 0
  9847                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] = sign;
  9848   000220  C0AE  F127         	movff	efgtoa@sign,_dbuf
  9849   000224                     
  9850                           ; BSR set to: 0
  9851                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 622:    w--;
  9852   000224  079E               	decf	efgtoa@w& (0+255),f,b
  9853   000226  A0D8               	btfss	status,0,c
  9854   000228  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9855   00022A                     
  9856                           ; BSR set to: 0
  9857                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  9858   00022A  0E00               	movlw	0
  9859   00022C  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9860   00022E  0E01               	movlw	1
  9861   000230  6FB3               	movwf	efgtoa@n& (0+255),b
  9862   000232                     l7188:
  9863                           
  9864                           ; BSR set to: 0
  9865                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 631:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 632:             strcpy(&dbuf[n], "inf");
  9866   000232  0E27               	movlw	low _dbuf
  9867   000234  25B3               	addwf	efgtoa@n& (0+255),w,b
  9868   000236  6E06               	movwf	strcpy@dest^0,c
  9869   000238  0E01               	movlw	high _dbuf
  9870   00023A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9871   00023C  6E07               	movwf	(strcpy@dest+1)^0,c
  9872   00023E  0EEB               	movlw	low STR_36
  9873   000240  6E08               	movwf	strcpy@src^0,c
  9874   000242  0EFF               	movlw	high STR_36
  9875   000244  6E09               	movwf	(strcpy@src+1)^0,c
  9876   000246  EC70  F028         	call	_strcpy	;wreg free
  9877   00024A                     l7190:
  9878                           
  9879                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 633:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9880   00024A  0100               	movlb	0	; () banked
  9881   00024C  0EFD               	movlw	253
  9882   00024E  279E               	addwf	efgtoa@w& (0+255),f,b
  9883   000250  0EFF               	movlw	255
  9884   000252  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  9885   000254                     
  9886                           ; BSR set to: 0
  9887                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 635:         return (void) pad(fp, 
      +                          &dbuf[0], w);
  9888   000254  C084  F017         	movff	efgtoa@fp,pad@fp
  9889   000258  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  9890   00025C  0E27               	movlw	low _dbuf
  9891   00025E  6E19               	movwf	pad@buf^0,c
  9892   000260  0E01               	movlw	high _dbuf
  9893   000262  6E1A               	movwf	(pad@buf+1)^0,c
  9894   000264  C09E  F01B         	movff	efgtoa@w,pad@p
  9895   000268  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  9896   00026C  ECD4  F025         	call	_pad	;wreg free
  9897   000270  EFA5  F005         	goto	l1452
  9898   000274                     l7196:
  9899                           
  9900                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 637:     if (( __fpclassifyf(g.f) =
      +                          = 0 )) {
  9901   000274  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  9902   000278  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9903   00027C  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9904   000280  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9905   000284  EC4C  F022         	call	___fpclassifyf	;wreg free
  9906   000288  5006               	movf	?___fpclassifyf^0,w,c
  9907   00028A  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9908   00028C  A4D8               	btfss	status,2,c
  9909   00028E  EF4B  F001         	goto	u8591
  9910   000292  EF4D  F001         	goto	u8590
  9911   000296                     u8591:
  9912   000296  EF6D  F001         	goto	l7214
  9913   00029A                     u8590:
  9914   00029A                     
  9915                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 638:   if (sign) {
  9916   00029A  0100               	movlb	0	; () banked
  9917   00029C  51AE               	movf	efgtoa@sign& (0+255),w,b
  9918   00029E  B4D8               	btfsc	status,2,c
  9919   0002A0  EF54  F001         	goto	u8601
  9920   0002A4  EF56  F001         	goto	u8600
  9921   0002A8                     u8601:
  9922   0002A8  EF5F  F001         	goto	l7206
  9923   0002AC                     u8600:
  9924   0002AC                     
  9925                           ; BSR set to: 0
  9926                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] = sign;
  9927   0002AC  C0AE  F127         	movff	efgtoa@sign,_dbuf
  9928   0002B0                     
  9929                           ; BSR set to: 0
  9930                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 640:    w--;
  9931   0002B0  079E               	decf	efgtoa@w& (0+255),f,b
  9932   0002B2  A0D8               	btfss	status,0,c
  9933   0002B4  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9934   0002B6                     
  9935                           ; BSR set to: 0
  9936                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  9937   0002B6  0E00               	movlw	0
  9938   0002B8  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9939   0002BA  0E01               	movlw	1
  9940   0002BC  6FB3               	movwf	efgtoa@n& (0+255),b
  9941   0002BE                     l7206:
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 649:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 650:             strcpy(&dbuf[n], "nan");
  9945   0002BE  0E27               	movlw	low _dbuf
  9946   0002C0  25B3               	addwf	efgtoa@n& (0+255),w,b
  9947   0002C2  6E06               	movwf	strcpy@dest^0,c
  9948   0002C4  0E01               	movlw	high _dbuf
  9949   0002C6  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9950   0002C8  6E07               	movwf	(strcpy@dest+1)^0,c
  9951   0002CA  0EEF               	movlw	low STR_39
  9952   0002CC  6E08               	movwf	strcpy@src^0,c
  9953   0002CE  0EFF               	movlw	high STR_39
  9954   0002D0  6E09               	movwf	(strcpy@src+1)^0,c
  9955   0002D2  EC70  F028         	call	_strcpy	;wreg free
  9956   0002D6  EF25  F001         	goto	l7190
  9957   0002DA                     l7214:
  9958                           
  9959                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.0;
  9960   0002DA  0E00               	movlw	0
  9961   0002DC  0100               	movlb	0	; () banked
  9962   0002DE  6FB5               	movwf	efgtoa@u& (0+255),b
  9963   0002E0  0E00               	movlw	0
  9964   0002E2  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  9965   0002E4  0E80               	movlw	128
  9966   0002E6  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  9967   0002E8  0E3F               	movlw	63
  9968   0002EA  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  9969                           
  9970                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  9971   0002EC  0E00               	movlw	0
  9972   0002EE  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  9973   0002F0  0E00               	movlw	0
  9974   0002F2  6F9C               	movwf	efgtoa@e& (0+255),b
  9975   0002F4                     
  9976                           ; BSR set to: 0
  9977                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f == 0.0)) {
  9978   0002F4  C0AF  F006         	movff	efgtoa@g,___fleq@ff1
  9979   0002F8  C0B0  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  9980   0002FC  C0B1  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  9981   000300  C0B2  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  9982   000304  0E00               	movlw	0
  9983   000306  6E0A               	movwf	___fleq@ff2^0,c
  9984   000308  0E00               	movlw	0
  9985   00030A  6E0B               	movwf	(___fleq@ff2+1)^0,c
  9986   00030C  0E00               	movlw	0
  9987   00030E  6E0C               	movwf	(___fleq@ff2+2)^0,c
  9988   000310  0E00               	movlw	0
  9989   000312  6E0D               	movwf	(___fleq@ff2+3)^0,c
  9990   000314  EC7F  F025         	call	___fleq	;wreg free
  9991   000318  B0D8               	btfsc	status,0,c
  9992   00031A  EF91  F001         	goto	u8611
  9993   00031E  EF93  F001         	goto	u8610
  9994   000322                     u8611:
  9995   000322  EF72  F002         	goto	l1455
  9996   000326                     u8610:
  9997   000326  EFA0  F001         	goto	l7222
  9998   00032A                     l1457:
  9999                           
 10000                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 10001   00032A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
 10002   00032E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
 10003   000332  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
 10004   000336  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
 10005   00033A                     
 10006                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 662:    ++e;
 10007   00033A  0100               	movlb	0	; () banked
 10008   00033C  4B9C               	infsnz	efgtoa@e& (0+255),f,b
 10009   00033E  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
 10010   000340                     l7222:
 10011                           
 10012                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 660:   while ((labs((g).u-((ou.f = 
      +                          u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 10013   000340  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10014   000344  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10015   000348  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10016   00034C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10017   000350  0E00               	movlw	0
 10018   000352  6E18               	movwf	___flmul@a^0,c
 10019   000354  0E00               	movlw	0
 10020   000356  6E19               	movwf	(___flmul@a+1)^0,c
 10021   000358  0E20               	movlw	32
 10022   00035A  6E1A               	movwf	(___flmul@a+2)^0,c
 10023   00035C  0E41               	movlw	65
 10024   00035E  6E1B               	movwf	(___flmul@a+3)^0,c
 10025   000360  EC3A  F00D         	call	___flmul	;wreg free
 10026   000364  C014  F0A0         	movff	?___flmul,efgtoa@ou
 10027   000368  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
 10028   00036C  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
 10029   000370  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
 10030   000374  0100               	movlb	0	; () banked
 10031   000376  51A0               	movf	efgtoa@ou& (0+255),w,b
 10032   000378  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10033   00037A  6E06               	movwf	labs@a^0,c
 10034   00037C  51A1               	movf	(efgtoa@ou+1)& (0+255),w,b
 10035   00037E  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10036   000380  6E07               	movwf	(labs@a+1)^0,c
 10037   000382  51A2               	movf	(efgtoa@ou+2)& (0+255),w,b
 10038   000384  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10039   000386  6E08               	movwf	(labs@a+2)^0,c
 10040   000388  51A3               	movf	(efgtoa@ou+3)& (0+255),w,b
 10041   00038A  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10042   00038C  6E09               	movwf	(labs@a+3)^0,c
 10043   00038E  EC29  F027         	call	_labs	;wreg free
 10044   000392  BE09               	btfsc	(?_labs+3)^0,7,c
 10045   000394  EFD7  F001         	goto	u8621
 10046   000398  5009               	movf	(?_labs+3)^0,w,c
 10047   00039A  1008               	iorwf	(?_labs+2)^0,w,c
 10048   00039C  1007               	iorwf	(?_labs+1)^0,w,c
 10049   00039E  E109               	bnz	u8620
 10050   0003A0  0E02               	movlw	2
 10051   0003A2  5C06               	subwf	?_labs^0,w,c
 10052   0003A4  A0D8               	btfss	status,0,c
 10053   0003A6  EFD7  F001         	goto	u8621
 10054   0003AA  EFD9  F001         	goto	u8620
 10055   0003AE                     u8621:
 10056   0003AE  EF95  F001         	goto	l1457
 10057   0003B2                     u8620:
 10058   0003B2  C0A0  F02D         	movff	efgtoa@ou,___flge@ff1
 10059   0003B6  C0A1  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
 10060   0003BA  C0A2  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
 10061   0003BE  C0A3  F030         	movff	efgtoa@ou+3,___flge@ff1+3
 10062   0003C2  C0AF  F031         	movff	efgtoa@g,___flge@ff2
 10063   0003C6  C0B0  F032         	movff	efgtoa@g+1,___flge@ff2+1
 10064   0003CA  C0B1  F033         	movff	efgtoa@g+2,___flge@ff2+2
 10065   0003CE  C0B2  F034         	movff	efgtoa@g+3,___flge@ff2+3
 10066   0003D2  ECCA  F021         	call	___flge	;wreg free
 10067   0003D6  A0D8               	btfss	status,0,c
 10068   0003D8  EFF0  F001         	goto	u8631
 10069   0003DC  EFF2  F001         	goto	u8630
 10070   0003E0                     u8631:
 10071   0003E0  EF95  F001         	goto	l1457
 10072   0003E4                     u8630:
 10073   0003E4                     
 10074                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 664:   if ((labs((g).u-(u).u) <= 1)
      +                          ) {
 10075   0003E4  0100               	movlb	0	; () banked
 10076   0003E6  51B5               	movf	efgtoa@u& (0+255),w,b
 10077   0003E8  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10078   0003EA  6E06               	movwf	labs@a^0,c
 10079   0003EC  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
 10080   0003EE  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10081   0003F0  6E07               	movwf	(labs@a+1)^0,c
 10082   0003F2  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
 10083   0003F4  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10084   0003F6  6E08               	movwf	(labs@a+2)^0,c
 10085   0003F8  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
 10086   0003FA  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10087   0003FC  6E09               	movwf	(labs@a+3)^0,c
 10088   0003FE  EC29  F027         	call	_labs	;wreg free
 10089   000402  BE09               	btfsc	(?_labs+3)^0,7,c
 10090   000404  EF11  F002         	goto	u8640
 10091   000408  5009               	movf	(?_labs+3)^0,w,c
 10092   00040A  1008               	iorwf	(?_labs+2)^0,w,c
 10093   00040C  1007               	iorwf	(?_labs+1)^0,w,c
 10094   00040E  E107               	bnz	u8641
 10095   000410  0E02               	movlw	2
 10096   000412  5C06               	subwf	?_labs^0,w,c
 10097   000414  B0D8               	btfsc	status,0,c
 10098   000416  EF0F  F002         	goto	u8641
 10099   00041A  EF11  F002         	goto	u8640
 10100   00041E                     u8641:
 10101   00041E  EF59  F002         	goto	l7240
 10102   000422                     u8640:
 10103   000422                     l7230:
 10104                           
 10105                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 665:    g = u;
 10106   000422  C0B5  F0AF         	movff	efgtoa@u,efgtoa@g
 10107   000426  C0B6  F0B0         	movff	efgtoa@u+1,efgtoa@g+1
 10108   00042A  C0B7  F0B1         	movff	efgtoa@u+2,efgtoa@g+2
 10109   00042E  C0B8  F0B2         	movff	efgtoa@u+3,efgtoa@g+3
 10110                           
 10111                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 666:   }
 10112   000432  EF72  F002         	goto	l1455
 10113   000436                     l7232:
 10114                           
 10115                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 669:     u.f = u.f/10.0;
 10116   000436  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10117   00043A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10118   00043E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10119   000442  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10120   000446  0E00               	movlw	0
 10121   000448  6E31               	movwf	___fldiv@a^0,c
 10122   00044A  0E00               	movlw	0
 10123   00044C  6E32               	movwf	(___fldiv@a+1)^0,c
 10124   00044E  0E20               	movlw	32
 10125   000450  6E33               	movwf	(___fldiv@a+2)^0,c
 10126   000452  0E41               	movlw	65
 10127   000454  6E34               	movwf	(___fldiv@a+3)^0,c
 10128   000456  EC2B  F013         	call	___fldiv	;wreg free
 10129   00045A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10130   00045E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10131   000462  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10132   000466  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10133   00046A                     
 10134                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 670:     --e;
 10135   00046A  0100               	movlb	0	; () banked
 10136   00046C  079C               	decf	efgtoa@e& (0+255),f,b
 10137   00046E  A0D8               	btfss	status,0,c
 10138   000470  079D               	decf	(efgtoa@e+1)& (0+255),f,b
 10139   000472                     
 10140                           ; BSR set to: 0
 10141                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 671:     if ((labs((g).u-(u).u) <= 
      +                          1)) {
 10142   000472  51B5               	movf	efgtoa@u& (0+255),w,b
 10143   000474  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10144   000476  6E06               	movwf	labs@a^0,c
 10145   000478  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
 10146   00047A  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10147   00047C  6E07               	movwf	(labs@a+1)^0,c
 10148   00047E  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
 10149   000480  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10150   000482  6E08               	movwf	(labs@a+2)^0,c
 10151   000484  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
 10152   000486  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10153   000488  6E09               	movwf	(labs@a+3)^0,c
 10154   00048A  EC29  F027         	call	_labs	;wreg free
 10155   00048E  BE09               	btfsc	(?_labs+3)^0,7,c
 10156   000490  EF57  F002         	goto	u8650
 10157   000494  5009               	movf	(?_labs+3)^0,w,c
 10158   000496  1008               	iorwf	(?_labs+2)^0,w,c
 10159   000498  1007               	iorwf	(?_labs+1)^0,w,c
 10160   00049A  E107               	bnz	u8651
 10161   00049C  0E02               	movlw	2
 10162   00049E  5C06               	subwf	?_labs^0,w,c
 10163   0004A0  B0D8               	btfsc	status,0,c
 10164   0004A2  EF55  F002         	goto	u8651
 10165   0004A6  EF57  F002         	goto	u8650
 10166   0004AA                     u8651:
 10167   0004AA  EF59  F002         	goto	l7240
 10168   0004AE                     u8650:
 10169   0004AE  EF11  F002         	goto	l7230
 10170   0004B2                     l7240:
 10171                           
 10172                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 668:    while (g.f < u.f) {
 10173   0004B2  C0AF  F02D         	movff	efgtoa@g,___flge@ff1
 10174   0004B6  C0B0  F02E         	movff	efgtoa@g+1,___flge@ff1+1
 10175   0004BA  C0B1  F02F         	movff	efgtoa@g+2,___flge@ff1+2
 10176   0004BE  C0B2  F030         	movff	efgtoa@g+3,___flge@ff1+3
 10177   0004C2  C0B5  F031         	movff	efgtoa@u,___flge@ff2
 10178   0004C6  C0B6  F032         	movff	efgtoa@u+1,___flge@ff2+1
 10179   0004CA  C0B7  F033         	movff	efgtoa@u+2,___flge@ff2+2
 10180   0004CE  C0B8  F034         	movff	efgtoa@u+3,___flge@ff2+3
 10181   0004D2  ECCA  F021         	call	___flge	;wreg free
 10182   0004D6  A0D8               	btfss	status,0,c
 10183   0004D8  EF70  F002         	goto	u8661
 10184   0004DC  EF72  F002         	goto	u8660
 10185   0004E0                     u8661:
 10186   0004E0  EF1B  F002         	goto	l7232
 10187   0004E4                     u8660:
 10188   0004E4                     l1455:
 10189                           
 10190                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 10191   0004E4  C08A  F096         	movff	efgtoa@c,efgtoa@mode
 10192                           
 10193                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 685:     nmode = mode;
 10194   0004E8  C096  F097         	movff	efgtoa@mode,efgtoa@nmode
 10195   0004EC                     
 10196                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 695:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
 10197   0004EC  BE58               	btfsc	(_prec+1)^0,7,c
 10198   0004EE  EF7B  F002         	goto	u8671
 10199   0004F2  EF7D  F002         	goto	u8670
 10200   0004F6                     u8671:
 10201   0004F6  EF83  F002         	goto	l7246
 10202   0004FA                     u8670:
 10203   0004FA  C057  F08F         	movff	_prec,efgtoa@p
 10204   0004FE  C058  F090         	movff	_prec+1,efgtoa@p+1
 10205   000502  EF88  F002         	goto	l7248
 10206   000506                     l7246:
 10207   000506  0E00               	movlw	0
 10208   000508  0100               	movlb	0	; () banked
 10209   00050A  6F90               	movwf	(efgtoa@p+1)& (0+255),b
 10210   00050C  0E06               	movlw	6
 10211   00050E  6F8F               	movwf	efgtoa@p& (0+255),b
 10212   000510                     l7248:
 10213                           
 10214                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 697:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 711:     m = p;
 10215   000510  C08F  F09A         	movff	efgtoa@p,efgtoa@m
 10216   000514  C090  F09B         	movff	efgtoa@p+1,efgtoa@m+1
 10217   000518                     
 10218                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 715:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 716:         ++m;
 10219   000518  0100               	movlb	0	; () banked
 10220   00051A  4B9A               	infsnz	efgtoa@m& (0+255),f,b
 10221   00051C  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
 10222   00051E                     
 10223                           ; BSR set to: 0
 10224                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 717:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 721:     if (nmode == 'f') {
 10225   00051E  0E66               	movlw	102
 10226   000520  1997               	xorwf	efgtoa@nmode& (0+255),w,b
 10227   000522  A4D8               	btfss	status,2,c
 10228   000524  EF96  F002         	goto	u8681
 10229   000528  EF98  F002         	goto	u8680
 10230   00052C                     u8681:
 10231   00052C  EFB8  F002         	goto	l7262
 10232   000530                     u8680:
 10233   000530                     
 10234                           ; BSR set to: 0
 10235                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 722:         if (e < 0) {
 10236   000530  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10237   000532  EF9F  F002         	goto	u8690
 10238   000536  EF9D  F002         	goto	u8691
 10239   00053A                     u8691:
 10240   00053A  EFAB  F002         	goto	l7258
 10241   00053E                     u8690:
 10242   00053E                     
 10243                           ; BSR set to: 0
 10244                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 723:             u.f = 1.0;
 10245   00053E  0E00               	movlw	0
 10246   000540  6FB5               	movwf	efgtoa@u& (0+255),b
 10247   000542  0E00               	movlw	0
 10248   000544  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
 10249   000546  0E80               	movlw	128
 10250   000548  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
 10251   00054A  0E3F               	movlw	63
 10252   00054C  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
 10253                           
 10254                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 724:             e = 0;
 10255   00054E  0E00               	movlw	0
 10256   000550  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
 10257   000552  0E00               	movlw	0
 10258   000554  6F9C               	movwf	efgtoa@e& (0+255),b
 10259   000556                     l7258:
 10260                           
 10261                           ; BSR set to: 0
 10262                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 726:         if (!(mode == 'g')) {
 10263   000556  0E67               	movlw	103
 10264   000558  1996               	xorwf	efgtoa@mode& (0+255),w,b
 10265   00055A  B4D8               	btfsc	status,2,c
 10266   00055C  EFB2  F002         	goto	u8701
 10267   000560  EFB4  F002         	goto	u8700
 10268   000564                     u8701:
 10269   000564  EFB8  F002         	goto	l7262
 10270   000568                     u8700:
 10271   000568                     
 10272                           ; BSR set to: 0
 10273                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 727:             m += e;
 10274   000568  519C               	movf	efgtoa@e& (0+255),w,b
 10275   00056A  279A               	addwf	efgtoa@m& (0+255),f,b
 10276   00056C  519D               	movf	(efgtoa@e+1)& (0+255),w,b
 10277   00056E  239B               	addwfc	(efgtoa@m+1)& (0+255),f,b
 10278   000570                     l7262:
 10279                           
 10280                           ; BSR set to: 0
 10281                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 10282   000570  0E00               	movlw	0
 10283   000572  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10284   000574  0E00               	movlw	0
 10285   000576  6FA4               	movwf	efgtoa@i& (0+255),b
 10286   000578                     
 10287                           ; BSR set to: 0
 10288                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 10289   000578  C0AF  F0A6         	movff	efgtoa@g,efgtoa@h
 10290   00057C  C0B0  F0A7         	movff	efgtoa@g+1,efgtoa@h+1
 10291   000580  C0B1  F0A8         	movff	efgtoa@g+2,efgtoa@h+2
 10292   000584  C0B2  F0A9         	movff	efgtoa@g+3,efgtoa@h+3
 10293   000588                     
 10294                           ; BSR set to: 0
 10295                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 10296   000588  C0B5  F0A0         	movff	efgtoa@u,efgtoa@ou
 10297   00058C  C0B6  F0A1         	movff	efgtoa@u+1,efgtoa@ou+1
 10298   000590  C0B7  F0A2         	movff	efgtoa@u+2,efgtoa@ou+2
 10299   000594  C0B8  F0A3         	movff	efgtoa@u+3,efgtoa@ou+3
 10300                           
 10301                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
 10302   000598  EF49  F003         	goto	l7276
 10303   00059C                     l7268:
 10304                           
 10305                           ; BSR set to: 0
 10306                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 737:         l = floorf(h/u.f);
 10307   00059C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
 10308   0005A0  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
 10309   0005A4  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
 10310   0005A8  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
 10311   0005AC  C0B5  F031         	movff	efgtoa@u,___fldiv@a
 10312   0005B0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
 10313   0005B4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
 10314   0005B8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
 10315   0005BC  EC2B  F013         	call	___fldiv	;wreg free
 10316   0005C0  C02D  F046         	movff	?___fldiv,floorf@x
 10317   0005C4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
 10318   0005C8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
 10319   0005CC  C030  F049         	movff	?___fldiv+3,floorf@x+3
 10320   0005D0  EC34  F019         	call	_floorf	;wreg free
 10321   0005D4  C046  F0AA         	movff	?_floorf,efgtoa@l
 10322   0005D8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
 10323   0005DC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
 10324   0005E0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
 10325                           
 10326                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 738:         d = (int)l;
 10327   0005E4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10328   0005E8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10329   0005EC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10330   0005F0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10331   0005F4  EC46  F021         	call	___fltol	;wreg free
 10332   0005F8  C064  F098         	movff	?___fltol,efgtoa@d
 10333   0005FC  C065  F099         	movff	?___fltol+1,efgtoa@d+1
 10334   000600                     
 10335                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 739:         h -= l*u.f;
 10336   000600  C0A6  F064         	movff	efgtoa@h,___flsub@b
 10337   000604  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
 10338   000608  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
 10339   00060C  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
 10340   000610  C0AA  F018         	movff	efgtoa@l,___flmul@a
 10341   000614  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
 10342   000618  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
 10343   00061C  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
 10344   000620  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10345   000624  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10346   000628  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10347   00062C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10348   000630  EC3A  F00D         	call	___flmul	;wreg free
 10349   000634  C014  F068         	movff	?___flmul,___flsub@a
 10350   000638  C015  F069         	movff	?___flmul+1,___flsub@a+1
 10351   00063C  C016  F06A         	movff	?___flmul+2,___flsub@a+2
 10352   000640  C017  F06B         	movff	?___flmul+3,___flsub@a+3
 10353   000644  ECCB  F027         	call	___flsub	;wreg free
 10354   000648  C064  F0A6         	movff	?___flsub,efgtoa@h
 10355   00064C  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
 10356   000650  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
 10357   000654  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
 10358   000658                     
 10359                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 740:         u.f = u.f/10.0;
 10360   000658  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10361   00065C  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10362   000660  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10363   000664  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10364   000668  0E00               	movlw	0
 10365   00066A  6E31               	movwf	___fldiv@a^0,c
 10366   00066C  0E00               	movlw	0
 10367   00066E  6E32               	movwf	(___fldiv@a+1)^0,c
 10368   000670  0E20               	movlw	32
 10369   000672  6E33               	movwf	(___fldiv@a+2)^0,c
 10370   000674  0E41               	movlw	65
 10371   000676  6E34               	movwf	(___fldiv@a+3)^0,c
 10372   000678  EC2B  F013         	call	___fldiv	;wreg free
 10373   00067C  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10374   000680  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10375   000684  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10376   000688  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10377   00068C                     
 10378                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 741:         ++i;
 10379   00068C  0100               	movlb	0	; () banked
 10380   00068E  4BA4               	infsnz	efgtoa@i& (0+255),f,b
 10381   000690  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
 10382   000692                     l7276:
 10383                           
 10384                           ; BSR set to: 0
 10385                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
 10386   000692  519A               	movf	efgtoa@m& (0+255),w,b
 10387   000694  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10388   000696  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10389   000698  0A80               	xorlw	128
 10390   00069A  6F8B               	movwf	??_efgtoa& (0+255),b
 10391   00069C  519B               	movf	(efgtoa@m+1)& (0+255),w,b
 10392   00069E  0A80               	xorlw	128
 10393   0006A0  598B               	subwfb	??_efgtoa& (0+255),w,b
 10394   0006A2  A0D8               	btfss	status,0,c
 10395   0006A4  EF56  F003         	goto	u8711
 10396   0006A8  EF58  F003         	goto	u8710
 10397   0006AC                     u8711:
 10398   0006AC  EFCE  F002         	goto	l7268
 10399   0006B0                     u8710:
 10400   0006B0                     
 10401                           ; BSR set to: 0
 10402                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 745:     l = u.f*5.0;
 10403   0006B0  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10404   0006B4  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10405   0006B8  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10406   0006BC  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10407   0006C0  0E00               	movlw	0
 10408   0006C2  6E18               	movwf	___flmul@a^0,c
 10409   0006C4  0E00               	movlw	0
 10410   0006C6  6E19               	movwf	(___flmul@a+1)^0,c
 10411   0006C8  0EA0               	movlw	160
 10412   0006CA  6E1A               	movwf	(___flmul@a+2)^0,c
 10413   0006CC  0E40               	movlw	64
 10414   0006CE  6E1B               	movwf	(___flmul@a+3)^0,c
 10415   0006D0  EC3A  F00D         	call	___flmul	;wreg free
 10416   0006D4  C014  F0AA         	movff	?___flmul,efgtoa@l
 10417   0006D8  C015  F0AB         	movff	?___flmul+1,efgtoa@l+1
 10418   0006DC  C016  F0AC         	movff	?___flmul+2,efgtoa@l+2
 10419   0006E0  C017  F0AD         	movff	?___flmul+3,efgtoa@l+3
 10420   0006E4                     
 10421                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 746:     if (h < l) {
 10422   0006E4  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
 10423   0006E8  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
 10424   0006EC  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
 10425   0006F0  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
 10426   0006F4  C0AA  F031         	movff	efgtoa@l,___flge@ff2
 10427   0006F8  C0AB  F032         	movff	efgtoa@l+1,___flge@ff2+1
 10428   0006FC  C0AC  F033         	movff	efgtoa@l+2,___flge@ff2+2
 10429   000700  C0AD  F034         	movff	efgtoa@l+3,___flge@ff2+3
 10430   000704  ECCA  F021         	call	___flge	;wreg free
 10431   000708  B0D8               	btfsc	status,0,c
 10432   00070A  EF89  F003         	goto	u8721
 10433   00070E  EF8B  F003         	goto	u8720
 10434   000712                     u8721:
 10435   000712  EF96  F003         	goto	l7284
 10436   000716                     u8720:
 10437   000716                     
 10438                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 747:         l = 0.0;
 10439   000716  0E00               	movlw	0
 10440   000718  0100               	movlb	0	; () banked
 10441   00071A  6FAA               	movwf	efgtoa@l& (0+255),b
 10442   00071C  0E00               	movlw	0
 10443   00071E  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
 10444   000720  0E00               	movlw	0
 10445   000722  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
 10446   000724  0E00               	movlw	0
 10447   000726  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10448                           
 10449                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 748:     } else {
 10450   000728  EFBF  F003         	goto	l7290
 10451   00072C                     l7284:
 10452                           
 10453                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 750:         if ((h == l) && !(d % 
      +                          2)) {
 10454   00072C  C0A6  F006         	movff	efgtoa@h,___fleq@ff1
 10455   000730  C0A7  F007         	movff	efgtoa@h+1,___fleq@ff1+1
 10456   000734  C0A8  F008         	movff	efgtoa@h+2,___fleq@ff1+2
 10457   000738  C0A9  F009         	movff	efgtoa@h+3,___fleq@ff1+3
 10458   00073C  C0AA  F00A         	movff	efgtoa@l,___fleq@ff2
 10459   000740  C0AB  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
 10460   000744  C0AC  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
 10461   000748  C0AD  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
 10462   00074C  EC7F  F025         	call	___fleq	;wreg free
 10463   000750  A0D8               	btfss	status,0,c
 10464   000752  EFAD  F003         	goto	u8731
 10465   000756  EFAF  F003         	goto	u8730
 10466   00075A                     u8731:
 10467   00075A  EFBF  F003         	goto	l7290
 10468   00075E                     u8730:
 10469   00075E  0100               	movlb	0	; () banked
 10470   000760  B198               	btfsc	efgtoa@d& (0+255),0,b
 10471   000762  EFB5  F003         	goto	u8741
 10472   000766  EFB7  F003         	goto	u8740
 10473   00076A                     u8741:
 10474   00076A  EFBF  F003         	goto	l7290
 10475   00076E                     u8740:
 10476   00076E                     
 10477                           ; BSR set to: 0
 10478                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 751:             l = 0.0;
 10479   00076E  0E00               	movlw	0
 10480   000770  6FAA               	movwf	efgtoa@l& (0+255),b
 10481   000772  0E00               	movlw	0
 10482   000774  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
 10483   000776  0E00               	movlw	0
 10484   000778  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
 10485   00077A  0E00               	movlw	0
 10486   00077C  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10487   00077E                     l7290:
 10488                           
 10489                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 756:     h = g.f + l;
 10490   00077E  C0AF  F046         	movff	efgtoa@g,___fladd@b
 10491   000782  C0B0  F047         	movff	efgtoa@g+1,___fladd@b+1
 10492   000786  C0B1  F048         	movff	efgtoa@g+2,___fladd@b+2
 10493   00078A  C0B2  F049         	movff	efgtoa@g+3,___fladd@b+3
 10494   00078E  C0AA  F04A         	movff	efgtoa@l,___fladd@a
 10495   000792  C0AB  F04B         	movff	efgtoa@l+1,___fladd@a+1
 10496   000796  C0AC  F04C         	movff	efgtoa@l+2,___fladd@a+2
 10497   00079A  C0AD  F04D         	movff	efgtoa@l+3,___fladd@a+3
 10498   00079E  ECD9  F00A         	call	___fladd	;wreg free
 10499   0007A2  C046  F0A6         	movff	?___fladd,efgtoa@h
 10500   0007A6  C047  F0A7         	movff	?___fladd+1,efgtoa@h+1
 10501   0007AA  C048  F0A8         	movff	?___fladd+2,efgtoa@h+2
 10502   0007AE  C049  F0A9         	movff	?___fladd+3,efgtoa@h+3
 10503   0007B2                     
 10504                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 758:  if (h >= (ou.f*10.0)) {
 10505   0007B2  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
 10506   0007B6  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
 10507   0007BA  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
 10508   0007BE  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
 10509   0007C2  0E00               	movlw	0
 10510   0007C4  6E18               	movwf	___flmul@a^0,c
 10511   0007C6  0E00               	movlw	0
 10512   0007C8  6E19               	movwf	(___flmul@a+1)^0,c
 10513   0007CA  0E20               	movlw	32
 10514   0007CC  6E1A               	movwf	(___flmul@a+2)^0,c
 10515   0007CE  0E41               	movlw	65
 10516   0007D0  6E1B               	movwf	(___flmul@a+3)^0,c
 10517   0007D2  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10518   0007D6  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10519   0007DA  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10520   0007DE  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10521   0007E2  EC3A  F00D         	call	___flmul	;wreg free
 10522   0007E6  C014  F031         	movff	?___flmul,___flge@ff2
 10523   0007EA  C015  F032         	movff	?___flmul+1,___flge@ff2+1
 10524   0007EE  C016  F033         	movff	?___flmul+2,___flge@ff2+2
 10525   0007F2  C017  F034         	movff	?___flmul+3,___flge@ff2+3
 10526   0007F6  ECCA  F021         	call	___flge	;wreg free
 10527   0007FA  A0D8               	btfss	status,0,c
 10528   0007FC  EF02  F004         	goto	u8751
 10529   000800  EF04  F004         	goto	u8750
 10530   000804                     u8751:
 10531   000804  EF2D  F004         	goto	l7302
 10532   000808                     u8750:
 10533   000808                     
 10534                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 759:   e++;
 10535   000808  0100               	movlb	0	; () banked
 10536   00080A  4B9C               	infsnz	efgtoa@e& (0+255),f,b
 10537   00080C  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
 10538   00080E                     
 10539                           ; BSR set to: 0
 10540                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10.0;
 10541   00080E  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10542   000812  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10543   000816  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10544   00081A  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10545   00081E  0E00               	movlw	0
 10546   000820  6E18               	movwf	___flmul@a^0,c
 10547   000822  0E00               	movlw	0
 10548   000824  6E19               	movwf	(___flmul@a+1)^0,c
 10549   000826  0E20               	movlw	32
 10550   000828  6E1A               	movwf	(___flmul@a+2)^0,c
 10551   00082A  0E41               	movlw	65
 10552   00082C  6E1B               	movwf	(___flmul@a+3)^0,c
 10553   00082E  EC3A  F00D         	call	___flmul	;wreg free
 10554   000832  C014  F0A0         	movff	?___flmul,efgtoa@ou
 10555   000836  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
 10556   00083A  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
 10557   00083E  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
 10558   000842                     
 10559                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 762:   if (nmode == 'f') {
 10560   000842  0E66               	movlw	102
 10561   000844  0100               	movlb	0	; () banked
 10562   000846  1997               	xorwf	efgtoa@nmode& (0+255),w,b
 10563   000848  A4D8               	btfss	status,2,c
 10564   00084A  EF29  F004         	goto	u8761
 10565   00084E  EF2B  F004         	goto	u8760
 10566   000852                     u8761:
 10567   000852  EF2D  F004         	goto	l7302
 10568   000856                     u8760:
 10569   000856                     
 10570                           ; BSR set to: 0
 10571                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 764:    m++;
 10572   000856  4B9A               	infsnz	efgtoa@m& (0+255),f,b
 10573   000858  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
 10574   00085A                     l7302:
 10575                           
 10576                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 10577   00085A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
 10578   00085E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
 10579   000862  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
 10580   000866  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
 10581   00086A                     
 10582                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 10583   00086A  C09C  F08D         	movff	efgtoa@e,efgtoa@ne
 10584   00086E  C09D  F08E         	movff	efgtoa@e+1,efgtoa@ne+1
 10585   000872                     
 10586                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 10587   000872  0E00               	movlw	0
 10588   000874  0100               	movlb	0	; () banked
 10589   000876  6F95               	movwf	efgtoa@pp& (0+255),b
 10590   000878                     
 10591                           ; BSR set to: 0
 10592                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 10593   000878  0E00               	movlw	0
 10594   00087A  6F92               	movwf	(efgtoa@t+1)& (0+255),b
 10595   00087C  0E00               	movlw	0
 10596   00087E  6F91               	movwf	efgtoa@t& (0+255),b
 10597   000880                     
 10598                           ; BSR set to: 0
 10599                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 10600   000880  0E00               	movlw	0
 10601   000882  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10602   000884  0E00               	movlw	0
 10603   000886  6FA4               	movwf	efgtoa@i& (0+255),b
 10604                           
 10605                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10606   000888  EF2B  F005         	goto	l7352
 10607   00088C                     l7312:
 10608                           
 10609                           ; BSR set to: 0
 10610                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 780:         l = floorf(h/u.f);
 10611   00088C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
 10612   000890  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
 10613   000894  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
 10614   000898  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
 10615   00089C  C0B5  F031         	movff	efgtoa@u,___fldiv@a
 10616   0008A0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
 10617   0008A4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
 10618   0008A8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
 10619   0008AC  EC2B  F013         	call	___fldiv	;wreg free
 10620   0008B0  C02D  F046         	movff	?___fldiv,floorf@x
 10621   0008B4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
 10622   0008B8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
 10623   0008BC  C030  F049         	movff	?___fldiv+3,floorf@x+3
 10624   0008C0  EC34  F019         	call	_floorf	;wreg free
 10625   0008C4  C046  F0AA         	movff	?_floorf,efgtoa@l
 10626   0008C8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
 10627   0008CC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
 10628   0008D0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
 10629                           
 10630                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 781:         d = (int)l > 9 ? 9 : (
      +                          int)l;
 10631   0008D4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10632   0008D8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10633   0008DC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10634   0008E0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10635   0008E4  EC46  F021         	call	___fltol	;wreg free
 10636   0008E8  0100               	movlb	0	; () banked
 10637   0008EA  BF65               	btfsc	(?___fltol+1)& (0+255),7,b
 10638   0008EC  EF83  F004         	goto	u8770
 10639   0008F0  5165               	movf	(?___fltol+1)& (0+255),w,b
 10640   0008F2  E107               	bnz	u8771
 10641   0008F4  0E0A               	movlw	10
 10642   0008F6  5D64               	subwf	?___fltol& (0+255),w,b
 10643   0008F8  B0D8               	btfsc	status,0,c
 10644   0008FA  EF81  F004         	goto	u8771
 10645   0008FE  EF83  F004         	goto	u8770
 10646   000902                     u8771:
 10647   000902  EF93  F004         	goto	l7316
 10648   000906                     u8770:
 10649   000906                     
 10650                           ; BSR set to: 0
 10651   000906  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10652   00090A  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10653   00090E  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10654   000912  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10655   000916  EC46  F021         	call	___fltol	;wreg free
 10656   00091A  C064  F098         	movff	?___fltol,efgtoa@d
 10657   00091E  C065  F099         	movff	?___fltol+1,efgtoa@d+1
 10658   000922  EF97  F004         	goto	l1485
 10659   000926                     l7316:
 10660                           
 10661                           ; BSR set to: 0
 10662   000926  0E00               	movlw	0
 10663   000928  6F99               	movwf	(efgtoa@d+1)& (0+255),b
 10664   00092A  0E09               	movlw	9
 10665   00092C  6F98               	movwf	efgtoa@d& (0+255),b
 10666   00092E                     l1485:
 10667                           
 10668                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 792:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 793:             if (!pp && (ne < 0)) {
 10669   00092E  0100               	movlb	0	; () banked
 10670   000930  5195               	movf	efgtoa@pp& (0+255),w,b
 10671   000932  A4D8               	btfss	status,2,c
 10672   000934  EF9E  F004         	goto	u8781
 10673   000938  EFA0  F004         	goto	u8780
 10674   00093C                     u8781:
 10675   00093C  EFC8  F004         	goto	l7336
 10676   000940                     u8780:
 10677   000940                     
 10678                           ; BSR set to: 0
 10679   000940  BF8E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10680   000942  EFA7  F004         	goto	u8790
 10681   000946  EFA5  F004         	goto	u8791
 10682   00094A                     u8791:
 10683   00094A  EFC8  F004         	goto	l7336
 10684   00094E                     u8790:
 10685   00094E                     
 10686                           ; BSR set to: 0
 10687                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 794:                 dbuf[n++] = '.
      +                          ';
 10688   00094E  0E27               	movlw	low _dbuf
 10689   000950  25B3               	addwf	efgtoa@n& (0+255),w,b
 10690   000952  6ED9               	movwf	fsr2l,c
 10691   000954  0E01               	movlw	high _dbuf
 10692   000956  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10693   000958  6EDA               	movwf	fsr2h,c
 10694   00095A  0E2E               	movlw	46
 10695   00095C  6EDF               	movwf	indf2,c
 10696   00095E                     
 10697                           ; BSR set to: 0
 10698   00095E  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10699   000960  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10700   000962                     
 10701                           ; BSR set to: 0
 10702                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 795:                 --w;
 10703   000962  079E               	decf	efgtoa@w& (0+255),f,b
 10704   000964  A0D8               	btfss	status,0,c
 10705   000966  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10706   000968                     
 10707                           ; BSR set to: 0
 10708                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 796:                 pp = 1;
 10709   000968  0E01               	movlw	1
 10710   00096A  6F95               	movwf	efgtoa@pp& (0+255),b
 10711   00096C  EFC8  F004         	goto	l7336
 10712   000970                     l7328:
 10713                           
 10714                           ; BSR set to: 0
 10715                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 799:                 dbuf[n++] = '0
      +                          ';
 10716   000970  0E27               	movlw	low _dbuf
 10717   000972  25B3               	addwf	efgtoa@n& (0+255),w,b
 10718   000974  6ED9               	movwf	fsr2l,c
 10719   000976  0E01               	movlw	high _dbuf
 10720   000978  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10721   00097A  6EDA               	movwf	fsr2h,c
 10722   00097C  0E30               	movlw	48
 10723   00097E  6EDF               	movwf	indf2,c
 10724   000980                     
 10725                           ; BSR set to: 0
 10726   000980  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10727   000982  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10728   000984                     
 10729                           ; BSR set to: 0
 10730                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 800:                 --w;
 10731   000984  079E               	decf	efgtoa@w& (0+255),f,b
 10732   000986  A0D8               	btfss	status,0,c
 10733   000988  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10734   00098A                     
 10735                           ; BSR set to: 0
 10736                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 801:                 --t;
 10737   00098A  0791               	decf	efgtoa@t& (0+255),f,b
 10738   00098C  A0D8               	btfss	status,0,c
 10739   00098E  0792               	decf	(efgtoa@t+1)& (0+255),f,b
 10740   000990                     l7336:
 10741                           
 10742                           ; BSR set to: 0
 10743                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 798:             while (t) {
 10744   000990  5191               	movf	efgtoa@t& (0+255),w,b
 10745   000992  1192               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10746   000994  A4D8               	btfss	status,2,c
 10747   000996  EFCF  F004         	goto	u8801
 10748   00099A  EFD1  F004         	goto	u8800
 10749   00099E                     u8801:
 10750   00099E  EFB8  F004         	goto	l7328
 10751   0009A2                     u8800:
 10752   0009A2                     
 10753                           ; BSR set to: 0
 10754                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 803:             dbuf[n++] = (char)
      +                          ((int)'0' + d);
 10755   0009A2  0E27               	movlw	low _dbuf
 10756   0009A4  25B3               	addwf	efgtoa@n& (0+255),w,b
 10757   0009A6  6ED9               	movwf	fsr2l,c
 10758   0009A8  0E01               	movlw	high _dbuf
 10759   0009AA  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10760   0009AC  6EDA               	movwf	fsr2h,c
 10761   0009AE  5198               	movf	efgtoa@d& (0+255),w,b
 10762   0009B0  0F30               	addlw	48
 10763   0009B2  6EDF               	movwf	indf2,c
 10764   0009B4                     
 10765                           ; BSR set to: 0
 10766   0009B4  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10767   0009B6  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10768   0009B8                     
 10769                           ; BSR set to: 0
 10770                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 804:             --w;
 10771   0009B8  079E               	decf	efgtoa@w& (0+255),f,b
 10772   0009BA  A0D8               	btfss	status,0,c
 10773   0009BC  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10774   0009BE                     
 10775                           ; BSR set to: 0
 10776                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 805:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 806:         h -= l*u.f;
 10777   0009BE  C0A6  F064         	movff	efgtoa@h,___flsub@b
 10778   0009C2  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
 10779   0009C6  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
 10780   0009CA  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
 10781   0009CE  C0AA  F018         	movff	efgtoa@l,___flmul@a
 10782   0009D2  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
 10783   0009D6  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
 10784   0009DA  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
 10785   0009DE  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10786   0009E2  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10787   0009E6  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10788   0009EA  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10789   0009EE  EC3A  F00D         	call	___flmul	;wreg free
 10790   0009F2  C014  F068         	movff	?___flmul,___flsub@a
 10791   0009F6  C015  F069         	movff	?___flmul+1,___flsub@a+1
 10792   0009FA  C016  F06A         	movff	?___flmul+2,___flsub@a+2
 10793   0009FE  C017  F06B         	movff	?___flmul+3,___flsub@a+3
 10794   000A02  ECCB  F027         	call	___flsub	;wreg free
 10795   000A06  C064  F0A6         	movff	?___flsub,efgtoa@h
 10796   000A0A  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
 10797   000A0E  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
 10798   000A12  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
 10799   000A16                     
 10800                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 807:         u.f = u.f/10.0;
 10801   000A16  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10802   000A1A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10803   000A1E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10804   000A22  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10805   000A26  0E00               	movlw	0
 10806   000A28  6E31               	movwf	___fldiv@a^0,c
 10807   000A2A  0E00               	movlw	0
 10808   000A2C  6E32               	movwf	(___fldiv@a+1)^0,c
 10809   000A2E  0E20               	movlw	32
 10810   000A30  6E33               	movwf	(___fldiv@a+2)^0,c
 10811   000A32  0E41               	movlw	65
 10812   000A34  6E34               	movwf	(___fldiv@a+3)^0,c
 10813   000A36  EC2B  F013         	call	___fldiv	;wreg free
 10814   000A3A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10815   000A3E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10816   000A42  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10817   000A46  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10818   000A4A                     
 10819                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 808:         --ne;
 10820   000A4A  0100               	movlb	0	; () banked
 10821   000A4C  078D               	decf	efgtoa@ne& (0+255),f,b
 10822   000A4E  A0D8               	btfss	status,0,c
 10823   000A50  078E               	decf	(efgtoa@ne+1)& (0+255),f,b
 10824   000A52                     
 10825                           ; BSR set to: 0
 10826                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 809:         ++i;
 10827   000A52  4BA4               	infsnz	efgtoa@i& (0+255),f,b
 10828   000A54  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
 10829   000A56                     l7352:
 10830                           
 10831                           ; BSR set to: 0
 10832                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10833   000A56  519A               	movf	efgtoa@m& (0+255),w,b
 10834   000A58  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10835   000A5A  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10836   000A5C  0A80               	xorlw	128
 10837   000A5E  6F8B               	movwf	??_efgtoa& (0+255),b
 10838   000A60  519B               	movf	(efgtoa@m+1)& (0+255),w,b
 10839   000A62  0A80               	xorlw	128
 10840   000A64  598B               	subwfb	??_efgtoa& (0+255),w,b
 10841   000A66  B0D8               	btfsc	status,0,c
 10842   000A68  EF38  F005         	goto	u8811
 10843   000A6C  EF3A  F005         	goto	u8810
 10844   000A70                     u8811:
 10845   000A70  EF48  F005         	goto	l7356
 10846   000A74                     u8810:
 10847   000A74                     
 10848                           ; BSR set to: 0
 10849   000A74  BFB4               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10850   000A76  EF46  F005         	goto	u8821
 10851   000A7A  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10852   000A7C  E109               	bnz	u8820
 10853   000A7E  0E4B               	movlw	75
 10854   000A80  5DB3               	subwf	efgtoa@n& (0+255),w,b
 10855   000A82  A0D8               	btfss	status,0,c
 10856   000A84  EF46  F005         	goto	u8821
 10857   000A88  EF48  F005         	goto	u8820
 10858   000A8C                     u8821:
 10859   000A8C  EF46  F004         	goto	l7312
 10860   000A90                     u8820:
 10861   000A90                     l7356:
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(dbuf) - 1;
 10865   000A90  0E00               	movlw	0
 10866   000A92  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10867   000A94  0E4F               	movlw	79
 10868   000A96  6FA4               	movwf	efgtoa@i& (0+255),b
 10869   000A98                     
 10870                           ; BSR set to: 0
 10871                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] = '\0';
 10872   000A98  0E27               	movlw	low _dbuf
 10873   000A9A  25A4               	addwf	efgtoa@i& (0+255),w,b
 10874   000A9C  6ED9               	movwf	fsr2l,c
 10875   000A9E  0E01               	movlw	high _dbuf
 10876   000AA0  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10877   000AA2  6EDA               	movwf	fsr2h,c
 10878   000AA4  6ADF               	clrf	indf2,c
 10879   000AA6                     
 10880                           ; BSR set to: 0
 10881                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbuf[i-n], &dbuf[0], 
      +                          (size_t)n);
 10882   000AA6  0E27               	movlw	low _dbuf
 10883   000AA8  6F8B               	movwf	??_efgtoa& (0+255),b
 10884   000AAA  0E01               	movlw	high _dbuf
 10885   000AAC  6F8C               	movwf	(??_efgtoa+1)& (0+255),b
 10886   000AAE  51B3               	movf	efgtoa@n& (0+255),w,b
 10887   000AB0  5F8B               	subwf	??_efgtoa& (0+255),f,b
 10888   000AB2  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10889   000AB4  5B8C               	subwfb	(??_efgtoa+1)& (0+255),f,b
 10890   000AB6  51A4               	movf	efgtoa@i& (0+255),w,b
 10891   000AB8  258B               	addwf	??_efgtoa& (0+255),w,b
 10892   000ABA  6E06               	movwf	memcpy@d1^0,c
 10893   000ABC  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10894   000ABE  218C               	addwfc	(??_efgtoa+1)& (0+255),w,b
 10895   000AC0  6E07               	movwf	(memcpy@d1+1)^0,c
 10896   000AC2  0E27               	movlw	low _dbuf
 10897   000AC4  6E08               	movwf	memcpy@s1^0,c
 10898   000AC6  0E01               	movlw	high _dbuf
 10899   000AC8  6E09               	movwf	(memcpy@s1+1)^0,c
 10900   000ACA  C0B3  F00A         	movff	efgtoa@n,memcpy@n
 10901   000ACE  C0B4  F00B         	movff	efgtoa@n+1,memcpy@n+1
 10902   000AD2  EC7E  F027         	call	_memcpy	;wreg free
 10903   000AD6                     
 10904                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 10905   000AD6  0100               	movlb	0	; () banked
 10906   000AD8  51B3               	movf	efgtoa@n& (0+255),w,b
 10907   000ADA  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10908   000ADC  6FB3               	movwf	efgtoa@n& (0+255),b
 10909   000ADE  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10910   000AE0  59A5               	subwfb	(efgtoa@i+1)& (0+255),w,b
 10911   000AE2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
 10912   000AE4                     
 10913                           ; BSR set to: 0
 10914                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 850:  i = sign == 0 ? 0 : 1;
 10915   000AE4  51AE               	movf	efgtoa@sign& (0+255),w,b
 10916   000AE6  A4D8               	btfss	status,2,c
 10917   000AE8  EF78  F005         	goto	u8831
 10918   000AEC  EF7B  F005         	goto	u8830
 10919   000AF0                     u8831:
 10920   000AF0  0E01               	movlw	1
 10921   000AF2  EF7C  F005         	goto	u8840
 10922   000AF6                     u8830:
 10923   000AF6  0E00               	movlw	0
 10924   000AF8                     u8840:
 10925   000AF8  6FA4               	movwf	efgtoa@i& (0+255),b
 10926   000AFA  6BA5               	clrf	(efgtoa@i+1)& (0+255),b
 10927   000AFC                     
 10928                           ; BSR set to: 0
 10929                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 10930   000AFC  51AE               	movf	efgtoa@sign& (0+255),w,b
 10931   000AFE  B4D8               	btfsc	status,2,c
 10932   000B00  EF84  F005         	goto	u8851
 10933   000B04  EF86  F005         	goto	u8850
 10934   000B08                     u8851:
 10935   000B08  EF91  F005         	goto	l7370
 10936   000B0C                     u8850:
 10937   000B0C                     
 10938                           ; BSR set to: 0
 10939                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] = sign;
 10940   000B0C  07B3               	decf	efgtoa@n& (0+255),f,b
 10941   000B0E  A0D8               	btfss	status,0,c
 10942   000B10  07B4               	decf	(efgtoa@n+1)& (0+255),f,b
 10943   000B12  0E27               	movlw	low _dbuf
 10944   000B14  25B3               	addwf	efgtoa@n& (0+255),w,b
 10945   000B16  6ED9               	movwf	fsr2l,c
 10946   000B18  0E01               	movlw	high _dbuf
 10947   000B1A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10948   000B1C  6EDA               	movwf	fsr2h,c
 10949   000B1E  C0AE  FFDF         	movff	efgtoa@sign,indf2
 10950   000B22                     l7370:
 10951                           
 10952                           ; BSR set to: 0
 10953                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 10954   000B22  51A4               	movf	efgtoa@i& (0+255),w,b
 10955   000B24  5F9E               	subwf	efgtoa@w& (0+255),f,b
 10956   000B26  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10957   000B28  5B9F               	subwfb	(efgtoa@w+1)& (0+255),f,b
 10958   000B2A                     
 10959                           ; BSR set to: 0
 10960                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 867:     return (void) pad(fp, &dbu
      +                          f[n], w);
 10961   000B2A  C084  F017         	movff	efgtoa@fp,pad@fp
 10962   000B2E  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
 10963   000B32  0E27               	movlw	low _dbuf
 10964   000B34  25B3               	addwf	efgtoa@n& (0+255),w,b
 10965   000B36  6E19               	movwf	pad@buf^0,c
 10966   000B38  0E01               	movlw	high _dbuf
 10967   000B3A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10968   000B3C  6E1A               	movwf	(pad@buf+1)^0,c
 10969   000B3E  C09E  F01B         	movff	efgtoa@w,pad@p
 10970   000B42  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
 10971   000B46  ECD4  F025         	call	_pad	;wreg free
 10972   000B4A                     l1452:
 10973   000B4A  0012               	return		;funcret
 10974   000B4C                     __end_of_efgtoa:
 10975                           	callstack 0
 10976                           
 10977 ;; *************** function _strcpy *****************
 10978 ;; Defined at:
 10979 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strcpy.c"
 10980 ;; Parameters:    Size  Location     Type
 10981 ;;  dest            2    5[COMRAM] PTR unsigned char 
 10982 ;;		 -> dbuf(80), 
 10983 ;;  src             2    7[COMRAM] PTR const unsigned char 
 10984 ;;		 -> STR_39(4), STR_36(4), 
 10985 ;; Auto vars:     Size  Location     Type
 10986 ;;  d               2    9[COMRAM] PTR unsigned char 
 10987 ;;		 -> dbuf(80), 
 10988 ;; Return value:  Size  Location     Type
 10989 ;;                  2    5[COMRAM] PTR unsigned char 
 10990 ;; Registers used:
 10991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10992 ;; Tracked objects:
 10993 ;;		On entry : 0/0
 10994 ;;		On exit  : 0/0
 10995 ;;		Unchanged: 0/0
 10996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11000 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11001 ;;Total ram usage:        6 bytes
 11002 ;; Hardware stack levels used: 1
 11003 ;; Hardware stack levels required when called: 1
 11004 ;; This function calls:
 11005 ;;		Nothing
 11006 ;; This function is called by:
 11007 ;;		_efgtoa
 11008 ;; This function uses a non-reentrant model
 11009 ;;
 11010                           
 11011                           	psect	text37
 11012   0050E0                     __ptext37:
 11013                           	callstack 0
 11014   0050E0                     _strcpy:
 11015                           	callstack 24
 11016   0050E0  C006  F00A         	movff	strcpy@dest,strcpy@d
 11017   0050E4  C007  F00B         	movff	strcpy@dest+1,strcpy@d+1
 11018   0050E8                     l7060:
 11019   0050E8  C008  FFF6         	movff	strcpy@src,tblptrl
 11020   0050EC  C009  FFF7         	movff	strcpy@src+1,tblptrh
 11021   0050F0  4A08               	infsnz	strcpy@src^0,f,c
 11022   0050F2  2A09               	incf	(strcpy@src+1)^0,f,c
 11023   0050F4                     	if	0	;tblptru may be non-zero
 11024   0050F4                     	endif
 11025   0050F4                     	if	0	;tblptru may be non-zero
 11026   0050F4                     	endif
 11027   0050F4  C00A  FFD9         	movff	strcpy@d,fsr2l
 11028   0050F8  C00B  FFDA         	movff	strcpy@d+1,fsr2h
 11029   0050FC  4A0A               	infsnz	strcpy@d^0,f,c
 11030   0050FE  2A0B               	incf	(strcpy@d+1)^0,f,c
 11031   005100  0008               	tblrd		*
 11032   005102  CFF5 FFDF          	movff	tablat,indf2
 11033   005106  50DF               	movf	indf2,w,c
 11034   005108  A4D8               	btfss	status,2,c
 11035   00510A  EF89  F028         	goto	u8321
 11036   00510E  EF8B  F028         	goto	u8320
 11037   005112                     u8321:
 11038   005112  EF74  F028         	goto	l7060
 11039   005116                     u8320:
 11040   005116  0012               	return		;funcret
 11041   005118                     __end_of_strcpy:
 11042                           	callstack 0
 11043                           
 11044 ;; *************** function _memcpy *****************
 11045 ;; Defined at:
 11046 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\memcpy.c"
 11047 ;; Parameters:    Size  Location     Type
 11048 ;;  d1              2    5[COMRAM] PTR void 
 11049 ;;		 -> dbuf(80), 
 11050 ;;  s1              2    7[COMRAM] PTR const void 
 11051 ;;		 -> dbuf(80), 
 11052 ;;  n               2    9[COMRAM] unsigned int 
 11053 ;; Auto vars:     Size  Location     Type
 11054 ;;  s               2   14[COMRAM] PTR const unsigned char 
 11055 ;;		 -> dbuf(80), 
 11056 ;;  d               2   12[COMRAM] PTR unsigned char 
 11057 ;;		 -> dbuf(80), 
 11058 ;;  tmp             1   11[COMRAM] unsigned char 
 11059 ;; Return value:  Size  Location     Type
 11060 ;;                  2    5[COMRAM] PTR void 
 11061 ;; Registers used:
 11062 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11063 ;; Tracked objects:
 11064 ;;		On entry : 0/0
 11065 ;;		On exit  : 0/0
 11066 ;;		Unchanged: 0/0
 11067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11068 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11069 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11071 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11072 ;;Total ram usage:       11 bytes
 11073 ;; Hardware stack levels used: 1
 11074 ;; Hardware stack levels required when called: 1
 11075 ;; This function calls:
 11076 ;;		Nothing
 11077 ;; This function is called by:
 11078 ;;		_efgtoa
 11079 ;; This function uses a non-reentrant model
 11080 ;;
 11081                           
 11082                           	psect	text38
 11083   004EFC                     __ptext38:
 11084                           	callstack 0
 11085   004EFC                     _memcpy:
 11086                           	callstack 24
 11087   004EFC  C008  F00F         	movff	memcpy@s1,memcpy@s
 11088   004F00  C009  F010         	movff	memcpy@s1+1,memcpy@s+1
 11089   004F04  C006  F00D         	movff	memcpy@d1,memcpy@d
 11090   004F08  C007  F00E         	movff	memcpy@d1+1,memcpy@d+1
 11091   004F0C  EF98  F027         	goto	l7108
 11092   004F10                     l7100:
 11093   004F10  C00F  FFD9         	movff	memcpy@s,fsr2l
 11094   004F14  C010  FFDA         	movff	memcpy@s+1,fsr2h
 11095   004F18  50DF               	movf	indf2,w,c
 11096   004F1A  6E0C               	movwf	memcpy@tmp^0,c
 11097   004F1C  4A0F               	infsnz	memcpy@s^0,f,c
 11098   004F1E  2A10               	incf	(memcpy@s+1)^0,f,c
 11099   004F20  C00D  FFD9         	movff	memcpy@d,fsr2l
 11100   004F24  C00E  FFDA         	movff	memcpy@d+1,fsr2h
 11101   004F28  C00C  FFDF         	movff	memcpy@tmp,indf2
 11102   004F2C  4A0D               	infsnz	memcpy@d^0,f,c
 11103   004F2E  2A0E               	incf	(memcpy@d+1)^0,f,c
 11104   004F30                     l7108:
 11105   004F30  060A               	decf	memcpy@n^0,f,c
 11106   004F32  A0D8               	btfss	status,0,c
 11107   004F34  060B               	decf	(memcpy@n+1)^0,f,c
 11108   004F36  280A               	incf	memcpy@n^0,w,c
 11109   004F38  E106               	bnz	u8441
 11110   004F3A  280B               	incf	(memcpy@n+1)^0,w,c
 11111   004F3C  A4D8               	btfss	status,2,c
 11112   004F3E  EFA3  F027         	goto	u8441
 11113   004F42  EFA5  F027         	goto	u8440
 11114   004F46                     u8441:
 11115   004F46  EF88  F027         	goto	l7100
 11116   004F4A                     u8440:
 11117   004F4A  0012               	return		;funcret
 11118   004F4C                     __end_of_memcpy:
 11119                           	callstack 0
 11120                           
 11121 ;; *************** function _labs *****************
 11122 ;; Defined at:
 11123 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\labs.c"
 11124 ;; Parameters:    Size  Location     Type
 11125 ;;  a               4    5[COMRAM] long 
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;		None
 11128 ;; Return value:  Size  Location     Type
 11129 ;;                  4    5[COMRAM] long 
 11130 ;; Registers used:
 11131 ;;		wreg, status,2, status,0
 11132 ;; Tracked objects:
 11133 ;;		On entry : 0/0
 11134 ;;		On exit  : 0/0
 11135 ;;		Unchanged: 0/0
 11136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11139 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11140 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11141 ;;Total ram usage:        8 bytes
 11142 ;; Hardware stack levels used: 1
 11143 ;; Hardware stack levels required when called: 1
 11144 ;; This function calls:
 11145 ;;		Nothing
 11146 ;; This function is called by:
 11147 ;;		_efgtoa
 11148 ;; This function uses a non-reentrant model
 11149 ;;
 11150                           
 11151                           	psect	text39
 11152   004E52                     __ptext39:
 11153                           	callstack 0
 11154   004E52                     _labs:
 11155                           	callstack 24
 11156   004E52  BE09               	btfsc	(labs@a+3)^0,7,c
 11157   004E54  EF2E  F027         	goto	u8331
 11158   004E58  EF30  F027         	goto	u8330
 11159   004E5C                     u8331:
 11160   004E5C  EF3A  F027         	goto	l7066
 11161   004E60                     u8330:
 11162   004E60  C006  F006         	movff	labs@a,?_labs
 11163   004E64  C007  F007         	movff	labs@a+1,?_labs+1
 11164   004E68  C008  F008         	movff	labs@a+2,?_labs+2
 11165   004E6C  C009  F009         	movff	labs@a+3,?_labs+3
 11166   004E70  EF53  F027         	goto	l1634
 11167   004E74                     l7066:
 11168   004E74  C006  F00A         	movff	labs@a,??_labs
 11169   004E78  C007  F00B         	movff	labs@a+1,??_labs+1
 11170   004E7C  C008  F00C         	movff	labs@a+2,??_labs+2
 11171   004E80  C009  F00D         	movff	labs@a+3,??_labs+3
 11172   004E84  1E0A               	comf	??_labs^0,f,c
 11173   004E86  1E0B               	comf	(??_labs+1)^0,f,c
 11174   004E88  1E0C               	comf	(??_labs+2)^0,f,c
 11175   004E8A  1E0D               	comf	(??_labs+3)^0,f,c
 11176   004E8C  2A0A               	incf	??_labs^0,f,c
 11177   004E8E  0E00               	movlw	0
 11178   004E90  220B               	addwfc	(??_labs+1)^0,f,c
 11179   004E92  220C               	addwfc	(??_labs+2)^0,f,c
 11180   004E94  220D               	addwfc	(??_labs+3)^0,f,c
 11181   004E96  C00A  F006         	movff	??_labs,?_labs
 11182   004E9A  C00B  F007         	movff	??_labs+1,?_labs+1
 11183   004E9E  C00C  F008         	movff	??_labs+2,?_labs+2
 11184   004EA2  C00D  F009         	movff	??_labs+3,?_labs+3
 11185   004EA6                     l1634:
 11186   004EA6  0012               	return		;funcret
 11187   004EA8                     __end_of_labs:
 11188                           	callstack 0
 11189                           
 11190 ;; *************** function _floorf *****************
 11191 ;; Defined at:
 11192 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\floorf.c"
 11193 ;; Parameters:    Size  Location     Type
 11194 ;;  x               4   69[COMRAM] float 
 11195 ;; Auto vars:     Size  Location     Type
 11196 ;;  u               4    6[BANK0 ] struct .
 11197 ;;  m               4    0[BANK0 ] unsigned long 
 11198 ;;  e               2    4[BANK0 ] int 
 11199 ;; Return value:  Size  Location     Type
 11200 ;;                  4   69[COMRAM] float 
 11201 ;; Registers used:
 11202 ;;		wreg, status,2, status,0
 11203 ;; Tracked objects:
 11204 ;;		On entry : 0/0
 11205 ;;		On exit  : 0/0
 11206 ;;		Unchanged: 0/0
 11207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11209 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11210 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11211 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11212 ;;Total ram usage:       20 bytes
 11213 ;; Hardware stack levels used: 1
 11214 ;; Hardware stack levels required when called: 1
 11215 ;; This function calls:
 11216 ;;		Nothing
 11217 ;; This function is called by:
 11218 ;;		_efgtoa
 11219 ;; This function uses a non-reentrant model
 11220 ;;
 11221                           
 11222                           	psect	text40
 11223   003268                     __ptext40:
 11224                           	callstack 0
 11225   003268                     _floorf:
 11226                           	callstack 24
 11227   003268  C119  F066         	movff	floorf@F521,floorf@u
 11228   00326C  C11A  F067         	movff	floorf@F521+1,floorf@u+1
 11229   003270  C11B  F068         	movff	floorf@F521+2,floorf@u+2
 11230   003274  C11C  F069         	movff	floorf@F521+3,floorf@u+3
 11231   003278  C046  F066         	movff	floorf@x,floorf@u
 11232   00327C  C047  F067         	movff	floorf@x+1,floorf@u+1
 11233   003280  C048  F068         	movff	floorf@x+2,floorf@u+2
 11234   003284  C049  F069         	movff	floorf@x+3,floorf@u+3
 11235   003288  0E81               	movlw	129
 11236   00328A  6E4A               	movwf	??_floorf^0,c
 11237   00328C  0EFF               	movlw	255
 11238   00328E  6E4B               	movwf	(??_floorf+1)^0,c
 11239   003290  C066  F04C         	movff	floorf@u,??_floorf+2
 11240   003294  C067  F04D         	movff	floorf@u+1,??_floorf+3
 11241   003298  C068  F04E         	movff	floorf@u+2,??_floorf+4
 11242   00329C  C069  F04F         	movff	floorf@u+3,??_floorf+5
 11243   0032A0  0E18               	movlw	24
 11244   0032A2  EF58  F019         	goto	u8340
 11245   0032A6                     u8345:
 11246   0032A6  90D8               	bcf	status,0,c
 11247   0032A8  324F               	rrcf	(??_floorf+5)^0,f,c
 11248   0032AA  324E               	rrcf	(??_floorf+4)^0,f,c
 11249   0032AC  324D               	rrcf	(??_floorf+3)^0,f,c
 11250   0032AE  324C               	rrcf	(??_floorf+2)^0,f,c
 11251   0032B0                     u8340:
 11252   0032B0  2EE8               	decfsz	wreg,f,c
 11253   0032B2  EF53  F019         	goto	u8345
 11254   0032B6  504C               	movf	(??_floorf+2)^0,w,c
 11255   0032B8  244A               	addwf	??_floorf^0,w,c
 11256   0032BA  0100               	movlb	0	; () banked
 11257   0032BC  6F64               	movwf	floorf@e& (0+255),b
 11258   0032BE  0E00               	movlw	0
 11259   0032C0  204B               	addwfc	(??_floorf+1)^0,w,c
 11260   0032C2  6F65               	movwf	(floorf@e+1)& (0+255),b
 11261   0032C4  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 11262   0032C6  EF6E  F019         	goto	u8351
 11263   0032CA  5165               	movf	(floorf@e+1)& (0+255),w,b
 11264   0032CC  E109               	bnz	u8350
 11265   0032CE  0E17               	movlw	23
 11266   0032D0  5D64               	subwf	floorf@e& (0+255),w,b
 11267   0032D2  A0D8               	btfss	status,0,c
 11268   0032D4  EF6E  F019         	goto	u8351
 11269   0032D8  EF70  F019         	goto	u8350
 11270   0032DC                     u8351:
 11271   0032DC  EF7A  F019         	goto	l7076
 11272   0032E0                     u8350:
 11273   0032E0                     l7074:
 11274                           
 11275                           ; BSR set to: 0
 11276   0032E0  C046  F046         	movff	floorf@x,?_floorf
 11277   0032E4  C047  F047         	movff	floorf@x+1,?_floorf+1
 11278   0032E8  C048  F048         	movff	floorf@x+2,?_floorf+2
 11279   0032EC  C049  F049         	movff	floorf@x+3,?_floorf+3
 11280   0032F0  EF3E  F01A         	goto	l1620
 11281   0032F4                     l7076:
 11282                           
 11283                           ; BSR set to: 0
 11284   0032F4  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 11285   0032F6  EF7F  F019         	goto	u8361
 11286   0032FA  EF81  F019         	goto	u8360
 11287   0032FE                     u8361:
 11288   0032FE  EFF2  F019         	goto	l7086
 11289   003302                     u8360:
 11290   003302                     
 11291                           ; BSR set to: 0
 11292   003302  C064  F04A         	movff	floorf@e,??_floorf
 11293   003306  0EFF               	movlw	255
 11294   003308  6E4B               	movwf	(??_floorf+1)^0,c
 11295   00330A  0EFF               	movlw	255
 11296   00330C  6E4C               	movwf	(??_floorf+2)^0,c
 11297   00330E  0E7F               	movlw	127
 11298   003310  6E4D               	movwf	(??_floorf+3)^0,c
 11299   003312  0E00               	movlw	0
 11300   003314  6E4E               	movwf	(??_floorf+4)^0,c
 11301   003316                     u8375:
 11302   003316  664A               	tstfsz	??_floorf^0,c
 11303   003318  EF90  F019         	goto	u8376
 11304   00331C  EF98  F019         	goto	u8377
 11305   003320                     u8376:
 11306   003320  344E               	rlcf	(??_floorf+4)^0,w,c
 11307   003322  324E               	rrcf	(??_floorf+4)^0,f,c
 11308   003324  324D               	rrcf	(??_floorf+3)^0,f,c
 11309   003326  324C               	rrcf	(??_floorf+2)^0,f,c
 11310   003328  324B               	rrcf	(??_floorf+1)^0,f,c
 11311   00332A  2E4A               	decfsz	??_floorf^0,f,c
 11312   00332C  EF8B  F019         	goto	u8375
 11313   003330                     u8377:
 11314   003330  C04B  F060         	movff	??_floorf+1,floorf@m
 11315   003334  C04C  F061         	movff	??_floorf+2,floorf@m+1
 11316   003338  C04D  F062         	movff	??_floorf+3,floorf@m+2
 11317   00333C  C04E  F063         	movff	??_floorf+4,floorf@m+3
 11318   003340  0100               	movlb	0	; () banked
 11319   003342  5160               	movf	floorf@m& (0+255),w,b
 11320   003344  1566               	andwf	floorf@u& (0+255),w,b
 11321   003346  6E4A               	movwf	??_floorf^0,c
 11322   003348  5161               	movf	(floorf@m+1)& (0+255),w,b
 11323   00334A  1567               	andwf	(floorf@u+1)& (0+255),w,b
 11324   00334C  6E4B               	movwf	(??_floorf+1)^0,c
 11325   00334E  5162               	movf	(floorf@m+2)& (0+255),w,b
 11326   003350  1568               	andwf	(floorf@u+2)& (0+255),w,b
 11327   003352  6E4C               	movwf	(??_floorf+2)^0,c
 11328   003354  5163               	movf	(floorf@m+3)& (0+255),w,b
 11329   003356  1569               	andwf	(floorf@u+3)& (0+255),w,b
 11330   003358  6E4D               	movwf	(??_floorf+3)^0,c
 11331   00335A  504A               	movf	??_floorf^0,w,c
 11332   00335C  104B               	iorwf	(??_floorf+1)^0,w,c
 11333   00335E  104C               	iorwf	(??_floorf+2)^0,w,c
 11334   003360  104D               	iorwf	(??_floorf+3)^0,w,c
 11335   003362  A4D8               	btfss	status,2,c
 11336   003364  EFB6  F019         	goto	u8381
 11337   003368  EFB8  F019         	goto	u8380
 11338   00336C                     u8381:
 11339   00336C  EFBA  F019         	goto	l7082
 11340   003370                     u8380:
 11341   003370  EF70  F019         	goto	l7074
 11342   003374                     l7082:
 11343                           
 11344                           ; BSR set to: 0
 11345   003374  C066  F04A         	movff	floorf@u,??_floorf
 11346   003378  C067  F04B         	movff	floorf@u+1,??_floorf+1
 11347   00337C  C068  F04C         	movff	floorf@u+2,??_floorf+2
 11348   003380  C069  F04D         	movff	floorf@u+3,??_floorf+3
 11349   003384  0E20               	movlw	32
 11350   003386  EFCA  F019         	goto	u8390
 11351   00338A                     u8395:
 11352   00338A  90D8               	bcf	status,0,c
 11353   00338C  324D               	rrcf	(??_floorf+3)^0,f,c
 11354   00338E  324C               	rrcf	(??_floorf+2)^0,f,c
 11355   003390  324B               	rrcf	(??_floorf+1)^0,f,c
 11356   003392  324A               	rrcf	??_floorf^0,f,c
 11357   003394                     u8390:
 11358   003394  2EE8               	decfsz	wreg,f,c
 11359   003396  EFC5  F019         	goto	u8395
 11360   00339A  504A               	movf	??_floorf^0,w,c
 11361   00339C  104B               	iorwf	(??_floorf+1)^0,w,c
 11362   00339E  104C               	iorwf	(??_floorf+2)^0,w,c
 11363   0033A0  104D               	iorwf	(??_floorf+3)^0,w,c
 11364   0033A2  B4D8               	btfsc	status,2,c
 11365   0033A4  EFD6  F019         	goto	u8401
 11366   0033A8  EFD8  F019         	goto	u8400
 11367   0033AC                     u8401:
 11368   0033AC  EFE0  F019         	goto	l1623
 11369   0033B0                     u8400:
 11370   0033B0                     
 11371                           ; BSR set to: 0
 11372   0033B0  5160               	movf	floorf@m& (0+255),w,b
 11373   0033B2  2766               	addwf	floorf@u& (0+255),f,b
 11374   0033B4  5161               	movf	(floorf@m+1)& (0+255),w,b
 11375   0033B6  2367               	addwfc	(floorf@u+1)& (0+255),f,b
 11376   0033B8  5162               	movf	(floorf@m+2)& (0+255),w,b
 11377   0033BA  2368               	addwfc	(floorf@u+2)& (0+255),f,b
 11378   0033BC  5163               	movf	(floorf@m+3)& (0+255),w,b
 11379   0033BE  2369               	addwfc	(floorf@u+3)& (0+255),f,b
 11380   0033C0                     l1623:
 11381                           
 11382                           ; BSR set to: 0
 11383   0033C0  1D60               	comf	floorf@m& (0+255),w,b
 11384   0033C2  6E4A               	movwf	??_floorf^0,c
 11385   0033C4  1D61               	comf	(floorf@m+1)& (0+255),w,b
 11386   0033C6  6E4B               	movwf	(??_floorf+1)^0,c
 11387   0033C8  1D62               	comf	(floorf@m+2)& (0+255),w,b
 11388   0033CA  6E4C               	movwf	(??_floorf+2)^0,c
 11389   0033CC  1D63               	comf	(floorf@m+3)& (0+255),w,b
 11390   0033CE  6E4D               	movwf	(??_floorf+3)^0,c
 11391   0033D0  504A               	movf	??_floorf^0,w,c
 11392   0033D2  1766               	andwf	floorf@u& (0+255),f,b
 11393   0033D4  504B               	movf	(??_floorf+1)^0,w,c
 11394   0033D6  1767               	andwf	(floorf@u+1)& (0+255),f,b
 11395   0033D8  504C               	movf	(??_floorf+2)^0,w,c
 11396   0033DA  1768               	andwf	(floorf@u+2)& (0+255),f,b
 11397   0033DC  504D               	movf	(??_floorf+3)^0,w,c
 11398   0033DE  1769               	andwf	(floorf@u+3)& (0+255),f,b
 11399   0033E0  EF36  F01A         	goto	l7094
 11400   0033E4                     l7086:
 11401                           
 11402                           ; BSR set to: 0
 11403   0033E4  C066  F04A         	movff	floorf@u,??_floorf
 11404   0033E8  C067  F04B         	movff	floorf@u+1,??_floorf+1
 11405   0033EC  C068  F04C         	movff	floorf@u+2,??_floorf+2
 11406   0033F0  C069  F04D         	movff	floorf@u+3,??_floorf+3
 11407   0033F4  0E20               	movlw	32
 11408   0033F6  EF02  F01A         	goto	u8410
 11409   0033FA                     u8415:
 11410   0033FA  90D8               	bcf	status,0,c
 11411   0033FC  324D               	rrcf	(??_floorf+3)^0,f,c
 11412   0033FE  324C               	rrcf	(??_floorf+2)^0,f,c
 11413   003400  324B               	rrcf	(??_floorf+1)^0,f,c
 11414   003402  324A               	rrcf	??_floorf^0,f,c
 11415   003404                     u8410:
 11416   003404  2EE8               	decfsz	wreg,f,c
 11417   003406  EFFD  F019         	goto	u8415
 11418   00340A  504A               	movf	??_floorf^0,w,c
 11419   00340C  104B               	iorwf	(??_floorf+1)^0,w,c
 11420   00340E  104C               	iorwf	(??_floorf+2)^0,w,c
 11421   003410  104D               	iorwf	(??_floorf+3)^0,w,c
 11422   003412  A4D8               	btfss	status,2,c
 11423   003414  EF0E  F01A         	goto	u8421
 11424   003418  EF10  F01A         	goto	u8420
 11425   00341C                     u8421:
 11426   00341C  EF1A  F01A         	goto	l7090
 11427   003420                     u8420:
 11428   003420                     
 11429                           ; BSR set to: 0
 11430   003420  0E00               	movlw	0
 11431   003422  6F66               	movwf	floorf@u& (0+255),b
 11432   003424  0E00               	movlw	0
 11433   003426  6F67               	movwf	(floorf@u+1)& (0+255),b
 11434   003428  0E00               	movlw	0
 11435   00342A  6F68               	movwf	(floorf@u+2)& (0+255),b
 11436   00342C  0E00               	movlw	0
 11437   00342E  6F69               	movwf	(floorf@u+3)& (0+255),b
 11438   003430  EF36  F01A         	goto	l7094
 11439   003434                     l7090:
 11440                           
 11441                           ; BSR set to: 0
 11442   003434  90D8               	bcf	status,0,c
 11443   003436  3566               	rlcf	floorf@u& (0+255),w,b
 11444   003438  6E4A               	movwf	??_floorf^0,c
 11445   00343A  3567               	rlcf	(floorf@u+1)& (0+255),w,b
 11446   00343C  6E4B               	movwf	(??_floorf+1)^0,c
 11447   00343E  3568               	rlcf	(floorf@u+2)& (0+255),w,b
 11448   003440  6E4C               	movwf	(??_floorf+2)^0,c
 11449   003442  3569               	rlcf	(floorf@u+3)& (0+255),w,b
 11450   003444  6E4D               	movwf	(??_floorf+3)^0,c
 11451   003446  504A               	movf	??_floorf^0,w,c
 11452   003448  104B               	iorwf	(??_floorf+1)^0,w,c
 11453   00344A  104C               	iorwf	(??_floorf+2)^0,w,c
 11454   00344C  104D               	iorwf	(??_floorf+3)^0,w,c
 11455   00344E  B4D8               	btfsc	status,2,c
 11456   003450  EF2C  F01A         	goto	u8431
 11457   003454  EF2E  F01A         	goto	u8430
 11458   003458                     u8431:
 11459   003458  EF36  F01A         	goto	l7094
 11460   00345C                     u8430:
 11461   00345C                     
 11462                           ; BSR set to: 0
 11463   00345C  0E00               	movlw	0
 11464   00345E  6F66               	movwf	floorf@u& (0+255),b
 11465   003460  0E00               	movlw	0
 11466   003462  6F67               	movwf	(floorf@u+1)& (0+255),b
 11467   003464  0E80               	movlw	128
 11468   003466  6F68               	movwf	(floorf@u+2)& (0+255),b
 11469   003468  0EBF               	movlw	191
 11470   00346A  6F69               	movwf	(floorf@u+3)& (0+255),b
 11471   00346C                     l7094:
 11472                           
 11473                           ; BSR set to: 0
 11474   00346C  C066  F046         	movff	floorf@u,?_floorf
 11475   003470  C067  F047         	movff	floorf@u+1,?_floorf+1
 11476   003474  C068  F048         	movff	floorf@u+2,?_floorf+2
 11477   003478  C069  F049         	movff	floorf@u+3,?_floorf+3
 11478   00347C                     l1620:
 11479                           
 11480                           ; BSR set to: 0
 11481   00347C  0012               	return		;funcret
 11482   00347E                     __end_of_floorf:
 11483                           	callstack 0
 11484                           
 11485 ;; *************** function ___fpclassifyf *****************
 11486 ;; Defined at:
 11487 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__fpclassifyf.c"
 11488 ;; Parameters:    Size  Location     Type
 11489 ;;  x               4    5[COMRAM] float 
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;  u               4   15[COMRAM] struct .
 11492 ;;  e               2   13[COMRAM] int 
 11493 ;; Return value:  Size  Location     Type
 11494 ;;                  2    5[COMRAM] int 
 11495 ;; Registers used:
 11496 ;;		wreg, status,2, status,0
 11497 ;; Tracked objects:
 11498 ;;		On entry : 0/0
 11499 ;;		On exit  : 0/0
 11500 ;;		Unchanged: 0/0
 11501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11503 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11504 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11505 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11506 ;;Total ram usage:       14 bytes
 11507 ;; Hardware stack levels used: 1
 11508 ;; Hardware stack levels required when called: 1
 11509 ;; This function calls:
 11510 ;;		Nothing
 11511 ;; This function is called by:
 11512 ;;		_efgtoa
 11513 ;; This function uses a non-reentrant model
 11514 ;;
 11515                           
 11516                           	psect	text41
 11517   004498                     __ptext41:
 11518                           	callstack 0
 11519   004498                     ___fpclassifyf:
 11520                           	callstack 24
 11521   004498  C11D  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
 11522   00449C  C11E  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 11523   0044A0  C11F  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 11524   0044A4  C120  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 11525   0044A8  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 11526   0044AC  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11527   0044B0  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11528   0044B4  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11529   0044B8  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11530   0044BC  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11531   0044C0  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11532   0044C4  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11533   0044C8  0E18               	movlw	24
 11534   0044CA  EF6C  F022         	goto	u8250
 11535   0044CE                     u8255:
 11536   0044CE  90D8               	bcf	status,0,c
 11537   0044D0  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 11538   0044D2  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 11539   0044D4  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 11540   0044D6  320A               	rrcf	??___fpclassifyf^0,f,c
 11541   0044D8                     u8250:
 11542   0044D8  2EE8               	decfsz	wreg,f,c
 11543   0044DA  EF67  F022         	goto	u8255
 11544   0044DE  500A               	movf	??___fpclassifyf^0,w,c
 11545   0044E0  6E0E               	movwf	___fpclassifyf@e^0,c
 11546   0044E2  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 11547   0044E4  500E               	movf	___fpclassifyf@e^0,w,c
 11548   0044E6  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11549   0044E8  A4D8               	btfss	status,2,c
 11550   0044EA  EF79  F022         	goto	u8261
 11551   0044EE  EF7B  F022         	goto	u8260
 11552   0044F2                     u8261:
 11553   0044F2  EF9B  F022         	goto	l7048
 11554   0044F6                     u8260:
 11555   0044F6  90D8               	bcf	status,0,c
 11556   0044F8  3410               	rlcf	___fpclassifyf@u^0,w,c
 11557   0044FA  6E0A               	movwf	??___fpclassifyf^0,c
 11558   0044FC  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11559   0044FE  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 11560   004500  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11561   004502  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 11562   004504  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11563   004506  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 11564   004508  500A               	movf	??___fpclassifyf^0,w,c
 11565   00450A  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11566   00450C  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11567   00450E  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11568   004510  A4D8               	btfss	status,2,c
 11569   004512  EF8D  F022         	goto	u8271
 11570   004516  EF8F  F022         	goto	u8270
 11571   00451A                     u8271:
 11572   00451A  EF95  F022         	goto	l7044
 11573   00451E                     u8270:
 11574   00451E  0E00               	movlw	0
 11575   004520  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11576   004522  0E02               	movlw	2
 11577   004524  6E06               	movwf	?___fpclassifyf^0,c
 11578   004526  EFCA  F022         	goto	l1606
 11579   00452A                     l7044:
 11580   00452A  0E00               	movlw	0
 11581   00452C  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11582   00452E  0E03               	movlw	3
 11583   004530  6E06               	movwf	?___fpclassifyf^0,c
 11584   004532  EFCA  F022         	goto	l1606
 11585   004536                     l7048:
 11586   004536  280E               	incf	___fpclassifyf@e^0,w,c
 11587   004538  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11588   00453A  A4D8               	btfss	status,2,c
 11589   00453C  EFA2  F022         	goto	u8281
 11590   004540  EFA4  F022         	goto	u8280
 11591   004544                     u8281:
 11592   004544  EFC6  F022         	goto	l7054
 11593   004548                     u8280:
 11594   004548  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11595   00454C  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11596   004550  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11597   004554  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11598   004558  0E09               	movlw	9
 11599   00455A                     u8295:
 11600   00455A  90D8               	bcf	status,0,c
 11601   00455C  360A               	rlcf	??___fpclassifyf^0,f,c
 11602   00455E  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 11603   004560  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 11604   004562  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 11605   004564  2EE8               	decfsz	wreg,f,c
 11606   004566  EFAD  F022         	goto	u8295
 11607   00456A  500A               	movf	??___fpclassifyf^0,w,c
 11608   00456C  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11609   00456E  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11610   004570  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11611   004572  B4D8               	btfsc	status,2,c
 11612   004574  EFBE  F022         	goto	u8301
 11613   004578  EFC1  F022         	goto	u8300
 11614   00457C                     u8301:
 11615   00457C  0E01               	movlw	1
 11616   00457E  EFC2  F022         	goto	u8310
 11617   004582                     u8300:
 11618   004582  0E00               	movlw	0
 11619   004584                     u8310:
 11620   004584  6E06               	movwf	?___fpclassifyf^0,c
 11621   004586  6A07               	clrf	(?___fpclassifyf+1)^0,c
 11622   004588  EFCA  F022         	goto	l1606
 11623   00458C                     l7054:
 11624   00458C  0E00               	movlw	0
 11625   00458E  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11626   004590  0E04               	movlw	4
 11627   004592  6E06               	movwf	?___fpclassifyf^0,c
 11628   004594                     l1606:
 11629   004594  0012               	return		;funcret
 11630   004596                     __end_of___fpclassifyf:
 11631                           	callstack 0
 11632                           
 11633 ;; *************** function ___fltol *****************
 11634 ;; Defined at:
 11635 ;;		line 43 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fltol.c"
 11636 ;; Parameters:    Size  Location     Type
 11637 ;;  f1              4    4[BANK0 ] int 
 11638 ;; Auto vars:     Size  Location     Type
 11639 ;;  exp1            1   82[COMRAM] unsigned char 
 11640 ;;  sign1           1   81[COMRAM] unsigned char 
 11641 ;; Return value:  Size  Location     Type
 11642 ;;                  4    4[BANK0 ] long 
 11643 ;; Registers used:
 11644 ;;		wreg, status,2, status,0
 11645 ;; Tracked objects:
 11646 ;;		On entry : 0/0
 11647 ;;		On exit  : 0/0
 11648 ;;		Unchanged: 0/0
 11649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11650 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11651 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11652 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11653 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11654 ;;Total ram usage:       10 bytes
 11655 ;; Hardware stack levels used: 1
 11656 ;; Hardware stack levels required when called: 1
 11657 ;; This function calls:
 11658 ;;		Nothing
 11659 ;; This function is called by:
 11660 ;;		_runDAC
 11661 ;;		_efgtoa
 11662 ;;		___rem_pio2f
 11663 ;; This function uses a non-reentrant model
 11664 ;;
 11665                           
 11666                           	psect	text42
 11667   00428C                     __ptext42:
 11668                           	callstack 0
 11669   00428C                     ___fltol:
 11670                           	callstack 24
 11671   00428C  0100               	movlb	0	; () banked
 11672   00428E  3566               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11673   004290  3567               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11674   004292  6E53               	movwf	___fltol@exp1^0,c
 11675   004294  5053               	movf	___fltol@exp1^0,w,c
 11676   004296  A4D8               	btfss	status,2,c
 11677   004298  EF50  F021         	goto	u8071
 11678   00429C  EF52  F021         	goto	u8070
 11679   0042A0                     u8071:
 11680   0042A0  EF5C  F021         	goto	l6940
 11681   0042A4                     u8070:
 11682   0042A4                     l6936:
 11683                           
 11684                           ; BSR set to: 0
 11685   0042A4  0E00               	movlw	0
 11686   0042A6  6F64               	movwf	?___fltol& (0+255),b
 11687   0042A8  0E00               	movlw	0
 11688   0042AA  6F65               	movwf	(?___fltol+1)& (0+255),b
 11689   0042AC  0E00               	movlw	0
 11690   0042AE  6F66               	movwf	(?___fltol+2)& (0+255),b
 11691   0042B0  0E00               	movlw	0
 11692   0042B2  6F67               	movwf	(?___fltol+3)& (0+255),b
 11693   0042B4  EFC9  F021         	goto	l1007
 11694   0042B8                     l6940:
 11695                           
 11696                           ; BSR set to: 0
 11697   0042B8  C064  F068         	movff	___fltol@f1,??___fltol
 11698   0042BC  C065  F069         	movff	___fltol@f1+1,??___fltol+1
 11699   0042C0  C066  F06A         	movff	___fltol@f1+2,??___fltol+2
 11700   0042C4  C067  F06B         	movff	___fltol@f1+3,??___fltol+3
 11701   0042C8  0E20               	movlw	32
 11702   0042CA  EF6C  F021         	goto	u8080
 11703   0042CE                     u8085:
 11704   0042CE  90D8               	bcf	status,0,c
 11705   0042D0  336B               	rrcf	(??___fltol+3)& (0+255),f,b
 11706   0042D2  336A               	rrcf	(??___fltol+2)& (0+255),f,b
 11707   0042D4  3369               	rrcf	(??___fltol+1)& (0+255),f,b
 11708   0042D6  3368               	rrcf	??___fltol& (0+255),f,b
 11709   0042D8                     u8080:
 11710   0042D8  2EE8               	decfsz	wreg,f,c
 11711   0042DA  EF67  F021         	goto	u8085
 11712   0042DE  5168               	movf	??___fltol& (0+255),w,b
 11713   0042E0  6E52               	movwf	___fltol@sign1^0,c
 11714   0042E2                     
 11715                           ; BSR set to: 0
 11716   0042E2  8F66               	bsf	(___fltol@f1+2)& (0+255),7,b
 11717   0042E4                     
 11718                           ; BSR set to: 0
 11719   0042E4  0EFF               	movlw	255
 11720   0042E6  1764               	andwf	___fltol@f1& (0+255),f,b
 11721   0042E8  0EFF               	movlw	255
 11722   0042EA  1765               	andwf	(___fltol@f1+1)& (0+255),f,b
 11723   0042EC  0EFF               	movlw	255
 11724   0042EE  1766               	andwf	(___fltol@f1+2)& (0+255),f,b
 11725   0042F0  0E00               	movlw	0
 11726   0042F2  1767               	andwf	(___fltol@f1+3)& (0+255),f,b
 11727   0042F4                     
 11728                           ; BSR set to: 0
 11729   0042F4  0E96               	movlw	150
 11730   0042F6  5E53               	subwf	___fltol@exp1^0,f,c
 11731   0042F8                     
 11732                           ; BSR set to: 0
 11733   0042F8  BE53               	btfsc	___fltol@exp1^0,7,c
 11734   0042FA  EF83  F021         	goto	u8090
 11735   0042FE  EF81  F021         	goto	u8091
 11736   004302                     u8091:
 11737   004302  EF99  F021         	goto	l6960
 11738   004306                     u8090:
 11739   004306                     
 11740                           ; BSR set to: 0
 11741   004306  5053               	movf	___fltol@exp1^0,w,c
 11742   004308  0A80               	xorlw	128
 11743   00430A  0F97               	addlw	151
 11744   00430C  B0D8               	btfsc	status,0,c
 11745   00430E  EF8B  F021         	goto	u8101
 11746   004312  EF8D  F021         	goto	u8100
 11747   004316                     u8101:
 11748   004316  EF8F  F021         	goto	l6956
 11749   00431A                     u8100:
 11750   00431A  EF52  F021         	goto	l6936
 11751   00431E                     l6956:
 11752                           
 11753                           ; BSR set to: 0
 11754   00431E  90D8               	bcf	status,0,c
 11755   004320  3367               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11756   004322  3366               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11757   004324  3365               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11758   004326  3364               	rrcf	___fltol@f1& (0+255),f,b
 11759   004328                     
 11760                           ; BSR set to: 0
 11761   004328  3E53               	incfsz	___fltol@exp1^0,f,c
 11762   00432A  EF8F  F021         	goto	l6956
 11763   00432E  EFB1  F021         	goto	l6970
 11764   004332                     l6960:
 11765                           
 11766                           ; BSR set to: 0
 11767   004332  0E1F               	movlw	31
 11768   004334  6453               	cpfsgt	___fltol@exp1^0,c
 11769   004336  EF9F  F021         	goto	u8111
 11770   00433A  EFA1  F021         	goto	u8110
 11771   00433E                     u8111:
 11772   00433E  EFA9  F021         	goto	l6968
 11773   004342                     u8110:
 11774   004342  EF52  F021         	goto	l6936
 11775   004346                     l6966:
 11776                           
 11777                           ; BSR set to: 0
 11778   004346  90D8               	bcf	status,0,c
 11779   004348  3764               	rlcf	___fltol@f1& (0+255),f,b
 11780   00434A  3765               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11781   00434C  3766               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11782   00434E  3767               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11783   004350  0653               	decf	___fltol@exp1^0,f,c
 11784   004352                     l6968:
 11785                           
 11786                           ; BSR set to: 0
 11787   004352  5053               	movf	___fltol@exp1^0,w,c
 11788   004354  A4D8               	btfss	status,2,c
 11789   004356  EFAF  F021         	goto	u8121
 11790   00435A  EFB1  F021         	goto	u8120
 11791   00435E                     u8121:
 11792   00435E  EFA3  F021         	goto	l6966
 11793   004362                     u8120:
 11794   004362                     l6970:
 11795                           
 11796                           ; BSR set to: 0
 11797   004362  5052               	movf	___fltol@sign1^0,w,c
 11798   004364  B4D8               	btfsc	status,2,c
 11799   004366  EFB7  F021         	goto	u8131
 11800   00436A  EFB9  F021         	goto	u8130
 11801   00436E                     u8131:
 11802   00436E  EFC1  F021         	goto	l6974
 11803   004372                     u8130:
 11804   004372                     
 11805                           ; BSR set to: 0
 11806   004372  1F67               	comf	(___fltol@f1+3)& (0+255),f,b
 11807   004374  1F66               	comf	(___fltol@f1+2)& (0+255),f,b
 11808   004376  1F65               	comf	(___fltol@f1+1)& (0+255),f,b
 11809   004378  6D64               	negf	___fltol@f1& (0+255),b
 11810   00437A  0E00               	movlw	0
 11811   00437C  2365               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11812   00437E  2366               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11813   004380  2367               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11814   004382                     l6974:
 11815                           
 11816                           ; BSR set to: 0
 11817   004382  C064  F064         	movff	___fltol@f1,?___fltol
 11818   004386  C065  F065         	movff	___fltol@f1+1,?___fltol+1
 11819   00438A  C066  F066         	movff	___fltol@f1+2,?___fltol+2
 11820   00438E  C067  F067         	movff	___fltol@f1+3,?___fltol+3
 11821   004392                     l1007:
 11822                           
 11823                           ; BSR set to: 0
 11824   004392  0012               	return		;funcret
 11825   004394                     __end_of___fltol:
 11826                           	callstack 0
 11827                           
 11828 ;; *************** function ___flsub *****************
 11829 ;; Defined at:
 11830 ;;		line 245 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 11831 ;; Parameters:    Size  Location     Type
 11832 ;;  b               4    4[BANK0 ] long 
 11833 ;;  a               4    8[BANK0 ] long 
 11834 ;; Auto vars:     Size  Location     Type
 11835 ;;		None
 11836 ;; Return value:  Size  Location     Type
 11837 ;;                  4    4[BANK0 ] long 
 11838 ;; Registers used:
 11839 ;;		wreg, status,2, status,0, cstack
 11840 ;; Tracked objects:
 11841 ;;		On entry : 0/0
 11842 ;;		On exit  : 0/0
 11843 ;;		Unchanged: 0/0
 11844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11845 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11848 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11849 ;;Total ram usage:        8 bytes
 11850 ;; Hardware stack levels used: 1
 11851 ;; Hardware stack levels required when called: 2
 11852 ;; This function calls:
 11853 ;;		___fladd
 11854 ;; This function is called by:
 11855 ;;		_efgtoa
 11856 ;;		___rem_pio2f
 11857 ;; This function uses a non-reentrant model
 11858 ;;
 11859                           
 11860                           	psect	text43
 11861   004F96                     __ptext43:
 11862                           	callstack 0
 11863   004F96                     ___flsub:
 11864                           	callstack 23
 11865   004F96  0E00               	movlw	0
 11866   004F98  0100               	movlb	0	; () banked
 11867   004F9A  1B68               	xorwf	___flsub@a& (0+255),f,b
 11868   004F9C  0E00               	movlw	0
 11869   004F9E  1B69               	xorwf	(___flsub@a+1)& (0+255),f,b
 11870   004FA0  0E00               	movlw	0
 11871   004FA2  1B6A               	xorwf	(___flsub@a+2)& (0+255),f,b
 11872   004FA4  0E80               	movlw	128
 11873   004FA6  1B6B               	xorwf	(___flsub@a+3)& (0+255),f,b
 11874   004FA8                     
 11875                           ; BSR set to: 0
 11876   004FA8  C064  F046         	movff	___flsub@b,___fladd@b
 11877   004FAC  C065  F047         	movff	___flsub@b+1,___fladd@b+1
 11878   004FB0  C066  F048         	movff	___flsub@b+2,___fladd@b+2
 11879   004FB4  C067  F049         	movff	___flsub@b+3,___fladd@b+3
 11880   004FB8  C068  F04A         	movff	___flsub@a,___fladd@a
 11881   004FBC  C069  F04B         	movff	___flsub@a+1,___fladd@a+1
 11882   004FC0  C06A  F04C         	movff	___flsub@a+2,___fladd@a+2
 11883   004FC4  C06B  F04D         	movff	___flsub@a+3,___fladd@a+3
 11884   004FC8  ECD9  F00A         	call	___fladd	;wreg free
 11885   004FCC  C046  F064         	movff	?___fladd,?___flsub
 11886   004FD0  C047  F065         	movff	?___fladd+1,?___flsub+1
 11887   004FD4  C048  F066         	movff	?___fladd+2,?___flsub+2
 11888   004FD8  C049  F067         	movff	?___fladd+3,?___flsub+3
 11889   004FDC  0012               	return		;funcret
 11890   004FDE                     __end_of___flsub:
 11891                           	callstack 0
 11892                           
 11893 ;; *************** function ___fladd *****************
 11894 ;; Defined at:
 11895 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 11896 ;; Parameters:    Size  Location     Type
 11897 ;;  b               4   69[COMRAM] long 
 11898 ;;  a               4   73[COMRAM] long 
 11899 ;; Auto vars:     Size  Location     Type
 11900 ;;  grs             1    3[BANK0 ] unsigned char 
 11901 ;;  bexp            1    2[BANK0 ] unsigned char 
 11902 ;;  aexp            1    1[BANK0 ] unsigned char 
 11903 ;;  signs           1    0[BANK0 ] unsigned char 
 11904 ;; Return value:  Size  Location     Type
 11905 ;;                  4   69[COMRAM] unsigned char 
 11906 ;; Registers used:
 11907 ;;		wreg, status,2, status,0
 11908 ;; Tracked objects:
 11909 ;;		On entry : 0/0
 11910 ;;		On exit  : 0/0
 11911 ;;		Unchanged: 0/0
 11912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11913 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11914 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11915 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11916 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11917 ;;Total ram usage:       16 bytes
 11918 ;; Hardware stack levels used: 1
 11919 ;; Hardware stack levels required when called: 1
 11920 ;; This function calls:
 11921 ;;		Nothing
 11922 ;; This function is called by:
 11923 ;;		_runDAC
 11924 ;;		___flsub
 11925 ;;		_efgtoa
 11926 ;;		_sinf
 11927 ;;		___cosdf
 11928 ;;		___rem_pio2f
 11929 ;;		___sindf
 11930 ;; This function uses a non-reentrant model
 11931 ;;
 11932                           
 11933                           	psect	text44
 11934   0015B2                     __ptext44:
 11935                           	callstack 0
 11936   0015B2                     ___fladd:
 11937                           	callstack 23
 11938   0015B2  5049               	movf	(___fladd@b+3)^0,w,c
 11939   0015B4  0B80               	andlw	128
 11940   0015B6  0100               	movlb	0	; () banked
 11941   0015B8  6F60               	movwf	___fladd@signs& (0+255),b
 11942   0015BA  5049               	movf	(___fladd@b+3)^0,w,c
 11943   0015BC  2449               	addwf	(___fladd@b+3)^0,w,c
 11944   0015BE  6F62               	movwf	___fladd@bexp& (0+255),b
 11945   0015C0                     
 11946                           ; BSR set to: 0
 11947   0015C0  AE48               	btfss	(___fladd@b+2)^0,7,c
 11948   0015C2  EFE5  F00A         	goto	u7041
 11949   0015C6  EFE7  F00A         	goto	u7040
 11950   0015CA                     u7041:
 11951   0015CA  EFE8  F00A         	goto	l6324
 11952   0015CE                     u7040:
 11953   0015CE                     
 11954                           ; BSR set to: 0
 11955   0015CE  8162               	bsf	___fladd@bexp& (0+255),0,b
 11956   0015D0                     l6324:
 11957                           
 11958                           ; BSR set to: 0
 11959   0015D0  5162               	movf	___fladd@bexp& (0+255),w,b
 11960   0015D2  B4D8               	btfsc	status,2,c
 11961   0015D4  EFEE  F00A         	goto	u7051
 11962   0015D8  EFF0  F00A         	goto	u7050
 11963   0015DC                     u7051:
 11964   0015DC  EF05  F00B         	goto	l6334
 11965   0015E0                     u7050:
 11966   0015E0                     
 11967                           ; BSR set to: 0
 11968   0015E0  2962               	incf	___fladd@bexp& (0+255),w,b
 11969   0015E2  A4D8               	btfss	status,2,c
 11970   0015E4  EFF6  F00A         	goto	u7061
 11971   0015E8  EFF8  F00A         	goto	u7060
 11972   0015EC                     u7061:
 11973   0015EC  EF00  F00B         	goto	l6330
 11974   0015F0                     u7060:
 11975   0015F0                     
 11976                           ; BSR set to: 0
 11977   0015F0  0E00               	movlw	0
 11978   0015F2  6E46               	movwf	___fladd@b^0,c
 11979   0015F4  0E00               	movlw	0
 11980   0015F6  6E47               	movwf	(___fladd@b+1)^0,c
 11981   0015F8  0E00               	movlw	0
 11982   0015FA  6E48               	movwf	(___fladd@b+2)^0,c
 11983   0015FC  0E00               	movlw	0
 11984   0015FE  6E49               	movwf	(___fladd@b+3)^0,c
 11985   001600                     l6330:
 11986                           
 11987                           ; BSR set to: 0
 11988   001600  8E48               	bsf	(___fladd@b+2)^0,7,c
 11989   001602                     
 11990                           ; BSR set to: 0
 11991   001602  0E00               	movlw	0
 11992   001604  6E49               	movwf	(___fladd@b+3)^0,c
 11993   001606  EF0D  F00B         	goto	l6336
 11994   00160A                     l6334:
 11995                           
 11996                           ; BSR set to: 0
 11997   00160A  0E00               	movlw	0
 11998   00160C  6E46               	movwf	___fladd@b^0,c
 11999   00160E  0E00               	movlw	0
 12000   001610  6E47               	movwf	(___fladd@b+1)^0,c
 12001   001612  0E00               	movlw	0
 12002   001614  6E48               	movwf	(___fladd@b+2)^0,c
 12003   001616  0E00               	movlw	0
 12004   001618  6E49               	movwf	(___fladd@b+3)^0,c
 12005   00161A                     l6336:
 12006                           
 12007                           ; BSR set to: 0
 12008   00161A  504D               	movf	(___fladd@a+3)^0,w,c
 12009   00161C  0B80               	andlw	128
 12010   00161E  6F61               	movwf	___fladd@aexp& (0+255),b
 12011   001620                     
 12012                           ; BSR set to: 0
 12013   001620  5160               	movf	___fladd@signs& (0+255),w,b
 12014   001622  1961               	xorwf	___fladd@aexp& (0+255),w,b
 12015   001624  B4D8               	btfsc	status,2,c
 12016   001626  EF17  F00B         	goto	u7071
 12017   00162A  EF19  F00B         	goto	u7070
 12018   00162E                     u7071:
 12019   00162E  EF1A  F00B         	goto	l6342
 12020   001632                     u7070:
 12021   001632                     
 12022                           ; BSR set to: 0
 12023   001632  8D60               	bsf	___fladd@signs& (0+255),6,b
 12024   001634                     l6342:
 12025                           
 12026                           ; BSR set to: 0
 12027   001634  504D               	movf	(___fladd@a+3)^0,w,c
 12028   001636  244D               	addwf	(___fladd@a+3)^0,w,c
 12029   001638  6F61               	movwf	___fladd@aexp& (0+255),b
 12030   00163A                     
 12031                           ; BSR set to: 0
 12032   00163A  AE4C               	btfss	(___fladd@a+2)^0,7,c
 12033   00163C  EF22  F00B         	goto	u7081
 12034   001640  EF24  F00B         	goto	u7080
 12035   001644                     u7081:
 12036   001644  EF25  F00B         	goto	l6348
 12037   001648                     u7080:
 12038   001648                     
 12039                           ; BSR set to: 0
 12040   001648  8161               	bsf	___fladd@aexp& (0+255),0,b
 12041   00164A                     l6348:
 12042                           
 12043                           ; BSR set to: 0
 12044   00164A  5161               	movf	___fladd@aexp& (0+255),w,b
 12045   00164C  B4D8               	btfsc	status,2,c
 12046   00164E  EF2B  F00B         	goto	u7091
 12047   001652  EF2D  F00B         	goto	u7090
 12048   001656                     u7091:
 12049   001656  EF42  F00B         	goto	l6358
 12050   00165A                     u7090:
 12051   00165A                     
 12052                           ; BSR set to: 0
 12053   00165A  2961               	incf	___fladd@aexp& (0+255),w,b
 12054   00165C  A4D8               	btfss	status,2,c
 12055   00165E  EF33  F00B         	goto	u7101
 12056   001662  EF35  F00B         	goto	u7100
 12057   001666                     u7101:
 12058   001666  EF3D  F00B         	goto	l6354
 12059   00166A                     u7100:
 12060   00166A                     
 12061                           ; BSR set to: 0
 12062   00166A  0E00               	movlw	0
 12063   00166C  6E4A               	movwf	___fladd@a^0,c
 12064   00166E  0E00               	movlw	0
 12065   001670  6E4B               	movwf	(___fladd@a+1)^0,c
 12066   001672  0E00               	movlw	0
 12067   001674  6E4C               	movwf	(___fladd@a+2)^0,c
 12068   001676  0E00               	movlw	0
 12069   001678  6E4D               	movwf	(___fladd@a+3)^0,c
 12070   00167A                     l6354:
 12071                           
 12072                           ; BSR set to: 0
 12073   00167A  8E4C               	bsf	(___fladd@a+2)^0,7,c
 12074   00167C                     
 12075                           ; BSR set to: 0
 12076   00167C  0E00               	movlw	0
 12077   00167E  6E4D               	movwf	(___fladd@a+3)^0,c
 12078   001680  EF4A  F00B         	goto	l6360
 12079   001684                     l6358:
 12080                           
 12081                           ; BSR set to: 0
 12082   001684  0E00               	movlw	0
 12083   001686  6E4A               	movwf	___fladd@a^0,c
 12084   001688  0E00               	movlw	0
 12085   00168A  6E4B               	movwf	(___fladd@a+1)^0,c
 12086   00168C  0E00               	movlw	0
 12087   00168E  6E4C               	movwf	(___fladd@a+2)^0,c
 12088   001690  0E00               	movlw	0
 12089   001692  6E4D               	movwf	(___fladd@a+3)^0,c
 12090   001694                     l6360:
 12091                           
 12092                           ; BSR set to: 0
 12093   001694  5162               	movf	___fladd@bexp& (0+255),w,b
 12094   001696  5D61               	subwf	___fladd@aexp& (0+255),w,b
 12095   001698  B0D8               	btfsc	status,0,c
 12096   00169A  EF51  F00B         	goto	u7111
 12097   00169E  EF53  F00B         	goto	u7110
 12098   0016A2                     u7111:
 12099   0016A2  EF7A  F00B         	goto	l6396
 12100   0016A6                     u7110:
 12101   0016A6                     
 12102                           ; BSR set to: 0
 12103   0016A6  AD60               	btfss	___fladd@signs& (0+255),6,b
 12104   0016A8  EF58  F00B         	goto	u7121
 12105   0016AC  EF5A  F00B         	goto	u7120
 12106   0016B0                     u7121:
 12107   0016B0  EF5C  F00B         	goto	l6366
 12108   0016B4                     u7120:
 12109   0016B4                     
 12110                           ; BSR set to: 0
 12111   0016B4  0E80               	movlw	128
 12112   0016B6  1B60               	xorwf	___fladd@signs& (0+255),f,b
 12113   0016B8                     l6366:
 12114                           
 12115                           ; BSR set to: 0
 12116   0016B8  C062  F063         	movff	___fladd@bexp,___fladd@grs
 12117   0016BC                     
 12118                           ; BSR set to: 0
 12119   0016BC  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 12120   0016C0                     
 12121                           ; BSR set to: 0
 12122   0016C0  C063  F061         	movff	___fladd@grs,___fladd@aexp
 12123   0016C4                     
 12124                           ; BSR set to: 0
 12125   0016C4  C046  F063         	movff	___fladd@b,___fladd@grs
 12126   0016C8                     
 12127                           ; BSR set to: 0
 12128   0016C8  C04A  F046         	movff	___fladd@a,___fladd@b
 12129   0016CC                     
 12130                           ; BSR set to: 0
 12131   0016CC  C063  F04A         	movff	___fladd@grs,___fladd@a
 12132   0016D0                     
 12133                           ; BSR set to: 0
 12134   0016D0  C047  F063         	movff	___fladd@b+1,___fladd@grs
 12135   0016D4                     
 12136                           ; BSR set to: 0
 12137   0016D4  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
 12138   0016D8                     
 12139                           ; BSR set to: 0
 12140   0016D8  C063  F04B         	movff	___fladd@grs,___fladd@a+1
 12141   0016DC                     
 12142                           ; BSR set to: 0
 12143   0016DC  C048  F063         	movff	___fladd@b+2,___fladd@grs
 12144   0016E0                     
 12145                           ; BSR set to: 0
 12146   0016E0  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
 12147   0016E4                     
 12148                           ; BSR set to: 0
 12149   0016E4  C063  F04C         	movff	___fladd@grs,___fladd@a+2
 12150   0016E8                     
 12151                           ; BSR set to: 0
 12152   0016E8  C049  F063         	movff	___fladd@b+3,___fladd@grs
 12153   0016EC                     
 12154                           ; BSR set to: 0
 12155   0016EC  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
 12156   0016F0                     
 12157                           ; BSR set to: 0
 12158   0016F0  C063  F04D         	movff	___fladd@grs,___fladd@a+3
 12159   0016F4                     l6396:
 12160                           
 12161                           ; BSR set to: 0
 12162   0016F4  0E00               	movlw	0
 12163   0016F6  6F63               	movwf	___fladd@grs& (0+255),b
 12164   0016F8                     
 12165                           ; BSR set to: 0
 12166   0016F8  5162               	movf	___fladd@bexp& (0+255),w,b
 12167   0016FA  C061  F04E         	movff	___fladd@aexp,??___fladd
 12168   0016FE  6A4F               	clrf	(??___fladd+1)^0,c
 12169   001700  5E4E               	subwf	??___fladd^0,f,c
 12170   001702  0E00               	movlw	0
 12171   001704  5A4F               	subwfb	(??___fladd+1)^0,f,c
 12172   001706  BE4F               	btfsc	(??___fladd+1)^0,7,c
 12173   001708  EF8F  F00B         	goto	u7131
 12174   00170C  504F               	movf	(??___fladd+1)^0,w,c
 12175   00170E  E109               	bnz	u7130
 12176   001710  0E1A               	movlw	26
 12177   001712  5C4E               	subwf	??___fladd^0,w,c
 12178   001714  A0D8               	btfss	status,0,c
 12179   001716  EF8F  F00B         	goto	u7131
 12180   00171A  EF91  F00B         	goto	u7130
 12181   00171E                     u7131:
 12182   00171E  EFC8  F00B         	goto	l1239
 12183   001722                     u7130:
 12184   001722                     
 12185                           ; BSR set to: 0
 12186   001722  5046               	movf	___fladd@b^0,w,c
 12187   001724  1047               	iorwf	(___fladd@b+1)^0,w,c
 12188   001726  1048               	iorwf	(___fladd@b+2)^0,w,c
 12189   001728  1049               	iorwf	(___fladd@b+3)^0,w,c
 12190   00172A  A4D8               	btfss	status,2,c
 12191   00172C  EF9A  F00B         	goto	u7141
 12192   001730  EF9D  F00B         	goto	u7140
 12193   001734                     u7141:
 12194   001734  0E01               	movlw	1
 12195   001736  EF9E  F00B         	goto	u7150
 12196   00173A                     u7140:
 12197   00173A  0E00               	movlw	0
 12198   00173C                     u7150:
 12199   00173C  6F63               	movwf	___fladd@grs& (0+255),b
 12200   00173E                     
 12201                           ; BSR set to: 0
 12202   00173E  0E00               	movlw	0
 12203   001740  6E46               	movwf	___fladd@b^0,c
 12204   001742  0E00               	movlw	0
 12205   001744  6E47               	movwf	(___fladd@b+1)^0,c
 12206   001746  0E00               	movlw	0
 12207   001748  6E48               	movwf	(___fladd@b+2)^0,c
 12208   00174A  0E00               	movlw	0
 12209   00174C  6E49               	movwf	(___fladd@b+3)^0,c
 12210   00174E                     
 12211                           ; BSR set to: 0
 12212   00174E  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 12213   001752  EFD1  F00B         	goto	l1238
 12214   001756                     l1240:
 12215                           
 12216                           ; BSR set to: 0
 12217   001756  A163               	btfss	___fladd@grs& (0+255),0,b
 12218   001758  EFB0  F00B         	goto	u7161
 12219   00175C  EFB2  F00B         	goto	u7160
 12220   001760                     u7161:
 12221   001760  EFB8  F00B         	goto	l6408
 12222   001764                     u7160:
 12223   001764                     
 12224                           ; BSR set to: 0
 12225   001764  90D8               	bcf	status,0,c
 12226   001766  3163               	rrcf	___fladd@grs& (0+255),w,b
 12227   001768  0901               	iorlw	1
 12228   00176A  6F63               	movwf	___fladd@grs& (0+255),b
 12229   00176C  EFBA  F00B         	goto	l6410
 12230   001770                     l6408:
 12231                           
 12232                           ; BSR set to: 0
 12233   001770  90D8               	bcf	status,0,c
 12234   001772  3363               	rrcf	___fladd@grs& (0+255),f,b
 12235   001774                     l6410:
 12236                           
 12237                           ; BSR set to: 0
 12238   001774  A046               	btfss	___fladd@b^0,0,c
 12239   001776  EFBF  F00B         	goto	u7171
 12240   00177A  EFC1  F00B         	goto	u7170
 12241   00177E                     u7171:
 12242   00177E  EFC2  F00B         	goto	l6414
 12243   001782                     u7170:
 12244   001782                     
 12245                           ; BSR set to: 0
 12246   001782  8F63               	bsf	___fladd@grs& (0+255),7,b
 12247   001784                     l6414:
 12248                           
 12249                           ; BSR set to: 0
 12250   001784  3449               	rlcf	(___fladd@b+3)^0,w,c
 12251   001786  3249               	rrcf	(___fladd@b+3)^0,f,c
 12252   001788  3248               	rrcf	(___fladd@b+2)^0,f,c
 12253   00178A  3247               	rrcf	(___fladd@b+1)^0,f,c
 12254   00178C  3246               	rrcf	___fladd@b^0,f,c
 12255   00178E                     
 12256                           ; BSR set to: 0
 12257   00178E  2B62               	incf	___fladd@bexp& (0+255),f,b
 12258   001790                     l1239:
 12259                           
 12260                           ; BSR set to: 0
 12261   001790  5161               	movf	___fladd@aexp& (0+255),w,b
 12262   001792  5D62               	subwf	___fladd@bexp& (0+255),w,b
 12263   001794  A0D8               	btfss	status,0,c
 12264   001796  EFCF  F00B         	goto	u7181
 12265   00179A  EFD1  F00B         	goto	u7180
 12266   00179E                     u7181:
 12267   00179E  EFAB  F00B         	goto	l1240
 12268   0017A2                     u7180:
 12269   0017A2                     l1238:
 12270                           
 12271                           ; BSR set to: 0
 12272   0017A2  BD60               	btfsc	___fladd@signs& (0+255),6,b
 12273   0017A4  EFD6  F00B         	goto	u7191
 12274   0017A8  EFD8  F00B         	goto	u7190
 12275   0017AC                     u7191:
 12276   0017AC  EF18  F00C         	goto	l6442
 12277   0017B0                     u7190:
 12278   0017B0                     
 12279                           ; BSR set to: 0
 12280   0017B0  5162               	movf	___fladd@bexp& (0+255),w,b
 12281   0017B2  A4D8               	btfss	status,2,c
 12282   0017B4  EFDE  F00B         	goto	u7201
 12283   0017B8  EFE0  F00B         	goto	u7200
 12284   0017BC                     u7201:
 12285   0017BC  EFEA  F00B         	goto	l6424
 12286   0017C0                     u7200:
 12287   0017C0                     
 12288                           ; BSR set to: 0
 12289   0017C0  0E00               	movlw	0
 12290   0017C2  6E46               	movwf	?___fladd^0,c
 12291   0017C4  0E00               	movlw	0
 12292   0017C6  6E47               	movwf	(?___fladd+1)^0,c
 12293   0017C8  0E00               	movlw	0
 12294   0017CA  6E48               	movwf	(?___fladd+2)^0,c
 12295   0017CC  0E00               	movlw	0
 12296   0017CE  6E49               	movwf	(?___fladd+3)^0,c
 12297   0017D0  EF39  F00D         	goto	l1247
 12298   0017D4                     l6424:
 12299                           
 12300                           ; BSR set to: 0
 12301   0017D4  504A               	movf	___fladd@a^0,w,c
 12302   0017D6  2646               	addwf	___fladd@b^0,f,c
 12303   0017D8  504B               	movf	(___fladd@a+1)^0,w,c
 12304   0017DA  2247               	addwfc	(___fladd@b+1)^0,f,c
 12305   0017DC  504C               	movf	(___fladd@a+2)^0,w,c
 12306   0017DE  2248               	addwfc	(___fladd@b+2)^0,f,c
 12307   0017E0  504D               	movf	(___fladd@a+3)^0,w,c
 12308   0017E2  2249               	addwfc	(___fladd@b+3)^0,f,c
 12309   0017E4                     
 12310                           ; BSR set to: 0
 12311   0017E4  A049               	btfss	(___fladd@b+3)^0,0,c
 12312   0017E6  EFF7  F00B         	goto	u7211
 12313   0017EA  EFF9  F00B         	goto	u7210
 12314   0017EE                     u7211:
 12315   0017EE  EFA5  F00C         	goto	l6478
 12316   0017F2                     u7210:
 12317   0017F2                     
 12318                           ; BSR set to: 0
 12319   0017F2  A163               	btfss	___fladd@grs& (0+255),0,b
 12320   0017F4  EFFE  F00B         	goto	u7221
 12321   0017F8  EF00  F00C         	goto	u7220
 12322   0017FC                     u7221:
 12323   0017FC  EF06  F00C         	goto	l6432
 12324   001800                     u7220:
 12325   001800                     
 12326                           ; BSR set to: 0
 12327   001800  90D8               	bcf	status,0,c
 12328   001802  3163               	rrcf	___fladd@grs& (0+255),w,b
 12329   001804  0901               	iorlw	1
 12330   001806  6F63               	movwf	___fladd@grs& (0+255),b
 12331   001808  EF08  F00C         	goto	l6434
 12332   00180C                     l6432:
 12333                           
 12334                           ; BSR set to: 0
 12335   00180C  90D8               	bcf	status,0,c
 12336   00180E  3363               	rrcf	___fladd@grs& (0+255),f,b
 12337   001810                     l6434:
 12338                           
 12339                           ; BSR set to: 0
 12340   001810  A046               	btfss	___fladd@b^0,0,c
 12341   001812  EF0D  F00C         	goto	u7231
 12342   001816  EF0F  F00C         	goto	u7230
 12343   00181A                     u7231:
 12344   00181A  EF10  F00C         	goto	l6438
 12345   00181E                     u7230:
 12346   00181E                     
 12347                           ; BSR set to: 0
 12348   00181E  8F63               	bsf	___fladd@grs& (0+255),7,b
 12349   001820                     l6438:
 12350                           
 12351                           ; BSR set to: 0
 12352   001820  3449               	rlcf	(___fladd@b+3)^0,w,c
 12353   001822  3249               	rrcf	(___fladd@b+3)^0,f,c
 12354   001824  3248               	rrcf	(___fladd@b+2)^0,f,c
 12355   001826  3247               	rrcf	(___fladd@b+1)^0,f,c
 12356   001828  3246               	rrcf	___fladd@b^0,f,c
 12357   00182A                     
 12358                           ; BSR set to: 0
 12359   00182A  2B62               	incf	___fladd@bexp& (0+255),f,b
 12360   00182C  EFA5  F00C         	goto	l6478
 12361   001830                     l6442:
 12362                           
 12363                           ; BSR set to: 0
 12364   001830  504A               	movf	___fladd@a^0,w,c
 12365   001832  5C46               	subwf	___fladd@b^0,w,c
 12366   001834  504B               	movf	(___fladd@a+1)^0,w,c
 12367   001836  5847               	subwfb	(___fladd@b+1)^0,w,c
 12368   001838  504C               	movf	(___fladd@a+2)^0,w,c
 12369   00183A  5848               	subwfb	(___fladd@b+2)^0,w,c
 12370   00183C  5049               	movf	(___fladd@b+3)^0,w,c
 12371   00183E  0A80               	xorlw	128
 12372   001840  6E4E               	movwf	??___fladd^0,c
 12373   001842  504D               	movf	(___fladd@a+3)^0,w,c
 12374   001844  0A80               	xorlw	128
 12375   001846  584E               	subwfb	??___fladd^0,w,c
 12376   001848  B0D8               	btfsc	status,0,c
 12377   00184A  EF29  F00C         	goto	u7241
 12378   00184E  EF2B  F00C         	goto	u7240
 12379   001852                     u7241:
 12380   001852  EF56  F00C         	goto	l6452
 12381   001856                     u7240:
 12382   001856                     
 12383                           ; BSR set to: 0
 12384   001856  5046               	movf	___fladd@b^0,w,c
 12385   001858  5C4A               	subwf	___fladd@a^0,w,c
 12386   00185A  6E4E               	movwf	??___fladd^0,c
 12387   00185C  5047               	movf	(___fladd@b+1)^0,w,c
 12388   00185E  584B               	subwfb	(___fladd@a+1)^0,w,c
 12389   001860  6E4F               	movwf	(??___fladd+1)^0,c
 12390   001862  5048               	movf	(___fladd@b+2)^0,w,c
 12391   001864  584C               	subwfb	(___fladd@a+2)^0,w,c
 12392   001866  6E50               	movwf	(??___fladd+2)^0,c
 12393   001868  5049               	movf	(___fladd@b+3)^0,w,c
 12394   00186A  584D               	subwfb	(___fladd@a+3)^0,w,c
 12395   00186C  6E51               	movwf	(??___fladd+3)^0,c
 12396   00186E  0EFF               	movlw	255
 12397   001870  244E               	addwf	??___fladd^0,w,c
 12398   001872  6E46               	movwf	___fladd@b^0,c
 12399   001874  0EFF               	movlw	255
 12400   001876  204F               	addwfc	(??___fladd+1)^0,w,c
 12401   001878  6E47               	movwf	(___fladd@b+1)^0,c
 12402   00187A  0EFF               	movlw	255
 12403   00187C  2050               	addwfc	(??___fladd+2)^0,w,c
 12404   00187E  6E48               	movwf	(___fladd@b+2)^0,c
 12405   001880  0EFF               	movlw	255
 12406   001882  2051               	addwfc	(??___fladd+3)^0,w,c
 12407   001884  6E49               	movwf	(___fladd@b+3)^0,c
 12408   001886  0E80               	movlw	128
 12409   001888  1B60               	xorwf	___fladd@signs& (0+255),f,b
 12410   00188A                     
 12411                           ; BSR set to: 0
 12412   00188A  6D63               	negf	___fladd@grs& (0+255),b
 12413   00188C                     
 12414                           ; BSR set to: 0
 12415   00188C  5163               	movf	___fladd@grs& (0+255),w,b
 12416   00188E  A4D8               	btfss	status,2,c
 12417   001890  EF4C  F00C         	goto	u7251
 12418   001894  EF4E  F00C         	goto	u7250
 12419   001898                     u7251:
 12420   001898  EF5E  F00C         	goto	l1255
 12421   00189C                     u7250:
 12422   00189C                     
 12423                           ; BSR set to: 0
 12424   00189C  0E01               	movlw	1
 12425   00189E  2646               	addwf	___fladd@b^0,f,c
 12426   0018A0  0E00               	movlw	0
 12427   0018A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 12428   0018A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 12429   0018A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 12430   0018A8  EF5E  F00C         	goto	l1255
 12431   0018AC                     l6452:
 12432                           
 12433                           ; BSR set to: 0
 12434   0018AC  504A               	movf	___fladd@a^0,w,c
 12435   0018AE  5E46               	subwf	___fladd@b^0,f,c
 12436   0018B0  504B               	movf	(___fladd@a+1)^0,w,c
 12437   0018B2  5A47               	subwfb	(___fladd@b+1)^0,f,c
 12438   0018B4  504C               	movf	(___fladd@a+2)^0,w,c
 12439   0018B6  5A48               	subwfb	(___fladd@b+2)^0,f,c
 12440   0018B8  504D               	movf	(___fladd@a+3)^0,w,c
 12441   0018BA  5A49               	subwfb	(___fladd@b+3)^0,f,c
 12442   0018BC                     l1255:
 12443                           
 12444                           ; BSR set to: 0
 12445   0018BC  5046               	movf	___fladd@b^0,w,c
 12446   0018BE  1047               	iorwf	(___fladd@b+1)^0,w,c
 12447   0018C0  1048               	iorwf	(___fladd@b+2)^0,w,c
 12448   0018C2  1049               	iorwf	(___fladd@b+3)^0,w,c
 12449   0018C4  A4D8               	btfss	status,2,c
 12450   0018C6  EF67  F00C         	goto	u7261
 12451   0018CA  EF69  F00C         	goto	u7260
 12452   0018CE                     u7261:
 12453   0018CE  EF9E  F00C         	goto	l6476
 12454   0018D2                     u7260:
 12455   0018D2                     
 12456                           ; BSR set to: 0
 12457   0018D2  5163               	movf	___fladd@grs& (0+255),w,b
 12458   0018D4  A4D8               	btfss	status,2,c
 12459   0018D6  EF6F  F00C         	goto	u7271
 12460   0018DA  EF71  F00C         	goto	u7270
 12461   0018DE                     u7271:
 12462   0018DE  EF9E  F00C         	goto	l6476
 12463   0018E2                     u7270:
 12464   0018E2                     
 12465                           ; BSR set to: 0
 12466   0018E2  0E00               	movlw	0
 12467   0018E4  6E46               	movwf	?___fladd^0,c
 12468   0018E6  0E00               	movlw	0
 12469   0018E8  6E47               	movwf	(?___fladd+1)^0,c
 12470   0018EA  0E00               	movlw	0
 12471   0018EC  6E48               	movwf	(?___fladd+2)^0,c
 12472   0018EE  0E00               	movlw	0
 12473   0018F0  6E49               	movwf	(?___fladd+3)^0,c
 12474   0018F2  EF39  F00D         	goto	l1247
 12475   0018F6                     l6460:
 12476                           
 12477                           ; BSR set to: 0
 12478   0018F6  90D8               	bcf	status,0,c
 12479   0018F8  3646               	rlcf	___fladd@b^0,f,c
 12480   0018FA  3647               	rlcf	(___fladd@b+1)^0,f,c
 12481   0018FC  3648               	rlcf	(___fladd@b+2)^0,f,c
 12482   0018FE  3649               	rlcf	(___fladd@b+3)^0,f,c
 12483   001900                     
 12484                           ; BSR set to: 0
 12485   001900  AF63               	btfss	___fladd@grs& (0+255),7,b
 12486   001902  EF85  F00C         	goto	u7281
 12487   001906  EF87  F00C         	goto	u7280
 12488   00190A                     u7281:
 12489   00190A  EF88  F00C         	goto	l6466
 12490   00190E                     u7280:
 12491   00190E                     
 12492                           ; BSR set to: 0
 12493   00190E  8046               	bsf	___fladd@b^0,0,c
 12494   001910                     l6466:
 12495                           
 12496                           ; BSR set to: 0
 12497   001910  A163               	btfss	___fladd@grs& (0+255),0,b
 12498   001912  EF8D  F00C         	goto	u7291
 12499   001916  EF8F  F00C         	goto	u7290
 12500   00191A                     u7291:
 12501   00191A  EF93  F00C         	goto	l6470
 12502   00191E                     u7290:
 12503   00191E                     
 12504                           ; BSR set to: 0
 12505   00191E  80D8               	bsf	status,0,c
 12506   001920  3763               	rlcf	___fladd@grs& (0+255),f,b
 12507   001922  EF95  F00C         	goto	l6472
 12508   001926                     l6470:
 12509                           
 12510                           ; BSR set to: 0
 12511   001926  90D8               	bcf	status,0,c
 12512   001928  3763               	rlcf	___fladd@grs& (0+255),f,b
 12513   00192A                     l6472:
 12514                           
 12515                           ; BSR set to: 0
 12516   00192A  5162               	movf	___fladd@bexp& (0+255),w,b
 12517   00192C  B4D8               	btfsc	status,2,c
 12518   00192E  EF9B  F00C         	goto	u7301
 12519   001932  EF9D  F00C         	goto	u7300
 12520   001936                     u7301:
 12521   001936  EF9E  F00C         	goto	l6476
 12522   00193A                     u7300:
 12523   00193A                     
 12524                           ; BSR set to: 0
 12525   00193A  0762               	decf	___fladd@bexp& (0+255),f,b
 12526   00193C                     l6476:
 12527                           
 12528                           ; BSR set to: 0
 12529   00193C  AE48               	btfss	(___fladd@b+2)^0,7,c
 12530   00193E  EFA3  F00C         	goto	u7311
 12531   001942  EFA5  F00C         	goto	u7310
 12532   001946                     u7311:
 12533   001946  EF7B  F00C         	goto	l6460
 12534   00194A                     u7310:
 12535   00194A                     l6478:
 12536                           
 12537                           ; BSR set to: 0
 12538   00194A  0E00               	movlw	0
 12539   00194C  6F61               	movwf	___fladd@aexp& (0+255),b
 12540   00194E                     
 12541                           ; BSR set to: 0
 12542   00194E  AF63               	btfss	___fladd@grs& (0+255),7,b
 12543   001950  EFAC  F00C         	goto	u7321
 12544   001954  EFAE  F00C         	goto	u7320
 12545   001958                     u7321:
 12546   001958  EFC6  F00C         	goto	l1264
 12547   00195C                     u7320:
 12548   00195C                     
 12549                           ; BSR set to: 0
 12550   00195C  C063  F04E         	movff	___fladd@grs,??___fladd
 12551   001960  0E7F               	movlw	127
 12552   001962  164E               	andwf	??___fladd^0,f,c
 12553   001964  B4D8               	btfsc	status,2,c
 12554   001966  EFB7  F00C         	goto	u7331
 12555   00196A  EFB9  F00C         	goto	u7330
 12556   00196E                     u7331:
 12557   00196E  EFBD  F00C         	goto	l1265
 12558   001972                     u7330:
 12559   001972                     l6484:
 12560                           
 12561                           ; BSR set to: 0
 12562   001972  0E01               	movlw	1
 12563   001974  6F61               	movwf	___fladd@aexp& (0+255),b
 12564   001976  EFC6  F00C         	goto	l1264
 12565   00197A                     l1265:
 12566                           
 12567                           ; BSR set to: 0
 12568   00197A  A046               	btfss	___fladd@b^0,0,c
 12569   00197C  EFC2  F00C         	goto	u7341
 12570   001980  EFC4  F00C         	goto	u7340
 12571   001984                     u7341:
 12572   001984  EFC6  F00C         	goto	l1264
 12573   001988                     u7340:
 12574   001988  EFB9  F00C         	goto	l6484
 12575   00198C                     l1264:
 12576                           
 12577                           ; BSR set to: 0
 12578   00198C  5161               	movf	___fladd@aexp& (0+255),w,b
 12579   00198E  B4D8               	btfsc	status,2,c
 12580   001990  EFCC  F00C         	goto	u7351
 12581   001994  EFCE  F00C         	goto	u7350
 12582   001998                     u7351:
 12583   001998  EFF9  F00C         	goto	l6496
 12584   00199C                     u7350:
 12585   00199C                     
 12586                           ; BSR set to: 0
 12587   00199C  0E01               	movlw	1
 12588   00199E  2646               	addwf	___fladd@b^0,f,c
 12589   0019A0  0E00               	movlw	0
 12590   0019A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 12591   0019A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 12592   0019A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 12593   0019A8                     
 12594                           ; BSR set to: 0
 12595   0019A8  A049               	btfss	(___fladd@b+3)^0,0,c
 12596   0019AA  EFD9  F00C         	goto	u7361
 12597   0019AE  EFDB  F00C         	goto	u7360
 12598   0019B2                     u7361:
 12599   0019B2  EFF9  F00C         	goto	l6496
 12600   0019B6                     u7360:
 12601   0019B6                     
 12602                           ; BSR set to: 0
 12603   0019B6  C046  F04E         	movff	___fladd@b,??___fladd
 12604   0019BA  C047  F04F         	movff	___fladd@b+1,??___fladd+1
 12605   0019BE  C048  F050         	movff	___fladd@b+2,??___fladd+2
 12606   0019C2  C049  F051         	movff	___fladd@b+3,??___fladd+3
 12607   0019C6  3451               	rlcf	(??___fladd+3)^0,w,c
 12608   0019C8  3251               	rrcf	(??___fladd+3)^0,f,c
 12609   0019CA  3250               	rrcf	(??___fladd+2)^0,f,c
 12610   0019CC  324F               	rrcf	(??___fladd+1)^0,f,c
 12611   0019CE  324E               	rrcf	??___fladd^0,f,c
 12612   0019D0  C04E  F046         	movff	??___fladd,___fladd@b
 12613   0019D4  C04F  F047         	movff	??___fladd+1,___fladd@b+1
 12614   0019D8  C050  F048         	movff	??___fladd+2,___fladd@b+2
 12615   0019DC  C051  F049         	movff	??___fladd+3,___fladd@b+3
 12616   0019E0  2962               	incf	___fladd@bexp& (0+255),w,b
 12617   0019E2  B4D8               	btfsc	status,2,c
 12618   0019E4  EFF6  F00C         	goto	u7371
 12619   0019E8  EFF8  F00C         	goto	u7370
 12620   0019EC                     u7371:
 12621   0019EC  EFF9  F00C         	goto	l6496
 12622   0019F0                     u7370:
 12623   0019F0                     
 12624                           ; BSR set to: 0
 12625   0019F0  2B62               	incf	___fladd@bexp& (0+255),f,b
 12626   0019F2                     l6496:
 12627                           
 12628                           ; BSR set to: 0
 12629   0019F2  2962               	incf	___fladd@bexp& (0+255),w,b
 12630   0019F4  B4D8               	btfsc	status,2,c
 12631   0019F6  EFFF  F00C         	goto	u7381
 12632   0019FA  EF01  F00D         	goto	u7380
 12633   0019FE                     u7381:
 12634   0019FE  EF09  F00D         	goto	l6500
 12635   001A02                     u7380:
 12636   001A02                     
 12637                           ; BSR set to: 0
 12638   001A02  5162               	movf	___fladd@bexp& (0+255),w,b
 12639   001A04  A4D8               	btfss	status,2,c
 12640   001A06  EF07  F00D         	goto	u7391
 12641   001A0A  EF09  F00D         	goto	u7390
 12642   001A0E                     u7391:
 12643   001A0E  EF1B  F00D         	goto	l6504
 12644   001A12                     u7390:
 12645   001A12                     l6500:
 12646                           
 12647                           ; BSR set to: 0
 12648   001A12  0E00               	movlw	0
 12649   001A14  6E46               	movwf	___fladd@b^0,c
 12650   001A16  0E00               	movlw	0
 12651   001A18  6E47               	movwf	(___fladd@b+1)^0,c
 12652   001A1A  0E00               	movlw	0
 12653   001A1C  6E48               	movwf	(___fladd@b+2)^0,c
 12654   001A1E  0E00               	movlw	0
 12655   001A20  6E49               	movwf	(___fladd@b+3)^0,c
 12656   001A22  5162               	movf	___fladd@bexp& (0+255),w,b
 12657   001A24  A4D8               	btfss	status,2,c
 12658   001A26  EF17  F00D         	goto	u7401
 12659   001A2A  EF19  F00D         	goto	u7400
 12660   001A2E                     u7401:
 12661   001A2E  EF1B  F00D         	goto	l6504
 12662   001A32                     u7400:
 12663   001A32                     
 12664                           ; BSR set to: 0
 12665   001A32  0E00               	movlw	0
 12666   001A34  6F60               	movwf	___fladd@signs& (0+255),b
 12667   001A36                     l6504:
 12668                           
 12669                           ; BSR set to: 0
 12670   001A36  A162               	btfss	___fladd@bexp& (0+255),0,b
 12671   001A38  EF20  F00D         	goto	u7411
 12672   001A3C  EF22  F00D         	goto	u7410
 12673   001A40                     u7411:
 12674   001A40  EF25  F00D         	goto	l6508
 12675   001A44                     u7410:
 12676   001A44                     
 12677                           ; BSR set to: 0
 12678   001A44  8E48               	bsf	(___fladd@b+2)^0,7,c
 12679   001A46  EF26  F00D         	goto	l6510
 12680   001A4A                     l6508:
 12681                           
 12682                           ; BSR set to: 0
 12683   001A4A  9E48               	bcf	(___fladd@b+2)^0,7,c
 12684   001A4C                     l6510:
 12685                           
 12686                           ; BSR set to: 0
 12687   001A4C  90D8               	bcf	status,0,c
 12688   001A4E  3162               	rrcf	___fladd@bexp& (0+255),w,b
 12689   001A50  6E49               	movwf	(___fladd@b+3)^0,c
 12690   001A52                     
 12691                           ; BSR set to: 0
 12692   001A52  AF60               	btfss	___fladd@signs& (0+255),7,b
 12693   001A54  EF2E  F00D         	goto	u7421
 12694   001A58  EF30  F00D         	goto	u7420
 12695   001A5C                     u7421:
 12696   001A5C  EF31  F00D         	goto	l6516
 12697   001A60                     u7420:
 12698   001A60                     
 12699                           ; BSR set to: 0
 12700   001A60  8E49               	bsf	(___fladd@b+3)^0,7,c
 12701   001A62                     l6516:
 12702                           
 12703                           ; BSR set to: 0
 12704   001A62  C046  F046         	movff	___fladd@b,?___fladd
 12705   001A66  C047  F047         	movff	___fladd@b+1,?___fladd+1
 12706   001A6A  C048  F048         	movff	___fladd@b+2,?___fladd+2
 12707   001A6E  C049  F049         	movff	___fladd@b+3,?___fladd+3
 12708   001A72                     l1247:
 12709                           
 12710                           ; BSR set to: 0
 12711   001A72  0012               	return		;funcret
 12712   001A74                     __end_of___fladd:
 12713                           	callstack 0
 12714                           
 12715 ;; *************** function ___flneg *****************
 12716 ;; Defined at:
 12717 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flneg.c"
 12718 ;; Parameters:    Size  Location     Type
 12719 ;;  f1              4   32[BANK0 ] unsigned char 
 12720 ;; Auto vars:     Size  Location     Type
 12721 ;;		None
 12722 ;; Return value:  Size  Location     Type
 12723 ;;                  4   32[BANK0 ] unsigned char 
 12724 ;; Registers used:
 12725 ;;		wreg, status,2, status,0
 12726 ;; Tracked objects:
 12727 ;;		On entry : 0/0
 12728 ;;		On exit  : 0/0
 12729 ;;		Unchanged: 0/0
 12730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12734 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12735 ;;Total ram usage:        4 bytes
 12736 ;; Hardware stack levels used: 1
 12737 ;; Hardware stack levels required when called: 1
 12738 ;; This function calls:
 12739 ;;		Nothing
 12740 ;; This function is called by:
 12741 ;;		_efgtoa
 12742 ;;		_sinf
 12743 ;;		___rem_pio2f
 12744 ;; This function uses a non-reentrant model
 12745 ;;
 12746                           
 12747                           	psect	text45
 12748   0050A6                     __ptext45:
 12749                           	callstack 0
 12750   0050A6                     ___flneg:
 12751                           	callstack 24
 12752   0050A6  0100               	movlb	0	; () banked
 12753   0050A8  5180               	movf	___flneg@f1& (0+255),w,b
 12754   0050AA  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12755   0050AC  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12756   0050AE  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12757   0050B0  B4D8               	btfsc	status,2,c
 12758   0050B2  EF5D  F028         	goto	u8061
 12759   0050B6  EF5F  F028         	goto	u8060
 12760   0050BA                     u8061:
 12761   0050BA  EF67  F028         	goto	l6930
 12762   0050BE                     u8060:
 12763   0050BE                     
 12764                           ; BSR set to: 0
 12765   0050BE  0E00               	movlw	0
 12766   0050C0  1B80               	xorwf	___flneg@f1& (0+255),f,b
 12767   0050C2  0E00               	movlw	0
 12768   0050C4  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12769   0050C6  0E00               	movlw	0
 12770   0050C8  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12771   0050CA  0E80               	movlw	128
 12772   0050CC  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12773   0050CE                     l6930:
 12774                           
 12775                           ; BSR set to: 0
 12776   0050CE  C080  F080         	movff	___flneg@f1,?___flneg
 12777   0050D2  C081  F081         	movff	___flneg@f1+1,?___flneg+1
 12778   0050D6  C082  F082         	movff	___flneg@f1+2,?___flneg+2
 12779   0050DA  C083  F083         	movff	___flneg@f1+3,?___flneg+3
 12780   0050DE                     
 12781                           ; BSR set to: 0
 12782   0050DE  0012               	return		;funcret
 12783   0050E0                     __end_of___flneg:
 12784                           	callstack 0
 12785                           
 12786 ;; *************** function ___flmul *****************
 12787 ;; Defined at:
 12788 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcmul.c"
 12789 ;; Parameters:    Size  Location     Type
 12790 ;;  b               4   19[COMRAM] unsigned char 
 12791 ;;  a               4   23[COMRAM] unsigned char 
 12792 ;; Auto vars:     Size  Location     Type
 12793 ;;  prod            4   38[COMRAM] struct .
 12794 ;;  grs             4   33[COMRAM] unsigned long 
 12795 ;;  temp            2   42[COMRAM] struct .
 12796 ;;  bexp            1   37[COMRAM] unsigned char 
 12797 ;;  aexp            1   32[COMRAM] unsigned char 
 12798 ;;  sign            1   31[COMRAM] unsigned char 
 12799 ;; Return value:  Size  Location     Type
 12800 ;;                  4   19[COMRAM] unsigned char 
 12801 ;; Registers used:
 12802 ;;		wreg, status,2, status,0, prodl, prodh
 12803 ;; Tracked objects:
 12804 ;;		On entry : 0/0
 12805 ;;		On exit  : 0/0
 12806 ;;		Unchanged: 0/0
 12807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12808 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12809 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12810 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12811 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12812 ;;Total ram usage:       25 bytes
 12813 ;; Hardware stack levels used: 1
 12814 ;; Hardware stack levels required when called: 1
 12815 ;; This function calls:
 12816 ;;		Nothing
 12817 ;; This function is called by:
 12818 ;;		_runDAC
 12819 ;;		_runADC
 12820 ;;		_efgtoa
 12821 ;;		___cosdf
 12822 ;;		___rem_pio2f
 12823 ;;		___sindf
 12824 ;; This function uses a non-reentrant model
 12825 ;;
 12826                           
 12827                           	psect	text46
 12828   001A74                     __ptext46:
 12829                           	callstack 0
 12830   001A74                     ___flmul:
 12831                           	callstack 24
 12832   001A74  5017               	movf	(___flmul@b+3)^0,w,c
 12833   001A76  0B80               	andlw	128
 12834   001A78  6E20               	movwf	___flmul@sign^0,c
 12835   001A7A  5017               	movf	(___flmul@b+3)^0,w,c
 12836   001A7C  2417               	addwf	(___flmul@b+3)^0,w,c
 12837   001A7E  6E26               	movwf	___flmul@bexp^0,c
 12838   001A80  AE16               	btfss	(___flmul@b+2)^0,7,c
 12839   001A82  EF45  F00D         	goto	u7671
 12840   001A86  EF47  F00D         	goto	u7670
 12841   001A8A                     u7671:
 12842   001A8A  EF48  F00D         	goto	l6678
 12843   001A8E                     u7670:
 12844   001A8E  8026               	bsf	___flmul@bexp^0,0,c
 12845   001A90                     l6678:
 12846   001A90  5026               	movf	___flmul@bexp^0,w,c
 12847   001A92  B4D8               	btfsc	status,2,c
 12848   001A94  EF4E  F00D         	goto	u7681
 12849   001A98  EF50  F00D         	goto	u7680
 12850   001A9C                     u7681:
 12851   001A9C  EF63  F00D         	goto	l6686
 12852   001AA0                     u7680:
 12853   001AA0  2826               	incf	___flmul@bexp^0,w,c
 12854   001AA2  A4D8               	btfss	status,2,c
 12855   001AA4  EF56  F00D         	goto	u7691
 12856   001AA8  EF58  F00D         	goto	u7690
 12857   001AAC                     u7691:
 12858   001AAC  EF60  F00D         	goto	l6684
 12859   001AB0                     u7690:
 12860   001AB0  0E00               	movlw	0
 12861   001AB2  6E14               	movwf	___flmul@b^0,c
 12862   001AB4  0E00               	movlw	0
 12863   001AB6  6E15               	movwf	(___flmul@b+1)^0,c
 12864   001AB8  0E00               	movlw	0
 12865   001ABA  6E16               	movwf	(___flmul@b+2)^0,c
 12866   001ABC  0E00               	movlw	0
 12867   001ABE  6E17               	movwf	(___flmul@b+3)^0,c
 12868   001AC0                     l6684:
 12869   001AC0  8E16               	bsf	(___flmul@b+2)^0,7,c
 12870   001AC2  EF6B  F00D         	goto	l6688
 12871   001AC6                     l6686:
 12872   001AC6  0E00               	movlw	0
 12873   001AC8  6E14               	movwf	___flmul@b^0,c
 12874   001ACA  0E00               	movlw	0
 12875   001ACC  6E15               	movwf	(___flmul@b+1)^0,c
 12876   001ACE  0E00               	movlw	0
 12877   001AD0  6E16               	movwf	(___flmul@b+2)^0,c
 12878   001AD2  0E00               	movlw	0
 12879   001AD4  6E17               	movwf	(___flmul@b+3)^0,c
 12880   001AD6                     l6688:
 12881   001AD6  501B               	movf	(___flmul@a+3)^0,w,c
 12882   001AD8  0B80               	andlw	128
 12883   001ADA  1A20               	xorwf	___flmul@sign^0,f,c
 12884   001ADC  501B               	movf	(___flmul@a+3)^0,w,c
 12885   001ADE  241B               	addwf	(___flmul@a+3)^0,w,c
 12886   001AE0  6E21               	movwf	___flmul@aexp^0,c
 12887   001AE2  AE1A               	btfss	(___flmul@a+2)^0,7,c
 12888   001AE4  EF76  F00D         	goto	u7701
 12889   001AE8  EF78  F00D         	goto	u7700
 12890   001AEC                     u7701:
 12891   001AEC  EF79  F00D         	goto	l6696
 12892   001AF0                     u7700:
 12893   001AF0  8021               	bsf	___flmul@aexp^0,0,c
 12894   001AF2                     l6696:
 12895   001AF2  5021               	movf	___flmul@aexp^0,w,c
 12896   001AF4  B4D8               	btfsc	status,2,c
 12897   001AF6  EF7F  F00D         	goto	u7711
 12898   001AFA  EF81  F00D         	goto	u7710
 12899   001AFE                     u7711:
 12900   001AFE  EF94  F00D         	goto	l6704
 12901   001B02                     u7710:
 12902   001B02  2821               	incf	___flmul@aexp^0,w,c
 12903   001B04  A4D8               	btfss	status,2,c
 12904   001B06  EF87  F00D         	goto	u7721
 12905   001B0A  EF89  F00D         	goto	u7720
 12906   001B0E                     u7721:
 12907   001B0E  EF91  F00D         	goto	l6702
 12908   001B12                     u7720:
 12909   001B12  0E00               	movlw	0
 12910   001B14  6E18               	movwf	___flmul@a^0,c
 12911   001B16  0E00               	movlw	0
 12912   001B18  6E19               	movwf	(___flmul@a+1)^0,c
 12913   001B1A  0E00               	movlw	0
 12914   001B1C  6E1A               	movwf	(___flmul@a+2)^0,c
 12915   001B1E  0E00               	movlw	0
 12916   001B20  6E1B               	movwf	(___flmul@a+3)^0,c
 12917   001B22                     l6702:
 12918   001B22  8E1A               	bsf	(___flmul@a+2)^0,7,c
 12919   001B24  EF9C  F00D         	goto	l1324
 12920   001B28                     l6704:
 12921   001B28  0E00               	movlw	0
 12922   001B2A  6E18               	movwf	___flmul@a^0,c
 12923   001B2C  0E00               	movlw	0
 12924   001B2E  6E19               	movwf	(___flmul@a+1)^0,c
 12925   001B30  0E00               	movlw	0
 12926   001B32  6E1A               	movwf	(___flmul@a+2)^0,c
 12927   001B34  0E00               	movlw	0
 12928   001B36  6E1B               	movwf	(___flmul@a+3)^0,c
 12929   001B38                     l1324:
 12930   001B38  5021               	movf	___flmul@aexp^0,w,c
 12931   001B3A  B4D8               	btfsc	status,2,c
 12932   001B3C  EFA2  F00D         	goto	u7731
 12933   001B40  EFA4  F00D         	goto	u7730
 12934   001B44                     u7731:
 12935   001B44  EFAC  F00D         	goto	l6708
 12936   001B48                     u7730:
 12937   001B48  5026               	movf	___flmul@bexp^0,w,c
 12938   001B4A  A4D8               	btfss	status,2,c
 12939   001B4C  EFAA  F00D         	goto	u7741
 12940   001B50  EFAC  F00D         	goto	u7740
 12941   001B54                     u7741:
 12942   001B54  EFB6  F00D         	goto	l6712
 12943   001B58                     u7740:
 12944   001B58                     l6708:
 12945   001B58  0E00               	movlw	0
 12946   001B5A  6E14               	movwf	?___flmul^0,c
 12947   001B5C  0E00               	movlw	0
 12948   001B5E  6E15               	movwf	(?___flmul+1)^0,c
 12949   001B60  0E00               	movlw	0
 12950   001B62  6E16               	movwf	(?___flmul+2)^0,c
 12951   001B64  0E00               	movlw	0
 12952   001B66  6E17               	movwf	(?___flmul+3)^0,c
 12953   001B68  EF4E  F00F         	goto	l1328
 12954   001B6C                     l6712:
 12955   001B6C  501A               	movf	(___flmul@a+2)^0,w,c
 12956   001B6E  0214               	mulwf	___flmul@b^0,c
 12957   001B70  CFF3 F02B          	movff	prodl,___flmul@temp
 12958   001B74  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12959   001B78  502B               	movf	___flmul@temp^0,w,c
 12960   001B7A  6E22               	movwf	___flmul@grs^0,c
 12961   001B7C  6A23               	clrf	(___flmul@grs+1)^0,c
 12962   001B7E  6A24               	clrf	(___flmul@grs+2)^0,c
 12963   001B80  6A25               	clrf	(___flmul@grs+3)^0,c
 12964   001B82  502C               	movf	(___flmul@temp+1)^0,w,c
 12965   001B84  6E27               	movwf	___flmul@prod^0,c
 12966   001B86  6A28               	clrf	(___flmul@prod+1)^0,c
 12967   001B88  6A29               	clrf	(___flmul@prod+2)^0,c
 12968   001B8A  6A2A               	clrf	(___flmul@prod+3)^0,c
 12969   001B8C  5019               	movf	(___flmul@a+1)^0,w,c
 12970   001B8E  0215               	mulwf	(___flmul@b+1)^0,c
 12971   001B90  CFF3 F02B          	movff	prodl,___flmul@temp
 12972   001B94  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12973   001B98  502B               	movf	___flmul@temp^0,w,c
 12974   001B9A  2622               	addwf	___flmul@grs^0,f,c
 12975   001B9C  0E00               	movlw	0
 12976   001B9E  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12977   001BA0  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12978   001BA2  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12979   001BA4  502C               	movf	(___flmul@temp+1)^0,w,c
 12980   001BA6  2627               	addwf	___flmul@prod^0,f,c
 12981   001BA8  0E00               	movlw	0
 12982   001BAA  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12983   001BAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12984   001BAE  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12985   001BB0  5018               	movf	___flmul@a^0,w,c
 12986   001BB2  0216               	mulwf	(___flmul@b+2)^0,c
 12987   001BB4  CFF3 F02B          	movff	prodl,___flmul@temp
 12988   001BB8  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12989   001BBC  502B               	movf	___flmul@temp^0,w,c
 12990   001BBE  2622               	addwf	___flmul@grs^0,f,c
 12991   001BC0  0E00               	movlw	0
 12992   001BC2  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12993   001BC4  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12994   001BC6  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12995   001BC8  502C               	movf	(___flmul@temp+1)^0,w,c
 12996   001BCA  2627               	addwf	___flmul@prod^0,f,c
 12997   001BCC  0E00               	movlw	0
 12998   001BCE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12999   001BD0  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13000   001BD2  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13001   001BD4  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13002   001BD8  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13003   001BDC  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13004   001BE0  6A22               	clrf	___flmul@grs^0,c
 13005   001BE2  5018               	movf	___flmul@a^0,w,c
 13006   001BE4  0215               	mulwf	(___flmul@b+1)^0,c
 13007   001BE6  CFF3 F02B          	movff	prodl,___flmul@temp
 13008   001BEA  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13009   001BEE  502B               	movf	___flmul@temp^0,w,c
 13010   001BF0  2622               	addwf	___flmul@grs^0,f,c
 13011   001BF2  502C               	movf	(___flmul@temp+1)^0,w,c
 13012   001BF4  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13013   001BF6  0E00               	movlw	0
 13014   001BF8  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13015   001BFA  0E00               	movlw	0
 13016   001BFC  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13017   001BFE  5019               	movf	(___flmul@a+1)^0,w,c
 13018   001C00  0214               	mulwf	___flmul@b^0,c
 13019   001C02  CFF3 F02B          	movff	prodl,___flmul@temp
 13020   001C06  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13021   001C0A  502B               	movf	___flmul@temp^0,w,c
 13022   001C0C  2622               	addwf	___flmul@grs^0,f,c
 13023   001C0E  502C               	movf	(___flmul@temp+1)^0,w,c
 13024   001C10  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13025   001C12  0E00               	movlw	0
 13026   001C14  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13027   001C16  0E00               	movlw	0
 13028   001C18  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13029   001C1A  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13030   001C1E  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13031   001C22  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13032   001C26  6A22               	clrf	___flmul@grs^0,c
 13033   001C28  5018               	movf	___flmul@a^0,w,c
 13034   001C2A  0214               	mulwf	___flmul@b^0,c
 13035   001C2C  CFF3 F02B          	movff	prodl,___flmul@temp
 13036   001C30  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13037   001C34  502B               	movf	___flmul@temp^0,w,c
 13038   001C36  2622               	addwf	___flmul@grs^0,f,c
 13039   001C38  502C               	movf	(___flmul@temp+1)^0,w,c
 13040   001C3A  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13041   001C3C  0E00               	movlw	0
 13042   001C3E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13043   001C40  0E00               	movlw	0
 13044   001C42  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13045   001C44  501A               	movf	(___flmul@a+2)^0,w,c
 13046   001C46  0215               	mulwf	(___flmul@b+1)^0,c
 13047   001C48  CFF3 F02B          	movff	prodl,___flmul@temp
 13048   001C4C  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13049   001C50  502B               	movf	___flmul@temp^0,w,c
 13050   001C52  2627               	addwf	___flmul@prod^0,f,c
 13051   001C54  502C               	movf	(___flmul@temp+1)^0,w,c
 13052   001C56  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13053   001C58  0E00               	movlw	0
 13054   001C5A  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13055   001C5C  0E00               	movlw	0
 13056   001C5E  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13057   001C60  5019               	movf	(___flmul@a+1)^0,w,c
 13058   001C62  0216               	mulwf	(___flmul@b+2)^0,c
 13059   001C64  CFF3 F02B          	movff	prodl,___flmul@temp
 13060   001C68  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13061   001C6C  502B               	movf	___flmul@temp^0,w,c
 13062   001C6E  2627               	addwf	___flmul@prod^0,f,c
 13063   001C70  502C               	movf	(___flmul@temp+1)^0,w,c
 13064   001C72  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13065   001C74  0E00               	movlw	0
 13066   001C76  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13067   001C78  0E00               	movlw	0
 13068   001C7A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13069   001C7C  501A               	movf	(___flmul@a+2)^0,w,c
 13070   001C7E  0216               	mulwf	(___flmul@b+2)^0,c
 13071   001C80  CFF3 F02B          	movff	prodl,___flmul@temp
 13072   001C84  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13073   001C88  502B               	movf	___flmul@temp^0,w,c
 13074   001C8A  6E1C               	movwf	??___flmul^0,c
 13075   001C8C  502C               	movf	(___flmul@temp+1)^0,w,c
 13076   001C8E  6E1D               	movwf	(??___flmul+1)^0,c
 13077   001C90  6A1E               	clrf	(??___flmul+2)^0,c
 13078   001C92  6A1F               	clrf	(??___flmul+3)^0,c
 13079   001C94  C01E  F01F         	movff	??___flmul+2,??___flmul+3
 13080   001C98  C01D  F01E         	movff	??___flmul+1,??___flmul+2
 13081   001C9C  C01C  F01D         	movff	??___flmul,??___flmul+1
 13082   001CA0  6A1C               	clrf	??___flmul^0,c
 13083   001CA2  501C               	movf	??___flmul^0,w,c
 13084   001CA4  2627               	addwf	___flmul@prod^0,f,c
 13085   001CA6  501D               	movf	(??___flmul+1)^0,w,c
 13086   001CA8  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13087   001CAA  501E               	movf	(??___flmul+2)^0,w,c
 13088   001CAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13089   001CAE  501F               	movf	(??___flmul+3)^0,w,c
 13090   001CB0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13091   001CB2  C022  F01C         	movff	___flmul@grs,??___flmul
 13092   001CB6  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
 13093   001CBA  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
 13094   001CBE  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
 13095   001CC2  0E19               	movlw	25
 13096   001CC4  EF69  F00E         	goto	u7750
 13097   001CC8                     u7755:
 13098   001CC8  90D8               	bcf	status,0,c
 13099   001CCA  321F               	rrcf	(??___flmul+3)^0,f,c
 13100   001CCC  321E               	rrcf	(??___flmul+2)^0,f,c
 13101   001CCE  321D               	rrcf	(??___flmul+1)^0,f,c
 13102   001CD0  321C               	rrcf	??___flmul^0,f,c
 13103   001CD2                     u7750:
 13104   001CD2  2EE8               	decfsz	wreg,f,c
 13105   001CD4  EF64  F00E         	goto	u7755
 13106   001CD8  501C               	movf	??___flmul^0,w,c
 13107   001CDA  2627               	addwf	___flmul@prod^0,f,c
 13108   001CDC  501D               	movf	(??___flmul+1)^0,w,c
 13109   001CDE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13110   001CE0  501E               	movf	(??___flmul+2)^0,w,c
 13111   001CE2  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13112   001CE4  501F               	movf	(??___flmul+3)^0,w,c
 13113   001CE6  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13114   001CE8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13115   001CEC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13116   001CF0  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13117   001CF4  6A22               	clrf	___flmul@grs^0,c
 13118   001CF6  5021               	movf	___flmul@aexp^0,w,c
 13119   001CF8  C026  F01C         	movff	___flmul@bexp,??___flmul
 13120   001CFC  6A1D               	clrf	(??___flmul+1)^0,c
 13121   001CFE  261C               	addwf	??___flmul^0,f,c
 13122   001D00  0E00               	movlw	0
 13123   001D02  221D               	addwfc	(??___flmul+1)^0,f,c
 13124   001D04  0E82               	movlw	130
 13125   001D06  241C               	addwf	??___flmul^0,w,c
 13126   001D08  6E2B               	movwf	___flmul@temp^0,c
 13127   001D0A  0EFF               	movlw	255
 13128   001D0C  201D               	addwfc	(??___flmul+1)^0,w,c
 13129   001D0E  6E2C               	movwf	(___flmul@temp+1)^0,c
 13130   001D10  EF9F  F00E         	goto	l6760
 13131   001D14                     l6754:
 13132   001D14  90D8               	bcf	status,0,c
 13133   001D16  3627               	rlcf	___flmul@prod^0,f,c
 13134   001D18  3628               	rlcf	(___flmul@prod+1)^0,f,c
 13135   001D1A  3629               	rlcf	(___flmul@prod+2)^0,f,c
 13136   001D1C  362A               	rlcf	(___flmul@prod+3)^0,f,c
 13137   001D1E  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13138   001D20  EF94  F00E         	goto	u7761
 13139   001D24  EF96  F00E         	goto	u7760
 13140   001D28                     u7761:
 13141   001D28  EF97  F00E         	goto	l1331
 13142   001D2C                     u7760:
 13143   001D2C  8027               	bsf	___flmul@prod^0,0,c
 13144   001D2E                     l1331:
 13145   001D2E  90D8               	bcf	status,0,c
 13146   001D30  3622               	rlcf	___flmul@grs^0,f,c
 13147   001D32  3623               	rlcf	(___flmul@grs+1)^0,f,c
 13148   001D34  3624               	rlcf	(___flmul@grs+2)^0,f,c
 13149   001D36  3625               	rlcf	(___flmul@grs+3)^0,f,c
 13150   001D38  062B               	decf	___flmul@temp^0,f,c
 13151   001D3A  A0D8               	btfss	status,0,c
 13152   001D3C  062C               	decf	(___flmul@temp+1)^0,f,c
 13153   001D3E                     l6760:
 13154   001D3E  AE29               	btfss	(___flmul@prod+2)^0,7,c
 13155   001D40  EFA4  F00E         	goto	u7771
 13156   001D44  EFA6  F00E         	goto	u7770
 13157   001D48                     u7771:
 13158   001D48  EF8A  F00E         	goto	l6754
 13159   001D4C                     u7770:
 13160   001D4C  0E00               	movlw	0
 13161   001D4E  6E21               	movwf	___flmul@aexp^0,c
 13162   001D50  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13163   001D52  EFAD  F00E         	goto	u7781
 13164   001D56  EFAF  F00E         	goto	u7780
 13165   001D5A                     u7781:
 13166   001D5A  EFD3  F00E         	goto	l1333
 13167   001D5E                     u7780:
 13168   001D5E  0EFF               	movlw	255
 13169   001D60  1422               	andwf	___flmul@grs^0,w,c
 13170   001D62  6E1C               	movwf	??___flmul^0,c
 13171   001D64  0EFF               	movlw	255
 13172   001D66  1423               	andwf	(___flmul@grs+1)^0,w,c
 13173   001D68  6E1D               	movwf	(??___flmul+1)^0,c
 13174   001D6A  0EFF               	movlw	255
 13175   001D6C  1424               	andwf	(___flmul@grs+2)^0,w,c
 13176   001D6E  6E1E               	movwf	(??___flmul+2)^0,c
 13177   001D70  0E7F               	movlw	127
 13178   001D72  1425               	andwf	(___flmul@grs+3)^0,w,c
 13179   001D74  6E1F               	movwf	(??___flmul+3)^0,c
 13180   001D76  501C               	movf	??___flmul^0,w,c
 13181   001D78  101D               	iorwf	(??___flmul+1)^0,w,c
 13182   001D7A  101E               	iorwf	(??___flmul+2)^0,w,c
 13183   001D7C  101F               	iorwf	(??___flmul+3)^0,w,c
 13184   001D7E  B4D8               	btfsc	status,2,c
 13185   001D80  EFC4  F00E         	goto	u7791
 13186   001D84  EFC6  F00E         	goto	u7790
 13187   001D88                     u7791:
 13188   001D88  EFCA  F00E         	goto	l1334
 13189   001D8C                     u7790:
 13190   001D8C                     l6768:
 13191   001D8C  0E01               	movlw	1
 13192   001D8E  6E21               	movwf	___flmul@aexp^0,c
 13193   001D90  EFD3  F00E         	goto	l1333
 13194   001D94                     l1334:
 13195   001D94  A027               	btfss	___flmul@prod^0,0,c
 13196   001D96  EFCF  F00E         	goto	u7801
 13197   001D9A  EFD1  F00E         	goto	u7800
 13198   001D9E                     u7801:
 13199   001D9E  EFD3  F00E         	goto	l1333
 13200   001DA2                     u7800:
 13201   001DA2  EFC6  F00E         	goto	l6768
 13202   001DA6                     l1333:
 13203   001DA6  5021               	movf	___flmul@aexp^0,w,c
 13204   001DA8  B4D8               	btfsc	status,2,c
 13205   001DAA  EFD9  F00E         	goto	u7811
 13206   001DAE  EFDB  F00E         	goto	u7810
 13207   001DB2                     u7811:
 13208   001DB2  EFFF  F00E         	goto	l6780
 13209   001DB6                     u7810:
 13210   001DB6  0E01               	movlw	1
 13211   001DB8  2627               	addwf	___flmul@prod^0,f,c
 13212   001DBA  0E00               	movlw	0
 13213   001DBC  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13214   001DBE  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13215   001DC0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13216   001DC2  A02A               	btfss	(___flmul@prod+3)^0,0,c
 13217   001DC4  EFE6  F00E         	goto	u7821
 13218   001DC8  EFE8  F00E         	goto	u7820
 13219   001DCC                     u7821:
 13220   001DCC  EFFF  F00E         	goto	l6780
 13221   001DD0                     u7820:
 13222   001DD0  C027  F01C         	movff	___flmul@prod,??___flmul
 13223   001DD4  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
 13224   001DD8  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
 13225   001DDC  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
 13226   001DE0  341F               	rlcf	(??___flmul+3)^0,w,c
 13227   001DE2  321F               	rrcf	(??___flmul+3)^0,f,c
 13228   001DE4  321E               	rrcf	(??___flmul+2)^0,f,c
 13229   001DE6  321D               	rrcf	(??___flmul+1)^0,f,c
 13230   001DE8  321C               	rrcf	??___flmul^0,f,c
 13231   001DEA  C01C  F027         	movff	??___flmul,___flmul@prod
 13232   001DEE  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
 13233   001DF2  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
 13234   001DF6  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
 13235   001DFA  4A2B               	infsnz	___flmul@temp^0,f,c
 13236   001DFC  2A2C               	incf	(___flmul@temp+1)^0,f,c
 13237   001DFE                     l6780:
 13238   001DFE  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 13239   001E00  EF0A  F00F         	goto	u7831
 13240   001E04  502C               	movf	(___flmul@temp+1)^0,w,c
 13241   001E06  E108               	bnz	u7830
 13242   001E08  282B               	incf	___flmul@temp^0,w,c
 13243   001E0A  A0D8               	btfss	status,0,c
 13244   001E0C  EF0A  F00F         	goto	u7831
 13245   001E10  EF0C  F00F         	goto	u7830
 13246   001E14                     u7831:
 13247   001E14  EF16  F00F         	goto	l6784
 13248   001E18                     u7830:
 13249   001E18  0E00               	movlw	0
 13250   001E1A  6E27               	movwf	___flmul@prod^0,c
 13251   001E1C  0E00               	movlw	0
 13252   001E1E  6E28               	movwf	(___flmul@prod+1)^0,c
 13253   001E20  0E80               	movlw	128
 13254   001E22  6E29               	movwf	(___flmul@prod+2)^0,c
 13255   001E24  0E7F               	movlw	127
 13256   001E26  6E2A               	movwf	(___flmul@prod+3)^0,c
 13257   001E28  EF44  F00F         	goto	l6796
 13258   001E2C                     l6784:
 13259   001E2C  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 13260   001E2E  EF23  F00F         	goto	u7840
 13261   001E32  502C               	movf	(___flmul@temp+1)^0,w,c
 13262   001E34  E106               	bnz	u7841
 13263   001E36  042B               	decf	___flmul@temp^0,w,c
 13264   001E38  B0D8               	btfsc	status,0,c
 13265   001E3A  EF21  F00F         	goto	u7841
 13266   001E3E  EF23  F00F         	goto	u7840
 13267   001E42                     u7841:
 13268   001E42  EF2F  F00F         	goto	l1341
 13269   001E46                     u7840:
 13270   001E46  0E00               	movlw	0
 13271   001E48  6E27               	movwf	___flmul@prod^0,c
 13272   001E4A  0E00               	movlw	0
 13273   001E4C  6E28               	movwf	(___flmul@prod+1)^0,c
 13274   001E4E  0E00               	movlw	0
 13275   001E50  6E29               	movwf	(___flmul@prod+2)^0,c
 13276   001E52  0E00               	movlw	0
 13277   001E54  6E2A               	movwf	(___flmul@prod+3)^0,c
 13278   001E56  0E00               	movlw	0
 13279   001E58  6E20               	movwf	___flmul@sign^0,c
 13280   001E5A  EF44  F00F         	goto	l6796
 13281   001E5E                     l1341:
 13282   001E5E  C02B  F026         	movff	___flmul@temp,___flmul@bexp
 13283   001E62  0EFF               	movlw	255
 13284   001E64  1627               	andwf	___flmul@prod^0,f,c
 13285   001E66  0EFF               	movlw	255
 13286   001E68  1628               	andwf	(___flmul@prod+1)^0,f,c
 13287   001E6A  0E7F               	movlw	127
 13288   001E6C  1629               	andwf	(___flmul@prod+2)^0,f,c
 13289   001E6E  0E00               	movlw	0
 13290   001E70  162A               	andwf	(___flmul@prod+3)^0,f,c
 13291   001E72  A026               	btfss	___flmul@bexp^0,0,c
 13292   001E74  EF3E  F00F         	goto	u7851
 13293   001E78  EF40  F00F         	goto	u7850
 13294   001E7C                     u7851:
 13295   001E7C  EF41  F00F         	goto	l6794
 13296   001E80                     u7850:
 13297   001E80  8E29               	bsf	(___flmul@prod+2)^0,7,c
 13298   001E82                     l6794:
 13299   001E82  90D8               	bcf	status,0,c
 13300   001E84  3026               	rrcf	___flmul@bexp^0,w,c
 13301   001E86  6E2A               	movwf	(___flmul@prod+3)^0,c
 13302   001E88                     l6796:
 13303   001E88  5020               	movf	___flmul@sign^0,w,c
 13304   001E8A  122A               	iorwf	(___flmul@prod+3)^0,f,c
 13305   001E8C  C027  F014         	movff	___flmul@prod,?___flmul
 13306   001E90  C028  F015         	movff	___flmul@prod+1,?___flmul+1
 13307   001E94  C029  F016         	movff	___flmul@prod+2,?___flmul+2
 13308   001E98  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
 13309   001E9C                     l1328:
 13310   001E9C  0012               	return		;funcret
 13311   001E9E                     __end_of___flmul:
 13312                           	callstack 0
 13313                           
 13314 ;; *************** function ___flge *****************
 13315 ;; Defined at:
 13316 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flge.c"
 13317 ;; Parameters:    Size  Location     Type
 13318 ;;  ff1             4   44[COMRAM] unsigned char 
 13319 ;;  ff2             4   48[COMRAM] unsigned char 
 13320 ;; Auto vars:     Size  Location     Type
 13321 ;;		None
 13322 ;; Return value:  Size  Location     Type
 13323 ;;		None               void
 13324 ;; Registers used:
 13325 ;;		wreg, status,2, status,0
 13326 ;; Tracked objects:
 13327 ;;		On entry : 0/0
 13328 ;;		On exit  : 0/0
 13329 ;;		Unchanged: 0/0
 13330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13331 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13333 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13334 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13335 ;;Total ram usage:       12 bytes
 13336 ;; Hardware stack levels used: 1
 13337 ;; Hardware stack levels required when called: 1
 13338 ;; This function calls:
 13339 ;;		Nothing
 13340 ;; This function is called by:
 13341 ;;		_efgtoa
 13342 ;; This function uses a non-reentrant model
 13343 ;;
 13344                           
 13345                           	psect	text47
 13346   004394                     __ptext47:
 13347                           	callstack 0
 13348   004394                     ___flge:
 13349                           	callstack 24
 13350   004394  0E00               	movlw	0
 13351   004396  142D               	andwf	___flge@ff1^0,w,c
 13352   004398  6E35               	movwf	??___flge^0,c
 13353   00439A  0E00               	movlw	0
 13354   00439C  142E               	andwf	(___flge@ff1+1)^0,w,c
 13355   00439E  6E36               	movwf	(??___flge+1)^0,c
 13356   0043A0  0E80               	movlw	128
 13357   0043A2  142F               	andwf	(___flge@ff1+2)^0,w,c
 13358   0043A4  6E37               	movwf	(??___flge+2)^0,c
 13359   0043A6  0E7F               	movlw	127
 13360   0043A8  1430               	andwf	(___flge@ff1+3)^0,w,c
 13361   0043AA  6E38               	movwf	(??___flge+3)^0,c
 13362   0043AC  5035               	movf	??___flge^0,w,c
 13363   0043AE  1036               	iorwf	(??___flge+1)^0,w,c
 13364   0043B0  1037               	iorwf	(??___flge+2)^0,w,c
 13365   0043B2  1038               	iorwf	(??___flge+3)^0,w,c
 13366   0043B4  A4D8               	btfss	status,2,c
 13367   0043B6  EFDF  F021         	goto	u8011
 13368   0043BA  EFE1  F021         	goto	u8010
 13369   0043BE                     u8011:
 13370   0043BE  EFE9  F021         	goto	l6908
 13371   0043C2                     u8010:
 13372   0043C2  0E00               	movlw	0
 13373   0043C4  6E2D               	movwf	___flge@ff1^0,c
 13374   0043C6  0E00               	movlw	0
 13375   0043C8  6E2E               	movwf	(___flge@ff1+1)^0,c
 13376   0043CA  0E00               	movlw	0
 13377   0043CC  6E2F               	movwf	(___flge@ff1+2)^0,c
 13378   0043CE  0E00               	movlw	0
 13379   0043D0  6E30               	movwf	(___flge@ff1+3)^0,c
 13380   0043D2                     l6908:
 13381   0043D2  0E00               	movlw	0
 13382   0043D4  1431               	andwf	___flge@ff2^0,w,c
 13383   0043D6  6E35               	movwf	??___flge^0,c
 13384   0043D8  0E00               	movlw	0
 13385   0043DA  1432               	andwf	(___flge@ff2+1)^0,w,c
 13386   0043DC  6E36               	movwf	(??___flge+1)^0,c
 13387   0043DE  0E80               	movlw	128
 13388   0043E0  1433               	andwf	(___flge@ff2+2)^0,w,c
 13389   0043E2  6E37               	movwf	(??___flge+2)^0,c
 13390   0043E4  0E7F               	movlw	127
 13391   0043E6  1434               	andwf	(___flge@ff2+3)^0,w,c
 13392   0043E8  6E38               	movwf	(??___flge+3)^0,c
 13393   0043EA  5035               	movf	??___flge^0,w,c
 13394   0043EC  1036               	iorwf	(??___flge+1)^0,w,c
 13395   0043EE  1037               	iorwf	(??___flge+2)^0,w,c
 13396   0043F0  1038               	iorwf	(??___flge+3)^0,w,c
 13397   0043F2  A4D8               	btfss	status,2,c
 13398   0043F4  EFFE  F021         	goto	u8021
 13399   0043F8  EF00  F022         	goto	u8020
 13400   0043FC                     u8021:
 13401   0043FC  EF08  F022         	goto	l6912
 13402   004400                     u8020:
 13403   004400  0E00               	movlw	0
 13404   004402  6E31               	movwf	___flge@ff2^0,c
 13405   004404  0E00               	movlw	0
 13406   004406  6E32               	movwf	(___flge@ff2+1)^0,c
 13407   004408  0E00               	movlw	0
 13408   00440A  6E33               	movwf	(___flge@ff2+2)^0,c
 13409   00440C  0E00               	movlw	0
 13410   00440E  6E34               	movwf	(___flge@ff2+3)^0,c
 13411   004410                     l6912:
 13412   004410  AE30               	btfss	(___flge@ff1+3)^0,7,c
 13413   004412  EF0D  F022         	goto	u8031
 13414   004416  EF0F  F022         	goto	u8030
 13415   00441A                     u8031:
 13416   00441A  EF18  F022         	goto	l6916
 13417   00441E                     u8030:
 13418   00441E  6C2D               	negf	___flge@ff1^0,c
 13419   004420  1E2E               	comf	(___flge@ff1+1)^0,f,c
 13420   004422  B0D8               	btfsc	status,0,c
 13421   004424  2A2E               	incf	(___flge@ff1+1)^0,f,c
 13422   004426  1E2F               	comf	(___flge@ff1+2)^0,f,c
 13423   004428  B0D8               	btfsc	status,0,c
 13424   00442A  2A2F               	incf	(___flge@ff1+2)^0,f,c
 13425   00442C  0E80               	movlw	128
 13426   00442E  5630               	subfwb	(___flge@ff1+3)^0,f,c
 13427   004430                     l6916:
 13428   004430  AE34               	btfss	(___flge@ff2+3)^0,7,c
 13429   004432  EF1D  F022         	goto	u8041
 13430   004436  EF1F  F022         	goto	u8040
 13431   00443A                     u8041:
 13432   00443A  EF28  F022         	goto	l975
 13433   00443E                     u8040:
 13434   00443E  6C31               	negf	___flge@ff2^0,c
 13435   004440  1E32               	comf	(___flge@ff2+1)^0,f,c
 13436   004442  B0D8               	btfsc	status,0,c
 13437   004444  2A32               	incf	(___flge@ff2+1)^0,f,c
 13438   004446  1E33               	comf	(___flge@ff2+2)^0,f,c
 13439   004448  B0D8               	btfsc	status,0,c
 13440   00444A  2A33               	incf	(___flge@ff2+2)^0,f,c
 13441   00444C  0E80               	movlw	128
 13442   00444E  5634               	subfwb	(___flge@ff2+3)^0,f,c
 13443   004450                     l975:
 13444   004450  0E00               	movlw	0
 13445   004452  1A2D               	xorwf	___flge@ff1^0,f,c
 13446   004454  0E00               	movlw	0
 13447   004456  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
 13448   004458  0E00               	movlw	0
 13449   00445A  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
 13450   00445C  0E80               	movlw	128
 13451   00445E  1A30               	xorwf	(___flge@ff1+3)^0,f,c
 13452   004460  0E00               	movlw	0
 13453   004462  1A31               	xorwf	___flge@ff2^0,f,c
 13454   004464  0E00               	movlw	0
 13455   004466  1A32               	xorwf	(___flge@ff2+1)^0,f,c
 13456   004468  0E00               	movlw	0
 13457   00446A  1A33               	xorwf	(___flge@ff2+2)^0,f,c
 13458   00446C  0E80               	movlw	128
 13459   00446E  1A34               	xorwf	(___flge@ff2+3)^0,f,c
 13460   004470  5031               	movf	___flge@ff2^0,w,c
 13461   004472  5C2D               	subwf	___flge@ff1^0,w,c
 13462   004474  5032               	movf	(___flge@ff2+1)^0,w,c
 13463   004476  582E               	subwfb	(___flge@ff1+1)^0,w,c
 13464   004478  5033               	movf	(___flge@ff2+2)^0,w,c
 13465   00447A  582F               	subwfb	(___flge@ff1+2)^0,w,c
 13466   00447C  5034               	movf	(___flge@ff2+3)^0,w,c
 13467   00447E  5830               	subwfb	(___flge@ff1+3)^0,w,c
 13468   004480  B0D8               	btfsc	status,0,c
 13469   004482  EF45  F022         	goto	u8051
 13470   004486  EF47  F022         	goto	u8050
 13471   00448A                     u8051:
 13472   00448A  EF4A  F022         	goto	l6922
 13473   00448E                     u8050:
 13474   00448E  90D8               	bcf	status,0,c
 13475   004490  EF4B  F022         	goto	l980
 13476   004494                     l6922:
 13477   004494  80D8               	bsf	status,0,c
 13478   004496                     l980:
 13479   004496  0012               	return		;funcret
 13480   004498                     __end_of___flge:
 13481                           	callstack 0
 13482                           
 13483 ;; *************** function ___fleq *****************
 13484 ;; Defined at:
 13485 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fleq.c"
 13486 ;; Parameters:    Size  Location     Type
 13487 ;;  ff1             4    5[COMRAM] unsigned char 
 13488 ;;  ff2             4    9[COMRAM] unsigned char 
 13489 ;; Auto vars:     Size  Location     Type
 13490 ;;		None
 13491 ;; Return value:  Size  Location     Type
 13492 ;;		None               void
 13493 ;; Registers used:
 13494 ;;		wreg, status,2, status,0
 13495 ;; Tracked objects:
 13496 ;;		On entry : 0/0
 13497 ;;		On exit  : 0/0
 13498 ;;		Unchanged: 0/0
 13499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13500 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13502 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13503 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13504 ;;Total ram usage:       12 bytes
 13505 ;; Hardware stack levels used: 1
 13506 ;; Hardware stack levels required when called: 1
 13507 ;; This function calls:
 13508 ;;		Nothing
 13509 ;; This function is called by:
 13510 ;;		_efgtoa
 13511 ;; This function uses a non-reentrant model
 13512 ;;
 13513                           
 13514                           	psect	text48
 13515   004AFE                     __ptext48:
 13516                           	callstack 0
 13517   004AFE                     ___fleq:
 13518                           	callstack 24
 13519   004AFE  0E00               	movlw	0
 13520   004B00  1406               	andwf	___fleq@ff1^0,w,c
 13521   004B02  6E0E               	movwf	??___fleq^0,c
 13522   004B04  0E00               	movlw	0
 13523   004B06  1407               	andwf	(___fleq@ff1+1)^0,w,c
 13524   004B08  6E0F               	movwf	(??___fleq+1)^0,c
 13525   004B0A  0E80               	movlw	128
 13526   004B0C  1408               	andwf	(___fleq@ff1+2)^0,w,c
 13527   004B0E  6E10               	movwf	(??___fleq+2)^0,c
 13528   004B10  0E7F               	movlw	127
 13529   004B12  1409               	andwf	(___fleq@ff1+3)^0,w,c
 13530   004B14  6E11               	movwf	(??___fleq+3)^0,c
 13531   004B16  500E               	movf	??___fleq^0,w,c
 13532   004B18  100F               	iorwf	(??___fleq+1)^0,w,c
 13533   004B1A  1010               	iorwf	(??___fleq+2)^0,w,c
 13534   004B1C  1011               	iorwf	(??___fleq+3)^0,w,c
 13535   004B1E  A4D8               	btfss	status,2,c
 13536   004B20  EF94  F025         	goto	u7981
 13537   004B24  EF96  F025         	goto	u7980
 13538   004B28                     u7981:
 13539   004B28  EF9E  F025         	goto	l6892
 13540   004B2C                     u7980:
 13541   004B2C  0E00               	movlw	0
 13542   004B2E  6E06               	movwf	___fleq@ff1^0,c
 13543   004B30  0E00               	movlw	0
 13544   004B32  6E07               	movwf	(___fleq@ff1+1)^0,c
 13545   004B34  0E00               	movlw	0
 13546   004B36  6E08               	movwf	(___fleq@ff1+2)^0,c
 13547   004B38  0E00               	movlw	0
 13548   004B3A  6E09               	movwf	(___fleq@ff1+3)^0,c
 13549   004B3C                     l6892:
 13550   004B3C  0E00               	movlw	0
 13551   004B3E  140A               	andwf	___fleq@ff2^0,w,c
 13552   004B40  6E0E               	movwf	??___fleq^0,c
 13553   004B42  0E00               	movlw	0
 13554   004B44  140B               	andwf	(___fleq@ff2+1)^0,w,c
 13555   004B46  6E0F               	movwf	(??___fleq+1)^0,c
 13556   004B48  0E80               	movlw	128
 13557   004B4A  140C               	andwf	(___fleq@ff2+2)^0,w,c
 13558   004B4C  6E10               	movwf	(??___fleq+2)^0,c
 13559   004B4E  0E7F               	movlw	127
 13560   004B50  140D               	andwf	(___fleq@ff2+3)^0,w,c
 13561   004B52  6E11               	movwf	(??___fleq+3)^0,c
 13562   004B54  500E               	movf	??___fleq^0,w,c
 13563   004B56  100F               	iorwf	(??___fleq+1)^0,w,c
 13564   004B58  1010               	iorwf	(??___fleq+2)^0,w,c
 13565   004B5A  1011               	iorwf	(??___fleq+3)^0,w,c
 13566   004B5C  A4D8               	btfss	status,2,c
 13567   004B5E  EFB3  F025         	goto	u7991
 13568   004B62  EFB5  F025         	goto	u7990
 13569   004B66                     u7991:
 13570   004B66  EFBD  F025         	goto	l6896
 13571   004B6A                     u7990:
 13572   004B6A  0E00               	movlw	0
 13573   004B6C  6E0A               	movwf	___fleq@ff2^0,c
 13574   004B6E  0E00               	movlw	0
 13575   004B70  6E0B               	movwf	(___fleq@ff2+1)^0,c
 13576   004B72  0E00               	movlw	0
 13577   004B74  6E0C               	movwf	(___fleq@ff2+2)^0,c
 13578   004B76  0E00               	movlw	0
 13579   004B78  6E0D               	movwf	(___fleq@ff2+3)^0,c
 13580   004B7A                     l6896:
 13581   004B7A  500A               	movf	___fleq@ff2^0,w,c
 13582   004B7C  1806               	xorwf	___fleq@ff1^0,w,c
 13583   004B7E  E10F               	bnz	u8000
 13584   004B80  500B               	movf	(___fleq@ff2+1)^0,w,c
 13585   004B82  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 13586   004B84  E10C               	bnz	u8000
 13587   004B86  500C               	movf	(___fleq@ff2+2)^0,w,c
 13588   004B88  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 13589   004B8A  E109               	bnz	u8000
 13590   004B8C  500D               	movf	(___fleq@ff2+3)^0,w,c
 13591   004B8E  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 13592   004B90  B4D8               	btfsc	status,2,c
 13593   004B92  EFCD  F025         	goto	u8001
 13594   004B96  EFCF  F025         	goto	u8000
 13595   004B9A                     u8001:
 13596   004B9A  EFD2  F025         	goto	l6900
 13597   004B9E                     u8000:
 13598   004B9E  90D8               	bcf	status,0,c
 13599   004BA0  EFD3  F025         	goto	l969
 13600   004BA4                     l6900:
 13601   004BA4  80D8               	bsf	status,0,c
 13602   004BA6                     l969:
 13603   004BA6  0012               	return		;funcret
 13604   004BA8                     __end_of___fleq:
 13605                           	callstack 0
 13606                           
 13607 ;; *************** function ___fldiv *****************
 13608 ;; Defined at:
 13609 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcdiv.c"
 13610 ;; Parameters:    Size  Location     Type
 13611 ;;  b               4   44[COMRAM] unsigned char 
 13612 ;;  a               4   48[COMRAM] unsigned char 
 13613 ;; Auto vars:     Size  Location     Type
 13614 ;;  grs             4   63[COMRAM] unsigned long 
 13615 ;;  rem             4   56[COMRAM] unsigned long 
 13616 ;;  new_exp         2   61[COMRAM] short 
 13617 ;;  aexp            1   68[COMRAM] unsigned char 
 13618 ;;  bexp            1   67[COMRAM] unsigned char 
 13619 ;;  sign            1   60[COMRAM] unsigned char 
 13620 ;; Return value:  Size  Location     Type
 13621 ;;                  4   44[COMRAM] unsigned char 
 13622 ;; Registers used:
 13623 ;;		wreg, status,2, status,0
 13624 ;; Tracked objects:
 13625 ;;		On entry : 0/0
 13626 ;;		On exit  : 0/0
 13627 ;;		Unchanged: 0/0
 13628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13629 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13630 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13631 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13632 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13633 ;;Total ram usage:       25 bytes
 13634 ;; Hardware stack levels used: 1
 13635 ;; Hardware stack levels required when called: 1
 13636 ;; This function calls:
 13637 ;;		Nothing
 13638 ;; This function is called by:
 13639 ;;		_runDAC
 13640 ;;		_runADC
 13641 ;;		_efgtoa
 13642 ;; This function uses a non-reentrant model
 13643 ;;
 13644                           
 13645                           	psect	text49
 13646   002656                     __ptext49:
 13647                           	callstack 0
 13648   002656                     ___fldiv:
 13649                           	callstack 24
 13650   002656  5030               	movf	(___fldiv@b+3)^0,w,c
 13651   002658  0B80               	andlw	128
 13652   00265A  6E3D               	movwf	___fldiv@sign^0,c
 13653   00265C  5030               	movf	(___fldiv@b+3)^0,w,c
 13654   00265E  2430               	addwf	(___fldiv@b+3)^0,w,c
 13655   002660  6E44               	movwf	___fldiv@bexp^0,c
 13656   002662  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 13657   002664  EF36  F013         	goto	u7441
 13658   002668  EF38  F013         	goto	u7440
 13659   00266C                     u7441:
 13660   00266C  EF39  F013         	goto	l6540
 13661   002670                     u7440:
 13662   002670  8044               	bsf	___fldiv@bexp^0,0,c
 13663   002672                     l6540:
 13664   002672  5044               	movf	___fldiv@bexp^0,w,c
 13665   002674  B4D8               	btfsc	status,2,c
 13666   002676  EF3F  F013         	goto	u7451
 13667   00267A  EF41  F013         	goto	u7450
 13668   00267E                     u7451:
 13669   00267E  EF56  F013         	goto	l6550
 13670   002682                     u7450:
 13671   002682  2844               	incf	___fldiv@bexp^0,w,c
 13672   002684  A4D8               	btfss	status,2,c
 13673   002686  EF47  F013         	goto	u7461
 13674   00268A  EF49  F013         	goto	u7460
 13675   00268E                     u7461:
 13676   00268E  EF51  F013         	goto	l6546
 13677   002692                     u7460:
 13678   002692  0E00               	movlw	0
 13679   002694  6E2D               	movwf	___fldiv@b^0,c
 13680   002696  0E00               	movlw	0
 13681   002698  6E2E               	movwf	(___fldiv@b+1)^0,c
 13682   00269A  0E00               	movlw	0
 13683   00269C  6E2F               	movwf	(___fldiv@b+2)^0,c
 13684   00269E  0E00               	movlw	0
 13685   0026A0  6E30               	movwf	(___fldiv@b+3)^0,c
 13686   0026A2                     l6546:
 13687   0026A2  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 13688   0026A4  0E00               	movlw	0
 13689   0026A6  6E30               	movwf	(___fldiv@b+3)^0,c
 13690   0026A8  EF5E  F013         	goto	l6552
 13691   0026AC                     l6550:
 13692   0026AC  0E00               	movlw	0
 13693   0026AE  6E2D               	movwf	___fldiv@b^0,c
 13694   0026B0  0E00               	movlw	0
 13695   0026B2  6E2E               	movwf	(___fldiv@b+1)^0,c
 13696   0026B4  0E00               	movlw	0
 13697   0026B6  6E2F               	movwf	(___fldiv@b+2)^0,c
 13698   0026B8  0E00               	movlw	0
 13699   0026BA  6E30               	movwf	(___fldiv@b+3)^0,c
 13700   0026BC                     l6552:
 13701   0026BC  5034               	movf	(___fldiv@a+3)^0,w,c
 13702   0026BE  0B80               	andlw	128
 13703   0026C0  1A3D               	xorwf	___fldiv@sign^0,f,c
 13704   0026C2  5034               	movf	(___fldiv@a+3)^0,w,c
 13705   0026C4  2434               	addwf	(___fldiv@a+3)^0,w,c
 13706   0026C6  6E45               	movwf	___fldiv@aexp^0,c
 13707   0026C8  AE33               	btfss	(___fldiv@a+2)^0,7,c
 13708   0026CA  EF69  F013         	goto	u7471
 13709   0026CE  EF6B  F013         	goto	u7470
 13710   0026D2                     u7471:
 13711   0026D2  EF6C  F013         	goto	l6560
 13712   0026D6                     u7470:
 13713   0026D6  8045               	bsf	___fldiv@aexp^0,0,c
 13714   0026D8                     l6560:
 13715   0026D8  5045               	movf	___fldiv@aexp^0,w,c
 13716   0026DA  B4D8               	btfsc	status,2,c
 13717   0026DC  EF72  F013         	goto	u7481
 13718   0026E0  EF74  F013         	goto	u7480
 13719   0026E4                     u7481:
 13720   0026E4  EF89  F013         	goto	l6570
 13721   0026E8                     u7480:
 13722   0026E8  2845               	incf	___fldiv@aexp^0,w,c
 13723   0026EA  A4D8               	btfss	status,2,c
 13724   0026EC  EF7A  F013         	goto	u7491
 13725   0026F0  EF7C  F013         	goto	u7490
 13726   0026F4                     u7491:
 13727   0026F4  EF84  F013         	goto	l6566
 13728   0026F8                     u7490:
 13729   0026F8  0E00               	movlw	0
 13730   0026FA  6E31               	movwf	___fldiv@a^0,c
 13731   0026FC  0E00               	movlw	0
 13732   0026FE  6E32               	movwf	(___fldiv@a+1)^0,c
 13733   002700  0E00               	movlw	0
 13734   002702  6E33               	movwf	(___fldiv@a+2)^0,c
 13735   002704  0E00               	movlw	0
 13736   002706  6E34               	movwf	(___fldiv@a+3)^0,c
 13737   002708                     l6566:
 13738   002708  8E33               	bsf	(___fldiv@a+2)^0,7,c
 13739   00270A  0E00               	movlw	0
 13740   00270C  6E34               	movwf	(___fldiv@a+3)^0,c
 13741   00270E  EF91  F013         	goto	l6572
 13742   002712                     l6570:
 13743   002712  0E00               	movlw	0
 13744   002714  6E31               	movwf	___fldiv@a^0,c
 13745   002716  0E00               	movlw	0
 13746   002718  6E32               	movwf	(___fldiv@a+1)^0,c
 13747   00271A  0E00               	movlw	0
 13748   00271C  6E33               	movwf	(___fldiv@a+2)^0,c
 13749   00271E  0E00               	movlw	0
 13750   002720  6E34               	movwf	(___fldiv@a+3)^0,c
 13751   002722                     l6572:
 13752   002722  5031               	movf	___fldiv@a^0,w,c
 13753   002724  1032               	iorwf	(___fldiv@a+1)^0,w,c
 13754   002726  1033               	iorwf	(___fldiv@a+2)^0,w,c
 13755   002728  1034               	iorwf	(___fldiv@a+3)^0,w,c
 13756   00272A  A4D8               	btfss	status,2,c
 13757   00272C  EF9A  F013         	goto	u7501
 13758   002730  EF9C  F013         	goto	u7500
 13759   002734                     u7501:
 13760   002734  EFB4  F013         	goto	l6584
 13761   002738                     u7500:
 13762   002738  0E00               	movlw	0
 13763   00273A  6E2D               	movwf	___fldiv@b^0,c
 13764   00273C  0E00               	movlw	0
 13765   00273E  6E2E               	movwf	(___fldiv@b+1)^0,c
 13766   002740  0E00               	movlw	0
 13767   002742  6E2F               	movwf	(___fldiv@b+2)^0,c
 13768   002744  0E00               	movlw	0
 13769   002746  6E30               	movwf	(___fldiv@b+3)^0,c
 13770   002748  0E80               	movlw	128
 13771   00274A  122F               	iorwf	(___fldiv@b+2)^0,f,c
 13772   00274C  0E7F               	movlw	127
 13773   00274E  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13774   002750                     l6578:
 13775   002750  503D               	movf	___fldiv@sign^0,w,c
 13776   002752  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13777   002754  C02D  F02D         	movff	___fldiv@b,?___fldiv
 13778   002758  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
 13779   00275C  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
 13780   002760  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
 13781   002764  EFF7  F014         	goto	l1292
 13782   002768                     l6584:
 13783   002768  5044               	movf	___fldiv@bexp^0,w,c
 13784   00276A  A4D8               	btfss	status,2,c
 13785   00276C  EFBA  F013         	goto	u7511
 13786   002770  EFBC  F013         	goto	u7510
 13787   002774                     u7511:
 13788   002774  EFC6  F013         	goto	l6592
 13789   002778                     u7510:
 13790   002778  0E00               	movlw	0
 13791   00277A  6E2D               	movwf	?___fldiv^0,c
 13792   00277C  0E00               	movlw	0
 13793   00277E  6E2E               	movwf	(?___fldiv+1)^0,c
 13794   002780  0E00               	movlw	0
 13795   002782  6E2F               	movwf	(?___fldiv+2)^0,c
 13796   002784  0E00               	movlw	0
 13797   002786  6E30               	movwf	(?___fldiv+3)^0,c
 13798   002788  EFF7  F014         	goto	l1292
 13799   00278C                     l6592:
 13800   00278C  5045               	movf	___fldiv@aexp^0,w,c
 13801   00278E  C044  F035         	movff	___fldiv@bexp,??___fldiv
 13802   002792  6A36               	clrf	(??___fldiv+1)^0,c
 13803   002794  5E35               	subwf	??___fldiv^0,f,c
 13804   002796  0E00               	movlw	0
 13805   002798  5A36               	subwfb	(??___fldiv+1)^0,f,c
 13806   00279A  0E7F               	movlw	127
 13807   00279C  2435               	addwf	??___fldiv^0,w,c
 13808   00279E  6E3E               	movwf	___fldiv@new_exp^0,c
 13809   0027A0  0E00               	movlw	0
 13810   0027A2  2036               	addwfc	(??___fldiv+1)^0,w,c
 13811   0027A4  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 13812   0027A6  C02D  F039         	movff	___fldiv@b,___fldiv@rem
 13813   0027AA  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
 13814   0027AE  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
 13815   0027B2  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
 13816   0027B6  0E00               	movlw	0
 13817   0027B8  6E2D               	movwf	___fldiv@b^0,c
 13818   0027BA  0E00               	movlw	0
 13819   0027BC  6E2E               	movwf	(___fldiv@b+1)^0,c
 13820   0027BE  0E00               	movlw	0
 13821   0027C0  6E2F               	movwf	(___fldiv@b+2)^0,c
 13822   0027C2  0E00               	movlw	0
 13823   0027C4  6E30               	movwf	(___fldiv@b+3)^0,c
 13824   0027C6  0E00               	movlw	0
 13825   0027C8  6E40               	movwf	___fldiv@grs^0,c
 13826   0027CA  0E00               	movlw	0
 13827   0027CC  6E41               	movwf	(___fldiv@grs+1)^0,c
 13828   0027CE  0E00               	movlw	0
 13829   0027D0  6E42               	movwf	(___fldiv@grs+2)^0,c
 13830   0027D2  0E00               	movlw	0
 13831   0027D4  6E43               	movwf	(___fldiv@grs+3)^0,c
 13832   0027D6  0E00               	movlw	0
 13833   0027D8  6E45               	movwf	___fldiv@aexp^0,c
 13834   0027DA  EF27  F014         	goto	l1294
 13835   0027DE                     l6602:
 13836   0027DE  5045               	movf	___fldiv@aexp^0,w,c
 13837   0027E0  B4D8               	btfsc	status,2,c
 13838   0027E2  EFF5  F013         	goto	u7521
 13839   0027E6  EFF7  F013         	goto	u7520
 13840   0027EA                     u7521:
 13841   0027EA  EF0E  F014         	goto	l6610
 13842   0027EE                     u7520:
 13843   0027EE  90D8               	bcf	status,0,c
 13844   0027F0  3639               	rlcf	___fldiv@rem^0,f,c
 13845   0027F2  363A               	rlcf	(___fldiv@rem+1)^0,f,c
 13846   0027F4  363B               	rlcf	(___fldiv@rem+2)^0,f,c
 13847   0027F6  363C               	rlcf	(___fldiv@rem+3)^0,f,c
 13848   0027F8  90D8               	bcf	status,0,c
 13849   0027FA  362D               	rlcf	___fldiv@b^0,f,c
 13850   0027FC  362E               	rlcf	(___fldiv@b+1)^0,f,c
 13851   0027FE  362F               	rlcf	(___fldiv@b+2)^0,f,c
 13852   002800  3630               	rlcf	(___fldiv@b+3)^0,f,c
 13853   002802  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13854   002804  EF06  F014         	goto	u7531
 13855   002808  EF08  F014         	goto	u7530
 13856   00280C                     u7531:
 13857   00280C  EF09  F014         	goto	l1297
 13858   002810                     u7530:
 13859   002810  802D               	bsf	___fldiv@b^0,0,c
 13860   002812                     l1297:
 13861   002812  90D8               	bcf	status,0,c
 13862   002814  3640               	rlcf	___fldiv@grs^0,f,c
 13863   002816  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 13864   002818  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 13865   00281A  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 13866   00281C                     l6610:
 13867   00281C  5031               	movf	___fldiv@a^0,w,c
 13868   00281E  5C39               	subwf	___fldiv@rem^0,w,c
 13869   002820  5032               	movf	(___fldiv@a+1)^0,w,c
 13870   002822  583A               	subwfb	(___fldiv@rem+1)^0,w,c
 13871   002824  5033               	movf	(___fldiv@a+2)^0,w,c
 13872   002826  583B               	subwfb	(___fldiv@rem+2)^0,w,c
 13873   002828  5034               	movf	(___fldiv@a+3)^0,w,c
 13874   00282A  583C               	subwfb	(___fldiv@rem+3)^0,w,c
 13875   00282C  A0D8               	btfss	status,0,c
 13876   00282E  EF1B  F014         	goto	u7541
 13877   002832  EF1D  F014         	goto	u7540
 13878   002836                     u7541:
 13879   002836  EF26  F014         	goto	l6616
 13880   00283A                     u7540:
 13881   00283A  8C43               	bsf	(___fldiv@grs+3)^0,6,c
 13882   00283C  5031               	movf	___fldiv@a^0,w,c
 13883   00283E  5E39               	subwf	___fldiv@rem^0,f,c
 13884   002840  5032               	movf	(___fldiv@a+1)^0,w,c
 13885   002842  5A3A               	subwfb	(___fldiv@rem+1)^0,f,c
 13886   002844  5033               	movf	(___fldiv@a+2)^0,w,c
 13887   002846  5A3B               	subwfb	(___fldiv@rem+2)^0,f,c
 13888   002848  5034               	movf	(___fldiv@a+3)^0,w,c
 13889   00284A  5A3C               	subwfb	(___fldiv@rem+3)^0,f,c
 13890   00284C                     l6616:
 13891   00284C  2A45               	incf	___fldiv@aexp^0,f,c
 13892   00284E                     l1294:
 13893   00284E  0E19               	movlw	25
 13894   002850  6445               	cpfsgt	___fldiv@aexp^0,c
 13895   002852  EF2D  F014         	goto	u7551
 13896   002856  EF2F  F014         	goto	u7550
 13897   00285A                     u7551:
 13898   00285A  EFEF  F013         	goto	l6602
 13899   00285E                     u7550:
 13900   00285E  5039               	movf	___fldiv@rem^0,w,c
 13901   002860  103A               	iorwf	(___fldiv@rem+1)^0,w,c
 13902   002862  103B               	iorwf	(___fldiv@rem+2)^0,w,c
 13903   002864  103C               	iorwf	(___fldiv@rem+3)^0,w,c
 13904   002866  B4D8               	btfsc	status,2,c
 13905   002868  EF38  F014         	goto	u7561
 13906   00286C  EF3A  F014         	goto	u7560
 13907   002870                     u7561:
 13908   002870  EF52  F014         	goto	l6628
 13909   002874                     u7560:
 13910   002874  8040               	bsf	___fldiv@grs^0,0,c
 13911   002876  EF52  F014         	goto	l6628
 13912   00287A                     l6622:
 13913   00287A  90D8               	bcf	status,0,c
 13914   00287C  362D               	rlcf	___fldiv@b^0,f,c
 13915   00287E  362E               	rlcf	(___fldiv@b+1)^0,f,c
 13916   002880  362F               	rlcf	(___fldiv@b+2)^0,f,c
 13917   002882  3630               	rlcf	(___fldiv@b+3)^0,f,c
 13918   002884  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13919   002886  EF47  F014         	goto	u7571
 13920   00288A  EF49  F014         	goto	u7570
 13921   00288E                     u7571:
 13922   00288E  EF4A  F014         	goto	l1303
 13923   002892                     u7570:
 13924   002892  802D               	bsf	___fldiv@b^0,0,c
 13925   002894                     l1303:
 13926   002894  90D8               	bcf	status,0,c
 13927   002896  3640               	rlcf	___fldiv@grs^0,f,c
 13928   002898  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 13929   00289A  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 13930   00289C  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 13931   00289E  063E               	decf	___fldiv@new_exp^0,f,c
 13932   0028A0  A0D8               	btfss	status,0,c
 13933   0028A2  063F               	decf	(___fldiv@new_exp+1)^0,f,c
 13934   0028A4                     l6628:
 13935   0028A4  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 13936   0028A6  EF57  F014         	goto	u7581
 13937   0028AA  EF59  F014         	goto	u7580
 13938   0028AE                     u7581:
 13939   0028AE  EF3D  F014         	goto	l6622
 13940   0028B2                     u7580:
 13941   0028B2  0E00               	movlw	0
 13942   0028B4  6E45               	movwf	___fldiv@aexp^0,c
 13943   0028B6  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13944   0028B8  EF60  F014         	goto	u7591
 13945   0028BC  EF62  F014         	goto	u7590
 13946   0028C0                     u7591:
 13947   0028C0  EF86  F014         	goto	l1305
 13948   0028C4                     u7590:
 13949   0028C4  0EFF               	movlw	255
 13950   0028C6  1440               	andwf	___fldiv@grs^0,w,c
 13951   0028C8  6E35               	movwf	??___fldiv^0,c
 13952   0028CA  0EFF               	movlw	255
 13953   0028CC  1441               	andwf	(___fldiv@grs+1)^0,w,c
 13954   0028CE  6E36               	movwf	(??___fldiv+1)^0,c
 13955   0028D0  0EFF               	movlw	255
 13956   0028D2  1442               	andwf	(___fldiv@grs+2)^0,w,c
 13957   0028D4  6E37               	movwf	(??___fldiv+2)^0,c
 13958   0028D6  0E7F               	movlw	127
 13959   0028D8  1443               	andwf	(___fldiv@grs+3)^0,w,c
 13960   0028DA  6E38               	movwf	(??___fldiv+3)^0,c
 13961   0028DC  5035               	movf	??___fldiv^0,w,c
 13962   0028DE  1036               	iorwf	(??___fldiv+1)^0,w,c
 13963   0028E0  1037               	iorwf	(??___fldiv+2)^0,w,c
 13964   0028E2  1038               	iorwf	(??___fldiv+3)^0,w,c
 13965   0028E4  B4D8               	btfsc	status,2,c
 13966   0028E6  EF77  F014         	goto	u7601
 13967   0028EA  EF79  F014         	goto	u7600
 13968   0028EE                     u7601:
 13969   0028EE  EF7D  F014         	goto	l1306
 13970   0028F2                     u7600:
 13971   0028F2                     l6636:
 13972   0028F2  0E01               	movlw	1
 13973   0028F4  6E45               	movwf	___fldiv@aexp^0,c
 13974   0028F6  EF86  F014         	goto	l1305
 13975   0028FA                     l1306:
 13976   0028FA  A02D               	btfss	___fldiv@b^0,0,c
 13977   0028FC  EF82  F014         	goto	u7611
 13978   002900  EF84  F014         	goto	u7610
 13979   002904                     u7611:
 13980   002904  EF86  F014         	goto	l1305
 13981   002908                     u7610:
 13982   002908  EF79  F014         	goto	l6636
 13983   00290C                     l1305:
 13984   00290C  5045               	movf	___fldiv@aexp^0,w,c
 13985   00290E  B4D8               	btfsc	status,2,c
 13986   002910  EF8C  F014         	goto	u7621
 13987   002914  EF8E  F014         	goto	u7620
 13988   002918                     u7621:
 13989   002918  EFB2  F014         	goto	l6648
 13990   00291C                     u7620:
 13991   00291C  0E01               	movlw	1
 13992   00291E  262D               	addwf	___fldiv@b^0,f,c
 13993   002920  0E00               	movlw	0
 13994   002922  222E               	addwfc	(___fldiv@b+1)^0,f,c
 13995   002924  222F               	addwfc	(___fldiv@b+2)^0,f,c
 13996   002926  2230               	addwfc	(___fldiv@b+3)^0,f,c
 13997   002928  A030               	btfss	(___fldiv@b+3)^0,0,c
 13998   00292A  EF99  F014         	goto	u7631
 13999   00292E  EF9B  F014         	goto	u7630
 14000   002932                     u7631:
 14001   002932  EFB2  F014         	goto	l6648
 14002   002936                     u7630:
 14003   002936  C02D  F035         	movff	___fldiv@b,??___fldiv
 14004   00293A  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
 14005   00293E  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
 14006   002942  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
 14007   002946  3438               	rlcf	(??___fldiv+3)^0,w,c
 14008   002948  3238               	rrcf	(??___fldiv+3)^0,f,c
 14009   00294A  3237               	rrcf	(??___fldiv+2)^0,f,c
 14010   00294C  3236               	rrcf	(??___fldiv+1)^0,f,c
 14011   00294E  3235               	rrcf	??___fldiv^0,f,c
 14012   002950  C035  F02D         	movff	??___fldiv,___fldiv@b
 14013   002954  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
 14014   002958  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
 14015   00295C  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
 14016   002960  4A3E               	infsnz	___fldiv@new_exp^0,f,c
 14017   002962  2A3F               	incf	(___fldiv@new_exp+1)^0,f,c
 14018   002964                     l6648:
 14019   002964  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14020   002966  EFBD  F014         	goto	u7641
 14021   00296A  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 14022   00296C  E108               	bnz	u7640
 14023   00296E  283E               	incf	___fldiv@new_exp^0,w,c
 14024   002970  A0D8               	btfss	status,0,c
 14025   002972  EFBD  F014         	goto	u7641
 14026   002976  EFBF  F014         	goto	u7640
 14027   00297A                     u7641:
 14028   00297A  EFCA  F014         	goto	l6652
 14029   00297E                     u7640:
 14030   00297E  0E00               	movlw	0
 14031   002980  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 14032   002982  683E               	setf	___fldiv@new_exp^0,c
 14033   002984  0E00               	movlw	0
 14034   002986  6E2D               	movwf	___fldiv@b^0,c
 14035   002988  0E00               	movlw	0
 14036   00298A  6E2E               	movwf	(___fldiv@b+1)^0,c
 14037   00298C  0E00               	movlw	0
 14038   00298E  6E2F               	movwf	(___fldiv@b+2)^0,c
 14039   002990  0E00               	movlw	0
 14040   002992  6E30               	movwf	(___fldiv@b+3)^0,c
 14041   002994                     l6652:
 14042   002994  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14043   002996  EFD7  F014         	goto	u7650
 14044   00299A  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 14045   00299C  E106               	bnz	u7651
 14046   00299E  043E               	decf	___fldiv@new_exp^0,w,c
 14047   0029A0  B0D8               	btfsc	status,0,c
 14048   0029A2  EFD5  F014         	goto	u7651
 14049   0029A6  EFD7  F014         	goto	u7650
 14050   0029AA                     u7651:
 14051   0029AA  EFE5  F014         	goto	l6656
 14052   0029AE                     u7650:
 14053   0029AE  0E00               	movlw	0
 14054   0029B0  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 14055   0029B2  0E00               	movlw	0
 14056   0029B4  6E3E               	movwf	___fldiv@new_exp^0,c
 14057   0029B6  0E00               	movlw	0
 14058   0029B8  6E2D               	movwf	___fldiv@b^0,c
 14059   0029BA  0E00               	movlw	0
 14060   0029BC  6E2E               	movwf	(___fldiv@b+1)^0,c
 14061   0029BE  0E00               	movlw	0
 14062   0029C0  6E2F               	movwf	(___fldiv@b+2)^0,c
 14063   0029C2  0E00               	movlw	0
 14064   0029C4  6E30               	movwf	(___fldiv@b+3)^0,c
 14065   0029C6  0E00               	movlw	0
 14066   0029C8  6E3D               	movwf	___fldiv@sign^0,c
 14067   0029CA                     l6656:
 14068   0029CA  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
 14069   0029CE  A044               	btfss	___fldiv@bexp^0,0,c
 14070   0029D0  EFEC  F014         	goto	u7661
 14071   0029D4  EFEE  F014         	goto	u7660
 14072   0029D8                     u7661:
 14073   0029D8  EFF1  F014         	goto	l6662
 14074   0029DC                     u7660:
 14075   0029DC  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 14076   0029DE  EFF2  F014         	goto	l6664
 14077   0029E2                     l6662:
 14078   0029E2  9E2F               	bcf	(___fldiv@b+2)^0,7,c
 14079   0029E4                     l6664:
 14080   0029E4  90D8               	bcf	status,0,c
 14081   0029E6  3044               	rrcf	___fldiv@bexp^0,w,c
 14082   0029E8  6E30               	movwf	(___fldiv@b+3)^0,c
 14083   0029EA  EFA8  F013         	goto	l6578
 14084   0029EE                     l1292:
 14085   0029EE  0012               	return		;funcret
 14086   0029F0                     __end_of___fldiv:
 14087                           	callstack 0
 14088                           
 14089 ;; *************** function _dtoa *****************
 14090 ;; Defined at:
 14091 ;;		line 513 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 14092 ;; Parameters:    Size  Location     Type
 14093 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 14094 ;;		 -> NULL(0), sprintf@f(12), 
 14095 ;;  d               2   33[COMRAM] int 
 14096 ;; Auto vars:     Size  Location     Type
 14097 ;;  i               2   42[COMRAM] int 
 14098 ;;  p               2   39[COMRAM] int 
 14099 ;;  w               2   37[COMRAM] int 
 14100 ;;  s               1   41[COMRAM] unsigned char 
 14101 ;; Return value:  Size  Location     Type
 14102 ;;                  1    wreg      void 
 14103 ;; Registers used:
 14104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14105 ;; Tracked objects:
 14106 ;;		On entry : 0/0
 14107 ;;		On exit  : 0/0
 14108 ;;		Unchanged: 0/0
 14109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14111 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14113 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14114 ;;Total ram usage:       13 bytes
 14115 ;; Hardware stack levels used: 1
 14116 ;; Hardware stack levels required when called: 5
 14117 ;; This function calls:
 14118 ;;		___awdiv
 14119 ;;		___awmod
 14120 ;;		_abs
 14121 ;;		_pad
 14122 ;; This function is called by:
 14123 ;;		_vfpfcnvrt
 14124 ;; This function uses a non-reentrant model
 14125 ;;
 14126                           
 14127                           	psect	text50
 14128   003BE0                     __ptext50:
 14129                           	callstack 0
 14130   003BE0                     _dtoa:
 14131                           	callstack 21
 14132   003BE0                     
 14133                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 513: static void dtoa(FILE *fp, vfp
      +                          f_sint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 514: {;D:\MPLABX\Compile
      +                          r\pic\sources\c99\common\doprnt.c: 515:  char s;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 516:     int i, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 518:
      +                            int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 524:     s = d < 0 ? 1 : 0;
 14134   003BE0  BE23               	btfsc	(dtoa@d+1)^0,7,c
 14135   003BE2  EFF5  F01D         	goto	u8451
 14136   003BE6  EFF8  F01D         	goto	u8450
 14137   003BEA                     u8451:
 14138   003BEA  0E01               	movlw	1
 14139   003BEC  EFF9  F01D         	goto	u8460
 14140   003BF0                     u8450:
 14141   003BF0  0E00               	movlw	0
 14142   003BF2                     u8460:
 14143   003BF2  6E2A               	movwf	dtoa@s^0,c
 14144                           
 14145                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 533:     p = (0 <= prec) ? prec : 1
      +                          ;
 14146   003BF4  BE58               	btfsc	(_prec+1)^0,7,c
 14147   003BF6  EF01  F01E         	goto	u8470
 14148   003BFA  EFFF  F01D         	goto	u8471
 14149   003BFE                     u8471:
 14150   003BFE  EF07  F01E         	goto	l1427
 14151   003C02                     u8470:
 14152   003C02  0E00               	movlw	0
 14153   003C04  6E29               	movwf	(dtoa@p+1)^0,c
 14154   003C06  0E01               	movlw	1
 14155   003C08  6E28               	movwf	dtoa@p^0,c
 14156   003C0A  EF0B  F01E         	goto	l1429
 14157   003C0E                     l1427:
 14158   003C0E  C057  F028         	movff	_prec,dtoa@p
 14159   003C12  C058  F029         	movff	_prec+1,dtoa@p+1
 14160   003C16                     l1429:
 14161                           
 14162                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 535:     w = width;
 14163   003C16  C055  F026         	movff	_width,dtoa@w
 14164   003C1A  C056  F027         	movff	_width+1,dtoa@w+1
 14165   003C1E                     
 14166                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 536:     if (s
 14167   003C1E  502A               	movf	dtoa@s^0,w,c
 14168   003C20  B4D8               	btfsc	status,2,c
 14169   003C22  EF15  F01E         	goto	u8481
 14170   003C26  EF17  F01E         	goto	u8480
 14171   003C2A                     u8481:
 14172   003C2A  EF2E  F01E         	goto	l1430
 14173   003C2E                     u8480:
 14174   003C2E                     
 14175                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 540:     ) {;D:\MPLABX\Compiler\pic
      +                          \sources\c99\common\doprnt.c: 541:         --w;
 14176   003C2E  0626               	decf	dtoa@w^0,f,c
 14177   003C30  A0D8               	btfss	status,0,c
 14178   003C32  0627               	decf	(dtoa@w+1)^0,f,c
 14179   003C34                     
 14180                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-' : '+';
 14181   003C34  502A               	movf	dtoa@s^0,w,c
 14182   003C36  A4D8               	btfss	status,2,c
 14183   003C38  EF20  F01E         	goto	u8491
 14184   003C3C  EF22  F01E         	goto	u8490
 14185   003C40                     u8491:
 14186   003C40  EF28  F01E         	goto	l7122
 14187   003C44                     u8490:
 14188   003C44  0E00               	movlw	0
 14189   003C46  6E25               	movwf	(_dtoa$4039+1)^0,c
 14190   003C48  0E2B               	movlw	43
 14191   003C4A  6E24               	movwf	_dtoa$4039^0,c
 14192   003C4C  EF2C  F01E         	goto	l7124
 14193   003C50                     l7122:
 14194   003C50  0E00               	movlw	0
 14195   003C52  6E25               	movwf	(_dtoa$4039+1)^0,c
 14196   003C54  0E2D               	movlw	45
 14197   003C56  6E24               	movwf	_dtoa$4039^0,c
 14198   003C58                     l7124:
 14199   003C58  C024  F02A         	movff	_dtoa$4039,dtoa@s
 14200   003C5C                     l1430:
 14201                           
 14202                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 552:     i = sizeof(dbuf) - 1;
 14203   003C5C  0E00               	movlw	0
 14204   003C5E  6E2C               	movwf	(dtoa@i+1)^0,c
 14205   003C60  0E4F               	movlw	79
 14206   003C62  6E2B               	movwf	dtoa@i^0,c
 14207   003C64                     
 14208                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] = '\0';
 14209   003C64  0E00               	movlw	0
 14210   003C66  0101               	movlb	1	; () banked
 14211   003C68  6F76               	movwf	(_dbuf+79)& (0+255),b
 14212                           
 14213                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 14214   003C6A  EF67  F01E         	goto	l7138
 14215   003C6E                     l7128:
 14216                           
 14217                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 563:     )) {;D:\MPLABX\Compiler\pi
      +                          c\sources\c99\common\doprnt.c: 564:         --i;
 14218   003C6E  062B               	decf	dtoa@i^0,f,c
 14219   003C70  A0D8               	btfss	status,0,c
 14220   003C72  062C               	decf	(dtoa@i+1)^0,f,c
 14221   003C74                     
 14222                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 565:         dbuf[i] = (char)((int)
      +                          '0' + abs(d % 10));
 14223   003C74  0E27               	movlw	low _dbuf
 14224   003C76  242B               	addwf	dtoa@i^0,w,c
 14225   003C78  6ED9               	movwf	fsr2l,c
 14226   003C7A  0E01               	movlw	high _dbuf
 14227   003C7C  202C               	addwfc	(dtoa@i+1)^0,w,c
 14228   003C7E  6EDA               	movwf	fsr2h,c
 14229   003C80  C022  F006         	movff	dtoa@d,___awmod@dividend
 14230   003C84  C023  F007         	movff	dtoa@d+1,___awmod@dividend+1
 14231   003C88  0E00               	movlw	0
 14232   003C8A  6E09               	movwf	(___awmod@divisor+1)^0,c
 14233   003C8C  0E0A               	movlw	10
 14234   003C8E  6E08               	movwf	___awmod@divisor^0,c
 14235   003C90  ECD0  F024         	call	___awmod	;wreg free
 14236   003C94  C006  F00C         	movff	?___awmod,abs@a
 14237   003C98  C007  F00D         	movff	?___awmod+1,abs@a+1
 14238   003C9C  ECDC  F028         	call	_abs	;wreg free
 14239   003CA0  500C               	movf	?_abs^0,w,c
 14240   003CA2  0F30               	addlw	48
 14241   003CA4  6EDF               	movwf	indf2,c
 14242   003CA6                     
 14243                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 567:         --p;
 14244   003CA6  0628               	decf	dtoa@p^0,f,c
 14245   003CA8  A0D8               	btfss	status,0,c
 14246   003CAA  0629               	decf	(dtoa@p+1)^0,f,c
 14247   003CAC                     
 14248                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 571:         --w;
 14249   003CAC  0626               	decf	dtoa@w^0,f,c
 14250   003CAE  A0D8               	btfss	status,0,c
 14251   003CB0  0627               	decf	(dtoa@w+1)^0,f,c
 14252   003CB2                     
 14253                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 572:         d = d / 10;
 14254   003CB2  C022  F018         	movff	dtoa@d,___awdiv@dividend
 14255   003CB6  C023  F019         	movff	dtoa@d+1,___awdiv@dividend+1
 14256   003CBA  0E00               	movlw	0
 14257   003CBC  6E1B               	movwf	(___awdiv@divisor+1)^0,c
 14258   003CBE  0E0A               	movlw	10
 14259   003CC0  6E1A               	movwf	___awdiv@divisor^0,c
 14260   003CC2  EC15  F024         	call	___awdiv	;wreg free
 14261   003CC6  C018  F022         	movff	?___awdiv,dtoa@d
 14262   003CCA  C019  F023         	movff	?___awdiv+1,dtoa@d+1
 14263   003CCE                     l7138:
 14264                           
 14265                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 14266   003CCE  BE2C               	btfsc	(dtoa@i+1)^0,7,c
 14267   003CD0  EF72  F01E         	goto	u8501
 14268   003CD4  502C               	movf	(dtoa@i+1)^0,w,c
 14269   003CD6  E108               	bnz	u8500
 14270   003CD8  042B               	decf	dtoa@i^0,w,c
 14271   003CDA  A0D8               	btfss	status,0,c
 14272   003CDC  EF72  F01E         	goto	u8501
 14273   003CE0  EF74  F01E         	goto	u8500
 14274   003CE4                     u8501:
 14275   003CE4  EF8A  F01E         	goto	l7144
 14276   003CE8                     u8500:
 14277   003CE8  5022               	movf	dtoa@d^0,w,c
 14278   003CEA  1023               	iorwf	(dtoa@d+1)^0,w,c
 14279   003CEC  A4D8               	btfss	status,2,c
 14280   003CEE  EF7B  F01E         	goto	u8511
 14281   003CF2  EF7D  F01E         	goto	u8510
 14282   003CF6                     u8511:
 14283   003CF6  EF37  F01E         	goto	l7128
 14284   003CFA                     u8510:
 14285   003CFA  BE29               	btfsc	(dtoa@p+1)^0,7,c
 14286   003CFC  EF8A  F01E         	goto	u8520
 14287   003D00  5029               	movf	(dtoa@p+1)^0,w,c
 14288   003D02  E106               	bnz	u8521
 14289   003D04  0428               	decf	dtoa@p^0,w,c
 14290   003D06  B0D8               	btfsc	status,0,c
 14291   003D08  EF88  F01E         	goto	u8521
 14292   003D0C  EF8A  F01E         	goto	u8520
 14293   003D10                     u8521:
 14294   003D10  EF37  F01E         	goto	l7128
 14295   003D14                     u8520:
 14296   003D14                     l7144:
 14297                           
 14298                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 576:     if (s != 0) {
 14299   003D14  502A               	movf	dtoa@s^0,w,c
 14300   003D16  B4D8               	btfsc	status,2,c
 14301   003D18  EF90  F01E         	goto	u8531
 14302   003D1C  EF92  F01E         	goto	u8530
 14303   003D20                     u8531:
 14304   003D20  EF9D  F01E         	goto	l7150
 14305   003D24                     u8530:
 14306   003D24                     
 14307                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 577:         --i;
 14308   003D24  062B               	decf	dtoa@i^0,f,c
 14309   003D26  A0D8               	btfss	status,0,c
 14310   003D28  062C               	decf	(dtoa@i+1)^0,f,c
 14311   003D2A                     
 14312                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 578:         dbuf[i] = s;
 14313   003D2A  0E27               	movlw	low _dbuf
 14314   003D2C  242B               	addwf	dtoa@i^0,w,c
 14315   003D2E  6ED9               	movwf	fsr2l,c
 14316   003D30  0E01               	movlw	high _dbuf
 14317   003D32  202C               	addwfc	(dtoa@i+1)^0,w,c
 14318   003D34  6EDA               	movwf	fsr2h,c
 14319   003D36  C02A  FFDF         	movff	dtoa@s,indf2
 14320   003D3A                     l7150:
 14321                           
 14322                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 582:     return (void) pad(fp, &dbu
      +                          f[i], w);
 14323   003D3A  C020  F017         	movff	dtoa@fp,pad@fp
 14324   003D3E  C021  F018         	movff	dtoa@fp+1,pad@fp+1
 14325   003D42  0E27               	movlw	low _dbuf
 14326   003D44  242B               	addwf	dtoa@i^0,w,c
 14327   003D46  6E19               	movwf	pad@buf^0,c
 14328   003D48  0E01               	movlw	high _dbuf
 14329   003D4A  202C               	addwfc	(dtoa@i+1)^0,w,c
 14330   003D4C  6E1A               	movwf	(pad@buf+1)^0,c
 14331   003D4E  C026  F01B         	movff	dtoa@w,pad@p
 14332   003D52  C027  F01C         	movff	dtoa@w+1,pad@p+1
 14333   003D56  ECD4  F025         	call	_pad	;wreg free
 14334   003D5A  0012               	return		;funcret
 14335   003D5C                     __end_of_dtoa:
 14336                           	callstack 0
 14337                           
 14338 ;; *************** function _pad *****************
 14339 ;; Defined at:
 14340 ;;		line 193 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 14341 ;; Parameters:    Size  Location     Type
 14342 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 14343 ;;		 -> NULL(0), sprintf@f(12), 
 14344 ;;  buf             2   24[COMRAM] PTR unsigned char 
 14345 ;;		 -> dbuf(80), 
 14346 ;;  p               2   26[COMRAM] int 
 14347 ;; Auto vars:     Size  Location     Type
 14348 ;;  i               2   29[COMRAM] int 
 14349 ;; Return value:  Size  Location     Type
 14350 ;;                  1    wreg      void 
 14351 ;; Registers used:
 14352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14353 ;; Tracked objects:
 14354 ;;		On entry : 0/0
 14355 ;;		On exit  : 0/0
 14356 ;;		Unchanged: 0/0
 14357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14358 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14361 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14362 ;;Total ram usage:        9 bytes
 14363 ;; Hardware stack levels used: 1
 14364 ;; Hardware stack levels required when called: 4
 14365 ;; This function calls:
 14366 ;;		_fputc
 14367 ;;		_fputs
 14368 ;; This function is called by:
 14369 ;;		_dtoa
 14370 ;;		_efgtoa
 14371 ;;		_utoa
 14372 ;; This function uses a non-reentrant model
 14373 ;;
 14374                           
 14375                           	psect	text51
 14376   004BA8                     __ptext51:
 14377                           	callstack 0
 14378   004BA8                     _pad:
 14379                           	callstack 21
 14380   004BA8                     
 14381                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 193: static void pad(FILE *fp, char
      +                           *buf, int p);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 194: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 195:     int i;;D:\MPLABX\Compiler\pic\sources\c99\
      +                          common\doprnt.c: 199:     if (flags & (1 << 0)) {
 14382   004BA8  A059               	btfss	_flags^0,0,c
 14383   004BAA  EFD9  F025         	goto	u8201
 14384   004BAE  EFDB  F025         	goto	u8200
 14385   004BB2                     u8201:
 14386   004BB2  EFE5  F025         	goto	l7020
 14387   004BB6                     u8200:
 14388   004BB6                     
 14389                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 200:         fputs((const char *)bu
      +                          f, fp);
 14390   004BB6  C019  F010         	movff	pad@buf,fputs@s
 14391   004BBA  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14392   004BBE  C017  F012         	movff	pad@fp,fputs@fp
 14393   004BC2  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14394   004BC6  EC12  F028         	call	_fputs	;wreg free
 14395   004BCA                     l7020:
 14396                           
 14397                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) {
 14398   004BCA  BE1C               	btfsc	(pad@p+1)^0,7,c
 14399   004BCC  EFEC  F025         	goto	u8210
 14400   004BD0  EFEA  F025         	goto	u8211
 14401   004BD4                     u8211:
 14402   004BD4  EFF0  F025         	goto	l1418
 14403   004BD8                     u8210:
 14404   004BD8                     
 14405                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 14406   004BD8  0E00               	movlw	0
 14407   004BDA  6E1C               	movwf	(pad@p+1)^0,c
 14408   004BDC  0E00               	movlw	0
 14409   004BDE  6E1B               	movwf	pad@p^0,c
 14410   004BE0                     l1418:
 14411                           
 14412                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 14413   004BE0  0E00               	movlw	0
 14414   004BE2  6E1F               	movwf	(pad@i+1)^0,c
 14415   004BE4  0E00               	movlw	0
 14416   004BE6  6E1E               	movwf	pad@i^0,c
 14417                           
 14418                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 14419   004BE8  EF02  F026         	goto	l7028
 14420   004BEC                     l7024:
 14421                           
 14422                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 210:         fputc(' ', fp);
 14423   004BEC  0E00               	movlw	0
 14424   004BEE  6E08               	movwf	(fputc@c+1)^0,c
 14425   004BF0  0E20               	movlw	32
 14426   004BF2  6E07               	movwf	fputc@c^0,c
 14427   004BF4  C017  F009         	movff	pad@fp,fputc@fp
 14428   004BF8  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 14429   004BFC  ECB0  F023         	call	_fputc	;wreg free
 14430   004C00                     
 14431                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 211:         ++i;
 14432   004C00  4A1E               	infsnz	pad@i^0,f,c
 14433   004C02  2A1F               	incf	(pad@i+1)^0,f,c
 14434   004C04                     l7028:
 14435                           
 14436                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 14437   004C04  501B               	movf	pad@p^0,w,c
 14438   004C06  5C1E               	subwf	pad@i^0,w,c
 14439   004C08  501F               	movf	(pad@i+1)^0,w,c
 14440   004C0A  0A80               	xorlw	128
 14441   004C0C  6E1D               	movwf	??_pad^0,c
 14442   004C0E  501C               	movf	(pad@p+1)^0,w,c
 14443   004C10  0A80               	xorlw	128
 14444   004C12  581D               	subwfb	??_pad^0,w,c
 14445   004C14  A0D8               	btfss	status,0,c
 14446   004C16  EF0F  F026         	goto	u8221
 14447   004C1A  EF11  F026         	goto	u8220
 14448   004C1E                     u8221:
 14449   004C1E  EFF6  F025         	goto	l7024
 14450   004C22                     u8220:
 14451   004C22                     
 14452                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 216:     if (!(flags & (1 << 0))) {
 14453   004C22  B059               	btfsc	_flags^0,0,c
 14454   004C24  EF16  F026         	goto	u8231
 14455   004C28  EF18  F026         	goto	u8230
 14456   004C2C                     u8231:
 14457   004C2C  EF22  F026         	goto	l1423
 14458   004C30                     u8230:
 14459   004C30                     
 14460                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 218:         fputs((const char *)bu
      +                          f, fp);
 14461   004C30  C019  F010         	movff	pad@buf,fputs@s
 14462   004C34  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14463   004C38  C017  F012         	movff	pad@fp,fputs@fp
 14464   004C3C  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14465   004C40  EC12  F028         	call	_fputs	;wreg free
 14466   004C44                     l1423:
 14467   004C44  0012               	return		;funcret
 14468   004C46                     __end_of_pad:
 14469                           	callstack 0
 14470                           
 14471 ;; *************** function _fputs *****************
 14472 ;; Defined at:
 14473 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputs.c"
 14474 ;; Parameters:    Size  Location     Type
 14475 ;;  s               2   15[COMRAM] PTR const unsigned char 
 14476 ;;		 -> dbuf(80), 
 14477 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 14478 ;;		 -> NULL(0), sprintf@f(12), 
 14479 ;; Auto vars:     Size  Location     Type
 14480 ;;  i               2   20[COMRAM] int 
 14481 ;;  c               1   19[COMRAM] unsigned char 
 14482 ;; Return value:  Size  Location     Type
 14483 ;;                  2   15[COMRAM] int 
 14484 ;; Registers used:
 14485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14486 ;; Tracked objects:
 14487 ;;		On entry : 0/0
 14488 ;;		On exit  : 0/0
 14489 ;;		Unchanged: 0/0
 14490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14491 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14492 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14494 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14495 ;;Total ram usage:        7 bytes
 14496 ;; Hardware stack levels used: 1
 14497 ;; Hardware stack levels required when called: 3
 14498 ;; This function calls:
 14499 ;;		_fputc
 14500 ;; This function is called by:
 14501 ;;		_pad
 14502 ;; This function uses a non-reentrant model
 14503 ;;
 14504                           
 14505                           	psect	text52
 14506   005024                     __ptext52:
 14507                           	callstack 0
 14508   005024                     _fputs:
 14509                           	callstack 21
 14510   005024  0E00               	movlw	0
 14511   005026  6E16               	movwf	(fputs@i+1)^0,c
 14512   005028  0E00               	movlw	0
 14513   00502A  6E15               	movwf	fputs@i^0,c
 14514   00502C  EF23  F028         	goto	l6526
 14515   005030                     l6522:
 14516   005030  C014  F007         	movff	fputs@c,fputc@c
 14517   005034  6A08               	clrf	(fputc@c+1)^0,c
 14518   005036  C012  F009         	movff	fputs@fp,fputc@fp
 14519   00503A  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 14520   00503E  ECB0  F023         	call	_fputc	;wreg free
 14521   005042  4A15               	infsnz	fputs@i^0,f,c
 14522   005044  2A16               	incf	(fputs@i+1)^0,f,c
 14523   005046                     l6526:
 14524   005046  5015               	movf	fputs@i^0,w,c
 14525   005048  2410               	addwf	fputs@s^0,w,c
 14526   00504A  6ED9               	movwf	fsr2l,c
 14527   00504C  5016               	movf	(fputs@i+1)^0,w,c
 14528   00504E  2011               	addwfc	(fputs@s+1)^0,w,c
 14529   005050  6EDA               	movwf	fsr2h,c
 14530   005052  50DF               	movf	indf2,w,c
 14531   005054  6E14               	movwf	fputs@c^0,c
 14532   005056  5014               	movf	fputs@c^0,w,c
 14533   005058  A4D8               	btfss	status,2,c
 14534   00505A  EF31  F028         	goto	u7431
 14535   00505E  EF33  F028         	goto	u7430
 14536   005062                     u7431:
 14537   005062  EF18  F028         	goto	l6522
 14538   005066                     u7430:
 14539   005066  0012               	return		;funcret
 14540   005068                     __end_of_fputs:
 14541                           	callstack 0
 14542                           
 14543 ;; *************** function _fputc *****************
 14544 ;; Defined at:
 14545 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputc.c"
 14546 ;; Parameters:    Size  Location     Type
 14547 ;;  c               2    6[COMRAM] int 
 14548 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 14549 ;;		 -> NULL(0), sprintf@f(12), 
 14550 ;; Auto vars:     Size  Location     Type
 14551 ;;		None
 14552 ;; Return value:  Size  Location     Type
 14553 ;;                  2    6[COMRAM] int 
 14554 ;; Registers used:
 14555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14556 ;; Tracked objects:
 14557 ;;		On entry : 0/0
 14558 ;;		On exit  : 0/0
 14559 ;;		Unchanged: 0/0
 14560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14563 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14564 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14565 ;;Total ram usage:        9 bytes
 14566 ;; Hardware stack levels used: 1
 14567 ;; Hardware stack levels required when called: 2
 14568 ;; This function calls:
 14569 ;;		_putch
 14570 ;; This function is called by:
 14571 ;;		_pad
 14572 ;;		_stoa
 14573 ;;		_vfpfcnvrt
 14574 ;;		_fputs
 14575 ;; This function uses a non-reentrant model
 14576 ;;
 14577                           
 14578                           	psect	text53
 14579   004760                     __ptext53:
 14580                           	callstack 0
 14581   004760                     _fputc:
 14582                           	callstack 21
 14583   004760  5009               	movf	fputc@fp^0,w,c
 14584   004762  100A               	iorwf	(fputc@fp+1)^0,w,c
 14585   004764  B4D8               	btfsc	status,2,c
 14586   004766  EFB7  F023         	goto	u7001
 14587   00476A  EFB9  F023         	goto	u7000
 14588   00476E                     u7001:
 14589   00476E  EFC2  F023         	goto	l6308
 14590   004772                     u7000:
 14591   004772  5009               	movf	fputc@fp^0,w,c
 14592   004774  100A               	iorwf	(fputc@fp+1)^0,w,c
 14593   004776  A4D8               	btfss	status,2,c
 14594   004778  EFC0  F023         	goto	u7011
 14595   00477C  EFC2  F023         	goto	u7010
 14596   004780                     u7011:
 14597   004780  EFC7  F023         	goto	l6310
 14598   004784                     u7010:
 14599   004784                     l6308:
 14600   004784  5007               	movf	fputc@c^0,w,c
 14601   004786  EC40  F029         	call	_putch
 14602   00478A  EF14  F024         	goto	l1652
 14603   00478E                     l6310:
 14604   00478E  EE20 F00A          	lfsr	2,10
 14605   004792  5009               	movf	fputc@fp^0,w,c
 14606   004794  26D9               	addwf	fsr2l,f,c
 14607   004796  500A               	movf	(fputc@fp+1)^0,w,c
 14608   004798  22DA               	addwfc	fsr2h,f,c
 14609   00479A  50DE               	movf	postinc2,w,c
 14610   00479C  10DE               	iorwf	postinc2,w,c
 14611   00479E  B4D8               	btfsc	status,2,c
 14612   0047A0  EFD4  F023         	goto	u7021
 14613   0047A4  EFD6  F023         	goto	u7020
 14614   0047A8                     u7021:
 14615   0047A8  EFF1  F023         	goto	l6314
 14616   0047AC                     u7020:
 14617   0047AC  EE20 F00A          	lfsr	2,10
 14618   0047B0  5009               	movf	fputc@fp^0,w,c
 14619   0047B2  26D9               	addwf	fsr2l,f,c
 14620   0047B4  500A               	movf	(fputc@fp+1)^0,w,c
 14621   0047B6  22DA               	addwfc	fsr2h,f,c
 14622   0047B8  EE10 F003          	lfsr	1,3
 14623   0047BC  5009               	movf	fputc@fp^0,w,c
 14624   0047BE  26E1               	addwf	fsr1l,f,c
 14625   0047C0  500A               	movf	(fputc@fp+1)^0,w,c
 14626   0047C2  22E2               	addwfc	fsr1h,f,c
 14627   0047C4  50DE               	movf	postinc2,w,c
 14628   0047C6  5CE6               	subwf	postinc1,w,c
 14629   0047C8  50E6               	movf	postinc1,w,c
 14630   0047CA  0A80               	xorlw	128
 14631   0047CC  6E0F               	movwf	(??_fputc+4)^0,c
 14632   0047CE  50DE               	movf	postinc2,w,c
 14633   0047D0  0A80               	xorlw	128
 14634   0047D2  580F               	subwfb	(??_fputc+4)^0,w,c
 14635   0047D4  B0D8               	btfsc	status,0,c
 14636   0047D6  EFEF  F023         	goto	u7031
 14637   0047DA  EFF1  F023         	goto	u7030
 14638   0047DE                     u7031:
 14639   0047DE  EF14  F024         	goto	l1652
 14640   0047E2                     u7030:
 14641   0047E2                     l6314:
 14642   0047E2  EE20 F003          	lfsr	2,3
 14643   0047E6  5009               	movf	fputc@fp^0,w,c
 14644   0047E8  26D9               	addwf	fsr2l,f,c
 14645   0047EA  500A               	movf	(fputc@fp+1)^0,w,c
 14646   0047EC  22DA               	addwfc	fsr2h,f,c
 14647   0047EE  CFDE F00B          	movff	postinc2,??_fputc
 14648   0047F2  CFDD F00C          	movff	postdec2,??_fputc+1
 14649   0047F6  C009  FFD9         	movff	fputc@fp,fsr2l
 14650   0047FA  C00A  FFDA         	movff	fputc@fp+1,fsr2h
 14651   0047FE  CFDE F00D          	movff	postinc2,??_fputc+2
 14652   004802  CFDD F00E          	movff	postdec2,??_fputc+3
 14653   004806  500B               	movf	??_fputc^0,w,c
 14654   004808  240D               	addwf	(??_fputc+2)^0,w,c
 14655   00480A  6ED9               	movwf	fsr2l,c
 14656   00480C  500C               	movf	(??_fputc+1)^0,w,c
 14657   00480E  200E               	addwfc	(??_fputc+3)^0,w,c
 14658   004810  6EDA               	movwf	fsr2h,c
 14659   004812  C007  FFDF         	movff	fputc@c,indf2
 14660   004816  EE20 F003          	lfsr	2,3
 14661   00481A  5009               	movf	fputc@fp^0,w,c
 14662   00481C  26D9               	addwf	fsr2l,f,c
 14663   00481E  500A               	movf	(fputc@fp+1)^0,w,c
 14664   004820  22DA               	addwfc	fsr2h,f,c
 14665   004822  2ADE               	incf	postinc2,f,c
 14666   004824  0E00               	movlw	0
 14667   004826  22DD               	addwfc	postdec2,f,c
 14668   004828                     l1652:
 14669   004828  0012               	return		;funcret
 14670   00482A                     __end_of_fputc:
 14671                           	callstack 0
 14672                           
 14673 ;; *************** function _putch *****************
 14674 ;; Defined at:
 14675 ;;		line 11 in file "putch.c"
 14676 ;; Parameters:    Size  Location     Type
 14677 ;;  data            1    wreg     unsigned char 
 14678 ;; Auto vars:     Size  Location     Type
 14679 ;;  data            1    5[COMRAM] unsigned char 
 14680 ;; Return value:  Size  Location     Type
 14681 ;;                  1    wreg      void 
 14682 ;; Registers used:
 14683 ;;		wreg
 14684 ;; Tracked objects:
 14685 ;;		On entry : 0/0
 14686 ;;		On exit  : 0/0
 14687 ;;		Unchanged: 0/0
 14688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14693 ;;Total ram usage:        1 bytes
 14694 ;; Hardware stack levels used: 1
 14695 ;; Hardware stack levels required when called: 1
 14696 ;; This function calls:
 14697 ;;		Nothing
 14698 ;; This function is called by:
 14699 ;;		_fputc
 14700 ;; This function uses a non-reentrant model
 14701 ;;
 14702                           
 14703                           	psect	text54
 14704   005280                     __ptext54:
 14705                           	callstack 0
 14706   005280                     _putch:
 14707                           	callstack 21
 14708                           
 14709                           ;incstack = 0
 14710                           ;putch@data stored from wreg
 14711   005280  6E06               	movwf	putch@data^0,c
 14712   005282                     l270:
 14713   005282  A89E               	btfss	3998,4,c	;volatile
 14714   005284  EF46  F029         	goto	u6991
 14715   005288  EF48  F029         	goto	u6990
 14716   00528C                     u6991:
 14717   00528C  EF41  F029         	goto	l270
 14718   005290                     u6990:
 14719   005290                     
 14720                           ;putch.c: 13:     TXREG1 = data;
 14721   005290  C006  FFAD         	movff	putch@data,4013	;volatile
 14722   005294  0012               	return		;funcret
 14723   005296                     __end_of_putch:
 14724                           	callstack 0
 14725                           
 14726 ;; *************** function _abs *****************
 14727 ;; Defined at:
 14728 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\abs.c"
 14729 ;; Parameters:    Size  Location     Type
 14730 ;;  a               2   11[COMRAM] int 
 14731 ;; Auto vars:     Size  Location     Type
 14732 ;;		None
 14733 ;; Return value:  Size  Location     Type
 14734 ;;                  2   11[COMRAM] int 
 14735 ;; Registers used:
 14736 ;;		wreg, status,2, status,0
 14737 ;; Tracked objects:
 14738 ;;		On entry : 0/0
 14739 ;;		On exit  : 0/0
 14740 ;;		Unchanged: 0/0
 14741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14745 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14746 ;;Total ram usage:        4 bytes
 14747 ;; Hardware stack levels used: 1
 14748 ;; Hardware stack levels required when called: 1
 14749 ;; This function calls:
 14750 ;;		Nothing
 14751 ;; This function is called by:
 14752 ;;		_dtoa
 14753 ;; This function uses a non-reentrant model
 14754 ;;
 14755                           
 14756                           	psect	text55
 14757   0051B8                     __ptext55:
 14758                           	callstack 0
 14759   0051B8                     _abs:
 14760                           	callstack 24
 14761   0051B8  BE0D               	btfsc	(abs@a+1)^0,7,c
 14762   0051BA  EFE1  F028         	goto	u8241
 14763   0051BE  EFE3  F028         	goto	u8240
 14764   0051C2                     u8241:
 14765   0051C2  EFE9  F028         	goto	l1611
 14766   0051C6                     u8240:
 14767   0051C6  C00C  F00C         	movff	abs@a,?_abs
 14768   0051CA  C00D  F00D         	movff	abs@a+1,?_abs+1
 14769   0051CE  EFF5  F028         	goto	l1614
 14770   0051D2                     l1611:
 14771   0051D2  C00C  F00E         	movff	abs@a,??_abs
 14772   0051D6  C00D  F00F         	movff	abs@a+1,??_abs+1
 14773   0051DA  1E0E               	comf	??_abs^0,f,c
 14774   0051DC  1E0F               	comf	(??_abs+1)^0,f,c
 14775   0051DE  4A0E               	infsnz	??_abs^0,f,c
 14776   0051E0  2A0F               	incf	(??_abs+1)^0,f,c
 14777   0051E2  C00E  F00C         	movff	??_abs,?_abs
 14778   0051E6  C00F  F00D         	movff	??_abs+1,?_abs+1
 14779   0051EA                     l1614:
 14780   0051EA  0012               	return		;funcret
 14781   0051EC                     __end_of_abs:
 14782                           	callstack 0
 14783                           
 14784 ;; *************** function ___awmod *****************
 14785 ;; Defined at:
 14786 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awmod.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;  dividend        2    5[COMRAM] int 
 14789 ;;  divisor         2    7[COMRAM] int 
 14790 ;; Auto vars:     Size  Location     Type
 14791 ;;  sign            1   10[COMRAM] unsigned char 
 14792 ;;  counter         1    9[COMRAM] unsigned char 
 14793 ;; Return value:  Size  Location     Type
 14794 ;;                  2    5[COMRAM] int 
 14795 ;; Registers used:
 14796 ;;		wreg, status,2, status,0
 14797 ;; Tracked objects:
 14798 ;;		On entry : 0/0
 14799 ;;		On exit  : 0/0
 14800 ;;		Unchanged: 0/0
 14801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14802 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14803 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14805 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14806 ;;Total ram usage:        6 bytes
 14807 ;; Hardware stack levels used: 1
 14808 ;; Hardware stack levels required when called: 1
 14809 ;; This function calls:
 14810 ;;		Nothing
 14811 ;; This function is called by:
 14812 ;;		_dtoa
 14813 ;; This function uses a non-reentrant model
 14814 ;;
 14815                           
 14816                           	psect	text56
 14817   0049A0                     __ptext56:
 14818                           	callstack 0
 14819   0049A0                     ___awmod:
 14820                           	callstack 24
 14821   0049A0  0E00               	movlw	0
 14822   0049A2  6E0B               	movwf	___awmod@sign^0,c
 14823   0049A4  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 14824   0049A6  EFD9  F024         	goto	u7920
 14825   0049AA  EFD7  F024         	goto	u7921
 14826   0049AE                     u7921:
 14827   0049AE  EFDF  F024         	goto	l6860
 14828   0049B2                     u7920:
 14829   0049B2  6C06               	negf	___awmod@dividend^0,c
 14830   0049B4  1E07               	comf	(___awmod@dividend+1)^0,f,c
 14831   0049B6  B0D8               	btfsc	status,0,c
 14832   0049B8  2A07               	incf	(___awmod@dividend+1)^0,f,c
 14833   0049BA  0E01               	movlw	1
 14834   0049BC  6E0B               	movwf	___awmod@sign^0,c
 14835   0049BE                     l6860:
 14836   0049BE  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 14837   0049C0  EFE6  F024         	goto	u7930
 14838   0049C4  EFE4  F024         	goto	u7931
 14839   0049C8                     u7931:
 14840   0049C8  EFEA  F024         	goto	l6864
 14841   0049CC                     u7930:
 14842   0049CC  6C08               	negf	___awmod@divisor^0,c
 14843   0049CE  1E09               	comf	(___awmod@divisor+1)^0,f,c
 14844   0049D0  B0D8               	btfsc	status,0,c
 14845   0049D2  2A09               	incf	(___awmod@divisor+1)^0,f,c
 14846   0049D4                     l6864:
 14847   0049D4  5008               	movf	___awmod@divisor^0,w,c
 14848   0049D6  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 14849   0049D8  B4D8               	btfsc	status,2,c
 14850   0049DA  EFF1  F024         	goto	u7941
 14851   0049DE  EFF3  F024         	goto	u7940
 14852   0049E2                     u7941:
 14853   0049E2  EF17  F025         	goto	l6880
 14854   0049E6                     u7940:
 14855   0049E6  0E01               	movlw	1
 14856   0049E8  6E0A               	movwf	___awmod@counter^0,c
 14857   0049EA  EFFB  F024         	goto	l6870
 14858   0049EE                     l6868:
 14859   0049EE  90D8               	bcf	status,0,c
 14860   0049F0  3608               	rlcf	___awmod@divisor^0,f,c
 14861   0049F2  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 14862   0049F4  2A0A               	incf	___awmod@counter^0,f,c
 14863   0049F6                     l6870:
 14864   0049F6  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 14865   0049F8  EF00  F025         	goto	u7951
 14866   0049FC  EF02  F025         	goto	u7950
 14867   004A00                     u7951:
 14868   004A00  EFF7  F024         	goto	l6868
 14869   004A04                     u7950:
 14870   004A04                     l6872:
 14871   004A04  5008               	movf	___awmod@divisor^0,w,c
 14872   004A06  5C06               	subwf	___awmod@dividend^0,w,c
 14873   004A08  5009               	movf	(___awmod@divisor+1)^0,w,c
 14874   004A0A  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 14875   004A0C  A0D8               	btfss	status,0,c
 14876   004A0E  EF0B  F025         	goto	u7961
 14877   004A12  EF0D  F025         	goto	u7960
 14878   004A16                     u7961:
 14879   004A16  EF11  F025         	goto	l6876
 14880   004A1A                     u7960:
 14881   004A1A  5008               	movf	___awmod@divisor^0,w,c
 14882   004A1C  5E06               	subwf	___awmod@dividend^0,f,c
 14883   004A1E  5009               	movf	(___awmod@divisor+1)^0,w,c
 14884   004A20  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 14885   004A22                     l6876:
 14886   004A22  90D8               	bcf	status,0,c
 14887   004A24  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 14888   004A26  3208               	rrcf	___awmod@divisor^0,f,c
 14889   004A28  2E0A               	decfsz	___awmod@counter^0,f,c
 14890   004A2A  EF02  F025         	goto	l6872
 14891   004A2E                     l6880:
 14892   004A2E  500B               	movf	___awmod@sign^0,w,c
 14893   004A30  B4D8               	btfsc	status,2,c
 14894   004A32  EF1D  F025         	goto	u7971
 14895   004A36  EF1F  F025         	goto	u7970
 14896   004A3A                     u7971:
 14897   004A3A  EF23  F025         	goto	l6884
 14898   004A3E                     u7970:
 14899   004A3E  6C06               	negf	___awmod@dividend^0,c
 14900   004A40  1E07               	comf	(___awmod@dividend+1)^0,f,c
 14901   004A42  B0D8               	btfsc	status,0,c
 14902   004A44  2A07               	incf	(___awmod@dividend+1)^0,f,c
 14903   004A46                     l6884:
 14904   004A46  C006  F006         	movff	___awmod@dividend,?___awmod
 14905   004A4A  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 14906   004A4E  0012               	return		;funcret
 14907   004A50                     __end_of___awmod:
 14908                           	callstack 0
 14909                           
 14910 ;; *************** function ___awdiv *****************
 14911 ;; Defined at:
 14912 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awdiv.c"
 14913 ;; Parameters:    Size  Location     Type
 14914 ;;  dividend        2   23[COMRAM] int 
 14915 ;;  divisor         2   25[COMRAM] int 
 14916 ;; Auto vars:     Size  Location     Type
 14917 ;;  quotient        2   29[COMRAM] int 
 14918 ;;  sign            1   28[COMRAM] unsigned char 
 14919 ;;  counter         1   27[COMRAM] unsigned char 
 14920 ;; Return value:  Size  Location     Type
 14921 ;;                  2   23[COMRAM] int 
 14922 ;; Registers used:
 14923 ;;		wreg, status,2, status,0
 14924 ;; Tracked objects:
 14925 ;;		On entry : 0/0
 14926 ;;		On exit  : 0/0
 14927 ;;		Unchanged: 0/0
 14928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14929 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14930 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14932 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14933 ;;Total ram usage:        8 bytes
 14934 ;; Hardware stack levels used: 1
 14935 ;; Hardware stack levels required when called: 1
 14936 ;; This function calls:
 14937 ;;		Nothing
 14938 ;; This function is called by:
 14939 ;;		_runPWM
 14940 ;;		_runGAME
 14941 ;;		_dtoa
 14942 ;; This function uses a non-reentrant model
 14943 ;;
 14944                           
 14945                           	psect	text57
 14946   00482A                     __ptext57:
 14947                           	callstack 0
 14948   00482A                     ___awdiv:
 14949                           	callstack 24
 14950   00482A  0E00               	movlw	0
 14951   00482C  6E1D               	movwf	___awdiv@sign^0,c
 14952   00482E  BE1B               	btfsc	(___awdiv@divisor+1)^0,7,c
 14953   004830  EF1E  F024         	goto	u7860
 14954   004834  EF1C  F024         	goto	u7861
 14955   004838                     u7861:
 14956   004838  EF24  F024         	goto	l6816
 14957   00483C                     u7860:
 14958   00483C  6C1A               	negf	___awdiv@divisor^0,c
 14959   00483E  1E1B               	comf	(___awdiv@divisor+1)^0,f,c
 14960   004840  B0D8               	btfsc	status,0,c
 14961   004842  2A1B               	incf	(___awdiv@divisor+1)^0,f,c
 14962   004844  0E01               	movlw	1
 14963   004846  6E1D               	movwf	___awdiv@sign^0,c
 14964   004848                     l6816:
 14965   004848  BE19               	btfsc	(___awdiv@dividend+1)^0,7,c
 14966   00484A  EF2B  F024         	goto	u7870
 14967   00484E  EF29  F024         	goto	u7871
 14968   004852                     u7871:
 14969   004852  EF31  F024         	goto	l6822
 14970   004856                     u7870:
 14971   004856  6C18               	negf	___awdiv@dividend^0,c
 14972   004858  1E19               	comf	(___awdiv@dividend+1)^0,f,c
 14973   00485A  B0D8               	btfsc	status,0,c
 14974   00485C  2A19               	incf	(___awdiv@dividend+1)^0,f,c
 14975   00485E  0E01               	movlw	1
 14976   004860  1A1D               	xorwf	___awdiv@sign^0,f,c
 14977   004862                     l6822:
 14978   004862  0E00               	movlw	0
 14979   004864  6E1F               	movwf	(___awdiv@quotient+1)^0,c
 14980   004866  0E00               	movlw	0
 14981   004868  6E1E               	movwf	___awdiv@quotient^0,c
 14982   00486A  501A               	movf	___awdiv@divisor^0,w,c
 14983   00486C  101B               	iorwf	(___awdiv@divisor+1)^0,w,c
 14984   00486E  B4D8               	btfsc	status,2,c
 14985   004870  EF3C  F024         	goto	u7881
 14986   004874  EF3E  F024         	goto	u7880
 14987   004878                     u7881:
 14988   004878  EF66  F024         	goto	l6844
 14989   00487C                     u7880:
 14990   00487C  0E01               	movlw	1
 14991   00487E  6E1C               	movwf	___awdiv@counter^0,c
 14992   004880  EF46  F024         	goto	l6830
 14993   004884                     l6828:
 14994   004884  90D8               	bcf	status,0,c
 14995   004886  361A               	rlcf	___awdiv@divisor^0,f,c
 14996   004888  361B               	rlcf	(___awdiv@divisor+1)^0,f,c
 14997   00488A  2A1C               	incf	___awdiv@counter^0,f,c
 14998   00488C                     l6830:
 14999   00488C  AE1B               	btfss	(___awdiv@divisor+1)^0,7,c
 15000   00488E  EF4B  F024         	goto	u7891
 15001   004892  EF4D  F024         	goto	u7890
 15002   004896                     u7891:
 15003   004896  EF42  F024         	goto	l6828
 15004   00489A                     u7890:
 15005   00489A                     l6832:
 15006   00489A  90D8               	bcf	status,0,c
 15007   00489C  361E               	rlcf	___awdiv@quotient^0,f,c
 15008   00489E  361F               	rlcf	(___awdiv@quotient+1)^0,f,c
 15009   0048A0  501A               	movf	___awdiv@divisor^0,w,c
 15010   0048A2  5C18               	subwf	___awdiv@dividend^0,w,c
 15011   0048A4  501B               	movf	(___awdiv@divisor+1)^0,w,c
 15012   0048A6  5819               	subwfb	(___awdiv@dividend+1)^0,w,c
 15013   0048A8  A0D8               	btfss	status,0,c
 15014   0048AA  EF59  F024         	goto	u7901
 15015   0048AE  EF5B  F024         	goto	u7900
 15016   0048B2                     u7901:
 15017   0048B2  EF60  F024         	goto	l6840
 15018   0048B6                     u7900:
 15019   0048B6  501A               	movf	___awdiv@divisor^0,w,c
 15020   0048B8  5E18               	subwf	___awdiv@dividend^0,f,c
 15021   0048BA  501B               	movf	(___awdiv@divisor+1)^0,w,c
 15022   0048BC  5A19               	subwfb	(___awdiv@dividend+1)^0,f,c
 15023   0048BE  801E               	bsf	___awdiv@quotient^0,0,c
 15024   0048C0                     l6840:
 15025   0048C0  90D8               	bcf	status,0,c
 15026   0048C2  321B               	rrcf	(___awdiv@divisor+1)^0,f,c
 15027   0048C4  321A               	rrcf	___awdiv@divisor^0,f,c
 15028   0048C6  2E1C               	decfsz	___awdiv@counter^0,f,c
 15029   0048C8  EF4D  F024         	goto	l6832
 15030   0048CC                     l6844:
 15031   0048CC  501D               	movf	___awdiv@sign^0,w,c
 15032   0048CE  B4D8               	btfsc	status,2,c
 15033   0048D0  EF6C  F024         	goto	u7911
 15034   0048D4  EF6E  F024         	goto	u7910
 15035   0048D8                     u7911:
 15036   0048D8  EF72  F024         	goto	l6848
 15037   0048DC                     u7910:
 15038   0048DC  6C1E               	negf	___awdiv@quotient^0,c
 15039   0048DE  1E1F               	comf	(___awdiv@quotient+1)^0,f,c
 15040   0048E0  B0D8               	btfsc	status,0,c
 15041   0048E2  2A1F               	incf	(___awdiv@quotient+1)^0,f,c
 15042   0048E4                     l6848:
 15043   0048E4  C01E  F018         	movff	___awdiv@quotient,?___awdiv
 15044   0048E8  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
 15045   0048EC  0012               	return		;funcret
 15046   0048EE                     __end_of___awdiv:
 15047                           	callstack 0
 15048                           
 15049 ;; *************** function _LCD_ShowString *****************
 15050 ;; Defined at:
 15051 ;;		line 55 in file "lcd.c"
 15052 ;; Parameters:    Size  Location     Type
 15053 ;;  lineNum         1    wreg     unsigned char 
 15054 ;;  textData        2    6[COMRAM] PTR unsigned char 
 15055 ;;		 -> STR_35(17), runGAME@approxText(25), runGAME@text(17), runADC@text(17), 
 15056 ;;		 -> moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_17(17), STR_16(17), 
 15057 ;;		 -> STR_15(17), STR_14(17), STR_13(17), STR_12(17), 
 15058 ;;		 -> STR_11(17), STR_10(17), STR_9(17), STR_8(17), 
 15059 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 15060 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
 15061 ;; Auto vars:     Size  Location     Type
 15062 ;;  lineNum         1   10[COMRAM] unsigned char 
 15063 ;;  i               1   11[COMRAM] unsigned char 
 15064 ;; Return value:  Size  Location     Type
 15065 ;;                  1    wreg      void 
 15066 ;; Registers used:
 15067 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15068 ;; Tracked objects:
 15069 ;;		On entry : 0/0
 15070 ;;		On exit  : 0/0
 15071 ;;		Unchanged: 0/0
 15072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15074 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15075 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15076 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15077 ;;Total ram usage:        6 bytes
 15078 ;; Hardware stack levels used: 1
 15079 ;; Hardware stack levels required when called: 2
 15080 ;; This function calls:
 15081 ;;		_LCD_Send
 15082 ;; This function is called by:
 15083 ;;		_main
 15084 ;;		_moveDisplay
 15085 ;;		_runADC
 15086 ;;		_runGAME
 15087 ;; This function uses a non-reentrant model
 15088 ;;
 15089                           
 15090                           	psect	text58
 15091   0048EE                     __ptext58:
 15092                           	callstack 0
 15093   0048EE                     _LCD_ShowString:
 15094                           	callstack 27
 15095                           
 15096                           ;incstack = 0
 15097                           ;LCD_ShowString@lineNum stored from wreg
 15098   0048EE  6E0B               	movwf	LCD_ShowString@lineNum^0,c
 15099   0048F0                     
 15100                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 15101   0048F0  806B               	bsf	107,0,c	;volatile
 15102   0048F2                     l132:
 15103   0048F2  B06B               	btfsc	107,0,c	;volatile
 15104   0048F4  EF7E  F024         	goto	u9361
 15105   0048F8  EF80  F024         	goto	u9360
 15106   0048FC                     u9361:
 15107   0048FC  EF79  F024         	goto	l132
 15108   004900                     u9360:
 15109   004900                     
 15110                           ;lcd.c: 62:     SSP2IF = 0;
 15111   004900  9EA4               	bcf	4004,7,c	;volatile
 15112   004902                     
 15113                           ;lcd.c: 64:     LCD_Send(0x7c);
 15114   004902  0E7C               	movlw	124
 15115   004904  EC1D  F029         	call	_LCD_Send
 15116                           
 15117                           ;lcd.c: 66:     LCD_Send(0x80);
 15118   004908  0E80               	movlw	128
 15119   00490A  EC1D  F029         	call	_LCD_Send
 15120   00490E                     
 15121                           ;lcd.c: 68:     if(lineNum == 1){
 15122   00490E  040B               	decf	LCD_ShowString@lineNum^0,w,c
 15123   004910  A4D8               	btfss	status,2,c
 15124   004912  EF8D  F024         	goto	u9371
 15125   004916  EF8F  F024         	goto	u9370
 15126   00491A                     u9371:
 15127   00491A  EF94  F024         	goto	l7750
 15128   00491E                     u9370:
 15129   00491E                     
 15130                           ;lcd.c: 69:         LCD_Send(0x80);
 15131   00491E  0E80               	movlw	128
 15132   004920  EC1D  F029         	call	_LCD_Send
 15133                           
 15134                           ;lcd.c: 70:     }
 15135   004924  EFA0  F024         	goto	l136
 15136   004928                     l7750:
 15137   004928  0E02               	movlw	2
 15138   00492A  180B               	xorwf	LCD_ShowString@lineNum^0,w,c
 15139   00492C  A4D8               	btfss	status,2,c
 15140   00492E  EF9B  F024         	goto	u9381
 15141   004932  EF9D  F024         	goto	u9380
 15142   004936                     u9381:
 15143   004936  EFA0  F024         	goto	l136
 15144   00493A                     u9380:
 15145   00493A                     
 15146                           ;lcd.c: 72:         LCD_Send(0xC0);
 15147   00493A  0EC0               	movlw	192
 15148   00493C  EC1D  F029         	call	_LCD_Send
 15149   004940                     l136:
 15150                           
 15151                           ;lcd.c: 75:     LCD_Send(0x40);
 15152   004940  0E40               	movlw	64
 15153   004942  EC1D  F029         	call	_LCD_Send
 15154   004946                     
 15155                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 15156   004946  0E00               	movlw	0
 15157   004948  6E0C               	movwf	LCD_ShowString@i^0,c
 15158   00494A                     l7760:
 15159                           
 15160                           ;lcd.c: 78:         LCD_Send(textData[i]);
 15161   00494A  500C               	movf	LCD_ShowString@i^0,w,c
 15162   00494C  2407               	addwf	LCD_ShowString@textData^0,w,c
 15163   00494E  6E09               	movwf	??_LCD_ShowString^0,c
 15164   004950  0E00               	movlw	0
 15165   004952  2008               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 15166   004954  6E0A               	movwf	(??_LCD_ShowString+1)^0,c
 15167   004956  C009  FFF6         	movff	??_LCD_ShowString,tblptrl
 15168   00495A  C00A  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 15169   00495E  0E00               	movlw	low (__mediumconst shr (0+16))
 15170   004960  6EF8               	movwf	tblptru,c
 15171   004962  0E0F               	movlw	(high __ramtop+-1)
 15172   004964  64F7               	cpfsgt	tblptrh,c
 15173   004966  D003               	bra	u9397
 15174   004968  0008               	tblrd		*
 15175   00496A  50F5               	movf	tablat,w,c
 15176   00496C  D005               	bra	u9390
 15177   00496E                     u9397:
 15178   00496E  CFF6 FFE1          	movff	tblptrl,fsr1l
 15179   004972  CFF7 FFE2          	movff	tblptrh,fsr1h
 15180   004976  50E7               	movf	indf1,w,c
 15181   004978                     u9390:
 15182   004978  EC1D  F029         	call	_LCD_Send
 15183   00497C                     
 15184                           ;lcd.c: 79:     }
 15185   00497C  2A0C               	incf	LCD_ShowString@i^0,f,c
 15186   00497E  0E0F               	movlw	15
 15187   004980  640C               	cpfsgt	LCD_ShowString@i^0,c
 15188   004982  EFC5  F024         	goto	u9401
 15189   004986  EFC7  F024         	goto	u9400
 15190   00498A                     u9401:
 15191   00498A  EFA5  F024         	goto	l7760
 15192   00498E                     u9400:
 15193   00498E                     
 15194                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 15195   00498E  846B               	bsf	107,2,c	;volatile
 15196   004990                     l140:
 15197   004990  B46B               	btfsc	107,2,c	;volatile
 15198   004992  EFCD  F024         	goto	u9411
 15199   004996  EFCF  F024         	goto	u9410
 15200   00499A                     u9411:
 15201   00499A  EFC8  F024         	goto	l140
 15202   00499E                     u9410:
 15203   00499E  0012               	return		;funcret
 15204   0049A0                     __end_of_LCD_ShowString:
 15205                           	callstack 0
 15206                           
 15207 ;; *************** function _LCD_Clear *****************
 15208 ;; Defined at:
 15209 ;;		line 94 in file "lcd.c"
 15210 ;; Parameters:    Size  Location     Type
 15211 ;;		None
 15212 ;; Auto vars:     Size  Location     Type
 15213 ;;		None
 15214 ;; Return value:  Size  Location     Type
 15215 ;;                  1    wreg      void 
 15216 ;; Registers used:
 15217 ;;		wreg, cstack
 15218 ;; Tracked objects:
 15219 ;;		On entry : 0/0
 15220 ;;		On exit  : 0/0
 15221 ;;		Unchanged: 0/0
 15222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15227 ;;Total ram usage:        0 bytes
 15228 ;; Hardware stack levels used: 1
 15229 ;; Hardware stack levels required when called: 2
 15230 ;; This function calls:
 15231 ;;		_LCD_Send
 15232 ;; This function is called by:
 15233 ;;		_moveDisplay
 15234 ;; This function uses a non-reentrant model
 15235 ;;
 15236                           
 15237                           	psect	text59
 15238   00514E                     __ptext59:
 15239                           	callstack 0
 15240   00514E                     _LCD_Clear:
 15241                           	callstack 27
 15242   00514E                     
 15243                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
 15244   00514E  806B               	bsf	107,0,c	;volatile
 15245   005150                     l155:
 15246   005150  B06B               	btfsc	107,0,c	;volatile
 15247   005152  EFAD  F028         	goto	u9421
 15248   005156  EFAF  F028         	goto	u9420
 15249   00515A                     u9421:
 15250   00515A  EFA8  F028         	goto	l155
 15251   00515E                     u9420:
 15252   00515E                     
 15253                           ;lcd.c: 97:     SSP2IF = 0;
 15254   00515E  9EA4               	bcf	4004,7,c	;volatile
 15255   005160                     
 15256                           ;lcd.c: 99:     LCD_Send(0x7C);
 15257   005160  0E7C               	movlw	124
 15258   005162  EC1D  F029         	call	_LCD_Send
 15259                           
 15260                           ;lcd.c: 100:     LCD_Send(0x80);
 15261   005166  0E80               	movlw	128
 15262   005168  EC1D  F029         	call	_LCD_Send
 15263                           
 15264                           ;lcd.c: 101:     LCD_Send(0x01);
 15265   00516C  0E01               	movlw	1
 15266   00516E  EC1D  F029         	call	_LCD_Send
 15267   005172                     
 15268                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
 15269   005172  846B               	bsf	107,2,c	;volatile
 15270   005174                     l158:
 15271   005174  B46B               	btfsc	107,2,c	;volatile
 15272   005176  EFBF  F028         	goto	u9431
 15273   00517A  EFC1  F028         	goto	u9430
 15274   00517E                     u9431:
 15275   00517E  EFBA  F028         	goto	l158
 15276   005182                     u9430:
 15277   005182  0012               	return		;funcret
 15278   005184                     __end_of_LCD_Clear:
 15279                           	callstack 0
 15280                           
 15281 ;; *************** function _LCD_Init *****************
 15282 ;; Defined at:
 15283 ;;		line 3 in file "lcd.c"
 15284 ;; Parameters:    Size  Location     Type
 15285 ;;		None
 15286 ;; Auto vars:     Size  Location     Type
 15287 ;;		None
 15288 ;; Return value:  Size  Location     Type
 15289 ;;                  1    wreg      void 
 15290 ;; Registers used:
 15291 ;;		wreg, status,2, cstack
 15292 ;; Tracked objects:
 15293 ;;		On entry : 0/0
 15294 ;;		On exit  : 0/0
 15295 ;;		Unchanged: 0/0
 15296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15301 ;;Total ram usage:        1 bytes
 15302 ;; Hardware stack levels used: 1
 15303 ;; Hardware stack levels required when called: 2
 15304 ;; This function calls:
 15305 ;;		_LCD_Send
 15306 ;; This function is called by:
 15307 ;;		_main
 15308 ;; This function uses a non-reentrant model
 15309 ;;
 15310                           
 15311                           	psect	text60
 15312   004686                     __ptext60:
 15313                           	callstack 0
 15314   004686                     _LCD_Init:
 15315                           	callstack 28
 15316   004686                     
 15317                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 15318   004686  010F               	movlb	15	; () banked
 15319   004688  913B               	bcf	59,0,b	;volatile
 15320                           
 15321                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 15322   00468A  933B               	bcf	59,1,b	;volatile
 15323                           
 15324                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 15325   00468C  8095               	bsf	149,0,c	;volatile
 15326                           
 15327                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 15328   00468E  8295               	bsf	149,1,c	;volatile
 15329                           
 15330                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 15331   004690  9092               	bcf	146,0,c	;volatile
 15332                           
 15333                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 15334   004692  8089               	bsf	137,0,c	;volatile
 15335   004694                     
 15336                           ; BSR set to: 15
 15337                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 15338   004694  506C               	movf	108,w,c	;volatile
 15339   004696  0BF0               	andlw	-16
 15340   004698  0908               	iorlw	8
 15341   00469A  6E6C               	movwf	108,c	;volatile
 15342                           
 15343                           ;lcd.c: 15:     SSP2ADD = 19;
 15344   00469C  0E13               	movlw	19
 15345   00469E  6E6E               	movwf	110,c	;volatile
 15346   0046A0                     
 15347                           ; BSR set to: 15
 15348                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 15349   0046A0  8A6C               	bsf	108,5,c	;volatile
 15350   0046A2                     
 15351                           ; BSR set to: 15
 15352                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 15353   0046A2  0E34               	movlw	52
 15354   0046A4  6E07               	movwf	??_LCD_Init^0,c
 15355   0046A6  0EF2               	movlw	242
 15356   0046A8                     u10527:
 15357   0046A8  2EE8               	decfsz	wreg,f,c
 15358   0046AA  D7FE               	bra	u10527
 15359   0046AC  2E07               	decfsz	??_LCD_Init^0,f,c
 15360   0046AE  D7FC               	bra	u10527
 15361   0046B0                     
 15362                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 15363   0046B0  806B               	bsf	107,0,c	;volatile
 15364   0046B2                     l123:
 15365   0046B2  B06B               	btfsc	107,0,c	;volatile
 15366   0046B4  EF5E  F023         	goto	u9701
 15367   0046B8  EF60  F023         	goto	u9700
 15368   0046BC                     u9701:
 15369   0046BC  EF59  F023         	goto	l123
 15370   0046C0                     u9700:
 15371   0046C0                     
 15372                           ;lcd.c: 22:     SSP2IF = 0;
 15373   0046C0  9EA4               	bcf	4004,7,c	;volatile
 15374   0046C2                     
 15375                           ;lcd.c: 27:     LCD_Send(0x7C);
 15376   0046C2  0E7C               	movlw	124
 15377   0046C4  EC1D  F029         	call	_LCD_Send
 15378                           
 15379                           ;lcd.c: 28:     LCD_Send(0x80);
 15380   0046C8  0E80               	movlw	128
 15381   0046CA  EC1D  F029         	call	_LCD_Send
 15382                           
 15383                           ;lcd.c: 29:     LCD_Send(0x38);
 15384   0046CE  0E38               	movlw	56
 15385   0046D0  EC1D  F029         	call	_LCD_Send
 15386                           
 15387                           ;lcd.c: 30:     LCD_Send(0x80);
 15388   0046D4  0E80               	movlw	128
 15389   0046D6  EC1D  F029         	call	_LCD_Send
 15390                           
 15391                           ;lcd.c: 31:     LCD_Send(0x39);
 15392   0046DA  0E39               	movlw	57
 15393   0046DC  EC1D  F029         	call	_LCD_Send
 15394                           
 15395                           ;lcd.c: 32:     LCD_Send(0x80);
 15396   0046E0  0E80               	movlw	128
 15397   0046E2  EC1D  F029         	call	_LCD_Send
 15398                           
 15399                           ;lcd.c: 33:     LCD_Send(0x17);
 15400   0046E6  0E17               	movlw	23
 15401   0046E8  EC1D  F029         	call	_LCD_Send
 15402                           
 15403                           ;lcd.c: 34:     LCD_Send(0x80);
 15404   0046EC  0E80               	movlw	128
 15405   0046EE  EC1D  F029         	call	_LCD_Send
 15406                           
 15407                           ;lcd.c: 35:     LCD_Send(0x7A);
 15408   0046F2  0E7A               	movlw	122
 15409   0046F4  EC1D  F029         	call	_LCD_Send
 15410                           
 15411                           ;lcd.c: 36:     LCD_Send(0x80);
 15412   0046F8  0E80               	movlw	128
 15413   0046FA  EC1D  F029         	call	_LCD_Send
 15414                           
 15415                           ;lcd.c: 37:     LCD_Send(0x5E);
 15416   0046FE  0E5E               	movlw	94
 15417   004700  EC1D  F029         	call	_LCD_Send
 15418                           
 15419                           ;lcd.c: 38:     LCD_Send(0x80);
 15420   004704  0E80               	movlw	128
 15421   004706  EC1D  F029         	call	_LCD_Send
 15422                           
 15423                           ;lcd.c: 39:     LCD_Send(0x6B);
 15424   00470A  0E6B               	movlw	107
 15425   00470C  EC1D  F029         	call	_LCD_Send
 15426                           
 15427                           ;lcd.c: 40:     LCD_Send(0x80);
 15428   004710  0E80               	movlw	128
 15429   004712  EC1D  F029         	call	_LCD_Send
 15430                           
 15431                           ;lcd.c: 41:     LCD_Send(0x0C);
 15432   004716  0E0C               	movlw	12
 15433   004718  EC1D  F029         	call	_LCD_Send
 15434                           
 15435                           ;lcd.c: 42:     LCD_Send(0x80);
 15436   00471C  0E80               	movlw	128
 15437   00471E  EC1D  F029         	call	_LCD_Send
 15438                           
 15439                           ;lcd.c: 43:     LCD_Send(0x01);
 15440   004722  0E01               	movlw	1
 15441   004724  EC1D  F029         	call	_LCD_Send
 15442                           
 15443                           ;lcd.c: 44:     LCD_Send(0x80);
 15444   004728  0E80               	movlw	128
 15445   00472A  EC1D  F029         	call	_LCD_Send
 15446                           
 15447                           ;lcd.c: 45:     LCD_Send(0x06);
 15448   00472E  0E06               	movlw	6
 15449   004730  EC1D  F029         	call	_LCD_Send
 15450                           
 15451                           ;lcd.c: 46:     LCD_Send(0x80);
 15452   004734  0E80               	movlw	128
 15453   004736  EC1D  F029         	call	_LCD_Send
 15454                           
 15455                           ;lcd.c: 47:     LCD_Send(0x02);
 15456   00473A  0E02               	movlw	2
 15457   00473C  EC1D  F029         	call	_LCD_Send
 15458   004740                     
 15459                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 15460   004740  846B               	bsf	107,2,c	;volatile
 15461   004742                     l126:
 15462   004742  B46B               	btfsc	107,2,c	;volatile
 15463   004744  EFA6  F023         	goto	u9711
 15464   004748  EFA8  F023         	goto	u9710
 15465   00474C                     u9711:
 15466   00474C  EFA1  F023         	goto	l126
 15467   004750                     u9710:
 15468   004750                     
 15469                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 15470   004750  0E34               	movlw	52
 15471   004752  6E07               	movwf	??_LCD_Init^0,c
 15472   004754  0EF2               	movlw	242
 15473   004756                     u10537:
 15474   004756  2EE8               	decfsz	wreg,f,c
 15475   004758  D7FE               	bra	u10537
 15476   00475A  2E07               	decfsz	??_LCD_Init^0,f,c
 15477   00475C  D7FC               	bra	u10537
 15478   00475E  0012               	return		;funcret
 15479   004760                     __end_of_LCD_Init:
 15480                           	callstack 0
 15481                           
 15482 ;; *************** function _LCD_Send *****************
 15483 ;; Defined at:
 15484 ;;		line 85 in file "lcd.c"
 15485 ;; Parameters:    Size  Location     Type
 15486 ;;  data            1    wreg     unsigned char 
 15487 ;; Auto vars:     Size  Location     Type
 15488 ;;  data            1    5[COMRAM] unsigned char 
 15489 ;; Return value:  Size  Location     Type
 15490 ;;                  1    wreg      void 
 15491 ;; Registers used:
 15492 ;;		wreg
 15493 ;; Tracked objects:
 15494 ;;		On entry : 0/0
 15495 ;;		On exit  : 0/0
 15496 ;;		Unchanged: 0/0
 15497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15502 ;;Total ram usage:        1 bytes
 15503 ;; Hardware stack levels used: 1
 15504 ;; Hardware stack levels required when called: 1
 15505 ;; This function calls:
 15506 ;;		Nothing
 15507 ;; This function is called by:
 15508 ;;		_LCD_Init
 15509 ;;		_LCD_ShowString
 15510 ;;		_LCD_Clear
 15511 ;; This function uses a non-reentrant model
 15512 ;;
 15513                           
 15514                           	psect	text61
 15515   00523A                     __ptext61:
 15516                           	callstack 0
 15517   00523A                     _LCD_Send:
 15518                           	callstack 27
 15519                           
 15520                           ;incstack = 0
 15521                           ;LCD_Send@data stored from wreg
 15522   00523A  6E06               	movwf	LCD_Send@data^0,c
 15523   00523C                     
 15524                           ;lcd.c: 87:     SSP2BUF = data;
 15525   00523C  C006  FF6F         	movff	LCD_Send@data,3951	;volatile
 15526   005240                     l146:
 15527   005240  B06D               	btfsc	109,0,c	;volatile
 15528   005242  EF25  F029         	goto	u9261
 15529   005246  EF27  F029         	goto	u9260
 15530   00524A                     u9261:
 15531   00524A  EF20  F029         	goto	l146
 15532   00524E                     u9260:
 15533   00524E                     l149:
 15534   00524E  AEA4               	btfss	4004,7,c	;volatile
 15535   005250  EF2C  F029         	goto	u9271
 15536   005254  EF2E  F029         	goto	u9270
 15537   005258                     u9271:
 15538   005258  EF27  F029         	goto	l149
 15539   00525C                     u9270:
 15540   00525C                     
 15541                           ;lcd.c: 90:     SSP2IF = 0;
 15542   00525C  9EA4               	bcf	4004,7,c	;volatile
 15543   00525E  0012               	return		;funcret
 15544   005260                     __end_of_LCD_Send:
 15545                           	callstack 0
 15546                           
 15547 ;; *************** function _ISR *****************
 15548 ;; Defined at:
 15549 ;;		line 11 in file "interrupt.c"
 15550 ;; Parameters:    Size  Location     Type
 15551 ;;		None
 15552 ;; Auto vars:     Size  Location     Type
 15553 ;;  temp            1    4[COMRAM] unsigned char 
 15554 ;; Return value:  Size  Location     Type
 15555 ;;                  1    wreg      void 
 15556 ;; Registers used:
 15557 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15558 ;; Tracked objects:
 15559 ;;		On entry : 0/0
 15560 ;;		On exit  : 0/0
 15561 ;;		Unchanged: 0/0
 15562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15565 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15566 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15567 ;;Total ram usage:        5 bytes
 15568 ;; Hardware stack levels used: 1
 15569 ;; This function calls:
 15570 ;;		Nothing
 15571 ;; This function is called by:
 15572 ;;		Interrupt level 2
 15573 ;; This function uses a non-reentrant model
 15574 ;;
 15575                           
 15576                           	psect	intcode
 15577   000008                     __pintcode:
 15578                           	callstack 0
 15579   000008                     _ISR:
 15580                           	callstack 21
 15581                           
 15582                           ;incstack = 0
 15583   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15584   00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
 15585   00000E  CFDA F004          	movff	fsr2h,??_ISR+3
 15586   000012                     
 15587                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 15588   000012  A09D               	btfss	3997,0,c	;volatile
 15589   000014  EF0E  F000         	goto	i2u686_41
 15590   000018  EF10  F000         	goto	i2u686_40
 15591   00001C                     i2u686_41:
 15592   00001C  EF49  F000         	goto	i2l6268
 15593   000020                     i2u686_40:
 15594   000020  A09E               	btfss	3998,0,c	;volatile
 15595   000022  EF15  F000         	goto	i2u687_41
 15596   000026  EF17  F000         	goto	i2u687_40
 15597   00002A                     i2u687_41:
 15598   00002A  EF49  F000         	goto	i2l6268
 15599   00002E                     i2u687_40:
 15600   00002E  0101               	movlb	1	; () banked
 15601   000030  5126               	movf	_GPIOIE& (0+255),w,b
 15602   000032  B4D8               	btfsc	status,2,c
 15603   000034  EF1E  F000         	goto	i2u688_41
 15604   000038  EF20  F000         	goto	i2u688_40
 15605   00003C                     i2u688_41:
 15606   00003C  EF49  F000         	goto	i2l6268
 15607   000040                     i2u688_40:
 15608   000040                     
 15609                           ; BSR set to: 1
 15610                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 15611   000040  A480               	btfss	128,2,c	;volatile
 15612   000042  EF25  F000         	goto	i2u689_41
 15613   000046  EF27  F000         	goto	i2u689_40
 15614   00004A                     i2u689_41:
 15615   00004A  EF44  F000         	goto	i2l412
 15616   00004E                     i2u689_40:
 15617   00004E                     
 15618                           ; BSR set to: 1
 15619                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 15620   00004E  0E03               	movlw	3
 15621   000050  6E02               	movwf	(??_ISR+1)^0,c
 15622   000052  0E08               	movlw	8
 15623   000054  6E01               	movwf	??_ISR^0,c
 15624   000056  0E77               	movlw	119
 15625   000058                     i2u1054_47:
 15626   000058  2EE8               	decfsz	wreg,f,c
 15627   00005A  D7FE               	bra	i2u1054_47
 15628   00005C  2E01               	decfsz	??_ISR^0,f,c
 15629   00005E  D7FC               	bra	i2u1054_47
 15630   000060  2E02               	decfsz	(??_ISR+1)^0,f,c
 15631   000062  D7FA               	bra	i2u1054_47
 15632   000064  0000               	nop	
 15633   000066                     
 15634                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 15635   000066  A480               	btfss	128,2,c	;volatile
 15636   000068  EF38  F000         	goto	i2u690_41
 15637   00006C  EF3A  F000         	goto	i2u690_40
 15638   000070                     i2u690_41:
 15639   000070  EF44  F000         	goto	i2l412
 15640   000074                     i2u690_40:
 15641   000074                     i2l414:
 15642   000074  B480               	btfsc	128,2,c	;volatile
 15643   000076  EF3F  F000         	goto	i2u691_41
 15644   00007A  EF41  F000         	goto	i2u691_40
 15645   00007E                     i2u691_41:
 15646   00007E  EF3A  F000         	goto	i2l414
 15647   000082                     i2u691_40:
 15648   000082                     
 15649                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 15650   000082  0E00               	movlw	0
 15651   000084  0100               	movlb	0	; () banked
 15652   000086  6FFE               	movwf	_keepStateGPIO& (0+255),b
 15653   000088                     i2l412:
 15654                           
 15655                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 15656   000088  0E9E               	movlw	158
 15657   00008A  6ECF               	movwf	207,c	;volatile
 15658   00008C  0E58               	movlw	88
 15659   00008E  6ECE               	movwf	206,c	;volatile
 15660   000090                     
 15661                           ;interrupt.c: 23:         TMR1IF = 0;
 15662   000090  909E               	bcf	3998,0,c	;volatile
 15663   000092                     i2l6268:
 15664                           
 15665                           ;interrupt.c: 26:     if(TMR1IE && TMR1IF && GAMEIE){
 15666   000092  A09D               	btfss	3997,0,c	;volatile
 15667   000094  EF4E  F000         	goto	i2u692_41
 15668   000098  EF50  F000         	goto	i2u692_40
 15669   00009C                     i2u692_41:
 15670   00009C  EF66  F000         	goto	i2l6280
 15671   0000A0                     i2u692_40:
 15672   0000A0  A09E               	btfss	3998,0,c	;volatile
 15673   0000A2  EF55  F000         	goto	i2u693_41
 15674   0000A6  EF57  F000         	goto	i2u693_40
 15675   0000AA                     i2u693_41:
 15676   0000AA  EF66  F000         	goto	i2l6280
 15677   0000AE                     i2u693_40:
 15678   0000AE  0101               	movlb	1	; () banked
 15679   0000B0  5124               	movf	_GAMEIE& (0+255),w,b
 15680   0000B2  B4D8               	btfsc	status,2,c
 15681   0000B4  EF5E  F000         	goto	i2u694_41
 15682   0000B8  EF60  F000         	goto	i2u694_40
 15683   0000BC                     i2u694_41:
 15684   0000BC  EF66  F000         	goto	i2l6280
 15685   0000C0                     i2u694_40:
 15686   0000C0                     
 15687                           ; BSR set to: 1
 15688                           ;interrupt.c: 27:         GAMEtime += 1;
 15689   0000C0  2B23               	incf	_GAMEtime& (0+255),f,b
 15690   0000C2                     
 15691                           ; BSR set to: 1
 15692                           ;interrupt.c: 29:         TMR1 = 0xFFFF - (62500 - 1);
 15693   0000C2  0E0B               	movlw	11
 15694   0000C4  6ECF               	movwf	207,c	;volatile
 15695   0000C6  0EDC               	movlw	220
 15696   0000C8  6ECE               	movwf	206,c	;volatile
 15697   0000CA                     
 15698                           ; BSR set to: 1
 15699                           ;interrupt.c: 30:         TMR1IF = 0;
 15700   0000CA  909E               	bcf	3998,0,c	;volatile
 15701   0000CC                     i2l6280:
 15702                           
 15703                           ;interrupt.c: 33:     if(RC1IE && RC1IF && UARTIE){
 15704   0000CC  AA9D               	btfss	3997,5,c	;volatile
 15705   0000CE  EF6B  F000         	goto	i2u695_41
 15706   0000D2  EF6D  F000         	goto	i2u695_40
 15707   0000D6                     i2u695_41:
 15708   0000D6  EFA1  F000         	goto	i2l423
 15709   0000DA                     i2u695_40:
 15710   0000DA  AA9E               	btfss	3998,5,c	;volatile
 15711   0000DC  EF72  F000         	goto	i2u696_41
 15712   0000E0  EF74  F000         	goto	i2u696_40
 15713   0000E4                     i2u696_41:
 15714   0000E4  EFA1  F000         	goto	i2l423
 15715   0000E8                     i2u696_40:
 15716   0000E8  0101               	movlb	1	; () banked
 15717   0000EA  5125               	movf	_UARTIE& (0+255),w,b
 15718   0000EC  B4D8               	btfsc	status,2,c
 15719   0000EE  EF7B  F000         	goto	i2u697_41
 15720   0000F2  EF7D  F000         	goto	i2u697_40
 15721   0000F6                     i2u697_41:
 15722   0000F6  EFA1  F000         	goto	i2l423
 15723   0000FA                     i2u697_40:
 15724   0000FA                     
 15725                           ; BSR set to: 1
 15726                           ;interrupt.c: 34:         char temp = RCREG1;
 15727   0000FA  CFAE F005          	movff	4014,ISR@temp	;volatile
 15728   0000FE                     
 15729                           ; BSR set to: 1
 15730                           ;interrupt.c: 35:         static int i = 0;;interrupt.c: 37:         if(temp != '\n'){
 15731   0000FE  0E0A               	movlw	10
 15732   000100  1805               	xorwf	ISR@temp^0,w,c
 15733   000102  B4D8               	btfsc	status,2,c
 15734   000104  EF86  F000         	goto	i2u698_41
 15735   000108  EF88  F000         	goto	i2u698_40
 15736   00010C                     i2u698_41:
 15737   00010C  EF94  F000         	goto	i2l6294
 15738   000110                     i2u698_40:
 15739   000110                     
 15740                           ; BSR set to: 1
 15741                           ;interrupt.c: 38:             gmail.data[i] = temp;
 15742   000110  0E77               	movlw	low _gmail
 15743   000112  2521               	addwf	ISR@i& (0+255),w,b
 15744   000114  6ED9               	movwf	fsr2l,c
 15745   000116  0E01               	movlw	high _gmail
 15746   000118  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15747   00011A  6EDA               	movwf	fsr2h,c
 15748   00011C  C005  FFDF         	movff	ISR@temp,indf2
 15749   000120                     
 15750                           ; BSR set to: 1
 15751                           ;interrupt.c: 39:             i++;
 15752   000120  4B21               	infsnz	ISR@i& (0+255),f,b
 15753   000122  2B22               	incf	(ISR@i+1)& (0+255),f,b
 15754                           
 15755                           ;interrupt.c: 40:         } else {
 15756   000124  EFA1  F000         	goto	i2l423
 15757   000128                     i2l6294:
 15758                           
 15759                           ; BSR set to: 1
 15760                           ;interrupt.c: 41:             gmail.full = 1;
 15761   000128  0E01               	movlw	1
 15762   00012A  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
 15763   00012C                     
 15764                           ; BSR set to: 1
 15765                           ;interrupt.c: 42:             gmail.data[i] = '\0';
 15766   00012C  0E77               	movlw	low _gmail
 15767   00012E  2521               	addwf	ISR@i& (0+255),w,b
 15768   000130  6ED9               	movwf	fsr2l,c
 15769   000132  0E01               	movlw	high _gmail
 15770   000134  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15771   000136  6EDA               	movwf	fsr2h,c
 15772   000138  6ADF               	clrf	indf2,c
 15773   00013A                     
 15774                           ; BSR set to: 1
 15775                           ;interrupt.c: 43:             i = 0;
 15776   00013A  0E00               	movlw	0
 15777   00013C  6F22               	movwf	(ISR@i+1)& (0+255),b
 15778   00013E  0E00               	movlw	0
 15779   000140  6F21               	movwf	ISR@i& (0+255),b
 15780   000142                     i2l423:
 15781   000142  C004  FFDA         	movff	??_ISR+3,fsr2h
 15782   000146  C003  FFD9         	movff	??_ISR+2,fsr2l
 15783   00014A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15784   00014C  0011               	retfie		f
 15785   00014E                     __end_of_ISR:
 15786                           	callstack 0
 15787                           
 15788                           	psect	rparam
 15789   000000                     
 15790                           	psect	temp
 15791   00005A                     btemp:
 15792                           	callstack 0
 15793   00005A                     	ds	1
 15794   000000                     int$flags	set	btemp
 15795   000000                     wtemp8	set	btemp+1
 15796   000000                     ttemp5	set	btemp+1
 15797   000000                     ttemp6	set	btemp+4
 15798   000000                     ttemp7	set	btemp+8
 15799                           
 15800                           	psect	config
 15801                           
 15802                           ; Padding undefined space
 15803   300000                     	org	3145728
 15804   300000  FF                 	db	255
 15805                           
 15806                           ;Config register CONFIG1H @ 0x300001
 15807                           ;	Oscillator Selection bits
 15808                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 15809                           ;	4X PLL Enable
 15810                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15811                           ;	Primary clock enable bit
 15812                           ;	PRICLKEN = 0x1, unprogrammed default
 15813                           ;	Fail-Safe Clock Monitor Enable bit
 15814                           ;	FCMEN = 0x0, unprogrammed default
 15815                           ;	Internal/External Oscillator Switchover bit
 15816                           ;	IESO = 0x0, unprogrammed default
 15817   300001                     	org	3145729
 15818   300001  33                 	db	51
 15819                           
 15820                           ;Config register CONFIG2L @ 0x300002
 15821                           ;	unspecified, using default values
 15822                           ;	Power-up Timer Enable bit
 15823                           ;	PWRTEN = 0x1, unprogrammed default
 15824                           ;	Brown-out Reset Enable bits
 15825                           ;	BOREN = 0x3, unprogrammed default
 15826                           ;	Brown Out Reset Voltage bits
 15827                           ;	BORV = 0x3, unprogrammed default
 15828   300002                     	org	3145730
 15829   300002  1F                 	db	31
 15830                           
 15831                           ;Config register CONFIG2H @ 0x300003
 15832                           ;	Watchdog Timer Enable bits
 15833                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15834                           ;	Watchdog Timer Postscale Select bits
 15835                           ;	WDTPS = 0xF, unprogrammed default
 15836   300003                     	org	3145731
 15837   300003  3C                 	db	60
 15838                           tosu	equ	0xFFF
 15839                           tosh	equ	0xFFE
 15840                           tosl	equ	0xFFD
 15841                           stkptr	equ	0xFFC
 15842                           pclatu	equ	0xFFB
 15843                           pclath	equ	0xFFA
 15844                           pcl	equ	0xFF9
 15845                           tblptru	equ	0xFF8
 15846                           tblptrh	equ	0xFF7
 15847                           tblptrl	equ	0xFF6
 15848                           tablat	equ	0xFF5
 15849                           prodh	equ	0xFF4
 15850                           prodl	equ	0xFF3
 15851                           indf0	equ	0xFEF
 15852                           postinc0	equ	0xFEE
 15853                           postdec0	equ	0xFED
 15854                           preinc0	equ	0xFEC
 15855                           plusw0	equ	0xFEB
 15856                           fsr0h	equ	0xFEA
 15857                           fsr0l	equ	0xFE9
 15858                           wreg	equ	0xFE8
 15859                           indf1	equ	0xFE7
 15860                           postinc1	equ	0xFE6
 15861                           postdec1	equ	0xFE5
 15862                           preinc1	equ	0xFE4
 15863                           plusw1	equ	0xFE3
 15864                           fsr1h	equ	0xFE2
 15865                           fsr1l	equ	0xFE1
 15866                           bsr	equ	0xFE0
 15867                           indf2	equ	0xFDF
 15868                           postinc2	equ	0xFDE
 15869                           postdec2	equ	0xFDD
 15870                           preinc2	equ	0xFDC
 15871                           plusw2	equ	0xFDB
 15872                           fsr2h	equ	0xFDA
 15873                           fsr2l	equ	0xFD9
 15874                           status	equ	0xFD8

Data Sizes:
    Strings     392
    Constant    64
    Data        40
    BSS         203
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    158     159
    BANK1           256     51     246
    BANK2           256      0      42
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 25
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[25]), 
		 -> runGAME@text(BANK1[17]), STR_1(CODE[17]), STR_10(CODE[17]), STR_11(CODE[17]), 
		 -> STR_12(CODE[17]), STR_13(CODE[17]), STR_14(CODE[17]), STR_15(CODE[17]), 
		 -> STR_16(CODE[17]), STR_17(CODE[17]), STR_2(CODE[17]), STR_3(CODE[17]), 
		 -> STR_35(CODE[17]), STR_4(CODE[17]), STR_5(CODE[17]), STR_6(CODE[17]), 
		 -> STR_7(CODE[17]), STR_8(CODE[17]), STR_9(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    moveDisplay$4528	PTR unsigned char  size(2) Largest target is 6
		 -> STR_19(CODE[5]), STR_20(CODE[5]), STR_21(CODE[4]), STR_22(CODE[4]), 
		 -> STR_23(CODE[4]), STR_24(CODE[5]), STR_25(CODE[6]), STR_26(CODE[1]), 

    moveDisplay@F6965	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_19(CODE[5]), STR_20(CODE[5]), STR_21(CODE[4]), STR_22(CODE[4]), 
		 -> STR_23(CODE[4]), STR_24(CODE[5]), STR_25(CODE[6]), STR_26(CODE[1]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_19(CODE[5]), STR_20(CODE[5]), STR_21(CODE[4]), STR_22(CODE[4]), 
		 -> STR_23(CODE[4]), STR_24(CODE[5]), STR_25(CODE[6]), STR_26(CODE[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_18(CODE[5]), STR_30(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6975	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S3929$buffer	PTR unsigned char  size(2) Largest target is 0

    S3929$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_27(CODE[6]), STR_28(CODE[5]), STR_29(CODE[19]), STR_31(CODE[19]), 
		 -> STR_32(CODE[17]), STR_33(CODE[19]), STR_34(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[25]), 
		 -> runGAME@text(BANK1[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_19(CODE[5]), 
		 -> STR_20(CODE[5]), STR_21(CODE[4]), STR_22(CODE[4]), STR_23(CODE[4]), 
		 -> STR_24(CODE[5]), STR_25(CODE[6]), STR_26(CODE[1]), STR_42(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_19(CODE[5]), 
		 -> STR_20(CODE[5]), STR_21(CODE[4]), STR_22(CODE[4]), STR_23(CODE[4]), 
		 -> STR_24(CODE[5]), STR_25(CODE[6]), STR_26(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_36(CODE[4]), STR_39(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_18(CODE[5]), STR_27(CODE[6]), STR_28(CODE[5]), STR_29(CODE[19]), 
		 -> STR_30(CODE[5]), STR_31(CODE[19]), STR_32(CODE[17]), STR_33(CODE[19]), 
		 -> STR_34(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_18(CODE[5]), STR_27(CODE[6]), STR_28(CODE[5]), STR_29(CODE[19]), 
		 -> STR_30(CODE[5]), STR_31(CODE[19]), STR_32(CODE[17]), STR_33(CODE[19]), 
		 -> STR_34(CODE[18]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_18(CODE[5]), STR_27(CODE[6]), STR_28(CODE[5]), STR_29(CODE[19]), 
		 -> STR_30(CODE[5]), STR_31(CODE[19]), STR_32(CODE[17]), STR_33(CODE[19]), 
		 -> STR_34(CODE[18]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runUART->_printf
    _runPWM->___awdiv
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _rand->___lmul
    _runDAC->_printf
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _utoa->_pad
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->___awdiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    ___awdiv->_rand
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_runUART
    _runUART->_printf
    _runGAME->_sprintf
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___flneg
    ___cosdf->___fladd
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  438761
                                            154 BANK0      4     4      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGAME
                            _runGPIO
                           _runMUSIC
                             _runPWM
                            _runUART
 ---------------------------------------------------------------------------------
 (1) _runUART                                             40    40      0   63853
                                            114 BANK0     40    40      0
                             _printf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _runPWM                                               4     4      0    1304
                                             31 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _runMUSIC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             31    31      0     495
                                              6 COMRAM    31    31      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runGAME                                             52    52      0   69631
                                            135 BANK0      2     2      0
                                              0 BANK1     50    50      0
                     _LCD_ShowString
                            ___awdiv
                            ___lbdiv
                               _rand
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     456
                                             17 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     331
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0  153096
                                            114 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   68874
                                             68 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   16012
                                              4 BANK0     32    28      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   27720
                                             36 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   16096
                                              4 BANK0     28    24      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     3      4   63191
                                             83 COMRAM     1     1      0
                                            110 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0     130
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   79867
                                            135 BANK0      2     2      0
                                              0 BANK1     30    30      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         54    53      1   67780
                                            135 BANK0      3     2      1
                                              0 BANK1     51    51      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12   64496
                                            110 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5   62888
                                            103 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   62082
                                             89 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                10     6      4    6310
                                             31 COMRAM    10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     412
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2110
                                             15 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1362
                                             11 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   41068
                                             36 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     463
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             69 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             81 COMRAM     2     2      0
                                              4 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    8147
                                              4 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6862
                                             69 COMRAM    12     4      8
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     875
                                             32 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8273
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    7673
                                             31 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4963
                                             22 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1428
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                             23 COMRAM     8     4      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    2476
                                              6 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      31
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              6 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
               _rand (ARG)
                 ___lmul
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
           _utoa
             ___lwdiv
             ___lwmod
             _pad
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGAME
     _LCD_ShowString
     ___awdiv
     ___lbdiv
     _rand
     _sprintf
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *
   _runMUSIC
   _runPWM
     ___awdiv
   _runUART
     _printf
     _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      2A       9       16.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     33      F6       7       96.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRlllllh     21      0       0      52        0.0%
BITBIGSFRlllllh     10      0       0      51        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRlllllh      C      0       0      53        0.0%
BITBIGSFRhhllhl      A      0       0      44        0.0%
BITBIGSFRhll         7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      45        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRllh         5      0       0      48        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhllhh      1      0       0      43        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     218      54        0.0%
DATA                 0      0     218       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 17 21:59:41 2024

              ___fldiv@aexp 0045                ___fldiv@bexp 0044                ___fldiv@sign 003D  
                        _C0 FE63                          _C1 FE5F                          _C2 FE5B  
                        _C3 FE57                          l61 2B26                          l63 2B18  
                        l56 2AD4                          l66 2D20                          l58 2AC6  
                        _S1 FE43                          l68 2B5A                          _S2 FE3F  
                        _S3 FE3B                          _S4 FE37                ___awdiv@sign 001D  
       ___wmul@multiplicand 0008                         l123 46B2                         l140 4990  
                       l132 48F2                         l125 46C0                         l126 4742  
                       l134 4900                         l151 525C                         l143 499E  
                       l303 428A                         l231 2F98                         l152 525E  
                       l136 4940                         l129 475E                         l161 5182  
                       l146 5240                         l250 50A0                         l242 3034  
                       l234 2F9A                         l155 5150                         l139 498E  
                       l251 50A4                         l149 524E                         l157 515E  
                       l245 507E                         l158 5174                         l270 5282  
                       l350 52DA                         l247 508C                         l248 5092  
                       l273 5294                         l353 52CC                         l521 4062  
                       l362 52A2                         l522 4160                         l356 52BE  
                       l372 400A                         l365 52E8                         l525 411A  
                       l710 5238                         l462 367A                         l534 414E  
                       l526 40DC                         l359 52B0                         l519 4054  
                       l472 3666                         l464 34B8                         l721 4D80  
                       l377 401C                         l722 4D90                         l378 4032  
                       l538 4178                         l475 368C                         l467 3558  
                       l707 52EA                         l476 368E                         l581 3E5A  
                       l680 208A                         l664 1F84                         l592 3EB4  
                       l593 3EC6                         l682 209A                         l691 227E  
                       l683 20AA                         l579 3EA2                         l692 2292  
                       l684 20BA                         l676 2072                         l941 48EC  
                       l685 20CA                         l589 3E8E                         l686 20DA  
                       l687 20EA                         l689 21BC                         l954 4A4E  
                       l980 4496                         l975 4450                         l984 50DE  
                       l969 4BA6                         _GIE 7F97                         _PR2 0FBB  
                       _ISR 0008                         _abs 51B8                         _pad 4BA8  
              ___awmod@sign 000B                         prod 0FF3                         tosl 0FFD  
                       wreg 0FE8                  _TXSTA1bits 0FAC                ___flmul@aexp 0021  
              ___flmul@bexp 0026                ___flmul@sign 0020                ___flmul@temp 002B  
              ___flmul@prod 0027                        ?_ISR 0001                        ISR@i 0121  
              ___fltol@exp1 0053                        l1007 4392                        l1201 4CB0  
                      l1211 4DEC                        ?_abs 000C                        l1116 4E50  
                      l1303 2894                        l1240 1756                        l1208 4CB8  
                      l1305 290C                        l1306 28FA                        l1218 4DF4  
                      l1331 1D2E                        l1324 1B38                        l1421 4C22  
                      l1341 1E5E                        l1333 1DA6                        l1501 3AE6  
                      l1430 3C5C                        l1334 1D94                        l1238 17A2  
                      l1423 4C44                        l1255 18BC                        l1247 1A72  
                      l1239 1790                        l1328 1E9C                        l1264 198C  
                      l1280 4FDC                        l1441 3D5A                        l1265 197A  
                      l1513 3BDE                        l1418 4BE0                        l1611 51D2  
                      l1427 3C0E                        l1292 29EE                        l1620 347C  
                      l1452 0B4A                        l1508 3B96                        l1372 397C  
                      l1429 3C16                        l1533 4AFC                        l1525 4684  
                      l1517 45B0                        l1365 38E4                        l1614 51EA  
                      l1294 284E                        l1606 4594                        l1623 33C0  
                      l1455 04E4                        l1519 45B8                        l1640 4F4A  
                      l1560 10A6                        l1368 3A40                        l1297 2812  
                      l1457 032A                        l1529 4AF4                        l1634 4EA6  
                      l1379 39D8                        l1652 4828                        l1660 5066  
                      l1388 5022                        l1485 092E                        l1728 388C  
                      l1744 24B6                        l1745 2654                        l1762 51B6  
                      l1667 527E                        l1675 4D26                        l1596 4F94  
                      l1757 3266                        l1694 15B0                        l1774 514C  
                      l1768 5116                        l7000 4D92                        l7010 4DD8  
                      l7002 4DA4                        l6300 5282                        l7020 4BCA  
                      l7100 4F10                        l7012 4DE0                        l7004 4DAC  
                      l6302 5290                        l6310 478E                        l7030 4C30  
                      l7022 4BD8                        l7110 3BE0                        l7102 4F1C  
                      l7014 4DE6                        l7006 4DB4                        ?_pad 0017  
                      l7032 51B8                        l6312 47AC                        l6304 4760  
                      l7024 4BEC                        l7016 4BA8                        l7120 3C44  
                      l7112 3C02                        l6400 1722                        l6320 15C0  
                      l7040 44F6                        l7104 4F20                        l7200 02AC  
                      l7008 4DC2                        l8000 3EFA                        l7034 51C6  
                      l6314 47E2                        l6306 4772                        l7026 4C00  
                      l7018 4BB6                        l7130 3C74                        l7122 3C50  
                      l7114 3C1E                        l6410 1774                        l6402 173E  
                      l6330 1600                        l6322 15CE                        l7050 4548  
                      l7042 451E                        l7106 4F2C                        l7202 02B0  
                      l8010 3F18                        l8002 3EFC                        l6308 4784  
                      l7028 4C04                        l7140 3CE8                        l7132 3CA6  
                      l7124 3C58                        l7116 3C2E                        l6500 1A12  
                      l6420 17C0                        l6412 1782                        l6404 174E  
                      l6340 1632                        l6332 1602                        l6324 15D0  
                      l7044 452A                        l7036 4498                        l7108 4F30  
                      l7060 50E8                        l7300 0856                        l7220 033A  
                      l7204 02B6                        l8020 3F54                        l8012 3F2A  
                      l8004 3EFE                        l7150 3D3A                        l7142 3CFA  
                      l7134 3CAC                        l7126 3C64                        l7118 3C34  
                      l6510 1A4C                        l6502 1A32                        l6430 1800  
                      l6414 1784                        l6406 1764                        l6350 165A  
                      l6342 1634                        l6326 15E0                        l6334 160A  
                      l6318 15B2                        l7054 458C                        l7038 44B8  
                      l7070 3268                        l7062 4E52                        l7310 0880  
                      l7302 085A                        l7230 0422                        l7222 0340  
                      l7206 02BE                        l7214 02DA                        l8030 4006  
                      l8022 3FAE                        l8014 3F4C                        l8006 3F06  
                      l8110 4080                        l8102 4034                        l6520 5024  
                      l7144 3D14                        l7136 3CB2                        l7128 3C6E  
                      l6600 27D6                        l6512 1A52                        l6504 1A36  
                      l6440 182A                        l6432 180C                        l6424 17D4  
                      l6416 178E                        l6408 1770                        l6360 1694  
                      l6352 166A                        l6344 163A                        l6336 161A  
                      l6328 15F0                        l7048 4536                        l7072 3288  
                      l7064 4E60                        l7320 094E                        l7312 088C  
                      l7304 086A                        l7232 0436                        l7240 04B2  
                      l7224 0374                        l7216 02F4                        l7160 0176  
                      l7400 3B42                        l8200 2D72                        l8032 402C  
                      l8024 3FB2                        l8008 3F10                        l8112 408C  
                      l8104 4036                        l8040 3D6C                        l6522 5030  
                      l7146 3D24                        l7138 3CCE                        l6610 281C  
                      l6602 27DE                        l6514 1A60                        l6506 1A44  
                      l6450 189C                        l6434 1810                        l6426 17E4  
                      l6418 17B0                        l6442 1830                        l6370 16C0  
                      l6362 16A6                        l6354 167A                        l6346 1648  
                      l6338 1620                        l7090 3434                        l7082 3374  
                      l7074 32E0                        l7066 4E74                        l7058 50E0  
                      l7330 0980                        l7322 095E                        l7314 0906  
                      l7306 0872                        l7250 0518                        l7242 04EC  
                      l7234 046A                        l7226 03B2                        l7170 01C0  
                      l7162 017A                        l7154 0152                        l6530 5230  
                      l7410 3BBC                        l7402 3B78                        l8210 2D90  
                      l8202 2D84                        l8026 3FCE                        l8122 40EA  
                      l8130 411A                        l8114 40A8                        l8106 4050  
                      l8050 3D7C                        l8042 3D6E                        l6524 5042  
                      l7148 3D2A                        l6620 2874                        l6612 283A  
                      l6604 27EE                        l6540 2672                        l6700 1B12  
                      l6516 1A62                        l6508 1A4A                        l6460 18F6  
                      l6444 1856                        l6452 18AC                        l6436 181E  
                      l6428 17F2                        l6380 16D4                        l6372 16C4  
                      l6364 16B4                        l6356 167C                        l6348 164A  
                      l7092 345C                        l7084 33B0                        l7076 32F4  
                      l7340 09B4                        l7332 0984                        l7324 0962  
                      l7316 0926                        l7308 0878                        l7260 0568  
                      l7252 051E                        l7244 04FA                        l7236 0472  
                      l7228 03E4                        l7180 020E                        l7172 01D0  
                      l7164 019E                        l7156 0158                        l7412 3BC0  
                      l7404 3B7C                        l7420 45C8                        l8220 2E20  
                      l8212 2D92                        l8204 2D8A                        l8300 1F70  
                      l8028 3FE6                        l8140 4170                        l8132 4128  
                      l8124 40FC                        l8116 40B6                        l8108 4052  
                      l8060 3DBE                        l8052 3D7E                        l8044 3D70  
                      l8036 3D5C                        l6526 5046                        l6630 28B2  
                      l6622 287A                        l6614 283C                        l6606 2802  
                      l6542 2682                        l6550 26AC                        l6534 2656  
                      l6702 1B22                        l6470 1926                        l6462 1900  
                      l6454 18D2                        l6446 188A                        l6438 1820  
                      l6390 16E8                        l6382 16D8                        l6374 16C8  
                      l6366 16B8                        l6358 1684                        l7094 346C  
                      l7078 3302                        l7086 33E4                        l7350 0A52  
                      l7342 09B8                        l7334 098A                        l7326 0968  
                      l7318 0940                        l7270 0600                        l7254 0530  
                      l7262 0570                        l7246 0506                        l7190 024A  
                      l7182 0220                        l7174 01DC                        l7166 01A8  
                      l7158 0168                        l7430 460A                        l7422 45D2  
                      l7414 4596                        l7510 0B8C                        l7502 0B4C  
                      l8150 3486                        l8222 2E7A                        l8214 2DAE  
                      l8206 2D8C                        l8310 1FCE                        l8302 1F7A  
                      l8142 4174                        l8134 4140                        l8126 4104  
                      l8118 40CE                        l8070 3E1C                        l8062 3DE6  
                      l8054 3D8A                        l8046 3D72                        l8038 3D68  
                      l6640 291C                        l6632 28B6                        l6624 2884  
                      l6616 284C                        l6608 2810                        l6560 26D8  
                      l6552 26BC                        l6544 2692                        l6536 2662  
                      l6720 1BA4                        l6712 1B6C                        l6704 1B28  
                      l6480 194E                        l6472 192A                        l6464 190E  
                      l6456 18E2                        l6448 188C                        l6392 16EC  
                      l6384 16DC                        l6376 16CC                        l6368 16BC  
                      l7088 3420                        l7360 0AA6                        l7344 09BE  
                      l7328 0970                        l7336 0990                        l7352 0A56  
                      l7280 06E4                        l7272 0658                        l7264 0578  
                      l7256 053E                        l7248 0510                        l7192 0254  
                      l7184 0224                        l7176 01E4                        l7168 01B0  
                      l6528 5214                        l7408 3BA8                        l7424 45D8  
                      l7432 4626                        l7416 45A4                        l7600 0EB2  
                      l7520 0BAE                        l7512 0B94                        l7504 0B70  
                      l8160 34B6                        l8152 3496                        l8240 2FD0  
                      l8232 2F7A                        l8224 2EE2                        l8216 2DBE  
                      l8208 2D8E                        l8320 2000                        l8312 1FE0  
                      l8304 1F82                        l8144 4176                        l8128 4114  
                      l8080 3E3A                        l8072 3E22                        l8064 3DEA  
                      l8056 3D9C                        l8048 3D7A                        l8400 2A20  
                      l6810 482E                        l6650 297E                        l6642 2928  
                      l6634 28C4                        l6626 2892                        l6618 285E  
                      l6562 26E8                        l6570 2712                        l6554 26C2  
                      l6546 26A2                        l6538 2670                        l6730 1BEE  
                      l6722 1BBC                        l6714 1B78                        l6706 1B48  
                      l6490 19A8                        l6482 195C                        l6474 193A  
                      l6466 1910                        l6394 16F0                        l6386 16E0  
                      l6378 16D0                        l6802 4F96                        l7098 4EFC  
                      l7370 0B22                        l7362 0AD6                        l7354 0A74  
                      l7346 0A16                        l7338 09A2                        l7290 077E  
                      l7282 0716                        l7274 068C                        l7266 0588  
                      l7258 0556                        l7186 022A                        l7178 01E8  
                      l7450 4AA2                        l7442 4A50                        l7434 4638  
                      l7426 45FE                        l7418 45C0                        l7602 0EE4  
                      l7530 0C08                        l7514 0B96                        l7522 0BCC  
                      l7506 0B7C                        l8170 3566                        l8162 34C6  
                      l8154 3498                        l8250 3006                        l8242 2FDE  
                      l8234 2FA8                        l8226 2F06                        l8218 2E0E  
                      l8330 204C                        l8314 1FE8                        l8306 1F92  
                      l8138 415C                        l8090 3E9C                        l8082 3E3E  
                      l8066 3E00                        l8058 3DB0                        l8410 2A2A  
                      l8402 2A22                        l6820 485E                        l6812 483C  
                      l6660 29DC                        l6652 2994                        l6644 2936  
                      l6636 28F2                        l6628 28A4                        l6580 2754  
                      l6572 2722                        l6564 26F8                        l6556 26C8  
                      l6548 26A4                        l6900 4BA4                        l6740 1C44  
                      l6732 1BFE                        l6724 1BC8                        l6716 1B82  
                      l6708 1B58                        l6492 19B6                        l6484 1972  
                      l6468 191E                        l6476 193C                        l6388 16E4  
                      l6396 16F4                        l6804 4FA8                        l7372 0B2A  
                      l7364 0AE4                        l7356 0A90                        l7348 0A4A  
                      l7292 07B2                        l7284 072C                        l7268 059C  
                      l7276 0692                        l7188 0232                        l7196 0274  
                      l7452 4AC2                        l7444 4A58                        l7380 3A64  
                      l7436 464A                        l7428 4604                        l7620 0F5E  
                      l7612 0F2E                        l7540 0C6E                        l7532 0C2C  
                      l7524 0BDC                        l7516 0BA6                        l7508 0B88  
                      l7460 38AE                        l8180 3640                        l8172 3584  
                      l8164 34E4                        l8156 34A4                        l8148 347E  
                      l7700 22CC                        l8252 300C                        l8244 2FE4  
                      l8236 2FBC                        l8228 2F6E                        l8340 20FE  
                      l8332 2064                        l8316 1FF0                        l8324 2008  
                      l8308 1FB0                        l8260 1ECC                        l8092 3EBA  
                      l8084 3E68                        l8068 3E0A                        l8420 2A3C  
                      l8412 2A2C                        l8404 2A24                        l6830 488C  
                      l6822 4862                        l6814 4844                        l6662 29E2  
                      l6654 29AE                        l6646 2960                        l6574 2738  
                      l6566 2708                        l6558 26D6                        l6910 4400  
                      l6750 1CE8                        l6742 1C60                        l6734 1C0A  
                      l6726 1BD4                        l6718 1B98                        l6494 19F0  
                      l6478 194A                        l6398 16F8                        l7366 0AFC  
                      l7358 0A98                        l7294 0808                        l7286 075E  
                      l7278 06B0                        l7198 029A                        l7446 4A7A  
                      l7454 4ACE                        l7390 3ADE                        l7382 3A70  
                      l7438 4664                        l7630 0FCC                        l7614 0F3C  
                      l7606 0EF6                        l7542 0C76                        l7550 0CAC  
                      l7534 0C38                        l7526 0BF0                        l7470 3926  
                      l7462 38F4                        l8182 3658                        l8174 35EE  
                      l8166 354E                        l8158 34AE                        l7710 23F8  
                      l7702 22EA                        l8254 3010                        l8246 2FF2  
                      l8238 2FCA                        l8190 2D62                        l8350 21A4  
                      l8342 212C                        l8318 1FF8                        l8326 2030  
                      l8270 1EF2                        l8262 1EDC                        l8094 3EC0  
                      l8086 3E80                        l8078 3E2C                        l8502 2CE0  
                      l8430 2A90                        l8422 2A4A                        l8414 2A2E  
                      l8406 2A26                        l6840 48C0                        l6832 489A  
                      l6824 486A                        l6816 4848                        l6808 482A  
                      l6664 29E4                        l6656 29CA                        l6648 2964  
                      l6592 278C                        l6576 2748                        l6584 2768  
                      l6568 270A                        l6920 448E                        l6912 4410  
                      l6904 4394                        l6760 1D3E                        l6752 1CF6  
                      l6744 1C6C                        l6736 1C1A                        l6728 1BE2  
                      l6680 1AA0                        l6672 1A74                        l6488 199C  
                      l6496 19F2                        l7368 0B0C                        l7296 080E  
                      l7288 076E                        l7448 4A86                        l7384 3A74  
                      l7376 3A42                        l7616 0F4E                        l7624 0F66  
                      l7608 0F06                        l7552 0CC8                        l7560 0D20  
                      l7544 0C7E                        l7536 0C4C                        l7528 0BFE  
                      l7480 39AE                        l7472 3932                        l7464 390A  
                      l7456 3890                        l8176 3624                        l8168 3556  
                      l7712 2458                        l7704 230E                        l7720 24C2  
                      l7800 118C                        l8248 2FF8                        l8256 3022  
                      l8192 2D6A                        l8360 2200                        l8352 21AA  
                      l8344 215C                        l8336 2080                        l8328 203E  
                      l8280 1F00                        l8272 1EF4                        l8264 1EDE  
                      l8096 3EC2                        l8504 2D22                        l8440 2B08  
                      l8432 2AA8                        l8424 2A58                        l8416 2A32  
                      l8408 2A28                        l6842 48C6                        l6834 48A0  
                      l6826 487C                        l6818 4856                        l6658 29CE  
                      l6594 27A6                        l6586 2778                        l6578 2750  
                      l6922 4494                        l6914 441E                        l6906 43C2  
                      l6762 1D4C                        l6754 1D14                        l6746 1C88  
                      l6738 1C34                        l6690 1ADC                        l6682 1AB0  
                      l6674 1A80                        l6930 50CE                        l6498 1A02  
                      l7298 0842                        l7394 3B08                        l7386 3AB2  
                      l7378 3A5C                        l7634 0FF4                        l7618 0F56  
                      l7626 0F84                        l7570 0D88                        l7562 0D36  
                      l7554 0CE8                        l7538 0C5C                        l7650 1080  
                      l7490 39EC                        l7482 39BA                        l7474 3964  
                      l7458 38A0                        l8186 3674                        l8178 3632  
                      l7730 2628                        l7722 24E6                        l7714 2468  
                      l7706 237A                        l7810 1230                        l7802 11C0  
                      l8194 2D6C                        l8370 228E                        l8362 2206  
                      l8354 21BE                        l8346 2160                        l8338 20FA  
                      l8290 1F12                        l8282 1F08                        l8274 1EF6  
                      l8266 1EEA                        l8258 1E9E                        l8098 3EC4  
                      l8506 2D34                        l8450 2B88                        l8442 2B34  
                      l8434 2AB6                        l8426 2A72                        l8418 2A38  
                      l7740 48F0                        l6836 48B6                        l6828 4884  
                      l6844 48CC                        l6860 49BE                        l6852 49A0  
                      l6596 27B6                        l6588 2778                        l6916 4430  
                      l6908 43D2                        l6772 1DB6                        l6780 1DFE  
                      l6764 1D50                        l6756 1D1E                        l6748 1CB2  
                      l6692 1AE2                        l6684 1AC0                        l6676 1A8E  
                      l6940 42B8                        l7396 3B1C                        l7388 3AC0  
                      l7644 1056                        l7636 100A                        l7628 0FA4  
                      l7580 0DF4                        l7572 0DA4                        l7564 0D50  
                      l7556 0D04                        l7548 0C86                        l7492 3A10  
                      l7484 39C8                        l7476 3966                        l7468 391E  
                      l7660 51A6                        l7732 2640                        l7724 2552  
                      l7716 249A                        l7708 23A0                        l7820 12FC  
                      l8196 2D6E                        l8188 2D4E                        l8356 21E4  
                      l8348 2186                        l8292 1F12                        l8284 1F0A  
                      l8276 1EF8                        l8268 1EEE                        l7900 52D0  
                      l8508 2D42                        l8460 2BBA                        l8452 2B8C  
                      l8444 2B4C                        l8436 2AE2                        l8428 2A82  
                      l8380 2A0A                        l7750 4928                        l7742 48F0  
                      l6846 48DC                        l6838 48BE                        l6870 49F6  
                      l6862 49CC                        l6854 49A4                        l6598 27C6  
                      l6918 443E                        l6790 1E72                        l6782 1E18  
                      l6774 1DC2                        l6766 1D5E                        l6758 1D2C  
                      l6694 1AF0                        l6686 1AC6                        l6678 1A90  
                      l6926 50A6                        l6950 4306                        l6942 42E2  
                      l6934 428C                        l7398 3B20                        l7638 1028  
                      l7646 106E                        l7590 0E28                        l7494 3A20  
                      l7486 39E6                        l7478 3972                        l7726 2578  
                      l7830 1370                        l7814 1258                        l8198 2D70  
                      l7670 4D46                        l8358 21F2                        l8366 2224  
                      l8294 1F1E                        l8286 1F0E                        l8278 1EFE  
                      l7910 52DE                        l7902 52C2                        l8374 52EA  
                      l8462 2BD6                        l8454 2B96                        l8438 2AFA  
                      l8390 2A16                        l8382 2A0C                        l7664 523C  
                      l7760 494A                        l7752 493A                        l7744 4902  
                      l6848 48E4                        l6872 4A04                        l6880 4A2E  
                      l6864 49D4                        l6856 49B2                        l6792 1E80  
                      l6784 1E2C                        l6776 1DD0                        l6768 1D8C  
                      l6696 1AF2                        l6688 1AD6                        l6928 50BE  
                      l6960 4332                        l6944 42E4                        l6936 42A4  
                      l7592 0E4A                        l7576 0DC0                        l7568 0D68  
                      l7680 4F6E                        l7496 3A2E                        l7488 39E8  
                      l7656 5184                        l7728 25D0                        l7816 1268  
                      l7808 11FC                        l7824 1324                        l7672 4D56  
                      l8368 226C                        l8296 1F44                        l8288 1F12  
                      l7904 52B4                        l7912 5118                        l8480 2C34  
                      l8472 2BF4                        l8456 2BB2                        l8448 2B6C  
                      l8392 2A18                        l8384 2A0E                        l8376 29F0  
                      l7770 5172                        l7762 497C                        l7754 4946  
                      l7746 490E                        l6882 4A3E                        l6874 4A1A  
                      l6866 49E6                        l6858 49BA                        l6890 4B2C  
                      l6794 1E82                        l6786 1E46                        l6778 1DFA  
                      l6698 1B02                        l6970 4362                        l6946 42F4  
                      l7594 0E56                        l7586 0E0C                        l7578 0DD6  
                      l7682 4F8A                        l7498 3A30                        l7690 3690  
                      l7658 51A4                        l7850 145C                        l7826 1342  
                      l7818 12B4                        l7930 4DFC                        l7674 4D60  
                      l7666 4D28                        l7922 4CBA                        l8298 1F62  
                      l7906 52A6                        l7914 5124                        l8482 2C4C  
                      l8474 2C10                        l8466 2BDE                        l8394 2A1A  
                      l8386 2A10                        l8378 2A08                        l7764 497E  
                      l7748 491E                        l6884 4A46                        l6876 4A22  
                      l6868 49EE                        l6892 4B3C                        l6788 1E62  
                      l6796 1E88                        l6972 4372                        l6956 431E  
                      l6948 42F8                        l6980 4C4E                        l7596 0E5E  
                      l7588 0E24                        l7676 4F4C                        l7772 506A  
                      l7828 1360                        l7844 13E0                        l7780 10B8  
                      l7940 4E28                        l7932 4E0C                        l7668 4D38  
                      l7924 4CF8                        l7908 5298                        l7916 5128  
                      l8492 2CA2                        l8484 2C72                        l8468 2BEC  
                      l8396 2A1C                        l8388 2A14                        l7766 514E  
                      l6878 4A28                        l6894 4B6A                        l6798 1E8C  
                      l6974 4382                        l6966 4346                        l6958 4328  
                      l6990 4C84                        l6982 4C60                        l7598 0E80  
                      l7678 4F58                        l7774 5078                        l7694 2294  
                      l7686 3036                        l7870 152E                        l7862 14BE  
                      l7846 13F0                        l7838 13A8                        l7854 1484  
                      l7790 1118                        l7782 10CE                        l7942 4E3E  
                      l7934 4E14                        l7950 4E4E                        l7918 5140  
                      l8494 2CBE                        l8486 2C80                        l8478 2C18  
                      l8398 2A1E                        l7960 46A2                        l7768 5160  
                      l6896 4B7A                        l6888 4AFE                        l6968 4352  
                      l6992 4C9A                        l6984 4C68                        l7776 507A  
                      l7696 22B4                        l7864 14E2                        l7880 1592  
                      l7856 149A                        l7848 1428                        l7784 10D0  
                      l7944 4E42                        l7936 4E18                        l7928 4DF8  
                      l8496 2CD8                        l8488 2C9A                        l7962 46B0  
                      l7954 4686                        l6898 4B9E                        l6994 4CA2  
                      l6986 4C70                        l6978 4C46                        l7890 4FEC  
                      l7970 417E                        l7882 5260                        l7698 22CA  
                      l7874 1556                        l7866 1506                        l7858 14AA  
                      l7786 10EE                        l7794 1140                        l7778 10A8  
                      l7946 4E44                        l7938 4E1A                        l7964 46C2  
                      l7956 4694                        l6996 4CA4                        l6988 4C7E  
                      l7892 4FF4                        l7980 41C2                        l7972 4182  
                      l7884 5264                        l7796 115E                        l7788 1104  
                      l7948 4E48                        l7966 4740                        l7958 46A0  
                      l6998 4CAA                        l7894 4FFC                        l7990 4278  
                      l7974 4198                        l7798 117C                        l7968 4750  
                      l7896 5012                        l7888 4FDE                        l7992 4286  
                      l7976 41AA                        l7984 41C8                        l7978 41B0  
                      l7986 41E8                        l7988 426A                        l7996 3EC8  
                      l7998 3EF2                        STR_1 FEF3                        STR_2 FF26  
                      STR_3 FF15                        STR_4 FE79                        STR_5 FEE2  
                      STR_6 FF8C                        STR_7 FF48                        STR_8 FE79  
                      STR_9 FF7B                        u7000 4772                        u7001 476E  
                      u7010 4784                        u7011 4780                        _PEIE 7F96  
                      u7020 47AC                        u7100 166A                        u7021 47A8  
                      u7101 1666                        u7030 47E2                        u7110 16A6  
                      u7031 47DE                        u7111 16A2                        u8000 4B9E  
                      u7200 17C0                        u7120 16B4                        u7040 15CE  
                      u8001 4B9A                        u7201 17BC                        u7121 16B0  
                      u7041 15CA                        u8010 43C2                        u7210 17F2  
                      u7130 1722                        u7050 15E0                        u8011 43BE  
                      u7211 17EE                        u7131 171E                        u7051 15DC  
                      u8020 4400                        u7300 193A                        u7220 1800  
                      u7140 173A                        u7060 15F0                        u8100 431A  
                      u8021 43FC                        u7301 1936                        u7221 17FC  
                      u7141 1734                        u7061 15EC                        u8101 4316  
                      u8030 441E                        u7310 194A                        u7230 181E  
                      u7150 173C                        u7070 1632                        u8110 4342  
                      u8031 441A                        u7311 1946                        u7231 181A  
                      u7071 162E                        u8111 433E                        u8200 4BB6  
                      u8040 443E                        u7400 1A32                        u7320 195C  
                      u7240 1856                        u7160 1764                        u7080 1648  
                      u8120 4362                        u9000 4664                        u8201 4BB2  
                      u8041 443A                        u7401 1A2E                        u7321 1958  
                      u7241 1852                        u7161 1760                        u7081 1644  
                      u8121 435E                        u9001 4660                        u8210 4BD8  
                      u8050 448E                        u7410 1A44                        u7330 1972  
                      u7250 189C                        u7170 1782                        u7090 165A  
                      u8130 4372                        u9010 4A7A                        u8211 4BD4  
                      u8051 448A                        u7411 1A40                        u7331 196E  
                      u7251 1898                        u7171 177E                        u7091 1656  
                      u8131 436E                        u9011 4A76                        u8220 4C22  
                      u7500 2738                        u8060 50BE                        u7420 1A60  
                      u7340 1988                        u7260 18D2                        u7180 17A2  
                      u8300 4582                        u9020 4AF4                        u8140 4C60  
                      u9100 39E6                        u8221 4C1E                        u7501 2734  
                      u8061 50BA                        u7421 1A5C                        u7341 1984  
                      u7261 18CE                        u7181 179E                        u8301 457C  
                      u9021 4AF0                        u8141 4C5C                        u9101 39E2  
                      u7430 5066                        u8230 4C30                        u7510 2778  
                      u7350 199C                        u7270 18E2                        u7190 17B0  
                      u8070 42A4                        u8310 4584                        u8150 4C7E  
                      u9110 3A20                        u9030 38A0                        u7431 5062  
                      u8231 4C2C                        u7511 2774                        u7351 1998  
                      u7271 18DE                        u7191 17AC                        u8071 42A0  
                      u8151 4C7A                        u9111 3A1C                        u9031 389C  
                      u8240 51C6                        u7600 28F2                        u7520 27EE  
                      u7440 2670                        u7360 19B6                        u7280 190E  
                      u8080 42D8                        u8400 33B0                        u8320 5116  
                      u8160 4C9A                        u9200 0E4A                        u9120 3A2E  
                      u9040 38AE                        u8241 51C2                        u7601 28EE  
                      u7521 27EA                        u7441 266C                        u7361 19B2  
                      u7281 190A                        u8401 33AC                        u8321 5112  
                      u8161 4C96                        u9201 0E46                        u9121 3A2A  
                      u9041 38AA                        u7610 2908                        u7530 2810  
                      u7450 2682                        u7370 19F0                        u7290 191E  
                      u8090 4306                        u8250 44D8                        u8410 3404  
                      u8330 4E60                        u8170 4DA4                        u9210 0E80  
                      u9130 0B70                        u9050 390A                        u7611 2904  
                      u7531 280C                        u7451 267E                        u7371 19EC  
                      u7291 191A                        u8091 4302                        u8331 4E5C  
                      u8171 4DA0                        u9211 0E7C                        u9131 0B6C  
                      u9051 3906                        u8500 3CE8                        u7620 291C  
                      u7540 283A                        u7460 2692                        u7700 1AF0  
                      u7380 1A02                        u8260 44F6                        u8420 3420  
                      u8340 32B0                        u8180 4DC2                        u9220 0EB2  
                      u9140 0BDC                        u9300 4F8A                        u9060 3960  
                      u8501 3CE4                        u7621 2918                        u7541 2836  
                      u7461 268E                        u7701 1AEC                        u7381 19FE  
                      u8085 42CE                        u8261 44F2                        u8421 341C  
                      u8181 4DBE                        u9221 0EAE                        u9141 0BD8  
                      u9301 4F86                        u9061 395C                        u8510 3CFA  
                      u7630 2936                        u7550 285E                        u7470 26D6  
                      u7710 1B02                        u7390 1A12                        u8270 451E  
                      u8430 345C                        u8350 32E0                        u8190 4DD8  
                      u9230 0EE4                        u9150 0BFE                        u9070 39AA  
                      u9310 22C6                        u8511 3CF6                        u7631 2932  
                      u7551 285A                        u7471 26D2                        u7711 1AFE  
                      u7391 1A0E                        u8271 451A                        u8255 44CE  
                      u8431 3458                        u8415 33FA                        u8351 32DC  
                      u8191 4DD4                        u9231 0EE0                        u9151 0BFA  
                      u9071 39A6                        u9311 22C0                        u9400 498E  
                      u8520 3D14                        u7640 297E                        u7560 2874  
                      u7480 26E8                        u7800 1DA2                        u7720 1B12  
                      u8280 4548                        u8360 3302                        u8440 4F4A  
                      u8600 02AC                        u9240 0F06                        u9160 0C2C  
                      u9080 39C8                        u9320 22C8                        u9401 498A  
                      u8521 3D10                        u7641 297A                        u7561 2870  
                      u7481 26E4                        u7801 1D9E                        u7721 1B0E  
                      u8281 4544                        u8361 32FE                        u8345 32A6  
                      u8441 4F46                        u8601 02A8                        u9241 0F02  
                      u9161 0C28                        u9081 39C4                        u9410 499E  
                      u8530 3D24                        u8450 3BF0                        u7650 29AE  
                      u7570 2892                        u7490 26F8                        u7810 1DB6  
                      u7730 1B48                        u8610 0326                        u9250 0FA0  
                      u9170 0CC8                        u9090 39D8                        u9330 22EA  
                      u9411 499A                        u8531 3D20                        u8451 3BEA  
                      u7651 29AA                        u7571 288E                        u7491 26F4  
                      u7811 1DB2                        u7731 1B44                        u8611 0322  
                      u9251 0F9C                        u9171 0CC4                        u9091 39D4  
                      u9331 22E6                        u9260 524E                        u9420 515E  
                      u7900 48B6                        u8460 3BF2                        u7660 29DC  
                      u7580 28B2                        u7820 1DD0                        u7740 1B58  
                      u8380 3370                        u8700 0568                        u8620 03B2  
                      u8540 0176                        u9180 0CE4                        u9340 2468  
                      u9500 115E                        u9261 524A                        u9421 515A  
                      u7901 48B2                        u7661 29D8                        u7581 28AE  
                      u7821 1DCC                        u7741 1B54                        u8381 336C  
                      u8701 0564                        u8621 03AE                        u8541 0172  
                      u9181 0CE0                        u9341 2464                        u9501 115A  
                      u9270 525C                        u9430 5182                        u7910 48DC  
                      u8470 3C02                        u7590 28C4                        u7830 1E18  
                      u7750 1CD2                        u7670 1A8E                        u8390 3394  
                      u8710 06B0                        u8630 03E4                        u8550 01C0  
                      u9190 0D84                        u9350 2650                        u9510 117C  
                      u9271 5258                        u9431 517E                        u7911 48D8  
                      u8471 3BFE                        u7591 28C0                        u7831 1E14  
                      u7671 1A8A                        u8295 455A                        u8375 3316  
                      u8711 06AC                        u8631 03E0                        u8551 01BC  
                      u9191 0D80                        u9351 264C                        u9511 1178  
                      u9360 4900                        u7920 49B2                        u8480 3C2E  
                      u7840 1E46                        u7760 1D2C                        u7680 1AA0  
                      u8376 3320                        u8800 09A2                        u8720 0716  
                      u8640 0422                        u8560 01D0                        u9440 508C  
                      u9520 118C                        u9280 4D46                        u9361 48FC  
                      u7921 49AE                        u8481 3C2A                        u7841 1E42  
                      u7761 1D28                        u7681 1A9C                        u8377 3330  
                      u8801 099E                        u8721 0712                        u8641 041E  
                      u8561 01CC                        u9441 5088                        u9521 1188  
                      u9281 4D42                        u9370 491E                        u7930 49CC  
                      u8490 3C44                        u7850 1E80                        u7770 1D4C  
                      u7690 1AB0                        u8810 0A74                        u8730 075E  
                      u8650 04AE                        u8570 020E                        u9450 50A0  
                      u9530 1268                        u9290 4D80                        u9371 491A  
                      u7931 49C8                        u8491 3C40                        u7851 1E7C  
                      u7771 1D48                        u7755 1CC8                        u7691 1AAC  
                      u8395 338A                        u8811 0A70                        u8731 075A  
                      u8651 04AA                        u8571 020A                        u9451 509C  
                      u9531 1264                        u9291 4D7C                        u9700 46C0  
                      u9380 493A                        u7860 483C                        u7940 49E6  
                      u7780 1D5E                        u8820 0A90                        u8740 076E  
                      u8660 04E4                        u8580 0220                        u8900 3ADE  
                      u9540 1342                        u9460 10CA                        u9701 46BC  
                      u9381 4936                        u7861 4838                        u7941 49E2  
                      u7781 1D5A                        u8821 0A8C                        u8741 076A  
                      u8661 04E0                        u8581 021C                        u8901 3ADA  
                      u9541 133E                        u9461 10C4                        u9605 52CA  
                      u9710 4750                        u9390 4978                        u7870 4856  
                      u7950 4A04                        u6990 5290                        u7790 1D8C  
                      u8830 0AF6                        u8750 0808                        u8670 04FA  
                      u8590 029A                        u8910 3B04                        u9550 1360  
                      u9470 10CC                        u9606 52CC                        u9711 474C  
                      u7871 4852                        u7951 4A00                        u6991 528C  
                      u7791 1D88                        u8831 0AF0                        u8751 0804  
                      u8671 04F6                        u8591 0296                        u8911 3B00  
                      u9551 135C                        u9615 52BC                        u7880 487C  
                      u7960 4A1A                        u8840 0AF8                        u8760 0856  
                      u8680 0530                        u8920 3B3E                        u9560 1370  
                      u9480 10EE                        u9616 52BE                        u9800 3FAC  
                      u7881 4878                        u7961 4A16                        u8761 0852  
                      u8681 052C                        u8921 3B3A                        u9721 418C  
                      u9561 136C                        u9481 10EA                        u9625 52AE  
                      u7890 489A                        u7970 4A3E                        u8850 0B0C  
                      u8770 0906                        u8690 053E                        u8930 3B64  
                      u9730 41AA                        u9570 13F0                        u9490 1104  
                      u9626 52B0                        u9810 3FCE                        u9650 5140  
                      u7891 4896                        u7971 4A3A                        u8851 0B08  
                      u8771 0902                        u8691 053A                        u9731 41A6  
                      u9571 13EC                        u9491 1100                        u9635 52A0  
                      u9811 3FCA                        u9651 513C                        u7980 4B2C  
                      u8780 0940                        u8940 3B96                        u8860 3A5C  
                      u9740 41C2                        u9580 149A                        u9660 4D18  
                      u9636 52A2                        u9820 4006                        u9900 3EB4  
                      u9397 496E                        u7981 4B28                        u8781 093C  
                      u8941 3B92                        u8861 3A58                        u9741 41BE  
                      u9581 1496                        u9645 52E6                        u9821 4002  
                      u9901 3EB0                        u7990 4B6A                        u8790 094E  
                      u8950 3BA4                        u8870 3AA2                        u9670 4E0C  
                      u9646 52E8                        u9830 401C                        u9910 4062  
                      u7991 4B66                        u8791 094A                        u8951 3BA0  
                      u9671 4E08                        u9831 4018                        u9751 3F22  
                      u9911 405E                        u8960 3BDE                        u8880 3AB2  
                      u9680 4E28                        u9920 40B6                        u9840 3D9C  
                      u8961 3BDA                        u8937 3B5A                        u8881 3AAE  
                      u9681 4E24                        u9665 4D0E                        u9761 3F34  
                      u9921 40B2                        u9841 3D98                        u8890 3AC0  
                      u8970 45A4                        u9690 4E3E                        u9930 40DC  
                      u9850 3E00                        u8891 3ABC                        u8971 45A0  
                      u9691 4E3A                        u9595 52D8                        u9931 40D8  
                      u9851 3DFC                        u8980 4638                        u9596 52DA  
                      u9940 40EA                        u9860 3E5A                        u8877 3A98  
                      u8981 4634                        u9941 40E6                        u9861 3E56  
                      u8990 464A                        u9790 3FAA                        u9950 40FC  
                      u9870 3E68                        u8991 4646                        u9791 3FA4  
                      u9951 40F8                        u9871 3E64                        u9784 3F94  
                      u9960 4114                        u9880 3E8E                        u9785 3F90  
                      u9961 4110                        u9881 3E8A                        _TMR1 0FCE  
                      u9778 3F66                        u9970 4128                        u9890 3E9C  
                      u9779 3FAE                        u9971 4124                        u9891 3E98  
                      u9980 414E                        u9981 414A                        u9990 415C  
                      u9991 4158                        abs@a 000C                        _dbuf 0127  
                      _half FE53                        _labs 4E52                        _main 29F0  
                      _dtoa 3BE0                        _rand 4CBA                        _seed 0197  
                      _prec 0057                        _sinf 10A8                        pad@i 001E  
                      pad@p 001B                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf1 0FE7                        indf2 0FDF                        fsr1l 0FE1  
                      fsr2l 0FD9                        _stoa 3A42                        btemp 005A  
                      _utoa 4596               ___fpclassifyf 4498                        prodh 0FF4  
                      prodl 0FF3                        start 014E             ___fldiv@new_exp 003E  
              ___param_bank 0000                       ??_ISR 0001              _LCD_ShowString 48EE  
                     ??_abs 000E                       ??_pad 001D            __end_of_LCD_Init 4760  
          __end_of_LCD_Send 5260               ___fltol@sign1 0052                       ?_labs 0006  
           __end_of___fladd 1A74                       ?_main 0001                       ?_dtoa 0020  
           __end_of___fldiv 29F0                       ?_rand 0012             __end_of___awdiv 48EE  
           __end_of___cosdf 388E             __end_of___lbdiv 4E52             __end_of___flneg 50E0  
                     STR_10 FF6A                       STR_11 FF9D                       STR_12 FF37  
                     STR_20 FFE1                       STR_13 FE79                       STR_21 FFFB  
                     STR_30 FFD2                       STR_14 FF04                       STR_22 FFF7  
                     STR_15 FFAE                       STR_31 FE77                       STR_23 FFF3  
                     STR_16 FED1                       STR_32 FEAF                       STR_24 FFD7  
                     STR_33 FE77                       STR_17 FF59                       STR_25 FFC6  
                     STR_18 FFE6                       STR_42 FFBF                       STR_34 FE9D  
                     STR_26 FFD6                       STR_27 FFCC                       STR_35 FEC0  
                     STR_19 FFDC                       STR_28 FFCD                       STR_36 FFEB  
           __end_of___awmod 4A50                       STR_29 FE8A                       STR_39 FFEF  
                     ?_sinf 00A4             __end_of___flmul 1E9E             __end_of___flsub 4FDE  
           __end_of___fltol 4394                       ?_stoa 0010                       u10000 4170  
                     u10001 416C                       u10011 349E                       u10020 34C6  
                     u10100 2FA8                       u10021 34C2                       u10101 2FA4  
                     u10030 3566                       u10110 2FCA                       u10031 3562  
                     u10111 2FC6                       ?_utoa 0020                       u10040 3640  
                     u10120 2FDE                       u10200 2072                       u10041 363C  
                     u10121 2FDA                       u10201 206E                       u10050 3666  
                     u10130 2FF2                       u10210 2080                       u10051 3662  
                     u10131 2FEE                       u10211 207C                       u10060 3674  
                     u10140 3006                       u10220 212C                       u10300 2B26  
                     u10061 3670                       u10141 3002                       u10221 2128  
                     u10301 2B22                       u10070 368C                       u10150 3034  
                     u10230 215C                       u10310 2B34                       u10071 3688  
                     u10151 3030                       u10231 2158                       u10311 2B30  
                     u10080 2DBE                       u10240 227E                       u10320 2B5A  
                     u10081 2DBA                       u10241 227A                       u10161 1EE4  
                     u10321 2B56                       u10090 2E20                       u10330 2B68  
                     u10250 2A90                       u10091 2E1C                       u10171 1F18  
                     u10331 2B64                       u10251 2A8C                       u10180 1F92  
                     u10340 2D34                       u10260 2AB6                       u10181 1F8E  
                     u10341 2D30                       u10261 2AB2                       u10190 204C  
                     u10270 2AD4                       u10191 2048                       u10407 2C40  
                     u10271 2AD0                       u10280 2AE2                       u10417 2C66  
                     u10281 2ADE                       u10290 2B08                       u10507 3018  
                     u10427 2C8C                       u10291 2B04             ___awdiv@divisor 001A  
                     u10517 364C                       u10437 2CCA                       u10357 29FC  
                     u10527 46A8                       u10447 3E74                       u10367 2A64  
                     u10537 4756                       u10457 40C0                       u10377 2A9C  
                     u10467 4132                       u10387 2AEE                       u10477 3FD8  
                     u10397 2B40                       u10487 2058                       u10497 2212  
                     _RC1IE 7CED                       _RC1IF 7CF5             __end_of___lwdiv 4CBA  
           __end_of___sindf 3268             __end_of___lwmod 4DF6                       i2l412 0088  
                     i2l414 0074                       i2l423 0142             ___awdiv@counter 001C  
              ___sindf$4534 0070                ___sindf$4535 0074                ___sindf$4536 0078  
              vfpfcnvrt@fmt 00BB                       _TX1IF 7CF4         ___lmul@multiplicand 000A  
           __end_of_pio2_1t FE4B                       _fabsf 5184                       _flags 0059  
                     _gmail 0177         read_prec_or_width@c 000E         read_prec_or_width@n 000F  
                     _fputc 4760                       _fputs 5024                       labs@a 0006  
                     pad@fp 0017                       _width 0055             __end_of_invpio2 FE53  
                     _putch 5280                       dtoa@d 0022                       dtoa@i 002B  
                     dtoa@p 0028                       dtoa@s 002A                       dtoa@w 0026  
      __end_of_LED1_Control 52DC             __end_of_runGAME 2294             __end_of_runGPIO 4034  
                     pclath 0FFA                       tablat 0FF5             __end_of_runUART 3EC8  
      __end_of_LED2_Control 52CE                       sinf@n 00B0                       sinf@x 00A4  
                     sinf@y 00B6                       plusw1 0FE3                       plusw2 0FDB  
                     stoa@l 001C                       stoa@p 0016                       stoa@s 0012  
                     stoa@w 0018                       ttemp5 005B                       ttemp6 005E  
                     ttemp7 0062                       utoa@d 0022        __end_of_LED3_Control 52C0  
                     utoa@i 0028                       utoa@p 0026                       utoa@w 0024  
                     status 0FD8                       wtemp8 005B             __end_of_sprintf 5024  
            ?___fpclassifyf 0006             ___lbdiv@divisor 0006        __end_of_LED4_Control 52B2  
           ___lbdiv@counter 0008        __end_of_LED5_Control 52A4             runUART@reversed 00D4  
      __end_of_LED6_Control 52EA             __initialization 4EA8      __end_of_LCD_ShowString 49A0  
              __end_of_half FE57                __end_of_labs 4EA8                __end_of_main 2D4E  
              __end_of_dtoa 3D5C                __end_of_rand 4D28                __end_of_sinf 15B2  
              __end_of_stoa 3BE0                __end_of_utoa 4686                LCD_Send@data 0006  
                    ??_labs 000A                      ??_main 00FA                      ??_dtoa 0024  
                    ??_rand 0014                      ??_sinf 0054                      ??_stoa 0014  
                    ??_utoa 0024           __end_of_LCD_Clear 5184               __activetblptr 0002  
__end_of_read_prec_or_width 4AFE                ?_moveDisplay 00E7                      ?_fabsf 0006  
                    ?_fputc 0007                      ?_fputs 0010                      _ADRESH 0FC4  
                    _ADRESL 0FC3                      _CCPR1L 0FBE            ___awdiv@dividend 0018  
                    _GAMEIE 0124                      ?_putch 0001                      _GODONE 7E11  
                    _GPIOIE 0126                      i2l6250 0012                      i2l6260 0066  
                    i2l6252 0020                      i2l6270 00A0                      i2l6254 002E  
                    i2l6272 00AE                      i2l6280 00CC                      i2l6264 0082  
                    i2l6256 0040                      i2l6290 0110                      i2l6282 00DA  
                    i2l6274 00C0                      i2l6266 0090                      i2l6258 004E  
                    i2l6292 0120                      i2l6284 00E8                      i2l6276 00C2  
                    i2l6268 0092                      i2l6294 0128                      i2l6286 00FA  
                    i2l6278 00CA                      i2l6296 012C                      i2l6288 00FE  
                    i2l6298 013A                      _RCREG1 0FAE               ___rem_pio2f@n 00A0  
             ___rem_pio2f@t 009C               ___rem_pio2f@x 0084               ___rem_pio2f@y 0088  
             vfpfcnvrt@done 00BF                      _UARTIE 0125                      _SPBRG1 0FAF  
                    _TMR1IE 7CE8                      _TMR1IF 7CF0                      _TMR2IE 7CE9  
                    _TMR2IF 7CF1                      _TMR1ON 7E68                      _TMR2ON 7DD2  
                    _SSP1IF 7CF3                      _SSP2IF 7D27                      _TXREG1 0FAD  
          __end_of___xxtofl 3A42                _CCPTMRS0bits 0F49                vfprintf@cfmt 00CC  
           ?_LCD_ShowString 0007                      _s1pio2 FE73                      _s2pio2 FE6F  
                    _s3pio2 FE6B                      _s4pio2 FE67                      ___flge 4394  
                    ___fleq 4AFE                      ___lmul 4D28                   ??___fladd 004E  
                    ___wmul 5214                   ??___fldiv 0035                   ??___awdiv 001C  
                 ??___cosdf 0052                   ??___lbdiv 0007                   ??___flneg 0052  
                 ??___awmod 000A                   ??___flmul 001C                   ??___flsub 0052  
                 ??___fltol 0068            runUART@keepState 00F3                      _efgtoa 0152  
                 ??___lwdiv 000A                   ??___sindf 0052                   ??___lwmod 000A  
                    _pio2_1 FE4B                      _floorf 3268                      fabsf@u 000A  
                    fabsf@x 0006                      _memcpy 4EFC        read_prec_or_width@ap 000D  
                    clear_0 4ECE                      clear_1 4EDA            ___awdiv@quotient 001E  
                    _runADC 347E                      _runDAC 2D4E             ___awmod@divisor 0008  
                    isa$std 0001                      _runPWM 4034        runGAME@keepStateGAME 01C5  
           ___awmod@counter 000A                      _printf 5260                      pad@buf 0019  
                    dtoa@fp 0020                      _strcpy 50E0                      _strlen 5118  
                    fputc@c 0007                      fputs@c 0014                      fputs@i 0015  
                    fputs@s 0010            __end_of_runMUSIC 52EC             ___fpclassifyf@e 000E  
           ___fpclassifyf@u 0010             ___fpclassifyf@x 0006                __mediumconst FE36  
                 ??_runGAME 00E7                      sinf@ux 00BA                   ??_runGPIO 0007  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
         __end_of_SPI_write 50A6                   ??_runUART 00D2                      stoa@cp 001A  
                    stoa@fp 0010            __end_of_vfprintf 4F96                      utoa@fp 0020  
                 ??_sprintf 0054            ___lbdiv@dividend 0007                  ___flge@ff1 002D  
                ___flge@ff2 0031             ??___fpclassifyf 000A                ___xxtofl@arg 0010  
              ___xxtofl@exp 000F                ___xxtofl@val 0006                  ___fleq@ff1 0006  
                ___fleq@ff2 000A                  __accesstop 0060     __end_of__initialization 4EEE  
                 ?_LCD_Init 0001                   ?_LCD_Send 0001                  ___flneg@f1 0080  
             ___rparam_used 0001                  ___fltol@f1 0064              __pcstackCOMRAM 0001  
         LED4_Control@state 0006                __pidataBANK1 51EC               __end_of_fabsf 51B8  
             __end_of_fputc 482A               __end_of_fputs 5068               __end_of_putch 5296  
                __end_of_C0 FE67                  __end_of_C1 FE63                  __end_of_C2 FE5F  
                __end_of_C3 FE5B                  __end_of_S1 FE47                  __end_of_S2 FE43  
                __end_of_S3 FE3F                  __end_of_S4 FE3B            ___lbdiv@quotient 0009  
                   ??_fabsf 000A                     ??_fputc 000B                     ??_fputs 0014  
                   ??_putch 0006                  __pbssBANK0 00FE                  __pbssBANK1 0100  
                __pbssBANK2 0200                  ??_LCD_Init 0007                  ??_LCD_Send 0006  
               runADC@F6967 0100                SPI_write@LSB 0007                SPI_write@MSB 0006  
                   ISR@temp 0005                     ?___flge 002D                     ?___fleq 0006  
                   ?___lmul 0006                     ?___wmul 0006                     ?_efgtoa 0084  
             ??___rem_pio2f 0089                     ?_floorf 0046                _LED1_Control 52CE  
                   ?_memcpy 0006              ___lmul@product 000E                     ?_runADC 0001  
                   ?_runDAC 0001                _LED2_Control 52C0         runGAME@randomNumber 01CB  
                   ?_runPWM 0001                     ?_printf 00CE                     ?_strcpy 0006  
                   ?_strlen 0006                _LED3_Control 52B2                _LED4_Control 52A4  
                 ?___xxtofl 0006                _LED5_Control 5296              ___rem_pio2f@fn 0098  
            ___rem_pio2f@ty 008B              ___rem_pio2f@ux 0094                _LED6_Control 52DC  
                   _SSP2ADD 0F6E                     _SSP1BUF 0FC9                     _SSP2BUF 0F6F  
               runGAME@pot1 01C9                 runGAME@text 019B           runGPIO@LEDControl 0015  
           LCD_ShowString@i 000C                     __Hparam 0000                     __Lparam 0000  
                 ?_runMUSIC 0001                     ___fladd 15B2                     ___fldiv 2656  
                   ___awdiv 482A                     ___cosdf 3690                     ___lbdiv 4DF6  
                   ___flneg 50A6                     ___awmod 49A0                     ___flmul 1A74  
                   ___flsub 4F96                     ___fltol 428C                     ___lwdiv 4C46  
                   ___sindf 3036                     ___lwmod 4D92                   ?_vfprintf 00C7  
            main@setUpAgain 00FC                     __pcinit 4EA8                     __ramtop 1000  
                   __ptext0 29F0                     __ptext1 3D5C                     __ptext2 5118  
                   __ptext3 4034                     __ptext4 52EA                     __ptext5 3EC8  
                   __ptext6 5296                     __ptext7 52A4                     __ptext8 52B2  
                   __ptext9 52C0                     _pio2_1t FE47                   _T1CONbits 0FCD  
           runPWM@keepState 0022       read_prec_or_width@fmt 000C                  ??___xxtofl 000A  
       __end_of___rem_pio2f 2656            ___awmod@dividend 0006                     _invpio2 FE4F  
                   _runGAME 1E9E                     _runGPIO 3EC8                     efgtoa@c 008A  
                   efgtoa@d 0098                     efgtoa@e 009C                     efgtoa@f 0086  
                   efgtoa@g 00AF                     efgtoa@h 00A6                     efgtoa@i 00A4  
                   efgtoa@l 00AA                     efgtoa@m 009A                     efgtoa@n 00B3  
                   efgtoa@p 008F                     efgtoa@t 0091                     efgtoa@u 00B5  
                   efgtoa@w 009E                     _runUART 3D5C                   _LCD_Clear 514E  
                   _sprintf 4FDE            ___rem_pio2f$4533 008F        end_of_initialization 4EEE  
                   floorf@e 0064                     floorf@m 0060                     floorf@u 0066  
                   floorf@x 0046                     memcpy@d 000D                     memcpy@n 000A  
                   memcpy@s 000F                     fputc@fp 0009            ___rem_pio2f@F526 0115  
             __Lmediumconst FE36                     fputs@fp 0012            ??_LCD_ShowString 0009  
        _read_prec_or_width 4A50                   i2u1054_47 0058           LED1_Control@state 0006  
     LCD_ShowString@lineNum 000B            ___rem_pio2f@sign 0093          runGAME@GAMEdivider 01C8  
                ??_runMUSIC 0006           __end_of_vfpfcnvrt 10A8                  efgtoa@mode 0096  
                efgtoa@sign 00AE                     postdec1 0FE5                     postdec2 0FDD  
       ?_read_prec_or_width 000C                     postinc0 0FEE                     postinc1 0FE6  
                   postinc2 0FDE            vfpfcnvrt@convarg 00C0                  ??_vfprintf 0054  
                   strcpy@d 000A                     strlen@a 0008                     strlen@s 0006  
                 _PORTAbits 0F80                   _PORTCbits 0F82                 ___fladd@grs 0063  
             ___xxtofl@sign 000E                   _TRISAbits 0F92                   _TRISBbits 0F93  
                 _TRISCbits 0F94                   _TRISDbits 0F95                  ?_LCD_Clear 0001  
      ??_read_prec_or_width 000E                 ___fldiv@grs 0040                 ___fldiv@rem 0039  
                 _SPI_write 5068                 ___flmul@grs 0022                 _CCP1CONbits 0FBD  
         LED5_Control@state 0006              __end_of_s1pio2 FE77              __end_of_s2pio2 FE73  
            __end_of_s3pio2 FE6F              __end_of_s4pio2 FE6B              __end_of___flge 4498  
            __end_of___fleq 4BA8              __end_of___lmul 4D92                 vfpfcnvrt@ap 00BC  
               vfpfcnvrt@cp 00C5                 ___rem_pio2f 2294                 vfpfcnvrt@fp 00B9  
            __end_of___wmul 523A              __end_of_efgtoa 0B4C              __end_of_pio2_1 FE4F  
      moveDisplay@menuItem1 019B        moveDisplay@menuItem2 01AC              __end_of_floorf 347E  
      moveDisplay@menuItems 01BD              __end_of_memcpy 4F4C                  floorf@F521 0119  
            __end_of_runADC 3690              __end_of_runDAC 3036              __end_of_runPWM 417A  
            __end_of_printf 5280              __end_of_strcpy 5118              __end_of_strlen 514E  
       start_initialization 4EA8                 __end_of_ISR 014E                 __end_of_abs 51EC  
               __end_of_pad 4C46                  ?_SPI_write 0001       __end_of___fpclassifyf 4596  
           runADC@keepState 01B8                 vfprintf@fmt 00C9                    ??___flge 0035  
                  ??___fleq 000E                    ??___lmul 000E                    ??___wmul 000A  
                  ??_efgtoa 008B                 __pdataBANK1 01CE                    ??_floorf 004A  
                  ??_memcpy 000C                    ??_runADC 00E7                    ??_runDAC 00D2  
                  ??_runPWM 0020                    ??_printf 0054                    ??_strcpy 000A  
                  ??_strlen 0008            runGAME@GAMEround 01C7                   ___fladd@a 004A  
                 ___fladd@b 0046                   ___fldiv@a 0031                   ___fldiv@b 002D  
             runGPIO@states 0009                   ___cosdf@r 0068                   ___cosdf@w 0078  
                 ___cosdf@x 0064                   ___cosdf@z 007C                   ___flmul@a 0018  
                 ___flmul@b 0014                 __pbssCOMRAM 0055                   ___flsub@a 0068  
                 ___flsub@b 0064               __pcstackBANK0 0060               __pcstackBANK1 019B  
               ??_LCD_Clear 0007                   ___sindf@r 0068                   ___sindf@s 007C  
                 ___sindf@w 006C                   ___sindf@x 0064                   ___sindf@z 0080  
     runGPIO@numberOfStates 0021                 _efgtoa$4070 0093            ___lwdiv@dividend 0006  
                 _dtoa$4039 0024               SPI_write@data 0008                   __pintcode 0008  
             __pmediumconst FE36                    ?___fladd 0046                    ?___fldiv 002D  
                  ?___awdiv 0018                    ?___cosdf 0064                    ?___lbdiv 0006  
                  ?___flneg 0080                    ?___awmod 0006                    ?___flmul 0014  
                  ?___flsub 0064                    ?___fltol 0064                  runADC@pot1 01B4  
                runADC@pot2 01B6                    ?___lwdiv 0006                    ?___sindf 0064  
                  ?___lwmod 0006                  runADC@text 019B                   fabsf@F465 0111  
             ??_moveDisplay 00E8                    ?_runGAME 0001                    ?_runGPIO 0001  
                  ?_runUART 0001             runDAC@keepState 00DB            ___lwdiv@quotient 000B  
                  ?_sprintf 00CE                   _sinf$4245 00A8                   _sinf$4246 00AC  
                 _sinf$4529 00B2                    _GAMEtime 0123                 ??_SPI_write 0006  
            runDAC@DACindex 00DD                    _LCD_Init 4686                    _LCD_Send 523A  
            ___wmul@product 000A                    _LATAbits 0F89                    _LATBbits 0F8A  
                  _LATCbits 0F8B                    _LATDbits 0F8C                runGAME@F6970 0200  
              runGAME@F6964 0219                  runUART@len 00F4           LED2_Control@state 0006  
                  i2u690_40 0074                    i2u690_41 0070                    i2u691_40 0082  
                  i2u691_41 007E                    i2u692_40 00A0                    i2u692_41 009C  
                  i2u693_40 00AE                    i2u693_41 00AA                    i2u694_40 00C0  
                  i2u686_40 0020                    i2u694_41 00BC                    i2u686_41 001C  
                  i2u695_40 00DA                    i2u687_40 002E                    i2u695_41 00D6  
                  i2u687_41 002A                    i2u696_40 00E8                    i2u688_40 0040  
                  i2u696_41 00E4                    i2u688_41 003C                    i2u697_40 00FA  
                  i2u689_40 004E                    i2u697_41 00F6                    i2u689_41 004A  
                  i2u698_40 0110                    i2u698_41 010C                   _vfpfcnvrt 0B4C  
                _ADCON0bits 0FC2                  _ADCON2bits 0FC0           ___wmul@multiplier 0006  
                 main@menuI 00FD            moveDisplay@F6965 01CE                  vfpfcnvrt@c 00C4  
         ___lmul@multiplier 0006                   copy_data0 4EBC           runGAME@approxText 01AC  
       __end_of_moveDisplay 428C            moveDisplay@menuI 01CD            moveDisplay@where 00E7  
              runGPIO@F6975 01EA                runGPIO@F6993 01DE                runGPIO@GPIOi 0023  
                  __Hrparam 0000                   memcpy@tmp 000C                  vfprintf@ap 00CB  
                  __Lrparam 0000                  vfprintf@fp 00C7             runGAME@GAMEpart 01C6  
         LED6_Control@state 0006                ?___rem_pio2f 0084                  ?_vfpfcnvrt 00B9  
       runDAC@selectModeDAC 00DC                  _ANSELAbits 0F38                  _ANSELBbits 0F39  
                _ANSELCbits 0F3A                  _ANSELDbits 0F3B                  _ANSELEbits 0F3C  
        ___fpclassifyf@F465 011D                  sprintf@fmt 00D0                    ___xxtofl 388E  
           ___lwdiv@divisor 0008             ___lwdiv@counter 000A                    __ptext10 52CE  
                  __ptext11 52DC                    __ptext20 5184                    __ptext12 1E9E  
                  __ptext21 3690                    __ptext13 4CBA                    __ptext30 4596  
                  __ptext22 5260                    __ptext14 4D28                    __ptext31 4D92  
                  __ptext23 5068                    __ptext15 4DF6                    __ptext40 3268  
                  __ptext32 4C46                    __ptext24 347E                    __ptext16 2D4E  
                  __ptext41 4498                    __ptext33 3A42                    __ptext25 388E  
                  __ptext17 10A8                    __ptext50 3BE0                    __ptext42 428C  
                  __ptext34 4A50                    __ptext26 417A                    __ptext18 3036  
                  __ptext51 4BA8                    __ptext43 4F96                    __ptext35 5214  
                  __ptext27 4FDE                    __ptext19 2294                    __ptext60 4686  
                  __ptext52 5024                    __ptext44 15B2                    __ptext36 0152  
                  __ptext28 4F4C                    __ptext61 523A                    __ptext53 4760  
                  __ptext45 50A6                    __ptext37 50E0                    __ptext29 0B4C  
                  __ptext54 5280                    __ptext46 1A74                    __ptext38 4EFC  
                  __ptext55 51B8                    __ptext47 4394                    __ptext39 4E52  
                  __ptext56 49A0                    __ptext48 4AFE                    __ptext57 482A  
                  __ptext49 2656                    __ptext58 48EE                    __ptext59 514E  
            runADC@voltage1 01AC              runADC@voltage2 01B0                _SSP1CON1bits 0FC6  
              _SSP2CON1bits 0F6C                _SSP2CON2bits 0F6B                  strcpy@dest 0006  
                  efgtoa@fp 0084                    efgtoa@ne 008D                    efgtoa@pp 0095  
                  efgtoa@ou 00A0                    _runMUSIC 52EA                    isa$xinst 0000  
                  int$flags 005A                 _runDAC$4526 00D3                 _runDAC$4527 00D7  
                  _vfprintf 4F4C               ?_LED1_Control 0001                   printf@fmt 00CE  
              _SSP1STATbits 0FC7               ?_LED2_Control 0001                _SSP2STATbits 0F6D  
             ?_LED3_Control 0001               ?_LED4_Control 0001                   putch@data 0006  
             ?_LED5_Control 0001                    memcpy@d1 0006               ?_LED6_Control 0001  
                  memcpy@s1 0008                 _moveDisplay 417A                    intlevel2 0000  
                 sprintf@ap 00DA            ___lwmod@dividend 0006                   strcpy@src 0008  
                _RCSTA1bits 0FAB                    sinf@sign 00B1                    runGPIO@j 0024  
                  runUART@i 00F6                    runUART@p 00F8                 efgtoa@nmode 0097  
                  printf@ap 0054              ??_LED1_Control 0006              ??_LED2_Control 0006  
               ??_vfpfcnvrt 00BD      LCD_ShowString@textData 0007              ??_LED3_Control 0006  
            ??_LED4_Control 0006                    sprintf@f 00DB                    sprintf@s 00CE  
            ??_LED5_Control 0006             ___lwmod@divisor 0008              ??_LED6_Control 0006  
           ___lwmod@counter 000A            runPWM@multiplier 0023               ___fladd@signs 0060  
              ___fladd@aexp 0061                ___fladd@bexp 0062                ___cosdf$4530 006C  
              ___cosdf$4531 0070                ___cosdf$4532 0074               _keepStateGPIO 00FE  
         LED3_Control@state 0006  
