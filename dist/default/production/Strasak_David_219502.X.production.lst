

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 17 16:10:24 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83   000000                     
    84                           ; Generated 12/10/2023 GMT
    85                           ; 
    86                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F46K22 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118   000000                     
   119                           	psect	idataBANK1
   120   005030                     __pidataBANK1:
   121                           	callstack 0
   122                           
   123                           ;initializer for moveDisplay@F6965
   124   005030  DC                 	db	low STR_15
   125   005031  FF                 	db	high STR_15
   126   005032  E1                 	db	low STR_16
   127   005033  FF                 	db	high STR_16
   128   005034  FB                 	db	low STR_17
   129   005035  FF                 	db	high STR_17
   130   005036  F7                 	db	low STR_18
   131   005037  FF                 	db	high STR_18
   132   005038  F3                 	db	low STR_19
   133   005039  FF                 	db	high STR_19
   134   00503A  D7                 	db	low STR_20
   135   00503B  FF                 	db	high STR_20
   136   00503C  C6                 	db	low STR_21
   137   00503D  FF                 	db	high STR_21
   138   00503E  D6                 	db	low (STR_26+4)
   139   00503F  FF                 	db	high (STR_26+4)
   140                           
   141                           ;initializer for runGPIO@F6993
   142   005040  20                 	db	32
   143   005041  30                 	db	48
   144   005042  18                 	db	24
   145   005043  0C                 	db	12
   146   005044  06                 	db	6
   147   005045  03                 	db	3
   148   005046  01                 	db	1
   149   005047  03                 	db	3
   150   005048  06                 	db	6
   151   005049  0C                 	db	12
   152   00504A  18                 	db	24
   153   00504B  30                 	db	48
   154                           
   155                           ;initializer for runGPIO@F6975
   156   00504C  12                 	db	low _LED1_Control
   157   00504D  51                 	db	high _LED1_Control
   158   00504E  04                 	db	low _LED2_Control
   159   00504F  51                 	db	high _LED2_Control
   160   005050  F6                 	db	low _LED3_Control
   161   005051  50                 	db	high _LED3_Control
   162   005052  E8                 	db	low _LED4_Control
   163   005053  50                 	db	high _LED4_Control
   164   005054  DA                 	db	low _LED5_Control
   165   005055  50                 	db	high _LED5_Control
   166   005056  20                 	db	low _LED6_Control
   167   005057  51                 	db	high _LED6_Control
   168                           
   169                           	psect	mediumconst
   170   00FED0                     __pmediumconst:
   171                           	callstack 0
   172   00FED0  00                 	db	0
   173   00FED1  6C3C               	dw	27708
   174   00FED3  3636               	dw	13878
   175   00FED5                     __end_of_S4:
   176                           	callstack 0
   177   00FED5  07CF               	dw	1999
   178   00FED7  B950               	dw	47440
   179   00FED9                     __end_of_S3:
   180                           	callstack 0
   181   00FED9  8884               	dw	34948
   182   00FEDB  3C08               	dw	15368
   183   00FEDD                     __end_of_S2:
   184                           	callstack 0
   185   00FEDD  AAAB               	dw	43691
   186   00FEDF  BE2A               	dw	48682
   187   00FEE1                     __end_of_S1:
   188                           	callstack 0
   189   00FEE1  85A3               	dw	34211
   190   00FEE3  3288               	dw	12936
   191   00FEE5                     __end_of_pio2_1t:
   192                           	callstack 0
   193   00FEE5  0FDA               	dw	4058
   194   00FEE7  3FC9               	dw	16329
   195   00FEE9                     __end_of_pio2_1:
   196                           	callstack 0
   197   00FEE9  F983               	dw	63875
   198   00FEEB  3F22               	dw	16162
   199   00FEED                     __end_of_invpio2:
   200                           	callstack 0
   201   00FEED  0000               	dw	0
   202   00FEEF  3F00               	dw	16128
   203   00FEF1                     __end_of_half:
   204                           	callstack 0
   205   00FEF1  9A17               	dw	39447
   206   00FEF3  37CC               	dw	14284
   207   00FEF5                     __end_of_C3:
   208                           	callstack 0
   209   00FEF5  043F               	dw	1087
   210   00FEF7  BAB6               	dw	47798
   211   00FEF9                     __end_of_C2:
   212                           	callstack 0
   213   00FEF9  AA9F               	dw	43679
   214   00FEFB  3D2A               	dw	15658
   215   00FEFD                     __end_of_C1:
   216                           	callstack 0
   217   00FEFD  0000               	dw	0
   218   00FEFF  BF00               	dw	48896
   219   00FF01                     __end_of_C0:
   220                           	callstack 0
   221   00FF01  0FDB               	dw	4059
   222   00FF03  40C9               	dw	16585
   223   00FF05                     __end_of_s4pio2:
   224                           	callstack 0
   225   00FF05  CBE4               	dw	52196
   226   00FF07  4096               	dw	16534
   227   00FF09                     __end_of_s3pio2:
   228                           	callstack 0
   229   00FF09  0FDB               	dw	4059
   230   00FF0B  4049               	dw	16457
   231   00FF0D                     __end_of_s2pio2:
   232                           	callstack 0
   233   00FF0D  0FDB               	dw	4059
   234   00FF0F  3FC9               	dw	16329
   235   00FF11                     __end_of_s1pio2:
   236                           	callstack 0
   237   000000                     _ADRESL	set	4035
   238   000000                     _RCREG1	set	4014
   239   000000                     _ANSELCbits	set	3898
   240   000000                     _TXREG1	set	4013
   241   000000                     _ADRESH	set	4036
   242   000000                     _LATBbits	set	3978
   243   000000                     _TXSTA1bits	set	4012
   244   000000                     _ANSELBbits	set	3897
   245   000000                     _TRISBbits	set	3987
   246   000000                     _SSP2STATbits	set	3949
   247   000000                     _SSP2ADD	set	3950
   248   000000                     _ANSELDbits	set	3899
   249   000000                     _PORTAbits	set	3968
   250   000000                     _PORTCbits	set	3970
   251   000000                     _LATCbits	set	3979
   252   000000                     _LATDbits	set	3980
   253   000000                     _ANSELAbits	set	3896
   254   000000                     _TRISAbits	set	3986
   255   000000                     _TRISCbits	set	3988
   256   000000                     _TMR2IE	set	31977
   257   000000                     _TMR2IF	set	31985
   258   000000                     _RC1IF	set	31989
   259   000000                     _RC1IE	set	31981
   260   000000                     _TMR1ON	set	32360
   261   000000                     _TMR1IF	set	31984
   262   000000                     _GIE	set	32663
   263   000000                     _TX1IF	set	31988
   264   000000                     _GODONE	set	32273
   265   000000                     _TRISDbits	set	3989
   266   000000                     _TMR1IE	set	31976
   267   000000                     _SSP1IF	set	31987
   268   000000                     _SSP2IF	set	32039
   269   000000                     _LATAbits	set	3977
   270   000000                     _CCPTMRS0bits	set	3913
   271   000000                     _ANSELEbits	set	3900
   272   000000                     _SSP2CON2bits	set	3947
   273   000000                     _SSP2CON1bits	set	3948
   274   000000                     _SSP2BUF	set	3951
   275   000000                     _RCSTA1bits	set	4011
   276   000000                     _SPBRG1	set	4015
   277   000000                     _ADCON2bits	set	4032
   278   000000                     _SSP1CON1bits	set	4038
   279   000000                     _SSP1BUF	set	4041
   280   000000                     _SSP1STATbits	set	4039
   281   000000                     _ADCON0bits	set	4034
   282   000000                     _PR2	set	4027
   283   000000                     _TMR2ON	set	32210
   284   000000                     _T1CONbits	set	4045
   285   000000                     _TMR1	set	4046
   286   000000                     _PEIE	set	32662
   287   000000                     _CCP1CONbits	set	4029
   288   000000                     _CCPR1L	set	4030
   289   00FF11                     STR_27:
   290   00FF11  25                 	db	37
   291   00FF12  75                 	db	117	;'u'
   292   00FF13  20                 	db	32
   293   00FF14  20                 	db	32
   294   00FF15  20                 	db	32
   295   00FF16  20                 	db	32
   296   00FF17  20                 	db	32
   297   00FF18  20                 	db	32
   298   00FF19  20                 	db	32
   299   00FF1A  20                 	db	32
   300   00FF1B  20                 	db	32
   301   00FF1C  20                 	db	32
   302   00FF1D  20                 	db	32
   303   00FF1E  20                 	db	32
   304   00FF1F  20                 	db	32
   305   00FF20  20                 	db	32
   306   00FF21  20                 	db	32
   307   00FF22  20                 	db	32
   308   00FF23  00                 	db	0
   309   00FF24                     STR_25:
   310   00FF24  50                 	db	80	;'P'
   311   00FF25  4F                 	db	79	;'O'
   312   00FF26  54                 	db	84	;'T'
   313   00FF27  31                 	db	49	;'1'
   314   00FF28  3A                 	db	58	;':'
   315   00FF29  25                 	db	37
   316   00FF2A  2E                 	db	46
   317   00FF2B  31                 	db	49	;'1'
   318   00FF2C  66                 	db	102	;'f'
   319   00FF2D  50                 	db	80	;'P'
   320   00FF2E  4F                 	db	79	;'O'
   321   00FF2F  54                 	db	84	;'T'
   322   00FF30  32                 	db	50	;'2'
   323   00FF31  3A                 	db	58	;':'
   324   00FF32  25                 	db	37
   325   00FF33  2E                 	db	46
   326   00FF34  31                 	db	49	;'1'
   327   00FF35  66                 	db	102	;'f'
   328   00FF36  00                 	db	0
   329   00FF37                     STR_28:
   330   00FF37  25                 	db	37
   331   00FF38  68                 	db	104	;'h'
   332   00FF39  75                 	db	117	;'u'
   333   00FF3A  20                 	db	32
   334   00FF3B  20                 	db	32
   335   00FF3C  20                 	db	32
   336   00FF3D  20                 	db	32
   337   00FF3E  20                 	db	32
   338   00FF3F  20                 	db	32
   339   00FF40  20                 	db	32
   340   00FF41  20                 	db	32
   341   00FF42  20                 	db	32
   342   00FF43  20                 	db	32
   343   00FF44  20                 	db	32
   344   00FF45  20                 	db	32
   345   00FF46  20                 	db	32
   346   00FF47  00                 	db	0
   347   00FF48                     STR_3:
   348   00FF48  42                 	db	66	;'B'
   349   00FF49  52                 	db	82	;'R'
   350   00FF4A  3A                 	db	58	;':'
   351   00FF4B  20                 	db	32
   352   00FF4C  31                 	db	49	;'1'
   353   00FF4D  39                 	db	57	;'9'
   354   00FF4E  32                 	db	50	;'2'
   355   00FF4F  30                 	db	48	;'0'
   356   00FF50  30                 	db	48	;'0'
   357   00FF51  20                 	db	32
   358   00FF52  20                 	db	32
   359   00FF53  20                 	db	32
   360   00FF54  20                 	db	32
   361   00FF55  20                 	db	32
   362   00FF56  20                 	db	32
   363   00FF57  20                 	db	32
   364   00FF58  00                 	db	0
   365   00FF59                     STR_1:
   366   00FF59  50                 	db	80	;'P'
   367   00FF5A  6F                 	db	111	;'o'
   368   00FF5B  7A                 	db	122	;'z'
   369   00FF5C  6F                 	db	111	;'o'
   370   00FF5D  72                 	db	114	;'r'
   371   00FF5E  21                 	db	33
   372   00FF5F  20                 	db	32
   373   00FF60  48                 	db	72	;'H'
   374   00FF61  61                 	db	97	;'a'
   375   00FF62  64                 	db	100	;'d'
   376   00FF63  21                 	db	33
   377   00FF64  21                 	db	33
   378   00FF65  21                 	db	33
   379   00FF66  20                 	db	32
   380   00FF67  20                 	db	32
   381   00FF68  20                 	db	32
   382   00FF69  00                 	db	0
   383   00FF6A                     STR_5:
   384   00FF6A  5A                 	db	90	;'Z'
   385   00FF6B  6D                 	db	109	;'m'
   386   00FF6C  61                 	db	97	;'a'
   387   00FF6D  63                 	db	99	;'c'
   388   00FF6E  6B                 	db	107	;'k'
   389   00FF6F  6E                 	db	110	;'n'
   390   00FF70  65                 	db	101	;'e'
   391   00FF71  74                 	db	116	;'t'
   392   00FF72  65                 	db	101	;'e'
   393   00FF73  20                 	db	32
   394   00FF74  42                 	db	66	;'B'
   395   00FF75  54                 	db	84	;'T'
   396   00FF76  4E                 	db	78	;'N'
   397   00FF77  32                 	db	50	;'2'
   398   00FF78  20                 	db	32
   399   00FF79  20                 	db	32
   400   00FF7A  00                 	db	0
   401   00FF7B                     STR_8:
   402   00FF7B  52                 	db	82	;'R'
   403   00FF7C  42                 	db	66	;'B'
   404   00FF7D  30                 	db	48	;'0'
   405   00FF7E  2D                 	db	45
   406   00FF7F  41                 	db	65	;'A'
   407   00FF80  32                 	db	50	;'2'
   408   00FF81  2C                 	db	44
   409   00FF82  20                 	db	32
   410   00FF83  42                 	db	66	;'B'
   411   00FF84  52                 	db	82	;'R'
   412   00FF85  3A                 	db	58	;':'
   413   00FF86  31                 	db	49	;'1'
   414   00FF87  39                 	db	57	;'9'
   415   00FF88  32                 	db	50	;'2'
   416   00FF89  30                 	db	48	;'0'
   417   00FF8A  30                 	db	48	;'0'
   418   00FF8B  00                 	db	0
   419   00FF8C                     STR_7:
   420   00FF8C  56                 	db	86	;'V'
   421   00FF8D  6F                 	db	111	;'o'
   422   00FF8E  6C                 	db	108	;'l'
   423   00FF8F  74                 	db	116	;'t'
   424   00FF90  79                 	db	121	;'y'
   425   00FF91  20                 	db	32
   426   00FF92  6E                 	db	110	;'n'
   427   00FF93  61                 	db	97	;'a'
   428   00FF94  20                 	db	32
   429   00FF95  50                 	db	80	;'P'
   430   00FF96  4F                 	db	79	;'O'
   431   00FF97  54                 	db	84	;'T'
   432   00FF98  65                 	db	101	;'e'
   433   00FF99  63                 	db	99	;'c'
   434   00FF9A  68                 	db	104	;'h'
   435   00FF9B  3A                 	db	58	;':'
   436   00FF9C  00                 	db	0
   437   00FF9D                     STR_4:
   438   00FF9D  4B                 	db	75	;'K'
   439   00FF9E  6F                 	db	111	;'o'
   440   00FF9F  6E                 	db	110	;'n'
   441   00FFA0  65                 	db	101	;'e'
   442   00FFA1  63                 	db	99	;'c'
   443   00FFA2  20                 	db	32
   444   00FFA3  2D                 	db	45
   445   00FFA4  20                 	db	32
   446   00FFA5  6E                 	db	110	;'n'
   447   00FFA6  65                 	db	101	;'e'
   448   00FFA7  77                 	db	119	;'w'
   449   00FFA8  20                 	db	32
   450   00FFA9  6C                 	db	108	;'l'
   451   00FFAA  69                 	db	105	;'i'
   452   00FFAB  6E                 	db	110	;'n'
   453   00FFAC  65                 	db	101	;'e'
   454   00FFAD  00                 	db	0
   455   00FFAE                     STR_9:
   456   00FFAE  31                 	db	49	;'1'
   457   00FFAF  3A                 	db	58	;':'
   458   00FFB0  74                 	db	116	;'t'
   459   00FFB1  72                 	db	114	;'r'
   460   00FFB2  2C                 	db	44
   461   00FFB3  32                 	db	50	;'2'
   462   00FFB4  3A                 	db	58	;':'
   463   00FFB5  73                 	db	115	;'s'
   464   00FFB6  69                 	db	105	;'i'
   465   00FFB7  6E                 	db	110	;'n'
   466   00FFB8  2C                 	db	44
   467   00FFB9  33                 	db	51	;'3'
   468   00FFBA  3A                 	db	58	;':'
   469   00FFBB  70                 	db	112	;'p'
   470   00FFBC  69                 	db	105	;'i'
   471   00FFBD  6C                 	db	108	;'l'
   472   00FFBE  00                 	db	0
   473   00FFBF                     STR_36:
   474   00FFBF  28                 	db	40
   475   00FFC0  6E                 	db	110	;'n'
   476   00FFC1  75                 	db	117	;'u'
   477   00FFC2  6C                 	db	108	;'l'
   478   00FFC3  6C                 	db	108	;'l'
   479   00FFC4  29                 	db	41
   480   00FFC5  00                 	db	0
   481   00FFC6                     STR_21:
   482   00FFC6  4D                 	db	77	;'M'
   483   00FFC7  55                 	db	85	;'U'
   484   00FFC8  53                 	db	83	;'S'
   485   00FFC9  49                 	db	73	;'I'
   486   00FFCA  43                 	db	67	;'C'
   487   00FFCB  00                 	db	0
   488   00FFCC                     STR_23:
   489   00FFCC  3E                 	db	62	;'>'
   490   00FFCD  25                 	db	37
   491   00FFCE  2D                 	db	45
   492   00FFCF  2A                 	db	42
   493   00FFD0  73                 	db	115	;'s'
   494   00FFD1  00                 	db	0
   495   00FFD2                     STR_26:
   496   00FFD2  25                 	db	37
   497   00FFD3  73                 	db	115	;'s'
   498   00FFD4  20                 	db	32
   499   00FFD5  0A                 	db	10
   500   00FFD6  00                 	db	0
   501   00FFD7                     STR_20:
   502   00FFD7  47                 	db	71	;'G'
   503   00FFD8  41                 	db	65	;'A'
   504   00FFD9  4D                 	db	77	;'M'
   505   00FFDA  45                 	db	69	;'E'
   506   00FFDB  00                 	db	0
   507   00FFDC                     STR_15:
   508   00FFDC  47                 	db	71	;'G'
   509   00FFDD  50                 	db	80	;'P'
   510   00FFDE  49                 	db	73	;'I'
   511   00FFDF  4F                 	db	79	;'O'
   512   00FFE0  00                 	db	0
   513   00FFE1                     STR_16:
   514   00FFE1  55                 	db	85	;'U'
   515   00FFE2  41                 	db	65	;'A'
   516   00FFE3  52                 	db	82	;'R'
   517   00FFE4  54                 	db	84	;'T'
   518   00FFE5  00                 	db	0
   519   00FFE6                     STR_14:
   520   00FFE6  25                 	db	37
   521   00FFE7  64                 	db	100	;'d'
   522   00FFE8  20                 	db	32
   523   00FFE9  0D                 	db	13
   524   00FFEA  00                 	db	0
   525   00FFEB                     STR_30:
   526   00FFEB  69                 	db	105	;'i'
   527   00FFEC  6E                 	db	110	;'n'
   528   00FFED  66                 	db	102	;'f'
   529   00FFEE  00                 	db	0
   530   00FFEF                     STR_33:
   531   00FFEF  6E                 	db	110	;'n'
   532   00FFF0  61                 	db	97	;'a'
   533   00FFF1  6E                 	db	110	;'n'
   534   00FFF2  00                 	db	0
   535   00FFF3                     STR_19:
   536   00FFF3  44                 	db	68	;'D'
   537   00FFF4  41                 	db	65	;'A'
   538   00FFF5  43                 	db	67	;'C'
   539   00FFF6  00                 	db	0
   540   00FFF7                     STR_18:
   541   00FFF7  41                 	db	65	;'A'
   542   00FFF8  44                 	db	68	;'D'
   543   00FFF9  43                 	db	67	;'C'
   544   00FFFA  00                 	db	0
   545   00FFFB                     STR_17:
   546   00FFFB  50                 	db	80	;'P'
   547   00FFFC  57                 	db	87	;'W'
   548   00FFFD  4D                 	db	77	;'M'
   549   00FFFE  00                 	db	0
   550   00FFFF  00                 	db	0	; dummy byte at the end
   551   000000                     
   552                           ; #config settings
   553                           
   554                           	psect	cinit
   555   004CEC                     __pcinit:
   556                           	callstack 0
   557   004CEC                     start_initialization:
   558                           	callstack 0
   559   004CEC                     __initialization:
   560                           	callstack 0
   561                           
   562                           ; Initialize objects allocated to BANK1 (40 bytes)
   563                           ; load TBLPTR registers with __pidataBANK1
   564   004CEC  0E30               	movlw	low __pidataBANK1
   565   004CEE  6EF6               	movwf	tblptrl,c
   566   004CF0  0E50               	movlw	high __pidataBANK1
   567   004CF2  6EF7               	movwf	tblptrh,c
   568   004CF4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   569   004CF6  6EF8               	movwf	tblptru,c
   570   004CF8  EE01  F0CE         	lfsr	0,__pdataBANK1
   571   004CFC  EE10 F028          	lfsr	1,40
   572   004D00                     copy_data0:
   573   004D00  0009               	tblrd		*+
   574   004D02  CFF5 FFEE          	movff	tablat,postinc0
   575   004D06  50E5               	movf	postdec1,w,c
   576   004D08  50E1               	movf	fsr1l,w,c
   577   004D0A  E1FA               	bnz	copy_data0
   578                           
   579                           ; Clear objects allocated to BANK2 (34 bytes)
   580   004D0C  EE02  F000         	lfsr	0,__pbssBANK2
   581   004D10  0E22               	movlw	34
   582   004D12                     clear_0:
   583   004D12  6AEE               	clrf	postinc0,c
   584   004D14  06E8               	decf	wreg,f,c
   585   004D16  E1FD               	bnz	clear_0
   586                           
   587                           ; Clear objects allocated to BANK1 (155 bytes)
   588   004D18  EE01  F000         	lfsr	0,__pbssBANK1
   589   004D1C  0E9B               	movlw	155
   590   004D1E                     clear_1:
   591   004D1E  6AEE               	clrf	postinc0,c
   592   004D20  06E8               	decf	wreg,f,c
   593   004D22  E1FD               	bnz	clear_1
   594                           
   595                           ; Clear objects allocated to BANK0 (1 bytes)
   596   004D24  0100               	movlb	0
   597   004D26  6BFE               	clrf	__pbssBANK0& (0+255),b
   598                           
   599                           ; Clear objects allocated to COMRAM (5 bytes)
   600   004D28  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   601   004D2A  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   602   004D2C  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   603   004D2E  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   604   004D30  6A55               	clrf	__pbssCOMRAM& (0+255),c
   605   004D32                     end_of_initialization:
   606                           	callstack 0
   607   004D32                     __end_of__initialization:
   608                           	callstack 0
   609   004D32  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   610   004D34  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   611   004D36  0E00               	movlw	low (__Lmediumconst shr (0+16))
   612   004D38  6EF8               	movwf	tblptru,c
   613   004D3A  0100               	movlb	0
   614   004D3C  EFEA  F015         	goto	_main	;jump to C main() function
   615                           
   616                           	psect	bssCOMRAM
   617   000055                     __pbssCOMRAM:
   618                           	callstack 0
   619   000055                     _width:
   620                           	callstack 0
   621   000055                     	ds	2
   622   000057                     _prec:
   623                           	callstack 0
   624   000057                     	ds	2
   625   000059                     _flags:
   626                           	callstack 0
   627   000059                     	ds	1
   628                           
   629                           	psect	bssBANK0
   630   0000FE                     __pbssBANK0:
   631                           	callstack 0
   632   0000FE                     _keepStateGPIO:
   633                           	callstack 0
   634   0000FE                     	ds	1
   635                           
   636                           	psect	bssBANK1
   637   000100                     __pbssBANK1:
   638                           	callstack 0
   639   000100                     	ds	17
   640   000111                     fabsf@F465:
   641                           	callstack 0
   642   000111                     	ds	4
   643   000115                     ___rem_pio2f@F526:
   644                           	callstack 0
   645   000115                     	ds	4
   646   000119                     floorf@F521:
   647                           	callstack 0
   648   000119                     	ds	4
   649   00011D                     ___fpclassifyf@F465:
   650                           	callstack 0
   651   00011D                     	ds	4
   652   000121                     ISR@i:
   653                           	callstack 0
   654   000121                     	ds	2
   655   000123                     _GAMEtime:
   656                           	callstack 0
   657   000123                     	ds	1
   658   000124                     _GAMEIE:
   659                           	callstack 0
   660   000124                     	ds	1
   661   000125                     _UARTIE:
   662                           	callstack 0
   663   000125                     	ds	1
   664   000126                     _GPIOIE:
   665                           	callstack 0
   666   000126                     	ds	1
   667   000127                     _dbuf:
   668                           	callstack 0
   669   000127                     	ds	80
   670   000177                     _gmail:
   671                           	callstack 0
   672   000177                     	ds	32
   673   000197                     _seed:
   674                           	callstack 0
   675   000197                     	ds	4
   676                           
   677                           	psect	dataBANK1
   678   0001CE                     __pdataBANK1:
   679                           	callstack 0
   680   0001CE                     moveDisplay@F6965:
   681                           	callstack 0
   682   0001CE                     	ds	16
   683   0001DE                     runGPIO@F6993:
   684                           	callstack 0
   685   0001DE                     	ds	12
   686   0001EA                     runGPIO@F6975:
   687                           	callstack 0
   688   0001EA                     	ds	12
   689                           
   690                           	psect	bssBANK2
   691   000200                     __pbssBANK2:
   692                           	callstack 0
   693   000200                     	ds	17
   694   000211                     	ds	17
   695                           
   696                           	psect	cstackBANK1
   697   00019B                     __pcstackBANK1:
   698                           	callstack 0
   699   00019B                     moveDisplay@menuItem1:
   700                           	callstack 0
   701   00019B                     runADC@text:
   702                           	callstack 0
   703   00019B                     runGAME@text:
   704                           	callstack 0
   705                           
   706                           ; 17 bytes @ 0x0
   707   00019B                     	ds	17
   708   0001AC                     runADC@voltage1:
   709                           	callstack 0
   710   0001AC                     moveDisplay@menuItem2:
   711                           	callstack 0
   712   0001AC                     runGAME@approxText:
   713                           	callstack 0
   714                           
   715                           ; 17 bytes @ 0x11
   716   0001AC                     	ds	4
   717   0001B0                     runADC@voltage2:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x15
   721   0001B0                     	ds	4
   722   0001B4                     runADC@pot1:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x19
   726   0001B4                     	ds	2
   727   0001B6                     runADC@pot2:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x1B
   731   0001B6                     	ds	2
   732   0001B8                     runADC@keepState:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x1D
   736   0001B8                     	ds	5
   737   0001BD                     runGAME@pot1:
   738                           	callstack 0
   739   0001BD                     moveDisplay@menuItems:
   740                           	callstack 0
   741                           
   742                           ; 16 bytes @ 0x22
   743   0001BD                     	ds	2
   744   0001BF                     runGAME@GAMEround:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0x24
   748   0001BF                     	ds	1
   749   0001C0                     runGAME@GAMEpart:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x25
   753   0001C0                     	ds	1
   754   0001C1                     runGAME@keepState:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x26
   758   0001C1                     	ds	1
   759   0001C2                     runGAME@GAMEdivider:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x27
   763   0001C2                     	ds	1
   764   0001C3                     runGAME@randomNumber:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x28
   768   0001C3                     	ds	10
   769   0001CD                     moveDisplay@menuI:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x32
   773   0001CD                     	ds	1
   774                           
   775                           	psect	cstackBANK0
   776   000060                     __pcstackBANK0:
   777                           	callstack 0
   778   000060                     ___fladd@signs:
   779                           	callstack 0
   780   000060                     floorf@m:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x0
   784   000060                     	ds	1
   785   000061                     ___fladd@aexp:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x1
   789   000061                     	ds	1
   790   000062                     ___fladd@bexp:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x2
   794   000062                     	ds	1
   795   000063                     ___fladd@grs:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x3
   799   000063                     	ds	1
   800   000064                     ?___flsub:
   801                           	callstack 0
   802   000064                     ?___sindf:
   803                           	callstack 0
   804   000064                     ?___cosdf:
   805                           	callstack 0
   806   000064                     ?___fltol:
   807                           	callstack 0
   808   000064                     floorf@e:
   809                           	callstack 0
   810   000064                     ___fltol@f1:
   811                           	callstack 0
   812   000064                     ___flsub@b:
   813                           	callstack 0
   814   000064                     ___cosdf@x:
   815                           	callstack 0
   816   000064                     ___sindf@x:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x4
   820   000064                     	ds	2
   821   000066                     floorf@u:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x6
   825   000066                     	ds	2
   826   000068                     ??___fltol:
   827   000068                     ___flsub@a:
   828                           	callstack 0
   829   000068                     ___cosdf@r:
   830                           	callstack 0
   831   000068                     ___sindf@r:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x8
   835   000068                     	ds	4
   836   00006C                     ___sindf@w:
   837                           	callstack 0
   838   00006C                     ___cosdf$4524:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0xC
   842   00006C                     	ds	4
   843   000070                     ___cosdf$4525:
   844                           	callstack 0
   845   000070                     ___sindf$4528:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x10
   849   000070                     	ds	4
   850   000074                     ___cosdf$4526:
   851                           	callstack 0
   852   000074                     ___sindf$4529:
   853                           	callstack 0
   854                           
   855                           ; 4 bytes @ 0x14
   856   000074                     	ds	4
   857   000078                     ___cosdf@w:
   858                           	callstack 0
   859   000078                     ___sindf$4530:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x18
   863   000078                     	ds	4
   864   00007C                     ___cosdf@z:
   865                           	callstack 0
   866   00007C                     ___sindf@s:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0x1C
   870   00007C                     	ds	4
   871   000080                     ?___flneg:
   872                           	callstack 0
   873   000080                     ___flneg@f1:
   874                           	callstack 0
   875   000080                     ___sindf@z:
   876                           	callstack 0
   877                           
   878                           ; 4 bytes @ 0x20
   879   000080                     	ds	4
   880   000084                     ?___rem_pio2f:
   881                           	callstack 0
   882   000084                     efgtoa@fp:
   883                           	callstack 0
   884   000084                     ___rem_pio2f@x:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x24
   888   000084                     	ds	2
   889   000086                     efgtoa@f:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x26
   893   000086                     	ds	2
   894   000088                     ___rem_pio2f@y:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0x28
   898   000088                     	ds	1
   899   000089                     ??___rem_pio2f:
   900                           
   901                           ; 1 bytes @ 0x29
   902   000089                     	ds	1
   903   00008A                     efgtoa@c:
   904                           	callstack 0
   905                           
   906                           ; 1 bytes @ 0x2A
   907   00008A                     	ds	1
   908   00008B                     ??_efgtoa:
   909   00008B                     ___rem_pio2f@ty:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x2B
   913   00008B                     	ds	2
   914   00008D                     efgtoa@ne:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x2D
   918   00008D                     	ds	2
   919   00008F                     efgtoa@p:
   920                           	callstack 0
   921   00008F                     ___rem_pio2f$4527:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x2F
   925   00008F                     	ds	2
   926   000091                     efgtoa@t:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x31
   930   000091                     	ds	2
   931   000093                     ___rem_pio2f@sign:
   932                           	callstack 0
   933   000093                     _efgtoa$4064:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x33
   937   000093                     	ds	1
   938   000094                     ___rem_pio2f@ux:
   939                           	callstack 0
   940                           
   941                           ; 4 bytes @ 0x34
   942   000094                     	ds	1
   943   000095                     efgtoa@pp:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0x35
   947   000095                     	ds	1
   948   000096                     efgtoa@mode:
   949                           	callstack 0
   950                           
   951                           ; 1 bytes @ 0x36
   952   000096                     	ds	1
   953   000097                     efgtoa@nmode:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x37
   957   000097                     	ds	1
   958   000098                     efgtoa@d:
   959                           	callstack 0
   960   000098                     ___rem_pio2f@fn:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x38
   964   000098                     	ds	2
   965   00009A                     efgtoa@m:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x3A
   969   00009A                     	ds	2
   970   00009C                     efgtoa@e:
   971                           	callstack 0
   972   00009C                     ___rem_pio2f@t:
   973                           	callstack 0
   974                           
   975                           ; 4 bytes @ 0x3C
   976   00009C                     	ds	2
   977   00009E                     efgtoa@w:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x3E
   981   00009E                     	ds	2
   982   0000A0                     efgtoa@ou:
   983                           	callstack 0
   984   0000A0                     ___rem_pio2f@n:
   985                           	callstack 0
   986                           
   987                           ; 4 bytes @ 0x40
   988   0000A0                     	ds	4
   989   0000A4                     ?_sinf:
   990                           	callstack 0
   991   0000A4                     efgtoa@i:
   992                           	callstack 0
   993   0000A4                     sinf@x:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0x44
   997   0000A4                     	ds	2
   998   0000A6                     efgtoa@h:
   999                           	callstack 0
  1000                           
  1001                           ; 4 bytes @ 0x46
  1002   0000A6                     	ds	2
  1003   0000A8                     _sinf$4239:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x48
  1007   0000A8                     	ds	2
  1008   0000AA                     efgtoa@l:
  1009                           	callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x4A
  1012   0000AA                     	ds	2
  1013   0000AC                     _sinf$4240:
  1014                           	callstack 0
  1015                           
  1016                           ; 4 bytes @ 0x4C
  1017   0000AC                     	ds	2
  1018   0000AE                     efgtoa@sign:
  1019                           	callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x4E
  1022   0000AE                     	ds	1
  1023   0000AF                     efgtoa@g:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x4F
  1027   0000AF                     	ds	1
  1028   0000B0                     sinf@n:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x50
  1032   0000B0                     	ds	1
  1033   0000B1                     sinf@sign:
  1034                           	callstack 0
  1035                           
  1036                           ; 1 bytes @ 0x51
  1037   0000B1                     	ds	1
  1038   0000B2                     _sinf$4523:
  1039                           	callstack 0
  1040                           
  1041                           ; 4 bytes @ 0x52
  1042   0000B2                     	ds	1
  1043   0000B3                     efgtoa@n:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x53
  1047   0000B3                     	ds	2
  1048   0000B5                     efgtoa@u:
  1049                           	callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x55
  1052   0000B5                     	ds	1
  1053   0000B6                     sinf@y:
  1054                           	callstack 0
  1055                           
  1056                           ; 4 bytes @ 0x56
  1057   0000B6                     	ds	3
  1058   0000B9                     vfpfcnvrt@fp:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x59
  1062   0000B9                     	ds	1
  1063   0000BA                     sinf@ux:
  1064                           	callstack 0
  1065                           
  1066                           ; 4 bytes @ 0x5A
  1067   0000BA                     	ds	1
  1068   0000BB                     vfpfcnvrt@fmt:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0x5B
  1072   0000BB                     	ds	1
  1073   0000BC                     vfpfcnvrt@ap:
  1074                           	callstack 0
  1075                           
  1076                           ; 1 bytes @ 0x5C
  1077   0000BC                     	ds	1
  1078   0000BD                     ??_vfpfcnvrt:
  1079                           
  1080                           ; 1 bytes @ 0x5D
  1081   0000BD                     	ds	2
  1082   0000BF                     vfpfcnvrt@done:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x5F
  1086   0000BF                     	ds	1
  1087   0000C0                     vfpfcnvrt@convarg:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0x60
  1091   0000C0                     	ds	4
  1092   0000C4                     vfpfcnvrt@c:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x64
  1096   0000C4                     	ds	1
  1097   0000C5                     vfpfcnvrt@cp:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x65
  1101   0000C5                     	ds	2
  1102   0000C7                     ?_vfprintf:
  1103                           	callstack 0
  1104   0000C7                     vfprintf@fp:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x67
  1108   0000C7                     	ds	2
  1109   0000C9                     vfprintf@fmt:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x69
  1113   0000C9                     	ds	2
  1114   0000CB                     vfprintf@ap:
  1115                           	callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x6B
  1118   0000CB                     	ds	1
  1119   0000CC                     vfprintf@cfmt:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x6C
  1123   0000CC                     	ds	2
  1124   0000CE                     ?_printf:
  1125                           	callstack 0
  1126   0000CE                     ?_sprintf:
  1127                           	callstack 0
  1128   0000CE                     sprintf@s:
  1129                           	callstack 0
  1130   0000CE                     printf@fmt:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x6E
  1134   0000CE                     	ds	2
  1135   0000D0                     sprintf@fmt:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x70
  1139   0000D0                     	ds	2
  1140   0000D2                     ??_runUART:
  1141   0000D2                     ??_runDAC:
  1142                           
  1143                           ; 1 bytes @ 0x72
  1144   0000D2                     	ds	1
  1145   0000D3                     _runDAC$4520:
  1146                           	callstack 0
  1147                           
  1148                           ; 4 bytes @ 0x73
  1149   0000D3                     	ds	1
  1150   0000D4                     runUART@reversed:
  1151                           	callstack 0
  1152                           
  1153                           ; 31 bytes @ 0x74
  1154   0000D4                     	ds	3
  1155   0000D7                     _runDAC$4521:
  1156                           	callstack 0
  1157                           
  1158                           ; 4 bytes @ 0x77
  1159   0000D7                     	ds	3
  1160   0000DA                     sprintf@ap:
  1161                           	callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x7A
  1164   0000DA                     	ds	1
  1165   0000DB                     runDAC@keepState:
  1166                           	callstack 0
  1167   0000DB                     sprintf@f:
  1168                           	callstack 0
  1169                           
  1170                           ; 12 bytes @ 0x7B
  1171   0000DB                     	ds	1
  1172   0000DC                     runDAC@selectModeDAC:
  1173                           	callstack 0
  1174                           
  1175                           ; 1 bytes @ 0x7C
  1176   0000DC                     	ds	1
  1177   0000DD                     runDAC@DACindex:
  1178                           	callstack 0
  1179                           
  1180                           ; 1 bytes @ 0x7D
  1181   0000DD                     	ds	10
  1182   0000E7                     ??_runADC:
  1183   0000E7                     ??_runGAME:
  1184   0000E7                     moveDisplay@where:
  1185                           	callstack 0
  1186                           
  1187                           ; 1 bytes @ 0x87
  1188   0000E7                     	ds	1
  1189   0000E8                     ??_moveDisplay:
  1190                           
  1191                           ; 1 bytes @ 0x88
  1192   0000E8                     	ds	11
  1193   0000F3                     runUART@keepState:
  1194                           	callstack 0
  1195                           
  1196                           ; 1 bytes @ 0x93
  1197   0000F3                     	ds	1
  1198   0000F4                     runUART@len:
  1199                           	callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x94
  1202   0000F4                     	ds	2
  1203   0000F6                     runUART@i:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x96
  1207   0000F6                     	ds	2
  1208   0000F8                     runUART@p:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x98
  1212   0000F8                     	ds	2
  1213   0000FA                     ??_main:
  1214                           
  1215                           ; 1 bytes @ 0x9A
  1216   0000FA                     	ds	2
  1217   0000FC                     main@setUpAgain:
  1218                           	callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x9C
  1221   0000FC                     	ds	1
  1222   0000FD                     main@menuI:
  1223                           	callstack 0
  1224                           
  1225                           ; 1 bytes @ 0x9D
  1226   0000FD                     	ds	1
  1227                           
  1228                           	psect	cstackCOMRAM
  1229   000001                     __pcstackCOMRAM:
  1230                           	callstack 0
  1231   000001                     ??_ISR:
  1232                           
  1233                           ; 1 bytes @ 0x0
  1234   000001                     	ds	4
  1235   000005                     ISR@temp:
  1236                           	callstack 0
  1237                           
  1238                           ; 1 bytes @ 0x4
  1239   000005                     	ds	1
  1240   000006                     ?_strlen:
  1241                           	callstack 0
  1242   000006                     ?___fpclassifyf:
  1243                           	callstack 0
  1244   000006                     ?___wmul:
  1245                           	callstack 0
  1246   000006                     ?___awmod:
  1247                           	callstack 0
  1248   000006                     ?___lwdiv:
  1249                           	callstack 0
  1250   000006                     ?___lwmod:
  1251                           	callstack 0
  1252   000006                     ?_labs:
  1253                           	callstack 0
  1254   000006                     ?_fabsf:
  1255                           	callstack 0
  1256   000006                     ?___lmul:
  1257                           	callstack 0
  1258   000006                     ?___xxtofl:
  1259                           	callstack 0
  1260   000006                     LCD_Send@data:
  1261                           	callstack 0
  1262   000006                     SPI_write@MSB:
  1263                           	callstack 0
  1264   000006                     putch@data:
  1265                           	callstack 0
  1266   000006                     LED1_Control@state:
  1267                           	callstack 0
  1268   000006                     LED2_Control@state:
  1269                           	callstack 0
  1270   000006                     LED3_Control@state:
  1271                           	callstack 0
  1272   000006                     LED4_Control@state:
  1273                           	callstack 0
  1274   000006                     LED5_Control@state:
  1275                           	callstack 0
  1276   000006                     LED6_Control@state:
  1277                           	callstack 0
  1278   000006                     ___lbdiv@divisor:
  1279                           	callstack 0
  1280   000006                     ___wmul@multiplier:
  1281                           	callstack 0
  1282   000006                     ___awmod@dividend:
  1283                           	callstack 0
  1284   000006                     ___lwdiv@dividend:
  1285                           	callstack 0
  1286   000006                     ___lwmod@dividend:
  1287                           	callstack 0
  1288   000006                     memcpy@d1:
  1289                           	callstack 0
  1290   000006                     strcpy@dest:
  1291                           	callstack 0
  1292   000006                     strlen@s:
  1293                           	callstack 0
  1294   000006                     ___lmul@multiplier:
  1295                           	callstack 0
  1296   000006                     ___fleq@ff1:
  1297                           	callstack 0
  1298   000006                     ___xxtofl@val:
  1299                           	callstack 0
  1300   000006                     ___fpclassifyf@x:
  1301                           	callstack 0
  1302   000006                     labs@a:
  1303                           	callstack 0
  1304   000006                     fabsf@x:
  1305                           	callstack 0
  1306                           
  1307                           ; 4 bytes @ 0x5
  1308   000006                     	ds	1
  1309   000007                     ??_LCD_Init:
  1310   000007                     ??_runGPIO:
  1311   000007                     SPI_write@LSB:
  1312                           	callstack 0
  1313   000007                     ___lbdiv@dividend:
  1314                           	callstack 0
  1315   000007                     LCD_ShowString@textData:
  1316                           	callstack 0
  1317   000007                     fputc@c:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x6
  1321   000007                     	ds	1
  1322   000008                     SPI_write@data:
  1323                           	callstack 0
  1324   000008                     ___lbdiv@counter:
  1325                           	callstack 0
  1326   000008                     ___wmul@multiplicand:
  1327                           	callstack 0
  1328   000008                     ___awmod@divisor:
  1329                           	callstack 0
  1330   000008                     ___lwdiv@divisor:
  1331                           	callstack 0
  1332   000008                     ___lwmod@divisor:
  1333                           	callstack 0
  1334   000008                     memcpy@s1:
  1335                           	callstack 0
  1336   000008                     strcpy@src:
  1337                           	callstack 0
  1338   000008                     strlen@a:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x7
  1342   000008                     	ds	1
  1343   000009                     ??_LCD_ShowString:
  1344   000009                     ___lbdiv@quotient:
  1345                           	callstack 0
  1346   000009                     fputc@fp:
  1347                           	callstack 0
  1348   000009                     runGPIO@states:
  1349                           	callstack 0
  1350                           
  1351                           ; 12 bytes @ 0x8
  1352   000009                     	ds	1
  1353   00000A                     ??___fpclassifyf:
  1354   00000A                     ??_labs:
  1355   00000A                     ??___xxtofl:
  1356   00000A                     ___awmod@counter:
  1357                           	callstack 0
  1358   00000A                     ___lwdiv@counter:
  1359                           	callstack 0
  1360   00000A                     ___lwmod@counter:
  1361                           	callstack 0
  1362   00000A                     ___wmul@product:
  1363                           	callstack 0
  1364   00000A                     memcpy@n:
  1365                           	callstack 0
  1366   00000A                     strcpy@d:
  1367                           	callstack 0
  1368   00000A                     ___lmul@multiplicand:
  1369                           	callstack 0
  1370   00000A                     ___fleq@ff2:
  1371                           	callstack 0
  1372   00000A                     fabsf@u:
  1373                           	callstack 0
  1374                           
  1375                           ; 4 bytes @ 0x9
  1376   00000A                     	ds	1
  1377   00000B                     ??_fputc:
  1378   00000B                     LCD_ShowString@lineNum:
  1379                           	callstack 0
  1380   00000B                     ___awmod@sign:
  1381                           	callstack 0
  1382   00000B                     ___lwdiv@quotient:
  1383                           	callstack 0
  1384                           
  1385                           ; 2 bytes @ 0xA
  1386   00000B                     	ds	1
  1387   00000C                     ?_abs:
  1388                           	callstack 0
  1389   00000C                     ?_read_prec_or_width:
  1390                           	callstack 0
  1391   00000C                     LCD_ShowString@i:
  1392                           	callstack 0
  1393   00000C                     read_prec_or_width@fmt:
  1394                           	callstack 0
  1395   00000C                     memcpy@tmp:
  1396                           	callstack 0
  1397   00000C                     abs@a:
  1398                           	callstack 0
  1399                           
  1400                           ; 2 bytes @ 0xB
  1401   00000C                     	ds	1
  1402   00000D                     read_prec_or_width@ap:
  1403                           	callstack 0
  1404   00000D                     memcpy@d:
  1405                           	callstack 0
  1406                           
  1407                           ; 2 bytes @ 0xC
  1408   00000D                     	ds	1
  1409   00000E                     ??_abs:
  1410   00000E                     ??___fleq:
  1411   00000E                     ___xxtofl@sign:
  1412                           	callstack 0
  1413   00000E                     read_prec_or_width@c:
  1414                           	callstack 0
  1415   00000E                     ___fpclassifyf@e:
  1416                           	callstack 0
  1417   00000E                     ___lmul@product:
  1418                           	callstack 0
  1419                           
  1420                           ; 4 bytes @ 0xD
  1421   00000E                     	ds	1
  1422   00000F                     ___xxtofl@exp:
  1423                           	callstack 0
  1424   00000F                     read_prec_or_width@n:
  1425                           	callstack 0
  1426   00000F                     memcpy@s:
  1427                           	callstack 0
  1428                           
  1429                           ; 2 bytes @ 0xE
  1430   00000F                     	ds	1
  1431   000010                     stoa@fp:
  1432                           	callstack 0
  1433   000010                     fputs@s:
  1434                           	callstack 0
  1435   000010                     ___xxtofl@arg:
  1436                           	callstack 0
  1437   000010                     ___fpclassifyf@u:
  1438                           	callstack 0
  1439                           
  1440                           ; 4 bytes @ 0xF
  1441   000010                     	ds	2
  1442   000012                     ?_rand:
  1443                           	callstack 0
  1444   000012                     stoa@s:
  1445                           	callstack 0
  1446   000012                     fputs@fp:
  1447                           	callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x11
  1450   000012                     	ds	2
  1451   000014                     ??_rand:
  1452   000014                     ??_stoa:
  1453   000014                     ?___flmul:
  1454                           	callstack 0
  1455   000014                     fputs@c:
  1456                           	callstack 0
  1457   000014                     ___flmul@b:
  1458                           	callstack 0
  1459                           
  1460                           ; 4 bytes @ 0x13
  1461   000014                     	ds	1
  1462   000015                     fputs@i:
  1463                           	callstack 0
  1464   000015                     runGPIO@LEDControl:
  1465                           	callstack 0
  1466                           
  1467                           ; 12 bytes @ 0x14
  1468   000015                     	ds	1
  1469   000016                     stoa@p:
  1470                           	callstack 0
  1471                           
  1472                           ; 2 bytes @ 0x15
  1473   000016                     	ds	1
  1474   000017                     pad@fp:
  1475                           	callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x16
  1478   000017                     	ds	1
  1479   000018                     ?___awdiv:
  1480                           	callstack 0
  1481   000018                     ___awdiv@dividend:
  1482                           	callstack 0
  1483   000018                     stoa@w:
  1484                           	callstack 0
  1485   000018                     ___flmul@a:
  1486                           	callstack 0
  1487                           
  1488                           ; 4 bytes @ 0x17
  1489   000018                     	ds	1
  1490   000019                     pad@buf:
  1491                           	callstack 0
  1492                           
  1493                           ; 2 bytes @ 0x18
  1494   000019                     	ds	1
  1495   00001A                     ___awdiv@divisor:
  1496                           	callstack 0
  1497   00001A                     stoa@cp:
  1498                           	callstack 0
  1499                           
  1500                           ; 2 bytes @ 0x19
  1501   00001A                     	ds	1
  1502   00001B                     pad@p:
  1503                           	callstack 0
  1504                           
  1505                           ; 2 bytes @ 0x1A
  1506   00001B                     	ds	1
  1507   00001C                     ??___flmul:
  1508   00001C                     ___awdiv@counter:
  1509                           	callstack 0
  1510   00001C                     stoa@l:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x1B
  1514   00001C                     	ds	1
  1515   00001D                     ??_pad:
  1516   00001D                     ___awdiv@sign:
  1517                           	callstack 0
  1518                           
  1519                           ; 1 bytes @ 0x1C
  1520   00001D                     	ds	1
  1521   00001E                     ___awdiv@quotient:
  1522                           	callstack 0
  1523   00001E                     pad@i:
  1524                           	callstack 0
  1525                           
  1526                           ; 2 bytes @ 0x1D
  1527   00001E                     	ds	2
  1528   000020                     ??_runPWM:
  1529   000020                     ___flmul@sign:
  1530                           	callstack 0
  1531   000020                     dtoa@fp:
  1532                           	callstack 0
  1533   000020                     utoa@fp:
  1534                           	callstack 0
  1535                           
  1536                           ; 2 bytes @ 0x1F
  1537   000020                     	ds	1
  1538   000021                     ___flmul@aexp:
  1539                           	callstack 0
  1540   000021                     runGPIO@numberOfStates:
  1541                           	callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x20
  1544   000021                     	ds	1
  1545   000022                     runPWM@keepState:
  1546                           	callstack 0
  1547   000022                     dtoa@d:
  1548                           	callstack 0
  1549   000022                     utoa@d:
  1550                           	callstack 0
  1551   000022                     ___flmul@grs:
  1552                           	callstack 0
  1553                           
  1554                           ; 4 bytes @ 0x21
  1555   000022                     	ds	1
  1556   000023                     runGPIO@GPIOi:
  1557                           	callstack 0
  1558   000023                     runPWM@multiplier:
  1559                           	callstack 0
  1560                           
  1561                           ; 1 bytes @ 0x22
  1562   000023                     	ds	1
  1563   000024                     runGPIO@j:
  1564                           	callstack 0
  1565   000024                     _dtoa$4033:
  1566                           	callstack 0
  1567   000024                     utoa@w:
  1568                           	callstack 0
  1569                           
  1570                           ; 2 bytes @ 0x23
  1571   000024                     	ds	2
  1572   000026                     ___flmul@bexp:
  1573                           	callstack 0
  1574   000026                     dtoa@w:
  1575                           	callstack 0
  1576   000026                     utoa@p:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x25
  1580   000026                     	ds	1
  1581   000027                     ___flmul@prod:
  1582                           	callstack 0
  1583                           
  1584                           ; 4 bytes @ 0x26
  1585   000027                     	ds	1
  1586   000028                     dtoa@p:
  1587                           	callstack 0
  1588   000028                     utoa@i:
  1589                           	callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x27
  1592   000028                     	ds	2
  1593   00002A                     dtoa@s:
  1594                           	callstack 0
  1595                           
  1596                           ; 1 bytes @ 0x29
  1597   00002A                     	ds	1
  1598   00002B                     ___flmul@temp:
  1599                           	callstack 0
  1600   00002B                     dtoa@i:
  1601                           	callstack 0
  1602                           
  1603                           ; 2 bytes @ 0x2A
  1604   00002B                     	ds	2
  1605   00002D                     ?___fldiv:
  1606                           	callstack 0
  1607   00002D                     ___flge@ff1:
  1608                           	callstack 0
  1609   00002D                     ___fldiv@b:
  1610                           	callstack 0
  1611                           
  1612                           ; 4 bytes @ 0x2C
  1613   00002D                     	ds	4
  1614   000031                     ___flge@ff2:
  1615                           	callstack 0
  1616   000031                     ___fldiv@a:
  1617                           	callstack 0
  1618                           
  1619                           ; 4 bytes @ 0x30
  1620   000031                     	ds	4
  1621   000035                     ??___fldiv:
  1622   000035                     ??___flge:
  1623                           
  1624                           ; 1 bytes @ 0x34
  1625   000035                     	ds	4
  1626   000039                     ___fldiv@rem:
  1627                           	callstack 0
  1628                           
  1629                           ; 4 bytes @ 0x38
  1630   000039                     	ds	4
  1631   00003D                     ___fldiv@sign:
  1632                           	callstack 0
  1633                           
  1634                           ; 1 bytes @ 0x3C
  1635   00003D                     	ds	1
  1636   00003E                     ___fldiv@new_exp:
  1637                           	callstack 0
  1638                           
  1639                           ; 2 bytes @ 0x3D
  1640   00003E                     	ds	2
  1641   000040                     ___fldiv@grs:
  1642                           	callstack 0
  1643                           
  1644                           ; 4 bytes @ 0x3F
  1645   000040                     	ds	4
  1646   000044                     ___fldiv@bexp:
  1647                           	callstack 0
  1648                           
  1649                           ; 1 bytes @ 0x43
  1650   000044                     	ds	1
  1651   000045                     ___fldiv@aexp:
  1652                           	callstack 0
  1653                           
  1654                           ; 1 bytes @ 0x44
  1655   000045                     	ds	1
  1656   000046                     ?___fladd:
  1657                           	callstack 0
  1658   000046                     ?_floorf:
  1659                           	callstack 0
  1660   000046                     ___fladd@b:
  1661                           	callstack 0
  1662   000046                     floorf@x:
  1663                           	callstack 0
  1664                           
  1665                           ; 4 bytes @ 0x45
  1666   000046                     	ds	4
  1667   00004A                     ??_floorf:
  1668   00004A                     ___fladd@a:
  1669                           	callstack 0
  1670                           
  1671                           ; 4 bytes @ 0x49
  1672   00004A                     	ds	4
  1673   00004E                     ??___fladd:
  1674                           
  1675                           ; 1 bytes @ 0x4D
  1676   00004E                     	ds	4
  1677   000052                     ___fltol@sign1:
  1678                           	callstack 0
  1679                           
  1680                           ; 1 bytes @ 0x51
  1681   000052                     	ds	1
  1682   000053                     ___fltol@exp1:
  1683                           	callstack 0
  1684                           
  1685                           ; 1 bytes @ 0x52
  1686   000053                     	ds	1
  1687   000054                     printf@ap:
  1688                           	callstack 0
  1689                           
  1690                           ; 1 bytes @ 0x53
  1691   000054                     	ds	1
  1692                           
  1693 ;;
  1694 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1695 ;;
  1696 ;; *************** function _main *****************
  1697 ;; Defined at:
  1698 ;;		line 10 in file "main.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  menuI           1  157[BANK0 ] unsigned char 
  1703 ;;  setUpAgain      1  156[BANK0 ] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;Total ram usage:        4 bytes
  1718 ;; Hardware stack levels required when called: 10
  1719 ;; This function calls:
  1720 ;;		_LCD_Init
  1721 ;;		_LCD_ShowString
  1722 ;;		_moveDisplay
  1723 ;;		_runADC
  1724 ;;		_runDAC
  1725 ;;		_runGAME
  1726 ;;		_runGPIO
  1727 ;;		_runMUSIC
  1728 ;;		_runPWM
  1729 ;;		_runUART
  1730 ;; This function is called by:
  1731 ;;		Startup code after reset
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text0
  1736   002BD4                     __ptext0:
  1737                           	callstack 0
  1738   002BD4                     _main:
  1739                           	callstack 21
  1740   002BD4                     
  1741                           ;main.c: 11:     _delay((unsigned long)((100)*(32E6/4000.0)));
  1742   002BD4  0E05               	movlw	5
  1743   002BD6  0100               	movlb	0	; () banked
  1744   002BD8  6FFB               	movwf	(??_main+1)& (0+255),b
  1745   002BDA  0E0F               	movlw	15
  1746   002BDC  6FFA               	movwf	??_main& (0+255),b
  1747   002BDE  0EF1               	movlw	241
  1748   002BE0                     u10297:
  1749   002BE0  2EE8               	decfsz	wreg,f,c
  1750   002BE2  D7FE               	bra	u10297
  1751   002BE4  2FFA               	decfsz	??_main& (0+255),f,b
  1752   002BE6  D7FC               	bra	u10297
  1753   002BE8  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1754   002BEA  D7FA               	bra	u10297
  1755   002BEC                     
  1756                           ;main.c: 13:     TRISCbits.RC0 = 1;
  1757   002BEC  8094               	bsf	148,0,c	;volatile
  1758   002BEE                     
  1759                           ;main.c: 14:     TRISAbits.RA4 = 1;
  1760   002BEE  8892               	bsf	146,4,c	;volatile
  1761   002BF0                     
  1762                           ;main.c: 15:     TRISAbits.RA3 = 1;
  1763   002BF0  8692               	bsf	146,3,c	;volatile
  1764   002BF2                     
  1765                           ;main.c: 16:     TRISAbits.RA2 = 1;
  1766   002BF2  8492               	bsf	146,2,c	;volatile
  1767   002BF4                     
  1768                           ;main.c: 17:     ANSELAbits.ANSA3 = 0;
  1769   002BF4  010F               	movlb	15	; () banked
  1770   002BF6  9738               	bcf	56,3,b	;volatile
  1771   002BF8                     
  1772                           ; BSR set to: 15
  1773                           ;main.c: 18:     ANSELAbits.ANSA2 = 0;
  1774   002BF8  9538               	bcf	56,2,b	;volatile
  1775   002BFA                     
  1776                           ; BSR set to: 15
  1777                           ;main.c: 21:     TRISDbits.RD2 = 0;
  1778   002BFA  9495               	bcf	149,2,c	;volatile
  1779   002BFC                     
  1780                           ; BSR set to: 15
  1781                           ;main.c: 22:     TRISDbits.RD3 = 0;
  1782   002BFC  9695               	bcf	149,3,c	;volatile
  1783   002BFE                     
  1784                           ; BSR set to: 15
  1785                           ;main.c: 23:     TRISCbits.RC4 = 0;
  1786   002BFE  9894               	bcf	148,4,c	;volatile
  1787   002C00                     
  1788                           ; BSR set to: 15
  1789                           ;main.c: 24:     TRISDbits.RD4 = 0;
  1790   002C00  9895               	bcf	149,4,c	;volatile
  1791   002C02                     
  1792                           ; BSR set to: 15
  1793                           ;main.c: 25:     TRISDbits.RD5 = 0;
  1794   002C02  9A95               	bcf	149,5,c	;volatile
  1795   002C04                     
  1796                           ; BSR set to: 15
  1797                           ;main.c: 26:     TRISDbits.RD6 = 0;
  1798   002C04  9C95               	bcf	149,6,c	;volatile
  1799   002C06                     
  1800                           ; BSR set to: 15
  1801                           ;main.c: 27:     LATDbits.LD2 = 1;
  1802   002C06  848C               	bsf	140,2,c	;volatile
  1803   002C08                     
  1804                           ; BSR set to: 15
  1805                           ;main.c: 28:     LATDbits.LD3 = 1;
  1806   002C08  868C               	bsf	140,3,c	;volatile
  1807   002C0A                     
  1808                           ; BSR set to: 15
  1809                           ;main.c: 29:     LATCbits.LC4 = 1;
  1810   002C0A  888B               	bsf	139,4,c	;volatile
  1811   002C0C                     
  1812                           ; BSR set to: 15
  1813                           ;main.c: 30:     LATDbits.LD4 = 1;
  1814   002C0C  888C               	bsf	140,4,c	;volatile
  1815   002C0E                     
  1816                           ; BSR set to: 15
  1817                           ;main.c: 31:     LATDbits.LD5 = 1;
  1818   002C0E  8A8C               	bsf	140,5,c	;volatile
  1819   002C10                     
  1820                           ; BSR set to: 15
  1821                           ;main.c: 32:     LATDbits.LD6 = 1;
  1822   002C10  8C8C               	bsf	140,6,c	;volatile
  1823   002C12                     
  1824                           ; BSR set to: 15
  1825                           ;main.c: 35:     LCD_Init();
  1826   002C12  EC65  F022         	call	_LCD_Init	;wreg free
  1827   002C16                     
  1828                           ;main.c: 36:     uint8_t menuI = 0;
  1829   002C16  0E00               	movlw	0
  1830   002C18  0100               	movlb	0	; () banked
  1831   002C1A  6FFD               	movwf	main@menuI& (0+255),b
  1832   002C1C                     
  1833                           ; BSR set to: 0
  1834                           ;main.c: 37:     uint8_t setUpAgain = 0;
  1835   002C1C  0E00               	movlw	0
  1836   002C1E  6FFC               	movwf	main@setUpAgain& (0+255),b
  1837   002C20                     
  1838                           ; BSR set to: 0
  1839                           ;main.c: 44:     menuI = moveDisplay(menuI,0);
  1840   002C20  0E00               	movlw	0
  1841   002C22  6FE7               	movwf	moveDisplay@where& (0+255),b
  1842   002C24  51FD               	movf	main@menuI& (0+255),w,b
  1843   002C26  ECDF  F01F         	call	_moveDisplay
  1844   002C2A  0100               	movlb	0	; () banked
  1845   002C2C  6FFD               	movwf	main@menuI& (0+255),b
  1846   002C2E                     l8302:
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;main.c: 47:         if(PORTCbits.RC0){
  1850   002C2E  A082               	btfss	130,0,c	;volatile
  1851   002C30  EF1C  F016         	goto	u10191
  1852   002C34  EF1E  F016         	goto	u10190
  1853   002C38                     u10191:
  1854   002C38  EF40  F016         	goto	l56
  1855   002C3C                     u10190:
  1856   002C3C                     
  1857                           ; BSR set to: 0
  1858                           ;main.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1859   002C3C  0E03               	movlw	3
  1860   002C3E  0100               	movlb	0	; () banked
  1861   002C40  6FFB               	movwf	(??_main+1)& (0+255),b
  1862   002C42  0E08               	movlw	8
  1863   002C44  6FFA               	movwf	??_main& (0+255),b
  1864   002C46  0E77               	movlw	119
  1865   002C48                     u10307:
  1866   002C48  2EE8               	decfsz	wreg,f,c
  1867   002C4A  D7FE               	bra	u10307
  1868   002C4C  2FFA               	decfsz	??_main& (0+255),f,b
  1869   002C4E  D7FC               	bra	u10307
  1870   002C50  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1871   002C52  D7FA               	bra	u10307
  1872   002C54                     
  1873                           ;main.c: 49:             if(PORTCbits.RC0){
  1874   002C54  A082               	btfss	130,0,c	;volatile
  1875   002C56  EF2F  F016         	goto	u10201
  1876   002C5A  EF31  F016         	goto	u10200
  1877   002C5E                     u10201:
  1878   002C5E  EF40  F016         	goto	l56
  1879   002C62                     u10200:
  1880   002C62                     
  1881                           ;main.c: 50:                 menuI = moveDisplay(menuI,2);
  1882   002C62  0E02               	movlw	2
  1883   002C64  0100               	movlb	0	; () banked
  1884   002C66  6FE7               	movwf	moveDisplay@where& (0+255),b
  1885   002C68  51FD               	movf	main@menuI& (0+255),w,b
  1886   002C6A  ECDF  F01F         	call	_moveDisplay
  1887   002C6E  0100               	movlb	0	; () banked
  1888   002C70  6FFD               	movwf	main@menuI& (0+255),b
  1889   002C72                     l58:
  1890   002C72  B082               	btfsc	130,0,c	;volatile
  1891   002C74  EF3E  F016         	goto	u10211
  1892   002C78  EF40  F016         	goto	u10210
  1893   002C7C                     u10211:
  1894   002C7C  EF39  F016         	goto	l58
  1895   002C80                     u10210:
  1896   002C80                     l56:
  1897                           
  1898                           ;main.c: 54:         if(PORTAbits.RA4){
  1899   002C80  A880               	btfss	128,4,c	;volatile
  1900   002C82  EF45  F016         	goto	u10221
  1901   002C86  EF47  F016         	goto	u10220
  1902   002C8A                     u10221:
  1903   002C8A  EF69  F016         	goto	l61
  1904   002C8E                     u10220:
  1905   002C8E                     
  1906                           ;main.c: 55:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1907   002C8E  0E03               	movlw	3
  1908   002C90  0100               	movlb	0	; () banked
  1909   002C92  6FFB               	movwf	(??_main+1)& (0+255),b
  1910   002C94  0E08               	movlw	8
  1911   002C96  6FFA               	movwf	??_main& (0+255),b
  1912   002C98  0E77               	movlw	119
  1913   002C9A                     u10317:
  1914   002C9A  2EE8               	decfsz	wreg,f,c
  1915   002C9C  D7FE               	bra	u10317
  1916   002C9E  2FFA               	decfsz	??_main& (0+255),f,b
  1917   002CA0  D7FC               	bra	u10317
  1918   002CA2  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1919   002CA4  D7FA               	bra	u10317
  1920   002CA6                     
  1921                           ;main.c: 56:             if(PORTAbits.RA4){
  1922   002CA6  A880               	btfss	128,4,c	;volatile
  1923   002CA8  EF58  F016         	goto	u10231
  1924   002CAC  EF5A  F016         	goto	u10230
  1925   002CB0                     u10231:
  1926   002CB0  EF69  F016         	goto	l61
  1927   002CB4                     u10230:
  1928   002CB4                     
  1929                           ;main.c: 57:                 menuI = moveDisplay(menuI,1);
  1930   002CB4  0E01               	movlw	1
  1931   002CB6  0100               	movlb	0	; () banked
  1932   002CB8  6FE7               	movwf	moveDisplay@where& (0+255),b
  1933   002CBA  51FD               	movf	main@menuI& (0+255),w,b
  1934   002CBC  ECDF  F01F         	call	_moveDisplay
  1935   002CC0  0100               	movlb	0	; () banked
  1936   002CC2  6FFD               	movwf	main@menuI& (0+255),b
  1937   002CC4                     l63:
  1938   002CC4  B880               	btfsc	128,4,c	;volatile
  1939   002CC6  EF67  F016         	goto	u10241
  1940   002CCA  EF69  F016         	goto	u10240
  1941   002CCE                     u10241:
  1942   002CCE  EF62  F016         	goto	l63
  1943   002CD2                     u10240:
  1944   002CD2                     l61:
  1945                           
  1946                           ;main.c: 61:         if(PORTAbits.RA3){
  1947   002CD2  A680               	btfss	128,3,c	;volatile
  1948   002CD4  EF6E  F016         	goto	u10251
  1949   002CD8  EF70  F016         	goto	u10250
  1950   002CDC                     u10251:
  1951   002CDC  EF26  F017         	goto	l66
  1952   002CE0                     u10250:
  1953   002CE0                     
  1954                           ;main.c: 62:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1955   002CE0  0E03               	movlw	3
  1956   002CE2  0100               	movlb	0	; () banked
  1957   002CE4  6FFB               	movwf	(??_main+1)& (0+255),b
  1958   002CE6  0E08               	movlw	8
  1959   002CE8  6FFA               	movwf	??_main& (0+255),b
  1960   002CEA  0E77               	movlw	119
  1961   002CEC                     u10327:
  1962   002CEC  2EE8               	decfsz	wreg,f,c
  1963   002CEE  D7FE               	bra	u10327
  1964   002CF0  2FFA               	decfsz	??_main& (0+255),f,b
  1965   002CF2  D7FC               	bra	u10327
  1966   002CF4  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1967   002CF6  D7FA               	bra	u10327
  1968   002CF8                     
  1969                           ;main.c: 63:             if(PORTAbits.RA3){
  1970   002CF8  A680               	btfss	128,3,c	;volatile
  1971   002CFA  EF81  F016         	goto	u10261
  1972   002CFE  EF83  F016         	goto	u10260
  1973   002D02                     u10261:
  1974   002D02  EF26  F017         	goto	l66
  1975   002D06                     u10260:
  1976   002D06                     l68:
  1977   002D06  B680               	btfsc	128,3,c	;volatile
  1978   002D08  EF88  F016         	goto	u10271
  1979   002D0C  EF8A  F016         	goto	u10270
  1980   002D10                     u10271:
  1981   002D10  EF83  F016         	goto	l68
  1982   002D14                     u10270:
  1983   002D14  EF06  F017         	goto	l8366
  1984   002D18                     l8322:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;main.c: 67:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  1988   002D18  0E59               	movlw	low STR_1
  1989   002D1A  6E07               	movwf	LCD_ShowString@textData^0,c
  1990   002D1C  0EFF               	movlw	high STR_1
  1991   002D1E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1992   002D20  0E01               	movlw	1
  1993   002D22  EC99  F023         	call	_LCD_ShowString
  1994                           
  1995                           ;main.c: 68:                         LCD_ShowString((char)2, "                ");
  1996   002D26  0E13               	movlw	low (STR_27+2)
  1997   002D28  6E07               	movwf	LCD_ShowString@textData^0,c
  1998   002D2A  0EFF               	movlw	high (STR_27+2)
  1999   002D2C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2000   002D2E  0E02               	movlw	2
  2001   002D30  EC99  F023         	call	_LCD_ShowString
  2002   002D34                     
  2003                           ;main.c: 69:                         runGPIO();
  2004   002D34  EC86  F01E         	call	_runGPIO	;wreg free
  2005   002D38                     l8326:
  2006                           
  2007                           ;main.c: 70:                         setUpAgain = 1;
  2008   002D38  0E01               	movlw	1
  2009   002D3A  0100               	movlb	0	; () banked
  2010   002D3C  6FFC               	movwf	main@setUpAgain& (0+255),b
  2011                           
  2012                           ;main.c: 71:                         break;
  2013   002D3E  EF26  F017         	goto	l66
  2014   002D42                     l8328:
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;main.c: 73:                         LCD_ShowString((char)1, "BR: 19200       ");
  2018   002D42  0E48               	movlw	low STR_3
  2019   002D44  6E07               	movwf	LCD_ShowString@textData^0,c
  2020   002D46  0EFF               	movlw	high STR_3
  2021   002D48  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2022   002D4A  0E01               	movlw	1
  2023   002D4C  EC99  F023         	call	_LCD_ShowString
  2024                           
  2025                           ;main.c: 74:                         LCD_ShowString((char)2, "Konec - new line");
  2026   002D50  0E9D               	movlw	low STR_4
  2027   002D52  6E07               	movwf	LCD_ShowString@textData^0,c
  2028   002D54  0EFF               	movlw	high STR_4
  2029   002D56  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2030   002D58  0E02               	movlw	2
  2031   002D5A  EC99  F023         	call	_LCD_ShowString
  2032   002D5E                     
  2033                           ;main.c: 75:                         runUART();
  2034   002D5E  ECD0  F01D         	call	_runUART	;wreg free
  2035   002D62  EF9C  F016         	goto	l8326
  2036   002D66                     l8334:
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;main.c: 79:                         LCD_ShowString((char)1, "Zmacknete BTN2  ");
  2040   002D66  0E6A               	movlw	low STR_5
  2041   002D68  6E07               	movwf	LCD_ShowString@textData^0,c
  2042   002D6A  0EFF               	movlw	high STR_5
  2043   002D6C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2044   002D6E  0E01               	movlw	1
  2045   002D70  EC99  F023         	call	_LCD_ShowString
  2046                           
  2047                           ;main.c: 80:                         LCD_ShowString((char)2, "                ");
  2048   002D74  0E13               	movlw	low (STR_27+2)
  2049   002D76  6E07               	movwf	LCD_ShowString@textData^0,c
  2050   002D78  0EFF               	movlw	high (STR_27+2)
  2051   002D7A  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2052   002D7C  0E02               	movlw	2
  2053   002D7E  EC99  F023         	call	_LCD_ShowString
  2054   002D82                     
  2055                           ;main.c: 81:                         runPWM();
  2056   002D82  EC3C  F01F         	call	_runPWM	;wreg free
  2057   002D86  EF9C  F016         	goto	l8326
  2058   002D8A                     l8340:
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;main.c: 85:                         LCD_ShowString((char)1, "Volty na POTech:");
  2062   002D8A  0E8C               	movlw	low STR_7
  2063   002D8C  6E07               	movwf	LCD_ShowString@textData^0,c
  2064   002D8E  0EFF               	movlw	high STR_7
  2065   002D90  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2066   002D92  0E01               	movlw	1
  2067   002D94  EC99  F023         	call	_LCD_ShowString
  2068   002D98                     
  2069                           ;main.c: 86:                         runADC();
  2070   002D98  EC61  F019         	call	_runADC	;wreg free
  2071   002D9C  EF9C  F016         	goto	l8326
  2072   002DA0                     l8346:
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;main.c: 90:                         LCD_ShowString((char)1, "RB0-A2, BR:19200");
  2076   002DA0  0E7B               	movlw	low STR_8
  2077   002DA2  6E07               	movwf	LCD_ShowString@textData^0,c
  2078   002DA4  0EFF               	movlw	high STR_8
  2079   002DA6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2080   002DA8  0E01               	movlw	1
  2081   002DAA  EC99  F023         	call	_LCD_ShowString
  2082                           
  2083                           ;main.c: 91:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  2084   002DAE  0EAE               	movlw	low STR_9
  2085   002DB0  6E07               	movwf	LCD_ShowString@textData^0,c
  2086   002DB2  0EFF               	movlw	high STR_9
  2087   002DB4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2088   002DB6  0E02               	movlw	2
  2089   002DB8  EC99  F023         	call	_LCD_ShowString
  2090   002DBC                     
  2091                           ;main.c: 92:                         runDAC();
  2092   002DBC  EC76  F014         	call	_runDAC	;wreg free
  2093   002DC0  EF9C  F016         	goto	l8326
  2094   002DC4                     l8352:
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;main.c: 96:                         LCD_ShowString((char)1, "                ");
  2098   002DC4  0E13               	movlw	low (STR_27+2)
  2099   002DC6  6E07               	movwf	LCD_ShowString@textData^0,c
  2100   002DC8  0EFF               	movlw	high (STR_27+2)
  2101   002DCA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2102   002DCC  0E01               	movlw	1
  2103   002DCE  EC99  F023         	call	_LCD_ShowString
  2104                           
  2105                           ;main.c: 97:                         LCD_ShowString((char)2, "                ");
  2106   002DD2  0E13               	movlw	low (STR_27+2)
  2107   002DD4  6E07               	movwf	LCD_ShowString@textData^0,c
  2108   002DD6  0EFF               	movlw	high (STR_27+2)
  2109   002DD8  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2110   002DDA  0E02               	movlw	2
  2111   002DDC  EC99  F023         	call	_LCD_ShowString
  2112   002DE0                     
  2113                           ;main.c: 98:                         runGAME();
  2114   002DE0  ECFD  F012         	call	_runGAME	;wreg free
  2115   002DE4  EF9C  F016         	goto	l8326
  2116   002DE8                     l8358:
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;main.c: 102:                         LCD_ShowString((char)1, "                ");
  2120   002DE8  0E13               	movlw	low (STR_27+2)
  2121   002DEA  6E07               	movwf	LCD_ShowString@textData^0,c
  2122   002DEC  0EFF               	movlw	high (STR_27+2)
  2123   002DEE  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2124   002DF0  0E01               	movlw	1
  2125   002DF2  EC99  F023         	call	_LCD_ShowString
  2126                           
  2127                           ;main.c: 103:                         LCD_ShowString((char)2, "                ");
  2128   002DF6  0E13               	movlw	low (STR_27+2)
  2129   002DF8  6E07               	movwf	LCD_ShowString@textData^0,c
  2130   002DFA  0EFF               	movlw	high (STR_27+2)
  2131   002DFC  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2132   002DFE  0E02               	movlw	2
  2133   002E00  EC99  F023         	call	_LCD_ShowString
  2134   002E04                     
  2135                           ;main.c: 104:                         runMUSIC();
  2136   002E04  EC97  F028         	call	_runMUSIC	;wreg free
  2137   002E08  EF9C  F016         	goto	l8326
  2138   002E0C                     l8366:
  2139   002E0C  0100               	movlb	0	; () banked
  2140   002E0E  51FD               	movf	main@menuI& (0+255),w,b
  2141                           
  2142                           ; Switch size 1, requested type "simple"
  2143                           ; Number of cases is 7, Range of values is 0 to 6
  2144                           ; switch strategies available:
  2145                           ; Name         Instructions Cycles
  2146                           ; simple_byte           22    12 (average)
  2147                           ;	Chosen strategy is simple_byte
  2148   002E10  0A00               	xorlw	0	; case 0
  2149   002E12  B4D8               	btfsc	status,2,c
  2150   002E14  EF8C  F016         	goto	l8322
  2151   002E18  0A01               	xorlw	1	; case 1
  2152   002E1A  B4D8               	btfsc	status,2,c
  2153   002E1C  EFA1  F016         	goto	l8328
  2154   002E20  0A03               	xorlw	3	; case 2
  2155   002E22  B4D8               	btfsc	status,2,c
  2156   002E24  EFB3  F016         	goto	l8334
  2157   002E28  0A01               	xorlw	1	; case 3
  2158   002E2A  B4D8               	btfsc	status,2,c
  2159   002E2C  EFC5  F016         	goto	l8340
  2160   002E30  0A07               	xorlw	7	; case 4
  2161   002E32  B4D8               	btfsc	status,2,c
  2162   002E34  EFD0  F016         	goto	l8346
  2163   002E38  0A01               	xorlw	1	; case 5
  2164   002E3A  B4D8               	btfsc	status,2,c
  2165   002E3C  EFE2  F016         	goto	l8352
  2166   002E40  0A03               	xorlw	3	; case 6
  2167   002E42  B4D8               	btfsc	status,2,c
  2168   002E44  EFF4  F016         	goto	l8358
  2169   002E48  EF26  F017         	goto	l66
  2170   002E4C                     l66:
  2171                           
  2172                           ;main.c: 111:         if(PORTAbits.RA2){
  2173   002E4C  5080               	movf	128,w,c	;volatile
  2174   002E4E                     
  2175                           ;main.c: 115:         if(setUpAgain){
  2176   002E4E  0100               	movlb	0	; () banked
  2177   002E50  51FC               	movf	main@setUpAgain& (0+255),w,b
  2178   002E52  B4D8               	btfsc	status,2,c
  2179   002E54  EF2E  F017         	goto	u10281
  2180   002E58  EF30  F017         	goto	u10280
  2181   002E5C                     u10281:
  2182   002E5C  EF17  F016         	goto	l8302
  2183   002E60                     u10280:
  2184   002E60                     
  2185                           ; BSR set to: 0
  2186                           ;main.c: 116:         menuI = moveDisplay(menuI,0);
  2187   002E60  0E00               	movlw	0
  2188   002E62  6FE7               	movwf	moveDisplay@where& (0+255),b
  2189   002E64  51FD               	movf	main@menuI& (0+255),w,b
  2190   002E66  ECDF  F01F         	call	_moveDisplay
  2191   002E6A  0100               	movlb	0	; () banked
  2192   002E6C  6FFD               	movwf	main@menuI& (0+255),b
  2193   002E6E                     
  2194                           ; BSR set to: 0
  2195                           ;main.c: 117:         setUpAgain = 0;
  2196   002E6E  0E00               	movlw	0
  2197   002E70  6FFC               	movwf	main@setUpAgain& (0+255),b
  2198   002E72  EF17  F016         	goto	l8302
  2199   002E76  EFA7  F000         	goto	start
  2200   002E7A                     __end_of_main:
  2201                           	callstack 0
  2202                           
  2203 ;; *************** function _runUART *****************
  2204 ;; Defined at:
  2205 ;;		line 4 in file "UART.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;		None
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  p               2  152[BANK0 ] int 
  2210 ;;  i               2  150[BANK0 ] unsigned int 
  2211 ;;  reversed       31  116[BANK0 ] unsigned char [31]
  2212 ;;  len             2  148[BANK0 ] unsigned int 
  2213 ;;  keepState       1  147[BANK0 ] unsigned char 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2225 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2226 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;Total ram usage:       40 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; Hardware stack levels required when called: 9
  2230 ;; This function calls:
  2231 ;;		_printf
  2232 ;;		_strlen
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text1
  2239   003BA0                     __ptext1:
  2240                           	callstack 0
  2241   003BA0                     _runUART:
  2242                           	callstack 21
  2243   003BA0                     
  2244                           ;UART.c: 6:     TRISAbits.RA2 = 1;
  2245   003BA0  8492               	bsf	146,2,c	;volatile
  2246                           
  2247                           ;UART.c: 8:     ANSELCbits.ANSC6 = 0;
  2248   003BA2  010F               	movlb	15	; () banked
  2249   003BA4  9D3A               	bcf	58,6,b	;volatile
  2250                           
  2251                           ;UART.c: 9:     ANSELCbits.ANSC7 = 0;
  2252   003BA6  9F3A               	bcf	58,7,b	;volatile
  2253                           
  2254                           ;UART.c: 10:     TRISCbits.TRISC6 = 1;
  2255   003BA8  8C94               	bsf	148,6,c	;volatile
  2256                           
  2257                           ;UART.c: 11:     TRISCbits.TRISC7 = 1;
  2258   003BAA  8E94               	bsf	148,7,c	;volatile
  2259   003BAC                     
  2260                           ; BSR set to: 15
  2261                           ;UART.c: 14:     SPBRG1 = 25;
  2262   003BAC  0E19               	movlw	25
  2263   003BAE  6EAF               	movwf	175,c	;volatile
  2264   003BB0                     
  2265                           ; BSR set to: 15
  2266                           ;UART.c: 16:     TXSTA1bits.SYNC = 0;
  2267   003BB0  98AC               	bcf	172,4,c	;volatile
  2268   003BB2                     
  2269                           ; BSR set to: 15
  2270                           ;UART.c: 17:     RCSTA1bits.SPEN = 1;
  2271   003BB2  8EAB               	bsf	171,7,c	;volatile
  2272   003BB4                     
  2273                           ; BSR set to: 15
  2274                           ;UART.c: 18:     TXSTA1bits.TXEN = 1;
  2275   003BB4  8AAC               	bsf	172,5,c	;volatile
  2276   003BB6                     
  2277                           ; BSR set to: 15
  2278                           ;UART.c: 19:     RCSTA1bits.CREN = 1;
  2279   003BB6  88AB               	bsf	171,4,c	;volatile
  2280                           
  2281                           ;UART.c: 21:     UARTIE = 1;
  2282   003BB8  0E01               	movlw	1
  2283   003BBA  0101               	movlb	1	; () banked
  2284   003BBC  6F25               	movwf	_UARTIE& (0+255),b
  2285   003BBE                     
  2286                           ; BSR set to: 1
  2287                           ;UART.c: 22:     RC1IE = 1;
  2288   003BBE  8A9D               	bsf	3997,5,c	;volatile
  2289   003BC0                     
  2290                           ; BSR set to: 1
  2291                           ;UART.c: 23:     PEIE = 1;
  2292   003BC0  8CF2               	bsf	4082,6,c	;volatile
  2293   003BC2                     
  2294                           ; BSR set to: 1
  2295                           ;UART.c: 24:     GIE = 1;
  2296   003BC2  8EF2               	bsf	4082,7,c	;volatile
  2297                           
  2298                           ;UART.c: 26:     uint8_t keepState = 1;
  2299   003BC4  0E01               	movlw	1
  2300   003BC6  0100               	movlb	0	; () banked
  2301   003BC8  6FF3               	movwf	runUART@keepState& (0+255),b
  2302                           
  2303                           ;UART.c: 28:     while(keepState){
  2304   003BCA  EF73  F01E         	goto	l579
  2305   003BCE                     l7962:
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;UART.c: 29:         if(gmail.full){
  2309   003BCE  0101               	movlb	1	; () banked
  2310   003BD0  5196               	movf	(_gmail+31)& (0+255),w,b	;volatile
  2311   003BD2  B4D8               	btfsc	status,2,c
  2312   003BD4  EFEE  F01D         	goto	u9801
  2313   003BD8  EFF0  F01D         	goto	u9800
  2314   003BDC                     u9801:
  2315   003BDC  EF4F  F01E         	goto	l581
  2316   003BE0                     u9800:
  2317   003BE0                     
  2318                           ; BSR set to: 1
  2319                           ;UART.c: 30:             char reversed[31];;UART.c: 31:             size_t len = strlen(
      +                          (const char*)gmail.data);
  2320   003BE0  0E77               	movlw	low _gmail
  2321   003BE2  6E06               	movwf	strlen@s^0,c
  2322   003BE4  0E01               	movlw	high _gmail
  2323   003BE6  6E07               	movwf	(strlen@s+1)^0,c
  2324   003BE8  ECAE  F027         	call	_strlen	;wreg free
  2325   003BEC  C006  F0F4         	movff	?_strlen,runUART@len
  2326   003BF0  C007  F0F5         	movff	?_strlen+1,runUART@len+1
  2327   003BF4                     
  2328                           ;UART.c: 33:             for(size_t i = 0; i < len; i++) {
  2329   003BF4  0E00               	movlw	0
  2330   003BF6  0100               	movlb	0	; () banked
  2331   003BF8  6FF7               	movwf	(runUART@i+1)& (0+255),b
  2332   003BFA  0E00               	movlw	0
  2333   003BFC  6FF6               	movwf	runUART@i& (0+255),b
  2334   003BFE  EF17  F01E         	goto	l7972
  2335   003C02                     l7968:
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;UART.c: 34:                 reversed[i] = gmail.data[len - 1 - i];
  2339   003C02  0E76               	movlw	low (_gmail+65535)
  2340   003C04  6FD2               	movwf	??_runUART& (0+255),b
  2341   003C06  0E01               	movlw	high (_gmail+65535)
  2342   003C08  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2343   003C0A  51F6               	movf	runUART@i& (0+255),w,b
  2344   003C0C  5FD2               	subwf	??_runUART& (0+255),f,b
  2345   003C0E  51F7               	movf	(runUART@i+1)& (0+255),w,b
  2346   003C10  5BD3               	subwfb	(??_runUART+1)& (0+255),f,b
  2347   003C12  51F4               	movf	runUART@len& (0+255),w,b
  2348   003C14  25D2               	addwf	??_runUART& (0+255),w,b
  2349   003C16  6ED9               	movwf	fsr2l,c
  2350   003C18  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2351   003C1A  21D3               	addwfc	(??_runUART+1)& (0+255),w,b
  2352   003C1C  6EDA               	movwf	fsr2h,c
  2353   003C1E  51F6               	movf	runUART@i& (0+255),w,b
  2354   003C20  0FD4               	addlw	low runUART@reversed
  2355   003C22  6EE1               	movwf	fsr1l,c
  2356   003C24  6AE2               	clrf	fsr1h,c
  2357   003C26  CFDF FFE7          	movff	indf2,indf1
  2358   003C2A                     
  2359                           ; BSR set to: 0
  2360                           ;UART.c: 35:             }
  2361   003C2A  4BF6               	infsnz	runUART@i& (0+255),f,b
  2362   003C2C  2BF7               	incf	(runUART@i+1)& (0+255),f,b
  2363   003C2E                     l7972:
  2364                           
  2365                           ; BSR set to: 0
  2366   003C2E  51F4               	movf	runUART@len& (0+255),w,b
  2367   003C30  5DF6               	subwf	runUART@i& (0+255),w,b
  2368   003C32  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2369   003C34  59F7               	subwfb	(runUART@i+1)& (0+255),w,b
  2370   003C36  A0D8               	btfss	status,0,c
  2371   003C38  EF20  F01E         	goto	u9811
  2372   003C3C  EF22  F01E         	goto	u9810
  2373   003C40                     u9811:
  2374   003C40  EF01  F01E         	goto	l7968
  2375   003C44                     u9810:
  2376   003C44                     
  2377                           ; BSR set to: 0
  2378                           ;UART.c: 36:             reversed[len] = '\0';
  2379   003C44  51F4               	movf	runUART@len& (0+255),w,b
  2380   003C46  0FD4               	addlw	low runUART@reversed
  2381   003C48  6ED9               	movwf	fsr2l,c
  2382   003C4A  6ADA               	clrf	fsr2h,c
  2383   003C4C  6ADF               	clrf	indf2,c
  2384   003C4E                     
  2385                           ; BSR set to: 0
  2386                           ;UART.c: 37:             printf("%s \n", reversed);
  2387   003C4E  0ED2               	movlw	low STR_26
  2388   003C50  6FCE               	movwf	printf@fmt& (0+255),b
  2389   003C52  0EFF               	movlw	high STR_26
  2390   003C54  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  2391   003C56  0ED4               	movlw	low runUART@reversed
  2392   003C58  6FD0               	movwf	(?_printf+2)& (0+255),b
  2393   003C5A  6BD1               	clrf	(?_printf+3)& (0+255),b
  2394   003C5C  EC52  F028         	call	_printf	;wreg free
  2395   003C60                     
  2396                           ;UART.c: 39:             gmail.full = 0;
  2397   003C60  0E00               	movlw	0
  2398   003C62  0101               	movlb	1	; () banked
  2399   003C64  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
  2400   003C66                     
  2401                           ; BSR set to: 1
  2402                           ;UART.c: 41:             for(int p = 0; p < 31; p++) {
  2403   003C66  0E00               	movlw	0
  2404   003C68  0100               	movlb	0	; () banked
  2405   003C6A  6FF9               	movwf	(runUART@p+1)& (0+255),b
  2406   003C6C  0E00               	movlw	0
  2407   003C6E  6FF8               	movwf	runUART@p& (0+255),b
  2408   003C70                     l7986:
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;UART.c: 42:                 gmail.data[p] = '\0';
  2412   003C70  0E77               	movlw	low _gmail
  2413   003C72  25F8               	addwf	runUART@p& (0+255),w,b
  2414   003C74  6ED9               	movwf	fsr2l,c
  2415   003C76  0E01               	movlw	high _gmail
  2416   003C78  21F9               	addwfc	(runUART@p+1)& (0+255),w,b
  2417   003C7A  6EDA               	movwf	fsr2h,c
  2418   003C7C  6ADF               	clrf	indf2,c
  2419   003C7E                     
  2420                           ; BSR set to: 0
  2421                           ;UART.c: 43:             }
  2422   003C7E  4BF8               	infsnz	runUART@p& (0+255),f,b
  2423   003C80  2BF9               	incf	(runUART@p+1)& (0+255),f,b
  2424   003C82                     
  2425                           ; BSR set to: 0
  2426   003C82  BFF9               	btfsc	(runUART@p+1)& (0+255),7,b
  2427   003C84  EF4D  F01E         	goto	u9821
  2428   003C88  51F9               	movf	(runUART@p+1)& (0+255),w,b
  2429   003C8A  E109               	bnz	u9820
  2430   003C8C  0E1F               	movlw	31
  2431   003C8E  5DF8               	subwf	runUART@p& (0+255),w,b
  2432   003C90  A0D8               	btfss	status,0,c
  2433   003C92  EF4D  F01E         	goto	u9821
  2434   003C96  EF4F  F01E         	goto	u9820
  2435   003C9A                     u9821:
  2436   003C9A  EF38  F01E         	goto	l7986
  2437   003C9E                     u9820:
  2438   003C9E                     l581:
  2439                           
  2440                           ;UART.c: 47:         if(PORTAbits.RA2){
  2441   003C9E  A480               	btfss	128,2,c	;volatile
  2442   003CA0  EF54  F01E         	goto	u9831
  2443   003CA4  EF56  F01E         	goto	u9830
  2444   003CA8                     u9831:
  2445   003CA8  EF73  F01E         	goto	l579
  2446   003CAC                     u9830:
  2447   003CAC                     
  2448                           ;UART.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2449   003CAC  0E03               	movlw	3
  2450   003CAE  0100               	movlb	0	; () banked
  2451   003CB0  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2452   003CB2  0E08               	movlw	8
  2453   003CB4  6FD2               	movwf	??_runUART& (0+255),b
  2454   003CB6  0E77               	movlw	119
  2455   003CB8                     u10337:
  2456   003CB8  2EE8               	decfsz	wreg,f,c
  2457   003CBA  D7FE               	bra	u10337
  2458   003CBC  2FD2               	decfsz	??_runUART& (0+255),f,b
  2459   003CBE  D7FC               	bra	u10337
  2460   003CC0  2FD3               	decfsz	(??_runUART+1)& (0+255),f,b
  2461   003CC2  D7FA               	bra	u10337
  2462   003CC4                     
  2463                           ;UART.c: 49:             if(PORTAbits.RA2){
  2464   003CC4  A480               	btfss	128,2,c	;volatile
  2465   003CC6  EF67  F01E         	goto	u9841
  2466   003CCA  EF69  F01E         	goto	u9840
  2467   003CCE                     u9841:
  2468   003CCE  EF73  F01E         	goto	l579
  2469   003CD2                     u9840:
  2470   003CD2                     l589:
  2471   003CD2  B480               	btfsc	128,2,c	;volatile
  2472   003CD4  EF6E  F01E         	goto	u9851
  2473   003CD8  EF70  F01E         	goto	u9850
  2474   003CDC                     u9851:
  2475   003CDC  EF69  F01E         	goto	l589
  2476   003CE0                     u9850:
  2477   003CE0                     
  2478                           ;UART.c: 51:                 keepState = 0;
  2479   003CE0  0E00               	movlw	0
  2480   003CE2  0100               	movlb	0	; () banked
  2481   003CE4  6FF3               	movwf	runUART@keepState& (0+255),b
  2482   003CE6                     l579:
  2483                           
  2484                           ;UART.c: 28:     while(keepState){
  2485   003CE6  0100               	movlb	0	; () banked
  2486   003CE8  51F3               	movf	runUART@keepState& (0+255),w,b
  2487   003CEA  A4D8               	btfss	status,2,c
  2488   003CEC  EF7A  F01E         	goto	u9861
  2489   003CF0  EF7C  F01E         	goto	u9860
  2490   003CF4                     u9861:
  2491   003CF4  EFE7  F01D         	goto	l7962
  2492   003CF8                     u9860:
  2493   003CF8                     
  2494                           ; BSR set to: 0
  2495                           ;UART.c: 58:     RCSTA1bits.SPEN = 0;
  2496   003CF8  9EAB               	bcf	171,7,c	;volatile
  2497                           
  2498                           ;UART.c: 59:     TXSTA1bits.TXEN = 0;
  2499   003CFA  9AAC               	bcf	172,5,c	;volatile
  2500                           
  2501                           ;UART.c: 60:     RCSTA1bits.CREN = 0;
  2502   003CFC  98AB               	bcf	171,4,c	;volatile
  2503   003CFE                     
  2504                           ; BSR set to: 0
  2505                           ;UART.c: 61:     UARTIE = 0;
  2506   003CFE  0E00               	movlw	0
  2507   003D00  0101               	movlb	1	; () banked
  2508   003D02  6F25               	movwf	_UARTIE& (0+255),b
  2509   003D04                     
  2510                           ; BSR set to: 1
  2511                           ;UART.c: 62:     RC1IE = 0;
  2512   003D04  9A9D               	bcf	3997,5,c	;volatile
  2513   003D06                     
  2514                           ; BSR set to: 1
  2515                           ;UART.c: 63:     PEIE = 0;
  2516   003D06  9CF2               	bcf	4082,6,c	;volatile
  2517   003D08                     
  2518                           ; BSR set to: 1
  2519                           ;UART.c: 64:     GIE = 0;
  2520   003D08  9EF2               	bcf	4082,7,c	;volatile
  2521   003D0A                     
  2522                           ; BSR set to: 1
  2523   003D0A  0012               	return		;funcret
  2524   003D0C                     __end_of_runUART:
  2525                           	callstack 0
  2526                           
  2527 ;; *************** function _strlen *****************
  2528 ;; Defined at:
  2529 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strlen.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  s               2    5[COMRAM] PTR const unsigned char 
  2532 ;;		 -> gmail$data(31), gmail(32), 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  a               2    7[COMRAM] PTR const unsigned char 
  2535 ;;		 -> gmail$data(31), gmail(32), 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  2    5[COMRAM] unsigned int 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2545 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;Total ram usage:        4 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 1
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_runUART
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text2
  2560   004F5C                     __ptext2:
  2561                           	callstack 0
  2562   004F5C                     _strlen:
  2563                           	callstack 28
  2564   004F5C  C006  F008         	movff	strlen@s,strlen@a
  2565   004F60  C007  F009         	movff	strlen@s+1,strlen@a+1
  2566   004F64  EFB6  F027         	goto	l7824
  2567   004F68                     l7822:
  2568   004F68  4A06               	infsnz	strlen@s^0,f,c
  2569   004F6A  2A07               	incf	(strlen@s+1)^0,f,c
  2570   004F6C                     l7824:
  2571   004F6C  C006  FFD9         	movff	strlen@s,fsr2l
  2572   004F70  C007  FFDA         	movff	strlen@s+1,fsr2h
  2573   004F74  50DF               	movf	indf2,w,c
  2574   004F76  A4D8               	btfss	status,2,c
  2575   004F78  EFC0  F027         	goto	u9611
  2576   004F7C  EFC2  F027         	goto	u9610
  2577   004F80                     u9611:
  2578   004F80  EFB4  F027         	goto	l7822
  2579   004F84                     u9610:
  2580   004F84  5008               	movf	strlen@a^0,w,c
  2581   004F86  5C06               	subwf	strlen@s^0,w,c
  2582   004F88  6E06               	movwf	?_strlen^0,c
  2583   004F8A  5009               	movf	(strlen@a+1)^0,w,c
  2584   004F8C  5807               	subwfb	(strlen@s+1)^0,w,c
  2585   004F8E  6E07               	movwf	(?_strlen+1)^0,c
  2586   004F90  0012               	return		;funcret
  2587   004F92                     __end_of_strlen:
  2588                           	callstack 0
  2589                           
  2590 ;; *************** function _runPWM *****************
  2591 ;; Defined at:
  2592 ;;		line 11 in file "PWM.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  multiplier      1   34[COMRAM] unsigned char 
  2597 ;;  keepState       1   33[COMRAM] unsigned char 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;Total ram usage:        4 bytes
  2612 ;; Hardware stack levels used: 1
  2613 ;; Hardware stack levels required when called: 2
  2614 ;; This function calls:
  2615 ;;		___awdiv
  2616 ;; This function is called by:
  2617 ;;		_main
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text3
  2622   003E78                     __ptext3:
  2623                           	callstack 0
  2624   003E78                     _runPWM:
  2625                           	callstack 28
  2626   003E78                     
  2627                           ;PWM.c: 13:     TRISCbits.RC2 = 1;
  2628   003E78  8494               	bsf	148,2,c	;volatile
  2629   003E7A                     
  2630                           ;PWM.c: 14:     CCPTMRS0bits.C1TSEL = 0b00;
  2631   003E7A  0EFC               	movlw	-4
  2632   003E7C  010F               	movlb	15	; () banked
  2633   003E7E  1749               	andwf	73,f,b	;volatile
  2634                           
  2635                           ;PWM.c: 15:     PR2 = 199;
  2636   003E80  0EC7               	movlw	199
  2637   003E82  6EBB               	movwf	187,c	;volatile
  2638                           
  2639                           ;PWM.c: 16:     CCP1CONbits.CCP1M |= 0b1100;
  2640   003E84  0E0C               	movlw	12
  2641   003E86  12BD               	iorwf	189,f,c	;volatile
  2642                           
  2643                           ;PWM.c: 17:     CCP1CONbits.P1M = 0b10;
  2644   003E88  50BD               	movf	189,w,c	;volatile
  2645   003E8A  0B3F               	andlw	-193
  2646   003E8C  0980               	iorlw	128
  2647   003E8E  6EBD               	movwf	189,c	;volatile
  2648                           
  2649                           ;PWM.c: 18:     CCPR1L = 0;
  2650   003E90  0E00               	movlw	0
  2651   003E92  6EBE               	movwf	190,c	;volatile
  2652   003E94                     
  2653                           ; BSR set to: 15
  2654                           ;PWM.c: 19:     TMR2IF = 0;
  2655   003E94  929E               	bcf	3998,1,c	;volatile
  2656   003E96                     
  2657                           ; BSR set to: 15
  2658                           ;PWM.c: 20:     TMR2ON = 1;
  2659   003E96  84BA               	bsf	4026,2,c	;volatile
  2660   003E98                     l519:
  2661   003E98  A29E               	btfss	3998,1,c	;volatile
  2662   003E9A  EF51  F01F         	goto	u9871
  2663   003E9E  EF53  F01F         	goto	u9870
  2664   003EA2                     u9871:
  2665   003EA2  EF4C  F01F         	goto	l519
  2666   003EA6                     u9870:
  2667   003EA6                     
  2668                           ;PWM.c: 22:     TRISCbits.RC2 = 1;
  2669   003EA6  8494               	bsf	148,2,c	;volatile
  2670                           
  2671                           ;PWM.c: 25:     TRISAbits.RA4 = 1;
  2672   003EA8  8892               	bsf	146,4,c	;volatile
  2673                           
  2674                           ;PWM.c: 26:     TRISAbits.RA2 = 1;
  2675   003EAA  8492               	bsf	146,2,c	;volatile
  2676                           
  2677                           ;PWM.c: 28:     TRISDbits.RD2 = 0;
  2678   003EAC  9495               	bcf	149,2,c	;volatile
  2679                           
  2680                           ;PWM.c: 29:     TRISDbits.RD3 = 0;
  2681   003EAE  9695               	bcf	149,3,c	;volatile
  2682                           
  2683                           ;PWM.c: 30:     TRISCbits.RC4 = 0;
  2684   003EB0  9894               	bcf	148,4,c	;volatile
  2685                           
  2686                           ;PWM.c: 31:     TRISDbits.RD4 = 0;
  2687   003EB2  9895               	bcf	149,4,c	;volatile
  2688                           
  2689                           ;PWM.c: 32:     TRISDbits.RD5 = 0;
  2690   003EB4  9A95               	bcf	149,5,c	;volatile
  2691                           
  2692                           ;PWM.c: 33:     TRISDbits.RD6 = 0;
  2693   003EB6  9C95               	bcf	149,6,c	;volatile
  2694                           
  2695                           ;PWM.c: 34:     LATDbits.LD2 = 1;
  2696   003EB8  848C               	bsf	140,2,c	;volatile
  2697                           
  2698                           ;PWM.c: 35:     LATDbits.LD3 = 1;
  2699   003EBA  868C               	bsf	140,3,c	;volatile
  2700                           
  2701                           ;PWM.c: 36:     LATCbits.LC4 = 1;
  2702   003EBC  888B               	bsf	139,4,c	;volatile
  2703                           
  2704                           ;PWM.c: 37:     LATDbits.LD4 = 1;
  2705   003EBE  888C               	bsf	140,4,c	;volatile
  2706                           
  2707                           ;PWM.c: 38:     LATDbits.LD5 = 1;
  2708   003EC0  8A8C               	bsf	140,5,c	;volatile
  2709                           
  2710                           ;PWM.c: 39:     LATDbits.LD6 = 1;
  2711   003EC2  8C8C               	bsf	140,6,c	;volatile
  2712   003EC4                     
  2713                           ;PWM.c: 41:     uint8_t keepState;;PWM.c: 42:     keepState = 1;
  2714   003EC4  0E01               	movlw	1
  2715   003EC6  6E22               	movwf	runPWM@keepState^0,c
  2716                           
  2717                           ;PWM.c: 44:     uint8_t multiplier;;PWM.c: 45:     multiplier = 0;
  2718   003EC8  0E00               	movlw	0
  2719   003ECA  6E23               	movwf	runPWM@multiplier^0,c
  2720                           
  2721                           ;PWM.c: 47:     while(keepState){
  2722   003ECC  EFD2  F01F         	goto	l522
  2723   003ED0                     l8020:
  2724                           
  2725                           ;PWM.c: 49:         CCPR1L = multiplier*199/5;
  2726   003ED0  5023               	movf	runPWM@multiplier^0,w,c
  2727   003ED2  0DC7               	mullw	199
  2728   003ED4  CFF3 F018          	movff	prodl,___awdiv@dividend
  2729   003ED8  CFF4 F019          	movff	prodh,___awdiv@dividend+1
  2730   003EDC  0E00               	movlw	0
  2731   003EDE  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  2732   003EE0  0E05               	movlw	5
  2733   003EE2  6E1A               	movwf	___awdiv@divisor^0,c
  2734   003EE4  EC37  F023         	call	___awdiv	;wreg free
  2735   003EE8  5018               	movf	?___awdiv^0,w,c
  2736   003EEA  6EBE               	movwf	190,c	;volatile
  2737   003EEC                     
  2738                           ;PWM.c: 51:         if(PORTAbits.RA4){
  2739   003EEC  A880               	btfss	128,4,c	;volatile
  2740   003EEE  EF7B  F01F         	goto	u9881
  2741   003EF2  EF7D  F01F         	goto	u9880
  2742   003EF6                     u9881:
  2743   003EF6  EFAF  F01F         	goto	l8038
  2744   003EFA                     u9880:
  2745   003EFA                     
  2746                           ;PWM.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2747   003EFA  0E03               	movlw	3
  2748   003EFC  6E21               	movwf	(??_runPWM+1)^0,c
  2749   003EFE  0E08               	movlw	8
  2750   003F00  6E20               	movwf	??_runPWM^0,c
  2751   003F02  0E77               	movlw	119
  2752   003F04                     u10347:
  2753   003F04  2EE8               	decfsz	wreg,f,c
  2754   003F06  D7FE               	bra	u10347
  2755   003F08  2E20               	decfsz	??_runPWM^0,f,c
  2756   003F0A  D7FC               	bra	u10347
  2757   003F0C  2E21               	decfsz	(??_runPWM+1)^0,f,c
  2758   003F0E  D7FA               	bra	u10347
  2759   003F10  0000               	nop	
  2760   003F12                     
  2761                           ;PWM.c: 53:             if(PORTAbits.RA4){
  2762   003F12  A880               	btfss	128,4,c	;volatile
  2763   003F14  EF8E  F01F         	goto	u9891
  2764   003F18  EF90  F01F         	goto	u9890
  2765   003F1C                     u9891:
  2766   003F1C  EFAF  F01F         	goto	l8038
  2767   003F20                     u9890:
  2768   003F20                     l526:
  2769   003F20  B880               	btfsc	128,4,c	;volatile
  2770   003F22  EF95  F01F         	goto	u9901
  2771   003F26  EF97  F01F         	goto	u9900
  2772   003F2A                     u9901:
  2773   003F2A  EF90  F01F         	goto	l526
  2774   003F2E                     u9900:
  2775   003F2E                     
  2776                           ;PWM.c: 55:                 if(multiplier == 5 ){
  2777   003F2E  0E05               	movlw	5
  2778   003F30  1823               	xorwf	runPWM@multiplier^0,w,c
  2779   003F32  A4D8               	btfss	status,2,c
  2780   003F34  EF9E  F01F         	goto	u9911
  2781   003F38  EFA0  F01F         	goto	u9910
  2782   003F3C                     u9911:
  2783   003F3C  EFA4  F01F         	goto	l8034
  2784   003F40                     u9910:
  2785   003F40                     
  2786                           ;PWM.c: 56:                     multiplier = 0;
  2787   003F40  0E00               	movlw	0
  2788   003F42  6E23               	movwf	runPWM@multiplier^0,c
  2789                           
  2790                           ;PWM.c: 57:                 } else if(multiplier <5){
  2791   003F44  EFAF  F01F         	goto	l8038
  2792   003F48                     l8034:
  2793   003F48  0E05               	movlw	5
  2794   003F4A  6023               	cpfslt	runPWM@multiplier^0,c
  2795   003F4C  EFAA  F01F         	goto	u9921
  2796   003F50  EFAC  F01F         	goto	u9920
  2797   003F54                     u9921:
  2798   003F54  EFAF  F01F         	goto	l525
  2799   003F58                     u9920:
  2800   003F58                     
  2801                           ;PWM.c: 58:                     multiplier++;
  2802   003F58  2A23               	incf	runPWM@multiplier^0,f,c
  2803   003F5A  EFAF  F01F         	goto	l8038
  2804   003F5E                     l525:
  2805   003F5E                     l8038:
  2806                           
  2807                           ;PWM.c: 63:         if(PORTAbits.RA2){
  2808   003F5E  A480               	btfss	128,2,c	;volatile
  2809   003F60  EFB4  F01F         	goto	u9931
  2810   003F64  EFB6  F01F         	goto	u9930
  2811   003F68                     u9931:
  2812   003F68  EFD2  F01F         	goto	l522
  2813   003F6C                     u9930:
  2814   003F6C                     
  2815                           ;PWM.c: 64:         _delay((unsigned long)((50)*(32E6/4000.0)));
  2816   003F6C  0E03               	movlw	3
  2817   003F6E  6E21               	movwf	(??_runPWM+1)^0,c
  2818   003F70  0E08               	movlw	8
  2819   003F72  6E20               	movwf	??_runPWM^0,c
  2820   003F74  0E77               	movlw	119
  2821   003F76                     u10357:
  2822   003F76  2EE8               	decfsz	wreg,f,c
  2823   003F78  D7FE               	bra	u10357
  2824   003F7A  2E20               	decfsz	??_runPWM^0,f,c
  2825   003F7C  D7FC               	bra	u10357
  2826   003F7E  2E21               	decfsz	(??_runPWM+1)^0,f,c
  2827   003F80  D7FA               	bra	u10357
  2828   003F82  0000               	nop	
  2829   003F84                     
  2830                           ;PWM.c: 65:         if(PORTAbits.RA2){
  2831   003F84  A480               	btfss	128,2,c	;volatile
  2832   003F86  EFC7  F01F         	goto	u9941
  2833   003F8A  EFC9  F01F         	goto	u9940
  2834   003F8E                     u9941:
  2835   003F8E  EFD2  F01F         	goto	l522
  2836   003F92                     u9940:
  2837   003F92                     l534:
  2838   003F92  B480               	btfsc	128,2,c	;volatile
  2839   003F94  EFCE  F01F         	goto	u9951
  2840   003F98  EFD0  F01F         	goto	u9950
  2841   003F9C                     u9951:
  2842   003F9C  EFC9  F01F         	goto	l534
  2843   003FA0                     u9950:
  2844   003FA0                     
  2845                           ;PWM.c: 67:             keepState = 0;
  2846   003FA0  0E00               	movlw	0
  2847   003FA2  6E22               	movwf	runPWM@keepState^0,c
  2848   003FA4                     l522:
  2849                           
  2850                           ;PWM.c: 47:     while(keepState){
  2851   003FA4  5022               	movf	runPWM@keepState^0,w,c
  2852   003FA6  A4D8               	btfss	status,2,c
  2853   003FA8  EFD8  F01F         	goto	u9961
  2854   003FAC  EFDA  F01F         	goto	u9960
  2855   003FB0                     u9961:
  2856   003FB0  EF68  F01F         	goto	l8020
  2857   003FB4                     u9960:
  2858   003FB4                     
  2859                           ;PWM.c: 74:     CCP1CONbits.CCP1M = 0b0000;
  2860   003FB4  0EF0               	movlw	-16
  2861   003FB6  16BD               	andwf	189,f,c	;volatile
  2862   003FB8                     
  2863                           ;PWM.c: 75:     TMR2ON = 0;
  2864   003FB8  94BA               	bcf	4026,2,c	;volatile
  2865   003FBA                     
  2866                           ;PWM.c: 76:     TMR2IE = 0;
  2867   003FBA  929D               	bcf	3997,1,c	;volatile
  2868   003FBC  0012               	return		;funcret
  2869   003FBE                     __end_of_runPWM:
  2870                           	callstack 0
  2871                           
  2872 ;; *************** function _runMUSIC *****************
  2873 ;; Defined at:
  2874 ;;		line 10 in file "MUSIC.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;		None
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;		None
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		None
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;Total ram usage:        0 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 1
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_main
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text4
  2903   00512E                     __ptext4:
  2904                           	callstack 0
  2905   00512E                     _runMUSIC:
  2906                           	callstack 29
  2907   00512E  0012               	return		;funcret
  2908   005130                     __end_of_runMUSIC:
  2909                           	callstack 0
  2910                           
  2911 ;; *************** function _runGPIO *****************
  2912 ;; Defined at:
  2913 ;;		line 19 in file "GPIO.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;  j               2   35[COMRAM] int 
  2918 ;;  states         12    8[COMRAM] unsigned char [12]
  2919 ;;  LEDControl     12   20[COMRAM] PTR FTN(unsigned char ,)
  2920 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  2921 ;;		 -> LED2_Control(1), LED1_Control(1), 
  2922 ;;  numberOfStat    2   32[COMRAM] int 
  2923 ;;  GPIOi           1   34[COMRAM] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Locals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;Total ram usage:       31 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; Hardware stack levels required when called: 2
  2940 ;; This function calls:
  2941 ;;		_LED1_Control
  2942 ;;		_LED2_Control
  2943 ;;		_LED3_Control
  2944 ;;		_LED4_Control
  2945 ;;		_LED5_Control
  2946 ;;		_LED6_Control
  2947 ;; This function is called by:
  2948 ;;		_main
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text5
  2953   003D0C                     __ptext5:
  2954                           	callstack 0
  2955   003D0C                     _runGPIO:
  2956                           	callstack 28
  2957   003D0C                     
  2958                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  2959   003D0C  9495               	bcf	149,2,c	;volatile
  2960                           
  2961                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  2962   003D0E  9695               	bcf	149,3,c	;volatile
  2963                           
  2964                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  2965   003D10  9894               	bcf	148,4,c	;volatile
  2966                           
  2967                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  2968   003D12  9895               	bcf	149,4,c	;volatile
  2969                           
  2970                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  2971   003D14  9A95               	bcf	149,5,c	;volatile
  2972                           
  2973                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  2974   003D16  9C95               	bcf	149,6,c	;volatile
  2975                           
  2976                           ;GPIO.c: 27:     ANSELDbits.ANSD2 = 0;
  2977   003D18  010F               	movlb	15	; () banked
  2978   003D1A  953B               	bcf	59,2,b	;volatile
  2979                           
  2980                           ;GPIO.c: 28:     ANSELDbits.ANSD3 = 0;
  2981   003D1C  973B               	bcf	59,3,b	;volatile
  2982                           
  2983                           ;GPIO.c: 29:     ANSELCbits.ANSC4 = 0;
  2984   003D1E  993A               	bcf	58,4,b	;volatile
  2985                           
  2986                           ;GPIO.c: 30:     ANSELDbits.ANSD4 = 0;
  2987   003D20  993B               	bcf	59,4,b	;volatile
  2988                           
  2989                           ;GPIO.c: 31:     ANSELDbits.ANSD5 = 0;
  2990   003D22  9B3B               	bcf	59,5,b	;volatile
  2991                           
  2992                           ;GPIO.c: 32:     ANSELDbits.ANSD6 = 0;
  2993   003D24  9D3B               	bcf	59,6,b	;volatile
  2994                           
  2995                           ;GPIO.c: 33:     LATDbits.LD2 = 1;
  2996   003D26  848C               	bsf	140,2,c	;volatile
  2997                           
  2998                           ;GPIO.c: 34:     LATDbits.LD3 = 1;
  2999   003D28  868C               	bsf	140,3,c	;volatile
  3000                           
  3001                           ;GPIO.c: 35:     LATCbits.LC4 = 1;
  3002   003D2A  888B               	bsf	139,4,c	;volatile
  3003                           
  3004                           ;GPIO.c: 36:     LATDbits.LD4 = 1;
  3005   003D2C  888C               	bsf	140,4,c	;volatile
  3006                           
  3007                           ;GPIO.c: 37:     LATDbits.LD5 = 1;
  3008   003D2E  8A8C               	bsf	140,5,c	;volatile
  3009                           
  3010                           ;GPIO.c: 38:     LATDbits.LD6 = 1;
  3011   003D30  8C8C               	bsf	140,6,c	;volatile
  3012                           
  3013                           ;GPIO.c: 41:     TRISAbits.RA2 = 1;
  3014   003D32  8492               	bsf	146,2,c	;volatile
  3015                           
  3016                           ;GPIO.c: 42:     ANSELAbits.ANSA2 = 0;
  3017   003D34  9538               	bcf	56,2,b	;volatile
  3018   003D36                     
  3019                           ; BSR set to: 15
  3020                           ;GPIO.c: 47:     T1CONbits.TMR1CS = 0b00;
  3021   003D36  0E3F               	movlw	-193
  3022   003D38  16CD               	andwf	205,f,c	;volatile
  3023                           
  3024                           ;GPIO.c: 48:     T1CONbits.T1CKPS = 0b11;
  3025   003D3A  0E30               	movlw	48
  3026   003D3C  12CD               	iorwf	205,f,c	;volatile
  3027   003D3E                     
  3028                           ; BSR set to: 15
  3029                           ;GPIO.c: 49:     TMR1IE = 1;
  3030   003D3E  809D               	bsf	3997,0,c	;volatile
  3031   003D40                     
  3032                           ; BSR set to: 15
  3033                           ;GPIO.c: 50:     PEIE = 1;
  3034   003D40  8CF2               	bsf	4082,6,c	;volatile
  3035   003D42                     
  3036                           ; BSR set to: 15
  3037                           ;GPIO.c: 51:     GIE = 1;
  3038   003D42  8EF2               	bsf	4082,7,c	;volatile
  3039                           
  3040                           ;GPIO.c: 52:     GPIOIE = 1;
  3041   003D44  0E01               	movlw	1
  3042   003D46  0101               	movlb	1	; () banked
  3043   003D48  6F26               	movwf	_GPIOIE& (0+255),b
  3044   003D4A                     
  3045                           ; BSR set to: 1
  3046                           ;GPIO.c: 53:     TMR1IF = 1;
  3047   003D4A  809E               	bsf	3998,0,c	;volatile
  3048                           
  3049                           ;GPIO.c: 54:     TMR1 = 0xFFFF - (25000 - 1);
  3050   003D4C  0E9E               	movlw	158
  3051   003D4E  6ECF               	movwf	207,c	;volatile
  3052   003D50  0E58               	movlw	88
  3053   003D52  6ECE               	movwf	206,c	;volatile
  3054   003D54                     
  3055                           ; BSR set to: 1
  3056                           ;GPIO.c: 55:     TMR1ON = 1;
  3057   003D54  80CD               	bsf	4045,0,c	;volatile
  3058                           
  3059                           ;GPIO.c: 58:     keepStateGPIO = 1;
  3060   003D56  0E01               	movlw	1
  3061   003D58  0100               	movlb	0	; () banked
  3062   003D5A  6FFE               	movwf	_keepStateGPIO& (0+255),b
  3063   003D5C                     
  3064                           ; BSR set to: 0
  3065                           ;GPIO.c: 60:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  3066   003D5C  EE21  F0EA         	lfsr	2,runGPIO@F6975
  3067   003D60  EE10  F015         	lfsr	1,runGPIO@LEDControl
  3068   003D64  0E0B               	movlw	11
  3069   003D66                     u9711:
  3070   003D66  CFDB FFE3          	movff	plusw2,plusw1
  3071   003D6A  06E8               	decf	wreg,f,c
  3072   003D6C  E2FC               	bc	u9711
  3073   003D6E                     
  3074                           ; BSR set to: 0
  3075                           ;GPIO.c: 61:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  3076   003D6E  EE21  F0DE         	lfsr	2,runGPIO@F6993
  3077   003D72  EE10  F009         	lfsr	1,runGPIO@states
  3078   003D76  0E0B               	movlw	11
  3079   003D78                     u9721:
  3080   003D78  CFDB FFE3          	movff	plusw2,plusw1
  3081   003D7C  06E8               	decf	wreg,f,c
  3082   003D7E  E2FC               	bc	u9721
  3083                           
  3084                           ;GPIO.c: 62:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  3085   003D80  0E00               	movlw	0
  3086   003D82  6E22               	movwf	(runGPIO@numberOfStates+1)^0,c
  3087   003D84  0E0C               	movlw	12
  3088   003D86  6E21               	movwf	runGPIO@numberOfStates^0,c
  3089                           
  3090                           ;GPIO.c: 63:     uint8_t GPIOi;;GPIO.c: 64:     GPIOi = 0;
  3091   003D88  0E00               	movlw	0
  3092   003D8A  6E23               	movwf	runGPIO@GPIOi^0,c
  3093                           
  3094                           ;GPIO.c: 66:     while(keepStateGPIO){
  3095   003D8C  EF27  F01F         	goto	l372
  3096   003D90                     l7922:
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;GPIO.c: 68:         for(int j = 0; j < 6; j++) {
  3100   003D90  0E00               	movlw	0
  3101   003D92  6E25               	movwf	(runGPIO@j+1)^0,c
  3102   003D94  0E00               	movlw	0
  3103   003D96  6E24               	movwf	runGPIO@j^0,c
  3104   003D98                     l7928:
  3105                           
  3106                           ;GPIO.c: 69:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  3107   003D98  5024               	movf	runGPIO@j^0,w,c
  3108   003D9A  0D02               	mullw	2
  3109   003D9C  50F3               	movf	243,w,c
  3110   003D9E  0F15               	addlw	low runGPIO@LEDControl
  3111   003DA0  6ED9               	movwf	fsr2l,c
  3112   003DA2  6ADA               	clrf	fsr2h,c
  3113   003DA4  D802               	call	u9738
  3114   003DA6  EFF9  F01E         	goto	u9739
  3115   003DAA                     u9738:
  3116   003DAA  0005               	push	
  3117   003DAC  6EFA               	movwf	pclath,c
  3118   003DAE  50DE               	movf	postinc2,w,c
  3119   003DB0  6EFD               	movwf	tosl,c
  3120   003DB2  50DE               	movf	postinc2,w,c
  3121   003DB4  6EFE               	movwf	tosh,c
  3122   003DB6  50F8               	movf	tblptru,w,c
  3123   003DB8  6EFF               	movwf	tosu,c
  3124   003DBA  50FA               	movf	pclath,w,c
  3125   003DBC  5024               	movf	runGPIO@j^0,w,c
  3126   003DBE  0805               	sublw	5
  3127   003DC0  6E07               	movwf	??_runGPIO^0,c
  3128   003DC2  5023               	movf	runGPIO@GPIOi^0,w,c
  3129   003DC4  0F09               	addlw	low runGPIO@states
  3130   003DC6  6ED9               	movwf	fsr2l,c
  3131   003DC8  6ADA               	clrf	fsr2h,c
  3132   003DCA  50DF               	movf	indf2,w,c
  3133   003DCC  6E08               	movwf	(??_runGPIO+1)^0,c
  3134   003DCE  2A07               	incf	??_runGPIO^0,f,c
  3135   003DD0  EFEC  F01E         	goto	u9744
  3136   003DD4                     u9745:
  3137   003DD4  90D8               	bcf	status,0,c
  3138   003DD6  3208               	rrcf	(??_runGPIO+1)^0,f,c
  3139   003DD8                     u9744:
  3140   003DD8  2E07               	decfsz	??_runGPIO^0,f,c
  3141   003DDA  EFEA  F01E         	goto	u9745
  3142   003DDE  A008               	btfss	(??_runGPIO+1)^0,0,c
  3143   003DE0  EFF4  F01E         	goto	u9751
  3144   003DE4  EFF7  F01E         	goto	u9750
  3145   003DE8                     u9751:
  3146   003DE8  0E01               	movlw	1
  3147   003DEA  EFF8  F01E         	goto	u9760
  3148   003DEE                     u9750:
  3149   003DEE  0E00               	movlw	0
  3150   003DF0                     u9760:
  3151   003DF0  0012               	return		;indir
  3152   003DF2                     u9739:
  3153   003DF2                     
  3154                           ;GPIO.c: 70:         }
  3155   003DF2  4A24               	infsnz	runGPIO@j^0,f,c
  3156   003DF4  2A25               	incf	(runGPIO@j+1)^0,f,c
  3157   003DF6  BE25               	btfsc	(runGPIO@j+1)^0,7,c
  3158   003DF8  EF07  F01F         	goto	u9771
  3159   003DFC  5025               	movf	(runGPIO@j+1)^0,w,c
  3160   003DFE  E109               	bnz	u9770
  3161   003E00  0E06               	movlw	6
  3162   003E02  5C24               	subwf	runGPIO@j^0,w,c
  3163   003E04  A0D8               	btfss	status,0,c
  3164   003E06  EF07  F01F         	goto	u9771
  3165   003E0A  EF09  F01F         	goto	u9770
  3166   003E0E                     u9771:
  3167   003E0E  EFCC  F01E         	goto	l7928
  3168   003E12                     u9770:
  3169   003E12                     
  3170                           ;GPIO.c: 71:         _delay((unsigned long)((400)*(32E6/4000.0)));
  3171   003E12  0E11               	movlw	17
  3172   003E14  6E08               	movwf	(??_runGPIO+1)^0,c
  3173   003E16  0E3C               	movlw	60
  3174   003E18  6E07               	movwf	??_runGPIO^0,c
  3175   003E1A  0ECB               	movlw	203
  3176   003E1C                     u10367:
  3177   003E1C  2EE8               	decfsz	wreg,f,c
  3178   003E1E  D7FE               	bra	u10367
  3179   003E20  2E07               	decfsz	??_runGPIO^0,f,c
  3180   003E22  D7FC               	bra	u10367
  3181   003E24  2E08               	decfsz	(??_runGPIO+1)^0,f,c
  3182   003E26  D7FA               	bra	u10367
  3183   003E28  0000               	nop	
  3184   003E2A                     
  3185                           ;GPIO.c: 72:         GPIOi++;
  3186   003E2A  2A23               	incf	runGPIO@GPIOi^0,f,c
  3187                           
  3188                           ;GPIO.c: 73:         if(GPIOi == numberOfStates){
  3189   003E2C  5023               	movf	runGPIO@GPIOi^0,w,c
  3190   003E2E  6E07               	movwf	??_runGPIO^0,c
  3191   003E30  6A08               	clrf	(??_runGPIO+1)^0,c
  3192   003E32  5021               	movf	runGPIO@numberOfStates^0,w,c
  3193   003E34  1807               	xorwf	??_runGPIO^0,w,c
  3194   003E36  E107               	bnz	u9781
  3195   003E38  5022               	movf	(runGPIO@numberOfStates+1)^0,w,c
  3196   003E3A  1808               	xorwf	(??_runGPIO+1)^0,w,c
  3197   003E3C  A4D8               	btfss	status,2,c
  3198   003E3E  EF23  F01F         	goto	u9781
  3199   003E42  EF25  F01F         	goto	u9780
  3200   003E46                     u9781:
  3201   003E46  EF27  F01F         	goto	l372
  3202   003E4A                     u9780:
  3203   003E4A                     
  3204                           ;GPIO.c: 74:             GPIOi = 0;
  3205   003E4A  0E00               	movlw	0
  3206   003E4C  6E23               	movwf	runGPIO@GPIOi^0,c
  3207   003E4E                     l372:
  3208                           
  3209                           ;GPIO.c: 66:     while(keepStateGPIO){
  3210   003E4E  0100               	movlb	0	; () banked
  3211   003E50  51FE               	movf	_keepStateGPIO& (0+255),w,b
  3212   003E52  A4D8               	btfss	status,2,c
  3213   003E54  EF2E  F01F         	goto	u9791
  3214   003E58  EF30  F01F         	goto	u9790
  3215   003E5C                     u9791:
  3216   003E5C  EFC8  F01E         	goto	l7922
  3217   003E60                     u9790:
  3218   003E60                     
  3219                           ; BSR set to: 0
  3220                           ;GPIO.c: 79:     LATDbits.LD2 = 1;
  3221   003E60  848C               	bsf	140,2,c	;volatile
  3222                           
  3223                           ;GPIO.c: 80:     LATDbits.LD3 = 1;
  3224   003E62  868C               	bsf	140,3,c	;volatile
  3225                           
  3226                           ;GPIO.c: 81:     LATCbits.LC4 = 1;
  3227   003E64  888B               	bsf	139,4,c	;volatile
  3228                           
  3229                           ;GPIO.c: 82:     LATDbits.LD4 = 1;
  3230   003E66  888C               	bsf	140,4,c	;volatile
  3231                           
  3232                           ;GPIO.c: 83:     LATDbits.LD5 = 1;
  3233   003E68  8A8C               	bsf	140,5,c	;volatile
  3234                           
  3235                           ;GPIO.c: 84:     LATDbits.LD6 = 1;
  3236   003E6A  8C8C               	bsf	140,6,c	;volatile
  3237                           
  3238                           ;GPIO.c: 85:     TMR1ON = 0;
  3239   003E6C  90CD               	bcf	4045,0,c	;volatile
  3240                           
  3241                           ;GPIO.c: 86:     TMR1IE = 0;
  3242   003E6E  909D               	bcf	3997,0,c	;volatile
  3243   003E70                     
  3244                           ; BSR set to: 0
  3245                           ;GPIO.c: 87:     GPIOIE = 0;
  3246   003E70  0E00               	movlw	0
  3247   003E72  0101               	movlb	1	; () banked
  3248   003E74  6F26               	movwf	_GPIOIE& (0+255),b
  3249   003E76                     
  3250                           ; BSR set to: 1
  3251   003E76  0012               	return		;funcret
  3252   003E78                     __end_of_runGPIO:
  3253                           	callstack 0
  3254                           
  3255 ;; *************** function _LED5_Control *****************
  3256 ;; Defined at:
  3257 ;;		line 14 in file "GPIO.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  state           1    wreg     unsigned char 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  state           1    5[COMRAM] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;Total ram usage:        1 bytes
  3276 ;; Hardware stack levels used: 1
  3277 ;; Hardware stack levels required when called: 1
  3278 ;; This function calls:
  3279 ;;		Nothing
  3280 ;; This function is called by:
  3281 ;;		_runGPIO
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text6
  3286   0050DA                     __ptext6:
  3287                           	callstack 0
  3288   0050DA                     _LED5_Control:
  3289                           	callstack 28
  3290                           
  3291                           ; BSR set to: 1
  3292                           ;incstack = 0
  3293                           ;LED5_Control@state stored from wreg
  3294   0050DA  6E06               	movwf	LED5_Control@state^0,c
  3295   0050DC  B006               	btfsc	LED5_Control@state^0,0,c
  3296   0050DE  D002               	bra	u9595
  3297   0050E0  9A8C               	bcf	140,5,c	;volatile
  3298   0050E2  D001               	bra	u9596
  3299   0050E4                     u9595:
  3300   0050E4  8A8C               	bsf	140,5,c	;volatile
  3301   0050E6                     u9596:
  3302   0050E6  0012               	return		;funcret
  3303   0050E8                     __end_of_LED5_Control:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function _LED4_Control *****************
  3307 ;; Defined at:
  3308 ;;		line 13 in file "GPIO.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  state           1    wreg     unsigned char 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  state           1    5[COMRAM] unsigned char 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;Total ram usage:        1 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 1
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_runGPIO
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text7
  3337   0050E8                     __ptext7:
  3338                           	callstack 0
  3339   0050E8                     _LED4_Control:
  3340                           	callstack 28
  3341                           
  3342                           ;incstack = 0
  3343                           ;LED4_Control@state stored from wreg
  3344   0050E8  6E06               	movwf	LED4_Control@state^0,c
  3345   0050EA  B006               	btfsc	LED4_Control@state^0,0,c
  3346   0050EC  D002               	bra	u9585
  3347   0050EE  988C               	bcf	140,4,c	;volatile
  3348   0050F0  D001               	bra	u9586
  3349   0050F2                     u9585:
  3350   0050F2  888C               	bsf	140,4,c	;volatile
  3351   0050F4                     u9586:
  3352   0050F4  0012               	return		;funcret
  3353   0050F6                     __end_of_LED4_Control:
  3354                           	callstack 0
  3355                           
  3356 ;; *************** function _LED3_Control *****************
  3357 ;; Defined at:
  3358 ;;		line 12 in file "GPIO.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  state           1    wreg     unsigned char 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  state           1    5[COMRAM] unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;Total ram usage:        1 bytes
  3377 ;; Hardware stack levels used: 1
  3378 ;; Hardware stack levels required when called: 1
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_runGPIO
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text8
  3387   0050F6                     __ptext8:
  3388                           	callstack 0
  3389   0050F6                     _LED3_Control:
  3390                           	callstack 28
  3391                           
  3392                           ;incstack = 0
  3393                           ;LED3_Control@state stored from wreg
  3394   0050F6  6E06               	movwf	LED3_Control@state^0,c
  3395   0050F8  B006               	btfsc	LED3_Control@state^0,0,c
  3396   0050FA  D002               	bra	u9575
  3397   0050FC  988B               	bcf	139,4,c	;volatile
  3398   0050FE  D001               	bra	u9576
  3399   005100                     u9575:
  3400   005100  888B               	bsf	139,4,c	;volatile
  3401   005102                     u9576:
  3402   005102  0012               	return		;funcret
  3403   005104                     __end_of_LED3_Control:
  3404                           	callstack 0
  3405                           
  3406 ;; *************** function _LED2_Control *****************
  3407 ;; Defined at:
  3408 ;;		line 11 in file "GPIO.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  state           1    wreg     unsigned char 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  state           1    5[COMRAM] unsigned char 
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		wreg
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;Total ram usage:        1 bytes
  3427 ;; Hardware stack levels used: 1
  3428 ;; Hardware stack levels required when called: 1
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_runGPIO
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           	psect	text9
  3437   005104                     __ptext9:
  3438                           	callstack 0
  3439   005104                     _LED2_Control:
  3440                           	callstack 28
  3441                           
  3442                           ;incstack = 0
  3443                           ;LED2_Control@state stored from wreg
  3444   005104  6E06               	movwf	LED2_Control@state^0,c
  3445   005106  B006               	btfsc	LED2_Control@state^0,0,c
  3446   005108  D002               	bra	u9565
  3447   00510A  968C               	bcf	140,3,c	;volatile
  3448   00510C  D001               	bra	u9566
  3449   00510E                     u9565:
  3450   00510E  868C               	bsf	140,3,c	;volatile
  3451   005110                     u9566:
  3452   005110  0012               	return		;funcret
  3453   005112                     __end_of_LED2_Control:
  3454                           	callstack 0
  3455                           
  3456 ;; *************** function _LED1_Control *****************
  3457 ;; Defined at:
  3458 ;;		line 10 in file "GPIO.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  state           1    wreg     unsigned char 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  state           1    5[COMRAM] unsigned char 
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      void 
  3465 ;; Registers used:
  3466 ;;		wreg
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;Total ram usage:        1 bytes
  3477 ;; Hardware stack levels used: 1
  3478 ;; Hardware stack levels required when called: 1
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_runGPIO
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           	psect	text10
  3487   005112                     __ptext10:
  3488                           	callstack 0
  3489   005112                     _LED1_Control:
  3490                           	callstack 28
  3491                           
  3492                           ;incstack = 0
  3493                           ;LED1_Control@state stored from wreg
  3494   005112  6E06               	movwf	LED1_Control@state^0,c
  3495   005114  B006               	btfsc	LED1_Control@state^0,0,c
  3496   005116  D002               	bra	u9555
  3497   005118  948C               	bcf	140,2,c	;volatile
  3498   00511A  D001               	bra	u9556
  3499   00511C                     u9555:
  3500   00511C  848C               	bsf	140,2,c	;volatile
  3501   00511E                     u9556:
  3502   00511E  0012               	return		;funcret
  3503   005120                     __end_of_LED1_Control:
  3504                           	callstack 0
  3505                           
  3506 ;; *************** function _LED6_Control *****************
  3507 ;; Defined at:
  3508 ;;		line 15 in file "GPIO.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  state           1    wreg     unsigned char 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  state           1    5[COMRAM] unsigned char 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      void 
  3515 ;; Registers used:
  3516 ;;		wreg
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;Total ram usage:        1 bytes
  3527 ;; Hardware stack levels used: 1
  3528 ;; Hardware stack levels required when called: 1
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_runGPIO
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text11
  3537   005120                     __ptext11:
  3538                           	callstack 0
  3539   005120                     _LED6_Control:
  3540                           	callstack 28
  3541                           
  3542                           ;incstack = 0
  3543                           ;LED6_Control@state stored from wreg
  3544   005120  6E06               	movwf	LED6_Control@state^0,c
  3545   005122  B006               	btfsc	LED6_Control@state^0,0,c
  3546   005124  D002               	bra	u9605
  3547   005126  9C8C               	bcf	140,6,c	;volatile
  3548   005128  D001               	bra	u9606
  3549   00512A                     u9605:
  3550   00512A  8C8C               	bsf	140,6,c	;volatile
  3551   00512C                     u9606:
  3552   00512C  0012               	return		;funcret
  3553   00512E                     __end_of_LED6_Control:
  3554                           	callstack 0
  3555                           
  3556 ;; *************** function _runGAME *****************
  3557 ;; Defined at:
  3558 ;;		line 10 in file "GAME.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;  approxText     17   17[BANK1 ] unsigned char [17]
  3563 ;;  text           17    0[BANK1 ] unsigned char [17]
  3564 ;;  randomNumber    2   40[BANK1 ] unsigned short 
  3565 ;;  pot1            2   34[BANK1 ] unsigned short 
  3566 ;;  GAMEdivider     1   39[BANK1 ] unsigned char 
  3567 ;;  keepState       1   38[BANK1 ] unsigned char 
  3568 ;;  GAMEpart        1   37[BANK1 ] unsigned char 
  3569 ;;  GAMEround       1   36[BANK1 ] unsigned char 
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      void 
  3572 ;; Registers used:
  3573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Locals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Totals:         0       2      42       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;Total ram usage:       44 bytes
  3584 ;; Hardware stack levels used: 1
  3585 ;; Hardware stack levels required when called: 9
  3586 ;; This function calls:
  3587 ;;		_LCD_ShowString
  3588 ;;		___awdiv
  3589 ;;		___lbdiv
  3590 ;;		_rand
  3591 ;;		_sprintf
  3592 ;; This function is called by:
  3593 ;;		_main
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text12
  3598   0025FA                     __ptext12:
  3599                           	callstack 0
  3600   0025FA                     _runGAME:
  3601                           	callstack 21
  3602   0025FA                     
  3603                           ;GAME.c: 12:     TRISDbits.RD2 = 0;
  3604   0025FA  9495               	bcf	149,2,c	;volatile
  3605                           
  3606                           ;GAME.c: 13:     TRISDbits.RD3 = 0;
  3607   0025FC  9695               	bcf	149,3,c	;volatile
  3608                           
  3609                           ;GAME.c: 14:     TRISCbits.RC4 = 0;
  3610   0025FE  9894               	bcf	148,4,c	;volatile
  3611                           
  3612                           ;GAME.c: 15:     TRISDbits.RD4 = 0;
  3613   002600  9895               	bcf	149,4,c	;volatile
  3614                           
  3615                           ;GAME.c: 16:     TRISDbits.RD5 = 0;
  3616   002602  9A95               	bcf	149,5,c	;volatile
  3617                           
  3618                           ;GAME.c: 17:     TRISDbits.RD6 = 0;
  3619   002604  9C95               	bcf	149,6,c	;volatile
  3620                           
  3621                           ;GAME.c: 18:     ANSELDbits.ANSD2 = 0;
  3622   002606  010F               	movlb	15	; () banked
  3623   002608  953B               	bcf	59,2,b	;volatile
  3624                           
  3625                           ;GAME.c: 19:     ANSELDbits.ANSD3 = 0;
  3626   00260A  973B               	bcf	59,3,b	;volatile
  3627                           
  3628                           ;GAME.c: 20:     ANSELCbits.ANSC4 = 0;
  3629   00260C  993A               	bcf	58,4,b	;volatile
  3630                           
  3631                           ;GAME.c: 21:     ANSELDbits.ANSD4 = 0;
  3632   00260E  993B               	bcf	59,4,b	;volatile
  3633                           
  3634                           ;GAME.c: 22:     ANSELDbits.ANSD5 = 0;
  3635   002610  9B3B               	bcf	59,5,b	;volatile
  3636                           
  3637                           ;GAME.c: 23:     ANSELDbits.ANSD6 = 0;
  3638   002612  9D3B               	bcf	59,6,b	;volatile
  3639                           
  3640                           ;GAME.c: 24:     LATDbits.LD2 = 1;
  3641   002614  848C               	bsf	140,2,c	;volatile
  3642                           
  3643                           ;GAME.c: 25:     LATDbits.LD3 = 1;
  3644   002616  868C               	bsf	140,3,c	;volatile
  3645                           
  3646                           ;GAME.c: 26:     LATCbits.LC4 = 1;
  3647   002618  888B               	bsf	139,4,c	;volatile
  3648                           
  3649                           ;GAME.c: 27:     LATDbits.LD4 = 1;
  3650   00261A  888C               	bsf	140,4,c	;volatile
  3651                           
  3652                           ;GAME.c: 28:     LATDbits.LD5 = 1;
  3653   00261C  8A8C               	bsf	140,5,c	;volatile
  3654                           
  3655                           ;GAME.c: 29:     LATDbits.LD6 = 1;
  3656   00261E  8C8C               	bsf	140,6,c	;volatile
  3657                           
  3658                           ;GAME.c: 32:     TRISAbits.RA2 = 1;
  3659   002620  8492               	bsf	146,2,c	;volatile
  3660                           
  3661                           ;GAME.c: 33:     ANSELAbits.ANSA2 = 0;
  3662   002622  9538               	bcf	56,2,b	;volatile
  3663                           
  3664                           ;GAME.c: 36:     ANSELAbits.ANSA5 = 1;
  3665   002624  8B38               	bsf	56,5,b	;volatile
  3666                           
  3667                           ;GAME.c: 37:     ADCON2bits.ADFM = 1;
  3668   002626  8EC0               	bsf	192,7,c	;volatile
  3669   002628                     
  3670                           ; BSR set to: 15
  3671                           ;GAME.c: 38:     ADCON2bits.ADCS = 0b110;
  3672   002628  50C0               	movf	192,w,c	;volatile
  3673   00262A  0BF8               	andlw	-8
  3674   00262C  0906               	iorlw	6
  3675   00262E  6EC0               	movwf	192,c	;volatile
  3676                           
  3677                           ;GAME.c: 39:     ADCON2bits.ACQT = 0b110;
  3678   002630  50C0               	movf	192,w,c	;volatile
  3679   002632  0BC7               	andlw	-57
  3680   002634  0930               	iorlw	48
  3681   002636  6EC0               	movwf	192,c	;volatile
  3682   002638                     
  3683                           ; BSR set to: 15
  3684                           ;GAME.c: 40:     ADCON0bits.ADON = 1;
  3685   002638  80C2               	bsf	194,0,c	;volatile
  3686   00263A                     
  3687                           ; BSR set to: 15
  3688                           ;GAME.c: 42:     uint16_t pot1;;GAME.c: 43:     char text[17] = "";
  3689   00263A  EE21  F09B         	lfsr	2,runGAME@text
  3690   00263E  0E10               	movlw	16
  3691   002640                     u10121:
  3692   002640  6ADE               	clrf	postinc2,c
  3693   002642  06E8               	decf	wreg,f,c
  3694   002644  E2FD               	bc	u10121
  3695   002646                     
  3696                           ; BSR set to: 15
  3697                           ;GAME.c: 48:     T1CONbits.TMR1CS = 0b00;
  3698   002646  0E3F               	movlw	-193
  3699   002648  16CD               	andwf	205,f,c	;volatile
  3700   00264A                     
  3701                           ; BSR set to: 15
  3702                           ;GAME.c: 49:     T1CONbits.T1CKPS = 0b11;
  3703   00264A  0E30               	movlw	48
  3704   00264C  12CD               	iorwf	205,f,c	;volatile
  3705   00264E                     
  3706                           ; BSR set to: 15
  3707                           ;GAME.c: 50:     TMR1IE = 1;
  3708   00264E  809D               	bsf	3997,0,c	;volatile
  3709   002650                     
  3710                           ; BSR set to: 15
  3711                           ;GAME.c: 51:     PEIE = 1;
  3712   002650  8CF2               	bsf	4082,6,c	;volatile
  3713   002652                     
  3714                           ; BSR set to: 15
  3715                           ;GAME.c: 52:     GIE = 1;
  3716   002652  8EF2               	bsf	4082,7,c	;volatile
  3717   002654                     
  3718                           ; BSR set to: 15
  3719                           ;GAME.c: 53:     GAMEIE = 1;
  3720   002654  0E01               	movlw	1
  3721   002656  0101               	movlb	1	; () banked
  3722   002658  6F24               	movwf	_GAMEIE& (0+255),b
  3723   00265A                     
  3724                           ; BSR set to: 1
  3725                           ;GAME.c: 54:     TMR1IF = 1;
  3726   00265A  809E               	bsf	3998,0,c	;volatile
  3727   00265C                     
  3728                           ; BSR set to: 1
  3729                           ;GAME.c: 55:     TMR1 = 0xFFFF - (62500 - 1);
  3730   00265C  0E0B               	movlw	11
  3731   00265E  6ECF               	movwf	207,c	;volatile
  3732   002660  0EDC               	movlw	220
  3733   002662  6ECE               	movwf	206,c	;volatile
  3734   002664                     
  3735                           ; BSR set to: 1
  3736                           ;GAME.c: 56:     TMR1ON = 1;
  3737   002664  80CD               	bsf	4045,0,c	;volatile
  3738   002666                     
  3739                           ; BSR set to: 1
  3740                           ;GAME.c: 58:     keepState = 1;
  3741   002666  0E01               	movlw	1
  3742   002668  6FC1               	movwf	runGAME@keepState& (0+255),b
  3743   00266A                     
  3744                           ; BSR set to: 1
  3745                           ;GAME.c: 59:     GAMEtime = 0;
  3746   00266A  0E00               	movlw	0
  3747   00266C  6F23               	movwf	_GAMEtime& (0+255),b
  3748   00266E                     
  3749                           ; BSR set to: 1
  3750                           ;GAME.c: 60:     uint8_t GAMEround = 1;
  3751   00266E  0E01               	movlw	1
  3752   002670  6FBF               	movwf	runGAME@GAMEround& (0+255),b
  3753   002672                     
  3754                           ; BSR set to: 1
  3755                           ;GAME.c: 63:     char approxText[17] = "";
  3756   002672  EE21  F0AC         	lfsr	2,runGAME@approxText
  3757   002676  0E10               	movlw	16
  3758   002678                     u10131:
  3759   002678  6ADE               	clrf	postinc2,c
  3760   00267A  06E8               	decf	wreg,f,c
  3761   00267C  E2FD               	bc	u10131
  3762   00267E                     
  3763                           ; BSR set to: 1
  3764                           ;GAME.c: 66:     uint16_t randomNumber = 2 + rand() / ((0x7fff) / (1023 - 2 + 1) + 1);
  3765   00267E  EC7F  F025         	call	_rand
  3766   002682  C012  F018         	movff	?_rand,___awdiv@dividend
  3767   002686  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  3768   00268A  0E00               	movlw	0
  3769   00268C  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  3770   00268E  0E21               	movlw	33
  3771   002690  6E1A               	movwf	___awdiv@divisor^0,c
  3772   002692  EC37  F023         	call	___awdiv	;wreg free
  3773   002696  0E02               	movlw	2
  3774   002698  2418               	addwf	?___awdiv^0,w,c
  3775   00269A  0101               	movlb	1	; () banked
  3776   00269C  6FC3               	movwf	runGAME@randomNumber& (0+255),b
  3777   00269E  0E00               	movlw	0
  3778   0026A0  2019               	addwfc	(?___awdiv+1)^0,w,c
  3779   0026A2  6FC4               	movwf	(runGAME@randomNumber+1)& (0+255),b
  3780   0026A4                     
  3781                           ; BSR set to: 1
  3782                           ;GAME.c: 67:     sprintf(approxText, "%u                ", randomNumber);
  3783   0026A4  0EAC               	movlw	low runGAME@approxText
  3784   0026A6  0100               	movlb	0	; () banked
  3785   0026A8  6FCE               	movwf	sprintf@s& (0+255),b
  3786   0026AA  0E01               	movlw	high runGAME@approxText
  3787   0026AC  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  3788   0026AE  0E11               	movlw	low STR_27
  3789   0026B0  6FD0               	movwf	sprintf@fmt& (0+255),b
  3790   0026B2  0EFF               	movlw	high STR_27
  3791   0026B4  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  3792   0026B6  C1C3  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  3793   0026BA  C1C4  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  3794   0026BE  EC11  F027         	call	_sprintf	;wreg free
  3795   0026C2                     
  3796                           ;GAME.c: 68:     LCD_ShowString(1, approxText);
  3797   0026C2  0EAC               	movlw	low runGAME@approxText
  3798   0026C4  6E07               	movwf	LCD_ShowString@textData^0,c
  3799   0026C6  0E01               	movlw	high runGAME@approxText
  3800   0026C8  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  3801   0026CA  0E01               	movlw	1
  3802   0026CC  EC99  F023         	call	_LCD_ShowString
  3803                           
  3804                           ;GAME.c: 71:     while(keepState){
  3805   0026D0  EF6B  F014         	goto	l662
  3806   0026D4                     l8212:
  3807                           
  3808                           ; BSR set to: 1
  3809                           ;GAME.c: 73:         ADCON0bits.CHS = 5;
  3810   0026D4  50C2               	movf	194,w,c	;volatile
  3811   0026D6  0B83               	andlw	-125
  3812   0026D8  0914               	iorlw	20
  3813   0026DA  6EC2               	movwf	194,c	;volatile
  3814   0026DC                     
  3815                           ; BSR set to: 1
  3816                           ;GAME.c: 74:         GODONE = 1;
  3817   0026DC  82C2               	bsf	4034,1,c	;volatile
  3818   0026DE                     l664:
  3819   0026DE  B2C2               	btfsc	4034,1,c	;volatile
  3820   0026E0  EF74  F013         	goto	u10141
  3821   0026E4  EF76  F013         	goto	u10140
  3822   0026E8                     u10141:
  3823   0026E8  EF6F  F013         	goto	l664
  3824   0026EC                     u10140:
  3825   0026EC                     
  3826                           ;GAME.c: 76:         pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  3827   0026EC  50C3               	movf	195,w,c	;volatile
  3828   0026EE  CFC4 F0E7          	movff	4036,??_runGAME	;volatile
  3829   0026F2  0100               	movlb	0	; () banked
  3830   0026F4  6BE8               	clrf	(??_runGAME+1)& (0+255),b
  3831   0026F6  C0E7  F0E8         	movff	??_runGAME,??_runGAME+1
  3832   0026FA  6BE7               	clrf	??_runGAME& (0+255),b
  3833   0026FC  11E7               	iorwf	??_runGAME& (0+255),w,b
  3834   0026FE  0101               	movlb	1	; () banked
  3835   002700  6FBD               	movwf	runGAME@pot1& (0+255),b
  3836   002702  0100               	movlb	0	; () banked
  3837   002704  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  3838   002706  0101               	movlb	1	; () banked
  3839   002708  6FBE               	movwf	(runGAME@pot1+1)& (0+255),b
  3840   00270A                     
  3841                           ; BSR set to: 1
  3842                           ;GAME.c: 78:         sprintf(text, "%hu             ", pot1);
  3843   00270A  0E9B               	movlw	low runGAME@text
  3844   00270C  0100               	movlb	0	; () banked
  3845   00270E  6FCE               	movwf	sprintf@s& (0+255),b
  3846   002710  0E01               	movlw	high runGAME@text
  3847   002712  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  3848   002714  0E37               	movlw	low STR_28
  3849   002716  6FD0               	movwf	sprintf@fmt& (0+255),b
  3850   002718  0EFF               	movlw	high STR_28
  3851   00271A  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  3852   00271C  C1BD  F0D2         	movff	runGAME@pot1,?_sprintf+4
  3853   002720  C1BE  F0D3         	movff	runGAME@pot1+1,?_sprintf+5
  3854   002724  EC11  F027         	call	_sprintf	;wreg free
  3855   002728                     
  3856                           ;GAME.c: 79:         LCD_ShowString(2, text);
  3857   002728  0E9B               	movlw	low runGAME@text
  3858   00272A  6E07               	movwf	LCD_ShowString@textData^0,c
  3859   00272C  0E01               	movlw	high runGAME@text
  3860   00272E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  3861   002730  0E02               	movlw	2
  3862   002732  EC99  F023         	call	_LCD_ShowString
  3863                           
  3864                           ;GAME.c: 81:         switch(GAMEround){
  3865   002736  EFA9  F013         	goto	l8230
  3866   00273A                     l8222:
  3867                           
  3868                           ; BSR set to: 1
  3869                           ;GAME.c: 83:                 GAMEdivider = 33;
  3870   00273A  0E21               	movlw	33
  3871   00273C  6FC2               	movwf	runGAME@GAMEdivider& (0+255),b
  3872                           
  3873                           ;GAME.c: 84:                 break;
  3874   00273E  EFB5  F013         	goto	l8232
  3875   002742                     l8224:
  3876                           
  3877                           ; BSR set to: 1
  3878                           ;GAME.c: 86:                 GAMEdivider = 24;
  3879   002742  0E18               	movlw	24
  3880   002744  6FC2               	movwf	runGAME@GAMEdivider& (0+255),b
  3881                           
  3882                           ;GAME.c: 87:                 break;
  3883   002746  EFB5  F013         	goto	l8232
  3884   00274A                     l8226:
  3885                           
  3886                           ; BSR set to: 1
  3887                           ;GAME.c: 89:                 GAMEdivider = 18;
  3888   00274A  0E12               	movlw	18
  3889   00274C  6FC2               	movwf	runGAME@GAMEdivider& (0+255),b
  3890                           
  3891                           ;GAME.c: 90:                 break;
  3892   00274E  EFB5  F013         	goto	l8232
  3893   002752                     l8230:
  3894   002752  0101               	movlb	1	; () banked
  3895   002754  51BF               	movf	runGAME@GAMEround& (0+255),w,b
  3896                           
  3897                           ; Switch size 1, requested type "simple"
  3898                           ; Number of cases is 2, Range of values is 1 to 2
  3899                           ; switch strategies available:
  3900                           ; Name         Instructions Cycles
  3901                           ; simple_byte            7     4 (average)
  3902                           ;	Chosen strategy is simple_byte
  3903   002756  0A01               	xorlw	1	; case 1
  3904   002758  B4D8               	btfsc	status,2,c
  3905   00275A  EF9D  F013         	goto	l8222
  3906   00275E  0A03               	xorlw	3	; case 2
  3907   002760  B4D8               	btfsc	status,2,c
  3908   002762  EFA1  F013         	goto	l8224
  3909   002766  EFA5  F013         	goto	l8226
  3910   00276A                     l8232:
  3911                           
  3912                           ; BSR set to: 1
  3913                           ;GAME.c: 93:         GAMEpart = GAMEtime/GAMEdivider;
  3914   00276A  C1C2  F006         	movff	runGAME@GAMEdivider,___lbdiv@divisor
  3915   00276E  5123               	movf	_GAMEtime& (0+255),w,b
  3916   002770  EC1D  F026         	call	___lbdiv
  3917   002774  0101               	movlb	1	; () banked
  3918   002776  6FC0               	movwf	runGAME@GAMEpart& (0+255),b
  3919                           
  3920                           ;GAME.c: 94:         switch(GAMEpart){
  3921   002778  EF24  F014         	goto	l8246
  3922   00277C                     l673:
  3923                           
  3924                           ; BSR set to: 1
  3925                           ;GAME.c: 96:                 LATDbits.LD2 = 1;
  3926   00277C  848C               	bsf	140,2,c	;volatile
  3927                           
  3928                           ;GAME.c: 97:                 LATDbits.LD3 = 1;
  3929   00277E  868C               	bsf	140,3,c	;volatile
  3930                           
  3931                           ;GAME.c: 98:                 LATCbits.LC4 = 1;
  3932   002780  888B               	bsf	139,4,c	;volatile
  3933                           
  3934                           ;GAME.c: 99:                 LATDbits.LD4 = 1;
  3935   002782  888C               	bsf	140,4,c	;volatile
  3936                           
  3937                           ;GAME.c: 100:                 LATDbits.LD5 = 1;
  3938   002784  8A8C               	bsf	140,5,c	;volatile
  3939                           
  3940                           ;GAME.c: 101:                 LATDbits.LD6 = 1;
  3941   002786  8C8C               	bsf	140,6,c	;volatile
  3942                           
  3943                           ;GAME.c: 102:                 break;
  3944   002788  EF47  F014         	goto	l674
  3945   00278C                     l675:
  3946                           
  3947                           ; BSR set to: 1
  3948                           ;GAME.c: 104:                 LATDbits.LD2 = 0;
  3949   00278C  948C               	bcf	140,2,c	;volatile
  3950                           
  3951                           ;GAME.c: 105:                 LATDbits.LD3 = 1;
  3952   00278E  868C               	bsf	140,3,c	;volatile
  3953                           
  3954                           ;GAME.c: 106:                 LATCbits.LC4 = 1;
  3955   002790  888B               	bsf	139,4,c	;volatile
  3956                           
  3957                           ;GAME.c: 107:                 LATDbits.LD4 = 1;
  3958   002792  888C               	bsf	140,4,c	;volatile
  3959                           
  3960                           ;GAME.c: 108:                 LATDbits.LD5 = 1;
  3961   002794  8A8C               	bsf	140,5,c	;volatile
  3962                           
  3963                           ;GAME.c: 109:                 LATDbits.LD6 = 1;
  3964   002796  8C8C               	bsf	140,6,c	;volatile
  3965                           
  3966                           ;GAME.c: 110:                 break;
  3967   002798  EF47  F014         	goto	l674
  3968   00279C                     l676:
  3969                           
  3970                           ; BSR set to: 1
  3971                           ;GAME.c: 112:                 LATDbits.LD2 = 0;
  3972   00279C  948C               	bcf	140,2,c	;volatile
  3973                           
  3974                           ;GAME.c: 113:                 LATDbits.LD3 = 0;
  3975   00279E  968C               	bcf	140,3,c	;volatile
  3976                           
  3977                           ;GAME.c: 114:                 LATCbits.LC4 = 1;
  3978   0027A0  888B               	bsf	139,4,c	;volatile
  3979                           
  3980                           ;GAME.c: 115:                 LATDbits.LD4 = 1;
  3981   0027A2  888C               	bsf	140,4,c	;volatile
  3982                           
  3983                           ;GAME.c: 116:                 LATDbits.LD5 = 1;
  3984   0027A4  8A8C               	bsf	140,5,c	;volatile
  3985                           
  3986                           ;GAME.c: 117:                 LATDbits.LD6 = 1;
  3987   0027A6  8C8C               	bsf	140,6,c	;volatile
  3988                           
  3989                           ;GAME.c: 118:                 break;
  3990   0027A8  EF47  F014         	goto	l674
  3991   0027AC                     l677:
  3992                           
  3993                           ; BSR set to: 1
  3994                           ;GAME.c: 120:                 LATDbits.LD2 = 0;
  3995   0027AC  948C               	bcf	140,2,c	;volatile
  3996                           
  3997                           ;GAME.c: 121:                 LATDbits.LD3 = 0;
  3998   0027AE  968C               	bcf	140,3,c	;volatile
  3999                           
  4000                           ;GAME.c: 122:                 LATCbits.LC4 = 0;
  4001   0027B0  988B               	bcf	139,4,c	;volatile
  4002                           
  4003                           ;GAME.c: 123:                 LATDbits.LD4 = 1;
  4004   0027B2  888C               	bsf	140,4,c	;volatile
  4005                           
  4006                           ;GAME.c: 124:                 LATDbits.LD5 = 1;
  4007   0027B4  8A8C               	bsf	140,5,c	;volatile
  4008                           
  4009                           ;GAME.c: 125:                 LATDbits.LD6 = 1;
  4010   0027B6  8C8C               	bsf	140,6,c	;volatile
  4011                           
  4012                           ;GAME.c: 126:                 break;
  4013   0027B8  EF47  F014         	goto	l674
  4014   0027BC                     l678:
  4015                           
  4016                           ; BSR set to: 1
  4017                           ;GAME.c: 128:                 LATDbits.LD2 = 0;
  4018   0027BC  948C               	bcf	140,2,c	;volatile
  4019                           
  4020                           ;GAME.c: 129:                 LATDbits.LD3 = 0;
  4021   0027BE  968C               	bcf	140,3,c	;volatile
  4022                           
  4023                           ;GAME.c: 130:                 LATCbits.LC4 = 0;
  4024   0027C0  988B               	bcf	139,4,c	;volatile
  4025                           
  4026                           ;GAME.c: 131:                 LATDbits.LD4 = 0;
  4027   0027C2  988C               	bcf	140,4,c	;volatile
  4028                           
  4029                           ;GAME.c: 132:                 LATDbits.LD5 = 1;
  4030   0027C4  8A8C               	bsf	140,5,c	;volatile
  4031                           
  4032                           ;GAME.c: 133:                 LATDbits.LD6 = 1;
  4033   0027C6  8C8C               	bsf	140,6,c	;volatile
  4034                           
  4035                           ;GAME.c: 134:                 break;
  4036   0027C8  EF47  F014         	goto	l674
  4037   0027CC                     l679:
  4038                           
  4039                           ; BSR set to: 1
  4040                           ;GAME.c: 136:                 LATDbits.LD2 = 0;
  4041   0027CC  948C               	bcf	140,2,c	;volatile
  4042                           
  4043                           ;GAME.c: 137:                 LATDbits.LD3 = 0;
  4044   0027CE  968C               	bcf	140,3,c	;volatile
  4045                           
  4046                           ;GAME.c: 138:                 LATCbits.LC4 = 0;
  4047   0027D0  988B               	bcf	139,4,c	;volatile
  4048                           
  4049                           ;GAME.c: 139:                 LATDbits.LD4 = 0;
  4050   0027D2  988C               	bcf	140,4,c	;volatile
  4051                           
  4052                           ;GAME.c: 140:                 LATDbits.LD5 = 0;
  4053   0027D4  9A8C               	bcf	140,5,c	;volatile
  4054                           
  4055                           ;GAME.c: 141:                 LATDbits.LD6 = 1;
  4056   0027D6  8C8C               	bsf	140,6,c	;volatile
  4057                           
  4058                           ;GAME.c: 142:                 break;
  4059   0027D8  EF47  F014         	goto	l674
  4060   0027DC                     l680:
  4061                           
  4062                           ; BSR set to: 1
  4063                           ;GAME.c: 144:                 LATDbits.LD2 = 0;
  4064   0027DC  948C               	bcf	140,2,c	;volatile
  4065                           
  4066                           ;GAME.c: 145:                 LATDbits.LD3 = 0;
  4067   0027DE  968C               	bcf	140,3,c	;volatile
  4068                           
  4069                           ;GAME.c: 146:                 LATCbits.LC4 = 0;
  4070   0027E0  988B               	bcf	139,4,c	;volatile
  4071                           
  4072                           ;GAME.c: 147:                 LATDbits.LD4 = 0;
  4073   0027E2  988C               	bcf	140,4,c	;volatile
  4074                           
  4075                           ;GAME.c: 148:                 LATDbits.LD5 = 0;
  4076   0027E4  9A8C               	bcf	140,5,c	;volatile
  4077                           
  4078                           ;GAME.c: 149:                 LATDbits.LD6 = 0;
  4079   0027E6  9C8C               	bcf	140,6,c	;volatile
  4080                           
  4081                           ;GAME.c: 150:                 break;
  4082   0027E8  EF47  F014         	goto	l674
  4083   0027EC                     l8234:
  4084                           
  4085                           ; BSR set to: 1
  4086                           ;GAME.c: 152:                 GAMEtime = 0;
  4087   0027EC  0E00               	movlw	0
  4088   0027EE  6F23               	movwf	_GAMEtime& (0+255),b
  4089   0027F0                     
  4090                           ; BSR set to: 1
  4091                           ;GAME.c: 153:                 GAMEround += 1;
  4092   0027F0  2BBF               	incf	runGAME@GAMEround& (0+255),f,b
  4093   0027F2                     
  4094                           ; BSR set to: 1
  4095                           ;GAME.c: 154:                 randomNumber = 2 + rand() / ((0x7fff) / (1023 - 2 + 1) + 1
      +                          );
  4096   0027F2  EC7F  F025         	call	_rand	;wreg free
  4097   0027F6  C012  F018         	movff	?_rand,___awdiv@dividend
  4098   0027FA  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  4099   0027FE  0E00               	movlw	0
  4100   002800  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  4101   002802  0E21               	movlw	33
  4102   002804  6E1A               	movwf	___awdiv@divisor^0,c
  4103   002806  EC37  F023         	call	___awdiv	;wreg free
  4104   00280A  0E02               	movlw	2
  4105   00280C  2418               	addwf	?___awdiv^0,w,c
  4106   00280E  0101               	movlb	1	; () banked
  4107   002810  6FC3               	movwf	runGAME@randomNumber& (0+255),b
  4108   002812  0E00               	movlw	0
  4109   002814  2019               	addwfc	(?___awdiv+1)^0,w,c
  4110   002816  6FC4               	movwf	(runGAME@randomNumber+1)& (0+255),b
  4111   002818                     
  4112                           ; BSR set to: 1
  4113                           ;GAME.c: 155:                 sprintf(approxText, "%u                ", randomNumber);
  4114   002818  0EAC               	movlw	low runGAME@approxText
  4115   00281A  0100               	movlb	0	; () banked
  4116   00281C  6FCE               	movwf	sprintf@s& (0+255),b
  4117   00281E  0E01               	movlw	high runGAME@approxText
  4118   002820  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4119   002822  0E11               	movlw	low STR_27
  4120   002824  6FD0               	movwf	sprintf@fmt& (0+255),b
  4121   002826  0EFF               	movlw	high STR_27
  4122   002828  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4123   00282A  C1C3  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  4124   00282E  C1C4  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  4125   002832  EC11  F027         	call	_sprintf	;wreg free
  4126   002836                     
  4127                           ;GAME.c: 156:                 LCD_ShowString(1, approxText);
  4128   002836  0EAC               	movlw	low runGAME@approxText
  4129   002838  6E07               	movwf	LCD_ShowString@textData^0,c
  4130   00283A  0E01               	movlw	high runGAME@approxText
  4131   00283C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4132   00283E  0E01               	movlw	1
  4133   002840  EC99  F023         	call	_LCD_ShowString
  4134                           
  4135                           ;GAME.c: 158:                 break;
  4136   002844  EF47  F014         	goto	l674
  4137   002848                     l8246:
  4138                           
  4139                           ; BSR set to: 1
  4140   002848  51C0               	movf	runGAME@GAMEpart& (0+255),w,b
  4141                           
  4142                           ; Switch size 1, requested type "simple"
  4143                           ; Number of cases is 8, Range of values is 0 to 7
  4144                           ; switch strategies available:
  4145                           ; Name         Instructions Cycles
  4146                           ; simple_byte           25    13 (average)
  4147                           ;	Chosen strategy is simple_byte
  4148   00284A  0A00               	xorlw	0	; case 0
  4149   00284C  B4D8               	btfsc	status,2,c
  4150   00284E  EFBE  F013         	goto	l673
  4151   002852  0A01               	xorlw	1	; case 1
  4152   002854  B4D8               	btfsc	status,2,c
  4153   002856  EFC6  F013         	goto	l675
  4154   00285A  0A03               	xorlw	3	; case 2
  4155   00285C  B4D8               	btfsc	status,2,c
  4156   00285E  EFCE  F013         	goto	l676
  4157   002862  0A01               	xorlw	1	; case 3
  4158   002864  B4D8               	btfsc	status,2,c
  4159   002866  EFD6  F013         	goto	l677
  4160   00286A  0A07               	xorlw	7	; case 4
  4161   00286C  B4D8               	btfsc	status,2,c
  4162   00286E  EFDE  F013         	goto	l678
  4163   002872  0A01               	xorlw	1	; case 5
  4164   002874  B4D8               	btfsc	status,2,c
  4165   002876  EFE6  F013         	goto	l679
  4166   00287A  0A03               	xorlw	3	; case 6
  4167   00287C  B4D8               	btfsc	status,2,c
  4168   00287E  EFEE  F013         	goto	l680
  4169   002882  0A01               	xorlw	1	; case 7
  4170   002884  B4D8               	btfsc	status,2,c
  4171   002886  EFF6  F013         	goto	l8234
  4172   00288A  EF47  F014         	goto	l674
  4173   00288E                     l674:
  4174                           
  4175                           ;GAME.c: 161:         if(PORTAbits.RA2){
  4176   00288E  A480               	btfss	128,2,c	;volatile
  4177   002890  EF4C  F014         	goto	u10151
  4178   002894  EF4E  F014         	goto	u10150
  4179   002898                     u10151:
  4180   002898  EF6B  F014         	goto	l662
  4181   00289C                     u10150:
  4182   00289C                     
  4183                           ;GAME.c: 162:             _delay((unsigned long)((50)*(32E6/4000.0)));
  4184   00289C  0E03               	movlw	3
  4185   00289E  0100               	movlb	0	; () banked
  4186   0028A0  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4187   0028A2  0E08               	movlw	8
  4188   0028A4  6FE7               	movwf	??_runGAME& (0+255),b
  4189   0028A6  0E77               	movlw	119
  4190   0028A8                     u10377:
  4191   0028A8  2EE8               	decfsz	wreg,f,c
  4192   0028AA  D7FE               	bra	u10377
  4193   0028AC  2FE7               	decfsz	??_runGAME& (0+255),f,b
  4194   0028AE  D7FC               	bra	u10377
  4195   0028B0  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  4196   0028B2  D7FA               	bra	u10377
  4197   0028B4                     
  4198                           ;GAME.c: 163:             if(PORTAbits.RA2){
  4199   0028B4  A480               	btfss	128,2,c	;volatile
  4200   0028B6  EF5F  F014         	goto	u10161
  4201   0028BA  EF61  F014         	goto	u10160
  4202   0028BE                     u10161:
  4203   0028BE  EF6B  F014         	goto	l662
  4204   0028C2                     u10160:
  4205   0028C2                     l684:
  4206   0028C2  B480               	btfsc	128,2,c	;volatile
  4207   0028C4  EF66  F014         	goto	u10171
  4208   0028C8  EF68  F014         	goto	u10170
  4209   0028CC                     u10171:
  4210   0028CC  EF61  F014         	goto	l684
  4211   0028D0                     u10170:
  4212   0028D0                     
  4213                           ;GAME.c: 165:                 keepState = 0;
  4214   0028D0  0E00               	movlw	0
  4215   0028D2  0101               	movlb	1	; () banked
  4216   0028D4  6FC1               	movwf	runGAME@keepState& (0+255),b
  4217   0028D6                     l662:
  4218                           
  4219                           ;GAME.c: 71:     while(keepState){
  4220   0028D6  0101               	movlb	1	; () banked
  4221   0028D8  51C1               	movf	runGAME@keepState& (0+255),w,b
  4222   0028DA  A4D8               	btfss	status,2,c
  4223   0028DC  EF72  F014         	goto	u10181
  4224   0028E0  EF74  F014         	goto	u10180
  4225   0028E4                     u10181:
  4226   0028E4  EF6A  F013         	goto	l8212
  4227   0028E8                     u10180:
  4228   0028E8                     
  4229                           ; BSR set to: 1
  4230                           ;GAME.c: 171:     ADCON0bits.ADON = 0;
  4231   0028E8  90C2               	bcf	194,0,c	;volatile
  4232   0028EA                     
  4233                           ; BSR set to: 1
  4234   0028EA  0012               	return		;funcret
  4235   0028EC                     __end_of_runGAME:
  4236                           	callstack 0
  4237                           
  4238 ;; *************** function _rand *****************
  4239 ;; Defined at:
  4240 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\rand.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;		None
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;		None
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  2   17[COMRAM] int 
  4247 ;; Registers used:
  4248 ;;		wreg, status,2, status,0, cstack
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;Total ram usage:        6 bytes
  4259 ;; Hardware stack levels used: 1
  4260 ;; Hardware stack levels required when called: 2
  4261 ;; This function calls:
  4262 ;;		___lmul
  4263 ;; This function is called by:
  4264 ;;		_runGAME
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text13
  4269   004AFE                     __ptext13:
  4270                           	callstack 0
  4271   004AFE                     _rand:
  4272                           	callstack 27
  4273   004AFE  C197  F006         	movff	_seed,___lmul@multiplier
  4274   004B02  C198  F007         	movff	_seed+1,___lmul@multiplier+1
  4275   004B06  C199  F008         	movff	_seed+2,___lmul@multiplier+2
  4276   004B0A  C19A  F009         	movff	_seed+3,___lmul@multiplier+3
  4277   004B0E  0E2D               	movlw	45
  4278   004B10  6E0A               	movwf	___lmul@multiplicand^0,c
  4279   004B12  0E7F               	movlw	127
  4280   004B14  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  4281   004B16  0E95               	movlw	149
  4282   004B18  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  4283   004B1A  0E4C               	movlw	76
  4284   004B1C  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  4285   004B1E  ECB6  F025         	call	___lmul	;wreg free
  4286   004B22  0E01               	movlw	1
  4287   004B24  2406               	addwf	?___lmul^0,w,c
  4288   004B26  0101               	movlb	1	; () banked
  4289   004B28  6F97               	movwf	_seed& (0+255),b
  4290   004B2A  0E00               	movlw	0
  4291   004B2C  2007               	addwfc	(?___lmul+1)^0,w,c
  4292   004B2E  6F98               	movwf	(_seed+1)& (0+255),b
  4293   004B30  0E00               	movlw	0
  4294   004B32  2008               	addwfc	(?___lmul+2)^0,w,c
  4295   004B34  6F99               	movwf	(_seed+2)& (0+255),b
  4296   004B36  0E00               	movlw	0
  4297   004B38  2009               	addwfc	(?___lmul+3)^0,w,c
  4298   004B3A  6F9A               	movwf	(_seed+3)& (0+255),b
  4299   004B3C                     
  4300                           ; BSR set to: 1
  4301   004B3C  C197  F014         	movff	_seed,??_rand
  4302   004B40  C198  F015         	movff	_seed+1,??_rand+1
  4303   004B44  C199  F016         	movff	_seed+2,??_rand+2
  4304   004B48  C19A  F017         	movff	_seed+3,??_rand+3
  4305   004B4C  0E12               	movlw	18
  4306   004B4E  EFAE  F025         	goto	u9620
  4307   004B52                     u9625:
  4308   004B52  90D8               	bcf	status,0,c
  4309   004B54  3217               	rrcf	(??_rand+3)^0,f,c
  4310   004B56  3216               	rrcf	(??_rand+2)^0,f,c
  4311   004B58  3215               	rrcf	(??_rand+1)^0,f,c
  4312   004B5A  3214               	rrcf	??_rand^0,f,c
  4313   004B5C                     u9620:
  4314   004B5C  2EE8               	decfsz	wreg,f,c
  4315   004B5E  EFA9  F025         	goto	u9625
  4316   004B62  C014  F012         	movff	??_rand,?_rand
  4317   004B66  C015  F013         	movff	??_rand+1,?_rand+1
  4318   004B6A                     
  4319                           ; BSR set to: 1
  4320   004B6A  0012               	return		;funcret
  4321   004B6C                     __end_of_rand:
  4322                           	callstack 0
  4323                           
  4324 ;; *************** function ___lmul *****************
  4325 ;; Defined at:
  4326 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul32.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  multiplier      4    5[COMRAM] unsigned long 
  4329 ;;  multiplicand    4    9[COMRAM] unsigned long 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  product         4   13[COMRAM] unsigned long 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  4    5[COMRAM] unsigned long 
  4334 ;; Registers used:
  4335 ;;		wreg, status,2, status,0
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4341 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;Total ram usage:       12 bytes
  4346 ;; Hardware stack levels used: 1
  4347 ;; Hardware stack levels required when called: 1
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_rand
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           	psect	text14
  4356   004B6C                     __ptext14:
  4357                           	callstack 0
  4358   004B6C                     ___lmul:
  4359                           	callstack 27
  4360   004B6C  0E00               	movlw	0
  4361   004B6E  6E0E               	movwf	___lmul@product^0,c
  4362   004B70  0E00               	movlw	0
  4363   004B72  6E0F               	movwf	(___lmul@product+1)^0,c
  4364   004B74  0E00               	movlw	0
  4365   004B76  6E10               	movwf	(___lmul@product+2)^0,c
  4366   004B78  0E00               	movlw	0
  4367   004B7A  6E11               	movwf	(___lmul@product+3)^0,c
  4368   004B7C                     l7576:
  4369   004B7C  A006               	btfss	___lmul@multiplier^0,0,c
  4370   004B7E  EFC3  F025         	goto	u9241
  4371   004B82  EFC5  F025         	goto	u9240
  4372   004B86                     u9241:
  4373   004B86  EFCD  F025         	goto	l7580
  4374   004B8A                     u9240:
  4375   004B8A  500A               	movf	___lmul@multiplicand^0,w,c
  4376   004B8C  260E               	addwf	___lmul@product^0,f,c
  4377   004B8E  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  4378   004B90  220F               	addwfc	(___lmul@product+1)^0,f,c
  4379   004B92  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  4380   004B94  2210               	addwfc	(___lmul@product+2)^0,f,c
  4381   004B96  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  4382   004B98  2211               	addwfc	(___lmul@product+3)^0,f,c
  4383   004B9A                     l7580:
  4384   004B9A  90D8               	bcf	status,0,c
  4385   004B9C  360A               	rlcf	___lmul@multiplicand^0,f,c
  4386   004B9E  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4387   004BA0  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4388   004BA2  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4389   004BA4  90D8               	bcf	status,0,c
  4390   004BA6  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  4391   004BA8  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  4392   004BAA  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  4393   004BAC  3206               	rrcf	___lmul@multiplier^0,f,c
  4394   004BAE  5006               	movf	___lmul@multiplier^0,w,c
  4395   004BB0  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  4396   004BB2  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  4397   004BB4  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  4398   004BB6  A4D8               	btfss	status,2,c
  4399   004BB8  EFE0  F025         	goto	u9251
  4400   004BBC  EFE2  F025         	goto	u9250
  4401   004BC0                     u9251:
  4402   004BC0  EFBE  F025         	goto	l7576
  4403   004BC4                     u9250:
  4404   004BC4  C00E  F006         	movff	___lmul@product,?___lmul
  4405   004BC8  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  4406   004BCC  C010  F008         	movff	___lmul@product+2,?___lmul+2
  4407   004BD0  C011  F009         	movff	___lmul@product+3,?___lmul+3
  4408   004BD4  0012               	return		;funcret
  4409   004BD6                     __end_of___lmul:
  4410                           	callstack 0
  4411                           
  4412 ;; *************** function ___lbdiv *****************
  4413 ;; Defined at:
  4414 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lbdiv.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  dividend        1    wreg     unsigned char 
  4417 ;;  divisor         1    5[COMRAM] unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  dividend        1    6[COMRAM] unsigned char 
  4420 ;;  quotient        1    8[COMRAM] unsigned char 
  4421 ;;  counter         1    7[COMRAM] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      unsigned char 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4431 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;Total ram usage:        4 bytes
  4436 ;; Hardware stack levels used: 1
  4437 ;; Hardware stack levels required when called: 1
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_runGAME
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           	psect	text15
  4446   004C3A                     __ptext15:
  4447                           	callstack 0
  4448   004C3A                     ___lbdiv:
  4449                           	callstack 28
  4450                           
  4451                           ;incstack = 0
  4452                           ;___lbdiv@dividend stored from wreg
  4453   004C3A  6E07               	movwf	___lbdiv@dividend^0,c
  4454   004C3C  0E00               	movlw	0
  4455   004C3E  6E09               	movwf	___lbdiv@quotient^0,c
  4456   004C40  5006               	movf	___lbdiv@divisor^0,w,c
  4457   004C42  B4D8               	btfsc	status,2,c
  4458   004C44  EF26  F026         	goto	u9631
  4459   004C48  EF28  F026         	goto	u9630
  4460   004C4C                     u9631:
  4461   004C4C  EF49  F026         	goto	l7858
  4462   004C50                     u9630:
  4463   004C50  0E01               	movlw	1
  4464   004C52  6E08               	movwf	___lbdiv@counter^0,c
  4465   004C54  EF2F  F026         	goto	l7846
  4466   004C58                     l7842:
  4467   004C58  90D8               	bcf	status,0,c
  4468   004C5A  3606               	rlcf	___lbdiv@divisor^0,f,c
  4469   004C5C  2A08               	incf	___lbdiv@counter^0,f,c
  4470   004C5E                     l7846:
  4471   004C5E  AE06               	btfss	___lbdiv@divisor^0,7,c
  4472   004C60  EF34  F026         	goto	u9641
  4473   004C64  EF36  F026         	goto	u9640
  4474   004C68                     u9641:
  4475   004C68  EF2C  F026         	goto	l7842
  4476   004C6C                     u9640:
  4477   004C6C                     l7848:
  4478   004C6C  90D8               	bcf	status,0,c
  4479   004C6E  3609               	rlcf	___lbdiv@quotient^0,f,c
  4480   004C70  5006               	movf	___lbdiv@divisor^0,w,c
  4481   004C72  5C07               	subwf	___lbdiv@dividend^0,w,c
  4482   004C74  A0D8               	btfss	status,0,c
  4483   004C76  EF3F  F026         	goto	u9651
  4484   004C7A  EF41  F026         	goto	u9650
  4485   004C7E                     u9651:
  4486   004C7E  EF44  F026         	goto	l7854
  4487   004C82                     u9650:
  4488   004C82  5006               	movf	___lbdiv@divisor^0,w,c
  4489   004C84  5E07               	subwf	___lbdiv@dividend^0,f,c
  4490   004C86  8009               	bsf	___lbdiv@quotient^0,0,c
  4491   004C88                     l7854:
  4492   004C88  90D8               	bcf	status,0,c
  4493   004C8A  3206               	rrcf	___lbdiv@divisor^0,f,c
  4494   004C8C  2E08               	decfsz	___lbdiv@counter^0,f,c
  4495   004C8E  EF36  F026         	goto	l7848
  4496   004C92                     l7858:
  4497   004C92  5009               	movf	___lbdiv@quotient^0,w,c
  4498   004C94  0012               	return		;funcret
  4499   004C96                     __end_of___lbdiv:
  4500                           	callstack 0
  4501                           
  4502 ;; *************** function _runDAC *****************
  4503 ;; Defined at:
  4504 ;;		line 10 in file "DAC.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;  DACindex        1  125[BANK0 ] unsigned char 
  4509 ;;  selectModeDA    1  124[BANK0 ] unsigned char 
  4510 ;;  keepState       1  123[BANK0 ] unsigned char 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4522 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;Total ram usage:       12 bytes
  4525 ;; Hardware stack levels used: 1
  4526 ;; Hardware stack levels required when called: 9
  4527 ;; This function calls:
  4528 ;;		_SPI_write
  4529 ;;		___fladd
  4530 ;;		___fldiv
  4531 ;;		___flmul
  4532 ;;		___fltol
  4533 ;;		___xxtofl
  4534 ;;		_printf
  4535 ;;		_sinf
  4536 ;; This function is called by:
  4537 ;;		_main
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           	psect	text16
  4542   0028EC                     __ptext16:
  4543                           	callstack 0
  4544   0028EC                     _runDAC:
  4545                           	callstack 21
  4546   0028EC                     
  4547                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  4548   0028EC  8094               	bsf	148,0,c	;volatile
  4549                           
  4550                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  4551   0028EE  8892               	bsf	146,4,c	;volatile
  4552                           
  4553                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  4554   0028F0  8692               	bsf	146,3,c	;volatile
  4555                           
  4556                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  4557   0028F2  8492               	bsf	146,2,c	;volatile
  4558                           
  4559                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  4560   0028F4  010F               	movlb	15	; () banked
  4561   0028F6  9738               	bcf	56,3,b	;volatile
  4562                           
  4563                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  4564   0028F8  9538               	bcf	56,2,b	;volatile
  4565                           
  4566                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  4567   0028FA  9693               	bcf	147,3,c	;volatile
  4568                           
  4569                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  4570   0028FC  9694               	bcf	148,3,c	;volatile
  4571                           
  4572                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  4573   0028FE  9A94               	bcf	148,5,c	;volatile
  4574   002900                     
  4575                           ; BSR set to: 15
  4576                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  4577   002900  50C6               	movf	198,w,c	;volatile
  4578   002902  0BF0               	andlw	-16
  4579   002904  0902               	iorlw	2
  4580   002906  6EC6               	movwf	198,c	;volatile
  4581   002908                     
  4582                           ; BSR set to: 15
  4583                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  4584   002908  98C6               	bcf	198,4,c	;volatile
  4585   00290A                     
  4586                           ; BSR set to: 15
  4587                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  4588   00290A  8CC7               	bsf	199,6,c	;volatile
  4589   00290C                     
  4590                           ; BSR set to: 15
  4591                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  4592   00290C  8AC6               	bsf	198,5,c	;volatile
  4593   00290E                     
  4594                           ; BSR set to: 15
  4595                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  4596   00290E  8139               	bsf	57,0,b	;volatile
  4597   002910                     
  4598                           ; BSR set to: 15
  4599                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  4600   002910  9EC0               	bcf	192,7,c	;volatile
  4601                           
  4602                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  4603   002912  50C0               	movf	192,w,c	;volatile
  4604   002914  0BF8               	andlw	-8
  4605   002916  0906               	iorlw	6
  4606   002918  6EC0               	movwf	192,c	;volatile
  4607                           
  4608                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  4609   00291A  50C0               	movf	192,w,c	;volatile
  4610   00291C  0BC7               	andlw	-57
  4611   00291E  0930               	iorlw	48
  4612   002920  6EC0               	movwf	192,c	;volatile
  4613   002922                     
  4614                           ; BSR set to: 15
  4615                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  4616   002922  80C2               	bsf	194,0,c	;volatile
  4617                           
  4618                           ;DAC.c: 38:     SPBRG1 = 25;
  4619   002924  0E19               	movlw	25
  4620   002926  6EAF               	movwf	175,c	;volatile
  4621   002928                     
  4622                           ; BSR set to: 15
  4623                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  4624   002928  8EAB               	bsf	171,7,c	;volatile
  4625   00292A                     
  4626                           ; BSR set to: 15
  4627                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  4628   00292A  98AC               	bcf	172,4,c	;volatile
  4629   00292C                     
  4630                           ; BSR set to: 15
  4631                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  4632   00292C  8AAC               	bsf	172,5,c	;volatile
  4633   00292E                     
  4634                           ; BSR set to: 15
  4635                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  4636   00292E  88AB               	bsf	171,4,c	;volatile
  4637   002930                     
  4638                           ; BSR set to: 15
  4639                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  4640   002930  868A               	bsf	138,3,c	;volatile
  4641                           
  4642                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  4643   002932  50C2               	movf	194,w,c	;volatile
  4644   002934  0B83               	andlw	-125
  4645   002936  0930               	iorlw	48
  4646   002938  6EC2               	movwf	194,c	;volatile
  4647                           
  4648                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  4649   00293A  0E01               	movlw	1
  4650   00293C  0100               	movlb	0	; () banked
  4651   00293E  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  4652                           
  4653                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  4654   002940  0E01               	movlw	1
  4655   002942  6FDB               	movwf	runDAC@keepState& (0+255),b
  4656                           
  4657                           ;DAC.c: 52:     uint8_t DACindex = 0;
  4658   002944  0E00               	movlw	0
  4659   002946  6FDD               	movwf	runDAC@DACindex& (0+255),b
  4660                           
  4661                           ;DAC.c: 54:     while(keepState){
  4662   002948  EFE0  F015         	goto	l8164
  4663   00294C                     l8122:
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;DAC.c: 57:                 if(DACindex<255/2){
  4667   00294C  0E7F               	movlw	127
  4668   00294E  61DD               	cpfslt	runDAC@DACindex& (0+255),b
  4669   002950  EFAC  F014         	goto	u10041
  4670   002954  EFAE  F014         	goto	u10040
  4671   002958                     u10041:
  4672   002958  EFD6  F014         	goto	l8126
  4673   00295C                     u10040:
  4674   00295C                     
  4675                           ; BSR set to: 0
  4676                           ;DAC.c: 58:                     SPI_write((uint8_t)(1.9*DACindex));
  4677   00295C  0E33               	movlw	51
  4678   00295E  6E18               	movwf	___flmul@a^0,c
  4679   002960  0E33               	movlw	51
  4680   002962  6E19               	movwf	(___flmul@a+1)^0,c
  4681   002964  0EF3               	movlw	243
  4682   002966  6E1A               	movwf	(___flmul@a+2)^0,c
  4683   002968  0E3F               	movlw	63
  4684   00296A  6E1B               	movwf	(___flmul@a+3)^0,c
  4685   00296C  51DD               	movf	runDAC@DACindex& (0+255),w,b
  4686   00296E  6E06               	movwf	___xxtofl@val^0,c
  4687   002970  6A07               	clrf	(___xxtofl@val+1)^0,c
  4688   002972  6A08               	clrf	(___xxtofl@val+2)^0,c
  4689   002974  6A09               	clrf	(___xxtofl@val+3)^0,c
  4690   002976  0E01               	movlw	1
  4691   002978  EC69  F01B         	call	___xxtofl
  4692   00297C  C006  F014         	movff	?___xxtofl,___flmul@b
  4693   002980  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  4694   002984  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  4695   002988  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  4696   00298C  EC3A  F00D         	call	___flmul	;wreg free
  4697   002990  C014  F064         	movff	?___flmul,___fltol@f1
  4698   002994  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  4699   002998  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  4700   00299C  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  4701   0029A0  EC68  F020         	call	___fltol	;wreg free
  4702   0029A4  0100               	movlb	0	; () banked
  4703   0029A6  5164               	movf	?___fltol& (0+255),w,b
  4704   0029A8  EC56  F027         	call	_SPI_write
  4705   0029AC                     l8126:
  4706                           
  4707                           ;DAC.c: 60:                 if(DACindex>=255/2){
  4708   0029AC  0E7E               	movlw	126
  4709   0029AE  0100               	movlb	0	; () banked
  4710   0029B0  65DD               	cpfsgt	runDAC@DACindex& (0+255),b
  4711   0029B2  EFDD  F014         	goto	u10051
  4712   0029B6  EFDF  F014         	goto	u10050
  4713   0029BA                     u10051:
  4714   0029BA  EF9B  F015         	goto	l231
  4715   0029BE                     u10050:
  4716   0029BE                     
  4717                           ; BSR set to: 0
  4718                           ;DAC.c: 61:                     SPI_write((uint8_t)(1.9*(255-DACindex)));
  4719   0029BE  0E33               	movlw	51
  4720   0029C0  6E18               	movwf	___flmul@a^0,c
  4721   0029C2  0E33               	movlw	51
  4722   0029C4  6E19               	movwf	(___flmul@a+1)^0,c
  4723   0029C6  0EF3               	movlw	243
  4724   0029C8  6E1A               	movwf	(___flmul@a+2)^0,c
  4725   0029CA  0E3F               	movlw	63
  4726   0029CC  6E1B               	movwf	(___flmul@a+3)^0,c
  4727   0029CE  51DD               	movf	runDAC@DACindex& (0+255),w,b
  4728   0029D0  0AFF               	xorlw	255
  4729   0029D2  6FD2               	movwf	??_runDAC& (0+255),b
  4730   0029D4  51D2               	movf	??_runDAC& (0+255),w,b
  4731   0029D6  6E06               	movwf	___xxtofl@val^0,c
  4732   0029D8  6A07               	clrf	(___xxtofl@val+1)^0,c
  4733   0029DA  6A08               	clrf	(___xxtofl@val+2)^0,c
  4734   0029DC  6A09               	clrf	(___xxtofl@val+3)^0,c
  4735   0029DE  0E01               	movlw	1
  4736   0029E0  EC69  F01B         	call	___xxtofl
  4737   0029E4  C006  F014         	movff	?___xxtofl,___flmul@b
  4738   0029E8  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  4739   0029EC  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  4740   0029F0  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  4741   0029F4  EC3A  F00D         	call	___flmul	;wreg free
  4742   0029F8  C014  F064         	movff	?___flmul,___fltol@f1
  4743   0029FC  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  4744   002A00  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  4745   002A04  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  4746   002A08  EC68  F020         	call	___fltol	;wreg free
  4747   002A0C  0100               	movlb	0	; () banked
  4748   002A0E  5164               	movf	?___fltol& (0+255),w,b
  4749   002A10  EC56  F027         	call	_SPI_write
  4750   002A14  EF9B  F015         	goto	l231
  4751   002A18                     l8130:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  4755   002A18  0E00               	movlw	0
  4756   002A1A  6E31               	movwf	___fldiv@a^0,c
  4757   002A1C  0E00               	movlw	0
  4758   002A1E  6E32               	movwf	(___fldiv@a+1)^0,c
  4759   002A20  0E7F               	movlw	127
  4760   002A22  6E33               	movwf	(___fldiv@a+2)^0,c
  4761   002A24  0E43               	movlw	67
  4762   002A26  6E34               	movwf	(___fldiv@a+3)^0,c
  4763   002A28  0EC3               	movlw	195
  4764   002A2A  6E18               	movwf	___flmul@a^0,c
  4765   002A2C  0EF5               	movlw	245
  4766   002A2E  6E19               	movwf	(___flmul@a+1)^0,c
  4767   002A30  0EC8               	movlw	200
  4768   002A32  6E1A               	movwf	(___flmul@a+2)^0,c
  4769   002A34  0E40               	movlw	64
  4770   002A36  6E1B               	movwf	(___flmul@a+3)^0,c
  4771   002A38  51DD               	movf	runDAC@DACindex& (0+255),w,b
  4772   002A3A  6E06               	movwf	___xxtofl@val^0,c
  4773   002A3C  6A07               	clrf	(___xxtofl@val+1)^0,c
  4774   002A3E  6A08               	clrf	(___xxtofl@val+2)^0,c
  4775   002A40  6A09               	clrf	(___xxtofl@val+3)^0,c
  4776   002A42  0E01               	movlw	1
  4777   002A44  EC69  F01B         	call	___xxtofl
  4778   002A48  C006  F014         	movff	?___xxtofl,___flmul@b
  4779   002A4C  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  4780   002A50  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  4781   002A54  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  4782   002A58  EC3A  F00D         	call	___flmul	;wreg free
  4783   002A5C  C014  F02D         	movff	?___flmul,___fldiv@b
  4784   002A60  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  4785   002A64  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  4786   002A68  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  4787   002A6C  EC30  F011         	call	___fldiv	;wreg free
  4788   002A70  C02D  F0D3         	movff	?___fldiv,_runDAC$4520
  4789   002A74  C02E  F0D4         	movff	?___fldiv+1,_runDAC$4520+1
  4790   002A78  C02F  F0D5         	movff	?___fldiv+2,_runDAC$4520+2
  4791   002A7C  C030  F0D6         	movff	?___fldiv+3,_runDAC$4520+3
  4792   002A80                     
  4793                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  4794   002A80  C0D3  F0A4         	movff	_runDAC$4520,sinf@x
  4795   002A84  C0D4  F0A5         	movff	_runDAC$4520+1,sinf@x+1
  4796   002A88  C0D5  F0A6         	movff	_runDAC$4520+2,sinf@x+2
  4797   002A8C  C0D6  F0A7         	movff	_runDAC$4520+3,sinf@x+3
  4798   002A90  EC54  F008         	call	_sinf	;wreg free
  4799   002A94  C0A4  F0D7         	movff	?_sinf,_runDAC$4521
  4800   002A98  C0A5  F0D8         	movff	?_sinf+1,_runDAC$4521+1
  4801   002A9C  C0A6  F0D9         	movff	?_sinf+2,_runDAC$4521+2
  4802   002AA0  C0A7  F0DA         	movff	?_sinf+3,_runDAC$4521+3
  4803   002AA4                     
  4804                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  4805   002AA4  0E00               	movlw	0
  4806   002AA6  6E4A               	movwf	___fladd@a^0,c
  4807   002AA8  0E00               	movlw	0
  4808   002AAA  6E4B               	movwf	(___fladd@a+1)^0,c
  4809   002AAC  0EFE               	movlw	254
  4810   002AAE  6E4C               	movwf	(___fladd@a+2)^0,c
  4811   002AB0  0E42               	movlw	66
  4812   002AB2  6E4D               	movwf	(___fladd@a+3)^0,c
  4813   002AB4  0E00               	movlw	0
  4814   002AB6  6E18               	movwf	___flmul@a^0,c
  4815   002AB8  0E00               	movlw	0
  4816   002ABA  6E19               	movwf	(___flmul@a+1)^0,c
  4817   002ABC  0EFE               	movlw	254
  4818   002ABE  6E1A               	movwf	(___flmul@a+2)^0,c
  4819   002AC0  0E42               	movlw	66
  4820   002AC2  6E1B               	movwf	(___flmul@a+3)^0,c
  4821   002AC4  C0D7  F014         	movff	_runDAC$4521,___flmul@b
  4822   002AC8  C0D8  F015         	movff	_runDAC$4521+1,___flmul@b+1
  4823   002ACC  C0D9  F016         	movff	_runDAC$4521+2,___flmul@b+2
  4824   002AD0  C0DA  F017         	movff	_runDAC$4521+3,___flmul@b+3
  4825   002AD4  EC3A  F00D         	call	___flmul	;wreg free
  4826   002AD8  C014  F046         	movff	?___flmul,___fladd@b
  4827   002ADC  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4828   002AE0  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4829   002AE4  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4830   002AE8  ECD9  F00A         	call	___fladd	;wreg free
  4831   002AEC  C046  F064         	movff	?___fladd,___fltol@f1
  4832   002AF0  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  4833   002AF4  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  4834   002AF8  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  4835   002AFC  EC68  F020         	call	___fltol	;wreg free
  4836   002B00  0100               	movlb	0	; () banked
  4837   002B02  5164               	movf	?___fltol& (0+255),w,b
  4838   002B04  EC56  F027         	call	_SPI_write
  4839                           
  4840                           ;DAC.c: 66:                 break;
  4841   002B08  EF9B  F015         	goto	l231
  4842   002B0C                     l8136:
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  4846   002B0C  51DD               	movf	runDAC@DACindex& (0+255),w,b
  4847   002B0E  0AFF               	xorlw	255
  4848   002B10  EC56  F027         	call	_SPI_write
  4849                           
  4850                           ;DAC.c: 69:                 break;
  4851   002B14  EF9B  F015         	goto	l231
  4852   002B18                     l8140:
  4853                           
  4854                           ; BSR set to: 0
  4855   002B18  51DC               	movf	runDAC@selectModeDAC& (0+255),w,b
  4856                           
  4857                           ; Switch size 1, requested type "simple"
  4858                           ; Number of cases is 3, Range of values is 1 to 3
  4859                           ; switch strategies available:
  4860                           ; Name         Instructions Cycles
  4861                           ; simple_byte           10     6 (average)
  4862                           ;	Chosen strategy is simple_byte
  4863   002B1A  0A01               	xorlw	1	; case 1
  4864   002B1C  B4D8               	btfsc	status,2,c
  4865   002B1E  EFA6  F014         	goto	l8122
  4866   002B22  0A03               	xorlw	3	; case 2
  4867   002B24  B4D8               	btfsc	status,2,c
  4868   002B26  EF0C  F015         	goto	l8130
  4869   002B2A  0A01               	xorlw	1	; case 3
  4870   002B2C  B4D8               	btfsc	status,2,c
  4871   002B2E  EF86  F015         	goto	l8136
  4872   002B32  EF9B  F015         	goto	l231
  4873   002B36                     l231:
  4874                           
  4875                           ;DAC.c: 71:         GODONE = 1;
  4876   002B36  82C2               	bsf	4034,1,c	;volatile
  4877   002B38                     l234:
  4878   002B38  B2C2               	btfsc	4034,1,c	;volatile
  4879   002B3A  EFA1  F015         	goto	u10061
  4880   002B3E  EFA3  F015         	goto	u10060
  4881   002B42                     u10061:
  4882   002B42  EF9C  F015         	goto	l234
  4883   002B46                     u10060:
  4884   002B46                     
  4885                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  4886   002B46  0EE6               	movlw	low STR_14
  4887   002B48  0100               	movlb	0	; () banked
  4888   002B4A  6FCE               	movwf	printf@fmt& (0+255),b
  4889   002B4C  0EFF               	movlw	high STR_14
  4890   002B4E  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  4891   002B50  CFC4 F0D0          	movff	4036,?_printf+2	;volatile
  4892   002B54  6BD1               	clrf	(?_printf+3)& (0+255),b
  4893   002B56  EC52  F028         	call	_printf	;wreg free
  4894   002B5A                     
  4895                           ;DAC.c: 75:         if(PORTCbits.RC0){
  4896   002B5A  A082               	btfss	130,0,c	;volatile
  4897   002B5C  EFB2  F015         	goto	u10071
  4898   002B60  EFB4  F015         	goto	u10070
  4899   002B64                     u10071:
  4900   002B64  EFB7  F015         	goto	l8148
  4901   002B68                     u10070:
  4902   002B68                     
  4903                           ;DAC.c: 76:             selectModeDAC = 1;
  4904   002B68  0E01               	movlw	1
  4905   002B6A  0100               	movlb	0	; () banked
  4906   002B6C  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  4907   002B6E                     l8148:
  4908                           
  4909                           ;DAC.c: 78:         if(PORTAbits.RA4){
  4910   002B6E  A880               	btfss	128,4,c	;volatile
  4911   002B70  EFBC  F015         	goto	u10081
  4912   002B74  EFBE  F015         	goto	u10080
  4913   002B78                     u10081:
  4914   002B78  EFC1  F015         	goto	l8152
  4915   002B7C                     u10080:
  4916   002B7C                     
  4917                           ;DAC.c: 79:             selectModeDAC = 2;
  4918   002B7C  0E02               	movlw	2
  4919   002B7E  0100               	movlb	0	; () banked
  4920   002B80  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  4921   002B82                     l8152:
  4922                           
  4923                           ;DAC.c: 81:         if(PORTAbits.RA3){
  4924   002B82  A680               	btfss	128,3,c	;volatile
  4925   002B84  EFC6  F015         	goto	u10091
  4926   002B88  EFC8  F015         	goto	u10090
  4927   002B8C                     u10091:
  4928   002B8C  EFCB  F015         	goto	l8156
  4929   002B90                     u10090:
  4930   002B90                     
  4931                           ;DAC.c: 82:             selectModeDAC = 3;
  4932   002B90  0E03               	movlw	3
  4933   002B92  0100               	movlb	0	; () banked
  4934   002B94  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  4935   002B96                     l8156:
  4936                           
  4937                           ;DAC.c: 84:         if(PORTAbits.RA2){
  4938   002B96  A480               	btfss	128,2,c	;volatile
  4939   002B98  EFD0  F015         	goto	u10101
  4940   002B9C  EFD2  F015         	goto	u10100
  4941   002BA0                     u10101:
  4942   002BA0  EFD5  F015         	goto	l8160
  4943   002BA4                     u10100:
  4944   002BA4                     
  4945                           ;DAC.c: 85:             keepState = 0;
  4946   002BA4  0E00               	movlw	0
  4947   002BA6  0100               	movlb	0	; () banked
  4948   002BA8  6FDB               	movwf	runDAC@keepState& (0+255),b
  4949   002BAA                     l8160:
  4950                           
  4951                           ;DAC.c: 87:         DACindex++;
  4952   002BAA  0100               	movlb	0	; () banked
  4953   002BAC  2BDD               	incf	runDAC@DACindex& (0+255),f,b
  4954   002BAE                     
  4955                           ; BSR set to: 0
  4956                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  4957   002BAE  0E68               	movlw	104
  4958   002BB0  0100               	movlb	0	; () banked
  4959   002BB2  6FD2               	movwf	??_runDAC& (0+255),b
  4960   002BB4  0EE4               	movlw	228
  4961   002BB6                     u10387:
  4962   002BB6  2EE8               	decfsz	wreg,f,c
  4963   002BB8  D7FE               	bra	u10387
  4964   002BBA  2FD2               	decfsz	??_runDAC& (0+255),f,b
  4965   002BBC  D7FC               	bra	u10387
  4966   002BBE  0000               	nop	
  4967   002BC0                     l8164:
  4968                           
  4969                           ;DAC.c: 54:     while(keepState){
  4970   002BC0  0100               	movlb	0	; () banked
  4971   002BC2  51DB               	movf	runDAC@keepState& (0+255),w,b
  4972   002BC4  A4D8               	btfss	status,2,c
  4973   002BC6  EFE7  F015         	goto	u10111
  4974   002BCA  EFE9  F015         	goto	u10110
  4975   002BCE                     u10111:
  4976   002BCE  EF8C  F015         	goto	l8140
  4977   002BD2                     u10110:
  4978   002BD2                     
  4979                           ; BSR set to: 0
  4980   002BD2  0012               	return		;funcret
  4981   002BD4                     __end_of_runDAC:
  4982                           	callstack 0
  4983                           
  4984 ;; *************** function _sinf *****************
  4985 ;; Defined at:
  4986 ;;		line 27 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sinf.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  x               4   68[BANK0 ] float 
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;  ux              4   90[BANK0 ] struct .
  4991 ;;  y               4   86[BANK0 ] struct .
  4992 ;;  sign            1   81[BANK0 ] _Bool 
  4993 ;;  n               1   80[BANK0 ] unsigned char 
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  4   68[BANK0 ] float 
  4996 ;; Registers used:
  4997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5003 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5004 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5006 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5007 ;;Total ram usage:       26 bytes
  5008 ;; Hardware stack levels used: 1
  5009 ;; Hardware stack levels required when called: 4
  5010 ;; This function calls:
  5011 ;;		___cosdf
  5012 ;;		___fladd
  5013 ;;		___flneg
  5014 ;;		___rem_pio2f
  5015 ;;		___sindf
  5016 ;; This function is called by:
  5017 ;;		_runDAC
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text17
  5022   0010A8                     __ptext17:
  5023                           	callstack 0
  5024   0010A8                     _sinf:
  5025                           	callstack 25
  5026   0010A8  C0A4  F0BA         	movff	sinf@x,sinf@ux
  5027   0010AC  C0A5  F0BB         	movff	sinf@x+1,sinf@ux+1
  5028   0010B0  C0A6  F0BC         	movff	sinf@x+2,sinf@ux+2
  5029   0010B4  C0A7  F0BD         	movff	sinf@x+3,sinf@ux+3
  5030   0010B8  0100               	movlb	0	; () banked
  5031   0010BA  BFBD               	btfsc	(sinf@ux+3)& (0+255),7,b
  5032   0010BC  EF62  F008         	goto	u9421
  5033   0010C0  EF65  F008         	goto	u9420
  5034   0010C4                     u9421:
  5035   0010C4  0E01               	movlw	1
  5036   0010C6  EF66  F008         	goto	u9430
  5037   0010CA                     u9420:
  5038   0010CA  0E00               	movlw	0
  5039   0010CC                     u9430:
  5040   0010CC  6FB1               	movwf	sinf@sign& (0+255),b
  5041   0010CE                     
  5042                           ; BSR set to: 0
  5043   0010CE  9FBD               	bcf	(sinf@ux+3)& (0+255),7,b
  5044   0010D0                     
  5045                           ; BSR set to: 0
  5046   0010D0  0EDB               	movlw	219
  5047   0010D2  5DBA               	subwf	sinf@ux& (0+255),w,b
  5048   0010D4  0E0F               	movlw	15
  5049   0010D6  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5050   0010D8  0E49               	movlw	73
  5051   0010DA  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5052   0010DC  0E3F               	movlw	63
  5053   0010DE  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5054   0010E0  B0D8               	btfsc	status,0,c
  5055   0010E2  EF75  F008         	goto	u9441
  5056   0010E6  EF77  F008         	goto	u9440
  5057   0010EA                     u9441:
  5058   0010EA  EFA0  F008         	goto	l7702
  5059   0010EE                     u9440:
  5060   0010EE                     
  5061                           ; BSR set to: 0
  5062   0010EE  0E80               	movlw	128
  5063   0010F0  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  5064   0010F2  0E39               	movlw	57
  5065   0010F4  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5066   0010F6  B0D8               	btfsc	status,0,c
  5067   0010F8  EF80  F008         	goto	u9451
  5068   0010FC  EF82  F008         	goto	u9450
  5069   001100                     u9451:
  5070   001100  EF8C  F008         	goto	l7698
  5071   001104                     u9450:
  5072   001104                     
  5073                           ; BSR set to: 0
  5074   001104  C0A4  F0A4         	movff	sinf@x,?_sinf
  5075   001108  C0A5  F0A5         	movff	sinf@x+1,?_sinf+1
  5076   00110C  C0A6  F0A6         	movff	sinf@x+2,?_sinf+2
  5077   001110  C0A7  F0A7         	movff	sinf@x+3,?_sinf+3
  5078   001114  EFD8  F00A         	goto	l1690
  5079   001118                     l7698:
  5080                           
  5081                           ; BSR set to: 0
  5082   001118  C0A4  F064         	movff	sinf@x,___sindf@x
  5083   00111C  C0A5  F065         	movff	sinf@x+1,___sindf@x+1
  5084   001120  C0A6  F066         	movff	sinf@x+2,___sindf@x+2
  5085   001124  C0A7  F067         	movff	sinf@x+3,___sindf@x+3
  5086   001128  EC3D  F017         	call	___sindf	;wreg free
  5087   00112C  C064  F0A4         	movff	?___sindf,?_sinf
  5088   001130  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5089   001134  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5090   001138  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5091   00113C  EFD8  F00A         	goto	l1690
  5092   001140                     l7702:
  5093                           
  5094                           ; BSR set to: 0
  5095   001140  0ED2               	movlw	210
  5096   001142  5DBA               	subwf	sinf@ux& (0+255),w,b
  5097   001144  0E53               	movlw	83
  5098   001146  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5099   001148  0E7B               	movlw	123
  5100   00114A  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5101   00114C  0E40               	movlw	64
  5102   00114E  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5103   001150  B0D8               	btfsc	status,0,c
  5104   001152  EFAD  F008         	goto	u9461
  5105   001156  EFAF  F008         	goto	u9460
  5106   00115A                     u9461:
  5107   00115A  EF92  F009         	goto	l7732
  5108   00115E                     u9460:
  5109   00115E                     
  5110                           ; BSR set to: 0
  5111   00115E  0EE4               	movlw	228
  5112   001160  5DBA               	subwf	sinf@ux& (0+255),w,b
  5113   001162  0ECB               	movlw	203
  5114   001164  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5115   001166  0E16               	movlw	22
  5116   001168  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5117   00116A  0E40               	movlw	64
  5118   00116C  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5119   00116E  B0D8               	btfsc	status,0,c
  5120   001170  EFBC  F008         	goto	u9471
  5121   001174  EFBE  F008         	goto	u9470
  5122   001178                     u9471:
  5123   001178  EF2C  F009         	goto	l7722
  5124   00117C                     u9470:
  5125   00117C                     
  5126                           ; BSR set to: 0
  5127   00117C  51B1               	movf	sinf@sign& (0+255),w,b
  5128   00117E  B4D8               	btfsc	status,2,c
  5129   001180  EFC4  F008         	goto	u9481
  5130   001184  EFC6  F008         	goto	u9480
  5131   001188                     u9481:
  5132   001188  EFFE  F008         	goto	l7716
  5133   00118C                     u9480:
  5134   00118C                     
  5135                           ; BSR set to: 0
  5136   00118C  0EDB               	movlw	219
  5137   00118E  6E4A               	movwf	___fladd@a^0,c
  5138   001190  0E0F               	movlw	15
  5139   001192  6E4B               	movwf	(___fladd@a+1)^0,c
  5140   001194  0EC9               	movlw	201
  5141   001196  6E4C               	movwf	(___fladd@a+2)^0,c
  5142   001198  0E3F               	movlw	63
  5143   00119A  6E4D               	movwf	(___fladd@a+3)^0,c
  5144   00119C  C0A4  F046         	movff	sinf@x,___fladd@b
  5145   0011A0  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5146   0011A4  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5147   0011A8  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5148   0011AC  ECD9  F00A         	call	___fladd	;wreg free
  5149   0011B0  C046  F0B2         	movff	?___fladd,_sinf$4523
  5150   0011B4  C047  F0B3         	movff	?___fladd+1,_sinf$4523+1
  5151   0011B8  C048  F0B4         	movff	?___fladd+2,_sinf$4523+2
  5152   0011BC  C049  F0B5         	movff	?___fladd+3,_sinf$4523+3
  5153   0011C0                     l7710:
  5154   0011C0  C0B2  F064         	movff	_sinf$4523,___cosdf@x
  5155   0011C4  C0B3  F065         	movff	_sinf$4523+1,___cosdf@x+1
  5156   0011C8  C0B4  F066         	movff	_sinf$4523+2,___cosdf@x+2
  5157   0011CC  C0B5  F067         	movff	_sinf$4523+3,___cosdf@x+3
  5158   0011D0  EC6A  F01A         	call	___cosdf	;wreg free
  5159   0011D4  C064  F080         	movff	?___cosdf,___flneg@f1
  5160   0011D8  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  5161   0011DC  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  5162   0011E0  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  5163   0011E4  EC75  F027         	call	___flneg	;wreg free
  5164   0011E8  C080  F0A4         	movff	?___flneg,?_sinf
  5165   0011EC  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  5166   0011F0  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  5167   0011F4  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  5168   0011F8  EFD8  F00A         	goto	l1690
  5169   0011FC                     l7716:
  5170                           
  5171                           ; BSR set to: 0
  5172   0011FC  C0A4  F046         	movff	sinf@x,___fladd@b
  5173   001200  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5174   001204  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5175   001208  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5176   00120C  0EDB               	movlw	219
  5177   00120E  6E4A               	movwf	___fladd@a^0,c
  5178   001210  0E0F               	movlw	15
  5179   001212  6E4B               	movwf	(___fladd@a+1)^0,c
  5180   001214  0EC9               	movlw	201
  5181   001216  6E4C               	movwf	(___fladd@a+2)^0,c
  5182   001218  0EBF               	movlw	191
  5183   00121A  6E4D               	movwf	(___fladd@a+3)^0,c
  5184   00121C  ECD9  F00A         	call	___fladd	;wreg free
  5185   001220  C046  F0B2         	movff	?___fladd,_sinf$4523
  5186   001224  C047  F0B3         	movff	?___fladd+1,_sinf$4523+1
  5187   001228  C048  F0B4         	movff	?___fladd+2,_sinf$4523+2
  5188   00122C  C049  F0B5         	movff	?___fladd+3,_sinf$4523+3
  5189   001230                     l7718:
  5190   001230  C0B2  F064         	movff	_sinf$4523,___cosdf@x
  5191   001234  C0B3  F065         	movff	_sinf$4523+1,___cosdf@x+1
  5192   001238  C0B4  F066         	movff	_sinf$4523+2,___cosdf@x+2
  5193   00123C  C0B5  F067         	movff	_sinf$4523+3,___cosdf@x+3
  5194   001240  EC6A  F01A         	call	___cosdf	;wreg free
  5195   001244  C064  F0A4         	movff	?___cosdf,?_sinf
  5196   001248  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  5197   00124C  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  5198   001250  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  5199   001254  EFD8  F00A         	goto	l1690
  5200   001258                     l7722:
  5201                           
  5202                           ; BSR set to: 0
  5203   001258  51B1               	movf	sinf@sign& (0+255),w,b
  5204   00125A  A4D8               	btfss	status,2,c
  5205   00125C  EF32  F009         	goto	u9491
  5206   001260  EF34  F009         	goto	u9490
  5207   001264                     u9491:
  5208   001264  EF5A  F009         	goto	l7726
  5209   001268                     u9490:
  5210   001268                     
  5211                           ; BSR set to: 0
  5212   001268  0EDB               	movlw	219
  5213   00126A  6E4A               	movwf	___fladd@a^0,c
  5214   00126C  0E0F               	movlw	15
  5215   00126E  6E4B               	movwf	(___fladd@a+1)^0,c
  5216   001270  0E49               	movlw	73
  5217   001272  6E4C               	movwf	(___fladd@a+2)^0,c
  5218   001274  0EC0               	movlw	192
  5219   001276  6E4D               	movwf	(___fladd@a+3)^0,c
  5220   001278  C0A4  F046         	movff	sinf@x,___fladd@b
  5221   00127C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5222   001280  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5223   001284  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5224   001288  ECD9  F00A         	call	___fladd	;wreg free
  5225   00128C  C046  F080         	movff	?___fladd,___flneg@f1
  5226   001290  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5227   001294  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5228   001298  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5229   00129C  EC75  F027         	call	___flneg	;wreg free
  5230   0012A0  C080  F0A8         	movff	?___flneg,_sinf$4239
  5231   0012A4  C081  F0A9         	movff	?___flneg+1,_sinf$4239+1
  5232   0012A8  C082  F0AA         	movff	?___flneg+2,_sinf$4239+2
  5233   0012AC  C083  F0AB         	movff	?___flneg+3,_sinf$4239+3
  5234   0012B0  EF7E  F009         	goto	l7728
  5235   0012B4                     l7726:
  5236                           
  5237                           ; BSR set to: 0
  5238   0012B4  0EDB               	movlw	219
  5239   0012B6  6E4A               	movwf	___fladd@a^0,c
  5240   0012B8  0E0F               	movlw	15
  5241   0012BA  6E4B               	movwf	(___fladd@a+1)^0,c
  5242   0012BC  0E49               	movlw	73
  5243   0012BE  6E4C               	movwf	(___fladd@a+2)^0,c
  5244   0012C0  0E40               	movlw	64
  5245   0012C2  6E4D               	movwf	(___fladd@a+3)^0,c
  5246   0012C4  C0A4  F046         	movff	sinf@x,___fladd@b
  5247   0012C8  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5248   0012CC  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5249   0012D0  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5250   0012D4  ECD9  F00A         	call	___fladd	;wreg free
  5251   0012D8  C046  F080         	movff	?___fladd,___flneg@f1
  5252   0012DC  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5253   0012E0  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5254   0012E4  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5255   0012E8  EC75  F027         	call	___flneg	;wreg free
  5256   0012EC  C080  F0A8         	movff	?___flneg,_sinf$4239
  5257   0012F0  C081  F0A9         	movff	?___flneg+1,_sinf$4239+1
  5258   0012F4  C082  F0AA         	movff	?___flneg+2,_sinf$4239+2
  5259   0012F8  C083  F0AB         	movff	?___flneg+3,_sinf$4239+3
  5260   0012FC                     l7728:
  5261   0012FC  C0A8  F064         	movff	_sinf$4239,___sindf@x
  5262   001300  C0A9  F065         	movff	_sinf$4239+1,___sindf@x+1
  5263   001304  C0AA  F066         	movff	_sinf$4239+2,___sindf@x+2
  5264   001308  C0AB  F067         	movff	_sinf$4239+3,___sindf@x+3
  5265   00130C  EC3D  F017         	call	___sindf	;wreg free
  5266   001310  C064  F0A4         	movff	?___sindf,?_sinf
  5267   001314  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5268   001318  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5269   00131C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5270   001320  EFD8  F00A         	goto	l1690
  5271   001324                     l7732:
  5272                           
  5273                           ; BSR set to: 0
  5274   001324  0ED6               	movlw	214
  5275   001326  5DBA               	subwf	sinf@ux& (0+255),w,b
  5276   001328  0E31               	movlw	49
  5277   00132A  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5278   00132C  0EE2               	movlw	226
  5279   00132E  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5280   001330  0E40               	movlw	64
  5281   001332  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5282   001334  B0D8               	btfsc	status,0,c
  5283   001336  EF9F  F009         	goto	u9501
  5284   00133A  EFA1  F009         	goto	u9500
  5285   00133E                     u9501:
  5286   00133E  EF42  F00A         	goto	l7762
  5287   001342                     u9500:
  5288   001342                     
  5289                           ; BSR set to: 0
  5290   001342  0EE0               	movlw	224
  5291   001344  5DBA               	subwf	sinf@ux& (0+255),w,b
  5292   001346  0EED               	movlw	237
  5293   001348  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5294   00134A  0EAF               	movlw	175
  5295   00134C  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5296   00134E  0E40               	movlw	64
  5297   001350  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5298   001352  B0D8               	btfsc	status,0,c
  5299   001354  EFAE  F009         	goto	u9511
  5300   001358  EFB0  F009         	goto	u9510
  5301   00135C                     u9511:
  5302   00135C  EFF0  F009         	goto	l7752
  5303   001360                     u9510:
  5304   001360                     
  5305                           ; BSR set to: 0
  5306   001360  51B1               	movf	sinf@sign& (0+255),w,b
  5307   001362  B4D8               	btfsc	status,2,c
  5308   001364  EFB6  F009         	goto	u9521
  5309   001368  EFB8  F009         	goto	u9520
  5310   00136C                     u9521:
  5311   00136C  EFD4  F009         	goto	l7746
  5312   001370                     u9520:
  5313   001370                     
  5314                           ; BSR set to: 0
  5315   001370  C0A4  F046         	movff	sinf@x,___fladd@b
  5316   001374  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5317   001378  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5318   00137C  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5319   001380  0EE4               	movlw	228
  5320   001382  6E4A               	movwf	___fladd@a^0,c
  5321   001384  0ECB               	movlw	203
  5322   001386  6E4B               	movwf	(___fladd@a+1)^0,c
  5323   001388  0E96               	movlw	150
  5324   00138A  6E4C               	movwf	(___fladd@a+2)^0,c
  5325   00138C  0E40               	movlw	64
  5326   00138E  6E4D               	movwf	(___fladd@a+3)^0,c
  5327   001390  ECD9  F00A         	call	___fladd	;wreg free
  5328   001394  C046  F0B2         	movff	?___fladd,_sinf$4523
  5329   001398  C047  F0B3         	movff	?___fladd+1,_sinf$4523+1
  5330   00139C  C048  F0B4         	movff	?___fladd+2,_sinf$4523+2
  5331   0013A0  C049  F0B5         	movff	?___fladd+3,_sinf$4523+3
  5332   0013A4  EF18  F009         	goto	l7718
  5333   0013A8                     l7746:
  5334                           
  5335                           ; BSR set to: 0
  5336   0013A8  0EE4               	movlw	228
  5337   0013AA  6E4A               	movwf	___fladd@a^0,c
  5338   0013AC  0ECB               	movlw	203
  5339   0013AE  6E4B               	movwf	(___fladd@a+1)^0,c
  5340   0013B0  0E96               	movlw	150
  5341   0013B2  6E4C               	movwf	(___fladd@a+2)^0,c
  5342   0013B4  0EC0               	movlw	192
  5343   0013B6  6E4D               	movwf	(___fladd@a+3)^0,c
  5344   0013B8  C0A4  F046         	movff	sinf@x,___fladd@b
  5345   0013BC  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5346   0013C0  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5347   0013C4  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5348   0013C8  ECD9  F00A         	call	___fladd	;wreg free
  5349   0013CC  C046  F0B2         	movff	?___fladd,_sinf$4523
  5350   0013D0  C047  F0B3         	movff	?___fladd+1,_sinf$4523+1
  5351   0013D4  C048  F0B4         	movff	?___fladd+2,_sinf$4523+2
  5352   0013D8  C049  F0B5         	movff	?___fladd+3,_sinf$4523+3
  5353   0013DC  EFE0  F008         	goto	l7710
  5354   0013E0                     l7752:
  5355                           
  5356                           ; BSR set to: 0
  5357   0013E0  51B1               	movf	sinf@sign& (0+255),w,b
  5358   0013E2  A4D8               	btfss	status,2,c
  5359   0013E4  EFF6  F009         	goto	u9531
  5360   0013E8  EFF8  F009         	goto	u9530
  5361   0013EC                     u9531:
  5362   0013EC  EF14  F00A         	goto	l7756
  5363   0013F0                     u9530:
  5364   0013F0                     
  5365                           ; BSR set to: 0
  5366   0013F0  C0A4  F046         	movff	sinf@x,___fladd@b
  5367   0013F4  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5368   0013F8  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5369   0013FC  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5370   001400  0EDB               	movlw	219
  5371   001402  6E4A               	movwf	___fladd@a^0,c
  5372   001404  0E0F               	movlw	15
  5373   001406  6E4B               	movwf	(___fladd@a+1)^0,c
  5374   001408  0EC9               	movlw	201
  5375   00140A  6E4C               	movwf	(___fladd@a+2)^0,c
  5376   00140C  0EC0               	movlw	192
  5377   00140E  6E4D               	movwf	(___fladd@a+3)^0,c
  5378   001410  ECD9  F00A         	call	___fladd	;wreg free
  5379   001414  C046  F0AC         	movff	?___fladd,_sinf$4240
  5380   001418  C047  F0AD         	movff	?___fladd+1,_sinf$4240+1
  5381   00141C  C048  F0AE         	movff	?___fladd+2,_sinf$4240+2
  5382   001420  C049  F0AF         	movff	?___fladd+3,_sinf$4240+3
  5383   001424  EF2E  F00A         	goto	l7758
  5384   001428                     l7756:
  5385                           
  5386                           ; BSR set to: 0
  5387   001428  C0A4  F046         	movff	sinf@x,___fladd@b
  5388   00142C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5389   001430  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5390   001434  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5391   001438  0EDB               	movlw	219
  5392   00143A  6E4A               	movwf	___fladd@a^0,c
  5393   00143C  0E0F               	movlw	15
  5394   00143E  6E4B               	movwf	(___fladd@a+1)^0,c
  5395   001440  0EC9               	movlw	201
  5396   001442  6E4C               	movwf	(___fladd@a+2)^0,c
  5397   001444  0E40               	movlw	64
  5398   001446  6E4D               	movwf	(___fladd@a+3)^0,c
  5399   001448  ECD9  F00A         	call	___fladd	;wreg free
  5400   00144C  C046  F0AC         	movff	?___fladd,_sinf$4240
  5401   001450  C047  F0AD         	movff	?___fladd+1,_sinf$4240+1
  5402   001454  C048  F0AE         	movff	?___fladd+2,_sinf$4240+2
  5403   001458  C049  F0AF         	movff	?___fladd+3,_sinf$4240+3
  5404   00145C                     l7758:
  5405   00145C  C0AC  F064         	movff	_sinf$4240,___sindf@x
  5406   001460  C0AD  F065         	movff	_sinf$4240+1,___sindf@x+1
  5407   001464  C0AE  F066         	movff	_sinf$4240+2,___sindf@x+2
  5408   001468  C0AF  F067         	movff	_sinf$4240+3,___sindf@x+3
  5409   00146C  EC3D  F017         	call	___sindf	;wreg free
  5410   001470  C064  F0A4         	movff	?___sindf,?_sinf
  5411   001474  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5412   001478  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5413   00147C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5414   001480  EFD8  F00A         	goto	l1690
  5415   001484                     l7762:
  5416                           
  5417                           ; BSR set to: 0
  5418   001484  0E80               	movlw	128
  5419   001486  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  5420   001488  0E7F               	movlw	127
  5421   00148A  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5422   00148C  A0D8               	btfss	status,0,c
  5423   00148E  EF4B  F00A         	goto	u9541
  5424   001492  EF4D  F00A         	goto	u9540
  5425   001496                     u9541:
  5426   001496  EF5F  F00A         	goto	l7770
  5427   00149A                     u9540:
  5428   00149A                     
  5429                           ; BSR set to: 0
  5430   00149A  0EFF               	movlw	255
  5431   00149C  13BA               	iorwf	sinf@ux& (0+255),f,b
  5432   00149E  0EFF               	movlw	255
  5433   0014A0  13BB               	iorwf	(sinf@ux+1)& (0+255),f,b
  5434   0014A2  0EFF               	movlw	255
  5435   0014A4  13BC               	iorwf	(sinf@ux+2)& (0+255),f,b
  5436   0014A6  0E00               	movlw	0
  5437   0014A8  13BD               	iorwf	(sinf@ux+3)& (0+255),f,b
  5438   0014AA                     
  5439                           ; BSR set to: 0
  5440   0014AA  C0BA  F0A4         	movff	sinf@ux,?_sinf
  5441   0014AE  C0BB  F0A5         	movff	sinf@ux+1,?_sinf+1
  5442   0014B2  C0BC  F0A6         	movff	sinf@ux+2,?_sinf+2
  5443   0014B6  C0BD  F0A7         	movff	sinf@ux+3,?_sinf+3
  5444   0014BA  EFD8  F00A         	goto	l1690
  5445   0014BE                     l7770:
  5446                           
  5447                           ; BSR set to: 0
  5448   0014BE  C0A4  F084         	movff	sinf@x,___rem_pio2f@x
  5449   0014C2  C0A5  F085         	movff	sinf@x+1,___rem_pio2f@x+1
  5450   0014C6  C0A6  F086         	movff	sinf@x+2,___rem_pio2f@x+2
  5451   0014CA  C0A7  F087         	movff	sinf@x+3,___rem_pio2f@x+3
  5452   0014CE  0EB6               	movlw	low sinf@y
  5453   0014D0  6F88               	movwf	___rem_pio2f@y& (0+255),b
  5454   0014D2  EC4F  F00F         	call	___rem_pio2f	;wreg free
  5455   0014D6  0100               	movlb	0	; () banked
  5456   0014D8  5184               	movf	?___rem_pio2f& (0+255),w,b
  5457   0014DA  0B03               	andlw	3
  5458   0014DC  6FB0               	movwf	sinf@n& (0+255),b
  5459   0014DE  EFC9  F00A         	goto	l7788
  5460   0014E2                     l7772:
  5461                           
  5462                           ; BSR set to: 0
  5463   0014E2  C0B6  F080         	movff	sinf@y,___flneg@f1
  5464   0014E6  C0B7  F081         	movff	sinf@y+1,___flneg@f1+1
  5465   0014EA  C0B8  F082         	movff	sinf@y+2,___flneg@f1+2
  5466   0014EE  C0B9  F083         	movff	sinf@y+3,___flneg@f1+3
  5467   0014F2  EC75  F027         	call	___flneg	;wreg free
  5468   0014F6  C080  F0B6         	movff	?___flneg,sinf@y
  5469   0014FA  C081  F0B7         	movff	?___flneg+1,sinf@y+1
  5470   0014FE  C082  F0B8         	movff	?___flneg+2,sinf@y+2
  5471   001502  C083  F0B9         	movff	?___flneg+3,sinf@y+3
  5472   001506                     l7774:
  5473   001506  C0B6  F064         	movff	sinf@y,___sindf@x
  5474   00150A  C0B7  F065         	movff	sinf@y+1,___sindf@x+1
  5475   00150E  C0B8  F066         	movff	sinf@y+2,___sindf@x+2
  5476   001512  C0B9  F067         	movff	sinf@y+3,___sindf@x+3
  5477   001516  EC3D  F017         	call	___sindf	;wreg free
  5478   00151A  C064  F0A4         	movff	?___sindf,?_sinf
  5479   00151E  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5480   001522  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5481   001526  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5482   00152A  EFD8  F00A         	goto	l1690
  5483   00152E                     l7778:
  5484                           
  5485                           ; BSR set to: 0
  5486   00152E  C0B6  F064         	movff	sinf@y,___cosdf@x
  5487   001532  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  5488   001536  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  5489   00153A  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  5490   00153E  EC6A  F01A         	call	___cosdf	;wreg free
  5491   001542  C064  F0A4         	movff	?___cosdf,?_sinf
  5492   001546  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  5493   00154A  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  5494   00154E  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  5495   001552  EFD8  F00A         	goto	l1690
  5496   001556                     l7782:
  5497                           
  5498                           ; BSR set to: 0
  5499   001556  C0B6  F064         	movff	sinf@y,___cosdf@x
  5500   00155A  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  5501   00155E  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  5502   001562  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  5503   001566  EC6A  F01A         	call	___cosdf	;wreg free
  5504   00156A  C064  F080         	movff	?___cosdf,___flneg@f1
  5505   00156E  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  5506   001572  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  5507   001576  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  5508   00157A  EC75  F027         	call	___flneg	;wreg free
  5509   00157E  C080  F0A4         	movff	?___flneg,?_sinf
  5510   001582  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  5511   001586  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  5512   00158A  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  5513   00158E  EFD8  F00A         	goto	l1690
  5514   001592                     l7788:
  5515                           
  5516                           ; BSR set to: 0
  5517   001592  51B0               	movf	sinf@n& (0+255),w,b
  5518                           
  5519                           ; Switch size 1, requested type "simple"
  5520                           ; Number of cases is 3, Range of values is 0 to 2
  5521                           ; switch strategies available:
  5522                           ; Name         Instructions Cycles
  5523                           ; simple_byte           10     6 (average)
  5524                           ;	Chosen strategy is simple_byte
  5525   001594  0A00               	xorlw	0	; case 0
  5526   001596  B4D8               	btfsc	status,2,c
  5527   001598  EF83  F00A         	goto	l7774
  5528   00159C  0A01               	xorlw	1	; case 1
  5529   00159E  B4D8               	btfsc	status,2,c
  5530   0015A0  EF97  F00A         	goto	l7778
  5531   0015A4  0A03               	xorlw	3	; case 2
  5532   0015A6  B4D8               	btfsc	status,2,c
  5533   0015A8  EF71  F00A         	goto	l7772
  5534   0015AC  EFAB  F00A         	goto	l7782
  5535   0015B0                     l1690:
  5536   0015B0  0012               	return		;funcret
  5537   0015B2                     __end_of_sinf:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function ___sindf *****************
  5541 ;; Defined at:
  5542 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__sindf.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  x               4    4[BANK0 ] float 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  z               4   32[BANK0 ] float 
  5547 ;;  s               4   28[BANK0 ] float 
  5548 ;;  w               4   12[BANK0 ] float 
  5549 ;;  r               4    8[BANK0 ] float 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  4    4[BANK0 ] float 
  5552 ;; Registers used:
  5553 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5559 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;Total ram usage:       32 bytes
  5564 ;; Hardware stack levels used: 1
  5565 ;; Hardware stack levels required when called: 2
  5566 ;; This function calls:
  5567 ;;		___fladd
  5568 ;;		___flmul
  5569 ;; This function is called by:
  5570 ;;		_sinf
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           	psect	text18
  5575   002E7A                     __ptext18:
  5576                           	callstack 0
  5577   002E7A                     ___sindf:
  5578                           	callstack 26
  5579   002E7A  C064  F014         	movff	___sindf@x,___flmul@b
  5580   002E7E  C065  F015         	movff	___sindf@x+1,___flmul@b+1
  5581   002E82  C066  F016         	movff	___sindf@x+2,___flmul@b+2
  5582   002E86  C067  F017         	movff	___sindf@x+3,___flmul@b+3
  5583   002E8A  C064  F018         	movff	___sindf@x,___flmul@a
  5584   002E8E  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  5585   002E92  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  5586   002E96  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  5587   002E9A  EC3A  F00D         	call	___flmul	;wreg free
  5588   002E9E  C014  F080         	movff	?___flmul,___sindf@z
  5589   002EA2  C015  F081         	movff	?___flmul+1,___sindf@z+1
  5590   002EA6  C016  F082         	movff	?___flmul+2,___sindf@z+2
  5591   002EAA  C017  F083         	movff	?___flmul+3,___sindf@z+3
  5592   002EAE  C080  F014         	movff	___sindf@z,___flmul@b
  5593   002EB2  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  5594   002EB6  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  5595   002EBA  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  5596   002EBE  C080  F018         	movff	___sindf@z,___flmul@a
  5597   002EC2  C081  F019         	movff	___sindf@z+1,___flmul@a+1
  5598   002EC6  C082  F01A         	movff	___sindf@z+2,___flmul@a+2
  5599   002ECA  C083  F01B         	movff	___sindf@z+3,___flmul@a+3
  5600   002ECE  EC3A  F00D         	call	___flmul	;wreg free
  5601   002ED2  C014  F06C         	movff	?___flmul,___sindf@w
  5602   002ED6  C015  F06D         	movff	?___flmul+1,___sindf@w+1
  5603   002EDA  C016  F06E         	movff	?___flmul+2,___sindf@w+2
  5604   002EDE  C017  F06F         	movff	?___flmul+3,___sindf@w+3
  5605   002EE2  0E3C               	movlw	60
  5606   002EE4  6E18               	movwf	___flmul@a^0,c
  5607   002EE6  0E6C               	movlw	108
  5608   002EE8  6E19               	movwf	(___flmul@a+1)^0,c
  5609   002EEA  0E36               	movlw	54
  5610   002EEC  6E1A               	movwf	(___flmul@a+2)^0,c
  5611   002EEE  0E36               	movlw	54
  5612   002EF0  6E1B               	movwf	(___flmul@a+3)^0,c
  5613   002EF2  C080  F014         	movff	___sindf@z,___flmul@b
  5614   002EF6  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  5615   002EFA  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  5616   002EFE  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  5617   002F02  EC3A  F00D         	call	___flmul	;wreg free
  5618   002F06  C014  F046         	movff	?___flmul,___fladd@b
  5619   002F0A  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5620   002F0E  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5621   002F12  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5622   002F16  0ECF               	movlw	207
  5623   002F18  6E4A               	movwf	___fladd@a^0,c
  5624   002F1A  0E07               	movlw	7
  5625   002F1C  6E4B               	movwf	(___fladd@a+1)^0,c
  5626   002F1E  0E50               	movlw	80
  5627   002F20  6E4C               	movwf	(___fladd@a+2)^0,c
  5628   002F22  0EB9               	movlw	185
  5629   002F24  6E4D               	movwf	(___fladd@a+3)^0,c
  5630   002F26  ECD9  F00A         	call	___fladd	;wreg free
  5631   002F2A  C046  F068         	movff	?___fladd,___sindf@r
  5632   002F2E  C047  F069         	movff	?___fladd+1,___sindf@r+1
  5633   002F32  C048  F06A         	movff	?___fladd+2,___sindf@r+2
  5634   002F36  C049  F06B         	movff	?___fladd+3,___sindf@r+3
  5635   002F3A  C080  F014         	movff	___sindf@z,___flmul@b
  5636   002F3E  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  5637   002F42  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  5638   002F46  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  5639   002F4A  C064  F018         	movff	___sindf@x,___flmul@a
  5640   002F4E  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  5641   002F52  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  5642   002F56  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  5643   002F5A  EC3A  F00D         	call	___flmul	;wreg free
  5644   002F5E  C014  F07C         	movff	?___flmul,___sindf@s
  5645   002F62  C015  F07D         	movff	?___flmul+1,___sindf@s+1
  5646   002F66  C016  F07E         	movff	?___flmul+2,___sindf@s+2
  5647   002F6A  C017  F07F         	movff	?___flmul+3,___sindf@s+3
  5648   002F6E  0EAB               	movlw	171
  5649   002F70  6E4A               	movwf	___fladd@a^0,c
  5650   002F72  0EAA               	movlw	170
  5651   002F74  6E4B               	movwf	(___fladd@a+1)^0,c
  5652   002F76  0E2A               	movlw	42
  5653   002F78  6E4C               	movwf	(___fladd@a+2)^0,c
  5654   002F7A  0EBE               	movlw	190
  5655   002F7C  6E4D               	movwf	(___fladd@a+3)^0,c
  5656   002F7E  0E84               	movlw	132
  5657   002F80  6E18               	movwf	___flmul@a^0,c
  5658   002F82  0E88               	movlw	136
  5659   002F84  6E19               	movwf	(___flmul@a+1)^0,c
  5660   002F86  0E08               	movlw	8
  5661   002F88  6E1A               	movwf	(___flmul@a+2)^0,c
  5662   002F8A  0E3C               	movlw	60
  5663   002F8C  6E1B               	movwf	(___flmul@a+3)^0,c
  5664   002F8E  C080  F014         	movff	___sindf@z,___flmul@b
  5665   002F92  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  5666   002F96  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  5667   002F9A  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  5668   002F9E  EC3A  F00D         	call	___flmul	;wreg free
  5669   002FA2  C014  F046         	movff	?___flmul,___fladd@b
  5670   002FA6  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5671   002FAA  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5672   002FAE  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5673   002FB2  ECD9  F00A         	call	___fladd	;wreg free
  5674   002FB6  C046  F070         	movff	?___fladd,___sindf$4528
  5675   002FBA  C047  F071         	movff	?___fladd+1,___sindf$4528+1
  5676   002FBE  C048  F072         	movff	?___fladd+2,___sindf$4528+2
  5677   002FC2  C049  F073         	movff	?___fladd+3,___sindf$4528+3
  5678   002FC6  C06C  F018         	movff	___sindf@w,___flmul@a
  5679   002FCA  C06D  F019         	movff	___sindf@w+1,___flmul@a+1
  5680   002FCE  C06E  F01A         	movff	___sindf@w+2,___flmul@a+2
  5681   002FD2  C06F  F01B         	movff	___sindf@w+3,___flmul@a+3
  5682   002FD6  C07C  F014         	movff	___sindf@s,___flmul@b
  5683   002FDA  C07D  F015         	movff	___sindf@s+1,___flmul@b+1
  5684   002FDE  C07E  F016         	movff	___sindf@s+2,___flmul@b+2
  5685   002FE2  C07F  F017         	movff	___sindf@s+3,___flmul@b+3
  5686   002FE6  EC3A  F00D         	call	___flmul	;wreg free
  5687   002FEA  C014  F074         	movff	?___flmul,___sindf$4529
  5688   002FEE  C015  F075         	movff	?___flmul+1,___sindf$4529+1
  5689   002FF2  C016  F076         	movff	?___flmul+2,___sindf$4529+2
  5690   002FF6  C017  F077         	movff	?___flmul+3,___sindf$4529+3
  5691   002FFA  C064  F04A         	movff	___sindf@x,___fladd@a
  5692   002FFE  C065  F04B         	movff	___sindf@x+1,___fladd@a+1
  5693   003002  C066  F04C         	movff	___sindf@x+2,___fladd@a+2
  5694   003006  C067  F04D         	movff	___sindf@x+3,___fladd@a+3
  5695   00300A  C07C  F018         	movff	___sindf@s,___flmul@a
  5696   00300E  C07D  F019         	movff	___sindf@s+1,___flmul@a+1
  5697   003012  C07E  F01A         	movff	___sindf@s+2,___flmul@a+2
  5698   003016  C07F  F01B         	movff	___sindf@s+3,___flmul@a+3
  5699   00301A  C070  F014         	movff	___sindf$4528,___flmul@b
  5700   00301E  C071  F015         	movff	___sindf$4528+1,___flmul@b+1
  5701   003022  C072  F016         	movff	___sindf$4528+2,___flmul@b+2
  5702   003026  C073  F017         	movff	___sindf$4528+3,___flmul@b+3
  5703   00302A  EC3A  F00D         	call	___flmul	;wreg free
  5704   00302E  C014  F046         	movff	?___flmul,___fladd@b
  5705   003032  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5706   003036  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5707   00303A  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5708   00303E  ECD9  F00A         	call	___fladd	;wreg free
  5709   003042  C046  F078         	movff	?___fladd,___sindf$4530
  5710   003046  C047  F079         	movff	?___fladd+1,___sindf$4530+1
  5711   00304A  C048  F07A         	movff	?___fladd+2,___sindf$4530+2
  5712   00304E  C049  F07B         	movff	?___fladd+3,___sindf$4530+3
  5713   003052  C078  F046         	movff	___sindf$4530,___fladd@b
  5714   003056  C079  F047         	movff	___sindf$4530+1,___fladd@b+1
  5715   00305A  C07A  F048         	movff	___sindf$4530+2,___fladd@b+2
  5716   00305E  C07B  F049         	movff	___sindf$4530+3,___fladd@b+3
  5717   003062  C068  F018         	movff	___sindf@r,___flmul@a
  5718   003066  C069  F019         	movff	___sindf@r+1,___flmul@a+1
  5719   00306A  C06A  F01A         	movff	___sindf@r+2,___flmul@a+2
  5720   00306E  C06B  F01B         	movff	___sindf@r+3,___flmul@a+3
  5721   003072  C074  F014         	movff	___sindf$4529,___flmul@b
  5722   003076  C075  F015         	movff	___sindf$4529+1,___flmul@b+1
  5723   00307A  C076  F016         	movff	___sindf$4529+2,___flmul@b+2
  5724   00307E  C077  F017         	movff	___sindf$4529+3,___flmul@b+3
  5725   003082  EC3A  F00D         	call	___flmul	;wreg free
  5726   003086  C014  F04A         	movff	?___flmul,___fladd@a
  5727   00308A  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  5728   00308E  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  5729   003092  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  5730   003096  ECD9  F00A         	call	___fladd	;wreg free
  5731   00309A  C046  F064         	movff	?___fladd,?___sindf
  5732   00309E  C047  F065         	movff	?___fladd+1,?___sindf+1
  5733   0030A2  C048  F066         	movff	?___fladd+2,?___sindf+2
  5734   0030A6  C049  F067         	movff	?___fladd+3,?___sindf+3
  5735   0030AA  0012               	return		;funcret
  5736   0030AC                     __end_of___sindf:
  5737                           	callstack 0
  5738                           
  5739 ;; *************** function ___rem_pio2f *****************
  5740 ;; Defined at:
  5741 ;;		line 44 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__rem_pio2f.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;  x               4   36[BANK0 ] float 
  5744 ;;  y               1   40[BANK0 ] PTR 
  5745 ;;		 -> sinf@y(4), 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  n               4   64[BANK0 ] long 
  5748 ;;  t               4   60[BANK0 ] float 
  5749 ;;  fn              4   56[BANK0 ] float 
  5750 ;;  ux              4   52[BANK0 ] struct .
  5751 ;;  ty              4   43[BANK0 ] [1]
  5752 ;;  sign            1   51[BANK0 ] _Bool 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  2   36[BANK0 ] int 
  5755 ;; Registers used:
  5756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5762 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5766 ;;Total ram usage:       32 bytes
  5767 ;; Hardware stack levels used: 1
  5768 ;; Hardware stack levels required when called: 3
  5769 ;; This function calls:
  5770 ;;		___fladd
  5771 ;;		___flmul
  5772 ;;		___flneg
  5773 ;;		___flsub
  5774 ;;		___fltol
  5775 ;;		___xxtofl
  5776 ;;		_fabsf
  5777 ;; This function is called by:
  5778 ;;		_sinf
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text19
  5783   001E9E                     __ptext19:
  5784                           	callstack 0
  5785   001E9E                     ___rem_pio2f:
  5786                           	callstack 25
  5787   001E9E  C115  F094         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  5788   001EA2  C116  F095         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  5789   001EA6  C117  F096         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  5790   001EAA  C118  F097         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  5791   001EAE  C084  F094         	movff	___rem_pio2f@x,___rem_pio2f@ux
  5792   001EB2  C085  F095         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  5793   001EB6  C086  F096         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  5794   001EBA  C087  F097         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  5795   001EBE  0100               	movlb	0	; () banked
  5796   001EC0  BF97               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  5797   001EC2  EF65  F00F         	goto	u9271
  5798   001EC6  EF68  F00F         	goto	u9270
  5799   001ECA                     u9271:
  5800   001ECA  0E01               	movlw	1
  5801   001ECC  EF69  F00F         	goto	u9280
  5802   001ED0                     u9270:
  5803   001ED0  0E00               	movlw	0
  5804   001ED2                     u9280:
  5805   001ED2  6F93               	movwf	___rem_pio2f@sign& (0+255),b
  5806   001ED4                     
  5807                           ; BSR set to: 0
  5808   001ED4  9F97               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  5809   001ED6                     
  5810                           ; BSR set to: 0
  5811   001ED6  0EDB               	movlw	219
  5812   001ED8  5D94               	subwf	___rem_pio2f@ux& (0+255),w,b
  5813   001EDA  0E0F               	movlw	15
  5814   001EDC  5995               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  5815   001EDE  0EC9               	movlw	201
  5816   001EE0  5996               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  5817   001EE2  0E4D               	movlw	77
  5818   001EE4  5997               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  5819   001EE6  B0D8               	btfsc	status,0,c
  5820   001EE8  EF78  F00F         	goto	u9291
  5821   001EEC  EF7A  F00F         	goto	u9290
  5822   001EF0                     u9291:
  5823   001EF0  EF66  F010         	goto	l7628
  5824   001EF4                     u9290:
  5825   001EF4                     
  5826                           ; BSR set to: 0
  5827   001EF4  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  5828   001EF8  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  5829   001EFC  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  5830   001F00  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  5831   001F04  ECE4  F027         	call	_fabsf	;wreg free
  5832   001F08  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  5833   001F0C  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  5834   001F10  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  5835   001F14  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  5836   001F18  0E00               	movlw	0
  5837   001F1A  6E4A               	movwf	___fladd@a^0,c
  5838   001F1C  0E00               	movlw	0
  5839   001F1E  6E4B               	movwf	(___fladd@a+1)^0,c
  5840   001F20  0E00               	movlw	0
  5841   001F22  6E4C               	movwf	(___fladd@a+2)^0,c
  5842   001F24  0E3F               	movlw	63
  5843   001F26  6E4D               	movwf	(___fladd@a+3)^0,c
  5844   001F28  0E83               	movlw	131
  5845   001F2A  6E18               	movwf	___flmul@a^0,c
  5846   001F2C  0EF9               	movlw	249
  5847   001F2E  6E19               	movwf	(___flmul@a+1)^0,c
  5848   001F30  0E22               	movlw	34
  5849   001F32  6E1A               	movwf	(___flmul@a+2)^0,c
  5850   001F34  0E3F               	movlw	63
  5851   001F36  6E1B               	movwf	(___flmul@a+3)^0,c
  5852   001F38  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  5853   001F3C  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  5854   001F40  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  5855   001F44  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  5856   001F48  EC3A  F00D         	call	___flmul	;wreg free
  5857   001F4C  C014  F046         	movff	?___flmul,___fladd@b
  5858   001F50  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5859   001F54  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5860   001F58  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5861   001F5C  ECD9  F00A         	call	___fladd	;wreg free
  5862   001F60  C046  F064         	movff	?___fladd,___fltol@f1
  5863   001F64  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  5864   001F68  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  5865   001F6C  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  5866   001F70  EC68  F020         	call	___fltol	;wreg free
  5867   001F74  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  5868   001F78  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  5869   001F7C  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  5870   001F80  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  5871   001F84  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  5872   001F88  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  5873   001F8C  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  5874   001F90  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  5875   001F94  0E01               	movlw	1
  5876   001F96  EC69  F01B         	call	___xxtofl
  5877   001F9A  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  5878   001F9E  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  5879   001FA2  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  5880   001FA6  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  5881   001FAA  0EDA               	movlw	218
  5882   001FAC  6E18               	movwf	___flmul@a^0,c
  5883   001FAE  0E0F               	movlw	15
  5884   001FB0  6E19               	movwf	(___flmul@a+1)^0,c
  5885   001FB2  0EC9               	movlw	201
  5886   001FB4  6E1A               	movwf	(___flmul@a+2)^0,c
  5887   001FB6  0E3F               	movlw	63
  5888   001FB8  6E1B               	movwf	(___flmul@a+3)^0,c
  5889   001FBA  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  5890   001FBE  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  5891   001FC2  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  5892   001FC6  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  5893   001FCA  EC3A  F00D         	call	___flmul	;wreg free
  5894   001FCE  C014  F068         	movff	?___flmul,___flsub@a
  5895   001FD2  C015  F069         	movff	?___flmul+1,___flsub@a+1
  5896   001FD6  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  5897   001FDA  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  5898   001FDE  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  5899   001FE2  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  5900   001FE6  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  5901   001FEA  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  5902   001FEE  ECED  F026         	call	___flsub	;wreg free
  5903   001FF2  C064  F08F         	movff	?___flsub,___rem_pio2f$4527
  5904   001FF6  C065  F090         	movff	?___flsub+1,___rem_pio2f$4527+1
  5905   001FFA  C066  F091         	movff	?___flsub+2,___rem_pio2f$4527+2
  5906   001FFE  C067  F092         	movff	?___flsub+3,___rem_pio2f$4527+3
  5907   002002  C08F  F064         	movff	___rem_pio2f$4527,___flsub@b
  5908   002006  C090  F065         	movff	___rem_pio2f$4527+1,___flsub@b+1
  5909   00200A  C091  F066         	movff	___rem_pio2f$4527+2,___flsub@b+2
  5910   00200E  C092  F067         	movff	___rem_pio2f$4527+3,___flsub@b+3
  5911   002012  0EA3               	movlw	163
  5912   002014  6E18               	movwf	___flmul@a^0,c
  5913   002016  0E85               	movlw	133
  5914   002018  6E19               	movwf	(___flmul@a+1)^0,c
  5915   00201A  0E88               	movlw	136
  5916   00201C  6E1A               	movwf	(___flmul@a+2)^0,c
  5917   00201E  0E32               	movlw	50
  5918   002020  6E1B               	movwf	(___flmul@a+3)^0,c
  5919   002022  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  5920   002026  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  5921   00202A  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  5922   00202E  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  5923   002032  EC3A  F00D         	call	___flmul	;wreg free
  5924   002036  C014  F068         	movff	?___flmul,___flsub@a
  5925   00203A  C015  F069         	movff	?___flmul+1,___flsub@a+1
  5926   00203E  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  5927   002042  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  5928   002046  ECED  F026         	call	___flsub	;wreg free
  5929   00204A  0100               	movlb	0	; () banked
  5930   00204C  5188               	movf	___rem_pio2f@y& (0+255),w,b
  5931   00204E  6ED9               	movwf	fsr2l,c
  5932   002050  6ADA               	clrf	fsr2h,c
  5933   002052  C064  FFDE         	movff	?___flsub,postinc2
  5934   002056  C065  FFDE         	movff	?___flsub+1,postinc2
  5935   00205A  C066  FFDE         	movff	?___flsub+2,postinc2
  5936   00205E  C067  FFDE         	movff	?___flsub+3,postinc2
  5937   002062                     
  5938                           ; BSR set to: 0
  5939   002062  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  5940   002064  B4D8               	btfsc	status,2,c
  5941   002066  EF37  F010         	goto	u9301
  5942   00206A  EF39  F010         	goto	u9300
  5943   00206E                     u9301:
  5944   00206E  EF60  F010         	goto	l1740
  5945   002072                     u9300:
  5946   002072                     l7622:
  5947                           
  5948                           ; BSR set to: 0
  5949   002072  5188               	movf	___rem_pio2f@y& (0+255),w,b
  5950   002074  6ED9               	movwf	fsr2l,c
  5951   002076  6ADA               	clrf	fsr2h,c
  5952   002078  CFDE F080          	movff	postinc2,___flneg@f1
  5953   00207C  CFDE F081          	movff	postinc2,___flneg@f1+1
  5954   002080  CFDE F082          	movff	postinc2,___flneg@f1+2
  5955   002084  CFDE F083          	movff	postinc2,___flneg@f1+3
  5956   002088  EC75  F027         	call	___flneg	;wreg free
  5957   00208C  0100               	movlb	0	; () banked
  5958   00208E  5188               	movf	___rem_pio2f@y& (0+255),w,b
  5959   002090  6ED9               	movwf	fsr2l,c
  5960   002092  6ADA               	clrf	fsr2h,c
  5961   002094  C080  FFDE         	movff	?___flneg,postinc2
  5962   002098  C081  FFDE         	movff	?___flneg+1,postinc2
  5963   00209C  C082  FFDE         	movff	?___flneg+2,postinc2
  5964   0020A0  C083  FFDE         	movff	?___flneg+3,postinc2
  5965   0020A4                     
  5966                           ; BSR set to: 0
  5967   0020A4  C0A0  F089         	movff	___rem_pio2f@n,??___rem_pio2f
  5968   0020A8  C0A1  F08A         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  5969   0020AC  1F89               	comf	??___rem_pio2f& (0+255),f,b
  5970   0020AE  1F8A               	comf	(??___rem_pio2f+1)& (0+255),f,b
  5971   0020B0  4B89               	infsnz	??___rem_pio2f& (0+255),f,b
  5972   0020B2  2B8A               	incf	(??___rem_pio2f+1)& (0+255),f,b
  5973   0020B4  C089  F084         	movff	??___rem_pio2f,?___rem_pio2f
  5974   0020B8  C08A  F085         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  5975   0020BC  EF2F  F011         	goto	l1741
  5976   0020C0                     l1740:
  5977                           
  5978                           ; BSR set to: 0
  5979   0020C0  C0A0  F084         	movff	___rem_pio2f@n,?___rem_pio2f
  5980   0020C4  C0A1  F085         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  5981   0020C8  EF2F  F011         	goto	l1741
  5982   0020CC                     l7628:
  5983                           
  5984                           ; BSR set to: 0
  5985   0020CC  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  5986   0020D0  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  5987   0020D4  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  5988   0020D8  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  5989   0020DC  ECE4  F027         	call	_fabsf	;wreg free
  5990   0020E0  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  5991   0020E4  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  5992   0020E8  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  5993   0020EC  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  5994   0020F0  0E00               	movlw	0
  5995   0020F2  6E4A               	movwf	___fladd@a^0,c
  5996   0020F4  0E00               	movlw	0
  5997   0020F6  6E4B               	movwf	(___fladd@a+1)^0,c
  5998   0020F8  0E00               	movlw	0
  5999   0020FA  6E4C               	movwf	(___fladd@a+2)^0,c
  6000   0020FC  0E3F               	movlw	63
  6001   0020FE  6E4D               	movwf	(___fladd@a+3)^0,c
  6002   002100  0E83               	movlw	131
  6003   002102  6E18               	movwf	___flmul@a^0,c
  6004   002104  0EF9               	movlw	249
  6005   002106  6E19               	movwf	(___flmul@a+1)^0,c
  6006   002108  0E22               	movlw	34
  6007   00210A  6E1A               	movwf	(___flmul@a+2)^0,c
  6008   00210C  0E3F               	movlw	63
  6009   00210E  6E1B               	movwf	(___flmul@a+3)^0,c
  6010   002110  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  6011   002114  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  6012   002118  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  6013   00211C  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  6014   002120  EC3A  F00D         	call	___flmul	;wreg free
  6015   002124  C014  F046         	movff	?___flmul,___fladd@b
  6016   002128  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6017   00212C  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6018   002130  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6019   002134  ECD9  F00A         	call	___fladd	;wreg free
  6020   002138  C046  F064         	movff	?___fladd,___fltol@f1
  6021   00213C  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  6022   002140  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  6023   002144  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  6024   002148  EC68  F020         	call	___fltol	;wreg free
  6025   00214C  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  6026   002150  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  6027   002154  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  6028   002158  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  6029   00215C  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  6030   002160  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  6031   002164  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  6032   002168  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  6033   00216C  0E01               	movlw	1
  6034   00216E  EC69  F01B         	call	___xxtofl
  6035   002172  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  6036   002176  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  6037   00217A  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  6038   00217E  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  6039   002182  0EDA               	movlw	218
  6040   002184  6E18               	movwf	___flmul@a^0,c
  6041   002186  0E0F               	movlw	15
  6042   002188  6E19               	movwf	(___flmul@a+1)^0,c
  6043   00218A  0EC9               	movlw	201
  6044   00218C  6E1A               	movwf	(___flmul@a+2)^0,c
  6045   00218E  0E3F               	movlw	63
  6046   002190  6E1B               	movwf	(___flmul@a+3)^0,c
  6047   002192  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6048   002196  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6049   00219A  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6050   00219E  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6051   0021A2  EC3A  F00D         	call	___flmul	;wreg free
  6052   0021A6  C014  F068         	movff	?___flmul,___flsub@a
  6053   0021AA  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6054   0021AE  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6055   0021B2  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6056   0021B6  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  6057   0021BA  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  6058   0021BE  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  6059   0021C2  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  6060   0021C6  ECED  F026         	call	___flsub	;wreg free
  6061   0021CA  C064  F08F         	movff	?___flsub,___rem_pio2f$4527
  6062   0021CE  C065  F090         	movff	?___flsub+1,___rem_pio2f$4527+1
  6063   0021D2  C066  F091         	movff	?___flsub+2,___rem_pio2f$4527+2
  6064   0021D6  C067  F092         	movff	?___flsub+3,___rem_pio2f$4527+3
  6065   0021DA  C08F  F064         	movff	___rem_pio2f$4527,___flsub@b
  6066   0021DE  C090  F065         	movff	___rem_pio2f$4527+1,___flsub@b+1
  6067   0021E2  C091  F066         	movff	___rem_pio2f$4527+2,___flsub@b+2
  6068   0021E6  C092  F067         	movff	___rem_pio2f$4527+3,___flsub@b+3
  6069   0021EA  0EA3               	movlw	163
  6070   0021EC  6E18               	movwf	___flmul@a^0,c
  6071   0021EE  0E85               	movlw	133
  6072   0021F0  6E19               	movwf	(___flmul@a+1)^0,c
  6073   0021F2  0E88               	movlw	136
  6074   0021F4  6E1A               	movwf	(___flmul@a+2)^0,c
  6075   0021F6  0E32               	movlw	50
  6076   0021F8  6E1B               	movwf	(___flmul@a+3)^0,c
  6077   0021FA  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6078   0021FE  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6079   002202  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6080   002206  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6081   00220A  EC3A  F00D         	call	___flmul	;wreg free
  6082   00220E  C014  F068         	movff	?___flmul,___flsub@a
  6083   002212  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6084   002216  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6085   00221A  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6086   00221E  ECED  F026         	call	___flsub	;wreg free
  6087   002222  C064  F08B         	movff	?___flsub,___rem_pio2f@ty
  6088   002226  C065  F08C         	movff	?___flsub+1,___rem_pio2f@ty+1
  6089   00222A  C066  F08D         	movff	?___flsub+2,___rem_pio2f@ty+2
  6090   00222E  C067  F08E         	movff	?___flsub+3,___rem_pio2f@ty+3
  6091   002232  0100               	movlb	0	; () banked
  6092   002234  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6093   002236  6ED9               	movwf	fsr2l,c
  6094   002238  6ADA               	clrf	fsr2h,c
  6095   00223A  C08B  FFDE         	movff	___rem_pio2f@ty,postinc2
  6096   00223E  C08C  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  6097   002242  C08D  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  6098   002246  C08E  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  6099   00224A                     
  6100                           ; BSR set to: 0
  6101   00224A  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  6102   00224C  B4D8               	btfsc	status,2,c
  6103   00224E  EF2B  F011         	goto	u9311
  6104   002252  EF2D  F011         	goto	u9310
  6105   002256                     u9311:
  6106   002256  EF60  F010         	goto	l1740
  6107   00225A                     u9310:
  6108   00225A  EF39  F010         	goto	l7622
  6109   00225E                     l1741:
  6110                           
  6111                           ; BSR set to: 0
  6112   00225E  0012               	return		;funcret
  6113   002260                     __end_of___rem_pio2f:
  6114                           	callstack 0
  6115                           
  6116 ;; *************** function _fabsf *****************
  6117 ;; Defined at:
  6118 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fabsf.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  x               4    5[COMRAM] float 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  u               4    9[COMRAM] struct .
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  4    5[COMRAM] float 
  6125 ;; Registers used:
  6126 ;;		status,2, status,0
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6132 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6133 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;Total ram usage:        8 bytes
  6137 ;; Hardware stack levels used: 1
  6138 ;; Hardware stack levels required when called: 1
  6139 ;; This function calls:
  6140 ;;		Nothing
  6141 ;; This function is called by:
  6142 ;;		___rem_pio2f
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           	psect	text20
  6147   004FC8                     __ptext20:
  6148                           	callstack 0
  6149   004FC8                     _fabsf:
  6150                           	callstack 26
  6151   004FC8  C111  F00A         	movff	fabsf@F465,fabsf@u
  6152   004FCC  C112  F00B         	movff	fabsf@F465+1,fabsf@u+1
  6153   004FD0  C113  F00C         	movff	fabsf@F465+2,fabsf@u+2
  6154   004FD4  C114  F00D         	movff	fabsf@F465+3,fabsf@u+3
  6155   004FD8  C006  F00A         	movff	fabsf@x,fabsf@u
  6156   004FDC  C007  F00B         	movff	fabsf@x+1,fabsf@u+1
  6157   004FE0  C008  F00C         	movff	fabsf@x+2,fabsf@u+2
  6158   004FE4  C009  F00D         	movff	fabsf@x+3,fabsf@u+3
  6159   004FE8  9E0D               	bcf	(fabsf@u+3)^0,7,c
  6160   004FEA  C00A  F006         	movff	fabsf@u,?_fabsf
  6161   004FEE  C00B  F007         	movff	fabsf@u+1,?_fabsf+1
  6162   004FF2  C00C  F008         	movff	fabsf@u+2,?_fabsf+2
  6163   004FF6  C00D  F009         	movff	fabsf@u+3,?_fabsf+3
  6164   004FFA  0012               	return		;funcret
  6165   004FFC                     __end_of_fabsf:
  6166                           	callstack 0
  6167                           
  6168 ;; *************** function ___cosdf *****************
  6169 ;; Defined at:
  6170 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__cosdf.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;  x               4    4[BANK0 ] float 
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;  z               4   28[BANK0 ] float 
  6175 ;;  w               4   24[BANK0 ] float 
  6176 ;;  r               4    8[BANK0 ] float 
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  4    4[BANK0 ] float 
  6179 ;; Registers used:
  6180 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6186 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6187 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;Total ram usage:       28 bytes
  6191 ;; Hardware stack levels used: 1
  6192 ;; Hardware stack levels required when called: 2
  6193 ;; This function calls:
  6194 ;;		___fladd
  6195 ;;		___flmul
  6196 ;; This function is called by:
  6197 ;;		_sinf
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201                           	psect	text21
  6202   0034D4                     __ptext21:
  6203                           	callstack 0
  6204   0034D4                     ___cosdf:
  6205                           	callstack 26
  6206   0034D4  C064  F014         	movff	___cosdf@x,___flmul@b
  6207   0034D8  C065  F015         	movff	___cosdf@x+1,___flmul@b+1
  6208   0034DC  C066  F016         	movff	___cosdf@x+2,___flmul@b+2
  6209   0034E0  C067  F017         	movff	___cosdf@x+3,___flmul@b+3
  6210   0034E4  C064  F018         	movff	___cosdf@x,___flmul@a
  6211   0034E8  C065  F019         	movff	___cosdf@x+1,___flmul@a+1
  6212   0034EC  C066  F01A         	movff	___cosdf@x+2,___flmul@a+2
  6213   0034F0  C067  F01B         	movff	___cosdf@x+3,___flmul@a+3
  6214   0034F4  EC3A  F00D         	call	___flmul	;wreg free
  6215   0034F8  C014  F07C         	movff	?___flmul,___cosdf@z
  6216   0034FC  C015  F07D         	movff	?___flmul+1,___cosdf@z+1
  6217   003500  C016  F07E         	movff	?___flmul+2,___cosdf@z+2
  6218   003504  C017  F07F         	movff	?___flmul+3,___cosdf@z+3
  6219   003508  C07C  F014         	movff	___cosdf@z,___flmul@b
  6220   00350C  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6221   003510  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6222   003514  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6223   003518  C07C  F018         	movff	___cosdf@z,___flmul@a
  6224   00351C  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6225   003520  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6226   003524  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6227   003528  EC3A  F00D         	call	___flmul	;wreg free
  6228   00352C  C014  F078         	movff	?___flmul,___cosdf@w
  6229   003530  C015  F079         	movff	?___flmul+1,___cosdf@w+1
  6230   003534  C016  F07A         	movff	?___flmul+2,___cosdf@w+2
  6231   003538  C017  F07B         	movff	?___flmul+3,___cosdf@w+3
  6232   00353C  0E17               	movlw	23
  6233   00353E  6E18               	movwf	___flmul@a^0,c
  6234   003540  0E9A               	movlw	154
  6235   003542  6E19               	movwf	(___flmul@a+1)^0,c
  6236   003544  0ECC               	movlw	204
  6237   003546  6E1A               	movwf	(___flmul@a+2)^0,c
  6238   003548  0E37               	movlw	55
  6239   00354A  6E1B               	movwf	(___flmul@a+3)^0,c
  6240   00354C  C07C  F014         	movff	___cosdf@z,___flmul@b
  6241   003550  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6242   003554  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6243   003558  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6244   00355C  EC3A  F00D         	call	___flmul	;wreg free
  6245   003560  C014  F046         	movff	?___flmul,___fladd@b
  6246   003564  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6247   003568  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6248   00356C  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6249   003570  0E3F               	movlw	63
  6250   003572  6E4A               	movwf	___fladd@a^0,c
  6251   003574  0E04               	movlw	4
  6252   003576  6E4B               	movwf	(___fladd@a+1)^0,c
  6253   003578  0EB6               	movlw	182
  6254   00357A  6E4C               	movwf	(___fladd@a+2)^0,c
  6255   00357C  0EBA               	movlw	186
  6256   00357E  6E4D               	movwf	(___fladd@a+3)^0,c
  6257   003580  ECD9  F00A         	call	___fladd	;wreg free
  6258   003584  C046  F068         	movff	?___fladd,___cosdf@r
  6259   003588  C047  F069         	movff	?___fladd+1,___cosdf@r+1
  6260   00358C  C048  F06A         	movff	?___fladd+2,___cosdf@r+2
  6261   003590  C049  F06B         	movff	?___fladd+3,___cosdf@r+3
  6262   003594  0E00               	movlw	0
  6263   003596  6E4A               	movwf	___fladd@a^0,c
  6264   003598  0E00               	movlw	0
  6265   00359A  6E4B               	movwf	(___fladd@a+1)^0,c
  6266   00359C  0E80               	movlw	128
  6267   00359E  6E4C               	movwf	(___fladd@a+2)^0,c
  6268   0035A0  0E3F               	movlw	63
  6269   0035A2  6E4D               	movwf	(___fladd@a+3)^0,c
  6270   0035A4  0E00               	movlw	0
  6271   0035A6  6E18               	movwf	___flmul@a^0,c
  6272   0035A8  0E00               	movlw	0
  6273   0035AA  6E19               	movwf	(___flmul@a+1)^0,c
  6274   0035AC  0E00               	movlw	0
  6275   0035AE  6E1A               	movwf	(___flmul@a+2)^0,c
  6276   0035B0  0EBF               	movlw	191
  6277   0035B2  6E1B               	movwf	(___flmul@a+3)^0,c
  6278   0035B4  C07C  F014         	movff	___cosdf@z,___flmul@b
  6279   0035B8  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6280   0035BC  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6281   0035C0  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6282   0035C4  EC3A  F00D         	call	___flmul	;wreg free
  6283   0035C8  C014  F046         	movff	?___flmul,___fladd@b
  6284   0035CC  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6285   0035D0  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6286   0035D4  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6287   0035D8  ECD9  F00A         	call	___fladd	;wreg free
  6288   0035DC  C046  F06C         	movff	?___fladd,___cosdf$4524
  6289   0035E0  C047  F06D         	movff	?___fladd+1,___cosdf$4524+1
  6290   0035E4  C048  F06E         	movff	?___fladd+2,___cosdf$4524+2
  6291   0035E8  C049  F06F         	movff	?___fladd+3,___cosdf$4524+3
  6292   0035EC  C07C  F018         	movff	___cosdf@z,___flmul@a
  6293   0035F0  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6294   0035F4  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6295   0035F8  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6296   0035FC  C078  F014         	movff	___cosdf@w,___flmul@b
  6297   003600  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6298   003604  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6299   003608  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6300   00360C  EC3A  F00D         	call	___flmul	;wreg free
  6301   003610  C014  F070         	movff	?___flmul,___cosdf$4525
  6302   003614  C015  F071         	movff	?___flmul+1,___cosdf$4525+1
  6303   003618  C016  F072         	movff	?___flmul+2,___cosdf$4525+2
  6304   00361C  C017  F073         	movff	?___flmul+3,___cosdf$4525+3
  6305   003620  0E9F               	movlw	159
  6306   003622  6E18               	movwf	___flmul@a^0,c
  6307   003624  0EAA               	movlw	170
  6308   003626  6E19               	movwf	(___flmul@a+1)^0,c
  6309   003628  0E2A               	movlw	42
  6310   00362A  6E1A               	movwf	(___flmul@a+2)^0,c
  6311   00362C  0E3D               	movlw	61
  6312   00362E  6E1B               	movwf	(___flmul@a+3)^0,c
  6313   003630  C078  F014         	movff	___cosdf@w,___flmul@b
  6314   003634  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6315   003638  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6316   00363C  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6317   003640  EC3A  F00D         	call	___flmul	;wreg free
  6318   003644  C014  F04A         	movff	?___flmul,___fladd@a
  6319   003648  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6320   00364C  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6321   003650  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6322   003654  C06C  F046         	movff	___cosdf$4524,___fladd@b
  6323   003658  C06D  F047         	movff	___cosdf$4524+1,___fladd@b+1
  6324   00365C  C06E  F048         	movff	___cosdf$4524+2,___fladd@b+2
  6325   003660  C06F  F049         	movff	___cosdf$4524+3,___fladd@b+3
  6326   003664  ECD9  F00A         	call	___fladd	;wreg free
  6327   003668  C046  F074         	movff	?___fladd,___cosdf$4526
  6328   00366C  C047  F075         	movff	?___fladd+1,___cosdf$4526+1
  6329   003670  C048  F076         	movff	?___fladd+2,___cosdf$4526+2
  6330   003674  C049  F077         	movff	?___fladd+3,___cosdf$4526+3
  6331   003678  C074  F046         	movff	___cosdf$4526,___fladd@b
  6332   00367C  C075  F047         	movff	___cosdf$4526+1,___fladd@b+1
  6333   003680  C076  F048         	movff	___cosdf$4526+2,___fladd@b+2
  6334   003684  C077  F049         	movff	___cosdf$4526+3,___fladd@b+3
  6335   003688  C068  F018         	movff	___cosdf@r,___flmul@a
  6336   00368C  C069  F019         	movff	___cosdf@r+1,___flmul@a+1
  6337   003690  C06A  F01A         	movff	___cosdf@r+2,___flmul@a+2
  6338   003694  C06B  F01B         	movff	___cosdf@r+3,___flmul@a+3
  6339   003698  C070  F014         	movff	___cosdf$4525,___flmul@b
  6340   00369C  C071  F015         	movff	___cosdf$4525+1,___flmul@b+1
  6341   0036A0  C072  F016         	movff	___cosdf$4525+2,___flmul@b+2
  6342   0036A4  C073  F017         	movff	___cosdf$4525+3,___flmul@b+3
  6343   0036A8  EC3A  F00D         	call	___flmul	;wreg free
  6344   0036AC  C014  F04A         	movff	?___flmul,___fladd@a
  6345   0036B0  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6346   0036B4  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6347   0036B8  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6348   0036BC  ECD9  F00A         	call	___fladd	;wreg free
  6349   0036C0  C046  F064         	movff	?___fladd,?___cosdf
  6350   0036C4  C047  F065         	movff	?___fladd+1,?___cosdf+1
  6351   0036C8  C048  F066         	movff	?___fladd+2,?___cosdf+2
  6352   0036CC  C049  F067         	movff	?___fladd+3,?___cosdf+3
  6353   0036D0  0012               	return		;funcret
  6354   0036D2                     __end_of___cosdf:
  6355                           	callstack 0
  6356                           
  6357 ;; *************** function _printf *****************
  6358 ;; Defined at:
  6359 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\printf.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  6362 ;;		 -> STR_26(5), STR_14(5), 
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;  ret             2    0        int 
  6365 ;;  ap              1   83[COMRAM] PTR void [1]
  6366 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  2  110[BANK0 ] int 
  6369 ;; Registers used:
  6370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6376 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6379 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;Total ram usage:        5 bytes
  6381 ;; Hardware stack levels used: 1
  6382 ;; Hardware stack levels required when called: 8
  6383 ;; This function calls:
  6384 ;;		_vfprintf
  6385 ;; This function is called by:
  6386 ;;		_runDAC
  6387 ;;		_runUART
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	text22
  6392   0050A4                     __ptext22:
  6393                           	callstack 0
  6394   0050A4                     _printf:
  6395                           	callstack 21
  6396   0050A4  0ED0               	movlw	low (?_printf+2)
  6397   0050A6  6E54               	movwf	printf@ap^0,c
  6398   0050A8  0E00               	movlw	0
  6399   0050AA  0100               	movlb	0	; () banked
  6400   0050AC  6FC7               	movwf	vfprintf@fp& (0+255),b
  6401   0050AE  0E00               	movlw	0
  6402   0050B0  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6403   0050B2  C0CE  F0C9         	movff	printf@fmt,vfprintf@fmt
  6404   0050B6  C0CF  F0CA         	movff	printf@fmt+1,vfprintf@fmt+1
  6405   0050BA  0E54               	movlw	low printf@ap
  6406   0050BC  6FCB               	movwf	vfprintf@ap& (0+255),b
  6407   0050BE  ECC8  F026         	call	_vfprintf	;wreg free
  6408   0050C2  0012               	return		;funcret
  6409   0050C4                     __end_of_printf:
  6410                           	callstack 0
  6411                           
  6412 ;; *************** function _SPI_write *****************
  6413 ;; Defined at:
  6414 ;;		line 93 in file "DAC.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  data            1    wreg     unsigned char 
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;  data            1    7[COMRAM] unsigned char 
  6419 ;;  LSB             1    6[COMRAM] unsigned char 
  6420 ;;  MSB             1    5[COMRAM] unsigned char 
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  1    wreg      void 
  6423 ;; Registers used:
  6424 ;;		wreg, status,2, status,0
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;Total ram usage:        3 bytes
  6435 ;; Hardware stack levels used: 1
  6436 ;; Hardware stack levels required when called: 1
  6437 ;; This function calls:
  6438 ;;		Nothing
  6439 ;; This function is called by:
  6440 ;;		_runDAC
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           	psect	text23
  6445   004EAC                     __ptext23:
  6446                           	callstack 0
  6447   004EAC                     _SPI_write:
  6448                           	callstack 28
  6449                           
  6450                           ;incstack = 0
  6451                           ;SPI_write@data stored from wreg
  6452   004EAC  6E08               	movwf	SPI_write@data^0,c
  6453   004EAE                     
  6454                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  6455   004EAE  3808               	swapf	SPI_write@data^0,w,c
  6456   004EB0  0B0F               	andlw	15
  6457   004EB2  0930               	iorlw	48
  6458   004EB4  6E06               	movwf	SPI_write@MSB^0,c
  6459                           
  6460                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  6461   004EB6  3808               	swapf	SPI_write@data^0,w,c
  6462   004EB8  0BF0               	andlw	240
  6463   004EBA  6E07               	movwf	SPI_write@LSB^0,c
  6464   004EBC                     
  6465                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  6466   004EBC  968A               	bcf	138,3,c	;volatile
  6467   004EBE                     
  6468                           ;DAC.c: 101:     SSP1BUF = MSB;
  6469   004EBE  C006  FFC9         	movff	SPI_write@MSB,4041	;volatile
  6470   004EC2                     l245:
  6471   004EC2  A69E               	btfss	3998,3,c	;volatile
  6472   004EC4  EF66  F027         	goto	u9401
  6473   004EC8  EF68  F027         	goto	u9400
  6474   004ECC                     u9401:
  6475   004ECC  EF61  F027         	goto	l245
  6476   004ED0                     u9400:
  6477   004ED0                     
  6478                           ;DAC.c: 103:     SSP1IF = 0;
  6479   004ED0  969E               	bcf	3998,3,c	;volatile
  6480                           
  6481                           ;DAC.c: 105:     SSP1BUF = LSB;
  6482   004ED2  C007  FFC9         	movff	SPI_write@LSB,4041	;volatile
  6483   004ED6                     l248:
  6484   004ED6  A69E               	btfss	3998,3,c	;volatile
  6485   004ED8  EF70  F027         	goto	u9411
  6486   004EDC  EF72  F027         	goto	u9410
  6487   004EE0                     u9411:
  6488   004EE0  EF6B  F027         	goto	l248
  6489   004EE4                     u9410:
  6490   004EE4                     
  6491                           ;DAC.c: 107:     SSP1IF = 0;
  6492   004EE4  969E               	bcf	3998,3,c	;volatile
  6493                           
  6494                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  6495   004EE6  868A               	bsf	138,3,c	;volatile
  6496   004EE8  0012               	return		;funcret
  6497   004EEA                     __end_of_SPI_write:
  6498                           	callstack 0
  6499                           
  6500 ;; *************** function _runADC *****************
  6501 ;; Defined at:
  6502 ;;		line 13 in file "ADC.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;		None
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  text           17    0[BANK1 ] unsigned char [17]
  6507 ;;  voltage2        4   21[BANK1 ] float 
  6508 ;;  voltage1        4   17[BANK1 ] float 
  6509 ;;  pot2            2   27[BANK1 ] unsigned short 
  6510 ;;  pot1            2   25[BANK1 ] unsigned short 
  6511 ;;  keepState       1   29[BANK1 ] unsigned char 
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      void 
  6514 ;; Registers used:
  6515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6523 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;      Totals:         0       2      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6525 ;;Total ram usage:       32 bytes
  6526 ;; Hardware stack levels used: 1
  6527 ;; Hardware stack levels required when called: 9
  6528 ;; This function calls:
  6529 ;;		_LCD_ShowString
  6530 ;;		___fldiv
  6531 ;;		___flmul
  6532 ;;		___xxtofl
  6533 ;;		_sprintf
  6534 ;; This function is called by:
  6535 ;;		_main
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           	psect	text24
  6540   0032C2                     __ptext24:
  6541                           	callstack 0
  6542   0032C2                     _runADC:
  6543                           	callstack 21
  6544   0032C2                     
  6545                           ;ADC.c: 16: ANSELAbits.ANSA5 = 1;
  6546   0032C2  010F               	movlb	15	; () banked
  6547   0032C4  8B38               	bsf	56,5,b	;volatile
  6548                           
  6549                           ;ADC.c: 17: ANSELEbits.ANSE0 = 1;
  6550   0032C6  813C               	bsf	60,0,b	;volatile
  6551                           
  6552                           ;ADC.c: 19: ADCON2bits.ADFM = 1;
  6553   0032C8  8EC0               	bsf	192,7,c	;volatile
  6554   0032CA                     
  6555                           ; BSR set to: 15
  6556                           ;ADC.c: 20: ADCON2bits.ADCS = 0b110;
  6557   0032CA  50C0               	movf	192,w,c	;volatile
  6558   0032CC  0BF8               	andlw	-8
  6559   0032CE  0906               	iorlw	6
  6560   0032D0  6EC0               	movwf	192,c	;volatile
  6561                           
  6562                           ;ADC.c: 21: ADCON2bits.ACQT = 0b110;
  6563   0032D2  50C0               	movf	192,w,c	;volatile
  6564   0032D4  0BC7               	andlw	-57
  6565   0032D6  0930               	iorlw	48
  6566   0032D8  6EC0               	movwf	192,c	;volatile
  6567   0032DA                     
  6568                           ; BSR set to: 15
  6569                           ;ADC.c: 22: ADCON0bits.ADON = 1;
  6570   0032DA  80C2               	bsf	194,0,c	;volatile
  6571   0032DC                     
  6572                           ; BSR set to: 15
  6573                           ;ADC.c: 25: uint16_t pot1, pot2;;ADC.c: 26: float voltage1, voltage2;;ADC.c: 27: char te
      +                          xt[17] = "";
  6574   0032DC  EE21  F09B         	lfsr	2,runADC@text
  6575   0032E0  0E10               	movlw	16
  6576   0032E2                     u9971:
  6577   0032E2  6ADE               	clrf	postinc2,c
  6578   0032E4  06E8               	decf	wreg,f,c
  6579   0032E6  E2FD               	bc	u9971
  6580   0032E8                     
  6581                           ; BSR set to: 15
  6582                           ;ADC.c: 28: uint8_t keepState = 1;
  6583   0032E8  0E01               	movlw	1
  6584   0032EA  0101               	movlb	1	; () banked
  6585   0032EC  6FB8               	movwf	runADC@keepState& (0+255),b
  6586                           
  6587                           ;ADC.c: 30: while(keepState){
  6588   0032EE  EF5F  F01A         	goto	l462
  6589   0032F2                     l8066:
  6590                           
  6591                           ; BSR set to: 1
  6592                           ;ADC.c: 32:     ADCON0bits.CHS = 5;
  6593   0032F2  50C2               	movf	194,w,c	;volatile
  6594   0032F4  0B83               	andlw	-125
  6595   0032F6  0914               	iorlw	20
  6596   0032F8  6EC2               	movwf	194,c	;volatile
  6597   0032FA                     
  6598                           ; BSR set to: 1
  6599                           ;ADC.c: 33:     GODONE = 1;
  6600   0032FA  82C2               	bsf	4034,1,c	;volatile
  6601   0032FC                     l464:
  6602   0032FC  B2C2               	btfsc	4034,1,c	;volatile
  6603   0032FE  EF83  F019         	goto	u9981
  6604   003302  EF85  F019         	goto	u9980
  6605   003306                     u9981:
  6606   003306  EF7E  F019         	goto	l464
  6607   00330A                     u9980:
  6608   00330A                     
  6609                           ;ADC.c: 35:     pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  6610   00330A  50C3               	movf	195,w,c	;volatile
  6611   00330C  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  6612   003310  0100               	movlb	0	; () banked
  6613   003312  6BE8               	clrf	(??_runADC+1)& (0+255),b
  6614   003314  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  6615   003318  6BE7               	clrf	??_runADC& (0+255),b
  6616   00331A  11E7               	iorwf	??_runADC& (0+255),w,b
  6617   00331C  0101               	movlb	1	; () banked
  6618   00331E  6FB4               	movwf	runADC@pot1& (0+255),b
  6619   003320  0100               	movlb	0	; () banked
  6620   003322  51E8               	movf	(??_runADC+1)& (0+255),w,b
  6621   003324  0101               	movlb	1	; () banked
  6622   003326  6FB5               	movwf	(runADC@pot1+1)& (0+255),b
  6623   003328                     
  6624                           ; BSR set to: 1
  6625                           ;ADC.c: 36:     voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  6626   003328  0E00               	movlw	0
  6627   00332A  6E31               	movwf	___fldiv@a^0,c
  6628   00332C  0EC0               	movlw	192
  6629   00332E  6E32               	movwf	(___fldiv@a+1)^0,c
  6630   003330  0E7F               	movlw	127
  6631   003332  6E33               	movwf	(___fldiv@a+2)^0,c
  6632   003334  0E44               	movlw	68
  6633   003336  6E34               	movwf	(___fldiv@a+3)^0,c
  6634   003338  C1B4  F006         	movff	runADC@pot1,___xxtofl@val
  6635   00333C  C1B5  F007         	movff	runADC@pot1+1,___xxtofl@val+1
  6636   003340  6A08               	clrf	(___xxtofl@val+2)^0,c
  6637   003342  6A09               	clrf	(___xxtofl@val+3)^0,c
  6638   003344  0E00               	movlw	0
  6639   003346  EC69  F01B         	call	___xxtofl
  6640   00334A  C006  F02D         	movff	?___xxtofl,___fldiv@b
  6641   00334E  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  6642   003352  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  6643   003356  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  6644   00335A  EC30  F011         	call	___fldiv	;wreg free
  6645   00335E  C02D  F014         	movff	?___fldiv,___flmul@b
  6646   003362  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  6647   003366  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  6648   00336A  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  6649   00336E  0E33               	movlw	51
  6650   003370  6E18               	movwf	___flmul@a^0,c
  6651   003372  0E33               	movlw	51
  6652   003374  6E19               	movwf	(___flmul@a+1)^0,c
  6653   003376  0E53               	movlw	83
  6654   003378  6E1A               	movwf	(___flmul@a+2)^0,c
  6655   00337A  0E40               	movlw	64
  6656   00337C  6E1B               	movwf	(___flmul@a+3)^0,c
  6657   00337E  EC3A  F00D         	call	___flmul	;wreg free
  6658   003382  C014  F1AC         	movff	?___flmul,runADC@voltage1
  6659   003386  C015  F1AD         	movff	?___flmul+1,runADC@voltage1+1
  6660   00338A  C016  F1AE         	movff	?___flmul+2,runADC@voltage1+2
  6661   00338E  C017  F1AF         	movff	?___flmul+3,runADC@voltage1+3
  6662   003392                     
  6663                           ;ADC.c: 39:     ADCON0bits.CHS = 4;
  6664   003392  50C2               	movf	194,w,c	;volatile
  6665   003394  0B83               	andlw	-125
  6666   003396  0910               	iorlw	16
  6667   003398  6EC2               	movwf	194,c	;volatile
  6668   00339A                     
  6669                           ;ADC.c: 40:     GODONE = 1;
  6670   00339A  82C2               	bsf	4034,1,c	;volatile
  6671   00339C                     l467:
  6672   00339C  B2C2               	btfsc	4034,1,c	;volatile
  6673   00339E  EFD3  F019         	goto	u9991
  6674   0033A2  EFD5  F019         	goto	u9990
  6675   0033A6                     u9991:
  6676   0033A6  EFCE  F019         	goto	l467
  6677   0033AA                     u9990:
  6678   0033AA                     
  6679                           ;ADC.c: 42:     pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  6680   0033AA  50C3               	movf	195,w,c	;volatile
  6681   0033AC  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  6682   0033B0  0100               	movlb	0	; () banked
  6683   0033B2  6BE8               	clrf	(??_runADC+1)& (0+255),b
  6684   0033B4  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  6685   0033B8  6BE7               	clrf	??_runADC& (0+255),b
  6686   0033BA  11E7               	iorwf	??_runADC& (0+255),w,b
  6687   0033BC  0101               	movlb	1	; () banked
  6688   0033BE  6FB6               	movwf	runADC@pot2& (0+255),b
  6689   0033C0  0100               	movlb	0	; () banked
  6690   0033C2  51E8               	movf	(??_runADC+1)& (0+255),w,b
  6691   0033C4  0101               	movlb	1	; () banked
  6692   0033C6  6FB7               	movwf	(runADC@pot2+1)& (0+255),b
  6693   0033C8                     
  6694                           ; BSR set to: 1
  6695                           ;ADC.c: 43:     voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  6696   0033C8  0E00               	movlw	0
  6697   0033CA  6E31               	movwf	___fldiv@a^0,c
  6698   0033CC  0EC0               	movlw	192
  6699   0033CE  6E32               	movwf	(___fldiv@a+1)^0,c
  6700   0033D0  0E7F               	movlw	127
  6701   0033D2  6E33               	movwf	(___fldiv@a+2)^0,c
  6702   0033D4  0E44               	movlw	68
  6703   0033D6  6E34               	movwf	(___fldiv@a+3)^0,c
  6704   0033D8  C1B6  F006         	movff	runADC@pot2,___xxtofl@val
  6705   0033DC  C1B7  F007         	movff	runADC@pot2+1,___xxtofl@val+1
  6706   0033E0  6A08               	clrf	(___xxtofl@val+2)^0,c
  6707   0033E2  6A09               	clrf	(___xxtofl@val+3)^0,c
  6708   0033E4  0E00               	movlw	0
  6709   0033E6  EC69  F01B         	call	___xxtofl
  6710   0033EA  C006  F02D         	movff	?___xxtofl,___fldiv@b
  6711   0033EE  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  6712   0033F2  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  6713   0033F6  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  6714   0033FA  EC30  F011         	call	___fldiv	;wreg free
  6715   0033FE  C02D  F014         	movff	?___fldiv,___flmul@b
  6716   003402  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  6717   003406  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  6718   00340A  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  6719   00340E  0E33               	movlw	51
  6720   003410  6E18               	movwf	___flmul@a^0,c
  6721   003412  0E33               	movlw	51
  6722   003414  6E19               	movwf	(___flmul@a+1)^0,c
  6723   003416  0E53               	movlw	83
  6724   003418  6E1A               	movwf	(___flmul@a+2)^0,c
  6725   00341A  0E40               	movlw	64
  6726   00341C  6E1B               	movwf	(___flmul@a+3)^0,c
  6727   00341E  EC3A  F00D         	call	___flmul	;wreg free
  6728   003422  C014  F1B0         	movff	?___flmul,runADC@voltage2
  6729   003426  C015  F1B1         	movff	?___flmul+1,runADC@voltage2+1
  6730   00342A  C016  F1B2         	movff	?___flmul+2,runADC@voltage2+2
  6731   00342E  C017  F1B3         	movff	?___flmul+3,runADC@voltage2+3
  6732   003432                     
  6733                           ;ADC.c: 45:     sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  6734   003432  0E9B               	movlw	low runADC@text
  6735   003434  0100               	movlb	0	; () banked
  6736   003436  6FCE               	movwf	sprintf@s& (0+255),b
  6737   003438  0E01               	movlw	high runADC@text
  6738   00343A  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  6739   00343C  0E24               	movlw	low STR_25
  6740   00343E  6FD0               	movwf	sprintf@fmt& (0+255),b
  6741   003440  0EFF               	movlw	high STR_25
  6742   003442  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  6743   003444  C1AC  F0D2         	movff	runADC@voltage1,?_sprintf+4
  6744   003448  C1AD  F0D3         	movff	runADC@voltage1+1,?_sprintf+5
  6745   00344C  C1AE  F0D4         	movff	runADC@voltage1+2,?_sprintf+6
  6746   003450  C1AF  F0D5         	movff	runADC@voltage1+3,?_sprintf+7
  6747   003454  C1B0  F0D6         	movff	runADC@voltage2,?_sprintf+8
  6748   003458  C1B1  F0D7         	movff	runADC@voltage2+1,?_sprintf+9
  6749   00345C  C1B2  F0D8         	movff	runADC@voltage2+2,?_sprintf+10
  6750   003460  C1B3  F0D9         	movff	runADC@voltage2+3,?_sprintf+11
  6751   003464  EC11  F027         	call	_sprintf	;wreg free
  6752   003468                     
  6753                           ;ADC.c: 46:     LCD_ShowString(2, text);
  6754   003468  0E9B               	movlw	low runADC@text
  6755   00346A  6E07               	movwf	LCD_ShowString@textData^0,c
  6756   00346C  0E01               	movlw	high runADC@text
  6757   00346E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  6758   003470  0E02               	movlw	2
  6759   003472  EC99  F023         	call	_LCD_ShowString
  6760   003476                     
  6761                           ;ADC.c: 48:     if(PORTAbits.RA2){
  6762   003476  A480               	btfss	128,2,c	;volatile
  6763   003478  EF40  F01A         	goto	u10001
  6764   00347C  EF42  F01A         	goto	u10000
  6765   003480                     u10001:
  6766   003480  EF5F  F01A         	goto	l462
  6767   003484                     u10000:
  6768   003484                     
  6769                           ;ADC.c: 49:         _delay((unsigned long)((50)*(32E6/4000.0)));
  6770   003484  0E03               	movlw	3
  6771   003486  0100               	movlb	0	; () banked
  6772   003488  6FE8               	movwf	(??_runADC+1)& (0+255),b
  6773   00348A  0E08               	movlw	8
  6774   00348C  6FE7               	movwf	??_runADC& (0+255),b
  6775   00348E  0E77               	movlw	119
  6776   003490                     u10397:
  6777   003490  2EE8               	decfsz	wreg,f,c
  6778   003492  D7FE               	bra	u10397
  6779   003494  2FE7               	decfsz	??_runADC& (0+255),f,b
  6780   003496  D7FC               	bra	u10397
  6781   003498  2FE8               	decfsz	(??_runADC+1)& (0+255),f,b
  6782   00349A  D7FA               	bra	u10397
  6783   00349C                     
  6784                           ;ADC.c: 50:         if(PORTAbits.RA2){
  6785   00349C  A480               	btfss	128,2,c	;volatile
  6786   00349E  EF53  F01A         	goto	u10011
  6787   0034A2  EF55  F01A         	goto	u10010
  6788   0034A6                     u10011:
  6789   0034A6  EF5F  F01A         	goto	l462
  6790   0034AA                     u10010:
  6791   0034AA                     l472:
  6792   0034AA  B480               	btfsc	128,2,c	;volatile
  6793   0034AC  EF5A  F01A         	goto	u10021
  6794   0034B0  EF5C  F01A         	goto	u10020
  6795   0034B4                     u10021:
  6796   0034B4  EF55  F01A         	goto	l472
  6797   0034B8                     u10020:
  6798   0034B8                     
  6799                           ;ADC.c: 52:             keepState = 0;
  6800   0034B8  0E00               	movlw	0
  6801   0034BA  0101               	movlb	1	; () banked
  6802   0034BC  6FB8               	movwf	runADC@keepState& (0+255),b
  6803   0034BE                     l462:
  6804                           
  6805                           ;ADC.c: 30: while(keepState){
  6806   0034BE  0101               	movlb	1	; () banked
  6807   0034C0  51B8               	movf	runADC@keepState& (0+255),w,b
  6808   0034C2  A4D8               	btfss	status,2,c
  6809   0034C4  EF66  F01A         	goto	u10031
  6810   0034C8  EF68  F01A         	goto	u10030
  6811   0034CC                     u10031:
  6812   0034CC  EF79  F019         	goto	l8066
  6813   0034D0                     u10030:
  6814   0034D0                     
  6815                           ; BSR set to: 1
  6816                           ;ADC.c: 58: ADCON0bits.ADON = 0;
  6817   0034D0  90C2               	bcf	194,0,c	;volatile
  6818   0034D2                     
  6819                           ; BSR set to: 1
  6820   0034D2  0012               	return		;funcret
  6821   0034D4                     __end_of_runADC:
  6822                           	callstack 0
  6823                           
  6824 ;; *************** function ___xxtofl *****************
  6825 ;; Defined at:
  6826 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\xxtofl.c"
  6827 ;; Parameters:    Size  Location     Type
  6828 ;;  sign            1    wreg     unsigned char 
  6829 ;;  val             4    5[COMRAM] long 
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;  sign            1   13[COMRAM] unsigned char 
  6832 ;;  arg             4   15[COMRAM] unsigned long 
  6833 ;;  exp             1   14[COMRAM] unsigned char 
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  4    5[COMRAM] unsigned char 
  6836 ;; Registers used:
  6837 ;;		wreg, status,2, status,0
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6844 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6846 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6847 ;;Total ram usage:       14 bytes
  6848 ;; Hardware stack levels used: 1
  6849 ;; Hardware stack levels required when called: 1
  6850 ;; This function calls:
  6851 ;;		Nothing
  6852 ;; This function is called by:
  6853 ;;		_runDAC
  6854 ;;		_runADC
  6855 ;;		___rem_pio2f
  6856 ;; This function uses a non-reentrant model
  6857 ;;
  6858                           
  6859                           	psect	text25
  6860   0036D2                     __ptext25:
  6861                           	callstack 0
  6862   0036D2                     ___xxtofl:
  6863                           	callstack 26
  6864                           
  6865                           ; BSR set to: 1
  6866                           ;incstack = 0
  6867                           ;___xxtofl@sign stored from wreg
  6868   0036D2  6E0E               	movwf	___xxtofl@sign^0,c
  6869   0036D4  500E               	movf	___xxtofl@sign^0,w,c
  6870   0036D6  B4D8               	btfsc	status,2,c
  6871   0036D8  EF70  F01B         	goto	u8991
  6872   0036DC  EF72  F01B         	goto	u8990
  6873   0036E0                     u8991:
  6874   0036E0  EF94  F01B         	goto	l1361
  6875   0036E4                     u8990:
  6876   0036E4  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  6877   0036E6  EF79  F01B         	goto	u9000
  6878   0036EA  EF77  F01B         	goto	u9001
  6879   0036EE                     u9001:
  6880   0036EE  EF94  F01B         	goto	l1361
  6881   0036F2                     u9000:
  6882   0036F2  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  6883   0036F6  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  6884   0036FA  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  6885   0036FE  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  6886   003702  1E0A               	comf	??___xxtofl^0,f,c
  6887   003704  1E0B               	comf	(??___xxtofl+1)^0,f,c
  6888   003706  1E0C               	comf	(??___xxtofl+2)^0,f,c
  6889   003708  1E0D               	comf	(??___xxtofl+3)^0,f,c
  6890   00370A  2A0A               	incf	??___xxtofl^0,f,c
  6891   00370C  0E00               	movlw	0
  6892   00370E  220B               	addwfc	(??___xxtofl+1)^0,f,c
  6893   003710  220C               	addwfc	(??___xxtofl+2)^0,f,c
  6894   003712  220D               	addwfc	(??___xxtofl+3)^0,f,c
  6895   003714  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  6896   003718  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  6897   00371C  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  6898   003720  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  6899   003724  EF9C  F01B         	goto	l7370
  6900   003728                     l1361:
  6901   003728  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  6902   00372C  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6903   003730  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6904   003734  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6905   003738                     l7370:
  6906   003738  5006               	movf	___xxtofl@val^0,w,c
  6907   00373A  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  6908   00373C  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  6909   00373E  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  6910   003740  A4D8               	btfss	status,2,c
  6911   003742  EFA5  F01B         	goto	u9011
  6912   003746  EFA7  F01B         	goto	u9010
  6913   00374A                     u9011:
  6914   00374A  EFB1  F01B         	goto	l7376
  6915   00374E                     u9010:
  6916   00374E  0E00               	movlw	0
  6917   003750  6E06               	movwf	?___xxtofl^0,c
  6918   003752  0E00               	movlw	0
  6919   003754  6E07               	movwf	(?___xxtofl+1)^0,c
  6920   003756  0E00               	movlw	0
  6921   003758  6E08               	movwf	(?___xxtofl+2)^0,c
  6922   00375A  0E00               	movlw	0
  6923   00375C  6E09               	movwf	(?___xxtofl+3)^0,c
  6924   00375E  EF42  F01C         	goto	l1364
  6925   003762                     l7376:
  6926   003762  0E96               	movlw	150
  6927   003764  6E0F               	movwf	___xxtofl@exp^0,c
  6928   003766  EFBB  F01B         	goto	l7380
  6929   00376A                     l7378:
  6930   00376A  2A0F               	incf	___xxtofl@exp^0,f,c
  6931   00376C  90D8               	bcf	status,0,c
  6932   00376E  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  6933   003770  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  6934   003772  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  6935   003774  3210               	rrcf	___xxtofl@arg^0,f,c
  6936   003776                     l7380:
  6937   003776  0E00               	movlw	0
  6938   003778  1410               	andwf	___xxtofl@arg^0,w,c
  6939   00377A  6E0A               	movwf	??___xxtofl^0,c
  6940   00377C  0E00               	movlw	0
  6941   00377E  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  6942   003780  6E0B               	movwf	(??___xxtofl+1)^0,c
  6943   003782  0E00               	movlw	0
  6944   003784  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  6945   003786  6E0C               	movwf	(??___xxtofl+2)^0,c
  6946   003788  0EFE               	movlw	254
  6947   00378A  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  6948   00378C  6E0D               	movwf	(??___xxtofl+3)^0,c
  6949   00378E  500A               	movf	??___xxtofl^0,w,c
  6950   003790  100B               	iorwf	(??___xxtofl+1)^0,w,c
  6951   003792  100C               	iorwf	(??___xxtofl+2)^0,w,c
  6952   003794  100D               	iorwf	(??___xxtofl+3)^0,w,c
  6953   003796  A4D8               	btfss	status,2,c
  6954   003798  EFD0  F01B         	goto	u9021
  6955   00379C  EFD2  F01B         	goto	u9020
  6956   0037A0                     u9021:
  6957   0037A0  EFB5  F01B         	goto	l7378
  6958   0037A4                     u9020:
  6959   0037A4  EFE0  F01B         	goto	l1368
  6960   0037A8                     l7382:
  6961   0037A8  2A0F               	incf	___xxtofl@exp^0,f,c
  6962   0037AA  0E01               	movlw	1
  6963   0037AC  2610               	addwf	___xxtofl@arg^0,f,c
  6964   0037AE  0E00               	movlw	0
  6965   0037B0  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  6966   0037B2  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  6967   0037B4  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  6968   0037B6  90D8               	bcf	status,0,c
  6969   0037B8  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  6970   0037BA  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  6971   0037BC  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  6972   0037BE  3210               	rrcf	___xxtofl@arg^0,f,c
  6973   0037C0                     l1368:
  6974   0037C0  0E00               	movlw	0
  6975   0037C2  1410               	andwf	___xxtofl@arg^0,w,c
  6976   0037C4  6E0A               	movwf	??___xxtofl^0,c
  6977   0037C6  0E00               	movlw	0
  6978   0037C8  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  6979   0037CA  6E0B               	movwf	(??___xxtofl+1)^0,c
  6980   0037CC  0E00               	movlw	0
  6981   0037CE  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  6982   0037D0  6E0C               	movwf	(??___xxtofl+2)^0,c
  6983   0037D2  0EFF               	movlw	255
  6984   0037D4  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  6985   0037D6  6E0D               	movwf	(??___xxtofl+3)^0,c
  6986   0037D8  500A               	movf	??___xxtofl^0,w,c
  6987   0037DA  100B               	iorwf	(??___xxtofl+1)^0,w,c
  6988   0037DC  100C               	iorwf	(??___xxtofl+2)^0,w,c
  6989   0037DE  100D               	iorwf	(??___xxtofl+3)^0,w,c
  6990   0037E0  A4D8               	btfss	status,2,c
  6991   0037E2  EFF5  F01B         	goto	u9031
  6992   0037E6  EFF7  F01B         	goto	u9030
  6993   0037EA                     u9031:
  6994   0037EA  EFD4  F01B         	goto	l7382
  6995   0037EE                     u9030:
  6996   0037EE  EFFF  F01B         	goto	l7390
  6997   0037F2                     l7388:
  6998   0037F2  060F               	decf	___xxtofl@exp^0,f,c
  6999   0037F4  90D8               	bcf	status,0,c
  7000   0037F6  3610               	rlcf	___xxtofl@arg^0,f,c
  7001   0037F8  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  7002   0037FA  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  7003   0037FC  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  7004   0037FE                     l7390:
  7005   0037FE  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  7006   003800  EF04  F01C         	goto	u9041
  7007   003804  EF06  F01C         	goto	u9040
  7008   003808                     u9041:
  7009   003808  EF0E  F01C         	goto	l1375
  7010   00380C                     u9040:
  7011   00380C  0E02               	movlw	2
  7012   00380E  600F               	cpfslt	___xxtofl@exp^0,c
  7013   003810  EF0C  F01C         	goto	u9051
  7014   003814  EF0E  F01C         	goto	u9050
  7015   003818                     u9051:
  7016   003818  EFF9  F01B         	goto	l7388
  7017   00381C                     u9050:
  7018   00381C                     l1375:
  7019   00381C  B00F               	btfsc	___xxtofl@exp^0,0,c
  7020   00381E  EF13  F01C         	goto	u9061
  7021   003822  EF15  F01C         	goto	u9060
  7022   003826                     u9061:
  7023   003826  EF16  F01C         	goto	l7396
  7024   00382A                     u9060:
  7025   00382A  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  7026   00382C                     l7396:
  7027   00382C  90D8               	bcf	status,0,c
  7028   00382E  320F               	rrcf	___xxtofl@exp^0,f,c
  7029   003830  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  7030   003834  6A0B               	clrf	(??___xxtofl+1)^0,c
  7031   003836  6A0C               	clrf	(??___xxtofl+2)^0,c
  7032   003838  6A0D               	clrf	(??___xxtofl+3)^0,c
  7033   00383A  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  7034   00383E  6A0C               	clrf	(??___xxtofl+2)^0,c
  7035   003840  6A0B               	clrf	(??___xxtofl+1)^0,c
  7036   003842  6A0A               	clrf	??___xxtofl^0,c
  7037   003844  500A               	movf	??___xxtofl^0,w,c
  7038   003846  1210               	iorwf	___xxtofl@arg^0,f,c
  7039   003848  500B               	movf	(??___xxtofl+1)^0,w,c
  7040   00384A  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  7041   00384C  500C               	movf	(??___xxtofl+2)^0,w,c
  7042   00384E  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  7043   003850  500D               	movf	(??___xxtofl+3)^0,w,c
  7044   003852  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  7045   003854  500E               	movf	___xxtofl@sign^0,w,c
  7046   003856  B4D8               	btfsc	status,2,c
  7047   003858  EF30  F01C         	goto	u9071
  7048   00385C  EF32  F01C         	goto	u9070
  7049   003860                     u9071:
  7050   003860  EF3A  F01C         	goto	l7406
  7051   003864                     u9070:
  7052   003864  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7053   003866  EF39  F01C         	goto	u9080
  7054   00386A  EF37  F01C         	goto	u9081
  7055   00386E                     u9081:
  7056   00386E  EF3A  F01C         	goto	l7406
  7057   003872                     u9080:
  7058   003872  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  7059   003874                     l7406:
  7060   003874  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  7061   003878  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  7062   00387C  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  7063   003880  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  7064   003884                     l1364:
  7065   003884  0012               	return		;funcret
  7066   003886                     __end_of___xxtofl:
  7067                           	callstack 0
  7068                           
  7069 ;; *************** function _moveDisplay *****************
  7070 ;; Defined at:
  7071 ;;		line 11 in file "menu.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  menuI           1    wreg     unsigned char 
  7074 ;;  where           1  135[BANK0 ] unsigned char 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  menuI           1   50[BANK1 ] unsigned char 
  7077 ;;  menuItem2      17   17[BANK1 ] unsigned char [17]
  7078 ;;  menuItem1      17    0[BANK1 ] unsigned char [17]
  7079 ;;  menuItems      16   34[BANK1 ] PTR unsigned char [8]
  7080 ;;		 -> STR_22(1), STR_21(6), STR_20(5), STR_19(4), 
  7081 ;;		 -> STR_18(4), STR_17(4), STR_16(5), STR_15(5), 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  1    wreg      unsigned char 
  7084 ;; Registers used:
  7085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7091 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7092 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7093 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7094 ;;      Totals:         0       3      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7095 ;;Total ram usage:       54 bytes
  7096 ;; Hardware stack levels used: 1
  7097 ;; Hardware stack levels required when called: 9
  7098 ;; This function calls:
  7099 ;;		_LCD_Clear
  7100 ;;		_LCD_ShowString
  7101 ;;		_sprintf
  7102 ;; This function is called by:
  7103 ;;		_main
  7104 ;; This function uses a non-reentrant model
  7105 ;;
  7106                           
  7107                           	psect	text26
  7108   003FBE                     __ptext26:
  7109                           	callstack 0
  7110   003FBE                     _moveDisplay:
  7111                           	callstack 21
  7112                           
  7113                           ;incstack = 0
  7114                           ;moveDisplay@menuI stored from wreg
  7115   003FBE  0101               	movlb	1	; () banked
  7116   003FC0  6FCD               	movwf	moveDisplay@menuI& (0+255),b
  7117   003FC2                     
  7118                           ;menu.c: 12:     LCD_Clear();
  7119   003FC2  ECC9  F027         	call	_LCD_Clear	;wreg free
  7120   003FC6                     
  7121                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  7122   003FC6  EE21  F0CE         	lfsr	2,moveDisplay@F6965
  7123   003FCA  EE11  F0BD         	lfsr	1,moveDisplay@menuItems
  7124   003FCE  0E0F               	movlw	15
  7125   003FD0                     u9681:
  7126   003FD0  CFDB FFE3          	movff	plusw2,plusw1
  7127   003FD4  06E8               	decf	wreg,f,c
  7128   003FD6  E2FC               	bc	u9681
  7129                           
  7130                           ;menu.c: 14:     switch (where){
  7131   003FD8  EF06  F020         	goto	l7892
  7132   003FDC                     l7882:
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;menu.c: 18:             if(menuI<6){
  7136   003FDC  0E06               	movlw	6
  7137   003FDE  0101               	movlb	1	; () banked
  7138   003FE0  61CD               	cpfslt	moveDisplay@menuI& (0+255),b
  7139   003FE2  EFF5  F01F         	goto	u9691
  7140   003FE6  EFF7  F01F         	goto	u9690
  7141   003FEA                     u9691:
  7142   003FEA  EF16  F020         	goto	l7894
  7143   003FEE                     u9690:
  7144   003FEE                     
  7145                           ; BSR set to: 1
  7146                           ;menu.c: 19:             menuI++;
  7147   003FEE  2BCD               	incf	moveDisplay@menuI& (0+255),f,b
  7148   003FF0  EF16  F020         	goto	l7894
  7149   003FF4                     l7886:
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;menu.c: 23:             if(menuI>0){
  7153   003FF4  0101               	movlb	1	; () banked
  7154   003FF6  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7155   003FF8  B4D8               	btfsc	status,2,c
  7156   003FFA  EF01  F020         	goto	u9701
  7157   003FFE  EF03  F020         	goto	u9700
  7158   004002                     u9701:
  7159   004002  EF16  F020         	goto	l7894
  7160   004006                     u9700:
  7161   004006                     
  7162                           ; BSR set to: 1
  7163                           ;menu.c: 24:             menuI--;
  7164   004006  07CD               	decf	moveDisplay@menuI& (0+255),f,b
  7165   004008  EF16  F020         	goto	l7894
  7166   00400C                     l7892:
  7167   00400C  0100               	movlb	0	; () banked
  7168   00400E  51E7               	movf	moveDisplay@where& (0+255),w,b
  7169                           
  7170                           ; Switch size 1, requested type "simple"
  7171                           ; Number of cases is 3, Range of values is 0 to 2
  7172                           ; switch strategies available:
  7173                           ; Name         Instructions Cycles
  7174                           ; simple_byte           10     6 (average)
  7175                           ;	Chosen strategy is simple_byte
  7176   004010  0A00               	xorlw	0	; case 0
  7177   004012  B4D8               	btfsc	status,2,c
  7178   004014  EF16  F020         	goto	l7894
  7179   004018  0A01               	xorlw	1	; case 1
  7180   00401A  B4D8               	btfsc	status,2,c
  7181   00401C  EFEE  F01F         	goto	l7882
  7182   004020  0A03               	xorlw	3	; case 2
  7183   004022  B4D8               	btfsc	status,2,c
  7184   004024  EFFA  F01F         	goto	l7886
  7185   004028  EF16  F020         	goto	l7894
  7186   00402C                     l7894:
  7187                           
  7188                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  7189   00402C  0E9B               	movlw	low moveDisplay@menuItem1
  7190   00402E  0100               	movlb	0	; () banked
  7191   004030  6FCE               	movwf	sprintf@s& (0+255),b
  7192   004032  0E01               	movlw	high moveDisplay@menuItem1
  7193   004034  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7194   004036  0ECC               	movlw	low STR_23
  7195   004038  6FD0               	movwf	sprintf@fmt& (0+255),b
  7196   00403A  0EFF               	movlw	high STR_23
  7197   00403C  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7198   00403E  0E00               	movlw	0
  7199   004040  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7200   004042  0E0F               	movlw	15
  7201   004044  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7202   004046  0101               	movlb	1	; () banked
  7203   004048  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7204   00404A  0D02               	mullw	2
  7205   00404C  0EBD               	movlw	low moveDisplay@menuItems
  7206   00404E  24F3               	addwf	243,w,c
  7207   004050  6ED9               	movwf	fsr2l,c
  7208   004052  0E01               	movlw	high moveDisplay@menuItems
  7209   004054  20F4               	addwfc	prodh,w,c
  7210   004056  6EDA               	movwf	fsr2h,c
  7211   004058  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7212   00405C  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7213   004060  EC11  F027         	call	_sprintf	;wreg free
  7214                           
  7215                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  7216   004064  0EAC               	movlw	low moveDisplay@menuItem2
  7217   004066  0100               	movlb	0	; () banked
  7218   004068  6FCE               	movwf	sprintf@s& (0+255),b
  7219   00406A  0E01               	movlw	high moveDisplay@menuItem2
  7220   00406C  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7221   00406E  0ECD               	movlw	low (STR_23+1)
  7222   004070  6FD0               	movwf	sprintf@fmt& (0+255),b
  7223   004072  0EFF               	movlw	high (STR_23+1)
  7224   004074  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7225   004076  0E00               	movlw	0
  7226   004078  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7227   00407A  0E10               	movlw	16
  7228   00407C  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7229   00407E  0101               	movlb	1	; () banked
  7230   004080  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7231   004082  0100               	movlb	0	; () banked
  7232   004084  6FE8               	movwf	??_moveDisplay& (0+255),b
  7233   004086  6BE9               	clrf	(??_moveDisplay+1)& (0+255),b
  7234   004088  90D8               	bcf	status,0,c
  7235   00408A  37E8               	rlcf	??_moveDisplay& (0+255),f,b
  7236   00408C  37E9               	rlcf	(??_moveDisplay+1)& (0+255),f,b
  7237   00408E  0E02               	movlw	2
  7238   004090  27E8               	addwf	??_moveDisplay& (0+255),f,b
  7239   004092  0E00               	movlw	0
  7240   004094  23E9               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  7241   004096  0EBD               	movlw	low moveDisplay@menuItems
  7242   004098  25E8               	addwf	??_moveDisplay& (0+255),w,b
  7243   00409A  6ED9               	movwf	fsr2l,c
  7244   00409C  0E01               	movlw	high moveDisplay@menuItems
  7245   00409E  21E9               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  7246   0040A0  6EDA               	movwf	fsr2h,c
  7247   0040A2  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7248   0040A6  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7249   0040AA  EC11  F027         	call	_sprintf	;wreg free
  7250   0040AE                     
  7251                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  7252   0040AE  0E9B               	movlw	low moveDisplay@menuItem1
  7253   0040B0  6E07               	movwf	LCD_ShowString@textData^0,c
  7254   0040B2  0E01               	movlw	high moveDisplay@menuItem1
  7255   0040B4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7256   0040B6  0E01               	movlw	1
  7257   0040B8  EC99  F023         	call	_LCD_ShowString
  7258   0040BC                     
  7259                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  7260   0040BC  0EAC               	movlw	low moveDisplay@menuItem2
  7261   0040BE  6E07               	movwf	LCD_ShowString@textData^0,c
  7262   0040C0  0E01               	movlw	high moveDisplay@menuItem2
  7263   0040C2  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7264   0040C4  0E02               	movlw	2
  7265   0040C6  EC99  F023         	call	_LCD_ShowString
  7266   0040CA                     
  7267                           ;menu.c: 35:     return menuI;
  7268   0040CA  0101               	movlb	1	; () banked
  7269   0040CC  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7270   0040CE                     
  7271                           ; BSR set to: 1
  7272   0040CE  0012               	return		;funcret
  7273   0040D0                     __end_of_moveDisplay:
  7274                           	callstack 0
  7275                           
  7276 ;; *************** function _sprintf *****************
  7277 ;; Defined at:
  7278 ;;		line 9 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_sprintf.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;  s               2  110[BANK0 ] PTR unsigned char 
  7281 ;;		 -> runGAME@approxText(17), runGAME@text(17), runADC@text(17), moveDisplay@menuItem2(17), 
  7282 ;;		 -> moveDisplay@menuItem1(17), 
  7283 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  7284 ;;		 -> STR_29(19), STR_28(17), STR_27(19), STR_25(19), 
  7285 ;;		 -> STR_24(5), STR_23(6), 
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;  f              12  123[BANK0 ] struct _IO_FILE
  7288 ;;  ret             2    0        int 
  7289 ;;  ap              1  122[BANK0 ] PTR void [1]
  7290 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  2  110[BANK0 ] int 
  7293 ;; Registers used:
  7294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7300 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7301 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7303 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7304 ;;Total ram usage:       25 bytes
  7305 ;; Hardware stack levels used: 1
  7306 ;; Hardware stack levels required when called: 8
  7307 ;; This function calls:
  7308 ;;		_vfprintf
  7309 ;; This function is called by:
  7310 ;;		_moveDisplay
  7311 ;;		_runADC
  7312 ;;		_runGAME
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316                           	psect	text27
  7317   004E22                     __ptext27:
  7318                           	callstack 0
  7319   004E22                     _sprintf:
  7320                           	callstack 21
  7321   004E22  0ED2               	movlw	low (?_sprintf+4)
  7322   004E24  0100               	movlb	0	; () banked
  7323   004E26  6FDA               	movwf	sprintf@ap& (0+255),b
  7324   004E28  C0CE  F0DB         	movff	sprintf@s,sprintf@f
  7325   004E2C  C0CF  F0DC         	movff	sprintf@s+1,sprintf@f+1
  7326   004E30                     
  7327                           ; BSR set to: 0
  7328   004E30  0E00               	movlw	0
  7329   004E32  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  7330   004E34  0E00               	movlw	0
  7331   004E36  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  7332   004E38                     
  7333                           ; BSR set to: 0
  7334   004E38  0E00               	movlw	0
  7335   004E3A  6FE6               	movwf	(sprintf@f+11)& (0+255),b
  7336   004E3C  0E00               	movlw	0
  7337   004E3E  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  7338   004E40                     
  7339                           ; BSR set to: 0
  7340   004E40  0EDB               	movlw	low sprintf@f
  7341   004E42  6FC7               	movwf	vfprintf@fp& (0+255),b
  7342   004E44  6BC8               	clrf	(vfprintf@fp+1)& (0+255),b
  7343   004E46  C0D0  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  7344   004E4A  C0D1  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7345   004E4E  0EDA               	movlw	low sprintf@ap
  7346   004E50  6FCB               	movwf	vfprintf@ap& (0+255),b
  7347   004E52  ECC8  F026         	call	_vfprintf	;wreg free
  7348   004E56  0100               	movlb	0	; () banked
  7349   004E58  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  7350   004E5A  25CE               	addwf	sprintf@s& (0+255),w,b
  7351   004E5C  6ED9               	movwf	fsr2l,c
  7352   004E5E  51DF               	movf	(sprintf@f+4)& (0+255),w,b
  7353   004E60  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  7354   004E62  6EDA               	movwf	fsr2h,c
  7355   004E64  6ADF               	clrf	indf2,c
  7356   004E66                     
  7357                           ; BSR set to: 0
  7358   004E66  0012               	return		;funcret
  7359   004E68                     __end_of_sprintf:
  7360                           	callstack 0
  7361                           
  7362 ;; *************** function _vfprintf *****************
  7363 ;; Defined at:
  7364 ;;		line 1817 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  7367 ;;		 -> NULL(0), sprintf@f(12), 
  7368 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  7369 ;;		 -> STR_29(19), STR_28(17), STR_27(19), STR_26(5), 
  7370 ;;		 -> STR_25(19), STR_24(5), STR_23(6), STR_14(5), 
  7371 ;;  ap              1  107[BANK0 ] PTR PTR void 
  7372 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  7375 ;;		 -> STR_29(19), STR_28(17), STR_27(19), STR_26(5), 
  7376 ;;		 -> STR_25(19), STR_24(5), STR_23(6), STR_14(5), 
  7377 ;; Return value:  Size  Location     Type
  7378 ;;                  2  103[BANK0 ] int 
  7379 ;; Registers used:
  7380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7381 ;; Tracked objects:
  7382 ;;		On entry : 0/0
  7383 ;;		On exit  : 0/0
  7384 ;;		Unchanged: 0/0
  7385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7386 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7387 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7389 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7390 ;;Total ram usage:        7 bytes
  7391 ;; Hardware stack levels used: 1
  7392 ;; Hardware stack levels required when called: 7
  7393 ;; This function calls:
  7394 ;;		_vfpfcnvrt
  7395 ;; This function is called by:
  7396 ;;		_sprintf
  7397 ;;		_printf
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           	psect	text28
  7402   004D90                     __ptext28:
  7403                           	callstack 0
  7404   004D90                     _vfprintf:
  7405                           	callstack 21
  7406   004D90                     
  7407                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE *fp, const 
      +                          char *fmt, va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1818: {;D:\MP
      +                          LABX\Compiler\pic\sources\c99\common\doprnt.c: 1820:     char *cfmt;;D:\MPLABX\Compiler\
      +                          pic\sources\c99\common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7408   004D90  C0C9  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  7409   004D94  C0CA  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7410                           
  7411                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  7412   004D98  EFD9  F026         	goto	l7588
  7413   004D9C                     l7586:
  7414                           
  7415                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt, ap);
  7416   004D9C  C0C7  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  7417   004DA0  C0C8  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7418   004DA4  0ECC               	movlw	low vfprintf@cfmt
  7419   004DA6  0100               	movlb	0	; () banked
  7420   004DA8  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  7421   004DAA  C0CB  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  7422   004DAE  ECA6  F005         	call	_vfpfcnvrt	;wreg free
  7423   004DB2                     l7588:
  7424                           
  7425                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  7426   004DB2  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  7427   004DB6  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7428   004DBA                     	if	0	;tblptru may be non-zero
  7429   004DBA                     	endif
  7430   004DBA                     	if	0	;tblptru may be non-zero
  7431   004DBA                     	endif
  7432   004DBA  0008               	tblrd		*
  7433   004DBC  50F5               	movf	tablat,w,c
  7434   004DBE  0900               	iorlw	0
  7435   004DC0  A4D8               	btfss	status,2,c
  7436   004DC2  EFE5  F026         	goto	u9261
  7437   004DC6  EFE7  F026         	goto	u9260
  7438   004DCA                     u9261:
  7439   004DCA  EFCE  F026         	goto	l7586
  7440   004DCE                     u9260:
  7441   004DCE                     
  7442                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  7443   004DCE  0E00               	movlw	0
  7444   004DD0  0100               	movlb	0	; () banked
  7445   004DD2  6FC8               	movwf	(?_vfprintf+1)& (0+255),b
  7446   004DD4  0E00               	movlw	0
  7447   004DD6  6FC7               	movwf	?_vfprintf& (0+255),b
  7448   004DD8                     
  7449                           ; BSR set to: 0
  7450   004DD8  0012               	return		;funcret
  7451   004DDA                     __end_of_vfprintf:
  7452                           	callstack 0
  7453                           
  7454 ;; *************** function _vfpfcnvrt *****************
  7455 ;; Defined at:
  7456 ;;		line 1177 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  7459 ;;		 -> NULL(0), sprintf@f(12), 
  7460 ;;  fmt             1   91[BANK0 ] PTR PTR unsigned char 
  7461 ;;		 -> vfprintf@cfmt(2), 
  7462 ;;  ap              1   92[BANK0 ] PTR PTR void 
  7463 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;  convarg         4   96[BANK0 ] struct .
  7466 ;;  cp              2  101[BANK0 ] PTR unsigned char 
  7467 ;;		 -> STR_29(19), STR_28(17), STR_27(19), STR_26(5), 
  7468 ;;		 -> STR_25(19), STR_24(5), STR_23(6), STR_14(5), 
  7469 ;;  c               1  100[BANK0 ] unsigned char 
  7470 ;;  done            1   95[BANK0 ] _Bool 
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  1    wreg      void 
  7473 ;; Registers used:
  7474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7480 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7481 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7482 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7483 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7484 ;;Total ram usage:       14 bytes
  7485 ;; Hardware stack levels used: 1
  7486 ;; Hardware stack levels required when called: 6
  7487 ;; This function calls:
  7488 ;;		_dtoa
  7489 ;;		_efgtoa
  7490 ;;		_fputc
  7491 ;;		_read_prec_or_width
  7492 ;;		_stoa
  7493 ;;		_utoa
  7494 ;; This function is called by:
  7495 ;;		_vfprintf
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text29
  7500   000B4C                     __ptext29:
  7501                           	callstack 0
  7502   000B4C                     _vfpfcnvrt:
  7503                           	callstack 21
  7504   000B4C                     
  7505                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1178: {;D:\MPLABX\Co
      +                          mpiler\pic\sources\c99\common\doprnt.c: 1179:     char c, *cp;;D:\MPLABX\Compiler\pic\so
      +                          urces\c99\common\doprnt.c: 1180:     _Bool done;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1188:  } convarg;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1201:
      +                               if ((*fmt)[0] == '%') {
  7506   000B4C  0100               	movlb	0	; () banked
  7507   000B4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7508   000B50  6ED9               	movwf	fsr2l,c
  7509   000B52  6ADA               	clrf	fsr2h,c
  7510   000B54  CFDE FFF6          	movff	postinc2,tblptrl
  7511   000B58  CFDD FFF7          	movff	postdec2,tblptrh
  7512   000B5C                     	if	0	;tblptru may be non-zero
  7513   000B5C                     	endif
  7514   000B5C                     	if	0	;tblptru may be non-zero
  7515   000B5C                     	endif
  7516   000B5C  0008               	tblrd		*
  7517   000B5E  50F5               	movf	tablat,w,c
  7518   000B60  0A25               	xorlw	37
  7519   000B62  A4D8               	btfss	status,2,c
  7520   000B64  EFB6  F005         	goto	u9091
  7521   000B68  EFB8  F005         	goto	u9090
  7522   000B6C                     u9091:
  7523   000B6C  EF40  F008         	goto	l7558
  7524   000B70                     u9090:
  7525   000B70                     
  7526                           ; BSR set to: 0
  7527                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  7528   000B70  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7529   000B72  6ED9               	movwf	fsr2l,c
  7530   000B74  6ADA               	clrf	fsr2h,c
  7531   000B76  2ADE               	incf	postinc2,f,c
  7532   000B78  0E00               	movlw	0
  7533   000B7A  22DD               	addwfc	postdec2,f,c
  7534   000B7C                     
  7535                           ; BSR set to: 0
  7536                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1204:         flags = width = 0;
  7537   000B7C  0E00               	movlw	0
  7538   000B7E  6E56               	movwf	(_width+1)^0,c
  7539   000B80  0E00               	movlw	0
  7540   000B82  6E55               	movwf	_width^0,c
  7541   000B84  C055  F059         	movff	_width,_flags
  7542   000B88                     
  7543                           ; BSR set to: 0
  7544                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1205:         prec = -1;
  7545   000B88  6857               	setf	_prec^0,c
  7546   000B8A  6858               	setf	(_prec+1)^0,c
  7547   000B8C                     
  7548                           ; BSR set to: 0
  7549                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1209:         done = 0;
  7550   000B8C  0E00               	movlw	0
  7551   000B8E  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  7552                           
  7553                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  7554   000B90  EFE6  F005         	goto	l7430
  7555   000B94                     l7420:
  7556                           
  7557                           ; BSR set to: 0
  7558                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1214:                     flags |= 
      +                          (1 << 0);
  7559   000B94  8059               	bsf	_flags^0,0,c
  7560   000B96                     
  7561                           ; BSR set to: 0
  7562                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1215:                     ++*fmt;
  7563   000B96  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7564   000B98  6ED9               	movwf	fsr2l,c
  7565   000B9A  6ADA               	clrf	fsr2h,c
  7566   000B9C  2ADE               	incf	postinc2,f,c
  7567   000B9E  0E00               	movlw	0
  7568   000BA0  22DD               	addwfc	postdec2,f,c
  7569                           
  7570                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1216:                     break;
  7571   000BA2  EFE6  F005         	goto	l7430
  7572   000BA6                     l7424:
  7573                           
  7574                           ; BSR set to: 0
  7575                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1243:                     done = 1;
  7576   000BA6  0E01               	movlw	1
  7577   000BA8  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  7578                           
  7579                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1244:                     break;
  7580   000BAA  EFE6  F005         	goto	l7430
  7581   000BAE                     l7428:
  7582                           
  7583                           ; BSR set to: 0
  7584   000BAE  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7585   000BB0  6ED9               	movwf	fsr2l,c
  7586   000BB2  6ADA               	clrf	fsr2h,c
  7587   000BB4  CFDE FFF6          	movff	postinc2,tblptrl
  7588   000BB8  CFDD FFF7          	movff	postdec2,tblptrh
  7589   000BBC                     	if	0	;tblptru may be non-zero
  7590   000BBC                     	endif
  7591   000BBC                     	if	0	;tblptru may be non-zero
  7592   000BBC                     	endif
  7593   000BBC  0008               	tblrd		*
  7594   000BBE  50F5               	movf	tablat,w,c
  7595                           
  7596                           ; Switch size 1, requested type "simple"
  7597                           ; Number of cases is 1, Range of values is 45 to 45
  7598                           ; switch strategies available:
  7599                           ; Name         Instructions Cycles
  7600                           ; simple_byte            4     3 (average)
  7601                           ;	Chosen strategy is simple_byte
  7602   000BC0  0A2D               	xorlw	45	; case 45
  7603   000BC2  B4D8               	btfsc	status,2,c
  7604   000BC4  EFCA  F005         	goto	l7420
  7605   000BC8  EFD3  F005         	goto	l7424
  7606   000BCC                     l7430:
  7607                           
  7608                           ; BSR set to: 0
  7609                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  7610   000BCC  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  7611   000BCE  B4D8               	btfsc	status,2,c
  7612   000BD0  EFEC  F005         	goto	u9101
  7613   000BD4  EFEE  F005         	goto	u9100
  7614   000BD8                     u9101:
  7615   000BD8  EFD7  F005         	goto	l7428
  7616   000BDC                     u9100:
  7617   000BDC                     
  7618                           ; BSR set to: 0
  7619                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1256:   width = read_prec_or_width(
      +                          fmt, ap);
  7620   000BDC  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  7621   000BE0  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  7622   000BE4  EC4A  F024         	call	_read_prec_or_width	;wreg free
  7623   000BE8  C00C  F055         	movff	?_read_prec_or_width,_width
  7624   000BEC  C00D  F056         	movff	?_read_prec_or_width+1,_width+1
  7625   000BF0                     
  7626                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1257:   if (width < 0) {
  7627   000BF0  BE56               	btfsc	(_width+1)^0,7,c
  7628   000BF2  EFFF  F005         	goto	u9110
  7629   000BF6  EFFD  F005         	goto	u9111
  7630   000BFA                     u9111:
  7631   000BFA  EF04  F006         	goto	l7438
  7632   000BFE                     u9110:
  7633   000BFE                     
  7634                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1258:    flags |= (1 << 0);
  7635   000BFE  8059               	bsf	_flags^0,0,c
  7636                           
  7637                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1259:    width = -width;
  7638   000C00  6C55               	negf	_width^0,c
  7639   000C02  1E56               	comf	(_width+1)^0,f,c
  7640   000C04  B0D8               	btfsc	status,0,c
  7641   000C06  2A56               	incf	(_width+1)^0,f,c
  7642   000C08                     l7438:
  7643                           
  7644                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1265:         if ((*fmt)[0] == '.')
      +                           {
  7645   000C08  0100               	movlb	0	; () banked
  7646   000C0A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7647   000C0C  6ED9               	movwf	fsr2l,c
  7648   000C0E  6ADA               	clrf	fsr2h,c
  7649   000C10  CFDE FFF6          	movff	postinc2,tblptrl
  7650   000C14  CFDD FFF7          	movff	postdec2,tblptrh
  7651   000C18                     	if	0	;tblptru may be non-zero
  7652   000C18                     	endif
  7653   000C18                     	if	0	;tblptru may be non-zero
  7654   000C18                     	endif
  7655   000C18  0008               	tblrd		*
  7656   000C1A  50F5               	movf	tablat,w,c
  7657   000C1C  0A2E               	xorlw	46
  7658   000C1E  A4D8               	btfss	status,2,c
  7659   000C20  EF14  F006         	goto	u9121
  7660   000C24  EF16  F006         	goto	u9120
  7661   000C28                     u9121:
  7662   000C28  EF26  F006         	goto	l7444
  7663   000C2C                     u9120:
  7664   000C2C                     
  7665                           ; BSR set to: 0
  7666                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1266:             ++*fmt;
  7667   000C2C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7668   000C2E  6ED9               	movwf	fsr2l,c
  7669   000C30  6ADA               	clrf	fsr2h,c
  7670   000C32  2ADE               	incf	postinc2,f,c
  7671   000C34  0E00               	movlw	0
  7672   000C36  22DD               	addwfc	postdec2,f,c
  7673   000C38                     
  7674                           ; BSR set to: 0
  7675                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1267:    prec = read_prec_or_width(
      +                          fmt, ap);
  7676   000C38  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  7677   000C3C  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  7678   000C40  EC4A  F024         	call	_read_prec_or_width	;wreg free
  7679   000C44  C00C  F057         	movff	?_read_prec_or_width,_prec
  7680   000C48  C00D  F058         	movff	?_read_prec_or_width+1,_prec+1
  7681   000C4C                     l7444:
  7682                           
  7683                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt;
  7684   000C4C  0100               	movlb	0	; () banked
  7685   000C4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7686   000C50  6ED9               	movwf	fsr2l,c
  7687   000C52  6ADA               	clrf	fsr2h,c
  7688   000C54  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  7689   000C58  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  7690   000C5C                     
  7691                           ; BSR set to: 0
  7692                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  7693   000C5C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7694   000C60  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7695   000C64                     	if	0	;tblptru may be non-zero
  7696   000C64                     	endif
  7697   000C64                     	if	0	;tblptru may be non-zero
  7698   000C64                     	endif
  7699   000C64  0008               	tblrd		*
  7700   000C66  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  7701                           
  7702                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1294:   switch(c) {
  7703   000C6A  EF43  F006         	goto	l7456
  7704   000C6E                     l7448:
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1298:     cp++;
  7708   000C6E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  7709   000C70  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  7710                           
  7711                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1305:     break;
  7712   000C72  EF56  F006         	goto	l7458
  7713   000C76                     l7450:
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1350:     c = 'i';
  7717   000C76  0E69               	movlw	105
  7718   000C78  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  7719                           
  7720                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1351:     break;
  7721   000C7A  EF56  F006         	goto	l7458
  7722   000C7E                     l7452:
  7723                           
  7724                           ; BSR set to: 0
  7725                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  7726   000C7E  0E00               	movlw	0
  7727   000C80  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  7728                           
  7729                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1354:     break;
  7730   000C82  EF56  F006         	goto	l7458
  7731   000C86                     l7456:
  7732                           
  7733                           ; BSR set to: 0
  7734   000C86  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  7735                           
  7736                           ; Switch size 1, requested type "simple"
  7737                           ; Number of cases is 4, Range of values is 100 to 117
  7738                           ; switch strategies available:
  7739                           ; Name         Instructions Cycles
  7740                           ; simple_byte           13     7 (average)
  7741                           ;	Chosen strategy is simple_byte
  7742   000C88  0A64               	xorlw	100	; case 100
  7743   000C8A  B4D8               	btfsc	status,2,c
  7744   000C8C  EF3B  F006         	goto	l7450
  7745   000C90  0A0C               	xorlw	12	; case 104
  7746   000C92  B4D8               	btfsc	status,2,c
  7747   000C94  EF37  F006         	goto	l7448
  7748   000C98  0A01               	xorlw	1	; case 105
  7749   000C9A  B4D8               	btfsc	status,2,c
  7750   000C9C  EF3B  F006         	goto	l7450
  7751   000CA0  0A1C               	xorlw	28	; case 117
  7752   000CA2  B4D8               	btfsc	status,2,c
  7753   000CA4  EF3B  F006         	goto	l7450
  7754   000CA8  EF3F  F006         	goto	l7452
  7755   000CAC                     l7458:
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1361:   if (*cp == 'd' || *cp == 'i
      +                          ') {
  7759   000CAC  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7760   000CB0  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7761   000CB4                     	if	0	;tblptru may be non-zero
  7762   000CB4                     	endif
  7763   000CB4                     	if	0	;tblptru may be non-zero
  7764   000CB4                     	endif
  7765   000CB4  0008               	tblrd		*
  7766   000CB6  50F5               	movf	tablat,w,c
  7767   000CB8  0A64               	xorlw	100
  7768   000CBA  B4D8               	btfsc	status,2,c
  7769   000CBC  EF62  F006         	goto	u9131
  7770   000CC0  EF64  F006         	goto	u9130
  7771   000CC4                     u9131:
  7772   000CC4  EF90  F006         	goto	l7468
  7773   000CC8                     u9130:
  7774   000CC8                     
  7775                           ; BSR set to: 0
  7776   000CC8  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7777   000CCC  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7778   000CD0                     	if	0	;tblptru may be non-zero
  7779   000CD0                     	endif
  7780   000CD0                     	if	0	;tblptru may be non-zero
  7781   000CD0                     	endif
  7782   000CD0  0008               	tblrd		*
  7783   000CD2  50F5               	movf	tablat,w,c
  7784   000CD4  0A69               	xorlw	105
  7785   000CD6  A4D8               	btfss	status,2,c
  7786   000CD8  EF70  F006         	goto	u9141
  7787   000CDC  EF72  F006         	goto	u9140
  7788   000CE0                     u9141:
  7789   000CE0  EFB4  F006         	goto	l7476
  7790   000CE4                     u9140:
  7791   000CE4  EF90  F006         	goto	l7468
  7792   000CE8                     l7462:
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1365:      convarg.sint = (vfpf_sin
      +                          t_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  7796   000CE8  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  7797   000CEA  6ED9               	movwf	fsr2l,c
  7798   000CEC  6ADA               	clrf	fsr2h,c
  7799   000CEE  0E02               	movlw	2
  7800   000CF0  26DF               	addwf	indf2,f,c
  7801   000CF2  5CDF               	subwf	indf2,w,c
  7802   000CF4  6ED9               	movwf	fsr2l,c
  7803   000CF6  6ADA               	clrf	fsr2h,c
  7804   000CF8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  7805   000CFC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  7806                           
  7807                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1366:      break;
  7808   000D00  EF9B  F006         	goto	l7470
  7809   000D04                     l7464:
  7810                           
  7811                           ; BSR set to: 0
  7812                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1369:      convarg.sint = (vfpf_sin
      +                          t_t)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  7813   000D04  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  7814   000D06  6ED9               	movwf	fsr2l,c
  7815   000D08  6ADA               	clrf	fsr2h,c
  7816   000D0A  0E02               	movlw	2
  7817   000D0C  26DF               	addwf	indf2,f,c
  7818   000D0E  5CDF               	subwf	indf2,w,c
  7819   000D10  6ED9               	movwf	fsr2l,c
  7820   000D12  6ADA               	clrf	fsr2h,c
  7821   000D14  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  7822   000D18  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  7823                           
  7824                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1370:      break;
  7825   000D1C  EF9B  F006         	goto	l7470
  7826   000D20                     l7468:
  7827                           
  7828                           ; BSR set to: 0
  7829   000D20  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  7830                           
  7831                           ; Switch size 1, requested type "simple"
  7832                           ; Number of cases is 2, Range of values is 104 to 105
  7833                           ; switch strategies available:
  7834                           ; Name         Instructions Cycles
  7835                           ; simple_byte            7     4 (average)
  7836                           ;	Chosen strategy is simple_byte
  7837   000D22  0A68               	xorlw	104	; case 104
  7838   000D24  B4D8               	btfsc	status,2,c
  7839   000D26  EF82  F006         	goto	l7464
  7840   000D2A  0A01               	xorlw	1	; case 105
  7841   000D2C  B4D8               	btfsc	status,2,c
  7842   000D2E  EF74  F006         	goto	l7462
  7843   000D32  EF9B  F006         	goto	l7470
  7844   000D36                     l7470:
  7845                           
  7846                           ; BSR set to: 0
  7847                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1406:    *fmt = cp+1;
  7848   000D36  0E01               	movlw	1
  7849   000D38  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  7850   000D3A  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  7851   000D3C  0E00               	movlw	0
  7852   000D3E  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  7853   000D40  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7854   000D42  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7855   000D44  6ED9               	movwf	fsr2l,c
  7856   000D46  6ADA               	clrf	fsr2h,c
  7857   000D48  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  7858   000D4C  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  7859   000D50                     
  7860                           ; BSR set to: 0
  7861                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1432:    return (void) dtoa(fp, con
      +                          varg.sint);;	Return value of _vfpfcnvrt is never used
  7862   000D50  C0B9  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  7863   000D54  C0BA  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7864   000D58  C0C0  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  7865   000D5C  C0C1  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  7866   000D60  EC12  F01D         	call	_dtoa	;wreg free
  7867   000D64  EF53  F008         	goto	l1556
  7868   000D68                     l7476:
  7869                           
  7870                           ; BSR set to: 0
  7871   000D68  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7872   000D6C  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7873   000D70                     	if	0	;tblptru may be non-zero
  7874   000D70                     	endif
  7875   000D70                     	if	0	;tblptru may be non-zero
  7876   000D70                     	endif
  7877   000D70  0008               	tblrd		*
  7878   000D72  50F5               	movf	tablat,w,c
  7879   000D74  0A75               	xorlw	117
  7880   000D76  A4D8               	btfss	status,2,c
  7881   000D78  EFC0  F006         	goto	u9151
  7882   000D7C  EFC2  F006         	goto	u9150
  7883   000D80                     u9151:
  7884   000D80  EF12  F007         	goto	l7496
  7885   000D84                     u9150:
  7886   000D84  EFE0  F006         	goto	l7484
  7887   000D88                     l7478:
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1456:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7891   000D88  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  7892   000D8A  6ED9               	movwf	fsr2l,c
  7893   000D8C  6ADA               	clrf	fsr2h,c
  7894   000D8E  0E02               	movlw	2
  7895   000D90  26DF               	addwf	indf2,f,c
  7896   000D92  5CDF               	subwf	indf2,w,c
  7897   000D94  6ED9               	movwf	fsr2l,c
  7898   000D96  6ADA               	clrf	fsr2h,c
  7899   000D98  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  7900   000D9C  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  7901                           
  7902                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1457:      break;
  7903   000DA0  EFEB  F006         	goto	l7486
  7904   000DA4                     l7480:
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1460:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned short)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7908   000DA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  7909   000DA6  6ED9               	movwf	fsr2l,c
  7910   000DA8  6ADA               	clrf	fsr2h,c
  7911   000DAA  0E02               	movlw	2
  7912   000DAC  26DF               	addwf	indf2,f,c
  7913   000DAE  5CDF               	subwf	indf2,w,c
  7914   000DB0  6ED9               	movwf	fsr2l,c
  7915   000DB2  6ADA               	clrf	fsr2h,c
  7916   000DB4  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  7917   000DB8  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  7918                           
  7919                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1461:      break;
  7920   000DBC  EFEB  F006         	goto	l7486
  7921   000DC0                     l7484:
  7922                           
  7923                           ; BSR set to: 0
  7924   000DC0  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  7925                           
  7926                           ; Switch size 1, requested type "simple"
  7927                           ; Number of cases is 2, Range of values is 104 to 105
  7928                           ; switch strategies available:
  7929                           ; Name         Instructions Cycles
  7930                           ; simple_byte            7     4 (average)
  7931                           ;	Chosen strategy is simple_byte
  7932   000DC2  0A68               	xorlw	104	; case 104
  7933   000DC4  B4D8               	btfsc	status,2,c
  7934   000DC6  EFD2  F006         	goto	l7480
  7935   000DCA  0A01               	xorlw	1	; case 105
  7936   000DCC  B4D8               	btfsc	status,2,c
  7937   000DCE  EFC4  F006         	goto	l7478
  7938   000DD2  EFEB  F006         	goto	l7486
  7939   000DD6                     l7486:
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1497:    *fmt = cp+1;
  7943   000DD6  0E01               	movlw	1
  7944   000DD8  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  7945   000DDA  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  7946   000DDC  0E00               	movlw	0
  7947   000DDE  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  7948   000DE0  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7949   000DE2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7950   000DE4  6ED9               	movwf	fsr2l,c
  7951   000DE6  6ADA               	clrf	fsr2h,c
  7952   000DE8  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  7953   000DEC  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  7954                           
  7955                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1498:    switch (*cp) {
  7956   000DF0  EF06  F007         	goto	l7494
  7957   000DF4                     l7488:
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1542:      return (void) utoa(fp, c
      +                          onvarg.uint);;	Return value of _vfpfcnvrt is never used
  7961   000DF4  C0B9  F020         	movff	vfpfcnvrt@fp,utoa@fp
  7962   000DF8  C0BA  F021         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  7963   000DFC  C0C0  F022         	movff	vfpfcnvrt@convarg,utoa@d
  7964   000E00  C0C1  F023         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  7965   000E04  ECED  F021         	call	_utoa	;wreg free
  7966   000E08  EF53  F008         	goto	l1556
  7967   000E0C                     l7494:
  7968                           
  7969                           ; BSR set to: 0
  7970   000E0C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7971   000E10  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7972   000E14                     	if	0	;tblptru may be non-zero
  7973   000E14                     	endif
  7974   000E14                     	if	0	;tblptru may be non-zero
  7975   000E14                     	endif
  7976   000E14  0008               	tblrd		*
  7977   000E16  50F5               	movf	tablat,w,c
  7978                           
  7979                           ; Switch size 1, requested type "simple"
  7980                           ; Number of cases is 1, Range of values is 117 to 117
  7981                           ; switch strategies available:
  7982                           ; Name         Instructions Cycles
  7983                           ; simple_byte            4     3 (average)
  7984                           ;	Chosen strategy is simple_byte
  7985   000E18  0A75               	xorlw	117	; case 117
  7986   000E1A  B4D8               	btfsc	status,2,c
  7987   000E1C  EFFA  F006         	goto	l7488
  7988   000E20  EF12  F007         	goto	l7496
  7989   000E24                     l7496:
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  7993   000E24  0E00               	movlw	0
  7994   000E26  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  7995   000E28                     
  7996                           ; BSR set to: 0
  7997                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt)[0] == 's') {
  7998   000E28  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7999   000E2A  6ED9               	movwf	fsr2l,c
  8000   000E2C  6ADA               	clrf	fsr2h,c
  8001   000E2E  CFDE FFF6          	movff	postinc2,tblptrl
  8002   000E32  CFDD FFF7          	movff	postdec2,tblptrh
  8003   000E36                     	if	0	;tblptru may be non-zero
  8004   000E36                     	endif
  8005   000E36                     	if	0	;tblptru may be non-zero
  8006   000E36                     	endif
  8007   000E36  0008               	tblrd		*
  8008   000E38  50F5               	movf	tablat,w,c
  8009   000E3A  0A73               	xorlw	115
  8010   000E3C  A4D8               	btfss	status,2,c
  8011   000E3E  EF23  F007         	goto	u9161
  8012   000E42  EF25  F007         	goto	u9160
  8013   000E46                     u9161:
  8014   000E46  EF2F  F007         	goto	l7504
  8015   000E4A                     u9160:
  8016   000E4A                     
  8017                           ; BSR set to: 0
  8018                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  8019   000E4A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8020   000E4C  6ED9               	movwf	fsr2l,c
  8021   000E4E  6ADA               	clrf	fsr2h,c
  8022   000E50  2ADE               	incf	postinc2,f,c
  8023   000E52  0E00               	movlw	0
  8024   000E54  22DD               	addwfc	postdec2,f,c
  8025   000E56                     l7502:
  8026                           
  8027                           ; BSR set to: 0
  8028                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1659:    done = 1;
  8029   000E56  0E01               	movlw	1
  8030   000E58  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8031                           
  8032                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1660:   }
  8033   000E5A  EF7B  F007         	goto	l7514
  8034   000E5E                     l7504:
  8035                           
  8036                           ; BSR set to: 0
  8037   000E5E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8038   000E60  6ED9               	movwf	fsr2l,c
  8039   000E62  6ADA               	clrf	fsr2h,c
  8040   000E64  CFDE FFF6          	movff	postinc2,tblptrl
  8041   000E68  CFDD FFF7          	movff	postdec2,tblptrh
  8042   000E6C                     	if	0	;tblptru may be non-zero
  8043   000E6C                     	endif
  8044   000E6C                     	if	0	;tblptru may be non-zero
  8045   000E6C                     	endif
  8046   000E6C  0008               	tblrd		*
  8047   000E6E  50F5               	movf	tablat,w,c
  8048   000E70  0A6C               	xorlw	108
  8049   000E72  A4D8               	btfss	status,2,c
  8050   000E74  EF3E  F007         	goto	u9171
  8051   000E78  EF40  F007         	goto	u9170
  8052   000E7C                     u9171:
  8053   000E7C  EF7B  F007         	goto	l7514
  8054   000E80                     u9170:
  8055   000E80                     
  8056                           ; BSR set to: 0
  8057   000E80  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8058   000E82  6ED9               	movwf	fsr2l,c
  8059   000E84  6ADA               	clrf	fsr2h,c
  8060   000E86  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8061   000E8A  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8062   000E8E  0E01               	movlw	1
  8063   000E90  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8064   000E92  0E00               	movlw	0
  8065   000E94  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8066   000E96  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8067   000E9A  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8068   000E9E                     	if	0	;tblptru may be non-zero
  8069   000E9E                     	endif
  8070   000E9E                     	if	0	;tblptru may be non-zero
  8071   000E9E                     	endif
  8072   000E9E  0008               	tblrd		*
  8073   000EA0  50F5               	movf	tablat,w,c
  8074   000EA2  0A6C               	xorlw	108
  8075   000EA4  A4D8               	btfss	status,2,c
  8076   000EA6  EF57  F007         	goto	u9181
  8077   000EAA  EF59  F007         	goto	u9180
  8078   000EAE                     u9181:
  8079   000EAE  EF7B  F007         	goto	l7514
  8080   000EB2                     u9180:
  8081   000EB2                     
  8082                           ; BSR set to: 0
  8083   000EB2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8084   000EB4  6ED9               	movwf	fsr2l,c
  8085   000EB6  6ADA               	clrf	fsr2h,c
  8086   000EB8  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8087   000EBC  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8088   000EC0  0E02               	movlw	2
  8089   000EC2  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8090   000EC4  0E00               	movlw	0
  8091   000EC6  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8092   000EC8  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8093   000ECC  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8094   000ED0                     	if	0	;tblptru may be non-zero
  8095   000ED0                     	endif
  8096   000ED0                     	if	0	;tblptru may be non-zero
  8097   000ED0                     	endif
  8098   000ED0  0008               	tblrd		*
  8099   000ED2  50F5               	movf	tablat,w,c
  8100   000ED4  0A73               	xorlw	115
  8101   000ED6  A4D8               	btfss	status,2,c
  8102   000ED8  EF70  F007         	goto	u9191
  8103   000EDC  EF72  F007         	goto	u9190
  8104   000EE0                     u9191:
  8105   000EE0  EF7B  F007         	goto	l7514
  8106   000EE4                     u9190:
  8107   000EE4                     
  8108                           ; BSR set to: 0
  8109                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 3;
  8110   000EE4  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8111   000EE6  6ED9               	movwf	fsr2l,c
  8112   000EE8  6ADA               	clrf	fsr2h,c
  8113   000EEA  0E03               	movlw	3
  8114   000EEC  26DE               	addwf	postinc2,f,c
  8115   000EEE  0E00               	movlw	0
  8116   000EF0  22DD               	addwfc	postdec2,f,c
  8117   000EF2  EF2B  F007         	goto	l7502
  8118   000EF6                     l7514:
  8119                           
  8120                           ; BSR set to: 0
  8121                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1665:   if (done) {
  8122   000EF6  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  8123   000EF8  B4D8               	btfsc	status,2,c
  8124   000EFA  EF81  F007         	goto	u9201
  8125   000EFE  EF83  F007         	goto	u9200
  8126   000F02                     u9201:
  8127   000F02  EF97  F007         	goto	l7520
  8128   000F06                     u9200:
  8129   000F06                     
  8130                           ; BSR set to: 0
  8131                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1682:    return (void) stoa(fp, (*(
      +                          char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpfcnvrt is never use
      +                          d
  8132   000F06  C0B9  F010         	movff	vfpfcnvrt@fp,stoa@fp
  8133   000F0A  C0BA  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8134   000F0E  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8135   000F10  6ED9               	movwf	fsr2l,c
  8136   000F12  6ADA               	clrf	fsr2h,c
  8137   000F14  0E02               	movlw	2
  8138   000F16  26DF               	addwf	indf2,f,c
  8139   000F18  5CDF               	subwf	indf2,w,c
  8140   000F1A  6ED9               	movwf	fsr2l,c
  8141   000F1C  6ADA               	clrf	fsr2h,c
  8142   000F1E  CFDE F012          	movff	postinc2,stoa@s
  8143   000F22  CFDE F013          	movff	postinc2,stoa@s+1
  8144   000F26  EC43  F01C         	call	_stoa	;wreg free
  8145   000F2A  EF53  F008         	goto	l1556
  8146   000F2E                     l7520:
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt;
  8150   000F2E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8151   000F30  6ED9               	movwf	fsr2l,c
  8152   000F32  6ADA               	clrf	fsr2h,c
  8153   000F34  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  8154   000F38  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  8155   000F3C                     
  8156                           ; BSR set to: 0
  8157                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  8158   000F3C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8159   000F40  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8160   000F44                     	if	0	;tblptru may be non-zero
  8161   000F44                     	endif
  8162   000F44                     	if	0	;tblptru may be non-zero
  8163   000F44                     	endif
  8164   000F44  0008               	tblrd		*
  8165   000F46  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  8166                           
  8167                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1691:   switch(c) {
  8168   000F4A  EFB3  F007         	goto	l7532
  8169   000F4E                     l7524:
  8170                           
  8171                           ; BSR set to: 0
  8172                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  8173   000F4E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  8174   000F50  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  8175                           
  8176                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1696:     break;
  8177   000F52  EFC2  F007         	goto	l7534
  8178   000F56                     l7526:
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1721:     c = 'l';
  8182   000F56  0E6C               	movlw	108
  8183   000F58  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8184                           
  8185                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1722:     break;
  8186   000F5A  EFC2  F007         	goto	l7534
  8187   000F5E                     l7528:
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  8191   000F5E  0E00               	movlw	0
  8192   000F60  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8193                           
  8194                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1725:     break;
  8195   000F62  EFC2  F007         	goto	l7534
  8196   000F66                     l7532:
  8197                           
  8198                           ; BSR set to: 0
  8199   000F66  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8200                           
  8201                           ; Switch size 1, requested type "simple"
  8202                           ; Number of cases is 3, Range of values is 76 to 108
  8203                           ; switch strategies available:
  8204                           ; Name         Instructions Cycles
  8205                           ; simple_byte           10     6 (average)
  8206                           ;	Chosen strategy is simple_byte
  8207   000F68  0A4C               	xorlw	76	; case 76
  8208   000F6A  B4D8               	btfsc	status,2,c
  8209   000F6C  EFA7  F007         	goto	l7524
  8210   000F70  0A2A               	xorlw	42	; case 102
  8211   000F72  B4D8               	btfsc	status,2,c
  8212   000F74  EFAB  F007         	goto	l7526
  8213   000F78  0A0A               	xorlw	10	; case 108
  8214   000F7A  B4D8               	btfsc	status,2,c
  8215   000F7C  EFA7  F007         	goto	l7524
  8216   000F80  EFAF  F007         	goto	l7528
  8217   000F84                     l7534:
  8218                           
  8219                           ; BSR set to: 0
  8220   000F84  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8221   000F88  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8222   000F8C                     	if	0	;tblptru may be non-zero
  8223   000F8C                     	endif
  8224   000F8C                     	if	0	;tblptru may be non-zero
  8225   000F8C                     	endif
  8226   000F8C  0008               	tblrd		*
  8227   000F8E  50F5               	movf	tablat,w,c
  8228   000F90  0A66               	xorlw	102
  8229   000F92  A4D8               	btfss	status,2,c
  8230   000F94  EFCE  F007         	goto	u9211
  8231   000F98  EFD0  F007         	goto	u9210
  8232   000F9C                     u9211:
  8233   000F9C  EF37  F008         	goto	l7554
  8234   000FA0                     u9210:
  8235   000FA0  EFFA  F007         	goto	l7542
  8236   000FA4                     l7536:
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1756:      convarg.f = (long double
      +                          )(*(double *)__va_arg(*(double **)ap, (double)0));
  8240   000FA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8241   000FA6  6ED9               	movwf	fsr2l,c
  8242   000FA8  6ADA               	clrf	fsr2h,c
  8243   000FAA  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8244   000FAE  0E04               	movlw	4
  8245   000FB0  26DF               	addwf	indf2,f,c
  8246   000FB2  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8247   000FB4  6ED9               	movwf	fsr2l,c
  8248   000FB6  6ADA               	clrf	fsr2h,c
  8249   000FB8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8250   000FBC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8251   000FC0  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8252   000FC4  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8253                           
  8254                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1757:      break;
  8255   000FC8  EF05  F008         	goto	l7544
  8256   000FCC                     l7538:
  8257                           
  8258                           ; BSR set to: 0
  8259                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1759:      convarg.f = (long double
      +                          )(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  8260   000FCC  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8261   000FCE  6ED9               	movwf	fsr2l,c
  8262   000FD0  6ADA               	clrf	fsr2h,c
  8263   000FD2  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8264   000FD6  0E04               	movlw	4
  8265   000FD8  26DF               	addwf	indf2,f,c
  8266   000FDA  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8267   000FDC  6ED9               	movwf	fsr2l,c
  8268   000FDE  6ADA               	clrf	fsr2h,c
  8269   000FE0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8270   000FE4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8271   000FE8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8272   000FEC  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8273                           
  8274                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1760:      break;
  8275   000FF0  EF05  F008         	goto	l7544
  8276   000FF4                     l7542:
  8277                           
  8278                           ; BSR set to: 0
  8279   000FF4  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8280                           
  8281                           ; Switch size 1, requested type "simple"
  8282                           ; Number of cases is 2, Range of values is 76 to 108
  8283                           ; switch strategies available:
  8284                           ; Name         Instructions Cycles
  8285                           ; simple_byte            7     4 (average)
  8286                           ;	Chosen strategy is simple_byte
  8287   000FF6  0A4C               	xorlw	76	; case 76
  8288   000FF8  B4D8               	btfsc	status,2,c
  8289   000FFA  EFE6  F007         	goto	l7538
  8290   000FFE  0A20               	xorlw	32	; case 108
  8291   001000  B4D8               	btfsc	status,2,c
  8292   001002  EFD2  F007         	goto	l7536
  8293   001006  EF05  F008         	goto	l7544
  8294   00100A                     l7544:
  8295                           
  8296                           ; BSR set to: 0
  8297                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1762:    *fmt = cp+1;
  8298   00100A  0E01               	movlw	1
  8299   00100C  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8300   00100E  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8301   001010  0E00               	movlw	0
  8302   001012  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8303   001014  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8304   001016  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8305   001018  6ED9               	movwf	fsr2l,c
  8306   00101A  6ADA               	clrf	fsr2h,c
  8307   00101C  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8308   001020  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8309                           
  8310                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1763:    switch (*cp) {
  8311   001024  EF2B  F008         	goto	l7552
  8312   001028                     l7546:
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1790:      return (void) efgtoa(fp,
      +                           convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  8316   001028  C0B9  F084         	movff	vfpfcnvrt@fp,efgtoa@fp
  8317   00102C  C0BA  F085         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  8318   001030  C0C0  F086         	movff	vfpfcnvrt@convarg,efgtoa@f
  8319   001034  C0C1  F087         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  8320   001038  C0C2  F088         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  8321   00103C  C0C3  F089         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  8322   001040  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8323   001044  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8324   001048                     	if	0	;tblptru may be non-zero
  8325   001048                     	endif
  8326   001048                     	if	0	;tblptru may be non-zero
  8327   001048                     	endif
  8328   001048  0008               	tblrd		*
  8329   00104A  CFF5 F08A          	movff	tablat,efgtoa@c
  8330   00104E  ECA9  F000         	call	_efgtoa	;wreg free
  8331   001052  EF53  F008         	goto	l1556
  8332   001056                     l7552:
  8333                           
  8334                           ; BSR set to: 0
  8335   001056  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8336   00105A  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8337   00105E                     	if	0	;tblptru may be non-zero
  8338   00105E                     	endif
  8339   00105E                     	if	0	;tblptru may be non-zero
  8340   00105E                     	endif
  8341   00105E  0008               	tblrd		*
  8342   001060  50F5               	movf	tablat,w,c
  8343                           
  8344                           ; Switch size 1, requested type "simple"
  8345                           ; Number of cases is 1, Range of values is 102 to 102
  8346                           ; switch strategies available:
  8347                           ; Name         Instructions Cycles
  8348                           ; simple_byte            4     3 (average)
  8349                           ;	Chosen strategy is simple_byte
  8350   001062  0A66               	xorlw	102	; case 102
  8351   001064  B4D8               	btfsc	status,2,c
  8352   001066  EF14  F008         	goto	l7546
  8353   00106A  EF37  F008         	goto	l7554
  8354   00106E                     l7554:
  8355                           
  8356                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  8357   00106E  0100               	movlb	0	; () banked
  8358   001070  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8359   001072  6ED9               	movwf	fsr2l,c
  8360   001074  6ADA               	clrf	fsr2h,c
  8361   001076  2ADE               	incf	postinc2,f,c
  8362   001078  0E00               	movlw	0
  8363   00107A  22DD               	addwfc	postdec2,f,c
  8364   00107C  EF53  F008         	goto	l1556
  8365   001080                     l7558:
  8366                           
  8367                           ; BSR set to: 0
  8368                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*fmt)[0], fp)
      +                          ;
  8369   001080  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8370   001082  6ED9               	movwf	fsr2l,c
  8371   001084  6ADA               	clrf	fsr2h,c
  8372   001086  CFDE FFF6          	movff	postinc2,tblptrl
  8373   00108A  CFDD FFF7          	movff	postdec2,tblptrh
  8374   00108E                     	if	0	;tblptru may be non-zero
  8375   00108E                     	endif
  8376   00108E                     	if	0	;tblptru may be non-zero
  8377   00108E                     	endif
  8378   00108E  0008               	tblrd		*
  8379   001090  50F5               	movf	tablat,w,c
  8380   001092  6E07               	movwf	fputc@c^0,c
  8381   001094  6A08               	clrf	(fputc@c+1)^0,c
  8382   001096  C0B9  F009         	movff	vfpfcnvrt@fp,fputc@fp
  8383   00109A  C0BA  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8384   00109E  ECD2  F022         	call	_fputc	;wreg free
  8385   0010A2  EF37  F008         	goto	l7554
  8386   0010A6                     l1556:
  8387   0010A6  0012               	return		;funcret
  8388   0010A8                     __end_of_vfpfcnvrt:
  8389                           	callstack 0
  8390                           
  8391 ;; *************** function _utoa *****************
  8392 ;; Defined at:
  8393 ;;		line 1001 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  8396 ;;		 -> NULL(0), sprintf@f(12), 
  8397 ;;  d               2   33[COMRAM] unsigned int 
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;  i               2   39[COMRAM] int 
  8400 ;;  p               2   37[COMRAM] int 
  8401 ;;  w               2   35[COMRAM] int 
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  1    wreg      void 
  8404 ;; Registers used:
  8405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8412 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8414 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8415 ;;Total ram usage:       10 bytes
  8416 ;; Hardware stack levels used: 1
  8417 ;; Hardware stack levels required when called: 5
  8418 ;; This function calls:
  8419 ;;		___lwdiv
  8420 ;;		___lwmod
  8421 ;;		_pad
  8422 ;; This function is called by:
  8423 ;;		_vfpfcnvrt
  8424 ;; This function uses a non-reentrant model
  8425 ;;
  8426                           
  8427                           	psect	text30
  8428   0043DA                     __ptext30:
  8429                           	callstack 0
  8430   0043DA                     _utoa:
  8431                           	callstack 21
  8432   0043DA                     
  8433                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1001: static void utoa(FILE *fp, vf
      +                          pf_uint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1002: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 1003:     int i, w;;D:\MPLABX\Compiler\pic\sources\
      +                          c99\common\doprnt.c: 1005:  int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1
      +                          017:     p = (0 <= prec) ? prec : 1;
  8434   0043DA  BE58               	btfsc	(_prec+1)^0,7,c
  8435   0043DC  EFF4  F021         	goto	u8930
  8436   0043E0  EFF2  F021         	goto	u8931
  8437   0043E4                     u8931:
  8438   0043E4  EFFA  F021         	goto	l1513
  8439   0043E8                     u8930:
  8440   0043E8  0E00               	movlw	0
  8441   0043EA  6E27               	movwf	(utoa@p+1)^0,c
  8442   0043EC  0E01               	movlw	1
  8443   0043EE  6E26               	movwf	utoa@p^0,c
  8444   0043F0  EFFE  F021         	goto	l1515
  8445   0043F4                     l1513:
  8446   0043F4  C057  F026         	movff	_prec,utoa@p
  8447   0043F8  C058  F027         	movff	_prec+1,utoa@p+1
  8448   0043FC                     l1515:
  8449                           
  8450                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1019:     w = width;
  8451   0043FC  C055  F024         	movff	_width,utoa@w
  8452   004400  C056  F025         	movff	_width+1,utoa@w+1
  8453   004404                     
  8454                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1022:     i = sizeof(dbuf) - 1;
  8455   004404  0E00               	movlw	0
  8456   004406  6E29               	movwf	(utoa@i+1)^0,c
  8457   004408  0E4F               	movlw	79
  8458   00440A  6E28               	movwf	utoa@i^0,c
  8459   00440C                     
  8460                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i] = '\0';
  8461   00440C  0E00               	movlw	0
  8462   00440E  0101               	movlb	1	; () banked
  8463   004410  6F76               	movwf	(_dbuf+79)& (0+255),b
  8464                           
  8465                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  8466   004412  EF35  F022         	goto	l7340
  8467   004416                     l7330:
  8468                           
  8469                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1033:     )) {;D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 1034:         --i;
  8470   004416  0628               	decf	utoa@i^0,f,c
  8471   004418  A0D8               	btfss	status,0,c
  8472   00441A  0629               	decf	(utoa@i+1)^0,f,c
  8473   00441C                     
  8474                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1035:         dbuf[i] = '0' + (d % 
      +                          10);
  8475   00441C  0E27               	movlw	low _dbuf
  8476   00441E  2428               	addwf	utoa@i^0,w,c
  8477   004420  6ED9               	movwf	fsr2l,c
  8478   004422  0E01               	movlw	high _dbuf
  8479   004424  2029               	addwfc	(utoa@i+1)^0,w,c
  8480   004426  6EDA               	movwf	fsr2h,c
  8481   004428  C022  F006         	movff	utoa@d,___lwmod@dividend
  8482   00442C  C023  F007         	movff	utoa@d+1,___lwmod@dividend+1
  8483   004430  0E00               	movlw	0
  8484   004432  6E09               	movwf	(___lwmod@divisor+1)^0,c
  8485   004434  0E0A               	movlw	10
  8486   004436  6E08               	movwf	___lwmod@divisor^0,c
  8487   004438  ECEB  F025         	call	___lwmod	;wreg free
  8488   00443C  5006               	movf	?___lwmod^0,w,c
  8489   00443E  0F30               	addlw	48
  8490   004440  6EDF               	movwf	indf2,c
  8491   004442                     
  8492                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1037:         --p;
  8493   004442  0626               	decf	utoa@p^0,f,c
  8494   004444  A0D8               	btfss	status,0,c
  8495   004446  0627               	decf	(utoa@p+1)^0,f,c
  8496   004448                     
  8497                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1041:         --w;
  8498   004448  0624               	decf	utoa@w^0,f,c
  8499   00444A  A0D8               	btfss	status,0,c
  8500   00444C  0625               	decf	(utoa@w+1)^0,f,c
  8501   00444E                     
  8502                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1042:         d = d / 10;
  8503   00444E  C022  F006         	movff	utoa@d,___lwdiv@dividend
  8504   004452  C023  F007         	movff	utoa@d+1,___lwdiv@dividend+1
  8505   004456  0E00               	movlw	0
  8506   004458  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  8507   00445A  0E0A               	movlw	10
  8508   00445C  6E08               	movwf	___lwdiv@divisor^0,c
  8509   00445E  EC45  F025         	call	___lwdiv	;wreg free
  8510   004462  C006  F022         	movff	?___lwdiv,utoa@d
  8511   004466  C007  F023         	movff	?___lwdiv+1,utoa@d+1
  8512   00446A                     l7340:
  8513                           
  8514                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  8515   00446A  5028               	movf	utoa@i^0,w,c
  8516   00446C  1029               	iorwf	(utoa@i+1)^0,w,c
  8517   00446E  B4D8               	btfsc	status,2,c
  8518   004470  EF3C  F022         	goto	u8941
  8519   004474  EF3E  F022         	goto	u8940
  8520   004478                     u8941:
  8521   004478  EF54  F022         	goto	l7346
  8522   00447C                     u8940:
  8523   00447C  5022               	movf	utoa@d^0,w,c
  8524   00447E  1023               	iorwf	(utoa@d+1)^0,w,c
  8525   004480  A4D8               	btfss	status,2,c
  8526   004482  EF45  F022         	goto	u8951
  8527   004486  EF47  F022         	goto	u8950
  8528   00448A                     u8951:
  8529   00448A  EF0B  F022         	goto	l7330
  8530   00448E                     u8950:
  8531   00448E  BE27               	btfsc	(utoa@p+1)^0,7,c
  8532   004490  EF54  F022         	goto	u8960
  8533   004494  5027               	movf	(utoa@p+1)^0,w,c
  8534   004496  E106               	bnz	u8961
  8535   004498  0426               	decf	utoa@p^0,w,c
  8536   00449A  B0D8               	btfsc	status,0,c
  8537   00449C  EF52  F022         	goto	u8961
  8538   0044A0  EF54  F022         	goto	u8960
  8539   0044A4                     u8961:
  8540   0044A4  EF0B  F022         	goto	l7330
  8541   0044A8                     u8960:
  8542   0044A8                     l7346:
  8543                           
  8544                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1046:     return (void) pad(fp, &db
      +                          uf[i], w);
  8545   0044A8  C020  F017         	movff	utoa@fp,pad@fp
  8546   0044AC  C021  F018         	movff	utoa@fp+1,pad@fp+1
  8547   0044B0  0E27               	movlw	low _dbuf
  8548   0044B2  2428               	addwf	utoa@i^0,w,c
  8549   0044B4  6E19               	movwf	pad@buf^0,c
  8550   0044B6  0E01               	movlw	high _dbuf
  8551   0044B8  2029               	addwfc	(utoa@i+1)^0,w,c
  8552   0044BA  6E1A               	movwf	(pad@buf+1)^0,c
  8553   0044BC  C024  F01B         	movff	utoa@w,pad@p
  8554   0044C0  C025  F01C         	movff	utoa@w+1,pad@p+1
  8555   0044C4  ECF6  F024         	call	_pad	;wreg free
  8556   0044C8  0012               	return		;funcret
  8557   0044CA                     __end_of_utoa:
  8558                           	callstack 0
  8559                           
  8560 ;; *************** function ___lwmod *****************
  8561 ;; Defined at:
  8562 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwmod.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;  dividend        2    5[COMRAM] unsigned int 
  8565 ;;  divisor         2    7[COMRAM] unsigned int 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;  counter         1    9[COMRAM] unsigned char 
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  2    5[COMRAM] unsigned int 
  8570 ;; Registers used:
  8571 ;;		wreg, status,2, status,0
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8580 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8581 ;;Total ram usage:        5 bytes
  8582 ;; Hardware stack levels used: 1
  8583 ;; Hardware stack levels required when called: 1
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_utoa
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           	psect	text31
  8592   004BD6                     __ptext31:
  8593                           	callstack 0
  8594   004BD6                     ___lwmod:
  8595                           	callstack 24
  8596   004BD6  5008               	movf	___lwmod@divisor^0,w,c
  8597   004BD8  1009               	iorwf	(___lwmod@divisor+1)^0,w,c
  8598   004BDA  B4D8               	btfsc	status,2,c
  8599   004BDC  EFF2  F025         	goto	u8131
  8600   004BE0  EFF4  F025         	goto	u8130
  8601   004BE4                     u8131:
  8602   004BE4  EF18  F026         	goto	l1207
  8603   004BE8                     u8130:
  8604   004BE8  0E01               	movlw	1
  8605   004BEA  6E0A               	movwf	___lwmod@counter^0,c
  8606   004BEC  EFFC  F025         	goto	l6914
  8607   004BF0                     l6912:
  8608   004BF0  90D8               	bcf	status,0,c
  8609   004BF2  3608               	rlcf	___lwmod@divisor^0,f,c
  8610   004BF4  3609               	rlcf	(___lwmod@divisor+1)^0,f,c
  8611   004BF6  2A0A               	incf	___lwmod@counter^0,f,c
  8612   004BF8                     l6914:
  8613   004BF8  AE09               	btfss	(___lwmod@divisor+1)^0,7,c
  8614   004BFA  EF01  F026         	goto	u8141
  8615   004BFE  EF03  F026         	goto	u8140
  8616   004C02                     u8141:
  8617   004C02  EFF8  F025         	goto	l6912
  8618   004C06                     u8140:
  8619   004C06                     l6916:
  8620   004C06  5008               	movf	___lwmod@divisor^0,w,c
  8621   004C08  5C06               	subwf	___lwmod@dividend^0,w,c
  8622   004C0A  5009               	movf	(___lwmod@divisor+1)^0,w,c
  8623   004C0C  5807               	subwfb	(___lwmod@dividend+1)^0,w,c
  8624   004C0E  A0D8               	btfss	status,0,c
  8625   004C10  EF0C  F026         	goto	u8151
  8626   004C14  EF0E  F026         	goto	u8150
  8627   004C18                     u8151:
  8628   004C18  EF12  F026         	goto	l6920
  8629   004C1C                     u8150:
  8630   004C1C  5008               	movf	___lwmod@divisor^0,w,c
  8631   004C1E  5E06               	subwf	___lwmod@dividend^0,f,c
  8632   004C20  5009               	movf	(___lwmod@divisor+1)^0,w,c
  8633   004C22  5A07               	subwfb	(___lwmod@dividend+1)^0,f,c
  8634   004C24                     l6920:
  8635   004C24  90D8               	bcf	status,0,c
  8636   004C26  3209               	rrcf	(___lwmod@divisor+1)^0,f,c
  8637   004C28  3208               	rrcf	___lwmod@divisor^0,f,c
  8638   004C2A  2E0A               	decfsz	___lwmod@counter^0,f,c
  8639   004C2C  EF03  F026         	goto	l6916
  8640   004C30                     l1207:
  8641   004C30  C006  F006         	movff	___lwmod@dividend,?___lwmod
  8642   004C34  C007  F007         	movff	___lwmod@dividend+1,?___lwmod+1
  8643   004C38  0012               	return		;funcret
  8644   004C3A                     __end_of___lwmod:
  8645                           	callstack 0
  8646                           
  8647 ;; *************** function ___lwdiv *****************
  8648 ;; Defined at:
  8649 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwdiv.c"
  8650 ;; Parameters:    Size  Location     Type
  8651 ;;  dividend        2    5[COMRAM] unsigned int 
  8652 ;;  divisor         2    7[COMRAM] unsigned int 
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;  quotient        2   10[COMRAM] unsigned int 
  8655 ;;  counter         1    9[COMRAM] unsigned char 
  8656 ;; Return value:  Size  Location     Type
  8657 ;;                  2    5[COMRAM] unsigned int 
  8658 ;; Registers used:
  8659 ;;		wreg, status,2, status,0
  8660 ;; Tracked objects:
  8661 ;;		On entry : 0/0
  8662 ;;		On exit  : 0/0
  8663 ;;		Unchanged: 0/0
  8664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8666 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8668 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8669 ;;Total ram usage:        7 bytes
  8670 ;; Hardware stack levels used: 1
  8671 ;; Hardware stack levels required when called: 1
  8672 ;; This function calls:
  8673 ;;		Nothing
  8674 ;; This function is called by:
  8675 ;;		_utoa
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679                           	psect	text32
  8680   004A8A                     __ptext32:
  8681                           	callstack 0
  8682   004A8A                     ___lwdiv:
  8683                           	callstack 24
  8684   004A8A  0E00               	movlw	0
  8685   004A8C  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8686   004A8E  0E00               	movlw	0
  8687   004A90  6E0B               	movwf	___lwdiv@quotient^0,c
  8688   004A92  5008               	movf	___lwdiv@divisor^0,w,c
  8689   004A94  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8690   004A96  B4D8               	btfsc	status,2,c
  8691   004A98  EF50  F025         	goto	u8101
  8692   004A9C  EF52  F025         	goto	u8100
  8693   004AA0                     u8101:
  8694   004AA0  EF7A  F025         	goto	l1197
  8695   004AA4                     u8100:
  8696   004AA4  0E01               	movlw	1
  8697   004AA6  6E0A               	movwf	___lwdiv@counter^0,c
  8698   004AA8  EF5A  F025         	goto	l6894
  8699   004AAC                     l6892:
  8700   004AAC  90D8               	bcf	status,0,c
  8701   004AAE  3608               	rlcf	___lwdiv@divisor^0,f,c
  8702   004AB0  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8703   004AB2  2A0A               	incf	___lwdiv@counter^0,f,c
  8704   004AB4                     l6894:
  8705   004AB4  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  8706   004AB6  EF5F  F025         	goto	u8111
  8707   004ABA  EF61  F025         	goto	u8110
  8708   004ABE                     u8111:
  8709   004ABE  EF56  F025         	goto	l6892
  8710   004AC2                     u8110:
  8711   004AC2                     l6896:
  8712   004AC2  90D8               	bcf	status,0,c
  8713   004AC4  360B               	rlcf	___lwdiv@quotient^0,f,c
  8714   004AC6  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8715   004AC8  5008               	movf	___lwdiv@divisor^0,w,c
  8716   004ACA  5C06               	subwf	___lwdiv@dividend^0,w,c
  8717   004ACC  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  8718   004ACE  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8719   004AD0  A0D8               	btfss	status,0,c
  8720   004AD2  EF6D  F025         	goto	u8121
  8721   004AD6  EF6F  F025         	goto	u8120
  8722   004ADA                     u8121:
  8723   004ADA  EF74  F025         	goto	l6904
  8724   004ADE                     u8120:
  8725   004ADE  5008               	movf	___lwdiv@divisor^0,w,c
  8726   004AE0  5E06               	subwf	___lwdiv@dividend^0,f,c
  8727   004AE2  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  8728   004AE4  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8729   004AE6  800B               	bsf	___lwdiv@quotient^0,0,c
  8730   004AE8                     l6904:
  8731   004AE8  90D8               	bcf	status,0,c
  8732   004AEA  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8733   004AEC  3208               	rrcf	___lwdiv@divisor^0,f,c
  8734   004AEE  2E0A               	decfsz	___lwdiv@counter^0,f,c
  8735   004AF0  EF61  F025         	goto	l6896
  8736   004AF4                     l1197:
  8737   004AF4  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  8738   004AF8  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8739   004AFC  0012               	return		;funcret
  8740   004AFE                     __end_of___lwdiv:
  8741                           	callstack 0
  8742                           
  8743 ;; *************** function _stoa *****************
  8744 ;; Defined at:
  8745 ;;		line 942 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  8748 ;;		 -> NULL(0), sprintf@f(12), 
  8749 ;;  s               2   17[COMRAM] PTR unsigned char 
  8750 ;;		 -> ?_printf(2), ?_sprintf(2), runUART@reversed(31), STR_22(1), 
  8751 ;;		 -> STR_21(6), STR_20(5), STR_19(4), STR_18(4), 
  8752 ;;		 -> STR_17(4), STR_16(5), STR_15(5), 
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;  l               2   27[COMRAM] int 
  8755 ;;  cp              2   25[COMRAM] PTR unsigned char 
  8756 ;;		 -> ?_printf(2), STR_36(7), ?_sprintf(2), runUART@reversed(31), 
  8757 ;;		 -> STR_22(1), STR_21(6), STR_20(5), STR_19(4), 
  8758 ;;		 -> STR_18(4), STR_17(4), STR_16(5), STR_15(5), 
  8759 ;;  w               2   23[COMRAM] int 
  8760 ;;  p               2   21[COMRAM] int 
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  1    wreg      void 
  8763 ;; Registers used:
  8764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8770 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8771 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8773 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8774 ;;Total ram usage:       14 bytes
  8775 ;; Hardware stack levels used: 1
  8776 ;; Hardware stack levels required when called: 3
  8777 ;; This function calls:
  8778 ;;		_fputc
  8779 ;; This function is called by:
  8780 ;;		_vfpfcnvrt
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           	psect	text33
  8785   003886                     __ptext33:
  8786                           	callstack 0
  8787   003886                     _stoa:
  8788                           	callstack 23
  8789   003886                     
  8790                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 942: static void stoa(FILE *fp, cha
      +                          r *s);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 943: {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 944:     char *cp;;D:\MPLABX\Compiler\pic\sources\c99\commo
      +                          n\doprnt.c: 945:     int l, p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 947: 
      +                           int w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 951:     cp = s;
  8791   003886  C012  F01A         	movff	stoa@s,stoa@cp
  8792   00388A  C013  F01B         	movff	stoa@s+1,stoa@cp+1
  8793                           
  8794                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 952:     if (!cp) {
  8795   00388E  501A               	movf	stoa@cp^0,w,c
  8796   003890  101B               	iorwf	(stoa@cp+1)^0,w,c
  8797   003892  A4D8               	btfss	status,2,c
  8798   003894  EF4E  F01C         	goto	u8821
  8799   003898  EF50  F01C         	goto	u8820
  8800   00389C                     u8821:
  8801   00389C  EF54  F01C         	goto	l7288
  8802   0038A0                     u8820:
  8803   0038A0                     
  8804                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 953:         cp = "(null)";
  8805   0038A0  0EBF               	movlw	low STR_36
  8806   0038A2  6E1A               	movwf	stoa@cp^0,c
  8807   0038A4  0EFF               	movlw	high STR_36
  8808   0038A6  6E1B               	movwf	(stoa@cp+1)^0,c
  8809   0038A8                     l7288:
  8810                           
  8811                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 957:  for (l = 0; cp[l] != '\0'; l+
      +                          +) {
  8812   0038A8  0E00               	movlw	0
  8813   0038AA  6E1D               	movwf	(stoa@l+1)^0,c
  8814   0038AC  0E00               	movlw	0
  8815   0038AE  6E1C               	movwf	stoa@l^0,c
  8816   0038B0  EF5C  F01C         	goto	l7292
  8817   0038B4                     l7290:
  8818   0038B4  4A1C               	infsnz	stoa@l^0,f,c
  8819   0038B6  2A1D               	incf	(stoa@l+1)^0,f,c
  8820   0038B8                     l7292:
  8821   0038B8  501C               	movf	stoa@l^0,w,c
  8822   0038BA  241A               	addwf	stoa@cp^0,w,c
  8823   0038BC  6E14               	movwf	??_stoa^0,c
  8824   0038BE  501D               	movf	(stoa@l+1)^0,w,c
  8825   0038C0  201B               	addwfc	(stoa@cp+1)^0,w,c
  8826   0038C2  6E15               	movwf	(??_stoa+1)^0,c
  8827   0038C4  C014  FFF6         	movff	??_stoa,tblptrl
  8828   0038C8  C015  FFF7         	movff	??_stoa+1,tblptrh
  8829   0038CC  0E00               	movlw	low (__mediumconst shr (0+16))
  8830   0038CE  6EF8               	movwf	tblptru,c
  8831   0038D0  0E0F               	movlw	(high __ramtop+-1)
  8832   0038D2  64F7               	cpfsgt	tblptrh,c
  8833   0038D4  D003               	bra	u8837
  8834   0038D6  0008               	tblrd		*
  8835   0038D8  50F5               	movf	tablat,w,c
  8836   0038DA  D005               	bra	u8830
  8837   0038DC                     u8837:
  8838   0038DC  CFF6 FFE1          	movff	tblptrl,fsr1l
  8839   0038E0  CFF7 FFE2          	movff	tblptrh,fsr1h
  8840   0038E4  50E7               	movf	indf1,w,c
  8841   0038E6                     u8830:
  8842   0038E6  0900               	iorlw	0
  8843   0038E8  A4D8               	btfss	status,2,c
  8844   0038EA  EF79  F01C         	goto	u8841
  8845   0038EE  EF7B  F01C         	goto	u8840
  8846   0038F2                     u8841:
  8847   0038F2  EF5A  F01C         	goto	l7290
  8848   0038F6                     u8840:
  8849   0038F6                     
  8850                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 961:  if (!(prec < 0) && (prec < l)
      +                          ) {
  8851   0038F6  BE58               	btfsc	(_prec+1)^0,7,c
  8852   0038F8  EF80  F01C         	goto	u8851
  8853   0038FC  EF82  F01C         	goto	u8850
  8854   003900                     u8851:
  8855   003900  EF95  F01C         	goto	l1497
  8856   003904                     u8850:
  8857   003904  501C               	movf	stoa@l^0,w,c
  8858   003906  5C57               	subwf	_prec^0,w,c
  8859   003908  5058               	movf	(_prec+1)^0,w,c
  8860   00390A  0A80               	xorlw	128
  8861   00390C  6E14               	movwf	??_stoa^0,c
  8862   00390E  501D               	movf	(stoa@l+1)^0,w,c
  8863   003910  0A80               	xorlw	128
  8864   003912  5814               	subwfb	??_stoa^0,w,c
  8865   003914  B0D8               	btfsc	status,0,c
  8866   003916  EF8F  F01C         	goto	u8861
  8867   00391A  EF91  F01C         	goto	u8860
  8868   00391E                     u8861:
  8869   00391E  EF95  F01C         	goto	l1497
  8870   003922                     u8860:
  8871   003922                     
  8872                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 962:   l = prec;
  8873   003922  C057  F01C         	movff	_prec,stoa@l
  8874   003926  C058  F01D         	movff	_prec+1,stoa@l+1
  8875   00392A                     l1497:
  8876                           
  8877                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 965:     p = l;
  8878   00392A  C01C  F016         	movff	stoa@l,stoa@p
  8879   00392E  C01D  F017         	movff	stoa@l+1,stoa@p+1
  8880                           
  8881                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 969:     w = width;
  8882   003932  C055  F018         	movff	_width,stoa@w
  8883   003936  C056  F019         	movff	_width+1,stoa@w+1
  8884                           
  8885                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 970:     if (!(flags & (1 << 0))) {
  8886   00393A  B059               	btfsc	_flags^0,0,c
  8887   00393C  EFA2  F01C         	goto	u8871
  8888   003940  EFA4  F01C         	goto	u8870
  8889   003944                     u8871:
  8890   003944  EFE0  F01C         	goto	l7312
  8891   003948                     u8870:
  8892   003948  EFB2  F01C         	goto	l7306
  8893   00394C                     l7302:
  8894                           
  8895                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 972:             fputc(' ', fp);
  8896   00394C  0E00               	movlw	0
  8897   00394E  6E08               	movwf	(fputc@c+1)^0,c
  8898   003950  0E20               	movlw	32
  8899   003952  6E07               	movwf	fputc@c^0,c
  8900   003954  C010  F009         	movff	stoa@fp,fputc@fp
  8901   003958  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  8902   00395C  ECD2  F022         	call	_fputc	;wreg free
  8903   003960                     
  8904                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 973:             ++l;
  8905   003960  4A1C               	infsnz	stoa@l^0,f,c
  8906   003962  2A1D               	incf	(stoa@l+1)^0,f,c
  8907   003964                     l7306:
  8908                           
  8909                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 971:         while (l < w) {
  8910   003964  5018               	movf	stoa@w^0,w,c
  8911   003966  5C1C               	subwf	stoa@l^0,w,c
  8912   003968  501D               	movf	(stoa@l+1)^0,w,c
  8913   00396A  0A80               	xorlw	128
  8914   00396C  6E14               	movwf	??_stoa^0,c
  8915   00396E  5019               	movf	(stoa@w+1)^0,w,c
  8916   003970  0A80               	xorlw	128
  8917   003972  5814               	subwfb	??_stoa^0,w,c
  8918   003974  A0D8               	btfss	status,0,c
  8919   003976  EFBF  F01C         	goto	u8881
  8920   00397A  EFC1  F01C         	goto	u8880
  8921   00397E                     u8881:
  8922   00397E  EFA6  F01C         	goto	l7302
  8923   003982                     u8880:
  8924   003982  EFE0  F01C         	goto	l7312
  8925   003986                     l7308:
  8926                           
  8927                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 980:         fputc(*cp, fp);
  8928   003986  C01A  FFF6         	movff	stoa@cp,tblptrl
  8929   00398A  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  8930   00398E  0E00               	movlw	low (__mediumconst shr (0+16))
  8931   003990  6EF8               	movwf	tblptru,c
  8932   003992  0E0F               	movlw	(high __ramtop+-1)
  8933   003994  64F7               	cpfsgt	tblptrh,c
  8934   003996  D003               	bra	u8897
  8935   003998  0008               	tblrd		*
  8936   00399A  50F5               	movf	tablat,w,c
  8937   00399C  D005               	bra	u8890
  8938   00399E                     u8897:
  8939   00399E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8940   0039A2  CFF7 FFE2          	movff	tblptrh,fsr1h
  8941   0039A6  50E7               	movf	indf1,w,c
  8942   0039A8                     u8890:
  8943   0039A8  6E14               	movwf	??_stoa^0,c
  8944   0039AA  5014               	movf	??_stoa^0,w,c
  8945   0039AC  6E07               	movwf	fputc@c^0,c
  8946   0039AE  6A08               	clrf	(fputc@c+1)^0,c
  8947   0039B0  C010  F009         	movff	stoa@fp,fputc@fp
  8948   0039B4  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  8949   0039B8  ECD2  F022         	call	_fputc	;wreg free
  8950   0039BC                     
  8951                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 981:         ++cp;
  8952   0039BC  4A1A               	infsnz	stoa@cp^0,f,c
  8953   0039BE  2A1B               	incf	(stoa@cp+1)^0,f,c
  8954   0039C0                     l7312:
  8955                           
  8956                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 979:     while (p--) {
  8957   0039C0  0616               	decf	stoa@p^0,f,c
  8958   0039C2  A0D8               	btfss	status,0,c
  8959   0039C4  0617               	decf	(stoa@p+1)^0,f,c
  8960   0039C6  2816               	incf	stoa@p^0,w,c
  8961   0039C8  E106               	bnz	u8901
  8962   0039CA  2817               	incf	(stoa@p+1)^0,w,c
  8963   0039CC  A4D8               	btfss	status,2,c
  8964   0039CE  EFEB  F01C         	goto	u8901
  8965   0039D2  EFED  F01C         	goto	u8900
  8966   0039D6                     u8901:
  8967   0039D6  EFC3  F01C         	goto	l7308
  8968   0039DA                     u8900:
  8969   0039DA                     
  8970                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 986:     if (flags & (1 << 0)) {
  8971   0039DA  A059               	btfss	_flags^0,0,c
  8972   0039DC  EFF2  F01C         	goto	u8911
  8973   0039E0  EFF4  F01C         	goto	u8910
  8974   0039E4                     u8911:
  8975   0039E4  EF11  F01D         	goto	l1509
  8976   0039E8                     u8910:
  8977   0039E8  EF02  F01D         	goto	l7320
  8978   0039EC                     l7316:
  8979                           
  8980                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 988:             fputc(' ', fp);
  8981   0039EC  0E00               	movlw	0
  8982   0039EE  6E08               	movwf	(fputc@c+1)^0,c
  8983   0039F0  0E20               	movlw	32
  8984   0039F2  6E07               	movwf	fputc@c^0,c
  8985   0039F4  C010  F009         	movff	stoa@fp,fputc@fp
  8986   0039F8  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  8987   0039FC  ECD2  F022         	call	_fputc	;wreg free
  8988   003A00                     
  8989                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 989:             ++l;
  8990   003A00  4A1C               	infsnz	stoa@l^0,f,c
  8991   003A02  2A1D               	incf	(stoa@l+1)^0,f,c
  8992   003A04                     l7320:
  8993                           
  8994                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 987:         while (l < w) {
  8995   003A04  5018               	movf	stoa@w^0,w,c
  8996   003A06  5C1C               	subwf	stoa@l^0,w,c
  8997   003A08  501D               	movf	(stoa@l+1)^0,w,c
  8998   003A0A  0A80               	xorlw	128
  8999   003A0C  6E14               	movwf	??_stoa^0,c
  9000   003A0E  5019               	movf	(stoa@w+1)^0,w,c
  9001   003A10  0A80               	xorlw	128
  9002   003A12  5814               	subwfb	??_stoa^0,w,c
  9003   003A14  A0D8               	btfss	status,0,c
  9004   003A16  EF0F  F01D         	goto	u8921
  9005   003A1A  EF11  F01D         	goto	u8920
  9006   003A1E                     u8921:
  9007   003A1E  EFF6  F01C         	goto	l7316
  9008   003A22                     u8920:
  9009   003A22                     l1509:
  9010   003A22  0012               	return		;funcret
  9011   003A24                     __end_of_stoa:
  9012                           	callstack 0
  9013                           
  9014 ;; *************** function _read_prec_or_width *****************
  9015 ;; Defined at:
  9016 ;;		line 1158 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  fmt             1   11[COMRAM] PTR PTR const unsigned c
  9019 ;;		 -> vfprintf@cfmt(2), 
  9020 ;;  ap              1   12[COMRAM] PTR PTR void [1]
  9021 ;;		 -> printf@ap(1), sprintf@ap(1), 
  9022 ;; Auto vars:     Size  Location     Type
  9023 ;;  c               1   13[COMRAM] unsigned char 
  9024 ;;  n               2   14[COMRAM] int 
  9025 ;; Return value:  Size  Location     Type
  9026 ;;                  2   11[COMRAM] int 
  9027 ;; Registers used:
  9028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9037 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9038 ;;Total ram usage:        5 bytes
  9039 ;; Hardware stack levels used: 1
  9040 ;; Hardware stack levels required when called: 2
  9041 ;; This function calls:
  9042 ;;		___wmul
  9043 ;; This function is called by:
  9044 ;;		_vfpfcnvrt
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           	psect	text34
  9049   004894                     __ptext34:
  9050                           	callstack 0
  9051   004894                     _read_prec_or_width:
  9052                           	callstack 24
  9053   004894                     
  9054                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1159:     int n = 0;
  9055   004894  0E00               	movlw	0
  9056   004896  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9057   004898  0E00               	movlw	0
  9058   00489A  6E0F               	movwf	read_prec_or_width@n^0,c
  9059   00489C                     
  9060                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1160:     if ((*fmt)[0] == '*') {
  9061   00489C  500C               	movf	read_prec_or_width@fmt^0,w,c
  9062   00489E  6ED9               	movwf	fsr2l,c
  9063   0048A0  6ADA               	clrf	fsr2h,c
  9064   0048A2  CFDE FFF6          	movff	postinc2,tblptrl
  9065   0048A6  CFDD FFF7          	movff	postdec2,tblptrh
  9066   0048AA                     	if	0	;tblptru may be non-zero
  9067   0048AA                     	endif
  9068   0048AA                     	if	0	;tblptru may be non-zero
  9069   0048AA                     	endif
  9070   0048AA  0008               	tblrd		*
  9071   0048AC  50F5               	movf	tablat,w,c
  9072   0048AE  0A2A               	xorlw	42
  9073   0048B0  A4D8               	btfss	status,2,c
  9074   0048B2  EF5D  F024         	goto	u8971
  9075   0048B6  EF5F  F024         	goto	u8970
  9076   0048BA                     u8971:
  9077   0048BA  EF89  F024         	goto	l7362
  9078   0048BE                     u8970:
  9079   0048BE                     
  9080                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1161:         ++*fmt;
  9081   0048BE  500C               	movf	read_prec_or_width@fmt^0,w,c
  9082   0048C0  6ED9               	movwf	fsr2l,c
  9083   0048C2  6ADA               	clrf	fsr2h,c
  9084   0048C4  2ADE               	incf	postinc2,f,c
  9085   0048C6  0E00               	movlw	0
  9086   0048C8  22DD               	addwfc	postdec2,f,c
  9087   0048CA                     
  9088                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1162:         n = (*(int *)__va_arg
      +                          (*(int **)*ap, (int)0));
  9089   0048CA  500D               	movf	read_prec_or_width@ap^0,w,c
  9090   0048CC  6ED9               	movwf	fsr2l,c
  9091   0048CE  6ADA               	clrf	fsr2h,c
  9092   0048D0  0E02               	movlw	2
  9093   0048D2  26DF               	addwf	indf2,f,c
  9094   0048D4  5CDF               	subwf	indf2,w,c
  9095   0048D6  6ED9               	movwf	fsr2l,c
  9096   0048D8  6ADA               	clrf	fsr2h,c
  9097   0048DA  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  9098   0048DE  CFDE F010          	movff	postinc2,read_prec_or_width@n+1
  9099                           
  9100                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1163:     } else {
  9101   0048E2  EF9C  F024         	goto	l1525
  9102   0048E6                     l7358:
  9103                           
  9104                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1166:             n = n * 10 + c;
  9105   0048E6  C00F  F006         	movff	read_prec_or_width@n,___wmul@multiplier
  9106   0048EA  C010  F007         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  9107   0048EE  0E00               	movlw	0
  9108   0048F0  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  9109   0048F2  0E0A               	movlw	10
  9110   0048F4  6E08               	movwf	___wmul@multiplicand^0,c
  9111   0048F6  EC2C  F028         	call	___wmul	;wreg free
  9112   0048FA  500E               	movf	read_prec_or_width@c^0,w,c
  9113   0048FC  2406               	addwf	?___wmul^0,w,c
  9114   0048FE  6E0F               	movwf	read_prec_or_width@n^0,c
  9115   004900  0E00               	movlw	0
  9116   004902  2007               	addwfc	(?___wmul+1)^0,w,c
  9117   004904  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9118   004906                     
  9119                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1167:             ++*fmt;
  9120   004906  500C               	movf	read_prec_or_width@fmt^0,w,c
  9121   004908  6ED9               	movwf	fsr2l,c
  9122   00490A  6ADA               	clrf	fsr2h,c
  9123   00490C  2ADE               	incf	postinc2,f,c
  9124   00490E  0E00               	movlw	0
  9125   004910  22DD               	addwfc	postdec2,f,c
  9126   004912                     l7362:
  9127                           
  9128                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1165:         while ((c = ((unsigne
      +                          d)(*fmt)[0]) - '0') < 10) {
  9129   004912  500C               	movf	read_prec_or_width@fmt^0,w,c
  9130   004914  6ED9               	movwf	fsr2l,c
  9131   004916  6ADA               	clrf	fsr2h,c
  9132   004918  CFDE FFF6          	movff	postinc2,tblptrl
  9133   00491C  CFDD FFF7          	movff	postdec2,tblptrh
  9134   004920                     	if	0	;tblptru may be non-zero
  9135   004920                     	endif
  9136   004920                     	if	0	;tblptru may be non-zero
  9137   004920                     	endif
  9138   004920  0008               	tblrd		*
  9139   004922  50F5               	movf	tablat,w,c
  9140   004924  0FD0               	addlw	208
  9141   004926  6E0E               	movwf	read_prec_or_width@c^0,c
  9142   004928  0E09               	movlw	9
  9143   00492A  640E               	cpfsgt	read_prec_or_width@c^0,c
  9144   00492C  EF9A  F024         	goto	u8981
  9145   004930  EF9C  F024         	goto	u8980
  9146   004934                     u8981:
  9147   004934  EF73  F024         	goto	l7358
  9148   004938                     u8980:
  9149   004938                     l1525:
  9150                           
  9151                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1170:     return n;
  9152   004938  C00F  F00C         	movff	read_prec_or_width@n,?_read_prec_or_width
  9153   00493C  C010  F00D         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  9154   004940  0012               	return		;funcret
  9155   004942                     __end_of_read_prec_or_width:
  9156                           	callstack 0
  9157                           
  9158 ;; *************** function ___wmul *****************
  9159 ;; Defined at:
  9160 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul16.c"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;  multiplier      2    5[COMRAM] unsigned int 
  9163 ;;  multiplicand    2    7[COMRAM] unsigned int 
  9164 ;; Auto vars:     Size  Location     Type
  9165 ;;  product         2    9[COMRAM] unsigned int 
  9166 ;; Return value:  Size  Location     Type
  9167 ;;                  2    5[COMRAM] unsigned int 
  9168 ;; Registers used:
  9169 ;;		wreg, status,2, status,0, prodl, prodh
  9170 ;; Tracked objects:
  9171 ;;		On entry : 0/0
  9172 ;;		On exit  : 0/0
  9173 ;;		Unchanged: 0/0
  9174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9178 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9179 ;;Total ram usage:        6 bytes
  9180 ;; Hardware stack levels used: 1
  9181 ;; Hardware stack levels required when called: 1
  9182 ;; This function calls:
  9183 ;;		Nothing
  9184 ;; This function is called by:
  9185 ;;		_read_prec_or_width
  9186 ;; This function uses a non-reentrant model
  9187 ;;
  9188                           
  9189                           	psect	text35
  9190   005058                     __ptext35:
  9191                           	callstack 0
  9192   005058                     ___wmul:
  9193                           	callstack 24
  9194   005058  5006               	movf	___wmul@multiplier^0,w,c
  9195   00505A  0208               	mulwf	___wmul@multiplicand^0,c
  9196   00505C  CFF3 F00A          	movff	prodl,___wmul@product
  9197   005060  CFF4 F00B          	movff	prodh,___wmul@product+1
  9198   005064  5006               	movf	___wmul@multiplier^0,w,c
  9199   005066  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  9200   005068  50F3               	movf	243,w,c
  9201   00506A  260B               	addwf	(___wmul@product+1)^0,f,c
  9202   00506C  5007               	movf	(___wmul@multiplier+1)^0,w,c
  9203   00506E  0208               	mulwf	___wmul@multiplicand^0,c
  9204   005070  50F3               	movf	243,w,c
  9205   005072  260B               	addwf	(___wmul@product+1)^0,f,c
  9206   005074  C00A  F006         	movff	___wmul@product,?___wmul
  9207   005078  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  9208   00507C  0012               	return		;funcret
  9209   00507E                     __end_of___wmul:
  9210                           	callstack 0
  9211                           
  9212 ;; *************** function _efgtoa *****************
  9213 ;; Defined at:
  9214 ;;		line 587 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  9217 ;;		 -> NULL(0), sprintf@f(12), 
  9218 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  9219 ;;  c               1   42[BANK0 ] unsigned char 
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;  u               4   85[BANK0 ] struct flui
  9222 ;;  g               4   79[BANK0 ] struct flui
  9223 ;;  l               4   74[BANK0 ] struct flui
  9224 ;;  h               4   70[BANK0 ] struct flui
  9225 ;;  ou              4   64[BANK0 ] struct flui
  9226 ;;  n               2   83[BANK0 ] int 
  9227 ;;  i               2   68[BANK0 ] int 
  9228 ;;  w               2   62[BANK0 ] int 
  9229 ;;  e               2   60[BANK0 ] int 
  9230 ;;  m               2   58[BANK0 ] int 
  9231 ;;  d               2   56[BANK0 ] int 
  9232 ;;  t               2   49[BANK0 ] int 
  9233 ;;  p               2   47[BANK0 ] int 
  9234 ;;  ne              2   45[BANK0 ] int 
  9235 ;;  sign            1   78[BANK0 ] unsigned char 
  9236 ;;  nmode           1   55[BANK0 ] unsigned char 
  9237 ;;  mode            1   54[BANK0 ] unsigned char 
  9238 ;;  pp              1   53[BANK0 ] unsigned char 
  9239 ;;  esign           1    0        unsigned char 
  9240 ;; Return value:  Size  Location     Type
  9241 ;;                  1    wreg      void 
  9242 ;; Registers used:
  9243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9244 ;; Tracked objects:
  9245 ;;		On entry : 0/0
  9246 ;;		On exit  : 0/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9249 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9250 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9251 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9252 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9253 ;;Total ram usage:       53 bytes
  9254 ;; Hardware stack levels used: 1
  9255 ;; Hardware stack levels required when called: 5
  9256 ;; This function calls:
  9257 ;;		___fladd
  9258 ;;		___fldiv
  9259 ;;		___fleq
  9260 ;;		___flge
  9261 ;;		___flmul
  9262 ;;		___flneg
  9263 ;;		___flsub
  9264 ;;		___fltol
  9265 ;;		___fpclassifyf
  9266 ;;		_floorf
  9267 ;;		_labs
  9268 ;;		_memcpy
  9269 ;;		_pad
  9270 ;;		_strcpy
  9271 ;; This function is called by:
  9272 ;;		_vfpfcnvrt
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276                           	psect	text36
  9277   000152                     __ptext36:
  9278                           	callstack 0
  9279   000152                     _efgtoa:
  9280                           	callstack 21
  9281   000152                     
  9282                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 587: static void efgtoa(FILE *fp, l
      +                          ong double f, char c);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 588: {;D:\MPLA
      +                          BX\Compiler\pic\sources\c99\common\doprnt.c: 589:     char mode, nmode, pp, sign, esign;
      +                          ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, 
      +                          t, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 591:     long double h, l;;D:\
      +                          MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 592:  union flui g, u, ou;
  9283   000152  0E00               	movlw	0
  9284   000154  0100               	movlb	0	; () banked
  9285   000156  6FAE               	movwf	efgtoa@sign& (0+255),b
  9286   000158                     
  9287                           ; BSR set to: 0
  9288                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  9289   000158  C086  F0AF         	movff	efgtoa@f,efgtoa@g
  9290   00015C  C087  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  9291   000160  C088  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  9292   000164  C089  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  9293   000168                     
  9294                           ; BSR set to: 0
  9295                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 597:     if (g.f < 0.0) {
  9296   000168  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  9297   00016A  EFBB  F000         	goto	u8500
  9298   00016E  EFB9  F000         	goto	u8501
  9299   000172                     u8501:
  9300   000172  EFCF  F000         	goto	l7072
  9301   000176                     u8500:
  9302   000176                     
  9303                           ; BSR set to: 0
  9304                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 598:         sign = 1;
  9305   000176  0E01               	movlw	1
  9306   000178  6FAE               	movwf	efgtoa@sign& (0+255),b
  9307   00017A                     
  9308                           ; BSR set to: 0
  9309                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 599:         g.f = -g.f;
  9310   00017A  C0AF  F080         	movff	efgtoa@g,___flneg@f1
  9311   00017E  C0B0  F081         	movff	efgtoa@g+1,___flneg@f1+1
  9312   000182  C0B1  F082         	movff	efgtoa@g+2,___flneg@f1+2
  9313   000186  C0B2  F083         	movff	efgtoa@g+3,___flneg@f1+3
  9314   00018A  EC75  F027         	call	___flneg	;wreg free
  9315   00018E  C080  F0AF         	movff	?___flneg,efgtoa@g
  9316   000192  C081  F0B0         	movff	?___flneg+1,efgtoa@g+1
  9317   000196  C082  F0B1         	movff	?___flneg+2,efgtoa@g+2
  9318   00019A  C083  F0B2         	movff	?___flneg+3,efgtoa@g+3
  9319   00019E                     l7072:
  9320                           
  9321                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  9322   00019E  0E00               	movlw	0
  9323   0001A0  0100               	movlb	0	; () banked
  9324   0001A2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9325   0001A4  0E00               	movlw	0
  9326   0001A6  6FB3               	movwf	efgtoa@n& (0+255),b
  9327   0001A8                     
  9328                           ; BSR set to: 0
  9329                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 604:     w = width;
  9330   0001A8  C055  F09E         	movff	_width,efgtoa@w
  9331   0001AC  C056  F09F         	movff	_width+1,efgtoa@w+1
  9332   0001B0                     
  9333                           ; BSR set to: 0
  9334                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 605:     if (sign
  9335   0001B0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9336   0001B2  B4D8               	btfsc	status,2,c
  9337   0001B4  EFDE  F000         	goto	u8511
  9338   0001B8  EFE0  F000         	goto	u8510
  9339   0001BC                     u8511:
  9340   0001BC  EFF4  F000         	goto	l7086
  9341   0001C0                     u8510:
  9342   0001C0                     
  9343                           ; BSR set to: 0
  9344                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 609:    ) {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 610:   sign = sign ? '-' : '+';
  9345   0001C0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9346   0001C2  A4D8               	btfss	status,2,c
  9347   0001C4  EFE6  F000         	goto	u8521
  9348   0001C8  EFE8  F000         	goto	u8520
  9349   0001CC                     u8521:
  9350   0001CC  EFEE  F000         	goto	l7082
  9351   0001D0                     u8520:
  9352   0001D0                     
  9353                           ; BSR set to: 0
  9354   0001D0  0E00               	movlw	0
  9355   0001D2  6F94               	movwf	(_efgtoa$4064+1)& (0+255),b
  9356   0001D4  0E2B               	movlw	43
  9357   0001D6  6F93               	movwf	_efgtoa$4064& (0+255),b
  9358   0001D8  EFF2  F000         	goto	l7084
  9359   0001DC                     l7082:
  9360                           
  9361                           ; BSR set to: 0
  9362   0001DC  0E00               	movlw	0
  9363   0001DE  6F94               	movwf	(_efgtoa$4064+1)& (0+255),b
  9364   0001E0  0E2D               	movlw	45
  9365   0001E2  6F93               	movwf	_efgtoa$4064& (0+255),b
  9366   0001E4                     l7084:
  9367                           
  9368                           ; BSR set to: 0
  9369   0001E4  C093  F0AE         	movff	_efgtoa$4064,efgtoa@sign
  9370   0001E8                     l7086:
  9371                           
  9372                           ; BSR set to: 0
  9373                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 619:     if (( __fpclassifyf(g.f) =
      +                          = 1 )) {
  9374   0001E8  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  9375   0001EC  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9376   0001F0  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9377   0001F4  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9378   0001F8  EC6E  F021         	call	___fpclassifyf	;wreg free
  9379   0001FC  0406               	decf	?___fpclassifyf^0,w,c
  9380   0001FE  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9381   000200  A4D8               	btfss	status,2,c
  9382   000202  EF05  F001         	goto	u8531
  9383   000206  EF07  F001         	goto	u8530
  9384   00020A                     u8531:
  9385   00020A  EF3A  F001         	goto	l7104
  9386   00020E                     u8530:
  9387   00020E                     
  9388                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 620:   if (sign) {
  9389   00020E  0100               	movlb	0	; () banked
  9390   000210  51AE               	movf	efgtoa@sign& (0+255),w,b
  9391   000212  B4D8               	btfsc	status,2,c
  9392   000214  EF0E  F001         	goto	u8541
  9393   000218  EF10  F001         	goto	u8540
  9394   00021C                     u8541:
  9395   00021C  EF19  F001         	goto	l7096
  9396   000220                     u8540:
  9397   000220                     
  9398                           ; BSR set to: 0
  9399                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] = sign;
  9400   000220  C0AE  F127         	movff	efgtoa@sign,_dbuf
  9401   000224                     
  9402                           ; BSR set to: 0
  9403                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 622:    w--;
  9404   000224  079E               	decf	efgtoa@w& (0+255),f,b
  9405   000226  A0D8               	btfss	status,0,c
  9406   000228  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9407   00022A                     
  9408                           ; BSR set to: 0
  9409                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  9410   00022A  0E00               	movlw	0
  9411   00022C  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9412   00022E  0E01               	movlw	1
  9413   000230  6FB3               	movwf	efgtoa@n& (0+255),b
  9414   000232                     l7096:
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 631:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 632:             strcpy(&dbuf[n], "inf");
  9418   000232  0E27               	movlw	low _dbuf
  9419   000234  25B3               	addwf	efgtoa@n& (0+255),w,b
  9420   000236  6E06               	movwf	strcpy@dest^0,c
  9421   000238  0E01               	movlw	high _dbuf
  9422   00023A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9423   00023C  6E07               	movwf	(strcpy@dest+1)^0,c
  9424   00023E  0EEB               	movlw	low STR_30
  9425   000240  6E08               	movwf	strcpy@src^0,c
  9426   000242  0EFF               	movlw	high STR_30
  9427   000244  6E09               	movwf	(strcpy@src+1)^0,c
  9428   000246  EC92  F027         	call	_strcpy	;wreg free
  9429   00024A                     l7098:
  9430                           
  9431                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 633:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9432   00024A  0100               	movlb	0	; () banked
  9433   00024C  0EFD               	movlw	253
  9434   00024E  279E               	addwf	efgtoa@w& (0+255),f,b
  9435   000250  0EFF               	movlw	255
  9436   000252  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  9437   000254                     
  9438                           ; BSR set to: 0
  9439                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 635:         return (void) pad(fp, 
      +                          &dbuf[0], w);
  9440   000254  C084  F017         	movff	efgtoa@fp,pad@fp
  9441   000258  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  9442   00025C  0E27               	movlw	low _dbuf
  9443   00025E  6E19               	movwf	pad@buf^0,c
  9444   000260  0E01               	movlw	high _dbuf
  9445   000262  6E1A               	movwf	(pad@buf+1)^0,c
  9446   000264  C09E  F01B         	movff	efgtoa@w,pad@p
  9447   000268  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  9448   00026C  ECF6  F024         	call	_pad	;wreg free
  9449   000270  EFA5  F005         	goto	l1448
  9450   000274                     l7104:
  9451                           
  9452                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 637:     if (( __fpclassifyf(g.f) =
      +                          = 0 )) {
  9453   000274  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  9454   000278  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9455   00027C  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9456   000280  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9457   000284  EC6E  F021         	call	___fpclassifyf	;wreg free
  9458   000288  5006               	movf	?___fpclassifyf^0,w,c
  9459   00028A  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9460   00028C  A4D8               	btfss	status,2,c
  9461   00028E  EF4B  F001         	goto	u8551
  9462   000292  EF4D  F001         	goto	u8550
  9463   000296                     u8551:
  9464   000296  EF6D  F001         	goto	l7122
  9465   00029A                     u8550:
  9466   00029A                     
  9467                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 638:   if (sign) {
  9468   00029A  0100               	movlb	0	; () banked
  9469   00029C  51AE               	movf	efgtoa@sign& (0+255),w,b
  9470   00029E  B4D8               	btfsc	status,2,c
  9471   0002A0  EF54  F001         	goto	u8561
  9472   0002A4  EF56  F001         	goto	u8560
  9473   0002A8                     u8561:
  9474   0002A8  EF5F  F001         	goto	l7114
  9475   0002AC                     u8560:
  9476   0002AC                     
  9477                           ; BSR set to: 0
  9478                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] = sign;
  9479   0002AC  C0AE  F127         	movff	efgtoa@sign,_dbuf
  9480   0002B0                     
  9481                           ; BSR set to: 0
  9482                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 640:    w--;
  9483   0002B0  079E               	decf	efgtoa@w& (0+255),f,b
  9484   0002B2  A0D8               	btfss	status,0,c
  9485   0002B4  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9486   0002B6                     
  9487                           ; BSR set to: 0
  9488                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  9489   0002B6  0E00               	movlw	0
  9490   0002B8  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9491   0002BA  0E01               	movlw	1
  9492   0002BC  6FB3               	movwf	efgtoa@n& (0+255),b
  9493   0002BE                     l7114:
  9494                           
  9495                           ; BSR set to: 0
  9496                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 649:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 650:             strcpy(&dbuf[n], "nan");
  9497   0002BE  0E27               	movlw	low _dbuf
  9498   0002C0  25B3               	addwf	efgtoa@n& (0+255),w,b
  9499   0002C2  6E06               	movwf	strcpy@dest^0,c
  9500   0002C4  0E01               	movlw	high _dbuf
  9501   0002C6  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9502   0002C8  6E07               	movwf	(strcpy@dest+1)^0,c
  9503   0002CA  0EEF               	movlw	low STR_33
  9504   0002CC  6E08               	movwf	strcpy@src^0,c
  9505   0002CE  0EFF               	movlw	high STR_33
  9506   0002D0  6E09               	movwf	(strcpy@src+1)^0,c
  9507   0002D2  EC92  F027         	call	_strcpy	;wreg free
  9508   0002D6  EF25  F001         	goto	l7098
  9509   0002DA                     l7122:
  9510                           
  9511                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.0;
  9512   0002DA  0E00               	movlw	0
  9513   0002DC  0100               	movlb	0	; () banked
  9514   0002DE  6FB5               	movwf	efgtoa@u& (0+255),b
  9515   0002E0  0E00               	movlw	0
  9516   0002E2  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  9517   0002E4  0E80               	movlw	128
  9518   0002E6  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  9519   0002E8  0E3F               	movlw	63
  9520   0002EA  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  9521                           
  9522                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  9523   0002EC  0E00               	movlw	0
  9524   0002EE  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  9525   0002F0  0E00               	movlw	0
  9526   0002F2  6F9C               	movwf	efgtoa@e& (0+255),b
  9527   0002F4                     
  9528                           ; BSR set to: 0
  9529                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f == 0.0)) {
  9530   0002F4  C0AF  F006         	movff	efgtoa@g,___fleq@ff1
  9531   0002F8  C0B0  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  9532   0002FC  C0B1  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  9533   000300  C0B2  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  9534   000304  0E00               	movlw	0
  9535   000306  6E0A               	movwf	___fleq@ff2^0,c
  9536   000308  0E00               	movlw	0
  9537   00030A  6E0B               	movwf	(___fleq@ff2+1)^0,c
  9538   00030C  0E00               	movlw	0
  9539   00030E  6E0C               	movwf	(___fleq@ff2+2)^0,c
  9540   000310  0E00               	movlw	0
  9541   000312  6E0D               	movwf	(___fleq@ff2+3)^0,c
  9542   000314  ECA1  F024         	call	___fleq	;wreg free
  9543   000318  B0D8               	btfsc	status,0,c
  9544   00031A  EF91  F001         	goto	u8571
  9545   00031E  EF93  F001         	goto	u8570
  9546   000322                     u8571:
  9547   000322  EF72  F002         	goto	l1451
  9548   000326                     u8570:
  9549   000326  EFA0  F001         	goto	l7130
  9550   00032A                     l1453:
  9551                           
  9552                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  9553   00032A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  9554   00032E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  9555   000332  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  9556   000336  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  9557   00033A                     
  9558                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 662:    ++e;
  9559   00033A  0100               	movlb	0	; () banked
  9560   00033C  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  9561   00033E  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  9562   000340                     l7130:
  9563                           
  9564                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 660:   while ((labs((g).u-((ou.f = 
      +                          u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  9565   000340  C0B5  F014         	movff	efgtoa@u,___flmul@b
  9566   000344  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  9567   000348  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  9568   00034C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  9569   000350  0E00               	movlw	0
  9570   000352  6E18               	movwf	___flmul@a^0,c
  9571   000354  0E00               	movlw	0
  9572   000356  6E19               	movwf	(___flmul@a+1)^0,c
  9573   000358  0E20               	movlw	32
  9574   00035A  6E1A               	movwf	(___flmul@a+2)^0,c
  9575   00035C  0E41               	movlw	65
  9576   00035E  6E1B               	movwf	(___flmul@a+3)^0,c
  9577   000360  EC3A  F00D         	call	___flmul	;wreg free
  9578   000364  C014  F0A0         	movff	?___flmul,efgtoa@ou
  9579   000368  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
  9580   00036C  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
  9581   000370  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
  9582   000374  0100               	movlb	0	; () banked
  9583   000376  51A0               	movf	efgtoa@ou& (0+255),w,b
  9584   000378  5DAF               	subwf	efgtoa@g& (0+255),w,b
  9585   00037A  6E06               	movwf	labs@a^0,c
  9586   00037C  51A1               	movf	(efgtoa@ou+1)& (0+255),w,b
  9587   00037E  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  9588   000380  6E07               	movwf	(labs@a+1)^0,c
  9589   000382  51A2               	movf	(efgtoa@ou+2)& (0+255),w,b
  9590   000384  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  9591   000386  6E08               	movwf	(labs@a+2)^0,c
  9592   000388  51A3               	movf	(efgtoa@ou+3)& (0+255),w,b
  9593   00038A  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  9594   00038C  6E09               	movwf	(labs@a+3)^0,c
  9595   00038E  EC4B  F026         	call	_labs	;wreg free
  9596   000392  BE09               	btfsc	(?_labs+3)^0,7,c
  9597   000394  EFD7  F001         	goto	u8581
  9598   000398  5009               	movf	(?_labs+3)^0,w,c
  9599   00039A  1008               	iorwf	(?_labs+2)^0,w,c
  9600   00039C  1007               	iorwf	(?_labs+1)^0,w,c
  9601   00039E  E109               	bnz	u8580
  9602   0003A0  0E02               	movlw	2
  9603   0003A2  5C06               	subwf	?_labs^0,w,c
  9604   0003A4  A0D8               	btfss	status,0,c
  9605   0003A6  EFD7  F001         	goto	u8581
  9606   0003AA  EFD9  F001         	goto	u8580
  9607   0003AE                     u8581:
  9608   0003AE  EF95  F001         	goto	l1453
  9609   0003B2                     u8580:
  9610   0003B2  C0A0  F02D         	movff	efgtoa@ou,___flge@ff1
  9611   0003B6  C0A1  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
  9612   0003BA  C0A2  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
  9613   0003BE  C0A3  F030         	movff	efgtoa@ou+3,___flge@ff1+3
  9614   0003C2  C0AF  F031         	movff	efgtoa@g,___flge@ff2
  9615   0003C6  C0B0  F032         	movff	efgtoa@g+1,___flge@ff2+1
  9616   0003CA  C0B1  F033         	movff	efgtoa@g+2,___flge@ff2+2
  9617   0003CE  C0B2  F034         	movff	efgtoa@g+3,___flge@ff2+3
  9618   0003D2  ECEC  F020         	call	___flge	;wreg free
  9619   0003D6  A0D8               	btfss	status,0,c
  9620   0003D8  EFF0  F001         	goto	u8591
  9621   0003DC  EFF2  F001         	goto	u8590
  9622   0003E0                     u8591:
  9623   0003E0  EF95  F001         	goto	l1453
  9624   0003E4                     u8590:
  9625   0003E4                     
  9626                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 664:   if ((labs((g).u-(u).u) <= 1)
      +                          ) {
  9627   0003E4  0100               	movlb	0	; () banked
  9628   0003E6  51B5               	movf	efgtoa@u& (0+255),w,b
  9629   0003E8  5DAF               	subwf	efgtoa@g& (0+255),w,b
  9630   0003EA  6E06               	movwf	labs@a^0,c
  9631   0003EC  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  9632   0003EE  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  9633   0003F0  6E07               	movwf	(labs@a+1)^0,c
  9634   0003F2  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  9635   0003F4  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  9636   0003F6  6E08               	movwf	(labs@a+2)^0,c
  9637   0003F8  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  9638   0003FA  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  9639   0003FC  6E09               	movwf	(labs@a+3)^0,c
  9640   0003FE  EC4B  F026         	call	_labs	;wreg free
  9641   000402  BE09               	btfsc	(?_labs+3)^0,7,c
  9642   000404  EF11  F002         	goto	u8600
  9643   000408  5009               	movf	(?_labs+3)^0,w,c
  9644   00040A  1008               	iorwf	(?_labs+2)^0,w,c
  9645   00040C  1007               	iorwf	(?_labs+1)^0,w,c
  9646   00040E  E107               	bnz	u8601
  9647   000410  0E02               	movlw	2
  9648   000412  5C06               	subwf	?_labs^0,w,c
  9649   000414  B0D8               	btfsc	status,0,c
  9650   000416  EF0F  F002         	goto	u8601
  9651   00041A  EF11  F002         	goto	u8600
  9652   00041E                     u8601:
  9653   00041E  EF59  F002         	goto	l7148
  9654   000422                     u8600:
  9655   000422                     l7138:
  9656                           
  9657                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 665:    g = u;
  9658   000422  C0B5  F0AF         	movff	efgtoa@u,efgtoa@g
  9659   000426  C0B6  F0B0         	movff	efgtoa@u+1,efgtoa@g+1
  9660   00042A  C0B7  F0B1         	movff	efgtoa@u+2,efgtoa@g+2
  9661   00042E  C0B8  F0B2         	movff	efgtoa@u+3,efgtoa@g+3
  9662                           
  9663                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 666:   }
  9664   000432  EF72  F002         	goto	l1451
  9665   000436                     l7140:
  9666                           
  9667                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 669:     u.f = u.f/10.0;
  9668   000436  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  9669   00043A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  9670   00043E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  9671   000442  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  9672   000446  0E00               	movlw	0
  9673   000448  6E31               	movwf	___fldiv@a^0,c
  9674   00044A  0E00               	movlw	0
  9675   00044C  6E32               	movwf	(___fldiv@a+1)^0,c
  9676   00044E  0E20               	movlw	32
  9677   000450  6E33               	movwf	(___fldiv@a+2)^0,c
  9678   000452  0E41               	movlw	65
  9679   000454  6E34               	movwf	(___fldiv@a+3)^0,c
  9680   000456  EC30  F011         	call	___fldiv	;wreg free
  9681   00045A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  9682   00045E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  9683   000462  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  9684   000466  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  9685   00046A                     
  9686                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 670:     --e;
  9687   00046A  0100               	movlb	0	; () banked
  9688   00046C  079C               	decf	efgtoa@e& (0+255),f,b
  9689   00046E  A0D8               	btfss	status,0,c
  9690   000470  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  9691   000472                     
  9692                           ; BSR set to: 0
  9693                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 671:     if ((labs((g).u-(u).u) <= 
      +                          1)) {
  9694   000472  51B5               	movf	efgtoa@u& (0+255),w,b
  9695   000474  5DAF               	subwf	efgtoa@g& (0+255),w,b
  9696   000476  6E06               	movwf	labs@a^0,c
  9697   000478  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  9698   00047A  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  9699   00047C  6E07               	movwf	(labs@a+1)^0,c
  9700   00047E  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  9701   000480  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  9702   000482  6E08               	movwf	(labs@a+2)^0,c
  9703   000484  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  9704   000486  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  9705   000488  6E09               	movwf	(labs@a+3)^0,c
  9706   00048A  EC4B  F026         	call	_labs	;wreg free
  9707   00048E  BE09               	btfsc	(?_labs+3)^0,7,c
  9708   000490  EF57  F002         	goto	u8610
  9709   000494  5009               	movf	(?_labs+3)^0,w,c
  9710   000496  1008               	iorwf	(?_labs+2)^0,w,c
  9711   000498  1007               	iorwf	(?_labs+1)^0,w,c
  9712   00049A  E107               	bnz	u8611
  9713   00049C  0E02               	movlw	2
  9714   00049E  5C06               	subwf	?_labs^0,w,c
  9715   0004A0  B0D8               	btfsc	status,0,c
  9716   0004A2  EF55  F002         	goto	u8611
  9717   0004A6  EF57  F002         	goto	u8610
  9718   0004AA                     u8611:
  9719   0004AA  EF59  F002         	goto	l7148
  9720   0004AE                     u8610:
  9721   0004AE  EF11  F002         	goto	l7138
  9722   0004B2                     l7148:
  9723                           
  9724                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 668:    while (g.f < u.f) {
  9725   0004B2  C0AF  F02D         	movff	efgtoa@g,___flge@ff1
  9726   0004B6  C0B0  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  9727   0004BA  C0B1  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  9728   0004BE  C0B2  F030         	movff	efgtoa@g+3,___flge@ff1+3
  9729   0004C2  C0B5  F031         	movff	efgtoa@u,___flge@ff2
  9730   0004C6  C0B6  F032         	movff	efgtoa@u+1,___flge@ff2+1
  9731   0004CA  C0B7  F033         	movff	efgtoa@u+2,___flge@ff2+2
  9732   0004CE  C0B8  F034         	movff	efgtoa@u+3,___flge@ff2+3
  9733   0004D2  ECEC  F020         	call	___flge	;wreg free
  9734   0004D6  A0D8               	btfss	status,0,c
  9735   0004D8  EF70  F002         	goto	u8621
  9736   0004DC  EF72  F002         	goto	u8620
  9737   0004E0                     u8621:
  9738   0004E0  EF1B  F002         	goto	l7140
  9739   0004E4                     u8620:
  9740   0004E4                     l1451:
  9741                           
  9742                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  9743   0004E4  C08A  F096         	movff	efgtoa@c,efgtoa@mode
  9744                           
  9745                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 685:     nmode = mode;
  9746   0004E8  C096  F097         	movff	efgtoa@mode,efgtoa@nmode
  9747   0004EC                     
  9748                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 695:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
  9749   0004EC  BE58               	btfsc	(_prec+1)^0,7,c
  9750   0004EE  EF7B  F002         	goto	u8631
  9751   0004F2  EF7D  F002         	goto	u8630
  9752   0004F6                     u8631:
  9753   0004F6  EF83  F002         	goto	l7154
  9754   0004FA                     u8630:
  9755   0004FA  C057  F08F         	movff	_prec,efgtoa@p
  9756   0004FE  C058  F090         	movff	_prec+1,efgtoa@p+1
  9757   000502  EF88  F002         	goto	l7156
  9758   000506                     l7154:
  9759   000506  0E00               	movlw	0
  9760   000508  0100               	movlb	0	; () banked
  9761   00050A  6F90               	movwf	(efgtoa@p+1)& (0+255),b
  9762   00050C  0E06               	movlw	6
  9763   00050E  6F8F               	movwf	efgtoa@p& (0+255),b
  9764   000510                     l7156:
  9765                           
  9766                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 697:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 711:     m = p;
  9767   000510  C08F  F09A         	movff	efgtoa@p,efgtoa@m
  9768   000514  C090  F09B         	movff	efgtoa@p+1,efgtoa@m+1
  9769   000518                     
  9770                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 715:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 716:         ++m;
  9771   000518  0100               	movlb	0	; () banked
  9772   00051A  4B9A               	infsnz	efgtoa@m& (0+255),f,b
  9773   00051C  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
  9774   00051E                     
  9775                           ; BSR set to: 0
  9776                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 717:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 721:     if (nmode == 'f') {
  9777   00051E  0E66               	movlw	102
  9778   000520  1997               	xorwf	efgtoa@nmode& (0+255),w,b
  9779   000522  A4D8               	btfss	status,2,c
  9780   000524  EF96  F002         	goto	u8641
  9781   000528  EF98  F002         	goto	u8640
  9782   00052C                     u8641:
  9783   00052C  EFB8  F002         	goto	l7170
  9784   000530                     u8640:
  9785   000530                     
  9786                           ; BSR set to: 0
  9787                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 722:         if (e < 0) {
  9788   000530  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9789   000532  EF9F  F002         	goto	u8650
  9790   000536  EF9D  F002         	goto	u8651
  9791   00053A                     u8651:
  9792   00053A  EFAB  F002         	goto	l7166
  9793   00053E                     u8650:
  9794   00053E                     
  9795                           ; BSR set to: 0
  9796                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 723:             u.f = 1.0;
  9797   00053E  0E00               	movlw	0
  9798   000540  6FB5               	movwf	efgtoa@u& (0+255),b
  9799   000542  0E00               	movlw	0
  9800   000544  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  9801   000546  0E80               	movlw	128
  9802   000548  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  9803   00054A  0E3F               	movlw	63
  9804   00054C  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  9805                           
  9806                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 724:             e = 0;
  9807   00054E  0E00               	movlw	0
  9808   000550  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  9809   000552  0E00               	movlw	0
  9810   000554  6F9C               	movwf	efgtoa@e& (0+255),b
  9811   000556                     l7166:
  9812                           
  9813                           ; BSR set to: 0
  9814                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 726:         if (!(mode == 'g')) {
  9815   000556  0E67               	movlw	103
  9816   000558  1996               	xorwf	efgtoa@mode& (0+255),w,b
  9817   00055A  B4D8               	btfsc	status,2,c
  9818   00055C  EFB2  F002         	goto	u8661
  9819   000560  EFB4  F002         	goto	u8660
  9820   000564                     u8661:
  9821   000564  EFB8  F002         	goto	l7170
  9822   000568                     u8660:
  9823   000568                     
  9824                           ; BSR set to: 0
  9825                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 727:             m += e;
  9826   000568  519C               	movf	efgtoa@e& (0+255),w,b
  9827   00056A  279A               	addwf	efgtoa@m& (0+255),f,b
  9828   00056C  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  9829   00056E  239B               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9830   000570                     l7170:
  9831                           
  9832                           ; BSR set to: 0
  9833                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  9834   000570  0E00               	movlw	0
  9835   000572  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  9836   000574  0E00               	movlw	0
  9837   000576  6FA4               	movwf	efgtoa@i& (0+255),b
  9838   000578                     
  9839                           ; BSR set to: 0
  9840                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  9841   000578  C0AF  F0A6         	movff	efgtoa@g,efgtoa@h
  9842   00057C  C0B0  F0A7         	movff	efgtoa@g+1,efgtoa@h+1
  9843   000580  C0B1  F0A8         	movff	efgtoa@g+2,efgtoa@h+2
  9844   000584  C0B2  F0A9         	movff	efgtoa@g+3,efgtoa@h+3
  9845   000588                     
  9846                           ; BSR set to: 0
  9847                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  9848   000588  C0B5  F0A0         	movff	efgtoa@u,efgtoa@ou
  9849   00058C  C0B6  F0A1         	movff	efgtoa@u+1,efgtoa@ou+1
  9850   000590  C0B7  F0A2         	movff	efgtoa@u+2,efgtoa@ou+2
  9851   000594  C0B8  F0A3         	movff	efgtoa@u+3,efgtoa@ou+3
  9852                           
  9853                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
  9854   000598  EF49  F003         	goto	l7184
  9855   00059C                     l7176:
  9856                           
  9857                           ; BSR set to: 0
  9858                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 737:         l = floorf(h/u.f);
  9859   00059C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
  9860   0005A0  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
  9861   0005A4  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
  9862   0005A8  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
  9863   0005AC  C0B5  F031         	movff	efgtoa@u,___fldiv@a
  9864   0005B0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
  9865   0005B4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
  9866   0005B8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
  9867   0005BC  EC30  F011         	call	___fldiv	;wreg free
  9868   0005C0  C02D  F046         	movff	?___fldiv,floorf@x
  9869   0005C4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
  9870   0005C8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
  9871   0005CC  C030  F049         	movff	?___fldiv+3,floorf@x+3
  9872   0005D0  EC56  F018         	call	_floorf	;wreg free
  9873   0005D4  C046  F0AA         	movff	?_floorf,efgtoa@l
  9874   0005D8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
  9875   0005DC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
  9876   0005E0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
  9877                           
  9878                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 738:         d = (int)l;
  9879   0005E4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  9880   0005E8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  9881   0005EC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  9882   0005F0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  9883   0005F4  EC68  F020         	call	___fltol	;wreg free
  9884   0005F8  C064  F098         	movff	?___fltol,efgtoa@d
  9885   0005FC  C065  F099         	movff	?___fltol+1,efgtoa@d+1
  9886   000600                     
  9887                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 739:         h -= l*u.f;
  9888   000600  C0A6  F064         	movff	efgtoa@h,___flsub@b
  9889   000604  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
  9890   000608  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
  9891   00060C  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
  9892   000610  C0AA  F018         	movff	efgtoa@l,___flmul@a
  9893   000614  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
  9894   000618  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
  9895   00061C  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
  9896   000620  C0B5  F014         	movff	efgtoa@u,___flmul@b
  9897   000624  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  9898   000628  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  9899   00062C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  9900   000630  EC3A  F00D         	call	___flmul	;wreg free
  9901   000634  C014  F068         	movff	?___flmul,___flsub@a
  9902   000638  C015  F069         	movff	?___flmul+1,___flsub@a+1
  9903   00063C  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  9904   000640  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  9905   000644  ECED  F026         	call	___flsub	;wreg free
  9906   000648  C064  F0A6         	movff	?___flsub,efgtoa@h
  9907   00064C  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
  9908   000650  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
  9909   000654  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
  9910   000658                     
  9911                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 740:         u.f = u.f/10.0;
  9912   000658  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  9913   00065C  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  9914   000660  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  9915   000664  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  9916   000668  0E00               	movlw	0
  9917   00066A  6E31               	movwf	___fldiv@a^0,c
  9918   00066C  0E00               	movlw	0
  9919   00066E  6E32               	movwf	(___fldiv@a+1)^0,c
  9920   000670  0E20               	movlw	32
  9921   000672  6E33               	movwf	(___fldiv@a+2)^0,c
  9922   000674  0E41               	movlw	65
  9923   000676  6E34               	movwf	(___fldiv@a+3)^0,c
  9924   000678  EC30  F011         	call	___fldiv	;wreg free
  9925   00067C  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  9926   000680  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  9927   000684  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  9928   000688  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  9929   00068C                     
  9930                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 741:         ++i;
  9931   00068C  0100               	movlb	0	; () banked
  9932   00068E  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  9933   000690  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  9934   000692                     l7184:
  9935                           
  9936                           ; BSR set to: 0
  9937                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
  9938   000692  519A               	movf	efgtoa@m& (0+255),w,b
  9939   000694  5DA4               	subwf	efgtoa@i& (0+255),w,b
  9940   000696  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  9941   000698  0A80               	xorlw	128
  9942   00069A  6F8B               	movwf	??_efgtoa& (0+255),b
  9943   00069C  519B               	movf	(efgtoa@m+1)& (0+255),w,b
  9944   00069E  0A80               	xorlw	128
  9945   0006A0  598B               	subwfb	??_efgtoa& (0+255),w,b
  9946   0006A2  A0D8               	btfss	status,0,c
  9947   0006A4  EF56  F003         	goto	u8671
  9948   0006A8  EF58  F003         	goto	u8670
  9949   0006AC                     u8671:
  9950   0006AC  EFCE  F002         	goto	l7176
  9951   0006B0                     u8670:
  9952   0006B0                     
  9953                           ; BSR set to: 0
  9954                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 745:     l = u.f*5.0;
  9955   0006B0  C0B5  F014         	movff	efgtoa@u,___flmul@b
  9956   0006B4  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  9957   0006B8  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  9958   0006BC  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  9959   0006C0  0E00               	movlw	0
  9960   0006C2  6E18               	movwf	___flmul@a^0,c
  9961   0006C4  0E00               	movlw	0
  9962   0006C6  6E19               	movwf	(___flmul@a+1)^0,c
  9963   0006C8  0EA0               	movlw	160
  9964   0006CA  6E1A               	movwf	(___flmul@a+2)^0,c
  9965   0006CC  0E40               	movlw	64
  9966   0006CE  6E1B               	movwf	(___flmul@a+3)^0,c
  9967   0006D0  EC3A  F00D         	call	___flmul	;wreg free
  9968   0006D4  C014  F0AA         	movff	?___flmul,efgtoa@l
  9969   0006D8  C015  F0AB         	movff	?___flmul+1,efgtoa@l+1
  9970   0006DC  C016  F0AC         	movff	?___flmul+2,efgtoa@l+2
  9971   0006E0  C017  F0AD         	movff	?___flmul+3,efgtoa@l+3
  9972   0006E4                     
  9973                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 746:     if (h < l) {
  9974   0006E4  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
  9975   0006E8  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  9976   0006EC  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  9977   0006F0  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
  9978   0006F4  C0AA  F031         	movff	efgtoa@l,___flge@ff2
  9979   0006F8  C0AB  F032         	movff	efgtoa@l+1,___flge@ff2+1
  9980   0006FC  C0AC  F033         	movff	efgtoa@l+2,___flge@ff2+2
  9981   000700  C0AD  F034         	movff	efgtoa@l+3,___flge@ff2+3
  9982   000704  ECEC  F020         	call	___flge	;wreg free
  9983   000708  B0D8               	btfsc	status,0,c
  9984   00070A  EF89  F003         	goto	u8681
  9985   00070E  EF8B  F003         	goto	u8680
  9986   000712                     u8681:
  9987   000712  EF96  F003         	goto	l7192
  9988   000716                     u8680:
  9989   000716                     
  9990                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 747:         l = 0.0;
  9991   000716  0E00               	movlw	0
  9992   000718  0100               	movlb	0	; () banked
  9993   00071A  6FAA               	movwf	efgtoa@l& (0+255),b
  9994   00071C  0E00               	movlw	0
  9995   00071E  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
  9996   000720  0E00               	movlw	0
  9997   000722  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
  9998   000724  0E00               	movlw	0
  9999   000726  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10000                           
 10001                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 748:     } else {
 10002   000728  EFBF  F003         	goto	l7198
 10003   00072C                     l7192:
 10004                           
 10005                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 750:         if ((h == l) && !(d % 
      +                          2)) {
 10006   00072C  C0A6  F006         	movff	efgtoa@h,___fleq@ff1
 10007   000730  C0A7  F007         	movff	efgtoa@h+1,___fleq@ff1+1
 10008   000734  C0A8  F008         	movff	efgtoa@h+2,___fleq@ff1+2
 10009   000738  C0A9  F009         	movff	efgtoa@h+3,___fleq@ff1+3
 10010   00073C  C0AA  F00A         	movff	efgtoa@l,___fleq@ff2
 10011   000740  C0AB  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
 10012   000744  C0AC  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
 10013   000748  C0AD  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
 10014   00074C  ECA1  F024         	call	___fleq	;wreg free
 10015   000750  A0D8               	btfss	status,0,c
 10016   000752  EFAD  F003         	goto	u8691
 10017   000756  EFAF  F003         	goto	u8690
 10018   00075A                     u8691:
 10019   00075A  EFBF  F003         	goto	l7198
 10020   00075E                     u8690:
 10021   00075E  0100               	movlb	0	; () banked
 10022   000760  B198               	btfsc	efgtoa@d& (0+255),0,b
 10023   000762  EFB5  F003         	goto	u8701
 10024   000766  EFB7  F003         	goto	u8700
 10025   00076A                     u8701:
 10026   00076A  EFBF  F003         	goto	l7198
 10027   00076E                     u8700:
 10028   00076E                     
 10029                           ; BSR set to: 0
 10030                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 751:             l = 0.0;
 10031   00076E  0E00               	movlw	0
 10032   000770  6FAA               	movwf	efgtoa@l& (0+255),b
 10033   000772  0E00               	movlw	0
 10034   000774  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
 10035   000776  0E00               	movlw	0
 10036   000778  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
 10037   00077A  0E00               	movlw	0
 10038   00077C  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10039   00077E                     l7198:
 10040                           
 10041                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 756:     h = g.f + l;
 10042   00077E  C0AF  F046         	movff	efgtoa@g,___fladd@b
 10043   000782  C0B0  F047         	movff	efgtoa@g+1,___fladd@b+1
 10044   000786  C0B1  F048         	movff	efgtoa@g+2,___fladd@b+2
 10045   00078A  C0B2  F049         	movff	efgtoa@g+3,___fladd@b+3
 10046   00078E  C0AA  F04A         	movff	efgtoa@l,___fladd@a
 10047   000792  C0AB  F04B         	movff	efgtoa@l+1,___fladd@a+1
 10048   000796  C0AC  F04C         	movff	efgtoa@l+2,___fladd@a+2
 10049   00079A  C0AD  F04D         	movff	efgtoa@l+3,___fladd@a+3
 10050   00079E  ECD9  F00A         	call	___fladd	;wreg free
 10051   0007A2  C046  F0A6         	movff	?___fladd,efgtoa@h
 10052   0007A6  C047  F0A7         	movff	?___fladd+1,efgtoa@h+1
 10053   0007AA  C048  F0A8         	movff	?___fladd+2,efgtoa@h+2
 10054   0007AE  C049  F0A9         	movff	?___fladd+3,efgtoa@h+3
 10055   0007B2                     
 10056                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 758:  if (h >= (ou.f*10.0)) {
 10057   0007B2  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
 10058   0007B6  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
 10059   0007BA  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
 10060   0007BE  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
 10061   0007C2  0E00               	movlw	0
 10062   0007C4  6E18               	movwf	___flmul@a^0,c
 10063   0007C6  0E00               	movlw	0
 10064   0007C8  6E19               	movwf	(___flmul@a+1)^0,c
 10065   0007CA  0E20               	movlw	32
 10066   0007CC  6E1A               	movwf	(___flmul@a+2)^0,c
 10067   0007CE  0E41               	movlw	65
 10068   0007D0  6E1B               	movwf	(___flmul@a+3)^0,c
 10069   0007D2  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10070   0007D6  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10071   0007DA  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10072   0007DE  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10073   0007E2  EC3A  F00D         	call	___flmul	;wreg free
 10074   0007E6  C014  F031         	movff	?___flmul,___flge@ff2
 10075   0007EA  C015  F032         	movff	?___flmul+1,___flge@ff2+1
 10076   0007EE  C016  F033         	movff	?___flmul+2,___flge@ff2+2
 10077   0007F2  C017  F034         	movff	?___flmul+3,___flge@ff2+3
 10078   0007F6  ECEC  F020         	call	___flge	;wreg free
 10079   0007FA  A0D8               	btfss	status,0,c
 10080   0007FC  EF02  F004         	goto	u8711
 10081   000800  EF04  F004         	goto	u8710
 10082   000804                     u8711:
 10083   000804  EF2D  F004         	goto	l7210
 10084   000808                     u8710:
 10085   000808                     
 10086                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 759:   e++;
 10087   000808  0100               	movlb	0	; () banked
 10088   00080A  4B9C               	infsnz	efgtoa@e& (0+255),f,b
 10089   00080C  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
 10090   00080E                     
 10091                           ; BSR set to: 0
 10092                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10.0;
 10093   00080E  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10094   000812  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10095   000816  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10096   00081A  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10097   00081E  0E00               	movlw	0
 10098   000820  6E18               	movwf	___flmul@a^0,c
 10099   000822  0E00               	movlw	0
 10100   000824  6E19               	movwf	(___flmul@a+1)^0,c
 10101   000826  0E20               	movlw	32
 10102   000828  6E1A               	movwf	(___flmul@a+2)^0,c
 10103   00082A  0E41               	movlw	65
 10104   00082C  6E1B               	movwf	(___flmul@a+3)^0,c
 10105   00082E  EC3A  F00D         	call	___flmul	;wreg free
 10106   000832  C014  F0A0         	movff	?___flmul,efgtoa@ou
 10107   000836  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
 10108   00083A  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
 10109   00083E  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
 10110   000842                     
 10111                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 762:   if (nmode == 'f') {
 10112   000842  0E66               	movlw	102
 10113   000844  0100               	movlb	0	; () banked
 10114   000846  1997               	xorwf	efgtoa@nmode& (0+255),w,b
 10115   000848  A4D8               	btfss	status,2,c
 10116   00084A  EF29  F004         	goto	u8721
 10117   00084E  EF2B  F004         	goto	u8720
 10118   000852                     u8721:
 10119   000852  EF2D  F004         	goto	l7210
 10120   000856                     u8720:
 10121   000856                     
 10122                           ; BSR set to: 0
 10123                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 764:    m++;
 10124   000856  4B9A               	infsnz	efgtoa@m& (0+255),f,b
 10125   000858  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
 10126   00085A                     l7210:
 10127                           
 10128                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 10129   00085A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
 10130   00085E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
 10131   000862  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
 10132   000866  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
 10133   00086A                     
 10134                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 10135   00086A  C09C  F08D         	movff	efgtoa@e,efgtoa@ne
 10136   00086E  C09D  F08E         	movff	efgtoa@e+1,efgtoa@ne+1
 10137   000872                     
 10138                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 10139   000872  0E00               	movlw	0
 10140   000874  0100               	movlb	0	; () banked
 10141   000876  6F95               	movwf	efgtoa@pp& (0+255),b
 10142   000878                     
 10143                           ; BSR set to: 0
 10144                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 10145   000878  0E00               	movlw	0
 10146   00087A  6F92               	movwf	(efgtoa@t+1)& (0+255),b
 10147   00087C  0E00               	movlw	0
 10148   00087E  6F91               	movwf	efgtoa@t& (0+255),b
 10149   000880                     
 10150                           ; BSR set to: 0
 10151                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 10152   000880  0E00               	movlw	0
 10153   000882  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10154   000884  0E00               	movlw	0
 10155   000886  6FA4               	movwf	efgtoa@i& (0+255),b
 10156                           
 10157                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10158   000888  EF2B  F005         	goto	l7260
 10159   00088C                     l7220:
 10160                           
 10161                           ; BSR set to: 0
 10162                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 780:         l = floorf(h/u.f);
 10163   00088C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
 10164   000890  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
 10165   000894  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
 10166   000898  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
 10167   00089C  C0B5  F031         	movff	efgtoa@u,___fldiv@a
 10168   0008A0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
 10169   0008A4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
 10170   0008A8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
 10171   0008AC  EC30  F011         	call	___fldiv	;wreg free
 10172   0008B0  C02D  F046         	movff	?___fldiv,floorf@x
 10173   0008B4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
 10174   0008B8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
 10175   0008BC  C030  F049         	movff	?___fldiv+3,floorf@x+3
 10176   0008C0  EC56  F018         	call	_floorf	;wreg free
 10177   0008C4  C046  F0AA         	movff	?_floorf,efgtoa@l
 10178   0008C8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
 10179   0008CC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
 10180   0008D0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
 10181                           
 10182                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 781:         d = (int)l > 9 ? 9 : (
      +                          int)l;
 10183   0008D4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10184   0008D8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10185   0008DC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10186   0008E0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10187   0008E4  EC68  F020         	call	___fltol	;wreg free
 10188   0008E8  0100               	movlb	0	; () banked
 10189   0008EA  BF65               	btfsc	(?___fltol+1)& (0+255),7,b
 10190   0008EC  EF83  F004         	goto	u8730
 10191   0008F0  5165               	movf	(?___fltol+1)& (0+255),w,b
 10192   0008F2  E107               	bnz	u8731
 10193   0008F4  0E0A               	movlw	10
 10194   0008F6  5D64               	subwf	?___fltol& (0+255),w,b
 10195   0008F8  B0D8               	btfsc	status,0,c
 10196   0008FA  EF81  F004         	goto	u8731
 10197   0008FE  EF83  F004         	goto	u8730
 10198   000902                     u8731:
 10199   000902  EF93  F004         	goto	l7224
 10200   000906                     u8730:
 10201   000906                     
 10202                           ; BSR set to: 0
 10203   000906  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10204   00090A  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10205   00090E  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10206   000912  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10207   000916  EC68  F020         	call	___fltol	;wreg free
 10208   00091A  C064  F098         	movff	?___fltol,efgtoa@d
 10209   00091E  C065  F099         	movff	?___fltol+1,efgtoa@d+1
 10210   000922  EF97  F004         	goto	l1481
 10211   000926                     l7224:
 10212                           
 10213                           ; BSR set to: 0
 10214   000926  0E00               	movlw	0
 10215   000928  6F99               	movwf	(efgtoa@d+1)& (0+255),b
 10216   00092A  0E09               	movlw	9
 10217   00092C  6F98               	movwf	efgtoa@d& (0+255),b
 10218   00092E                     l1481:
 10219                           
 10220                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 792:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 793:             if (!pp && (ne < 0)) {
 10221   00092E  0100               	movlb	0	; () banked
 10222   000930  5195               	movf	efgtoa@pp& (0+255),w,b
 10223   000932  A4D8               	btfss	status,2,c
 10224   000934  EF9E  F004         	goto	u8741
 10225   000938  EFA0  F004         	goto	u8740
 10226   00093C                     u8741:
 10227   00093C  EFC8  F004         	goto	l7244
 10228   000940                     u8740:
 10229   000940                     
 10230                           ; BSR set to: 0
 10231   000940  BF8E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10232   000942  EFA7  F004         	goto	u8750
 10233   000946  EFA5  F004         	goto	u8751
 10234   00094A                     u8751:
 10235   00094A  EFC8  F004         	goto	l7244
 10236   00094E                     u8750:
 10237   00094E                     
 10238                           ; BSR set to: 0
 10239                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 794:                 dbuf[n++] = '.
      +                          ';
 10240   00094E  0E27               	movlw	low _dbuf
 10241   000950  25B3               	addwf	efgtoa@n& (0+255),w,b
 10242   000952  6ED9               	movwf	fsr2l,c
 10243   000954  0E01               	movlw	high _dbuf
 10244   000956  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10245   000958  6EDA               	movwf	fsr2h,c
 10246   00095A  0E2E               	movlw	46
 10247   00095C  6EDF               	movwf	indf2,c
 10248   00095E                     
 10249                           ; BSR set to: 0
 10250   00095E  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10251   000960  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10252   000962                     
 10253                           ; BSR set to: 0
 10254                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 795:                 --w;
 10255   000962  079E               	decf	efgtoa@w& (0+255),f,b
 10256   000964  A0D8               	btfss	status,0,c
 10257   000966  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10258   000968                     
 10259                           ; BSR set to: 0
 10260                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 796:                 pp = 1;
 10261   000968  0E01               	movlw	1
 10262   00096A  6F95               	movwf	efgtoa@pp& (0+255),b
 10263   00096C  EFC8  F004         	goto	l7244
 10264   000970                     l7236:
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 799:                 dbuf[n++] = '0
      +                          ';
 10268   000970  0E27               	movlw	low _dbuf
 10269   000972  25B3               	addwf	efgtoa@n& (0+255),w,b
 10270   000974  6ED9               	movwf	fsr2l,c
 10271   000976  0E01               	movlw	high _dbuf
 10272   000978  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10273   00097A  6EDA               	movwf	fsr2h,c
 10274   00097C  0E30               	movlw	48
 10275   00097E  6EDF               	movwf	indf2,c
 10276   000980                     
 10277                           ; BSR set to: 0
 10278   000980  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10279   000982  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10280   000984                     
 10281                           ; BSR set to: 0
 10282                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 800:                 --w;
 10283   000984  079E               	decf	efgtoa@w& (0+255),f,b
 10284   000986  A0D8               	btfss	status,0,c
 10285   000988  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10286   00098A                     
 10287                           ; BSR set to: 0
 10288                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 801:                 --t;
 10289   00098A  0791               	decf	efgtoa@t& (0+255),f,b
 10290   00098C  A0D8               	btfss	status,0,c
 10291   00098E  0792               	decf	(efgtoa@t+1)& (0+255),f,b
 10292   000990                     l7244:
 10293                           
 10294                           ; BSR set to: 0
 10295                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 798:             while (t) {
 10296   000990  5191               	movf	efgtoa@t& (0+255),w,b
 10297   000992  1192               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10298   000994  A4D8               	btfss	status,2,c
 10299   000996  EFCF  F004         	goto	u8761
 10300   00099A  EFD1  F004         	goto	u8760
 10301   00099E                     u8761:
 10302   00099E  EFB8  F004         	goto	l7236
 10303   0009A2                     u8760:
 10304   0009A2                     
 10305                           ; BSR set to: 0
 10306                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 803:             dbuf[n++] = (char)
      +                          ((int)'0' + d);
 10307   0009A2  0E27               	movlw	low _dbuf
 10308   0009A4  25B3               	addwf	efgtoa@n& (0+255),w,b
 10309   0009A6  6ED9               	movwf	fsr2l,c
 10310   0009A8  0E01               	movlw	high _dbuf
 10311   0009AA  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10312   0009AC  6EDA               	movwf	fsr2h,c
 10313   0009AE  5198               	movf	efgtoa@d& (0+255),w,b
 10314   0009B0  0F30               	addlw	48
 10315   0009B2  6EDF               	movwf	indf2,c
 10316   0009B4                     
 10317                           ; BSR set to: 0
 10318   0009B4  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10319   0009B6  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10320   0009B8                     
 10321                           ; BSR set to: 0
 10322                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 804:             --w;
 10323   0009B8  079E               	decf	efgtoa@w& (0+255),f,b
 10324   0009BA  A0D8               	btfss	status,0,c
 10325   0009BC  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10326   0009BE                     
 10327                           ; BSR set to: 0
 10328                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 805:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 806:         h -= l*u.f;
 10329   0009BE  C0A6  F064         	movff	efgtoa@h,___flsub@b
 10330   0009C2  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
 10331   0009C6  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
 10332   0009CA  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
 10333   0009CE  C0AA  F018         	movff	efgtoa@l,___flmul@a
 10334   0009D2  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
 10335   0009D6  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
 10336   0009DA  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
 10337   0009DE  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10338   0009E2  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10339   0009E6  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10340   0009EA  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10341   0009EE  EC3A  F00D         	call	___flmul	;wreg free
 10342   0009F2  C014  F068         	movff	?___flmul,___flsub@a
 10343   0009F6  C015  F069         	movff	?___flmul+1,___flsub@a+1
 10344   0009FA  C016  F06A         	movff	?___flmul+2,___flsub@a+2
 10345   0009FE  C017  F06B         	movff	?___flmul+3,___flsub@a+3
 10346   000A02  ECED  F026         	call	___flsub	;wreg free
 10347   000A06  C064  F0A6         	movff	?___flsub,efgtoa@h
 10348   000A0A  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
 10349   000A0E  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
 10350   000A12  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
 10351   000A16                     
 10352                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 807:         u.f = u.f/10.0;
 10353   000A16  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10354   000A1A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10355   000A1E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10356   000A22  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10357   000A26  0E00               	movlw	0
 10358   000A28  6E31               	movwf	___fldiv@a^0,c
 10359   000A2A  0E00               	movlw	0
 10360   000A2C  6E32               	movwf	(___fldiv@a+1)^0,c
 10361   000A2E  0E20               	movlw	32
 10362   000A30  6E33               	movwf	(___fldiv@a+2)^0,c
 10363   000A32  0E41               	movlw	65
 10364   000A34  6E34               	movwf	(___fldiv@a+3)^0,c
 10365   000A36  EC30  F011         	call	___fldiv	;wreg free
 10366   000A3A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10367   000A3E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10368   000A42  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10369   000A46  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10370   000A4A                     
 10371                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 808:         --ne;
 10372   000A4A  0100               	movlb	0	; () banked
 10373   000A4C  078D               	decf	efgtoa@ne& (0+255),f,b
 10374   000A4E  A0D8               	btfss	status,0,c
 10375   000A50  078E               	decf	(efgtoa@ne+1)& (0+255),f,b
 10376   000A52                     
 10377                           ; BSR set to: 0
 10378                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 809:         ++i;
 10379   000A52  4BA4               	infsnz	efgtoa@i& (0+255),f,b
 10380   000A54  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
 10381   000A56                     l7260:
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10385   000A56  519A               	movf	efgtoa@m& (0+255),w,b
 10386   000A58  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10387   000A5A  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10388   000A5C  0A80               	xorlw	128
 10389   000A5E  6F8B               	movwf	??_efgtoa& (0+255),b
 10390   000A60  519B               	movf	(efgtoa@m+1)& (0+255),w,b
 10391   000A62  0A80               	xorlw	128
 10392   000A64  598B               	subwfb	??_efgtoa& (0+255),w,b
 10393   000A66  B0D8               	btfsc	status,0,c
 10394   000A68  EF38  F005         	goto	u8771
 10395   000A6C  EF3A  F005         	goto	u8770
 10396   000A70                     u8771:
 10397   000A70  EF48  F005         	goto	l7264
 10398   000A74                     u8770:
 10399   000A74                     
 10400                           ; BSR set to: 0
 10401   000A74  BFB4               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10402   000A76  EF46  F005         	goto	u8781
 10403   000A7A  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10404   000A7C  E109               	bnz	u8780
 10405   000A7E  0E4B               	movlw	75
 10406   000A80  5DB3               	subwf	efgtoa@n& (0+255),w,b
 10407   000A82  A0D8               	btfss	status,0,c
 10408   000A84  EF46  F005         	goto	u8781
 10409   000A88  EF48  F005         	goto	u8780
 10410   000A8C                     u8781:
 10411   000A8C  EF46  F004         	goto	l7220
 10412   000A90                     u8780:
 10413   000A90                     l7264:
 10414                           
 10415                           ; BSR set to: 0
 10416                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(dbuf) - 1;
 10417   000A90  0E00               	movlw	0
 10418   000A92  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10419   000A94  0E4F               	movlw	79
 10420   000A96  6FA4               	movwf	efgtoa@i& (0+255),b
 10421   000A98                     
 10422                           ; BSR set to: 0
 10423                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] = '\0';
 10424   000A98  0E27               	movlw	low _dbuf
 10425   000A9A  25A4               	addwf	efgtoa@i& (0+255),w,b
 10426   000A9C  6ED9               	movwf	fsr2l,c
 10427   000A9E  0E01               	movlw	high _dbuf
 10428   000AA0  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10429   000AA2  6EDA               	movwf	fsr2h,c
 10430   000AA4  6ADF               	clrf	indf2,c
 10431   000AA6                     
 10432                           ; BSR set to: 0
 10433                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbuf[i-n], &dbuf[0], 
      +                          (size_t)n);
 10434   000AA6  0E27               	movlw	low _dbuf
 10435   000AA8  6F8B               	movwf	??_efgtoa& (0+255),b
 10436   000AAA  0E01               	movlw	high _dbuf
 10437   000AAC  6F8C               	movwf	(??_efgtoa+1)& (0+255),b
 10438   000AAE  51B3               	movf	efgtoa@n& (0+255),w,b
 10439   000AB0  5F8B               	subwf	??_efgtoa& (0+255),f,b
 10440   000AB2  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10441   000AB4  5B8C               	subwfb	(??_efgtoa+1)& (0+255),f,b
 10442   000AB6  51A4               	movf	efgtoa@i& (0+255),w,b
 10443   000AB8  258B               	addwf	??_efgtoa& (0+255),w,b
 10444   000ABA  6E06               	movwf	memcpy@d1^0,c
 10445   000ABC  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10446   000ABE  218C               	addwfc	(??_efgtoa+1)& (0+255),w,b
 10447   000AC0  6E07               	movwf	(memcpy@d1+1)^0,c
 10448   000AC2  0E27               	movlw	low _dbuf
 10449   000AC4  6E08               	movwf	memcpy@s1^0,c
 10450   000AC6  0E01               	movlw	high _dbuf
 10451   000AC8  6E09               	movwf	(memcpy@s1+1)^0,c
 10452   000ACA  C0B3  F00A         	movff	efgtoa@n,memcpy@n
 10453   000ACE  C0B4  F00B         	movff	efgtoa@n+1,memcpy@n+1
 10454   000AD2  ECA0  F026         	call	_memcpy	;wreg free
 10455   000AD6                     
 10456                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 10457   000AD6  0100               	movlb	0	; () banked
 10458   000AD8  51B3               	movf	efgtoa@n& (0+255),w,b
 10459   000ADA  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10460   000ADC  6FB3               	movwf	efgtoa@n& (0+255),b
 10461   000ADE  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10462   000AE0  59A5               	subwfb	(efgtoa@i+1)& (0+255),w,b
 10463   000AE2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
 10464   000AE4                     
 10465                           ; BSR set to: 0
 10466                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 850:  i = sign == 0 ? 0 : 1;
 10467   000AE4  51AE               	movf	efgtoa@sign& (0+255),w,b
 10468   000AE6  A4D8               	btfss	status,2,c
 10469   000AE8  EF78  F005         	goto	u8791
 10470   000AEC  EF7B  F005         	goto	u8790
 10471   000AF0                     u8791:
 10472   000AF0  0E01               	movlw	1
 10473   000AF2  EF7C  F005         	goto	u8800
 10474   000AF6                     u8790:
 10475   000AF6  0E00               	movlw	0
 10476   000AF8                     u8800:
 10477   000AF8  6FA4               	movwf	efgtoa@i& (0+255),b
 10478   000AFA  6BA5               	clrf	(efgtoa@i+1)& (0+255),b
 10479   000AFC                     
 10480                           ; BSR set to: 0
 10481                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 10482   000AFC  51AE               	movf	efgtoa@sign& (0+255),w,b
 10483   000AFE  B4D8               	btfsc	status,2,c
 10484   000B00  EF84  F005         	goto	u8811
 10485   000B04  EF86  F005         	goto	u8810
 10486   000B08                     u8811:
 10487   000B08  EF91  F005         	goto	l7278
 10488   000B0C                     u8810:
 10489   000B0C                     
 10490                           ; BSR set to: 0
 10491                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] = sign;
 10492   000B0C  07B3               	decf	efgtoa@n& (0+255),f,b
 10493   000B0E  A0D8               	btfss	status,0,c
 10494   000B10  07B4               	decf	(efgtoa@n+1)& (0+255),f,b
 10495   000B12  0E27               	movlw	low _dbuf
 10496   000B14  25B3               	addwf	efgtoa@n& (0+255),w,b
 10497   000B16  6ED9               	movwf	fsr2l,c
 10498   000B18  0E01               	movlw	high _dbuf
 10499   000B1A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10500   000B1C  6EDA               	movwf	fsr2h,c
 10501   000B1E  C0AE  FFDF         	movff	efgtoa@sign,indf2
 10502   000B22                     l7278:
 10503                           
 10504                           ; BSR set to: 0
 10505                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 10506   000B22  51A4               	movf	efgtoa@i& (0+255),w,b
 10507   000B24  5F9E               	subwf	efgtoa@w& (0+255),f,b
 10508   000B26  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10509   000B28  5B9F               	subwfb	(efgtoa@w+1)& (0+255),f,b
 10510   000B2A                     
 10511                           ; BSR set to: 0
 10512                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 867:     return (void) pad(fp, &dbu
      +                          f[n], w);
 10513   000B2A  C084  F017         	movff	efgtoa@fp,pad@fp
 10514   000B2E  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
 10515   000B32  0E27               	movlw	low _dbuf
 10516   000B34  25B3               	addwf	efgtoa@n& (0+255),w,b
 10517   000B36  6E19               	movwf	pad@buf^0,c
 10518   000B38  0E01               	movlw	high _dbuf
 10519   000B3A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10520   000B3C  6E1A               	movwf	(pad@buf+1)^0,c
 10521   000B3E  C09E  F01B         	movff	efgtoa@w,pad@p
 10522   000B42  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
 10523   000B46  ECF6  F024         	call	_pad	;wreg free
 10524   000B4A                     l1448:
 10525   000B4A  0012               	return		;funcret
 10526   000B4C                     __end_of_efgtoa:
 10527                           	callstack 0
 10528                           
 10529 ;; *************** function _strcpy *****************
 10530 ;; Defined at:
 10531 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strcpy.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  dest            2    5[COMRAM] PTR unsigned char 
 10534 ;;		 -> dbuf(80), 
 10535 ;;  src             2    7[COMRAM] PTR const unsigned char 
 10536 ;;		 -> STR_33(4), STR_30(4), 
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;  d               2    9[COMRAM] PTR unsigned char 
 10539 ;;		 -> dbuf(80), 
 10540 ;; Return value:  Size  Location     Type
 10541 ;;                  2    5[COMRAM] PTR unsigned char 
 10542 ;; Registers used:
 10543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10544 ;; Tracked objects:
 10545 ;;		On entry : 0/0
 10546 ;;		On exit  : 0/0
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10552 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10553 ;;Total ram usage:        6 bytes
 10554 ;; Hardware stack levels used: 1
 10555 ;; Hardware stack levels required when called: 1
 10556 ;; This function calls:
 10557 ;;		Nothing
 10558 ;; This function is called by:
 10559 ;;		_efgtoa
 10560 ;; This function uses a non-reentrant model
 10561 ;;
 10562                           
 10563                           	psect	text37
 10564   004F24                     __ptext37:
 10565                           	callstack 0
 10566   004F24                     _strcpy:
 10567                           	callstack 24
 10568   004F24  C006  F00A         	movff	strcpy@dest,strcpy@d
 10569   004F28  C007  F00B         	movff	strcpy@dest+1,strcpy@d+1
 10570   004F2C                     l6968:
 10571   004F2C  C008  FFF6         	movff	strcpy@src,tblptrl
 10572   004F30  C009  FFF7         	movff	strcpy@src+1,tblptrh
 10573   004F34  4A08               	infsnz	strcpy@src^0,f,c
 10574   004F36  2A09               	incf	(strcpy@src+1)^0,f,c
 10575   004F38                     	if	0	;tblptru may be non-zero
 10576   004F38                     	endif
 10577   004F38                     	if	0	;tblptru may be non-zero
 10578   004F38                     	endif
 10579   004F38  C00A  FFD9         	movff	strcpy@d,fsr2l
 10580   004F3C  C00B  FFDA         	movff	strcpy@d+1,fsr2h
 10581   004F40  4A0A               	infsnz	strcpy@d^0,f,c
 10582   004F42  2A0B               	incf	(strcpy@d+1)^0,f,c
 10583   004F44  0008               	tblrd		*
 10584   004F46  CFF5 FFDF          	movff	tablat,indf2
 10585   004F4A  50DF               	movf	indf2,w,c
 10586   004F4C  A4D8               	btfss	status,2,c
 10587   004F4E  EFAB  F027         	goto	u8281
 10588   004F52  EFAD  F027         	goto	u8280
 10589   004F56                     u8281:
 10590   004F56  EF96  F027         	goto	l6968
 10591   004F5A                     u8280:
 10592   004F5A  0012               	return		;funcret
 10593   004F5C                     __end_of_strcpy:
 10594                           	callstack 0
 10595                           
 10596 ;; *************** function _memcpy *****************
 10597 ;; Defined at:
 10598 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\memcpy.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;  d1              2    5[COMRAM] PTR void 
 10601 ;;		 -> dbuf(80), 
 10602 ;;  s1              2    7[COMRAM] PTR const void 
 10603 ;;		 -> dbuf(80), 
 10604 ;;  n               2    9[COMRAM] unsigned int 
 10605 ;; Auto vars:     Size  Location     Type
 10606 ;;  s               2   14[COMRAM] PTR const unsigned char 
 10607 ;;		 -> dbuf(80), 
 10608 ;;  d               2   12[COMRAM] PTR unsigned char 
 10609 ;;		 -> dbuf(80), 
 10610 ;;  tmp             1   11[COMRAM] unsigned char 
 10611 ;; Return value:  Size  Location     Type
 10612 ;;                  2    5[COMRAM] PTR void 
 10613 ;; Registers used:
 10614 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10615 ;; Tracked objects:
 10616 ;;		On entry : 0/0
 10617 ;;		On exit  : 0/0
 10618 ;;		Unchanged: 0/0
 10619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10620 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10621 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10623 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10624 ;;Total ram usage:       11 bytes
 10625 ;; Hardware stack levels used: 1
 10626 ;; Hardware stack levels required when called: 1
 10627 ;; This function calls:
 10628 ;;		Nothing
 10629 ;; This function is called by:
 10630 ;;		_efgtoa
 10631 ;; This function uses a non-reentrant model
 10632 ;;
 10633                           
 10634                           	psect	text38
 10635   004D40                     __ptext38:
 10636                           	callstack 0
 10637   004D40                     _memcpy:
 10638                           	callstack 24
 10639   004D40  C008  F00F         	movff	memcpy@s1,memcpy@s
 10640   004D44  C009  F010         	movff	memcpy@s1+1,memcpy@s+1
 10641   004D48  C006  F00D         	movff	memcpy@d1,memcpy@d
 10642   004D4C  C007  F00E         	movff	memcpy@d1+1,memcpy@d+1
 10643   004D50  EFBA  F026         	goto	l7016
 10644   004D54                     l7008:
 10645   004D54  C00F  FFD9         	movff	memcpy@s,fsr2l
 10646   004D58  C010  FFDA         	movff	memcpy@s+1,fsr2h
 10647   004D5C  50DF               	movf	indf2,w,c
 10648   004D5E  6E0C               	movwf	memcpy@tmp^0,c
 10649   004D60  4A0F               	infsnz	memcpy@s^0,f,c
 10650   004D62  2A10               	incf	(memcpy@s+1)^0,f,c
 10651   004D64  C00D  FFD9         	movff	memcpy@d,fsr2l
 10652   004D68  C00E  FFDA         	movff	memcpy@d+1,fsr2h
 10653   004D6C  C00C  FFDF         	movff	memcpy@tmp,indf2
 10654   004D70  4A0D               	infsnz	memcpy@d^0,f,c
 10655   004D72  2A0E               	incf	(memcpy@d+1)^0,f,c
 10656   004D74                     l7016:
 10657   004D74  060A               	decf	memcpy@n^0,f,c
 10658   004D76  A0D8               	btfss	status,0,c
 10659   004D78  060B               	decf	(memcpy@n+1)^0,f,c
 10660   004D7A  280A               	incf	memcpy@n^0,w,c
 10661   004D7C  E106               	bnz	u8401
 10662   004D7E  280B               	incf	(memcpy@n+1)^0,w,c
 10663   004D80  A4D8               	btfss	status,2,c
 10664   004D82  EFC5  F026         	goto	u8401
 10665   004D86  EFC7  F026         	goto	u8400
 10666   004D8A                     u8401:
 10667   004D8A  EFAA  F026         	goto	l7008
 10668   004D8E                     u8400:
 10669   004D8E  0012               	return		;funcret
 10670   004D90                     __end_of_memcpy:
 10671                           	callstack 0
 10672                           
 10673 ;; *************** function _labs *****************
 10674 ;; Defined at:
 10675 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\labs.c"
 10676 ;; Parameters:    Size  Location     Type
 10677 ;;  a               4    5[COMRAM] long 
 10678 ;; Auto vars:     Size  Location     Type
 10679 ;;		None
 10680 ;; Return value:  Size  Location     Type
 10681 ;;                  4    5[COMRAM] long 
 10682 ;; Registers used:
 10683 ;;		wreg, status,2, status,0
 10684 ;; Tracked objects:
 10685 ;;		On entry : 0/0
 10686 ;;		On exit  : 0/0
 10687 ;;		Unchanged: 0/0
 10688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10689 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10691 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10692 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10693 ;;Total ram usage:        8 bytes
 10694 ;; Hardware stack levels used: 1
 10695 ;; Hardware stack levels required when called: 1
 10696 ;; This function calls:
 10697 ;;		Nothing
 10698 ;; This function is called by:
 10699 ;;		_efgtoa
 10700 ;; This function uses a non-reentrant model
 10701 ;;
 10702                           
 10703                           	psect	text39
 10704   004C96                     __ptext39:
 10705                           	callstack 0
 10706   004C96                     _labs:
 10707                           	callstack 24
 10708   004C96  BE09               	btfsc	(labs@a+3)^0,7,c
 10709   004C98  EF50  F026         	goto	u8291
 10710   004C9C  EF52  F026         	goto	u8290
 10711   004CA0                     u8291:
 10712   004CA0  EF5C  F026         	goto	l6974
 10713   004CA4                     u8290:
 10714   004CA4  C006  F006         	movff	labs@a,?_labs
 10715   004CA8  C007  F007         	movff	labs@a+1,?_labs+1
 10716   004CAC  C008  F008         	movff	labs@a+2,?_labs+2
 10717   004CB0  C009  F009         	movff	labs@a+3,?_labs+3
 10718   004CB4  EF75  F026         	goto	l1630
 10719   004CB8                     l6974:
 10720   004CB8  C006  F00A         	movff	labs@a,??_labs
 10721   004CBC  C007  F00B         	movff	labs@a+1,??_labs+1
 10722   004CC0  C008  F00C         	movff	labs@a+2,??_labs+2
 10723   004CC4  C009  F00D         	movff	labs@a+3,??_labs+3
 10724   004CC8  1E0A               	comf	??_labs^0,f,c
 10725   004CCA  1E0B               	comf	(??_labs+1)^0,f,c
 10726   004CCC  1E0C               	comf	(??_labs+2)^0,f,c
 10727   004CCE  1E0D               	comf	(??_labs+3)^0,f,c
 10728   004CD0  2A0A               	incf	??_labs^0,f,c
 10729   004CD2  0E00               	movlw	0
 10730   004CD4  220B               	addwfc	(??_labs+1)^0,f,c
 10731   004CD6  220C               	addwfc	(??_labs+2)^0,f,c
 10732   004CD8  220D               	addwfc	(??_labs+3)^0,f,c
 10733   004CDA  C00A  F006         	movff	??_labs,?_labs
 10734   004CDE  C00B  F007         	movff	??_labs+1,?_labs+1
 10735   004CE2  C00C  F008         	movff	??_labs+2,?_labs+2
 10736   004CE6  C00D  F009         	movff	??_labs+3,?_labs+3
 10737   004CEA                     l1630:
 10738   004CEA  0012               	return		;funcret
 10739   004CEC                     __end_of_labs:
 10740                           	callstack 0
 10741                           
 10742 ;; *************** function _floorf *****************
 10743 ;; Defined at:
 10744 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\floorf.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;  x               4   69[COMRAM] float 
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;  u               4    6[BANK0 ] struct .
 10749 ;;  m               4    0[BANK0 ] unsigned long 
 10750 ;;  e               2    4[BANK0 ] int 
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  4   69[COMRAM] float 
 10753 ;; Registers used:
 10754 ;;		wreg, status,2, status,0
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10761 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10762 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10763 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10764 ;;Total ram usage:       20 bytes
 10765 ;; Hardware stack levels used: 1
 10766 ;; Hardware stack levels required when called: 1
 10767 ;; This function calls:
 10768 ;;		Nothing
 10769 ;; This function is called by:
 10770 ;;		_efgtoa
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           	psect	text40
 10775   0030AC                     __ptext40:
 10776                           	callstack 0
 10777   0030AC                     _floorf:
 10778                           	callstack 24
 10779   0030AC  C119  F066         	movff	floorf@F521,floorf@u
 10780   0030B0  C11A  F067         	movff	floorf@F521+1,floorf@u+1
 10781   0030B4  C11B  F068         	movff	floorf@F521+2,floorf@u+2
 10782   0030B8  C11C  F069         	movff	floorf@F521+3,floorf@u+3
 10783   0030BC  C046  F066         	movff	floorf@x,floorf@u
 10784   0030C0  C047  F067         	movff	floorf@x+1,floorf@u+1
 10785   0030C4  C048  F068         	movff	floorf@x+2,floorf@u+2
 10786   0030C8  C049  F069         	movff	floorf@x+3,floorf@u+3
 10787   0030CC  0E81               	movlw	129
 10788   0030CE  6E4A               	movwf	??_floorf^0,c
 10789   0030D0  0EFF               	movlw	255
 10790   0030D2  6E4B               	movwf	(??_floorf+1)^0,c
 10791   0030D4  C066  F04C         	movff	floorf@u,??_floorf+2
 10792   0030D8  C067  F04D         	movff	floorf@u+1,??_floorf+3
 10793   0030DC  C068  F04E         	movff	floorf@u+2,??_floorf+4
 10794   0030E0  C069  F04F         	movff	floorf@u+3,??_floorf+5
 10795   0030E4  0E18               	movlw	24
 10796   0030E6  EF7A  F018         	goto	u8300
 10797   0030EA                     u8305:
 10798   0030EA  90D8               	bcf	status,0,c
 10799   0030EC  324F               	rrcf	(??_floorf+5)^0,f,c
 10800   0030EE  324E               	rrcf	(??_floorf+4)^0,f,c
 10801   0030F0  324D               	rrcf	(??_floorf+3)^0,f,c
 10802   0030F2  324C               	rrcf	(??_floorf+2)^0,f,c
 10803   0030F4                     u8300:
 10804   0030F4  2EE8               	decfsz	wreg,f,c
 10805   0030F6  EF75  F018         	goto	u8305
 10806   0030FA  504C               	movf	(??_floorf+2)^0,w,c
 10807   0030FC  244A               	addwf	??_floorf^0,w,c
 10808   0030FE  0100               	movlb	0	; () banked
 10809   003100  6F64               	movwf	floorf@e& (0+255),b
 10810   003102  0E00               	movlw	0
 10811   003104  204B               	addwfc	(??_floorf+1)^0,w,c
 10812   003106  6F65               	movwf	(floorf@e+1)& (0+255),b
 10813   003108  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 10814   00310A  EF90  F018         	goto	u8311
 10815   00310E  5165               	movf	(floorf@e+1)& (0+255),w,b
 10816   003110  E109               	bnz	u8310
 10817   003112  0E17               	movlw	23
 10818   003114  5D64               	subwf	floorf@e& (0+255),w,b
 10819   003116  A0D8               	btfss	status,0,c
 10820   003118  EF90  F018         	goto	u8311
 10821   00311C  EF92  F018         	goto	u8310
 10822   003120                     u8311:
 10823   003120  EF9C  F018         	goto	l6984
 10824   003124                     u8310:
 10825   003124                     l6982:
 10826                           
 10827                           ; BSR set to: 0
 10828   003124  C046  F046         	movff	floorf@x,?_floorf
 10829   003128  C047  F047         	movff	floorf@x+1,?_floorf+1
 10830   00312C  C048  F048         	movff	floorf@x+2,?_floorf+2
 10831   003130  C049  F049         	movff	floorf@x+3,?_floorf+3
 10832   003134  EF60  F019         	goto	l1616
 10833   003138                     l6984:
 10834                           
 10835                           ; BSR set to: 0
 10836   003138  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 10837   00313A  EFA1  F018         	goto	u8321
 10838   00313E  EFA3  F018         	goto	u8320
 10839   003142                     u8321:
 10840   003142  EF14  F019         	goto	l6994
 10841   003146                     u8320:
 10842   003146                     
 10843                           ; BSR set to: 0
 10844   003146  C064  F04A         	movff	floorf@e,??_floorf
 10845   00314A  0EFF               	movlw	255
 10846   00314C  6E4B               	movwf	(??_floorf+1)^0,c
 10847   00314E  0EFF               	movlw	255
 10848   003150  6E4C               	movwf	(??_floorf+2)^0,c
 10849   003152  0E7F               	movlw	127
 10850   003154  6E4D               	movwf	(??_floorf+3)^0,c
 10851   003156  0E00               	movlw	0
 10852   003158  6E4E               	movwf	(??_floorf+4)^0,c
 10853   00315A                     u8335:
 10854   00315A  664A               	tstfsz	??_floorf^0,c
 10855   00315C  EFB2  F018         	goto	u8336
 10856   003160  EFBA  F018         	goto	u8337
 10857   003164                     u8336:
 10858   003164  344E               	rlcf	(??_floorf+4)^0,w,c
 10859   003166  324E               	rrcf	(??_floorf+4)^0,f,c
 10860   003168  324D               	rrcf	(??_floorf+3)^0,f,c
 10861   00316A  324C               	rrcf	(??_floorf+2)^0,f,c
 10862   00316C  324B               	rrcf	(??_floorf+1)^0,f,c
 10863   00316E  2E4A               	decfsz	??_floorf^0,f,c
 10864   003170  EFAD  F018         	goto	u8335
 10865   003174                     u8337:
 10866   003174  C04B  F060         	movff	??_floorf+1,floorf@m
 10867   003178  C04C  F061         	movff	??_floorf+2,floorf@m+1
 10868   00317C  C04D  F062         	movff	??_floorf+3,floorf@m+2
 10869   003180  C04E  F063         	movff	??_floorf+4,floorf@m+3
 10870   003184  0100               	movlb	0	; () banked
 10871   003186  5160               	movf	floorf@m& (0+255),w,b
 10872   003188  1566               	andwf	floorf@u& (0+255),w,b
 10873   00318A  6E4A               	movwf	??_floorf^0,c
 10874   00318C  5161               	movf	(floorf@m+1)& (0+255),w,b
 10875   00318E  1567               	andwf	(floorf@u+1)& (0+255),w,b
 10876   003190  6E4B               	movwf	(??_floorf+1)^0,c
 10877   003192  5162               	movf	(floorf@m+2)& (0+255),w,b
 10878   003194  1568               	andwf	(floorf@u+2)& (0+255),w,b
 10879   003196  6E4C               	movwf	(??_floorf+2)^0,c
 10880   003198  5163               	movf	(floorf@m+3)& (0+255),w,b
 10881   00319A  1569               	andwf	(floorf@u+3)& (0+255),w,b
 10882   00319C  6E4D               	movwf	(??_floorf+3)^0,c
 10883   00319E  504A               	movf	??_floorf^0,w,c
 10884   0031A0  104B               	iorwf	(??_floorf+1)^0,w,c
 10885   0031A2  104C               	iorwf	(??_floorf+2)^0,w,c
 10886   0031A4  104D               	iorwf	(??_floorf+3)^0,w,c
 10887   0031A6  A4D8               	btfss	status,2,c
 10888   0031A8  EFD8  F018         	goto	u8341
 10889   0031AC  EFDA  F018         	goto	u8340
 10890   0031B0                     u8341:
 10891   0031B0  EFDC  F018         	goto	l6990
 10892   0031B4                     u8340:
 10893   0031B4  EF92  F018         	goto	l6982
 10894   0031B8                     l6990:
 10895                           
 10896                           ; BSR set to: 0
 10897   0031B8  C066  F04A         	movff	floorf@u,??_floorf
 10898   0031BC  C067  F04B         	movff	floorf@u+1,??_floorf+1
 10899   0031C0  C068  F04C         	movff	floorf@u+2,??_floorf+2
 10900   0031C4  C069  F04D         	movff	floorf@u+3,??_floorf+3
 10901   0031C8  0E20               	movlw	32
 10902   0031CA  EFEC  F018         	goto	u8350
 10903   0031CE                     u8355:
 10904   0031CE  90D8               	bcf	status,0,c
 10905   0031D0  324D               	rrcf	(??_floorf+3)^0,f,c
 10906   0031D2  324C               	rrcf	(??_floorf+2)^0,f,c
 10907   0031D4  324B               	rrcf	(??_floorf+1)^0,f,c
 10908   0031D6  324A               	rrcf	??_floorf^0,f,c
 10909   0031D8                     u8350:
 10910   0031D8  2EE8               	decfsz	wreg,f,c
 10911   0031DA  EFE7  F018         	goto	u8355
 10912   0031DE  504A               	movf	??_floorf^0,w,c
 10913   0031E0  104B               	iorwf	(??_floorf+1)^0,w,c
 10914   0031E2  104C               	iorwf	(??_floorf+2)^0,w,c
 10915   0031E4  104D               	iorwf	(??_floorf+3)^0,w,c
 10916   0031E6  B4D8               	btfsc	status,2,c
 10917   0031E8  EFF8  F018         	goto	u8361
 10918   0031EC  EFFA  F018         	goto	u8360
 10919   0031F0                     u8361:
 10920   0031F0  EF02  F019         	goto	l1619
 10921   0031F4                     u8360:
 10922   0031F4                     
 10923                           ; BSR set to: 0
 10924   0031F4  5160               	movf	floorf@m& (0+255),w,b
 10925   0031F6  2766               	addwf	floorf@u& (0+255),f,b
 10926   0031F8  5161               	movf	(floorf@m+1)& (0+255),w,b
 10927   0031FA  2367               	addwfc	(floorf@u+1)& (0+255),f,b
 10928   0031FC  5162               	movf	(floorf@m+2)& (0+255),w,b
 10929   0031FE  2368               	addwfc	(floorf@u+2)& (0+255),f,b
 10930   003200  5163               	movf	(floorf@m+3)& (0+255),w,b
 10931   003202  2369               	addwfc	(floorf@u+3)& (0+255),f,b
 10932   003204                     l1619:
 10933                           
 10934                           ; BSR set to: 0
 10935   003204  1D60               	comf	floorf@m& (0+255),w,b
 10936   003206  6E4A               	movwf	??_floorf^0,c
 10937   003208  1D61               	comf	(floorf@m+1)& (0+255),w,b
 10938   00320A  6E4B               	movwf	(??_floorf+1)^0,c
 10939   00320C  1D62               	comf	(floorf@m+2)& (0+255),w,b
 10940   00320E  6E4C               	movwf	(??_floorf+2)^0,c
 10941   003210  1D63               	comf	(floorf@m+3)& (0+255),w,b
 10942   003212  6E4D               	movwf	(??_floorf+3)^0,c
 10943   003214  504A               	movf	??_floorf^0,w,c
 10944   003216  1766               	andwf	floorf@u& (0+255),f,b
 10945   003218  504B               	movf	(??_floorf+1)^0,w,c
 10946   00321A  1767               	andwf	(floorf@u+1)& (0+255),f,b
 10947   00321C  504C               	movf	(??_floorf+2)^0,w,c
 10948   00321E  1768               	andwf	(floorf@u+2)& (0+255),f,b
 10949   003220  504D               	movf	(??_floorf+3)^0,w,c
 10950   003222  1769               	andwf	(floorf@u+3)& (0+255),f,b
 10951   003224  EF58  F019         	goto	l7002
 10952   003228                     l6994:
 10953                           
 10954                           ; BSR set to: 0
 10955   003228  C066  F04A         	movff	floorf@u,??_floorf
 10956   00322C  C067  F04B         	movff	floorf@u+1,??_floorf+1
 10957   003230  C068  F04C         	movff	floorf@u+2,??_floorf+2
 10958   003234  C069  F04D         	movff	floorf@u+3,??_floorf+3
 10959   003238  0E20               	movlw	32
 10960   00323A  EF24  F019         	goto	u8370
 10961   00323E                     u8375:
 10962   00323E  90D8               	bcf	status,0,c
 10963   003240  324D               	rrcf	(??_floorf+3)^0,f,c
 10964   003242  324C               	rrcf	(??_floorf+2)^0,f,c
 10965   003244  324B               	rrcf	(??_floorf+1)^0,f,c
 10966   003246  324A               	rrcf	??_floorf^0,f,c
 10967   003248                     u8370:
 10968   003248  2EE8               	decfsz	wreg,f,c
 10969   00324A  EF1F  F019         	goto	u8375
 10970   00324E  504A               	movf	??_floorf^0,w,c
 10971   003250  104B               	iorwf	(??_floorf+1)^0,w,c
 10972   003252  104C               	iorwf	(??_floorf+2)^0,w,c
 10973   003254  104D               	iorwf	(??_floorf+3)^0,w,c
 10974   003256  A4D8               	btfss	status,2,c
 10975   003258  EF30  F019         	goto	u8381
 10976   00325C  EF32  F019         	goto	u8380
 10977   003260                     u8381:
 10978   003260  EF3C  F019         	goto	l6998
 10979   003264                     u8380:
 10980   003264                     
 10981                           ; BSR set to: 0
 10982   003264  0E00               	movlw	0
 10983   003266  6F66               	movwf	floorf@u& (0+255),b
 10984   003268  0E00               	movlw	0
 10985   00326A  6F67               	movwf	(floorf@u+1)& (0+255),b
 10986   00326C  0E00               	movlw	0
 10987   00326E  6F68               	movwf	(floorf@u+2)& (0+255),b
 10988   003270  0E00               	movlw	0
 10989   003272  6F69               	movwf	(floorf@u+3)& (0+255),b
 10990   003274  EF58  F019         	goto	l7002
 10991   003278                     l6998:
 10992                           
 10993                           ; BSR set to: 0
 10994   003278  90D8               	bcf	status,0,c
 10995   00327A  3566               	rlcf	floorf@u& (0+255),w,b
 10996   00327C  6E4A               	movwf	??_floorf^0,c
 10997   00327E  3567               	rlcf	(floorf@u+1)& (0+255),w,b
 10998   003280  6E4B               	movwf	(??_floorf+1)^0,c
 10999   003282  3568               	rlcf	(floorf@u+2)& (0+255),w,b
 11000   003284  6E4C               	movwf	(??_floorf+2)^0,c
 11001   003286  3569               	rlcf	(floorf@u+3)& (0+255),w,b
 11002   003288  6E4D               	movwf	(??_floorf+3)^0,c
 11003   00328A  504A               	movf	??_floorf^0,w,c
 11004   00328C  104B               	iorwf	(??_floorf+1)^0,w,c
 11005   00328E  104C               	iorwf	(??_floorf+2)^0,w,c
 11006   003290  104D               	iorwf	(??_floorf+3)^0,w,c
 11007   003292  B4D8               	btfsc	status,2,c
 11008   003294  EF4E  F019         	goto	u8391
 11009   003298  EF50  F019         	goto	u8390
 11010   00329C                     u8391:
 11011   00329C  EF58  F019         	goto	l7002
 11012   0032A0                     u8390:
 11013   0032A0                     
 11014                           ; BSR set to: 0
 11015   0032A0  0E00               	movlw	0
 11016   0032A2  6F66               	movwf	floorf@u& (0+255),b
 11017   0032A4  0E00               	movlw	0
 11018   0032A6  6F67               	movwf	(floorf@u+1)& (0+255),b
 11019   0032A8  0E80               	movlw	128
 11020   0032AA  6F68               	movwf	(floorf@u+2)& (0+255),b
 11021   0032AC  0EBF               	movlw	191
 11022   0032AE  6F69               	movwf	(floorf@u+3)& (0+255),b
 11023   0032B0                     l7002:
 11024                           
 11025                           ; BSR set to: 0
 11026   0032B0  C066  F046         	movff	floorf@u,?_floorf
 11027   0032B4  C067  F047         	movff	floorf@u+1,?_floorf+1
 11028   0032B8  C068  F048         	movff	floorf@u+2,?_floorf+2
 11029   0032BC  C069  F049         	movff	floorf@u+3,?_floorf+3
 11030   0032C0                     l1616:
 11031                           
 11032                           ; BSR set to: 0
 11033   0032C0  0012               	return		;funcret
 11034   0032C2                     __end_of_floorf:
 11035                           	callstack 0
 11036                           
 11037 ;; *************** function ___fpclassifyf *****************
 11038 ;; Defined at:
 11039 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__fpclassifyf.c"
 11040 ;; Parameters:    Size  Location     Type
 11041 ;;  x               4    5[COMRAM] float 
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;  u               4   15[COMRAM] struct .
 11044 ;;  e               2   13[COMRAM] int 
 11045 ;; Return value:  Size  Location     Type
 11046 ;;                  2    5[COMRAM] int 
 11047 ;; Registers used:
 11048 ;;		wreg, status,2, status,0
 11049 ;; Tracked objects:
 11050 ;;		On entry : 0/0
 11051 ;;		On exit  : 0/0
 11052 ;;		Unchanged: 0/0
 11053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11055 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11056 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11057 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11058 ;;Total ram usage:       14 bytes
 11059 ;; Hardware stack levels used: 1
 11060 ;; Hardware stack levels required when called: 1
 11061 ;; This function calls:
 11062 ;;		Nothing
 11063 ;; This function is called by:
 11064 ;;		_efgtoa
 11065 ;; This function uses a non-reentrant model
 11066 ;;
 11067                           
 11068                           	psect	text41
 11069   0042DC                     __ptext41:
 11070                           	callstack 0
 11071   0042DC                     ___fpclassifyf:
 11072                           	callstack 24
 11073   0042DC  C11D  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
 11074   0042E0  C11E  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 11075   0042E4  C11F  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 11076   0042E8  C120  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 11077   0042EC  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 11078   0042F0  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11079   0042F4  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11080   0042F8  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11081   0042FC  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11082   004300  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11083   004304  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11084   004308  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11085   00430C  0E18               	movlw	24
 11086   00430E  EF8E  F021         	goto	u8210
 11087   004312                     u8215:
 11088   004312  90D8               	bcf	status,0,c
 11089   004314  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 11090   004316  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 11091   004318  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 11092   00431A  320A               	rrcf	??___fpclassifyf^0,f,c
 11093   00431C                     u8210:
 11094   00431C  2EE8               	decfsz	wreg,f,c
 11095   00431E  EF89  F021         	goto	u8215
 11096   004322  500A               	movf	??___fpclassifyf^0,w,c
 11097   004324  6E0E               	movwf	___fpclassifyf@e^0,c
 11098   004326  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 11099   004328  500E               	movf	___fpclassifyf@e^0,w,c
 11100   00432A  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11101   00432C  A4D8               	btfss	status,2,c
 11102   00432E  EF9B  F021         	goto	u8221
 11103   004332  EF9D  F021         	goto	u8220
 11104   004336                     u8221:
 11105   004336  EFBD  F021         	goto	l6956
 11106   00433A                     u8220:
 11107   00433A  90D8               	bcf	status,0,c
 11108   00433C  3410               	rlcf	___fpclassifyf@u^0,w,c
 11109   00433E  6E0A               	movwf	??___fpclassifyf^0,c
 11110   004340  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11111   004342  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 11112   004344  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11113   004346  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 11114   004348  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11115   00434A  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 11116   00434C  500A               	movf	??___fpclassifyf^0,w,c
 11117   00434E  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11118   004350  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11119   004352  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11120   004354  A4D8               	btfss	status,2,c
 11121   004356  EFAF  F021         	goto	u8231
 11122   00435A  EFB1  F021         	goto	u8230
 11123   00435E                     u8231:
 11124   00435E  EFB7  F021         	goto	l6952
 11125   004362                     u8230:
 11126   004362  0E00               	movlw	0
 11127   004364  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11128   004366  0E02               	movlw	2
 11129   004368  6E06               	movwf	?___fpclassifyf^0,c
 11130   00436A  EFEC  F021         	goto	l1602
 11131   00436E                     l6952:
 11132   00436E  0E00               	movlw	0
 11133   004370  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11134   004372  0E03               	movlw	3
 11135   004374  6E06               	movwf	?___fpclassifyf^0,c
 11136   004376  EFEC  F021         	goto	l1602
 11137   00437A                     l6956:
 11138   00437A  280E               	incf	___fpclassifyf@e^0,w,c
 11139   00437C  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11140   00437E  A4D8               	btfss	status,2,c
 11141   004380  EFC4  F021         	goto	u8241
 11142   004384  EFC6  F021         	goto	u8240
 11143   004388                     u8241:
 11144   004388  EFE8  F021         	goto	l6962
 11145   00438C                     u8240:
 11146   00438C  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11147   004390  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11148   004394  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11149   004398  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11150   00439C  0E09               	movlw	9
 11151   00439E                     u8255:
 11152   00439E  90D8               	bcf	status,0,c
 11153   0043A0  360A               	rlcf	??___fpclassifyf^0,f,c
 11154   0043A2  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 11155   0043A4  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 11156   0043A6  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 11157   0043A8  2EE8               	decfsz	wreg,f,c
 11158   0043AA  EFCF  F021         	goto	u8255
 11159   0043AE  500A               	movf	??___fpclassifyf^0,w,c
 11160   0043B0  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11161   0043B2  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11162   0043B4  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11163   0043B6  B4D8               	btfsc	status,2,c
 11164   0043B8  EFE0  F021         	goto	u8261
 11165   0043BC  EFE3  F021         	goto	u8260
 11166   0043C0                     u8261:
 11167   0043C0  0E01               	movlw	1
 11168   0043C2  EFE4  F021         	goto	u8270
 11169   0043C6                     u8260:
 11170   0043C6  0E00               	movlw	0
 11171   0043C8                     u8270:
 11172   0043C8  6E06               	movwf	?___fpclassifyf^0,c
 11173   0043CA  6A07               	clrf	(?___fpclassifyf+1)^0,c
 11174   0043CC  EFEC  F021         	goto	l1602
 11175   0043D0                     l6962:
 11176   0043D0  0E00               	movlw	0
 11177   0043D2  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11178   0043D4  0E04               	movlw	4
 11179   0043D6  6E06               	movwf	?___fpclassifyf^0,c
 11180   0043D8                     l1602:
 11181   0043D8  0012               	return		;funcret
 11182   0043DA                     __end_of___fpclassifyf:
 11183                           	callstack 0
 11184                           
 11185 ;; *************** function ___fltol *****************
 11186 ;; Defined at:
 11187 ;;		line 43 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fltol.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;  f1              4    4[BANK0 ] int 
 11190 ;; Auto vars:     Size  Location     Type
 11191 ;;  exp1            1   82[COMRAM] unsigned char 
 11192 ;;  sign1           1   81[COMRAM] unsigned char 
 11193 ;; Return value:  Size  Location     Type
 11194 ;;                  4    4[BANK0 ] long 
 11195 ;; Registers used:
 11196 ;;		wreg, status,2, status,0
 11197 ;; Tracked objects:
 11198 ;;		On entry : 0/0
 11199 ;;		On exit  : 0/0
 11200 ;;		Unchanged: 0/0
 11201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11202 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11203 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11204 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11205 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11206 ;;Total ram usage:       10 bytes
 11207 ;; Hardware stack levels used: 1
 11208 ;; Hardware stack levels required when called: 1
 11209 ;; This function calls:
 11210 ;;		Nothing
 11211 ;; This function is called by:
 11212 ;;		_runDAC
 11213 ;;		_efgtoa
 11214 ;;		___rem_pio2f
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           
 11218                           	psect	text42
 11219   0040D0                     __ptext42:
 11220                           	callstack 0
 11221   0040D0                     ___fltol:
 11222                           	callstack 24
 11223   0040D0  0100               	movlb	0	; () banked
 11224   0040D2  3566               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11225   0040D4  3567               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11226   0040D6  6E53               	movwf	___fltol@exp1^0,c
 11227   0040D8  5053               	movf	___fltol@exp1^0,w,c
 11228   0040DA  A4D8               	btfss	status,2,c
 11229   0040DC  EF72  F020         	goto	u8031
 11230   0040E0  EF74  F020         	goto	u8030
 11231   0040E4                     u8031:
 11232   0040E4  EF7E  F020         	goto	l6848
 11233   0040E8                     u8030:
 11234   0040E8                     l6844:
 11235                           
 11236                           ; BSR set to: 0
 11237   0040E8  0E00               	movlw	0
 11238   0040EA  6F64               	movwf	?___fltol& (0+255),b
 11239   0040EC  0E00               	movlw	0
 11240   0040EE  6F65               	movwf	(?___fltol+1)& (0+255),b
 11241   0040F0  0E00               	movlw	0
 11242   0040F2  6F66               	movwf	(?___fltol+2)& (0+255),b
 11243   0040F4  0E00               	movlw	0
 11244   0040F6  6F67               	movwf	(?___fltol+3)& (0+255),b
 11245   0040F8  EFEB  F020         	goto	l1003
 11246   0040FC                     l6848:
 11247                           
 11248                           ; BSR set to: 0
 11249   0040FC  C064  F068         	movff	___fltol@f1,??___fltol
 11250   004100  C065  F069         	movff	___fltol@f1+1,??___fltol+1
 11251   004104  C066  F06A         	movff	___fltol@f1+2,??___fltol+2
 11252   004108  C067  F06B         	movff	___fltol@f1+3,??___fltol+3
 11253   00410C  0E20               	movlw	32
 11254   00410E  EF8E  F020         	goto	u8040
 11255   004112                     u8045:
 11256   004112  90D8               	bcf	status,0,c
 11257   004114  336B               	rrcf	(??___fltol+3)& (0+255),f,b
 11258   004116  336A               	rrcf	(??___fltol+2)& (0+255),f,b
 11259   004118  3369               	rrcf	(??___fltol+1)& (0+255),f,b
 11260   00411A  3368               	rrcf	??___fltol& (0+255),f,b
 11261   00411C                     u8040:
 11262   00411C  2EE8               	decfsz	wreg,f,c
 11263   00411E  EF89  F020         	goto	u8045
 11264   004122  5168               	movf	??___fltol& (0+255),w,b
 11265   004124  6E52               	movwf	___fltol@sign1^0,c
 11266   004126                     
 11267                           ; BSR set to: 0
 11268   004126  8F66               	bsf	(___fltol@f1+2)& (0+255),7,b
 11269   004128                     
 11270                           ; BSR set to: 0
 11271   004128  0EFF               	movlw	255
 11272   00412A  1764               	andwf	___fltol@f1& (0+255),f,b
 11273   00412C  0EFF               	movlw	255
 11274   00412E  1765               	andwf	(___fltol@f1+1)& (0+255),f,b
 11275   004130  0EFF               	movlw	255
 11276   004132  1766               	andwf	(___fltol@f1+2)& (0+255),f,b
 11277   004134  0E00               	movlw	0
 11278   004136  1767               	andwf	(___fltol@f1+3)& (0+255),f,b
 11279   004138                     
 11280                           ; BSR set to: 0
 11281   004138  0E96               	movlw	150
 11282   00413A  5E53               	subwf	___fltol@exp1^0,f,c
 11283   00413C                     
 11284                           ; BSR set to: 0
 11285   00413C  BE53               	btfsc	___fltol@exp1^0,7,c
 11286   00413E  EFA5  F020         	goto	u8050
 11287   004142  EFA3  F020         	goto	u8051
 11288   004146                     u8051:
 11289   004146  EFBB  F020         	goto	l6868
 11290   00414A                     u8050:
 11291   00414A                     
 11292                           ; BSR set to: 0
 11293   00414A  5053               	movf	___fltol@exp1^0,w,c
 11294   00414C  0A80               	xorlw	128
 11295   00414E  0F97               	addlw	151
 11296   004150  B0D8               	btfsc	status,0,c
 11297   004152  EFAD  F020         	goto	u8061
 11298   004156  EFAF  F020         	goto	u8060
 11299   00415A                     u8061:
 11300   00415A  EFB1  F020         	goto	l6864
 11301   00415E                     u8060:
 11302   00415E  EF74  F020         	goto	l6844
 11303   004162                     l6864:
 11304                           
 11305                           ; BSR set to: 0
 11306   004162  90D8               	bcf	status,0,c
 11307   004164  3367               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11308   004166  3366               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11309   004168  3365               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11310   00416A  3364               	rrcf	___fltol@f1& (0+255),f,b
 11311   00416C                     
 11312                           ; BSR set to: 0
 11313   00416C  3E53               	incfsz	___fltol@exp1^0,f,c
 11314   00416E  EFB1  F020         	goto	l6864
 11315   004172  EFD3  F020         	goto	l6878
 11316   004176                     l6868:
 11317                           
 11318                           ; BSR set to: 0
 11319   004176  0E1F               	movlw	31
 11320   004178  6453               	cpfsgt	___fltol@exp1^0,c
 11321   00417A  EFC1  F020         	goto	u8071
 11322   00417E  EFC3  F020         	goto	u8070
 11323   004182                     u8071:
 11324   004182  EFCB  F020         	goto	l6876
 11325   004186                     u8070:
 11326   004186  EF74  F020         	goto	l6844
 11327   00418A                     l6874:
 11328                           
 11329                           ; BSR set to: 0
 11330   00418A  90D8               	bcf	status,0,c
 11331   00418C  3764               	rlcf	___fltol@f1& (0+255),f,b
 11332   00418E  3765               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11333   004190  3766               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11334   004192  3767               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11335   004194  0653               	decf	___fltol@exp1^0,f,c
 11336   004196                     l6876:
 11337                           
 11338                           ; BSR set to: 0
 11339   004196  5053               	movf	___fltol@exp1^0,w,c
 11340   004198  A4D8               	btfss	status,2,c
 11341   00419A  EFD1  F020         	goto	u8081
 11342   00419E  EFD3  F020         	goto	u8080
 11343   0041A2                     u8081:
 11344   0041A2  EFC5  F020         	goto	l6874
 11345   0041A6                     u8080:
 11346   0041A6                     l6878:
 11347                           
 11348                           ; BSR set to: 0
 11349   0041A6  5052               	movf	___fltol@sign1^0,w,c
 11350   0041A8  B4D8               	btfsc	status,2,c
 11351   0041AA  EFD9  F020         	goto	u8091
 11352   0041AE  EFDB  F020         	goto	u8090
 11353   0041B2                     u8091:
 11354   0041B2  EFE3  F020         	goto	l6882
 11355   0041B6                     u8090:
 11356   0041B6                     
 11357                           ; BSR set to: 0
 11358   0041B6  1F67               	comf	(___fltol@f1+3)& (0+255),f,b
 11359   0041B8  1F66               	comf	(___fltol@f1+2)& (0+255),f,b
 11360   0041BA  1F65               	comf	(___fltol@f1+1)& (0+255),f,b
 11361   0041BC  6D64               	negf	___fltol@f1& (0+255),b
 11362   0041BE  0E00               	movlw	0
 11363   0041C0  2365               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11364   0041C2  2366               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11365   0041C4  2367               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11366   0041C6                     l6882:
 11367                           
 11368                           ; BSR set to: 0
 11369   0041C6  C064  F064         	movff	___fltol@f1,?___fltol
 11370   0041CA  C065  F065         	movff	___fltol@f1+1,?___fltol+1
 11371   0041CE  C066  F066         	movff	___fltol@f1+2,?___fltol+2
 11372   0041D2  C067  F067         	movff	___fltol@f1+3,?___fltol+3
 11373   0041D6                     l1003:
 11374                           
 11375                           ; BSR set to: 0
 11376   0041D6  0012               	return		;funcret
 11377   0041D8                     __end_of___fltol:
 11378                           	callstack 0
 11379                           
 11380 ;; *************** function ___flsub *****************
 11381 ;; Defined at:
 11382 ;;		line 245 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 11383 ;; Parameters:    Size  Location     Type
 11384 ;;  b               4    4[BANK0 ] long 
 11385 ;;  a               4    8[BANK0 ] long 
 11386 ;; Auto vars:     Size  Location     Type
 11387 ;;		None
 11388 ;; Return value:  Size  Location     Type
 11389 ;;                  4    4[BANK0 ] long 
 11390 ;; Registers used:
 11391 ;;		wreg, status,2, status,0, cstack
 11392 ;; Tracked objects:
 11393 ;;		On entry : 0/0
 11394 ;;		On exit  : 0/0
 11395 ;;		Unchanged: 0/0
 11396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11397 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11400 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11401 ;;Total ram usage:        8 bytes
 11402 ;; Hardware stack levels used: 1
 11403 ;; Hardware stack levels required when called: 2
 11404 ;; This function calls:
 11405 ;;		___fladd
 11406 ;; This function is called by:
 11407 ;;		_efgtoa
 11408 ;;		___rem_pio2f
 11409 ;; This function uses a non-reentrant model
 11410 ;;
 11411                           
 11412                           	psect	text43
 11413   004DDA                     __ptext43:
 11414                           	callstack 0
 11415   004DDA                     ___flsub:
 11416                           	callstack 23
 11417   004DDA  0E00               	movlw	0
 11418   004DDC  0100               	movlb	0	; () banked
 11419   004DDE  1B68               	xorwf	___flsub@a& (0+255),f,b
 11420   004DE0  0E00               	movlw	0
 11421   004DE2  1B69               	xorwf	(___flsub@a+1)& (0+255),f,b
 11422   004DE4  0E00               	movlw	0
 11423   004DE6  1B6A               	xorwf	(___flsub@a+2)& (0+255),f,b
 11424   004DE8  0E80               	movlw	128
 11425   004DEA  1B6B               	xorwf	(___flsub@a+3)& (0+255),f,b
 11426   004DEC                     
 11427                           ; BSR set to: 0
 11428   004DEC  C064  F046         	movff	___flsub@b,___fladd@b
 11429   004DF0  C065  F047         	movff	___flsub@b+1,___fladd@b+1
 11430   004DF4  C066  F048         	movff	___flsub@b+2,___fladd@b+2
 11431   004DF8  C067  F049         	movff	___flsub@b+3,___fladd@b+3
 11432   004DFC  C068  F04A         	movff	___flsub@a,___fladd@a
 11433   004E00  C069  F04B         	movff	___flsub@a+1,___fladd@a+1
 11434   004E04  C06A  F04C         	movff	___flsub@a+2,___fladd@a+2
 11435   004E08  C06B  F04D         	movff	___flsub@a+3,___fladd@a+3
 11436   004E0C  ECD9  F00A         	call	___fladd	;wreg free
 11437   004E10  C046  F064         	movff	?___fladd,?___flsub
 11438   004E14  C047  F065         	movff	?___fladd+1,?___flsub+1
 11439   004E18  C048  F066         	movff	?___fladd+2,?___flsub+2
 11440   004E1C  C049  F067         	movff	?___fladd+3,?___flsub+3
 11441   004E20  0012               	return		;funcret
 11442   004E22                     __end_of___flsub:
 11443                           	callstack 0
 11444                           
 11445 ;; *************** function ___fladd *****************
 11446 ;; Defined at:
 11447 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;  b               4   69[COMRAM] long 
 11450 ;;  a               4   73[COMRAM] long 
 11451 ;; Auto vars:     Size  Location     Type
 11452 ;;  grs             1    3[BANK0 ] unsigned char 
 11453 ;;  bexp            1    2[BANK0 ] unsigned char 
 11454 ;;  aexp            1    1[BANK0 ] unsigned char 
 11455 ;;  signs           1    0[BANK0 ] unsigned char 
 11456 ;; Return value:  Size  Location     Type
 11457 ;;                  4   69[COMRAM] unsigned char 
 11458 ;; Registers used:
 11459 ;;		wreg, status,2, status,0
 11460 ;; Tracked objects:
 11461 ;;		On entry : 0/0
 11462 ;;		On exit  : 0/0
 11463 ;;		Unchanged: 0/0
 11464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11465 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11466 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11467 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11468 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11469 ;;Total ram usage:       16 bytes
 11470 ;; Hardware stack levels used: 1
 11471 ;; Hardware stack levels required when called: 1
 11472 ;; This function calls:
 11473 ;;		Nothing
 11474 ;; This function is called by:
 11475 ;;		_runDAC
 11476 ;;		___flsub
 11477 ;;		_efgtoa
 11478 ;;		_sinf
 11479 ;;		___cosdf
 11480 ;;		___rem_pio2f
 11481 ;;		___sindf
 11482 ;; This function uses a non-reentrant model
 11483 ;;
 11484                           
 11485                           	psect	text44
 11486   0015B2                     __ptext44:
 11487                           	callstack 0
 11488   0015B2                     ___fladd:
 11489                           	callstack 23
 11490   0015B2  5049               	movf	(___fladd@b+3)^0,w,c
 11491   0015B4  0B80               	andlw	128
 11492   0015B6  0100               	movlb	0	; () banked
 11493   0015B8  6F60               	movwf	___fladd@signs& (0+255),b
 11494   0015BA  5049               	movf	(___fladd@b+3)^0,w,c
 11495   0015BC  2449               	addwf	(___fladd@b+3)^0,w,c
 11496   0015BE  6F62               	movwf	___fladd@bexp& (0+255),b
 11497   0015C0                     
 11498                           ; BSR set to: 0
 11499   0015C0  AE48               	btfss	(___fladd@b+2)^0,7,c
 11500   0015C2  EFE5  F00A         	goto	u7001
 11501   0015C6  EFE7  F00A         	goto	u7000
 11502   0015CA                     u7001:
 11503   0015CA  EFE8  F00A         	goto	l6232
 11504   0015CE                     u7000:
 11505   0015CE                     
 11506                           ; BSR set to: 0
 11507   0015CE  8162               	bsf	___fladd@bexp& (0+255),0,b
 11508   0015D0                     l6232:
 11509                           
 11510                           ; BSR set to: 0
 11511   0015D0  5162               	movf	___fladd@bexp& (0+255),w,b
 11512   0015D2  B4D8               	btfsc	status,2,c
 11513   0015D4  EFEE  F00A         	goto	u7011
 11514   0015D8  EFF0  F00A         	goto	u7010
 11515   0015DC                     u7011:
 11516   0015DC  EF05  F00B         	goto	l6242
 11517   0015E0                     u7010:
 11518   0015E0                     
 11519                           ; BSR set to: 0
 11520   0015E0  2962               	incf	___fladd@bexp& (0+255),w,b
 11521   0015E2  A4D8               	btfss	status,2,c
 11522   0015E4  EFF6  F00A         	goto	u7021
 11523   0015E8  EFF8  F00A         	goto	u7020
 11524   0015EC                     u7021:
 11525   0015EC  EF00  F00B         	goto	l6238
 11526   0015F0                     u7020:
 11527   0015F0                     
 11528                           ; BSR set to: 0
 11529   0015F0  0E00               	movlw	0
 11530   0015F2  6E46               	movwf	___fladd@b^0,c
 11531   0015F4  0E00               	movlw	0
 11532   0015F6  6E47               	movwf	(___fladd@b+1)^0,c
 11533   0015F8  0E00               	movlw	0
 11534   0015FA  6E48               	movwf	(___fladd@b+2)^0,c
 11535   0015FC  0E00               	movlw	0
 11536   0015FE  6E49               	movwf	(___fladd@b+3)^0,c
 11537   001600                     l6238:
 11538                           
 11539                           ; BSR set to: 0
 11540   001600  8E48               	bsf	(___fladd@b+2)^0,7,c
 11541   001602                     
 11542                           ; BSR set to: 0
 11543   001602  0E00               	movlw	0
 11544   001604  6E49               	movwf	(___fladd@b+3)^0,c
 11545   001606  EF0D  F00B         	goto	l6244
 11546   00160A                     l6242:
 11547                           
 11548                           ; BSR set to: 0
 11549   00160A  0E00               	movlw	0
 11550   00160C  6E46               	movwf	___fladd@b^0,c
 11551   00160E  0E00               	movlw	0
 11552   001610  6E47               	movwf	(___fladd@b+1)^0,c
 11553   001612  0E00               	movlw	0
 11554   001614  6E48               	movwf	(___fladd@b+2)^0,c
 11555   001616  0E00               	movlw	0
 11556   001618  6E49               	movwf	(___fladd@b+3)^0,c
 11557   00161A                     l6244:
 11558                           
 11559                           ; BSR set to: 0
 11560   00161A  504D               	movf	(___fladd@a+3)^0,w,c
 11561   00161C  0B80               	andlw	128
 11562   00161E  6F61               	movwf	___fladd@aexp& (0+255),b
 11563   001620                     
 11564                           ; BSR set to: 0
 11565   001620  5160               	movf	___fladd@signs& (0+255),w,b
 11566   001622  1961               	xorwf	___fladd@aexp& (0+255),w,b
 11567   001624  B4D8               	btfsc	status,2,c
 11568   001626  EF17  F00B         	goto	u7031
 11569   00162A  EF19  F00B         	goto	u7030
 11570   00162E                     u7031:
 11571   00162E  EF1A  F00B         	goto	l6250
 11572   001632                     u7030:
 11573   001632                     
 11574                           ; BSR set to: 0
 11575   001632  8D60               	bsf	___fladd@signs& (0+255),6,b
 11576   001634                     l6250:
 11577                           
 11578                           ; BSR set to: 0
 11579   001634  504D               	movf	(___fladd@a+3)^0,w,c
 11580   001636  244D               	addwf	(___fladd@a+3)^0,w,c
 11581   001638  6F61               	movwf	___fladd@aexp& (0+255),b
 11582   00163A                     
 11583                           ; BSR set to: 0
 11584   00163A  AE4C               	btfss	(___fladd@a+2)^0,7,c
 11585   00163C  EF22  F00B         	goto	u7041
 11586   001640  EF24  F00B         	goto	u7040
 11587   001644                     u7041:
 11588   001644  EF25  F00B         	goto	l6256
 11589   001648                     u7040:
 11590   001648                     
 11591                           ; BSR set to: 0
 11592   001648  8161               	bsf	___fladd@aexp& (0+255),0,b
 11593   00164A                     l6256:
 11594                           
 11595                           ; BSR set to: 0
 11596   00164A  5161               	movf	___fladd@aexp& (0+255),w,b
 11597   00164C  B4D8               	btfsc	status,2,c
 11598   00164E  EF2B  F00B         	goto	u7051
 11599   001652  EF2D  F00B         	goto	u7050
 11600   001656                     u7051:
 11601   001656  EF42  F00B         	goto	l6266
 11602   00165A                     u7050:
 11603   00165A                     
 11604                           ; BSR set to: 0
 11605   00165A  2961               	incf	___fladd@aexp& (0+255),w,b
 11606   00165C  A4D8               	btfss	status,2,c
 11607   00165E  EF33  F00B         	goto	u7061
 11608   001662  EF35  F00B         	goto	u7060
 11609   001666                     u7061:
 11610   001666  EF3D  F00B         	goto	l6262
 11611   00166A                     u7060:
 11612   00166A                     
 11613                           ; BSR set to: 0
 11614   00166A  0E00               	movlw	0
 11615   00166C  6E4A               	movwf	___fladd@a^0,c
 11616   00166E  0E00               	movlw	0
 11617   001670  6E4B               	movwf	(___fladd@a+1)^0,c
 11618   001672  0E00               	movlw	0
 11619   001674  6E4C               	movwf	(___fladd@a+2)^0,c
 11620   001676  0E00               	movlw	0
 11621   001678  6E4D               	movwf	(___fladd@a+3)^0,c
 11622   00167A                     l6262:
 11623                           
 11624                           ; BSR set to: 0
 11625   00167A  8E4C               	bsf	(___fladd@a+2)^0,7,c
 11626   00167C                     
 11627                           ; BSR set to: 0
 11628   00167C  0E00               	movlw	0
 11629   00167E  6E4D               	movwf	(___fladd@a+3)^0,c
 11630   001680  EF4A  F00B         	goto	l6268
 11631   001684                     l6266:
 11632                           
 11633                           ; BSR set to: 0
 11634   001684  0E00               	movlw	0
 11635   001686  6E4A               	movwf	___fladd@a^0,c
 11636   001688  0E00               	movlw	0
 11637   00168A  6E4B               	movwf	(___fladd@a+1)^0,c
 11638   00168C  0E00               	movlw	0
 11639   00168E  6E4C               	movwf	(___fladd@a+2)^0,c
 11640   001690  0E00               	movlw	0
 11641   001692  6E4D               	movwf	(___fladd@a+3)^0,c
 11642   001694                     l6268:
 11643                           
 11644                           ; BSR set to: 0
 11645   001694  5162               	movf	___fladd@bexp& (0+255),w,b
 11646   001696  5D61               	subwf	___fladd@aexp& (0+255),w,b
 11647   001698  B0D8               	btfsc	status,0,c
 11648   00169A  EF51  F00B         	goto	u7071
 11649   00169E  EF53  F00B         	goto	u7070
 11650   0016A2                     u7071:
 11651   0016A2  EF7A  F00B         	goto	l6304
 11652   0016A6                     u7070:
 11653   0016A6                     
 11654                           ; BSR set to: 0
 11655   0016A6  AD60               	btfss	___fladd@signs& (0+255),6,b
 11656   0016A8  EF58  F00B         	goto	u7081
 11657   0016AC  EF5A  F00B         	goto	u7080
 11658   0016B0                     u7081:
 11659   0016B0  EF5C  F00B         	goto	l6274
 11660   0016B4                     u7080:
 11661   0016B4                     
 11662                           ; BSR set to: 0
 11663   0016B4  0E80               	movlw	128
 11664   0016B6  1B60               	xorwf	___fladd@signs& (0+255),f,b
 11665   0016B8                     l6274:
 11666                           
 11667                           ; BSR set to: 0
 11668   0016B8  C062  F063         	movff	___fladd@bexp,___fladd@grs
 11669   0016BC                     
 11670                           ; BSR set to: 0
 11671   0016BC  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 11672   0016C0                     
 11673                           ; BSR set to: 0
 11674   0016C0  C063  F061         	movff	___fladd@grs,___fladd@aexp
 11675   0016C4                     
 11676                           ; BSR set to: 0
 11677   0016C4  C046  F063         	movff	___fladd@b,___fladd@grs
 11678   0016C8                     
 11679                           ; BSR set to: 0
 11680   0016C8  C04A  F046         	movff	___fladd@a,___fladd@b
 11681   0016CC                     
 11682                           ; BSR set to: 0
 11683   0016CC  C063  F04A         	movff	___fladd@grs,___fladd@a
 11684   0016D0                     
 11685                           ; BSR set to: 0
 11686   0016D0  C047  F063         	movff	___fladd@b+1,___fladd@grs
 11687   0016D4                     
 11688                           ; BSR set to: 0
 11689   0016D4  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
 11690   0016D8                     
 11691                           ; BSR set to: 0
 11692   0016D8  C063  F04B         	movff	___fladd@grs,___fladd@a+1
 11693   0016DC                     
 11694                           ; BSR set to: 0
 11695   0016DC  C048  F063         	movff	___fladd@b+2,___fladd@grs
 11696   0016E0                     
 11697                           ; BSR set to: 0
 11698   0016E0  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
 11699   0016E4                     
 11700                           ; BSR set to: 0
 11701   0016E4  C063  F04C         	movff	___fladd@grs,___fladd@a+2
 11702   0016E8                     
 11703                           ; BSR set to: 0
 11704   0016E8  C049  F063         	movff	___fladd@b+3,___fladd@grs
 11705   0016EC                     
 11706                           ; BSR set to: 0
 11707   0016EC  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
 11708   0016F0                     
 11709                           ; BSR set to: 0
 11710   0016F0  C063  F04D         	movff	___fladd@grs,___fladd@a+3
 11711   0016F4                     l6304:
 11712                           
 11713                           ; BSR set to: 0
 11714   0016F4  0E00               	movlw	0
 11715   0016F6  6F63               	movwf	___fladd@grs& (0+255),b
 11716   0016F8                     
 11717                           ; BSR set to: 0
 11718   0016F8  5162               	movf	___fladd@bexp& (0+255),w,b
 11719   0016FA  C061  F04E         	movff	___fladd@aexp,??___fladd
 11720   0016FE  6A4F               	clrf	(??___fladd+1)^0,c
 11721   001700  5E4E               	subwf	??___fladd^0,f,c
 11722   001702  0E00               	movlw	0
 11723   001704  5A4F               	subwfb	(??___fladd+1)^0,f,c
 11724   001706  BE4F               	btfsc	(??___fladd+1)^0,7,c
 11725   001708  EF8F  F00B         	goto	u7091
 11726   00170C  504F               	movf	(??___fladd+1)^0,w,c
 11727   00170E  E109               	bnz	u7090
 11728   001710  0E1A               	movlw	26
 11729   001712  5C4E               	subwf	??___fladd^0,w,c
 11730   001714  A0D8               	btfss	status,0,c
 11731   001716  EF8F  F00B         	goto	u7091
 11732   00171A  EF91  F00B         	goto	u7090
 11733   00171E                     u7091:
 11734   00171E  EFC8  F00B         	goto	l1235
 11735   001722                     u7090:
 11736   001722                     
 11737                           ; BSR set to: 0
 11738   001722  5046               	movf	___fladd@b^0,w,c
 11739   001724  1047               	iorwf	(___fladd@b+1)^0,w,c
 11740   001726  1048               	iorwf	(___fladd@b+2)^0,w,c
 11741   001728  1049               	iorwf	(___fladd@b+3)^0,w,c
 11742   00172A  A4D8               	btfss	status,2,c
 11743   00172C  EF9A  F00B         	goto	u7101
 11744   001730  EF9D  F00B         	goto	u7100
 11745   001734                     u7101:
 11746   001734  0E01               	movlw	1
 11747   001736  EF9E  F00B         	goto	u7110
 11748   00173A                     u7100:
 11749   00173A  0E00               	movlw	0
 11750   00173C                     u7110:
 11751   00173C  6F63               	movwf	___fladd@grs& (0+255),b
 11752   00173E                     
 11753                           ; BSR set to: 0
 11754   00173E  0E00               	movlw	0
 11755   001740  6E46               	movwf	___fladd@b^0,c
 11756   001742  0E00               	movlw	0
 11757   001744  6E47               	movwf	(___fladd@b+1)^0,c
 11758   001746  0E00               	movlw	0
 11759   001748  6E48               	movwf	(___fladd@b+2)^0,c
 11760   00174A  0E00               	movlw	0
 11761   00174C  6E49               	movwf	(___fladd@b+3)^0,c
 11762   00174E                     
 11763                           ; BSR set to: 0
 11764   00174E  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 11765   001752  EFD1  F00B         	goto	l1234
 11766   001756                     l1236:
 11767                           
 11768                           ; BSR set to: 0
 11769   001756  A163               	btfss	___fladd@grs& (0+255),0,b
 11770   001758  EFB0  F00B         	goto	u7121
 11771   00175C  EFB2  F00B         	goto	u7120
 11772   001760                     u7121:
 11773   001760  EFB8  F00B         	goto	l6316
 11774   001764                     u7120:
 11775   001764                     
 11776                           ; BSR set to: 0
 11777   001764  90D8               	bcf	status,0,c
 11778   001766  3163               	rrcf	___fladd@grs& (0+255),w,b
 11779   001768  0901               	iorlw	1
 11780   00176A  6F63               	movwf	___fladd@grs& (0+255),b
 11781   00176C  EFBA  F00B         	goto	l6318
 11782   001770                     l6316:
 11783                           
 11784                           ; BSR set to: 0
 11785   001770  90D8               	bcf	status,0,c
 11786   001772  3363               	rrcf	___fladd@grs& (0+255),f,b
 11787   001774                     l6318:
 11788                           
 11789                           ; BSR set to: 0
 11790   001774  A046               	btfss	___fladd@b^0,0,c
 11791   001776  EFBF  F00B         	goto	u7131
 11792   00177A  EFC1  F00B         	goto	u7130
 11793   00177E                     u7131:
 11794   00177E  EFC2  F00B         	goto	l6322
 11795   001782                     u7130:
 11796   001782                     
 11797                           ; BSR set to: 0
 11798   001782  8F63               	bsf	___fladd@grs& (0+255),7,b
 11799   001784                     l6322:
 11800                           
 11801                           ; BSR set to: 0
 11802   001784  3449               	rlcf	(___fladd@b+3)^0,w,c
 11803   001786  3249               	rrcf	(___fladd@b+3)^0,f,c
 11804   001788  3248               	rrcf	(___fladd@b+2)^0,f,c
 11805   00178A  3247               	rrcf	(___fladd@b+1)^0,f,c
 11806   00178C  3246               	rrcf	___fladd@b^0,f,c
 11807   00178E                     
 11808                           ; BSR set to: 0
 11809   00178E  2B62               	incf	___fladd@bexp& (0+255),f,b
 11810   001790                     l1235:
 11811                           
 11812                           ; BSR set to: 0
 11813   001790  5161               	movf	___fladd@aexp& (0+255),w,b
 11814   001792  5D62               	subwf	___fladd@bexp& (0+255),w,b
 11815   001794  A0D8               	btfss	status,0,c
 11816   001796  EFCF  F00B         	goto	u7141
 11817   00179A  EFD1  F00B         	goto	u7140
 11818   00179E                     u7141:
 11819   00179E  EFAB  F00B         	goto	l1236
 11820   0017A2                     u7140:
 11821   0017A2                     l1234:
 11822                           
 11823                           ; BSR set to: 0
 11824   0017A2  BD60               	btfsc	___fladd@signs& (0+255),6,b
 11825   0017A4  EFD6  F00B         	goto	u7151
 11826   0017A8  EFD8  F00B         	goto	u7150
 11827   0017AC                     u7151:
 11828   0017AC  EF18  F00C         	goto	l6350
 11829   0017B0                     u7150:
 11830   0017B0                     
 11831                           ; BSR set to: 0
 11832   0017B0  5162               	movf	___fladd@bexp& (0+255),w,b
 11833   0017B2  A4D8               	btfss	status,2,c
 11834   0017B4  EFDE  F00B         	goto	u7161
 11835   0017B8  EFE0  F00B         	goto	u7160
 11836   0017BC                     u7161:
 11837   0017BC  EFEA  F00B         	goto	l6332
 11838   0017C0                     u7160:
 11839   0017C0                     
 11840                           ; BSR set to: 0
 11841   0017C0  0E00               	movlw	0
 11842   0017C2  6E46               	movwf	?___fladd^0,c
 11843   0017C4  0E00               	movlw	0
 11844   0017C6  6E47               	movwf	(?___fladd+1)^0,c
 11845   0017C8  0E00               	movlw	0
 11846   0017CA  6E48               	movwf	(?___fladd+2)^0,c
 11847   0017CC  0E00               	movlw	0
 11848   0017CE  6E49               	movwf	(?___fladd+3)^0,c
 11849   0017D0  EF39  F00D         	goto	l1243
 11850   0017D4                     l6332:
 11851                           
 11852                           ; BSR set to: 0
 11853   0017D4  504A               	movf	___fladd@a^0,w,c
 11854   0017D6  2646               	addwf	___fladd@b^0,f,c
 11855   0017D8  504B               	movf	(___fladd@a+1)^0,w,c
 11856   0017DA  2247               	addwfc	(___fladd@b+1)^0,f,c
 11857   0017DC  504C               	movf	(___fladd@a+2)^0,w,c
 11858   0017DE  2248               	addwfc	(___fladd@b+2)^0,f,c
 11859   0017E0  504D               	movf	(___fladd@a+3)^0,w,c
 11860   0017E2  2249               	addwfc	(___fladd@b+3)^0,f,c
 11861   0017E4                     
 11862                           ; BSR set to: 0
 11863   0017E4  A049               	btfss	(___fladd@b+3)^0,0,c
 11864   0017E6  EFF7  F00B         	goto	u7171
 11865   0017EA  EFF9  F00B         	goto	u7170
 11866   0017EE                     u7171:
 11867   0017EE  EFA5  F00C         	goto	l6386
 11868   0017F2                     u7170:
 11869   0017F2                     
 11870                           ; BSR set to: 0
 11871   0017F2  A163               	btfss	___fladd@grs& (0+255),0,b
 11872   0017F4  EFFE  F00B         	goto	u7181
 11873   0017F8  EF00  F00C         	goto	u7180
 11874   0017FC                     u7181:
 11875   0017FC  EF06  F00C         	goto	l6340
 11876   001800                     u7180:
 11877   001800                     
 11878                           ; BSR set to: 0
 11879   001800  90D8               	bcf	status,0,c
 11880   001802  3163               	rrcf	___fladd@grs& (0+255),w,b
 11881   001804  0901               	iorlw	1
 11882   001806  6F63               	movwf	___fladd@grs& (0+255),b
 11883   001808  EF08  F00C         	goto	l6342
 11884   00180C                     l6340:
 11885                           
 11886                           ; BSR set to: 0
 11887   00180C  90D8               	bcf	status,0,c
 11888   00180E  3363               	rrcf	___fladd@grs& (0+255),f,b
 11889   001810                     l6342:
 11890                           
 11891                           ; BSR set to: 0
 11892   001810  A046               	btfss	___fladd@b^0,0,c
 11893   001812  EF0D  F00C         	goto	u7191
 11894   001816  EF0F  F00C         	goto	u7190
 11895   00181A                     u7191:
 11896   00181A  EF10  F00C         	goto	l6346
 11897   00181E                     u7190:
 11898   00181E                     
 11899                           ; BSR set to: 0
 11900   00181E  8F63               	bsf	___fladd@grs& (0+255),7,b
 11901   001820                     l6346:
 11902                           
 11903                           ; BSR set to: 0
 11904   001820  3449               	rlcf	(___fladd@b+3)^0,w,c
 11905   001822  3249               	rrcf	(___fladd@b+3)^0,f,c
 11906   001824  3248               	rrcf	(___fladd@b+2)^0,f,c
 11907   001826  3247               	rrcf	(___fladd@b+1)^0,f,c
 11908   001828  3246               	rrcf	___fladd@b^0,f,c
 11909   00182A                     
 11910                           ; BSR set to: 0
 11911   00182A  2B62               	incf	___fladd@bexp& (0+255),f,b
 11912   00182C  EFA5  F00C         	goto	l6386
 11913   001830                     l6350:
 11914                           
 11915                           ; BSR set to: 0
 11916   001830  504A               	movf	___fladd@a^0,w,c
 11917   001832  5C46               	subwf	___fladd@b^0,w,c
 11918   001834  504B               	movf	(___fladd@a+1)^0,w,c
 11919   001836  5847               	subwfb	(___fladd@b+1)^0,w,c
 11920   001838  504C               	movf	(___fladd@a+2)^0,w,c
 11921   00183A  5848               	subwfb	(___fladd@b+2)^0,w,c
 11922   00183C  5049               	movf	(___fladd@b+3)^0,w,c
 11923   00183E  0A80               	xorlw	128
 11924   001840  6E4E               	movwf	??___fladd^0,c
 11925   001842  504D               	movf	(___fladd@a+3)^0,w,c
 11926   001844  0A80               	xorlw	128
 11927   001846  584E               	subwfb	??___fladd^0,w,c
 11928   001848  B0D8               	btfsc	status,0,c
 11929   00184A  EF29  F00C         	goto	u7201
 11930   00184E  EF2B  F00C         	goto	u7200
 11931   001852                     u7201:
 11932   001852  EF56  F00C         	goto	l6360
 11933   001856                     u7200:
 11934   001856                     
 11935                           ; BSR set to: 0
 11936   001856  5046               	movf	___fladd@b^0,w,c
 11937   001858  5C4A               	subwf	___fladd@a^0,w,c
 11938   00185A  6E4E               	movwf	??___fladd^0,c
 11939   00185C  5047               	movf	(___fladd@b+1)^0,w,c
 11940   00185E  584B               	subwfb	(___fladd@a+1)^0,w,c
 11941   001860  6E4F               	movwf	(??___fladd+1)^0,c
 11942   001862  5048               	movf	(___fladd@b+2)^0,w,c
 11943   001864  584C               	subwfb	(___fladd@a+2)^0,w,c
 11944   001866  6E50               	movwf	(??___fladd+2)^0,c
 11945   001868  5049               	movf	(___fladd@b+3)^0,w,c
 11946   00186A  584D               	subwfb	(___fladd@a+3)^0,w,c
 11947   00186C  6E51               	movwf	(??___fladd+3)^0,c
 11948   00186E  0EFF               	movlw	255
 11949   001870  244E               	addwf	??___fladd^0,w,c
 11950   001872  6E46               	movwf	___fladd@b^0,c
 11951   001874  0EFF               	movlw	255
 11952   001876  204F               	addwfc	(??___fladd+1)^0,w,c
 11953   001878  6E47               	movwf	(___fladd@b+1)^0,c
 11954   00187A  0EFF               	movlw	255
 11955   00187C  2050               	addwfc	(??___fladd+2)^0,w,c
 11956   00187E  6E48               	movwf	(___fladd@b+2)^0,c
 11957   001880  0EFF               	movlw	255
 11958   001882  2051               	addwfc	(??___fladd+3)^0,w,c
 11959   001884  6E49               	movwf	(___fladd@b+3)^0,c
 11960   001886  0E80               	movlw	128
 11961   001888  1B60               	xorwf	___fladd@signs& (0+255),f,b
 11962   00188A                     
 11963                           ; BSR set to: 0
 11964   00188A  6D63               	negf	___fladd@grs& (0+255),b
 11965   00188C                     
 11966                           ; BSR set to: 0
 11967   00188C  5163               	movf	___fladd@grs& (0+255),w,b
 11968   00188E  A4D8               	btfss	status,2,c
 11969   001890  EF4C  F00C         	goto	u7211
 11970   001894  EF4E  F00C         	goto	u7210
 11971   001898                     u7211:
 11972   001898  EF5E  F00C         	goto	l1251
 11973   00189C                     u7210:
 11974   00189C                     
 11975                           ; BSR set to: 0
 11976   00189C  0E01               	movlw	1
 11977   00189E  2646               	addwf	___fladd@b^0,f,c
 11978   0018A0  0E00               	movlw	0
 11979   0018A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 11980   0018A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 11981   0018A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 11982   0018A8  EF5E  F00C         	goto	l1251
 11983   0018AC                     l6360:
 11984                           
 11985                           ; BSR set to: 0
 11986   0018AC  504A               	movf	___fladd@a^0,w,c
 11987   0018AE  5E46               	subwf	___fladd@b^0,f,c
 11988   0018B0  504B               	movf	(___fladd@a+1)^0,w,c
 11989   0018B2  5A47               	subwfb	(___fladd@b+1)^0,f,c
 11990   0018B4  504C               	movf	(___fladd@a+2)^0,w,c
 11991   0018B6  5A48               	subwfb	(___fladd@b+2)^0,f,c
 11992   0018B8  504D               	movf	(___fladd@a+3)^0,w,c
 11993   0018BA  5A49               	subwfb	(___fladd@b+3)^0,f,c
 11994   0018BC                     l1251:
 11995                           
 11996                           ; BSR set to: 0
 11997   0018BC  5046               	movf	___fladd@b^0,w,c
 11998   0018BE  1047               	iorwf	(___fladd@b+1)^0,w,c
 11999   0018C0  1048               	iorwf	(___fladd@b+2)^0,w,c
 12000   0018C2  1049               	iorwf	(___fladd@b+3)^0,w,c
 12001   0018C4  A4D8               	btfss	status,2,c
 12002   0018C6  EF67  F00C         	goto	u7221
 12003   0018CA  EF69  F00C         	goto	u7220
 12004   0018CE                     u7221:
 12005   0018CE  EF9E  F00C         	goto	l6384
 12006   0018D2                     u7220:
 12007   0018D2                     
 12008                           ; BSR set to: 0
 12009   0018D2  5163               	movf	___fladd@grs& (0+255),w,b
 12010   0018D4  A4D8               	btfss	status,2,c
 12011   0018D6  EF6F  F00C         	goto	u7231
 12012   0018DA  EF71  F00C         	goto	u7230
 12013   0018DE                     u7231:
 12014   0018DE  EF9E  F00C         	goto	l6384
 12015   0018E2                     u7230:
 12016   0018E2                     
 12017                           ; BSR set to: 0
 12018   0018E2  0E00               	movlw	0
 12019   0018E4  6E46               	movwf	?___fladd^0,c
 12020   0018E6  0E00               	movlw	0
 12021   0018E8  6E47               	movwf	(?___fladd+1)^0,c
 12022   0018EA  0E00               	movlw	0
 12023   0018EC  6E48               	movwf	(?___fladd+2)^0,c
 12024   0018EE  0E00               	movlw	0
 12025   0018F0  6E49               	movwf	(?___fladd+3)^0,c
 12026   0018F2  EF39  F00D         	goto	l1243
 12027   0018F6                     l6368:
 12028                           
 12029                           ; BSR set to: 0
 12030   0018F6  90D8               	bcf	status,0,c
 12031   0018F8  3646               	rlcf	___fladd@b^0,f,c
 12032   0018FA  3647               	rlcf	(___fladd@b+1)^0,f,c
 12033   0018FC  3648               	rlcf	(___fladd@b+2)^0,f,c
 12034   0018FE  3649               	rlcf	(___fladd@b+3)^0,f,c
 12035   001900                     
 12036                           ; BSR set to: 0
 12037   001900  AF63               	btfss	___fladd@grs& (0+255),7,b
 12038   001902  EF85  F00C         	goto	u7241
 12039   001906  EF87  F00C         	goto	u7240
 12040   00190A                     u7241:
 12041   00190A  EF88  F00C         	goto	l6374
 12042   00190E                     u7240:
 12043   00190E                     
 12044                           ; BSR set to: 0
 12045   00190E  8046               	bsf	___fladd@b^0,0,c
 12046   001910                     l6374:
 12047                           
 12048                           ; BSR set to: 0
 12049   001910  A163               	btfss	___fladd@grs& (0+255),0,b
 12050   001912  EF8D  F00C         	goto	u7251
 12051   001916  EF8F  F00C         	goto	u7250
 12052   00191A                     u7251:
 12053   00191A  EF93  F00C         	goto	l6378
 12054   00191E                     u7250:
 12055   00191E                     
 12056                           ; BSR set to: 0
 12057   00191E  80D8               	bsf	status,0,c
 12058   001920  3763               	rlcf	___fladd@grs& (0+255),f,b
 12059   001922  EF95  F00C         	goto	l6380
 12060   001926                     l6378:
 12061                           
 12062                           ; BSR set to: 0
 12063   001926  90D8               	bcf	status,0,c
 12064   001928  3763               	rlcf	___fladd@grs& (0+255),f,b
 12065   00192A                     l6380:
 12066                           
 12067                           ; BSR set to: 0
 12068   00192A  5162               	movf	___fladd@bexp& (0+255),w,b
 12069   00192C  B4D8               	btfsc	status,2,c
 12070   00192E  EF9B  F00C         	goto	u7261
 12071   001932  EF9D  F00C         	goto	u7260
 12072   001936                     u7261:
 12073   001936  EF9E  F00C         	goto	l6384
 12074   00193A                     u7260:
 12075   00193A                     
 12076                           ; BSR set to: 0
 12077   00193A  0762               	decf	___fladd@bexp& (0+255),f,b
 12078   00193C                     l6384:
 12079                           
 12080                           ; BSR set to: 0
 12081   00193C  AE48               	btfss	(___fladd@b+2)^0,7,c
 12082   00193E  EFA3  F00C         	goto	u7271
 12083   001942  EFA5  F00C         	goto	u7270
 12084   001946                     u7271:
 12085   001946  EF7B  F00C         	goto	l6368
 12086   00194A                     u7270:
 12087   00194A                     l6386:
 12088                           
 12089                           ; BSR set to: 0
 12090   00194A  0E00               	movlw	0
 12091   00194C  6F61               	movwf	___fladd@aexp& (0+255),b
 12092   00194E                     
 12093                           ; BSR set to: 0
 12094   00194E  AF63               	btfss	___fladd@grs& (0+255),7,b
 12095   001950  EFAC  F00C         	goto	u7281
 12096   001954  EFAE  F00C         	goto	u7280
 12097   001958                     u7281:
 12098   001958  EFC6  F00C         	goto	l1260
 12099   00195C                     u7280:
 12100   00195C                     
 12101                           ; BSR set to: 0
 12102   00195C  C063  F04E         	movff	___fladd@grs,??___fladd
 12103   001960  0E7F               	movlw	127
 12104   001962  164E               	andwf	??___fladd^0,f,c
 12105   001964  B4D8               	btfsc	status,2,c
 12106   001966  EFB7  F00C         	goto	u7291
 12107   00196A  EFB9  F00C         	goto	u7290
 12108   00196E                     u7291:
 12109   00196E  EFBD  F00C         	goto	l1261
 12110   001972                     u7290:
 12111   001972                     l6392:
 12112                           
 12113                           ; BSR set to: 0
 12114   001972  0E01               	movlw	1
 12115   001974  6F61               	movwf	___fladd@aexp& (0+255),b
 12116   001976  EFC6  F00C         	goto	l1260
 12117   00197A                     l1261:
 12118                           
 12119                           ; BSR set to: 0
 12120   00197A  A046               	btfss	___fladd@b^0,0,c
 12121   00197C  EFC2  F00C         	goto	u7301
 12122   001980  EFC4  F00C         	goto	u7300
 12123   001984                     u7301:
 12124   001984  EFC6  F00C         	goto	l1260
 12125   001988                     u7300:
 12126   001988  EFB9  F00C         	goto	l6392
 12127   00198C                     l1260:
 12128                           
 12129                           ; BSR set to: 0
 12130   00198C  5161               	movf	___fladd@aexp& (0+255),w,b
 12131   00198E  B4D8               	btfsc	status,2,c
 12132   001990  EFCC  F00C         	goto	u7311
 12133   001994  EFCE  F00C         	goto	u7310
 12134   001998                     u7311:
 12135   001998  EFF9  F00C         	goto	l6404
 12136   00199C                     u7310:
 12137   00199C                     
 12138                           ; BSR set to: 0
 12139   00199C  0E01               	movlw	1
 12140   00199E  2646               	addwf	___fladd@b^0,f,c
 12141   0019A0  0E00               	movlw	0
 12142   0019A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 12143   0019A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 12144   0019A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 12145   0019A8                     
 12146                           ; BSR set to: 0
 12147   0019A8  A049               	btfss	(___fladd@b+3)^0,0,c
 12148   0019AA  EFD9  F00C         	goto	u7321
 12149   0019AE  EFDB  F00C         	goto	u7320
 12150   0019B2                     u7321:
 12151   0019B2  EFF9  F00C         	goto	l6404
 12152   0019B6                     u7320:
 12153   0019B6                     
 12154                           ; BSR set to: 0
 12155   0019B6  C046  F04E         	movff	___fladd@b,??___fladd
 12156   0019BA  C047  F04F         	movff	___fladd@b+1,??___fladd+1
 12157   0019BE  C048  F050         	movff	___fladd@b+2,??___fladd+2
 12158   0019C2  C049  F051         	movff	___fladd@b+3,??___fladd+3
 12159   0019C6  3451               	rlcf	(??___fladd+3)^0,w,c
 12160   0019C8  3251               	rrcf	(??___fladd+3)^0,f,c
 12161   0019CA  3250               	rrcf	(??___fladd+2)^0,f,c
 12162   0019CC  324F               	rrcf	(??___fladd+1)^0,f,c
 12163   0019CE  324E               	rrcf	??___fladd^0,f,c
 12164   0019D0  C04E  F046         	movff	??___fladd,___fladd@b
 12165   0019D4  C04F  F047         	movff	??___fladd+1,___fladd@b+1
 12166   0019D8  C050  F048         	movff	??___fladd+2,___fladd@b+2
 12167   0019DC  C051  F049         	movff	??___fladd+3,___fladd@b+3
 12168   0019E0  2962               	incf	___fladd@bexp& (0+255),w,b
 12169   0019E2  B4D8               	btfsc	status,2,c
 12170   0019E4  EFF6  F00C         	goto	u7331
 12171   0019E8  EFF8  F00C         	goto	u7330
 12172   0019EC                     u7331:
 12173   0019EC  EFF9  F00C         	goto	l6404
 12174   0019F0                     u7330:
 12175   0019F0                     
 12176                           ; BSR set to: 0
 12177   0019F0  2B62               	incf	___fladd@bexp& (0+255),f,b
 12178   0019F2                     l6404:
 12179                           
 12180                           ; BSR set to: 0
 12181   0019F2  2962               	incf	___fladd@bexp& (0+255),w,b
 12182   0019F4  B4D8               	btfsc	status,2,c
 12183   0019F6  EFFF  F00C         	goto	u7341
 12184   0019FA  EF01  F00D         	goto	u7340
 12185   0019FE                     u7341:
 12186   0019FE  EF09  F00D         	goto	l6408
 12187   001A02                     u7340:
 12188   001A02                     
 12189                           ; BSR set to: 0
 12190   001A02  5162               	movf	___fladd@bexp& (0+255),w,b
 12191   001A04  A4D8               	btfss	status,2,c
 12192   001A06  EF07  F00D         	goto	u7351
 12193   001A0A  EF09  F00D         	goto	u7350
 12194   001A0E                     u7351:
 12195   001A0E  EF1B  F00D         	goto	l6412
 12196   001A12                     u7350:
 12197   001A12                     l6408:
 12198                           
 12199                           ; BSR set to: 0
 12200   001A12  0E00               	movlw	0
 12201   001A14  6E46               	movwf	___fladd@b^0,c
 12202   001A16  0E00               	movlw	0
 12203   001A18  6E47               	movwf	(___fladd@b+1)^0,c
 12204   001A1A  0E00               	movlw	0
 12205   001A1C  6E48               	movwf	(___fladd@b+2)^0,c
 12206   001A1E  0E00               	movlw	0
 12207   001A20  6E49               	movwf	(___fladd@b+3)^0,c
 12208   001A22  5162               	movf	___fladd@bexp& (0+255),w,b
 12209   001A24  A4D8               	btfss	status,2,c
 12210   001A26  EF17  F00D         	goto	u7361
 12211   001A2A  EF19  F00D         	goto	u7360
 12212   001A2E                     u7361:
 12213   001A2E  EF1B  F00D         	goto	l6412
 12214   001A32                     u7360:
 12215   001A32                     
 12216                           ; BSR set to: 0
 12217   001A32  0E00               	movlw	0
 12218   001A34  6F60               	movwf	___fladd@signs& (0+255),b
 12219   001A36                     l6412:
 12220                           
 12221                           ; BSR set to: 0
 12222   001A36  A162               	btfss	___fladd@bexp& (0+255),0,b
 12223   001A38  EF20  F00D         	goto	u7371
 12224   001A3C  EF22  F00D         	goto	u7370
 12225   001A40                     u7371:
 12226   001A40  EF25  F00D         	goto	l6416
 12227   001A44                     u7370:
 12228   001A44                     
 12229                           ; BSR set to: 0
 12230   001A44  8E48               	bsf	(___fladd@b+2)^0,7,c
 12231   001A46  EF26  F00D         	goto	l6418
 12232   001A4A                     l6416:
 12233                           
 12234                           ; BSR set to: 0
 12235   001A4A  9E48               	bcf	(___fladd@b+2)^0,7,c
 12236   001A4C                     l6418:
 12237                           
 12238                           ; BSR set to: 0
 12239   001A4C  90D8               	bcf	status,0,c
 12240   001A4E  3162               	rrcf	___fladd@bexp& (0+255),w,b
 12241   001A50  6E49               	movwf	(___fladd@b+3)^0,c
 12242   001A52                     
 12243                           ; BSR set to: 0
 12244   001A52  AF60               	btfss	___fladd@signs& (0+255),7,b
 12245   001A54  EF2E  F00D         	goto	u7381
 12246   001A58  EF30  F00D         	goto	u7380
 12247   001A5C                     u7381:
 12248   001A5C  EF31  F00D         	goto	l6424
 12249   001A60                     u7380:
 12250   001A60                     
 12251                           ; BSR set to: 0
 12252   001A60  8E49               	bsf	(___fladd@b+3)^0,7,c
 12253   001A62                     l6424:
 12254                           
 12255                           ; BSR set to: 0
 12256   001A62  C046  F046         	movff	___fladd@b,?___fladd
 12257   001A66  C047  F047         	movff	___fladd@b+1,?___fladd+1
 12258   001A6A  C048  F048         	movff	___fladd@b+2,?___fladd+2
 12259   001A6E  C049  F049         	movff	___fladd@b+3,?___fladd+3
 12260   001A72                     l1243:
 12261                           
 12262                           ; BSR set to: 0
 12263   001A72  0012               	return		;funcret
 12264   001A74                     __end_of___fladd:
 12265                           	callstack 0
 12266                           
 12267 ;; *************** function ___flneg *****************
 12268 ;; Defined at:
 12269 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flneg.c"
 12270 ;; Parameters:    Size  Location     Type
 12271 ;;  f1              4   32[BANK0 ] unsigned char 
 12272 ;; Auto vars:     Size  Location     Type
 12273 ;;		None
 12274 ;; Return value:  Size  Location     Type
 12275 ;;                  4   32[BANK0 ] unsigned char 
 12276 ;; Registers used:
 12277 ;;		wreg, status,2, status,0
 12278 ;; Tracked objects:
 12279 ;;		On entry : 0/0
 12280 ;;		On exit  : 0/0
 12281 ;;		Unchanged: 0/0
 12282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12283 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12286 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12287 ;;Total ram usage:        4 bytes
 12288 ;; Hardware stack levels used: 1
 12289 ;; Hardware stack levels required when called: 1
 12290 ;; This function calls:
 12291 ;;		Nothing
 12292 ;; This function is called by:
 12293 ;;		_efgtoa
 12294 ;;		_sinf
 12295 ;;		___rem_pio2f
 12296 ;; This function uses a non-reentrant model
 12297 ;;
 12298                           
 12299                           	psect	text45
 12300   004EEA                     __ptext45:
 12301                           	callstack 0
 12302   004EEA                     ___flneg:
 12303                           	callstack 24
 12304   004EEA  0100               	movlb	0	; () banked
 12305   004EEC  5180               	movf	___flneg@f1& (0+255),w,b
 12306   004EEE  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12307   004EF0  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12308   004EF2  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12309   004EF4  B4D8               	btfsc	status,2,c
 12310   004EF6  EF7F  F027         	goto	u8021
 12311   004EFA  EF81  F027         	goto	u8020
 12312   004EFE                     u8021:
 12313   004EFE  EF89  F027         	goto	l6838
 12314   004F02                     u8020:
 12315   004F02                     
 12316                           ; BSR set to: 0
 12317   004F02  0E00               	movlw	0
 12318   004F04  1B80               	xorwf	___flneg@f1& (0+255),f,b
 12319   004F06  0E00               	movlw	0
 12320   004F08  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12321   004F0A  0E00               	movlw	0
 12322   004F0C  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12323   004F0E  0E80               	movlw	128
 12324   004F10  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12325   004F12                     l6838:
 12326                           
 12327                           ; BSR set to: 0
 12328   004F12  C080  F080         	movff	___flneg@f1,?___flneg
 12329   004F16  C081  F081         	movff	___flneg@f1+1,?___flneg+1
 12330   004F1A  C082  F082         	movff	___flneg@f1+2,?___flneg+2
 12331   004F1E  C083  F083         	movff	___flneg@f1+3,?___flneg+3
 12332   004F22                     
 12333                           ; BSR set to: 0
 12334   004F22  0012               	return		;funcret
 12335   004F24                     __end_of___flneg:
 12336                           	callstack 0
 12337                           
 12338 ;; *************** function ___flmul *****************
 12339 ;; Defined at:
 12340 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcmul.c"
 12341 ;; Parameters:    Size  Location     Type
 12342 ;;  b               4   19[COMRAM] unsigned char 
 12343 ;;  a               4   23[COMRAM] unsigned char 
 12344 ;; Auto vars:     Size  Location     Type
 12345 ;;  prod            4   38[COMRAM] struct .
 12346 ;;  grs             4   33[COMRAM] unsigned long 
 12347 ;;  temp            2   42[COMRAM] struct .
 12348 ;;  bexp            1   37[COMRAM] unsigned char 
 12349 ;;  aexp            1   32[COMRAM] unsigned char 
 12350 ;;  sign            1   31[COMRAM] unsigned char 
 12351 ;; Return value:  Size  Location     Type
 12352 ;;                  4   19[COMRAM] unsigned char 
 12353 ;; Registers used:
 12354 ;;		wreg, status,2, status,0, prodl, prodh
 12355 ;; Tracked objects:
 12356 ;;		On entry : 0/0
 12357 ;;		On exit  : 0/0
 12358 ;;		Unchanged: 0/0
 12359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12360 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12361 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12362 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12363 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12364 ;;Total ram usage:       25 bytes
 12365 ;; Hardware stack levels used: 1
 12366 ;; Hardware stack levels required when called: 1
 12367 ;; This function calls:
 12368 ;;		Nothing
 12369 ;; This function is called by:
 12370 ;;		_runDAC
 12371 ;;		_runADC
 12372 ;;		_efgtoa
 12373 ;;		___cosdf
 12374 ;;		___rem_pio2f
 12375 ;;		___sindf
 12376 ;; This function uses a non-reentrant model
 12377 ;;
 12378                           
 12379                           	psect	text46
 12380   001A74                     __ptext46:
 12381                           	callstack 0
 12382   001A74                     ___flmul:
 12383                           	callstack 24
 12384   001A74  5017               	movf	(___flmul@b+3)^0,w,c
 12385   001A76  0B80               	andlw	128
 12386   001A78  6E20               	movwf	___flmul@sign^0,c
 12387   001A7A  5017               	movf	(___flmul@b+3)^0,w,c
 12388   001A7C  2417               	addwf	(___flmul@b+3)^0,w,c
 12389   001A7E  6E26               	movwf	___flmul@bexp^0,c
 12390   001A80  AE16               	btfss	(___flmul@b+2)^0,7,c
 12391   001A82  EF45  F00D         	goto	u7631
 12392   001A86  EF47  F00D         	goto	u7630
 12393   001A8A                     u7631:
 12394   001A8A  EF48  F00D         	goto	l6586
 12395   001A8E                     u7630:
 12396   001A8E  8026               	bsf	___flmul@bexp^0,0,c
 12397   001A90                     l6586:
 12398   001A90  5026               	movf	___flmul@bexp^0,w,c
 12399   001A92  B4D8               	btfsc	status,2,c
 12400   001A94  EF4E  F00D         	goto	u7641
 12401   001A98  EF50  F00D         	goto	u7640
 12402   001A9C                     u7641:
 12403   001A9C  EF63  F00D         	goto	l6594
 12404   001AA0                     u7640:
 12405   001AA0  2826               	incf	___flmul@bexp^0,w,c
 12406   001AA2  A4D8               	btfss	status,2,c
 12407   001AA4  EF56  F00D         	goto	u7651
 12408   001AA8  EF58  F00D         	goto	u7650
 12409   001AAC                     u7651:
 12410   001AAC  EF60  F00D         	goto	l6592
 12411   001AB0                     u7650:
 12412   001AB0  0E00               	movlw	0
 12413   001AB2  6E14               	movwf	___flmul@b^0,c
 12414   001AB4  0E00               	movlw	0
 12415   001AB6  6E15               	movwf	(___flmul@b+1)^0,c
 12416   001AB8  0E00               	movlw	0
 12417   001ABA  6E16               	movwf	(___flmul@b+2)^0,c
 12418   001ABC  0E00               	movlw	0
 12419   001ABE  6E17               	movwf	(___flmul@b+3)^0,c
 12420   001AC0                     l6592:
 12421   001AC0  8E16               	bsf	(___flmul@b+2)^0,7,c
 12422   001AC2  EF6B  F00D         	goto	l6596
 12423   001AC6                     l6594:
 12424   001AC6  0E00               	movlw	0
 12425   001AC8  6E14               	movwf	___flmul@b^0,c
 12426   001ACA  0E00               	movlw	0
 12427   001ACC  6E15               	movwf	(___flmul@b+1)^0,c
 12428   001ACE  0E00               	movlw	0
 12429   001AD0  6E16               	movwf	(___flmul@b+2)^0,c
 12430   001AD2  0E00               	movlw	0
 12431   001AD4  6E17               	movwf	(___flmul@b+3)^0,c
 12432   001AD6                     l6596:
 12433   001AD6  501B               	movf	(___flmul@a+3)^0,w,c
 12434   001AD8  0B80               	andlw	128
 12435   001ADA  1A20               	xorwf	___flmul@sign^0,f,c
 12436   001ADC  501B               	movf	(___flmul@a+3)^0,w,c
 12437   001ADE  241B               	addwf	(___flmul@a+3)^0,w,c
 12438   001AE0  6E21               	movwf	___flmul@aexp^0,c
 12439   001AE2  AE1A               	btfss	(___flmul@a+2)^0,7,c
 12440   001AE4  EF76  F00D         	goto	u7661
 12441   001AE8  EF78  F00D         	goto	u7660
 12442   001AEC                     u7661:
 12443   001AEC  EF79  F00D         	goto	l6604
 12444   001AF0                     u7660:
 12445   001AF0  8021               	bsf	___flmul@aexp^0,0,c
 12446   001AF2                     l6604:
 12447   001AF2  5021               	movf	___flmul@aexp^0,w,c
 12448   001AF4  B4D8               	btfsc	status,2,c
 12449   001AF6  EF7F  F00D         	goto	u7671
 12450   001AFA  EF81  F00D         	goto	u7670
 12451   001AFE                     u7671:
 12452   001AFE  EF94  F00D         	goto	l6612
 12453   001B02                     u7670:
 12454   001B02  2821               	incf	___flmul@aexp^0,w,c
 12455   001B04  A4D8               	btfss	status,2,c
 12456   001B06  EF87  F00D         	goto	u7681
 12457   001B0A  EF89  F00D         	goto	u7680
 12458   001B0E                     u7681:
 12459   001B0E  EF91  F00D         	goto	l6610
 12460   001B12                     u7680:
 12461   001B12  0E00               	movlw	0
 12462   001B14  6E18               	movwf	___flmul@a^0,c
 12463   001B16  0E00               	movlw	0
 12464   001B18  6E19               	movwf	(___flmul@a+1)^0,c
 12465   001B1A  0E00               	movlw	0
 12466   001B1C  6E1A               	movwf	(___flmul@a+2)^0,c
 12467   001B1E  0E00               	movlw	0
 12468   001B20  6E1B               	movwf	(___flmul@a+3)^0,c
 12469   001B22                     l6610:
 12470   001B22  8E1A               	bsf	(___flmul@a+2)^0,7,c
 12471   001B24  EF9C  F00D         	goto	l1320
 12472   001B28                     l6612:
 12473   001B28  0E00               	movlw	0
 12474   001B2A  6E18               	movwf	___flmul@a^0,c
 12475   001B2C  0E00               	movlw	0
 12476   001B2E  6E19               	movwf	(___flmul@a+1)^0,c
 12477   001B30  0E00               	movlw	0
 12478   001B32  6E1A               	movwf	(___flmul@a+2)^0,c
 12479   001B34  0E00               	movlw	0
 12480   001B36  6E1B               	movwf	(___flmul@a+3)^0,c
 12481   001B38                     l1320:
 12482   001B38  5021               	movf	___flmul@aexp^0,w,c
 12483   001B3A  B4D8               	btfsc	status,2,c
 12484   001B3C  EFA2  F00D         	goto	u7691
 12485   001B40  EFA4  F00D         	goto	u7690
 12486   001B44                     u7691:
 12487   001B44  EFAC  F00D         	goto	l6616
 12488   001B48                     u7690:
 12489   001B48  5026               	movf	___flmul@bexp^0,w,c
 12490   001B4A  A4D8               	btfss	status,2,c
 12491   001B4C  EFAA  F00D         	goto	u7701
 12492   001B50  EFAC  F00D         	goto	u7700
 12493   001B54                     u7701:
 12494   001B54  EFB6  F00D         	goto	l6620
 12495   001B58                     u7700:
 12496   001B58                     l6616:
 12497   001B58  0E00               	movlw	0
 12498   001B5A  6E14               	movwf	?___flmul^0,c
 12499   001B5C  0E00               	movlw	0
 12500   001B5E  6E15               	movwf	(?___flmul+1)^0,c
 12501   001B60  0E00               	movlw	0
 12502   001B62  6E16               	movwf	(?___flmul+2)^0,c
 12503   001B64  0E00               	movlw	0
 12504   001B66  6E17               	movwf	(?___flmul+3)^0,c
 12505   001B68  EF4E  F00F         	goto	l1324
 12506   001B6C                     l6620:
 12507   001B6C  501A               	movf	(___flmul@a+2)^0,w,c
 12508   001B6E  0214               	mulwf	___flmul@b^0,c
 12509   001B70  CFF3 F02B          	movff	prodl,___flmul@temp
 12510   001B74  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12511   001B78  502B               	movf	___flmul@temp^0,w,c
 12512   001B7A  6E22               	movwf	___flmul@grs^0,c
 12513   001B7C  6A23               	clrf	(___flmul@grs+1)^0,c
 12514   001B7E  6A24               	clrf	(___flmul@grs+2)^0,c
 12515   001B80  6A25               	clrf	(___flmul@grs+3)^0,c
 12516   001B82  502C               	movf	(___flmul@temp+1)^0,w,c
 12517   001B84  6E27               	movwf	___flmul@prod^0,c
 12518   001B86  6A28               	clrf	(___flmul@prod+1)^0,c
 12519   001B88  6A29               	clrf	(___flmul@prod+2)^0,c
 12520   001B8A  6A2A               	clrf	(___flmul@prod+3)^0,c
 12521   001B8C  5019               	movf	(___flmul@a+1)^0,w,c
 12522   001B8E  0215               	mulwf	(___flmul@b+1)^0,c
 12523   001B90  CFF3 F02B          	movff	prodl,___flmul@temp
 12524   001B94  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12525   001B98  502B               	movf	___flmul@temp^0,w,c
 12526   001B9A  2622               	addwf	___flmul@grs^0,f,c
 12527   001B9C  0E00               	movlw	0
 12528   001B9E  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12529   001BA0  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12530   001BA2  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12531   001BA4  502C               	movf	(___flmul@temp+1)^0,w,c
 12532   001BA6  2627               	addwf	___flmul@prod^0,f,c
 12533   001BA8  0E00               	movlw	0
 12534   001BAA  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12535   001BAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12536   001BAE  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12537   001BB0  5018               	movf	___flmul@a^0,w,c
 12538   001BB2  0216               	mulwf	(___flmul@b+2)^0,c
 12539   001BB4  CFF3 F02B          	movff	prodl,___flmul@temp
 12540   001BB8  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12541   001BBC  502B               	movf	___flmul@temp^0,w,c
 12542   001BBE  2622               	addwf	___flmul@grs^0,f,c
 12543   001BC0  0E00               	movlw	0
 12544   001BC2  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12545   001BC4  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12546   001BC6  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12547   001BC8  502C               	movf	(___flmul@temp+1)^0,w,c
 12548   001BCA  2627               	addwf	___flmul@prod^0,f,c
 12549   001BCC  0E00               	movlw	0
 12550   001BCE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12551   001BD0  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12552   001BD2  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12553   001BD4  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 12554   001BD8  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 12555   001BDC  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 12556   001BE0  6A22               	clrf	___flmul@grs^0,c
 12557   001BE2  5018               	movf	___flmul@a^0,w,c
 12558   001BE4  0215               	mulwf	(___flmul@b+1)^0,c
 12559   001BE6  CFF3 F02B          	movff	prodl,___flmul@temp
 12560   001BEA  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12561   001BEE  502B               	movf	___flmul@temp^0,w,c
 12562   001BF0  2622               	addwf	___flmul@grs^0,f,c
 12563   001BF2  502C               	movf	(___flmul@temp+1)^0,w,c
 12564   001BF4  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12565   001BF6  0E00               	movlw	0
 12566   001BF8  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12567   001BFA  0E00               	movlw	0
 12568   001BFC  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12569   001BFE  5019               	movf	(___flmul@a+1)^0,w,c
 12570   001C00  0214               	mulwf	___flmul@b^0,c
 12571   001C02  CFF3 F02B          	movff	prodl,___flmul@temp
 12572   001C06  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12573   001C0A  502B               	movf	___flmul@temp^0,w,c
 12574   001C0C  2622               	addwf	___flmul@grs^0,f,c
 12575   001C0E  502C               	movf	(___flmul@temp+1)^0,w,c
 12576   001C10  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12577   001C12  0E00               	movlw	0
 12578   001C14  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12579   001C16  0E00               	movlw	0
 12580   001C18  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12581   001C1A  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 12582   001C1E  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 12583   001C22  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 12584   001C26  6A22               	clrf	___flmul@grs^0,c
 12585   001C28  5018               	movf	___flmul@a^0,w,c
 12586   001C2A  0214               	mulwf	___flmul@b^0,c
 12587   001C2C  CFF3 F02B          	movff	prodl,___flmul@temp
 12588   001C30  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12589   001C34  502B               	movf	___flmul@temp^0,w,c
 12590   001C36  2622               	addwf	___flmul@grs^0,f,c
 12591   001C38  502C               	movf	(___flmul@temp+1)^0,w,c
 12592   001C3A  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12593   001C3C  0E00               	movlw	0
 12594   001C3E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12595   001C40  0E00               	movlw	0
 12596   001C42  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12597   001C44  501A               	movf	(___flmul@a+2)^0,w,c
 12598   001C46  0215               	mulwf	(___flmul@b+1)^0,c
 12599   001C48  CFF3 F02B          	movff	prodl,___flmul@temp
 12600   001C4C  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12601   001C50  502B               	movf	___flmul@temp^0,w,c
 12602   001C52  2627               	addwf	___flmul@prod^0,f,c
 12603   001C54  502C               	movf	(___flmul@temp+1)^0,w,c
 12604   001C56  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12605   001C58  0E00               	movlw	0
 12606   001C5A  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12607   001C5C  0E00               	movlw	0
 12608   001C5E  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12609   001C60  5019               	movf	(___flmul@a+1)^0,w,c
 12610   001C62  0216               	mulwf	(___flmul@b+2)^0,c
 12611   001C64  CFF3 F02B          	movff	prodl,___flmul@temp
 12612   001C68  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12613   001C6C  502B               	movf	___flmul@temp^0,w,c
 12614   001C6E  2627               	addwf	___flmul@prod^0,f,c
 12615   001C70  502C               	movf	(___flmul@temp+1)^0,w,c
 12616   001C72  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12617   001C74  0E00               	movlw	0
 12618   001C76  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12619   001C78  0E00               	movlw	0
 12620   001C7A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12621   001C7C  501A               	movf	(___flmul@a+2)^0,w,c
 12622   001C7E  0216               	mulwf	(___flmul@b+2)^0,c
 12623   001C80  CFF3 F02B          	movff	prodl,___flmul@temp
 12624   001C84  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12625   001C88  502B               	movf	___flmul@temp^0,w,c
 12626   001C8A  6E1C               	movwf	??___flmul^0,c
 12627   001C8C  502C               	movf	(___flmul@temp+1)^0,w,c
 12628   001C8E  6E1D               	movwf	(??___flmul+1)^0,c
 12629   001C90  6A1E               	clrf	(??___flmul+2)^0,c
 12630   001C92  6A1F               	clrf	(??___flmul+3)^0,c
 12631   001C94  C01E  F01F         	movff	??___flmul+2,??___flmul+3
 12632   001C98  C01D  F01E         	movff	??___flmul+1,??___flmul+2
 12633   001C9C  C01C  F01D         	movff	??___flmul,??___flmul+1
 12634   001CA0  6A1C               	clrf	??___flmul^0,c
 12635   001CA2  501C               	movf	??___flmul^0,w,c
 12636   001CA4  2627               	addwf	___flmul@prod^0,f,c
 12637   001CA6  501D               	movf	(??___flmul+1)^0,w,c
 12638   001CA8  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12639   001CAA  501E               	movf	(??___flmul+2)^0,w,c
 12640   001CAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12641   001CAE  501F               	movf	(??___flmul+3)^0,w,c
 12642   001CB0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12643   001CB2  C022  F01C         	movff	___flmul@grs,??___flmul
 12644   001CB6  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
 12645   001CBA  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
 12646   001CBE  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
 12647   001CC2  0E19               	movlw	25
 12648   001CC4  EF69  F00E         	goto	u7710
 12649   001CC8                     u7715:
 12650   001CC8  90D8               	bcf	status,0,c
 12651   001CCA  321F               	rrcf	(??___flmul+3)^0,f,c
 12652   001CCC  321E               	rrcf	(??___flmul+2)^0,f,c
 12653   001CCE  321D               	rrcf	(??___flmul+1)^0,f,c
 12654   001CD0  321C               	rrcf	??___flmul^0,f,c
 12655   001CD2                     u7710:
 12656   001CD2  2EE8               	decfsz	wreg,f,c
 12657   001CD4  EF64  F00E         	goto	u7715
 12658   001CD8  501C               	movf	??___flmul^0,w,c
 12659   001CDA  2627               	addwf	___flmul@prod^0,f,c
 12660   001CDC  501D               	movf	(??___flmul+1)^0,w,c
 12661   001CDE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12662   001CE0  501E               	movf	(??___flmul+2)^0,w,c
 12663   001CE2  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12664   001CE4  501F               	movf	(??___flmul+3)^0,w,c
 12665   001CE6  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12666   001CE8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 12667   001CEC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 12668   001CF0  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 12669   001CF4  6A22               	clrf	___flmul@grs^0,c
 12670   001CF6  5021               	movf	___flmul@aexp^0,w,c
 12671   001CF8  C026  F01C         	movff	___flmul@bexp,??___flmul
 12672   001CFC  6A1D               	clrf	(??___flmul+1)^0,c
 12673   001CFE  261C               	addwf	??___flmul^0,f,c
 12674   001D00  0E00               	movlw	0
 12675   001D02  221D               	addwfc	(??___flmul+1)^0,f,c
 12676   001D04  0E82               	movlw	130
 12677   001D06  241C               	addwf	??___flmul^0,w,c
 12678   001D08  6E2B               	movwf	___flmul@temp^0,c
 12679   001D0A  0EFF               	movlw	255
 12680   001D0C  201D               	addwfc	(??___flmul+1)^0,w,c
 12681   001D0E  6E2C               	movwf	(___flmul@temp+1)^0,c
 12682   001D10  EF9F  F00E         	goto	l6668
 12683   001D14                     l6662:
 12684   001D14  90D8               	bcf	status,0,c
 12685   001D16  3627               	rlcf	___flmul@prod^0,f,c
 12686   001D18  3628               	rlcf	(___flmul@prod+1)^0,f,c
 12687   001D1A  3629               	rlcf	(___flmul@prod+2)^0,f,c
 12688   001D1C  362A               	rlcf	(___flmul@prod+3)^0,f,c
 12689   001D1E  AE25               	btfss	(___flmul@grs+3)^0,7,c
 12690   001D20  EF94  F00E         	goto	u7721
 12691   001D24  EF96  F00E         	goto	u7720
 12692   001D28                     u7721:
 12693   001D28  EF97  F00E         	goto	l1327
 12694   001D2C                     u7720:
 12695   001D2C  8027               	bsf	___flmul@prod^0,0,c
 12696   001D2E                     l1327:
 12697   001D2E  90D8               	bcf	status,0,c
 12698   001D30  3622               	rlcf	___flmul@grs^0,f,c
 12699   001D32  3623               	rlcf	(___flmul@grs+1)^0,f,c
 12700   001D34  3624               	rlcf	(___flmul@grs+2)^0,f,c
 12701   001D36  3625               	rlcf	(___flmul@grs+3)^0,f,c
 12702   001D38  062B               	decf	___flmul@temp^0,f,c
 12703   001D3A  A0D8               	btfss	status,0,c
 12704   001D3C  062C               	decf	(___flmul@temp+1)^0,f,c
 12705   001D3E                     l6668:
 12706   001D3E  AE29               	btfss	(___flmul@prod+2)^0,7,c
 12707   001D40  EFA4  F00E         	goto	u7731
 12708   001D44  EFA6  F00E         	goto	u7730
 12709   001D48                     u7731:
 12710   001D48  EF8A  F00E         	goto	l6662
 12711   001D4C                     u7730:
 12712   001D4C  0E00               	movlw	0
 12713   001D4E  6E21               	movwf	___flmul@aexp^0,c
 12714   001D50  AE25               	btfss	(___flmul@grs+3)^0,7,c
 12715   001D52  EFAD  F00E         	goto	u7741
 12716   001D56  EFAF  F00E         	goto	u7740
 12717   001D5A                     u7741:
 12718   001D5A  EFD3  F00E         	goto	l1329
 12719   001D5E                     u7740:
 12720   001D5E  0EFF               	movlw	255
 12721   001D60  1422               	andwf	___flmul@grs^0,w,c
 12722   001D62  6E1C               	movwf	??___flmul^0,c
 12723   001D64  0EFF               	movlw	255
 12724   001D66  1423               	andwf	(___flmul@grs+1)^0,w,c
 12725   001D68  6E1D               	movwf	(??___flmul+1)^0,c
 12726   001D6A  0EFF               	movlw	255
 12727   001D6C  1424               	andwf	(___flmul@grs+2)^0,w,c
 12728   001D6E  6E1E               	movwf	(??___flmul+2)^0,c
 12729   001D70  0E7F               	movlw	127
 12730   001D72  1425               	andwf	(___flmul@grs+3)^0,w,c
 12731   001D74  6E1F               	movwf	(??___flmul+3)^0,c
 12732   001D76  501C               	movf	??___flmul^0,w,c
 12733   001D78  101D               	iorwf	(??___flmul+1)^0,w,c
 12734   001D7A  101E               	iorwf	(??___flmul+2)^0,w,c
 12735   001D7C  101F               	iorwf	(??___flmul+3)^0,w,c
 12736   001D7E  B4D8               	btfsc	status,2,c
 12737   001D80  EFC4  F00E         	goto	u7751
 12738   001D84  EFC6  F00E         	goto	u7750
 12739   001D88                     u7751:
 12740   001D88  EFCA  F00E         	goto	l1330
 12741   001D8C                     u7750:
 12742   001D8C                     l6676:
 12743   001D8C  0E01               	movlw	1
 12744   001D8E  6E21               	movwf	___flmul@aexp^0,c
 12745   001D90  EFD3  F00E         	goto	l1329
 12746   001D94                     l1330:
 12747   001D94  A027               	btfss	___flmul@prod^0,0,c
 12748   001D96  EFCF  F00E         	goto	u7761
 12749   001D9A  EFD1  F00E         	goto	u7760
 12750   001D9E                     u7761:
 12751   001D9E  EFD3  F00E         	goto	l1329
 12752   001DA2                     u7760:
 12753   001DA2  EFC6  F00E         	goto	l6676
 12754   001DA6                     l1329:
 12755   001DA6  5021               	movf	___flmul@aexp^0,w,c
 12756   001DA8  B4D8               	btfsc	status,2,c
 12757   001DAA  EFD9  F00E         	goto	u7771
 12758   001DAE  EFDB  F00E         	goto	u7770
 12759   001DB2                     u7771:
 12760   001DB2  EFFF  F00E         	goto	l6688
 12761   001DB6                     u7770:
 12762   001DB6  0E01               	movlw	1
 12763   001DB8  2627               	addwf	___flmul@prod^0,f,c
 12764   001DBA  0E00               	movlw	0
 12765   001DBC  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12766   001DBE  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12767   001DC0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12768   001DC2  A02A               	btfss	(___flmul@prod+3)^0,0,c
 12769   001DC4  EFE6  F00E         	goto	u7781
 12770   001DC8  EFE8  F00E         	goto	u7780
 12771   001DCC                     u7781:
 12772   001DCC  EFFF  F00E         	goto	l6688
 12773   001DD0                     u7780:
 12774   001DD0  C027  F01C         	movff	___flmul@prod,??___flmul
 12775   001DD4  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
 12776   001DD8  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
 12777   001DDC  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
 12778   001DE0  341F               	rlcf	(??___flmul+3)^0,w,c
 12779   001DE2  321F               	rrcf	(??___flmul+3)^0,f,c
 12780   001DE4  321E               	rrcf	(??___flmul+2)^0,f,c
 12781   001DE6  321D               	rrcf	(??___flmul+1)^0,f,c
 12782   001DE8  321C               	rrcf	??___flmul^0,f,c
 12783   001DEA  C01C  F027         	movff	??___flmul,___flmul@prod
 12784   001DEE  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
 12785   001DF2  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
 12786   001DF6  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
 12787   001DFA  4A2B               	infsnz	___flmul@temp^0,f,c
 12788   001DFC  2A2C               	incf	(___flmul@temp+1)^0,f,c
 12789   001DFE                     l6688:
 12790   001DFE  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 12791   001E00  EF0A  F00F         	goto	u7791
 12792   001E04  502C               	movf	(___flmul@temp+1)^0,w,c
 12793   001E06  E108               	bnz	u7790
 12794   001E08  282B               	incf	___flmul@temp^0,w,c
 12795   001E0A  A0D8               	btfss	status,0,c
 12796   001E0C  EF0A  F00F         	goto	u7791
 12797   001E10  EF0C  F00F         	goto	u7790
 12798   001E14                     u7791:
 12799   001E14  EF16  F00F         	goto	l6692
 12800   001E18                     u7790:
 12801   001E18  0E00               	movlw	0
 12802   001E1A  6E27               	movwf	___flmul@prod^0,c
 12803   001E1C  0E00               	movlw	0
 12804   001E1E  6E28               	movwf	(___flmul@prod+1)^0,c
 12805   001E20  0E80               	movlw	128
 12806   001E22  6E29               	movwf	(___flmul@prod+2)^0,c
 12807   001E24  0E7F               	movlw	127
 12808   001E26  6E2A               	movwf	(___flmul@prod+3)^0,c
 12809   001E28  EF44  F00F         	goto	l6704
 12810   001E2C                     l6692:
 12811   001E2C  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 12812   001E2E  EF23  F00F         	goto	u7800
 12813   001E32  502C               	movf	(___flmul@temp+1)^0,w,c
 12814   001E34  E106               	bnz	u7801
 12815   001E36  042B               	decf	___flmul@temp^0,w,c
 12816   001E38  B0D8               	btfsc	status,0,c
 12817   001E3A  EF21  F00F         	goto	u7801
 12818   001E3E  EF23  F00F         	goto	u7800
 12819   001E42                     u7801:
 12820   001E42  EF2F  F00F         	goto	l1337
 12821   001E46                     u7800:
 12822   001E46  0E00               	movlw	0
 12823   001E48  6E27               	movwf	___flmul@prod^0,c
 12824   001E4A  0E00               	movlw	0
 12825   001E4C  6E28               	movwf	(___flmul@prod+1)^0,c
 12826   001E4E  0E00               	movlw	0
 12827   001E50  6E29               	movwf	(___flmul@prod+2)^0,c
 12828   001E52  0E00               	movlw	0
 12829   001E54  6E2A               	movwf	(___flmul@prod+3)^0,c
 12830   001E56  0E00               	movlw	0
 12831   001E58  6E20               	movwf	___flmul@sign^0,c
 12832   001E5A  EF44  F00F         	goto	l6704
 12833   001E5E                     l1337:
 12834   001E5E  C02B  F026         	movff	___flmul@temp,___flmul@bexp
 12835   001E62  0EFF               	movlw	255
 12836   001E64  1627               	andwf	___flmul@prod^0,f,c
 12837   001E66  0EFF               	movlw	255
 12838   001E68  1628               	andwf	(___flmul@prod+1)^0,f,c
 12839   001E6A  0E7F               	movlw	127
 12840   001E6C  1629               	andwf	(___flmul@prod+2)^0,f,c
 12841   001E6E  0E00               	movlw	0
 12842   001E70  162A               	andwf	(___flmul@prod+3)^0,f,c
 12843   001E72  A026               	btfss	___flmul@bexp^0,0,c
 12844   001E74  EF3E  F00F         	goto	u7811
 12845   001E78  EF40  F00F         	goto	u7810
 12846   001E7C                     u7811:
 12847   001E7C  EF41  F00F         	goto	l6702
 12848   001E80                     u7810:
 12849   001E80  8E29               	bsf	(___flmul@prod+2)^0,7,c
 12850   001E82                     l6702:
 12851   001E82  90D8               	bcf	status,0,c
 12852   001E84  3026               	rrcf	___flmul@bexp^0,w,c
 12853   001E86  6E2A               	movwf	(___flmul@prod+3)^0,c
 12854   001E88                     l6704:
 12855   001E88  5020               	movf	___flmul@sign^0,w,c
 12856   001E8A  122A               	iorwf	(___flmul@prod+3)^0,f,c
 12857   001E8C  C027  F014         	movff	___flmul@prod,?___flmul
 12858   001E90  C028  F015         	movff	___flmul@prod+1,?___flmul+1
 12859   001E94  C029  F016         	movff	___flmul@prod+2,?___flmul+2
 12860   001E98  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
 12861   001E9C                     l1324:
 12862   001E9C  0012               	return		;funcret
 12863   001E9E                     __end_of___flmul:
 12864                           	callstack 0
 12865                           
 12866 ;; *************** function ___flge *****************
 12867 ;; Defined at:
 12868 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flge.c"
 12869 ;; Parameters:    Size  Location     Type
 12870 ;;  ff1             4   44[COMRAM] unsigned char 
 12871 ;;  ff2             4   48[COMRAM] unsigned char 
 12872 ;; Auto vars:     Size  Location     Type
 12873 ;;		None
 12874 ;; Return value:  Size  Location     Type
 12875 ;;		None               void
 12876 ;; Registers used:
 12877 ;;		wreg, status,2, status,0
 12878 ;; Tracked objects:
 12879 ;;		On entry : 0/0
 12880 ;;		On exit  : 0/0
 12881 ;;		Unchanged: 0/0
 12882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12883 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12885 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12886 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12887 ;;Total ram usage:       12 bytes
 12888 ;; Hardware stack levels used: 1
 12889 ;; Hardware stack levels required when called: 1
 12890 ;; This function calls:
 12891 ;;		Nothing
 12892 ;; This function is called by:
 12893 ;;		_efgtoa
 12894 ;; This function uses a non-reentrant model
 12895 ;;
 12896                           
 12897                           	psect	text47
 12898   0041D8                     __ptext47:
 12899                           	callstack 0
 12900   0041D8                     ___flge:
 12901                           	callstack 24
 12902   0041D8  0E00               	movlw	0
 12903   0041DA  142D               	andwf	___flge@ff1^0,w,c
 12904   0041DC  6E35               	movwf	??___flge^0,c
 12905   0041DE  0E00               	movlw	0
 12906   0041E0  142E               	andwf	(___flge@ff1+1)^0,w,c
 12907   0041E2  6E36               	movwf	(??___flge+1)^0,c
 12908   0041E4  0E80               	movlw	128
 12909   0041E6  142F               	andwf	(___flge@ff1+2)^0,w,c
 12910   0041E8  6E37               	movwf	(??___flge+2)^0,c
 12911   0041EA  0E7F               	movlw	127
 12912   0041EC  1430               	andwf	(___flge@ff1+3)^0,w,c
 12913   0041EE  6E38               	movwf	(??___flge+3)^0,c
 12914   0041F0  5035               	movf	??___flge^0,w,c
 12915   0041F2  1036               	iorwf	(??___flge+1)^0,w,c
 12916   0041F4  1037               	iorwf	(??___flge+2)^0,w,c
 12917   0041F6  1038               	iorwf	(??___flge+3)^0,w,c
 12918   0041F8  A4D8               	btfss	status,2,c
 12919   0041FA  EF01  F021         	goto	u7971
 12920   0041FE  EF03  F021         	goto	u7970
 12921   004202                     u7971:
 12922   004202  EF0B  F021         	goto	l6816
 12923   004206                     u7970:
 12924   004206  0E00               	movlw	0
 12925   004208  6E2D               	movwf	___flge@ff1^0,c
 12926   00420A  0E00               	movlw	0
 12927   00420C  6E2E               	movwf	(___flge@ff1+1)^0,c
 12928   00420E  0E00               	movlw	0
 12929   004210  6E2F               	movwf	(___flge@ff1+2)^0,c
 12930   004212  0E00               	movlw	0
 12931   004214  6E30               	movwf	(___flge@ff1+3)^0,c
 12932   004216                     l6816:
 12933   004216  0E00               	movlw	0
 12934   004218  1431               	andwf	___flge@ff2^0,w,c
 12935   00421A  6E35               	movwf	??___flge^0,c
 12936   00421C  0E00               	movlw	0
 12937   00421E  1432               	andwf	(___flge@ff2+1)^0,w,c
 12938   004220  6E36               	movwf	(??___flge+1)^0,c
 12939   004222  0E80               	movlw	128
 12940   004224  1433               	andwf	(___flge@ff2+2)^0,w,c
 12941   004226  6E37               	movwf	(??___flge+2)^0,c
 12942   004228  0E7F               	movlw	127
 12943   00422A  1434               	andwf	(___flge@ff2+3)^0,w,c
 12944   00422C  6E38               	movwf	(??___flge+3)^0,c
 12945   00422E  5035               	movf	??___flge^0,w,c
 12946   004230  1036               	iorwf	(??___flge+1)^0,w,c
 12947   004232  1037               	iorwf	(??___flge+2)^0,w,c
 12948   004234  1038               	iorwf	(??___flge+3)^0,w,c
 12949   004236  A4D8               	btfss	status,2,c
 12950   004238  EF20  F021         	goto	u7981
 12951   00423C  EF22  F021         	goto	u7980
 12952   004240                     u7981:
 12953   004240  EF2A  F021         	goto	l6820
 12954   004244                     u7980:
 12955   004244  0E00               	movlw	0
 12956   004246  6E31               	movwf	___flge@ff2^0,c
 12957   004248  0E00               	movlw	0
 12958   00424A  6E32               	movwf	(___flge@ff2+1)^0,c
 12959   00424C  0E00               	movlw	0
 12960   00424E  6E33               	movwf	(___flge@ff2+2)^0,c
 12961   004250  0E00               	movlw	0
 12962   004252  6E34               	movwf	(___flge@ff2+3)^0,c
 12963   004254                     l6820:
 12964   004254  AE30               	btfss	(___flge@ff1+3)^0,7,c
 12965   004256  EF2F  F021         	goto	u7991
 12966   00425A  EF31  F021         	goto	u7990
 12967   00425E                     u7991:
 12968   00425E  EF3A  F021         	goto	l6824
 12969   004262                     u7990:
 12970   004262  6C2D               	negf	___flge@ff1^0,c
 12971   004264  1E2E               	comf	(___flge@ff1+1)^0,f,c
 12972   004266  B0D8               	btfsc	status,0,c
 12973   004268  2A2E               	incf	(___flge@ff1+1)^0,f,c
 12974   00426A  1E2F               	comf	(___flge@ff1+2)^0,f,c
 12975   00426C  B0D8               	btfsc	status,0,c
 12976   00426E  2A2F               	incf	(___flge@ff1+2)^0,f,c
 12977   004270  0E80               	movlw	128
 12978   004272  5630               	subfwb	(___flge@ff1+3)^0,f,c
 12979   004274                     l6824:
 12980   004274  AE34               	btfss	(___flge@ff2+3)^0,7,c
 12981   004276  EF3F  F021         	goto	u8001
 12982   00427A  EF41  F021         	goto	u8000
 12983   00427E                     u8001:
 12984   00427E  EF4A  F021         	goto	l971
 12985   004282                     u8000:
 12986   004282  6C31               	negf	___flge@ff2^0,c
 12987   004284  1E32               	comf	(___flge@ff2+1)^0,f,c
 12988   004286  B0D8               	btfsc	status,0,c
 12989   004288  2A32               	incf	(___flge@ff2+1)^0,f,c
 12990   00428A  1E33               	comf	(___flge@ff2+2)^0,f,c
 12991   00428C  B0D8               	btfsc	status,0,c
 12992   00428E  2A33               	incf	(___flge@ff2+2)^0,f,c
 12993   004290  0E80               	movlw	128
 12994   004292  5634               	subfwb	(___flge@ff2+3)^0,f,c
 12995   004294                     l971:
 12996   004294  0E00               	movlw	0
 12997   004296  1A2D               	xorwf	___flge@ff1^0,f,c
 12998   004298  0E00               	movlw	0
 12999   00429A  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
 13000   00429C  0E00               	movlw	0
 13001   00429E  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
 13002   0042A0  0E80               	movlw	128
 13003   0042A2  1A30               	xorwf	(___flge@ff1+3)^0,f,c
 13004   0042A4  0E00               	movlw	0
 13005   0042A6  1A31               	xorwf	___flge@ff2^0,f,c
 13006   0042A8  0E00               	movlw	0
 13007   0042AA  1A32               	xorwf	(___flge@ff2+1)^0,f,c
 13008   0042AC  0E00               	movlw	0
 13009   0042AE  1A33               	xorwf	(___flge@ff2+2)^0,f,c
 13010   0042B0  0E80               	movlw	128
 13011   0042B2  1A34               	xorwf	(___flge@ff2+3)^0,f,c
 13012   0042B4  5031               	movf	___flge@ff2^0,w,c
 13013   0042B6  5C2D               	subwf	___flge@ff1^0,w,c
 13014   0042B8  5032               	movf	(___flge@ff2+1)^0,w,c
 13015   0042BA  582E               	subwfb	(___flge@ff1+1)^0,w,c
 13016   0042BC  5033               	movf	(___flge@ff2+2)^0,w,c
 13017   0042BE  582F               	subwfb	(___flge@ff1+2)^0,w,c
 13018   0042C0  5034               	movf	(___flge@ff2+3)^0,w,c
 13019   0042C2  5830               	subwfb	(___flge@ff1+3)^0,w,c
 13020   0042C4  B0D8               	btfsc	status,0,c
 13021   0042C6  EF67  F021         	goto	u8011
 13022   0042CA  EF69  F021         	goto	u8010
 13023   0042CE                     u8011:
 13024   0042CE  EF6C  F021         	goto	l6830
 13025   0042D2                     u8010:
 13026   0042D2  90D8               	bcf	status,0,c
 13027   0042D4  EF6D  F021         	goto	l976
 13028   0042D8                     l6830:
 13029   0042D8  80D8               	bsf	status,0,c
 13030   0042DA                     l976:
 13031   0042DA  0012               	return		;funcret
 13032   0042DC                     __end_of___flge:
 13033                           	callstack 0
 13034                           
 13035 ;; *************** function ___fleq *****************
 13036 ;; Defined at:
 13037 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fleq.c"
 13038 ;; Parameters:    Size  Location     Type
 13039 ;;  ff1             4    5[COMRAM] unsigned char 
 13040 ;;  ff2             4    9[COMRAM] unsigned char 
 13041 ;; Auto vars:     Size  Location     Type
 13042 ;;		None
 13043 ;; Return value:  Size  Location     Type
 13044 ;;		None               void
 13045 ;; Registers used:
 13046 ;;		wreg, status,2, status,0
 13047 ;; Tracked objects:
 13048 ;;		On entry : 0/0
 13049 ;;		On exit  : 0/0
 13050 ;;		Unchanged: 0/0
 13051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13052 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13054 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13055 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13056 ;;Total ram usage:       12 bytes
 13057 ;; Hardware stack levels used: 1
 13058 ;; Hardware stack levels required when called: 1
 13059 ;; This function calls:
 13060 ;;		Nothing
 13061 ;; This function is called by:
 13062 ;;		_efgtoa
 13063 ;; This function uses a non-reentrant model
 13064 ;;
 13065                           
 13066                           	psect	text48
 13067   004942                     __ptext48:
 13068                           	callstack 0
 13069   004942                     ___fleq:
 13070                           	callstack 24
 13071   004942  0E00               	movlw	0
 13072   004944  1406               	andwf	___fleq@ff1^0,w,c
 13073   004946  6E0E               	movwf	??___fleq^0,c
 13074   004948  0E00               	movlw	0
 13075   00494A  1407               	andwf	(___fleq@ff1+1)^0,w,c
 13076   00494C  6E0F               	movwf	(??___fleq+1)^0,c
 13077   00494E  0E80               	movlw	128
 13078   004950  1408               	andwf	(___fleq@ff1+2)^0,w,c
 13079   004952  6E10               	movwf	(??___fleq+2)^0,c
 13080   004954  0E7F               	movlw	127
 13081   004956  1409               	andwf	(___fleq@ff1+3)^0,w,c
 13082   004958  6E11               	movwf	(??___fleq+3)^0,c
 13083   00495A  500E               	movf	??___fleq^0,w,c
 13084   00495C  100F               	iorwf	(??___fleq+1)^0,w,c
 13085   00495E  1010               	iorwf	(??___fleq+2)^0,w,c
 13086   004960  1011               	iorwf	(??___fleq+3)^0,w,c
 13087   004962  A4D8               	btfss	status,2,c
 13088   004964  EFB6  F024         	goto	u7941
 13089   004968  EFB8  F024         	goto	u7940
 13090   00496C                     u7941:
 13091   00496C  EFC0  F024         	goto	l6800
 13092   004970                     u7940:
 13093   004970  0E00               	movlw	0
 13094   004972  6E06               	movwf	___fleq@ff1^0,c
 13095   004974  0E00               	movlw	0
 13096   004976  6E07               	movwf	(___fleq@ff1+1)^0,c
 13097   004978  0E00               	movlw	0
 13098   00497A  6E08               	movwf	(___fleq@ff1+2)^0,c
 13099   00497C  0E00               	movlw	0
 13100   00497E  6E09               	movwf	(___fleq@ff1+3)^0,c
 13101   004980                     l6800:
 13102   004980  0E00               	movlw	0
 13103   004982  140A               	andwf	___fleq@ff2^0,w,c
 13104   004984  6E0E               	movwf	??___fleq^0,c
 13105   004986  0E00               	movlw	0
 13106   004988  140B               	andwf	(___fleq@ff2+1)^0,w,c
 13107   00498A  6E0F               	movwf	(??___fleq+1)^0,c
 13108   00498C  0E80               	movlw	128
 13109   00498E  140C               	andwf	(___fleq@ff2+2)^0,w,c
 13110   004990  6E10               	movwf	(??___fleq+2)^0,c
 13111   004992  0E7F               	movlw	127
 13112   004994  140D               	andwf	(___fleq@ff2+3)^0,w,c
 13113   004996  6E11               	movwf	(??___fleq+3)^0,c
 13114   004998  500E               	movf	??___fleq^0,w,c
 13115   00499A  100F               	iorwf	(??___fleq+1)^0,w,c
 13116   00499C  1010               	iorwf	(??___fleq+2)^0,w,c
 13117   00499E  1011               	iorwf	(??___fleq+3)^0,w,c
 13118   0049A0  A4D8               	btfss	status,2,c
 13119   0049A2  EFD5  F024         	goto	u7951
 13120   0049A6  EFD7  F024         	goto	u7950
 13121   0049AA                     u7951:
 13122   0049AA  EFDF  F024         	goto	l6804
 13123   0049AE                     u7950:
 13124   0049AE  0E00               	movlw	0
 13125   0049B0  6E0A               	movwf	___fleq@ff2^0,c
 13126   0049B2  0E00               	movlw	0
 13127   0049B4  6E0B               	movwf	(___fleq@ff2+1)^0,c
 13128   0049B6  0E00               	movlw	0
 13129   0049B8  6E0C               	movwf	(___fleq@ff2+2)^0,c
 13130   0049BA  0E00               	movlw	0
 13131   0049BC  6E0D               	movwf	(___fleq@ff2+3)^0,c
 13132   0049BE                     l6804:
 13133   0049BE  500A               	movf	___fleq@ff2^0,w,c
 13134   0049C0  1806               	xorwf	___fleq@ff1^0,w,c
 13135   0049C2  E10F               	bnz	u7960
 13136   0049C4  500B               	movf	(___fleq@ff2+1)^0,w,c
 13137   0049C6  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 13138   0049C8  E10C               	bnz	u7960
 13139   0049CA  500C               	movf	(___fleq@ff2+2)^0,w,c
 13140   0049CC  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 13141   0049CE  E109               	bnz	u7960
 13142   0049D0  500D               	movf	(___fleq@ff2+3)^0,w,c
 13143   0049D2  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 13144   0049D4  B4D8               	btfsc	status,2,c
 13145   0049D6  EFEF  F024         	goto	u7961
 13146   0049DA  EFF1  F024         	goto	u7960
 13147   0049DE                     u7961:
 13148   0049DE  EFF4  F024         	goto	l6808
 13149   0049E2                     u7960:
 13150   0049E2  90D8               	bcf	status,0,c
 13151   0049E4  EFF5  F024         	goto	l965
 13152   0049E8                     l6808:
 13153   0049E8  80D8               	bsf	status,0,c
 13154   0049EA                     l965:
 13155   0049EA  0012               	return		;funcret
 13156   0049EC                     __end_of___fleq:
 13157                           	callstack 0
 13158                           
 13159 ;; *************** function ___fldiv *****************
 13160 ;; Defined at:
 13161 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcdiv.c"
 13162 ;; Parameters:    Size  Location     Type
 13163 ;;  b               4   44[COMRAM] unsigned char 
 13164 ;;  a               4   48[COMRAM] unsigned char 
 13165 ;; Auto vars:     Size  Location     Type
 13166 ;;  grs             4   63[COMRAM] unsigned long 
 13167 ;;  rem             4   56[COMRAM] unsigned long 
 13168 ;;  new_exp         2   61[COMRAM] short 
 13169 ;;  aexp            1   68[COMRAM] unsigned char 
 13170 ;;  bexp            1   67[COMRAM] unsigned char 
 13171 ;;  sign            1   60[COMRAM] unsigned char 
 13172 ;; Return value:  Size  Location     Type
 13173 ;;                  4   44[COMRAM] unsigned char 
 13174 ;; Registers used:
 13175 ;;		wreg, status,2, status,0
 13176 ;; Tracked objects:
 13177 ;;		On entry : 0/0
 13178 ;;		On exit  : 0/0
 13179 ;;		Unchanged: 0/0
 13180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13181 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13182 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13183 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13184 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13185 ;;Total ram usage:       25 bytes
 13186 ;; Hardware stack levels used: 1
 13187 ;; Hardware stack levels required when called: 1
 13188 ;; This function calls:
 13189 ;;		Nothing
 13190 ;; This function is called by:
 13191 ;;		_runDAC
 13192 ;;		_runADC
 13193 ;;		_efgtoa
 13194 ;; This function uses a non-reentrant model
 13195 ;;
 13196                           
 13197                           	psect	text49
 13198   002260                     __ptext49:
 13199                           	callstack 0
 13200   002260                     ___fldiv:
 13201                           	callstack 24
 13202   002260  5030               	movf	(___fldiv@b+3)^0,w,c
 13203   002262  0B80               	andlw	128
 13204   002264  6E3D               	movwf	___fldiv@sign^0,c
 13205   002266  5030               	movf	(___fldiv@b+3)^0,w,c
 13206   002268  2430               	addwf	(___fldiv@b+3)^0,w,c
 13207   00226A  6E44               	movwf	___fldiv@bexp^0,c
 13208   00226C  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 13209   00226E  EF3B  F011         	goto	u7401
 13210   002272  EF3D  F011         	goto	u7400
 13211   002276                     u7401:
 13212   002276  EF3E  F011         	goto	l6448
 13213   00227A                     u7400:
 13214   00227A  8044               	bsf	___fldiv@bexp^0,0,c
 13215   00227C                     l6448:
 13216   00227C  5044               	movf	___fldiv@bexp^0,w,c
 13217   00227E  B4D8               	btfsc	status,2,c
 13218   002280  EF44  F011         	goto	u7411
 13219   002284  EF46  F011         	goto	u7410
 13220   002288                     u7411:
 13221   002288  EF5B  F011         	goto	l6458
 13222   00228C                     u7410:
 13223   00228C  2844               	incf	___fldiv@bexp^0,w,c
 13224   00228E  A4D8               	btfss	status,2,c
 13225   002290  EF4C  F011         	goto	u7421
 13226   002294  EF4E  F011         	goto	u7420
 13227   002298                     u7421:
 13228   002298  EF56  F011         	goto	l6454
 13229   00229C                     u7420:
 13230   00229C  0E00               	movlw	0
 13231   00229E  6E2D               	movwf	___fldiv@b^0,c
 13232   0022A0  0E00               	movlw	0
 13233   0022A2  6E2E               	movwf	(___fldiv@b+1)^0,c
 13234   0022A4  0E00               	movlw	0
 13235   0022A6  6E2F               	movwf	(___fldiv@b+2)^0,c
 13236   0022A8  0E00               	movlw	0
 13237   0022AA  6E30               	movwf	(___fldiv@b+3)^0,c
 13238   0022AC                     l6454:
 13239   0022AC  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 13240   0022AE  0E00               	movlw	0
 13241   0022B0  6E30               	movwf	(___fldiv@b+3)^0,c
 13242   0022B2  EF63  F011         	goto	l6460
 13243   0022B6                     l6458:
 13244   0022B6  0E00               	movlw	0
 13245   0022B8  6E2D               	movwf	___fldiv@b^0,c
 13246   0022BA  0E00               	movlw	0
 13247   0022BC  6E2E               	movwf	(___fldiv@b+1)^0,c
 13248   0022BE  0E00               	movlw	0
 13249   0022C0  6E2F               	movwf	(___fldiv@b+2)^0,c
 13250   0022C2  0E00               	movlw	0
 13251   0022C4  6E30               	movwf	(___fldiv@b+3)^0,c
 13252   0022C6                     l6460:
 13253   0022C6  5034               	movf	(___fldiv@a+3)^0,w,c
 13254   0022C8  0B80               	andlw	128
 13255   0022CA  1A3D               	xorwf	___fldiv@sign^0,f,c
 13256   0022CC  5034               	movf	(___fldiv@a+3)^0,w,c
 13257   0022CE  2434               	addwf	(___fldiv@a+3)^0,w,c
 13258   0022D0  6E45               	movwf	___fldiv@aexp^0,c
 13259   0022D2  AE33               	btfss	(___fldiv@a+2)^0,7,c
 13260   0022D4  EF6E  F011         	goto	u7431
 13261   0022D8  EF70  F011         	goto	u7430
 13262   0022DC                     u7431:
 13263   0022DC  EF71  F011         	goto	l6468
 13264   0022E0                     u7430:
 13265   0022E0  8045               	bsf	___fldiv@aexp^0,0,c
 13266   0022E2                     l6468:
 13267   0022E2  5045               	movf	___fldiv@aexp^0,w,c
 13268   0022E4  B4D8               	btfsc	status,2,c
 13269   0022E6  EF77  F011         	goto	u7441
 13270   0022EA  EF79  F011         	goto	u7440
 13271   0022EE                     u7441:
 13272   0022EE  EF8E  F011         	goto	l6478
 13273   0022F2                     u7440:
 13274   0022F2  2845               	incf	___fldiv@aexp^0,w,c
 13275   0022F4  A4D8               	btfss	status,2,c
 13276   0022F6  EF7F  F011         	goto	u7451
 13277   0022FA  EF81  F011         	goto	u7450
 13278   0022FE                     u7451:
 13279   0022FE  EF89  F011         	goto	l6474
 13280   002302                     u7450:
 13281   002302  0E00               	movlw	0
 13282   002304  6E31               	movwf	___fldiv@a^0,c
 13283   002306  0E00               	movlw	0
 13284   002308  6E32               	movwf	(___fldiv@a+1)^0,c
 13285   00230A  0E00               	movlw	0
 13286   00230C  6E33               	movwf	(___fldiv@a+2)^0,c
 13287   00230E  0E00               	movlw	0
 13288   002310  6E34               	movwf	(___fldiv@a+3)^0,c
 13289   002312                     l6474:
 13290   002312  8E33               	bsf	(___fldiv@a+2)^0,7,c
 13291   002314  0E00               	movlw	0
 13292   002316  6E34               	movwf	(___fldiv@a+3)^0,c
 13293   002318  EF96  F011         	goto	l6480
 13294   00231C                     l6478:
 13295   00231C  0E00               	movlw	0
 13296   00231E  6E31               	movwf	___fldiv@a^0,c
 13297   002320  0E00               	movlw	0
 13298   002322  6E32               	movwf	(___fldiv@a+1)^0,c
 13299   002324  0E00               	movlw	0
 13300   002326  6E33               	movwf	(___fldiv@a+2)^0,c
 13301   002328  0E00               	movlw	0
 13302   00232A  6E34               	movwf	(___fldiv@a+3)^0,c
 13303   00232C                     l6480:
 13304   00232C  5031               	movf	___fldiv@a^0,w,c
 13305   00232E  1032               	iorwf	(___fldiv@a+1)^0,w,c
 13306   002330  1033               	iorwf	(___fldiv@a+2)^0,w,c
 13307   002332  1034               	iorwf	(___fldiv@a+3)^0,w,c
 13308   002334  A4D8               	btfss	status,2,c
 13309   002336  EF9F  F011         	goto	u7461
 13310   00233A  EFA1  F011         	goto	u7460
 13311   00233E                     u7461:
 13312   00233E  EFB9  F011         	goto	l6492
 13313   002342                     u7460:
 13314   002342  0E00               	movlw	0
 13315   002344  6E2D               	movwf	___fldiv@b^0,c
 13316   002346  0E00               	movlw	0
 13317   002348  6E2E               	movwf	(___fldiv@b+1)^0,c
 13318   00234A  0E00               	movlw	0
 13319   00234C  6E2F               	movwf	(___fldiv@b+2)^0,c
 13320   00234E  0E00               	movlw	0
 13321   002350  6E30               	movwf	(___fldiv@b+3)^0,c
 13322   002352  0E80               	movlw	128
 13323   002354  122F               	iorwf	(___fldiv@b+2)^0,f,c
 13324   002356  0E7F               	movlw	127
 13325   002358  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13326   00235A                     l6486:
 13327   00235A  503D               	movf	___fldiv@sign^0,w,c
 13328   00235C  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13329   00235E  C02D  F02D         	movff	___fldiv@b,?___fldiv
 13330   002362  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
 13331   002366  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
 13332   00236A  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
 13333   00236E  EFFC  F012         	goto	l1288
 13334   002372                     l6492:
 13335   002372  5044               	movf	___fldiv@bexp^0,w,c
 13336   002374  A4D8               	btfss	status,2,c
 13337   002376  EFBF  F011         	goto	u7471
 13338   00237A  EFC1  F011         	goto	u7470
 13339   00237E                     u7471:
 13340   00237E  EFCB  F011         	goto	l6500
 13341   002382                     u7470:
 13342   002382  0E00               	movlw	0
 13343   002384  6E2D               	movwf	?___fldiv^0,c
 13344   002386  0E00               	movlw	0
 13345   002388  6E2E               	movwf	(?___fldiv+1)^0,c
 13346   00238A  0E00               	movlw	0
 13347   00238C  6E2F               	movwf	(?___fldiv+2)^0,c
 13348   00238E  0E00               	movlw	0
 13349   002390  6E30               	movwf	(?___fldiv+3)^0,c
 13350   002392  EFFC  F012         	goto	l1288
 13351   002396                     l6500:
 13352   002396  5045               	movf	___fldiv@aexp^0,w,c
 13353   002398  C044  F035         	movff	___fldiv@bexp,??___fldiv
 13354   00239C  6A36               	clrf	(??___fldiv+1)^0,c
 13355   00239E  5E35               	subwf	??___fldiv^0,f,c
 13356   0023A0  0E00               	movlw	0
 13357   0023A2  5A36               	subwfb	(??___fldiv+1)^0,f,c
 13358   0023A4  0E7F               	movlw	127
 13359   0023A6  2435               	addwf	??___fldiv^0,w,c
 13360   0023A8  6E3E               	movwf	___fldiv@new_exp^0,c
 13361   0023AA  0E00               	movlw	0
 13362   0023AC  2036               	addwfc	(??___fldiv+1)^0,w,c
 13363   0023AE  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 13364   0023B0  C02D  F039         	movff	___fldiv@b,___fldiv@rem
 13365   0023B4  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
 13366   0023B8  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
 13367   0023BC  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
 13368   0023C0  0E00               	movlw	0
 13369   0023C2  6E2D               	movwf	___fldiv@b^0,c
 13370   0023C4  0E00               	movlw	0
 13371   0023C6  6E2E               	movwf	(___fldiv@b+1)^0,c
 13372   0023C8  0E00               	movlw	0
 13373   0023CA  6E2F               	movwf	(___fldiv@b+2)^0,c
 13374   0023CC  0E00               	movlw	0
 13375   0023CE  6E30               	movwf	(___fldiv@b+3)^0,c
 13376   0023D0  0E00               	movlw	0
 13377   0023D2  6E40               	movwf	___fldiv@grs^0,c
 13378   0023D4  0E00               	movlw	0
 13379   0023D6  6E41               	movwf	(___fldiv@grs+1)^0,c
 13380   0023D8  0E00               	movlw	0
 13381   0023DA  6E42               	movwf	(___fldiv@grs+2)^0,c
 13382   0023DC  0E00               	movlw	0
 13383   0023DE  6E43               	movwf	(___fldiv@grs+3)^0,c
 13384   0023E0  0E00               	movlw	0
 13385   0023E2  6E45               	movwf	___fldiv@aexp^0,c
 13386   0023E4  EF2C  F012         	goto	l1290
 13387   0023E8                     l6510:
 13388   0023E8  5045               	movf	___fldiv@aexp^0,w,c
 13389   0023EA  B4D8               	btfsc	status,2,c
 13390   0023EC  EFFA  F011         	goto	u7481
 13391   0023F0  EFFC  F011         	goto	u7480
 13392   0023F4                     u7481:
 13393   0023F4  EF13  F012         	goto	l6518
 13394   0023F8                     u7480:
 13395   0023F8  90D8               	bcf	status,0,c
 13396   0023FA  3639               	rlcf	___fldiv@rem^0,f,c
 13397   0023FC  363A               	rlcf	(___fldiv@rem+1)^0,f,c
 13398   0023FE  363B               	rlcf	(___fldiv@rem+2)^0,f,c
 13399   002400  363C               	rlcf	(___fldiv@rem+3)^0,f,c
 13400   002402  90D8               	bcf	status,0,c
 13401   002404  362D               	rlcf	___fldiv@b^0,f,c
 13402   002406  362E               	rlcf	(___fldiv@b+1)^0,f,c
 13403   002408  362F               	rlcf	(___fldiv@b+2)^0,f,c
 13404   00240A  3630               	rlcf	(___fldiv@b+3)^0,f,c
 13405   00240C  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13406   00240E  EF0B  F012         	goto	u7491
 13407   002412  EF0D  F012         	goto	u7490
 13408   002416                     u7491:
 13409   002416  EF0E  F012         	goto	l1293
 13410   00241A                     u7490:
 13411   00241A  802D               	bsf	___fldiv@b^0,0,c
 13412   00241C                     l1293:
 13413   00241C  90D8               	bcf	status,0,c
 13414   00241E  3640               	rlcf	___fldiv@grs^0,f,c
 13415   002420  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 13416   002422  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 13417   002424  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 13418   002426                     l6518:
 13419   002426  5031               	movf	___fldiv@a^0,w,c
 13420   002428  5C39               	subwf	___fldiv@rem^0,w,c
 13421   00242A  5032               	movf	(___fldiv@a+1)^0,w,c
 13422   00242C  583A               	subwfb	(___fldiv@rem+1)^0,w,c
 13423   00242E  5033               	movf	(___fldiv@a+2)^0,w,c
 13424   002430  583B               	subwfb	(___fldiv@rem+2)^0,w,c
 13425   002432  5034               	movf	(___fldiv@a+3)^0,w,c
 13426   002434  583C               	subwfb	(___fldiv@rem+3)^0,w,c
 13427   002436  A0D8               	btfss	status,0,c
 13428   002438  EF20  F012         	goto	u7501
 13429   00243C  EF22  F012         	goto	u7500
 13430   002440                     u7501:
 13431   002440  EF2B  F012         	goto	l6524
 13432   002444                     u7500:
 13433   002444  8C43               	bsf	(___fldiv@grs+3)^0,6,c
 13434   002446  5031               	movf	___fldiv@a^0,w,c
 13435   002448  5E39               	subwf	___fldiv@rem^0,f,c
 13436   00244A  5032               	movf	(___fldiv@a+1)^0,w,c
 13437   00244C  5A3A               	subwfb	(___fldiv@rem+1)^0,f,c
 13438   00244E  5033               	movf	(___fldiv@a+2)^0,w,c
 13439   002450  5A3B               	subwfb	(___fldiv@rem+2)^0,f,c
 13440   002452  5034               	movf	(___fldiv@a+3)^0,w,c
 13441   002454  5A3C               	subwfb	(___fldiv@rem+3)^0,f,c
 13442   002456                     l6524:
 13443   002456  2A45               	incf	___fldiv@aexp^0,f,c
 13444   002458                     l1290:
 13445   002458  0E19               	movlw	25
 13446   00245A  6445               	cpfsgt	___fldiv@aexp^0,c
 13447   00245C  EF32  F012         	goto	u7511
 13448   002460  EF34  F012         	goto	u7510
 13449   002464                     u7511:
 13450   002464  EFF4  F011         	goto	l6510
 13451   002468                     u7510:
 13452   002468  5039               	movf	___fldiv@rem^0,w,c
 13453   00246A  103A               	iorwf	(___fldiv@rem+1)^0,w,c
 13454   00246C  103B               	iorwf	(___fldiv@rem+2)^0,w,c
 13455   00246E  103C               	iorwf	(___fldiv@rem+3)^0,w,c
 13456   002470  B4D8               	btfsc	status,2,c
 13457   002472  EF3D  F012         	goto	u7521
 13458   002476  EF3F  F012         	goto	u7520
 13459   00247A                     u7521:
 13460   00247A  EF57  F012         	goto	l6536
 13461   00247E                     u7520:
 13462   00247E  8040               	bsf	___fldiv@grs^0,0,c
 13463   002480  EF57  F012         	goto	l6536
 13464   002484                     l6530:
 13465   002484  90D8               	bcf	status,0,c
 13466   002486  362D               	rlcf	___fldiv@b^0,f,c
 13467   002488  362E               	rlcf	(___fldiv@b+1)^0,f,c
 13468   00248A  362F               	rlcf	(___fldiv@b+2)^0,f,c
 13469   00248C  3630               	rlcf	(___fldiv@b+3)^0,f,c
 13470   00248E  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13471   002490  EF4C  F012         	goto	u7531
 13472   002494  EF4E  F012         	goto	u7530
 13473   002498                     u7531:
 13474   002498  EF4F  F012         	goto	l1299
 13475   00249C                     u7530:
 13476   00249C  802D               	bsf	___fldiv@b^0,0,c
 13477   00249E                     l1299:
 13478   00249E  90D8               	bcf	status,0,c
 13479   0024A0  3640               	rlcf	___fldiv@grs^0,f,c
 13480   0024A2  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 13481   0024A4  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 13482   0024A6  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 13483   0024A8  063E               	decf	___fldiv@new_exp^0,f,c
 13484   0024AA  A0D8               	btfss	status,0,c
 13485   0024AC  063F               	decf	(___fldiv@new_exp+1)^0,f,c
 13486   0024AE                     l6536:
 13487   0024AE  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 13488   0024B0  EF5C  F012         	goto	u7541
 13489   0024B4  EF5E  F012         	goto	u7540
 13490   0024B8                     u7541:
 13491   0024B8  EF42  F012         	goto	l6530
 13492   0024BC                     u7540:
 13493   0024BC  0E00               	movlw	0
 13494   0024BE  6E45               	movwf	___fldiv@aexp^0,c
 13495   0024C0  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13496   0024C2  EF65  F012         	goto	u7551
 13497   0024C6  EF67  F012         	goto	u7550
 13498   0024CA                     u7551:
 13499   0024CA  EF8B  F012         	goto	l1301
 13500   0024CE                     u7550:
 13501   0024CE  0EFF               	movlw	255
 13502   0024D0  1440               	andwf	___fldiv@grs^0,w,c
 13503   0024D2  6E35               	movwf	??___fldiv^0,c
 13504   0024D4  0EFF               	movlw	255
 13505   0024D6  1441               	andwf	(___fldiv@grs+1)^0,w,c
 13506   0024D8  6E36               	movwf	(??___fldiv+1)^0,c
 13507   0024DA  0EFF               	movlw	255
 13508   0024DC  1442               	andwf	(___fldiv@grs+2)^0,w,c
 13509   0024DE  6E37               	movwf	(??___fldiv+2)^0,c
 13510   0024E0  0E7F               	movlw	127
 13511   0024E2  1443               	andwf	(___fldiv@grs+3)^0,w,c
 13512   0024E4  6E38               	movwf	(??___fldiv+3)^0,c
 13513   0024E6  5035               	movf	??___fldiv^0,w,c
 13514   0024E8  1036               	iorwf	(??___fldiv+1)^0,w,c
 13515   0024EA  1037               	iorwf	(??___fldiv+2)^0,w,c
 13516   0024EC  1038               	iorwf	(??___fldiv+3)^0,w,c
 13517   0024EE  B4D8               	btfsc	status,2,c
 13518   0024F0  EF7C  F012         	goto	u7561
 13519   0024F4  EF7E  F012         	goto	u7560
 13520   0024F8                     u7561:
 13521   0024F8  EF82  F012         	goto	l1302
 13522   0024FC                     u7560:
 13523   0024FC                     l6544:
 13524   0024FC  0E01               	movlw	1
 13525   0024FE  6E45               	movwf	___fldiv@aexp^0,c
 13526   002500  EF8B  F012         	goto	l1301
 13527   002504                     l1302:
 13528   002504  A02D               	btfss	___fldiv@b^0,0,c
 13529   002506  EF87  F012         	goto	u7571
 13530   00250A  EF89  F012         	goto	u7570
 13531   00250E                     u7571:
 13532   00250E  EF8B  F012         	goto	l1301
 13533   002512                     u7570:
 13534   002512  EF7E  F012         	goto	l6544
 13535   002516                     l1301:
 13536   002516  5045               	movf	___fldiv@aexp^0,w,c
 13537   002518  B4D8               	btfsc	status,2,c
 13538   00251A  EF91  F012         	goto	u7581
 13539   00251E  EF93  F012         	goto	u7580
 13540   002522                     u7581:
 13541   002522  EFB7  F012         	goto	l6556
 13542   002526                     u7580:
 13543   002526  0E01               	movlw	1
 13544   002528  262D               	addwf	___fldiv@b^0,f,c
 13545   00252A  0E00               	movlw	0
 13546   00252C  222E               	addwfc	(___fldiv@b+1)^0,f,c
 13547   00252E  222F               	addwfc	(___fldiv@b+2)^0,f,c
 13548   002530  2230               	addwfc	(___fldiv@b+3)^0,f,c
 13549   002532  A030               	btfss	(___fldiv@b+3)^0,0,c
 13550   002534  EF9E  F012         	goto	u7591
 13551   002538  EFA0  F012         	goto	u7590
 13552   00253C                     u7591:
 13553   00253C  EFB7  F012         	goto	l6556
 13554   002540                     u7590:
 13555   002540  C02D  F035         	movff	___fldiv@b,??___fldiv
 13556   002544  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
 13557   002548  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
 13558   00254C  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
 13559   002550  3438               	rlcf	(??___fldiv+3)^0,w,c
 13560   002552  3238               	rrcf	(??___fldiv+3)^0,f,c
 13561   002554  3237               	rrcf	(??___fldiv+2)^0,f,c
 13562   002556  3236               	rrcf	(??___fldiv+1)^0,f,c
 13563   002558  3235               	rrcf	??___fldiv^0,f,c
 13564   00255A  C035  F02D         	movff	??___fldiv,___fldiv@b
 13565   00255E  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
 13566   002562  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
 13567   002566  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
 13568   00256A  4A3E               	infsnz	___fldiv@new_exp^0,f,c
 13569   00256C  2A3F               	incf	(___fldiv@new_exp+1)^0,f,c
 13570   00256E                     l6556:
 13571   00256E  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13572   002570  EFC2  F012         	goto	u7601
 13573   002574  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 13574   002576  E108               	bnz	u7600
 13575   002578  283E               	incf	___fldiv@new_exp^0,w,c
 13576   00257A  A0D8               	btfss	status,0,c
 13577   00257C  EFC2  F012         	goto	u7601
 13578   002580  EFC4  F012         	goto	u7600
 13579   002584                     u7601:
 13580   002584  EFCF  F012         	goto	l6560
 13581   002588                     u7600:
 13582   002588  0E00               	movlw	0
 13583   00258A  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 13584   00258C  683E               	setf	___fldiv@new_exp^0,c
 13585   00258E  0E00               	movlw	0
 13586   002590  6E2D               	movwf	___fldiv@b^0,c
 13587   002592  0E00               	movlw	0
 13588   002594  6E2E               	movwf	(___fldiv@b+1)^0,c
 13589   002596  0E00               	movlw	0
 13590   002598  6E2F               	movwf	(___fldiv@b+2)^0,c
 13591   00259A  0E00               	movlw	0
 13592   00259C  6E30               	movwf	(___fldiv@b+3)^0,c
 13593   00259E                     l6560:
 13594   00259E  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13595   0025A0  EFDC  F012         	goto	u7610
 13596   0025A4  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 13597   0025A6  E106               	bnz	u7611
 13598   0025A8  043E               	decf	___fldiv@new_exp^0,w,c
 13599   0025AA  B0D8               	btfsc	status,0,c
 13600   0025AC  EFDA  F012         	goto	u7611
 13601   0025B0  EFDC  F012         	goto	u7610
 13602   0025B4                     u7611:
 13603   0025B4  EFEA  F012         	goto	l6564
 13604   0025B8                     u7610:
 13605   0025B8  0E00               	movlw	0
 13606   0025BA  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 13607   0025BC  0E00               	movlw	0
 13608   0025BE  6E3E               	movwf	___fldiv@new_exp^0,c
 13609   0025C0  0E00               	movlw	0
 13610   0025C2  6E2D               	movwf	___fldiv@b^0,c
 13611   0025C4  0E00               	movlw	0
 13612   0025C6  6E2E               	movwf	(___fldiv@b+1)^0,c
 13613   0025C8  0E00               	movlw	0
 13614   0025CA  6E2F               	movwf	(___fldiv@b+2)^0,c
 13615   0025CC  0E00               	movlw	0
 13616   0025CE  6E30               	movwf	(___fldiv@b+3)^0,c
 13617   0025D0  0E00               	movlw	0
 13618   0025D2  6E3D               	movwf	___fldiv@sign^0,c
 13619   0025D4                     l6564:
 13620   0025D4  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
 13621   0025D8  A044               	btfss	___fldiv@bexp^0,0,c
 13622   0025DA  EFF1  F012         	goto	u7621
 13623   0025DE  EFF3  F012         	goto	u7620
 13624   0025E2                     u7621:
 13625   0025E2  EFF6  F012         	goto	l6570
 13626   0025E6                     u7620:
 13627   0025E6  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 13628   0025E8  EFF7  F012         	goto	l6572
 13629   0025EC                     l6570:
 13630   0025EC  9E2F               	bcf	(___fldiv@b+2)^0,7,c
 13631   0025EE                     l6572:
 13632   0025EE  90D8               	bcf	status,0,c
 13633   0025F0  3044               	rrcf	___fldiv@bexp^0,w,c
 13634   0025F2  6E30               	movwf	(___fldiv@b+3)^0,c
 13635   0025F4  EFAD  F011         	goto	l6486
 13636   0025F8                     l1288:
 13637   0025F8  0012               	return		;funcret
 13638   0025FA                     __end_of___fldiv:
 13639                           	callstack 0
 13640                           
 13641 ;; *************** function _dtoa *****************
 13642 ;; Defined at:
 13643 ;;		line 513 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 13644 ;; Parameters:    Size  Location     Type
 13645 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 13646 ;;		 -> NULL(0), sprintf@f(12), 
 13647 ;;  d               2   33[COMRAM] int 
 13648 ;; Auto vars:     Size  Location     Type
 13649 ;;  i               2   42[COMRAM] int 
 13650 ;;  p               2   39[COMRAM] int 
 13651 ;;  w               2   37[COMRAM] int 
 13652 ;;  s               1   41[COMRAM] unsigned char 
 13653 ;; Return value:  Size  Location     Type
 13654 ;;                  1    wreg      void 
 13655 ;; Registers used:
 13656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13657 ;; Tracked objects:
 13658 ;;		On entry : 0/0
 13659 ;;		On exit  : 0/0
 13660 ;;		Unchanged: 0/0
 13661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13663 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13665 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13666 ;;Total ram usage:       13 bytes
 13667 ;; Hardware stack levels used: 1
 13668 ;; Hardware stack levels required when called: 5
 13669 ;; This function calls:
 13670 ;;		___awdiv
 13671 ;;		___awmod
 13672 ;;		_abs
 13673 ;;		_pad
 13674 ;; This function is called by:
 13675 ;;		_vfpfcnvrt
 13676 ;; This function uses a non-reentrant model
 13677 ;;
 13678                           
 13679                           	psect	text50
 13680   003A24                     __ptext50:
 13681                           	callstack 0
 13682   003A24                     _dtoa:
 13683                           	callstack 21
 13684   003A24                     
 13685                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 513: static void dtoa(FILE *fp, vfp
      +                          f_sint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 514: {;D:\MPLABX\Compile
      +                          r\pic\sources\c99\common\doprnt.c: 515:  char s;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 516:     int i, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 518:
      +                            int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 524:     s = d < 0 ? 1 : 0;
 13686   003A24  BE23               	btfsc	(dtoa@d+1)^0,7,c
 13687   003A26  EF17  F01D         	goto	u8411
 13688   003A2A  EF1A  F01D         	goto	u8410
 13689   003A2E                     u8411:
 13690   003A2E  0E01               	movlw	1
 13691   003A30  EF1B  F01D         	goto	u8420
 13692   003A34                     u8410:
 13693   003A34  0E00               	movlw	0
 13694   003A36                     u8420:
 13695   003A36  6E2A               	movwf	dtoa@s^0,c
 13696                           
 13697                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 533:     p = (0 <= prec) ? prec : 1
      +                          ;
 13698   003A38  BE58               	btfsc	(_prec+1)^0,7,c
 13699   003A3A  EF23  F01D         	goto	u8430
 13700   003A3E  EF21  F01D         	goto	u8431
 13701   003A42                     u8431:
 13702   003A42  EF29  F01D         	goto	l1423
 13703   003A46                     u8430:
 13704   003A46  0E00               	movlw	0
 13705   003A48  6E29               	movwf	(dtoa@p+1)^0,c
 13706   003A4A  0E01               	movlw	1
 13707   003A4C  6E28               	movwf	dtoa@p^0,c
 13708   003A4E  EF2D  F01D         	goto	l1425
 13709   003A52                     l1423:
 13710   003A52  C057  F028         	movff	_prec,dtoa@p
 13711   003A56  C058  F029         	movff	_prec+1,dtoa@p+1
 13712   003A5A                     l1425:
 13713                           
 13714                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 535:     w = width;
 13715   003A5A  C055  F026         	movff	_width,dtoa@w
 13716   003A5E  C056  F027         	movff	_width+1,dtoa@w+1
 13717   003A62                     
 13718                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 536:     if (s
 13719   003A62  502A               	movf	dtoa@s^0,w,c
 13720   003A64  B4D8               	btfsc	status,2,c
 13721   003A66  EF37  F01D         	goto	u8441
 13722   003A6A  EF39  F01D         	goto	u8440
 13723   003A6E                     u8441:
 13724   003A6E  EF50  F01D         	goto	l1426
 13725   003A72                     u8440:
 13726   003A72                     
 13727                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 540:     ) {;D:\MPLABX\Compiler\pic
      +                          \sources\c99\common\doprnt.c: 541:         --w;
 13728   003A72  0626               	decf	dtoa@w^0,f,c
 13729   003A74  A0D8               	btfss	status,0,c
 13730   003A76  0627               	decf	(dtoa@w+1)^0,f,c
 13731   003A78                     
 13732                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-' : '+';
 13733   003A78  502A               	movf	dtoa@s^0,w,c
 13734   003A7A  A4D8               	btfss	status,2,c
 13735   003A7C  EF42  F01D         	goto	u8451
 13736   003A80  EF44  F01D         	goto	u8450
 13737   003A84                     u8451:
 13738   003A84  EF4A  F01D         	goto	l7030
 13739   003A88                     u8450:
 13740   003A88  0E00               	movlw	0
 13741   003A8A  6E25               	movwf	(_dtoa$4033+1)^0,c
 13742   003A8C  0E2B               	movlw	43
 13743   003A8E  6E24               	movwf	_dtoa$4033^0,c
 13744   003A90  EF4E  F01D         	goto	l7032
 13745   003A94                     l7030:
 13746   003A94  0E00               	movlw	0
 13747   003A96  6E25               	movwf	(_dtoa$4033+1)^0,c
 13748   003A98  0E2D               	movlw	45
 13749   003A9A  6E24               	movwf	_dtoa$4033^0,c
 13750   003A9C                     l7032:
 13751   003A9C  C024  F02A         	movff	_dtoa$4033,dtoa@s
 13752   003AA0                     l1426:
 13753                           
 13754                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 552:     i = sizeof(dbuf) - 1;
 13755   003AA0  0E00               	movlw	0
 13756   003AA2  6E2C               	movwf	(dtoa@i+1)^0,c
 13757   003AA4  0E4F               	movlw	79
 13758   003AA6  6E2B               	movwf	dtoa@i^0,c
 13759   003AA8                     
 13760                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] = '\0';
 13761   003AA8  0E00               	movlw	0
 13762   003AAA  0101               	movlb	1	; () banked
 13763   003AAC  6F76               	movwf	(_dbuf+79)& (0+255),b
 13764                           
 13765                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 13766   003AAE  EF89  F01D         	goto	l7046
 13767   003AB2                     l7036:
 13768                           
 13769                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 563:     )) {;D:\MPLABX\Compiler\pi
      +                          c\sources\c99\common\doprnt.c: 564:         --i;
 13770   003AB2  062B               	decf	dtoa@i^0,f,c
 13771   003AB4  A0D8               	btfss	status,0,c
 13772   003AB6  062C               	decf	(dtoa@i+1)^0,f,c
 13773   003AB8                     
 13774                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 565:         dbuf[i] = (char)((int)
      +                          '0' + abs(d % 10));
 13775   003AB8  0E27               	movlw	low _dbuf
 13776   003ABA  242B               	addwf	dtoa@i^0,w,c
 13777   003ABC  6ED9               	movwf	fsr2l,c
 13778   003ABE  0E01               	movlw	high _dbuf
 13779   003AC0  202C               	addwfc	(dtoa@i+1)^0,w,c
 13780   003AC2  6EDA               	movwf	fsr2h,c
 13781   003AC4  C022  F006         	movff	dtoa@d,___awmod@dividend
 13782   003AC8  C023  F007         	movff	dtoa@d+1,___awmod@dividend+1
 13783   003ACC  0E00               	movlw	0
 13784   003ACE  6E09               	movwf	(___awmod@divisor+1)^0,c
 13785   003AD0  0E0A               	movlw	10
 13786   003AD2  6E08               	movwf	___awmod@divisor^0,c
 13787   003AD4  ECF2  F023         	call	___awmod	;wreg free
 13788   003AD8  C006  F00C         	movff	?___awmod,abs@a
 13789   003ADC  C007  F00D         	movff	?___awmod+1,abs@a+1
 13790   003AE0  ECFE  F027         	call	_abs	;wreg free
 13791   003AE4  500C               	movf	?_abs^0,w,c
 13792   003AE6  0F30               	addlw	48
 13793   003AE8  6EDF               	movwf	indf2,c
 13794   003AEA                     
 13795                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 567:         --p;
 13796   003AEA  0628               	decf	dtoa@p^0,f,c
 13797   003AEC  A0D8               	btfss	status,0,c
 13798   003AEE  0629               	decf	(dtoa@p+1)^0,f,c
 13799   003AF0                     
 13800                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 571:         --w;
 13801   003AF0  0626               	decf	dtoa@w^0,f,c
 13802   003AF2  A0D8               	btfss	status,0,c
 13803   003AF4  0627               	decf	(dtoa@w+1)^0,f,c
 13804   003AF6                     
 13805                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 572:         d = d / 10;
 13806   003AF6  C022  F018         	movff	dtoa@d,___awdiv@dividend
 13807   003AFA  C023  F019         	movff	dtoa@d+1,___awdiv@dividend+1
 13808   003AFE  0E00               	movlw	0
 13809   003B00  6E1B               	movwf	(___awdiv@divisor+1)^0,c
 13810   003B02  0E0A               	movlw	10
 13811   003B04  6E1A               	movwf	___awdiv@divisor^0,c
 13812   003B06  EC37  F023         	call	___awdiv	;wreg free
 13813   003B0A  C018  F022         	movff	?___awdiv,dtoa@d
 13814   003B0E  C019  F023         	movff	?___awdiv+1,dtoa@d+1
 13815   003B12                     l7046:
 13816                           
 13817                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 13818   003B12  BE2C               	btfsc	(dtoa@i+1)^0,7,c
 13819   003B14  EF94  F01D         	goto	u8461
 13820   003B18  502C               	movf	(dtoa@i+1)^0,w,c
 13821   003B1A  E108               	bnz	u8460
 13822   003B1C  042B               	decf	dtoa@i^0,w,c
 13823   003B1E  A0D8               	btfss	status,0,c
 13824   003B20  EF94  F01D         	goto	u8461
 13825   003B24  EF96  F01D         	goto	u8460
 13826   003B28                     u8461:
 13827   003B28  EFAC  F01D         	goto	l7052
 13828   003B2C                     u8460:
 13829   003B2C  5022               	movf	dtoa@d^0,w,c
 13830   003B2E  1023               	iorwf	(dtoa@d+1)^0,w,c
 13831   003B30  A4D8               	btfss	status,2,c
 13832   003B32  EF9D  F01D         	goto	u8471
 13833   003B36  EF9F  F01D         	goto	u8470
 13834   003B3A                     u8471:
 13835   003B3A  EF59  F01D         	goto	l7036
 13836   003B3E                     u8470:
 13837   003B3E  BE29               	btfsc	(dtoa@p+1)^0,7,c
 13838   003B40  EFAC  F01D         	goto	u8480
 13839   003B44  5029               	movf	(dtoa@p+1)^0,w,c
 13840   003B46  E106               	bnz	u8481
 13841   003B48  0428               	decf	dtoa@p^0,w,c
 13842   003B4A  B0D8               	btfsc	status,0,c
 13843   003B4C  EFAA  F01D         	goto	u8481
 13844   003B50  EFAC  F01D         	goto	u8480
 13845   003B54                     u8481:
 13846   003B54  EF59  F01D         	goto	l7036
 13847   003B58                     u8480:
 13848   003B58                     l7052:
 13849                           
 13850                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 576:     if (s != 0) {
 13851   003B58  502A               	movf	dtoa@s^0,w,c
 13852   003B5A  B4D8               	btfsc	status,2,c
 13853   003B5C  EFB2  F01D         	goto	u8491
 13854   003B60  EFB4  F01D         	goto	u8490
 13855   003B64                     u8491:
 13856   003B64  EFBF  F01D         	goto	l7058
 13857   003B68                     u8490:
 13858   003B68                     
 13859                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 577:         --i;
 13860   003B68  062B               	decf	dtoa@i^0,f,c
 13861   003B6A  A0D8               	btfss	status,0,c
 13862   003B6C  062C               	decf	(dtoa@i+1)^0,f,c
 13863   003B6E                     
 13864                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 578:         dbuf[i] = s;
 13865   003B6E  0E27               	movlw	low _dbuf
 13866   003B70  242B               	addwf	dtoa@i^0,w,c
 13867   003B72  6ED9               	movwf	fsr2l,c
 13868   003B74  0E01               	movlw	high _dbuf
 13869   003B76  202C               	addwfc	(dtoa@i+1)^0,w,c
 13870   003B78  6EDA               	movwf	fsr2h,c
 13871   003B7A  C02A  FFDF         	movff	dtoa@s,indf2
 13872   003B7E                     l7058:
 13873                           
 13874                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 582:     return (void) pad(fp, &dbu
      +                          f[i], w);
 13875   003B7E  C020  F017         	movff	dtoa@fp,pad@fp
 13876   003B82  C021  F018         	movff	dtoa@fp+1,pad@fp+1
 13877   003B86  0E27               	movlw	low _dbuf
 13878   003B88  242B               	addwf	dtoa@i^0,w,c
 13879   003B8A  6E19               	movwf	pad@buf^0,c
 13880   003B8C  0E01               	movlw	high _dbuf
 13881   003B8E  202C               	addwfc	(dtoa@i+1)^0,w,c
 13882   003B90  6E1A               	movwf	(pad@buf+1)^0,c
 13883   003B92  C026  F01B         	movff	dtoa@w,pad@p
 13884   003B96  C027  F01C         	movff	dtoa@w+1,pad@p+1
 13885   003B9A  ECF6  F024         	call	_pad	;wreg free
 13886   003B9E  0012               	return		;funcret
 13887   003BA0                     __end_of_dtoa:
 13888                           	callstack 0
 13889                           
 13890 ;; *************** function _pad *****************
 13891 ;; Defined at:
 13892 ;;		line 193 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 13893 ;; Parameters:    Size  Location     Type
 13894 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 13895 ;;		 -> NULL(0), sprintf@f(12), 
 13896 ;;  buf             2   24[COMRAM] PTR unsigned char 
 13897 ;;		 -> dbuf(80), 
 13898 ;;  p               2   26[COMRAM] int 
 13899 ;; Auto vars:     Size  Location     Type
 13900 ;;  i               2   29[COMRAM] int 
 13901 ;; Return value:  Size  Location     Type
 13902 ;;                  1    wreg      void 
 13903 ;; Registers used:
 13904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13905 ;; Tracked objects:
 13906 ;;		On entry : 0/0
 13907 ;;		On exit  : 0/0
 13908 ;;		Unchanged: 0/0
 13909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13910 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13912 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13913 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13914 ;;Total ram usage:        9 bytes
 13915 ;; Hardware stack levels used: 1
 13916 ;; Hardware stack levels required when called: 4
 13917 ;; This function calls:
 13918 ;;		_fputc
 13919 ;;		_fputs
 13920 ;; This function is called by:
 13921 ;;		_dtoa
 13922 ;;		_efgtoa
 13923 ;;		_utoa
 13924 ;; This function uses a non-reentrant model
 13925 ;;
 13926                           
 13927                           	psect	text51
 13928   0049EC                     __ptext51:
 13929                           	callstack 0
 13930   0049EC                     _pad:
 13931                           	callstack 21
 13932   0049EC                     
 13933                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 193: static void pad(FILE *fp, char
      +                           *buf, int p);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 194: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 195:     int i;;D:\MPLABX\Compiler\pic\sources\c99\
      +                          common\doprnt.c: 199:     if (flags & (1 << 0)) {
 13934   0049EC  A059               	btfss	_flags^0,0,c
 13935   0049EE  EFFB  F024         	goto	u8161
 13936   0049F2  EFFD  F024         	goto	u8160
 13937   0049F6                     u8161:
 13938   0049F6  EF07  F025         	goto	l6928
 13939   0049FA                     u8160:
 13940   0049FA                     
 13941                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 200:         fputs((const char *)bu
      +                          f, fp);
 13942   0049FA  C019  F010         	movff	pad@buf,fputs@s
 13943   0049FE  C01A  F011         	movff	pad@buf+1,fputs@s+1
 13944   004A02  C017  F012         	movff	pad@fp,fputs@fp
 13945   004A06  C018  F013         	movff	pad@fp+1,fputs@fp+1
 13946   004A0A  EC34  F027         	call	_fputs	;wreg free
 13947   004A0E                     l6928:
 13948                           
 13949                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) {
 13950   004A0E  BE1C               	btfsc	(pad@p+1)^0,7,c
 13951   004A10  EF0E  F025         	goto	u8170
 13952   004A14  EF0C  F025         	goto	u8171
 13953   004A18                     u8171:
 13954   004A18  EF12  F025         	goto	l1414
 13955   004A1C                     u8170:
 13956   004A1C                     
 13957                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 13958   004A1C  0E00               	movlw	0
 13959   004A1E  6E1C               	movwf	(pad@p+1)^0,c
 13960   004A20  0E00               	movlw	0
 13961   004A22  6E1B               	movwf	pad@p^0,c
 13962   004A24                     l1414:
 13963                           
 13964                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 13965   004A24  0E00               	movlw	0
 13966   004A26  6E1F               	movwf	(pad@i+1)^0,c
 13967   004A28  0E00               	movlw	0
 13968   004A2A  6E1E               	movwf	pad@i^0,c
 13969                           
 13970                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 13971   004A2C  EF24  F025         	goto	l6936
 13972   004A30                     l6932:
 13973                           
 13974                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 210:         fputc(' ', fp);
 13975   004A30  0E00               	movlw	0
 13976   004A32  6E08               	movwf	(fputc@c+1)^0,c
 13977   004A34  0E20               	movlw	32
 13978   004A36  6E07               	movwf	fputc@c^0,c
 13979   004A38  C017  F009         	movff	pad@fp,fputc@fp
 13980   004A3C  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 13981   004A40  ECD2  F022         	call	_fputc	;wreg free
 13982   004A44                     
 13983                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 211:         ++i;
 13984   004A44  4A1E               	infsnz	pad@i^0,f,c
 13985   004A46  2A1F               	incf	(pad@i+1)^0,f,c
 13986   004A48                     l6936:
 13987                           
 13988                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 13989   004A48  501B               	movf	pad@p^0,w,c
 13990   004A4A  5C1E               	subwf	pad@i^0,w,c
 13991   004A4C  501F               	movf	(pad@i+1)^0,w,c
 13992   004A4E  0A80               	xorlw	128
 13993   004A50  6E1D               	movwf	??_pad^0,c
 13994   004A52  501C               	movf	(pad@p+1)^0,w,c
 13995   004A54  0A80               	xorlw	128
 13996   004A56  581D               	subwfb	??_pad^0,w,c
 13997   004A58  A0D8               	btfss	status,0,c
 13998   004A5A  EF31  F025         	goto	u8181
 13999   004A5E  EF33  F025         	goto	u8180
 14000   004A62                     u8181:
 14001   004A62  EF18  F025         	goto	l6932
 14002   004A66                     u8180:
 14003   004A66                     
 14004                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 216:     if (!(flags & (1 << 0))) {
 14005   004A66  B059               	btfsc	_flags^0,0,c
 14006   004A68  EF38  F025         	goto	u8191
 14007   004A6C  EF3A  F025         	goto	u8190
 14008   004A70                     u8191:
 14009   004A70  EF44  F025         	goto	l1419
 14010   004A74                     u8190:
 14011   004A74                     
 14012                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 218:         fputs((const char *)bu
      +                          f, fp);
 14013   004A74  C019  F010         	movff	pad@buf,fputs@s
 14014   004A78  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14015   004A7C  C017  F012         	movff	pad@fp,fputs@fp
 14016   004A80  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14017   004A84  EC34  F027         	call	_fputs	;wreg free
 14018   004A88                     l1419:
 14019   004A88  0012               	return		;funcret
 14020   004A8A                     __end_of_pad:
 14021                           	callstack 0
 14022                           
 14023 ;; *************** function _fputs *****************
 14024 ;; Defined at:
 14025 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputs.c"
 14026 ;; Parameters:    Size  Location     Type
 14027 ;;  s               2   15[COMRAM] PTR const unsigned char 
 14028 ;;		 -> dbuf(80), 
 14029 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 14030 ;;		 -> NULL(0), sprintf@f(12), 
 14031 ;; Auto vars:     Size  Location     Type
 14032 ;;  i               2   20[COMRAM] int 
 14033 ;;  c               1   19[COMRAM] unsigned char 
 14034 ;; Return value:  Size  Location     Type
 14035 ;;                  2   15[COMRAM] int 
 14036 ;; Registers used:
 14037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14038 ;; Tracked objects:
 14039 ;;		On entry : 0/0
 14040 ;;		On exit  : 0/0
 14041 ;;		Unchanged: 0/0
 14042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14043 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14044 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14046 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14047 ;;Total ram usage:        7 bytes
 14048 ;; Hardware stack levels used: 1
 14049 ;; Hardware stack levels required when called: 3
 14050 ;; This function calls:
 14051 ;;		_fputc
 14052 ;; This function is called by:
 14053 ;;		_pad
 14054 ;; This function uses a non-reentrant model
 14055 ;;
 14056                           
 14057                           	psect	text52
 14058   004E68                     __ptext52:
 14059                           	callstack 0
 14060   004E68                     _fputs:
 14061                           	callstack 21
 14062   004E68  0E00               	movlw	0
 14063   004E6A  6E16               	movwf	(fputs@i+1)^0,c
 14064   004E6C  0E00               	movlw	0
 14065   004E6E  6E15               	movwf	fputs@i^0,c
 14066   004E70  EF45  F027         	goto	l6434
 14067   004E74                     l6430:
 14068   004E74  C014  F007         	movff	fputs@c,fputc@c
 14069   004E78  6A08               	clrf	(fputc@c+1)^0,c
 14070   004E7A  C012  F009         	movff	fputs@fp,fputc@fp
 14071   004E7E  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 14072   004E82  ECD2  F022         	call	_fputc	;wreg free
 14073   004E86  4A15               	infsnz	fputs@i^0,f,c
 14074   004E88  2A16               	incf	(fputs@i+1)^0,f,c
 14075   004E8A                     l6434:
 14076   004E8A  5015               	movf	fputs@i^0,w,c
 14077   004E8C  2410               	addwf	fputs@s^0,w,c
 14078   004E8E  6ED9               	movwf	fsr2l,c
 14079   004E90  5016               	movf	(fputs@i+1)^0,w,c
 14080   004E92  2011               	addwfc	(fputs@s+1)^0,w,c
 14081   004E94  6EDA               	movwf	fsr2h,c
 14082   004E96  50DF               	movf	indf2,w,c
 14083   004E98  6E14               	movwf	fputs@c^0,c
 14084   004E9A  5014               	movf	fputs@c^0,w,c
 14085   004E9C  A4D8               	btfss	status,2,c
 14086   004E9E  EF53  F027         	goto	u7391
 14087   004EA2  EF55  F027         	goto	u7390
 14088   004EA6                     u7391:
 14089   004EA6  EF3A  F027         	goto	l6430
 14090   004EAA                     u7390:
 14091   004EAA  0012               	return		;funcret
 14092   004EAC                     __end_of_fputs:
 14093                           	callstack 0
 14094                           
 14095 ;; *************** function _fputc *****************
 14096 ;; Defined at:
 14097 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputc.c"
 14098 ;; Parameters:    Size  Location     Type
 14099 ;;  c               2    6[COMRAM] int 
 14100 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 14101 ;;		 -> NULL(0), sprintf@f(12), 
 14102 ;; Auto vars:     Size  Location     Type
 14103 ;;		None
 14104 ;; Return value:  Size  Location     Type
 14105 ;;                  2    6[COMRAM] int 
 14106 ;; Registers used:
 14107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14108 ;; Tracked objects:
 14109 ;;		On entry : 0/0
 14110 ;;		On exit  : 0/0
 14111 ;;		Unchanged: 0/0
 14112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14115 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14116 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14117 ;;Total ram usage:        9 bytes
 14118 ;; Hardware stack levels used: 1
 14119 ;; Hardware stack levels required when called: 2
 14120 ;; This function calls:
 14121 ;;		_putch
 14122 ;; This function is called by:
 14123 ;;		_pad
 14124 ;;		_stoa
 14125 ;;		_vfpfcnvrt
 14126 ;;		_fputs
 14127 ;; This function uses a non-reentrant model
 14128 ;;
 14129                           
 14130                           	psect	text53
 14131   0045A4                     __ptext53:
 14132                           	callstack 0
 14133   0045A4                     _fputc:
 14134                           	callstack 21
 14135   0045A4  5009               	movf	fputc@fp^0,w,c
 14136   0045A6  100A               	iorwf	(fputc@fp+1)^0,w,c
 14137   0045A8  B4D8               	btfsc	status,2,c
 14138   0045AA  EFD9  F022         	goto	u6961
 14139   0045AE  EFDB  F022         	goto	u6960
 14140   0045B2                     u6961:
 14141   0045B2  EFE4  F022         	goto	l6216
 14142   0045B6                     u6960:
 14143   0045B6  5009               	movf	fputc@fp^0,w,c
 14144   0045B8  100A               	iorwf	(fputc@fp+1)^0,w,c
 14145   0045BA  A4D8               	btfss	status,2,c
 14146   0045BC  EFE2  F022         	goto	u6971
 14147   0045C0  EFE4  F022         	goto	u6970
 14148   0045C4                     u6971:
 14149   0045C4  EFE9  F022         	goto	l6218
 14150   0045C8                     u6970:
 14151   0045C8                     l6216:
 14152   0045C8  5007               	movf	fputc@c^0,w,c
 14153   0045CA  EC62  F028         	call	_putch
 14154   0045CE  EF36  F023         	goto	l1648
 14155   0045D2                     l6218:
 14156   0045D2  EE20 F00A          	lfsr	2,10
 14157   0045D6  5009               	movf	fputc@fp^0,w,c
 14158   0045D8  26D9               	addwf	fsr2l,f,c
 14159   0045DA  500A               	movf	(fputc@fp+1)^0,w,c
 14160   0045DC  22DA               	addwfc	fsr2h,f,c
 14161   0045DE  50DE               	movf	postinc2,w,c
 14162   0045E0  10DE               	iorwf	postinc2,w,c
 14163   0045E2  B4D8               	btfsc	status,2,c
 14164   0045E4  EFF6  F022         	goto	u6981
 14165   0045E8  EFF8  F022         	goto	u6980
 14166   0045EC                     u6981:
 14167   0045EC  EF13  F023         	goto	l6222
 14168   0045F0                     u6980:
 14169   0045F0  EE20 F00A          	lfsr	2,10
 14170   0045F4  5009               	movf	fputc@fp^0,w,c
 14171   0045F6  26D9               	addwf	fsr2l,f,c
 14172   0045F8  500A               	movf	(fputc@fp+1)^0,w,c
 14173   0045FA  22DA               	addwfc	fsr2h,f,c
 14174   0045FC  EE10 F003          	lfsr	1,3
 14175   004600  5009               	movf	fputc@fp^0,w,c
 14176   004602  26E1               	addwf	fsr1l,f,c
 14177   004604  500A               	movf	(fputc@fp+1)^0,w,c
 14178   004606  22E2               	addwfc	fsr1h,f,c
 14179   004608  50DE               	movf	postinc2,w,c
 14180   00460A  5CE6               	subwf	postinc1,w,c
 14181   00460C  50E6               	movf	postinc1,w,c
 14182   00460E  0A80               	xorlw	128
 14183   004610  6E0F               	movwf	(??_fputc+4)^0,c
 14184   004612  50DE               	movf	postinc2,w,c
 14185   004614  0A80               	xorlw	128
 14186   004616  580F               	subwfb	(??_fputc+4)^0,w,c
 14187   004618  B0D8               	btfsc	status,0,c
 14188   00461A  EF11  F023         	goto	u6991
 14189   00461E  EF13  F023         	goto	u6990
 14190   004622                     u6991:
 14191   004622  EF36  F023         	goto	l1648
 14192   004626                     u6990:
 14193   004626                     l6222:
 14194   004626  EE20 F003          	lfsr	2,3
 14195   00462A  5009               	movf	fputc@fp^0,w,c
 14196   00462C  26D9               	addwf	fsr2l,f,c
 14197   00462E  500A               	movf	(fputc@fp+1)^0,w,c
 14198   004630  22DA               	addwfc	fsr2h,f,c
 14199   004632  CFDE F00B          	movff	postinc2,??_fputc
 14200   004636  CFDD F00C          	movff	postdec2,??_fputc+1
 14201   00463A  C009  FFD9         	movff	fputc@fp,fsr2l
 14202   00463E  C00A  FFDA         	movff	fputc@fp+1,fsr2h
 14203   004642  CFDE F00D          	movff	postinc2,??_fputc+2
 14204   004646  CFDD F00E          	movff	postdec2,??_fputc+3
 14205   00464A  500B               	movf	??_fputc^0,w,c
 14206   00464C  240D               	addwf	(??_fputc+2)^0,w,c
 14207   00464E  6ED9               	movwf	fsr2l,c
 14208   004650  500C               	movf	(??_fputc+1)^0,w,c
 14209   004652  200E               	addwfc	(??_fputc+3)^0,w,c
 14210   004654  6EDA               	movwf	fsr2h,c
 14211   004656  C007  FFDF         	movff	fputc@c,indf2
 14212   00465A  EE20 F003          	lfsr	2,3
 14213   00465E  5009               	movf	fputc@fp^0,w,c
 14214   004660  26D9               	addwf	fsr2l,f,c
 14215   004662  500A               	movf	(fputc@fp+1)^0,w,c
 14216   004664  22DA               	addwfc	fsr2h,f,c
 14217   004666  2ADE               	incf	postinc2,f,c
 14218   004668  0E00               	movlw	0
 14219   00466A  22DD               	addwfc	postdec2,f,c
 14220   00466C                     l1648:
 14221   00466C  0012               	return		;funcret
 14222   00466E                     __end_of_fputc:
 14223                           	callstack 0
 14224                           
 14225 ;; *************** function _putch *****************
 14226 ;; Defined at:
 14227 ;;		line 11 in file "putch.c"
 14228 ;; Parameters:    Size  Location     Type
 14229 ;;  data            1    wreg     unsigned char 
 14230 ;; Auto vars:     Size  Location     Type
 14231 ;;  data            1    5[COMRAM] unsigned char 
 14232 ;; Return value:  Size  Location     Type
 14233 ;;                  1    wreg      void 
 14234 ;; Registers used:
 14235 ;;		wreg
 14236 ;; Tracked objects:
 14237 ;;		On entry : 0/0
 14238 ;;		On exit  : 0/0
 14239 ;;		Unchanged: 0/0
 14240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14244 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14245 ;;Total ram usage:        1 bytes
 14246 ;; Hardware stack levels used: 1
 14247 ;; Hardware stack levels required when called: 1
 14248 ;; This function calls:
 14249 ;;		Nothing
 14250 ;; This function is called by:
 14251 ;;		_fputc
 14252 ;; This function uses a non-reentrant model
 14253 ;;
 14254                           
 14255                           	psect	text54
 14256   0050C4                     __ptext54:
 14257                           	callstack 0
 14258   0050C4                     _putch:
 14259                           	callstack 21
 14260                           
 14261                           ;incstack = 0
 14262                           ;putch@data stored from wreg
 14263   0050C4  6E06               	movwf	putch@data^0,c
 14264   0050C6                     l270:
 14265   0050C6  A89E               	btfss	3998,4,c	;volatile
 14266   0050C8  EF68  F028         	goto	u6951
 14267   0050CC  EF6A  F028         	goto	u6950
 14268   0050D0                     u6951:
 14269   0050D0  EF63  F028         	goto	l270
 14270   0050D4                     u6950:
 14271   0050D4                     
 14272                           ;putch.c: 13:     TXREG1 = data;
 14273   0050D4  C006  FFAD         	movff	putch@data,4013	;volatile
 14274   0050D8  0012               	return		;funcret
 14275   0050DA                     __end_of_putch:
 14276                           	callstack 0
 14277                           
 14278 ;; *************** function _abs *****************
 14279 ;; Defined at:
 14280 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\abs.c"
 14281 ;; Parameters:    Size  Location     Type
 14282 ;;  a               2   11[COMRAM] int 
 14283 ;; Auto vars:     Size  Location     Type
 14284 ;;		None
 14285 ;; Return value:  Size  Location     Type
 14286 ;;                  2   11[COMRAM] int 
 14287 ;; Registers used:
 14288 ;;		wreg, status,2, status,0
 14289 ;; Tracked objects:
 14290 ;;		On entry : 0/0
 14291 ;;		On exit  : 0/0
 14292 ;;		Unchanged: 0/0
 14293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14297 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14298 ;;Total ram usage:        4 bytes
 14299 ;; Hardware stack levels used: 1
 14300 ;; Hardware stack levels required when called: 1
 14301 ;; This function calls:
 14302 ;;		Nothing
 14303 ;; This function is called by:
 14304 ;;		_dtoa
 14305 ;; This function uses a non-reentrant model
 14306 ;;
 14307                           
 14308                           	psect	text55
 14309   004FFC                     __ptext55:
 14310                           	callstack 0
 14311   004FFC                     _abs:
 14312                           	callstack 24
 14313   004FFC  BE0D               	btfsc	(abs@a+1)^0,7,c
 14314   004FFE  EF03  F028         	goto	u8201
 14315   005002  EF05  F028         	goto	u8200
 14316   005006                     u8201:
 14317   005006  EF0B  F028         	goto	l1607
 14318   00500A                     u8200:
 14319   00500A  C00C  F00C         	movff	abs@a,?_abs
 14320   00500E  C00D  F00D         	movff	abs@a+1,?_abs+1
 14321   005012  EF17  F028         	goto	l1610
 14322   005016                     l1607:
 14323   005016  C00C  F00E         	movff	abs@a,??_abs
 14324   00501A  C00D  F00F         	movff	abs@a+1,??_abs+1
 14325   00501E  1E0E               	comf	??_abs^0,f,c
 14326   005020  1E0F               	comf	(??_abs+1)^0,f,c
 14327   005022  4A0E               	infsnz	??_abs^0,f,c
 14328   005024  2A0F               	incf	(??_abs+1)^0,f,c
 14329   005026  C00E  F00C         	movff	??_abs,?_abs
 14330   00502A  C00F  F00D         	movff	??_abs+1,?_abs+1
 14331   00502E                     l1610:
 14332   00502E  0012               	return		;funcret
 14333   005030                     __end_of_abs:
 14334                           	callstack 0
 14335                           
 14336 ;; *************** function ___awmod *****************
 14337 ;; Defined at:
 14338 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awmod.c"
 14339 ;; Parameters:    Size  Location     Type
 14340 ;;  dividend        2    5[COMRAM] int 
 14341 ;;  divisor         2    7[COMRAM] int 
 14342 ;; Auto vars:     Size  Location     Type
 14343 ;;  sign            1   10[COMRAM] unsigned char 
 14344 ;;  counter         1    9[COMRAM] unsigned char 
 14345 ;; Return value:  Size  Location     Type
 14346 ;;                  2    5[COMRAM] int 
 14347 ;; Registers used:
 14348 ;;		wreg, status,2, status,0
 14349 ;; Tracked objects:
 14350 ;;		On entry : 0/0
 14351 ;;		On exit  : 0/0
 14352 ;;		Unchanged: 0/0
 14353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14357 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14358 ;;Total ram usage:        6 bytes
 14359 ;; Hardware stack levels used: 1
 14360 ;; Hardware stack levels required when called: 1
 14361 ;; This function calls:
 14362 ;;		Nothing
 14363 ;; This function is called by:
 14364 ;;		_dtoa
 14365 ;; This function uses a non-reentrant model
 14366 ;;
 14367                           
 14368                           	psect	text56
 14369   0047E4                     __ptext56:
 14370                           	callstack 0
 14371   0047E4                     ___awmod:
 14372                           	callstack 24
 14373   0047E4  0E00               	movlw	0
 14374   0047E6  6E0B               	movwf	___awmod@sign^0,c
 14375   0047E8  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 14376   0047EA  EFFB  F023         	goto	u7880
 14377   0047EE  EFF9  F023         	goto	u7881
 14378   0047F2                     u7881:
 14379   0047F2  EF01  F024         	goto	l6768
 14380   0047F6                     u7880:
 14381   0047F6  6C06               	negf	___awmod@dividend^0,c
 14382   0047F8  1E07               	comf	(___awmod@dividend+1)^0,f,c
 14383   0047FA  B0D8               	btfsc	status,0,c
 14384   0047FC  2A07               	incf	(___awmod@dividend+1)^0,f,c
 14385   0047FE  0E01               	movlw	1
 14386   004800  6E0B               	movwf	___awmod@sign^0,c
 14387   004802                     l6768:
 14388   004802  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 14389   004804  EF08  F024         	goto	u7890
 14390   004808  EF06  F024         	goto	u7891
 14391   00480C                     u7891:
 14392   00480C  EF0C  F024         	goto	l6772
 14393   004810                     u7890:
 14394   004810  6C08               	negf	___awmod@divisor^0,c
 14395   004812  1E09               	comf	(___awmod@divisor+1)^0,f,c
 14396   004814  B0D8               	btfsc	status,0,c
 14397   004816  2A09               	incf	(___awmod@divisor+1)^0,f,c
 14398   004818                     l6772:
 14399   004818  5008               	movf	___awmod@divisor^0,w,c
 14400   00481A  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 14401   00481C  B4D8               	btfsc	status,2,c
 14402   00481E  EF13  F024         	goto	u7901
 14403   004822  EF15  F024         	goto	u7900
 14404   004826                     u7901:
 14405   004826  EF39  F024         	goto	l6788
 14406   00482A                     u7900:
 14407   00482A  0E01               	movlw	1
 14408   00482C  6E0A               	movwf	___awmod@counter^0,c
 14409   00482E  EF1D  F024         	goto	l6778
 14410   004832                     l6776:
 14411   004832  90D8               	bcf	status,0,c
 14412   004834  3608               	rlcf	___awmod@divisor^0,f,c
 14413   004836  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 14414   004838  2A0A               	incf	___awmod@counter^0,f,c
 14415   00483A                     l6778:
 14416   00483A  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 14417   00483C  EF22  F024         	goto	u7911
 14418   004840  EF24  F024         	goto	u7910
 14419   004844                     u7911:
 14420   004844  EF19  F024         	goto	l6776
 14421   004848                     u7910:
 14422   004848                     l6780:
 14423   004848  5008               	movf	___awmod@divisor^0,w,c
 14424   00484A  5C06               	subwf	___awmod@dividend^0,w,c
 14425   00484C  5009               	movf	(___awmod@divisor+1)^0,w,c
 14426   00484E  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 14427   004850  A0D8               	btfss	status,0,c
 14428   004852  EF2D  F024         	goto	u7921
 14429   004856  EF2F  F024         	goto	u7920
 14430   00485A                     u7921:
 14431   00485A  EF33  F024         	goto	l6784
 14432   00485E                     u7920:
 14433   00485E  5008               	movf	___awmod@divisor^0,w,c
 14434   004860  5E06               	subwf	___awmod@dividend^0,f,c
 14435   004862  5009               	movf	(___awmod@divisor+1)^0,w,c
 14436   004864  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 14437   004866                     l6784:
 14438   004866  90D8               	bcf	status,0,c
 14439   004868  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 14440   00486A  3208               	rrcf	___awmod@divisor^0,f,c
 14441   00486C  2E0A               	decfsz	___awmod@counter^0,f,c
 14442   00486E  EF24  F024         	goto	l6780
 14443   004872                     l6788:
 14444   004872  500B               	movf	___awmod@sign^0,w,c
 14445   004874  B4D8               	btfsc	status,2,c
 14446   004876  EF3F  F024         	goto	u7931
 14447   00487A  EF41  F024         	goto	u7930
 14448   00487E                     u7931:
 14449   00487E  EF45  F024         	goto	l6792
 14450   004882                     u7930:
 14451   004882  6C06               	negf	___awmod@dividend^0,c
 14452   004884  1E07               	comf	(___awmod@dividend+1)^0,f,c
 14453   004886  B0D8               	btfsc	status,0,c
 14454   004888  2A07               	incf	(___awmod@dividend+1)^0,f,c
 14455   00488A                     l6792:
 14456   00488A  C006  F006         	movff	___awmod@dividend,?___awmod
 14457   00488E  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 14458   004892  0012               	return		;funcret
 14459   004894                     __end_of___awmod:
 14460                           	callstack 0
 14461                           
 14462 ;; *************** function ___awdiv *****************
 14463 ;; Defined at:
 14464 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awdiv.c"
 14465 ;; Parameters:    Size  Location     Type
 14466 ;;  dividend        2   23[COMRAM] int 
 14467 ;;  divisor         2   25[COMRAM] int 
 14468 ;; Auto vars:     Size  Location     Type
 14469 ;;  quotient        2   29[COMRAM] int 
 14470 ;;  sign            1   28[COMRAM] unsigned char 
 14471 ;;  counter         1   27[COMRAM] unsigned char 
 14472 ;; Return value:  Size  Location     Type
 14473 ;;                  2   23[COMRAM] int 
 14474 ;; Registers used:
 14475 ;;		wreg, status,2, status,0
 14476 ;; Tracked objects:
 14477 ;;		On entry : 0/0
 14478 ;;		On exit  : 0/0
 14479 ;;		Unchanged: 0/0
 14480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14481 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14482 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14484 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14485 ;;Total ram usage:        8 bytes
 14486 ;; Hardware stack levels used: 1
 14487 ;; Hardware stack levels required when called: 1
 14488 ;; This function calls:
 14489 ;;		Nothing
 14490 ;; This function is called by:
 14491 ;;		_runPWM
 14492 ;;		_runGAME
 14493 ;;		_dtoa
 14494 ;; This function uses a non-reentrant model
 14495 ;;
 14496                           
 14497                           	psect	text57
 14498   00466E                     __ptext57:
 14499                           	callstack 0
 14500   00466E                     ___awdiv:
 14501                           	callstack 24
 14502   00466E  0E00               	movlw	0
 14503   004670  6E1D               	movwf	___awdiv@sign^0,c
 14504   004672  BE1B               	btfsc	(___awdiv@divisor+1)^0,7,c
 14505   004674  EF40  F023         	goto	u7820
 14506   004678  EF3E  F023         	goto	u7821
 14507   00467C                     u7821:
 14508   00467C  EF46  F023         	goto	l6724
 14509   004680                     u7820:
 14510   004680  6C1A               	negf	___awdiv@divisor^0,c
 14511   004682  1E1B               	comf	(___awdiv@divisor+1)^0,f,c
 14512   004684  B0D8               	btfsc	status,0,c
 14513   004686  2A1B               	incf	(___awdiv@divisor+1)^0,f,c
 14514   004688  0E01               	movlw	1
 14515   00468A  6E1D               	movwf	___awdiv@sign^0,c
 14516   00468C                     l6724:
 14517   00468C  BE19               	btfsc	(___awdiv@dividend+1)^0,7,c
 14518   00468E  EF4D  F023         	goto	u7830
 14519   004692  EF4B  F023         	goto	u7831
 14520   004696                     u7831:
 14521   004696  EF53  F023         	goto	l6730
 14522   00469A                     u7830:
 14523   00469A  6C18               	negf	___awdiv@dividend^0,c
 14524   00469C  1E19               	comf	(___awdiv@dividend+1)^0,f,c
 14525   00469E  B0D8               	btfsc	status,0,c
 14526   0046A0  2A19               	incf	(___awdiv@dividend+1)^0,f,c
 14527   0046A2  0E01               	movlw	1
 14528   0046A4  1A1D               	xorwf	___awdiv@sign^0,f,c
 14529   0046A6                     l6730:
 14530   0046A6  0E00               	movlw	0
 14531   0046A8  6E1F               	movwf	(___awdiv@quotient+1)^0,c
 14532   0046AA  0E00               	movlw	0
 14533   0046AC  6E1E               	movwf	___awdiv@quotient^0,c
 14534   0046AE  501A               	movf	___awdiv@divisor^0,w,c
 14535   0046B0  101B               	iorwf	(___awdiv@divisor+1)^0,w,c
 14536   0046B2  B4D8               	btfsc	status,2,c
 14537   0046B4  EF5E  F023         	goto	u7841
 14538   0046B8  EF60  F023         	goto	u7840
 14539   0046BC                     u7841:
 14540   0046BC  EF88  F023         	goto	l6752
 14541   0046C0                     u7840:
 14542   0046C0  0E01               	movlw	1
 14543   0046C2  6E1C               	movwf	___awdiv@counter^0,c
 14544   0046C4  EF68  F023         	goto	l6738
 14545   0046C8                     l6736:
 14546   0046C8  90D8               	bcf	status,0,c
 14547   0046CA  361A               	rlcf	___awdiv@divisor^0,f,c
 14548   0046CC  361B               	rlcf	(___awdiv@divisor+1)^0,f,c
 14549   0046CE  2A1C               	incf	___awdiv@counter^0,f,c
 14550   0046D0                     l6738:
 14551   0046D0  AE1B               	btfss	(___awdiv@divisor+1)^0,7,c
 14552   0046D2  EF6D  F023         	goto	u7851
 14553   0046D6  EF6F  F023         	goto	u7850
 14554   0046DA                     u7851:
 14555   0046DA  EF64  F023         	goto	l6736
 14556   0046DE                     u7850:
 14557   0046DE                     l6740:
 14558   0046DE  90D8               	bcf	status,0,c
 14559   0046E0  361E               	rlcf	___awdiv@quotient^0,f,c
 14560   0046E2  361F               	rlcf	(___awdiv@quotient+1)^0,f,c
 14561   0046E4  501A               	movf	___awdiv@divisor^0,w,c
 14562   0046E6  5C18               	subwf	___awdiv@dividend^0,w,c
 14563   0046E8  501B               	movf	(___awdiv@divisor+1)^0,w,c
 14564   0046EA  5819               	subwfb	(___awdiv@dividend+1)^0,w,c
 14565   0046EC  A0D8               	btfss	status,0,c
 14566   0046EE  EF7B  F023         	goto	u7861
 14567   0046F2  EF7D  F023         	goto	u7860
 14568   0046F6                     u7861:
 14569   0046F6  EF82  F023         	goto	l6748
 14570   0046FA                     u7860:
 14571   0046FA  501A               	movf	___awdiv@divisor^0,w,c
 14572   0046FC  5E18               	subwf	___awdiv@dividend^0,f,c
 14573   0046FE  501B               	movf	(___awdiv@divisor+1)^0,w,c
 14574   004700  5A19               	subwfb	(___awdiv@dividend+1)^0,f,c
 14575   004702  801E               	bsf	___awdiv@quotient^0,0,c
 14576   004704                     l6748:
 14577   004704  90D8               	bcf	status,0,c
 14578   004706  321B               	rrcf	(___awdiv@divisor+1)^0,f,c
 14579   004708  321A               	rrcf	___awdiv@divisor^0,f,c
 14580   00470A  2E1C               	decfsz	___awdiv@counter^0,f,c
 14581   00470C  EF6F  F023         	goto	l6740
 14582   004710                     l6752:
 14583   004710  501D               	movf	___awdiv@sign^0,w,c
 14584   004712  B4D8               	btfsc	status,2,c
 14585   004714  EF8E  F023         	goto	u7871
 14586   004718  EF90  F023         	goto	u7870
 14587   00471C                     u7871:
 14588   00471C  EF94  F023         	goto	l6756
 14589   004720                     u7870:
 14590   004720  6C1E               	negf	___awdiv@quotient^0,c
 14591   004722  1E1F               	comf	(___awdiv@quotient+1)^0,f,c
 14592   004724  B0D8               	btfsc	status,0,c
 14593   004726  2A1F               	incf	(___awdiv@quotient+1)^0,f,c
 14594   004728                     l6756:
 14595   004728  C01E  F018         	movff	___awdiv@quotient,?___awdiv
 14596   00472C  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
 14597   004730  0012               	return		;funcret
 14598   004732                     __end_of___awdiv:
 14599                           	callstack 0
 14600                           
 14601 ;; *************** function _LCD_ShowString *****************
 14602 ;; Defined at:
 14603 ;;		line 55 in file "lcd.c"
 14604 ;; Parameters:    Size  Location     Type
 14605 ;;  lineNum         1    wreg     unsigned char 
 14606 ;;  textData        2    6[COMRAM] PTR unsigned char 
 14607 ;;		 -> runGAME@approxText(17), runGAME@text(17), runADC@text(17), moveDisplay@menuItem2(17), 
 14608 ;;		 -> moveDisplay@menuItem1(17), STR_13(17), STR_12(17), STR_11(17), 
 14609 ;;		 -> STR_10(17), STR_9(17), STR_8(17), STR_7(17), 
 14610 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
 14611 ;;		 -> STR_2(17), STR_1(17), 
 14612 ;; Auto vars:     Size  Location     Type
 14613 ;;  lineNum         1   10[COMRAM] unsigned char 
 14614 ;;  i               1   11[COMRAM] unsigned char 
 14615 ;; Return value:  Size  Location     Type
 14616 ;;                  1    wreg      void 
 14617 ;; Registers used:
 14618 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14619 ;; Tracked objects:
 14620 ;;		On entry : 0/0
 14621 ;;		On exit  : 0/0
 14622 ;;		Unchanged: 0/0
 14623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14625 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14627 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14628 ;;Total ram usage:        6 bytes
 14629 ;; Hardware stack levels used: 1
 14630 ;; Hardware stack levels required when called: 2
 14631 ;; This function calls:
 14632 ;;		_LCD_Send
 14633 ;; This function is called by:
 14634 ;;		_main
 14635 ;;		_moveDisplay
 14636 ;;		_runADC
 14637 ;;		_runGAME
 14638 ;; This function uses a non-reentrant model
 14639 ;;
 14640                           
 14641                           	psect	text58
 14642   004732                     __ptext58:
 14643                           	callstack 0
 14644   004732                     _LCD_ShowString:
 14645                           	callstack 27
 14646                           
 14647                           ;incstack = 0
 14648                           ;LCD_ShowString@lineNum stored from wreg
 14649   004732  6E0B               	movwf	LCD_ShowString@lineNum^0,c
 14650   004734                     
 14651                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 14652   004734  806B               	bsf	107,0,c	;volatile
 14653   004736                     l132:
 14654   004736  B06B               	btfsc	107,0,c	;volatile
 14655   004738  EFA0  F023         	goto	u9321
 14656   00473C  EFA2  F023         	goto	u9320
 14657   004740                     u9321:
 14658   004740  EF9B  F023         	goto	l132
 14659   004744                     u9320:
 14660   004744                     
 14661                           ;lcd.c: 62:     SSP2IF = 0;
 14662   004744  9EA4               	bcf	4004,7,c	;volatile
 14663   004746                     
 14664                           ;lcd.c: 64:     LCD_Send(0x7c);
 14665   004746  0E7C               	movlw	124
 14666   004748  EC3F  F028         	call	_LCD_Send
 14667                           
 14668                           ;lcd.c: 66:     LCD_Send(0x80);
 14669   00474C  0E80               	movlw	128
 14670   00474E  EC3F  F028         	call	_LCD_Send
 14671   004752                     
 14672                           ;lcd.c: 68:     if(lineNum == 1){
 14673   004752  040B               	decf	LCD_ShowString@lineNum^0,w,c
 14674   004754  A4D8               	btfss	status,2,c
 14675   004756  EFAF  F023         	goto	u9331
 14676   00475A  EFB1  F023         	goto	u9330
 14677   00475E                     u9331:
 14678   00475E  EFB6  F023         	goto	l7658
 14679   004762                     u9330:
 14680   004762                     
 14681                           ;lcd.c: 69:         LCD_Send(0x80);
 14682   004762  0E80               	movlw	128
 14683   004764  EC3F  F028         	call	_LCD_Send
 14684                           
 14685                           ;lcd.c: 70:     }
 14686   004768  EFC2  F023         	goto	l136
 14687   00476C                     l7658:
 14688   00476C  0E02               	movlw	2
 14689   00476E  180B               	xorwf	LCD_ShowString@lineNum^0,w,c
 14690   004770  A4D8               	btfss	status,2,c
 14691   004772  EFBD  F023         	goto	u9341
 14692   004776  EFBF  F023         	goto	u9340
 14693   00477A                     u9341:
 14694   00477A  EFC2  F023         	goto	l136
 14695   00477E                     u9340:
 14696   00477E                     
 14697                           ;lcd.c: 72:         LCD_Send(0xC0);
 14698   00477E  0EC0               	movlw	192
 14699   004780  EC3F  F028         	call	_LCD_Send
 14700   004784                     l136:
 14701                           
 14702                           ;lcd.c: 75:     LCD_Send(0x40);
 14703   004784  0E40               	movlw	64
 14704   004786  EC3F  F028         	call	_LCD_Send
 14705   00478A                     
 14706                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 14707   00478A  0E00               	movlw	0
 14708   00478C  6E0C               	movwf	LCD_ShowString@i^0,c
 14709   00478E                     l7668:
 14710                           
 14711                           ;lcd.c: 78:         LCD_Send(textData[i]);
 14712   00478E  500C               	movf	LCD_ShowString@i^0,w,c
 14713   004790  2407               	addwf	LCD_ShowString@textData^0,w,c
 14714   004792  6E09               	movwf	??_LCD_ShowString^0,c
 14715   004794  0E00               	movlw	0
 14716   004796  2008               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 14717   004798  6E0A               	movwf	(??_LCD_ShowString+1)^0,c
 14718   00479A  C009  FFF6         	movff	??_LCD_ShowString,tblptrl
 14719   00479E  C00A  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 14720   0047A2  0E00               	movlw	low (__mediumconst shr (0+16))
 14721   0047A4  6EF8               	movwf	tblptru,c
 14722   0047A6  0E0F               	movlw	(high __ramtop+-1)
 14723   0047A8  64F7               	cpfsgt	tblptrh,c
 14724   0047AA  D003               	bra	u9357
 14725   0047AC  0008               	tblrd		*
 14726   0047AE  50F5               	movf	tablat,w,c
 14727   0047B0  D005               	bra	u9350
 14728   0047B2                     u9357:
 14729   0047B2  CFF6 FFE1          	movff	tblptrl,fsr1l
 14730   0047B6  CFF7 FFE2          	movff	tblptrh,fsr1h
 14731   0047BA  50E7               	movf	indf1,w,c
 14732   0047BC                     u9350:
 14733   0047BC  EC3F  F028         	call	_LCD_Send
 14734   0047C0                     
 14735                           ;lcd.c: 79:     }
 14736   0047C0  2A0C               	incf	LCD_ShowString@i^0,f,c
 14737   0047C2  0E0F               	movlw	15
 14738   0047C4  640C               	cpfsgt	LCD_ShowString@i^0,c
 14739   0047C6  EFE7  F023         	goto	u9361
 14740   0047CA  EFE9  F023         	goto	u9360
 14741   0047CE                     u9361:
 14742   0047CE  EFC7  F023         	goto	l7668
 14743   0047D2                     u9360:
 14744   0047D2                     
 14745                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 14746   0047D2  846B               	bsf	107,2,c	;volatile
 14747   0047D4                     l140:
 14748   0047D4  B46B               	btfsc	107,2,c	;volatile
 14749   0047D6  EFEF  F023         	goto	u9371
 14750   0047DA  EFF1  F023         	goto	u9370
 14751   0047DE                     u9371:
 14752   0047DE  EFEA  F023         	goto	l140
 14753   0047E2                     u9370:
 14754   0047E2  0012               	return		;funcret
 14755   0047E4                     __end_of_LCD_ShowString:
 14756                           	callstack 0
 14757                           
 14758 ;; *************** function _LCD_Clear *****************
 14759 ;; Defined at:
 14760 ;;		line 94 in file "lcd.c"
 14761 ;; Parameters:    Size  Location     Type
 14762 ;;		None
 14763 ;; Auto vars:     Size  Location     Type
 14764 ;;		None
 14765 ;; Return value:  Size  Location     Type
 14766 ;;                  1    wreg      void 
 14767 ;; Registers used:
 14768 ;;		wreg, cstack
 14769 ;; Tracked objects:
 14770 ;;		On entry : 0/0
 14771 ;;		On exit  : 0/0
 14772 ;;		Unchanged: 0/0
 14773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14778 ;;Total ram usage:        0 bytes
 14779 ;; Hardware stack levels used: 1
 14780 ;; Hardware stack levels required when called: 2
 14781 ;; This function calls:
 14782 ;;		_LCD_Send
 14783 ;; This function is called by:
 14784 ;;		_moveDisplay
 14785 ;; This function uses a non-reentrant model
 14786 ;;
 14787                           
 14788                           	psect	text59
 14789   004F92                     __ptext59:
 14790                           	callstack 0
 14791   004F92                     _LCD_Clear:
 14792                           	callstack 27
 14793   004F92                     
 14794                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
 14795   004F92  806B               	bsf	107,0,c	;volatile
 14796   004F94                     l155:
 14797   004F94  B06B               	btfsc	107,0,c	;volatile
 14798   004F96  EFCF  F027         	goto	u9381
 14799   004F9A  EFD1  F027         	goto	u9380
 14800   004F9E                     u9381:
 14801   004F9E  EFCA  F027         	goto	l155
 14802   004FA2                     u9380:
 14803   004FA2                     
 14804                           ;lcd.c: 97:     SSP2IF = 0;
 14805   004FA2  9EA4               	bcf	4004,7,c	;volatile
 14806   004FA4                     
 14807                           ;lcd.c: 99:     LCD_Send(0x7C);
 14808   004FA4  0E7C               	movlw	124
 14809   004FA6  EC3F  F028         	call	_LCD_Send
 14810                           
 14811                           ;lcd.c: 100:     LCD_Send(0x80);
 14812   004FAA  0E80               	movlw	128
 14813   004FAC  EC3F  F028         	call	_LCD_Send
 14814                           
 14815                           ;lcd.c: 101:     LCD_Send(0x01);
 14816   004FB0  0E01               	movlw	1
 14817   004FB2  EC3F  F028         	call	_LCD_Send
 14818   004FB6                     
 14819                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
 14820   004FB6  846B               	bsf	107,2,c	;volatile
 14821   004FB8                     l158:
 14822   004FB8  B46B               	btfsc	107,2,c	;volatile
 14823   004FBA  EFE1  F027         	goto	u9391
 14824   004FBE  EFE3  F027         	goto	u9390
 14825   004FC2                     u9391:
 14826   004FC2  EFDC  F027         	goto	l158
 14827   004FC6                     u9390:
 14828   004FC6  0012               	return		;funcret
 14829   004FC8                     __end_of_LCD_Clear:
 14830                           	callstack 0
 14831                           
 14832 ;; *************** function _LCD_Init *****************
 14833 ;; Defined at:
 14834 ;;		line 3 in file "lcd.c"
 14835 ;; Parameters:    Size  Location     Type
 14836 ;;		None
 14837 ;; Auto vars:     Size  Location     Type
 14838 ;;		None
 14839 ;; Return value:  Size  Location     Type
 14840 ;;                  1    wreg      void 
 14841 ;; Registers used:
 14842 ;;		wreg, status,2, cstack
 14843 ;; Tracked objects:
 14844 ;;		On entry : 0/0
 14845 ;;		On exit  : 0/0
 14846 ;;		Unchanged: 0/0
 14847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14852 ;;Total ram usage:        1 bytes
 14853 ;; Hardware stack levels used: 1
 14854 ;; Hardware stack levels required when called: 2
 14855 ;; This function calls:
 14856 ;;		_LCD_Send
 14857 ;; This function is called by:
 14858 ;;		_main
 14859 ;; This function uses a non-reentrant model
 14860 ;;
 14861                           
 14862                           	psect	text60
 14863   0044CA                     __ptext60:
 14864                           	callstack 0
 14865   0044CA                     _LCD_Init:
 14866                           	callstack 28
 14867   0044CA                     
 14868                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 14869   0044CA  010F               	movlb	15	; () banked
 14870   0044CC  913B               	bcf	59,0,b	;volatile
 14871                           
 14872                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 14873   0044CE  933B               	bcf	59,1,b	;volatile
 14874                           
 14875                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 14876   0044D0  8095               	bsf	149,0,c	;volatile
 14877                           
 14878                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 14879   0044D2  8295               	bsf	149,1,c	;volatile
 14880                           
 14881                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 14882   0044D4  9092               	bcf	146,0,c	;volatile
 14883                           
 14884                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 14885   0044D6  8089               	bsf	137,0,c	;volatile
 14886   0044D8                     
 14887                           ; BSR set to: 15
 14888                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 14889   0044D8  506C               	movf	108,w,c	;volatile
 14890   0044DA  0BF0               	andlw	-16
 14891   0044DC  0908               	iorlw	8
 14892   0044DE  6E6C               	movwf	108,c	;volatile
 14893                           
 14894                           ;lcd.c: 15:     SSP2ADD = 19;
 14895   0044E0  0E13               	movlw	19
 14896   0044E2  6E6E               	movwf	110,c	;volatile
 14897   0044E4                     
 14898                           ; BSR set to: 15
 14899                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 14900   0044E4  8A6C               	bsf	108,5,c	;volatile
 14901   0044E6                     
 14902                           ; BSR set to: 15
 14903                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 14904   0044E6  0E34               	movlw	52
 14905   0044E8  6E07               	movwf	??_LCD_Init^0,c
 14906   0044EA  0EF2               	movlw	242
 14907   0044EC                     u10407:
 14908   0044EC  2EE8               	decfsz	wreg,f,c
 14909   0044EE  D7FE               	bra	u10407
 14910   0044F0  2E07               	decfsz	??_LCD_Init^0,f,c
 14911   0044F2  D7FC               	bra	u10407
 14912   0044F4                     
 14913                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 14914   0044F4  806B               	bsf	107,0,c	;volatile
 14915   0044F6                     l123:
 14916   0044F6  B06B               	btfsc	107,0,c	;volatile
 14917   0044F8  EF80  F022         	goto	u9661
 14918   0044FC  EF82  F022         	goto	u9660
 14919   004500                     u9661:
 14920   004500  EF7B  F022         	goto	l123
 14921   004504                     u9660:
 14922   004504                     
 14923                           ;lcd.c: 22:     SSP2IF = 0;
 14924   004504  9EA4               	bcf	4004,7,c	;volatile
 14925   004506                     
 14926                           ;lcd.c: 27:     LCD_Send(0x7C);
 14927   004506  0E7C               	movlw	124
 14928   004508  EC3F  F028         	call	_LCD_Send
 14929                           
 14930                           ;lcd.c: 28:     LCD_Send(0x80);
 14931   00450C  0E80               	movlw	128
 14932   00450E  EC3F  F028         	call	_LCD_Send
 14933                           
 14934                           ;lcd.c: 29:     LCD_Send(0x38);
 14935   004512  0E38               	movlw	56
 14936   004514  EC3F  F028         	call	_LCD_Send
 14937                           
 14938                           ;lcd.c: 30:     LCD_Send(0x80);
 14939   004518  0E80               	movlw	128
 14940   00451A  EC3F  F028         	call	_LCD_Send
 14941                           
 14942                           ;lcd.c: 31:     LCD_Send(0x39);
 14943   00451E  0E39               	movlw	57
 14944   004520  EC3F  F028         	call	_LCD_Send
 14945                           
 14946                           ;lcd.c: 32:     LCD_Send(0x80);
 14947   004524  0E80               	movlw	128
 14948   004526  EC3F  F028         	call	_LCD_Send
 14949                           
 14950                           ;lcd.c: 33:     LCD_Send(0x17);
 14951   00452A  0E17               	movlw	23
 14952   00452C  EC3F  F028         	call	_LCD_Send
 14953                           
 14954                           ;lcd.c: 34:     LCD_Send(0x80);
 14955   004530  0E80               	movlw	128
 14956   004532  EC3F  F028         	call	_LCD_Send
 14957                           
 14958                           ;lcd.c: 35:     LCD_Send(0x7A);
 14959   004536  0E7A               	movlw	122
 14960   004538  EC3F  F028         	call	_LCD_Send
 14961                           
 14962                           ;lcd.c: 36:     LCD_Send(0x80);
 14963   00453C  0E80               	movlw	128
 14964   00453E  EC3F  F028         	call	_LCD_Send
 14965                           
 14966                           ;lcd.c: 37:     LCD_Send(0x5E);
 14967   004542  0E5E               	movlw	94
 14968   004544  EC3F  F028         	call	_LCD_Send
 14969                           
 14970                           ;lcd.c: 38:     LCD_Send(0x80);
 14971   004548  0E80               	movlw	128
 14972   00454A  EC3F  F028         	call	_LCD_Send
 14973                           
 14974                           ;lcd.c: 39:     LCD_Send(0x6B);
 14975   00454E  0E6B               	movlw	107
 14976   004550  EC3F  F028         	call	_LCD_Send
 14977                           
 14978                           ;lcd.c: 40:     LCD_Send(0x80);
 14979   004554  0E80               	movlw	128
 14980   004556  EC3F  F028         	call	_LCD_Send
 14981                           
 14982                           ;lcd.c: 41:     LCD_Send(0x0C);
 14983   00455A  0E0C               	movlw	12
 14984   00455C  EC3F  F028         	call	_LCD_Send
 14985                           
 14986                           ;lcd.c: 42:     LCD_Send(0x80);
 14987   004560  0E80               	movlw	128
 14988   004562  EC3F  F028         	call	_LCD_Send
 14989                           
 14990                           ;lcd.c: 43:     LCD_Send(0x01);
 14991   004566  0E01               	movlw	1
 14992   004568  EC3F  F028         	call	_LCD_Send
 14993                           
 14994                           ;lcd.c: 44:     LCD_Send(0x80);
 14995   00456C  0E80               	movlw	128
 14996   00456E  EC3F  F028         	call	_LCD_Send
 14997                           
 14998                           ;lcd.c: 45:     LCD_Send(0x06);
 14999   004572  0E06               	movlw	6
 15000   004574  EC3F  F028         	call	_LCD_Send
 15001                           
 15002                           ;lcd.c: 46:     LCD_Send(0x80);
 15003   004578  0E80               	movlw	128
 15004   00457A  EC3F  F028         	call	_LCD_Send
 15005                           
 15006                           ;lcd.c: 47:     LCD_Send(0x02);
 15007   00457E  0E02               	movlw	2
 15008   004580  EC3F  F028         	call	_LCD_Send
 15009   004584                     
 15010                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 15011   004584  846B               	bsf	107,2,c	;volatile
 15012   004586                     l126:
 15013   004586  B46B               	btfsc	107,2,c	;volatile
 15014   004588  EFC8  F022         	goto	u9671
 15015   00458C  EFCA  F022         	goto	u9670
 15016   004590                     u9671:
 15017   004590  EFC3  F022         	goto	l126
 15018   004594                     u9670:
 15019   004594                     
 15020                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 15021   004594  0E34               	movlw	52
 15022   004596  6E07               	movwf	??_LCD_Init^0,c
 15023   004598  0EF2               	movlw	242
 15024   00459A                     u10417:
 15025   00459A  2EE8               	decfsz	wreg,f,c
 15026   00459C  D7FE               	bra	u10417
 15027   00459E  2E07               	decfsz	??_LCD_Init^0,f,c
 15028   0045A0  D7FC               	bra	u10417
 15029   0045A2  0012               	return		;funcret
 15030   0045A4                     __end_of_LCD_Init:
 15031                           	callstack 0
 15032                           
 15033 ;; *************** function _LCD_Send *****************
 15034 ;; Defined at:
 15035 ;;		line 85 in file "lcd.c"
 15036 ;; Parameters:    Size  Location     Type
 15037 ;;  data            1    wreg     unsigned char 
 15038 ;; Auto vars:     Size  Location     Type
 15039 ;;  data            1    5[COMRAM] unsigned char 
 15040 ;; Return value:  Size  Location     Type
 15041 ;;                  1    wreg      void 
 15042 ;; Registers used:
 15043 ;;		wreg
 15044 ;; Tracked objects:
 15045 ;;		On entry : 0/0
 15046 ;;		On exit  : 0/0
 15047 ;;		Unchanged: 0/0
 15048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15052 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15053 ;;Total ram usage:        1 bytes
 15054 ;; Hardware stack levels used: 1
 15055 ;; Hardware stack levels required when called: 1
 15056 ;; This function calls:
 15057 ;;		Nothing
 15058 ;; This function is called by:
 15059 ;;		_LCD_Init
 15060 ;;		_LCD_ShowString
 15061 ;;		_LCD_Clear
 15062 ;; This function uses a non-reentrant model
 15063 ;;
 15064                           
 15065                           	psect	text61
 15066   00507E                     __ptext61:
 15067                           	callstack 0
 15068   00507E                     _LCD_Send:
 15069                           	callstack 27
 15070                           
 15071                           ;incstack = 0
 15072                           ;LCD_Send@data stored from wreg
 15073   00507E  6E06               	movwf	LCD_Send@data^0,c
 15074   005080                     
 15075                           ;lcd.c: 87:     SSP2BUF = data;
 15076   005080  C006  FF6F         	movff	LCD_Send@data,3951	;volatile
 15077   005084                     l146:
 15078   005084  B06D               	btfsc	109,0,c	;volatile
 15079   005086  EF47  F028         	goto	u9221
 15080   00508A  EF49  F028         	goto	u9220
 15081   00508E                     u9221:
 15082   00508E  EF42  F028         	goto	l146
 15083   005092                     u9220:
 15084   005092                     l149:
 15085   005092  AEA4               	btfss	4004,7,c	;volatile
 15086   005094  EF4E  F028         	goto	u9231
 15087   005098  EF50  F028         	goto	u9230
 15088   00509C                     u9231:
 15089   00509C  EF49  F028         	goto	l149
 15090   0050A0                     u9230:
 15091   0050A0                     
 15092                           ;lcd.c: 90:     SSP2IF = 0;
 15093   0050A0  9EA4               	bcf	4004,7,c	;volatile
 15094   0050A2  0012               	return		;funcret
 15095   0050A4                     __end_of_LCD_Send:
 15096                           	callstack 0
 15097                           
 15098 ;; *************** function _ISR *****************
 15099 ;; Defined at:
 15100 ;;		line 11 in file "interrupt.c"
 15101 ;; Parameters:    Size  Location     Type
 15102 ;;		None
 15103 ;; Auto vars:     Size  Location     Type
 15104 ;;  temp            1    4[COMRAM] unsigned char 
 15105 ;; Return value:  Size  Location     Type
 15106 ;;                  1    wreg      void 
 15107 ;; Registers used:
 15108 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15109 ;; Tracked objects:
 15110 ;;		On entry : 0/0
 15111 ;;		On exit  : 0/0
 15112 ;;		Unchanged: 0/0
 15113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15116 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15117 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15118 ;;Total ram usage:        5 bytes
 15119 ;; Hardware stack levels used: 1
 15120 ;; This function calls:
 15121 ;;		Nothing
 15122 ;; This function is called by:
 15123 ;;		Interrupt level 2
 15124 ;; This function uses a non-reentrant model
 15125 ;;
 15126                           
 15127                           	psect	intcode
 15128   000008                     __pintcode:
 15129                           	callstack 0
 15130   000008                     _ISR:
 15131                           	callstack 21
 15132                           
 15133                           ;incstack = 0
 15134   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15135   00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
 15136   00000E  CFDA F004          	movff	fsr2h,??_ISR+3
 15137   000012                     
 15138                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 15139   000012  A09D               	btfss	3997,0,c	;volatile
 15140   000014  EF0E  F000         	goto	i2u682_41
 15141   000018  EF10  F000         	goto	i2u682_40
 15142   00001C                     i2u682_41:
 15143   00001C  EF49  F000         	goto	i2l6176
 15144   000020                     i2u682_40:
 15145   000020  A09E               	btfss	3998,0,c	;volatile
 15146   000022  EF15  F000         	goto	i2u683_41
 15147   000026  EF17  F000         	goto	i2u683_40
 15148   00002A                     i2u683_41:
 15149   00002A  EF49  F000         	goto	i2l6176
 15150   00002E                     i2u683_40:
 15151   00002E  0101               	movlb	1	; () banked
 15152   000030  5126               	movf	_GPIOIE& (0+255),w,b
 15153   000032  B4D8               	btfsc	status,2,c
 15154   000034  EF1E  F000         	goto	i2u684_41
 15155   000038  EF20  F000         	goto	i2u684_40
 15156   00003C                     i2u684_41:
 15157   00003C  EF49  F000         	goto	i2l6176
 15158   000040                     i2u684_40:
 15159   000040                     
 15160                           ; BSR set to: 1
 15161                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 15162   000040  A480               	btfss	128,2,c	;volatile
 15163   000042  EF25  F000         	goto	i2u685_41
 15164   000046  EF27  F000         	goto	i2u685_40
 15165   00004A                     i2u685_41:
 15166   00004A  EF44  F000         	goto	i2l412
 15167   00004E                     i2u685_40:
 15168   00004E                     
 15169                           ; BSR set to: 1
 15170                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 15171   00004E  0E03               	movlw	3
 15172   000050  6E02               	movwf	(??_ISR+1)^0,c
 15173   000052  0E08               	movlw	8
 15174   000054  6E01               	movwf	??_ISR^0,c
 15175   000056  0E77               	movlw	119
 15176   000058                     i2u1042_47:
 15177   000058  2EE8               	decfsz	wreg,f,c
 15178   00005A  D7FE               	bra	i2u1042_47
 15179   00005C  2E01               	decfsz	??_ISR^0,f,c
 15180   00005E  D7FC               	bra	i2u1042_47
 15181   000060  2E02               	decfsz	(??_ISR+1)^0,f,c
 15182   000062  D7FA               	bra	i2u1042_47
 15183   000064  0000               	nop	
 15184   000066                     
 15185                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 15186   000066  A480               	btfss	128,2,c	;volatile
 15187   000068  EF38  F000         	goto	i2u686_41
 15188   00006C  EF3A  F000         	goto	i2u686_40
 15189   000070                     i2u686_41:
 15190   000070  EF44  F000         	goto	i2l412
 15191   000074                     i2u686_40:
 15192   000074                     i2l414:
 15193   000074  B480               	btfsc	128,2,c	;volatile
 15194   000076  EF3F  F000         	goto	i2u687_41
 15195   00007A  EF41  F000         	goto	i2u687_40
 15196   00007E                     i2u687_41:
 15197   00007E  EF3A  F000         	goto	i2l414
 15198   000082                     i2u687_40:
 15199   000082                     
 15200                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 15201   000082  0E00               	movlw	0
 15202   000084  0100               	movlb	0	; () banked
 15203   000086  6FFE               	movwf	_keepStateGPIO& (0+255),b
 15204   000088                     i2l412:
 15205                           
 15206                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 15207   000088  0E9E               	movlw	158
 15208   00008A  6ECF               	movwf	207,c	;volatile
 15209   00008C  0E58               	movlw	88
 15210   00008E  6ECE               	movwf	206,c	;volatile
 15211   000090                     
 15212                           ;interrupt.c: 23:         TMR1IF = 0;
 15213   000090  909E               	bcf	3998,0,c	;volatile
 15214   000092                     i2l6176:
 15215                           
 15216                           ;interrupt.c: 26:     if(TMR1IE && TMR1IF && GAMEIE){
 15217   000092  A09D               	btfss	3997,0,c	;volatile
 15218   000094  EF4E  F000         	goto	i2u688_41
 15219   000098  EF50  F000         	goto	i2u688_40
 15220   00009C                     i2u688_41:
 15221   00009C  EF66  F000         	goto	i2l6188
 15222   0000A0                     i2u688_40:
 15223   0000A0  A09E               	btfss	3998,0,c	;volatile
 15224   0000A2  EF55  F000         	goto	i2u689_41
 15225   0000A6  EF57  F000         	goto	i2u689_40
 15226   0000AA                     i2u689_41:
 15227   0000AA  EF66  F000         	goto	i2l6188
 15228   0000AE                     i2u689_40:
 15229   0000AE  0101               	movlb	1	; () banked
 15230   0000B0  5124               	movf	_GAMEIE& (0+255),w,b
 15231   0000B2  B4D8               	btfsc	status,2,c
 15232   0000B4  EF5E  F000         	goto	i2u690_41
 15233   0000B8  EF60  F000         	goto	i2u690_40
 15234   0000BC                     i2u690_41:
 15235   0000BC  EF66  F000         	goto	i2l6188
 15236   0000C0                     i2u690_40:
 15237   0000C0                     
 15238                           ; BSR set to: 1
 15239                           ;interrupt.c: 27:         GAMEtime += 1;
 15240   0000C0  2B23               	incf	_GAMEtime& (0+255),f,b
 15241   0000C2                     
 15242                           ; BSR set to: 1
 15243                           ;interrupt.c: 29:         TMR1 = 0xFFFF - (62500 - 1);
 15244   0000C2  0E0B               	movlw	11
 15245   0000C4  6ECF               	movwf	207,c	;volatile
 15246   0000C6  0EDC               	movlw	220
 15247   0000C8  6ECE               	movwf	206,c	;volatile
 15248   0000CA                     
 15249                           ; BSR set to: 1
 15250                           ;interrupt.c: 30:         TMR1IF = 0;
 15251   0000CA  909E               	bcf	3998,0,c	;volatile
 15252   0000CC                     i2l6188:
 15253                           
 15254                           ;interrupt.c: 33:     if(RC1IE && RC1IF && UARTIE){
 15255   0000CC  AA9D               	btfss	3997,5,c	;volatile
 15256   0000CE  EF6B  F000         	goto	i2u691_41
 15257   0000D2  EF6D  F000         	goto	i2u691_40
 15258   0000D6                     i2u691_41:
 15259   0000D6  EFA1  F000         	goto	i2l423
 15260   0000DA                     i2u691_40:
 15261   0000DA  AA9E               	btfss	3998,5,c	;volatile
 15262   0000DC  EF72  F000         	goto	i2u692_41
 15263   0000E0  EF74  F000         	goto	i2u692_40
 15264   0000E4                     i2u692_41:
 15265   0000E4  EFA1  F000         	goto	i2l423
 15266   0000E8                     i2u692_40:
 15267   0000E8  0101               	movlb	1	; () banked
 15268   0000EA  5125               	movf	_UARTIE& (0+255),w,b
 15269   0000EC  B4D8               	btfsc	status,2,c
 15270   0000EE  EF7B  F000         	goto	i2u693_41
 15271   0000F2  EF7D  F000         	goto	i2u693_40
 15272   0000F6                     i2u693_41:
 15273   0000F6  EFA1  F000         	goto	i2l423
 15274   0000FA                     i2u693_40:
 15275   0000FA                     
 15276                           ; BSR set to: 1
 15277                           ;interrupt.c: 34:         char temp = RCREG1;
 15278   0000FA  CFAE F005          	movff	4014,ISR@temp	;volatile
 15279   0000FE                     
 15280                           ; BSR set to: 1
 15281                           ;interrupt.c: 35:         static int i = 0;;interrupt.c: 37:         if(temp != '\n'){
 15282   0000FE  0E0A               	movlw	10
 15283   000100  1805               	xorwf	ISR@temp^0,w,c
 15284   000102  B4D8               	btfsc	status,2,c
 15285   000104  EF86  F000         	goto	i2u694_41
 15286   000108  EF88  F000         	goto	i2u694_40
 15287   00010C                     i2u694_41:
 15288   00010C  EF94  F000         	goto	i2l6202
 15289   000110                     i2u694_40:
 15290   000110                     
 15291                           ; BSR set to: 1
 15292                           ;interrupt.c: 38:             gmail.data[i] = temp;
 15293   000110  0E77               	movlw	low _gmail
 15294   000112  2521               	addwf	ISR@i& (0+255),w,b
 15295   000114  6ED9               	movwf	fsr2l,c
 15296   000116  0E01               	movlw	high _gmail
 15297   000118  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15298   00011A  6EDA               	movwf	fsr2h,c
 15299   00011C  C005  FFDF         	movff	ISR@temp,indf2
 15300   000120                     
 15301                           ; BSR set to: 1
 15302                           ;interrupt.c: 39:             i++;
 15303   000120  4B21               	infsnz	ISR@i& (0+255),f,b
 15304   000122  2B22               	incf	(ISR@i+1)& (0+255),f,b
 15305                           
 15306                           ;interrupt.c: 40:         } else {
 15307   000124  EFA1  F000         	goto	i2l423
 15308   000128                     i2l6202:
 15309                           
 15310                           ; BSR set to: 1
 15311                           ;interrupt.c: 41:             gmail.full = 1;
 15312   000128  0E01               	movlw	1
 15313   00012A  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
 15314   00012C                     
 15315                           ; BSR set to: 1
 15316                           ;interrupt.c: 42:             gmail.data[i] = '\0';
 15317   00012C  0E77               	movlw	low _gmail
 15318   00012E  2521               	addwf	ISR@i& (0+255),w,b
 15319   000130  6ED9               	movwf	fsr2l,c
 15320   000132  0E01               	movlw	high _gmail
 15321   000134  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15322   000136  6EDA               	movwf	fsr2h,c
 15323   000138  6ADF               	clrf	indf2,c
 15324   00013A                     
 15325                           ; BSR set to: 1
 15326                           ;interrupt.c: 43:             i = 0;
 15327   00013A  0E00               	movlw	0
 15328   00013C  6F22               	movwf	(ISR@i+1)& (0+255),b
 15329   00013E  0E00               	movlw	0
 15330   000140  6F21               	movwf	ISR@i& (0+255),b
 15331   000142                     i2l423:
 15332   000142  C004  FFDA         	movff	??_ISR+3,fsr2h
 15333   000146  C003  FFD9         	movff	??_ISR+2,fsr2l
 15334   00014A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15335   00014C  0011               	retfie		f
 15336   00014E                     __end_of_ISR:
 15337                           	callstack 0
 15338                           
 15339                           	psect	rparam
 15340   000000                     
 15341                           	psect	temp
 15342   00005A                     btemp:
 15343                           	callstack 0
 15344   00005A                     	ds	1
 15345   000000                     int$flags	set	btemp
 15346   000000                     wtemp8	set	btemp+1
 15347   000000                     ttemp5	set	btemp+1
 15348   000000                     ttemp6	set	btemp+4
 15349   000000                     ttemp7	set	btemp+8
 15350                           
 15351                           	psect	config
 15352                           
 15353                           ; Padding undefined space
 15354   300000                     	org	3145728
 15355   300000  FF                 	db	255
 15356                           
 15357                           ;Config register CONFIG1H @ 0x300001
 15358                           ;	Oscillator Selection bits
 15359                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 15360                           ;	4X PLL Enable
 15361                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15362                           ;	Primary clock enable bit
 15363                           ;	PRICLKEN = 0x1, unprogrammed default
 15364                           ;	Fail-Safe Clock Monitor Enable bit
 15365                           ;	FCMEN = 0x0, unprogrammed default
 15366                           ;	Internal/External Oscillator Switchover bit
 15367                           ;	IESO = 0x0, unprogrammed default
 15368   300001                     	org	3145729
 15369   300001  33                 	db	51
 15370                           
 15371                           ;Config register CONFIG2L @ 0x300002
 15372                           ;	unspecified, using default values
 15373                           ;	Power-up Timer Enable bit
 15374                           ;	PWRTEN = 0x1, unprogrammed default
 15375                           ;	Brown-out Reset Enable bits
 15376                           ;	BOREN = 0x3, unprogrammed default
 15377                           ;	Brown Out Reset Voltage bits
 15378                           ;	BORV = 0x3, unprogrammed default
 15379   300002                     	org	3145730
 15380   300002  1F                 	db	31
 15381                           
 15382                           ;Config register CONFIG2H @ 0x300003
 15383                           ;	Watchdog Timer Enable bits
 15384                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15385                           ;	Watchdog Timer Postscale Select bits
 15386                           ;	WDTPS = 0xF, unprogrammed default
 15387   300003                     	org	3145731
 15388   300003  3C                 	db	60
 15389                           tosu	equ	0xFFF
 15390                           tosh	equ	0xFFE
 15391                           tosl	equ	0xFFD
 15392                           stkptr	equ	0xFFC
 15393                           pclatu	equ	0xFFB
 15394                           pclath	equ	0xFFA
 15395                           pcl	equ	0xFF9
 15396                           tblptru	equ	0xFF8
 15397                           tblptrh	equ	0xFF7
 15398                           tblptrl	equ	0xFF6
 15399                           tablat	equ	0xFF5
 15400                           prodh	equ	0xFF4
 15401                           prodl	equ	0xFF3
 15402                           indf0	equ	0xFEF
 15403                           postinc0	equ	0xFEE
 15404                           postdec0	equ	0xFED
 15405                           preinc0	equ	0xFEC
 15406                           plusw0	equ	0xFEB
 15407                           fsr0h	equ	0xFEA
 15408                           fsr0l	equ	0xFE9
 15409                           wreg	equ	0xFE8
 15410                           indf1	equ	0xFE7
 15411                           postinc1	equ	0xFE6
 15412                           postdec1	equ	0xFE5
 15413                           preinc1	equ	0xFE4
 15414                           plusw1	equ	0xFE3
 15415                           fsr1h	equ	0xFE2
 15416                           fsr1l	equ	0xFE1
 15417                           bsr	equ	0xFE0
 15418                           indf2	equ	0xFDF
 15419                           postinc2	equ	0xFDE
 15420                           postdec2	equ	0xFDD
 15421                           preinc2	equ	0xFDC
 15422                           plusw2	equ	0xFDB
 15423                           fsr2h	equ	0xFDA
 15424                           fsr2l	equ	0xFD9
 15425                           status	equ	0xFD8

Data Sizes:
    Strings     238
    Constant    64
    Data        40
    BSS         195
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    158     159
    BANK1           256     51     246
    BANK2           256      0      34
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[17]), 
		 -> runGAME@text(BANK1[17]), STR_1(CODE[17]), STR_10(CODE[17]), STR_11(CODE[17]), 
		 -> STR_12(CODE[17]), STR_13(CODE[17]), STR_2(CODE[17]), STR_3(CODE[17]), 
		 -> STR_4(CODE[17]), STR_5(CODE[17]), STR_6(CODE[17]), STR_7(CODE[17]), 
		 -> STR_8(CODE[17]), STR_9(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    moveDisplay$4522	PTR unsigned char  size(2) Largest target is 6
		 -> STR_15(CODE[5]), STR_16(CODE[5]), STR_17(CODE[4]), STR_18(CODE[4]), 
		 -> STR_19(CODE[4]), STR_20(CODE[5]), STR_21(CODE[6]), STR_22(CODE[1]), 

    moveDisplay@F6965	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_15(CODE[5]), STR_16(CODE[5]), STR_17(CODE[4]), STR_18(CODE[4]), 
		 -> STR_19(CODE[4]), STR_20(CODE[5]), STR_21(CODE[6]), STR_22(CODE[1]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_15(CODE[5]), STR_16(CODE[5]), STR_17(CODE[4]), STR_18(CODE[4]), 
		 -> STR_19(CODE[4]), STR_20(CODE[5]), STR_21(CODE[6]), STR_22(CODE[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_14(CODE[5]), STR_26(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6975	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S3923$buffer	PTR unsigned char  size(2) Largest target is 0

    S3923$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_23(CODE[6]), STR_24(CODE[5]), STR_25(CODE[19]), STR_27(CODE[19]), 
		 -> STR_28(CODE[17]), STR_29(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[17]), 
		 -> runGAME@text(BANK1[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_15(CODE[5]), 
		 -> STR_16(CODE[5]), STR_17(CODE[4]), STR_18(CODE[4]), STR_19(CODE[4]), 
		 -> STR_20(CODE[5]), STR_21(CODE[6]), STR_22(CODE[1]), STR_36(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_15(CODE[5]), 
		 -> STR_16(CODE[5]), STR_17(CODE[4]), STR_18(CODE[4]), STR_19(CODE[4]), 
		 -> STR_20(CODE[5]), STR_21(CODE[6]), STR_22(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_30(CODE[4]), STR_33(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_14(CODE[5]), STR_23(CODE[6]), STR_24(CODE[5]), STR_25(CODE[19]), 
		 -> STR_26(CODE[5]), STR_27(CODE[19]), STR_28(CODE[17]), STR_29(CODE[19]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_14(CODE[5]), STR_23(CODE[6]), STR_24(CODE[5]), STR_25(CODE[19]), 
		 -> STR_26(CODE[5]), STR_27(CODE[19]), STR_28(CODE[17]), STR_29(CODE[19]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_14(CODE[5]), STR_23(CODE[6]), STR_24(CODE[5]), STR_25(CODE[19]), 
		 -> STR_26(CODE[5]), STR_27(CODE[19]), STR_28(CODE[17]), STR_29(CODE[19]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runUART->_printf
    _runPWM->___awdiv
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _rand->___lmul
    _runDAC->_printf
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _utoa->_pad
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->___awdiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    ___awdiv->_rand
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_runUART
    _runUART->_printf
    _runGAME->_sprintf
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___flneg
    ___cosdf->___fladd
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  435835
                                            154 BANK0      4     4      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGAME
                            _runGPIO
                           _runMUSIC
                             _runPWM
                            _runUART
 ---------------------------------------------------------------------------------
 (1) _runUART                                             40    40      0   63853
                                            114 BANK0     40    40      0
                             _printf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _runPWM                                               4     4      0    1304
                                             31 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _runMUSIC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             31    31      0     495
                                              6 COMRAM    31    31      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runGAME                                             44    44      0   68685
                                            135 BANK0      2     2      0
                                              0 BANK1     42    42      0
                     _LCD_ShowString
                            ___awdiv
                            ___lbdiv
                               _rand
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     456
                                             17 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     331
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0  153096
                                            114 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   68874
                                             68 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   16012
                                              4 BANK0     32    28      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   27720
                                             36 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   16096
                                              4 BANK0     28    24      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     3      4   63191
                                             83 COMRAM     1     1      0
                                            110 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0     130
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   79147
                                            135 BANK0      2     2      0
                                              0 BANK1     30    30      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         54    53      1   67060
                                            135 BANK0      3     2      1
                                              0 BANK1     51    51      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12   64316
                                            110 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5   62888
                                            103 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   62082
                                             89 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                10     6      4    6310
                                             31 COMRAM    10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     412
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2110
                                             15 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1362
                                             11 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   41068
                                             36 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     463
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             69 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             81 COMRAM     2     2      0
                                              4 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    8147
                                              4 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6862
                                             69 COMRAM    12     4      8
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     875
                                             32 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8273
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    7673
                                             31 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4963
                                             22 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1428
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                             23 COMRAM     8     4      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    1936
                                              6 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      31
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              6 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
               _rand (ARG)
                 ___lmul
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
           _utoa
             ___lwdiv
             ___lwmod
             _pad
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGAME
     _LCD_ShowString
     ___awdiv
     ___lbdiv
     _rand
     _sprintf
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *
   _runMUSIC
   _runPWM
     ___awdiv
   _runUART
     _printf
     _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      22       9       13.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     33      F6       7       96.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRlllllh     21      0       0      52        0.0%
BITBIGSFRlllllh     10      0       0      51        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRlllllh      C      0       0      53        0.0%
BITBIGSFRhhllhl      A      0       0      44        0.0%
BITBIGSFRhll         7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      45        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRllh         5      0       0      48        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhllhh      1      0       0      43        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     210      54        0.0%
DATA                 0      0     210       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 17 16:10:24 2024

              ___fldiv@aexp 0045                ___fldiv@bexp 0044                ___fldiv@sign 003D  
                        _C0 FEFD                          _C1 FEF9                          _C2 FEF5  
                        _C3 FEF1                          l61 2CD2                          l63 2CC4  
                        l56 2C80                          l66 2E4C                          l58 2C72  
                        _S1 FEDD                          l68 2D06                          _S2 FED9  
                        _S3 FED5                          _S4 FED1                ___awdiv@sign 001D  
       ___wmul@multiplicand 0008                         l123 44F6                         l140 47D4  
                       l132 4736                         l125 4504                         l126 4586  
                       l134 4744                         l151 50A0                         l143 47E2  
                       l303 40CE                         l231 2B36                         l152 50A2  
                       l136 4784                         l129 45A2                         l161 4FC6  
                       l146 5084                         l250 4EE4                         l242 2BD2  
                       l234 2B38                         l155 4F94                         l139 47D2  
                       l251 4EE8                         l149 5092                         l157 4FA2  
                       l245 4EC2                         l158 4FB8                         l270 50C6  
                       l350 511E                         l247 4ED0                         l248 4ED6  
                       l273 50D8                         l353 5110                         l521 3EA6  
                       l362 50E6                         l522 3FA4                         l356 5102  
                       l372 3E4E                         l365 512C                         l525 3F5E  
                       l462 34BE                         l534 3F92                         l526 3F20  
                       l359 50F4                         l703 512E                         l519 3E98  
                       l472 34AA                         l464 32FC                         l377 3E60  
                       l706 507C                         l378 3E76                         l538 3FBC  
                       l475 34D0                         l467 339C                         l476 34D2  
                       l717 4BC4                         l581 3C9E                         l718 4BD4  
                       l662 28D6                         l680 27DC                         l664 26DE  
                       l592 3CF8                         l673 277C                         l593 3D0A  
                       l674 288E                         l675 278C                         l579 3CE6  
                       l684 28C2                         l676 279C                         l677 27AC  
                       l589 3CD2                         l950 4892                         l678 27BC  
                       l687 28E8                         l679 27CC                         l688 28EA  
                       l937 4730                         l971 4294                         l980 4F22  
                       l965 49EA                         l976 42DA                         _GIE 7F97  
                       _PR2 0FBB                         _ISR 0008                         _abs 4FFC  
                       _pad 49EC                ___awmod@sign 000B                         prod 0FF3  
                       tosl 0FFD                         wreg 0FE8                  _TXSTA1bits 0FAC  
              ___flmul@aexp 0021                ___flmul@bexp 0026                ___flmul@sign 0020  
              ___flmul@temp 002B                ___flmul@prod 0027                        ?_ISR 0001  
                      ISR@i 0121                ___fltol@exp1 0053                        l1003 41D6  
                      l1112 4C94                        ?_abs 000C                        l1204 4AFC  
                      l1301 2516                        l1302 2504                        l1214 4C38  
                      l1207 4C30                        l1320 1B38                        l1330 1D94  
                      l1234 17A2                        l1251 18BC                        l1243 1A72  
                      l1235 1790                        l1324 1E9C                        l1260 198C  
                      l1236 1756                        l1261 197A                        l1414 4A24  
                      l1423 3A52                        l1327 1D2E                        l1504 39DA  
                      l1417 4A66                        l1425 3A5A                        l1337 1E5E  
                      l1329 1DA6                        l1521 44C8                        l1513 43F4  
                      l1361 3728                        l1610 502E                        l1426 3AA0  
                      l1290 2458                        l1602 43D8                        l1419 4A88  
                      l1451 04E4                        l1515 43FC                        l1276 4E20  
                      l1364 3884                        l1437 3B9E                        l1293 241C  
                      l1453 032A                        l1525 4938                        l1509 3A22  
                      l1197 4AF4                        l1630 4CEA                        l1607 5016  
                      l1375 381C                        l1288 25F8                        l1616 32C0  
                      l1448 0B4A                        l1384 4E66                        l1368 37C0  
                      l1481 092E                        l1529 4940                        l1299 249E  
                      l1619 3204                        l1636 4D8E                        l1556 10A6  
                      l1724 36D0                        l1740 20C0                        l1741 225E  
                      l1663 50C2                        l1671 4B6A                        l1648 466C  
                      l1656 4EAA                        l1592 4DD8                        l1497 392A  
                      l1753 30AA                        l1690 15B0                        l1770 4F90  
                      l1764 4F5A                        l1758 4FFA                        l7000 32A0  
                      l6210 50D4                        l7002 32B0                        l7010 4D60  
                      l6220 45F0                        l6212 45A4                        l7020 3A46  
                      l6300 16EC                        l7012 4D64                        l7100 0254  
                      l6222 4626                        l6214 45B6                        l7030 3A94  
                      l7022 3A62                        l6310 173E                        l6302 16F0  
                      l6230 15CE                        l7014 4D70                        l7006 4D40  
                      l7110 02B0                        ?_pad 0017                        l6208 50C6  
                      l6216 45C8                        l7040 3AEA                        l7032 3A9C  
                      l7024 3A72                        l6400 19B6                        l6320 1782  
                      l6312 174E                        l6304 16F4                        l6240 1602  
                      l6232 15D0                        l7008 4D54                        l7016 4D74  
                      l7200 07B2                        l7112 02B6                        l7104 0274  
                      l8000 3CFE                        l6218 45D2                        l7050 3B3E  
                      l7042 3AF0                        l7034 3AA8                        l7026 3A78  
                      l7018 3A24                        l6410 1A32                        l6402 19F0  
                      l6322 1784                        l6314 1764                        l6306 16F8  
                      l6250 1634                        l6234 15E0                        l6242 160A  
                      l6226 15B2                        l7202 0808                        l7210 085A  
                      l7130 0340                        l7114 02BE                        l7106 029A  
                      l7122 02DA                        l8010 3E78                        l8002 3D04  
                      l7052 3B58                        l7044 3AF6                        l7036 3AB2  
                      l7028 3A88                        l6500 2396                        l6420 1A52  
                      l6412 1A36                        l6404 19F2                        l6340 180C  
                      l6332 17D4                        l6324 178E                        l6316 1770  
                      l6308 1722                        l6260 166A                        l6252 163A  
                      l6244 161A                        l6236 15F0                        l6228 15C0  
                      l7220 088C                        l7212 086A                        l7204 080E  
                      l7140 0436                        l7132 0374                        l7124 02F4  
                      l7108 02AC                        l8100 2908                        l8020 3ED0  
                      l8012 3E7A                        l8004 3D06                        l6430 4E74  
                      l7054 3B68                        l7038 3AB8                        l7046 3B12  
                      l6510 23E8                        l6502 23B0                        l6422 1A60  
                      l6414 1A44                        l6406 1A02                        l6342 1810  
                      l6334 17E4                        l6326 17B0                        l6350 1830  
                      l6318 1774                        l6270 16A6                        l6262 167A  
                      l6254 1648                        l6246 1620                        l6238 1600  
                      l7230 095E                        l7222 0906                        l7214 0872  
                      l7206 0842                        l7150 04EC                        l7142 046A  
                      l7134 03B2                        l7070 017A                        l7062 0152  
                      l7310 39BC                        l7302 394C                        l8110 2922  
                      l8102 290A                        l8030 3F2E                        l8022 3EEC  
                      l8014 3E94                        l8006 3D08                        l6432 4E86  
                      l7056 3B6E                        l7048 3B2C                        l6520 2444  
                      l6512 23F8                        l6504 23C0                        l6600 1AE2  
                      l6424 1A62                        l6416 1A4A                        l6408 1A12  
                      l6352 1856                        l6360 18AC                        l6344 181E  
                      l6336 17F2                        l6328 17C0                        l6280 16C4  
                      l6272 16B4                        l6264 167C                        l6256 164A  
                      l6248 1632                        l7240 0984                        l7232 0962  
                      l7224 0926                        l7216 0878                        l7208 0856  
                      l7160 051E                        l7152 04FA                        l7144 0472  
                      l7136 03E4                        l7128 033A                        l7080 01D0  
                      l7072 019E                        l7064 0158                        l7320 3A04  
                      l7304 3960                        l7312 39C0                        l7400 3854  
                      l8120 2930                        l8112 2928                        l8104 290C  
                      l8200 2672                        l8040 3F6C                        l8032 3F40  
                      l8024 3EFA                        l8016 3E96                        l6434 4E8A  
                      l7058 3B7E                        l6530 2484                        l6522 2446  
                      l6514 240C                        l6506 23D0                        l6450 228C  
                      l6442 2260                        l6610 1B22                        l6602 1AF0  
                      l6418 1A4C                        l6370 1900                        l6362 18D2  
                      l6354 188A                        l6346 1820                        l6338 1800  
                      l6290 16D8                        l6282 16C8                        l6274 16B8  
                      l6258 165A                        l6266 1684                        l7250 09B8  
                      l7242 098A                        l7234 0968                        l7226 0940  
                      l7218 0880                        l7162 0530                        l7170 0570  
                      l7154 0506                        l7138 0422                        l7090 0220  
                      l7082 01DC                        l7074 01A8                        l7066 0168  
                      l7306 3964                        l7330 4416                        l7322 43DA  
                      l7410 0B4C                        l7402 3864                        l8130 2A18  
                      l8122 294C                        l8114 292A                        l8106 290E  
                      l8210 26C2                        l8202 2672                        l8050 3FB8  
                      l8042 3F84                        l8034 3F48                        l8026 3F12  
                      l8018 3EC4                        l6428 4E68                        l6540 24C0  
                      l6532 248E                        l6524 2456                        l6516 241A  
                      l6508 23E0                        l6460 22C6                        l6452 229C  
                      l6444 226C                        l6700 1E80                        l6620 1B6C  
                      l6612 1B28                        l6604 1AF2                        l6380 192A  
                      l6372 190E                        l6364 18E2                        l6356 188C  
                      l6348 182A                        l6292 16DC                        l6284 16CC  
                      l6276 16BC                        l6268 1694                        l7252 09BE  
                      l7236 0970                        l7228 094E                        l7244 0990  
                      l7260 0A56                        l7180 0658                        l7172 0578  
                      l7164 053E                        l7156 0510                        l7148 04B2  
                      l7092 0224                        l7084 01E4                        l7076 01B0  
                      l7068 0176                        l6436 5058                        l7316 39EC  
                      l7308 3986                        l7332 441C                        l7340 446A  
                      l7324 43E8                        l7500 0E4A                        l7420 0B94  
                      l7412 0B70                        l7404 3872                        l8060 32DA  
                      l8140 2B18                        l8132 2A80                        l8124 295C  
                      l8116 292C                        l8108 2910                        l8220 2728  
                      l8212 26D4                        l8204 2672                        l8052 3FBA  
                      l8036 3F58                        l8300 2C20                        l6550 2532  
                      l6542 24CE                        l6534 249C                        l6526 2468  
                      l6518 2426                        l6470 22F2                        l6462 22CC  
                      l6454 22AC                        l6446 227A                        l6702 1E82  
                      l6630 1BBC                        l6622 1B78                        l6614 1B48  
                      l6606 1B02                        l6390 195C                        l6382 193A  
                      l6374 1910                        l6358 189C                        l6294 16E0  
                      l6286 16D0                        l6278 16C0                        l6710 4DDA  
                      l7270 0AD6                        l7262 0A74                        l7254 0A16  
                      l7246 09A2                        l7238 0980                        l7190 0716  
                      l7182 068C                        l7174 0588                        l7166 0556  
                      l7158 0518                        l7094 022A                        l7078 01C0  
                      l7086 01E8                        l6438 5074                        l7350 4894  
                      l7318 3A00                        l7342 447C                        l7334 4442  
                      l7326 4404                        l7510 0EE4                        l7502 0E56  
                      l7422 0B96                        l7430 0BCC                        l7414 0B7C  
                      l7406 3874                        l8070 330A                        l8062 32DC  
                      l8150 2B7C                        l8142 2B46                        l8134 2AA4  
                      l8126 29AC                        l8118 292E                        l8222 273A  
                      l8230 2752                        l8214 26DC                        l8206 267E  
                      l8046 3FA0                        l8038 3F5E                        l8310 2C8E  
                      l8302 2C2E                        l6720 4680                        l6560 259E  
                      l6552 2540                        l6544 24FC                        l6528 247E  
                      l6536 24AE                        l6480 232C                        l6472 2302  
                      l6464 22D2                        l6456 22AE                        l6448 227C  
                      l6800 4980                        l6704 1E88                        l6640 1BFE  
                      l6632 1BC8                        l6624 1B82                        l6616 1B58  
                      l6608 1B12                        l6392 1972                        l6376 191E  
                      l6368 18F6                        l6384 193C                        l6296 16E4  
                      l6288 16D4                        l6712 4DEC                        l7280 0B2A  
                      l7272 0AE4                        l7264 0A90                        l7256 0A4A  
                      l7248 09B4                        l7192 072C                        l7176 059C  
                      l7184 0692                        l7168 0568                        l7096 0232  
                      l7088 020E                        l7360 4906                        l7352 489C  
                      l7344 448E                        l7336 4448                        l7328 440C  
                      l7520 0F2E                        l7504 0E5E                        l7440 0C2C  
                      l7432 0BDC                        l7424 0BA6                        l7416 0B88  
                      l8080 33C8                        l8072 3328                        l8064 32E8  
                      l8056 32C2                        l8160 2BAA                        l8152 2B82  
                      l8144 2B5A                        l8136 2B0C                        l8128 29BE  
                      l8240 2818                        l8224 2742                        l8232 276A  
                      l8216 26EC                        l8208 26A4                        l8048 3FB4  
                      l8312 2CA6                        l8304 2C3C                        l6730 46A6  
                      l6722 4688                        l6570 25EC                        l6562 25B8  
                      l6554 256A                        l6538 24BC                        l6482 2342  
                      l6474 2312                        l6466 22E0                        l6458 22B6  
                      l6802 49AE                        l6706 1E8C                        l6650 1C60  
                      l6642 1C0A                        l6634 1BD4                        l6626 1B98  
                      l6378 1926                        l6386 194A                        l6298 16E8  
                      l7274 0AFC                        l7266 0A98                        l7258 0A52  
                      l7194 075E                        l7186 06B0                        l7178 0600  
                      l7098 024A                        l7354 48BE                        l7362 4912  
                      l7290 38B4                        l7346 44A8                        l7338 444E  
                      l7522 0F3C                        l7506 0E80                        l7514 0EF6  
                      l7450 0C76                        l7442 0C38                        l7434 0BF0  
                      l7418 0B8C                        l7370 3738                        l8090 349C  
                      l8082 3432                        l8074 3392                        l8066 32F2  
                      l8058 32CA                        l7610 1EF4                        l7602 1E9E  
                      l8162 2BAE                        l8154 2B90                        l8146 2B68  
                      l8250 28B4                        l8242 2836                        l8234 27EC  
                      l8226 274A                        l8218 270A                        l8170 2638  
                      l8330 2D5E                        l8322 2D18                        l8314 2CB4  
                      l8306 2C54                        l6740 46DE                        l6732 46AE  
                      l6724 468C                        l6716 466E                        l6572 25EE  
                      l6564 25D4                        l6548 2526                        l6556 256E  
                      l6484 2352                        l6492 2372                        l6476 2314  
                      l6468 22E2                        l6804 49BE                        l6820 4254  
                      l6812 41D8                        l6660 1CF6                        l6652 1C6C  
                      l6644 1C1A                        l6636 1BE2                        l6628 1BA4  
                      l6580 1A74                        l6396 199C                        l6388 194E  
                      l7276 0B0C                        l7268 0AA6                        l7196 076E  
                      l7188 06E4                        l7356 48CA                        l7292 38B8  
                      l7284 3886                        l6900 4ADE                        l7524 0F4E  
                      l7532 0F66                        l7516 0F06                        l7508 0EB2  
                      l7460 0CC8                        l7452 0C7E                        l7444 0C4C  
                      l7436 0BFE                        l7428 0BAE                        l7380 3776  
                      l7372 374E                        l7364 36D4                        l8084 3468  
                      l8076 339A                        l8068 32FA                        l7620 2062  
                      l7612 1F18                        l7604 1EBE                        l8156 2B96  
                      l8148 2B6E                        l8164 2BC0                        l8236 27F0  
                      l8180 264E                        l8172 263A                        l8340 2D8A  
                      l8324 2D34                        l8316 2CE0                        l8308 2C62  
                      l8260 2BEE                        l6750 470A                        l6742 46E4  
                      l6734 46C0                        l6726 469A                        l6718 4672  
                      l6566 25D8                        l6558 2588                        l6494 2382  
                      l6486 235A                        l6478 231C                        l6806 49E2  
                      l6830 42D8                        l6822 4262                        l6814 4206  
                      l6670 1D4C                        l6662 1D14                        l6654 1C88  
                      l6646 1C34                        l6638 1BEE                        l6590 1AB0  
                      l6582 1A80                        l6398 19A8                        l7278 0B22  
                      l7198 077E                        l7358 48E6                        l7294 38F6  
                      l7286 38A0                        l6902 4AE6                        l6910 4BE8  
                      l7542 0FF4                        l7526 0F56                        l7534 0F84  
                      l7470 0D36                        l7462 0CE8                        l7446 0C5C  
                      l7438 0C08                        l7390 37FE                        l7382 37A8  
                      l7366 36E4                        l8094 34B8                        l8086 3476  
                      l8078 33AA                        l7630 20F0                        l7622 2072  
                      l7614 1F84                        l7606 1ED4                        l7710 11C0  
                      l7702 1140                        l8158 2BA4                        l8254 28D0  
                      l8238 27F2                        l8246 2848                        l8190 265C  
                      l8182 2650                        l8174 2646                        l8166 25FA  
                      l8342 2D98                        l8334 2D66                        l8326 2D38  
                      l8318 2CF8                        l8270 2BFA                        l8262 2BF0  
                      l6744 46FA                        l6736 46C8                        l6752 4710  
                      l6728 46A2                        l6760 47E4                        l6568 25E6  
                      l6496 2382                        l6488 235E                        l6808 49E8  
                      l6824 4274                        l6816 4216                        l6680 1DB6  
                      l6672 1D50                        l6664 1D1E                        l6656 1CB2  
                      l6648 1C44                        l6592 1AC0                        l6584 1A8E  
                      l7296 3904                        l7288 38A8                        l6904 4AE8  
                      l6920 4C24                        l6912 4BF0                        l7552 1056  
                      l7544 100A                        l7536 0FA4                        l7528 0F5E  
                      l7480 0DA4                        l7472 0D50                        l7464 0D04  
                      l7448 0C6E                        l7456 0C86                        l7800 4E38  
                      l7392 380C                        l7384 37AA                        l7376 3762  
                      l7368 36F2                        l8088 3484                        l7640 224A  
                      l7632 215C                        l7624 20A4                        l7616 1FAA  
                      l7608 1ED6                        l7704 115E                        l8096 28EC  
                      l8248 289C                        l8192 2664                        l8184 2652  
                      l8176 2646                        l8168 2628                        l8360 2E04  
                      l8352 2DC4                        l8336 2D82                        l8328 2D42  
                      l8280 2C04                        l8272 2BFC                        l8264 2BF2  
                      l8256 2BD4                        l7650 4734                        l6754 4720  
                      l6746 4702                        l6738 46D0                        l6770 4810  
                      l6762 47E8                        l6930 4A1C                        l6826 4282  
                      l6818 4244                        l6690 1E18                        l6682 1DC2  
                      l6674 1D5E                        l6666 1D2C                        l6658 1CE8  
                      l6594 1AC6                        l6586 1A90                        l6834 4EEA  
                      l6850 4126                        l6842 40D0                        l7298 3922  
                      l6906 4AEE                        l6922 4C2A                        l6914 4BF8  
                      l7546 1028                        l7538 0FCC                        l7554 106E  
                      l7458 0CAC                        l7802 4E40                        l7394 382A  
                      l7386 37B6                        l7378 376A                        l7634 2182  
                      l7618 2002                        l7706 117C                        l7722 1258  
                      l8098 2900                        l8194 2666                        l8186 2654  
                      l8178 264A                        l7810 5106                        l8370 2E60  
                      l8354 2DE0                        l8346 2DA0                        l8290 2C0E  
                      l8282 2C06                        l8274 2BFE                        l8266 2BF4  
                      l8258 2BEC                        l7572 5080                        l7660 477E  
                      l7652 4746                        l6756 4728                        l6748 4704  
                      l6780 4848                        l6772 4818                        l6764 47F6  
                      l6940 4FFC                        l6932 4A30                        l6924 49EC  
                      l6828 42D2                        l6692 1E2C                        l6684 1DD0  
                      l6676 1D8C                        l6668 1D3E                        l6596 1AD6  
                      l6588 1AA0                        l6836 4F02                        l6852 4128  
                      l6844 40E8                        l6916 4C06                        l6908 4BD6  
                      l7484 0DC0                        l7476 0D68                        l7468 0D20  
                      l7804 4E56                        l7900 40CA                        l7396 382C  
                      l7388 37F2                        l7564 4FC8                        l7636 21DA  
                      l7628 20CC                        l7724 1268                        l7708 118C  
                      l7716 11FC                        l7732 1324                        l7580 4B9A  
                      l8196 266A                        l8188 265A                        l7812 50F8  
                      l7820 4F5C                        l8372 2E6E                        l8348 2DBC  
                      l8292 2C10                        l8284 2C08                        l8276 2C00  
                      l8268 2BF8                        l7670 47C0                        l7662 478A  
                      l7654 4752                        l6790 4882                        l6782 485E  
                      l6774 482A                        l6766 47FE                        l6942 500A  
                      l6934 4A44                        l6926 49FA                        l6694 1E46  
                      l6686 1DFA                        l6598 1ADC                        l6838 4F12  
                      l6854 4138                        l6950 4362                        l6918 4C1C  
                      l7494 0E0C                        l7486 0DD6                        l7478 0D88  
                      l7558 1080                        l7590 4DCE                        l7398 3830  
                      l7566 4FE8                        l7638 2232                        l7734 1342  
                      l7726 12B4                        l7718 1230                        l7582 4BA4  
                      l7574 4B6C                        l7830 4AFE                        l8198 266E  
                      l7814 50EA                        l7910 3D40                        l7822 4F68  
                      l8358 2DE8                        l8366 2E0C                        l8294 2C12  
                      l8286 2C0A                        l8278 2C02                        l7672 47C2  
                      l7656 4762                        l7648 4734                        l6792 488A  
                      l6784 4866                        l6776 4832                        l6768 4802  
                      l6936 4A48                        l6928 4A0E                        l6696 1E62  
                      l6688 1DFE                        l6880 41B6                        l6864 4162  
                      l6856 413C                        l6848 40FC                        l6952 436E  
                      l6944 42DC                        l7488 0DF4                        l7496 0E24  
                      l7584 4D90                        l7680 4EAE                        l7568 4FEA  
                      l7736 1360                        l7752 13E0                        l7728 12FC  
                      l7840 4C50                        l7576 4B7C                        l7832 4B3C  
                      l7808 5114                        l7816 50DC                        l7920 3D6E  
                      l7912 3D42                        l7904 3D0C                        l7824 4F6C  
                      l8368 2E4E                        l8296 2C16                        l8288 2C0C  
                      l7674 4F92                        l7658 476C                        l6786 486C  
                      l6778 483A                        l6938 4A74                        l6698 1E72  
                      l6882 41C6                        l6874 418A                        l6866 416C  
                      l6858 414A                        l6962 43D0                        l6946 42FC  
                      l6970 4C96                        l6890 4AA4                        l7498 0E28  
                      l7586 4D9C                        l7682 4EBC                        l7594 2E7A  
                      l7770 14BE                        l7754 13F0                        l7738 1370  
                      l7746 13A8                        l7762 1484                        l7690 10CE  
                      l7850 4C82                        l7842 4C58                        l7578 4B8A  
                      l7818 5122                        l7930 3DF2                        l7922 3D90  
                      l7914 3D4A                        l7906 3D36                        l7826 4F84  
                      l8298 2C1C                        l7676 4FA4                        l7668 478E  
                      l6788 4872                        l6796 4942                        l6876 4196  
                      l6868 4176                        l6948 433A                        l6956 437A  
                      l6980 30CC                        l6972 4CA4                        l6892 4AAC  
                      l7588 4DB2                        l7684 4EBE                        l7772 14E2  
                      l7764 149A                        l7756 1428                        l7692 10D0  
                      l7852 4C86                        l7844 4C5C                        l7836 4C3C  
                      l7940 3E70                        l7932 3DF6                        l7916 3D54  
                      l7908 3D3E                        l7870 44F4                        l7862 44CA  
                      l7678 4FB6                        l6798 4970                        l6878 41A6  
                      l6958 438C                        l6990 31B8                        l6982 3124  
                      l6974 4CB8                        l6966 4F24                        l6894 4AB4  
                      l6886 4A8A                        l7790 50A4                        l7598 34D4  
                      l7782 1556                        l7774 1506                        l7766 14AA  
                      l7758 145C                        l7694 10EE                        l7686 10A8  
                      l7854 4C88                        l7846 4C5E                        l7838 4C40  
                      l7934 3E12                        l7918 3D5C                        l7950 3BB2  
                      l7872 4506                        l7864 44D8                        l6992 31F4  
                      l6984 3138                        l6968 4F2C                        l6896 4AC2  
                      l6888 4A92                        l7880 3FC6                        l7792 50A8  
                      l7696 1104                        l7688 10B8                        l7856 4C8C  
                      l7848 4C6C                        l7936 3E2A                        l7928 3D98  
                      l7960 3BC2                        l7952 3BB4                        l7944 3BA0  
                      l7874 4584                        l7866 44E4                        l6986 3146  
                      l6994 3228                        l6978 30AC                        l6898 4AC8  
                      l7882 3FDC                        l7778 152E                        l7698 1118  
                      l7858 4C92                        l7938 3E4A                        l7970 3C2A  
                      l7962 3BCE                        l7954 3BB6                        l7946 3BAC  
                      l7876 4594                        l7868 44E6                        l6996 3264  
                      l7796 4E22                        l7884 3FEE                        l7892 400C  
                      l7788 1592                        l7980 3C66                        l7972 3C2E  
                      l7964 3BE0                        l7956 3BBE                        l7948 3BB0  
                      l6998 3278                        l7798 4E30                        l7886 3FF4  
                      l7894 402C                        l7878 3FC2                        l7990 3C82  
                      l7974 3C44                        l7966 3BF4                        l7958 3BC0  
                      l7896 40AE                        l7888 4006                        l7992 3CAC  
                      l7976 3C4E                        l7968 3C02                        l7898 40BC  
                      l7994 3CC4                        l7986 3C70                        l7978 3C60  
                      l7988 3C7E                        l7998 3CE0                        STR_1 FF59  
                      STR_2 FF13                        STR_3 FF48                        STR_4 FF9D  
                      STR_5 FF6A                        STR_6 FF13                        STR_7 FF8C  
                      STR_8 FF7B                        STR_9 FFAE                        u7000 15CE  
                      u7001 15CA                        u7010 15E0                        u7011 15DC  
                      _PEIE 7F96                        u7100 173A                        u7020 15F0  
                      u7101 1734                        u7021 15EC                        u7110 173C  
                      u7030 1632                        u7031 162E                        u8000 4282  
                      u7200 1856                        u7120 1764                        u7040 1648  
                      u8001 427E                        u7201 1852                        u7121 1760  
                      u7041 1644                        u8010 42D2                        u7210 189C  
                      u7130 1782                        u7050 165A                        u8011 42CE  
                      u7211 1898                        u7131 177E                        u7051 1656  
                      u8020 4F02                        u7300 1988                        u7220 18D2  
                      u7140 17A2                        u7060 166A                        u8100 4AA4  
                      u8021 4EFE                        u7301 1984                        u7221 18CE  
                      u7141 179E                        u7061 1666                        u8101 4AA0  
                      u7310 199C                        u7230 18E2                        u7150 17B0  
                      u7070 16A6                        u8030 40E8                        u8110 4AC2  
                      u7311 1998                        u7231 18DE                        u7151 17AC  
                      u7071 16A2                        u8031 40E4                        u8111 4ABE  
                      u8200 500A                        u7400 227A                        u7320 19B6  
                      u7240 190E                        u7160 17C0                        u7080 16B4  
                      u8040 411C                        u8120 4ADE                        u9000 36F2  
                      u8201 5006                        u7401 2276                        u7321 19B2  
                      u7241 190A                        u7161 17BC                        u7081 16B0  
                      u8121 4ADA                        u9001 36EE                        u7410 228C  
                      u7330 19F0                        u7250 191E                        u7170 17F2  
                      u7090 1722                        u8050 414A                        u8210 431C  
                      u8130 4BE8                        u9010 374E                        u7411 2288  
                      u7331 19EC                        u7251 191A                        u7171 17EE  
                      u7091 171E                        u8051 4146                        u8131 4BE4  
                      u9011 374A                        u7500 2444                        u7420 229C  
                      u7340 1A02                        u7260 193A                        u7180 1800  
                      u8060 415E                        u8220 433A                        u8300 30F4  
                      u8140 4C06                        u9100 0BDC                        u9020 37A4  
                      u7501 2440                        u7421 2298                        u7341 19FE  
                      u7261 1936                        u7181 17FC                        u8061 415A  
                      u8045 4112                        u8221 4336                        u8141 4C02  
                      u9101 0BD8                        u9021 37A0                        u7510 2468  
                      u7430 22E0                        u7350 1A12                        u7270 194A  
                      u7190 181E                        u8070 4186                        u8230 4362  
                      u8310 3124                        u8150 4C1C                        u9110 0BFE  
                      u9030 37EE                        u7511 2464                        u7431 22DC  
                      u7351 1A0E                        u7271 1946                        u7191 181A  
                      u8071 4182                        u8231 435E                        u8215 4312  
                      u8311 3120                        u8151 4C18                        u9111 0BFA  
                      u9031 37EA                        u8160 49FA                        u7600 2588  
                      u7520 247E                        u7440 22F2                        u7360 1A32  
                      u7280 195C                        u8080 41A6                        u8240 438C  
                      u8320 3146                        u8400 4D8E                        u9200 0F06  
                      u9120 0C2C                        u9040 380C                        u8161 49F6  
                      u7601 2584                        u7521 247A                        u7441 22EE  
                      u7361 1A2E                        u7281 1958                        u8081 41A2  
                      u8241 4388                        u8321 3142                        u8305 30EA  
                      u8401 4D8A                        u9201 0F02                        u9121 0C28  
                      u9041 3808                        u8170 4A1C                        u8410 3A34  
                      u7610 25B8                        u7530 249C                        u7450 2302  
                      u7370 1A44                        u7290 1972                        u8090 41B6  
                      u9210 0FA0                        u9130 0CC8                        u9050 381C  
                      u8171 4A18                        u8411 3A2E                        u7611 25B4  
                      u7531 2498                        u7451 22FE                        u7371 1A40  
                      u7291 196E                        u8091 41B2                        u9211 0F9C  
                      u9131 0CC4                        u9051 3818                        u9220 5092  
                      u8180 4A66                        u8420 3A36                        u7620 25E6  
                      u7540 24BC                        u7460 2342                        u7700 1B58  
                      u7380 1A60                        u8260 43C6                        u8340 31B4  
                      u8500 0176                        u9140 0CE4                        u9060 382A  
                      u9300 2072                        u9221 508E                        u8181 4A62  
                      u7621 25E2                        u7541 24B8                        u7461 233E  
                      u7701 1B54                        u7381 1A5C                        u8261 43C0  
                      u8341 31B0                        u8501 0172                        u9141 0CE0  
                      u9061 3826                        u9301 206E                        u9230 50A0  
                      u7390 4EAA                        u8190 4A74                        u8430 3A46  
                      u7550 24CE                        u7470 2382                        u7710 1CD2  
                      u7630 1A8E                        u8270 43C8                        u8350 31D8  
                      u8510 01C0                        u9150 0D84                        u9070 3864  
                      u9310 225A                        u9231 509C                        u7391 4EA6  
                      u8191 4A70                        u8431 3A42                        u7551 24CA  
                      u7471 237E                        u7631 1A8A                        u8255 439E  
                      u8335 315A                        u8511 01BC                        u9151 0D80  
                      u9071 3860                        u9311 2256                        u9320 4744  
                      u8440 3A72                        u7560 24FC                        u7480 23F8  
                      u7800 1E46                        u7720 1D2C                        u7640 1AA0  
                      u8360 31F4                        u8336 3164                        u8280 4F5A  
                      u8600 0422                        u8520 01D0                        u9160 0E4A  
                      u9080 3872                        u9400 4ED0                        u9240 4B8A  
                      u9321 4740                        u8441 3A6E                        u7561 24F8  
                      u7481 23F4                        u7801 1E42                        u7721 1D28  
                      u7641 1A9C                        u8361 31F0                        u8337 3174  
                      u8281 4F56                        u8601 041E                        u8521 01CC  
                      u9161 0E46                        u9081 386E                        u9401 4ECC  
                      u9241 4B86                        u9330 4762                        u8450 3A88  
                      u7570 2512                        u7490 241A                        u7810 1E80  
                      u7730 1D4C                        u7650 1AB0                        u8370 3248  
                      u8290 4CA4                        u8610 04AE                        u8530 020E  
                      u9170 0E80                        u9090 0B70                        u9410 4EE4  
                      u9250 4BC4                        u9331 475E                        u8451 3A84  
                      u7571 250E                        u7491 2416                        u7811 1E7C  
                      u7731 1D48                        u7715 1CC8                        u7651 1AAC  
                      u8355 31CE                        u8291 4CA0                        u8611 04AA  
                      u8531 020A                        u9171 0E7C                        u9091 0B6C  
                      u9411 4EE0                        u9251 4BC0                        u9340 477E  
                      u7820 4680                        u7900 482A                        u8460 3B2C  
                      u7580 2526                        u7740 1D5E                        u7660 1AF0  
                      u8380 3264                        u8700 076E                        u8620 04E4  
                      u8540 0220                        u9180 0EB2                        u9260 4DCE  
                      u9500 1342                        u9420 10CA                        u9341 477A  
                      u7821 467C                        u7901 4826                        u8461 3B28  
                      u7581 2522                        u7741 1D5A                        u7661 1AEC  
                      u8381 3260                        u8701 076A                        u8621 04E0  
                      u8541 021C                        u9181 0EAE                        u9261 4DCA  
                      u9501 133E                        u9421 10C4                        u9350 47BC  
                      u7830 469A                        u7910 4848                        u6950 50D4  
                      u8470 3B3E                        u7590 2540                        u7750 1D8C  
                      u7670 1B02                        u8390 32A0                        u8710 0808  
                      u8630 04FA                        u8550 029A                        u9190 0EE4  
                      u9270 1ED0                        u9510 1360                        u9430 10CC  
                      u7831 4696                        u7911 4844                        u6951 50D0  
                      u8471 3B3A                        u7591 253C                        u7751 1D88  
                      u7671 1AFE                        u8391 329C                        u8375 323E  
                      u8711 0804                        u8631 04F6                        u8551 0296  
                      u9191 0EE0                        u9271 1ECA                        u9511 135C  
                      u9360 47D2                        u7840 46C0                        u7920 485E  
                      u6960 45B6                        u8480 3B58                        u7760 1DA2  
                      u7680 1B12                        u8800 0AF8                        u8720 0856  
                      u8640 0530                        u8560 02AC                        u9280 1ED2  
                      u9520 1370                        u9440 10EE                        u9361 47CE  
                      u7841 46BC                        u7921 485A                        u6961 45B2  
                      u8481 3B54                        u7761 1D9E                        u7681 1B0E  
                      u8721 0852                        u8641 052C                        u8561 02A8  
                      u9521 136C                        u9441 10EA                        u9370 47E2  
                      u7850 46DE                        u7930 4882                        u6970 45C8  
                      u8490 3B68                        u7770 1DB6                        u7690 1B48  
                      u8810 0B0C                        u8730 0906                        u8650 053E  
                      u8570 0326                        u9290 1EF4                        u9530 13F0  
                      u9450 1104                        u9610 4F84                        u9371 47DE  
                      u7851 46DA                        u7931 487E                        u6971 45C4  
                      u8491 3B64                        u7771 1DB2                        u7691 1B44  
                      u8811 0B08                        u8731 0902                        u8651 053A  
                      u8571 0322                        u9291 1EF0                        u9531 13EC  
                      u9451 1100                        u9611 4F80                        u9380 4FA2  
                      u7860 46FA                        u6980 45F0                        u7940 4970  
                      u7780 1DD0                        u8740 0940                        u8660 0568  
                      u8580 03B2                        u8900 39DA                        u8820 38A0  
                      u9700 4006                        u9540 149A                        u9460 115E  
                      u9620 4B5C                        u9381 4F9E                        u9357 47B2  
                      u7861 46F6                        u6981 45EC                        u7941 496C  
                      u7781 1DCC                        u8741 093C                        u8661 0564  
                      u8581 03AE                        u8901 39D6                        u8821 389C  
                      u9701 4002                        u9541 1496                        u9461 115A  
                      u9605 512A                        u9390 4FC6                        u7870 4720  
                      u6990 4626                        u7950 49AE                        u7790 1E18  
                      u8750 094E                        u8670 06B0                        u8590 03E4  
                      u8910 39E8                        u8830 38E6                        u9470 117C  
                      u9630 4C50                        u9606 512C                        u9391 4FC2  
                      u7871 471C                        u6991 4622                        u7951 49AA  
                      u7791 1E14                        u8751 094A                        u8671 06AC  
                      u8591 03E0                        u8911 39E4                        u9471 1178  
                      u9631 4C4C                        u9711 3D66                        u7880 47F6  
                      u7960 49E2                        u8760 09A2                        u8680 0716  
                      u8920 3A22                        u8840 38F6                        u9480 118C  
                      u9640 4C6C                        u9800 3BE0                        u7881 47F2  
                      u7961 49DE                        u8761 099E                        u8681 0712  
                      u8921 3A1E                        u8841 38F2                        u9481 1188  
                      u9641 4C68                        u9625 4B52                        u9721 3D78  
                      u9801 3BDC                        u7890 4810                        u7970 4206  
                      u8770 0A74                        u8690 075E                        u8850 3904  
                      u8930 43E8                        u9490 1268                        u9650 4C82  
                      u9810 3C44                        u7891 480C                        u7971 4202  
                      u8771 0A70                        u8691 075A                        u8851 3900  
                      u8931 43E4                        u9491 1264                        u9651 4C7E  
                      u9555 511C                        u9811 3C40                        u9660 4504  
                      u7980 4244                        u8780 0A90                        u8860 3922  
                      u8940 447C                        u9556 511E                        u9900 3F2E  
                      u9820 3C9E                        u9661 4500                        u7981 4240  
                      u8781 0A8C                        u8861 391E                        u8837 38DC  
                      u8941 4478                        u9565 510E                        u9901 3F2A  
                      u9821 3C9A                        u9670 4594                        u7990 4262  
                      u8790 0AF6                        u8870 3948                        u8950 448E  
                      u9566 5110                        u9750 3DEE                        u9910 3F40  
                      u9830 3CAC                        u9671 4590                        u7991 425E  
                      u8791 0AF0                        u8871 3944                        u8951 448A  
                      u9575 5100                        u9751 3DE8                        u9911 3F3C  
                      u9831 3CA8                        u8880 3982                        u8960 44A8  
                      u9576 5102                        u9760 3DF0                        u9744 3DD8  
                      u9920 3F58                        u9840 3CD2                        u8881 397E  
                      u8961 44A4                        u9681 3FD0                        u9585 50F2  
                      u9745 3DD4                        u9921 3F54                        u9841 3CCE  
                      u8970 48BE                        u8890 39A8                        u9690 3FEE  
                      u9586 50F4                        u9770 3E12                        u9738 3DAA  
                      u9930 3F6C                        u9850 3CE0                        u8971 48BA  
                      u9691 3FEA                        u9595 50E4                        u9771 3E0E  
                      u9739 3DF2                        u9931 3F68                        u9851 3CDC  
                      u8980 4938                        u9596 50E6                        u9780 3E4A  
                      u9940 3F92                        u9860 3CF8                        u8981 4934  
                      u9781 3E46                        u9941 3F8E                        u9861 3CF4  
                      u8990 36E4                        u9790 3E60                        u9950 3FA0  
                      u9870 3EA6                        u8991 36E0                        u9791 3E5C  
                      u9951 3F9C                        u9871 3EA2                        u9960 3FB4  
                      u9880 3EFA                        u8897 399E                        u9961 3FB0  
                      u9881 3EF6                        _TMR1 0FCE                        u9890 3F20  
                      u9971 32E2                        u9891 3F1C                        u9980 330A  
                      u9981 3306                        u9990 33AA                        u9991 33A6  
                      abs@a 000C                        _dbuf 0127                        _half FEED  
                      _labs 4C96                        _main 2BD4                        _dtoa 3A24  
                      _rand 4AFE                        _seed 0197                        _prec 0057  
                      _sinf 10A8                        pad@i 001E                        pad@p 001B  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf1 0FE7  
                      indf2 0FDF                        fsr1l 0FE1                        fsr2l 0FD9  
                      _stoa 3886                        btemp 005A                        _utoa 43DA  
             ___fpclassifyf 42DC                        prodh 0FF4                        prodl 0FF3  
                      start 014E             ___fldiv@new_exp 003E                ___param_bank 0000  
                     ??_ISR 0001              _LCD_ShowString 4732                       ??_abs 000E  
                     ??_pad 001D            __end_of_LCD_Init 45A4            __end_of_LCD_Send 50A4  
             ___fltol@sign1 0052                       ?_labs 0006             __end_of___fladd 1A74  
                     ?_main 0001                       ?_dtoa 0020             __end_of___fldiv 25FA  
                     ?_rand 0012             __end_of___awdiv 4732             __end_of___cosdf 36D2  
           __end_of___lbdiv 4C96             __end_of___flneg 4F24                       STR_10 FF13  
                     STR_11 FF13                       STR_12 FF13                       STR_20 FFD7  
                     STR_13 FF13                       STR_21 FFC6                       STR_30 FFEB  
                     STR_14 FFE6                       STR_22 FFD6                       STR_23 FFCC  
                     STR_15 FFDC                       STR_24 FFCD                       STR_16 FFE1  
                     STR_33 FFEF                       STR_25 FF24                       STR_17 FFFB  
                     STR_26 FFD2                       STR_18 FFF7                       STR_27 FF11  
                     STR_19 FFF3                       STR_36 FFBF                       STR_28 FF37  
           __end_of___awmod 4894                       STR_29 FF11                       ?_sinf 00A4  
           __end_of___flmul 1E9E             __end_of___flsub 4E22             __end_of___fltol 41D8  
                     ?_stoa 0010                       u10000 3484                       u10001 3480  
                     u10010 34AA                       u10011 34A6                       u10020 34B8  
                     u10100 2BA4                       u10021 34B4                       u10101 2BA0  
                     u10030 34D0                       u10110 2BD2                       u10031 34CC  
                     u10111 2BCE                       ?_utoa 0020                       u10040 295C  
                     u10200 2C62                       u10041 2958                       u10121 2640  
                     u10201 2C5E                       u10050 29BE                       u10210 2C80  
                     u10051 29BA                       u10131 2678                       u10211 2C7C  
                     u10060 2B46                       u10140 26EC                       u10220 2C8E  
                     u10061 2B42                       u10141 26E8                       u10221 2C8A  
                     u10070 2B68                       u10150 289C                       u10230 2CB4  
                     u10071 2B64                       u10151 2898                       u10231 2CB0  
                     u10080 2B7C                       u10160 28C2                       u10240 2CD2  
                     u10081 2B78                       u10161 28BE                       u10241 2CCE  
                     u10090 2B90                       u10170 28D0                       u10250 2CE0  
                     u10091 2B8C                       u10171 28CC                       u10251 2CDC  
                     u10307 2C48                       u10180 28E8                       u10260 2D06  
                     u10181 28E4                       u10261 2D02                       u10317 2C9A  
                     u10270 2D14                       u10190 2C3C                       u10407 44EC  
                     u10271 2D10                       u10327 2CEC                       u10191 2C38  
                     u10280 2E60                       u10417 459A                       u10337 3CB8  
                     u10281 2E5C                       u10347 3F04             ___awdiv@divisor 001A  
                     u10357 3F76                       u10367 3E1C                       u10377 28A8  
                     u10297 2BE0                       u10387 2BB6                       u10397 3490  
                     _RC1IE 7CED                       _RC1IF 7CF5             __end_of___lwdiv 4AFE  
           __end_of___sindf 30AC             __end_of___lwmod 4C3A                       i2l412 0088  
                     i2l414 0074                       i2l423 0142                ___sindf$4530 0078  
           ___awdiv@counter 001C                ___sindf$4528 0070                ___sindf$4529 0074  
              vfpfcnvrt@fmt 00BB                       _TX1IF 7CF4         ___lmul@multiplicand 000A  
           __end_of_pio2_1t FEE5                       _fabsf 4FC8                       _flags 0059  
                     _gmail 0177         read_prec_or_width@c 000E         read_prec_or_width@n 000F  
                     _fputc 45A4                       _fputs 4E68                       labs@a 0006  
                     pad@fp 0017                       _width 0055             __end_of_invpio2 FEED  
                     _putch 50C4                       dtoa@d 0022                       dtoa@i 002B  
                     dtoa@p 0028                       dtoa@s 002A                       dtoa@w 0026  
      __end_of_LED1_Control 5120             __end_of_runGAME 28EC             __end_of_runGPIO 3E78  
                     pclath 0FFA                       tablat 0FF5             __end_of_runUART 3D0C  
      __end_of_LED2_Control 5112                       sinf@n 00B0                       sinf@x 00A4  
                     sinf@y 00B6                       plusw1 0FE3                       plusw2 0FDB  
                     stoa@l 001C                       stoa@p 0016                       stoa@s 0012  
                     stoa@w 0018                       ttemp5 005B                       ttemp6 005E  
                     ttemp7 0062                       utoa@d 0022        __end_of_LED3_Control 5104  
                     utoa@i 0028                       utoa@p 0026                       utoa@w 0024  
                     status 0FD8                       wtemp8 005B             __end_of_sprintf 4E68  
            ?___fpclassifyf 0006             ___lbdiv@divisor 0006        __end_of_LED4_Control 50F6  
           ___lbdiv@counter 0008        __end_of_LED5_Control 50E8             runUART@reversed 00D4  
      __end_of_LED6_Control 512E             __initialization 4CEC      __end_of_LCD_ShowString 47E4  
              __end_of_half FEF1                __end_of_labs 4CEC                __end_of_main 2E7A  
              __end_of_dtoa 3BA0                __end_of_rand 4B6C                __end_of_sinf 15B2  
              __end_of_stoa 3A24                __end_of_utoa 44CA                LCD_Send@data 0006  
                    ??_labs 000A                      ??_main 00FA                      ??_dtoa 0024  
                    ??_rand 0014                      ??_sinf 0054                      ??_stoa 0014  
                    ??_utoa 0024           __end_of_LCD_Clear 4FC8               __activetblptr 0002  
__end_of_read_prec_or_width 4942                ?_moveDisplay 00E7                      ?_fabsf 0006  
                    ?_fputc 0007                      ?_fputs 0010                      _ADRESH 0FC4  
                    _ADRESL 0FC3                      _CCPR1L 0FBE            ___awdiv@dividend 0018  
                    _GAMEIE 0124                      ?_putch 0001                      _GODONE 7E11  
                    _GPIOIE 0126                      i2l6200 0120                      i2l6202 0128  
                    i2l6204 012C                      i2l6206 013A                      i2l6160 0020  
                    i2l6162 002E                      i2l6180 00AE                      i2l6172 0082  
                    i2l6164 0040                      i2l6190 00DA                      i2l6182 00C0  
                    i2l6174 0090                      i2l6166 004E                      i2l6158 0012  
                    i2l6192 00E8                      i2l6184 00C2                      i2l6168 0066  
                    i2l6176 0092                      i2l6194 00FA                      i2l6186 00CA  
                    i2l6178 00A0                      i2l6196 00FE                      i2l6188 00CC  
                    i2l6198 0110                      _RCREG1 0FAE               ___rem_pio2f@n 00A0  
             ___rem_pio2f@t 009C               ___rem_pio2f@x 0084               ___rem_pio2f@y 0088  
             vfpfcnvrt@done 00BF                      _UARTIE 0125                      _SPBRG1 0FAF  
                    _TMR1IE 7CE8                      _TMR1IF 7CF0                      _TMR2IE 7CE9  
                    _TMR2IF 7CF1                      _TMR1ON 7E68                      _TMR2ON 7DD2  
                    _SSP1IF 7CF3                      _SSP2IF 7D27                      _TXREG1 0FAD  
          __end_of___xxtofl 3886                _CCPTMRS0bits 0F49                vfprintf@cfmt 00CC  
           ?_LCD_ShowString 0007                      _s1pio2 FF0D                      _s2pio2 FF09  
                    _s3pio2 FF05                      _s4pio2 FF01                      ___flge 41D8  
                    ___fleq 4942                      ___lmul 4B6C                   ??___fladd 004E  
                    ___wmul 5058                   ??___fldiv 0035                   ??___awdiv 001C  
                 ??___cosdf 0052                   ??___lbdiv 0007                   ??___flneg 0052  
                 ??___awmod 000A                   ??___flmul 001C                   ??___flsub 0052  
                 ??___fltol 0068            runUART@keepState 00F3                      _efgtoa 0152  
                 ??___lwdiv 000A                   ??___sindf 0052                   ??___lwmod 000A  
                    _pio2_1 FEE5                      _floorf 30AC                      fabsf@u 000A  
                    fabsf@x 0006                      _memcpy 4D40        read_prec_or_width@ap 000D  
                    clear_0 4D12                      clear_1 4D1E            ___awdiv@quotient 001E  
                    _runADC 32C2                      _runDAC 28EC             ___awmod@divisor 0008  
                    isa$std 0001                      _runPWM 3E78             ___awmod@counter 000A  
                    _printf 50A4                      pad@buf 0019                      dtoa@fp 0020  
                    _strcpy 4F24                      _strlen 4F5C                      fputc@c 0007  
                    fputs@c 0014                      fputs@i 0015                      fputs@s 0010  
          __end_of_runMUSIC 5130             ___fpclassifyf@e 000E             ___fpclassifyf@u 0010  
           ___fpclassifyf@x 0006                __mediumconst FED0                   ??_runGAME 00E7  
                    sinf@ux 00BA                   ??_runGPIO 0007                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8           __end_of_SPI_write 4EEA  
                 ??_runUART 00D2                      stoa@cp 001A                      stoa@fp 0010  
          __end_of_vfprintf 4DDA                      utoa@fp 0020                   ??_sprintf 0054  
          ___lbdiv@dividend 0007                  ___flge@ff1 002D                  ___flge@ff2 0031  
           ??___fpclassifyf 000A                ___xxtofl@arg 0010                ___xxtofl@exp 000F  
              ___xxtofl@val 0006                  ___fleq@ff1 0006                  ___fleq@ff2 000A  
                __accesstop 0060     __end_of__initialization 4D32                   ?_LCD_Init 0001  
                 ?_LCD_Send 0001                  ___flneg@f1 0080               ___rparam_used 0001  
                ___fltol@f1 0064              __pcstackCOMRAM 0001           LED4_Control@state 0006  
              __pidataBANK1 5030               __end_of_fabsf 4FFC               __end_of_fputc 466E  
             __end_of_fputs 4EAC               __end_of_putch 50DA                  __end_of_C0 FF01  
                __end_of_C1 FEFD                  __end_of_C2 FEF9                  __end_of_C3 FEF5  
                __end_of_S1 FEE1                  __end_of_S2 FEDD                  __end_of_S3 FED9  
                __end_of_S4 FED5            ___lbdiv@quotient 0009                     ??_fabsf 000A  
                   ??_fputc 000B                     ??_fputs 0014                     ??_putch 0006  
                __pbssBANK0 00FE                  __pbssBANK1 0100                  __pbssBANK2 0200  
                ??_LCD_Init 0007                  ??_LCD_Send 0006                 runADC@F6967 0100  
              SPI_write@LSB 0007                SPI_write@MSB 0006                     ISR@temp 0005  
                   ?___flge 002D                     ?___fleq 0006                     ?___lmul 0006  
                   ?___wmul 0006                     ?_efgtoa 0084               ??___rem_pio2f 0089  
                   ?_floorf 0046                _LED1_Control 5112                     ?_memcpy 0006  
            ___lmul@product 000E                     ?_runADC 0001                     ?_runDAC 0001  
              _LED2_Control 5104         runGAME@randomNumber 01C3                     ?_runPWM 0001  
                   ?_printf 00CE                     ?_strcpy 0006                     ?_strlen 0006  
              _LED3_Control 50F6                _LED4_Control 50E8                   ?___xxtofl 0006  
              _LED5_Control 50DA              ___rem_pio2f@fn 0098              ___rem_pio2f@ty 008B  
            ___rem_pio2f@ux 0094                _LED6_Control 5120                     _SSP2ADD 0F6E  
                   _SSP1BUF 0FC9                     _SSP2BUF 0F6F                 runGAME@pot1 01BD  
               runGAME@text 019B           runGPIO@LEDControl 0015             LCD_ShowString@i 000C  
                   __Hparam 0000                     __Lparam 0000                   ?_runMUSIC 0001  
                   ___fladd 15B2                     ___fldiv 2260                     ___awdiv 466E  
                   ___cosdf 34D4                     ___lbdiv 4C3A                     ___flneg 4EEA  
                   ___awmod 47E4                     ___flmul 1A74                     ___flsub 4DDA  
                   ___fltol 40D0                     ___lwdiv 4A8A                     ___sindf 2E7A  
                   ___lwmod 4BD6                   ?_vfprintf 00C7              main@setUpAgain 00FC  
                   __pcinit 4CEC                     __ramtop 1000                     __ptext0 2BD4  
                   __ptext1 3BA0                     __ptext2 4F5C                     __ptext3 3E78  
                   __ptext4 512E                     __ptext5 3D0C                     __ptext6 50DA  
                   __ptext7 50E8                     __ptext8 50F6                     __ptext9 5104  
                   _pio2_1t FEE1                   _T1CONbits 0FCD             runPWM@keepState 0022  
     read_prec_or_width@fmt 000C                  ??___xxtofl 000A         __end_of___rem_pio2f 2260  
          ___awmod@dividend 0006                     _invpio2 FEE9                     _runGAME 25FA  
                   _runGPIO 3D0C                     efgtoa@c 008A                     efgtoa@d 0098  
                   efgtoa@e 009C                     efgtoa@f 0086                     efgtoa@g 00AF  
                   efgtoa@h 00A6                     efgtoa@i 00A4                     efgtoa@l 00AA  
                   efgtoa@m 009A                     efgtoa@n 00B3                     efgtoa@p 008F  
                   efgtoa@t 0091                     efgtoa@u 00B5                     efgtoa@w 009E  
                   _runUART 3BA0                   _LCD_Clear 4F92                     _sprintf 4E22  
          ___rem_pio2f$4527 008F        end_of_initialization 4D32                     floorf@e 0064  
                   floorf@m 0060                     floorf@u 0066                     floorf@x 0046  
                   memcpy@d 000D                     memcpy@n 000A                     memcpy@s 000F  
                   fputc@fp 0009            ___rem_pio2f@F526 0115               __Lmediumconst FED0  
                   fputs@fp 0012            ??_LCD_ShowString 0009          _read_prec_or_width 4894  
                 i2u1042_47 0058           LED1_Control@state 0006       LCD_ShowString@lineNum 000B  
          ___rem_pio2f@sign 0093          runGAME@GAMEdivider 01C2                  ??_runMUSIC 0006  
         __end_of_vfpfcnvrt 10A8                  efgtoa@mode 0096                  efgtoa@sign 00AE  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 000C  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 00C0                  ??_vfprintf 0054                     strcpy@d 000A  
                   strlen@a 0008                     strlen@s 0006                   _PORTAbits 0F80  
                 _PORTCbits 0F82                 ___fladd@grs 0063               ___xxtofl@sign 000E  
                 _TRISAbits 0F92                   _TRISBbits 0F93                   _TRISCbits 0F94  
                 _TRISDbits 0F95                  ?_LCD_Clear 0001        ??_read_prec_or_width 000E  
               ___fldiv@grs 0040                 ___fldiv@rem 0039                   _SPI_write 4EAC  
               ___flmul@grs 0022                 _CCP1CONbits 0FBD           LED5_Control@state 0006  
            __end_of_s1pio2 FF11              __end_of_s2pio2 FF0D              __end_of_s3pio2 FF09  
            __end_of_s4pio2 FF05              __end_of___flge 42DC              __end_of___fleq 49EC  
            __end_of___lmul 4BD6                 vfpfcnvrt@ap 00BC                 vfpfcnvrt@cp 00C5  
               ___rem_pio2f 1E9E                 vfpfcnvrt@fp 00B9              __end_of___wmul 507E  
            __end_of_efgtoa 0B4C              __end_of_pio2_1 FEE9        moveDisplay@menuItem1 019B  
      moveDisplay@menuItem2 01AC              __end_of_floorf 32C2        moveDisplay@menuItems 01BD  
            __end_of_memcpy 4D90                  floorf@F521 0119              __end_of_runADC 34D4  
            __end_of_runDAC 2BD4              __end_of_runPWM 3FBE              __end_of_printf 50C4  
            __end_of_strcpy 4F5C              __end_of_strlen 4F92         start_initialization 4CEC  
               __end_of_ISR 014E                 __end_of_abs 5030                 __end_of_pad 4A8A  
                ?_SPI_write 0001       __end_of___fpclassifyf 43DA             runADC@keepState 01B8  
               vfprintf@fmt 00C9                    ??___flge 0035                    ??___fleq 000E  
                  ??___lmul 000E                    ??___wmul 000A                    ??_efgtoa 008B  
               __pdataBANK1 01CE                    ??_floorf 004A                    ??_memcpy 000C  
                  ??_runADC 00E7                    ??_runDAC 00D2                    ??_runPWM 0020  
                  ??_printf 0054                    ??_strcpy 000A                    ??_strlen 0008  
          runGAME@GAMEround 01BF                   ___fladd@a 004A                   ___fladd@b 0046  
                 ___fldiv@a 0031                   ___fldiv@b 002D               runGPIO@states 0009  
                 ___cosdf@r 0068                   ___cosdf@w 0078                   ___cosdf@x 0064  
                 ___cosdf@z 007C                   ___flmul@a 0018                   ___flmul@b 0014  
               __pbssCOMRAM 0055                   ___flsub@a 0068                   ___flsub@b 0064  
             __pcstackBANK0 0060               __pcstackBANK1 019B                 ??_LCD_Clear 0007  
                 ___sindf@r 0068                   ___sindf@s 007C                   ___sindf@w 006C  
                 ___sindf@x 0064                   ___sindf@z 0080       runGPIO@numberOfStates 0021  
               _efgtoa$4064 0093            ___lwdiv@dividend 0006                   _dtoa$4033 0024  
             SPI_write@data 0008                   __pintcode 0008               __pmediumconst FED0  
                  ?___fladd 0046                    ?___fldiv 002D                    ?___awdiv 0018  
                  ?___cosdf 0064                    ?___lbdiv 0006                    ?___flneg 0080  
                  ?___awmod 0006                    ?___flmul 0014                    ?___flsub 0064  
                  ?___fltol 0064                  runADC@pot1 01B4                  runADC@pot2 01B6  
                  ?___lwdiv 0006                    ?___sindf 0064                    ?___lwmod 0006  
                runADC@text 019B                   fabsf@F465 0111               ??_moveDisplay 00E8  
                  ?_runGAME 0001                    ?_runGPIO 0001                    ?_runUART 0001  
           runDAC@keepState 00DB            ___lwdiv@quotient 000B                    ?_sprintf 00CE  
                 _sinf$4240 00AC                   _sinf$4239 00A8                   _sinf$4523 00B2  
                  _GAMEtime 0123                 ??_SPI_write 0006              runDAC@DACindex 00DD  
                  _LCD_Init 44CA                    _LCD_Send 507E              ___wmul@product 000A  
                  _LATAbits 0F89                    _LATBbits 0F8A                    _LATCbits 0F8B  
                  _LATDbits 0F8C                runGAME@F6970 0200                runGAME@F6964 0211  
                runUART@len 00F4           LED2_Control@state 0006                    i2u690_40 00C0  
                  i2u682_40 0020                    i2u690_41 00BC                    i2u682_41 001C  
                  i2u691_40 00DA                    i2u683_40 002E                    i2u691_41 00D6  
                  i2u683_41 002A                    i2u692_40 00E8                    i2u684_40 0040  
                  i2u692_41 00E4                    i2u684_41 003C                    i2u693_40 00FA  
                  i2u685_40 004E                    i2u693_41 00F6                    i2u685_41 004A  
                  i2u694_40 0110                    i2u686_40 0074                    i2u694_41 010C  
                  i2u686_41 0070                    i2u687_40 0082                    i2u687_41 007E  
                  i2u688_40 00A0                    i2u688_41 009C                    i2u689_40 00AE  
                  i2u689_41 00AA                   _vfpfcnvrt 0B4C                  _ADCON0bits 0FC2  
                _ADCON2bits 0FC0           ___wmul@multiplier 0006                   main@menuI 00FD  
          moveDisplay@F6965 01CE                  vfpfcnvrt@c 00C4           ___lmul@multiplier 0006  
                 copy_data0 4D00           runGAME@approxText 01AC         __end_of_moveDisplay 40D0  
          moveDisplay@menuI 01CD            moveDisplay@where 00E7                runGPIO@F6975 01EA  
              runGPIO@F6993 01DE                runGPIO@GPIOi 0023                    __Hrparam 0000  
                 memcpy@tmp 000C                  vfprintf@ap 00CB                    __Lrparam 0000  
                vfprintf@fp 00C7             runGAME@GAMEpart 01C0           LED6_Control@state 0006  
              ?___rem_pio2f 0084                  ?_vfpfcnvrt 00B9         runDAC@selectModeDAC 00DC  
                _ANSELAbits 0F38                  _ANSELBbits 0F39                  _ANSELCbits 0F3A  
                _ANSELDbits 0F3B                  _ANSELEbits 0F3C          ___fpclassifyf@F465 011D  
                sprintf@fmt 00D0                    ___xxtofl 36D2             ___lwdiv@divisor 0008  
           ___lwdiv@counter 000A                    __ptext10 5112                    __ptext11 5120  
                  __ptext20 4FC8                    __ptext12 25FA                    __ptext21 34D4  
                  __ptext13 4AFE                    __ptext30 43DA                    __ptext22 50A4  
                  __ptext14 4B6C                    __ptext31 4BD6                    __ptext23 4EAC  
                  __ptext15 4C3A                    __ptext40 30AC                    __ptext32 4A8A  
                  __ptext24 32C2                    __ptext16 28EC                    __ptext41 42DC  
                  __ptext33 3886                    __ptext25 36D2                    __ptext17 10A8  
                  __ptext50 3A24                    __ptext42 40D0                    __ptext34 4894  
                  __ptext26 3FBE                    __ptext18 2E7A                    __ptext51 49EC  
                  __ptext43 4DDA                    __ptext35 5058                    __ptext27 4E22  
                  __ptext19 1E9E                    __ptext60 44CA                    __ptext52 4E68  
                  __ptext44 15B2                    __ptext36 0152                    __ptext28 4D90  
                  __ptext61 507E                    __ptext53 45A4                    __ptext45 4EEA  
                  __ptext37 4F24                    __ptext29 0B4C                    __ptext54 50C4  
                  __ptext46 1A74                    __ptext38 4D40                    __ptext55 4FFC  
                  __ptext47 41D8                    __ptext39 4C96                    __ptext56 47E4  
                  __ptext48 4942                    __ptext57 466E                    __ptext49 2260  
                  __ptext58 4732                    __ptext59 4F92              runADC@voltage1 01AC  
            runADC@voltage2 01B0                _SSP1CON1bits 0FC6                _SSP2CON1bits 0F6C  
              _SSP2CON2bits 0F6B                  strcpy@dest 0006                    efgtoa@fp 0084  
                  efgtoa@ne 008D                    efgtoa@pp 0095                    efgtoa@ou 00A0  
                  _runMUSIC 512E                    isa$xinst 0000                    int$flags 005A  
               _runDAC$4520 00D3                 _runDAC$4521 00D7                    _vfprintf 4D90  
             ?_LED1_Control 0001                   printf@fmt 00CE                _SSP1STATbits 0FC7  
             ?_LED2_Control 0001                _SSP2STATbits 0F6D               ?_LED3_Control 0001  
          runGAME@keepState 01C1               ?_LED4_Control 0001                   putch@data 0006  
             ?_LED5_Control 0001                    memcpy@d1 0006               ?_LED6_Control 0001  
                  memcpy@s1 0008                 _moveDisplay 3FBE                    intlevel2 0000  
                 sprintf@ap 00DA            ___lwmod@dividend 0006                   strcpy@src 0008  
                _RCSTA1bits 0FAB                    sinf@sign 00B1                    runGPIO@j 0024  
                  runUART@i 00F6                    runUART@p 00F8                 efgtoa@nmode 0097  
                  printf@ap 0054              ??_LED1_Control 0006              ??_LED2_Control 0006  
               ??_vfpfcnvrt 00BD      LCD_ShowString@textData 0007              ??_LED3_Control 0006  
            ??_LED4_Control 0006                    sprintf@f 00DB                    sprintf@s 00CE  
            ??_LED5_Control 0006             ___lwmod@divisor 0008              ??_LED6_Control 0006  
           ___lwmod@counter 000A            runPWM@multiplier 0023               ___fladd@signs 0060  
              ___fladd@aexp 0061                ___fladd@bexp 0062                ___cosdf$4524 006C  
              ___cosdf$4525 0070                ___cosdf$4526 0074               _keepStateGPIO 00FE  
         LED3_Control@state 0006  
