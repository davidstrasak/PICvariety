

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Apr 28 19:19:36 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71   000000                     
    72                           ; Generated 12/10/2023 GMT
    73                           ; 
    74                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F46K22 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106   000000                     
   107                           	psect	idataBANK1
   108   005440                     __pidataBANK1:
   109                           	callstack 0
   110                           
   111                           ;initializer for runGPIO@F6983
   112   005440  20                 	db	32
   113   005441  30                 	db	48
   114   005442  18                 	db	24
   115   005443  0C                 	db	12
   116   005444  06                 	db	6
   117   005445  03                 	db	3
   118   005446  01                 	db	1
   119   005447  03                 	db	3
   120   005448  06                 	db	6
   121   005449  0C                 	db	12
   122   00544A  18                 	db	24
   123   00544B  30                 	db	48
   124                           
   125                           ;initializer for runGPIO@F6965
   126   00544C  CA                 	db	low _LED1_Control
   127   00544D  54                 	db	high _LED1_Control
   128   00544E  BC                 	db	low _LED2_Control
   129   00544F  54                 	db	high _LED2_Control
   130   005450  AE                 	db	low _LED3_Control
   131   005451  54                 	db	high _LED3_Control
   132   005452  A0                 	db	low _LED4_Control
   133   005453  54                 	db	high _LED4_Control
   134   005454  92                 	db	low _LED5_Control
   135   005455  54                 	db	high _LED5_Control
   136   005456  D8                 	db	low _LED6_Control
   137   005457  54                 	db	high _LED6_Control
   138                           
   139                           ;initializer for moveDisplay@F6953
   140   005458  C1                 	db	low STR_7
   141   005459  C6                 	db	low STR_8
   142   00545A  E0                 	db	low STR_9
   143   00545B  DC                 	db	low STR_10
   144   00545C  D8                 	db	low STR_11
   145   00545D  BC                 	db	low STR_12
   146   00545E  B0                 	db	low STR_13
   147   00545F  CF                 	db	low (STR_6+4)
   148                           
   149                           	psect	smallconst
   150   001000                     __psmallconst:
   151                           	callstack 0
   152   001000  00                 	db	0
   153   001001  6C3C               	dw	27708
   154   001003  3636               	dw	13878
   155   001005                     __end_of_S4:
   156                           	callstack 0
   157   001005  07CF               	dw	1999
   158   001007  B950               	dw	47440
   159   001009                     __end_of_S3:
   160                           	callstack 0
   161   001009  8884               	dw	34948
   162   00100B  3C08               	dw	15368
   163   00100D                     __end_of_S2:
   164                           	callstack 0
   165   00100D  AAAB               	dw	43691
   166   00100F  BE2A               	dw	48682
   167   001011                     __end_of_S1:
   168                           	callstack 0
   169   001011  85A3               	dw	34211
   170   001013  3288               	dw	12936
   171   001015                     __end_of_pio2_1t:
   172                           	callstack 0
   173   001015  0FDA               	dw	4058
   174   001017  3FC9               	dw	16329
   175   001019                     __end_of_pio2_1:
   176                           	callstack 0
   177   001019  F983               	dw	63875
   178   00101B  3F22               	dw	16162
   179   00101D                     __end_of_invpio2:
   180                           	callstack 0
   181   00101D  0000               	dw	0
   182   00101F  3F00               	dw	16128
   183   001021                     __end_of_half:
   184                           	callstack 0
   185   001021  9A17               	dw	39447
   186   001023  37CC               	dw	14284
   187   001025                     __end_of_C3:
   188                           	callstack 0
   189   001025  043F               	dw	1087
   190   001027  BAB6               	dw	47798
   191   001029                     __end_of_C2:
   192                           	callstack 0
   193   001029  AA9F               	dw	43679
   194   00102B  3D2A               	dw	15658
   195   00102D                     __end_of_C1:
   196                           	callstack 0
   197   00102D  0000               	dw	0
   198   00102F  BF00               	dw	48896
   199   001031                     __end_of_C0:
   200                           	callstack 0
   201   001031  0FDB               	dw	4059
   202   001033  40C9               	dw	16585
   203   001035                     __end_of_s4pio2:
   204                           	callstack 0
   205   001035  CBE4               	dw	52196
   206   001037  4096               	dw	16534
   207   001039                     __end_of_s3pio2:
   208                           	callstack 0
   209   001039  0FDB               	dw	4059
   210   00103B  4049               	dw	16457
   211   00103D                     __end_of_s2pio2:
   212                           	callstack 0
   213   00103D  0FDB               	dw	4059
   214   00103F  3FC9               	dw	16329
   215   001041                     __end_of_s1pio2:
   216                           	callstack 0
   217   000000                     _ADRESL	set	4035
   218   000000                     _ADRESH	set	4036
   219   000000                     _LATBbits	set	3978
   220   000000                     _TRISBbits	set	3987
   221   000000                     _SSP2STATbits	set	3949
   222   000000                     _SSP2ADD	set	3950
   223   000000                     _TMR1ON	set	32360
   224   000000                     _TMR1IF	set	31984
   225   000000                     _GIE	set	32663
   226   000000                     _TX1IF	set	31988
   227   000000                     _GODONE	set	32273
   228   000000                     _ANSELBbits	set	3897
   229   000000                     _ANSELDbits	set	3899
   230   000000                     _PORTAbits	set	3968
   231   000000                     _PORTCbits	set	3970
   232   000000                     _LATCbits	set	3979
   233   000000                     _LATDbits	set	3980
   234   000000                     _ANSELAbits	set	3896
   235   000000                     _TRISAbits	set	3986
   236   000000                     _TRISCbits	set	3988
   237   000000                     _TRISDbits	set	3989
   238   000000                     _TMR1IE	set	31976
   239   000000                     _SSP1IF	set	31987
   240   000000                     _SSP2IF	set	32039
   241   000000                     _LATAbits	set	3977
   242   000000                     _ANSELEbits	set	3900
   243   000000                     _SSP2CON2bits	set	3947
   244   000000                     _SSP2CON1bits	set	3948
   245   000000                     _SSP2BUF	set	3951
   246   000000                     _RCSTA1bits	set	4011
   247   000000                     _SPBRG1	set	4015
   248   000000                     _ADCON2bits	set	4032
   249   000000                     _SSP1CON1bits	set	4038
   250   000000                     _SSP1BUF	set	4041
   251   000000                     _SSP1STATbits	set	4039
   252   000000                     _ADCON0bits	set	4034
   253   000000                     _TXREG1	set	4013
   254   000000                     _TXSTA1bits	set	4012
   255   000000                     _T1CONbits	set	4045
   256   000000                     _TMR1	set	4046
   257   000000                     _PEIE	set	32662
   258   001041                     STR_17:
   259   001041  50                 	db	80	;'P'
   260   001042  4F                 	db	79	;'O'
   261   001043  54                 	db	84	;'T'
   262   001044  31                 	db	49	;'1'
   263   001045  3A                 	db	58	;':'
   264   001046  25                 	db	37
   265   001047  2E                 	db	46
   266   001048  31                 	db	49	;'1'
   267   001049  66                 	db	102	;'f'
   268   00104A  50                 	db	80	;'P'
   269   00104B  4F                 	db	79	;'O'
   270   00104C  54                 	db	84	;'T'
   271   00104D  32                 	db	50	;'2'
   272   00104E  3A                 	db	58	;':'
   273   00104F  25                 	db	37
   274   001050  2E                 	db	46
   275   001051  31                 	db	49	;'1'
   276   001052  66                 	db	102	;'f'
   277   001053  00                 	db	0
   278   001054                     STR_2:
   279   001054  20                 	db	32
   280   001055  20                 	db	32
   281   001056  20                 	db	32
   282   001057  20                 	db	32
   283   001058  20                 	db	32
   284   001059  20                 	db	32
   285   00105A  20                 	db	32
   286   00105B  20                 	db	32
   287   00105C  20                 	db	32
   288   00105D  20                 	db	32
   289   00105E  20                 	db	32
   290   00105F  20                 	db	32
   291   001060  20                 	db	32
   292   001061  20                 	db	32
   293   001062  20                 	db	32
   294   001063  20                 	db	32
   295   001064  00                 	db	0
   296   001065                     STR_1:
   297   001065  50                 	db	80	;'P'
   298   001066  6F                 	db	111	;'o'
   299   001067  7A                 	db	122	;'z'
   300   001068  6F                 	db	111	;'o'
   301   001069  72                 	db	114	;'r'
   302   00106A  21                 	db	33
   303   00106B  20                 	db	32
   304   00106C  48                 	db	72	;'H'
   305   00106D  61                 	db	97	;'a'
   306   00106E  64                 	db	100	;'d'
   307   00106F  21                 	db	33
   308   001070  21                 	db	33
   309   001071  21                 	db	33
   310   001072  20                 	db	32
   311   001073  20                 	db	32
   312   001074  20                 	db	32
   313   001075  00                 	db	0
   314   001076                     STR_3:
   315   001076  56                 	db	86	;'V'
   316   001077  6F                 	db	111	;'o'
   317   001078  6C                 	db	108	;'l'
   318   001079  74                 	db	116	;'t'
   319   00107A  79                 	db	121	;'y'
   320   00107B  20                 	db	32
   321   00107C  6E                 	db	110	;'n'
   322   00107D  61                 	db	97	;'a'
   323   00107E  20                 	db	32
   324   00107F  50                 	db	80	;'P'
   325   001080  4F                 	db	79	;'O'
   326   001081  54                 	db	84	;'T'
   327   001082  3A                 	db	58	;':'
   328   001083  20                 	db	32
   329   001084  20                 	db	32
   330   001085  20                 	db	32
   331   001086  00                 	db	0
   332   001087                     STR_4:
   333   001087  52                 	db	82	;'R'
   334   001088  42                 	db	66	;'B'
   335   001089  30                 	db	48	;'0'
   336   00108A  2D                 	db	45
   337   00108B  41                 	db	65	;'A'
   338   00108C  32                 	db	50	;'2'
   339   00108D  2C                 	db	44
   340   00108E  20                 	db	32
   341   00108F  42                 	db	66	;'B'
   342   001090  52                 	db	82	;'R'
   343   001091  3A                 	db	58	;':'
   344   001092  20                 	db	32
   345   001093  39                 	db	57	;'9'
   346   001094  36                 	db	54	;'6'
   347   001095  30                 	db	48	;'0'
   348   001096  30                 	db	48	;'0'
   349   001097  00                 	db	0
   350   001098                     STR_5:
   351   001098  31                 	db	49	;'1'
   352   001099  3A                 	db	58	;':'
   353   00109A  74                 	db	116	;'t'
   354   00109B  72                 	db	114	;'r'
   355   00109C  2C                 	db	44
   356   00109D  32                 	db	50	;'2'
   357   00109E  3A                 	db	58	;':'
   358   00109F  73                 	db	115	;'s'
   359   0010A0  69                 	db	105	;'i'
   360   0010A1  6E                 	db	110	;'n'
   361   0010A2  2C                 	db	44
   362   0010A3  33                 	db	51	;'3'
   363   0010A4  3A                 	db	58	;':'
   364   0010A5  70                 	db	112	;'p'
   365   0010A6  69                 	db	105	;'i'
   366   0010A7  6C                 	db	108	;'l'
   367   0010A8  00                 	db	0
   368   0010A9                     STR_24:
   369   0010A9  28                 	db	40
   370   0010AA  6E                 	db	110	;'n'
   371   0010AB  75                 	db	117	;'u'
   372   0010AC  6C                 	db	108	;'l'
   373   0010AD  6C                 	db	108	;'l'
   374   0010AE  29                 	db	41
   375   0010AF  00                 	db	0
   376   0010B0                     STR_13:
   377   0010B0  4D                 	db	77	;'M'
   378   0010B1  55                 	db	85	;'U'
   379   0010B2  53                 	db	83	;'S'
   380   0010B3  49                 	db	73	;'I'
   381   0010B4  43                 	db	67	;'C'
   382   0010B5  00                 	db	0
   383   0010B6                     STR_15:
   384   0010B6  3E                 	db	62	;'>'
   385   0010B7  25                 	db	37
   386   0010B8  2D                 	db	45
   387   0010B9  2A                 	db	42
   388   0010BA  73                 	db	115	;'s'
   389   0010BB  00                 	db	0
   390   0010BC                     STR_12:
   391   0010BC  47                 	db	71	;'G'
   392   0010BD  41                 	db	65	;'A'
   393   0010BE  4D                 	db	77	;'M'
   394   0010BF  45                 	db	69	;'E'
   395   0010C0  00                 	db	0
   396   0010C1                     STR_7:
   397   0010C1  47                 	db	71	;'G'
   398   0010C2  50                 	db	80	;'P'
   399   0010C3  49                 	db	73	;'I'
   400   0010C4  4F                 	db	79	;'O'
   401   0010C5  00                 	db	0
   402   0010C6                     STR_8:
   403   0010C6  55                 	db	85	;'U'
   404   0010C7  41                 	db	65	;'A'
   405   0010C8  52                 	db	82	;'R'
   406   0010C9  54                 	db	84	;'T'
   407   0010CA  00                 	db	0
   408   0010CB                     STR_6:
   409   0010CB  25                 	db	37
   410   0010CC  64                 	db	100	;'d'
   411   0010CD  20                 	db	32
   412   0010CE  0D                 	db	13
   413   0010CF  00                 	db	0
   414   0010D0                     STR_18:
   415   0010D0  69                 	db	105	;'i'
   416   0010D1  6E                 	db	110	;'n'
   417   0010D2  66                 	db	102	;'f'
   418   0010D3  00                 	db	0
   419   0010D4                     STR_21:
   420   0010D4  6E                 	db	110	;'n'
   421   0010D5  61                 	db	97	;'a'
   422   0010D6  6E                 	db	110	;'n'
   423   0010D7  00                 	db	0
   424   0010D8                     STR_11:
   425   0010D8  44                 	db	68	;'D'
   426   0010D9  41                 	db	65	;'A'
   427   0010DA  43                 	db	67	;'C'
   428   0010DB  00                 	db	0
   429   0010DC                     STR_10:
   430   0010DC  41                 	db	65	;'A'
   431   0010DD  44                 	db	68	;'D'
   432   0010DE  43                 	db	67	;'C'
   433   0010DF  00                 	db	0
   434   0010E0                     STR_9:
   435   0010E0  50                 	db	80	;'P'
   436   0010E1  57                 	db	87	;'W'
   437   0010E2  4D                 	db	77	;'M'
   438   0010E3  00                 	db	0
   439   0010E4  00                 	db	0	; dummy byte at the end
   440   000000                     
   441                           ; #config settings
   442                           
   443                           	psect	cinit
   444   00514A                     __pcinit:
   445                           	callstack 0
   446   00514A                     start_initialization:
   447                           	callstack 0
   448   00514A                     __initialization:
   449                           	callstack 0
   450                           
   451                           ; Initialize objects allocated to BANK1 (32 bytes)
   452                           ; load TBLPTR registers with __pidataBANK1
   453   00514A  0E40               	movlw	low __pidataBANK1
   454   00514C  6EF6               	movwf	tblptrl,c
   455   00514E  0E54               	movlw	high __pidataBANK1
   456   005150  6EF7               	movwf	tblptrh,c
   457   005152  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   458   005154  6EF8               	movwf	tblptru,c
   459   005156  EE01  F09F         	lfsr	0,__pdataBANK1
   460   00515A  EE10 F020          	lfsr	1,32
   461   00515E                     copy_data0:
   462   00515E  0009               	tblrd		*+
   463   005160  CFF5 FFEE          	movff	tablat,postinc0
   464   005164  50E5               	movf	postdec1,w,c
   465   005166  50E1               	movf	fsr1l,w,c
   466   005168  E1FA               	bnz	copy_data0
   467                           
   468                           ; Clear objects allocated to BANK1 (114 bytes)
   469   00516A  EE01  F000         	lfsr	0,__pbssBANK1
   470   00516E  0E72               	movlw	114
   471   005170                     clear_0:
   472   005170  6AEE               	clrf	postinc0,c
   473   005172  06E8               	decf	wreg,f,c
   474   005174  E1FD               	bnz	clear_0
   475                           
   476                           ; Clear objects allocated to BANK0 (4 bytes)
   477   005176  0100               	movlb	0
   478   005178  6BFF               	clrf	(__pbssBANK0+3)& (0+255),b
   479   00517A  6BFE               	clrf	(__pbssBANK0+2)& (0+255),b
   480   00517C  6BFD               	clrf	(__pbssBANK0+1)& (0+255),b
   481   00517E  6BFC               	clrf	__pbssBANK0& (0+255),b
   482                           
   483                           ; Clear objects allocated to COMRAM (2 bytes)
   484   005180  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   485   005182  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   486   005184                     end_of_initialization:
   487                           	callstack 0
   488   005184                     __end_of__initialization:
   489                           	callstack 0
   490   005184  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   491   005186  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   492   005188  0E00               	movlw	low (__Lmediumconst shr (0+16))
   493   00518A  6EF8               	movwf	tblptru,c
   494   00518C  0100               	movlb	0
   495   00518E  EF34  F01C         	goto	_main	;jump to C main() function
   496                           
   497                           	psect	bssCOMRAM
   498   00005B                     __pbssCOMRAM:
   499                           	callstack 0
   500   00005B                     _prec:
   501                           	callstack 0
   502   00005B                     	ds	2
   503                           
   504                           	psect	bssBANK0
   505   0000FC                     __pbssBANK0:
   506                           	callstack 0
   507   0000FC                     _width:
   508                           	callstack 0
   509   0000FC                     	ds	2
   510   0000FE                     _flags:
   511                           	callstack 0
   512   0000FE                     	ds	1
   513   0000FF                     _keepStateGPIO:
   514                           	callstack 0
   515   0000FF                     	ds	1
   516                           
   517                           	psect	bssBANK1
   518   000100                     __pbssBANK1:
   519                           	callstack 0
   520   000100                     	ds	17
   521   000111                     fabsf@F465:
   522                           	callstack 0
   523   000111                     	ds	4
   524   000115                     ___rem_pio2f@F526:
   525                           	callstack 0
   526   000115                     	ds	4
   527   000119                     floorf@F521:
   528                           	callstack 0
   529   000119                     	ds	4
   530   00011D                     ___fpclassifyf@F465:
   531                           	callstack 0
   532   00011D                     	ds	4
   533   000121                     _GPIOIE:
   534                           	callstack 0
   535   000121                     	ds	1
   536   000122                     _dbuf:
   537                           	callstack 0
   538   000122                     	ds	80
   539                           
   540                           	psect	dataBANK1
   541   00019F                     __pdataBANK1:
   542                           	callstack 0
   543   00019F                     runGPIO@F6983:
   544                           	callstack 0
   545   00019F                     	ds	12
   546   0001AB                     runGPIO@F6965:
   547                           	callstack 0
   548   0001AB                     	ds	12
   549   0001B7                     moveDisplay@F6953:
   550                           	callstack 0
   551   0001B7                     	ds	8
   552                           
   553                           	psect	cstackBANK1
   554   000172                     __pcstackBANK1:
   555                           	callstack 0
   556   000172                     moveDisplay@menuItem1:
   557                           	callstack 0
   558                           
   559                           ; 17 bytes @ 0x0
   560   000172                     	ds	17
   561   000183                     moveDisplay@menuItem2:
   562                           	callstack 0
   563                           
   564                           ; 17 bytes @ 0x11
   565   000183                     	ds	17
   566   000194                     moveDisplay@menuItems:
   567                           	callstack 0
   568                           
   569                           ; 8 bytes @ 0x22
   570   000194                     	ds	8
   571   00019C                     moveDisplay@menuI:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x2A
   575   00019C                     	ds	1
   576   00019D                     main@setUpAgain:
   577                           	callstack 0
   578                           
   579                           ; 1 bytes @ 0x2B
   580   00019D                     	ds	1
   581   00019E                     main@menuI:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x2C
   585   00019E                     	ds	1
   586                           
   587                           	psect	cstackBANK0
   588   000060                     __pcstackBANK0:
   589                           	callstack 0
   590   000060                     ___fltol@sign1:
   591                           	callstack 0
   592   000060                     ___cosdf@r:
   593                           	callstack 0
   594   000060                     ___sindf@r:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0x0
   598   000060                     	ds	1
   599   000061                     ___fltol@exp1:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x1
   603   000061                     	ds	3
   604   000064                     ___sindf@w:
   605                           	callstack 0
   606   000064                     ___cosdf$3507:
   607                           	callstack 0
   608                           
   609                           ; 4 bytes @ 0x4
   610   000064                     	ds	4
   611   000068                     ___cosdf$3508:
   612                           	callstack 0
   613   000068                     ___sindf$3511:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x8
   617   000068                     	ds	4
   618   00006C                     ___cosdf$3509:
   619                           	callstack 0
   620   00006C                     ___sindf$3512:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0xC
   624   00006C                     	ds	4
   625   000070                     ___cosdf@w:
   626                           	callstack 0
   627   000070                     ___sindf$3513:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x10
   631   000070                     	ds	4
   632   000074                     ___cosdf@z:
   633                           	callstack 0
   634   000074                     ___sindf@s:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x14
   638   000074                     	ds	4
   639   000078                     ?___flneg:
   640                           	callstack 0
   641   000078                     ___flneg@f1:
   642                           	callstack 0
   643   000078                     ___sindf@z:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x18
   647   000078                     	ds	4
   648   00007C                     ?___rem_pio2f:
   649                           	callstack 0
   650   00007C                     efgtoa@fp:
   651                           	callstack 0
   652   00007C                     ___rem_pio2f@x:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x1C
   656   00007C                     	ds	2
   657   00007E                     efgtoa@f:
   658                           	callstack 0
   659                           
   660                           ; 4 bytes @ 0x1E
   661   00007E                     	ds	2
   662   000080                     ___rem_pio2f@y:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x20
   666   000080                     	ds	1
   667   000081                     ??___rem_pio2f:
   668                           
   669                           ; 1 bytes @ 0x21
   670   000081                     	ds	1
   671   000082                     efgtoa@c:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x22
   675   000082                     	ds	1
   676   000083                     ??_efgtoa:
   677   000083                     ___rem_pio2f@ty:
   678                           	callstack 0
   679                           
   680                           ; 4 bytes @ 0x23
   681   000083                     	ds	2
   682   000085                     efgtoa@ne:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x25
   686   000085                     	ds	2
   687   000087                     efgtoa@p:
   688                           	callstack 0
   689   000087                     ___rem_pio2f$3510:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x27
   693   000087                     	ds	2
   694   000089                     efgtoa@t:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x29
   698   000089                     	ds	2
   699   00008B                     ___rem_pio2f@sign:
   700                           	callstack 0
   701   00008B                     _efgtoa$3066:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x2B
   705   00008B                     	ds	1
   706   00008C                     ___rem_pio2f@ux:
   707                           	callstack 0
   708                           
   709                           ; 4 bytes @ 0x2C
   710   00008C                     	ds	1
   711   00008D                     efgtoa@pp:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x2D
   715   00008D                     	ds	1
   716   00008E                     efgtoa@mode:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x2E
   720   00008E                     	ds	1
   721   00008F                     efgtoa@nmode:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x2F
   725   00008F                     	ds	1
   726   000090                     efgtoa@d:
   727                           	callstack 0
   728   000090                     ___rem_pio2f@fn:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x30
   732   000090                     	ds	2
   733   000092                     efgtoa@m:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x32
   737   000092                     	ds	2
   738   000094                     efgtoa@e:
   739                           	callstack 0
   740   000094                     ___rem_pio2f@t:
   741                           	callstack 0
   742                           
   743                           ; 4 bytes @ 0x34
   744   000094                     	ds	2
   745   000096                     efgtoa@w:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x36
   749   000096                     	ds	2
   750   000098                     efgtoa@ou:
   751                           	callstack 0
   752   000098                     ___rem_pio2f@n:
   753                           	callstack 0
   754                           
   755                           ; 4 bytes @ 0x38
   756   000098                     	ds	4
   757   00009C                     ?_sinf:
   758                           	callstack 0
   759   00009C                     efgtoa@i:
   760                           	callstack 0
   761   00009C                     sinf@x:
   762                           	callstack 0
   763                           
   764                           ; 4 bytes @ 0x3C
   765   00009C                     	ds	2
   766   00009E                     efgtoa@h:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x3E
   770   00009E                     	ds	2
   771   0000A0                     _sinf$3230:
   772                           	callstack 0
   773                           
   774                           ; 4 bytes @ 0x40
   775   0000A0                     	ds	2
   776   0000A2                     efgtoa@l:
   777                           	callstack 0
   778                           
   779                           ; 4 bytes @ 0x42
   780   0000A2                     	ds	2
   781   0000A4                     _sinf$3231:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x44
   785   0000A4                     	ds	2
   786   0000A6                     efgtoa@sign:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0x46
   790   0000A6                     	ds	1
   791   0000A7                     efgtoa@g:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x47
   795   0000A7                     	ds	1
   796   0000A8                     sinf@n:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x48
   800   0000A8                     	ds	1
   801   0000A9                     sinf@sign:
   802                           	callstack 0
   803                           
   804                           ; 1 bytes @ 0x49
   805   0000A9                     	ds	1
   806   0000AA                     _sinf$3506:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x4A
   810   0000AA                     	ds	1
   811   0000AB                     efgtoa@n:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x4B
   815   0000AB                     	ds	2
   816   0000AD                     efgtoa@u:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x4D
   820   0000AD                     	ds	1
   821   0000AE                     sinf@y:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x4E
   825   0000AE                     	ds	3
   826   0000B1                     vfpfcnvrt@fp:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x51
   830   0000B1                     	ds	1
   831   0000B2                     sinf@ux:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x52
   835   0000B2                     	ds	1
   836   0000B3                     vfpfcnvrt@fmt:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x53
   840   0000B3                     	ds	1
   841   0000B4                     vfpfcnvrt@ap:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x54
   845   0000B4                     	ds	1
   846   0000B5                     ??_vfpfcnvrt:
   847                           
   848                           ; 1 bytes @ 0x55
   849   0000B5                     	ds	1
   850   0000B6                     vfpfcnvrt@convarg:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x56
   854   0000B6                     	ds	4
   855   0000BA                     vfpfcnvrt@c:
   856                           	callstack 0
   857                           
   858                           ; 1 bytes @ 0x5A
   859   0000BA                     	ds	1
   860   0000BB                     vfpfcnvrt@done:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x5B
   864   0000BB                     	ds	1
   865   0000BC                     vfpfcnvrt@cp:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x5C
   869   0000BC                     	ds	1
   870   0000BD                     ?_vfprintf:
   871                           	callstack 0
   872   0000BD                     vfprintf@fp:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x5D
   876   0000BD                     	ds	2
   877   0000BF                     vfprintf@fmt:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x5F
   881   0000BF                     	ds	1
   882   0000C0                     vfprintf@ap:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x60
   886   0000C0                     	ds	1
   887   0000C1                     vfprintf@cfmt:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x61
   891   0000C1                     	ds	1
   892   0000C2                     ?_printf:
   893                           	callstack 0
   894   0000C2                     ?_sprintf:
   895                           	callstack 0
   896   0000C2                     printf@fmt:
   897                           	callstack 0
   898   0000C2                     sprintf@s:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x62
   902   0000C2                     	ds	2
   903   0000C4                     sprintf@fmt:
   904                           	callstack 0
   905                           
   906                           ; 1 bytes @ 0x64
   907   0000C4                     	ds	1
   908   0000C5                     printf@ap:
   909                           	callstack 0
   910                           
   911                           ; 1 bytes @ 0x65
   912   0000C5                     	ds	1
   913   0000C6                     ??_runDAC:
   914                           
   915                           ; 1 bytes @ 0x66
   916   0000C6                     	ds	1
   917   0000C7                     _runDAC$3503:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x67
   921   0000C7                     	ds	4
   922   0000CB                     _runDAC$3504:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0x6B
   926   0000CB                     	ds	2
   927   0000CD                     sprintf@ap:
   928                           	callstack 0
   929                           
   930                           ; 1 bytes @ 0x6D
   931   0000CD                     	ds	1
   932   0000CE                     sprintf@f:
   933                           	callstack 0
   934                           
   935                           ; 12 bytes @ 0x6E
   936   0000CE                     	ds	1
   937   0000CF                     runDAC@keepState:
   938                           	callstack 0
   939                           
   940                           ; 1 bytes @ 0x6F
   941   0000CF                     	ds	1
   942   0000D0                     runDAC@selectModeDAC:
   943                           	callstack 0
   944                           
   945                           ; 1 bytes @ 0x70
   946   0000D0                     	ds	1
   947   0000D1                     runDAC@DACindex:
   948                           	callstack 0
   949                           
   950                           ; 1 bytes @ 0x71
   951   0000D1                     	ds	9
   952   0000DA                     ??_runADC:
   953   0000DA                     moveDisplay@where:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x7A
   957   0000DA                     	ds	1
   958   0000DB                     ??_moveDisplay:
   959                           
   960                           ; 1 bytes @ 0x7B
   961   0000DB                     	ds	1
   962   0000DC                     runADC@text:
   963                           	callstack 0
   964                           
   965                           ; 17 bytes @ 0x7C
   966   0000DC                     	ds	17
   967   0000ED                     runADC@voltage1:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0x8D
   971   0000ED                     	ds	4
   972   0000F1                     runADC@voltage2:
   973                           	callstack 0
   974                           
   975                           ; 4 bytes @ 0x91
   976   0000F1                     	ds	4
   977   0000F5                     runADC@pot1:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x95
   981   0000F5                     	ds	2
   982   0000F7                     runADC@pot2:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x97
   986   0000F7                     	ds	2
   987   0000F9                     runADC@keepState:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x99
   991   0000F9                     	ds	1
   992   0000FA                     ??_main:
   993                           
   994                           ; 1 bytes @ 0x9A
   995   0000FA                     	ds	2
   996                           
   997                           	psect	cstackCOMRAM
   998   000001                     __pcstackCOMRAM:
   999                           	callstack 0
  1000   000001                     ??_ISR:
  1001                           
  1002                           ; 1 bytes @ 0x0
  1003   000001                     	ds	2
  1004   000003                     ?___fpclassifyf:
  1005                           	callstack 0
  1006   000003                     ?___wmul:
  1007                           	callstack 0
  1008   000003                     ?___awdiv:
  1009                           	callstack 0
  1010   000003                     ?___awmod:
  1011                           	callstack 0
  1012   000003                     ?_labs:
  1013                           	callstack 0
  1014   000003                     ?_fabsf:
  1015                           	callstack 0
  1016   000003                     ?___xxtofl:
  1017                           	callstack 0
  1018   000003                     LCD_Send@data:
  1019                           	callstack 0
  1020   000003                     SPI_write@MSB:
  1021                           	callstack 0
  1022   000003                     putch@data:
  1023                           	callstack 0
  1024   000003                     LED1_Control@state:
  1025                           	callstack 0
  1026   000003                     LED2_Control@state:
  1027                           	callstack 0
  1028   000003                     LED3_Control@state:
  1029                           	callstack 0
  1030   000003                     LED4_Control@state:
  1031                           	callstack 0
  1032   000003                     LED5_Control@state:
  1033                           	callstack 0
  1034   000003                     LED6_Control@state:
  1035                           	callstack 0
  1036   000003                     ___wmul@multiplier:
  1037                           	callstack 0
  1038   000003                     ___awdiv@dividend:
  1039                           	callstack 0
  1040   000003                     ___awmod@dividend:
  1041                           	callstack 0
  1042   000003                     memcpy@d1:
  1043                           	callstack 0
  1044   000003                     strcpy@dest:
  1045                           	callstack 0
  1046   000003                     ___fleq@ff1:
  1047                           	callstack 0
  1048   000003                     ___xxtofl@val:
  1049                           	callstack 0
  1050   000003                     ___fpclassifyf@x:
  1051                           	callstack 0
  1052   000003                     labs@a:
  1053                           	callstack 0
  1054   000003                     fabsf@x:
  1055                           	callstack 0
  1056                           
  1057                           ; 4 bytes @ 0x2
  1058   000003                     	ds	1
  1059   000004                     ??_LCD_Init:
  1060   000004                     ??_runGPIO:
  1061   000004                     SPI_write@LSB:
  1062                           	callstack 0
  1063   000004                     LCD_ShowString@textData:
  1064                           	callstack 0
  1065   000004                     fputc@c:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x3
  1069   000004                     	ds	1
  1070   000005                     SPI_write@data:
  1071                           	callstack 0
  1072   000005                     strcpy@src:
  1073                           	callstack 0
  1074   000005                     ___wmul@multiplicand:
  1075                           	callstack 0
  1076   000005                     ___awdiv@divisor:
  1077                           	callstack 0
  1078   000005                     ___awmod@divisor:
  1079                           	callstack 0
  1080   000005                     memcpy@s1:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x4
  1084   000005                     	ds	1
  1085   000006                     ??_LCD_ShowString:
  1086   000006                     ??_strcpy:
  1087   000006                     fputc@fp:
  1088                           	callstack 0
  1089   000006                     runGPIO@states:
  1090                           	callstack 0
  1091                           
  1092                           ; 12 bytes @ 0x5
  1093   000006                     	ds	1
  1094   000007                     ??___fpclassifyf:
  1095   000007                     ??_labs:
  1096   000007                     ??___xxtofl:
  1097   000007                     ___awdiv@counter:
  1098                           	callstack 0
  1099   000007                     ___awmod@counter:
  1100                           	callstack 0
  1101   000007                     ___wmul@product:
  1102                           	callstack 0
  1103   000007                     memcpy@n:
  1104                           	callstack 0
  1105   000007                     strcpy@d:
  1106                           	callstack 0
  1107   000007                     ___fleq@ff2:
  1108                           	callstack 0
  1109   000007                     fabsf@u:
  1110                           	callstack 0
  1111                           
  1112                           ; 4 bytes @ 0x6
  1113   000007                     	ds	1
  1114   000008                     ??_fputc:
  1115   000008                     LCD_ShowString@lineNum:
  1116                           	callstack 0
  1117   000008                     ___awdiv@sign:
  1118                           	callstack 0
  1119   000008                     ___awmod@sign:
  1120                           	callstack 0
  1121                           
  1122                           ; 1 bytes @ 0x7
  1123   000008                     	ds	1
  1124   000009                     ?_abs:
  1125                           	callstack 0
  1126   000009                     ?_read_prec_or_width:
  1127                           	callstack 0
  1128   000009                     LCD_ShowString@i:
  1129                           	callstack 0
  1130   000009                     read_prec_or_width@fmt:
  1131                           	callstack 0
  1132   000009                     memcpy@tmp:
  1133                           	callstack 0
  1134   000009                     ___awdiv@quotient:
  1135                           	callstack 0
  1136   000009                     abs@a:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x8
  1140   000009                     	ds	1
  1141   00000A                     read_prec_or_width@ap:
  1142                           	callstack 0
  1143   00000A                     memcpy@d:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x9
  1147   00000A                     	ds	1
  1148   00000B                     ??_abs:
  1149   00000B                     ??___fleq:
  1150   00000B                     ___xxtofl@sign:
  1151                           	callstack 0
  1152   00000B                     read_prec_or_width@c:
  1153                           	callstack 0
  1154   00000B                     ___fpclassifyf@e:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0xA
  1158   00000B                     	ds	1
  1159   00000C                     ___xxtofl@exp:
  1160                           	callstack 0
  1161   00000C                     read_prec_or_width@n:
  1162                           	callstack 0
  1163   00000C                     memcpy@s:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0xB
  1167   00000C                     	ds	1
  1168   00000D                     stoa@fp:
  1169                           	callstack 0
  1170   00000D                     fputs@s:
  1171                           	callstack 0
  1172   00000D                     ___xxtofl@arg:
  1173                           	callstack 0
  1174   00000D                     ___fpclassifyf@u:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0xC
  1178   00000D                     	ds	2
  1179   00000F                     stoa@s:
  1180                           	callstack 0
  1181   00000F                     fputs@fp:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0xE
  1185   00000F                     	ds	2
  1186   000011                     ??_stoa:
  1187   000011                     ?___flmul:
  1188                           	callstack 0
  1189   000011                     fputs@c:
  1190                           	callstack 0
  1191   000011                     ___flmul@b:
  1192                           	callstack 0
  1193                           
  1194                           ; 4 bytes @ 0x10
  1195   000011                     	ds	1
  1196   000012                     fputs@i:
  1197                           	callstack 0
  1198   000012                     runGPIO@LEDControl:
  1199                           	callstack 0
  1200                           
  1201                           ; 12 bytes @ 0x11
  1202   000012                     	ds	1
  1203   000013                     stoa@p:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x12
  1207   000013                     	ds	1
  1208   000014                     pad@fp:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x13
  1212   000014                     	ds	1
  1213   000015                     stoa@w:
  1214                           	callstack 0
  1215   000015                     ___flmul@a:
  1216                           	callstack 0
  1217                           
  1218                           ; 4 bytes @ 0x14
  1219   000015                     	ds	1
  1220   000016                     pad@buf:
  1221                           	callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x15
  1224   000016                     	ds	1
  1225   000017                     stoa@cp:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x16
  1229   000017                     	ds	1
  1230   000018                     pad@p:
  1231                           	callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x17
  1234   000018                     	ds	1
  1235   000019                     ??___flmul:
  1236   000019                     stoa@l:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x18
  1240   000019                     	ds	1
  1241   00001A                     ??_pad:
  1242                           
  1243                           ; 1 bytes @ 0x19
  1244   00001A                     	ds	1
  1245   00001B                     pad@i:
  1246                           	callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x1A
  1249   00001B                     	ds	2
  1250   00001D                     ___flmul@sign:
  1251                           	callstack 0
  1252   00001D                     dtoa@fp:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x1C
  1256   00001D                     	ds	1
  1257   00001E                     runGPIO@GPIOreverse:
  1258                           	callstack 0
  1259   00001E                     ___flmul@aexp:
  1260                           	callstack 0
  1261                           
  1262                           ; 1 bytes @ 0x1D
  1263   00001E                     	ds	1
  1264   00001F                     runGPIO@numberOfStates:
  1265                           	callstack 0
  1266   00001F                     dtoa@d:
  1267                           	callstack 0
  1268   00001F                     ___flmul@grs:
  1269                           	callstack 0
  1270                           
  1271                           ; 4 bytes @ 0x1E
  1272   00001F                     	ds	2
  1273   000021                     runGPIO@GPIOi:
  1274                           	callstack 0
  1275   000021                     _dtoa$3035:
  1276                           	callstack 0
  1277                           
  1278                           ; 2 bytes @ 0x20
  1279   000021                     	ds	1
  1280   000022                     runGPIO@j:
  1281                           	callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x21
  1284   000022                     	ds	1
  1285   000023                     ___flmul@bexp:
  1286                           	callstack 0
  1287   000023                     dtoa@w:
  1288                           	callstack 0
  1289                           
  1290                           ; 2 bytes @ 0x22
  1291   000023                     	ds	1
  1292   000024                     ___flmul@prod:
  1293                           	callstack 0
  1294                           
  1295                           ; 4 bytes @ 0x23
  1296   000024                     	ds	1
  1297   000025                     dtoa@p:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x24
  1301   000025                     	ds	2
  1302   000027                     dtoa@s:
  1303                           	callstack 0
  1304                           
  1305                           ; 1 bytes @ 0x26
  1306   000027                     	ds	1
  1307   000028                     ___flmul@temp:
  1308                           	callstack 0
  1309   000028                     dtoa@i:
  1310                           	callstack 0
  1311                           
  1312                           ; 2 bytes @ 0x27
  1313   000028                     	ds	2
  1314   00002A                     ?___fldiv:
  1315                           	callstack 0
  1316   00002A                     ___flge@ff1:
  1317                           	callstack 0
  1318   00002A                     ___fldiv@b:
  1319                           	callstack 0
  1320                           
  1321                           ; 4 bytes @ 0x29
  1322   00002A                     	ds	4
  1323   00002E                     ___flge@ff2:
  1324                           	callstack 0
  1325   00002E                     ___fldiv@a:
  1326                           	callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x2D
  1329   00002E                     	ds	4
  1330   000032                     ??___fldiv:
  1331   000032                     ??___flge:
  1332                           
  1333                           ; 1 bytes @ 0x31
  1334   000032                     	ds	4
  1335   000036                     ___fldiv@rem:
  1336                           	callstack 0
  1337                           
  1338                           ; 4 bytes @ 0x35
  1339   000036                     	ds	4
  1340   00003A                     ___fldiv@sign:
  1341                           	callstack 0
  1342                           
  1343                           ; 1 bytes @ 0x39
  1344   00003A                     	ds	1
  1345   00003B                     ___fldiv@new_exp:
  1346                           	callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x3A
  1349   00003B                     	ds	2
  1350   00003D                     ___fldiv@grs:
  1351                           	callstack 0
  1352                           
  1353                           ; 4 bytes @ 0x3C
  1354   00003D                     	ds	4
  1355   000041                     ___fldiv@bexp:
  1356                           	callstack 0
  1357                           
  1358                           ; 1 bytes @ 0x40
  1359   000041                     	ds	1
  1360   000042                     ___fldiv@aexp:
  1361                           	callstack 0
  1362                           
  1363                           ; 1 bytes @ 0x41
  1364   000042                     	ds	1
  1365   000043                     ?___fladd:
  1366                           	callstack 0
  1367   000043                     ?_floorf:
  1368                           	callstack 0
  1369   000043                     ___fladd@b:
  1370                           	callstack 0
  1371   000043                     floorf@x:
  1372                           	callstack 0
  1373                           
  1374                           ; 4 bytes @ 0x42
  1375   000043                     	ds	4
  1376   000047                     ??_floorf:
  1377   000047                     ___fladd@a:
  1378                           	callstack 0
  1379                           
  1380                           ; 4 bytes @ 0x46
  1381   000047                     	ds	4
  1382   00004B                     ??___fladd:
  1383                           
  1384                           ; 1 bytes @ 0x4A
  1385   00004B                     	ds	2
  1386   00004D                     floorf@m:
  1387                           	callstack 0
  1388                           
  1389                           ; 4 bytes @ 0x4C
  1390   00004D                     	ds	2
  1391   00004F                     ___fladd@signs:
  1392                           	callstack 0
  1393                           
  1394                           ; 1 bytes @ 0x4E
  1395   00004F                     	ds	1
  1396   000050                     ___fladd@aexp:
  1397                           	callstack 0
  1398                           
  1399                           ; 1 bytes @ 0x4F
  1400   000050                     	ds	1
  1401   000051                     ___fladd@bexp:
  1402                           	callstack 0
  1403   000051                     floorf@e:
  1404                           	callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x50
  1407   000051                     	ds	1
  1408   000052                     ___fladd@grs:
  1409                           	callstack 0
  1410                           
  1411                           ; 1 bytes @ 0x51
  1412   000052                     	ds	1
  1413   000053                     ?___flsub:
  1414                           	callstack 0
  1415   000053                     ?___sindf:
  1416                           	callstack 0
  1417   000053                     ?___cosdf:
  1418                           	callstack 0
  1419   000053                     ?___fltol:
  1420                           	callstack 0
  1421   000053                     ___fltol@f1:
  1422                           	callstack 0
  1423   000053                     ___flsub@b:
  1424                           	callstack 0
  1425   000053                     floorf@u:
  1426                           	callstack 0
  1427   000053                     ___cosdf@x:
  1428                           	callstack 0
  1429   000053                     ___sindf@x:
  1430                           	callstack 0
  1431                           
  1432                           ; 4 bytes @ 0x52
  1433   000053                     	ds	4
  1434   000057                     ??___fltol:
  1435   000057                     ___flsub@a:
  1436                           	callstack 0
  1437                           
  1438                           ; 4 bytes @ 0x56
  1439   000057                     	ds	4
  1440   00005B                     
  1441                           ; 1 bytes @ 0x5A
  1442 ;;
  1443 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1444 ;;
  1445 ;; *************** function _main *****************
  1446 ;; Defined at:
  1447 ;;		line 10 in file "main.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  menuI           1   44[BANK1 ] unsigned char 
  1452 ;;  setUpAgain      1   43[BANK1 ] unsigned char 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;Total ram usage:        4 bytes
  1467 ;; Hardware stack levels required when called: 10
  1468 ;; This function calls:
  1469 ;;		_LCD_Init
  1470 ;;		_LCD_ShowString
  1471 ;;		_moveDisplay
  1472 ;;		_runADC
  1473 ;;		_runDAC
  1474 ;;		_runGPIO
  1475 ;; This function is called by:
  1476 ;;		Startup code after reset
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text0
  1481   003868                     __ptext0:
  1482                           	callstack 0
  1483   003868                     _main:
  1484                           	callstack 21
  1485   003868                     
  1486                           ;main.c: 12:     TRISCbits.RC0 = 1;
  1487   003868  8094               	bsf	148,0,c	;volatile
  1488                           
  1489                           ;main.c: 13:     TRISAbits.RA4 = 1;
  1490   00386A  8892               	bsf	146,4,c	;volatile
  1491                           
  1492                           ;main.c: 14:     TRISAbits.RA3 = 1;
  1493   00386C  8692               	bsf	146,3,c	;volatile
  1494                           
  1495                           ;main.c: 15:     TRISAbits.RA2 = 1;
  1496   00386E  8492               	bsf	146,2,c	;volatile
  1497                           
  1498                           ;main.c: 16:     ANSELAbits.ANSA3 = 0;
  1499   003870  010F               	movlb	15	; () banked
  1500   003872  9738               	bcf	56,3,b	;volatile
  1501                           
  1502                           ;main.c: 17:     ANSELAbits.ANSA2 = 0;
  1503   003874  9538               	bcf	56,2,b	;volatile
  1504                           
  1505                           ;main.c: 20:     TRISDbits.RD2 = 0;
  1506   003876  9495               	bcf	149,2,c	;volatile
  1507                           
  1508                           ;main.c: 21:     TRISDbits.RD3 = 0;
  1509   003878  9695               	bcf	149,3,c	;volatile
  1510                           
  1511                           ;main.c: 22:     TRISCbits.RC4 = 0;
  1512   00387A  9894               	bcf	148,4,c	;volatile
  1513                           
  1514                           ;main.c: 23:     TRISDbits.RD4 = 0;
  1515   00387C  9895               	bcf	149,4,c	;volatile
  1516                           
  1517                           ;main.c: 24:     TRISDbits.RD5 = 0;
  1518   00387E  9A95               	bcf	149,5,c	;volatile
  1519                           
  1520                           ;main.c: 25:     TRISDbits.RD6 = 0;
  1521   003880  9C95               	bcf	149,6,c	;volatile
  1522                           
  1523                           ;main.c: 26:     LATDbits.LD2 = 1;
  1524   003882  848C               	bsf	140,2,c	;volatile
  1525                           
  1526                           ;main.c: 27:     LATDbits.LD3 = 1;
  1527   003884  868C               	bsf	140,3,c	;volatile
  1528                           
  1529                           ;main.c: 28:     LATCbits.LC4 = 1;
  1530   003886  888B               	bsf	139,4,c	;volatile
  1531                           
  1532                           ;main.c: 29:     LATDbits.LD4 = 1;
  1533   003888  888C               	bsf	140,4,c	;volatile
  1534                           
  1535                           ;main.c: 30:     LATDbits.LD5 = 1;
  1536   00388A  8A8C               	bsf	140,5,c	;volatile
  1537                           
  1538                           ;main.c: 31:     LATDbits.LD6 = 1;
  1539   00388C  8C8C               	bsf	140,6,c	;volatile
  1540   00388E                     
  1541                           ; BSR set to: 15
  1542                           ;main.c: 34:     LCD_Init();
  1543   00388E  EC74  F025         	call	_LCD_Init	;wreg free
  1544   003892                     
  1545                           ;main.c: 35:     uint8_t menuI = 0;
  1546   003892  0E00               	movlw	0
  1547   003894  0101               	movlb	1	; () banked
  1548   003896  6F9E               	movwf	main@menuI& (0+255),b
  1549   003898                     
  1550                           ; BSR set to: 1
  1551                           ;main.c: 36:     uint8_t setUpAgain = 0;
  1552   003898  0E00               	movlw	0
  1553   00389A  6F9D               	movwf	main@setUpAgain& (0+255),b
  1554   00389C                     
  1555                           ; BSR set to: 1
  1556                           ;main.c: 43:     menuI = moveDisplay(menuI,0);
  1557   00389C  0E00               	movlw	0
  1558   00389E  0100               	movlb	0	; () banked
  1559   0038A0  6FDA               	movwf	moveDisplay@where& (0+255),b
  1560   0038A2  0101               	movlb	1	; () banked
  1561   0038A4  519E               	movf	main@menuI& (0+255),w,b
  1562   0038A6  EC66  F023         	call	_moveDisplay
  1563   0038AA  0101               	movlb	1	; () banked
  1564   0038AC  6F9E               	movwf	main@menuI& (0+255),b
  1565   0038AE                     l6662:
  1566                           
  1567                           ; BSR set to: 1
  1568                           ;main.c: 46:         if(PORTCbits.RC0){
  1569   0038AE  A082               	btfss	130,0,c	;volatile
  1570   0038B0  EF5C  F01C         	goto	u8791
  1571   0038B4  EF5E  F01C         	goto	u8790
  1572   0038B8                     u8791:
  1573   0038B8  EF81  F01C         	goto	l6672
  1574   0038BC                     u8790:
  1575   0038BC                     
  1576                           ; BSR set to: 1
  1577                           ;main.c: 47:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1578   0038BC  0E03               	movlw	3
  1579   0038BE  0100               	movlb	0	; () banked
  1580   0038C0  6FFB               	movwf	(??_main+1)& (0+255),b
  1581   0038C2  0E08               	movlw	8
  1582   0038C4  6FFA               	movwf	??_main& (0+255),b
  1583   0038C6  0E77               	movlw	119
  1584   0038C8                     u8897:
  1585   0038C8  2EE8               	decfsz	wreg,f,c
  1586   0038CA  D7FE               	bra	u8897
  1587   0038CC  2FFA               	decfsz	??_main& (0+255),f,b
  1588   0038CE  D7FC               	bra	u8897
  1589   0038D0  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1590   0038D2  D7FA               	bra	u8897
  1591   0038D4                     
  1592                           ;main.c: 48:             if(PORTCbits.RC0){
  1593   0038D4  A082               	btfss	130,0,c	;volatile
  1594   0038D6  EF6F  F01C         	goto	u8801
  1595   0038DA  EF71  F01C         	goto	u8800
  1596   0038DE                     u8801:
  1597   0038DE  EF81  F01C         	goto	l6672
  1598   0038E2                     u8800:
  1599   0038E2                     l42:
  1600   0038E2  B082               	btfsc	130,0,c	;volatile
  1601   0038E4  EF76  F01C         	goto	u8811
  1602   0038E8  EF78  F01C         	goto	u8810
  1603   0038EC                     u8811:
  1604   0038EC  EF71  F01C         	goto	l42
  1605   0038F0                     u8810:
  1606   0038F0                     
  1607                           ;main.c: 50:                 menuI = moveDisplay(menuI,2);
  1608   0038F0  0E02               	movlw	2
  1609   0038F2  0100               	movlb	0	; () banked
  1610   0038F4  6FDA               	movwf	moveDisplay@where& (0+255),b
  1611   0038F6  0101               	movlb	1	; () banked
  1612   0038F8  519E               	movf	main@menuI& (0+255),w,b
  1613   0038FA  EC66  F023         	call	_moveDisplay
  1614   0038FE  0101               	movlb	1	; () banked
  1615   003900  6F9E               	movwf	main@menuI& (0+255),b
  1616   003902                     l6672:
  1617                           
  1618                           ;main.c: 53:         if(PORTAbits.RA4){
  1619   003902  A880               	btfss	128,4,c	;volatile
  1620   003904  EF86  F01C         	goto	u8821
  1621   003908  EF88  F01C         	goto	u8820
  1622   00390C                     u8821:
  1623   00390C  EFAB  F01C         	goto	l6682
  1624   003910                     u8820:
  1625   003910                     
  1626                           ;main.c: 54:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1627   003910  0E03               	movlw	3
  1628   003912  0100               	movlb	0	; () banked
  1629   003914  6FFB               	movwf	(??_main+1)& (0+255),b
  1630   003916  0E08               	movlw	8
  1631   003918  6FFA               	movwf	??_main& (0+255),b
  1632   00391A  0E77               	movlw	119
  1633   00391C                     u8907:
  1634   00391C  2EE8               	decfsz	wreg,f,c
  1635   00391E  D7FE               	bra	u8907
  1636   003920  2FFA               	decfsz	??_main& (0+255),f,b
  1637   003922  D7FC               	bra	u8907
  1638   003924  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1639   003926  D7FA               	bra	u8907
  1640   003928                     
  1641                           ;main.c: 55:             if(PORTAbits.RA4){
  1642   003928  A880               	btfss	128,4,c	;volatile
  1643   00392A  EF99  F01C         	goto	u8831
  1644   00392E  EF9B  F01C         	goto	u8830
  1645   003932                     u8831:
  1646   003932  EFAB  F01C         	goto	l6682
  1647   003936                     u8830:
  1648   003936                     l47:
  1649   003936  B880               	btfsc	128,4,c	;volatile
  1650   003938  EFA0  F01C         	goto	u8841
  1651   00393C  EFA2  F01C         	goto	u8840
  1652   003940                     u8841:
  1653   003940  EF9B  F01C         	goto	l47
  1654   003944                     u8840:
  1655   003944                     
  1656                           ;main.c: 57:                 menuI = moveDisplay(menuI,1);
  1657   003944  0E01               	movlw	1
  1658   003946  0100               	movlb	0	; () banked
  1659   003948  6FDA               	movwf	moveDisplay@where& (0+255),b
  1660   00394A  0101               	movlb	1	; () banked
  1661   00394C  519E               	movf	main@menuI& (0+255),w,b
  1662   00394E  EC66  F023         	call	_moveDisplay
  1663   003952  0101               	movlb	1	; () banked
  1664   003954  6F9E               	movwf	main@menuI& (0+255),b
  1665   003956                     l6682:
  1666                           
  1667                           ;main.c: 60:         if(PORTAbits.RA3){
  1668   003956  A680               	btfss	128,3,c	;volatile
  1669   003958  EFB0  F01C         	goto	u8851
  1670   00395C  EFB2  F01C         	goto	u8850
  1671   003960                     u8851:
  1672   003960  EF2A  F01D         	goto	l50
  1673   003964                     u8850:
  1674   003964                     
  1675                           ;main.c: 61:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1676   003964  0E03               	movlw	3
  1677   003966  0100               	movlb	0	; () banked
  1678   003968  6FFB               	movwf	(??_main+1)& (0+255),b
  1679   00396A  0E08               	movlw	8
  1680   00396C  6FFA               	movwf	??_main& (0+255),b
  1681   00396E  0E77               	movlw	119
  1682   003970                     u8917:
  1683   003970  2EE8               	decfsz	wreg,f,c
  1684   003972  D7FE               	bra	u8917
  1685   003974  2FFA               	decfsz	??_main& (0+255),f,b
  1686   003976  D7FC               	bra	u8917
  1687   003978  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1688   00397A  D7FA               	bra	u8917
  1689   00397C                     
  1690                           ;main.c: 62:             if(PORTAbits.RA3){
  1691   00397C  A680               	btfss	128,3,c	;volatile
  1692   00397E  EFC3  F01C         	goto	u8861
  1693   003982  EFC5  F01C         	goto	u8860
  1694   003986                     u8861:
  1695   003986  EF2A  F01D         	goto	l50
  1696   00398A                     u8860:
  1697   00398A                     l52:
  1698   00398A  B680               	btfsc	128,3,c	;volatile
  1699   00398C  EFCA  F01C         	goto	u8871
  1700   003990  EFCC  F01C         	goto	u8870
  1701   003994                     u8871:
  1702   003994  EFC5  F01C         	goto	l52
  1703   003998                     u8870:
  1704   003998  EF0A  F01D         	goto	l6710
  1705   00399C                     l6690:
  1706                           
  1707                           ; BSR set to: 1
  1708                           ;main.c: 66:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  1709   00399C  0E65               	movlw	low STR_1
  1710   00399E  6E04               	movwf	LCD_ShowString@textData^0,c
  1711   0039A0  5004               	movf	LCD_ShowString@textData^0,w,c
  1712   0039A2  A4D8               	btfss	status,2,c
  1713   0039A4  0E10               	movlw	high __smallconst
  1714   0039A6  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1715   0039A8  0E01               	movlw	1
  1716   0039AA  ECA8  F026         	call	_LCD_ShowString
  1717                           
  1718                           ;main.c: 67:                         LCD_ShowString((char)2, "                ");
  1719   0039AE  0E54               	movlw	low STR_2
  1720   0039B0  6E04               	movwf	LCD_ShowString@textData^0,c
  1721   0039B2  5004               	movf	LCD_ShowString@textData^0,w,c
  1722   0039B4  A4D8               	btfss	status,2,c
  1723   0039B6  0E10               	movlw	high __smallconst
  1724   0039B8  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1725   0039BA  0E02               	movlw	2
  1726   0039BC  ECA8  F026         	call	_LCD_ShowString
  1727   0039C0                     
  1728                           ;main.c: 68:                         runGPIO();
  1729   0039C0  ECB4  F022         	call	_runGPIO	;wreg free
  1730   0039C4                     l6694:
  1731                           
  1732                           ;main.c: 69:                         setUpAgain = 1;
  1733   0039C4  0E01               	movlw	1
  1734   0039C6  0101               	movlb	1	; () banked
  1735   0039C8  6F9D               	movwf	main@setUpAgain& (0+255),b
  1736                           
  1737                           ;main.c: 70:                         break;
  1738   0039CA  EF2A  F01D         	goto	l50
  1739   0039CE                     l6696:
  1740                           
  1741                           ; BSR set to: 1
  1742                           ;main.c: 76:                         LCD_ShowString((char)1, "Volty na POT:   ");
  1743   0039CE  0E76               	movlw	low STR_3
  1744   0039D0  6E04               	movwf	LCD_ShowString@textData^0,c
  1745   0039D2  5004               	movf	LCD_ShowString@textData^0,w,c
  1746   0039D4  A4D8               	btfss	status,2,c
  1747   0039D6  0E10               	movlw	high __smallconst
  1748   0039D8  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1749   0039DA  0E01               	movlw	1
  1750   0039DC  ECA8  F026         	call	_LCD_ShowString
  1751   0039E0                     
  1752                           ;main.c: 77:                         runADC();
  1753   0039E0  EC4B  F01F         	call	_runADC	;wreg free
  1754   0039E4  EFE2  F01C         	goto	l6694
  1755   0039E8                     l6702:
  1756                           
  1757                           ; BSR set to: 1
  1758                           ;main.c: 81:                         LCD_ShowString((char)1, "RB0-A2, BR: 9600");
  1759   0039E8  0E87               	movlw	low STR_4
  1760   0039EA  6E04               	movwf	LCD_ShowString@textData^0,c
  1761   0039EC  5004               	movf	LCD_ShowString@textData^0,w,c
  1762   0039EE  A4D8               	btfss	status,2,c
  1763   0039F0  0E10               	movlw	high __smallconst
  1764   0039F2  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1765   0039F4  0E01               	movlw	1
  1766   0039F6  ECA8  F026         	call	_LCD_ShowString
  1767                           
  1768                           ;main.c: 82:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  1769   0039FA  0E98               	movlw	low STR_5
  1770   0039FC  6E04               	movwf	LCD_ShowString@textData^0,c
  1771   0039FE  5004               	movf	LCD_ShowString@textData^0,w,c
  1772   003A00  A4D8               	btfss	status,2,c
  1773   003A02  0E10               	movlw	high __smallconst
  1774   003A04  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1775   003A06  0E02               	movlw	2
  1776   003A08  ECA8  F026         	call	_LCD_ShowString
  1777   003A0C                     
  1778                           ;main.c: 83:                         runDAC();
  1779   003A0C  ECF6  F019         	call	_runDAC	;wreg free
  1780   003A10  EFE2  F01C         	goto	l6694
  1781   003A14                     l6710:
  1782   003A14  0101               	movlb	1	; () banked
  1783   003A16  519E               	movf	main@menuI& (0+255),w,b
  1784                           
  1785                           ; Switch size 1, requested type "simple"
  1786                           ; Number of cases is 7, Range of values is 0 to 6
  1787                           ; switch strategies available:
  1788                           ; Name         Instructions Cycles
  1789                           ; simple_byte           22    12 (average)
  1790                           ;	Chosen strategy is simple_byte
  1791   003A18  0A00               	xorlw	0	; case 0
  1792   003A1A  B4D8               	btfsc	status,2,c
  1793   003A1C  EFCE  F01C         	goto	l6690
  1794   003A20  0A01               	xorlw	1	; case 1
  1795   003A22  B4D8               	btfsc	status,2,c
  1796   003A24  EF2A  F01D         	goto	l50
  1797   003A28  0A03               	xorlw	3	; case 2
  1798   003A2A  B4D8               	btfsc	status,2,c
  1799   003A2C  EF2A  F01D         	goto	l50
  1800   003A30  0A01               	xorlw	1	; case 3
  1801   003A32  B4D8               	btfsc	status,2,c
  1802   003A34  EFE7  F01C         	goto	l6696
  1803   003A38  0A07               	xorlw	7	; case 4
  1804   003A3A  B4D8               	btfsc	status,2,c
  1805   003A3C  EFF4  F01C         	goto	l6702
  1806   003A40  0A01               	xorlw	1	; case 5
  1807   003A42  B4D8               	btfsc	status,2,c
  1808   003A44  EF2A  F01D         	goto	l50
  1809   003A48  0A03               	xorlw	3	; case 6
  1810   003A4A  B4D8               	btfsc	status,2,c
  1811   003A4C  EF2A  F01D         	goto	l50
  1812   003A50  EF2A  F01D         	goto	l50
  1813   003A54                     l50:
  1814                           
  1815                           ;main.c: 94:         if(PORTAbits.RA2){
  1816   003A54  5080               	movf	128,w,c	;volatile
  1817   003A56                     
  1818                           ;main.c: 98:         if(setUpAgain){
  1819   003A56  0101               	movlb	1	; () banked
  1820   003A58  519D               	movf	main@setUpAgain& (0+255),w,b
  1821   003A5A  B4D8               	btfsc	status,2,c
  1822   003A5C  EF32  F01D         	goto	u8881
  1823   003A60  EF34  F01D         	goto	u8880
  1824   003A64                     u8881:
  1825   003A64  EF57  F01C         	goto	l6662
  1826   003A68                     u8880:
  1827   003A68                     
  1828                           ; BSR set to: 1
  1829                           ;main.c: 99:         menuI = moveDisplay(menuI,0);
  1830   003A68  0E00               	movlw	0
  1831   003A6A  0100               	movlb	0	; () banked
  1832   003A6C  6FDA               	movwf	moveDisplay@where& (0+255),b
  1833   003A6E  0101               	movlb	1	; () banked
  1834   003A70  519E               	movf	main@menuI& (0+255),w,b
  1835   003A72  EC66  F023         	call	_moveDisplay
  1836   003A76  0101               	movlb	1	; () banked
  1837   003A78  6F9E               	movwf	main@menuI& (0+255),b
  1838   003A7A                     
  1839                           ; BSR set to: 1
  1840                           ;main.c: 100:         setUpAgain = 0;
  1841   003A7A  0E00               	movlw	0
  1842   003A7C  6F9D               	movwf	main@setUpAgain& (0+255),b
  1843   003A7E  EF57  F01C         	goto	l6662
  1844   003A82  EF47  F000         	goto	start
  1845   003A86                     __end_of_main:
  1846                           	callstack 0
  1847                           
  1848 ;; *************** function _runGPIO *****************
  1849 ;; Defined at:
  1850 ;;		line 19 in file "GPIO.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;		None
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  j               2   33[COMRAM] int 
  1855 ;;  states         12    5[COMRAM] unsigned char [12]
  1856 ;;  LEDControl     12   17[COMRAM] PTR FTN(unsigned char ,)
  1857 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  1858 ;;		 -> LED2_Control(1), LED1_Control(1), 
  1859 ;;  numberOfStat    2   30[COMRAM] int 
  1860 ;;  GPIOi           1   32[COMRAM] unsigned char 
  1861 ;;  GPIOreverse     1   29[COMRAM] unsigned char 
  1862 ;;  GPIOindex       1    0        unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Locals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;Total ram usage:       32 bytes
  1877 ;; Hardware stack levels used: 1
  1878 ;; Hardware stack levels required when called: 2
  1879 ;; This function calls:
  1880 ;;		_LED1_Control
  1881 ;;		_LED2_Control
  1882 ;;		_LED3_Control
  1883 ;;		_LED4_Control
  1884 ;;		_LED5_Control
  1885 ;;		_LED6_Control
  1886 ;; This function is called by:
  1887 ;;		_main
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text1
  1892   004568                     __ptext1:
  1893                           	callstack 0
  1894   004568                     _runGPIO:
  1895                           	callstack 28
  1896   004568                     
  1897                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  1898   004568  9495               	bcf	149,2,c	;volatile
  1899                           
  1900                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  1901   00456A  9695               	bcf	149,3,c	;volatile
  1902                           
  1903                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  1904   00456C  9894               	bcf	148,4,c	;volatile
  1905                           
  1906                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  1907   00456E  9895               	bcf	149,4,c	;volatile
  1908                           
  1909                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  1910   004570  9A95               	bcf	149,5,c	;volatile
  1911                           
  1912                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  1913   004572  9C95               	bcf	149,6,c	;volatile
  1914                           
  1915                           ;GPIO.c: 27:     LATDbits.LD2 = 1;
  1916   004574  848C               	bsf	140,2,c	;volatile
  1917                           
  1918                           ;GPIO.c: 28:     LATDbits.LD3 = 1;
  1919   004576  868C               	bsf	140,3,c	;volatile
  1920                           
  1921                           ;GPIO.c: 29:     LATCbits.LC4 = 1;
  1922   004578  888B               	bsf	139,4,c	;volatile
  1923                           
  1924                           ;GPIO.c: 30:     LATDbits.LD4 = 1;
  1925   00457A  888C               	bsf	140,4,c	;volatile
  1926                           
  1927                           ;GPIO.c: 31:     LATDbits.LD5 = 1;
  1928   00457C  8A8C               	bsf	140,5,c	;volatile
  1929                           
  1930                           ;GPIO.c: 32:     LATDbits.LD6 = 1;
  1931   00457E  8C8C               	bsf	140,6,c	;volatile
  1932                           
  1933                           ;GPIO.c: 35:     TRISAbits.RA2 = 1;
  1934   004580  8492               	bsf	146,2,c	;volatile
  1935                           
  1936                           ;GPIO.c: 36:     ANSELAbits.ANSA2 = 0;
  1937   004582  010F               	movlb	15	; () banked
  1938   004584  9538               	bcf	56,2,b	;volatile
  1939   004586                     
  1940                           ; BSR set to: 15
  1941                           ;GPIO.c: 40:     T1CONbits.TMR1CS = 0b00;
  1942   004586  0E3F               	movlw	-193
  1943   004588  16CD               	andwf	205,f,c	;volatile
  1944                           
  1945                           ;GPIO.c: 41:     T1CONbits.T1CKPS = 0b11;
  1946   00458A  0E30               	movlw	48
  1947   00458C  12CD               	iorwf	205,f,c	;volatile
  1948   00458E                     
  1949                           ; BSR set to: 15
  1950                           ;GPIO.c: 42:     TMR1IE = 1;
  1951   00458E  809D               	bsf	3997,0,c	;volatile
  1952   004590                     
  1953                           ; BSR set to: 15
  1954                           ;GPIO.c: 43:     PEIE = 1;
  1955   004590  8CF2               	bsf	4082,6,c	;volatile
  1956   004592                     
  1957                           ; BSR set to: 15
  1958                           ;GPIO.c: 44:     GIE = 1;
  1959   004592  8EF2               	bsf	4082,7,c	;volatile
  1960                           
  1961                           ;GPIO.c: 45:     GPIOIE = 1;
  1962   004594  0E01               	movlw	1
  1963   004596  0101               	movlb	1	; () banked
  1964   004598  6F21               	movwf	_GPIOIE& (0+255),b
  1965   00459A                     
  1966                           ; BSR set to: 1
  1967                           ;GPIO.c: 46:     TMR1IF = 1;
  1968   00459A  809E               	bsf	3998,0,c	;volatile
  1969                           
  1970                           ;GPIO.c: 47:     TMR1 = 0xFFFF - (25000 - 1);
  1971   00459C  0E9E               	movlw	158
  1972   00459E  6ECF               	movwf	207,c	;volatile
  1973   0045A0  0E58               	movlw	88
  1974   0045A2  6ECE               	movwf	206,c	;volatile
  1975   0045A4                     
  1976                           ; BSR set to: 1
  1977                           ;GPIO.c: 48:     TMR1ON = 1;
  1978   0045A4  80CD               	bsf	4045,0,c	;volatile
  1979                           
  1980                           ;GPIO.c: 51:     keepStateGPIO = 1;
  1981   0045A6  0E01               	movlw	1
  1982   0045A8  0100               	movlb	0	; () banked
  1983   0045AA  6FFF               	movwf	_keepStateGPIO& (0+255),b
  1984                           
  1985                           ;GPIO.c: 54:     uint8_t GPIOreverse;;GPIO.c: 55:     GPIOreverse = 0;
  1986   0045AC  0E00               	movlw	0
  1987   0045AE  6E1E               	movwf	runGPIO@GPIOreverse^0,c
  1988   0045B0                     
  1989                           ; BSR set to: 0
  1990                           ;GPIO.c: 57:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  1991   0045B0  EE21  F0AB         	lfsr	2,runGPIO@F6965
  1992   0045B4  EE10  F012         	lfsr	1,runGPIO@LEDControl
  1993   0045B8  0E0B               	movlw	11
  1994   0045BA                     u8551:
  1995   0045BA  CFDB FFE3          	movff	plusw2,plusw1
  1996   0045BE  06E8               	decf	wreg,f,c
  1997   0045C0  E2FC               	bc	u8551
  1998   0045C2                     
  1999                           ; BSR set to: 0
  2000                           ;GPIO.c: 58:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  2001   0045C2  EE21  F09F         	lfsr	2,runGPIO@F6983
  2002   0045C6  EE10  F006         	lfsr	1,runGPIO@states
  2003   0045CA  0E0B               	movlw	11
  2004   0045CC                     u8561:
  2005   0045CC  CFDB FFE3          	movff	plusw2,plusw1
  2006   0045D0  06E8               	decf	wreg,f,c
  2007   0045D2  E2FC               	bc	u8561
  2008                           
  2009                           ;GPIO.c: 59:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  2010   0045D4  0E00               	movlw	0
  2011   0045D6  6E20               	movwf	(runGPIO@numberOfStates+1)^0,c
  2012   0045D8  0E0C               	movlw	12
  2013   0045DA  6E1F               	movwf	runGPIO@numberOfStates^0,c
  2014                           
  2015                           ;GPIO.c: 60:     uint8_t GPIOi;;GPIO.c: 61:     GPIOi = 0;
  2016   0045DC  0E00               	movlw	0
  2017   0045DE  6E21               	movwf	runGPIO@GPIOi^0,c
  2018                           
  2019                           ;GPIO.c: 63:     while(keepStateGPIO){
  2020   0045E0  EF51  F023         	goto	l312
  2021   0045E4                     l6520:
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;GPIO.c: 65:         for(int j = 0; j < 6; j++) {
  2025   0045E4  0E00               	movlw	0
  2026   0045E6  6E23               	movwf	(runGPIO@j+1)^0,c
  2027   0045E8  0E00               	movlw	0
  2028   0045EA  6E22               	movwf	runGPIO@j^0,c
  2029   0045EC                     l6526:
  2030                           
  2031                           ;GPIO.c: 66:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  2032   0045EC  5022               	movf	runGPIO@j^0,w,c
  2033   0045EE  0D02               	mullw	2
  2034   0045F0  50F3               	movf	243,w,c
  2035   0045F2  0F12               	addlw	low runGPIO@LEDControl
  2036   0045F4  6ED9               	movwf	fsr2l,c
  2037   0045F6  6ADA               	clrf	fsr2h,c
  2038   0045F8  D802               	call	u8578
  2039   0045FA  EF23  F023         	goto	u8579
  2040   0045FE                     u8578:
  2041   0045FE  0005               	push	
  2042   004600  6EFA               	movwf	pclath,c
  2043   004602  50DE               	movf	postinc2,w,c
  2044   004604  6EFD               	movwf	tosl,c
  2045   004606  50DE               	movf	postinc2,w,c
  2046   004608  6EFE               	movwf	tosh,c
  2047   00460A  50F8               	movf	tblptru,w,c
  2048   00460C  6EFF               	movwf	tosu,c
  2049   00460E  50FA               	movf	pclath,w,c
  2050   004610  5022               	movf	runGPIO@j^0,w,c
  2051   004612  0805               	sublw	5
  2052   004614  6E04               	movwf	??_runGPIO^0,c
  2053   004616  5021               	movf	runGPIO@GPIOi^0,w,c
  2054   004618  0F06               	addlw	low runGPIO@states
  2055   00461A  6ED9               	movwf	fsr2l,c
  2056   00461C  6ADA               	clrf	fsr2h,c
  2057   00461E  50DF               	movf	indf2,w,c
  2058   004620  6E05               	movwf	(??_runGPIO+1)^0,c
  2059   004622  2A04               	incf	??_runGPIO^0,f,c
  2060   004624  EF16  F023         	goto	u8584
  2061   004628                     u8585:
  2062   004628  90D8               	bcf	status,0,c
  2063   00462A  3205               	rrcf	(??_runGPIO+1)^0,f,c
  2064   00462C                     u8584:
  2065   00462C  2E04               	decfsz	??_runGPIO^0,f,c
  2066   00462E  EF14  F023         	goto	u8585
  2067   004632  A005               	btfss	(??_runGPIO+1)^0,0,c
  2068   004634  EF1E  F023         	goto	u8591
  2069   004638  EF21  F023         	goto	u8590
  2070   00463C                     u8591:
  2071   00463C  0E01               	movlw	1
  2072   00463E  EF22  F023         	goto	u8600
  2073   004642                     u8590:
  2074   004642  0E00               	movlw	0
  2075   004644                     u8600:
  2076   004644  0012               	return		;indir
  2077   004646                     u8579:
  2078   004646                     
  2079                           ;GPIO.c: 67:         }
  2080   004646  4A22               	infsnz	runGPIO@j^0,f,c
  2081   004648  2A23               	incf	(runGPIO@j+1)^0,f,c
  2082   00464A  BE23               	btfsc	(runGPIO@j+1)^0,7,c
  2083   00464C  EF31  F023         	goto	u8611
  2084   004650  5023               	movf	(runGPIO@j+1)^0,w,c
  2085   004652  E109               	bnz	u8610
  2086   004654  0E06               	movlw	6
  2087   004656  5C22               	subwf	runGPIO@j^0,w,c
  2088   004658  A0D8               	btfss	status,0,c
  2089   00465A  EF31  F023         	goto	u8611
  2090   00465E  EF33  F023         	goto	u8610
  2091   004662                     u8611:
  2092   004662  EFF6  F022         	goto	l6526
  2093   004666                     u8610:
  2094   004666                     
  2095                           ;GPIO.c: 68:         _delay((unsigned long)((400)*(32E6/4000.0)));
  2096   004666  0E11               	movlw	17
  2097   004668  6E05               	movwf	(??_runGPIO+1)^0,c
  2098   00466A  0E3C               	movlw	60
  2099   00466C  6E04               	movwf	??_runGPIO^0,c
  2100   00466E  0ECB               	movlw	203
  2101   004670                     u8927:
  2102   004670  2EE8               	decfsz	wreg,f,c
  2103   004672  D7FE               	bra	u8927
  2104   004674  2E04               	decfsz	??_runGPIO^0,f,c
  2105   004676  D7FC               	bra	u8927
  2106   004678  2E05               	decfsz	(??_runGPIO+1)^0,f,c
  2107   00467A  D7FA               	bra	u8927
  2108   00467C  0000               	nop	
  2109   00467E                     
  2110                           ;GPIO.c: 69:         GPIOi++;
  2111   00467E  2A21               	incf	runGPIO@GPIOi^0,f,c
  2112                           
  2113                           ;GPIO.c: 70:         if(GPIOi == numberOfStates){
  2114   004680  5021               	movf	runGPIO@GPIOi^0,w,c
  2115   004682  6E04               	movwf	??_runGPIO^0,c
  2116   004684  6A05               	clrf	(??_runGPIO+1)^0,c
  2117   004686  501F               	movf	runGPIO@numberOfStates^0,w,c
  2118   004688  1804               	xorwf	??_runGPIO^0,w,c
  2119   00468A  E107               	bnz	u8621
  2120   00468C  5020               	movf	(runGPIO@numberOfStates+1)^0,w,c
  2121   00468E  1805               	xorwf	(??_runGPIO+1)^0,w,c
  2122   004690  A4D8               	btfss	status,2,c
  2123   004692  EF4D  F023         	goto	u8621
  2124   004696  EF4F  F023         	goto	u8620
  2125   00469A                     u8621:
  2126   00469A  EF51  F023         	goto	l312
  2127   00469E                     u8620:
  2128   00469E                     
  2129                           ;GPIO.c: 71:             GPIOi = 0;
  2130   00469E  0E00               	movlw	0
  2131   0046A0  6E21               	movwf	runGPIO@GPIOi^0,c
  2132   0046A2                     l312:
  2133                           
  2134                           ;GPIO.c: 63:     while(keepStateGPIO){
  2135   0046A2  0100               	movlb	0	; () banked
  2136   0046A4  51FF               	movf	_keepStateGPIO& (0+255),w,b
  2137   0046A6  A4D8               	btfss	status,2,c
  2138   0046A8  EF58  F023         	goto	u8631
  2139   0046AC  EF5A  F023         	goto	u8630
  2140   0046B0                     u8631:
  2141   0046B0  EFF2  F022         	goto	l6520
  2142   0046B4                     u8630:
  2143   0046B4                     
  2144                           ; BSR set to: 0
  2145                           ;GPIO.c: 76:     LATDbits.LD2 = 1;
  2146   0046B4  848C               	bsf	140,2,c	;volatile
  2147                           
  2148                           ;GPIO.c: 77:     LATDbits.LD3 = 1;
  2149   0046B6  868C               	bsf	140,3,c	;volatile
  2150                           
  2151                           ;GPIO.c: 78:     LATCbits.LC4 = 1;
  2152   0046B8  888B               	bsf	139,4,c	;volatile
  2153                           
  2154                           ;GPIO.c: 79:     LATDbits.LD4 = 1;
  2155   0046BA  888C               	bsf	140,4,c	;volatile
  2156                           
  2157                           ;GPIO.c: 80:     LATDbits.LD5 = 1;
  2158   0046BC  8A8C               	bsf	140,5,c	;volatile
  2159                           
  2160                           ;GPIO.c: 81:     LATDbits.LD6 = 1;
  2161   0046BE  8C8C               	bsf	140,6,c	;volatile
  2162                           
  2163                           ;GPIO.c: 82:     TMR1ON = 0;
  2164   0046C0  90CD               	bcf	4045,0,c	;volatile
  2165                           
  2166                           ;GPIO.c: 83:     TMR1IE = 0;
  2167   0046C2  909D               	bcf	3997,0,c	;volatile
  2168   0046C4                     
  2169                           ; BSR set to: 0
  2170                           ;GPIO.c: 84:     GPIOIE = 0;
  2171   0046C4  0E00               	movlw	0
  2172   0046C6  0101               	movlb	1	; () banked
  2173   0046C8  6F21               	movwf	_GPIOIE& (0+255),b
  2174   0046CA                     
  2175                           ; BSR set to: 1
  2176   0046CA  0012               	return		;funcret
  2177   0046CC                     __end_of_runGPIO:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _LED5_Control *****************
  2181 ;; Defined at:
  2182 ;;		line 14 in file "GPIO.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  state           1    wreg     unsigned char 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  state           1    2[COMRAM] unsigned char 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;Total ram usage:        1 bytes
  2201 ;; Hardware stack levels used: 1
  2202 ;; Hardware stack levels required when called: 1
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_runGPIO
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text2
  2211   005492                     __ptext2:
  2212                           	callstack 0
  2213   005492                     _LED5_Control:
  2214                           	callstack 28
  2215                           
  2216                           ; BSR set to: 1
  2217                           ;incstack = 0
  2218                           ;LED5_Control@state stored from wreg
  2219   005492  6E03               	movwf	LED5_Control@state^0,c
  2220   005494  B003               	btfsc	LED5_Control@state^0,0,c
  2221   005496  D002               	bra	u8485
  2222   005498  9A8C               	bcf	140,5,c	;volatile
  2223   00549A  D001               	bra	u8486
  2224   00549C                     u8485:
  2225   00549C  8A8C               	bsf	140,5,c	;volatile
  2226   00549E                     u8486:
  2227   00549E  0012               	return		;funcret
  2228   0054A0                     __end_of_LED5_Control:
  2229                           	callstack 0
  2230                           
  2231 ;; *************** function _LED4_Control *****************
  2232 ;; Defined at:
  2233 ;;		line 13 in file "GPIO.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  state           1    wreg     unsigned char 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  state           1    2[COMRAM] unsigned char 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;Total ram usage:        1 bytes
  2252 ;; Hardware stack levels used: 1
  2253 ;; Hardware stack levels required when called: 1
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_runGPIO
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text3
  2262   0054A0                     __ptext3:
  2263                           	callstack 0
  2264   0054A0                     _LED4_Control:
  2265                           	callstack 28
  2266                           
  2267                           ;incstack = 0
  2268                           ;LED4_Control@state stored from wreg
  2269   0054A0  6E03               	movwf	LED4_Control@state^0,c
  2270   0054A2  B003               	btfsc	LED4_Control@state^0,0,c
  2271   0054A4  D002               	bra	u8475
  2272   0054A6  988C               	bcf	140,4,c	;volatile
  2273   0054A8  D001               	bra	u8476
  2274   0054AA                     u8475:
  2275   0054AA  888C               	bsf	140,4,c	;volatile
  2276   0054AC                     u8476:
  2277   0054AC  0012               	return		;funcret
  2278   0054AE                     __end_of_LED4_Control:
  2279                           	callstack 0
  2280                           
  2281 ;; *************** function _LED3_Control *****************
  2282 ;; Defined at:
  2283 ;;		line 12 in file "GPIO.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  state           1    wreg     unsigned char 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  state           1    2[COMRAM] unsigned char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;Total ram usage:        1 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 1
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_runGPIO
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text4
  2312   0054AE                     __ptext4:
  2313                           	callstack 0
  2314   0054AE                     _LED3_Control:
  2315                           	callstack 28
  2316                           
  2317                           ;incstack = 0
  2318                           ;LED3_Control@state stored from wreg
  2319   0054AE  6E03               	movwf	LED3_Control@state^0,c
  2320   0054B0  B003               	btfsc	LED3_Control@state^0,0,c
  2321   0054B2  D002               	bra	u8465
  2322   0054B4  988B               	bcf	139,4,c	;volatile
  2323   0054B6  D001               	bra	u8466
  2324   0054B8                     u8465:
  2325   0054B8  888B               	bsf	139,4,c	;volatile
  2326   0054BA                     u8466:
  2327   0054BA  0012               	return		;funcret
  2328   0054BC                     __end_of_LED3_Control:
  2329                           	callstack 0
  2330                           
  2331 ;; *************** function _LED2_Control *****************
  2332 ;; Defined at:
  2333 ;;		line 11 in file "GPIO.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  state           1    wreg     unsigned char 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  state           1    2[COMRAM] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2351 ;;Total ram usage:        1 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; Hardware stack levels required when called: 1
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_runGPIO
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text5
  2362   0054BC                     __ptext5:
  2363                           	callstack 0
  2364   0054BC                     _LED2_Control:
  2365                           	callstack 28
  2366                           
  2367                           ;incstack = 0
  2368                           ;LED2_Control@state stored from wreg
  2369   0054BC  6E03               	movwf	LED2_Control@state^0,c
  2370   0054BE  B003               	btfsc	LED2_Control@state^0,0,c
  2371   0054C0  D002               	bra	u8455
  2372   0054C2  968C               	bcf	140,3,c	;volatile
  2373   0054C4  D001               	bra	u8456
  2374   0054C6                     u8455:
  2375   0054C6  868C               	bsf	140,3,c	;volatile
  2376   0054C8                     u8456:
  2377   0054C8  0012               	return		;funcret
  2378   0054CA                     __end_of_LED2_Control:
  2379                           	callstack 0
  2380                           
  2381 ;; *************** function _LED1_Control *****************
  2382 ;; Defined at:
  2383 ;;		line 10 in file "GPIO.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  state           1    wreg     unsigned char 
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;  state           1    2[COMRAM] unsigned char 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;Total ram usage:        1 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 1
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_runGPIO
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text6
  2412   0054CA                     __ptext6:
  2413                           	callstack 0
  2414   0054CA                     _LED1_Control:
  2415                           	callstack 28
  2416                           
  2417                           ;incstack = 0
  2418                           ;LED1_Control@state stored from wreg
  2419   0054CA  6E03               	movwf	LED1_Control@state^0,c
  2420   0054CC  B003               	btfsc	LED1_Control@state^0,0,c
  2421   0054CE  D002               	bra	u8445
  2422   0054D0  948C               	bcf	140,2,c	;volatile
  2423   0054D2  D001               	bra	u8446
  2424   0054D4                     u8445:
  2425   0054D4  848C               	bsf	140,2,c	;volatile
  2426   0054D6                     u8446:
  2427   0054D6  0012               	return		;funcret
  2428   0054D8                     __end_of_LED1_Control:
  2429                           	callstack 0
  2430                           
  2431 ;; *************** function _LED6_Control *****************
  2432 ;; Defined at:
  2433 ;;		line 15 in file "GPIO.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  state           1    wreg     unsigned char 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;  state           1    2[COMRAM] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;Total ram usage:        1 bytes
  2452 ;; Hardware stack levels used: 1
  2453 ;; Hardware stack levels required when called: 1
  2454 ;; This function calls:
  2455 ;;		Nothing
  2456 ;; This function is called by:
  2457 ;;		_runGPIO
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           	psect	text7
  2462   0054D8                     __ptext7:
  2463                           	callstack 0
  2464   0054D8                     _LED6_Control:
  2465                           	callstack 28
  2466                           
  2467                           ;incstack = 0
  2468                           ;LED6_Control@state stored from wreg
  2469   0054D8  6E03               	movwf	LED6_Control@state^0,c
  2470   0054DA  B003               	btfsc	LED6_Control@state^0,0,c
  2471   0054DC  D002               	bra	u8495
  2472   0054DE  9C8C               	bcf	140,6,c	;volatile
  2473   0054E0  D001               	bra	u8496
  2474   0054E2                     u8495:
  2475   0054E2  8C8C               	bsf	140,6,c	;volatile
  2476   0054E4                     u8496:
  2477   0054E4  0012               	return		;funcret
  2478   0054E6                     __end_of_LED6_Control:
  2479                           	callstack 0
  2480                           
  2481 ;; *************** function _runDAC *****************
  2482 ;; Defined at:
  2483 ;;		line 10 in file "DAC.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;		None
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  DACindex        1  113[BANK0 ] unsigned char 
  2488 ;;  selectModeDA    1  112[BANK0 ] unsigned char 
  2489 ;;  keepState       1  111[BANK0 ] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;Total ram usage:       12 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; Hardware stack levels required when called: 9
  2506 ;; This function calls:
  2507 ;;		_SPI_write
  2508 ;;		___fladd
  2509 ;;		___fldiv
  2510 ;;		___flmul
  2511 ;;		___fltol
  2512 ;;		___xxtofl
  2513 ;;		_printf
  2514 ;;		_sinf
  2515 ;; This function is called by:
  2516 ;;		_main
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text8
  2521   0033EC                     __ptext8:
  2522                           	callstack 0
  2523   0033EC                     _runDAC:
  2524                           	callstack 21
  2525   0033EC                     
  2526                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  2527   0033EC  8094               	bsf	148,0,c	;volatile
  2528                           
  2529                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  2530   0033EE  8892               	bsf	146,4,c	;volatile
  2531                           
  2532                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  2533   0033F0  8692               	bsf	146,3,c	;volatile
  2534                           
  2535                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  2536   0033F2  8492               	bsf	146,2,c	;volatile
  2537                           
  2538                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  2539   0033F4  010F               	movlb	15	; () banked
  2540   0033F6  9738               	bcf	56,3,b	;volatile
  2541                           
  2542                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  2543   0033F8  9538               	bcf	56,2,b	;volatile
  2544                           
  2545                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  2546   0033FA  9693               	bcf	147,3,c	;volatile
  2547                           
  2548                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  2549   0033FC  9694               	bcf	148,3,c	;volatile
  2550                           
  2551                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  2552   0033FE  9A94               	bcf	148,5,c	;volatile
  2553   003400                     
  2554                           ; BSR set to: 15
  2555                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  2556   003400  50C6               	movf	198,w,c	;volatile
  2557   003402  0BF0               	andlw	-16
  2558   003404  0902               	iorlw	2
  2559   003406  6EC6               	movwf	198,c	;volatile
  2560   003408                     
  2561                           ; BSR set to: 15
  2562                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  2563   003408  98C6               	bcf	198,4,c	;volatile
  2564   00340A                     
  2565                           ; BSR set to: 15
  2566                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  2567   00340A  8CC7               	bsf	199,6,c	;volatile
  2568   00340C                     
  2569                           ; BSR set to: 15
  2570                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  2571   00340C  8AC6               	bsf	198,5,c	;volatile
  2572   00340E                     
  2573                           ; BSR set to: 15
  2574                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  2575   00340E  8139               	bsf	57,0,b	;volatile
  2576   003410                     
  2577                           ; BSR set to: 15
  2578                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  2579   003410  9EC0               	bcf	192,7,c	;volatile
  2580                           
  2581                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  2582   003412  50C0               	movf	192,w,c	;volatile
  2583   003414  0BF8               	andlw	-8
  2584   003416  0906               	iorlw	6
  2585   003418  6EC0               	movwf	192,c	;volatile
  2586                           
  2587                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  2588   00341A  50C0               	movf	192,w,c	;volatile
  2589   00341C  0BC7               	andlw	-57
  2590   00341E  0930               	iorlw	48
  2591   003420  6EC0               	movwf	192,c	;volatile
  2592   003422                     
  2593                           ; BSR set to: 15
  2594                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  2595   003422  80C2               	bsf	194,0,c	;volatile
  2596                           
  2597                           ;DAC.c: 38:     SPBRG1 = 51;
  2598   003424  0E33               	movlw	51
  2599   003426  6EAF               	movwf	175,c	;volatile
  2600   003428                     
  2601                           ; BSR set to: 15
  2602                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  2603   003428  8EAB               	bsf	171,7,c	;volatile
  2604   00342A                     
  2605                           ; BSR set to: 15
  2606                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  2607   00342A  98AC               	bcf	172,4,c	;volatile
  2608   00342C                     
  2609                           ; BSR set to: 15
  2610                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  2611   00342C  8AAC               	bsf	172,5,c	;volatile
  2612   00342E                     
  2613                           ; BSR set to: 15
  2614                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  2615   00342E  88AB               	bsf	171,4,c	;volatile
  2616   003430                     
  2617                           ; BSR set to: 15
  2618                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  2619   003430  868A               	bsf	138,3,c	;volatile
  2620                           
  2621                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  2622   003432  50C2               	movf	194,w,c	;volatile
  2623   003434  0B83               	andlw	-125
  2624   003436  0930               	iorlw	48
  2625   003438  6EC2               	movwf	194,c	;volatile
  2626                           
  2627                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  2628   00343A  0E01               	movlw	1
  2629   00343C  0100               	movlb	0	; () banked
  2630   00343E  6FD0               	movwf	runDAC@selectModeDAC& (0+255),b
  2631                           
  2632                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  2633   003440  0E01               	movlw	1
  2634   003442  6FCF               	movwf	runDAC@keepState& (0+255),b
  2635                           
  2636                           ;DAC.c: 52:     uint8_t DACindex = 0;
  2637   003444  0E00               	movlw	0
  2638   003446  6FD1               	movwf	runDAC@DACindex& (0+255),b
  2639                           
  2640                           ;DAC.c: 54:     while(keepState){
  2641   003448  EF11  F01B         	goto	l6650
  2642   00344C                     l6608:
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;DAC.c: 57:                 if(DACindex<255/2){
  2646   00344C  0E7F               	movlw	127
  2647   00344E  61D1               	cpfslt	runDAC@DACindex& (0+255),b
  2648   003450  EF2C  F01A         	goto	u8711
  2649   003454  EF2E  F01A         	goto	u8710
  2650   003458                     u8711:
  2651   003458  EF31  F01A         	goto	l6612
  2652   00345C                     u8710:
  2653   00345C                     
  2654                           ; BSR set to: 0
  2655                           ;DAC.c: 58:                     SPI_write(DACindex);
  2656   00345C  51D1               	movf	runDAC@DACindex& (0+255),w,b
  2657   00345E  EC52  F029         	call	_SPI_write
  2658   003462                     l6612:
  2659                           
  2660                           ;DAC.c: 60:                 if(DACindex>=255/2){
  2661   003462  0E7E               	movlw	126
  2662   003464  0100               	movlb	0	; () banked
  2663   003466  65D1               	cpfsgt	runDAC@DACindex& (0+255),b
  2664   003468  EF38  F01A         	goto	u8721
  2665   00346C  EF3A  F01A         	goto	u8720
  2666   003470                     u8721:
  2667   003470  EFCE  F01A         	goto	l199
  2668   003474                     u8720:
  2669   003474                     
  2670                           ; BSR set to: 0
  2671                           ;DAC.c: 61:                     SPI_write(255-DACindex);
  2672   003474  51D1               	movf	runDAC@DACindex& (0+255),w,b
  2673   003476  0AFF               	xorlw	255
  2674   003478  EC52  F029         	call	_SPI_write
  2675   00347C  EFCE  F01A         	goto	l199
  2676   003480                     l6616:
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  2680   003480  0E00               	movlw	0
  2681   003482  6E2E               	movwf	___fldiv@a^0,c
  2682   003484  0E00               	movlw	0
  2683   003486  6E2F               	movwf	(___fldiv@a+1)^0,c
  2684   003488  0E7F               	movlw	127
  2685   00348A  6E30               	movwf	(___fldiv@a+2)^0,c
  2686   00348C  0E43               	movlw	67
  2687   00348E  6E31               	movwf	(___fldiv@a+3)^0,c
  2688   003490  0EC3               	movlw	195
  2689   003492  6E15               	movwf	___flmul@a^0,c
  2690   003494  0EF5               	movlw	245
  2691   003496  6E16               	movwf	(___flmul@a+1)^0,c
  2692   003498  0EC8               	movlw	200
  2693   00349A  6E17               	movwf	(___flmul@a+2)^0,c
  2694   00349C  0E40               	movlw	64
  2695   00349E  6E18               	movwf	(___flmul@a+3)^0,c
  2696   0034A0  51D1               	movf	runDAC@DACindex& (0+255),w,b
  2697   0034A2  6E03               	movwf	___xxtofl@val^0,c
  2698   0034A4  6A04               	clrf	(___xxtofl@val+1)^0,c
  2699   0034A6  6A05               	clrf	(___xxtofl@val+2)^0,c
  2700   0034A8  6A06               	clrf	(___xxtofl@val+3)^0,c
  2701   0034AA  0E01               	movlw	1
  2702   0034AC  EC49  F020         	call	___xxtofl
  2703   0034B0  C003  F011         	movff	?___xxtofl,___flmul@b
  2704   0034B4  C004  F012         	movff	?___xxtofl+1,___flmul@b+1
  2705   0034B8  C005  F013         	movff	?___xxtofl+2,___flmul@b+2
  2706   0034BC  C006  F014         	movff	?___xxtofl+3,___flmul@b+3
  2707   0034C0  EC51  F012         	call	___flmul	;wreg free
  2708   0034C4  C011  F02A         	movff	?___flmul,___fldiv@b
  2709   0034C8  C012  F02B         	movff	?___flmul+1,___fldiv@b+1
  2710   0034CC  C013  F02C         	movff	?___flmul+2,___fldiv@b+2
  2711   0034D0  C014  F02D         	movff	?___flmul+3,___fldiv@b+3
  2712   0034D4  EC29  F018         	call	___fldiv	;wreg free
  2713   0034D8  C02A  F0C7         	movff	?___fldiv,_runDAC$3503
  2714   0034DC  C02B  F0C8         	movff	?___fldiv+1,_runDAC$3503+1
  2715   0034E0  C02C  F0C9         	movff	?___fldiv+2,_runDAC$3503+2
  2716   0034E4  C02D  F0CA         	movff	?___fldiv+3,_runDAC$3503+3
  2717   0034E8                     
  2718                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  2719   0034E8  C0C7  F09C         	movff	_runDAC$3503,sinf@x
  2720   0034EC  C0C8  F09D         	movff	_runDAC$3503+1,sinf@x+1
  2721   0034F0  C0C9  F09E         	movff	_runDAC$3503+2,sinf@x+2
  2722   0034F4  C0CA  F09F         	movff	_runDAC$3503+3,sinf@x+3
  2723   0034F8  EC6C  F00D         	call	_sinf	;wreg free
  2724   0034FC  C09C  F0CB         	movff	?_sinf,_runDAC$3504
  2725   003500  C09D  F0CC         	movff	?_sinf+1,_runDAC$3504+1
  2726   003504  C09E  F0CD         	movff	?_sinf+2,_runDAC$3504+2
  2727   003508  C09F  F0CE         	movff	?_sinf+3,_runDAC$3504+3
  2728   00350C                     
  2729                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  2730   00350C  0E00               	movlw	0
  2731   00350E  6E47               	movwf	___fladd@a^0,c
  2732   003510  0E00               	movlw	0
  2733   003512  6E48               	movwf	(___fladd@a+1)^0,c
  2734   003514  0EFE               	movlw	254
  2735   003516  6E49               	movwf	(___fladd@a+2)^0,c
  2736   003518  0E42               	movlw	66
  2737   00351A  6E4A               	movwf	(___fladd@a+3)^0,c
  2738   00351C  0E00               	movlw	0
  2739   00351E  6E15               	movwf	___flmul@a^0,c
  2740   003520  0E00               	movlw	0
  2741   003522  6E16               	movwf	(___flmul@a+1)^0,c
  2742   003524  0EFE               	movlw	254
  2743   003526  6E17               	movwf	(___flmul@a+2)^0,c
  2744   003528  0E42               	movlw	66
  2745   00352A  6E18               	movwf	(___flmul@a+3)^0,c
  2746   00352C  C0CB  F011         	movff	_runDAC$3504,___flmul@b
  2747   003530  C0CC  F012         	movff	_runDAC$3504+1,___flmul@b+1
  2748   003534  C0CD  F013         	movff	_runDAC$3504+2,___flmul@b+2
  2749   003538  C0CE  F014         	movff	_runDAC$3504+3,___flmul@b+3
  2750   00353C  EC51  F012         	call	___flmul	;wreg free
  2751   003540  C011  F043         	movff	?___flmul,___fladd@b
  2752   003544  C012  F044         	movff	?___flmul+1,___fladd@b+1
  2753   003548  C013  F045         	movff	?___flmul+2,___fladd@b+2
  2754   00354C  C014  F046         	movff	?___flmul+3,___fladd@b+3
  2755   003550  ECF1  F00F         	call	___fladd	;wreg free
  2756   003554  C043  F053         	movff	?___fladd,___fltol@f1
  2757   003558  C044  F054         	movff	?___fladd+1,___fltol@f1+1
  2758   00355C  C045  F055         	movff	?___fladd+2,___fltol@f1+2
  2759   003560  C046  F056         	movff	?___fladd+3,___fltol@f1+3
  2760   003564  ECEF  F023         	call	___fltol	;wreg free
  2761   003568  5053               	movf	?___fltol^0,w,c
  2762   00356A  EC52  F029         	call	_SPI_write
  2763                           
  2764                           ;DAC.c: 66:                 break;
  2765   00356E  EFCE  F01A         	goto	l199
  2766   003572                     l6622:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  2770   003572  51D1               	movf	runDAC@DACindex& (0+255),w,b
  2771   003574  0AFF               	xorlw	255
  2772   003576  EC52  F029         	call	_SPI_write
  2773                           
  2774                           ;DAC.c: 69:                 break;
  2775   00357A  EFCE  F01A         	goto	l199
  2776   00357E                     l6626:
  2777                           
  2778                           ; BSR set to: 0
  2779   00357E  51D0               	movf	runDAC@selectModeDAC& (0+255),w,b
  2780                           
  2781                           ; Switch size 1, requested type "simple"
  2782                           ; Number of cases is 3, Range of values is 1 to 3
  2783                           ; switch strategies available:
  2784                           ; Name         Instructions Cycles
  2785                           ; simple_byte           10     6 (average)
  2786                           ;	Chosen strategy is simple_byte
  2787   003580  0A01               	xorlw	1	; case 1
  2788   003582  B4D8               	btfsc	status,2,c
  2789   003584  EF26  F01A         	goto	l6608
  2790   003588  0A03               	xorlw	3	; case 2
  2791   00358A  B4D8               	btfsc	status,2,c
  2792   00358C  EF40  F01A         	goto	l6616
  2793   003590  0A01               	xorlw	1	; case 3
  2794   003592  B4D8               	btfsc	status,2,c
  2795   003594  EFB9  F01A         	goto	l6622
  2796   003598  EFCE  F01A         	goto	l199
  2797   00359C                     l199:
  2798                           
  2799                           ;DAC.c: 71:         GODONE = 1;
  2800   00359C  82C2               	bsf	4034,1,c	;volatile
  2801   00359E                     l202:
  2802   00359E  B2C2               	btfsc	4034,1,c	;volatile
  2803   0035A0  EFD4  F01A         	goto	u8731
  2804   0035A4  EFD6  F01A         	goto	u8730
  2805   0035A8                     u8731:
  2806   0035A8  EFCF  F01A         	goto	l202
  2807   0035AC                     u8730:
  2808   0035AC                     
  2809                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  2810   0035AC  0ECB               	movlw	low STR_6
  2811   0035AE  0100               	movlb	0	; () banked
  2812   0035B0  6FC2               	movwf	printf@fmt& (0+255),b
  2813   0035B2  CFC4 F0C3          	movff	4036,?_printf+1	;volatile
  2814   0035B6  6BC4               	clrf	(?_printf+2)& (0+255),b
  2815   0035B8  EC30  F02A         	call	_printf	;wreg free
  2816   0035BC                     
  2817                           ;DAC.c: 75:         if(PORTCbits.RC0){
  2818   0035BC  A082               	btfss	130,0,c	;volatile
  2819   0035BE  EFE3  F01A         	goto	u8741
  2820   0035C2  EFE5  F01A         	goto	u8740
  2821   0035C6                     u8741:
  2822   0035C6  EFE8  F01A         	goto	l6634
  2823   0035CA                     u8740:
  2824   0035CA                     
  2825                           ;DAC.c: 76:             selectModeDAC = 1;
  2826   0035CA  0E01               	movlw	1
  2827   0035CC  0100               	movlb	0	; () banked
  2828   0035CE  6FD0               	movwf	runDAC@selectModeDAC& (0+255),b
  2829   0035D0                     l6634:
  2830                           
  2831                           ;DAC.c: 78:         if(PORTAbits.RA4){
  2832   0035D0  A880               	btfss	128,4,c	;volatile
  2833   0035D2  EFED  F01A         	goto	u8751
  2834   0035D6  EFEF  F01A         	goto	u8750
  2835   0035DA                     u8751:
  2836   0035DA  EFF2  F01A         	goto	l6638
  2837   0035DE                     u8750:
  2838   0035DE                     
  2839                           ;DAC.c: 79:             selectModeDAC = 2;
  2840   0035DE  0E02               	movlw	2
  2841   0035E0  0100               	movlb	0	; () banked
  2842   0035E2  6FD0               	movwf	runDAC@selectModeDAC& (0+255),b
  2843   0035E4                     l6638:
  2844                           
  2845                           ;DAC.c: 81:         if(PORTAbits.RA3){
  2846   0035E4  A680               	btfss	128,3,c	;volatile
  2847   0035E6  EFF7  F01A         	goto	u8761
  2848   0035EA  EFF9  F01A         	goto	u8760
  2849   0035EE                     u8761:
  2850   0035EE  EFFC  F01A         	goto	l6642
  2851   0035F2                     u8760:
  2852   0035F2                     
  2853                           ;DAC.c: 82:             selectModeDAC = 3;
  2854   0035F2  0E03               	movlw	3
  2855   0035F4  0100               	movlb	0	; () banked
  2856   0035F6  6FD0               	movwf	runDAC@selectModeDAC& (0+255),b
  2857   0035F8                     l6642:
  2858                           
  2859                           ;DAC.c: 84:         if(PORTAbits.RA2){
  2860   0035F8  A480               	btfss	128,2,c	;volatile
  2861   0035FA  EF01  F01B         	goto	u8771
  2862   0035FE  EF03  F01B         	goto	u8770
  2863   003602                     u8771:
  2864   003602  EF06  F01B         	goto	l6646
  2865   003606                     u8770:
  2866   003606                     
  2867                           ;DAC.c: 85:             keepState = 0;
  2868   003606  0E00               	movlw	0
  2869   003608  0100               	movlb	0	; () banked
  2870   00360A  6FCF               	movwf	runDAC@keepState& (0+255),b
  2871   00360C                     l6646:
  2872                           
  2873                           ;DAC.c: 87:         DACindex++;
  2874   00360C  0100               	movlb	0	; () banked
  2875   00360E  2BD1               	incf	runDAC@DACindex& (0+255),f,b
  2876   003610                     
  2877                           ; BSR set to: 0
  2878                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  2879   003610  0E68               	movlw	104
  2880   003612  0100               	movlb	0	; () banked
  2881   003614  6FC6               	movwf	??_runDAC& (0+255),b
  2882   003616  0EE4               	movlw	228
  2883   003618                     u8937:
  2884   003618  2EE8               	decfsz	wreg,f,c
  2885   00361A  D7FE               	bra	u8937
  2886   00361C  2FC6               	decfsz	??_runDAC& (0+255),f,b
  2887   00361E  D7FC               	bra	u8937
  2888   003620  0000               	nop	
  2889   003622                     l6650:
  2890                           
  2891                           ;DAC.c: 54:     while(keepState){
  2892   003622  0100               	movlb	0	; () banked
  2893   003624  51CF               	movf	runDAC@keepState& (0+255),w,b
  2894   003626  A4D8               	btfss	status,2,c
  2895   003628  EF18  F01B         	goto	u8781
  2896   00362C  EF1A  F01B         	goto	u8780
  2897   003630                     u8781:
  2898   003630  EFBF  F01A         	goto	l6626
  2899   003634                     u8780:
  2900   003634                     
  2901                           ; BSR set to: 0
  2902   003634  0012               	return		;funcret
  2903   003636                     __end_of_runDAC:
  2904                           	callstack 0
  2905                           
  2906 ;; *************** function _sinf *****************
  2907 ;; Defined at:
  2908 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sinf.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  x               4   60[BANK0 ] float 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  ux              4   82[BANK0 ] struct .
  2913 ;;  y               4   78[BANK0 ] struct .
  2914 ;;  sign            1   73[BANK0 ] _Bool 
  2915 ;;  n               1   72[BANK0 ] unsigned char 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  4   60[BANK0 ] float 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2925 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;Total ram usage:       26 bytes
  2930 ;; Hardware stack levels used: 1
  2931 ;; Hardware stack levels required when called: 4
  2932 ;; This function calls:
  2933 ;;		___cosdf
  2934 ;;		___fladd
  2935 ;;		___flneg
  2936 ;;		___rem_pio2f
  2937 ;;		___sindf
  2938 ;; This function is called by:
  2939 ;;		_runDAC
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text9
  2944   001AD8                     __ptext9:
  2945                           	callstack 0
  2946   001AD8                     _sinf:
  2947                           	callstack 25
  2948   001AD8  C09C  F0B2         	movff	sinf@x,sinf@ux
  2949   001ADC  C09D  F0B3         	movff	sinf@x+1,sinf@ux+1
  2950   001AE0  C09E  F0B4         	movff	sinf@x+2,sinf@ux+2
  2951   001AE4  C09F  F0B5         	movff	sinf@x+3,sinf@ux+3
  2952   001AE8  0100               	movlb	0	; () banked
  2953   001AEA  BFB5               	btfsc	(sinf@ux+3)& (0+255),7,b
  2954   001AEC  EF7A  F00D         	goto	u8311
  2955   001AF0  EF7D  F00D         	goto	u8310
  2956   001AF4                     u8311:
  2957   001AF4  0E01               	movlw	1
  2958   001AF6  EF7E  F00D         	goto	u8320
  2959   001AFA                     u8310:
  2960   001AFA  0E00               	movlw	0
  2961   001AFC                     u8320:
  2962   001AFC  6FA9               	movwf	sinf@sign& (0+255),b
  2963   001AFE                     
  2964                           ; BSR set to: 0
  2965   001AFE  9FB5               	bcf	(sinf@ux+3)& (0+255),7,b
  2966   001B00                     
  2967                           ; BSR set to: 0
  2968   001B00  0EDB               	movlw	219
  2969   001B02  5DB2               	subwf	sinf@ux& (0+255),w,b
  2970   001B04  0E0F               	movlw	15
  2971   001B06  59B3               	subwfb	(sinf@ux+1)& (0+255),w,b
  2972   001B08  0E49               	movlw	73
  2973   001B0A  59B4               	subwfb	(sinf@ux+2)& (0+255),w,b
  2974   001B0C  0E3F               	movlw	63
  2975   001B0E  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  2976   001B10  B0D8               	btfsc	status,0,c
  2977   001B12  EF8D  F00D         	goto	u8331
  2978   001B16  EF8F  F00D         	goto	u8330
  2979   001B1A                     u8331:
  2980   001B1A  EFB8  F00D         	goto	l6342
  2981   001B1E                     u8330:
  2982   001B1E                     
  2983                           ; BSR set to: 0
  2984   001B1E  0E80               	movlw	128
  2985   001B20  5DB4               	subwf	(sinf@ux+2)& (0+255),w,b
  2986   001B22  0E39               	movlw	57
  2987   001B24  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  2988   001B26  B0D8               	btfsc	status,0,c
  2989   001B28  EF98  F00D         	goto	u8341
  2990   001B2C  EF9A  F00D         	goto	u8340
  2991   001B30                     u8341:
  2992   001B30  EFA4  F00D         	goto	l6338
  2993   001B34                     u8340:
  2994   001B34                     
  2995                           ; BSR set to: 0
  2996   001B34  C09C  F09C         	movff	sinf@x,?_sinf
  2997   001B38  C09D  F09D         	movff	sinf@x+1,?_sinf+1
  2998   001B3C  C09E  F09E         	movff	sinf@x+2,?_sinf+2
  2999   001B40  C09F  F09F         	movff	sinf@x+3,?_sinf+3
  3000   001B44  EFF0  F00F         	goto	l1334
  3001   001B48                     l6338:
  3002                           
  3003                           ; BSR set to: 0
  3004   001B48  C09C  F053         	movff	sinf@x,___sindf@x
  3005   001B4C  C09D  F054         	movff	sinf@x+1,___sindf@x+1
  3006   001B50  C09E  F055         	movff	sinf@x+2,___sindf@x+2
  3007   001B54  C09F  F056         	movff	sinf@x+3,___sindf@x+3
  3008   001B58  EC1B  F01B         	call	___sindf	;wreg free
  3009   001B5C  C053  F09C         	movff	?___sindf,?_sinf
  3010   001B60  C054  F09D         	movff	?___sindf+1,?_sinf+1
  3011   001B64  C055  F09E         	movff	?___sindf+2,?_sinf+2
  3012   001B68  C056  F09F         	movff	?___sindf+3,?_sinf+3
  3013   001B6C  EFF0  F00F         	goto	l1334
  3014   001B70                     l6342:
  3015                           
  3016                           ; BSR set to: 0
  3017   001B70  0ED2               	movlw	210
  3018   001B72  5DB2               	subwf	sinf@ux& (0+255),w,b
  3019   001B74  0E53               	movlw	83
  3020   001B76  59B3               	subwfb	(sinf@ux+1)& (0+255),w,b
  3021   001B78  0E7B               	movlw	123
  3022   001B7A  59B4               	subwfb	(sinf@ux+2)& (0+255),w,b
  3023   001B7C  0E40               	movlw	64
  3024   001B7E  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  3025   001B80  B0D8               	btfsc	status,0,c
  3026   001B82  EFC5  F00D         	goto	u8351
  3027   001B86  EFC7  F00D         	goto	u8350
  3028   001B8A                     u8351:
  3029   001B8A  EFAA  F00E         	goto	l6372
  3030   001B8E                     u8350:
  3031   001B8E                     
  3032                           ; BSR set to: 0
  3033   001B8E  0EE4               	movlw	228
  3034   001B90  5DB2               	subwf	sinf@ux& (0+255),w,b
  3035   001B92  0ECB               	movlw	203
  3036   001B94  59B3               	subwfb	(sinf@ux+1)& (0+255),w,b
  3037   001B96  0E16               	movlw	22
  3038   001B98  59B4               	subwfb	(sinf@ux+2)& (0+255),w,b
  3039   001B9A  0E40               	movlw	64
  3040   001B9C  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  3041   001B9E  B0D8               	btfsc	status,0,c
  3042   001BA0  EFD4  F00D         	goto	u8361
  3043   001BA4  EFD6  F00D         	goto	u8360
  3044   001BA8                     u8361:
  3045   001BA8  EF44  F00E         	goto	l6362
  3046   001BAC                     u8360:
  3047   001BAC                     
  3048                           ; BSR set to: 0
  3049   001BAC  51A9               	movf	sinf@sign& (0+255),w,b
  3050   001BAE  B4D8               	btfsc	status,2,c
  3051   001BB0  EFDC  F00D         	goto	u8371
  3052   001BB4  EFDE  F00D         	goto	u8370
  3053   001BB8                     u8371:
  3054   001BB8  EF16  F00E         	goto	l6356
  3055   001BBC                     u8370:
  3056   001BBC                     
  3057                           ; BSR set to: 0
  3058   001BBC  0EDB               	movlw	219
  3059   001BBE  6E47               	movwf	___fladd@a^0,c
  3060   001BC0  0E0F               	movlw	15
  3061   001BC2  6E48               	movwf	(___fladd@a+1)^0,c
  3062   001BC4  0EC9               	movlw	201
  3063   001BC6  6E49               	movwf	(___fladd@a+2)^0,c
  3064   001BC8  0E3F               	movlw	63
  3065   001BCA  6E4A               	movwf	(___fladd@a+3)^0,c
  3066   001BCC  C09C  F043         	movff	sinf@x,___fladd@b
  3067   001BD0  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3068   001BD4  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3069   001BD8  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3070   001BDC  ECF1  F00F         	call	___fladd	;wreg free
  3071   001BE0  C043  F0AA         	movff	?___fladd,_sinf$3506
  3072   001BE4  C044  F0AB         	movff	?___fladd+1,_sinf$3506+1
  3073   001BE8  C045  F0AC         	movff	?___fladd+2,_sinf$3506+2
  3074   001BEC  C046  F0AD         	movff	?___fladd+3,_sinf$3506+3
  3075   001BF0                     l6350:
  3076   001BF0  C0AA  F053         	movff	_sinf$3506,___cosdf@x
  3077   001BF4  C0AB  F054         	movff	_sinf$3506+1,___cosdf@x+1
  3078   001BF8  C0AC  F055         	movff	_sinf$3506+2,___cosdf@x+2
  3079   001BFC  C0AD  F056         	movff	_sinf$3506+3,___cosdf@x+3
  3080   001C00  EC4C  F01E         	call	___cosdf	;wreg free
  3081   001C04  C053  F078         	movff	?___cosdf,___flneg@f1
  3082   001C08  C054  F079         	movff	?___cosdf+1,___flneg@f1+1
  3083   001C0C  C055  F07A         	movff	?___cosdf+2,___flneg@f1+2
  3084   001C10  C056  F07B         	movff	?___cosdf+3,___flneg@f1+3
  3085   001C14  EC8E  F029         	call	___flneg	;wreg free
  3086   001C18  C078  F09C         	movff	?___flneg,?_sinf
  3087   001C1C  C079  F09D         	movff	?___flneg+1,?_sinf+1
  3088   001C20  C07A  F09E         	movff	?___flneg+2,?_sinf+2
  3089   001C24  C07B  F09F         	movff	?___flneg+3,?_sinf+3
  3090   001C28  EFF0  F00F         	goto	l1334
  3091   001C2C                     l6356:
  3092                           
  3093                           ; BSR set to: 0
  3094   001C2C  C09C  F043         	movff	sinf@x,___fladd@b
  3095   001C30  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3096   001C34  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3097   001C38  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3098   001C3C  0EDB               	movlw	219
  3099   001C3E  6E47               	movwf	___fladd@a^0,c
  3100   001C40  0E0F               	movlw	15
  3101   001C42  6E48               	movwf	(___fladd@a+1)^0,c
  3102   001C44  0EC9               	movlw	201
  3103   001C46  6E49               	movwf	(___fladd@a+2)^0,c
  3104   001C48  0EBF               	movlw	191
  3105   001C4A  6E4A               	movwf	(___fladd@a+3)^0,c
  3106   001C4C  ECF1  F00F         	call	___fladd	;wreg free
  3107   001C50  C043  F0AA         	movff	?___fladd,_sinf$3506
  3108   001C54  C044  F0AB         	movff	?___fladd+1,_sinf$3506+1
  3109   001C58  C045  F0AC         	movff	?___fladd+2,_sinf$3506+2
  3110   001C5C  C046  F0AD         	movff	?___fladd+3,_sinf$3506+3
  3111   001C60                     l6358:
  3112   001C60  C0AA  F053         	movff	_sinf$3506,___cosdf@x
  3113   001C64  C0AB  F054         	movff	_sinf$3506+1,___cosdf@x+1
  3114   001C68  C0AC  F055         	movff	_sinf$3506+2,___cosdf@x+2
  3115   001C6C  C0AD  F056         	movff	_sinf$3506+3,___cosdf@x+3
  3116   001C70  EC4C  F01E         	call	___cosdf	;wreg free
  3117   001C74  C053  F09C         	movff	?___cosdf,?_sinf
  3118   001C78  C054  F09D         	movff	?___cosdf+1,?_sinf+1
  3119   001C7C  C055  F09E         	movff	?___cosdf+2,?_sinf+2
  3120   001C80  C056  F09F         	movff	?___cosdf+3,?_sinf+3
  3121   001C84  EFF0  F00F         	goto	l1334
  3122   001C88                     l6362:
  3123                           
  3124                           ; BSR set to: 0
  3125   001C88  51A9               	movf	sinf@sign& (0+255),w,b
  3126   001C8A  A4D8               	btfss	status,2,c
  3127   001C8C  EF4A  F00E         	goto	u8381
  3128   001C90  EF4C  F00E         	goto	u8380
  3129   001C94                     u8381:
  3130   001C94  EF72  F00E         	goto	l6366
  3131   001C98                     u8380:
  3132   001C98                     
  3133                           ; BSR set to: 0
  3134   001C98  0EDB               	movlw	219
  3135   001C9A  6E47               	movwf	___fladd@a^0,c
  3136   001C9C  0E0F               	movlw	15
  3137   001C9E  6E48               	movwf	(___fladd@a+1)^0,c
  3138   001CA0  0E49               	movlw	73
  3139   001CA2  6E49               	movwf	(___fladd@a+2)^0,c
  3140   001CA4  0EC0               	movlw	192
  3141   001CA6  6E4A               	movwf	(___fladd@a+3)^0,c
  3142   001CA8  C09C  F043         	movff	sinf@x,___fladd@b
  3143   001CAC  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3144   001CB0  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3145   001CB4  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3146   001CB8  ECF1  F00F         	call	___fladd	;wreg free
  3147   001CBC  C043  F078         	movff	?___fladd,___flneg@f1
  3148   001CC0  C044  F079         	movff	?___fladd+1,___flneg@f1+1
  3149   001CC4  C045  F07A         	movff	?___fladd+2,___flneg@f1+2
  3150   001CC8  C046  F07B         	movff	?___fladd+3,___flneg@f1+3
  3151   001CCC  EC8E  F029         	call	___flneg	;wreg free
  3152   001CD0  C078  F0A0         	movff	?___flneg,_sinf$3230
  3153   001CD4  C079  F0A1         	movff	?___flneg+1,_sinf$3230+1
  3154   001CD8  C07A  F0A2         	movff	?___flneg+2,_sinf$3230+2
  3155   001CDC  C07B  F0A3         	movff	?___flneg+3,_sinf$3230+3
  3156   001CE0  EF96  F00E         	goto	l6368
  3157   001CE4                     l6366:
  3158                           
  3159                           ; BSR set to: 0
  3160   001CE4  0EDB               	movlw	219
  3161   001CE6  6E47               	movwf	___fladd@a^0,c
  3162   001CE8  0E0F               	movlw	15
  3163   001CEA  6E48               	movwf	(___fladd@a+1)^0,c
  3164   001CEC  0E49               	movlw	73
  3165   001CEE  6E49               	movwf	(___fladd@a+2)^0,c
  3166   001CF0  0E40               	movlw	64
  3167   001CF2  6E4A               	movwf	(___fladd@a+3)^0,c
  3168   001CF4  C09C  F043         	movff	sinf@x,___fladd@b
  3169   001CF8  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3170   001CFC  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3171   001D00  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3172   001D04  ECF1  F00F         	call	___fladd	;wreg free
  3173   001D08  C043  F078         	movff	?___fladd,___flneg@f1
  3174   001D0C  C044  F079         	movff	?___fladd+1,___flneg@f1+1
  3175   001D10  C045  F07A         	movff	?___fladd+2,___flneg@f1+2
  3176   001D14  C046  F07B         	movff	?___fladd+3,___flneg@f1+3
  3177   001D18  EC8E  F029         	call	___flneg	;wreg free
  3178   001D1C  C078  F0A0         	movff	?___flneg,_sinf$3230
  3179   001D20  C079  F0A1         	movff	?___flneg+1,_sinf$3230+1
  3180   001D24  C07A  F0A2         	movff	?___flneg+2,_sinf$3230+2
  3181   001D28  C07B  F0A3         	movff	?___flneg+3,_sinf$3230+3
  3182   001D2C                     l6368:
  3183   001D2C  C0A0  F053         	movff	_sinf$3230,___sindf@x
  3184   001D30  C0A1  F054         	movff	_sinf$3230+1,___sindf@x+1
  3185   001D34  C0A2  F055         	movff	_sinf$3230+2,___sindf@x+2
  3186   001D38  C0A3  F056         	movff	_sinf$3230+3,___sindf@x+3
  3187   001D3C  EC1B  F01B         	call	___sindf	;wreg free
  3188   001D40  C053  F09C         	movff	?___sindf,?_sinf
  3189   001D44  C054  F09D         	movff	?___sindf+1,?_sinf+1
  3190   001D48  C055  F09E         	movff	?___sindf+2,?_sinf+2
  3191   001D4C  C056  F09F         	movff	?___sindf+3,?_sinf+3
  3192   001D50  EFF0  F00F         	goto	l1334
  3193   001D54                     l6372:
  3194                           
  3195                           ; BSR set to: 0
  3196   001D54  0ED6               	movlw	214
  3197   001D56  5DB2               	subwf	sinf@ux& (0+255),w,b
  3198   001D58  0E31               	movlw	49
  3199   001D5A  59B3               	subwfb	(sinf@ux+1)& (0+255),w,b
  3200   001D5C  0EE2               	movlw	226
  3201   001D5E  59B4               	subwfb	(sinf@ux+2)& (0+255),w,b
  3202   001D60  0E40               	movlw	64
  3203   001D62  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  3204   001D64  B0D8               	btfsc	status,0,c
  3205   001D66  EFB7  F00E         	goto	u8391
  3206   001D6A  EFB9  F00E         	goto	u8390
  3207   001D6E                     u8391:
  3208   001D6E  EF5A  F00F         	goto	l6402
  3209   001D72                     u8390:
  3210   001D72                     
  3211                           ; BSR set to: 0
  3212   001D72  0EE0               	movlw	224
  3213   001D74  5DB2               	subwf	sinf@ux& (0+255),w,b
  3214   001D76  0EED               	movlw	237
  3215   001D78  59B3               	subwfb	(sinf@ux+1)& (0+255),w,b
  3216   001D7A  0EAF               	movlw	175
  3217   001D7C  59B4               	subwfb	(sinf@ux+2)& (0+255),w,b
  3218   001D7E  0E40               	movlw	64
  3219   001D80  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  3220   001D82  B0D8               	btfsc	status,0,c
  3221   001D84  EFC6  F00E         	goto	u8401
  3222   001D88  EFC8  F00E         	goto	u8400
  3223   001D8C                     u8401:
  3224   001D8C  EF08  F00F         	goto	l6392
  3225   001D90                     u8400:
  3226   001D90                     
  3227                           ; BSR set to: 0
  3228   001D90  51A9               	movf	sinf@sign& (0+255),w,b
  3229   001D92  B4D8               	btfsc	status,2,c
  3230   001D94  EFCE  F00E         	goto	u8411
  3231   001D98  EFD0  F00E         	goto	u8410
  3232   001D9C                     u8411:
  3233   001D9C  EFEC  F00E         	goto	l6386
  3234   001DA0                     u8410:
  3235   001DA0                     
  3236                           ; BSR set to: 0
  3237   001DA0  C09C  F043         	movff	sinf@x,___fladd@b
  3238   001DA4  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3239   001DA8  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3240   001DAC  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3241   001DB0  0EE4               	movlw	228
  3242   001DB2  6E47               	movwf	___fladd@a^0,c
  3243   001DB4  0ECB               	movlw	203
  3244   001DB6  6E48               	movwf	(___fladd@a+1)^0,c
  3245   001DB8  0E96               	movlw	150
  3246   001DBA  6E49               	movwf	(___fladd@a+2)^0,c
  3247   001DBC  0E40               	movlw	64
  3248   001DBE  6E4A               	movwf	(___fladd@a+3)^0,c
  3249   001DC0  ECF1  F00F         	call	___fladd	;wreg free
  3250   001DC4  C043  F0AA         	movff	?___fladd,_sinf$3506
  3251   001DC8  C044  F0AB         	movff	?___fladd+1,_sinf$3506+1
  3252   001DCC  C045  F0AC         	movff	?___fladd+2,_sinf$3506+2
  3253   001DD0  C046  F0AD         	movff	?___fladd+3,_sinf$3506+3
  3254   001DD4  EF30  F00E         	goto	l6358
  3255   001DD8                     l6386:
  3256                           
  3257                           ; BSR set to: 0
  3258   001DD8  0EE4               	movlw	228
  3259   001DDA  6E47               	movwf	___fladd@a^0,c
  3260   001DDC  0ECB               	movlw	203
  3261   001DDE  6E48               	movwf	(___fladd@a+1)^0,c
  3262   001DE0  0E96               	movlw	150
  3263   001DE2  6E49               	movwf	(___fladd@a+2)^0,c
  3264   001DE4  0EC0               	movlw	192
  3265   001DE6  6E4A               	movwf	(___fladd@a+3)^0,c
  3266   001DE8  C09C  F043         	movff	sinf@x,___fladd@b
  3267   001DEC  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3268   001DF0  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3269   001DF4  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3270   001DF8  ECF1  F00F         	call	___fladd	;wreg free
  3271   001DFC  C043  F0AA         	movff	?___fladd,_sinf$3506
  3272   001E00  C044  F0AB         	movff	?___fladd+1,_sinf$3506+1
  3273   001E04  C045  F0AC         	movff	?___fladd+2,_sinf$3506+2
  3274   001E08  C046  F0AD         	movff	?___fladd+3,_sinf$3506+3
  3275   001E0C  EFF8  F00D         	goto	l6350
  3276   001E10                     l6392:
  3277                           
  3278                           ; BSR set to: 0
  3279   001E10  51A9               	movf	sinf@sign& (0+255),w,b
  3280   001E12  A4D8               	btfss	status,2,c
  3281   001E14  EF0E  F00F         	goto	u8421
  3282   001E18  EF10  F00F         	goto	u8420
  3283   001E1C                     u8421:
  3284   001E1C  EF2C  F00F         	goto	l6396
  3285   001E20                     u8420:
  3286   001E20                     
  3287                           ; BSR set to: 0
  3288   001E20  C09C  F043         	movff	sinf@x,___fladd@b
  3289   001E24  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3290   001E28  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3291   001E2C  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3292   001E30  0EDB               	movlw	219
  3293   001E32  6E47               	movwf	___fladd@a^0,c
  3294   001E34  0E0F               	movlw	15
  3295   001E36  6E48               	movwf	(___fladd@a+1)^0,c
  3296   001E38  0EC9               	movlw	201
  3297   001E3A  6E49               	movwf	(___fladd@a+2)^0,c
  3298   001E3C  0EC0               	movlw	192
  3299   001E3E  6E4A               	movwf	(___fladd@a+3)^0,c
  3300   001E40  ECF1  F00F         	call	___fladd	;wreg free
  3301   001E44  C043  F0A4         	movff	?___fladd,_sinf$3231
  3302   001E48  C044  F0A5         	movff	?___fladd+1,_sinf$3231+1
  3303   001E4C  C045  F0A6         	movff	?___fladd+2,_sinf$3231+2
  3304   001E50  C046  F0A7         	movff	?___fladd+3,_sinf$3231+3
  3305   001E54  EF46  F00F         	goto	l6398
  3306   001E58                     l6396:
  3307                           
  3308                           ; BSR set to: 0
  3309   001E58  C09C  F043         	movff	sinf@x,___fladd@b
  3310   001E5C  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3311   001E60  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3312   001E64  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3313   001E68  0EDB               	movlw	219
  3314   001E6A  6E47               	movwf	___fladd@a^0,c
  3315   001E6C  0E0F               	movlw	15
  3316   001E6E  6E48               	movwf	(___fladd@a+1)^0,c
  3317   001E70  0EC9               	movlw	201
  3318   001E72  6E49               	movwf	(___fladd@a+2)^0,c
  3319   001E74  0E40               	movlw	64
  3320   001E76  6E4A               	movwf	(___fladd@a+3)^0,c
  3321   001E78  ECF1  F00F         	call	___fladd	;wreg free
  3322   001E7C  C043  F0A4         	movff	?___fladd,_sinf$3231
  3323   001E80  C044  F0A5         	movff	?___fladd+1,_sinf$3231+1
  3324   001E84  C045  F0A6         	movff	?___fladd+2,_sinf$3231+2
  3325   001E88  C046  F0A7         	movff	?___fladd+3,_sinf$3231+3
  3326   001E8C                     l6398:
  3327   001E8C  C0A4  F053         	movff	_sinf$3231,___sindf@x
  3328   001E90  C0A5  F054         	movff	_sinf$3231+1,___sindf@x+1
  3329   001E94  C0A6  F055         	movff	_sinf$3231+2,___sindf@x+2
  3330   001E98  C0A7  F056         	movff	_sinf$3231+3,___sindf@x+3
  3331   001E9C  EC1B  F01B         	call	___sindf	;wreg free
  3332   001EA0  C053  F09C         	movff	?___sindf,?_sinf
  3333   001EA4  C054  F09D         	movff	?___sindf+1,?_sinf+1
  3334   001EA8  C055  F09E         	movff	?___sindf+2,?_sinf+2
  3335   001EAC  C056  F09F         	movff	?___sindf+3,?_sinf+3
  3336   001EB0  EFF0  F00F         	goto	l1334
  3337   001EB4                     l6402:
  3338                           
  3339                           ; BSR set to: 0
  3340   001EB4  0E80               	movlw	128
  3341   001EB6  5DB4               	subwf	(sinf@ux+2)& (0+255),w,b
  3342   001EB8  0E7F               	movlw	127
  3343   001EBA  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  3344   001EBC  A0D8               	btfss	status,0,c
  3345   001EBE  EF63  F00F         	goto	u8431
  3346   001EC2  EF65  F00F         	goto	u8430
  3347   001EC6                     u8431:
  3348   001EC6  EF77  F00F         	goto	l6410
  3349   001ECA                     u8430:
  3350   001ECA                     
  3351                           ; BSR set to: 0
  3352   001ECA  0EFF               	movlw	255
  3353   001ECC  13B2               	iorwf	sinf@ux& (0+255),f,b
  3354   001ECE  0EFF               	movlw	255
  3355   001ED0  13B3               	iorwf	(sinf@ux+1)& (0+255),f,b
  3356   001ED2  0EFF               	movlw	255
  3357   001ED4  13B4               	iorwf	(sinf@ux+2)& (0+255),f,b
  3358   001ED6  0E00               	movlw	0
  3359   001ED8  13B5               	iorwf	(sinf@ux+3)& (0+255),f,b
  3360   001EDA                     
  3361                           ; BSR set to: 0
  3362   001EDA  C0B2  F09C         	movff	sinf@ux,?_sinf
  3363   001EDE  C0B3  F09D         	movff	sinf@ux+1,?_sinf+1
  3364   001EE2  C0B4  F09E         	movff	sinf@ux+2,?_sinf+2
  3365   001EE6  C0B5  F09F         	movff	sinf@ux+3,?_sinf+3
  3366   001EEA  EFF0  F00F         	goto	l1334
  3367   001EEE                     l6410:
  3368                           
  3369                           ; BSR set to: 0
  3370   001EEE  C09C  F07C         	movff	sinf@x,___rem_pio2f@x
  3371   001EF2  C09D  F07D         	movff	sinf@x+1,___rem_pio2f@x+1
  3372   001EF6  C09E  F07E         	movff	sinf@x+2,___rem_pio2f@x+2
  3373   001EFA  C09F  F07F         	movff	sinf@x+3,___rem_pio2f@x+3
  3374   001EFE  0EAE               	movlw	low sinf@y
  3375   001F00  6F80               	movwf	___rem_pio2f@y& (0+255),b
  3376   001F02  EC48  F016         	call	___rem_pio2f	;wreg free
  3377   001F06  0100               	movlb	0	; () banked
  3378   001F08  517C               	movf	?___rem_pio2f& (0+255),w,b
  3379   001F0A  0B03               	andlw	3
  3380   001F0C  6FA8               	movwf	sinf@n& (0+255),b
  3381   001F0E  EFE1  F00F         	goto	l6428
  3382   001F12                     l6412:
  3383                           
  3384                           ; BSR set to: 0
  3385   001F12  C0AE  F078         	movff	sinf@y,___flneg@f1
  3386   001F16  C0AF  F079         	movff	sinf@y+1,___flneg@f1+1
  3387   001F1A  C0B0  F07A         	movff	sinf@y+2,___flneg@f1+2
  3388   001F1E  C0B1  F07B         	movff	sinf@y+3,___flneg@f1+3
  3389   001F22  EC8E  F029         	call	___flneg	;wreg free
  3390   001F26  C078  F0AE         	movff	?___flneg,sinf@y
  3391   001F2A  C079  F0AF         	movff	?___flneg+1,sinf@y+1
  3392   001F2E  C07A  F0B0         	movff	?___flneg+2,sinf@y+2
  3393   001F32  C07B  F0B1         	movff	?___flneg+3,sinf@y+3
  3394   001F36                     l6414:
  3395   001F36  C0AE  F053         	movff	sinf@y,___sindf@x
  3396   001F3A  C0AF  F054         	movff	sinf@y+1,___sindf@x+1
  3397   001F3E  C0B0  F055         	movff	sinf@y+2,___sindf@x+2
  3398   001F42  C0B1  F056         	movff	sinf@y+3,___sindf@x+3
  3399   001F46  EC1B  F01B         	call	___sindf	;wreg free
  3400   001F4A  C053  F09C         	movff	?___sindf,?_sinf
  3401   001F4E  C054  F09D         	movff	?___sindf+1,?_sinf+1
  3402   001F52  C055  F09E         	movff	?___sindf+2,?_sinf+2
  3403   001F56  C056  F09F         	movff	?___sindf+3,?_sinf+3
  3404   001F5A  EFF0  F00F         	goto	l1334
  3405   001F5E                     l6418:
  3406                           
  3407                           ; BSR set to: 0
  3408   001F5E  C0AE  F053         	movff	sinf@y,___cosdf@x
  3409   001F62  C0AF  F054         	movff	sinf@y+1,___cosdf@x+1
  3410   001F66  C0B0  F055         	movff	sinf@y+2,___cosdf@x+2
  3411   001F6A  C0B1  F056         	movff	sinf@y+3,___cosdf@x+3
  3412   001F6E  EC4C  F01E         	call	___cosdf	;wreg free
  3413   001F72  C053  F09C         	movff	?___cosdf,?_sinf
  3414   001F76  C054  F09D         	movff	?___cosdf+1,?_sinf+1
  3415   001F7A  C055  F09E         	movff	?___cosdf+2,?_sinf+2
  3416   001F7E  C056  F09F         	movff	?___cosdf+3,?_sinf+3
  3417   001F82  EFF0  F00F         	goto	l1334
  3418   001F86                     l6422:
  3419                           
  3420                           ; BSR set to: 0
  3421   001F86  C0AE  F053         	movff	sinf@y,___cosdf@x
  3422   001F8A  C0AF  F054         	movff	sinf@y+1,___cosdf@x+1
  3423   001F8E  C0B0  F055         	movff	sinf@y+2,___cosdf@x+2
  3424   001F92  C0B1  F056         	movff	sinf@y+3,___cosdf@x+3
  3425   001F96  EC4C  F01E         	call	___cosdf	;wreg free
  3426   001F9A  C053  F078         	movff	?___cosdf,___flneg@f1
  3427   001F9E  C054  F079         	movff	?___cosdf+1,___flneg@f1+1
  3428   001FA2  C055  F07A         	movff	?___cosdf+2,___flneg@f1+2
  3429   001FA6  C056  F07B         	movff	?___cosdf+3,___flneg@f1+3
  3430   001FAA  EC8E  F029         	call	___flneg	;wreg free
  3431   001FAE  C078  F09C         	movff	?___flneg,?_sinf
  3432   001FB2  C079  F09D         	movff	?___flneg+1,?_sinf+1
  3433   001FB6  C07A  F09E         	movff	?___flneg+2,?_sinf+2
  3434   001FBA  C07B  F09F         	movff	?___flneg+3,?_sinf+3
  3435   001FBE  EFF0  F00F         	goto	l1334
  3436   001FC2                     l6428:
  3437                           
  3438                           ; BSR set to: 0
  3439   001FC2  51A8               	movf	sinf@n& (0+255),w,b
  3440                           
  3441                           ; Switch size 1, requested type "simple"
  3442                           ; Number of cases is 3, Range of values is 0 to 2
  3443                           ; switch strategies available:
  3444                           ; Name         Instructions Cycles
  3445                           ; simple_byte           10     6 (average)
  3446                           ;	Chosen strategy is simple_byte
  3447   001FC4  0A00               	xorlw	0	; case 0
  3448   001FC6  B4D8               	btfsc	status,2,c
  3449   001FC8  EF9B  F00F         	goto	l6414
  3450   001FCC  0A01               	xorlw	1	; case 1
  3451   001FCE  B4D8               	btfsc	status,2,c
  3452   001FD0  EFAF  F00F         	goto	l6418
  3453   001FD4  0A03               	xorlw	3	; case 2
  3454   001FD6  B4D8               	btfsc	status,2,c
  3455   001FD8  EF89  F00F         	goto	l6412
  3456   001FDC  EFC3  F00F         	goto	l6422
  3457   001FE0                     l1334:
  3458   001FE0  0012               	return		;funcret
  3459   001FE2                     __end_of_sinf:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function ___sindf *****************
  3463 ;; Defined at:
  3464 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__sindf.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  x               4   82[COMRAM] float 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  z               4   24[BANK0 ] float 
  3469 ;;  s               4   20[BANK0 ] float 
  3470 ;;  w               4    4[BANK0 ] float 
  3471 ;;  r               4    0[BANK0 ] float 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  4   82[COMRAM] float 
  3474 ;; Registers used:
  3475 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3481 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Totals:         4      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;Total ram usage:       32 bytes
  3486 ;; Hardware stack levels used: 1
  3487 ;; Hardware stack levels required when called: 2
  3488 ;; This function calls:
  3489 ;;		___fladd
  3490 ;;		___flmul
  3491 ;; This function is called by:
  3492 ;;		_sinf
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text10
  3497   003636                     __ptext10:
  3498                           	callstack 0
  3499   003636                     ___sindf:
  3500                           	callstack 26
  3501   003636  C053  F011         	movff	___sindf@x,___flmul@b
  3502   00363A  C054  F012         	movff	___sindf@x+1,___flmul@b+1
  3503   00363E  C055  F013         	movff	___sindf@x+2,___flmul@b+2
  3504   003642  C056  F014         	movff	___sindf@x+3,___flmul@b+3
  3505   003646  C053  F015         	movff	___sindf@x,___flmul@a
  3506   00364A  C054  F016         	movff	___sindf@x+1,___flmul@a+1
  3507   00364E  C055  F017         	movff	___sindf@x+2,___flmul@a+2
  3508   003652  C056  F018         	movff	___sindf@x+3,___flmul@a+3
  3509   003656  EC51  F012         	call	___flmul	;wreg free
  3510   00365A  C011  F078         	movff	?___flmul,___sindf@z
  3511   00365E  C012  F079         	movff	?___flmul+1,___sindf@z+1
  3512   003662  C013  F07A         	movff	?___flmul+2,___sindf@z+2
  3513   003666  C014  F07B         	movff	?___flmul+3,___sindf@z+3
  3514   00366A  C078  F011         	movff	___sindf@z,___flmul@b
  3515   00366E  C079  F012         	movff	___sindf@z+1,___flmul@b+1
  3516   003672  C07A  F013         	movff	___sindf@z+2,___flmul@b+2
  3517   003676  C07B  F014         	movff	___sindf@z+3,___flmul@b+3
  3518   00367A  C078  F015         	movff	___sindf@z,___flmul@a
  3519   00367E  C079  F016         	movff	___sindf@z+1,___flmul@a+1
  3520   003682  C07A  F017         	movff	___sindf@z+2,___flmul@a+2
  3521   003686  C07B  F018         	movff	___sindf@z+3,___flmul@a+3
  3522   00368A  EC51  F012         	call	___flmul	;wreg free
  3523   00368E  C011  F064         	movff	?___flmul,___sindf@w
  3524   003692  C012  F065         	movff	?___flmul+1,___sindf@w+1
  3525   003696  C013  F066         	movff	?___flmul+2,___sindf@w+2
  3526   00369A  C014  F067         	movff	?___flmul+3,___sindf@w+3
  3527   00369E  0E3C               	movlw	60
  3528   0036A0  6E15               	movwf	___flmul@a^0,c
  3529   0036A2  0E6C               	movlw	108
  3530   0036A4  6E16               	movwf	(___flmul@a+1)^0,c
  3531   0036A6  0E36               	movlw	54
  3532   0036A8  6E17               	movwf	(___flmul@a+2)^0,c
  3533   0036AA  0E36               	movlw	54
  3534   0036AC  6E18               	movwf	(___flmul@a+3)^0,c
  3535   0036AE  C078  F011         	movff	___sindf@z,___flmul@b
  3536   0036B2  C079  F012         	movff	___sindf@z+1,___flmul@b+1
  3537   0036B6  C07A  F013         	movff	___sindf@z+2,___flmul@b+2
  3538   0036BA  C07B  F014         	movff	___sindf@z+3,___flmul@b+3
  3539   0036BE  EC51  F012         	call	___flmul	;wreg free
  3540   0036C2  C011  F043         	movff	?___flmul,___fladd@b
  3541   0036C6  C012  F044         	movff	?___flmul+1,___fladd@b+1
  3542   0036CA  C013  F045         	movff	?___flmul+2,___fladd@b+2
  3543   0036CE  C014  F046         	movff	?___flmul+3,___fladd@b+3
  3544   0036D2  0ECF               	movlw	207
  3545   0036D4  6E47               	movwf	___fladd@a^0,c
  3546   0036D6  0E07               	movlw	7
  3547   0036D8  6E48               	movwf	(___fladd@a+1)^0,c
  3548   0036DA  0E50               	movlw	80
  3549   0036DC  6E49               	movwf	(___fladd@a+2)^0,c
  3550   0036DE  0EB9               	movlw	185
  3551   0036E0  6E4A               	movwf	(___fladd@a+3)^0,c
  3552   0036E2  ECF1  F00F         	call	___fladd	;wreg free
  3553   0036E6  C043  F060         	movff	?___fladd,___sindf@r
  3554   0036EA  C044  F061         	movff	?___fladd+1,___sindf@r+1
  3555   0036EE  C045  F062         	movff	?___fladd+2,___sindf@r+2
  3556   0036F2  C046  F063         	movff	?___fladd+3,___sindf@r+3
  3557   0036F6  C078  F011         	movff	___sindf@z,___flmul@b
  3558   0036FA  C079  F012         	movff	___sindf@z+1,___flmul@b+1
  3559   0036FE  C07A  F013         	movff	___sindf@z+2,___flmul@b+2
  3560   003702  C07B  F014         	movff	___sindf@z+3,___flmul@b+3
  3561   003706  C053  F015         	movff	___sindf@x,___flmul@a
  3562   00370A  C054  F016         	movff	___sindf@x+1,___flmul@a+1
  3563   00370E  C055  F017         	movff	___sindf@x+2,___flmul@a+2
  3564   003712  C056  F018         	movff	___sindf@x+3,___flmul@a+3
  3565   003716  EC51  F012         	call	___flmul	;wreg free
  3566   00371A  C011  F074         	movff	?___flmul,___sindf@s
  3567   00371E  C012  F075         	movff	?___flmul+1,___sindf@s+1
  3568   003722  C013  F076         	movff	?___flmul+2,___sindf@s+2
  3569   003726  C014  F077         	movff	?___flmul+3,___sindf@s+3
  3570   00372A  0EAB               	movlw	171
  3571   00372C  6E47               	movwf	___fladd@a^0,c
  3572   00372E  0EAA               	movlw	170
  3573   003730  6E48               	movwf	(___fladd@a+1)^0,c
  3574   003732  0E2A               	movlw	42
  3575   003734  6E49               	movwf	(___fladd@a+2)^0,c
  3576   003736  0EBE               	movlw	190
  3577   003738  6E4A               	movwf	(___fladd@a+3)^0,c
  3578   00373A  0E84               	movlw	132
  3579   00373C  6E15               	movwf	___flmul@a^0,c
  3580   00373E  0E88               	movlw	136
  3581   003740  6E16               	movwf	(___flmul@a+1)^0,c
  3582   003742  0E08               	movlw	8
  3583   003744  6E17               	movwf	(___flmul@a+2)^0,c
  3584   003746  0E3C               	movlw	60
  3585   003748  6E18               	movwf	(___flmul@a+3)^0,c
  3586   00374A  C078  F011         	movff	___sindf@z,___flmul@b
  3587   00374E  C079  F012         	movff	___sindf@z+1,___flmul@b+1
  3588   003752  C07A  F013         	movff	___sindf@z+2,___flmul@b+2
  3589   003756  C07B  F014         	movff	___sindf@z+3,___flmul@b+3
  3590   00375A  EC51  F012         	call	___flmul	;wreg free
  3591   00375E  C011  F043         	movff	?___flmul,___fladd@b
  3592   003762  C012  F044         	movff	?___flmul+1,___fladd@b+1
  3593   003766  C013  F045         	movff	?___flmul+2,___fladd@b+2
  3594   00376A  C014  F046         	movff	?___flmul+3,___fladd@b+3
  3595   00376E  ECF1  F00F         	call	___fladd	;wreg free
  3596   003772  C043  F068         	movff	?___fladd,___sindf$3511
  3597   003776  C044  F069         	movff	?___fladd+1,___sindf$3511+1
  3598   00377A  C045  F06A         	movff	?___fladd+2,___sindf$3511+2
  3599   00377E  C046  F06B         	movff	?___fladd+3,___sindf$3511+3
  3600   003782  C064  F015         	movff	___sindf@w,___flmul@a
  3601   003786  C065  F016         	movff	___sindf@w+1,___flmul@a+1
  3602   00378A  C066  F017         	movff	___sindf@w+2,___flmul@a+2
  3603   00378E  C067  F018         	movff	___sindf@w+3,___flmul@a+3
  3604   003792  C074  F011         	movff	___sindf@s,___flmul@b
  3605   003796  C075  F012         	movff	___sindf@s+1,___flmul@b+1
  3606   00379A  C076  F013         	movff	___sindf@s+2,___flmul@b+2
  3607   00379E  C077  F014         	movff	___sindf@s+3,___flmul@b+3
  3608   0037A2  EC51  F012         	call	___flmul	;wreg free
  3609   0037A6  C011  F06C         	movff	?___flmul,___sindf$3512
  3610   0037AA  C012  F06D         	movff	?___flmul+1,___sindf$3512+1
  3611   0037AE  C013  F06E         	movff	?___flmul+2,___sindf$3512+2
  3612   0037B2  C014  F06F         	movff	?___flmul+3,___sindf$3512+3
  3613   0037B6  C053  F047         	movff	___sindf@x,___fladd@a
  3614   0037BA  C054  F048         	movff	___sindf@x+1,___fladd@a+1
  3615   0037BE  C055  F049         	movff	___sindf@x+2,___fladd@a+2
  3616   0037C2  C056  F04A         	movff	___sindf@x+3,___fladd@a+3
  3617   0037C6  C074  F015         	movff	___sindf@s,___flmul@a
  3618   0037CA  C075  F016         	movff	___sindf@s+1,___flmul@a+1
  3619   0037CE  C076  F017         	movff	___sindf@s+2,___flmul@a+2
  3620   0037D2  C077  F018         	movff	___sindf@s+3,___flmul@a+3
  3621   0037D6  C068  F011         	movff	___sindf$3511,___flmul@b
  3622   0037DA  C069  F012         	movff	___sindf$3511+1,___flmul@b+1
  3623   0037DE  C06A  F013         	movff	___sindf$3511+2,___flmul@b+2
  3624   0037E2  C06B  F014         	movff	___sindf$3511+3,___flmul@b+3
  3625   0037E6  EC51  F012         	call	___flmul	;wreg free
  3626   0037EA  C011  F043         	movff	?___flmul,___fladd@b
  3627   0037EE  C012  F044         	movff	?___flmul+1,___fladd@b+1
  3628   0037F2  C013  F045         	movff	?___flmul+2,___fladd@b+2
  3629   0037F6  C014  F046         	movff	?___flmul+3,___fladd@b+3
  3630   0037FA  ECF1  F00F         	call	___fladd	;wreg free
  3631   0037FE  C043  F070         	movff	?___fladd,___sindf$3513
  3632   003802  C044  F071         	movff	?___fladd+1,___sindf$3513+1
  3633   003806  C045  F072         	movff	?___fladd+2,___sindf$3513+2
  3634   00380A  C046  F073         	movff	?___fladd+3,___sindf$3513+3
  3635   00380E  C070  F043         	movff	___sindf$3513,___fladd@b
  3636   003812  C071  F044         	movff	___sindf$3513+1,___fladd@b+1
  3637   003816  C072  F045         	movff	___sindf$3513+2,___fladd@b+2
  3638   00381A  C073  F046         	movff	___sindf$3513+3,___fladd@b+3
  3639   00381E  C060  F015         	movff	___sindf@r,___flmul@a
  3640   003822  C061  F016         	movff	___sindf@r+1,___flmul@a+1
  3641   003826  C062  F017         	movff	___sindf@r+2,___flmul@a+2
  3642   00382A  C063  F018         	movff	___sindf@r+3,___flmul@a+3
  3643   00382E  C06C  F011         	movff	___sindf$3512,___flmul@b
  3644   003832  C06D  F012         	movff	___sindf$3512+1,___flmul@b+1
  3645   003836  C06E  F013         	movff	___sindf$3512+2,___flmul@b+2
  3646   00383A  C06F  F014         	movff	___sindf$3512+3,___flmul@b+3
  3647   00383E  EC51  F012         	call	___flmul	;wreg free
  3648   003842  C011  F047         	movff	?___flmul,___fladd@a
  3649   003846  C012  F048         	movff	?___flmul+1,___fladd@a+1
  3650   00384A  C013  F049         	movff	?___flmul+2,___fladd@a+2
  3651   00384E  C014  F04A         	movff	?___flmul+3,___fladd@a+3
  3652   003852  ECF1  F00F         	call	___fladd	;wreg free
  3653   003856  C043  F053         	movff	?___fladd,?___sindf
  3654   00385A  C044  F054         	movff	?___fladd+1,?___sindf+1
  3655   00385E  C045  F055         	movff	?___fladd+2,?___sindf+2
  3656   003862  C046  F056         	movff	?___fladd+3,?___sindf+3
  3657   003866  0012               	return		;funcret
  3658   003868                     __end_of___sindf:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function ___rem_pio2f *****************
  3662 ;; Defined at:
  3663 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__rem_pio2f.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  x               4   28[BANK0 ] float 
  3666 ;;  y               1   32[BANK0 ] PTR 
  3667 ;;		 -> sinf@y(4), 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  n               4   56[BANK0 ] long 
  3670 ;;  t               4   52[BANK0 ] float 
  3671 ;;  fn              4   48[BANK0 ] float 
  3672 ;;  ux              4   44[BANK0 ] struct .
  3673 ;;  ty              4   35[BANK0 ] [1]
  3674 ;;  sign            1   43[BANK0 ] _Bool 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  2   28[BANK0 ] int 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3684 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;Total ram usage:       32 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 3
  3691 ;; This function calls:
  3692 ;;		___fladd
  3693 ;;		___flmul
  3694 ;;		___flneg
  3695 ;;		___flsub
  3696 ;;		___fltol
  3697 ;;		___xxtofl
  3698 ;;		_fabsf
  3699 ;; This function is called by:
  3700 ;;		_sinf
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text11
  3705   002C90                     __ptext11:
  3706                           	callstack 0
  3707   002C90                     ___rem_pio2f:
  3708                           	callstack 25
  3709   002C90  C115  F08C         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  3710   002C94  C116  F08D         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  3711   002C98  C117  F08E         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  3712   002C9C  C118  F08F         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  3713   002CA0  C07C  F08C         	movff	___rem_pio2f@x,___rem_pio2f@ux
  3714   002CA4  C07D  F08D         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  3715   002CA8  C07E  F08E         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  3716   002CAC  C07F  F08F         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  3717   002CB0  0100               	movlb	0	; () banked
  3718   002CB2  BF8F               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  3719   002CB4  EF5E  F016         	goto	u8161
  3720   002CB8  EF61  F016         	goto	u8160
  3721   002CBC                     u8161:
  3722   002CBC  0E01               	movlw	1
  3723   002CBE  EF62  F016         	goto	u8170
  3724   002CC2                     u8160:
  3725   002CC2  0E00               	movlw	0
  3726   002CC4                     u8170:
  3727   002CC4  6F8B               	movwf	___rem_pio2f@sign& (0+255),b
  3728   002CC6                     
  3729                           ; BSR set to: 0
  3730   002CC6  9F8F               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  3731   002CC8                     
  3732                           ; BSR set to: 0
  3733   002CC8  0EDB               	movlw	219
  3734   002CCA  5D8C               	subwf	___rem_pio2f@ux& (0+255),w,b
  3735   002CCC  0E0F               	movlw	15
  3736   002CCE  598D               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  3737   002CD0  0EC9               	movlw	201
  3738   002CD2  598E               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  3739   002CD4  0E4D               	movlw	77
  3740   002CD6  598F               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  3741   002CD8  B0D8               	btfsc	status,0,c
  3742   002CDA  EF71  F016         	goto	u8181
  3743   002CDE  EF73  F016         	goto	u8180
  3744   002CE2                     u8181:
  3745   002CE2  EF5F  F017         	goto	l6268
  3746   002CE6                     u8180:
  3747   002CE6                     
  3748                           ; BSR set to: 0
  3749   002CE6  C07C  F003         	movff	___rem_pio2f@x,fabsf@x
  3750   002CEA  C07D  F004         	movff	___rem_pio2f@x+1,fabsf@x+1
  3751   002CEE  C07E  F005         	movff	___rem_pio2f@x+2,fabsf@x+2
  3752   002CF2  C07F  F006         	movff	___rem_pio2f@x+3,fabsf@x+3
  3753   002CF6  ECC6  F029         	call	_fabsf	;wreg free
  3754   002CFA  C003  F094         	movff	?_fabsf,___rem_pio2f@t
  3755   002CFE  C004  F095         	movff	?_fabsf+1,___rem_pio2f@t+1
  3756   002D02  C005  F096         	movff	?_fabsf+2,___rem_pio2f@t+2
  3757   002D06  C006  F097         	movff	?_fabsf+3,___rem_pio2f@t+3
  3758   002D0A  0E00               	movlw	0
  3759   002D0C  6E47               	movwf	___fladd@a^0,c
  3760   002D0E  0E00               	movlw	0
  3761   002D10  6E48               	movwf	(___fladd@a+1)^0,c
  3762   002D12  0E00               	movlw	0
  3763   002D14  6E49               	movwf	(___fladd@a+2)^0,c
  3764   002D16  0E3F               	movlw	63
  3765   002D18  6E4A               	movwf	(___fladd@a+3)^0,c
  3766   002D1A  0E83               	movlw	131
  3767   002D1C  6E15               	movwf	___flmul@a^0,c
  3768   002D1E  0EF9               	movlw	249
  3769   002D20  6E16               	movwf	(___flmul@a+1)^0,c
  3770   002D22  0E22               	movlw	34
  3771   002D24  6E17               	movwf	(___flmul@a+2)^0,c
  3772   002D26  0E3F               	movlw	63
  3773   002D28  6E18               	movwf	(___flmul@a+3)^0,c
  3774   002D2A  C094  F011         	movff	___rem_pio2f@t,___flmul@b
  3775   002D2E  C095  F012         	movff	___rem_pio2f@t+1,___flmul@b+1
  3776   002D32  C096  F013         	movff	___rem_pio2f@t+2,___flmul@b+2
  3777   002D36  C097  F014         	movff	___rem_pio2f@t+3,___flmul@b+3
  3778   002D3A  EC51  F012         	call	___flmul	;wreg free
  3779   002D3E  C011  F043         	movff	?___flmul,___fladd@b
  3780   002D42  C012  F044         	movff	?___flmul+1,___fladd@b+1
  3781   002D46  C013  F045         	movff	?___flmul+2,___fladd@b+2
  3782   002D4A  C014  F046         	movff	?___flmul+3,___fladd@b+3
  3783   002D4E  ECF1  F00F         	call	___fladd	;wreg free
  3784   002D52  C043  F053         	movff	?___fladd,___fltol@f1
  3785   002D56  C044  F054         	movff	?___fladd+1,___fltol@f1+1
  3786   002D5A  C045  F055         	movff	?___fladd+2,___fltol@f1+2
  3787   002D5E  C046  F056         	movff	?___fladd+3,___fltol@f1+3
  3788   002D62  ECEF  F023         	call	___fltol	;wreg free
  3789   002D66  C053  F098         	movff	?___fltol,___rem_pio2f@n
  3790   002D6A  C054  F099         	movff	?___fltol+1,___rem_pio2f@n+1
  3791   002D6E  C055  F09A         	movff	?___fltol+2,___rem_pio2f@n+2
  3792   002D72  C056  F09B         	movff	?___fltol+3,___rem_pio2f@n+3
  3793   002D76  C098  F003         	movff	___rem_pio2f@n,___xxtofl@val
  3794   002D7A  C099  F004         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  3795   002D7E  C09A  F005         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  3796   002D82  C09B  F006         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  3797   002D86  0E01               	movlw	1
  3798   002D88  EC49  F020         	call	___xxtofl
  3799   002D8C  C003  F090         	movff	?___xxtofl,___rem_pio2f@fn
  3800   002D90  C004  F091         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  3801   002D94  C005  F092         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  3802   002D98  C006  F093         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  3803   002D9C  0EDA               	movlw	218
  3804   002D9E  6E15               	movwf	___flmul@a^0,c
  3805   002DA0  0E0F               	movlw	15
  3806   002DA2  6E16               	movwf	(___flmul@a+1)^0,c
  3807   002DA4  0EC9               	movlw	201
  3808   002DA6  6E17               	movwf	(___flmul@a+2)^0,c
  3809   002DA8  0E3F               	movlw	63
  3810   002DAA  6E18               	movwf	(___flmul@a+3)^0,c
  3811   002DAC  C090  F011         	movff	___rem_pio2f@fn,___flmul@b
  3812   002DB0  C091  F012         	movff	___rem_pio2f@fn+1,___flmul@b+1
  3813   002DB4  C092  F013         	movff	___rem_pio2f@fn+2,___flmul@b+2
  3814   002DB8  C093  F014         	movff	___rem_pio2f@fn+3,___flmul@b+3
  3815   002DBC  EC51  F012         	call	___flmul	;wreg free
  3816   002DC0  C011  F057         	movff	?___flmul,___flsub@a
  3817   002DC4  C012  F058         	movff	?___flmul+1,___flsub@a+1
  3818   002DC8  C013  F059         	movff	?___flmul+2,___flsub@a+2
  3819   002DCC  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  3820   002DD0  C094  F053         	movff	___rem_pio2f@t,___flsub@b
  3821   002DD4  C095  F054         	movff	___rem_pio2f@t+1,___flsub@b+1
  3822   002DD8  C096  F055         	movff	___rem_pio2f@t+2,___flsub@b+2
  3823   002DDC  C097  F056         	movff	___rem_pio2f@t+3,___flsub@b+3
  3824   002DE0  ECEC  F028         	call	___flsub	;wreg free
  3825   002DE4  C053  F087         	movff	?___flsub,___rem_pio2f$3510
  3826   002DE8  C054  F088         	movff	?___flsub+1,___rem_pio2f$3510+1
  3827   002DEC  C055  F089         	movff	?___flsub+2,___rem_pio2f$3510+2
  3828   002DF0  C056  F08A         	movff	?___flsub+3,___rem_pio2f$3510+3
  3829   002DF4  C087  F053         	movff	___rem_pio2f$3510,___flsub@b
  3830   002DF8  C088  F054         	movff	___rem_pio2f$3510+1,___flsub@b+1
  3831   002DFC  C089  F055         	movff	___rem_pio2f$3510+2,___flsub@b+2
  3832   002E00  C08A  F056         	movff	___rem_pio2f$3510+3,___flsub@b+3
  3833   002E04  0EA3               	movlw	163
  3834   002E06  6E15               	movwf	___flmul@a^0,c
  3835   002E08  0E85               	movlw	133
  3836   002E0A  6E16               	movwf	(___flmul@a+1)^0,c
  3837   002E0C  0E88               	movlw	136
  3838   002E0E  6E17               	movwf	(___flmul@a+2)^0,c
  3839   002E10  0E32               	movlw	50
  3840   002E12  6E18               	movwf	(___flmul@a+3)^0,c
  3841   002E14  C090  F011         	movff	___rem_pio2f@fn,___flmul@b
  3842   002E18  C091  F012         	movff	___rem_pio2f@fn+1,___flmul@b+1
  3843   002E1C  C092  F013         	movff	___rem_pio2f@fn+2,___flmul@b+2
  3844   002E20  C093  F014         	movff	___rem_pio2f@fn+3,___flmul@b+3
  3845   002E24  EC51  F012         	call	___flmul	;wreg free
  3846   002E28  C011  F057         	movff	?___flmul,___flsub@a
  3847   002E2C  C012  F058         	movff	?___flmul+1,___flsub@a+1
  3848   002E30  C013  F059         	movff	?___flmul+2,___flsub@a+2
  3849   002E34  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  3850   002E38  ECEC  F028         	call	___flsub	;wreg free
  3851   002E3C  0100               	movlb	0	; () banked
  3852   002E3E  5180               	movf	___rem_pio2f@y& (0+255),w,b
  3853   002E40  6ED9               	movwf	fsr2l,c
  3854   002E42  6ADA               	clrf	fsr2h,c
  3855   002E44  C053  FFDE         	movff	?___flsub,postinc2
  3856   002E48  C054  FFDE         	movff	?___flsub+1,postinc2
  3857   002E4C  C055  FFDE         	movff	?___flsub+2,postinc2
  3858   002E50  C056  FFDE         	movff	?___flsub+3,postinc2
  3859   002E54                     
  3860                           ; BSR set to: 0
  3861   002E54  518B               	movf	___rem_pio2f@sign& (0+255),w,b
  3862   002E56  B4D8               	btfsc	status,2,c
  3863   002E58  EF30  F017         	goto	u8191
  3864   002E5C  EF32  F017         	goto	u8190
  3865   002E60                     u8191:
  3866   002E60  EF59  F017         	goto	l1384
  3867   002E64                     u8190:
  3868   002E64                     l6262:
  3869                           
  3870                           ; BSR set to: 0
  3871   002E64  5180               	movf	___rem_pio2f@y& (0+255),w,b
  3872   002E66  6ED9               	movwf	fsr2l,c
  3873   002E68  6ADA               	clrf	fsr2h,c
  3874   002E6A  CFDE F078          	movff	postinc2,___flneg@f1
  3875   002E6E  CFDE F079          	movff	postinc2,___flneg@f1+1
  3876   002E72  CFDE F07A          	movff	postinc2,___flneg@f1+2
  3877   002E76  CFDE F07B          	movff	postinc2,___flneg@f1+3
  3878   002E7A  EC8E  F029         	call	___flneg	;wreg free
  3879   002E7E  0100               	movlb	0	; () banked
  3880   002E80  5180               	movf	___rem_pio2f@y& (0+255),w,b
  3881   002E82  6ED9               	movwf	fsr2l,c
  3882   002E84  6ADA               	clrf	fsr2h,c
  3883   002E86  C078  FFDE         	movff	?___flneg,postinc2
  3884   002E8A  C079  FFDE         	movff	?___flneg+1,postinc2
  3885   002E8E  C07A  FFDE         	movff	?___flneg+2,postinc2
  3886   002E92  C07B  FFDE         	movff	?___flneg+3,postinc2
  3887   002E96                     
  3888                           ; BSR set to: 0
  3889   002E96  C098  F081         	movff	___rem_pio2f@n,??___rem_pio2f
  3890   002E9A  C099  F082         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  3891   002E9E  1F81               	comf	??___rem_pio2f& (0+255),f,b
  3892   002EA0  1F82               	comf	(??___rem_pio2f+1)& (0+255),f,b
  3893   002EA2  4B81               	infsnz	??___rem_pio2f& (0+255),f,b
  3894   002EA4  2B82               	incf	(??___rem_pio2f+1)& (0+255),f,b
  3895   002EA6  C081  F07C         	movff	??___rem_pio2f,?___rem_pio2f
  3896   002EAA  C082  F07D         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  3897   002EAE  EF28  F018         	goto	l1385
  3898   002EB2                     l1384:
  3899                           
  3900                           ; BSR set to: 0
  3901   002EB2  C098  F07C         	movff	___rem_pio2f@n,?___rem_pio2f
  3902   002EB6  C099  F07D         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  3903   002EBA  EF28  F018         	goto	l1385
  3904   002EBE                     l6268:
  3905                           
  3906                           ; BSR set to: 0
  3907   002EBE  C07C  F003         	movff	___rem_pio2f@x,fabsf@x
  3908   002EC2  C07D  F004         	movff	___rem_pio2f@x+1,fabsf@x+1
  3909   002EC6  C07E  F005         	movff	___rem_pio2f@x+2,fabsf@x+2
  3910   002ECA  C07F  F006         	movff	___rem_pio2f@x+3,fabsf@x+3
  3911   002ECE  ECC6  F029         	call	_fabsf	;wreg free
  3912   002ED2  C003  F094         	movff	?_fabsf,___rem_pio2f@t
  3913   002ED6  C004  F095         	movff	?_fabsf+1,___rem_pio2f@t+1
  3914   002EDA  C005  F096         	movff	?_fabsf+2,___rem_pio2f@t+2
  3915   002EDE  C006  F097         	movff	?_fabsf+3,___rem_pio2f@t+3
  3916   002EE2  0E00               	movlw	0
  3917   002EE4  6E47               	movwf	___fladd@a^0,c
  3918   002EE6  0E00               	movlw	0
  3919   002EE8  6E48               	movwf	(___fladd@a+1)^0,c
  3920   002EEA  0E00               	movlw	0
  3921   002EEC  6E49               	movwf	(___fladd@a+2)^0,c
  3922   002EEE  0E3F               	movlw	63
  3923   002EF0  6E4A               	movwf	(___fladd@a+3)^0,c
  3924   002EF2  0E83               	movlw	131
  3925   002EF4  6E15               	movwf	___flmul@a^0,c
  3926   002EF6  0EF9               	movlw	249
  3927   002EF8  6E16               	movwf	(___flmul@a+1)^0,c
  3928   002EFA  0E22               	movlw	34
  3929   002EFC  6E17               	movwf	(___flmul@a+2)^0,c
  3930   002EFE  0E3F               	movlw	63
  3931   002F00  6E18               	movwf	(___flmul@a+3)^0,c
  3932   002F02  C094  F011         	movff	___rem_pio2f@t,___flmul@b
  3933   002F06  C095  F012         	movff	___rem_pio2f@t+1,___flmul@b+1
  3934   002F0A  C096  F013         	movff	___rem_pio2f@t+2,___flmul@b+2
  3935   002F0E  C097  F014         	movff	___rem_pio2f@t+3,___flmul@b+3
  3936   002F12  EC51  F012         	call	___flmul	;wreg free
  3937   002F16  C011  F043         	movff	?___flmul,___fladd@b
  3938   002F1A  C012  F044         	movff	?___flmul+1,___fladd@b+1
  3939   002F1E  C013  F045         	movff	?___flmul+2,___fladd@b+2
  3940   002F22  C014  F046         	movff	?___flmul+3,___fladd@b+3
  3941   002F26  ECF1  F00F         	call	___fladd	;wreg free
  3942   002F2A  C043  F053         	movff	?___fladd,___fltol@f1
  3943   002F2E  C044  F054         	movff	?___fladd+1,___fltol@f1+1
  3944   002F32  C045  F055         	movff	?___fladd+2,___fltol@f1+2
  3945   002F36  C046  F056         	movff	?___fladd+3,___fltol@f1+3
  3946   002F3A  ECEF  F023         	call	___fltol	;wreg free
  3947   002F3E  C053  F098         	movff	?___fltol,___rem_pio2f@n
  3948   002F42  C054  F099         	movff	?___fltol+1,___rem_pio2f@n+1
  3949   002F46  C055  F09A         	movff	?___fltol+2,___rem_pio2f@n+2
  3950   002F4A  C056  F09B         	movff	?___fltol+3,___rem_pio2f@n+3
  3951   002F4E  C098  F003         	movff	___rem_pio2f@n,___xxtofl@val
  3952   002F52  C099  F004         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  3953   002F56  C09A  F005         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  3954   002F5A  C09B  F006         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  3955   002F5E  0E01               	movlw	1
  3956   002F60  EC49  F020         	call	___xxtofl
  3957   002F64  C003  F090         	movff	?___xxtofl,___rem_pio2f@fn
  3958   002F68  C004  F091         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  3959   002F6C  C005  F092         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  3960   002F70  C006  F093         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  3961   002F74  0EDA               	movlw	218
  3962   002F76  6E15               	movwf	___flmul@a^0,c
  3963   002F78  0E0F               	movlw	15
  3964   002F7A  6E16               	movwf	(___flmul@a+1)^0,c
  3965   002F7C  0EC9               	movlw	201
  3966   002F7E  6E17               	movwf	(___flmul@a+2)^0,c
  3967   002F80  0E3F               	movlw	63
  3968   002F82  6E18               	movwf	(___flmul@a+3)^0,c
  3969   002F84  C090  F011         	movff	___rem_pio2f@fn,___flmul@b
  3970   002F88  C091  F012         	movff	___rem_pio2f@fn+1,___flmul@b+1
  3971   002F8C  C092  F013         	movff	___rem_pio2f@fn+2,___flmul@b+2
  3972   002F90  C093  F014         	movff	___rem_pio2f@fn+3,___flmul@b+3
  3973   002F94  EC51  F012         	call	___flmul	;wreg free
  3974   002F98  C011  F057         	movff	?___flmul,___flsub@a
  3975   002F9C  C012  F058         	movff	?___flmul+1,___flsub@a+1
  3976   002FA0  C013  F059         	movff	?___flmul+2,___flsub@a+2
  3977   002FA4  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  3978   002FA8  C094  F053         	movff	___rem_pio2f@t,___flsub@b
  3979   002FAC  C095  F054         	movff	___rem_pio2f@t+1,___flsub@b+1
  3980   002FB0  C096  F055         	movff	___rem_pio2f@t+2,___flsub@b+2
  3981   002FB4  C097  F056         	movff	___rem_pio2f@t+3,___flsub@b+3
  3982   002FB8  ECEC  F028         	call	___flsub	;wreg free
  3983   002FBC  C053  F087         	movff	?___flsub,___rem_pio2f$3510
  3984   002FC0  C054  F088         	movff	?___flsub+1,___rem_pio2f$3510+1
  3985   002FC4  C055  F089         	movff	?___flsub+2,___rem_pio2f$3510+2
  3986   002FC8  C056  F08A         	movff	?___flsub+3,___rem_pio2f$3510+3
  3987   002FCC  C087  F053         	movff	___rem_pio2f$3510,___flsub@b
  3988   002FD0  C088  F054         	movff	___rem_pio2f$3510+1,___flsub@b+1
  3989   002FD4  C089  F055         	movff	___rem_pio2f$3510+2,___flsub@b+2
  3990   002FD8  C08A  F056         	movff	___rem_pio2f$3510+3,___flsub@b+3
  3991   002FDC  0EA3               	movlw	163
  3992   002FDE  6E15               	movwf	___flmul@a^0,c
  3993   002FE0  0E85               	movlw	133
  3994   002FE2  6E16               	movwf	(___flmul@a+1)^0,c
  3995   002FE4  0E88               	movlw	136
  3996   002FE6  6E17               	movwf	(___flmul@a+2)^0,c
  3997   002FE8  0E32               	movlw	50
  3998   002FEA  6E18               	movwf	(___flmul@a+3)^0,c
  3999   002FEC  C090  F011         	movff	___rem_pio2f@fn,___flmul@b
  4000   002FF0  C091  F012         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4001   002FF4  C092  F013         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4002   002FF8  C093  F014         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4003   002FFC  EC51  F012         	call	___flmul	;wreg free
  4004   003000  C011  F057         	movff	?___flmul,___flsub@a
  4005   003004  C012  F058         	movff	?___flmul+1,___flsub@a+1
  4006   003008  C013  F059         	movff	?___flmul+2,___flsub@a+2
  4007   00300C  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  4008   003010  ECEC  F028         	call	___flsub	;wreg free
  4009   003014  C053  F083         	movff	?___flsub,___rem_pio2f@ty
  4010   003018  C054  F084         	movff	?___flsub+1,___rem_pio2f@ty+1
  4011   00301C  C055  F085         	movff	?___flsub+2,___rem_pio2f@ty+2
  4012   003020  C056  F086         	movff	?___flsub+3,___rem_pio2f@ty+3
  4013   003024  0100               	movlb	0	; () banked
  4014   003026  5180               	movf	___rem_pio2f@y& (0+255),w,b
  4015   003028  6ED9               	movwf	fsr2l,c
  4016   00302A  6ADA               	clrf	fsr2h,c
  4017   00302C  C083  FFDE         	movff	___rem_pio2f@ty,postinc2
  4018   003030  C084  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  4019   003034  C085  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  4020   003038  C086  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  4021   00303C                     
  4022                           ; BSR set to: 0
  4023   00303C  518B               	movf	___rem_pio2f@sign& (0+255),w,b
  4024   00303E  B4D8               	btfsc	status,2,c
  4025   003040  EF24  F018         	goto	u8201
  4026   003044  EF26  F018         	goto	u8200
  4027   003048                     u8201:
  4028   003048  EF59  F017         	goto	l1384
  4029   00304C                     u8200:
  4030   00304C  EF32  F017         	goto	l6262
  4031   003050                     l1385:
  4032                           
  4033                           ; BSR set to: 0
  4034   003050  0012               	return		;funcret
  4035   003052                     __end_of___rem_pio2f:
  4036                           	callstack 0
  4037                           
  4038 ;; *************** function _fabsf *****************
  4039 ;; Defined at:
  4040 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fabsf.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  x               4    2[COMRAM] float 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  u               4    6[COMRAM] struct .
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  4    2[COMRAM] float 
  4047 ;; Registers used:
  4048 ;;		status,2, status,0
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;Total ram usage:        8 bytes
  4059 ;; Hardware stack levels used: 1
  4060 ;; Hardware stack levels required when called: 1
  4061 ;; This function calls:
  4062 ;;		Nothing
  4063 ;; This function is called by:
  4064 ;;		___rem_pio2f
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text12
  4069   00538C                     __ptext12:
  4070                           	callstack 0
  4071   00538C                     _fabsf:
  4072                           	callstack 26
  4073   00538C  C111  F007         	movff	fabsf@F465,fabsf@u
  4074   005390  C112  F008         	movff	fabsf@F465+1,fabsf@u+1
  4075   005394  C113  F009         	movff	fabsf@F465+2,fabsf@u+2
  4076   005398  C114  F00A         	movff	fabsf@F465+3,fabsf@u+3
  4077   00539C  C003  F007         	movff	fabsf@x,fabsf@u
  4078   0053A0  C004  F008         	movff	fabsf@x+1,fabsf@u+1
  4079   0053A4  C005  F009         	movff	fabsf@x+2,fabsf@u+2
  4080   0053A8  C006  F00A         	movff	fabsf@x+3,fabsf@u+3
  4081   0053AC  9E0A               	bcf	(fabsf@u+3)^0,7,c
  4082   0053AE  C007  F003         	movff	fabsf@u,?_fabsf
  4083   0053B2  C008  F004         	movff	fabsf@u+1,?_fabsf+1
  4084   0053B6  C009  F005         	movff	fabsf@u+2,?_fabsf+2
  4085   0053BA  C00A  F006         	movff	fabsf@u+3,?_fabsf+3
  4086   0053BE  0012               	return		;funcret
  4087   0053C0                     __end_of_fabsf:
  4088                           	callstack 0
  4089                           
  4090 ;; *************** function ___cosdf *****************
  4091 ;; Defined at:
  4092 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__cosdf.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  x               4   82[COMRAM] float 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  z               4   20[BANK0 ] float 
  4097 ;;  w               4   16[BANK0 ] float 
  4098 ;;  r               4    0[BANK0 ] float 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  4   82[COMRAM] float 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;Total ram usage:       28 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; Hardware stack levels required when called: 2
  4115 ;; This function calls:
  4116 ;;		___fladd
  4117 ;;		___flmul
  4118 ;; This function is called by:
  4119 ;;		_sinf
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text13
  4124   003C98                     __ptext13:
  4125                           	callstack 0
  4126   003C98                     ___cosdf:
  4127                           	callstack 26
  4128   003C98  C053  F011         	movff	___cosdf@x,___flmul@b
  4129   003C9C  C054  F012         	movff	___cosdf@x+1,___flmul@b+1
  4130   003CA0  C055  F013         	movff	___cosdf@x+2,___flmul@b+2
  4131   003CA4  C056  F014         	movff	___cosdf@x+3,___flmul@b+3
  4132   003CA8  C053  F015         	movff	___cosdf@x,___flmul@a
  4133   003CAC  C054  F016         	movff	___cosdf@x+1,___flmul@a+1
  4134   003CB0  C055  F017         	movff	___cosdf@x+2,___flmul@a+2
  4135   003CB4  C056  F018         	movff	___cosdf@x+3,___flmul@a+3
  4136   003CB8  EC51  F012         	call	___flmul	;wreg free
  4137   003CBC  C011  F074         	movff	?___flmul,___cosdf@z
  4138   003CC0  C012  F075         	movff	?___flmul+1,___cosdf@z+1
  4139   003CC4  C013  F076         	movff	?___flmul+2,___cosdf@z+2
  4140   003CC8  C014  F077         	movff	?___flmul+3,___cosdf@z+3
  4141   003CCC  C074  F011         	movff	___cosdf@z,___flmul@b
  4142   003CD0  C075  F012         	movff	___cosdf@z+1,___flmul@b+1
  4143   003CD4  C076  F013         	movff	___cosdf@z+2,___flmul@b+2
  4144   003CD8  C077  F014         	movff	___cosdf@z+3,___flmul@b+3
  4145   003CDC  C074  F015         	movff	___cosdf@z,___flmul@a
  4146   003CE0  C075  F016         	movff	___cosdf@z+1,___flmul@a+1
  4147   003CE4  C076  F017         	movff	___cosdf@z+2,___flmul@a+2
  4148   003CE8  C077  F018         	movff	___cosdf@z+3,___flmul@a+3
  4149   003CEC  EC51  F012         	call	___flmul	;wreg free
  4150   003CF0  C011  F070         	movff	?___flmul,___cosdf@w
  4151   003CF4  C012  F071         	movff	?___flmul+1,___cosdf@w+1
  4152   003CF8  C013  F072         	movff	?___flmul+2,___cosdf@w+2
  4153   003CFC  C014  F073         	movff	?___flmul+3,___cosdf@w+3
  4154   003D00  0E17               	movlw	23
  4155   003D02  6E15               	movwf	___flmul@a^0,c
  4156   003D04  0E9A               	movlw	154
  4157   003D06  6E16               	movwf	(___flmul@a+1)^0,c
  4158   003D08  0ECC               	movlw	204
  4159   003D0A  6E17               	movwf	(___flmul@a+2)^0,c
  4160   003D0C  0E37               	movlw	55
  4161   003D0E  6E18               	movwf	(___flmul@a+3)^0,c
  4162   003D10  C074  F011         	movff	___cosdf@z,___flmul@b
  4163   003D14  C075  F012         	movff	___cosdf@z+1,___flmul@b+1
  4164   003D18  C076  F013         	movff	___cosdf@z+2,___flmul@b+2
  4165   003D1C  C077  F014         	movff	___cosdf@z+3,___flmul@b+3
  4166   003D20  EC51  F012         	call	___flmul	;wreg free
  4167   003D24  C011  F043         	movff	?___flmul,___fladd@b
  4168   003D28  C012  F044         	movff	?___flmul+1,___fladd@b+1
  4169   003D2C  C013  F045         	movff	?___flmul+2,___fladd@b+2
  4170   003D30  C014  F046         	movff	?___flmul+3,___fladd@b+3
  4171   003D34  0E3F               	movlw	63
  4172   003D36  6E47               	movwf	___fladd@a^0,c
  4173   003D38  0E04               	movlw	4
  4174   003D3A  6E48               	movwf	(___fladd@a+1)^0,c
  4175   003D3C  0EB6               	movlw	182
  4176   003D3E  6E49               	movwf	(___fladd@a+2)^0,c
  4177   003D40  0EBA               	movlw	186
  4178   003D42  6E4A               	movwf	(___fladd@a+3)^0,c
  4179   003D44  ECF1  F00F         	call	___fladd	;wreg free
  4180   003D48  C043  F060         	movff	?___fladd,___cosdf@r
  4181   003D4C  C044  F061         	movff	?___fladd+1,___cosdf@r+1
  4182   003D50  C045  F062         	movff	?___fladd+2,___cosdf@r+2
  4183   003D54  C046  F063         	movff	?___fladd+3,___cosdf@r+3
  4184   003D58  0E00               	movlw	0
  4185   003D5A  6E47               	movwf	___fladd@a^0,c
  4186   003D5C  0E00               	movlw	0
  4187   003D5E  6E48               	movwf	(___fladd@a+1)^0,c
  4188   003D60  0E80               	movlw	128
  4189   003D62  6E49               	movwf	(___fladd@a+2)^0,c
  4190   003D64  0E3F               	movlw	63
  4191   003D66  6E4A               	movwf	(___fladd@a+3)^0,c
  4192   003D68  0E00               	movlw	0
  4193   003D6A  6E15               	movwf	___flmul@a^0,c
  4194   003D6C  0E00               	movlw	0
  4195   003D6E  6E16               	movwf	(___flmul@a+1)^0,c
  4196   003D70  0E00               	movlw	0
  4197   003D72  6E17               	movwf	(___flmul@a+2)^0,c
  4198   003D74  0EBF               	movlw	191
  4199   003D76  6E18               	movwf	(___flmul@a+3)^0,c
  4200   003D78  C074  F011         	movff	___cosdf@z,___flmul@b
  4201   003D7C  C075  F012         	movff	___cosdf@z+1,___flmul@b+1
  4202   003D80  C076  F013         	movff	___cosdf@z+2,___flmul@b+2
  4203   003D84  C077  F014         	movff	___cosdf@z+3,___flmul@b+3
  4204   003D88  EC51  F012         	call	___flmul	;wreg free
  4205   003D8C  C011  F043         	movff	?___flmul,___fladd@b
  4206   003D90  C012  F044         	movff	?___flmul+1,___fladd@b+1
  4207   003D94  C013  F045         	movff	?___flmul+2,___fladd@b+2
  4208   003D98  C014  F046         	movff	?___flmul+3,___fladd@b+3
  4209   003D9C  ECF1  F00F         	call	___fladd	;wreg free
  4210   003DA0  C043  F064         	movff	?___fladd,___cosdf$3507
  4211   003DA4  C044  F065         	movff	?___fladd+1,___cosdf$3507+1
  4212   003DA8  C045  F066         	movff	?___fladd+2,___cosdf$3507+2
  4213   003DAC  C046  F067         	movff	?___fladd+3,___cosdf$3507+3
  4214   003DB0  C074  F015         	movff	___cosdf@z,___flmul@a
  4215   003DB4  C075  F016         	movff	___cosdf@z+1,___flmul@a+1
  4216   003DB8  C076  F017         	movff	___cosdf@z+2,___flmul@a+2
  4217   003DBC  C077  F018         	movff	___cosdf@z+3,___flmul@a+3
  4218   003DC0  C070  F011         	movff	___cosdf@w,___flmul@b
  4219   003DC4  C071  F012         	movff	___cosdf@w+1,___flmul@b+1
  4220   003DC8  C072  F013         	movff	___cosdf@w+2,___flmul@b+2
  4221   003DCC  C073  F014         	movff	___cosdf@w+3,___flmul@b+3
  4222   003DD0  EC51  F012         	call	___flmul	;wreg free
  4223   003DD4  C011  F068         	movff	?___flmul,___cosdf$3508
  4224   003DD8  C012  F069         	movff	?___flmul+1,___cosdf$3508+1
  4225   003DDC  C013  F06A         	movff	?___flmul+2,___cosdf$3508+2
  4226   003DE0  C014  F06B         	movff	?___flmul+3,___cosdf$3508+3
  4227   003DE4  0E9F               	movlw	159
  4228   003DE6  6E15               	movwf	___flmul@a^0,c
  4229   003DE8  0EAA               	movlw	170
  4230   003DEA  6E16               	movwf	(___flmul@a+1)^0,c
  4231   003DEC  0E2A               	movlw	42
  4232   003DEE  6E17               	movwf	(___flmul@a+2)^0,c
  4233   003DF0  0E3D               	movlw	61
  4234   003DF2  6E18               	movwf	(___flmul@a+3)^0,c
  4235   003DF4  C070  F011         	movff	___cosdf@w,___flmul@b
  4236   003DF8  C071  F012         	movff	___cosdf@w+1,___flmul@b+1
  4237   003DFC  C072  F013         	movff	___cosdf@w+2,___flmul@b+2
  4238   003E00  C073  F014         	movff	___cosdf@w+3,___flmul@b+3
  4239   003E04  EC51  F012         	call	___flmul	;wreg free
  4240   003E08  C011  F047         	movff	?___flmul,___fladd@a
  4241   003E0C  C012  F048         	movff	?___flmul+1,___fladd@a+1
  4242   003E10  C013  F049         	movff	?___flmul+2,___fladd@a+2
  4243   003E14  C014  F04A         	movff	?___flmul+3,___fladd@a+3
  4244   003E18  C064  F043         	movff	___cosdf$3507,___fladd@b
  4245   003E1C  C065  F044         	movff	___cosdf$3507+1,___fladd@b+1
  4246   003E20  C066  F045         	movff	___cosdf$3507+2,___fladd@b+2
  4247   003E24  C067  F046         	movff	___cosdf$3507+3,___fladd@b+3
  4248   003E28  ECF1  F00F         	call	___fladd	;wreg free
  4249   003E2C  C043  F06C         	movff	?___fladd,___cosdf$3509
  4250   003E30  C044  F06D         	movff	?___fladd+1,___cosdf$3509+1
  4251   003E34  C045  F06E         	movff	?___fladd+2,___cosdf$3509+2
  4252   003E38  C046  F06F         	movff	?___fladd+3,___cosdf$3509+3
  4253   003E3C  C06C  F043         	movff	___cosdf$3509,___fladd@b
  4254   003E40  C06D  F044         	movff	___cosdf$3509+1,___fladd@b+1
  4255   003E44  C06E  F045         	movff	___cosdf$3509+2,___fladd@b+2
  4256   003E48  C06F  F046         	movff	___cosdf$3509+3,___fladd@b+3
  4257   003E4C  C060  F015         	movff	___cosdf@r,___flmul@a
  4258   003E50  C061  F016         	movff	___cosdf@r+1,___flmul@a+1
  4259   003E54  C062  F017         	movff	___cosdf@r+2,___flmul@a+2
  4260   003E58  C063  F018         	movff	___cosdf@r+3,___flmul@a+3
  4261   003E5C  C068  F011         	movff	___cosdf$3508,___flmul@b
  4262   003E60  C069  F012         	movff	___cosdf$3508+1,___flmul@b+1
  4263   003E64  C06A  F013         	movff	___cosdf$3508+2,___flmul@b+2
  4264   003E68  C06B  F014         	movff	___cosdf$3508+3,___flmul@b+3
  4265   003E6C  EC51  F012         	call	___flmul	;wreg free
  4266   003E70  C011  F047         	movff	?___flmul,___fladd@a
  4267   003E74  C012  F048         	movff	?___flmul+1,___fladd@a+1
  4268   003E78  C013  F049         	movff	?___flmul+2,___fladd@a+2
  4269   003E7C  C014  F04A         	movff	?___flmul+3,___fladd@a+3
  4270   003E80  ECF1  F00F         	call	___fladd	;wreg free
  4271   003E84  C043  F053         	movff	?___fladd,?___cosdf
  4272   003E88  C044  F054         	movff	?___fladd+1,?___cosdf+1
  4273   003E8C  C045  F055         	movff	?___fladd+2,?___cosdf+2
  4274   003E90  C046  F056         	movff	?___fladd+3,?___cosdf+3
  4275   003E94  0012               	return		;funcret
  4276   003E96                     __end_of___cosdf:
  4277                           	callstack 0
  4278                           
  4279 ;; *************** function _printf *****************
  4280 ;; Defined at:
  4281 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  fmt             1   98[BANK0 ] PTR const unsigned char 
  4284 ;;		 -> STR_6(5), 
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  ret             2    0        int 
  4287 ;;  ap              1  101[BANK0 ] PTR void [1]
  4288 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  2   98[BANK0 ] int 
  4291 ;; Registers used:
  4292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4298 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;Total ram usage:        4 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; Hardware stack levels required when called: 8
  4305 ;; This function calls:
  4306 ;;		_vfprintf
  4307 ;; This function is called by:
  4308 ;;		_runDAC
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text14
  4313   005460                     __ptext14:
  4314                           	callstack 0
  4315   005460                     _printf:
  4316                           	callstack 21
  4317   005460  0EC3               	movlw	low (?_printf+1)
  4318   005462  0100               	movlb	0	; () banked
  4319   005464  6FC5               	movwf	printf@ap& (0+255),b
  4320   005466                     
  4321                           ; BSR set to: 0
  4322   005466  0E00               	movlw	0
  4323   005468  6FBD               	movwf	vfprintf@fp& (0+255),b
  4324   00546A  0E00               	movlw	0
  4325   00546C  6FBE               	movwf	(vfprintf@fp+1)& (0+255),b
  4326   00546E  C0C2  F0BF         	movff	printf@fmt,vfprintf@fmt
  4327   005472  0EC5               	movlw	low printf@ap
  4328   005474  6FC0               	movwf	vfprintf@ap& (0+255),b
  4329   005476  ECC9  F028         	call	_vfprintf	;wreg free
  4330   00547A  0012               	return		;funcret
  4331   00547C                     __end_of_printf:
  4332                           	callstack 0
  4333                           
  4334 ;; *************** function _SPI_write *****************
  4335 ;; Defined at:
  4336 ;;		line 93 in file "DAC.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  data            1    wreg     unsigned char 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  data            1    4[COMRAM] unsigned char 
  4341 ;;  LSB             1    3[COMRAM] unsigned char 
  4342 ;;  MSB             1    2[COMRAM] unsigned char 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1    wreg      void 
  4345 ;; Registers used:
  4346 ;;		wreg, status,2, status,0
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;Total ram usage:        3 bytes
  4357 ;; Hardware stack levels used: 1
  4358 ;; Hardware stack levels required when called: 1
  4359 ;; This function calls:
  4360 ;;		Nothing
  4361 ;; This function is called by:
  4362 ;;		_runDAC
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           	psect	text15
  4367   0052A4                     __ptext15:
  4368                           	callstack 0
  4369   0052A4                     _SPI_write:
  4370                           	callstack 28
  4371                           
  4372                           ;incstack = 0
  4373                           ;SPI_write@data stored from wreg
  4374   0052A4  6E05               	movwf	SPI_write@data^0,c
  4375   0052A6                     
  4376                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  4377   0052A6  3805               	swapf	SPI_write@data^0,w,c
  4378   0052A8  0B0F               	andlw	15
  4379   0052AA  0930               	iorlw	48
  4380   0052AC  6E03               	movwf	SPI_write@MSB^0,c
  4381                           
  4382                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  4383   0052AE  3805               	swapf	SPI_write@data^0,w,c
  4384   0052B0  0BF0               	andlw	240
  4385   0052B2  6E04               	movwf	SPI_write@LSB^0,c
  4386   0052B4                     
  4387                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  4388   0052B4  968A               	bcf	138,3,c	;volatile
  4389   0052B6                     
  4390                           ;DAC.c: 101:     SSP1BUF = MSB;
  4391   0052B6  C003  FFC9         	movff	SPI_write@MSB,4041	;volatile
  4392   0052BA                     l213:
  4393   0052BA  A69E               	btfss	3998,3,c	;volatile
  4394   0052BC  EF62  F029         	goto	u8291
  4395   0052C0  EF64  F029         	goto	u8290
  4396   0052C4                     u8291:
  4397   0052C4  EF5D  F029         	goto	l213
  4398   0052C8                     u8290:
  4399   0052C8                     
  4400                           ;DAC.c: 103:     SSP1IF = 0;
  4401   0052C8  969E               	bcf	3998,3,c	;volatile
  4402                           
  4403                           ;DAC.c: 105:     SSP1BUF = LSB;
  4404   0052CA  C004  FFC9         	movff	SPI_write@LSB,4041	;volatile
  4405   0052CE                     l216:
  4406   0052CE  A69E               	btfss	3998,3,c	;volatile
  4407   0052D0  EF6C  F029         	goto	u8301
  4408   0052D4  EF6E  F029         	goto	u8300
  4409   0052D8                     u8301:
  4410   0052D8  EF67  F029         	goto	l216
  4411   0052DC                     u8300:
  4412   0052DC                     
  4413                           ;DAC.c: 107:     SSP1IF = 0;
  4414   0052DC  969E               	bcf	3998,3,c	;volatile
  4415                           
  4416                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  4417   0052DE  868A               	bsf	138,3,c	;volatile
  4418   0052E0  0012               	return		;funcret
  4419   0052E2                     __end_of_SPI_write:
  4420                           	callstack 0
  4421                           
  4422 ;; *************** function _runADC *****************
  4423 ;; Defined at:
  4424 ;;		line 13 in file "ADC.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;		None
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  text           17  124[BANK0 ] unsigned char [17]
  4429 ;;  voltage2        4  145[BANK0 ] float 
  4430 ;;  voltage1        4  141[BANK0 ] float 
  4431 ;;  pot2            2  151[BANK0 ] unsigned short 
  4432 ;;  pot1            2  149[BANK0 ] unsigned short 
  4433 ;;  keepState       1  153[BANK0 ] unsigned char 
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;Total ram usage:       32 bytes
  4448 ;; Hardware stack levels used: 1
  4449 ;; Hardware stack levels required when called: 9
  4450 ;; This function calls:
  4451 ;;		_LCD_ShowString
  4452 ;;		___fldiv
  4453 ;;		___flmul
  4454 ;;		___xxtofl
  4455 ;;		_sprintf
  4456 ;; This function is called by:
  4457 ;;		_main
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text16
  4462   003E96                     __ptext16:
  4463                           	callstack 0
  4464   003E96                     _runADC:
  4465                           	callstack 21
  4466   003E96                     
  4467                           ;ADC.c: 18:     ANSELAbits.ANSA5 = 1;
  4468   003E96  010F               	movlb	15	; () banked
  4469   003E98  8B38               	bsf	56,5,b	;volatile
  4470                           
  4471                           ;ADC.c: 20:     ANSELEbits.ANSE0 = 1;
  4472   003E9A  813C               	bsf	60,0,b	;volatile
  4473                           
  4474                           ;ADC.c: 22:     ADCON2bits.ADFM = 1;
  4475   003E9C  8EC0               	bsf	192,7,c	;volatile
  4476   003E9E                     
  4477                           ; BSR set to: 15
  4478                           ;ADC.c: 23:     ADCON2bits.ADCS = 0b110;
  4479   003E9E  50C0               	movf	192,w,c	;volatile
  4480   003EA0  0BF8               	andlw	-8
  4481   003EA2  0906               	iorlw	6
  4482   003EA4  6EC0               	movwf	192,c	;volatile
  4483                           
  4484                           ;ADC.c: 24:     ADCON2bits.ACQT = 0b110;
  4485   003EA6  50C0               	movf	192,w,c	;volatile
  4486   003EA8  0BC7               	andlw	-57
  4487   003EAA  0930               	iorlw	48
  4488   003EAC  6EC0               	movwf	192,c	;volatile
  4489   003EAE                     
  4490                           ; BSR set to: 15
  4491                           ;ADC.c: 25:     ADCON0bits.ADON = 1;
  4492   003EAE  80C2               	bsf	194,0,c	;volatile
  4493   003EB0                     
  4494                           ; BSR set to: 15
  4495                           ;ADC.c: 27:     uint16_t pot1, pot2;;ADC.c: 28:     float voltage1, voltage2;;ADC.c: 29:
      +                               char text[17] = "";
  4496   003EB0  EE20  F0DC         	lfsr	2,runADC@text
  4497   003EB4  0E10               	movlw	16
  4498   003EB6                     u8641:
  4499   003EB6  6ADE               	clrf	postinc2,c
  4500   003EB8  06E8               	decf	wreg,f,c
  4501   003EBA  E2FD               	bc	u8641
  4502   003EBC                     
  4503                           ; BSR set to: 15
  4504                           ;ADC.c: 30:     uint8_t keepState = 1;
  4505   003EBC  0E01               	movlw	1
  4506   003EBE  0100               	movlb	0	; () banked
  4507   003EC0  6FF9               	movwf	runADC@keepState& (0+255),b
  4508                           
  4509                           ;ADC.c: 32:     while(keepState){
  4510   003EC2  EF3F  F020         	goto	l374
  4511   003EC6                     l6552:
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;ADC.c: 35:         ADCON0bits.CHS = 5;
  4515   003EC6  50C2               	movf	194,w,c	;volatile
  4516   003EC8  0B83               	andlw	-125
  4517   003ECA  0914               	iorlw	20
  4518   003ECC  6EC2               	movwf	194,c	;volatile
  4519   003ECE                     
  4520                           ; BSR set to: 0
  4521                           ;ADC.c: 36:         GODONE = 1;
  4522   003ECE  82C2               	bsf	4034,1,c	;volatile
  4523   003ED0                     l376:
  4524   003ED0  B2C2               	btfsc	4034,1,c	;volatile
  4525   003ED2  EF6D  F01F         	goto	u8651
  4526   003ED6  EF6F  F01F         	goto	u8650
  4527   003EDA                     u8651:
  4528   003EDA  EF68  F01F         	goto	l376
  4529   003EDE                     u8650:
  4530   003EDE                     
  4531                           ;ADC.c: 38:         pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  4532   003EDE  50C3               	movf	195,w,c	;volatile
  4533   003EE0  CFC4 F0DA          	movff	4036,??_runADC	;volatile
  4534   003EE4  0100               	movlb	0	; () banked
  4535   003EE6  6BDB               	clrf	(??_runADC+1)& (0+255),b
  4536   003EE8  C0DA  F0DB         	movff	??_runADC,??_runADC+1
  4537   003EEC  6BDA               	clrf	??_runADC& (0+255),b
  4538   003EEE  11DA               	iorwf	??_runADC& (0+255),w,b
  4539   003EF0  6FF5               	movwf	runADC@pot1& (0+255),b
  4540   003EF2  51DB               	movf	(??_runADC+1)& (0+255),w,b
  4541   003EF4  6FF6               	movwf	(runADC@pot1+1)& (0+255),b
  4542   003EF6                     
  4543                           ; BSR set to: 0
  4544                           ;ADC.c: 39:         voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  4545   003EF6  0E00               	movlw	0
  4546   003EF8  6E2E               	movwf	___fldiv@a^0,c
  4547   003EFA  0EC0               	movlw	192
  4548   003EFC  6E2F               	movwf	(___fldiv@a+1)^0,c
  4549   003EFE  0E7F               	movlw	127
  4550   003F00  6E30               	movwf	(___fldiv@a+2)^0,c
  4551   003F02  0E44               	movlw	68
  4552   003F04  6E31               	movwf	(___fldiv@a+3)^0,c
  4553   003F06  C0F5  F003         	movff	runADC@pot1,___xxtofl@val
  4554   003F0A  C0F6  F004         	movff	runADC@pot1+1,___xxtofl@val+1
  4555   003F0E  6A05               	clrf	(___xxtofl@val+2)^0,c
  4556   003F10  6A06               	clrf	(___xxtofl@val+3)^0,c
  4557   003F12  0E00               	movlw	0
  4558   003F14  EC49  F020         	call	___xxtofl
  4559   003F18  C003  F02A         	movff	?___xxtofl,___fldiv@b
  4560   003F1C  C004  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  4561   003F20  C005  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  4562   003F24  C006  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  4563   003F28  EC29  F018         	call	___fldiv	;wreg free
  4564   003F2C  C02A  F011         	movff	?___fldiv,___flmul@b
  4565   003F30  C02B  F012         	movff	?___fldiv+1,___flmul@b+1
  4566   003F34  C02C  F013         	movff	?___fldiv+2,___flmul@b+2
  4567   003F38  C02D  F014         	movff	?___fldiv+3,___flmul@b+3
  4568   003F3C  0E33               	movlw	51
  4569   003F3E  6E15               	movwf	___flmul@a^0,c
  4570   003F40  0E33               	movlw	51
  4571   003F42  6E16               	movwf	(___flmul@a+1)^0,c
  4572   003F44  0E53               	movlw	83
  4573   003F46  6E17               	movwf	(___flmul@a+2)^0,c
  4574   003F48  0E40               	movlw	64
  4575   003F4A  6E18               	movwf	(___flmul@a+3)^0,c
  4576   003F4C  EC51  F012         	call	___flmul	;wreg free
  4577   003F50  C011  F0ED         	movff	?___flmul,runADC@voltage1
  4578   003F54  C012  F0EE         	movff	?___flmul+1,runADC@voltage1+1
  4579   003F58  C013  F0EF         	movff	?___flmul+2,runADC@voltage1+2
  4580   003F5C  C014  F0F0         	movff	?___flmul+3,runADC@voltage1+3
  4581   003F60                     
  4582                           ;ADC.c: 42:         ADCON0bits.CHS = 4;
  4583   003F60  50C2               	movf	194,w,c	;volatile
  4584   003F62  0B83               	andlw	-125
  4585   003F64  0910               	iorlw	16
  4586   003F66  6EC2               	movwf	194,c	;volatile
  4587   003F68                     
  4588                           ;ADC.c: 43:         GODONE = 1;
  4589   003F68  82C2               	bsf	4034,1,c	;volatile
  4590   003F6A                     l379:
  4591   003F6A  B2C2               	btfsc	4034,1,c	;volatile
  4592   003F6C  EFBA  F01F         	goto	u8661
  4593   003F70  EFBC  F01F         	goto	u8660
  4594   003F74                     u8661:
  4595   003F74  EFB5  F01F         	goto	l379
  4596   003F78                     u8660:
  4597   003F78                     
  4598                           ;ADC.c: 45:         pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  4599   003F78  50C3               	movf	195,w,c	;volatile
  4600   003F7A  CFC4 F0DA          	movff	4036,??_runADC	;volatile
  4601   003F7E  0100               	movlb	0	; () banked
  4602   003F80  6BDB               	clrf	(??_runADC+1)& (0+255),b
  4603   003F82  C0DA  F0DB         	movff	??_runADC,??_runADC+1
  4604   003F86  6BDA               	clrf	??_runADC& (0+255),b
  4605   003F88  11DA               	iorwf	??_runADC& (0+255),w,b
  4606   003F8A  6FF7               	movwf	runADC@pot2& (0+255),b
  4607   003F8C  51DB               	movf	(??_runADC+1)& (0+255),w,b
  4608   003F8E  6FF8               	movwf	(runADC@pot2+1)& (0+255),b
  4609   003F90                     
  4610                           ; BSR set to: 0
  4611                           ;ADC.c: 46:         voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  4612   003F90  0E00               	movlw	0
  4613   003F92  6E2E               	movwf	___fldiv@a^0,c
  4614   003F94  0EC0               	movlw	192
  4615   003F96  6E2F               	movwf	(___fldiv@a+1)^0,c
  4616   003F98  0E7F               	movlw	127
  4617   003F9A  6E30               	movwf	(___fldiv@a+2)^0,c
  4618   003F9C  0E44               	movlw	68
  4619   003F9E  6E31               	movwf	(___fldiv@a+3)^0,c
  4620   003FA0  C0F7  F003         	movff	runADC@pot2,___xxtofl@val
  4621   003FA4  C0F8  F004         	movff	runADC@pot2+1,___xxtofl@val+1
  4622   003FA8  6A05               	clrf	(___xxtofl@val+2)^0,c
  4623   003FAA  6A06               	clrf	(___xxtofl@val+3)^0,c
  4624   003FAC  0E00               	movlw	0
  4625   003FAE  EC49  F020         	call	___xxtofl
  4626   003FB2  C003  F02A         	movff	?___xxtofl,___fldiv@b
  4627   003FB6  C004  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  4628   003FBA  C005  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  4629   003FBE  C006  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  4630   003FC2  EC29  F018         	call	___fldiv	;wreg free
  4631   003FC6  C02A  F011         	movff	?___fldiv,___flmul@b
  4632   003FCA  C02B  F012         	movff	?___fldiv+1,___flmul@b+1
  4633   003FCE  C02C  F013         	movff	?___fldiv+2,___flmul@b+2
  4634   003FD2  C02D  F014         	movff	?___fldiv+3,___flmul@b+3
  4635   003FD6  0E33               	movlw	51
  4636   003FD8  6E15               	movwf	___flmul@a^0,c
  4637   003FDA  0E33               	movlw	51
  4638   003FDC  6E16               	movwf	(___flmul@a+1)^0,c
  4639   003FDE  0E53               	movlw	83
  4640   003FE0  6E17               	movwf	(___flmul@a+2)^0,c
  4641   003FE2  0E40               	movlw	64
  4642   003FE4  6E18               	movwf	(___flmul@a+3)^0,c
  4643   003FE6  EC51  F012         	call	___flmul	;wreg free
  4644   003FEA  C011  F0F1         	movff	?___flmul,runADC@voltage2
  4645   003FEE  C012  F0F2         	movff	?___flmul+1,runADC@voltage2+1
  4646   003FF2  C013  F0F3         	movff	?___flmul+2,runADC@voltage2+2
  4647   003FF6  C014  F0F4         	movff	?___flmul+3,runADC@voltage2+3
  4648   003FFA                     
  4649                           ;ADC.c: 48:         sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  4650   003FFA  0EDC               	movlw	low runADC@text
  4651   003FFC  0100               	movlb	0	; () banked
  4652   003FFE  6FC2               	movwf	sprintf@s& (0+255),b
  4653   004000  6BC3               	clrf	(sprintf@s+1)& (0+255),b
  4654   004002  0E41               	movlw	low STR_17
  4655   004004  6FC4               	movwf	sprintf@fmt& (0+255),b
  4656   004006  C0ED  F0C5         	movff	runADC@voltage1,?_sprintf+3
  4657   00400A  C0EE  F0C6         	movff	runADC@voltage1+1,?_sprintf+4
  4658   00400E  C0EF  F0C7         	movff	runADC@voltage1+2,?_sprintf+5
  4659   004012  C0F0  F0C8         	movff	runADC@voltage1+3,?_sprintf+6
  4660   004016  C0F1  F0C9         	movff	runADC@voltage2,?_sprintf+7
  4661   00401A  C0F2  F0CA         	movff	runADC@voltage2+1,?_sprintf+8
  4662   00401E  C0F3  F0CB         	movff	runADC@voltage2+2,?_sprintf+9
  4663   004022  C0F4  F0CC         	movff	runADC@voltage2+3,?_sprintf+10
  4664   004026  EC31  F029         	call	_sprintf	;wreg free
  4665   00402A                     
  4666                           ;ADC.c: 49:         LCD_ShowString(2, text);
  4667   00402A  0EDC               	movlw	low runADC@text
  4668   00402C  6E04               	movwf	LCD_ShowString@textData^0,c
  4669   00402E  6A05               	clrf	(LCD_ShowString@textData+1)^0,c
  4670   004030  0E02               	movlw	2
  4671   004032  ECA8  F026         	call	_LCD_ShowString
  4672   004036                     
  4673                           ;ADC.c: 51:         if(PORTAbits.RA2){
  4674   004036  A480               	btfss	128,2,c	;volatile
  4675   004038  EF20  F020         	goto	u8671
  4676   00403C  EF22  F020         	goto	u8670
  4677   004040                     u8671:
  4678   004040  EF3F  F020         	goto	l374
  4679   004044                     u8670:
  4680   004044                     
  4681                           ;ADC.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  4682   004044  0E03               	movlw	3
  4683   004046  0100               	movlb	0	; () banked
  4684   004048  6FDB               	movwf	(??_runADC+1)& (0+255),b
  4685   00404A  0E08               	movlw	8
  4686   00404C  6FDA               	movwf	??_runADC& (0+255),b
  4687   00404E  0E77               	movlw	119
  4688   004050                     u8947:
  4689   004050  2EE8               	decfsz	wreg,f,c
  4690   004052  D7FE               	bra	u8947
  4691   004054  2FDA               	decfsz	??_runADC& (0+255),f,b
  4692   004056  D7FC               	bra	u8947
  4693   004058  2FDB               	decfsz	(??_runADC+1)& (0+255),f,b
  4694   00405A  D7FA               	bra	u8947
  4695   00405C                     
  4696                           ;ADC.c: 53:             if(PORTAbits.RA2){
  4697   00405C  A480               	btfss	128,2,c	;volatile
  4698   00405E  EF33  F020         	goto	u8681
  4699   004062  EF35  F020         	goto	u8680
  4700   004066                     u8681:
  4701   004066  EF3F  F020         	goto	l374
  4702   00406A                     u8680:
  4703   00406A                     l384:
  4704   00406A  B480               	btfsc	128,2,c	;volatile
  4705   00406C  EF3A  F020         	goto	u8691
  4706   004070  EF3C  F020         	goto	u8690
  4707   004074                     u8691:
  4708   004074  EF35  F020         	goto	l384
  4709   004078                     u8690:
  4710   004078                     
  4711                           ;ADC.c: 55:                 keepState = 0;
  4712   004078  0E00               	movlw	0
  4713   00407A  0100               	movlb	0	; () banked
  4714   00407C  6FF9               	movwf	runADC@keepState& (0+255),b
  4715   00407E                     l374:
  4716                           
  4717                           ;ADC.c: 32:     while(keepState){
  4718   00407E  0100               	movlb	0	; () banked
  4719   004080  51F9               	movf	runADC@keepState& (0+255),w,b
  4720   004082  A4D8               	btfss	status,2,c
  4721   004084  EF46  F020         	goto	u8701
  4722   004088  EF48  F020         	goto	u8700
  4723   00408C                     u8701:
  4724   00408C  EF63  F01F         	goto	l6552
  4725   004090                     u8700:
  4726   004090                     
  4727                           ; BSR set to: 0
  4728   004090  0012               	return		;funcret
  4729   004092                     __end_of_runADC:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function ___xxtofl *****************
  4733 ;; Defined at:
  4734 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  sign            1    wreg     unsigned char 
  4737 ;;  val             4    2[COMRAM] long 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  sign            1   10[COMRAM] unsigned char 
  4740 ;;  arg             4   12[COMRAM] unsigned long 
  4741 ;;  exp             1   11[COMRAM] unsigned char 
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  4    2[COMRAM] unsigned char 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4751 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;Total ram usage:       14 bytes
  4756 ;; Hardware stack levels used: 1
  4757 ;; Hardware stack levels required when called: 1
  4758 ;; This function calls:
  4759 ;;		Nothing
  4760 ;; This function is called by:
  4761 ;;		_runDAC
  4762 ;;		_runADC
  4763 ;;		___rem_pio2f
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text17
  4768   004092                     __ptext17:
  4769                           	callstack 0
  4770   004092                     ___xxtofl:
  4771                           	callstack 26
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;incstack = 0
  4775                           ;___xxtofl@sign stored from wreg
  4776   004092  6E0B               	movwf	___xxtofl@sign^0,c
  4777   004094  500B               	movf	___xxtofl@sign^0,w,c
  4778   004096  B4D8               	btfsc	status,2,c
  4779   004098  EF50  F020         	goto	u7911
  4780   00409C  EF52  F020         	goto	u7910
  4781   0040A0                     u7911:
  4782   0040A0  EF74  F020         	goto	l1046
  4783   0040A4                     u7910:
  4784   0040A4  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  4785   0040A6  EF59  F020         	goto	u7920
  4786   0040AA  EF57  F020         	goto	u7921
  4787   0040AE                     u7921:
  4788   0040AE  EF74  F020         	goto	l1046
  4789   0040B2                     u7920:
  4790   0040B2  C003  F007         	movff	___xxtofl@val,??___xxtofl
  4791   0040B6  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
  4792   0040BA  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
  4793   0040BE  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
  4794   0040C2  1E07               	comf	??___xxtofl^0,f,c
  4795   0040C4  1E08               	comf	(??___xxtofl+1)^0,f,c
  4796   0040C6  1E09               	comf	(??___xxtofl+2)^0,f,c
  4797   0040C8  1E0A               	comf	(??___xxtofl+3)^0,f,c
  4798   0040CA  2A07               	incf	??___xxtofl^0,f,c
  4799   0040CC  0E00               	movlw	0
  4800   0040CE  2208               	addwfc	(??___xxtofl+1)^0,f,c
  4801   0040D0  2209               	addwfc	(??___xxtofl+2)^0,f,c
  4802   0040D2  220A               	addwfc	(??___xxtofl+3)^0,f,c
  4803   0040D4  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
  4804   0040D8  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
  4805   0040DC  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
  4806   0040E0  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
  4807   0040E4  EF7C  F020         	goto	l6058
  4808   0040E8                     l1046:
  4809   0040E8  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
  4810   0040EC  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4811   0040F0  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4812   0040F4  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4813   0040F8                     l6058:
  4814   0040F8  5003               	movf	___xxtofl@val^0,w,c
  4815   0040FA  1004               	iorwf	(___xxtofl@val+1)^0,w,c
  4816   0040FC  1005               	iorwf	(___xxtofl@val+2)^0,w,c
  4817   0040FE  1006               	iorwf	(___xxtofl@val+3)^0,w,c
  4818   004100  A4D8               	btfss	status,2,c
  4819   004102  EF85  F020         	goto	u7931
  4820   004106  EF87  F020         	goto	u7930
  4821   00410A                     u7931:
  4822   00410A  EF91  F020         	goto	l6064
  4823   00410E                     u7930:
  4824   00410E  0E00               	movlw	0
  4825   004110  6E03               	movwf	?___xxtofl^0,c
  4826   004112  0E00               	movlw	0
  4827   004114  6E04               	movwf	(?___xxtofl+1)^0,c
  4828   004116  0E00               	movlw	0
  4829   004118  6E05               	movwf	(?___xxtofl+2)^0,c
  4830   00411A  0E00               	movlw	0
  4831   00411C  6E06               	movwf	(?___xxtofl+3)^0,c
  4832   00411E  EF22  F021         	goto	l1049
  4833   004122                     l6064:
  4834   004122  0E96               	movlw	150
  4835   004124  6E0C               	movwf	___xxtofl@exp^0,c
  4836   004126  EF9B  F020         	goto	l6068
  4837   00412A                     l6066:
  4838   00412A  2A0C               	incf	___xxtofl@exp^0,f,c
  4839   00412C  90D8               	bcf	status,0,c
  4840   00412E  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  4841   004130  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  4842   004132  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  4843   004134  320D               	rrcf	___xxtofl@arg^0,f,c
  4844   004136                     l6068:
  4845   004136  0E00               	movlw	0
  4846   004138  140D               	andwf	___xxtofl@arg^0,w,c
  4847   00413A  6E07               	movwf	??___xxtofl^0,c
  4848   00413C  0E00               	movlw	0
  4849   00413E  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  4850   004140  6E08               	movwf	(??___xxtofl+1)^0,c
  4851   004142  0E00               	movlw	0
  4852   004144  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  4853   004146  6E09               	movwf	(??___xxtofl+2)^0,c
  4854   004148  0EFE               	movlw	254
  4855   00414A  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  4856   00414C  6E0A               	movwf	(??___xxtofl+3)^0,c
  4857   00414E  5007               	movf	??___xxtofl^0,w,c
  4858   004150  1008               	iorwf	(??___xxtofl+1)^0,w,c
  4859   004152  1009               	iorwf	(??___xxtofl+2)^0,w,c
  4860   004154  100A               	iorwf	(??___xxtofl+3)^0,w,c
  4861   004156  A4D8               	btfss	status,2,c
  4862   004158  EFB0  F020         	goto	u7941
  4863   00415C  EFB2  F020         	goto	u7940
  4864   004160                     u7941:
  4865   004160  EF95  F020         	goto	l6066
  4866   004164                     u7940:
  4867   004164  EFC0  F020         	goto	l1053
  4868   004168                     l6070:
  4869   004168  2A0C               	incf	___xxtofl@exp^0,f,c
  4870   00416A  0E01               	movlw	1
  4871   00416C  260D               	addwf	___xxtofl@arg^0,f,c
  4872   00416E  0E00               	movlw	0
  4873   004170  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
  4874   004172  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
  4875   004174  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
  4876   004176  90D8               	bcf	status,0,c
  4877   004178  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  4878   00417A  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  4879   00417C  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  4880   00417E  320D               	rrcf	___xxtofl@arg^0,f,c
  4881   004180                     l1053:
  4882   004180  0E00               	movlw	0
  4883   004182  140D               	andwf	___xxtofl@arg^0,w,c
  4884   004184  6E07               	movwf	??___xxtofl^0,c
  4885   004186  0E00               	movlw	0
  4886   004188  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  4887   00418A  6E08               	movwf	(??___xxtofl+1)^0,c
  4888   00418C  0E00               	movlw	0
  4889   00418E  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  4890   004190  6E09               	movwf	(??___xxtofl+2)^0,c
  4891   004192  0EFF               	movlw	255
  4892   004194  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  4893   004196  6E0A               	movwf	(??___xxtofl+3)^0,c
  4894   004198  5007               	movf	??___xxtofl^0,w,c
  4895   00419A  1008               	iorwf	(??___xxtofl+1)^0,w,c
  4896   00419C  1009               	iorwf	(??___xxtofl+2)^0,w,c
  4897   00419E  100A               	iorwf	(??___xxtofl+3)^0,w,c
  4898   0041A0  A4D8               	btfss	status,2,c
  4899   0041A2  EFD5  F020         	goto	u7951
  4900   0041A6  EFD7  F020         	goto	u7950
  4901   0041AA                     u7951:
  4902   0041AA  EFB4  F020         	goto	l6070
  4903   0041AE                     u7950:
  4904   0041AE  EFDF  F020         	goto	l6078
  4905   0041B2                     l6076:
  4906   0041B2  060C               	decf	___xxtofl@exp^0,f,c
  4907   0041B4  90D8               	bcf	status,0,c
  4908   0041B6  360D               	rlcf	___xxtofl@arg^0,f,c
  4909   0041B8  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
  4910   0041BA  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
  4911   0041BC  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
  4912   0041BE                     l6078:
  4913   0041BE  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
  4914   0041C0  EFE4  F020         	goto	u7961
  4915   0041C4  EFE6  F020         	goto	u7960
  4916   0041C8                     u7961:
  4917   0041C8  EFEE  F020         	goto	l1060
  4918   0041CC                     u7960:
  4919   0041CC  0E02               	movlw	2
  4920   0041CE  600C               	cpfslt	___xxtofl@exp^0,c
  4921   0041D0  EFEC  F020         	goto	u7971
  4922   0041D4  EFEE  F020         	goto	u7970
  4923   0041D8                     u7971:
  4924   0041D8  EFD9  F020         	goto	l6076
  4925   0041DC                     u7970:
  4926   0041DC                     l1060:
  4927   0041DC  B00C               	btfsc	___xxtofl@exp^0,0,c
  4928   0041DE  EFF3  F020         	goto	u7981
  4929   0041E2  EFF5  F020         	goto	u7980
  4930   0041E6                     u7981:
  4931   0041E6  EFF6  F020         	goto	l6084
  4932   0041EA                     u7980:
  4933   0041EA  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
  4934   0041EC                     l6084:
  4935   0041EC  90D8               	bcf	status,0,c
  4936   0041EE  320C               	rrcf	___xxtofl@exp^0,f,c
  4937   0041F0  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  4938   0041F4  6A08               	clrf	(??___xxtofl+1)^0,c
  4939   0041F6  6A09               	clrf	(??___xxtofl+2)^0,c
  4940   0041F8  6A0A               	clrf	(??___xxtofl+3)^0,c
  4941   0041FA  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  4942   0041FE  6A09               	clrf	(??___xxtofl+2)^0,c
  4943   004200  6A08               	clrf	(??___xxtofl+1)^0,c
  4944   004202  6A07               	clrf	??___xxtofl^0,c
  4945   004204  5007               	movf	??___xxtofl^0,w,c
  4946   004206  120D               	iorwf	___xxtofl@arg^0,f,c
  4947   004208  5008               	movf	(??___xxtofl+1)^0,w,c
  4948   00420A  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
  4949   00420C  5009               	movf	(??___xxtofl+2)^0,w,c
  4950   00420E  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
  4951   004210  500A               	movf	(??___xxtofl+3)^0,w,c
  4952   004212  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
  4953   004214  500B               	movf	___xxtofl@sign^0,w,c
  4954   004216  B4D8               	btfsc	status,2,c
  4955   004218  EF10  F021         	goto	u7991
  4956   00421C  EF12  F021         	goto	u7990
  4957   004220                     u7991:
  4958   004220  EF1A  F021         	goto	l6094
  4959   004224                     u7990:
  4960   004224  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  4961   004226  EF19  F021         	goto	u8000
  4962   00422A  EF17  F021         	goto	u8001
  4963   00422E                     u8001:
  4964   00422E  EF1A  F021         	goto	l6094
  4965   004232                     u8000:
  4966   004232  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
  4967   004234                     l6094:
  4968   004234  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  4969   004238  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  4970   00423C  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  4971   004240  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  4972   004244                     l1049:
  4973   004244  0012               	return		;funcret
  4974   004246                     __end_of___xxtofl:
  4975                           	callstack 0
  4976                           
  4977 ;; *************** function _moveDisplay *****************
  4978 ;; Defined at:
  4979 ;;		line 11 in file "menu.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;  menuI           1    wreg     unsigned char 
  4982 ;;  where           1  122[BANK0 ] unsigned char 
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;  menuI           1   42[BANK1 ] unsigned char 
  4985 ;;  menuItem2      17   17[BANK1 ] unsigned char [17]
  4986 ;;  menuItem1      17    0[BANK1 ] unsigned char [17]
  4987 ;;  menuItems       8   34[BANK1 ] PTR unsigned char [8]
  4988 ;;		 -> STR_14(1), STR_13(6), STR_12(5), STR_11(4), 
  4989 ;;		 -> STR_10(4), STR_9(4), STR_8(5), STR_7(5), 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      unsigned char 
  4992 ;; Registers used:
  4993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4999 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5000 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5001 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5002 ;;      Totals:         0       4      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;Total ram usage:       47 bytes
  5004 ;; Hardware stack levels used: 1
  5005 ;; Hardware stack levels required when called: 9
  5006 ;; This function calls:
  5007 ;;		_LCD_Clear
  5008 ;;		_LCD_ShowString
  5009 ;;		_sprintf
  5010 ;; This function is called by:
  5011 ;;		_main
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text18
  5016   0046CC                     __ptext18:
  5017                           	callstack 0
  5018   0046CC                     _moveDisplay:
  5019                           	callstack 21
  5020                           
  5021                           ;incstack = 0
  5022                           ;moveDisplay@menuI stored from wreg
  5023   0046CC  0101               	movlb	1	; () banked
  5024   0046CE  6F9C               	movwf	moveDisplay@menuI& (0+255),b
  5025   0046D0                     
  5026                           ;menu.c: 12:     LCD_Clear();
  5027   0046D0  ECAB  F029         	call	_LCD_Clear	;wreg free
  5028   0046D4                     
  5029                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  5030   0046D4  EE21  F0B7         	lfsr	2,moveDisplay@F6953
  5031   0046D8  EE11  F094         	lfsr	1,moveDisplay@menuItems
  5032   0046DC  0E07               	movlw	7
  5033   0046DE                     u8521:
  5034   0046DE  CFDB FFE3          	movff	plusw2,plusw1
  5035   0046E2  06E8               	decf	wreg,f,c
  5036   0046E4  E2FC               	bc	u8521
  5037                           
  5038                           ;menu.c: 14:     switch (where){
  5039   0046E6  EF8D  F023         	goto	l6490
  5040   0046EA                     l6480:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;menu.c: 18:             if(menuI<6){
  5044   0046EA  0E06               	movlw	6
  5045   0046EC  0101               	movlb	1	; () banked
  5046   0046EE  619C               	cpfslt	moveDisplay@menuI& (0+255),b
  5047   0046F0  EF7C  F023         	goto	u8531
  5048   0046F4  EF7E  F023         	goto	u8530
  5049   0046F8                     u8531:
  5050   0046F8  EF9D  F023         	goto	l6492
  5051   0046FC                     u8530:
  5052   0046FC                     
  5053                           ; BSR set to: 1
  5054                           ;menu.c: 19:             menuI++;
  5055   0046FC  2B9C               	incf	moveDisplay@menuI& (0+255),f,b
  5056   0046FE  EF9D  F023         	goto	l6492
  5057   004702                     l6484:
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;menu.c: 23:             if(menuI>0){
  5061   004702  0101               	movlb	1	; () banked
  5062   004704  519C               	movf	moveDisplay@menuI& (0+255),w,b
  5063   004706  B4D8               	btfsc	status,2,c
  5064   004708  EF88  F023         	goto	u8541
  5065   00470C  EF8A  F023         	goto	u8540
  5066   004710                     u8541:
  5067   004710  EF9D  F023         	goto	l6492
  5068   004714                     u8540:
  5069   004714                     
  5070                           ; BSR set to: 1
  5071                           ;menu.c: 24:             menuI--;
  5072   004714  079C               	decf	moveDisplay@menuI& (0+255),f,b
  5073   004716  EF9D  F023         	goto	l6492
  5074   00471A                     l6490:
  5075   00471A  0100               	movlb	0	; () banked
  5076   00471C  51DA               	movf	moveDisplay@where& (0+255),w,b
  5077                           
  5078                           ; Switch size 1, requested type "simple"
  5079                           ; Number of cases is 3, Range of values is 0 to 2
  5080                           ; switch strategies available:
  5081                           ; Name         Instructions Cycles
  5082                           ; simple_byte           10     6 (average)
  5083                           ;	Chosen strategy is simple_byte
  5084   00471E  0A00               	xorlw	0	; case 0
  5085   004720  B4D8               	btfsc	status,2,c
  5086   004722  EF9D  F023         	goto	l6492
  5087   004726  0A01               	xorlw	1	; case 1
  5088   004728  B4D8               	btfsc	status,2,c
  5089   00472A  EF75  F023         	goto	l6480
  5090   00472E  0A03               	xorlw	3	; case 2
  5091   004730  B4D8               	btfsc	status,2,c
  5092   004732  EF81  F023         	goto	l6484
  5093   004736  EF9D  F023         	goto	l6492
  5094   00473A                     l6492:
  5095                           
  5096                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  5097   00473A  0E72               	movlw	low moveDisplay@menuItem1
  5098   00473C  0100               	movlb	0	; () banked
  5099   00473E  6FC2               	movwf	sprintf@s& (0+255),b
  5100   004740  0E01               	movlw	high moveDisplay@menuItem1
  5101   004742  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  5102   004744  0EB6               	movlw	low STR_15
  5103   004746  6FC4               	movwf	sprintf@fmt& (0+255),b
  5104   004748  0E00               	movlw	0
  5105   00474A  6FC6               	movwf	(?_sprintf+4)& (0+255),b
  5106   00474C  0E0F               	movlw	15
  5107   00474E  6FC5               	movwf	(?_sprintf+3)& (0+255),b
  5108   004750  0E94               	movlw	low moveDisplay@menuItems
  5109   004752  0101               	movlb	1	; () banked
  5110   004754  259C               	addwf	moveDisplay@menuI& (0+255),w,b
  5111   004756  6ED9               	movwf	fsr2l,c
  5112   004758  6ADA               	clrf	fsr2h,c
  5113   00475A  0E01               	movlw	high moveDisplay@menuItems
  5114   00475C  22DA               	addwfc	fsr2h,f,c
  5115   00475E  50DF               	movf	indf2,w,c
  5116   004760  0100               	movlb	0	; () banked
  5117   004762  6FDB               	movwf	??_moveDisplay& (0+255),b
  5118   004764  C0DB  F0C7         	movff	??_moveDisplay,?_sprintf+5
  5119   004768  51C7               	movf	(?_sprintf+5)& (0+255),w,b
  5120   00476A  A4D8               	btfss	status,2,c
  5121   00476C  0E10               	movlw	high __smallconst
  5122   00476E  6FC8               	movwf	(?_sprintf+6)& (0+255),b
  5123   004770  EC31  F029         	call	_sprintf	;wreg free
  5124                           
  5125                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  5126   004774  0E83               	movlw	low moveDisplay@menuItem2
  5127   004776  0100               	movlb	0	; () banked
  5128   004778  6FC2               	movwf	sprintf@s& (0+255),b
  5129   00477A  0E01               	movlw	high moveDisplay@menuItem2
  5130   00477C  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  5131   00477E  0EB7               	movlw	low (STR_15+1)
  5132   004780  6FC4               	movwf	sprintf@fmt& (0+255),b
  5133   004782  0E00               	movlw	0
  5134   004784  6FC6               	movwf	(?_sprintf+4)& (0+255),b
  5135   004786  0E10               	movlw	16
  5136   004788  6FC5               	movwf	(?_sprintf+3)& (0+255),b
  5137   00478A  0101               	movlb	1	; () banked
  5138   00478C  519C               	movf	moveDisplay@menuI& (0+255),w,b
  5139   00478E  0100               	movlb	0	; () banked
  5140   004790  6FDB               	movwf	??_moveDisplay& (0+255),b
  5141   004792  6BDC               	clrf	(??_moveDisplay+1)& (0+255),b
  5142   004794  0E01               	movlw	1
  5143   004796  27DB               	addwf	??_moveDisplay& (0+255),f,b
  5144   004798  0E00               	movlw	0
  5145   00479A  23DC               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  5146   00479C  0E94               	movlw	low moveDisplay@menuItems
  5147   00479E  25DB               	addwf	??_moveDisplay& (0+255),w,b
  5148   0047A0  6ED9               	movwf	fsr2l,c
  5149   0047A2  0E01               	movlw	high moveDisplay@menuItems
  5150   0047A4  21DC               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  5151   0047A6  6EDA               	movwf	fsr2h,c
  5152   0047A8  50DF               	movf	indf2,w,c
  5153   0047AA  6FDD               	movwf	(??_moveDisplay+2)& (0+255),b
  5154   0047AC  C0DD  F0C7         	movff	??_moveDisplay+2,?_sprintf+5
  5155   0047B0  51C7               	movf	(?_sprintf+5)& (0+255),w,b
  5156   0047B2  A4D8               	btfss	status,2,c
  5157   0047B4  0E10               	movlw	high __smallconst
  5158   0047B6  6FC8               	movwf	(?_sprintf+6)& (0+255),b
  5159   0047B8  EC31  F029         	call	_sprintf	;wreg free
  5160   0047BC                     
  5161                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  5162   0047BC  0E72               	movlw	low moveDisplay@menuItem1
  5163   0047BE  6E04               	movwf	LCD_ShowString@textData^0,c
  5164   0047C0  0E01               	movlw	high moveDisplay@menuItem1
  5165   0047C2  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  5166   0047C4  0E01               	movlw	1
  5167   0047C6  ECA8  F026         	call	_LCD_ShowString
  5168   0047CA                     
  5169                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  5170   0047CA  0E83               	movlw	low moveDisplay@menuItem2
  5171   0047CC  6E04               	movwf	LCD_ShowString@textData^0,c
  5172   0047CE  0E01               	movlw	high moveDisplay@menuItem2
  5173   0047D0  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  5174   0047D2  0E02               	movlw	2
  5175   0047D4  ECA8  F026         	call	_LCD_ShowString
  5176   0047D8                     
  5177                           ;menu.c: 35:     return menuI;
  5178   0047D8  0101               	movlb	1	; () banked
  5179   0047DA  519C               	movf	moveDisplay@menuI& (0+255),w,b
  5180   0047DC                     
  5181                           ; BSR set to: 1
  5182   0047DC  0012               	return		;funcret
  5183   0047DE                     __end_of_moveDisplay:
  5184                           	callstack 0
  5185                           
  5186 ;; *************** function _sprintf *****************
  5187 ;; Defined at:
  5188 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  s               2   98[BANK0 ] PTR unsigned char 
  5191 ;;		 -> runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), 
  5192 ;;  fmt             1  100[BANK0 ] PTR const unsigned char 
  5193 ;;		 -> STR_17(19), STR_16(5), STR_15(6), 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  f              12  110[BANK0 ] struct _IO_FILE
  5196 ;;  ret             2    0        int 
  5197 ;;  ap              1  109[BANK0 ] PTR void [1]
  5198 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  2   98[BANK0 ] int 
  5201 ;; Registers used:
  5202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5208 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;Total ram usage:       24 bytes
  5213 ;; Hardware stack levels used: 1
  5214 ;; Hardware stack levels required when called: 8
  5215 ;; This function calls:
  5216 ;;		_vfprintf
  5217 ;; This function is called by:
  5218 ;;		_moveDisplay
  5219 ;;		_runADC
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           	psect	text19
  5224   005262                     __ptext19:
  5225                           	callstack 0
  5226   005262                     _sprintf:
  5227                           	callstack 21
  5228   005262  0EC5               	movlw	low (?_sprintf+3)
  5229   005264  0100               	movlb	0	; () banked
  5230   005266  6FCD               	movwf	sprintf@ap& (0+255),b
  5231   005268  C0C2  F0CE         	movff	sprintf@s,sprintf@f
  5232   00526C  C0C3  F0CF         	movff	sprintf@s+1,sprintf@f+1
  5233   005270                     
  5234                           ; BSR set to: 0
  5235   005270  0E00               	movlw	0
  5236   005272  6FD2               	movwf	(sprintf@f+4)& (0+255),b
  5237   005274  0E00               	movlw	0
  5238   005276  6FD1               	movwf	(sprintf@f+3)& (0+255),b
  5239   005278                     
  5240                           ; BSR set to: 0
  5241   005278  0E00               	movlw	0
  5242   00527A  6FD9               	movwf	(sprintf@f+11)& (0+255),b
  5243   00527C  0E00               	movlw	0
  5244   00527E  6FD8               	movwf	(sprintf@f+10)& (0+255),b
  5245   005280                     
  5246                           ; BSR set to: 0
  5247   005280  0ECE               	movlw	low sprintf@f
  5248   005282  6FBD               	movwf	vfprintf@fp& (0+255),b
  5249   005284  6BBE               	clrf	(vfprintf@fp+1)& (0+255),b
  5250   005286  C0C4  F0BF         	movff	sprintf@fmt,vfprintf@fmt
  5251   00528A  0ECD               	movlw	low sprintf@ap
  5252   00528C  6FC0               	movwf	vfprintf@ap& (0+255),b
  5253   00528E  ECC9  F028         	call	_vfprintf	;wreg free
  5254   005292  0100               	movlb	0	; () banked
  5255   005294  51D1               	movf	(sprintf@f+3)& (0+255),w,b
  5256   005296  25C2               	addwf	sprintf@s& (0+255),w,b
  5257   005298  6ED9               	movwf	fsr2l,c
  5258   00529A  51D2               	movf	(sprintf@f+4)& (0+255),w,b
  5259   00529C  21C3               	addwfc	(sprintf@s+1)& (0+255),w,b
  5260   00529E  6EDA               	movwf	fsr2h,c
  5261   0052A0  6ADF               	clrf	indf2,c
  5262   0052A2                     
  5263                           ; BSR set to: 0
  5264   0052A2  0012               	return		;funcret
  5265   0052A4                     __end_of_sprintf:
  5266                           	callstack 0
  5267                           
  5268 ;; *************** function _vfprintf *****************
  5269 ;; Defined at:
  5270 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  fp              2   93[BANK0 ] PTR struct _IO_FILE
  5273 ;;		 -> NULL(0), sprintf@f(12), 
  5274 ;;  fmt             1   95[BANK0 ] PTR const unsigned char 
  5275 ;;		 -> STR_17(19), STR_16(5), STR_15(6), STR_6(5), 
  5276 ;;  ap              1   96[BANK0 ] PTR PTR void 
  5277 ;;		 -> printf@ap(1), sprintf@ap(1), 
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;  cfmt            1   97[BANK0 ] PTR unsigned char 
  5280 ;;		 -> STR_17(19), STR_16(5), STR_15(6), STR_6(5), 
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  2   93[BANK0 ] int 
  5283 ;; Registers used:
  5284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5290 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;Total ram usage:        5 bytes
  5295 ;; Hardware stack levels used: 1
  5296 ;; Hardware stack levels required when called: 7
  5297 ;; This function calls:
  5298 ;;		_vfpfcnvrt
  5299 ;; This function is called by:
  5300 ;;		_sprintf
  5301 ;;		_printf
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text20
  5306   005192                     __ptext20:
  5307                           	callstack 0
  5308   005192                     _vfprintf:
  5309                           	callstack 21
  5310   005192                     
  5311                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  5312   005192  C0BF  F0C1         	movff	vfprintf@fmt,vfprintf@cfmt
  5313                           
  5314                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5315   005196  EFD8  F028         	goto	l6228
  5316   00519A                     l6226:
  5317                           
  5318                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5319   00519A  C0BD  F0B1         	movff	vfprintf@fp,vfpfcnvrt@fp
  5320   00519E  C0BE  F0B2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5321   0051A2  0EC1               	movlw	low vfprintf@cfmt
  5322   0051A4  0100               	movlb	0	; () banked
  5323   0051A6  6FB3               	movwf	vfpfcnvrt@fmt& (0+255),b
  5324   0051A8  C0C0  F0B4         	movff	vfprintf@ap,vfpfcnvrt@ap
  5325   0051AC  EC66  F014         	call	_vfpfcnvrt	;wreg free
  5326   0051B0                     l6228:
  5327                           
  5328                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5329   0051B0  C0C1  FFF6         	movff	vfprintf@cfmt,tblptrl
  5330   0051B4                     	if	1	;There is more than 1 active tblptr byte
  5331   0051B4  0E10               	movlw	high __smallconst
  5332   0051B6  6EF7               	movwf	tblptrh,c
  5333   0051B8                     	endif
  5334   0051B8                     	if	0	;tblptru may be non-zero
  5335   0051B8                     	endif
  5336   0051B8                     	if	0	;tblptru may be non-zero
  5337   0051B8                     	endif
  5338   0051B8  0008               	tblrd		*
  5339   0051BA  50F5               	movf	tablat,w,c
  5340   0051BC  0900               	iorlw	0
  5341   0051BE  A4D8               	btfss	status,2,c
  5342   0051C0  EFE4  F028         	goto	u8151
  5343   0051C4  EFE6  F028         	goto	u8150
  5344   0051C8                     u8151:
  5345   0051C8  EFCD  F028         	goto	l6226
  5346   0051CC                     u8150:
  5347   0051CC                     
  5348                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  5349   0051CC  0E00               	movlw	0
  5350   0051CE  0100               	movlb	0	; () banked
  5351   0051D0  6FBE               	movwf	(?_vfprintf+1)& (0+255),b
  5352   0051D2  0E00               	movlw	0
  5353   0051D4  6FBD               	movwf	?_vfprintf& (0+255),b
  5354   0051D6                     
  5355                           ; BSR set to: 0
  5356   0051D6  0012               	return		;funcret
  5357   0051D8                     __end_of_vfprintf:
  5358                           	callstack 0
  5359                           
  5360 ;; *************** function _vfpfcnvrt *****************
  5361 ;; Defined at:
  5362 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;  fp              2   81[BANK0 ] PTR struct _IO_FILE
  5365 ;;		 -> NULL(0), sprintf@f(12), 
  5366 ;;  fmt             1   83[BANK0 ] PTR PTR unsigned char 
  5367 ;;		 -> vfprintf@cfmt(1), 
  5368 ;;  ap              1   84[BANK0 ] PTR PTR void 
  5369 ;;		 -> printf@ap(1), sprintf@ap(1), 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  convarg         4   86[BANK0 ] struct .
  5372 ;;  cp              1   92[BANK0 ] PTR unsigned char 
  5373 ;;		 -> STR_17(19), STR_16(5), STR_15(6), STR_6(5), 
  5374 ;;  done            1   91[BANK0 ] _Bool 
  5375 ;;  c               1   90[BANK0 ] unsigned char 
  5376 ;; Return value:  Size  Location     Type
  5377 ;;                  1    wreg      void 
  5378 ;; Registers used:
  5379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5385 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5386 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5388 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;Total ram usage:       12 bytes
  5390 ;; Hardware stack levels used: 1
  5391 ;; Hardware stack levels required when called: 6
  5392 ;; This function calls:
  5393 ;;		_dtoa
  5394 ;;		_efgtoa
  5395 ;;		_fputc
  5396 ;;		_read_prec_or_width
  5397 ;;		_stoa
  5398 ;; This function is called by:
  5399 ;;		_vfprintf
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text21
  5404   0028CC                     __ptext21:
  5405                           	callstack 0
  5406   0028CC                     _vfpfcnvrt:
  5407                           	callstack 21
  5408   0028CC                     
  5409                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  5410   0028CC  0100               	movlb	0	; () banked
  5411   0028CE  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5412   0028D0  6ED9               	movwf	fsr2l,c
  5413   0028D2  6ADA               	clrf	fsr2h,c
  5414   0028D4  CFDF FFF6          	movff	indf2,tblptrl
  5415   0028D8                     	if	1	;There is more than 1 active tblptr byte
  5416   0028D8  0E10               	movlw	high __smallconst
  5417   0028DA  6EF7               	movwf	tblptrh,c
  5418   0028DC                     	endif
  5419   0028DC                     	if	0	;tblptru may be non-zero
  5420   0028DC                     	endif
  5421   0028DC                     	if	0	;tblptru may be non-zero
  5422   0028DC                     	endif
  5423   0028DC  0008               	tblrd		*
  5424   0028DE  50F5               	movf	tablat,w,c
  5425   0028E0  0A25               	xorlw	37
  5426   0028E2  A4D8               	btfss	status,2,c
  5427   0028E4  EF76  F014         	goto	u8011
  5428   0028E8  EF78  F014         	goto	u8010
  5429   0028EC                     u8011:
  5430   0028EC  EF34  F016         	goto	l6208
  5431   0028F0                     u8010:
  5432   0028F0                     
  5433                           ; BSR set to: 0
  5434                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  5435   0028F0  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5436   0028F2  6ED9               	movwf	fsr2l,c
  5437   0028F4  6ADA               	clrf	fsr2h,c
  5438   0028F6  2ADF               	incf	indf2,f,c
  5439   0028F8                     
  5440                           ; BSR set to: 0
  5441                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  5442   0028F8  0E00               	movlw	0
  5443   0028FA  6FFD               	movwf	(_width+1)& (0+255),b
  5444   0028FC  0E00               	movlw	0
  5445   0028FE  6FFC               	movwf	_width& (0+255),b
  5446   002900  C0FC  F0FE         	movff	_width,_flags
  5447   002904                     
  5448                           ; BSR set to: 0
  5449                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  5450   002904  685B               	setf	_prec^0,c
  5451   002906  685C               	setf	(_prec+1)^0,c
  5452   002908                     
  5453                           ; BSR set to: 0
  5454                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  5455   002908  0E00               	movlw	0
  5456   00290A  6FBB               	movwf	vfpfcnvrt@done& (0+255),b
  5457                           
  5458                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5459   00290C  EFA2  F014         	goto	l6118
  5460   002910                     l6108:
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1214:            
      +                                   flags |= (1 << 0);
  5464   002910  81FE               	bsf	_flags& (0+255),0,b
  5465   002912                     
  5466                           ; BSR set to: 0
  5467                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1215:            
      +                                   ++*fmt;
  5468   002912  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5469   002914  6ED9               	movwf	fsr2l,c
  5470   002916  6ADA               	clrf	fsr2h,c
  5471   002918  2ADF               	incf	indf2,f,c
  5472                           
  5473                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1216:            
      +                                   break;
  5474   00291A  EFA2  F014         	goto	l6118
  5475   00291E                     l6112:
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  5479   00291E  0E01               	movlw	1
  5480   002920  6FBB               	movwf	vfpfcnvrt@done& (0+255),b
  5481                           
  5482                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  5483   002922  EFA2  F014         	goto	l6118
  5484   002926                     l6116:
  5485                           
  5486                           ; BSR set to: 0
  5487   002926  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5488   002928  6ED9               	movwf	fsr2l,c
  5489   00292A  6ADA               	clrf	fsr2h,c
  5490   00292C  CFDF FFF6          	movff	indf2,tblptrl
  5491   002930                     	if	1	;There is more than 1 active tblptr byte
  5492   002930  0E10               	movlw	high __smallconst
  5493   002932  6EF7               	movwf	tblptrh,c
  5494   002934                     	endif
  5495   002934                     	if	0	;tblptru may be non-zero
  5496   002934                     	endif
  5497   002934                     	if	0	;tblptru may be non-zero
  5498   002934                     	endif
  5499   002934  0008               	tblrd		*
  5500   002936  50F5               	movf	tablat,w,c
  5501                           
  5502                           ; Switch size 1, requested type "simple"
  5503                           ; Number of cases is 1, Range of values is 45 to 45
  5504                           ; switch strategies available:
  5505                           ; Name         Instructions Cycles
  5506                           ; simple_byte            4     3 (average)
  5507                           ;	Chosen strategy is simple_byte
  5508   002938  0A2D               	xorlw	45	; case 45
  5509   00293A  B4D8               	btfsc	status,2,c
  5510   00293C  EF88  F014         	goto	l6108
  5511   002940  EF8F  F014         	goto	l6112
  5512   002944                     l6118:
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5516   002944  51BB               	movf	vfpfcnvrt@done& (0+255),w,b
  5517   002946  B4D8               	btfsc	status,2,c
  5518   002948  EFA8  F014         	goto	u8021
  5519   00294C  EFAA  F014         	goto	u8020
  5520   002950                     u8021:
  5521   002950  EF93  F014         	goto	l6116
  5522   002954                     u8020:
  5523   002954                     
  5524                           ; BSR set to: 0
  5525                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  5526   002954  C0B3  F009         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  5527   002958  C0B4  F00A         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  5528   00295C  ECAE  F027         	call	_read_prec_or_width	;wreg free
  5529   002960  C009  F0FC         	movff	?_read_prec_or_width,_width
  5530   002964  C00A  F0FD         	movff	?_read_prec_or_width+1,_width+1
  5531   002968                     
  5532                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  5533   002968  0100               	movlb	0	; () banked
  5534   00296A  BFFD               	btfsc	(_width+1)& (0+255),7,b
  5535   00296C  EFBC  F014         	goto	u8030
  5536   002970  EFBA  F014         	goto	u8031
  5537   002974                     u8031:
  5538   002974  EFC1  F014         	goto	l6126
  5539   002978                     u8030:
  5540   002978                     
  5541                           ; BSR set to: 0
  5542                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  5543   002978  81FE               	bsf	_flags& (0+255),0,b
  5544                           
  5545                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  5546   00297A  6DFC               	negf	_width& (0+255),b
  5547   00297C  1FFD               	comf	(_width+1)& (0+255),f,b
  5548   00297E  B0D8               	btfsc	status,0,c
  5549   002980  2BFD               	incf	(_width+1)& (0+255),f,b
  5550   002982                     l6126:
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  5554   002982  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5555   002984  6ED9               	movwf	fsr2l,c
  5556   002986  6ADA               	clrf	fsr2h,c
  5557   002988  CFDF FFF6          	movff	indf2,tblptrl
  5558   00298C                     	if	1	;There is more than 1 active tblptr byte
  5559   00298C  0E10               	movlw	high __smallconst
  5560   00298E  6EF7               	movwf	tblptrh,c
  5561   002990                     	endif
  5562   002990                     	if	0	;tblptru may be non-zero
  5563   002990                     	endif
  5564   002990                     	if	0	;tblptru may be non-zero
  5565   002990                     	endif
  5566   002990  0008               	tblrd		*
  5567   002992  50F5               	movf	tablat,w,c
  5568   002994  0A2E               	xorlw	46
  5569   002996  A4D8               	btfss	status,2,c
  5570   002998  EFD0  F014         	goto	u8041
  5571   00299C  EFD2  F014         	goto	u8040
  5572   0029A0                     u8041:
  5573   0029A0  EFE0  F014         	goto	l6132
  5574   0029A4                     u8040:
  5575   0029A4                     
  5576                           ; BSR set to: 0
  5577                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  5578   0029A4  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5579   0029A6  6ED9               	movwf	fsr2l,c
  5580   0029A8  6ADA               	clrf	fsr2h,c
  5581   0029AA  2ADF               	incf	indf2,f,c
  5582   0029AC                     
  5583                           ; BSR set to: 0
  5584                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  5585   0029AC  C0B3  F009         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  5586   0029B0  C0B4  F00A         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  5587   0029B4  ECAE  F027         	call	_read_prec_or_width	;wreg free
  5588   0029B8  C009  F05B         	movff	?_read_prec_or_width,_prec
  5589   0029BC  C00A  F05C         	movff	?_read_prec_or_width+1,_prec+1
  5590   0029C0                     l6132:
  5591                           
  5592                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  5593   0029C0  0100               	movlb	0	; () banked
  5594   0029C2  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5595   0029C4  6ED9               	movwf	fsr2l,c
  5596   0029C6  6ADA               	clrf	fsr2h,c
  5597   0029C8  50DF               	movf	indf2,w,c
  5598   0029CA  6FBC               	movwf	vfpfcnvrt@cp& (0+255),b
  5599   0029CC                     
  5600                           ; BSR set to: 0
  5601                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5602   0029CC  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5603   0029D0                     	if	1	;There is more than 1 active tblptr byte
  5604   0029D0  0E10               	movlw	high __smallconst
  5605   0029D2  6EF7               	movwf	tblptrh,c
  5606   0029D4                     	endif
  5607   0029D4                     	if	0	;tblptru may be non-zero
  5608   0029D4                     	endif
  5609   0029D4                     	if	0	;tblptru may be non-zero
  5610   0029D4                     	endif
  5611   0029D4  0008               	tblrd		*
  5612   0029D6  50F5               	movf	tablat,w,c
  5613   0029D8  0A64               	xorlw	100
  5614   0029DA  B4D8               	btfsc	status,2,c
  5615   0029DC  EFF2  F014         	goto	u8051
  5616   0029E0  EFF4  F014         	goto	u8050
  5617   0029E4                     u8051:
  5618   0029E4  EF02  F015         	goto	l6138
  5619   0029E8                     u8050:
  5620   0029E8                     
  5621                           ; BSR set to: 0
  5622   0029E8  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5623   0029EC                     	if	1	;There is more than 1 active tblptr byte
  5624   0029EC  0E10               	movlw	high __smallconst
  5625   0029EE  6EF7               	movwf	tblptrh,c
  5626   0029F0                     	endif
  5627   0029F0                     	if	0	;tblptru may be non-zero
  5628   0029F0                     	endif
  5629   0029F0                     	if	0	;tblptru may be non-zero
  5630   0029F0                     	endif
  5631   0029F0  0008               	tblrd		*
  5632   0029F2  50F5               	movf	tablat,w,c
  5633   0029F4  0A69               	xorlw	105
  5634   0029F6  A4D8               	btfss	status,2,c
  5635   0029F8  EF00  F015         	goto	u8061
  5636   0029FC  EF02  F015         	goto	u8060
  5637   002A00                     u8061:
  5638   002A00  EF1F  F015         	goto	l6146
  5639   002A04                     u8060:
  5640   002A04                     l6138:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5644   002A04  51B4               	movf	vfpfcnvrt@ap& (0+255),w,b
  5645   002A06  6ED9               	movwf	fsr2l,c
  5646   002A08  6ADA               	clrf	fsr2h,c
  5647   002A0A  0E02               	movlw	2
  5648   002A0C  26DF               	addwf	indf2,f,c
  5649   002A0E  5CDF               	subwf	indf2,w,c
  5650   002A10  6ED9               	movwf	fsr2l,c
  5651   002A12  6ADA               	clrf	fsr2h,c
  5652   002A14  CFDE F0B6          	movff	postinc2,vfpfcnvrt@convarg
  5653   002A18  CFDE F0B7          	movff	postinc2,vfpfcnvrt@convarg+1
  5654   002A1C                     
  5655                           ; BSR set to: 0
  5656                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  5657   002A1C  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5658   002A1E  6ED9               	movwf	fsr2l,c
  5659   002A20  6ADA               	clrf	fsr2h,c
  5660   002A22  29BC               	incf	vfpfcnvrt@cp& (0+255),w,b
  5661   002A24  6EDF               	movwf	indf2,c
  5662   002A26                     
  5663                           ; BSR set to: 0
  5664                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  5665   002A26  C0B1  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  5666   002A2A  C0B2  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5667   002A2E  C0B6  F01F         	movff	vfpfcnvrt@convarg,dtoa@d
  5668   002A32  C0B7  F020         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  5669   002A36  ECF6  F021         	call	_dtoa	;wreg free
  5670   002A3A  EF47  F016         	goto	l1218
  5671   002A3E                     l6146:
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  5675   002A3E  0E00               	movlw	0
  5676   002A40  6FBB               	movwf	vfpfcnvrt@done& (0+255),b
  5677   002A42                     
  5678                           ; BSR set to: 0
  5679                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  5680   002A42  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5681   002A44  6ED9               	movwf	fsr2l,c
  5682   002A46  6ADA               	clrf	fsr2h,c
  5683   002A48  CFDF FFF6          	movff	indf2,tblptrl
  5684   002A4C                     	if	1	;There is more than 1 active tblptr byte
  5685   002A4C  0E10               	movlw	high __smallconst
  5686   002A4E  6EF7               	movwf	tblptrh,c
  5687   002A50                     	endif
  5688   002A50                     	if	0	;tblptru may be non-zero
  5689   002A50                     	endif
  5690   002A50                     	if	0	;tblptru may be non-zero
  5691   002A50                     	endif
  5692   002A50  0008               	tblrd		*
  5693   002A52  50F5               	movf	tablat,w,c
  5694   002A54  0A73               	xorlw	115
  5695   002A56  A4D8               	btfss	status,2,c
  5696   002A58  EF30  F015         	goto	u8071
  5697   002A5C  EF32  F015         	goto	u8070
  5698   002A60                     u8071:
  5699   002A60  EF3A  F015         	goto	l6154
  5700   002A64                     u8070:
  5701   002A64                     
  5702                           ; BSR set to: 0
  5703                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  5704   002A64  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5705   002A66  6ED9               	movwf	fsr2l,c
  5706   002A68  6ADA               	clrf	fsr2h,c
  5707   002A6A  2ADF               	incf	indf2,f,c
  5708   002A6C                     l6152:
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  5712   002A6C  0E01               	movlw	1
  5713   002A6E  6FBB               	movwf	vfpfcnvrt@done& (0+255),b
  5714                           
  5715                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  5716   002A70  EF7C  F015         	goto	l6164
  5717   002A74                     l6154:
  5718                           
  5719                           ; BSR set to: 0
  5720   002A74  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5721   002A76  6ED9               	movwf	fsr2l,c
  5722   002A78  6ADA               	clrf	fsr2h,c
  5723   002A7A  CFDF FFF6          	movff	indf2,tblptrl
  5724   002A7E                     	if	1	;There is more than 1 active tblptr byte
  5725   002A7E  0E10               	movlw	high __smallconst
  5726   002A80  6EF7               	movwf	tblptrh,c
  5727   002A82                     	endif
  5728   002A82                     	if	0	;tblptru may be non-zero
  5729   002A82                     	endif
  5730   002A82                     	if	0	;tblptru may be non-zero
  5731   002A82                     	endif
  5732   002A82  0008               	tblrd		*
  5733   002A84  50F5               	movf	tablat,w,c
  5734   002A86  0A6C               	xorlw	108
  5735   002A88  A4D8               	btfss	status,2,c
  5736   002A8A  EF49  F015         	goto	u8081
  5737   002A8E  EF4B  F015         	goto	u8080
  5738   002A92                     u8081:
  5739   002A92  EF7C  F015         	goto	l6164
  5740   002A96                     u8080:
  5741   002A96                     
  5742                           ; BSR set to: 0
  5743   002A96  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5744   002A98  6ED9               	movwf	fsr2l,c
  5745   002A9A  6ADA               	clrf	fsr2h,c
  5746   002A9C  50DF               	movf	indf2,w,c
  5747   002A9E  6FB5               	movwf	??_vfpfcnvrt& (0+255),b
  5748   002AA0  0E01               	movlw	1
  5749   002AA2  27B5               	addwf	??_vfpfcnvrt& (0+255),f,b
  5750   002AA4  C0B5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5751   002AA8                     	if	1	;There is more than 1 active tblptr byte
  5752   002AA8  0E10               	movlw	high __smallconst
  5753   002AAA  6EF7               	movwf	tblptrh,c
  5754   002AAC                     	endif
  5755   002AAC                     	if	0	;tblptru may be non-zero
  5756   002AAC                     	endif
  5757   002AAC                     	if	0	;tblptru may be non-zero
  5758   002AAC                     	endif
  5759   002AAC  0008               	tblrd		*
  5760   002AAE  50F5               	movf	tablat,w,c
  5761   002AB0  0A6C               	xorlw	108
  5762   002AB2  A4D8               	btfss	status,2,c
  5763   002AB4  EF5E  F015         	goto	u8091
  5764   002AB8  EF60  F015         	goto	u8090
  5765   002ABC                     u8091:
  5766   002ABC  EF7C  F015         	goto	l6164
  5767   002AC0                     u8090:
  5768   002AC0                     
  5769                           ; BSR set to: 0
  5770   002AC0  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5771   002AC2  6ED9               	movwf	fsr2l,c
  5772   002AC4  6ADA               	clrf	fsr2h,c
  5773   002AC6  50DF               	movf	indf2,w,c
  5774   002AC8  6FB5               	movwf	??_vfpfcnvrt& (0+255),b
  5775   002ACA  0E02               	movlw	2
  5776   002ACC  27B5               	addwf	??_vfpfcnvrt& (0+255),f,b
  5777   002ACE  C0B5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5778   002AD2                     	if	1	;There is more than 1 active tblptr byte
  5779   002AD2  0E10               	movlw	high __smallconst
  5780   002AD4  6EF7               	movwf	tblptrh,c
  5781   002AD6                     	endif
  5782   002AD6                     	if	0	;tblptru may be non-zero
  5783   002AD6                     	endif
  5784   002AD6                     	if	0	;tblptru may be non-zero
  5785   002AD6                     	endif
  5786   002AD6  0008               	tblrd		*
  5787   002AD8  50F5               	movf	tablat,w,c
  5788   002ADA  0A73               	xorlw	115
  5789   002ADC  A4D8               	btfss	status,2,c
  5790   002ADE  EF73  F015         	goto	u8101
  5791   002AE2  EF75  F015         	goto	u8100
  5792   002AE6                     u8101:
  5793   002AE6  EF7C  F015         	goto	l6164
  5794   002AEA                     u8100:
  5795   002AEA                     
  5796                           ; BSR set to: 0
  5797                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  5798   002AEA  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5799   002AEC  6ED9               	movwf	fsr2l,c
  5800   002AEE  6ADA               	clrf	fsr2h,c
  5801   002AF0  0E03               	movlw	3
  5802   002AF2  26DF               	addwf	indf2,f,c
  5803   002AF4  EF36  F015         	goto	l6152
  5804   002AF8                     l6164:
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  5808   002AF8  51BB               	movf	vfpfcnvrt@done& (0+255),w,b
  5809   002AFA  B4D8               	btfsc	status,2,c
  5810   002AFC  EF82  F015         	goto	u8111
  5811   002B00  EF84  F015         	goto	u8110
  5812   002B04                     u8111:
  5813   002B04  EF98  F015         	goto	l6170
  5814   002B08                     u8110:
  5815   002B08                     
  5816                           ; BSR set to: 0
  5817                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
  5818   002B08  C0B1  F00D         	movff	vfpfcnvrt@fp,stoa@fp
  5819   002B0C  C0B2  F00E         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5820   002B10  51B4               	movf	vfpfcnvrt@ap& (0+255),w,b
  5821   002B12  6ED9               	movwf	fsr2l,c
  5822   002B14  6ADA               	clrf	fsr2h,c
  5823   002B16  0E02               	movlw	2
  5824   002B18  26DF               	addwf	indf2,f,c
  5825   002B1A  5CDF               	subwf	indf2,w,c
  5826   002B1C  6ED9               	movwf	fsr2l,c
  5827   002B1E  6ADA               	clrf	fsr2h,c
  5828   002B20  CFDE F00F          	movff	postinc2,stoa@s
  5829   002B24  CFDE F010          	movff	postinc2,stoa@s+1
  5830   002B28  EC23  F021         	call	_stoa	;wreg free
  5831   002B2C  EF47  F016         	goto	l1218
  5832   002B30                     l6170:
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  5836   002B30  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5837   002B32  6ED9               	movwf	fsr2l,c
  5838   002B34  6ADA               	clrf	fsr2h,c
  5839   002B36  50DF               	movf	indf2,w,c
  5840   002B38  6FBC               	movwf	vfpfcnvrt@cp& (0+255),b
  5841   002B3A                     
  5842                           ; BSR set to: 0
  5843                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  5844   002B3A  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5845   002B3E                     	if	1	;There is more than 1 active tblptr byte
  5846   002B3E  0E10               	movlw	high __smallconst
  5847   002B40  6EF7               	movwf	tblptrh,c
  5848   002B42                     	endif
  5849   002B42                     	if	0	;tblptru may be non-zero
  5850   002B42                     	endif
  5851   002B42                     	if	0	;tblptru may be non-zero
  5852   002B42                     	endif
  5853   002B42  0008               	tblrd		*
  5854   002B44  CFF5 F0BA          	movff	tablat,vfpfcnvrt@c
  5855                           
  5856                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  5857   002B48  EFB1  F015         	goto	l6182
  5858   002B4C                     l6174:
  5859                           
  5860                           ; BSR set to: 0
  5861                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  5862   002B4C  2BBC               	incf	vfpfcnvrt@cp& (0+255),f,b
  5863                           
  5864                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
  5865   002B4E  EFC0  F015         	goto	l6184
  5866   002B52                     l6176:
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  5870   002B52  0E6C               	movlw	108
  5871   002B54  6FBA               	movwf	vfpfcnvrt@c& (0+255),b
  5872                           
  5873                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1722:     break;
  5874   002B56  EFC0  F015         	goto	l6184
  5875   002B5A                     l6178:
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  5879   002B5A  0E00               	movlw	0
  5880   002B5C  6FBA               	movwf	vfpfcnvrt@c& (0+255),b
  5881                           
  5882                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
  5883   002B5E  EFC0  F015         	goto	l6184
  5884   002B62                     l6182:
  5885                           
  5886                           ; BSR set to: 0
  5887   002B62  51BA               	movf	vfpfcnvrt@c& (0+255),w,b
  5888                           
  5889                           ; Switch size 1, requested type "simple"
  5890                           ; Number of cases is 3, Range of values is 76 to 108
  5891                           ; switch strategies available:
  5892                           ; Name         Instructions Cycles
  5893                           ; simple_byte           10     6 (average)
  5894                           ;	Chosen strategy is simple_byte
  5895   002B64  0A4C               	xorlw	76	; case 76
  5896   002B66  B4D8               	btfsc	status,2,c
  5897   002B68  EFA6  F015         	goto	l6174
  5898   002B6C  0A2A               	xorlw	42	; case 102
  5899   002B6E  B4D8               	btfsc	status,2,c
  5900   002B70  EFA9  F015         	goto	l6176
  5901   002B74  0A0A               	xorlw	10	; case 108
  5902   002B76  B4D8               	btfsc	status,2,c
  5903   002B78  EFA6  F015         	goto	l6174
  5904   002B7C  EFAD  F015         	goto	l6178
  5905   002B80                     l6184:
  5906                           
  5907                           ; BSR set to: 0
  5908   002B80  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5909   002B84                     	if	1	;There is more than 1 active tblptr byte
  5910   002B84  0E10               	movlw	high __smallconst
  5911   002B86  6EF7               	movwf	tblptrh,c
  5912   002B88                     	endif
  5913   002B88                     	if	0	;tblptru may be non-zero
  5914   002B88                     	endif
  5915   002B88                     	if	0	;tblptru may be non-zero
  5916   002B88                     	endif
  5917   002B88  0008               	tblrd		*
  5918   002B8A  50F5               	movf	tablat,w,c
  5919   002B8C  0A66               	xorlw	102
  5920   002B8E  A4D8               	btfss	status,2,c
  5921   002B90  EFCC  F015         	goto	u8121
  5922   002B94  EFCE  F015         	goto	u8120
  5923   002B98                     u8121:
  5924   002B98  EF2D  F016         	goto	l6204
  5925   002B9C                     u8120:
  5926   002B9C  EFF8  F015         	goto	l6192
  5927   002BA0                     l6186:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5931   002BA0  51B4               	movf	vfpfcnvrt@ap& (0+255),w,b
  5932   002BA2  6ED9               	movwf	fsr2l,c
  5933   002BA4  6ADA               	clrf	fsr2h,c
  5934   002BA6  CFDF F0B5          	movff	indf2,??_vfpfcnvrt
  5935   002BAA  0E04               	movlw	4
  5936   002BAC  26DF               	addwf	indf2,f,c
  5937   002BAE  51B5               	movf	??_vfpfcnvrt& (0+255),w,b
  5938   002BB0  6ED9               	movwf	fsr2l,c
  5939   002BB2  6ADA               	clrf	fsr2h,c
  5940   002BB4  CFDE F0B6          	movff	postinc2,vfpfcnvrt@convarg
  5941   002BB8  CFDE F0B7          	movff	postinc2,vfpfcnvrt@convarg+1
  5942   002BBC  CFDE F0B8          	movff	postinc2,vfpfcnvrt@convarg+2
  5943   002BC0  CFDE F0B9          	movff	postinc2,vfpfcnvrt@convarg+3
  5944                           
  5945                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
  5946   002BC4  EF03  F016         	goto	l6194
  5947   002BC8                     l6188:
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5951   002BC8  51B4               	movf	vfpfcnvrt@ap& (0+255),w,b
  5952   002BCA  6ED9               	movwf	fsr2l,c
  5953   002BCC  6ADA               	clrf	fsr2h,c
  5954   002BCE  CFDF F0B5          	movff	indf2,??_vfpfcnvrt
  5955   002BD2  0E04               	movlw	4
  5956   002BD4  26DF               	addwf	indf2,f,c
  5957   002BD6  51B5               	movf	??_vfpfcnvrt& (0+255),w,b
  5958   002BD8  6ED9               	movwf	fsr2l,c
  5959   002BDA  6ADA               	clrf	fsr2h,c
  5960   002BDC  CFDE F0B6          	movff	postinc2,vfpfcnvrt@convarg
  5961   002BE0  CFDE F0B7          	movff	postinc2,vfpfcnvrt@convarg+1
  5962   002BE4  CFDE F0B8          	movff	postinc2,vfpfcnvrt@convarg+2
  5963   002BE8  CFDE F0B9          	movff	postinc2,vfpfcnvrt@convarg+3
  5964                           
  5965                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
  5966   002BEC  EF03  F016         	goto	l6194
  5967   002BF0                     l6192:
  5968                           
  5969                           ; BSR set to: 0
  5970   002BF0  51BA               	movf	vfpfcnvrt@c& (0+255),w,b
  5971                           
  5972                           ; Switch size 1, requested type "simple"
  5973                           ; Number of cases is 2, Range of values is 76 to 108
  5974                           ; switch strategies available:
  5975                           ; Name         Instructions Cycles
  5976                           ; simple_byte            7     4 (average)
  5977                           ;	Chosen strategy is simple_byte
  5978   002BF2  0A4C               	xorlw	76	; case 76
  5979   002BF4  B4D8               	btfsc	status,2,c
  5980   002BF6  EFE4  F015         	goto	l6188
  5981   002BFA  0A20               	xorlw	32	; case 108
  5982   002BFC  B4D8               	btfsc	status,2,c
  5983   002BFE  EFD0  F015         	goto	l6186
  5984   002C02  EF03  F016         	goto	l6194
  5985   002C06                     l6194:
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  5989   002C06  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5990   002C08  6ED9               	movwf	fsr2l,c
  5991   002C0A  6ADA               	clrf	fsr2h,c
  5992   002C0C  29BC               	incf	vfpfcnvrt@cp& (0+255),w,b
  5993   002C0E  6EDF               	movwf	indf2,c
  5994                           
  5995                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  5996   002C10  EF21  F016         	goto	l6202
  5997   002C14                     l6196:
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  6001   002C14  C0B1  F07C         	movff	vfpfcnvrt@fp,efgtoa@fp
  6002   002C18  C0B2  F07D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  6003   002C1C  C0B6  F07E         	movff	vfpfcnvrt@convarg,efgtoa@f
  6004   002C20  C0B7  F07F         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  6005   002C24  C0B8  F080         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  6006   002C28  C0B9  F081         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  6007   002C2C  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6008   002C30                     	if	1	;There is more than 1 active tblptr byte
  6009   002C30  0E10               	movlw	high __smallconst
  6010   002C32  6EF7               	movwf	tblptrh,c
  6011   002C34                     	endif
  6012   002C34                     	if	0	;tblptru may be non-zero
  6013   002C34                     	endif
  6014   002C34                     	if	0	;tblptru may be non-zero
  6015   002C34                     	endif
  6016   002C34  0008               	tblrd		*
  6017   002C36  CFF5 F082          	movff	tablat,efgtoa@c
  6018   002C3A  EC73  F008         	call	_efgtoa	;wreg free
  6019   002C3E  EF47  F016         	goto	l1218
  6020   002C42                     l6202:
  6021                           
  6022                           ; BSR set to: 0
  6023   002C42  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6024   002C46                     	if	1	;There is more than 1 active tblptr byte
  6025   002C46  0E10               	movlw	high __smallconst
  6026   002C48  6EF7               	movwf	tblptrh,c
  6027   002C4A                     	endif
  6028   002C4A                     	if	0	;tblptru may be non-zero
  6029   002C4A                     	endif
  6030   002C4A                     	if	0	;tblptru may be non-zero
  6031   002C4A                     	endif
  6032   002C4A  0008               	tblrd		*
  6033   002C4C  50F5               	movf	tablat,w,c
  6034                           
  6035                           ; Switch size 1, requested type "simple"
  6036                           ; Number of cases is 1, Range of values is 102 to 102
  6037                           ; switch strategies available:
  6038                           ; Name         Instructions Cycles
  6039                           ; simple_byte            4     3 (average)
  6040                           ;	Chosen strategy is simple_byte
  6041   002C4E  0A66               	xorlw	102	; case 102
  6042   002C50  B4D8               	btfsc	status,2,c
  6043   002C52  EF0A  F016         	goto	l6196
  6044   002C56  EF2D  F016         	goto	l6204
  6045   002C5A                     l6204:
  6046                           
  6047                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6048   002C5A  0100               	movlb	0	; () banked
  6049   002C5C  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6050   002C5E  6ED9               	movwf	fsr2l,c
  6051   002C60  6ADA               	clrf	fsr2h,c
  6052   002C62  2ADF               	incf	indf2,f,c
  6053   002C64  EF47  F016         	goto	l1218
  6054   002C68                     l6208:
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6058   002C68  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6059   002C6A  6ED9               	movwf	fsr2l,c
  6060   002C6C  6ADA               	clrf	fsr2h,c
  6061   002C6E  CFDF FFF6          	movff	indf2,tblptrl
  6062   002C72                     	if	1	;There is more than 1 active tblptr byte
  6063   002C72  0E10               	movlw	high __smallconst
  6064   002C74  6EF7               	movwf	tblptrh,c
  6065   002C76                     	endif
  6066   002C76                     	if	0	;tblptru may be non-zero
  6067   002C76                     	endif
  6068   002C76                     	if	0	;tblptru may be non-zero
  6069   002C76                     	endif
  6070   002C76  0008               	tblrd		*
  6071   002C78  50F5               	movf	tablat,w,c
  6072   002C7A  6E04               	movwf	fputc@c^0,c
  6073   002C7C  6A05               	clrf	(fputc@c+1)^0,c
  6074   002C7E  C0B1  F006         	movff	vfpfcnvrt@fp,fputc@fp
  6075   002C82  C0B2  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6076   002C86  ECE1  F025         	call	_fputc	;wreg free
  6077   002C8A  EF2D  F016         	goto	l6204
  6078   002C8E                     l1218:
  6079   002C8E  0012               	return		;funcret
  6080   002C90                     __end_of_vfpfcnvrt:
  6081                           	callstack 0
  6082                           
  6083 ;; *************** function _stoa *****************
  6084 ;; Defined at:
  6085 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  6088 ;;		 -> NULL(0), sprintf@f(12), 
  6089 ;;  s               2   14[COMRAM] PTR unsigned char 
  6090 ;;		 -> ?_printf(2), ?_sprintf(2), STR_14(1), STR_13(6), 
  6091 ;;		 -> STR_12(5), STR_11(4), STR_10(4), STR_9(4), 
  6092 ;;		 -> STR_8(5), STR_7(5), 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;  l               2   24[COMRAM] int 
  6095 ;;  cp              2   22[COMRAM] PTR unsigned char 
  6096 ;;		 -> ?_printf(2), STR_24(7), ?_sprintf(2), STR_14(1), 
  6097 ;;		 -> STR_13(6), STR_12(5), STR_11(4), STR_10(4), 
  6098 ;;		 -> STR_9(4), STR_8(5), STR_7(5), 
  6099 ;;  w               2   20[COMRAM] int 
  6100 ;;  p               2   18[COMRAM] int 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      void 
  6103 ;; Registers used:
  6104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;Total ram usage:       14 bytes
  6115 ;; Hardware stack levels used: 1
  6116 ;; Hardware stack levels required when called: 3
  6117 ;; This function calls:
  6118 ;;		_fputc
  6119 ;; This function is called by:
  6120 ;;		_vfpfcnvrt
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text22
  6125   004246                     __ptext22:
  6126                           	callstack 0
  6127   004246                     _stoa:
  6128                           	callstack 23
  6129   004246                     
  6130                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
  6131   004246  C00F  F017         	movff	stoa@s,stoa@cp
  6132   00424A  C010  F018         	movff	stoa@s+1,stoa@cp+1
  6133                           
  6134                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
  6135   00424E  5017               	movf	stoa@cp^0,w,c
  6136   004250  1018               	iorwf	(stoa@cp+1)^0,w,c
  6137   004252  A4D8               	btfss	status,2,c
  6138   004254  EF2E  F021         	goto	u7781
  6139   004258  EF30  F021         	goto	u7780
  6140   00425C                     u7781:
  6141   00425C  EF36  F021         	goto	l6004
  6142   004260                     u7780:
  6143   004260                     
  6144                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
  6145   004260  0EA9               	movlw	low STR_24
  6146   004262  6E17               	movwf	stoa@cp^0,c
  6147   004264  5017               	movf	stoa@cp^0,w,c
  6148   004266  A4D8               	btfss	status,2,c
  6149   004268  0E10               	movlw	high __smallconst
  6150   00426A  6E18               	movwf	(stoa@cp+1)^0,c
  6151   00426C                     l6004:
  6152                           
  6153                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
  6154   00426C  0E00               	movlw	0
  6155   00426E  6E1A               	movwf	(stoa@l+1)^0,c
  6156   004270  0E00               	movlw	0
  6157   004272  6E19               	movwf	stoa@l^0,c
  6158   004274  EF3E  F021         	goto	l6008
  6159   004278                     l6006:
  6160   004278  4A19               	infsnz	stoa@l^0,f,c
  6161   00427A  2A1A               	incf	(stoa@l+1)^0,f,c
  6162   00427C                     l6008:
  6163   00427C  5019               	movf	stoa@l^0,w,c
  6164   00427E  2417               	addwf	stoa@cp^0,w,c
  6165   004280  6E11               	movwf	??_stoa^0,c
  6166   004282  501A               	movf	(stoa@l+1)^0,w,c
  6167   004284  2018               	addwfc	(stoa@cp+1)^0,w,c
  6168   004286  6E12               	movwf	(??_stoa+1)^0,c
  6169   004288  C011  FFF6         	movff	??_stoa,tblptrl
  6170   00428C  C012  FFF7         	movff	??_stoa+1,tblptrh
  6171   004290  0E00               	movlw	low (__smallconst shr (0+16))
  6172   004292  6EF8               	movwf	tblptru,c
  6173   004294  0E0F               	movlw	(high __ramtop+-1)
  6174   004296  64F7               	cpfsgt	tblptrh,c
  6175   004298  D003               	bra	u7797
  6176   00429A  0008               	tblrd		*
  6177   00429C  50F5               	movf	tablat,w,c
  6178   00429E  D005               	bra	u7790
  6179   0042A0                     u7797:
  6180   0042A0  CFF6 FFE1          	movff	tblptrl,fsr1l
  6181   0042A4  CFF7 FFE2          	movff	tblptrh,fsr1h
  6182   0042A8  50E7               	movf	indf1,w,c
  6183   0042AA                     u7790:
  6184   0042AA  0900               	iorlw	0
  6185   0042AC  A4D8               	btfss	status,2,c
  6186   0042AE  EF5B  F021         	goto	u7801
  6187   0042B2  EF5D  F021         	goto	u7800
  6188   0042B6                     u7801:
  6189   0042B6  EF3C  F021         	goto	l6006
  6190   0042BA                     u7800:
  6191   0042BA                     
  6192                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
  6193   0042BA  BE5C               	btfsc	(_prec+1)^0,7,c
  6194   0042BC  EF62  F021         	goto	u7811
  6195   0042C0  EF64  F021         	goto	u7810
  6196   0042C4                     u7811:
  6197   0042C4  EF77  F021         	goto	l1182
  6198   0042C8                     u7810:
  6199   0042C8  5019               	movf	stoa@l^0,w,c
  6200   0042CA  5C5B               	subwf	_prec^0,w,c
  6201   0042CC  505C               	movf	(_prec+1)^0,w,c
  6202   0042CE  0A80               	xorlw	128
  6203   0042D0  6E11               	movwf	??_stoa^0,c
  6204   0042D2  501A               	movf	(stoa@l+1)^0,w,c
  6205   0042D4  0A80               	xorlw	128
  6206   0042D6  5811               	subwfb	??_stoa^0,w,c
  6207   0042D8  B0D8               	btfsc	status,0,c
  6208   0042DA  EF71  F021         	goto	u7821
  6209   0042DE  EF73  F021         	goto	u7820
  6210   0042E2                     u7821:
  6211   0042E2  EF77  F021         	goto	l1182
  6212   0042E6                     u7820:
  6213   0042E6                     
  6214                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 962:   l = prec;
  6215   0042E6  C05B  F019         	movff	_prec,stoa@l
  6216   0042EA  C05C  F01A         	movff	_prec+1,stoa@l+1
  6217   0042EE                     l1182:
  6218                           
  6219                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 965:     p = l;
  6220   0042EE  C019  F013         	movff	stoa@l,stoa@p
  6221   0042F2  C01A  F014         	movff	stoa@l+1,stoa@p+1
  6222                           
  6223                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
  6224   0042F6  C0FC  F015         	movff	_width,stoa@w
  6225   0042FA  C0FD  F016         	movff	_width+1,stoa@w+1
  6226                           
  6227                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
  6228   0042FE  0100               	movlb	0	; () banked
  6229   004300  B1FE               	btfsc	_flags& (0+255),0,b
  6230   004302  EF85  F021         	goto	u7831
  6231   004306  EF87  F021         	goto	u7830
  6232   00430A                     u7831:
  6233   00430A  EFC3  F021         	goto	l6028
  6234   00430E                     u7830:
  6235   00430E  EF95  F021         	goto	l6022
  6236   004312                     l6018:
  6237                           
  6238                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
  6239   004312  0E00               	movlw	0
  6240   004314  6E05               	movwf	(fputc@c+1)^0,c
  6241   004316  0E20               	movlw	32
  6242   004318  6E04               	movwf	fputc@c^0,c
  6243   00431A  C00D  F006         	movff	stoa@fp,fputc@fp
  6244   00431E  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  6245   004322  ECE1  F025         	call	_fputc	;wreg free
  6246   004326                     
  6247                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
  6248   004326  4A19               	infsnz	stoa@l^0,f,c
  6249   004328  2A1A               	incf	(stoa@l+1)^0,f,c
  6250   00432A                     l6022:
  6251                           
  6252                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
  6253   00432A  5015               	movf	stoa@w^0,w,c
  6254   00432C  5C19               	subwf	stoa@l^0,w,c
  6255   00432E  501A               	movf	(stoa@l+1)^0,w,c
  6256   004330  0A80               	xorlw	128
  6257   004332  6E11               	movwf	??_stoa^0,c
  6258   004334  5016               	movf	(stoa@w+1)^0,w,c
  6259   004336  0A80               	xorlw	128
  6260   004338  5811               	subwfb	??_stoa^0,w,c
  6261   00433A  A0D8               	btfss	status,0,c
  6262   00433C  EFA2  F021         	goto	u7841
  6263   004340  EFA4  F021         	goto	u7840
  6264   004344                     u7841:
  6265   004344  EF89  F021         	goto	l6018
  6266   004348                     u7840:
  6267   004348  EFC3  F021         	goto	l6028
  6268   00434C                     l6024:
  6269                           
  6270                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
  6271   00434C  C017  FFF6         	movff	stoa@cp,tblptrl
  6272   004350  C018  FFF7         	movff	stoa@cp+1,tblptrh
  6273   004354  0E00               	movlw	low (__smallconst shr (0+16))
  6274   004356  6EF8               	movwf	tblptru,c
  6275   004358  0E0F               	movlw	(high __ramtop+-1)
  6276   00435A  64F7               	cpfsgt	tblptrh,c
  6277   00435C  D003               	bra	u7857
  6278   00435E  0008               	tblrd		*
  6279   004360  50F5               	movf	tablat,w,c
  6280   004362  D005               	bra	u7850
  6281   004364                     u7857:
  6282   004364  CFF6 FFE1          	movff	tblptrl,fsr1l
  6283   004368  CFF7 FFE2          	movff	tblptrh,fsr1h
  6284   00436C  50E7               	movf	indf1,w,c
  6285   00436E                     u7850:
  6286   00436E  6E11               	movwf	??_stoa^0,c
  6287   004370  5011               	movf	??_stoa^0,w,c
  6288   004372  6E04               	movwf	fputc@c^0,c
  6289   004374  6A05               	clrf	(fputc@c+1)^0,c
  6290   004376  C00D  F006         	movff	stoa@fp,fputc@fp
  6291   00437A  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  6292   00437E  ECE1  F025         	call	_fputc	;wreg free
  6293   004382                     
  6294                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
  6295   004382  4A17               	infsnz	stoa@cp^0,f,c
  6296   004384  2A18               	incf	(stoa@cp+1)^0,f,c
  6297   004386                     l6028:
  6298                           
  6299                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
  6300   004386  0613               	decf	stoa@p^0,f,c
  6301   004388  A0D8               	btfss	status,0,c
  6302   00438A  0614               	decf	(stoa@p+1)^0,f,c
  6303   00438C  2813               	incf	stoa@p^0,w,c
  6304   00438E  E106               	bnz	u7861
  6305   004390  2814               	incf	(stoa@p+1)^0,w,c
  6306   004392  A4D8               	btfss	status,2,c
  6307   004394  EFCE  F021         	goto	u7861
  6308   004398  EFD0  F021         	goto	u7860
  6309   00439C                     u7861:
  6310   00439C  EFA6  F021         	goto	l6024
  6311   0043A0                     u7860:
  6312   0043A0                     
  6313                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
  6314   0043A0  0100               	movlb	0	; () banked
  6315   0043A2  A1FE               	btfss	_flags& (0+255),0,b
  6316   0043A4  EFD6  F021         	goto	u7871
  6317   0043A8  EFD8  F021         	goto	u7870
  6318   0043AC                     u7871:
  6319   0043AC  EFF5  F021         	goto	l1194
  6320   0043B0                     u7870:
  6321   0043B0  EFE6  F021         	goto	l6036
  6322   0043B4                     l6032:
  6323                           
  6324                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
  6325   0043B4  0E00               	movlw	0
  6326   0043B6  6E05               	movwf	(fputc@c+1)^0,c
  6327   0043B8  0E20               	movlw	32
  6328   0043BA  6E04               	movwf	fputc@c^0,c
  6329   0043BC  C00D  F006         	movff	stoa@fp,fputc@fp
  6330   0043C0  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  6331   0043C4  ECE1  F025         	call	_fputc	;wreg free
  6332   0043C8                     
  6333                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
  6334   0043C8  4A19               	infsnz	stoa@l^0,f,c
  6335   0043CA  2A1A               	incf	(stoa@l+1)^0,f,c
  6336   0043CC                     l6036:
  6337                           
  6338                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
  6339   0043CC  5015               	movf	stoa@w^0,w,c
  6340   0043CE  5C19               	subwf	stoa@l^0,w,c
  6341   0043D0  501A               	movf	(stoa@l+1)^0,w,c
  6342   0043D2  0A80               	xorlw	128
  6343   0043D4  6E11               	movwf	??_stoa^0,c
  6344   0043D6  5016               	movf	(stoa@w+1)^0,w,c
  6345   0043D8  0A80               	xorlw	128
  6346   0043DA  5811               	subwfb	??_stoa^0,w,c
  6347   0043DC  A0D8               	btfss	status,0,c
  6348   0043DE  EFF3  F021         	goto	u7881
  6349   0043E2  EFF5  F021         	goto	u7880
  6350   0043E6                     u7881:
  6351   0043E6  EFDA  F021         	goto	l6032
  6352   0043EA                     u7880:
  6353   0043EA                     l1194:
  6354   0043EA  0012               	return		;funcret
  6355   0043EC                     __end_of_stoa:
  6356                           	callstack 0
  6357                           
  6358 ;; *************** function _read_prec_or_width *****************
  6359 ;; Defined at:
  6360 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;  fmt             1    8[COMRAM] PTR PTR const unsigned c
  6363 ;;		 -> vfprintf@cfmt(1), 
  6364 ;;  ap              1    9[COMRAM] PTR PTR void [1]
  6365 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;  c               1   10[COMRAM] unsigned char 
  6368 ;;  n               2   11[COMRAM] int 
  6369 ;; Return value:  Size  Location     Type
  6370 ;;                  2    8[COMRAM] int 
  6371 ;; Registers used:
  6372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6373 ;; Tracked objects:
  6374 ;;		On entry : 0/0
  6375 ;;		On exit  : 0/0
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6379 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6381 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6382 ;;Total ram usage:        5 bytes
  6383 ;; Hardware stack levels used: 1
  6384 ;; Hardware stack levels required when called: 2
  6385 ;; This function calls:
  6386 ;;		___wmul
  6387 ;; This function is called by:
  6388 ;;		_vfpfcnvrt
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           	psect	text23
  6393   004F5C                     __ptext23:
  6394                           	callstack 0
  6395   004F5C                     _read_prec_or_width:
  6396                           	callstack 24
  6397   004F5C                     
  6398                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  6399   004F5C  0E00               	movlw	0
  6400   004F5E  6E0D               	movwf	(read_prec_or_width@n+1)^0,c
  6401   004F60  0E00               	movlw	0
  6402   004F62  6E0C               	movwf	read_prec_or_width@n^0,c
  6403   004F64                     
  6404                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  6405   004F64  5009               	movf	read_prec_or_width@fmt^0,w,c
  6406   004F66  6ED9               	movwf	fsr2l,c
  6407   004F68  6ADA               	clrf	fsr2h,c
  6408   004F6A  CFDF FFF6          	movff	indf2,tblptrl
  6409   004F6E                     	if	1	;There is more than 1 active tblptr byte
  6410   004F6E  0E10               	movlw	high __smallconst
  6411   004F70  6EF7               	movwf	tblptrh,c
  6412   004F72                     	endif
  6413   004F72                     	if	0	;tblptru may be non-zero
  6414   004F72                     	endif
  6415   004F72                     	if	0	;tblptru may be non-zero
  6416   004F72                     	endif
  6417   004F72  0008               	tblrd		*
  6418   004F74  50F5               	movf	tablat,w,c
  6419   004F76  0A2A               	xorlw	42
  6420   004F78  A4D8               	btfss	status,2,c
  6421   004F7A  EFC1  F027         	goto	u7891
  6422   004F7E  EFC3  F027         	goto	u7890
  6423   004F82                     u7891:
  6424   004F82  EFE9  F027         	goto	l6050
  6425   004F86                     u7890:
  6426   004F86                     
  6427                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  6428   004F86  5009               	movf	read_prec_or_width@fmt^0,w,c
  6429   004F88  6ED9               	movwf	fsr2l,c
  6430   004F8A  6ADA               	clrf	fsr2h,c
  6431   004F8C  2ADF               	incf	indf2,f,c
  6432   004F8E                     
  6433                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  6434   004F8E  500A               	movf	read_prec_or_width@ap^0,w,c
  6435   004F90  6ED9               	movwf	fsr2l,c
  6436   004F92  6ADA               	clrf	fsr2h,c
  6437   004F94  0E02               	movlw	2
  6438   004F96  26DF               	addwf	indf2,f,c
  6439   004F98  5CDF               	subwf	indf2,w,c
  6440   004F9A  6ED9               	movwf	fsr2l,c
  6441   004F9C  6ADA               	clrf	fsr2h,c
  6442   004F9E  CFDE F00C          	movff	postinc2,read_prec_or_width@n
  6443   004FA2  CFDE F00D          	movff	postinc2,read_prec_or_width@n+1
  6444                           
  6445                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  6446   004FA6  EFFC  F027         	goto	l1198
  6447   004FAA                     l6046:
  6448                           
  6449                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  6450   004FAA  C00C  F003         	movff	read_prec_or_width@n,___wmul@multiplier
  6451   004FAE  C00D  F004         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  6452   004FB2  0E00               	movlw	0
  6453   004FB4  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  6454   004FB6  0E0A               	movlw	10
  6455   004FB8  6E05               	movwf	___wmul@multiplicand^0,c
  6456   004FBA  ECFA  F029         	call	___wmul	;wreg free
  6457   004FBE  500B               	movf	read_prec_or_width@c^0,w,c
  6458   004FC0  2403               	addwf	?___wmul^0,w,c
  6459   004FC2  6E0C               	movwf	read_prec_or_width@n^0,c
  6460   004FC4  0E00               	movlw	0
  6461   004FC6  2004               	addwfc	(?___wmul+1)^0,w,c
  6462   004FC8  6E0D               	movwf	(read_prec_or_width@n+1)^0,c
  6463   004FCA                     
  6464                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  6465   004FCA  5009               	movf	read_prec_or_width@fmt^0,w,c
  6466   004FCC  6ED9               	movwf	fsr2l,c
  6467   004FCE  6ADA               	clrf	fsr2h,c
  6468   004FD0  2ADF               	incf	indf2,f,c
  6469   004FD2                     l6050:
  6470                           
  6471                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  6472   004FD2  5009               	movf	read_prec_or_width@fmt^0,w,c
  6473   004FD4  6ED9               	movwf	fsr2l,c
  6474   004FD6  6ADA               	clrf	fsr2h,c
  6475   004FD8  CFDF FFF6          	movff	indf2,tblptrl
  6476   004FDC                     	if	1	;There is more than 1 active tblptr byte
  6477   004FDC  0E10               	movlw	high __smallconst
  6478   004FDE  6EF7               	movwf	tblptrh,c
  6479   004FE0                     	endif
  6480   004FE0                     	if	0	;tblptru may be non-zero
  6481   004FE0                     	endif
  6482   004FE0                     	if	0	;tblptru may be non-zero
  6483   004FE0                     	endif
  6484   004FE0  0008               	tblrd		*
  6485   004FE2  50F5               	movf	tablat,w,c
  6486   004FE4  0FD0               	addlw	208
  6487   004FE6  6E0B               	movwf	read_prec_or_width@c^0,c
  6488   004FE8  0E09               	movlw	9
  6489   004FEA  640B               	cpfsgt	read_prec_or_width@c^0,c
  6490   004FEC  EFFA  F027         	goto	u7901
  6491   004FF0  EFFC  F027         	goto	u7900
  6492   004FF4                     u7901:
  6493   004FF4  EFD5  F027         	goto	l6046
  6494   004FF8                     u7900:
  6495   004FF8                     l1198:
  6496                           
  6497                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  6498   004FF8  C00C  F009         	movff	read_prec_or_width@n,?_read_prec_or_width
  6499   004FFC  C00D  F00A         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  6500   005000  0012               	return		;funcret
  6501   005002                     __end_of_read_prec_or_width:
  6502                           	callstack 0
  6503                           
  6504 ;; *************** function ___wmul *****************
  6505 ;; Defined at:
  6506 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;  multiplier      2    2[COMRAM] unsigned int 
  6509 ;;  multiplicand    2    4[COMRAM] unsigned int 
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;  product         2    6[COMRAM] unsigned int 
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  2    2[COMRAM] unsigned int 
  6514 ;; Registers used:
  6515 ;;		wreg, status,2, status,0, prodl, prodh
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6525 ;;Total ram usage:        6 bytes
  6526 ;; Hardware stack levels used: 1
  6527 ;; Hardware stack levels required when called: 1
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		_read_prec_or_width
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           	psect	text24
  6536   0053F4                     __ptext24:
  6537                           	callstack 0
  6538   0053F4                     ___wmul:
  6539                           	callstack 24
  6540   0053F4  5003               	movf	___wmul@multiplier^0,w,c
  6541   0053F6  0205               	mulwf	___wmul@multiplicand^0,c
  6542   0053F8  CFF3 F007          	movff	prodl,___wmul@product
  6543   0053FC  CFF4 F008          	movff	prodh,___wmul@product+1
  6544   005400  5003               	movf	___wmul@multiplier^0,w,c
  6545   005402  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  6546   005404  50F3               	movf	243,w,c
  6547   005406  2608               	addwf	(___wmul@product+1)^0,f,c
  6548   005408  5004               	movf	(___wmul@multiplier+1)^0,w,c
  6549   00540A  0205               	mulwf	___wmul@multiplicand^0,c
  6550   00540C  50F3               	movf	243,w,c
  6551   00540E  2608               	addwf	(___wmul@product+1)^0,f,c
  6552   005410  C007  F003         	movff	___wmul@product,?___wmul
  6553   005414  C008  F004         	movff	___wmul@product+1,?___wmul+1
  6554   005418  0012               	return		;funcret
  6555   00541A                     __end_of___wmul:
  6556                           	callstack 0
  6557                           
  6558 ;; *************** function _efgtoa *****************
  6559 ;; Defined at:
  6560 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  6563 ;;		 -> NULL(0), sprintf@f(12), 
  6564 ;;  f               4   30[BANK0 ] PTR struct _IO_FILE
  6565 ;;  c               1   34[BANK0 ] unsigned char 
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;  u               4   77[BANK0 ] struct flui
  6568 ;;  g               4   71[BANK0 ] struct flui
  6569 ;;  l               4   66[BANK0 ] struct flui
  6570 ;;  h               4   62[BANK0 ] struct flui
  6571 ;;  ou              4   56[BANK0 ] struct flui
  6572 ;;  n               2   75[BANK0 ] int 
  6573 ;;  i               2   60[BANK0 ] int 
  6574 ;;  w               2   54[BANK0 ] int 
  6575 ;;  e               2   52[BANK0 ] int 
  6576 ;;  m               2   50[BANK0 ] int 
  6577 ;;  d               2   48[BANK0 ] int 
  6578 ;;  t               2   41[BANK0 ] int 
  6579 ;;  p               2   39[BANK0 ] int 
  6580 ;;  ne              2   37[BANK0 ] int 
  6581 ;;  sign            1   70[BANK0 ] unsigned char 
  6582 ;;  nmode           1   47[BANK0 ] unsigned char 
  6583 ;;  mode            1   46[BANK0 ] unsigned char 
  6584 ;;  pp              1   45[BANK0 ] unsigned char 
  6585 ;;  esign           1    0        unsigned char 
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  1    wreg      void 
  6588 ;; Registers used:
  6589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6595 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6596 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6597 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6598 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6599 ;;Total ram usage:       53 bytes
  6600 ;; Hardware stack levels used: 1
  6601 ;; Hardware stack levels required when called: 5
  6602 ;; This function calls:
  6603 ;;		___fladd
  6604 ;;		___fldiv
  6605 ;;		___fleq
  6606 ;;		___flge
  6607 ;;		___flmul
  6608 ;;		___flneg
  6609 ;;		___flsub
  6610 ;;		___fltol
  6611 ;;		___fpclassifyf
  6612 ;;		_floorf
  6613 ;;		_labs
  6614 ;;		_memcpy
  6615 ;;		_pad
  6616 ;;		_strcpy
  6617 ;; This function is called by:
  6618 ;;		_vfpfcnvrt
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text25
  6623   0010E6                     __ptext25:
  6624                           	callstack 0
  6625   0010E6                     _efgtoa:
  6626                           	callstack 21
  6627   0010E6                     
  6628                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  6629   0010E6  0E00               	movlw	0
  6630   0010E8  0100               	movlb	0	; () banked
  6631   0010EA  6FA6               	movwf	efgtoa@sign& (0+255),b
  6632   0010EC                     
  6633                           ; BSR set to: 0
  6634                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  6635   0010EC  C07E  F0A7         	movff	efgtoa@f,efgtoa@g
  6636   0010F0  C07F  F0A8         	movff	efgtoa@f+1,efgtoa@g+1
  6637   0010F4  C080  F0A9         	movff	efgtoa@f+2,efgtoa@g+2
  6638   0010F8  C081  F0AA         	movff	efgtoa@f+3,efgtoa@g+3
  6639   0010FC                     
  6640                           ; BSR set to: 0
  6641                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  6642   0010FC  BFAA               	btfsc	(efgtoa@g+3)& (0+255),7,b
  6643   0010FE  EF85  F008         	goto	u7460
  6644   001102  EF83  F008         	goto	u7461
  6645   001106                     u7461:
  6646   001106  EF99  F008         	goto	l5788
  6647   00110A                     u7460:
  6648   00110A                     
  6649                           ; BSR set to: 0
  6650                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  6651   00110A  0E01               	movlw	1
  6652   00110C  6FA6               	movwf	efgtoa@sign& (0+255),b
  6653   00110E                     
  6654                           ; BSR set to: 0
  6655                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  6656   00110E  C0A7  F078         	movff	efgtoa@g,___flneg@f1
  6657   001112  C0A8  F079         	movff	efgtoa@g+1,___flneg@f1+1
  6658   001116  C0A9  F07A         	movff	efgtoa@g+2,___flneg@f1+2
  6659   00111A  C0AA  F07B         	movff	efgtoa@g+3,___flneg@f1+3
  6660   00111E  EC8E  F029         	call	___flneg	;wreg free
  6661   001122  C078  F0A7         	movff	?___flneg,efgtoa@g
  6662   001126  C079  F0A8         	movff	?___flneg+1,efgtoa@g+1
  6663   00112A  C07A  F0A9         	movff	?___flneg+2,efgtoa@g+2
  6664   00112E  C07B  F0AA         	movff	?___flneg+3,efgtoa@g+3
  6665   001132                     l5788:
  6666                           
  6667                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  6668   001132  0E00               	movlw	0
  6669   001134  0100               	movlb	0	; () banked
  6670   001136  6FAC               	movwf	(efgtoa@n+1)& (0+255),b
  6671   001138  0E00               	movlw	0
  6672   00113A  6FAB               	movwf	efgtoa@n& (0+255),b
  6673   00113C                     
  6674                           ; BSR set to: 0
  6675                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  6676   00113C  C0FC  F096         	movff	_width,efgtoa@w
  6677   001140  C0FD  F097         	movff	_width+1,efgtoa@w+1
  6678   001144                     
  6679                           ; BSR set to: 0
  6680                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
  6681   001144  51A6               	movf	efgtoa@sign& (0+255),w,b
  6682   001146  B4D8               	btfsc	status,2,c
  6683   001148  EFA8  F008         	goto	u7471
  6684   00114C  EFAA  F008         	goto	u7470
  6685   001150                     u7471:
  6686   001150  EFBE  F008         	goto	l5802
  6687   001154                     u7470:
  6688   001154                     
  6689                           ; BSR set to: 0
  6690                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  6691   001154  51A6               	movf	efgtoa@sign& (0+255),w,b
  6692   001156  A4D8               	btfss	status,2,c
  6693   001158  EFB0  F008         	goto	u7481
  6694   00115C  EFB2  F008         	goto	u7480
  6695   001160                     u7481:
  6696   001160  EFB8  F008         	goto	l5798
  6697   001164                     u7480:
  6698   001164                     
  6699                           ; BSR set to: 0
  6700   001164  0E00               	movlw	0
  6701   001166  6F8C               	movwf	(_efgtoa$3066+1)& (0+255),b
  6702   001168  0E2B               	movlw	43
  6703   00116A  6F8B               	movwf	_efgtoa$3066& (0+255),b
  6704   00116C  EFBC  F008         	goto	l5800
  6705   001170                     l5798:
  6706                           
  6707                           ; BSR set to: 0
  6708   001170  0E00               	movlw	0
  6709   001172  6F8C               	movwf	(_efgtoa$3066+1)& (0+255),b
  6710   001174  0E2D               	movlw	45
  6711   001176  6F8B               	movwf	_efgtoa$3066& (0+255),b
  6712   001178                     l5800:
  6713                           
  6714                           ; BSR set to: 0
  6715   001178  C08B  F0A6         	movff	_efgtoa$3066,efgtoa@sign
  6716   00117C                     l5802:
  6717                           
  6718                           ; BSR set to: 0
  6719                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  6720   00117C  C0A7  F003         	movff	efgtoa@g,___fpclassifyf@x
  6721   001180  C0A8  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6722   001184  C0A9  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6723   001188  C0AA  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6724   00118C  ECF5  F024         	call	___fpclassifyf	;wreg free
  6725   001190  0403               	decf	?___fpclassifyf^0,w,c
  6726   001192  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  6727   001194  A4D8               	btfss	status,2,c
  6728   001196  EFCF  F008         	goto	u7491
  6729   00119A  EFD1  F008         	goto	u7490
  6730   00119E                     u7491:
  6731   00119E  EF02  F009         	goto	l5820
  6732   0011A2                     u7490:
  6733   0011A2                     
  6734                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  6735   0011A2  0100               	movlb	0	; () banked
  6736   0011A4  51A6               	movf	efgtoa@sign& (0+255),w,b
  6737   0011A6  B4D8               	btfsc	status,2,c
  6738   0011A8  EFD8  F008         	goto	u7501
  6739   0011AC  EFDA  F008         	goto	u7500
  6740   0011B0                     u7501:
  6741   0011B0  EFE3  F008         	goto	l5812
  6742   0011B4                     u7500:
  6743   0011B4                     
  6744                           ; BSR set to: 0
  6745                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  6746   0011B4  C0A6  F122         	movff	efgtoa@sign,_dbuf
  6747   0011B8                     
  6748                           ; BSR set to: 0
  6749                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
  6750   0011B8  0796               	decf	efgtoa@w& (0+255),f,b
  6751   0011BA  A0D8               	btfss	status,0,c
  6752   0011BC  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  6753   0011BE                     
  6754                           ; BSR set to: 0
  6755                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  6756   0011BE  0E00               	movlw	0
  6757   0011C0  6FAC               	movwf	(efgtoa@n+1)& (0+255),b
  6758   0011C2  0E01               	movlw	1
  6759   0011C4  6FAB               	movwf	efgtoa@n& (0+255),b
  6760   0011C6                     l5812:
  6761                           
  6762                           ; BSR set to: 0
  6763                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  6764   0011C6  0E22               	movlw	low _dbuf
  6765   0011C8  25AB               	addwf	efgtoa@n& (0+255),w,b
  6766   0011CA  6E03               	movwf	strcpy@dest^0,c
  6767   0011CC  0E01               	movlw	high _dbuf
  6768   0011CE  21AC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6769   0011D0  6E04               	movwf	(strcpy@dest+1)^0,c
  6770   0011D2  0ED0               	movlw	low STR_18
  6771   0011D4  6E05               	movwf	strcpy@src^0,c
  6772   0011D6  EC71  F029         	call	_strcpy	;wreg free
  6773   0011DA                     l5814:
  6774                           
  6775                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  6776   0011DA  0100               	movlb	0	; () banked
  6777   0011DC  0EFD               	movlw	253
  6778   0011DE  2796               	addwf	efgtoa@w& (0+255),f,b
  6779   0011E0  0EFF               	movlw	255
  6780   0011E2  2397               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6781   0011E4                     
  6782                           ; BSR set to: 0
  6783                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  6784   0011E4  C07C  F014         	movff	efgtoa@fp,pad@fp
  6785   0011E8  C07D  F015         	movff	efgtoa@fp+1,pad@fp+1
  6786   0011EC  0E22               	movlw	low _dbuf
  6787   0011EE  6E16               	movwf	pad@buf^0,c
  6788   0011F0  0E01               	movlw	high _dbuf
  6789   0011F2  6E17               	movwf	(pad@buf+1)^0,c
  6790   0011F4  C096  F018         	movff	efgtoa@w,pad@p
  6791   0011F8  C097  F019         	movff	efgtoa@w+1,pad@p+1
  6792   0011FC  EC01  F028         	call	_pad	;wreg free
  6793   001200  EF6B  F00D         	goto	l1133
  6794   001204                     l5820:
  6795                           
  6796                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  6797   001204  C0A7  F003         	movff	efgtoa@g,___fpclassifyf@x
  6798   001208  C0A8  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6799   00120C  C0A9  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6800   001210  C0AA  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6801   001214  ECF5  F024         	call	___fpclassifyf	;wreg free
  6802   001218  5003               	movf	?___fpclassifyf^0,w,c
  6803   00121A  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  6804   00121C  A4D8               	btfss	status,2,c
  6805   00121E  EF13  F009         	goto	u7511
  6806   001222  EF15  F009         	goto	u7510
  6807   001226                     u7511:
  6808   001226  EF33  F009         	goto	l5838
  6809   00122A                     u7510:
  6810   00122A                     
  6811                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  6812   00122A  0100               	movlb	0	; () banked
  6813   00122C  51A6               	movf	efgtoa@sign& (0+255),w,b
  6814   00122E  B4D8               	btfsc	status,2,c
  6815   001230  EF1C  F009         	goto	u7521
  6816   001234  EF1E  F009         	goto	u7520
  6817   001238                     u7521:
  6818   001238  EF27  F009         	goto	l5830
  6819   00123C                     u7520:
  6820   00123C                     
  6821                           ; BSR set to: 0
  6822                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  6823   00123C  C0A6  F122         	movff	efgtoa@sign,_dbuf
  6824   001240                     
  6825                           ; BSR set to: 0
  6826                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
  6827   001240  0796               	decf	efgtoa@w& (0+255),f,b
  6828   001242  A0D8               	btfss	status,0,c
  6829   001244  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  6830   001246                     
  6831                           ; BSR set to: 0
  6832                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  6833   001246  0E00               	movlw	0
  6834   001248  6FAC               	movwf	(efgtoa@n+1)& (0+255),b
  6835   00124A  0E01               	movlw	1
  6836   00124C  6FAB               	movwf	efgtoa@n& (0+255),b
  6837   00124E                     l5830:
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  6841   00124E  0E22               	movlw	low _dbuf
  6842   001250  25AB               	addwf	efgtoa@n& (0+255),w,b
  6843   001252  6E03               	movwf	strcpy@dest^0,c
  6844   001254  0E01               	movlw	high _dbuf
  6845   001256  21AC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6846   001258  6E04               	movwf	(strcpy@dest+1)^0,c
  6847   00125A  0ED4               	movlw	low STR_21
  6848   00125C  6E05               	movwf	strcpy@src^0,c
  6849   00125E  EC71  F029         	call	_strcpy	;wreg free
  6850   001262  EFED  F008         	goto	l5814
  6851   001266                     l5838:
  6852                           
  6853                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  6854   001266  0E00               	movlw	0
  6855   001268  0100               	movlb	0	; () banked
  6856   00126A  6FAD               	movwf	efgtoa@u& (0+255),b
  6857   00126C  0E00               	movlw	0
  6858   00126E  6FAE               	movwf	(efgtoa@u+1)& (0+255),b
  6859   001270  0E80               	movlw	128
  6860   001272  6FAF               	movwf	(efgtoa@u+2)& (0+255),b
  6861   001274  0E3F               	movlw	63
  6862   001276  6FB0               	movwf	(efgtoa@u+3)& (0+255),b
  6863                           
  6864                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  6865   001278  0E00               	movlw	0
  6866   00127A  6F95               	movwf	(efgtoa@e+1)& (0+255),b
  6867   00127C  0E00               	movlw	0
  6868   00127E  6F94               	movwf	efgtoa@e& (0+255),b
  6869   001280                     
  6870                           ; BSR set to: 0
  6871                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  6872   001280  C0A7  F003         	movff	efgtoa@g,___fleq@ff1
  6873   001284  C0A8  F004         	movff	efgtoa@g+1,___fleq@ff1+1
  6874   001288  C0A9  F005         	movff	efgtoa@g+2,___fleq@ff1+2
  6875   00128C  C0AA  F006         	movff	efgtoa@g+3,___fleq@ff1+3
  6876   001290  0E00               	movlw	0
  6877   001292  6E07               	movwf	___fleq@ff2^0,c
  6878   001294  0E00               	movlw	0
  6879   001296  6E08               	movwf	(___fleq@ff2+1)^0,c
  6880   001298  0E00               	movlw	0
  6881   00129A  6E09               	movwf	(___fleq@ff2+2)^0,c
  6882   00129C  0E00               	movlw	0
  6883   00129E  6E0A               	movwf	(___fleq@ff2+3)^0,c
  6884   0012A0  EC59  F027         	call	___fleq	;wreg free
  6885   0012A4  B0D8               	btfsc	status,0,c
  6886   0012A6  EF57  F009         	goto	u7531
  6887   0012AA  EF59  F009         	goto	u7530
  6888   0012AE                     u7531:
  6889   0012AE  EF38  F00A         	goto	l1136
  6890   0012B2                     u7530:
  6891   0012B2  EF66  F009         	goto	l5846
  6892   0012B6                     l1138:
  6893                           
  6894                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  6895   0012B6  C098  F0AD         	movff	efgtoa@ou,efgtoa@u
  6896   0012BA  C099  F0AE         	movff	efgtoa@ou+1,efgtoa@u+1
  6897   0012BE  C09A  F0AF         	movff	efgtoa@ou+2,efgtoa@u+2
  6898   0012C2  C09B  F0B0         	movff	efgtoa@ou+3,efgtoa@u+3
  6899   0012C6                     
  6900                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
  6901   0012C6  0100               	movlb	0	; () banked
  6902   0012C8  4B94               	infsnz	efgtoa@e& (0+255),f,b
  6903   0012CA  2B95               	incf	(efgtoa@e+1)& (0+255),f,b
  6904   0012CC                     l5846:
  6905                           
  6906                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  6907   0012CC  C0AD  F011         	movff	efgtoa@u,___flmul@b
  6908   0012D0  C0AE  F012         	movff	efgtoa@u+1,___flmul@b+1
  6909   0012D4  C0AF  F013         	movff	efgtoa@u+2,___flmul@b+2
  6910   0012D8  C0B0  F014         	movff	efgtoa@u+3,___flmul@b+3
  6911   0012DC  0E00               	movlw	0
  6912   0012DE  6E15               	movwf	___flmul@a^0,c
  6913   0012E0  0E00               	movlw	0
  6914   0012E2  6E16               	movwf	(___flmul@a+1)^0,c
  6915   0012E4  0E20               	movlw	32
  6916   0012E6  6E17               	movwf	(___flmul@a+2)^0,c
  6917   0012E8  0E41               	movlw	65
  6918   0012EA  6E18               	movwf	(___flmul@a+3)^0,c
  6919   0012EC  EC51  F012         	call	___flmul	;wreg free
  6920   0012F0  C011  F098         	movff	?___flmul,efgtoa@ou
  6921   0012F4  C012  F099         	movff	?___flmul+1,efgtoa@ou+1
  6922   0012F8  C013  F09A         	movff	?___flmul+2,efgtoa@ou+2
  6923   0012FC  C014  F09B         	movff	?___flmul+3,efgtoa@ou+3
  6924   001300  0100               	movlb	0	; () banked
  6925   001302  5198               	movf	efgtoa@ou& (0+255),w,b
  6926   001304  5DA7               	subwf	efgtoa@g& (0+255),w,b
  6927   001306  6E03               	movwf	labs@a^0,c
  6928   001308  5199               	movf	(efgtoa@ou+1)& (0+255),w,b
  6929   00130A  59A8               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6930   00130C  6E04               	movwf	(labs@a+1)^0,c
  6931   00130E  519A               	movf	(efgtoa@ou+2)& (0+255),w,b
  6932   001310  59A9               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6933   001312  6E05               	movwf	(labs@a+2)^0,c
  6934   001314  519B               	movf	(efgtoa@ou+3)& (0+255),w,b
  6935   001316  59AA               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6936   001318  6E06               	movwf	(labs@a+3)^0,c
  6937   00131A  EC52  F028         	call	_labs	;wreg free
  6938   00131E  BE06               	btfsc	(?_labs+3)^0,7,c
  6939   001320  EF9D  F009         	goto	u7541
  6940   001324  5006               	movf	(?_labs+3)^0,w,c
  6941   001326  1005               	iorwf	(?_labs+2)^0,w,c
  6942   001328  1004               	iorwf	(?_labs+1)^0,w,c
  6943   00132A  E109               	bnz	u7540
  6944   00132C  0E02               	movlw	2
  6945   00132E  5C03               	subwf	?_labs^0,w,c
  6946   001330  A0D8               	btfss	status,0,c
  6947   001332  EF9D  F009         	goto	u7541
  6948   001336  EF9F  F009         	goto	u7540
  6949   00133A                     u7541:
  6950   00133A  EF5B  F009         	goto	l1138
  6951   00133E                     u7540:
  6952   00133E  C098  F02A         	movff	efgtoa@ou,___flge@ff1
  6953   001342  C099  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  6954   001346  C09A  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  6955   00134A  C09B  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  6956   00134E  C0A7  F02E         	movff	efgtoa@g,___flge@ff2
  6957   001352  C0A8  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  6958   001356  C0A9  F030         	movff	efgtoa@g+2,___flge@ff2+2
  6959   00135A  C0AA  F031         	movff	efgtoa@g+3,___flge@ff2+3
  6960   00135E  EC73  F024         	call	___flge	;wreg free
  6961   001362  A0D8               	btfss	status,0,c
  6962   001364  EFB6  F009         	goto	u7551
  6963   001368  EFB8  F009         	goto	u7550
  6964   00136C                     u7551:
  6965   00136C  EF5B  F009         	goto	l1138
  6966   001370                     u7550:
  6967   001370                     
  6968                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  6969   001370  0100               	movlb	0	; () banked
  6970   001372  51AD               	movf	efgtoa@u& (0+255),w,b
  6971   001374  5DA7               	subwf	efgtoa@g& (0+255),w,b
  6972   001376  6E03               	movwf	labs@a^0,c
  6973   001378  51AE               	movf	(efgtoa@u+1)& (0+255),w,b
  6974   00137A  59A8               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6975   00137C  6E04               	movwf	(labs@a+1)^0,c
  6976   00137E  51AF               	movf	(efgtoa@u+2)& (0+255),w,b
  6977   001380  59A9               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6978   001382  6E05               	movwf	(labs@a+2)^0,c
  6979   001384  51B0               	movf	(efgtoa@u+3)& (0+255),w,b
  6980   001386  59AA               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6981   001388  6E06               	movwf	(labs@a+3)^0,c
  6982   00138A  EC52  F028         	call	_labs	;wreg free
  6983   00138E  BE06               	btfsc	(?_labs+3)^0,7,c
  6984   001390  EFD7  F009         	goto	u7560
  6985   001394  5006               	movf	(?_labs+3)^0,w,c
  6986   001396  1005               	iorwf	(?_labs+2)^0,w,c
  6987   001398  1004               	iorwf	(?_labs+1)^0,w,c
  6988   00139A  E107               	bnz	u7561
  6989   00139C  0E02               	movlw	2
  6990   00139E  5C03               	subwf	?_labs^0,w,c
  6991   0013A0  B0D8               	btfsc	status,0,c
  6992   0013A2  EFD5  F009         	goto	u7561
  6993   0013A6  EFD7  F009         	goto	u7560
  6994   0013AA                     u7561:
  6995   0013AA  EF1F  F00A         	goto	l5864
  6996   0013AE                     u7560:
  6997   0013AE                     l5854:
  6998                           
  6999                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
  7000   0013AE  C0AD  F0A7         	movff	efgtoa@u,efgtoa@g
  7001   0013B2  C0AE  F0A8         	movff	efgtoa@u+1,efgtoa@g+1
  7002   0013B6  C0AF  F0A9         	movff	efgtoa@u+2,efgtoa@g+2
  7003   0013BA  C0B0  F0AA         	movff	efgtoa@u+3,efgtoa@g+3
  7004                           
  7005                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
  7006   0013BE  EF38  F00A         	goto	l1136
  7007   0013C2                     l5856:
  7008                           
  7009                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  7010   0013C2  C0AD  F02A         	movff	efgtoa@u,___fldiv@b
  7011   0013C6  C0AE  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  7012   0013CA  C0AF  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  7013   0013CE  C0B0  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  7014   0013D2  0E00               	movlw	0
  7015   0013D4  6E2E               	movwf	___fldiv@a^0,c
  7016   0013D6  0E00               	movlw	0
  7017   0013D8  6E2F               	movwf	(___fldiv@a+1)^0,c
  7018   0013DA  0E20               	movlw	32
  7019   0013DC  6E30               	movwf	(___fldiv@a+2)^0,c
  7020   0013DE  0E41               	movlw	65
  7021   0013E0  6E31               	movwf	(___fldiv@a+3)^0,c
  7022   0013E2  EC29  F018         	call	___fldiv	;wreg free
  7023   0013E6  C02A  F0AD         	movff	?___fldiv,efgtoa@u
  7024   0013EA  C02B  F0AE         	movff	?___fldiv+1,efgtoa@u+1
  7025   0013EE  C02C  F0AF         	movff	?___fldiv+2,efgtoa@u+2
  7026   0013F2  C02D  F0B0         	movff	?___fldiv+3,efgtoa@u+3
  7027   0013F6                     
  7028                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
  7029   0013F6  0100               	movlb	0	; () banked
  7030   0013F8  0794               	decf	efgtoa@e& (0+255),f,b
  7031   0013FA  A0D8               	btfss	status,0,c
  7032   0013FC  0795               	decf	(efgtoa@e+1)& (0+255),f,b
  7033   0013FE                     
  7034                           ; BSR set to: 0
  7035                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  7036   0013FE  51AD               	movf	efgtoa@u& (0+255),w,b
  7037   001400  5DA7               	subwf	efgtoa@g& (0+255),w,b
  7038   001402  6E03               	movwf	labs@a^0,c
  7039   001404  51AE               	movf	(efgtoa@u+1)& (0+255),w,b
  7040   001406  59A8               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7041   001408  6E04               	movwf	(labs@a+1)^0,c
  7042   00140A  51AF               	movf	(efgtoa@u+2)& (0+255),w,b
  7043   00140C  59A9               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7044   00140E  6E05               	movwf	(labs@a+2)^0,c
  7045   001410  51B0               	movf	(efgtoa@u+3)& (0+255),w,b
  7046   001412  59AA               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7047   001414  6E06               	movwf	(labs@a+3)^0,c
  7048   001416  EC52  F028         	call	_labs	;wreg free
  7049   00141A  BE06               	btfsc	(?_labs+3)^0,7,c
  7050   00141C  EF1D  F00A         	goto	u7570
  7051   001420  5006               	movf	(?_labs+3)^0,w,c
  7052   001422  1005               	iorwf	(?_labs+2)^0,w,c
  7053   001424  1004               	iorwf	(?_labs+1)^0,w,c
  7054   001426  E107               	bnz	u7571
  7055   001428  0E02               	movlw	2
  7056   00142A  5C03               	subwf	?_labs^0,w,c
  7057   00142C  B0D8               	btfsc	status,0,c
  7058   00142E  EF1B  F00A         	goto	u7571
  7059   001432  EF1D  F00A         	goto	u7570
  7060   001436                     u7571:
  7061   001436  EF1F  F00A         	goto	l5864
  7062   00143A                     u7570:
  7063   00143A  EFD7  F009         	goto	l5854
  7064   00143E                     l5864:
  7065                           
  7066                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  7067   00143E  C0A7  F02A         	movff	efgtoa@g,___flge@ff1
  7068   001442  C0A8  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  7069   001446  C0A9  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  7070   00144A  C0AA  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  7071   00144E  C0AD  F02E         	movff	efgtoa@u,___flge@ff2
  7072   001452  C0AE  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  7073   001456  C0AF  F030         	movff	efgtoa@u+2,___flge@ff2+2
  7074   00145A  C0B0  F031         	movff	efgtoa@u+3,___flge@ff2+3
  7075   00145E  EC73  F024         	call	___flge	;wreg free
  7076   001462  A0D8               	btfss	status,0,c
  7077   001464  EF36  F00A         	goto	u7581
  7078   001468  EF38  F00A         	goto	u7580
  7079   00146C                     u7581:
  7080   00146C  EFE1  F009         	goto	l5856
  7081   001470                     u7580:
  7082   001470                     l1136:
  7083                           
  7084                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  7085   001470  C082  F08E         	movff	efgtoa@c,efgtoa@mode
  7086                           
  7087                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  7088   001474  C08E  F08F         	movff	efgtoa@mode,efgtoa@nmode
  7089   001478                     
  7090                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  7091   001478  BE5C               	btfsc	(_prec+1)^0,7,c
  7092   00147A  EF41  F00A         	goto	u7591
  7093   00147E  EF43  F00A         	goto	u7590
  7094   001482                     u7591:
  7095   001482  EF49  F00A         	goto	l5870
  7096   001486                     u7590:
  7097   001486  C05B  F087         	movff	_prec,efgtoa@p
  7098   00148A  C05C  F088         	movff	_prec+1,efgtoa@p+1
  7099   00148E  EF4E  F00A         	goto	l5872
  7100   001492                     l5870:
  7101   001492  0E00               	movlw	0
  7102   001494  0100               	movlb	0	; () banked
  7103   001496  6F88               	movwf	(efgtoa@p+1)& (0+255),b
  7104   001498  0E06               	movlw	6
  7105   00149A  6F87               	movwf	efgtoa@p& (0+255),b
  7106   00149C                     l5872:
  7107                           
  7108                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
  7109   00149C  C087  F092         	movff	efgtoa@p,efgtoa@m
  7110   0014A0  C088  F093         	movff	efgtoa@p+1,efgtoa@m+1
  7111   0014A4                     
  7112                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
  7113   0014A4  0100               	movlb	0	; () banked
  7114   0014A6  4B92               	infsnz	efgtoa@m& (0+255),f,b
  7115   0014A8  2B93               	incf	(efgtoa@m+1)& (0+255),f,b
  7116   0014AA                     
  7117                           ; BSR set to: 0
  7118                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  7119   0014AA  0E66               	movlw	102
  7120   0014AC  198F               	xorwf	efgtoa@nmode& (0+255),w,b
  7121   0014AE  A4D8               	btfss	status,2,c
  7122   0014B0  EF5C  F00A         	goto	u7601
  7123   0014B4  EF5E  F00A         	goto	u7600
  7124   0014B8                     u7601:
  7125   0014B8  EF7E  F00A         	goto	l5886
  7126   0014BC                     u7600:
  7127   0014BC                     
  7128                           ; BSR set to: 0
  7129                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  7130   0014BC  BF95               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7131   0014BE  EF65  F00A         	goto	u7610
  7132   0014C2  EF63  F00A         	goto	u7611
  7133   0014C6                     u7611:
  7134   0014C6  EF71  F00A         	goto	l5882
  7135   0014CA                     u7610:
  7136   0014CA                     
  7137                           ; BSR set to: 0
  7138                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  7139   0014CA  0E00               	movlw	0
  7140   0014CC  6FAD               	movwf	efgtoa@u& (0+255),b
  7141   0014CE  0E00               	movlw	0
  7142   0014D0  6FAE               	movwf	(efgtoa@u+1)& (0+255),b
  7143   0014D2  0E80               	movlw	128
  7144   0014D4  6FAF               	movwf	(efgtoa@u+2)& (0+255),b
  7145   0014D6  0E3F               	movlw	63
  7146   0014D8  6FB0               	movwf	(efgtoa@u+3)& (0+255),b
  7147                           
  7148                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  7149   0014DA  0E00               	movlw	0
  7150   0014DC  6F95               	movwf	(efgtoa@e+1)& (0+255),b
  7151   0014DE  0E00               	movlw	0
  7152   0014E0  6F94               	movwf	efgtoa@e& (0+255),b
  7153   0014E2                     l5882:
  7154                           
  7155                           ; BSR set to: 0
  7156                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  7157   0014E2  0E67               	movlw	103
  7158   0014E4  198E               	xorwf	efgtoa@mode& (0+255),w,b
  7159   0014E6  B4D8               	btfsc	status,2,c
  7160   0014E8  EF78  F00A         	goto	u7621
  7161   0014EC  EF7A  F00A         	goto	u7620
  7162   0014F0                     u7621:
  7163   0014F0  EF7E  F00A         	goto	l5886
  7164   0014F4                     u7620:
  7165   0014F4                     
  7166                           ; BSR set to: 0
  7167                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  7168   0014F4  5194               	movf	efgtoa@e& (0+255),w,b
  7169   0014F6  2792               	addwf	efgtoa@m& (0+255),f,b
  7170   0014F8  5195               	movf	(efgtoa@e+1)& (0+255),w,b
  7171   0014FA  2393               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7172   0014FC                     l5886:
  7173                           
  7174                           ; BSR set to: 0
  7175                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  7176   0014FC  0E00               	movlw	0
  7177   0014FE  6F9D               	movwf	(efgtoa@i+1)& (0+255),b
  7178   001500  0E00               	movlw	0
  7179   001502  6F9C               	movwf	efgtoa@i& (0+255),b
  7180   001504                     
  7181                           ; BSR set to: 0
  7182                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  7183   001504  C0A7  F09E         	movff	efgtoa@g,efgtoa@h
  7184   001508  C0A8  F09F         	movff	efgtoa@g+1,efgtoa@h+1
  7185   00150C  C0A9  F0A0         	movff	efgtoa@g+2,efgtoa@h+2
  7186   001510  C0AA  F0A1         	movff	efgtoa@g+3,efgtoa@h+3
  7187   001514                     
  7188                           ; BSR set to: 0
  7189                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  7190   001514  C0AD  F098         	movff	efgtoa@u,efgtoa@ou
  7191   001518  C0AE  F099         	movff	efgtoa@u+1,efgtoa@ou+1
  7192   00151C  C0AF  F09A         	movff	efgtoa@u+2,efgtoa@ou+2
  7193   001520  C0B0  F09B         	movff	efgtoa@u+3,efgtoa@ou+3
  7194                           
  7195                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  7196   001524  EF0F  F00B         	goto	l5900
  7197   001528                     l5892:
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  7201   001528  C09E  F02A         	movff	efgtoa@h,___fldiv@b
  7202   00152C  C09F  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  7203   001530  C0A0  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  7204   001534  C0A1  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  7205   001538  C0AD  F02E         	movff	efgtoa@u,___fldiv@a
  7206   00153C  C0AE  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  7207   001540  C0AF  F030         	movff	efgtoa@u+2,___fldiv@a+2
  7208   001544  C0B0  F031         	movff	efgtoa@u+3,___fldiv@a+3
  7209   001548  EC29  F018         	call	___fldiv	;wreg free
  7210   00154C  C02A  F043         	movff	?___fldiv,floorf@x
  7211   001550  C02B  F044         	movff	?___fldiv+1,floorf@x+1
  7212   001554  C02C  F045         	movff	?___fldiv+2,floorf@x+2
  7213   001558  C02D  F046         	movff	?___fldiv+3,floorf@x+3
  7214   00155C  EC43  F01D         	call	_floorf	;wreg free
  7215   001560  C043  F0A2         	movff	?_floorf,efgtoa@l
  7216   001564  C044  F0A3         	movff	?_floorf+1,efgtoa@l+1
  7217   001568  C045  F0A4         	movff	?_floorf+2,efgtoa@l+2
  7218   00156C  C046  F0A5         	movff	?_floorf+3,efgtoa@l+3
  7219                           
  7220                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  7221   001570  C0A2  F053         	movff	efgtoa@l,___fltol@f1
  7222   001574  C0A3  F054         	movff	efgtoa@l+1,___fltol@f1+1
  7223   001578  C0A4  F055         	movff	efgtoa@l+2,___fltol@f1+2
  7224   00157C  C0A5  F056         	movff	efgtoa@l+3,___fltol@f1+3
  7225   001580  ECEF  F023         	call	___fltol	;wreg free
  7226   001584  C053  F090         	movff	?___fltol,efgtoa@d
  7227   001588  C054  F091         	movff	?___fltol+1,efgtoa@d+1
  7228   00158C                     
  7229                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  7230   00158C  C09E  F053         	movff	efgtoa@h,___flsub@b
  7231   001590  C09F  F054         	movff	efgtoa@h+1,___flsub@b+1
  7232   001594  C0A0  F055         	movff	efgtoa@h+2,___flsub@b+2
  7233   001598  C0A1  F056         	movff	efgtoa@h+3,___flsub@b+3
  7234   00159C  C0A2  F015         	movff	efgtoa@l,___flmul@a
  7235   0015A0  C0A3  F016         	movff	efgtoa@l+1,___flmul@a+1
  7236   0015A4  C0A4  F017         	movff	efgtoa@l+2,___flmul@a+2
  7237   0015A8  C0A5  F018         	movff	efgtoa@l+3,___flmul@a+3
  7238   0015AC  C0AD  F011         	movff	efgtoa@u,___flmul@b
  7239   0015B0  C0AE  F012         	movff	efgtoa@u+1,___flmul@b+1
  7240   0015B4  C0AF  F013         	movff	efgtoa@u+2,___flmul@b+2
  7241   0015B8  C0B0  F014         	movff	efgtoa@u+3,___flmul@b+3
  7242   0015BC  EC51  F012         	call	___flmul	;wreg free
  7243   0015C0  C011  F057         	movff	?___flmul,___flsub@a
  7244   0015C4  C012  F058         	movff	?___flmul+1,___flsub@a+1
  7245   0015C8  C013  F059         	movff	?___flmul+2,___flsub@a+2
  7246   0015CC  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  7247   0015D0  ECEC  F028         	call	___flsub	;wreg free
  7248   0015D4  C053  F09E         	movff	?___flsub,efgtoa@h
  7249   0015D8  C054  F09F         	movff	?___flsub+1,efgtoa@h+1
  7250   0015DC  C055  F0A0         	movff	?___flsub+2,efgtoa@h+2
  7251   0015E0  C056  F0A1         	movff	?___flsub+3,efgtoa@h+3
  7252   0015E4                     
  7253                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  7254   0015E4  C0AD  F02A         	movff	efgtoa@u,___fldiv@b
  7255   0015E8  C0AE  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  7256   0015EC  C0AF  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  7257   0015F0  C0B0  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  7258   0015F4  0E00               	movlw	0
  7259   0015F6  6E2E               	movwf	___fldiv@a^0,c
  7260   0015F8  0E00               	movlw	0
  7261   0015FA  6E2F               	movwf	(___fldiv@a+1)^0,c
  7262   0015FC  0E20               	movlw	32
  7263   0015FE  6E30               	movwf	(___fldiv@a+2)^0,c
  7264   001600  0E41               	movlw	65
  7265   001602  6E31               	movwf	(___fldiv@a+3)^0,c
  7266   001604  EC29  F018         	call	___fldiv	;wreg free
  7267   001608  C02A  F0AD         	movff	?___fldiv,efgtoa@u
  7268   00160C  C02B  F0AE         	movff	?___fldiv+1,efgtoa@u+1
  7269   001610  C02C  F0AF         	movff	?___fldiv+2,efgtoa@u+2
  7270   001614  C02D  F0B0         	movff	?___fldiv+3,efgtoa@u+3
  7271   001618                     
  7272                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
  7273   001618  0100               	movlb	0	; () banked
  7274   00161A  4B9C               	infsnz	efgtoa@i& (0+255),f,b
  7275   00161C  2B9D               	incf	(efgtoa@i+1)& (0+255),f,b
  7276   00161E                     l5900:
  7277                           
  7278                           ; BSR set to: 0
  7279                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  7280   00161E  5192               	movf	efgtoa@m& (0+255),w,b
  7281   001620  5D9C               	subwf	efgtoa@i& (0+255),w,b
  7282   001622  519D               	movf	(efgtoa@i+1)& (0+255),w,b
  7283   001624  0A80               	xorlw	128
  7284   001626  6F83               	movwf	??_efgtoa& (0+255),b
  7285   001628  5193               	movf	(efgtoa@m+1)& (0+255),w,b
  7286   00162A  0A80               	xorlw	128
  7287   00162C  5983               	subwfb	??_efgtoa& (0+255),w,b
  7288   00162E  A0D8               	btfss	status,0,c
  7289   001630  EF1C  F00B         	goto	u7631
  7290   001634  EF1E  F00B         	goto	u7630
  7291   001638                     u7631:
  7292   001638  EF94  F00A         	goto	l5892
  7293   00163C                     u7630:
  7294   00163C                     
  7295                           ; BSR set to: 0
  7296                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  7297   00163C  C0AD  F011         	movff	efgtoa@u,___flmul@b
  7298   001640  C0AE  F012         	movff	efgtoa@u+1,___flmul@b+1
  7299   001644  C0AF  F013         	movff	efgtoa@u+2,___flmul@b+2
  7300   001648  C0B0  F014         	movff	efgtoa@u+3,___flmul@b+3
  7301   00164C  0E00               	movlw	0
  7302   00164E  6E15               	movwf	___flmul@a^0,c
  7303   001650  0E00               	movlw	0
  7304   001652  6E16               	movwf	(___flmul@a+1)^0,c
  7305   001654  0EA0               	movlw	160
  7306   001656  6E17               	movwf	(___flmul@a+2)^0,c
  7307   001658  0E40               	movlw	64
  7308   00165A  6E18               	movwf	(___flmul@a+3)^0,c
  7309   00165C  EC51  F012         	call	___flmul	;wreg free
  7310   001660  C011  F0A2         	movff	?___flmul,efgtoa@l
  7311   001664  C012  F0A3         	movff	?___flmul+1,efgtoa@l+1
  7312   001668  C013  F0A4         	movff	?___flmul+2,efgtoa@l+2
  7313   00166C  C014  F0A5         	movff	?___flmul+3,efgtoa@l+3
  7314   001670                     
  7315                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  7316   001670  C09E  F02A         	movff	efgtoa@h,___flge@ff1
  7317   001674  C09F  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  7318   001678  C0A0  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  7319   00167C  C0A1  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  7320   001680  C0A2  F02E         	movff	efgtoa@l,___flge@ff2
  7321   001684  C0A3  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  7322   001688  C0A4  F030         	movff	efgtoa@l+2,___flge@ff2+2
  7323   00168C  C0A5  F031         	movff	efgtoa@l+3,___flge@ff2+3
  7324   001690  EC73  F024         	call	___flge	;wreg free
  7325   001694  B0D8               	btfsc	status,0,c
  7326   001696  EF4F  F00B         	goto	u7641
  7327   00169A  EF51  F00B         	goto	u7640
  7328   00169E                     u7641:
  7329   00169E  EF5C  F00B         	goto	l5908
  7330   0016A2                     u7640:
  7331   0016A2                     
  7332                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  7333   0016A2  0E00               	movlw	0
  7334   0016A4  0100               	movlb	0	; () banked
  7335   0016A6  6FA2               	movwf	efgtoa@l& (0+255),b
  7336   0016A8  0E00               	movlw	0
  7337   0016AA  6FA3               	movwf	(efgtoa@l+1)& (0+255),b
  7338   0016AC  0E00               	movlw	0
  7339   0016AE  6FA4               	movwf	(efgtoa@l+2)& (0+255),b
  7340   0016B0  0E00               	movlw	0
  7341   0016B2  6FA5               	movwf	(efgtoa@l+3)& (0+255),b
  7342                           
  7343                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 748:     } else {
  7344   0016B4  EF85  F00B         	goto	l5914
  7345   0016B8                     l5908:
  7346                           
  7347                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  7348   0016B8  C09E  F003         	movff	efgtoa@h,___fleq@ff1
  7349   0016BC  C09F  F004         	movff	efgtoa@h+1,___fleq@ff1+1
  7350   0016C0  C0A0  F005         	movff	efgtoa@h+2,___fleq@ff1+2
  7351   0016C4  C0A1  F006         	movff	efgtoa@h+3,___fleq@ff1+3
  7352   0016C8  C0A2  F007         	movff	efgtoa@l,___fleq@ff2
  7353   0016CC  C0A3  F008         	movff	efgtoa@l+1,___fleq@ff2+1
  7354   0016D0  C0A4  F009         	movff	efgtoa@l+2,___fleq@ff2+2
  7355   0016D4  C0A5  F00A         	movff	efgtoa@l+3,___fleq@ff2+3
  7356   0016D8  EC59  F027         	call	___fleq	;wreg free
  7357   0016DC  A0D8               	btfss	status,0,c
  7358   0016DE  EF73  F00B         	goto	u7651
  7359   0016E2  EF75  F00B         	goto	u7650
  7360   0016E6                     u7651:
  7361   0016E6  EF85  F00B         	goto	l5914
  7362   0016EA                     u7650:
  7363   0016EA  0100               	movlb	0	; () banked
  7364   0016EC  B190               	btfsc	efgtoa@d& (0+255),0,b
  7365   0016EE  EF7B  F00B         	goto	u7661
  7366   0016F2  EF7D  F00B         	goto	u7660
  7367   0016F6                     u7661:
  7368   0016F6  EF85  F00B         	goto	l5914
  7369   0016FA                     u7660:
  7370   0016FA                     
  7371                           ; BSR set to: 0
  7372                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  7373   0016FA  0E00               	movlw	0
  7374   0016FC  6FA2               	movwf	efgtoa@l& (0+255),b
  7375   0016FE  0E00               	movlw	0
  7376   001700  6FA3               	movwf	(efgtoa@l+1)& (0+255),b
  7377   001702  0E00               	movlw	0
  7378   001704  6FA4               	movwf	(efgtoa@l+2)& (0+255),b
  7379   001706  0E00               	movlw	0
  7380   001708  6FA5               	movwf	(efgtoa@l+3)& (0+255),b
  7381   00170A                     l5914:
  7382                           
  7383                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  7384   00170A  C0A7  F043         	movff	efgtoa@g,___fladd@b
  7385   00170E  C0A8  F044         	movff	efgtoa@g+1,___fladd@b+1
  7386   001712  C0A9  F045         	movff	efgtoa@g+2,___fladd@b+2
  7387   001716  C0AA  F046         	movff	efgtoa@g+3,___fladd@b+3
  7388   00171A  C0A2  F047         	movff	efgtoa@l,___fladd@a
  7389   00171E  C0A3  F048         	movff	efgtoa@l+1,___fladd@a+1
  7390   001722  C0A4  F049         	movff	efgtoa@l+2,___fladd@a+2
  7391   001726  C0A5  F04A         	movff	efgtoa@l+3,___fladd@a+3
  7392   00172A  ECF1  F00F         	call	___fladd	;wreg free
  7393   00172E  C043  F09E         	movff	?___fladd,efgtoa@h
  7394   001732  C044  F09F         	movff	?___fladd+1,efgtoa@h+1
  7395   001736  C045  F0A0         	movff	?___fladd+2,efgtoa@h+2
  7396   00173A  C046  F0A1         	movff	?___fladd+3,efgtoa@h+3
  7397   00173E                     
  7398                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  7399   00173E  C09E  F02A         	movff	efgtoa@h,___flge@ff1
  7400   001742  C09F  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  7401   001746  C0A0  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  7402   00174A  C0A1  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  7403   00174E  0E00               	movlw	0
  7404   001750  6E15               	movwf	___flmul@a^0,c
  7405   001752  0E00               	movlw	0
  7406   001754  6E16               	movwf	(___flmul@a+1)^0,c
  7407   001756  0E20               	movlw	32
  7408   001758  6E17               	movwf	(___flmul@a+2)^0,c
  7409   00175A  0E41               	movlw	65
  7410   00175C  6E18               	movwf	(___flmul@a+3)^0,c
  7411   00175E  C098  F011         	movff	efgtoa@ou,___flmul@b
  7412   001762  C099  F012         	movff	efgtoa@ou+1,___flmul@b+1
  7413   001766  C09A  F013         	movff	efgtoa@ou+2,___flmul@b+2
  7414   00176A  C09B  F014         	movff	efgtoa@ou+3,___flmul@b+3
  7415   00176E  EC51  F012         	call	___flmul	;wreg free
  7416   001772  C011  F02E         	movff	?___flmul,___flge@ff2
  7417   001776  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  7418   00177A  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  7419   00177E  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  7420   001782  EC73  F024         	call	___flge	;wreg free
  7421   001786  A0D8               	btfss	status,0,c
  7422   001788  EFC8  F00B         	goto	u7671
  7423   00178C  EFCA  F00B         	goto	u7670
  7424   001790                     u7671:
  7425   001790  EFF3  F00B         	goto	l5926
  7426   001794                     u7670:
  7427   001794                     
  7428                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
  7429   001794  0100               	movlb	0	; () banked
  7430   001796  4B94               	infsnz	efgtoa@e& (0+255),f,b
  7431   001798  2B95               	incf	(efgtoa@e+1)& (0+255),f,b
  7432   00179A                     
  7433                           ; BSR set to: 0
  7434                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  7435   00179A  C098  F011         	movff	efgtoa@ou,___flmul@b
  7436   00179E  C099  F012         	movff	efgtoa@ou+1,___flmul@b+1
  7437   0017A2  C09A  F013         	movff	efgtoa@ou+2,___flmul@b+2
  7438   0017A6  C09B  F014         	movff	efgtoa@ou+3,___flmul@b+3
  7439   0017AA  0E00               	movlw	0
  7440   0017AC  6E15               	movwf	___flmul@a^0,c
  7441   0017AE  0E00               	movlw	0
  7442   0017B0  6E16               	movwf	(___flmul@a+1)^0,c
  7443   0017B2  0E20               	movlw	32
  7444   0017B4  6E17               	movwf	(___flmul@a+2)^0,c
  7445   0017B6  0E41               	movlw	65
  7446   0017B8  6E18               	movwf	(___flmul@a+3)^0,c
  7447   0017BA  EC51  F012         	call	___flmul	;wreg free
  7448   0017BE  C011  F098         	movff	?___flmul,efgtoa@ou
  7449   0017C2  C012  F099         	movff	?___flmul+1,efgtoa@ou+1
  7450   0017C6  C013  F09A         	movff	?___flmul+2,efgtoa@ou+2
  7451   0017CA  C014  F09B         	movff	?___flmul+3,efgtoa@ou+3
  7452   0017CE                     
  7453                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  7454   0017CE  0E66               	movlw	102
  7455   0017D0  0100               	movlb	0	; () banked
  7456   0017D2  198F               	xorwf	efgtoa@nmode& (0+255),w,b
  7457   0017D4  A4D8               	btfss	status,2,c
  7458   0017D6  EFEF  F00B         	goto	u7681
  7459   0017DA  EFF1  F00B         	goto	u7680
  7460   0017DE                     u7681:
  7461   0017DE  EFF3  F00B         	goto	l5926
  7462   0017E2                     u7680:
  7463   0017E2                     
  7464                           ; BSR set to: 0
  7465                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
  7466   0017E2  4B92               	infsnz	efgtoa@m& (0+255),f,b
  7467   0017E4  2B93               	incf	(efgtoa@m+1)& (0+255),f,b
  7468   0017E6                     l5926:
  7469                           
  7470                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  7471   0017E6  C098  F0AD         	movff	efgtoa@ou,efgtoa@u
  7472   0017EA  C099  F0AE         	movff	efgtoa@ou+1,efgtoa@u+1
  7473   0017EE  C09A  F0AF         	movff	efgtoa@ou+2,efgtoa@u+2
  7474   0017F2  C09B  F0B0         	movff	efgtoa@ou+3,efgtoa@u+3
  7475   0017F6                     
  7476                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  7477   0017F6  C094  F085         	movff	efgtoa@e,efgtoa@ne
  7478   0017FA  C095  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  7479   0017FE                     
  7480                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  7481   0017FE  0E00               	movlw	0
  7482   001800  0100               	movlb	0	; () banked
  7483   001802  6F8D               	movwf	efgtoa@pp& (0+255),b
  7484   001804                     
  7485                           ; BSR set to: 0
  7486                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  7487   001804  0E00               	movlw	0
  7488   001806  6F8A               	movwf	(efgtoa@t+1)& (0+255),b
  7489   001808  0E00               	movlw	0
  7490   00180A  6F89               	movwf	efgtoa@t& (0+255),b
  7491   00180C                     
  7492                           ; BSR set to: 0
  7493                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  7494   00180C  0E00               	movlw	0
  7495   00180E  6F9D               	movwf	(efgtoa@i+1)& (0+255),b
  7496   001810  0E00               	movlw	0
  7497   001812  6F9C               	movwf	efgtoa@i& (0+255),b
  7498                           
  7499                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7500   001814  EFF1  F00C         	goto	l5976
  7501   001818                     l5936:
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  7505   001818  C09E  F02A         	movff	efgtoa@h,___fldiv@b
  7506   00181C  C09F  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  7507   001820  C0A0  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  7508   001824  C0A1  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  7509   001828  C0AD  F02E         	movff	efgtoa@u,___fldiv@a
  7510   00182C  C0AE  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  7511   001830  C0AF  F030         	movff	efgtoa@u+2,___fldiv@a+2
  7512   001834  C0B0  F031         	movff	efgtoa@u+3,___fldiv@a+3
  7513   001838  EC29  F018         	call	___fldiv	;wreg free
  7514   00183C  C02A  F043         	movff	?___fldiv,floorf@x
  7515   001840  C02B  F044         	movff	?___fldiv+1,floorf@x+1
  7516   001844  C02C  F045         	movff	?___fldiv+2,floorf@x+2
  7517   001848  C02D  F046         	movff	?___fldiv+3,floorf@x+3
  7518   00184C  EC43  F01D         	call	_floorf	;wreg free
  7519   001850  C043  F0A2         	movff	?_floorf,efgtoa@l
  7520   001854  C044  F0A3         	movff	?_floorf+1,efgtoa@l+1
  7521   001858  C045  F0A4         	movff	?_floorf+2,efgtoa@l+2
  7522   00185C  C046  F0A5         	movff	?_floorf+3,efgtoa@l+3
  7523                           
  7524                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  7525   001860  C0A2  F053         	movff	efgtoa@l,___fltol@f1
  7526   001864  C0A3  F054         	movff	efgtoa@l+1,___fltol@f1+1
  7527   001868  C0A4  F055         	movff	efgtoa@l+2,___fltol@f1+2
  7528   00186C  C0A5  F056         	movff	efgtoa@l+3,___fltol@f1+3
  7529   001870  ECEF  F023         	call	___fltol	;wreg free
  7530   001874  BE54               	btfsc	(?___fltol+1)^0,7,c
  7531   001876  EF48  F00C         	goto	u7690
  7532   00187A  5054               	movf	(?___fltol+1)^0,w,c
  7533   00187C  E107               	bnz	u7691
  7534   00187E  0E0A               	movlw	10
  7535   001880  5C53               	subwf	?___fltol^0,w,c
  7536   001882  B0D8               	btfsc	status,0,c
  7537   001884  EF46  F00C         	goto	u7691
  7538   001888  EF48  F00C         	goto	u7690
  7539   00188C                     u7691:
  7540   00188C  EF58  F00C         	goto	l5940
  7541   001890                     u7690:
  7542   001890  C0A2  F053         	movff	efgtoa@l,___fltol@f1
  7543   001894  C0A3  F054         	movff	efgtoa@l+1,___fltol@f1+1
  7544   001898  C0A4  F055         	movff	efgtoa@l+2,___fltol@f1+2
  7545   00189C  C0A5  F056         	movff	efgtoa@l+3,___fltol@f1+3
  7546   0018A0  ECEF  F023         	call	___fltol	;wreg free
  7547   0018A4  C053  F090         	movff	?___fltol,efgtoa@d
  7548   0018A8  C054  F091         	movff	?___fltol+1,efgtoa@d+1
  7549   0018AC  EF5D  F00C         	goto	l1166
  7550   0018B0                     l5940:
  7551   0018B0  0E00               	movlw	0
  7552   0018B2  0100               	movlb	0	; () banked
  7553   0018B4  6F91               	movwf	(efgtoa@d+1)& (0+255),b
  7554   0018B6  0E09               	movlw	9
  7555   0018B8  6F90               	movwf	efgtoa@d& (0+255),b
  7556   0018BA                     l1166:
  7557                           
  7558                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  7559   0018BA  0100               	movlb	0	; () banked
  7560   0018BC  518D               	movf	efgtoa@pp& (0+255),w,b
  7561   0018BE  A4D8               	btfss	status,2,c
  7562   0018C0  EF64  F00C         	goto	u7701
  7563   0018C4  EF66  F00C         	goto	u7700
  7564   0018C8                     u7701:
  7565   0018C8  EF8E  F00C         	goto	l5960
  7566   0018CC                     u7700:
  7567   0018CC                     
  7568                           ; BSR set to: 0
  7569   0018CC  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7570   0018CE  EF6D  F00C         	goto	u7710
  7571   0018D2  EF6B  F00C         	goto	u7711
  7572   0018D6                     u7711:
  7573   0018D6  EF8E  F00C         	goto	l5960
  7574   0018DA                     u7710:
  7575   0018DA                     
  7576                           ; BSR set to: 0
  7577                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  7578   0018DA  0E22               	movlw	low _dbuf
  7579   0018DC  25AB               	addwf	efgtoa@n& (0+255),w,b
  7580   0018DE  6ED9               	movwf	fsr2l,c
  7581   0018E0  0E01               	movlw	high _dbuf
  7582   0018E2  21AC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7583   0018E4  6EDA               	movwf	fsr2h,c
  7584   0018E6  0E2E               	movlw	46
  7585   0018E8  6EDF               	movwf	indf2,c
  7586   0018EA                     
  7587                           ; BSR set to: 0
  7588   0018EA  4BAB               	infsnz	efgtoa@n& (0+255),f,b
  7589   0018EC  2BAC               	incf	(efgtoa@n+1)& (0+255),f,b
  7590   0018EE                     
  7591                           ; BSR set to: 0
  7592                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  7593   0018EE  0796               	decf	efgtoa@w& (0+255),f,b
  7594   0018F0  A0D8               	btfss	status,0,c
  7595   0018F2  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  7596   0018F4                     
  7597                           ; BSR set to: 0
  7598                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  7599   0018F4  0E01               	movlw	1
  7600   0018F6  6F8D               	movwf	efgtoa@pp& (0+255),b
  7601   0018F8  EF8E  F00C         	goto	l5960
  7602   0018FC                     l5952:
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  7606   0018FC  0E22               	movlw	low _dbuf
  7607   0018FE  25AB               	addwf	efgtoa@n& (0+255),w,b
  7608   001900  6ED9               	movwf	fsr2l,c
  7609   001902  0E01               	movlw	high _dbuf
  7610   001904  21AC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7611   001906  6EDA               	movwf	fsr2h,c
  7612   001908  0E30               	movlw	48
  7613   00190A  6EDF               	movwf	indf2,c
  7614   00190C                     
  7615                           ; BSR set to: 0
  7616   00190C  4BAB               	infsnz	efgtoa@n& (0+255),f,b
  7617   00190E  2BAC               	incf	(efgtoa@n+1)& (0+255),f,b
  7618   001910                     
  7619                           ; BSR set to: 0
  7620                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  7621   001910  0796               	decf	efgtoa@w& (0+255),f,b
  7622   001912  A0D8               	btfss	status,0,c
  7623   001914  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  7624   001916                     
  7625                           ; BSR set to: 0
  7626                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  7627   001916  0789               	decf	efgtoa@t& (0+255),f,b
  7628   001918  A0D8               	btfss	status,0,c
  7629   00191A  078A               	decf	(efgtoa@t+1)& (0+255),f,b
  7630   00191C                     l5960:
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  7634   00191C  5189               	movf	efgtoa@t& (0+255),w,b
  7635   00191E  118A               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7636   001920  A4D8               	btfss	status,2,c
  7637   001922  EF95  F00C         	goto	u7721
  7638   001926  EF97  F00C         	goto	u7720
  7639   00192A                     u7721:
  7640   00192A  EF7E  F00C         	goto	l5952
  7641   00192E                     u7720:
  7642   00192E                     
  7643                           ; BSR set to: 0
  7644                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7645   00192E  0E22               	movlw	low _dbuf
  7646   001930  25AB               	addwf	efgtoa@n& (0+255),w,b
  7647   001932  6ED9               	movwf	fsr2l,c
  7648   001934  0E01               	movlw	high _dbuf
  7649   001936  21AC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7650   001938  6EDA               	movwf	fsr2h,c
  7651   00193A  5190               	movf	efgtoa@d& (0+255),w,b
  7652   00193C  0F30               	addlw	48
  7653   00193E  6EDF               	movwf	indf2,c
  7654   001940                     
  7655                           ; BSR set to: 0
  7656   001940  4BAB               	infsnz	efgtoa@n& (0+255),f,b
  7657   001942  2BAC               	incf	(efgtoa@n+1)& (0+255),f,b
  7658   001944                     
  7659                           ; BSR set to: 0
  7660                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  7661   001944  0796               	decf	efgtoa@w& (0+255),f,b
  7662   001946  A0D8               	btfss	status,0,c
  7663   001948  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  7664   00194A                     
  7665                           ; BSR set to: 0
  7666                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  7667   00194A  C09E  F053         	movff	efgtoa@h,___flsub@b
  7668   00194E  C09F  F054         	movff	efgtoa@h+1,___flsub@b+1
  7669   001952  C0A0  F055         	movff	efgtoa@h+2,___flsub@b+2
  7670   001956  C0A1  F056         	movff	efgtoa@h+3,___flsub@b+3
  7671   00195A  C0A2  F015         	movff	efgtoa@l,___flmul@a
  7672   00195E  C0A3  F016         	movff	efgtoa@l+1,___flmul@a+1
  7673   001962  C0A4  F017         	movff	efgtoa@l+2,___flmul@a+2
  7674   001966  C0A5  F018         	movff	efgtoa@l+3,___flmul@a+3
  7675   00196A  C0AD  F011         	movff	efgtoa@u,___flmul@b
  7676   00196E  C0AE  F012         	movff	efgtoa@u+1,___flmul@b+1
  7677   001972  C0AF  F013         	movff	efgtoa@u+2,___flmul@b+2
  7678   001976  C0B0  F014         	movff	efgtoa@u+3,___flmul@b+3
  7679   00197A  EC51  F012         	call	___flmul	;wreg free
  7680   00197E  C011  F057         	movff	?___flmul,___flsub@a
  7681   001982  C012  F058         	movff	?___flmul+1,___flsub@a+1
  7682   001986  C013  F059         	movff	?___flmul+2,___flsub@a+2
  7683   00198A  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  7684   00198E  ECEC  F028         	call	___flsub	;wreg free
  7685   001992  C053  F09E         	movff	?___flsub,efgtoa@h
  7686   001996  C054  F09F         	movff	?___flsub+1,efgtoa@h+1
  7687   00199A  C055  F0A0         	movff	?___flsub+2,efgtoa@h+2
  7688   00199E  C056  F0A1         	movff	?___flsub+3,efgtoa@h+3
  7689   0019A2                     
  7690                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  7691   0019A2  C0AD  F02A         	movff	efgtoa@u,___fldiv@b
  7692   0019A6  C0AE  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  7693   0019AA  C0AF  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  7694   0019AE  C0B0  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  7695   0019B2  0E00               	movlw	0
  7696   0019B4  6E2E               	movwf	___fldiv@a^0,c
  7697   0019B6  0E00               	movlw	0
  7698   0019B8  6E2F               	movwf	(___fldiv@a+1)^0,c
  7699   0019BA  0E20               	movlw	32
  7700   0019BC  6E30               	movwf	(___fldiv@a+2)^0,c
  7701   0019BE  0E41               	movlw	65
  7702   0019C0  6E31               	movwf	(___fldiv@a+3)^0,c
  7703   0019C2  EC29  F018         	call	___fldiv	;wreg free
  7704   0019C6  C02A  F0AD         	movff	?___fldiv,efgtoa@u
  7705   0019CA  C02B  F0AE         	movff	?___fldiv+1,efgtoa@u+1
  7706   0019CE  C02C  F0AF         	movff	?___fldiv+2,efgtoa@u+2
  7707   0019D2  C02D  F0B0         	movff	?___fldiv+3,efgtoa@u+3
  7708   0019D6                     
  7709                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  7710   0019D6  0100               	movlb	0	; () banked
  7711   0019D8  0785               	decf	efgtoa@ne& (0+255),f,b
  7712   0019DA  A0D8               	btfss	status,0,c
  7713   0019DC  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  7714   0019DE                     
  7715                           ; BSR set to: 0
  7716                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
  7717   0019DE  4B9C               	infsnz	efgtoa@i& (0+255),f,b
  7718   0019E0  2B9D               	incf	(efgtoa@i+1)& (0+255),f,b
  7719   0019E2                     l5976:
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7723   0019E2  5192               	movf	efgtoa@m& (0+255),w,b
  7724   0019E4  5D9C               	subwf	efgtoa@i& (0+255),w,b
  7725   0019E6  519D               	movf	(efgtoa@i+1)& (0+255),w,b
  7726   0019E8  0A80               	xorlw	128
  7727   0019EA  6F83               	movwf	??_efgtoa& (0+255),b
  7728   0019EC  5193               	movf	(efgtoa@m+1)& (0+255),w,b
  7729   0019EE  0A80               	xorlw	128
  7730   0019F0  5983               	subwfb	??_efgtoa& (0+255),w,b
  7731   0019F2  B0D8               	btfsc	status,0,c
  7732   0019F4  EFFE  F00C         	goto	u7731
  7733   0019F8  EF00  F00D         	goto	u7730
  7734   0019FC                     u7731:
  7735   0019FC  EF0E  F00D         	goto	l5980
  7736   001A00                     u7730:
  7737   001A00                     
  7738                           ; BSR set to: 0
  7739   001A00  BFAC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7740   001A02  EF0C  F00D         	goto	u7741
  7741   001A06  51AC               	movf	(efgtoa@n+1)& (0+255),w,b
  7742   001A08  E109               	bnz	u7740
  7743   001A0A  0E4B               	movlw	75
  7744   001A0C  5DAB               	subwf	efgtoa@n& (0+255),w,b
  7745   001A0E  A0D8               	btfss	status,0,c
  7746   001A10  EF0C  F00D         	goto	u7741
  7747   001A14  EF0E  F00D         	goto	u7740
  7748   001A18                     u7741:
  7749   001A18  EF0C  F00C         	goto	l5936
  7750   001A1C                     u7740:
  7751   001A1C                     l5980:
  7752                           
  7753                           ; BSR set to: 0
  7754                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  7755   001A1C  0E00               	movlw	0
  7756   001A1E  6F9D               	movwf	(efgtoa@i+1)& (0+255),b
  7757   001A20  0E4F               	movlw	79
  7758   001A22  6F9C               	movwf	efgtoa@i& (0+255),b
  7759   001A24                     
  7760                           ; BSR set to: 0
  7761                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  7762   001A24  0E22               	movlw	low _dbuf
  7763   001A26  259C               	addwf	efgtoa@i& (0+255),w,b
  7764   001A28  6ED9               	movwf	fsr2l,c
  7765   001A2A  0E01               	movlw	high _dbuf
  7766   001A2C  219D               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7767   001A2E  6EDA               	movwf	fsr2h,c
  7768   001A30  6ADF               	clrf	indf2,c
  7769   001A32                     
  7770                           ; BSR set to: 0
  7771                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  7772   001A32  0E22               	movlw	low _dbuf
  7773   001A34  6F83               	movwf	??_efgtoa& (0+255),b
  7774   001A36  0E01               	movlw	high _dbuf
  7775   001A38  6F84               	movwf	(??_efgtoa+1)& (0+255),b
  7776   001A3A  51AB               	movf	efgtoa@n& (0+255),w,b
  7777   001A3C  5F83               	subwf	??_efgtoa& (0+255),f,b
  7778   001A3E  51AC               	movf	(efgtoa@n+1)& (0+255),w,b
  7779   001A40  5B84               	subwfb	(??_efgtoa+1)& (0+255),f,b
  7780   001A42  519C               	movf	efgtoa@i& (0+255),w,b
  7781   001A44  2583               	addwf	??_efgtoa& (0+255),w,b
  7782   001A46  6E03               	movwf	memcpy@d1^0,c
  7783   001A48  519D               	movf	(efgtoa@i+1)& (0+255),w,b
  7784   001A4A  2184               	addwfc	(??_efgtoa+1)& (0+255),w,b
  7785   001A4C  6E04               	movwf	(memcpy@d1+1)^0,c
  7786   001A4E  0E22               	movlw	low _dbuf
  7787   001A50  6E05               	movwf	memcpy@s1^0,c
  7788   001A52  0E01               	movlw	high _dbuf
  7789   001A54  6E06               	movwf	(memcpy@s1+1)^0,c
  7790   001A56  C0AB  F007         	movff	efgtoa@n,memcpy@n
  7791   001A5A  C0AC  F008         	movff	efgtoa@n+1,memcpy@n+1
  7792   001A5E  EC7D  F028         	call	_memcpy	;wreg free
  7793   001A62                     
  7794                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  7795   001A62  0100               	movlb	0	; () banked
  7796   001A64  51AB               	movf	efgtoa@n& (0+255),w,b
  7797   001A66  5D9C               	subwf	efgtoa@i& (0+255),w,b
  7798   001A68  6FAB               	movwf	efgtoa@n& (0+255),b
  7799   001A6A  51AC               	movf	(efgtoa@n+1)& (0+255),w,b
  7800   001A6C  599D               	subwfb	(efgtoa@i+1)& (0+255),w,b
  7801   001A6E  6FAC               	movwf	(efgtoa@n+1)& (0+255),b
  7802   001A70                     
  7803                           ; BSR set to: 0
  7804                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  7805   001A70  51A6               	movf	efgtoa@sign& (0+255),w,b
  7806   001A72  A4D8               	btfss	status,2,c
  7807   001A74  EF3E  F00D         	goto	u7751
  7808   001A78  EF41  F00D         	goto	u7750
  7809   001A7C                     u7751:
  7810   001A7C  0E01               	movlw	1
  7811   001A7E  EF42  F00D         	goto	u7760
  7812   001A82                     u7750:
  7813   001A82  0E00               	movlw	0
  7814   001A84                     u7760:
  7815   001A84  6F9C               	movwf	efgtoa@i& (0+255),b
  7816   001A86  6B9D               	clrf	(efgtoa@i+1)& (0+255),b
  7817   001A88                     
  7818                           ; BSR set to: 0
  7819                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  7820   001A88  51A6               	movf	efgtoa@sign& (0+255),w,b
  7821   001A8A  B4D8               	btfsc	status,2,c
  7822   001A8C  EF4A  F00D         	goto	u7771
  7823   001A90  EF4C  F00D         	goto	u7770
  7824   001A94                     u7771:
  7825   001A94  EF57  F00D         	goto	l5994
  7826   001A98                     u7770:
  7827   001A98                     
  7828                           ; BSR set to: 0
  7829                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  7830   001A98  07AB               	decf	efgtoa@n& (0+255),f,b
  7831   001A9A  A0D8               	btfss	status,0,c
  7832   001A9C  07AC               	decf	(efgtoa@n+1)& (0+255),f,b
  7833   001A9E  0E22               	movlw	low _dbuf
  7834   001AA0  25AB               	addwf	efgtoa@n& (0+255),w,b
  7835   001AA2  6ED9               	movwf	fsr2l,c
  7836   001AA4  0E01               	movlw	high _dbuf
  7837   001AA6  21AC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7838   001AA8  6EDA               	movwf	fsr2h,c
  7839   001AAA  C0A6  FFDF         	movff	efgtoa@sign,indf2
  7840   001AAE                     l5994:
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  7844   001AAE  519C               	movf	efgtoa@i& (0+255),w,b
  7845   001AB0  5F96               	subwf	efgtoa@w& (0+255),f,b
  7846   001AB2  519D               	movf	(efgtoa@i+1)& (0+255),w,b
  7847   001AB4  5B97               	subwfb	(efgtoa@w+1)& (0+255),f,b
  7848   001AB6                     
  7849                           ; BSR set to: 0
  7850                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  7851   001AB6  C07C  F014         	movff	efgtoa@fp,pad@fp
  7852   001ABA  C07D  F015         	movff	efgtoa@fp+1,pad@fp+1
  7853   001ABE  0E22               	movlw	low _dbuf
  7854   001AC0  25AB               	addwf	efgtoa@n& (0+255),w,b
  7855   001AC2  6E16               	movwf	pad@buf^0,c
  7856   001AC4  0E01               	movlw	high _dbuf
  7857   001AC6  21AC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7858   001AC8  6E17               	movwf	(pad@buf+1)^0,c
  7859   001ACA  C096  F018         	movff	efgtoa@w,pad@p
  7860   001ACE  C097  F019         	movff	efgtoa@w+1,pad@p+1
  7861   001AD2  EC01  F028         	call	_pad	;wreg free
  7862   001AD6                     l1133:
  7863   001AD6  0012               	return		;funcret
  7864   001AD8                     __end_of_efgtoa:
  7865                           	callstack 0
  7866                           
  7867 ;; *************** function _strcpy *****************
  7868 ;; Defined at:
  7869 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  dest            2    2[COMRAM] PTR unsigned char 
  7872 ;;		 -> dbuf(80), 
  7873 ;;  src             1    4[COMRAM] PTR const unsigned char 
  7874 ;;		 -> STR_21(4), STR_18(4), 
  7875 ;; Auto vars:     Size  Location     Type
  7876 ;;  d               2    6[COMRAM] PTR unsigned char 
  7877 ;;		 -> dbuf(80), 
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  2    2[COMRAM] PTR unsigned char 
  7880 ;; Registers used:
  7881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7887 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7890 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7891 ;;Total ram usage:        6 bytes
  7892 ;; Hardware stack levels used: 1
  7893 ;; Hardware stack levels required when called: 1
  7894 ;; This function calls:
  7895 ;;		Nothing
  7896 ;; This function is called by:
  7897 ;;		_efgtoa
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text26
  7902   0052E2                     __ptext26:
  7903                           	callstack 0
  7904   0052E2                     _strcpy:
  7905                           	callstack 24
  7906   0052E2  C003  F007         	movff	strcpy@dest,strcpy@d
  7907   0052E6  C004  F008         	movff	strcpy@dest+1,strcpy@d+1
  7908   0052EA                     l5684:
  7909   0052EA  2A05               	incf	strcpy@src^0,f,c
  7910   0052EC  0405               	decf	strcpy@src^0,w,c
  7911   0052EE  6E06               	movwf	??_strcpy^0,c
  7912   0052F0  C006  FFF6         	movff	??_strcpy,tblptrl
  7913   0052F4                     	if	1	;There is more than 1 active tblptr byte
  7914   0052F4  0E10               	movlw	high __smallconst
  7915   0052F6  6EF7               	movwf	tblptrh,c
  7916   0052F8                     	endif
  7917   0052F8                     	if	0	;tblptru may be non-zero
  7918   0052F8                     	endif
  7919   0052F8                     	if	0	;tblptru may be non-zero
  7920   0052F8                     	endif
  7921   0052F8  C007  FFD9         	movff	strcpy@d,fsr2l
  7922   0052FC  C008  FFDA         	movff	strcpy@d+1,fsr2h
  7923   005300  4A07               	infsnz	strcpy@d^0,f,c
  7924   005302  2A08               	incf	(strcpy@d+1)^0,f,c
  7925   005304  0008               	tblrd		*
  7926   005306  CFF5 FFDF          	movff	tablat,indf2
  7927   00530A  50DF               	movf	indf2,w,c
  7928   00530C  A4D8               	btfss	status,2,c
  7929   00530E  EF8B  F029         	goto	u7241
  7930   005312  EF8D  F029         	goto	u7240
  7931   005316                     u7241:
  7932   005316  EF75  F029         	goto	l5684
  7933   00531A                     u7240:
  7934   00531A  0012               	return		;funcret
  7935   00531C                     __end_of_strcpy:
  7936                           	callstack 0
  7937                           
  7938 ;; *************** function _memcpy *****************
  7939 ;; Defined at:
  7940 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;  d1              2    2[COMRAM] PTR void 
  7943 ;;		 -> dbuf(80), 
  7944 ;;  s1              2    4[COMRAM] PTR const void 
  7945 ;;		 -> dbuf(80), 
  7946 ;;  n               2    6[COMRAM] unsigned int 
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;  s               2   11[COMRAM] PTR const unsigned char 
  7949 ;;		 -> dbuf(80), 
  7950 ;;  d               2    9[COMRAM] PTR unsigned char 
  7951 ;;		 -> dbuf(80), 
  7952 ;;  tmp             1    8[COMRAM] unsigned char 
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  2    2[COMRAM] PTR void 
  7955 ;; Registers used:
  7956 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7962 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7963 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7965 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;Total ram usage:       11 bytes
  7967 ;; Hardware stack levels used: 1
  7968 ;; Hardware stack levels required when called: 1
  7969 ;; This function calls:
  7970 ;;		Nothing
  7971 ;; This function is called by:
  7972 ;;		_efgtoa
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text27
  7977   0050FA                     __ptext27:
  7978                           	callstack 0
  7979   0050FA                     _memcpy:
  7980                           	callstack 24
  7981   0050FA  C005  F00C         	movff	memcpy@s1,memcpy@s
  7982   0050FE  C006  F00D         	movff	memcpy@s1+1,memcpy@s+1
  7983   005102  C003  F00A         	movff	memcpy@d1,memcpy@d
  7984   005106  C004  F00B         	movff	memcpy@d1+1,memcpy@d+1
  7985   00510A  EF97  F028         	goto	l5732
  7986   00510E                     l5724:
  7987   00510E  C00C  FFD9         	movff	memcpy@s,fsr2l
  7988   005112  C00D  FFDA         	movff	memcpy@s+1,fsr2h
  7989   005116  50DF               	movf	indf2,w,c
  7990   005118  6E09               	movwf	memcpy@tmp^0,c
  7991   00511A  4A0C               	infsnz	memcpy@s^0,f,c
  7992   00511C  2A0D               	incf	(memcpy@s+1)^0,f,c
  7993   00511E  C00A  FFD9         	movff	memcpy@d,fsr2l
  7994   005122  C00B  FFDA         	movff	memcpy@d+1,fsr2h
  7995   005126  C009  FFDF         	movff	memcpy@tmp,indf2
  7996   00512A  4A0A               	infsnz	memcpy@d^0,f,c
  7997   00512C  2A0B               	incf	(memcpy@d+1)^0,f,c
  7998   00512E                     l5732:
  7999   00512E  0607               	decf	memcpy@n^0,f,c
  8000   005130  A0D8               	btfss	status,0,c
  8001   005132  0608               	decf	(memcpy@n+1)^0,f,c
  8002   005134  2807               	incf	memcpy@n^0,w,c
  8003   005136  E106               	bnz	u7361
  8004   005138  2808               	incf	(memcpy@n+1)^0,w,c
  8005   00513A  A4D8               	btfss	status,2,c
  8006   00513C  EFA2  F028         	goto	u7361
  8007   005140  EFA4  F028         	goto	u7360
  8008   005144                     u7361:
  8009   005144  EF87  F028         	goto	l5724
  8010   005148                     u7360:
  8011   005148  0012               	return		;funcret
  8012   00514A                     __end_of_memcpy:
  8013                           	callstack 0
  8014                           
  8015 ;; *************** function _labs *****************
  8016 ;; Defined at:
  8017 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;  a               4    2[COMRAM] long 
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;		None
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  4    2[COMRAM] long 
  8024 ;; Registers used:
  8025 ;;		wreg, status,2, status,0
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8033 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8034 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8035 ;;Total ram usage:        8 bytes
  8036 ;; Hardware stack levels used: 1
  8037 ;; Hardware stack levels required when called: 1
  8038 ;; This function calls:
  8039 ;;		Nothing
  8040 ;; This function is called by:
  8041 ;;		_efgtoa
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text28
  8046   0050A4                     __ptext28:
  8047                           	callstack 0
  8048   0050A4                     _labs:
  8049                           	callstack 24
  8050   0050A4  BE06               	btfsc	(labs@a+3)^0,7,c
  8051   0050A6  EF57  F028         	goto	u7251
  8052   0050AA  EF59  F028         	goto	u7250
  8053   0050AE                     u7251:
  8054   0050AE  EF63  F028         	goto	l5690
  8055   0050B2                     u7250:
  8056   0050B2  C003  F003         	movff	labs@a,?_labs
  8057   0050B6  C004  F004         	movff	labs@a+1,?_labs+1
  8058   0050BA  C005  F005         	movff	labs@a+2,?_labs+2
  8059   0050BE  C006  F006         	movff	labs@a+3,?_labs+3
  8060   0050C2  EF7C  F028         	goto	l1282
  8061   0050C6                     l5690:
  8062   0050C6  C003  F007         	movff	labs@a,??_labs
  8063   0050CA  C004  F008         	movff	labs@a+1,??_labs+1
  8064   0050CE  C005  F009         	movff	labs@a+2,??_labs+2
  8065   0050D2  C006  F00A         	movff	labs@a+3,??_labs+3
  8066   0050D6  1E07               	comf	??_labs^0,f,c
  8067   0050D8  1E08               	comf	(??_labs+1)^0,f,c
  8068   0050DA  1E09               	comf	(??_labs+2)^0,f,c
  8069   0050DC  1E0A               	comf	(??_labs+3)^0,f,c
  8070   0050DE  2A07               	incf	??_labs^0,f,c
  8071   0050E0  0E00               	movlw	0
  8072   0050E2  2208               	addwfc	(??_labs+1)^0,f,c
  8073   0050E4  2209               	addwfc	(??_labs+2)^0,f,c
  8074   0050E6  220A               	addwfc	(??_labs+3)^0,f,c
  8075   0050E8  C007  F003         	movff	??_labs,?_labs
  8076   0050EC  C008  F004         	movff	??_labs+1,?_labs+1
  8077   0050F0  C009  F005         	movff	??_labs+2,?_labs+2
  8078   0050F4  C00A  F006         	movff	??_labs+3,?_labs+3
  8079   0050F8                     l1282:
  8080   0050F8  0012               	return		;funcret
  8081   0050FA                     __end_of_labs:
  8082                           	callstack 0
  8083                           
  8084 ;; *************** function _floorf *****************
  8085 ;; Defined at:
  8086 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;  x               4   66[COMRAM] float 
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;  u               4   82[COMRAM] struct .
  8091 ;;  m               4   76[COMRAM] unsigned long 
  8092 ;;  e               2   80[COMRAM] int 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  4   66[COMRAM] float 
  8095 ;; Registers used:
  8096 ;;		wreg, status,2, status,0
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8102 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8103 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8104 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8105 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8106 ;;Total ram usage:       20 bytes
  8107 ;; Hardware stack levels used: 1
  8108 ;; Hardware stack levels required when called: 1
  8109 ;; This function calls:
  8110 ;;		Nothing
  8111 ;; This function is called by:
  8112 ;;		_efgtoa
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text29
  8117   003A86                     __ptext29:
  8118                           	callstack 0
  8119   003A86                     _floorf:
  8120                           	callstack 24
  8121   003A86  C119  F053         	movff	floorf@F521,floorf@u
  8122   003A8A  C11A  F054         	movff	floorf@F521+1,floorf@u+1
  8123   003A8E  C11B  F055         	movff	floorf@F521+2,floorf@u+2
  8124   003A92  C11C  F056         	movff	floorf@F521+3,floorf@u+3
  8125   003A96  C043  F053         	movff	floorf@x,floorf@u
  8126   003A9A  C044  F054         	movff	floorf@x+1,floorf@u+1
  8127   003A9E  C045  F055         	movff	floorf@x+2,floorf@u+2
  8128   003AA2  C046  F056         	movff	floorf@x+3,floorf@u+3
  8129   003AA6  0E81               	movlw	129
  8130   003AA8  6E47               	movwf	??_floorf^0,c
  8131   003AAA  0EFF               	movlw	255
  8132   003AAC  6E48               	movwf	(??_floorf+1)^0,c
  8133   003AAE  C053  F049         	movff	floorf@u,??_floorf+2
  8134   003AB2  C054  F04A         	movff	floorf@u+1,??_floorf+3
  8135   003AB6  C055  F04B         	movff	floorf@u+2,??_floorf+4
  8136   003ABA  C056  F04C         	movff	floorf@u+3,??_floorf+5
  8137   003ABE  0E18               	movlw	24
  8138   003AC0  EF67  F01D         	goto	u7260
  8139   003AC4                     u7265:
  8140   003AC4  90D8               	bcf	status,0,c
  8141   003AC6  324C               	rrcf	(??_floorf+5)^0,f,c
  8142   003AC8  324B               	rrcf	(??_floorf+4)^0,f,c
  8143   003ACA  324A               	rrcf	(??_floorf+3)^0,f,c
  8144   003ACC  3249               	rrcf	(??_floorf+2)^0,f,c
  8145   003ACE                     u7260:
  8146   003ACE  2EE8               	decfsz	wreg,f,c
  8147   003AD0  EF62  F01D         	goto	u7265
  8148   003AD4  5049               	movf	(??_floorf+2)^0,w,c
  8149   003AD6  2447               	addwf	??_floorf^0,w,c
  8150   003AD8  6E51               	movwf	floorf@e^0,c
  8151   003ADA  0E00               	movlw	0
  8152   003ADC  2048               	addwfc	(??_floorf+1)^0,w,c
  8153   003ADE  6E52               	movwf	(floorf@e+1)^0,c
  8154   003AE0  BE52               	btfsc	(floorf@e+1)^0,7,c
  8155   003AE2  EF7C  F01D         	goto	u7271
  8156   003AE6  5052               	movf	(floorf@e+1)^0,w,c
  8157   003AE8  E109               	bnz	u7270
  8158   003AEA  0E17               	movlw	23
  8159   003AEC  5C51               	subwf	floorf@e^0,w,c
  8160   003AEE  A0D8               	btfss	status,0,c
  8161   003AF0  EF7C  F01D         	goto	u7271
  8162   003AF4  EF7E  F01D         	goto	u7270
  8163   003AF8                     u7271:
  8164   003AF8  EF88  F01D         	goto	l5700
  8165   003AFC                     u7270:
  8166   003AFC                     l5698:
  8167   003AFC  C043  F043         	movff	floorf@x,?_floorf
  8168   003B00  C044  F044         	movff	floorf@x+1,?_floorf+1
  8169   003B04  C045  F045         	movff	floorf@x+2,?_floorf+2
  8170   003B08  C046  F046         	movff	floorf@x+3,?_floorf+3
  8171   003B0C  EF4B  F01E         	goto	l1268
  8172   003B10                     l5700:
  8173   003B10  BE52               	btfsc	(floorf@e+1)^0,7,c
  8174   003B12  EF8D  F01D         	goto	u7281
  8175   003B16  EF8F  F01D         	goto	u7280
  8176   003B1A                     u7281:
  8177   003B1A  EFFF  F01D         	goto	l5710
  8178   003B1E                     u7280:
  8179   003B1E  C051  F047         	movff	floorf@e,??_floorf
  8180   003B22  0EFF               	movlw	255
  8181   003B24  6E48               	movwf	(??_floorf+1)^0,c
  8182   003B26  0EFF               	movlw	255
  8183   003B28  6E49               	movwf	(??_floorf+2)^0,c
  8184   003B2A  0E7F               	movlw	127
  8185   003B2C  6E4A               	movwf	(??_floorf+3)^0,c
  8186   003B2E  0E00               	movlw	0
  8187   003B30  6E4B               	movwf	(??_floorf+4)^0,c
  8188   003B32                     u7295:
  8189   003B32  6647               	tstfsz	??_floorf^0,c
  8190   003B34  EF9E  F01D         	goto	u7296
  8191   003B38  EFA6  F01D         	goto	u7297
  8192   003B3C                     u7296:
  8193   003B3C  344B               	rlcf	(??_floorf+4)^0,w,c
  8194   003B3E  324B               	rrcf	(??_floorf+4)^0,f,c
  8195   003B40  324A               	rrcf	(??_floorf+3)^0,f,c
  8196   003B42  3249               	rrcf	(??_floorf+2)^0,f,c
  8197   003B44  3248               	rrcf	(??_floorf+1)^0,f,c
  8198   003B46  2E47               	decfsz	??_floorf^0,f,c
  8199   003B48  EF99  F01D         	goto	u7295
  8200   003B4C                     u7297:
  8201   003B4C  C048  F04D         	movff	??_floorf+1,floorf@m
  8202   003B50  C049  F04E         	movff	??_floorf+2,floorf@m+1
  8203   003B54  C04A  F04F         	movff	??_floorf+3,floorf@m+2
  8204   003B58  C04B  F050         	movff	??_floorf+4,floorf@m+3
  8205   003B5C  504D               	movf	floorf@m^0,w,c
  8206   003B5E  1453               	andwf	floorf@u^0,w,c
  8207   003B60  6E47               	movwf	??_floorf^0,c
  8208   003B62  504E               	movf	(floorf@m+1)^0,w,c
  8209   003B64  1454               	andwf	(floorf@u+1)^0,w,c
  8210   003B66  6E48               	movwf	(??_floorf+1)^0,c
  8211   003B68  504F               	movf	(floorf@m+2)^0,w,c
  8212   003B6A  1455               	andwf	(floorf@u+2)^0,w,c
  8213   003B6C  6E49               	movwf	(??_floorf+2)^0,c
  8214   003B6E  5050               	movf	(floorf@m+3)^0,w,c
  8215   003B70  1456               	andwf	(floorf@u+3)^0,w,c
  8216   003B72  6E4A               	movwf	(??_floorf+3)^0,c
  8217   003B74  5047               	movf	??_floorf^0,w,c
  8218   003B76  1048               	iorwf	(??_floorf+1)^0,w,c
  8219   003B78  1049               	iorwf	(??_floorf+2)^0,w,c
  8220   003B7A  104A               	iorwf	(??_floorf+3)^0,w,c
  8221   003B7C  A4D8               	btfss	status,2,c
  8222   003B7E  EFC3  F01D         	goto	u7301
  8223   003B82  EFC5  F01D         	goto	u7300
  8224   003B86                     u7301:
  8225   003B86  EFC7  F01D         	goto	l5706
  8226   003B8A                     u7300:
  8227   003B8A  EF7E  F01D         	goto	l5698
  8228   003B8E                     l5706:
  8229   003B8E  C053  F047         	movff	floorf@u,??_floorf
  8230   003B92  C054  F048         	movff	floorf@u+1,??_floorf+1
  8231   003B96  C055  F049         	movff	floorf@u+2,??_floorf+2
  8232   003B9A  C056  F04A         	movff	floorf@u+3,??_floorf+3
  8233   003B9E  0E20               	movlw	32
  8234   003BA0  EFD7  F01D         	goto	u7310
  8235   003BA4                     u7315:
  8236   003BA4  90D8               	bcf	status,0,c
  8237   003BA6  324A               	rrcf	(??_floorf+3)^0,f,c
  8238   003BA8  3249               	rrcf	(??_floorf+2)^0,f,c
  8239   003BAA  3248               	rrcf	(??_floorf+1)^0,f,c
  8240   003BAC  3247               	rrcf	??_floorf^0,f,c
  8241   003BAE                     u7310:
  8242   003BAE  2EE8               	decfsz	wreg,f,c
  8243   003BB0  EFD2  F01D         	goto	u7315
  8244   003BB4  5047               	movf	??_floorf^0,w,c
  8245   003BB6  1048               	iorwf	(??_floorf+1)^0,w,c
  8246   003BB8  1049               	iorwf	(??_floorf+2)^0,w,c
  8247   003BBA  104A               	iorwf	(??_floorf+3)^0,w,c
  8248   003BBC  B4D8               	btfsc	status,2,c
  8249   003BBE  EFE3  F01D         	goto	u7321
  8250   003BC2  EFE5  F01D         	goto	u7320
  8251   003BC6                     u7321:
  8252   003BC6  EFED  F01D         	goto	l1271
  8253   003BCA                     u7320:
  8254   003BCA  504D               	movf	floorf@m^0,w,c
  8255   003BCC  2653               	addwf	floorf@u^0,f,c
  8256   003BCE  504E               	movf	(floorf@m+1)^0,w,c
  8257   003BD0  2254               	addwfc	(floorf@u+1)^0,f,c
  8258   003BD2  504F               	movf	(floorf@m+2)^0,w,c
  8259   003BD4  2255               	addwfc	(floorf@u+2)^0,f,c
  8260   003BD6  5050               	movf	(floorf@m+3)^0,w,c
  8261   003BD8  2256               	addwfc	(floorf@u+3)^0,f,c
  8262   003BDA                     l1271:
  8263   003BDA  1C4D               	comf	floorf@m^0,w,c
  8264   003BDC  6E47               	movwf	??_floorf^0,c
  8265   003BDE  1C4E               	comf	(floorf@m+1)^0,w,c
  8266   003BE0  6E48               	movwf	(??_floorf+1)^0,c
  8267   003BE2  1C4F               	comf	(floorf@m+2)^0,w,c
  8268   003BE4  6E49               	movwf	(??_floorf+2)^0,c
  8269   003BE6  1C50               	comf	(floorf@m+3)^0,w,c
  8270   003BE8  6E4A               	movwf	(??_floorf+3)^0,c
  8271   003BEA  5047               	movf	??_floorf^0,w,c
  8272   003BEC  1653               	andwf	floorf@u^0,f,c
  8273   003BEE  5048               	movf	(??_floorf+1)^0,w,c
  8274   003BF0  1654               	andwf	(floorf@u+1)^0,f,c
  8275   003BF2  5049               	movf	(??_floorf+2)^0,w,c
  8276   003BF4  1655               	andwf	(floorf@u+2)^0,f,c
  8277   003BF6  504A               	movf	(??_floorf+3)^0,w,c
  8278   003BF8  1656               	andwf	(floorf@u+3)^0,f,c
  8279   003BFA  EF43  F01E         	goto	l5718
  8280   003BFE                     l5710:
  8281   003BFE  C053  F047         	movff	floorf@u,??_floorf
  8282   003C02  C054  F048         	movff	floorf@u+1,??_floorf+1
  8283   003C06  C055  F049         	movff	floorf@u+2,??_floorf+2
  8284   003C0A  C056  F04A         	movff	floorf@u+3,??_floorf+3
  8285   003C0E  0E20               	movlw	32
  8286   003C10  EF0F  F01E         	goto	u7330
  8287   003C14                     u7335:
  8288   003C14  90D8               	bcf	status,0,c
  8289   003C16  324A               	rrcf	(??_floorf+3)^0,f,c
  8290   003C18  3249               	rrcf	(??_floorf+2)^0,f,c
  8291   003C1A  3248               	rrcf	(??_floorf+1)^0,f,c
  8292   003C1C  3247               	rrcf	??_floorf^0,f,c
  8293   003C1E                     u7330:
  8294   003C1E  2EE8               	decfsz	wreg,f,c
  8295   003C20  EF0A  F01E         	goto	u7335
  8296   003C24  5047               	movf	??_floorf^0,w,c
  8297   003C26  1048               	iorwf	(??_floorf+1)^0,w,c
  8298   003C28  1049               	iorwf	(??_floorf+2)^0,w,c
  8299   003C2A  104A               	iorwf	(??_floorf+3)^0,w,c
  8300   003C2C  A4D8               	btfss	status,2,c
  8301   003C2E  EF1B  F01E         	goto	u7341
  8302   003C32  EF1D  F01E         	goto	u7340
  8303   003C36                     u7341:
  8304   003C36  EF27  F01E         	goto	l5714
  8305   003C3A                     u7340:
  8306   003C3A  0E00               	movlw	0
  8307   003C3C  6E53               	movwf	floorf@u^0,c
  8308   003C3E  0E00               	movlw	0
  8309   003C40  6E54               	movwf	(floorf@u+1)^0,c
  8310   003C42  0E00               	movlw	0
  8311   003C44  6E55               	movwf	(floorf@u+2)^0,c
  8312   003C46  0E00               	movlw	0
  8313   003C48  6E56               	movwf	(floorf@u+3)^0,c
  8314   003C4A  EF43  F01E         	goto	l5718
  8315   003C4E                     l5714:
  8316   003C4E  90D8               	bcf	status,0,c
  8317   003C50  3453               	rlcf	floorf@u^0,w,c
  8318   003C52  6E47               	movwf	??_floorf^0,c
  8319   003C54  3454               	rlcf	(floorf@u+1)^0,w,c
  8320   003C56  6E48               	movwf	(??_floorf+1)^0,c
  8321   003C58  3455               	rlcf	(floorf@u+2)^0,w,c
  8322   003C5A  6E49               	movwf	(??_floorf+2)^0,c
  8323   003C5C  3456               	rlcf	(floorf@u+3)^0,w,c
  8324   003C5E  6E4A               	movwf	(??_floorf+3)^0,c
  8325   003C60  5047               	movf	??_floorf^0,w,c
  8326   003C62  1048               	iorwf	(??_floorf+1)^0,w,c
  8327   003C64  1049               	iorwf	(??_floorf+2)^0,w,c
  8328   003C66  104A               	iorwf	(??_floorf+3)^0,w,c
  8329   003C68  B4D8               	btfsc	status,2,c
  8330   003C6A  EF39  F01E         	goto	u7351
  8331   003C6E  EF3B  F01E         	goto	u7350
  8332   003C72                     u7351:
  8333   003C72  EF43  F01E         	goto	l5718
  8334   003C76                     u7350:
  8335   003C76  0E00               	movlw	0
  8336   003C78  6E53               	movwf	floorf@u^0,c
  8337   003C7A  0E00               	movlw	0
  8338   003C7C  6E54               	movwf	(floorf@u+1)^0,c
  8339   003C7E  0E80               	movlw	128
  8340   003C80  6E55               	movwf	(floorf@u+2)^0,c
  8341   003C82  0EBF               	movlw	191
  8342   003C84  6E56               	movwf	(floorf@u+3)^0,c
  8343   003C86                     l5718:
  8344   003C86  C053  F043         	movff	floorf@u,?_floorf
  8345   003C8A  C054  F044         	movff	floorf@u+1,?_floorf+1
  8346   003C8E  C055  F045         	movff	floorf@u+2,?_floorf+2
  8347   003C92  C056  F046         	movff	floorf@u+3,?_floorf+3
  8348   003C96                     l1268:
  8349   003C96  0012               	return		;funcret
  8350   003C98                     __end_of_floorf:
  8351                           	callstack 0
  8352                           
  8353 ;; *************** function ___fpclassifyf *****************
  8354 ;; Defined at:
  8355 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;  x               4    2[COMRAM] float 
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;  u               4   12[COMRAM] struct .
  8360 ;;  e               2   10[COMRAM] int 
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  2    2[COMRAM] int 
  8363 ;; Registers used:
  8364 ;;		wreg, status,2, status,0
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8370 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8371 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8372 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8373 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8374 ;;Total ram usage:       14 bytes
  8375 ;; Hardware stack levels used: 1
  8376 ;; Hardware stack levels required when called: 1
  8377 ;; This function calls:
  8378 ;;		Nothing
  8379 ;; This function is called by:
  8380 ;;		_efgtoa
  8381 ;; This function uses a non-reentrant model
  8382 ;;
  8383                           
  8384                           	psect	text30
  8385   0049EA                     __ptext30:
  8386                           	callstack 0
  8387   0049EA                     ___fpclassifyf:
  8388                           	callstack 24
  8389   0049EA  C11D  F00D         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8390   0049EE  C11E  F00E         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8391   0049F2  C11F  F00F         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8392   0049F6  C120  F010         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8393   0049FA  C003  F00D         	movff	___fpclassifyf@x,___fpclassifyf@u
  8394   0049FE  C004  F00E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8395   004A02  C005  F00F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8396   004A06  C006  F010         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8397   004A0A  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  8398   004A0E  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8399   004A12  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8400   004A16  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8401   004A1A  0E18               	movlw	24
  8402   004A1C  EF15  F025         	goto	u7170
  8403   004A20                     u7175:
  8404   004A20  90D8               	bcf	status,0,c
  8405   004A22  320A               	rrcf	(??___fpclassifyf+3)^0,f,c
  8406   004A24  3209               	rrcf	(??___fpclassifyf+2)^0,f,c
  8407   004A26  3208               	rrcf	(??___fpclassifyf+1)^0,f,c
  8408   004A28  3207               	rrcf	??___fpclassifyf^0,f,c
  8409   004A2A                     u7170:
  8410   004A2A  2EE8               	decfsz	wreg,f,c
  8411   004A2C  EF10  F025         	goto	u7175
  8412   004A30  5007               	movf	??___fpclassifyf^0,w,c
  8413   004A32  6E0B               	movwf	___fpclassifyf@e^0,c
  8414   004A34  6A0C               	clrf	(___fpclassifyf@e+1)^0,c
  8415   004A36  500B               	movf	___fpclassifyf@e^0,w,c
  8416   004A38  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8417   004A3A  A4D8               	btfss	status,2,c
  8418   004A3C  EF22  F025         	goto	u7181
  8419   004A40  EF24  F025         	goto	u7180
  8420   004A44                     u7181:
  8421   004A44  EF44  F025         	goto	l5672
  8422   004A48                     u7180:
  8423   004A48  90D8               	bcf	status,0,c
  8424   004A4A  340D               	rlcf	___fpclassifyf@u^0,w,c
  8425   004A4C  6E07               	movwf	??___fpclassifyf^0,c
  8426   004A4E  340E               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8427   004A50  6E08               	movwf	(??___fpclassifyf+1)^0,c
  8428   004A52  340F               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8429   004A54  6E09               	movwf	(??___fpclassifyf+2)^0,c
  8430   004A56  3410               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8431   004A58  6E0A               	movwf	(??___fpclassifyf+3)^0,c
  8432   004A5A  5007               	movf	??___fpclassifyf^0,w,c
  8433   004A5C  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  8434   004A5E  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  8435   004A60  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  8436   004A62  A4D8               	btfss	status,2,c
  8437   004A64  EF36  F025         	goto	u7191
  8438   004A68  EF38  F025         	goto	u7190
  8439   004A6C                     u7191:
  8440   004A6C  EF3E  F025         	goto	l5668
  8441   004A70                     u7190:
  8442   004A70  0E00               	movlw	0
  8443   004A72  6E04               	movwf	(?___fpclassifyf+1)^0,c
  8444   004A74  0E02               	movlw	2
  8445   004A76  6E03               	movwf	?___fpclassifyf^0,c
  8446   004A78  EF73  F025         	goto	l1254
  8447   004A7C                     l5668:
  8448   004A7C  0E00               	movlw	0
  8449   004A7E  6E04               	movwf	(?___fpclassifyf+1)^0,c
  8450   004A80  0E03               	movlw	3
  8451   004A82  6E03               	movwf	?___fpclassifyf^0,c
  8452   004A84  EF73  F025         	goto	l1254
  8453   004A88                     l5672:
  8454   004A88  280B               	incf	___fpclassifyf@e^0,w,c
  8455   004A8A  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8456   004A8C  A4D8               	btfss	status,2,c
  8457   004A8E  EF4B  F025         	goto	u7201
  8458   004A92  EF4D  F025         	goto	u7200
  8459   004A96                     u7201:
  8460   004A96  EF6F  F025         	goto	l5678
  8461   004A9A                     u7200:
  8462   004A9A  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  8463   004A9E  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8464   004AA2  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8465   004AA6  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8466   004AAA  0E09               	movlw	9
  8467   004AAC                     u7215:
  8468   004AAC  90D8               	bcf	status,0,c
  8469   004AAE  3607               	rlcf	??___fpclassifyf^0,f,c
  8470   004AB0  3608               	rlcf	(??___fpclassifyf+1)^0,f,c
  8471   004AB2  3609               	rlcf	(??___fpclassifyf+2)^0,f,c
  8472   004AB4  360A               	rlcf	(??___fpclassifyf+3)^0,f,c
  8473   004AB6  2EE8               	decfsz	wreg,f,c
  8474   004AB8  EF56  F025         	goto	u7215
  8475   004ABC  5007               	movf	??___fpclassifyf^0,w,c
  8476   004ABE  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  8477   004AC0  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  8478   004AC2  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  8479   004AC4  B4D8               	btfsc	status,2,c
  8480   004AC6  EF67  F025         	goto	u7221
  8481   004ACA  EF6A  F025         	goto	u7220
  8482   004ACE                     u7221:
  8483   004ACE  0E01               	movlw	1
  8484   004AD0  EF6B  F025         	goto	u7230
  8485   004AD4                     u7220:
  8486   004AD4  0E00               	movlw	0
  8487   004AD6                     u7230:
  8488   004AD6  6E03               	movwf	?___fpclassifyf^0,c
  8489   004AD8  6A04               	clrf	(?___fpclassifyf+1)^0,c
  8490   004ADA  EF73  F025         	goto	l1254
  8491   004ADE                     l5678:
  8492   004ADE  0E00               	movlw	0
  8493   004AE0  6E04               	movwf	(?___fpclassifyf+1)^0,c
  8494   004AE2  0E04               	movlw	4
  8495   004AE4  6E03               	movwf	?___fpclassifyf^0,c
  8496   004AE6                     l1254:
  8497   004AE6  0012               	return		;funcret
  8498   004AE8                     __end_of___fpclassifyf:
  8499                           	callstack 0
  8500                           
  8501 ;; *************** function ___fltol *****************
  8502 ;; Defined at:
  8503 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;  f1              4   82[COMRAM] int 
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;  exp1            1    1[BANK0 ] unsigned char 
  8508 ;;  sign1           1    0[BANK0 ] unsigned char 
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  4   82[COMRAM] long 
  8511 ;; Registers used:
  8512 ;;		wreg, status,2, status,0
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8518 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8519 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8520 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8521 ;;      Totals:         8       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8522 ;;Total ram usage:       10 bytes
  8523 ;; Hardware stack levels used: 1
  8524 ;; Hardware stack levels required when called: 1
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_runDAC
  8529 ;;		_efgtoa
  8530 ;;		___rem_pio2f
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           	psect	text31
  8535   0047DE                     __ptext31:
  8536                           	callstack 0
  8537   0047DE                     ___fltol:
  8538                           	callstack 26
  8539   0047DE  3455               	rlcf	(___fltol@f1+2)^0,w,c
  8540   0047E0  3456               	rlcf	(___fltol@f1+3)^0,w,c
  8541   0047E2  0100               	movlb	0	; () banked
  8542   0047E4  6F61               	movwf	___fltol@exp1& (0+255),b
  8543   0047E6  5161               	movf	___fltol@exp1& (0+255),w,b
  8544   0047E8  A4D8               	btfss	status,2,c
  8545   0047EA  EFF9  F023         	goto	u7051
  8546   0047EE  EFFB  F023         	goto	u7050
  8547   0047F2                     u7051:
  8548   0047F2  EF05  F024         	goto	l5602
  8549   0047F6                     u7050:
  8550   0047F6                     l5598:
  8551                           
  8552                           ; BSR set to: 0
  8553   0047F6  0E00               	movlw	0
  8554   0047F8  6E53               	movwf	?___fltol^0,c
  8555   0047FA  0E00               	movlw	0
  8556   0047FC  6E54               	movwf	(?___fltol+1)^0,c
  8557   0047FE  0E00               	movlw	0
  8558   004800  6E55               	movwf	(?___fltol+2)^0,c
  8559   004802  0E00               	movlw	0
  8560   004804  6E56               	movwf	(?___fltol+3)^0,c
  8561   004806  EF72  F024         	goto	l688
  8562   00480A                     l5602:
  8563                           
  8564                           ; BSR set to: 0
  8565   00480A  C053  F057         	movff	___fltol@f1,??___fltol
  8566   00480E  C054  F058         	movff	___fltol@f1+1,??___fltol+1
  8567   004812  C055  F059         	movff	___fltol@f1+2,??___fltol+2
  8568   004816  C056  F05A         	movff	___fltol@f1+3,??___fltol+3
  8569   00481A  0E20               	movlw	32
  8570   00481C  EF15  F024         	goto	u7060
  8571   004820                     u7065:
  8572   004820  90D8               	bcf	status,0,c
  8573   004822  325A               	rrcf	(??___fltol+3)^0,f,c
  8574   004824  3259               	rrcf	(??___fltol+2)^0,f,c
  8575   004826  3258               	rrcf	(??___fltol+1)^0,f,c
  8576   004828  3257               	rrcf	??___fltol^0,f,c
  8577   00482A                     u7060:
  8578   00482A  2EE8               	decfsz	wreg,f,c
  8579   00482C  EF10  F024         	goto	u7065
  8580   004830  5057               	movf	??___fltol^0,w,c
  8581   004832  6F60               	movwf	___fltol@sign1& (0+255),b
  8582   004834                     
  8583                           ; BSR set to: 0
  8584   004834  8E55               	bsf	(___fltol@f1+2)^0,7,c
  8585   004836                     
  8586                           ; BSR set to: 0
  8587   004836  0EFF               	movlw	255
  8588   004838  1653               	andwf	___fltol@f1^0,f,c
  8589   00483A  0EFF               	movlw	255
  8590   00483C  1654               	andwf	(___fltol@f1+1)^0,f,c
  8591   00483E  0EFF               	movlw	255
  8592   004840  1655               	andwf	(___fltol@f1+2)^0,f,c
  8593   004842  0E00               	movlw	0
  8594   004844  1656               	andwf	(___fltol@f1+3)^0,f,c
  8595   004846                     
  8596                           ; BSR set to: 0
  8597   004846  0E96               	movlw	150
  8598   004848  5F61               	subwf	___fltol@exp1& (0+255),f,b
  8599   00484A                     
  8600                           ; BSR set to: 0
  8601   00484A  BF61               	btfsc	___fltol@exp1& (0+255),7,b
  8602   00484C  EF2C  F024         	goto	u7070
  8603   004850  EF2A  F024         	goto	u7071
  8604   004854                     u7071:
  8605   004854  EF42  F024         	goto	l5622
  8606   004858                     u7070:
  8607   004858                     
  8608                           ; BSR set to: 0
  8609   004858  5161               	movf	___fltol@exp1& (0+255),w,b
  8610   00485A  0A80               	xorlw	128
  8611   00485C  0F97               	addlw	151
  8612   00485E  B0D8               	btfsc	status,0,c
  8613   004860  EF34  F024         	goto	u7081
  8614   004864  EF36  F024         	goto	u7080
  8615   004868                     u7081:
  8616   004868  EF38  F024         	goto	l5618
  8617   00486C                     u7080:
  8618   00486C  EFFB  F023         	goto	l5598
  8619   004870                     l5618:
  8620                           
  8621                           ; BSR set to: 0
  8622   004870  90D8               	bcf	status,0,c
  8623   004872  3256               	rrcf	(___fltol@f1+3)^0,f,c
  8624   004874  3255               	rrcf	(___fltol@f1+2)^0,f,c
  8625   004876  3254               	rrcf	(___fltol@f1+1)^0,f,c
  8626   004878  3253               	rrcf	___fltol@f1^0,f,c
  8627   00487A                     
  8628                           ; BSR set to: 0
  8629   00487A  3F61               	incfsz	___fltol@exp1& (0+255),f,b
  8630   00487C  EF38  F024         	goto	l5618
  8631   004880  EF5A  F024         	goto	l5632
  8632   004884                     l5622:
  8633                           
  8634                           ; BSR set to: 0
  8635   004884  0E1F               	movlw	31
  8636   004886  6561               	cpfsgt	___fltol@exp1& (0+255),b
  8637   004888  EF48  F024         	goto	u7091
  8638   00488C  EF4A  F024         	goto	u7090
  8639   004890                     u7091:
  8640   004890  EF52  F024         	goto	l5630
  8641   004894                     u7090:
  8642   004894  EFFB  F023         	goto	l5598
  8643   004898                     l5628:
  8644                           
  8645                           ; BSR set to: 0
  8646   004898  90D8               	bcf	status,0,c
  8647   00489A  3653               	rlcf	___fltol@f1^0,f,c
  8648   00489C  3654               	rlcf	(___fltol@f1+1)^0,f,c
  8649   00489E  3655               	rlcf	(___fltol@f1+2)^0,f,c
  8650   0048A0  3656               	rlcf	(___fltol@f1+3)^0,f,c
  8651   0048A2  0761               	decf	___fltol@exp1& (0+255),f,b
  8652   0048A4                     l5630:
  8653                           
  8654                           ; BSR set to: 0
  8655   0048A4  5161               	movf	___fltol@exp1& (0+255),w,b
  8656   0048A6  A4D8               	btfss	status,2,c
  8657   0048A8  EF58  F024         	goto	u7101
  8658   0048AC  EF5A  F024         	goto	u7100
  8659   0048B0                     u7101:
  8660   0048B0  EF4C  F024         	goto	l5628
  8661   0048B4                     u7100:
  8662   0048B4                     l5632:
  8663                           
  8664                           ; BSR set to: 0
  8665   0048B4  5160               	movf	___fltol@sign1& (0+255),w,b
  8666   0048B6  B4D8               	btfsc	status,2,c
  8667   0048B8  EF60  F024         	goto	u7111
  8668   0048BC  EF62  F024         	goto	u7110
  8669   0048C0                     u7111:
  8670   0048C0  EF6A  F024         	goto	l5636
  8671   0048C4                     u7110:
  8672   0048C4                     
  8673                           ; BSR set to: 0
  8674   0048C4  1E56               	comf	(___fltol@f1+3)^0,f,c
  8675   0048C6  1E55               	comf	(___fltol@f1+2)^0,f,c
  8676   0048C8  1E54               	comf	(___fltol@f1+1)^0,f,c
  8677   0048CA  6C53               	negf	___fltol@f1^0,c
  8678   0048CC  0E00               	movlw	0
  8679   0048CE  2254               	addwfc	(___fltol@f1+1)^0,f,c
  8680   0048D0  2255               	addwfc	(___fltol@f1+2)^0,f,c
  8681   0048D2  2256               	addwfc	(___fltol@f1+3)^0,f,c
  8682   0048D4                     l5636:
  8683                           
  8684                           ; BSR set to: 0
  8685   0048D4  C053  F053         	movff	___fltol@f1,?___fltol
  8686   0048D8  C054  F054         	movff	___fltol@f1+1,?___fltol+1
  8687   0048DC  C055  F055         	movff	___fltol@f1+2,?___fltol+2
  8688   0048E0  C056  F056         	movff	___fltol@f1+3,?___fltol+3
  8689   0048E4                     l688:
  8690                           
  8691                           ; BSR set to: 0
  8692   0048E4  0012               	return		;funcret
  8693   0048E6                     __end_of___fltol:
  8694                           	callstack 0
  8695                           
  8696 ;; *************** function ___flsub *****************
  8697 ;; Defined at:
  8698 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  8699 ;; Parameters:    Size  Location     Type
  8700 ;;  b               4   82[COMRAM] long 
  8701 ;;  a               4   86[COMRAM] long 
  8702 ;; Auto vars:     Size  Location     Type
  8703 ;;		None
  8704 ;; Return value:  Size  Location     Type
  8705 ;;                  4   82[COMRAM] long 
  8706 ;; Registers used:
  8707 ;;		wreg, status,2, status,0, cstack
  8708 ;; Tracked objects:
  8709 ;;		On entry : 0/0
  8710 ;;		On exit  : 0/0
  8711 ;;		Unchanged: 0/0
  8712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8713 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8716 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8717 ;;Total ram usage:        8 bytes
  8718 ;; Hardware stack levels used: 1
  8719 ;; Hardware stack levels required when called: 2
  8720 ;; This function calls:
  8721 ;;		___fladd
  8722 ;; This function is called by:
  8723 ;;		_efgtoa
  8724 ;;		___rem_pio2f
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           	psect	text32
  8729   0051D8                     __ptext32:
  8730                           	callstack 0
  8731   0051D8                     ___flsub:
  8732                           	callstack 25
  8733   0051D8  0E00               	movlw	0
  8734   0051DA  1A57               	xorwf	___flsub@a^0,f,c
  8735   0051DC  0E00               	movlw	0
  8736   0051DE  1A58               	xorwf	(___flsub@a+1)^0,f,c
  8737   0051E0  0E00               	movlw	0
  8738   0051E2  1A59               	xorwf	(___flsub@a+2)^0,f,c
  8739   0051E4  0E80               	movlw	128
  8740   0051E6  1A5A               	xorwf	(___flsub@a+3)^0,f,c
  8741   0051E8  C053  F043         	movff	___flsub@b,___fladd@b
  8742   0051EC  C054  F044         	movff	___flsub@b+1,___fladd@b+1
  8743   0051F0  C055  F045         	movff	___flsub@b+2,___fladd@b+2
  8744   0051F4  C056  F046         	movff	___flsub@b+3,___fladd@b+3
  8745   0051F8  C057  F047         	movff	___flsub@a,___fladd@a
  8746   0051FC  C058  F048         	movff	___flsub@a+1,___fladd@a+1
  8747   005200  C059  F049         	movff	___flsub@a+2,___fladd@a+2
  8748   005204  C05A  F04A         	movff	___flsub@a+3,___fladd@a+3
  8749   005208  ECF1  F00F         	call	___fladd	;wreg free
  8750   00520C  C043  F053         	movff	?___fladd,?___flsub
  8751   005210  C044  F054         	movff	?___fladd+1,?___flsub+1
  8752   005214  C045  F055         	movff	?___fladd+2,?___flsub+2
  8753   005218  C046  F056         	movff	?___fladd+3,?___flsub+3
  8754   00521C  0012               	return		;funcret
  8755   00521E                     __end_of___flsub:
  8756                           	callstack 0
  8757                           
  8758 ;; *************** function ___fladd *****************
  8759 ;; Defined at:
  8760 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;  b               4   66[COMRAM] long 
  8763 ;;  a               4   70[COMRAM] long 
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;  grs             1   81[COMRAM] unsigned char 
  8766 ;;  bexp            1   80[COMRAM] unsigned char 
  8767 ;;  aexp            1   79[COMRAM] unsigned char 
  8768 ;;  signs           1   78[COMRAM] unsigned char 
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  4   66[COMRAM] unsigned char 
  8771 ;; Registers used:
  8772 ;;		wreg, status,2, status,0
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8778 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8779 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8780 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8781 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8782 ;;Total ram usage:       16 bytes
  8783 ;; Hardware stack levels used: 1
  8784 ;; Hardware stack levels required when called: 1
  8785 ;; This function calls:
  8786 ;;		Nothing
  8787 ;; This function is called by:
  8788 ;;		_runDAC
  8789 ;;		___flsub
  8790 ;;		_efgtoa
  8791 ;;		_sinf
  8792 ;;		___cosdf
  8793 ;;		___rem_pio2f
  8794 ;;		___sindf
  8795 ;; This function uses a non-reentrant model
  8796 ;;
  8797                           
  8798                           	psect	text33
  8799   001FE2                     __ptext33:
  8800                           	callstack 0
  8801   001FE2                     ___fladd:
  8802                           	callstack 26
  8803   001FE2  5046               	movf	(___fladd@b+3)^0,w,c
  8804   001FE4  0B80               	andlw	128
  8805   001FE6  6E4F               	movwf	___fladd@signs^0,c
  8806   001FE8  5046               	movf	(___fladd@b+3)^0,w,c
  8807   001FEA  2446               	addwf	(___fladd@b+3)^0,w,c
  8808   001FEC  6E51               	movwf	___fladd@bexp^0,c
  8809   001FEE  AE45               	btfss	(___fladd@b+2)^0,7,c
  8810   001FF0  EFFC  F00F         	goto	u6021
  8811   001FF4  EFFE  F00F         	goto	u6020
  8812   001FF8                     u6021:
  8813   001FF8  EFFF  F00F         	goto	l4986
  8814   001FFC                     u6020:
  8815   001FFC  8051               	bsf	___fladd@bexp^0,0,c
  8816   001FFE                     l4986:
  8817   001FFE  5051               	movf	___fladd@bexp^0,w,c
  8818   002000  B4D8               	btfsc	status,2,c
  8819   002002  EF05  F010         	goto	u6031
  8820   002006  EF07  F010         	goto	u6030
  8821   00200A                     u6031:
  8822   00200A  EF1C  F010         	goto	l4996
  8823   00200E                     u6030:
  8824   00200E  2851               	incf	___fladd@bexp^0,w,c
  8825   002010  A4D8               	btfss	status,2,c
  8826   002012  EF0D  F010         	goto	u6041
  8827   002016  EF0F  F010         	goto	u6040
  8828   00201A                     u6041:
  8829   00201A  EF17  F010         	goto	l4992
  8830   00201E                     u6040:
  8831   00201E  0E00               	movlw	0
  8832   002020  6E43               	movwf	___fladd@b^0,c
  8833   002022  0E00               	movlw	0
  8834   002024  6E44               	movwf	(___fladd@b+1)^0,c
  8835   002026  0E00               	movlw	0
  8836   002028  6E45               	movwf	(___fladd@b+2)^0,c
  8837   00202A  0E00               	movlw	0
  8838   00202C  6E46               	movwf	(___fladd@b+3)^0,c
  8839   00202E                     l4992:
  8840   00202E  8E45               	bsf	(___fladd@b+2)^0,7,c
  8841   002030  0E00               	movlw	0
  8842   002032  6E46               	movwf	(___fladd@b+3)^0,c
  8843   002034  EF24  F010         	goto	l4998
  8844   002038                     l4996:
  8845   002038  0E00               	movlw	0
  8846   00203A  6E43               	movwf	___fladd@b^0,c
  8847   00203C  0E00               	movlw	0
  8848   00203E  6E44               	movwf	(___fladd@b+1)^0,c
  8849   002040  0E00               	movlw	0
  8850   002042  6E45               	movwf	(___fladd@b+2)^0,c
  8851   002044  0E00               	movlw	0
  8852   002046  6E46               	movwf	(___fladd@b+3)^0,c
  8853   002048                     l4998:
  8854   002048  504A               	movf	(___fladd@a+3)^0,w,c
  8855   00204A  0B80               	andlw	128
  8856   00204C  6E50               	movwf	___fladd@aexp^0,c
  8857   00204E  504F               	movf	___fladd@signs^0,w,c
  8858   002050  1850               	xorwf	___fladd@aexp^0,w,c
  8859   002052  B4D8               	btfsc	status,2,c
  8860   002054  EF2E  F010         	goto	u6051
  8861   002058  EF30  F010         	goto	u6050
  8862   00205C                     u6051:
  8863   00205C  EF31  F010         	goto	l5004
  8864   002060                     u6050:
  8865   002060  8C4F               	bsf	___fladd@signs^0,6,c
  8866   002062                     l5004:
  8867   002062  504A               	movf	(___fladd@a+3)^0,w,c
  8868   002064  244A               	addwf	(___fladd@a+3)^0,w,c
  8869   002066  6E50               	movwf	___fladd@aexp^0,c
  8870   002068  AE49               	btfss	(___fladd@a+2)^0,7,c
  8871   00206A  EF39  F010         	goto	u6061
  8872   00206E  EF3B  F010         	goto	u6060
  8873   002072                     u6061:
  8874   002072  EF3C  F010         	goto	l5010
  8875   002076                     u6060:
  8876   002076  8050               	bsf	___fladd@aexp^0,0,c
  8877   002078                     l5010:
  8878   002078  5050               	movf	___fladd@aexp^0,w,c
  8879   00207A  B4D8               	btfsc	status,2,c
  8880   00207C  EF42  F010         	goto	u6071
  8881   002080  EF44  F010         	goto	u6070
  8882   002084                     u6071:
  8883   002084  EF59  F010         	goto	l5020
  8884   002088                     u6070:
  8885   002088  2850               	incf	___fladd@aexp^0,w,c
  8886   00208A  A4D8               	btfss	status,2,c
  8887   00208C  EF4A  F010         	goto	u6081
  8888   002090  EF4C  F010         	goto	u6080
  8889   002094                     u6081:
  8890   002094  EF54  F010         	goto	l5016
  8891   002098                     u6080:
  8892   002098  0E00               	movlw	0
  8893   00209A  6E47               	movwf	___fladd@a^0,c
  8894   00209C  0E00               	movlw	0
  8895   00209E  6E48               	movwf	(___fladd@a+1)^0,c
  8896   0020A0  0E00               	movlw	0
  8897   0020A2  6E49               	movwf	(___fladd@a+2)^0,c
  8898   0020A4  0E00               	movlw	0
  8899   0020A6  6E4A               	movwf	(___fladd@a+3)^0,c
  8900   0020A8                     l5016:
  8901   0020A8  8E49               	bsf	(___fladd@a+2)^0,7,c
  8902   0020AA  0E00               	movlw	0
  8903   0020AC  6E4A               	movwf	(___fladd@a+3)^0,c
  8904   0020AE  EF61  F010         	goto	l5022
  8905   0020B2                     l5020:
  8906   0020B2  0E00               	movlw	0
  8907   0020B4  6E47               	movwf	___fladd@a^0,c
  8908   0020B6  0E00               	movlw	0
  8909   0020B8  6E48               	movwf	(___fladd@a+1)^0,c
  8910   0020BA  0E00               	movlw	0
  8911   0020BC  6E49               	movwf	(___fladd@a+2)^0,c
  8912   0020BE  0E00               	movlw	0
  8913   0020C0  6E4A               	movwf	(___fladd@a+3)^0,c
  8914   0020C2                     l5022:
  8915   0020C2  5051               	movf	___fladd@bexp^0,w,c
  8916   0020C4  5C50               	subwf	___fladd@aexp^0,w,c
  8917   0020C6  B0D8               	btfsc	status,0,c
  8918   0020C8  EF68  F010         	goto	u6091
  8919   0020CC  EF6A  F010         	goto	u6090
  8920   0020D0                     u6091:
  8921   0020D0  EF91  F010         	goto	l5058
  8922   0020D4                     u6090:
  8923   0020D4  AC4F               	btfss	___fladd@signs^0,6,c
  8924   0020D6  EF6F  F010         	goto	u6101
  8925   0020DA  EF71  F010         	goto	u6100
  8926   0020DE                     u6101:
  8927   0020DE  EF73  F010         	goto	l5028
  8928   0020E2                     u6100:
  8929   0020E2  0E80               	movlw	128
  8930   0020E4  1A4F               	xorwf	___fladd@signs^0,f,c
  8931   0020E6                     l5028:
  8932   0020E6  C051  F052         	movff	___fladd@bexp,___fladd@grs
  8933   0020EA  C050  F051         	movff	___fladd@aexp,___fladd@bexp
  8934   0020EE  C052  F050         	movff	___fladd@grs,___fladd@aexp
  8935   0020F2  C043  F052         	movff	___fladd@b,___fladd@grs
  8936   0020F6  C047  F043         	movff	___fladd@a,___fladd@b
  8937   0020FA  C052  F047         	movff	___fladd@grs,___fladd@a
  8938   0020FE  C044  F052         	movff	___fladd@b+1,___fladd@grs
  8939   002102  C048  F044         	movff	___fladd@a+1,___fladd@b+1
  8940   002106  C052  F048         	movff	___fladd@grs,___fladd@a+1
  8941   00210A  C045  F052         	movff	___fladd@b+2,___fladd@grs
  8942   00210E  C049  F045         	movff	___fladd@a+2,___fladd@b+2
  8943   002112  C052  F049         	movff	___fladd@grs,___fladd@a+2
  8944   002116  C046  F052         	movff	___fladd@b+3,___fladd@grs
  8945   00211A  C04A  F046         	movff	___fladd@a+3,___fladd@b+3
  8946   00211E  C052  F04A         	movff	___fladd@grs,___fladd@a+3
  8947   002122                     l5058:
  8948   002122  0E00               	movlw	0
  8949   002124  6E52               	movwf	___fladd@grs^0,c
  8950   002126  5051               	movf	___fladd@bexp^0,w,c
  8951   002128  C050  F04B         	movff	___fladd@aexp,??___fladd
  8952   00212C  6A4C               	clrf	(??___fladd+1)^0,c
  8953   00212E  5E4B               	subwf	??___fladd^0,f,c
  8954   002130  0E00               	movlw	0
  8955   002132  5A4C               	subwfb	(??___fladd+1)^0,f,c
  8956   002134  BE4C               	btfsc	(??___fladd+1)^0,7,c
  8957   002136  EFA6  F010         	goto	u6111
  8958   00213A  504C               	movf	(??___fladd+1)^0,w,c
  8959   00213C  E109               	bnz	u6110
  8960   00213E  0E1A               	movlw	26
  8961   002140  5C4B               	subwf	??___fladd^0,w,c
  8962   002142  A0D8               	btfss	status,0,c
  8963   002144  EFA6  F010         	goto	u6111
  8964   002148  EFA8  F010         	goto	u6110
  8965   00214C                     u6111:
  8966   00214C  EFDF  F010         	goto	l920
  8967   002150                     u6110:
  8968   002150  5043               	movf	___fladd@b^0,w,c
  8969   002152  1044               	iorwf	(___fladd@b+1)^0,w,c
  8970   002154  1045               	iorwf	(___fladd@b+2)^0,w,c
  8971   002156  1046               	iorwf	(___fladd@b+3)^0,w,c
  8972   002158  A4D8               	btfss	status,2,c
  8973   00215A  EFB1  F010         	goto	u6121
  8974   00215E  EFB4  F010         	goto	u6120
  8975   002162                     u6121:
  8976   002162  0E01               	movlw	1
  8977   002164  EFB5  F010         	goto	u6130
  8978   002168                     u6120:
  8979   002168  0E00               	movlw	0
  8980   00216A                     u6130:
  8981   00216A  6E52               	movwf	___fladd@grs^0,c
  8982   00216C  0E00               	movlw	0
  8983   00216E  6E43               	movwf	___fladd@b^0,c
  8984   002170  0E00               	movlw	0
  8985   002172  6E44               	movwf	(___fladd@b+1)^0,c
  8986   002174  0E00               	movlw	0
  8987   002176  6E45               	movwf	(___fladd@b+2)^0,c
  8988   002178  0E00               	movlw	0
  8989   00217A  6E46               	movwf	(___fladd@b+3)^0,c
  8990   00217C  C050  F051         	movff	___fladd@aexp,___fladd@bexp
  8991   002180  EFE8  F010         	goto	l919
  8992   002184                     l921:
  8993   002184  A052               	btfss	___fladd@grs^0,0,c
  8994   002186  EFC7  F010         	goto	u6141
  8995   00218A  EFC9  F010         	goto	u6140
  8996   00218E                     u6141:
  8997   00218E  EFCF  F010         	goto	l5070
  8998   002192                     u6140:
  8999   002192  90D8               	bcf	status,0,c
  9000   002194  3052               	rrcf	___fladd@grs^0,w,c
  9001   002196  0901               	iorlw	1
  9002   002198  6E52               	movwf	___fladd@grs^0,c
  9003   00219A  EFD1  F010         	goto	l5072
  9004   00219E                     l5070:
  9005   00219E  90D8               	bcf	status,0,c
  9006   0021A0  3252               	rrcf	___fladd@grs^0,f,c
  9007   0021A2                     l5072:
  9008   0021A2  A043               	btfss	___fladd@b^0,0,c
  9009   0021A4  EFD6  F010         	goto	u6151
  9010   0021A8  EFD8  F010         	goto	u6150
  9011   0021AC                     u6151:
  9012   0021AC  EFD9  F010         	goto	l5076
  9013   0021B0                     u6150:
  9014   0021B0  8E52               	bsf	___fladd@grs^0,7,c
  9015   0021B2                     l5076:
  9016   0021B2  3446               	rlcf	(___fladd@b+3)^0,w,c
  9017   0021B4  3246               	rrcf	(___fladd@b+3)^0,f,c
  9018   0021B6  3245               	rrcf	(___fladd@b+2)^0,f,c
  9019   0021B8  3244               	rrcf	(___fladd@b+1)^0,f,c
  9020   0021BA  3243               	rrcf	___fladd@b^0,f,c
  9021   0021BC  2A51               	incf	___fladd@bexp^0,f,c
  9022   0021BE                     l920:
  9023   0021BE  5050               	movf	___fladd@aexp^0,w,c
  9024   0021C0  5C51               	subwf	___fladd@bexp^0,w,c
  9025   0021C2  A0D8               	btfss	status,0,c
  9026   0021C4  EFE6  F010         	goto	u6161
  9027   0021C8  EFE8  F010         	goto	u6160
  9028   0021CC                     u6161:
  9029   0021CC  EFC2  F010         	goto	l921
  9030   0021D0                     u6160:
  9031   0021D0                     l919:
  9032   0021D0  BC4F               	btfsc	___fladd@signs^0,6,c
  9033   0021D2  EFED  F010         	goto	u6171
  9034   0021D6  EFEF  F010         	goto	u6170
  9035   0021DA                     u6171:
  9036   0021DA  EF2F  F011         	goto	l5104
  9037   0021DE                     u6170:
  9038   0021DE  5051               	movf	___fladd@bexp^0,w,c
  9039   0021E0  A4D8               	btfss	status,2,c
  9040   0021E2  EFF5  F010         	goto	u6181
  9041   0021E6  EFF7  F010         	goto	u6180
  9042   0021EA                     u6181:
  9043   0021EA  EF01  F011         	goto	l5086
  9044   0021EE                     u6180:
  9045   0021EE  0E00               	movlw	0
  9046   0021F0  6E43               	movwf	?___fladd^0,c
  9047   0021F2  0E00               	movlw	0
  9048   0021F4  6E44               	movwf	(?___fladd+1)^0,c
  9049   0021F6  0E00               	movlw	0
  9050   0021F8  6E45               	movwf	(?___fladd+2)^0,c
  9051   0021FA  0E00               	movlw	0
  9052   0021FC  6E46               	movwf	(?___fladd+3)^0,c
  9053   0021FE  EF50  F012         	goto	l928
  9054   002202                     l5086:
  9055   002202  5047               	movf	___fladd@a^0,w,c
  9056   002204  2643               	addwf	___fladd@b^0,f,c
  9057   002206  5048               	movf	(___fladd@a+1)^0,w,c
  9058   002208  2244               	addwfc	(___fladd@b+1)^0,f,c
  9059   00220A  5049               	movf	(___fladd@a+2)^0,w,c
  9060   00220C  2245               	addwfc	(___fladd@b+2)^0,f,c
  9061   00220E  504A               	movf	(___fladd@a+3)^0,w,c
  9062   002210  2246               	addwfc	(___fladd@b+3)^0,f,c
  9063   002212  A046               	btfss	(___fladd@b+3)^0,0,c
  9064   002214  EF0E  F011         	goto	u6191
  9065   002218  EF10  F011         	goto	u6190
  9066   00221C                     u6191:
  9067   00221C  EFBC  F011         	goto	l5140
  9068   002220                     u6190:
  9069   002220  A052               	btfss	___fladd@grs^0,0,c
  9070   002222  EF15  F011         	goto	u6201
  9071   002226  EF17  F011         	goto	u6200
  9072   00222A                     u6201:
  9073   00222A  EF1D  F011         	goto	l5094
  9074   00222E                     u6200:
  9075   00222E  90D8               	bcf	status,0,c
  9076   002230  3052               	rrcf	___fladd@grs^0,w,c
  9077   002232  0901               	iorlw	1
  9078   002234  6E52               	movwf	___fladd@grs^0,c
  9079   002236  EF1F  F011         	goto	l5096
  9080   00223A                     l5094:
  9081   00223A  90D8               	bcf	status,0,c
  9082   00223C  3252               	rrcf	___fladd@grs^0,f,c
  9083   00223E                     l5096:
  9084   00223E  A043               	btfss	___fladd@b^0,0,c
  9085   002240  EF24  F011         	goto	u6211
  9086   002244  EF26  F011         	goto	u6210
  9087   002248                     u6211:
  9088   002248  EF27  F011         	goto	l5100
  9089   00224C                     u6210:
  9090   00224C  8E52               	bsf	___fladd@grs^0,7,c
  9091   00224E                     l5100:
  9092   00224E  3446               	rlcf	(___fladd@b+3)^0,w,c
  9093   002250  3246               	rrcf	(___fladd@b+3)^0,f,c
  9094   002252  3245               	rrcf	(___fladd@b+2)^0,f,c
  9095   002254  3244               	rrcf	(___fladd@b+1)^0,f,c
  9096   002256  3243               	rrcf	___fladd@b^0,f,c
  9097   002258  2A51               	incf	___fladd@bexp^0,f,c
  9098   00225A  EFBC  F011         	goto	l5140
  9099   00225E                     l5104:
  9100   00225E  5047               	movf	___fladd@a^0,w,c
  9101   002260  5C43               	subwf	___fladd@b^0,w,c
  9102   002262  5048               	movf	(___fladd@a+1)^0,w,c
  9103   002264  5844               	subwfb	(___fladd@b+1)^0,w,c
  9104   002266  5049               	movf	(___fladd@a+2)^0,w,c
  9105   002268  5845               	subwfb	(___fladd@b+2)^0,w,c
  9106   00226A  5046               	movf	(___fladd@b+3)^0,w,c
  9107   00226C  0A80               	xorlw	128
  9108   00226E  6E4B               	movwf	??___fladd^0,c
  9109   002270  504A               	movf	(___fladd@a+3)^0,w,c
  9110   002272  0A80               	xorlw	128
  9111   002274  584B               	subwfb	??___fladd^0,w,c
  9112   002276  B0D8               	btfsc	status,0,c
  9113   002278  EF40  F011         	goto	u6221
  9114   00227C  EF42  F011         	goto	u6220
  9115   002280                     u6221:
  9116   002280  EF6D  F011         	goto	l5114
  9117   002284                     u6220:
  9118   002284  5043               	movf	___fladd@b^0,w,c
  9119   002286  5C47               	subwf	___fladd@a^0,w,c
  9120   002288  6E4B               	movwf	??___fladd^0,c
  9121   00228A  5044               	movf	(___fladd@b+1)^0,w,c
  9122   00228C  5848               	subwfb	(___fladd@a+1)^0,w,c
  9123   00228E  6E4C               	movwf	(??___fladd+1)^0,c
  9124   002290  5045               	movf	(___fladd@b+2)^0,w,c
  9125   002292  5849               	subwfb	(___fladd@a+2)^0,w,c
  9126   002294  6E4D               	movwf	(??___fladd+2)^0,c
  9127   002296  5046               	movf	(___fladd@b+3)^0,w,c
  9128   002298  584A               	subwfb	(___fladd@a+3)^0,w,c
  9129   00229A  6E4E               	movwf	(??___fladd+3)^0,c
  9130   00229C  0EFF               	movlw	255
  9131   00229E  244B               	addwf	??___fladd^0,w,c
  9132   0022A0  6E43               	movwf	___fladd@b^0,c
  9133   0022A2  0EFF               	movlw	255
  9134   0022A4  204C               	addwfc	(??___fladd+1)^0,w,c
  9135   0022A6  6E44               	movwf	(___fladd@b+1)^0,c
  9136   0022A8  0EFF               	movlw	255
  9137   0022AA  204D               	addwfc	(??___fladd+2)^0,w,c
  9138   0022AC  6E45               	movwf	(___fladd@b+2)^0,c
  9139   0022AE  0EFF               	movlw	255
  9140   0022B0  204E               	addwfc	(??___fladd+3)^0,w,c
  9141   0022B2  6E46               	movwf	(___fladd@b+3)^0,c
  9142   0022B4  0E80               	movlw	128
  9143   0022B6  1A4F               	xorwf	___fladd@signs^0,f,c
  9144   0022B8  6C52               	negf	___fladd@grs^0,c
  9145   0022BA  5052               	movf	___fladd@grs^0,w,c
  9146   0022BC  A4D8               	btfss	status,2,c
  9147   0022BE  EF63  F011         	goto	u6231
  9148   0022C2  EF65  F011         	goto	u6230
  9149   0022C6                     u6231:
  9150   0022C6  EF75  F011         	goto	l936
  9151   0022CA                     u6230:
  9152   0022CA  0E01               	movlw	1
  9153   0022CC  2643               	addwf	___fladd@b^0,f,c
  9154   0022CE  0E00               	movlw	0
  9155   0022D0  2244               	addwfc	(___fladd@b+1)^0,f,c
  9156   0022D2  2245               	addwfc	(___fladd@b+2)^0,f,c
  9157   0022D4  2246               	addwfc	(___fladd@b+3)^0,f,c
  9158   0022D6  EF75  F011         	goto	l936
  9159   0022DA                     l5114:
  9160   0022DA  5047               	movf	___fladd@a^0,w,c
  9161   0022DC  5E43               	subwf	___fladd@b^0,f,c
  9162   0022DE  5048               	movf	(___fladd@a+1)^0,w,c
  9163   0022E0  5A44               	subwfb	(___fladd@b+1)^0,f,c
  9164   0022E2  5049               	movf	(___fladd@a+2)^0,w,c
  9165   0022E4  5A45               	subwfb	(___fladd@b+2)^0,f,c
  9166   0022E6  504A               	movf	(___fladd@a+3)^0,w,c
  9167   0022E8  5A46               	subwfb	(___fladd@b+3)^0,f,c
  9168   0022EA                     l936:
  9169   0022EA  5043               	movf	___fladd@b^0,w,c
  9170   0022EC  1044               	iorwf	(___fladd@b+1)^0,w,c
  9171   0022EE  1045               	iorwf	(___fladd@b+2)^0,w,c
  9172   0022F0  1046               	iorwf	(___fladd@b+3)^0,w,c
  9173   0022F2  A4D8               	btfss	status,2,c
  9174   0022F4  EF7E  F011         	goto	u6241
  9175   0022F8  EF80  F011         	goto	u6240
  9176   0022FC                     u6241:
  9177   0022FC  EFB5  F011         	goto	l5138
  9178   002300                     u6240:
  9179   002300  5052               	movf	___fladd@grs^0,w,c
  9180   002302  A4D8               	btfss	status,2,c
  9181   002304  EF86  F011         	goto	u6251
  9182   002308  EF88  F011         	goto	u6250
  9183   00230C                     u6251:
  9184   00230C  EFB5  F011         	goto	l5138
  9185   002310                     u6250:
  9186   002310  0E00               	movlw	0
  9187   002312  6E43               	movwf	?___fladd^0,c
  9188   002314  0E00               	movlw	0
  9189   002316  6E44               	movwf	(?___fladd+1)^0,c
  9190   002318  0E00               	movlw	0
  9191   00231A  6E45               	movwf	(?___fladd+2)^0,c
  9192   00231C  0E00               	movlw	0
  9193   00231E  6E46               	movwf	(?___fladd+3)^0,c
  9194   002320  EF50  F012         	goto	l928
  9195   002324                     l5122:
  9196   002324  90D8               	bcf	status,0,c
  9197   002326  3643               	rlcf	___fladd@b^0,f,c
  9198   002328  3644               	rlcf	(___fladd@b+1)^0,f,c
  9199   00232A  3645               	rlcf	(___fladd@b+2)^0,f,c
  9200   00232C  3646               	rlcf	(___fladd@b+3)^0,f,c
  9201   00232E  AE52               	btfss	___fladd@grs^0,7,c
  9202   002330  EF9C  F011         	goto	u6261
  9203   002334  EF9E  F011         	goto	u6260
  9204   002338                     u6261:
  9205   002338  EF9F  F011         	goto	l5128
  9206   00233C                     u6260:
  9207   00233C  8043               	bsf	___fladd@b^0,0,c
  9208   00233E                     l5128:
  9209   00233E  A052               	btfss	___fladd@grs^0,0,c
  9210   002340  EFA4  F011         	goto	u6271
  9211   002344  EFA6  F011         	goto	u6270
  9212   002348                     u6271:
  9213   002348  EFAA  F011         	goto	l5132
  9214   00234C                     u6270:
  9215   00234C  80D8               	bsf	status,0,c
  9216   00234E  3652               	rlcf	___fladd@grs^0,f,c
  9217   002350  EFAC  F011         	goto	l5134
  9218   002354                     l5132:
  9219   002354  90D8               	bcf	status,0,c
  9220   002356  3652               	rlcf	___fladd@grs^0,f,c
  9221   002358                     l5134:
  9222   002358  5051               	movf	___fladd@bexp^0,w,c
  9223   00235A  B4D8               	btfsc	status,2,c
  9224   00235C  EFB2  F011         	goto	u6281
  9225   002360  EFB4  F011         	goto	u6280
  9226   002364                     u6281:
  9227   002364  EFB5  F011         	goto	l5138
  9228   002368                     u6280:
  9229   002368  0651               	decf	___fladd@bexp^0,f,c
  9230   00236A                     l5138:
  9231   00236A  AE45               	btfss	(___fladd@b+2)^0,7,c
  9232   00236C  EFBA  F011         	goto	u6291
  9233   002370  EFBC  F011         	goto	u6290
  9234   002374                     u6291:
  9235   002374  EF92  F011         	goto	l5122
  9236   002378                     u6290:
  9237   002378                     l5140:
  9238   002378  0E00               	movlw	0
  9239   00237A  6E50               	movwf	___fladd@aexp^0,c
  9240   00237C  AE52               	btfss	___fladd@grs^0,7,c
  9241   00237E  EFC3  F011         	goto	u6301
  9242   002382  EFC5  F011         	goto	u6300
  9243   002386                     u6301:
  9244   002386  EFDD  F011         	goto	l945
  9245   00238A                     u6300:
  9246   00238A  C052  F04B         	movff	___fladd@grs,??___fladd
  9247   00238E  0E7F               	movlw	127
  9248   002390  164B               	andwf	??___fladd^0,f,c
  9249   002392  B4D8               	btfsc	status,2,c
  9250   002394  EFCE  F011         	goto	u6311
  9251   002398  EFD0  F011         	goto	u6310
  9252   00239C                     u6311:
  9253   00239C  EFD4  F011         	goto	l946
  9254   0023A0                     u6310:
  9255   0023A0                     l5146:
  9256   0023A0  0E01               	movlw	1
  9257   0023A2  6E50               	movwf	___fladd@aexp^0,c
  9258   0023A4  EFDD  F011         	goto	l945
  9259   0023A8                     l946:
  9260   0023A8  A043               	btfss	___fladd@b^0,0,c
  9261   0023AA  EFD9  F011         	goto	u6321
  9262   0023AE  EFDB  F011         	goto	u6320
  9263   0023B2                     u6321:
  9264   0023B2  EFDD  F011         	goto	l945
  9265   0023B6                     u6320:
  9266   0023B6  EFD0  F011         	goto	l5146
  9267   0023BA                     l945:
  9268   0023BA  5050               	movf	___fladd@aexp^0,w,c
  9269   0023BC  B4D8               	btfsc	status,2,c
  9270   0023BE  EFE3  F011         	goto	u6331
  9271   0023C2  EFE5  F011         	goto	u6330
  9272   0023C6                     u6331:
  9273   0023C6  EF10  F012         	goto	l5158
  9274   0023CA                     u6330:
  9275   0023CA  0E01               	movlw	1
  9276   0023CC  2643               	addwf	___fladd@b^0,f,c
  9277   0023CE  0E00               	movlw	0
  9278   0023D0  2244               	addwfc	(___fladd@b+1)^0,f,c
  9279   0023D2  2245               	addwfc	(___fladd@b+2)^0,f,c
  9280   0023D4  2246               	addwfc	(___fladd@b+3)^0,f,c
  9281   0023D6  A046               	btfss	(___fladd@b+3)^0,0,c
  9282   0023D8  EFF0  F011         	goto	u6341
  9283   0023DC  EFF2  F011         	goto	u6340
  9284   0023E0                     u6341:
  9285   0023E0  EF10  F012         	goto	l5158
  9286   0023E4                     u6340:
  9287   0023E4  C043  F04B         	movff	___fladd@b,??___fladd
  9288   0023E8  C044  F04C         	movff	___fladd@b+1,??___fladd+1
  9289   0023EC  C045  F04D         	movff	___fladd@b+2,??___fladd+2
  9290   0023F0  C046  F04E         	movff	___fladd@b+3,??___fladd+3
  9291   0023F4  344E               	rlcf	(??___fladd+3)^0,w,c
  9292   0023F6  324E               	rrcf	(??___fladd+3)^0,f,c
  9293   0023F8  324D               	rrcf	(??___fladd+2)^0,f,c
  9294   0023FA  324C               	rrcf	(??___fladd+1)^0,f,c
  9295   0023FC  324B               	rrcf	??___fladd^0,f,c
  9296   0023FE  C04B  F043         	movff	??___fladd,___fladd@b
  9297   002402  C04C  F044         	movff	??___fladd+1,___fladd@b+1
  9298   002406  C04D  F045         	movff	??___fladd+2,___fladd@b+2
  9299   00240A  C04E  F046         	movff	??___fladd+3,___fladd@b+3
  9300   00240E  2851               	incf	___fladd@bexp^0,w,c
  9301   002410  B4D8               	btfsc	status,2,c
  9302   002412  EF0D  F012         	goto	u6351
  9303   002416  EF0F  F012         	goto	u6350
  9304   00241A                     u6351:
  9305   00241A  EF10  F012         	goto	l5158
  9306   00241E                     u6350:
  9307   00241E  2A51               	incf	___fladd@bexp^0,f,c
  9308   002420                     l5158:
  9309   002420  2851               	incf	___fladd@bexp^0,w,c
  9310   002422  B4D8               	btfsc	status,2,c
  9311   002424  EF16  F012         	goto	u6361
  9312   002428  EF18  F012         	goto	u6360
  9313   00242C                     u6361:
  9314   00242C  EF20  F012         	goto	l5162
  9315   002430                     u6360:
  9316   002430  5051               	movf	___fladd@bexp^0,w,c
  9317   002432  A4D8               	btfss	status,2,c
  9318   002434  EF1E  F012         	goto	u6371
  9319   002438  EF20  F012         	goto	u6370
  9320   00243C                     u6371:
  9321   00243C  EF32  F012         	goto	l5166
  9322   002440                     u6370:
  9323   002440                     l5162:
  9324   002440  0E00               	movlw	0
  9325   002442  6E43               	movwf	___fladd@b^0,c
  9326   002444  0E00               	movlw	0
  9327   002446  6E44               	movwf	(___fladd@b+1)^0,c
  9328   002448  0E00               	movlw	0
  9329   00244A  6E45               	movwf	(___fladd@b+2)^0,c
  9330   00244C  0E00               	movlw	0
  9331   00244E  6E46               	movwf	(___fladd@b+3)^0,c
  9332   002450  5051               	movf	___fladd@bexp^0,w,c
  9333   002452  A4D8               	btfss	status,2,c
  9334   002454  EF2E  F012         	goto	u6381
  9335   002458  EF30  F012         	goto	u6380
  9336   00245C                     u6381:
  9337   00245C  EF32  F012         	goto	l5166
  9338   002460                     u6380:
  9339   002460  0E00               	movlw	0
  9340   002462  6E4F               	movwf	___fladd@signs^0,c
  9341   002464                     l5166:
  9342   002464  A051               	btfss	___fladd@bexp^0,0,c
  9343   002466  EF37  F012         	goto	u6391
  9344   00246A  EF39  F012         	goto	u6390
  9345   00246E                     u6391:
  9346   00246E  EF3C  F012         	goto	l5170
  9347   002472                     u6390:
  9348   002472  8E45               	bsf	(___fladd@b+2)^0,7,c
  9349   002474  EF3D  F012         	goto	l5172
  9350   002478                     l5170:
  9351   002478  9E45               	bcf	(___fladd@b+2)^0,7,c
  9352   00247A                     l5172:
  9353   00247A  90D8               	bcf	status,0,c
  9354   00247C  3051               	rrcf	___fladd@bexp^0,w,c
  9355   00247E  6E46               	movwf	(___fladd@b+3)^0,c
  9356   002480  AE4F               	btfss	___fladd@signs^0,7,c
  9357   002482  EF45  F012         	goto	u6401
  9358   002486  EF47  F012         	goto	u6400
  9359   00248A                     u6401:
  9360   00248A  EF48  F012         	goto	l5178
  9361   00248E                     u6400:
  9362   00248E  8E46               	bsf	(___fladd@b+3)^0,7,c
  9363   002490                     l5178:
  9364   002490  C043  F043         	movff	___fladd@b,?___fladd
  9365   002494  C044  F044         	movff	___fladd@b+1,?___fladd+1
  9366   002498  C045  F045         	movff	___fladd@b+2,?___fladd+2
  9367   00249C  C046  F046         	movff	___fladd@b+3,?___fladd+3
  9368   0024A0                     l928:
  9369   0024A0  0012               	return		;funcret
  9370   0024A2                     __end_of___fladd:
  9371                           	callstack 0
  9372                           
  9373 ;; *************** function ___flneg *****************
  9374 ;; Defined at:
  9375 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  9376 ;; Parameters:    Size  Location     Type
  9377 ;;  f1              4   24[BANK0 ] unsigned char 
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;		None
  9380 ;; Return value:  Size  Location     Type
  9381 ;;                  4   24[BANK0 ] unsigned char 
  9382 ;; Registers used:
  9383 ;;		wreg, status,2, status,0
  9384 ;; Tracked objects:
  9385 ;;		On entry : 0/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9389 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9392 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9393 ;;Total ram usage:        4 bytes
  9394 ;; Hardware stack levels used: 1
  9395 ;; Hardware stack levels required when called: 1
  9396 ;; This function calls:
  9397 ;;		Nothing
  9398 ;; This function is called by:
  9399 ;;		_efgtoa
  9400 ;;		_sinf
  9401 ;;		___rem_pio2f
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           
  9405                           	psect	text34
  9406   00531C                     __ptext34:
  9407                           	callstack 0
  9408   00531C                     ___flneg:
  9409                           	callstack 26
  9410   00531C  0100               	movlb	0	; () banked
  9411   00531E  5178               	movf	___flneg@f1& (0+255),w,b
  9412   005320  1179               	iorwf	(___flneg@f1+1)& (0+255),w,b
  9413   005322  117A               	iorwf	(___flneg@f1+2)& (0+255),w,b
  9414   005324  117B               	iorwf	(___flneg@f1+3)& (0+255),w,b
  9415   005326  B4D8               	btfsc	status,2,c
  9416   005328  EF98  F029         	goto	u7041
  9417   00532C  EF9A  F029         	goto	u7040
  9418   005330                     u7041:
  9419   005330  EFA2  F029         	goto	l5592
  9420   005334                     u7040:
  9421   005334                     
  9422                           ; BSR set to: 0
  9423   005334  0E00               	movlw	0
  9424   005336  1B78               	xorwf	___flneg@f1& (0+255),f,b
  9425   005338  0E00               	movlw	0
  9426   00533A  1B79               	xorwf	(___flneg@f1+1)& (0+255),f,b
  9427   00533C  0E00               	movlw	0
  9428   00533E  1B7A               	xorwf	(___flneg@f1+2)& (0+255),f,b
  9429   005340  0E80               	movlw	128
  9430   005342  1B7B               	xorwf	(___flneg@f1+3)& (0+255),f,b
  9431   005344                     l5592:
  9432                           
  9433                           ; BSR set to: 0
  9434   005344  C078  F078         	movff	___flneg@f1,?___flneg
  9435   005348  C079  F079         	movff	___flneg@f1+1,?___flneg+1
  9436   00534C  C07A  F07A         	movff	___flneg@f1+2,?___flneg+2
  9437   005350  C07B  F07B         	movff	___flneg@f1+3,?___flneg+3
  9438   005354                     
  9439                           ; BSR set to: 0
  9440   005354  0012               	return		;funcret
  9441   005356                     __end_of___flneg:
  9442                           	callstack 0
  9443                           
  9444 ;; *************** function ___flmul *****************
  9445 ;; Defined at:
  9446 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;  b               4   16[COMRAM] unsigned char 
  9449 ;;  a               4   20[COMRAM] unsigned char 
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;  prod            4   35[COMRAM] struct .
  9452 ;;  grs             4   30[COMRAM] unsigned long 
  9453 ;;  temp            2   39[COMRAM] struct .
  9454 ;;  bexp            1   34[COMRAM] unsigned char 
  9455 ;;  aexp            1   29[COMRAM] unsigned char 
  9456 ;;  sign            1   28[COMRAM] unsigned char 
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  4   16[COMRAM] unsigned char 
  9459 ;; Registers used:
  9460 ;;		wreg, status,2, status,0, prodl, prodh
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/0
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9466 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9467 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9468 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9469 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9470 ;;Total ram usage:       25 bytes
  9471 ;; Hardware stack levels used: 1
  9472 ;; Hardware stack levels required when called: 1
  9473 ;; This function calls:
  9474 ;;		Nothing
  9475 ;; This function is called by:
  9476 ;;		_runDAC
  9477 ;;		_runADC
  9478 ;;		_efgtoa
  9479 ;;		___cosdf
  9480 ;;		___rem_pio2f
  9481 ;;		___sindf
  9482 ;; This function uses a non-reentrant model
  9483 ;;
  9484                           
  9485                           	psect	text35
  9486   0024A2                     __ptext35:
  9487                           	callstack 0
  9488   0024A2                     ___flmul:
  9489                           	callstack 26
  9490   0024A2  5014               	movf	(___flmul@b+3)^0,w,c
  9491   0024A4  0B80               	andlw	128
  9492   0024A6  6E1D               	movwf	___flmul@sign^0,c
  9493   0024A8  5014               	movf	(___flmul@b+3)^0,w,c
  9494   0024AA  2414               	addwf	(___flmul@b+3)^0,w,c
  9495   0024AC  6E23               	movwf	___flmul@bexp^0,c
  9496   0024AE  AE13               	btfss	(___flmul@b+2)^0,7,c
  9497   0024B0  EF5C  F012         	goto	u6651
  9498   0024B4  EF5E  F012         	goto	u6650
  9499   0024B8                     u6651:
  9500   0024B8  EF5F  F012         	goto	l5340
  9501   0024BC                     u6650:
  9502   0024BC  8023               	bsf	___flmul@bexp^0,0,c
  9503   0024BE                     l5340:
  9504   0024BE  5023               	movf	___flmul@bexp^0,w,c
  9505   0024C0  B4D8               	btfsc	status,2,c
  9506   0024C2  EF65  F012         	goto	u6661
  9507   0024C6  EF67  F012         	goto	u6660
  9508   0024CA                     u6661:
  9509   0024CA  EF7A  F012         	goto	l5348
  9510   0024CE                     u6660:
  9511   0024CE  2823               	incf	___flmul@bexp^0,w,c
  9512   0024D0  A4D8               	btfss	status,2,c
  9513   0024D2  EF6D  F012         	goto	u6671
  9514   0024D6  EF6F  F012         	goto	u6670
  9515   0024DA                     u6671:
  9516   0024DA  EF77  F012         	goto	l5346
  9517   0024DE                     u6670:
  9518   0024DE  0E00               	movlw	0
  9519   0024E0  6E11               	movwf	___flmul@b^0,c
  9520   0024E2  0E00               	movlw	0
  9521   0024E4  6E12               	movwf	(___flmul@b+1)^0,c
  9522   0024E6  0E00               	movlw	0
  9523   0024E8  6E13               	movwf	(___flmul@b+2)^0,c
  9524   0024EA  0E00               	movlw	0
  9525   0024EC  6E14               	movwf	(___flmul@b+3)^0,c
  9526   0024EE                     l5346:
  9527   0024EE  8E13               	bsf	(___flmul@b+2)^0,7,c
  9528   0024F0  EF82  F012         	goto	l5350
  9529   0024F4                     l5348:
  9530   0024F4  0E00               	movlw	0
  9531   0024F6  6E11               	movwf	___flmul@b^0,c
  9532   0024F8  0E00               	movlw	0
  9533   0024FA  6E12               	movwf	(___flmul@b+1)^0,c
  9534   0024FC  0E00               	movlw	0
  9535   0024FE  6E13               	movwf	(___flmul@b+2)^0,c
  9536   002500  0E00               	movlw	0
  9537   002502  6E14               	movwf	(___flmul@b+3)^0,c
  9538   002504                     l5350:
  9539   002504  5018               	movf	(___flmul@a+3)^0,w,c
  9540   002506  0B80               	andlw	128
  9541   002508  1A1D               	xorwf	___flmul@sign^0,f,c
  9542   00250A  5018               	movf	(___flmul@a+3)^0,w,c
  9543   00250C  2418               	addwf	(___flmul@a+3)^0,w,c
  9544   00250E  6E1E               	movwf	___flmul@aexp^0,c
  9545   002510  AE17               	btfss	(___flmul@a+2)^0,7,c
  9546   002512  EF8D  F012         	goto	u6681
  9547   002516  EF8F  F012         	goto	u6680
  9548   00251A                     u6681:
  9549   00251A  EF90  F012         	goto	l5358
  9550   00251E                     u6680:
  9551   00251E  801E               	bsf	___flmul@aexp^0,0,c
  9552   002520                     l5358:
  9553   002520  501E               	movf	___flmul@aexp^0,w,c
  9554   002522  B4D8               	btfsc	status,2,c
  9555   002524  EF96  F012         	goto	u6691
  9556   002528  EF98  F012         	goto	u6690
  9557   00252C                     u6691:
  9558   00252C  EFAB  F012         	goto	l5366
  9559   002530                     u6690:
  9560   002530  281E               	incf	___flmul@aexp^0,w,c
  9561   002532  A4D8               	btfss	status,2,c
  9562   002534  EF9E  F012         	goto	u6701
  9563   002538  EFA0  F012         	goto	u6700
  9564   00253C                     u6701:
  9565   00253C  EFA8  F012         	goto	l5364
  9566   002540                     u6700:
  9567   002540  0E00               	movlw	0
  9568   002542  6E15               	movwf	___flmul@a^0,c
  9569   002544  0E00               	movlw	0
  9570   002546  6E16               	movwf	(___flmul@a+1)^0,c
  9571   002548  0E00               	movlw	0
  9572   00254A  6E17               	movwf	(___flmul@a+2)^0,c
  9573   00254C  0E00               	movlw	0
  9574   00254E  6E18               	movwf	(___flmul@a+3)^0,c
  9575   002550                     l5364:
  9576   002550  8E17               	bsf	(___flmul@a+2)^0,7,c
  9577   002552  EFB3  F012         	goto	l1005
  9578   002556                     l5366:
  9579   002556  0E00               	movlw	0
  9580   002558  6E15               	movwf	___flmul@a^0,c
  9581   00255A  0E00               	movlw	0
  9582   00255C  6E16               	movwf	(___flmul@a+1)^0,c
  9583   00255E  0E00               	movlw	0
  9584   002560  6E17               	movwf	(___flmul@a+2)^0,c
  9585   002562  0E00               	movlw	0
  9586   002564  6E18               	movwf	(___flmul@a+3)^0,c
  9587   002566                     l1005:
  9588   002566  501E               	movf	___flmul@aexp^0,w,c
  9589   002568  B4D8               	btfsc	status,2,c
  9590   00256A  EFB9  F012         	goto	u6711
  9591   00256E  EFBB  F012         	goto	u6710
  9592   002572                     u6711:
  9593   002572  EFC3  F012         	goto	l5370
  9594   002576                     u6710:
  9595   002576  5023               	movf	___flmul@bexp^0,w,c
  9596   002578  A4D8               	btfss	status,2,c
  9597   00257A  EFC1  F012         	goto	u6721
  9598   00257E  EFC3  F012         	goto	u6720
  9599   002582                     u6721:
  9600   002582  EFCD  F012         	goto	l5374
  9601   002586                     u6720:
  9602   002586                     l5370:
  9603   002586  0E00               	movlw	0
  9604   002588  6E11               	movwf	?___flmul^0,c
  9605   00258A  0E00               	movlw	0
  9606   00258C  6E12               	movwf	(?___flmul+1)^0,c
  9607   00258E  0E00               	movlw	0
  9608   002590  6E13               	movwf	(?___flmul+2)^0,c
  9609   002592  0E00               	movlw	0
  9610   002594  6E14               	movwf	(?___flmul+3)^0,c
  9611   002596  EF65  F014         	goto	l1009
  9612   00259A                     l5374:
  9613   00259A  5017               	movf	(___flmul@a+2)^0,w,c
  9614   00259C  0211               	mulwf	___flmul@b^0,c
  9615   00259E  CFF3 F028          	movff	prodl,___flmul@temp
  9616   0025A2  CFF4 F029          	movff	prodh,___flmul@temp+1
  9617   0025A6  5028               	movf	___flmul@temp^0,w,c
  9618   0025A8  6E1F               	movwf	___flmul@grs^0,c
  9619   0025AA  6A20               	clrf	(___flmul@grs+1)^0,c
  9620   0025AC  6A21               	clrf	(___flmul@grs+2)^0,c
  9621   0025AE  6A22               	clrf	(___flmul@grs+3)^0,c
  9622   0025B0  5029               	movf	(___flmul@temp+1)^0,w,c
  9623   0025B2  6E24               	movwf	___flmul@prod^0,c
  9624   0025B4  6A25               	clrf	(___flmul@prod+1)^0,c
  9625   0025B6  6A26               	clrf	(___flmul@prod+2)^0,c
  9626   0025B8  6A27               	clrf	(___flmul@prod+3)^0,c
  9627   0025BA  5016               	movf	(___flmul@a+1)^0,w,c
  9628   0025BC  0212               	mulwf	(___flmul@b+1)^0,c
  9629   0025BE  CFF3 F028          	movff	prodl,___flmul@temp
  9630   0025C2  CFF4 F029          	movff	prodh,___flmul@temp+1
  9631   0025C6  5028               	movf	___flmul@temp^0,w,c
  9632   0025C8  261F               	addwf	___flmul@grs^0,f,c
  9633   0025CA  0E00               	movlw	0
  9634   0025CC  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9635   0025CE  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9636   0025D0  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9637   0025D2  5029               	movf	(___flmul@temp+1)^0,w,c
  9638   0025D4  2624               	addwf	___flmul@prod^0,f,c
  9639   0025D6  0E00               	movlw	0
  9640   0025D8  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9641   0025DA  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9642   0025DC  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9643   0025DE  5015               	movf	___flmul@a^0,w,c
  9644   0025E0  0213               	mulwf	(___flmul@b+2)^0,c
  9645   0025E2  CFF3 F028          	movff	prodl,___flmul@temp
  9646   0025E6  CFF4 F029          	movff	prodh,___flmul@temp+1
  9647   0025EA  5028               	movf	___flmul@temp^0,w,c
  9648   0025EC  261F               	addwf	___flmul@grs^0,f,c
  9649   0025EE  0E00               	movlw	0
  9650   0025F0  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9651   0025F2  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9652   0025F4  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9653   0025F6  5029               	movf	(___flmul@temp+1)^0,w,c
  9654   0025F8  2624               	addwf	___flmul@prod^0,f,c
  9655   0025FA  0E00               	movlw	0
  9656   0025FC  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9657   0025FE  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9658   002600  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9659   002602  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  9660   002606  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  9661   00260A  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  9662   00260E  6A1F               	clrf	___flmul@grs^0,c
  9663   002610  5015               	movf	___flmul@a^0,w,c
  9664   002612  0212               	mulwf	(___flmul@b+1)^0,c
  9665   002614  CFF3 F028          	movff	prodl,___flmul@temp
  9666   002618  CFF4 F029          	movff	prodh,___flmul@temp+1
  9667   00261C  5028               	movf	___flmul@temp^0,w,c
  9668   00261E  261F               	addwf	___flmul@grs^0,f,c
  9669   002620  5029               	movf	(___flmul@temp+1)^0,w,c
  9670   002622  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9671   002624  0E00               	movlw	0
  9672   002626  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9673   002628  0E00               	movlw	0
  9674   00262A  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9675   00262C  5016               	movf	(___flmul@a+1)^0,w,c
  9676   00262E  0211               	mulwf	___flmul@b^0,c
  9677   002630  CFF3 F028          	movff	prodl,___flmul@temp
  9678   002634  CFF4 F029          	movff	prodh,___flmul@temp+1
  9679   002638  5028               	movf	___flmul@temp^0,w,c
  9680   00263A  261F               	addwf	___flmul@grs^0,f,c
  9681   00263C  5029               	movf	(___flmul@temp+1)^0,w,c
  9682   00263E  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9683   002640  0E00               	movlw	0
  9684   002642  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9685   002644  0E00               	movlw	0
  9686   002646  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9687   002648  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  9688   00264C  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  9689   002650  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  9690   002654  6A1F               	clrf	___flmul@grs^0,c
  9691   002656  5015               	movf	___flmul@a^0,w,c
  9692   002658  0211               	mulwf	___flmul@b^0,c
  9693   00265A  CFF3 F028          	movff	prodl,___flmul@temp
  9694   00265E  CFF4 F029          	movff	prodh,___flmul@temp+1
  9695   002662  5028               	movf	___flmul@temp^0,w,c
  9696   002664  261F               	addwf	___flmul@grs^0,f,c
  9697   002666  5029               	movf	(___flmul@temp+1)^0,w,c
  9698   002668  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9699   00266A  0E00               	movlw	0
  9700   00266C  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9701   00266E  0E00               	movlw	0
  9702   002670  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9703   002672  5017               	movf	(___flmul@a+2)^0,w,c
  9704   002674  0212               	mulwf	(___flmul@b+1)^0,c
  9705   002676  CFF3 F028          	movff	prodl,___flmul@temp
  9706   00267A  CFF4 F029          	movff	prodh,___flmul@temp+1
  9707   00267E  5028               	movf	___flmul@temp^0,w,c
  9708   002680  2624               	addwf	___flmul@prod^0,f,c
  9709   002682  5029               	movf	(___flmul@temp+1)^0,w,c
  9710   002684  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9711   002686  0E00               	movlw	0
  9712   002688  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9713   00268A  0E00               	movlw	0
  9714   00268C  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9715   00268E  5016               	movf	(___flmul@a+1)^0,w,c
  9716   002690  0213               	mulwf	(___flmul@b+2)^0,c
  9717   002692  CFF3 F028          	movff	prodl,___flmul@temp
  9718   002696  CFF4 F029          	movff	prodh,___flmul@temp+1
  9719   00269A  5028               	movf	___flmul@temp^0,w,c
  9720   00269C  2624               	addwf	___flmul@prod^0,f,c
  9721   00269E  5029               	movf	(___flmul@temp+1)^0,w,c
  9722   0026A0  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9723   0026A2  0E00               	movlw	0
  9724   0026A4  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9725   0026A6  0E00               	movlw	0
  9726   0026A8  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9727   0026AA  5017               	movf	(___flmul@a+2)^0,w,c
  9728   0026AC  0213               	mulwf	(___flmul@b+2)^0,c
  9729   0026AE  CFF3 F028          	movff	prodl,___flmul@temp
  9730   0026B2  CFF4 F029          	movff	prodh,___flmul@temp+1
  9731   0026B6  5028               	movf	___flmul@temp^0,w,c
  9732   0026B8  6E19               	movwf	??___flmul^0,c
  9733   0026BA  5029               	movf	(___flmul@temp+1)^0,w,c
  9734   0026BC  6E1A               	movwf	(??___flmul+1)^0,c
  9735   0026BE  6A1B               	clrf	(??___flmul+2)^0,c
  9736   0026C0  6A1C               	clrf	(??___flmul+3)^0,c
  9737   0026C2  C01B  F01C         	movff	??___flmul+2,??___flmul+3
  9738   0026C6  C01A  F01B         	movff	??___flmul+1,??___flmul+2
  9739   0026CA  C019  F01A         	movff	??___flmul,??___flmul+1
  9740   0026CE  6A19               	clrf	??___flmul^0,c
  9741   0026D0  5019               	movf	??___flmul^0,w,c
  9742   0026D2  2624               	addwf	___flmul@prod^0,f,c
  9743   0026D4  501A               	movf	(??___flmul+1)^0,w,c
  9744   0026D6  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9745   0026D8  501B               	movf	(??___flmul+2)^0,w,c
  9746   0026DA  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9747   0026DC  501C               	movf	(??___flmul+3)^0,w,c
  9748   0026DE  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9749   0026E0  C01F  F019         	movff	___flmul@grs,??___flmul
  9750   0026E4  C020  F01A         	movff	___flmul@grs+1,??___flmul+1
  9751   0026E8  C021  F01B         	movff	___flmul@grs+2,??___flmul+2
  9752   0026EC  C022  F01C         	movff	___flmul@grs+3,??___flmul+3
  9753   0026F0  0E19               	movlw	25
  9754   0026F2  EF80  F013         	goto	u6730
  9755   0026F6                     u6735:
  9756   0026F6  90D8               	bcf	status,0,c
  9757   0026F8  321C               	rrcf	(??___flmul+3)^0,f,c
  9758   0026FA  321B               	rrcf	(??___flmul+2)^0,f,c
  9759   0026FC  321A               	rrcf	(??___flmul+1)^0,f,c
  9760   0026FE  3219               	rrcf	??___flmul^0,f,c
  9761   002700                     u6730:
  9762   002700  2EE8               	decfsz	wreg,f,c
  9763   002702  EF7B  F013         	goto	u6735
  9764   002706  5019               	movf	??___flmul^0,w,c
  9765   002708  2624               	addwf	___flmul@prod^0,f,c
  9766   00270A  501A               	movf	(??___flmul+1)^0,w,c
  9767   00270C  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9768   00270E  501B               	movf	(??___flmul+2)^0,w,c
  9769   002710  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9770   002712  501C               	movf	(??___flmul+3)^0,w,c
  9771   002714  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9772   002716  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  9773   00271A  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  9774   00271E  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  9775   002722  6A1F               	clrf	___flmul@grs^0,c
  9776   002724  501E               	movf	___flmul@aexp^0,w,c
  9777   002726  C023  F019         	movff	___flmul@bexp,??___flmul
  9778   00272A  6A1A               	clrf	(??___flmul+1)^0,c
  9779   00272C  2619               	addwf	??___flmul^0,f,c
  9780   00272E  0E00               	movlw	0
  9781   002730  221A               	addwfc	(??___flmul+1)^0,f,c
  9782   002732  0E82               	movlw	130
  9783   002734  2419               	addwf	??___flmul^0,w,c
  9784   002736  6E28               	movwf	___flmul@temp^0,c
  9785   002738  0EFF               	movlw	255
  9786   00273A  201A               	addwfc	(??___flmul+1)^0,w,c
  9787   00273C  6E29               	movwf	(___flmul@temp+1)^0,c
  9788   00273E  EFB6  F013         	goto	l5422
  9789   002742                     l5416:
  9790   002742  90D8               	bcf	status,0,c
  9791   002744  3624               	rlcf	___flmul@prod^0,f,c
  9792   002746  3625               	rlcf	(___flmul@prod+1)^0,f,c
  9793   002748  3626               	rlcf	(___flmul@prod+2)^0,f,c
  9794   00274A  3627               	rlcf	(___flmul@prod+3)^0,f,c
  9795   00274C  AE22               	btfss	(___flmul@grs+3)^0,7,c
  9796   00274E  EFAB  F013         	goto	u6741
  9797   002752  EFAD  F013         	goto	u6740
  9798   002756                     u6741:
  9799   002756  EFAE  F013         	goto	l1012
  9800   00275A                     u6740:
  9801   00275A  8024               	bsf	___flmul@prod^0,0,c
  9802   00275C                     l1012:
  9803   00275C  90D8               	bcf	status,0,c
  9804   00275E  361F               	rlcf	___flmul@grs^0,f,c
  9805   002760  3620               	rlcf	(___flmul@grs+1)^0,f,c
  9806   002762  3621               	rlcf	(___flmul@grs+2)^0,f,c
  9807   002764  3622               	rlcf	(___flmul@grs+3)^0,f,c
  9808   002766  0628               	decf	___flmul@temp^0,f,c
  9809   002768  A0D8               	btfss	status,0,c
  9810   00276A  0629               	decf	(___flmul@temp+1)^0,f,c
  9811   00276C                     l5422:
  9812   00276C  AE26               	btfss	(___flmul@prod+2)^0,7,c
  9813   00276E  EFBB  F013         	goto	u6751
  9814   002772  EFBD  F013         	goto	u6750
  9815   002776                     u6751:
  9816   002776  EFA1  F013         	goto	l5416
  9817   00277A                     u6750:
  9818   00277A  0E00               	movlw	0
  9819   00277C  6E1E               	movwf	___flmul@aexp^0,c
  9820   00277E  AE22               	btfss	(___flmul@grs+3)^0,7,c
  9821   002780  EFC4  F013         	goto	u6761
  9822   002784  EFC6  F013         	goto	u6760
  9823   002788                     u6761:
  9824   002788  EFEA  F013         	goto	l1014
  9825   00278C                     u6760:
  9826   00278C  0EFF               	movlw	255
  9827   00278E  141F               	andwf	___flmul@grs^0,w,c
  9828   002790  6E19               	movwf	??___flmul^0,c
  9829   002792  0EFF               	movlw	255
  9830   002794  1420               	andwf	(___flmul@grs+1)^0,w,c
  9831   002796  6E1A               	movwf	(??___flmul+1)^0,c
  9832   002798  0EFF               	movlw	255
  9833   00279A  1421               	andwf	(___flmul@grs+2)^0,w,c
  9834   00279C  6E1B               	movwf	(??___flmul+2)^0,c
  9835   00279E  0E7F               	movlw	127
  9836   0027A0  1422               	andwf	(___flmul@grs+3)^0,w,c
  9837   0027A2  6E1C               	movwf	(??___flmul+3)^0,c
  9838   0027A4  5019               	movf	??___flmul^0,w,c
  9839   0027A6  101A               	iorwf	(??___flmul+1)^0,w,c
  9840   0027A8  101B               	iorwf	(??___flmul+2)^0,w,c
  9841   0027AA  101C               	iorwf	(??___flmul+3)^0,w,c
  9842   0027AC  B4D8               	btfsc	status,2,c
  9843   0027AE  EFDB  F013         	goto	u6771
  9844   0027B2  EFDD  F013         	goto	u6770
  9845   0027B6                     u6771:
  9846   0027B6  EFE1  F013         	goto	l1015
  9847   0027BA                     u6770:
  9848   0027BA                     l5430:
  9849   0027BA  0E01               	movlw	1
  9850   0027BC  6E1E               	movwf	___flmul@aexp^0,c
  9851   0027BE  EFEA  F013         	goto	l1014
  9852   0027C2                     l1015:
  9853   0027C2  A024               	btfss	___flmul@prod^0,0,c
  9854   0027C4  EFE6  F013         	goto	u6781
  9855   0027C8  EFE8  F013         	goto	u6780
  9856   0027CC                     u6781:
  9857   0027CC  EFEA  F013         	goto	l1014
  9858   0027D0                     u6780:
  9859   0027D0  EFDD  F013         	goto	l5430
  9860   0027D4                     l1014:
  9861   0027D4  501E               	movf	___flmul@aexp^0,w,c
  9862   0027D6  B4D8               	btfsc	status,2,c
  9863   0027D8  EFF0  F013         	goto	u6791
  9864   0027DC  EFF2  F013         	goto	u6790
  9865   0027E0                     u6791:
  9866   0027E0  EF16  F014         	goto	l5442
  9867   0027E4                     u6790:
  9868   0027E4  0E01               	movlw	1
  9869   0027E6  2624               	addwf	___flmul@prod^0,f,c
  9870   0027E8  0E00               	movlw	0
  9871   0027EA  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9872   0027EC  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9873   0027EE  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9874   0027F0  A027               	btfss	(___flmul@prod+3)^0,0,c
  9875   0027F2  EFFD  F013         	goto	u6801
  9876   0027F6  EFFF  F013         	goto	u6800
  9877   0027FA                     u6801:
  9878   0027FA  EF16  F014         	goto	l5442
  9879   0027FE                     u6800:
  9880   0027FE  C024  F019         	movff	___flmul@prod,??___flmul
  9881   002802  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
  9882   002806  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
  9883   00280A  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
  9884   00280E  341C               	rlcf	(??___flmul+3)^0,w,c
  9885   002810  321C               	rrcf	(??___flmul+3)^0,f,c
  9886   002812  321B               	rrcf	(??___flmul+2)^0,f,c
  9887   002814  321A               	rrcf	(??___flmul+1)^0,f,c
  9888   002816  3219               	rrcf	??___flmul^0,f,c
  9889   002818  C019  F024         	movff	??___flmul,___flmul@prod
  9890   00281C  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
  9891   002820  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
  9892   002824  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
  9893   002828  4A28               	infsnz	___flmul@temp^0,f,c
  9894   00282A  2A29               	incf	(___flmul@temp+1)^0,f,c
  9895   00282C                     l5442:
  9896   00282C  BE29               	btfsc	(___flmul@temp+1)^0,7,c
  9897   00282E  EF21  F014         	goto	u6811
  9898   002832  5029               	movf	(___flmul@temp+1)^0,w,c
  9899   002834  E108               	bnz	u6810
  9900   002836  2828               	incf	___flmul@temp^0,w,c
  9901   002838  A0D8               	btfss	status,0,c
  9902   00283A  EF21  F014         	goto	u6811
  9903   00283E  EF23  F014         	goto	u6810
  9904   002842                     u6811:
  9905   002842  EF2D  F014         	goto	l5446
  9906   002846                     u6810:
  9907   002846  0E00               	movlw	0
  9908   002848  6E24               	movwf	___flmul@prod^0,c
  9909   00284A  0E00               	movlw	0
  9910   00284C  6E25               	movwf	(___flmul@prod+1)^0,c
  9911   00284E  0E80               	movlw	128
  9912   002850  6E26               	movwf	(___flmul@prod+2)^0,c
  9913   002852  0E7F               	movlw	127
  9914   002854  6E27               	movwf	(___flmul@prod+3)^0,c
  9915   002856  EF5B  F014         	goto	l5458
  9916   00285A                     l5446:
  9917   00285A  BE29               	btfsc	(___flmul@temp+1)^0,7,c
  9918   00285C  EF3A  F014         	goto	u6820
  9919   002860  5029               	movf	(___flmul@temp+1)^0,w,c
  9920   002862  E106               	bnz	u6821
  9921   002864  0428               	decf	___flmul@temp^0,w,c
  9922   002866  B0D8               	btfsc	status,0,c
  9923   002868  EF38  F014         	goto	u6821
  9924   00286C  EF3A  F014         	goto	u6820
  9925   002870                     u6821:
  9926   002870  EF46  F014         	goto	l1022
  9927   002874                     u6820:
  9928   002874  0E00               	movlw	0
  9929   002876  6E24               	movwf	___flmul@prod^0,c
  9930   002878  0E00               	movlw	0
  9931   00287A  6E25               	movwf	(___flmul@prod+1)^0,c
  9932   00287C  0E00               	movlw	0
  9933   00287E  6E26               	movwf	(___flmul@prod+2)^0,c
  9934   002880  0E00               	movlw	0
  9935   002882  6E27               	movwf	(___flmul@prod+3)^0,c
  9936   002884  0E00               	movlw	0
  9937   002886  6E1D               	movwf	___flmul@sign^0,c
  9938   002888  EF5B  F014         	goto	l5458
  9939   00288C                     l1022:
  9940   00288C  C028  F023         	movff	___flmul@temp,___flmul@bexp
  9941   002890  0EFF               	movlw	255
  9942   002892  1624               	andwf	___flmul@prod^0,f,c
  9943   002894  0EFF               	movlw	255
  9944   002896  1625               	andwf	(___flmul@prod+1)^0,f,c
  9945   002898  0E7F               	movlw	127
  9946   00289A  1626               	andwf	(___flmul@prod+2)^0,f,c
  9947   00289C  0E00               	movlw	0
  9948   00289E  1627               	andwf	(___flmul@prod+3)^0,f,c
  9949   0028A0  A023               	btfss	___flmul@bexp^0,0,c
  9950   0028A2  EF55  F014         	goto	u6831
  9951   0028A6  EF57  F014         	goto	u6830
  9952   0028AA                     u6831:
  9953   0028AA  EF58  F014         	goto	l5456
  9954   0028AE                     u6830:
  9955   0028AE  8E26               	bsf	(___flmul@prod+2)^0,7,c
  9956   0028B0                     l5456:
  9957   0028B0  90D8               	bcf	status,0,c
  9958   0028B2  3023               	rrcf	___flmul@bexp^0,w,c
  9959   0028B4  6E27               	movwf	(___flmul@prod+3)^0,c
  9960   0028B6                     l5458:
  9961   0028B6  501D               	movf	___flmul@sign^0,w,c
  9962   0028B8  1227               	iorwf	(___flmul@prod+3)^0,f,c
  9963   0028BA  C024  F011         	movff	___flmul@prod,?___flmul
  9964   0028BE  C025  F012         	movff	___flmul@prod+1,?___flmul+1
  9965   0028C2  C026  F013         	movff	___flmul@prod+2,?___flmul+2
  9966   0028C6  C027  F014         	movff	___flmul@prod+3,?___flmul+3
  9967   0028CA                     l1009:
  9968   0028CA  0012               	return		;funcret
  9969   0028CC                     __end_of___flmul:
  9970                           	callstack 0
  9971                           
  9972 ;; *************** function ___flge *****************
  9973 ;; Defined at:
  9974 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;  ff1             4   41[COMRAM] unsigned char 
  9977 ;;  ff2             4   45[COMRAM] unsigned char 
  9978 ;; Auto vars:     Size  Location     Type
  9979 ;;		None
  9980 ;; Return value:  Size  Location     Type
  9981 ;;		None               void
  9982 ;; Registers used:
  9983 ;;		wreg, status,2, status,0
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9989 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9991 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9992 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9993 ;;Total ram usage:       12 bytes
  9994 ;; Hardware stack levels used: 1
  9995 ;; Hardware stack levels required when called: 1
  9996 ;; This function calls:
  9997 ;;		Nothing
  9998 ;; This function is called by:
  9999 ;;		_efgtoa
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           	psect	text36
 10004   0048E6                     __ptext36:
 10005                           	callstack 0
 10006   0048E6                     ___flge:
 10007                           	callstack 24
 10008   0048E6  0E00               	movlw	0
 10009   0048E8  142A               	andwf	___flge@ff1^0,w,c
 10010   0048EA  6E32               	movwf	??___flge^0,c
 10011   0048EC  0E00               	movlw	0
 10012   0048EE  142B               	andwf	(___flge@ff1+1)^0,w,c
 10013   0048F0  6E33               	movwf	(??___flge+1)^0,c
 10014   0048F2  0E80               	movlw	128
 10015   0048F4  142C               	andwf	(___flge@ff1+2)^0,w,c
 10016   0048F6  6E34               	movwf	(??___flge+2)^0,c
 10017   0048F8  0E7F               	movlw	127
 10018   0048FA  142D               	andwf	(___flge@ff1+3)^0,w,c
 10019   0048FC  6E35               	movwf	(??___flge+3)^0,c
 10020   0048FE  5032               	movf	??___flge^0,w,c
 10021   004900  1033               	iorwf	(??___flge+1)^0,w,c
 10022   004902  1034               	iorwf	(??___flge+2)^0,w,c
 10023   004904  1035               	iorwf	(??___flge+3)^0,w,c
 10024   004906  A4D8               	btfss	status,2,c
 10025   004908  EF88  F024         	goto	u6991
 10026   00490C  EF8A  F024         	goto	u6990
 10027   004910                     u6991:
 10028   004910  EF92  F024         	goto	l5570
 10029   004914                     u6990:
 10030   004914  0E00               	movlw	0
 10031   004916  6E2A               	movwf	___flge@ff1^0,c
 10032   004918  0E00               	movlw	0
 10033   00491A  6E2B               	movwf	(___flge@ff1+1)^0,c
 10034   00491C  0E00               	movlw	0
 10035   00491E  6E2C               	movwf	(___flge@ff1+2)^0,c
 10036   004920  0E00               	movlw	0
 10037   004922  6E2D               	movwf	(___flge@ff1+3)^0,c
 10038   004924                     l5570:
 10039   004924  0E00               	movlw	0
 10040   004926  142E               	andwf	___flge@ff2^0,w,c
 10041   004928  6E32               	movwf	??___flge^0,c
 10042   00492A  0E00               	movlw	0
 10043   00492C  142F               	andwf	(___flge@ff2+1)^0,w,c
 10044   00492E  6E33               	movwf	(??___flge+1)^0,c
 10045   004930  0E80               	movlw	128
 10046   004932  1430               	andwf	(___flge@ff2+2)^0,w,c
 10047   004934  6E34               	movwf	(??___flge+2)^0,c
 10048   004936  0E7F               	movlw	127
 10049   004938  1431               	andwf	(___flge@ff2+3)^0,w,c
 10050   00493A  6E35               	movwf	(??___flge+3)^0,c
 10051   00493C  5032               	movf	??___flge^0,w,c
 10052   00493E  1033               	iorwf	(??___flge+1)^0,w,c
 10053   004940  1034               	iorwf	(??___flge+2)^0,w,c
 10054   004942  1035               	iorwf	(??___flge+3)^0,w,c
 10055   004944  A4D8               	btfss	status,2,c
 10056   004946  EFA7  F024         	goto	u7001
 10057   00494A  EFA9  F024         	goto	u7000
 10058   00494E                     u7001:
 10059   00494E  EFB1  F024         	goto	l5574
 10060   004952                     u7000:
 10061   004952  0E00               	movlw	0
 10062   004954  6E2E               	movwf	___flge@ff2^0,c
 10063   004956  0E00               	movlw	0
 10064   004958  6E2F               	movwf	(___flge@ff2+1)^0,c
 10065   00495A  0E00               	movlw	0
 10066   00495C  6E30               	movwf	(___flge@ff2+2)^0,c
 10067   00495E  0E00               	movlw	0
 10068   004960  6E31               	movwf	(___flge@ff2+3)^0,c
 10069   004962                     l5574:
 10070   004962  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 10071   004964  EFB6  F024         	goto	u7011
 10072   004968  EFB8  F024         	goto	u7010
 10073   00496C                     u7011:
 10074   00496C  EFC1  F024         	goto	l5578
 10075   004970                     u7010:
 10076   004970  6C2A               	negf	___flge@ff1^0,c
 10077   004972  1E2B               	comf	(___flge@ff1+1)^0,f,c
 10078   004974  B0D8               	btfsc	status,0,c
 10079   004976  2A2B               	incf	(___flge@ff1+1)^0,f,c
 10080   004978  1E2C               	comf	(___flge@ff1+2)^0,f,c
 10081   00497A  B0D8               	btfsc	status,0,c
 10082   00497C  2A2C               	incf	(___flge@ff1+2)^0,f,c
 10083   00497E  0E80               	movlw	128
 10084   004980  562D               	subfwb	(___flge@ff1+3)^0,f,c
 10085   004982                     l5578:
 10086   004982  AE31               	btfss	(___flge@ff2+3)^0,7,c
 10087   004984  EFC6  F024         	goto	u7021
 10088   004988  EFC8  F024         	goto	u7020
 10089   00498C                     u7021:
 10090   00498C  EFD1  F024         	goto	l656
 10091   004990                     u7020:
 10092   004990  6C2E               	negf	___flge@ff2^0,c
 10093   004992  1E2F               	comf	(___flge@ff2+1)^0,f,c
 10094   004994  B0D8               	btfsc	status,0,c
 10095   004996  2A2F               	incf	(___flge@ff2+1)^0,f,c
 10096   004998  1E30               	comf	(___flge@ff2+2)^0,f,c
 10097   00499A  B0D8               	btfsc	status,0,c
 10098   00499C  2A30               	incf	(___flge@ff2+2)^0,f,c
 10099   00499E  0E80               	movlw	128
 10100   0049A0  5631               	subfwb	(___flge@ff2+3)^0,f,c
 10101   0049A2                     l656:
 10102   0049A2  0E00               	movlw	0
 10103   0049A4  1A2A               	xorwf	___flge@ff1^0,f,c
 10104   0049A6  0E00               	movlw	0
 10105   0049A8  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 10106   0049AA  0E00               	movlw	0
 10107   0049AC  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 10108   0049AE  0E80               	movlw	128
 10109   0049B0  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 10110   0049B2  0E00               	movlw	0
 10111   0049B4  1A2E               	xorwf	___flge@ff2^0,f,c
 10112   0049B6  0E00               	movlw	0
 10113   0049B8  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 10114   0049BA  0E00               	movlw	0
 10115   0049BC  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 10116   0049BE  0E80               	movlw	128
 10117   0049C0  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 10118   0049C2  502E               	movf	___flge@ff2^0,w,c
 10119   0049C4  5C2A               	subwf	___flge@ff1^0,w,c
 10120   0049C6  502F               	movf	(___flge@ff2+1)^0,w,c
 10121   0049C8  582B               	subwfb	(___flge@ff1+1)^0,w,c
 10122   0049CA  5030               	movf	(___flge@ff2+2)^0,w,c
 10123   0049CC  582C               	subwfb	(___flge@ff1+2)^0,w,c
 10124   0049CE  5031               	movf	(___flge@ff2+3)^0,w,c
 10125   0049D0  582D               	subwfb	(___flge@ff1+3)^0,w,c
 10126   0049D2  B0D8               	btfsc	status,0,c
 10127   0049D4  EFEE  F024         	goto	u7031
 10128   0049D8  EFF0  F024         	goto	u7030
 10129   0049DC                     u7031:
 10130   0049DC  EFF3  F024         	goto	l5584
 10131   0049E0                     u7030:
 10132   0049E0  90D8               	bcf	status,0,c
 10133   0049E2  EFF4  F024         	goto	l661
 10134   0049E6                     l5584:
 10135   0049E6  80D8               	bsf	status,0,c
 10136   0049E8                     l661:
 10137   0049E8  0012               	return		;funcret
 10138   0049EA                     __end_of___flge:
 10139                           	callstack 0
 10140                           
 10141 ;; *************** function ___fleq *****************
 10142 ;; Defined at:
 10143 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
 10144 ;; Parameters:    Size  Location     Type
 10145 ;;  ff1             4    2[COMRAM] unsigned char 
 10146 ;;  ff2             4    6[COMRAM] unsigned char 
 10147 ;; Auto vars:     Size  Location     Type
 10148 ;;		None
 10149 ;; Return value:  Size  Location     Type
 10150 ;;		None               void
 10151 ;; Registers used:
 10152 ;;		wreg, status,2, status,0
 10153 ;; Tracked objects:
 10154 ;;		On entry : 0/0
 10155 ;;		On exit  : 0/0
 10156 ;;		Unchanged: 0/0
 10157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10158 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10160 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10161 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10162 ;;Total ram usage:       12 bytes
 10163 ;; Hardware stack levels used: 1
 10164 ;; Hardware stack levels required when called: 1
 10165 ;; This function calls:
 10166 ;;		Nothing
 10167 ;; This function is called by:
 10168 ;;		_efgtoa
 10169 ;; This function uses a non-reentrant model
 10170 ;;
 10171                           
 10172                           	psect	text37
 10173   004EB2                     __ptext37:
 10174                           	callstack 0
 10175   004EB2                     ___fleq:
 10176                           	callstack 24
 10177   004EB2  0E00               	movlw	0
 10178   004EB4  1403               	andwf	___fleq@ff1^0,w,c
 10179   004EB6  6E0B               	movwf	??___fleq^0,c
 10180   004EB8  0E00               	movlw	0
 10181   004EBA  1404               	andwf	(___fleq@ff1+1)^0,w,c
 10182   004EBC  6E0C               	movwf	(??___fleq+1)^0,c
 10183   004EBE  0E80               	movlw	128
 10184   004EC0  1405               	andwf	(___fleq@ff1+2)^0,w,c
 10185   004EC2  6E0D               	movwf	(??___fleq+2)^0,c
 10186   004EC4  0E7F               	movlw	127
 10187   004EC6  1406               	andwf	(___fleq@ff1+3)^0,w,c
 10188   004EC8  6E0E               	movwf	(??___fleq+3)^0,c
 10189   004ECA  500B               	movf	??___fleq^0,w,c
 10190   004ECC  100C               	iorwf	(??___fleq+1)^0,w,c
 10191   004ECE  100D               	iorwf	(??___fleq+2)^0,w,c
 10192   004ED0  100E               	iorwf	(??___fleq+3)^0,w,c
 10193   004ED2  A4D8               	btfss	status,2,c
 10194   004ED4  EF6E  F027         	goto	u6961
 10195   004ED8  EF70  F027         	goto	u6960
 10196   004EDC                     u6961:
 10197   004EDC  EF78  F027         	goto	l5554
 10198   004EE0                     u6960:
 10199   004EE0  0E00               	movlw	0
 10200   004EE2  6E03               	movwf	___fleq@ff1^0,c
 10201   004EE4  0E00               	movlw	0
 10202   004EE6  6E04               	movwf	(___fleq@ff1+1)^0,c
 10203   004EE8  0E00               	movlw	0
 10204   004EEA  6E05               	movwf	(___fleq@ff1+2)^0,c
 10205   004EEC  0E00               	movlw	0
 10206   004EEE  6E06               	movwf	(___fleq@ff1+3)^0,c
 10207   004EF0                     l5554:
 10208   004EF0  0E00               	movlw	0
 10209   004EF2  1407               	andwf	___fleq@ff2^0,w,c
 10210   004EF4  6E0B               	movwf	??___fleq^0,c
 10211   004EF6  0E00               	movlw	0
 10212   004EF8  1408               	andwf	(___fleq@ff2+1)^0,w,c
 10213   004EFA  6E0C               	movwf	(??___fleq+1)^0,c
 10214   004EFC  0E80               	movlw	128
 10215   004EFE  1409               	andwf	(___fleq@ff2+2)^0,w,c
 10216   004F00  6E0D               	movwf	(??___fleq+2)^0,c
 10217   004F02  0E7F               	movlw	127
 10218   004F04  140A               	andwf	(___fleq@ff2+3)^0,w,c
 10219   004F06  6E0E               	movwf	(??___fleq+3)^0,c
 10220   004F08  500B               	movf	??___fleq^0,w,c
 10221   004F0A  100C               	iorwf	(??___fleq+1)^0,w,c
 10222   004F0C  100D               	iorwf	(??___fleq+2)^0,w,c
 10223   004F0E  100E               	iorwf	(??___fleq+3)^0,w,c
 10224   004F10  A4D8               	btfss	status,2,c
 10225   004F12  EF8D  F027         	goto	u6971
 10226   004F16  EF8F  F027         	goto	u6970
 10227   004F1A                     u6971:
 10228   004F1A  EF97  F027         	goto	l5558
 10229   004F1E                     u6970:
 10230   004F1E  0E00               	movlw	0
 10231   004F20  6E07               	movwf	___fleq@ff2^0,c
 10232   004F22  0E00               	movlw	0
 10233   004F24  6E08               	movwf	(___fleq@ff2+1)^0,c
 10234   004F26  0E00               	movlw	0
 10235   004F28  6E09               	movwf	(___fleq@ff2+2)^0,c
 10236   004F2A  0E00               	movlw	0
 10237   004F2C  6E0A               	movwf	(___fleq@ff2+3)^0,c
 10238   004F2E                     l5558:
 10239   004F2E  5007               	movf	___fleq@ff2^0,w,c
 10240   004F30  1803               	xorwf	___fleq@ff1^0,w,c
 10241   004F32  E10F               	bnz	u6980
 10242   004F34  5008               	movf	(___fleq@ff2+1)^0,w,c
 10243   004F36  1804               	xorwf	(___fleq@ff1+1)^0,w,c
 10244   004F38  E10C               	bnz	u6980
 10245   004F3A  5009               	movf	(___fleq@ff2+2)^0,w,c
 10246   004F3C  1805               	xorwf	(___fleq@ff1+2)^0,w,c
 10247   004F3E  E109               	bnz	u6980
 10248   004F40  500A               	movf	(___fleq@ff2+3)^0,w,c
 10249   004F42  1806               	xorwf	(___fleq@ff1+3)^0,w,c
 10250   004F44  B4D8               	btfsc	status,2,c
 10251   004F46  EFA7  F027         	goto	u6981
 10252   004F4A  EFA9  F027         	goto	u6980
 10253   004F4E                     u6981:
 10254   004F4E  EFAC  F027         	goto	l5562
 10255   004F52                     u6980:
 10256   004F52  90D8               	bcf	status,0,c
 10257   004F54  EFAD  F027         	goto	l650
 10258   004F58                     l5562:
 10259   004F58  80D8               	bsf	status,0,c
 10260   004F5A                     l650:
 10261   004F5A  0012               	return		;funcret
 10262   004F5C                     __end_of___fleq:
 10263                           	callstack 0
 10264                           
 10265 ;; *************** function ___fldiv *****************
 10266 ;; Defined at:
 10267 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
 10268 ;; Parameters:    Size  Location     Type
 10269 ;;  b               4   41[COMRAM] unsigned char 
 10270 ;;  a               4   45[COMRAM] unsigned char 
 10271 ;; Auto vars:     Size  Location     Type
 10272 ;;  grs             4   60[COMRAM] unsigned long 
 10273 ;;  rem             4   53[COMRAM] unsigned long 
 10274 ;;  new_exp         2   58[COMRAM] short 
 10275 ;;  aexp            1   65[COMRAM] unsigned char 
 10276 ;;  bexp            1   64[COMRAM] unsigned char 
 10277 ;;  sign            1   57[COMRAM] unsigned char 
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  4   41[COMRAM] unsigned char 
 10280 ;; Registers used:
 10281 ;;		wreg, status,2, status,0
 10282 ;; Tracked objects:
 10283 ;;		On entry : 0/0
 10284 ;;		On exit  : 0/0
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10287 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10288 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10289 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10290 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10291 ;;Total ram usage:       25 bytes
 10292 ;; Hardware stack levels used: 1
 10293 ;; Hardware stack levels required when called: 1
 10294 ;; This function calls:
 10295 ;;		Nothing
 10296 ;; This function is called by:
 10297 ;;		_runDAC
 10298 ;;		_runADC
 10299 ;;		_efgtoa
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302                           
 10303                           	psect	text38
 10304   003052                     __ptext38:
 10305                           	callstack 0
 10306   003052                     ___fldiv:
 10307                           	callstack 24
 10308   003052  502D               	movf	(___fldiv@b+3)^0,w,c
 10309   003054  0B80               	andlw	128
 10310   003056  6E3A               	movwf	___fldiv@sign^0,c
 10311   003058  502D               	movf	(___fldiv@b+3)^0,w,c
 10312   00305A  242D               	addwf	(___fldiv@b+3)^0,w,c
 10313   00305C  6E41               	movwf	___fldiv@bexp^0,c
 10314   00305E  AE2C               	btfss	(___fldiv@b+2)^0,7,c
 10315   003060  EF34  F018         	goto	u6421
 10316   003064  EF36  F018         	goto	u6420
 10317   003068                     u6421:
 10318   003068  EF37  F018         	goto	l5202
 10319   00306C                     u6420:
 10320   00306C  8041               	bsf	___fldiv@bexp^0,0,c
 10321   00306E                     l5202:
 10322   00306E  5041               	movf	___fldiv@bexp^0,w,c
 10323   003070  B4D8               	btfsc	status,2,c
 10324   003072  EF3D  F018         	goto	u6431
 10325   003076  EF3F  F018         	goto	u6430
 10326   00307A                     u6431:
 10327   00307A  EF54  F018         	goto	l5212
 10328   00307E                     u6430:
 10329   00307E  2841               	incf	___fldiv@bexp^0,w,c
 10330   003080  A4D8               	btfss	status,2,c
 10331   003082  EF45  F018         	goto	u6441
 10332   003086  EF47  F018         	goto	u6440
 10333   00308A                     u6441:
 10334   00308A  EF4F  F018         	goto	l5208
 10335   00308E                     u6440:
 10336   00308E  0E00               	movlw	0
 10337   003090  6E2A               	movwf	___fldiv@b^0,c
 10338   003092  0E00               	movlw	0
 10339   003094  6E2B               	movwf	(___fldiv@b+1)^0,c
 10340   003096  0E00               	movlw	0
 10341   003098  6E2C               	movwf	(___fldiv@b+2)^0,c
 10342   00309A  0E00               	movlw	0
 10343   00309C  6E2D               	movwf	(___fldiv@b+3)^0,c
 10344   00309E                     l5208:
 10345   00309E  8E2C               	bsf	(___fldiv@b+2)^0,7,c
 10346   0030A0  0E00               	movlw	0
 10347   0030A2  6E2D               	movwf	(___fldiv@b+3)^0,c
 10348   0030A4  EF5C  F018         	goto	l5214
 10349   0030A8                     l5212:
 10350   0030A8  0E00               	movlw	0
 10351   0030AA  6E2A               	movwf	___fldiv@b^0,c
 10352   0030AC  0E00               	movlw	0
 10353   0030AE  6E2B               	movwf	(___fldiv@b+1)^0,c
 10354   0030B0  0E00               	movlw	0
 10355   0030B2  6E2C               	movwf	(___fldiv@b+2)^0,c
 10356   0030B4  0E00               	movlw	0
 10357   0030B6  6E2D               	movwf	(___fldiv@b+3)^0,c
 10358   0030B8                     l5214:
 10359   0030B8  5031               	movf	(___fldiv@a+3)^0,w,c
 10360   0030BA  0B80               	andlw	128
 10361   0030BC  1A3A               	xorwf	___fldiv@sign^0,f,c
 10362   0030BE  5031               	movf	(___fldiv@a+3)^0,w,c
 10363   0030C0  2431               	addwf	(___fldiv@a+3)^0,w,c
 10364   0030C2  6E42               	movwf	___fldiv@aexp^0,c
 10365   0030C4  AE30               	btfss	(___fldiv@a+2)^0,7,c
 10366   0030C6  EF67  F018         	goto	u6451
 10367   0030CA  EF69  F018         	goto	u6450
 10368   0030CE                     u6451:
 10369   0030CE  EF6A  F018         	goto	l5222
 10370   0030D2                     u6450:
 10371   0030D2  8042               	bsf	___fldiv@aexp^0,0,c
 10372   0030D4                     l5222:
 10373   0030D4  5042               	movf	___fldiv@aexp^0,w,c
 10374   0030D6  B4D8               	btfsc	status,2,c
 10375   0030D8  EF70  F018         	goto	u6461
 10376   0030DC  EF72  F018         	goto	u6460
 10377   0030E0                     u6461:
 10378   0030E0  EF87  F018         	goto	l5232
 10379   0030E4                     u6460:
 10380   0030E4  2842               	incf	___fldiv@aexp^0,w,c
 10381   0030E6  A4D8               	btfss	status,2,c
 10382   0030E8  EF78  F018         	goto	u6471
 10383   0030EC  EF7A  F018         	goto	u6470
 10384   0030F0                     u6471:
 10385   0030F0  EF82  F018         	goto	l5228
 10386   0030F4                     u6470:
 10387   0030F4  0E00               	movlw	0
 10388   0030F6  6E2E               	movwf	___fldiv@a^0,c
 10389   0030F8  0E00               	movlw	0
 10390   0030FA  6E2F               	movwf	(___fldiv@a+1)^0,c
 10391   0030FC  0E00               	movlw	0
 10392   0030FE  6E30               	movwf	(___fldiv@a+2)^0,c
 10393   003100  0E00               	movlw	0
 10394   003102  6E31               	movwf	(___fldiv@a+3)^0,c
 10395   003104                     l5228:
 10396   003104  8E30               	bsf	(___fldiv@a+2)^0,7,c
 10397   003106  0E00               	movlw	0
 10398   003108  6E31               	movwf	(___fldiv@a+3)^0,c
 10399   00310A  EF8F  F018         	goto	l5234
 10400   00310E                     l5232:
 10401   00310E  0E00               	movlw	0
 10402   003110  6E2E               	movwf	___fldiv@a^0,c
 10403   003112  0E00               	movlw	0
 10404   003114  6E2F               	movwf	(___fldiv@a+1)^0,c
 10405   003116  0E00               	movlw	0
 10406   003118  6E30               	movwf	(___fldiv@a+2)^0,c
 10407   00311A  0E00               	movlw	0
 10408   00311C  6E31               	movwf	(___fldiv@a+3)^0,c
 10409   00311E                     l5234:
 10410   00311E  502E               	movf	___fldiv@a^0,w,c
 10411   003120  102F               	iorwf	(___fldiv@a+1)^0,w,c
 10412   003122  1030               	iorwf	(___fldiv@a+2)^0,w,c
 10413   003124  1031               	iorwf	(___fldiv@a+3)^0,w,c
 10414   003126  A4D8               	btfss	status,2,c
 10415   003128  EF98  F018         	goto	u6481
 10416   00312C  EF9A  F018         	goto	u6480
 10417   003130                     u6481:
 10418   003130  EFB2  F018         	goto	l5246
 10419   003134                     u6480:
 10420   003134  0E00               	movlw	0
 10421   003136  6E2A               	movwf	___fldiv@b^0,c
 10422   003138  0E00               	movlw	0
 10423   00313A  6E2B               	movwf	(___fldiv@b+1)^0,c
 10424   00313C  0E00               	movlw	0
 10425   00313E  6E2C               	movwf	(___fldiv@b+2)^0,c
 10426   003140  0E00               	movlw	0
 10427   003142  6E2D               	movwf	(___fldiv@b+3)^0,c
 10428   003144  0E80               	movlw	128
 10429   003146  122C               	iorwf	(___fldiv@b+2)^0,f,c
 10430   003148  0E7F               	movlw	127
 10431   00314A  122D               	iorwf	(___fldiv@b+3)^0,f,c
 10432   00314C                     l5240:
 10433   00314C  503A               	movf	___fldiv@sign^0,w,c
 10434   00314E  122D               	iorwf	(___fldiv@b+3)^0,f,c
 10435   003150  C02A  F02A         	movff	___fldiv@b,?___fldiv
 10436   003154  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
 10437   003158  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
 10438   00315C  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
 10439   003160  EFF5  F019         	goto	l973
 10440   003164                     l5246:
 10441   003164  5041               	movf	___fldiv@bexp^0,w,c
 10442   003166  A4D8               	btfss	status,2,c
 10443   003168  EFB8  F018         	goto	u6491
 10444   00316C  EFBA  F018         	goto	u6490
 10445   003170                     u6491:
 10446   003170  EFC4  F018         	goto	l5254
 10447   003174                     u6490:
 10448   003174  0E00               	movlw	0
 10449   003176  6E2A               	movwf	?___fldiv^0,c
 10450   003178  0E00               	movlw	0
 10451   00317A  6E2B               	movwf	(?___fldiv+1)^0,c
 10452   00317C  0E00               	movlw	0
 10453   00317E  6E2C               	movwf	(?___fldiv+2)^0,c
 10454   003180  0E00               	movlw	0
 10455   003182  6E2D               	movwf	(?___fldiv+3)^0,c
 10456   003184  EFF5  F019         	goto	l973
 10457   003188                     l5254:
 10458   003188  5042               	movf	___fldiv@aexp^0,w,c
 10459   00318A  C041  F032         	movff	___fldiv@bexp,??___fldiv
 10460   00318E  6A33               	clrf	(??___fldiv+1)^0,c
 10461   003190  5E32               	subwf	??___fldiv^0,f,c
 10462   003192  0E00               	movlw	0
 10463   003194  5A33               	subwfb	(??___fldiv+1)^0,f,c
 10464   003196  0E7F               	movlw	127
 10465   003198  2432               	addwf	??___fldiv^0,w,c
 10466   00319A  6E3B               	movwf	___fldiv@new_exp^0,c
 10467   00319C  0E00               	movlw	0
 10468   00319E  2033               	addwfc	(??___fldiv+1)^0,w,c
 10469   0031A0  6E3C               	movwf	(___fldiv@new_exp+1)^0,c
 10470   0031A2  C02A  F036         	movff	___fldiv@b,___fldiv@rem
 10471   0031A6  C02B  F037         	movff	___fldiv@b+1,___fldiv@rem+1
 10472   0031AA  C02C  F038         	movff	___fldiv@b+2,___fldiv@rem+2
 10473   0031AE  C02D  F039         	movff	___fldiv@b+3,___fldiv@rem+3
 10474   0031B2  0E00               	movlw	0
 10475   0031B4  6E2A               	movwf	___fldiv@b^0,c
 10476   0031B6  0E00               	movlw	0
 10477   0031B8  6E2B               	movwf	(___fldiv@b+1)^0,c
 10478   0031BA  0E00               	movlw	0
 10479   0031BC  6E2C               	movwf	(___fldiv@b+2)^0,c
 10480   0031BE  0E00               	movlw	0
 10481   0031C0  6E2D               	movwf	(___fldiv@b+3)^0,c
 10482   0031C2  0E00               	movlw	0
 10483   0031C4  6E3D               	movwf	___fldiv@grs^0,c
 10484   0031C6  0E00               	movlw	0
 10485   0031C8  6E3E               	movwf	(___fldiv@grs+1)^0,c
 10486   0031CA  0E00               	movlw	0
 10487   0031CC  6E3F               	movwf	(___fldiv@grs+2)^0,c
 10488   0031CE  0E00               	movlw	0
 10489   0031D0  6E40               	movwf	(___fldiv@grs+3)^0,c
 10490   0031D2  0E00               	movlw	0
 10491   0031D4  6E42               	movwf	___fldiv@aexp^0,c
 10492   0031D6  EF25  F019         	goto	l975
 10493   0031DA                     l5264:
 10494   0031DA  5042               	movf	___fldiv@aexp^0,w,c
 10495   0031DC  B4D8               	btfsc	status,2,c
 10496   0031DE  EFF3  F018         	goto	u6501
 10497   0031E2  EFF5  F018         	goto	u6500
 10498   0031E6                     u6501:
 10499   0031E6  EF0C  F019         	goto	l5272
 10500   0031EA                     u6500:
 10501   0031EA  90D8               	bcf	status,0,c
 10502   0031EC  3636               	rlcf	___fldiv@rem^0,f,c
 10503   0031EE  3637               	rlcf	(___fldiv@rem+1)^0,f,c
 10504   0031F0  3638               	rlcf	(___fldiv@rem+2)^0,f,c
 10505   0031F2  3639               	rlcf	(___fldiv@rem+3)^0,f,c
 10506   0031F4  90D8               	bcf	status,0,c
 10507   0031F6  362A               	rlcf	___fldiv@b^0,f,c
 10508   0031F8  362B               	rlcf	(___fldiv@b+1)^0,f,c
 10509   0031FA  362C               	rlcf	(___fldiv@b+2)^0,f,c
 10510   0031FC  362D               	rlcf	(___fldiv@b+3)^0,f,c
 10511   0031FE  AE40               	btfss	(___fldiv@grs+3)^0,7,c
 10512   003200  EF04  F019         	goto	u6511
 10513   003204  EF06  F019         	goto	u6510
 10514   003208                     u6511:
 10515   003208  EF07  F019         	goto	l978
 10516   00320C                     u6510:
 10517   00320C  802A               	bsf	___fldiv@b^0,0,c
 10518   00320E                     l978:
 10519   00320E  90D8               	bcf	status,0,c
 10520   003210  363D               	rlcf	___fldiv@grs^0,f,c
 10521   003212  363E               	rlcf	(___fldiv@grs+1)^0,f,c
 10522   003214  363F               	rlcf	(___fldiv@grs+2)^0,f,c
 10523   003216  3640               	rlcf	(___fldiv@grs+3)^0,f,c
 10524   003218                     l5272:
 10525   003218  502E               	movf	___fldiv@a^0,w,c
 10526   00321A  5C36               	subwf	___fldiv@rem^0,w,c
 10527   00321C  502F               	movf	(___fldiv@a+1)^0,w,c
 10528   00321E  5837               	subwfb	(___fldiv@rem+1)^0,w,c
 10529   003220  5030               	movf	(___fldiv@a+2)^0,w,c
 10530   003222  5838               	subwfb	(___fldiv@rem+2)^0,w,c
 10531   003224  5031               	movf	(___fldiv@a+3)^0,w,c
 10532   003226  5839               	subwfb	(___fldiv@rem+3)^0,w,c
 10533   003228  A0D8               	btfss	status,0,c
 10534   00322A  EF19  F019         	goto	u6521
 10535   00322E  EF1B  F019         	goto	u6520
 10536   003232                     u6521:
 10537   003232  EF24  F019         	goto	l5278
 10538   003236                     u6520:
 10539   003236  8C40               	bsf	(___fldiv@grs+3)^0,6,c
 10540   003238  502E               	movf	___fldiv@a^0,w,c
 10541   00323A  5E36               	subwf	___fldiv@rem^0,f,c
 10542   00323C  502F               	movf	(___fldiv@a+1)^0,w,c
 10543   00323E  5A37               	subwfb	(___fldiv@rem+1)^0,f,c
 10544   003240  5030               	movf	(___fldiv@a+2)^0,w,c
 10545   003242  5A38               	subwfb	(___fldiv@rem+2)^0,f,c
 10546   003244  5031               	movf	(___fldiv@a+3)^0,w,c
 10547   003246  5A39               	subwfb	(___fldiv@rem+3)^0,f,c
 10548   003248                     l5278:
 10549   003248  2A42               	incf	___fldiv@aexp^0,f,c
 10550   00324A                     l975:
 10551   00324A  0E19               	movlw	25
 10552   00324C  6442               	cpfsgt	___fldiv@aexp^0,c
 10553   00324E  EF2B  F019         	goto	u6531
 10554   003252  EF2D  F019         	goto	u6530
 10555   003256                     u6531:
 10556   003256  EFED  F018         	goto	l5264
 10557   00325A                     u6530:
 10558   00325A  5036               	movf	___fldiv@rem^0,w,c
 10559   00325C  1037               	iorwf	(___fldiv@rem+1)^0,w,c
 10560   00325E  1038               	iorwf	(___fldiv@rem+2)^0,w,c
 10561   003260  1039               	iorwf	(___fldiv@rem+3)^0,w,c
 10562   003262  B4D8               	btfsc	status,2,c
 10563   003264  EF36  F019         	goto	u6541
 10564   003268  EF38  F019         	goto	u6540
 10565   00326C                     u6541:
 10566   00326C  EF50  F019         	goto	l5290
 10567   003270                     u6540:
 10568   003270  803D               	bsf	___fldiv@grs^0,0,c
 10569   003272  EF50  F019         	goto	l5290
 10570   003276                     l5284:
 10571   003276  90D8               	bcf	status,0,c
 10572   003278  362A               	rlcf	___fldiv@b^0,f,c
 10573   00327A  362B               	rlcf	(___fldiv@b+1)^0,f,c
 10574   00327C  362C               	rlcf	(___fldiv@b+2)^0,f,c
 10575   00327E  362D               	rlcf	(___fldiv@b+3)^0,f,c
 10576   003280  AE40               	btfss	(___fldiv@grs+3)^0,7,c
 10577   003282  EF45  F019         	goto	u6551
 10578   003286  EF47  F019         	goto	u6550
 10579   00328A                     u6551:
 10580   00328A  EF48  F019         	goto	l984
 10581   00328E                     u6550:
 10582   00328E  802A               	bsf	___fldiv@b^0,0,c
 10583   003290                     l984:
 10584   003290  90D8               	bcf	status,0,c
 10585   003292  363D               	rlcf	___fldiv@grs^0,f,c
 10586   003294  363E               	rlcf	(___fldiv@grs+1)^0,f,c
 10587   003296  363F               	rlcf	(___fldiv@grs+2)^0,f,c
 10588   003298  3640               	rlcf	(___fldiv@grs+3)^0,f,c
 10589   00329A  063B               	decf	___fldiv@new_exp^0,f,c
 10590   00329C  A0D8               	btfss	status,0,c
 10591   00329E  063C               	decf	(___fldiv@new_exp+1)^0,f,c
 10592   0032A0                     l5290:
 10593   0032A0  AE2C               	btfss	(___fldiv@b+2)^0,7,c
 10594   0032A2  EF55  F019         	goto	u6561
 10595   0032A6  EF57  F019         	goto	u6560
 10596   0032AA                     u6561:
 10597   0032AA  EF3B  F019         	goto	l5284
 10598   0032AE                     u6560:
 10599   0032AE  0E00               	movlw	0
 10600   0032B0  6E42               	movwf	___fldiv@aexp^0,c
 10601   0032B2  AE40               	btfss	(___fldiv@grs+3)^0,7,c
 10602   0032B4  EF5E  F019         	goto	u6571
 10603   0032B8  EF60  F019         	goto	u6570
 10604   0032BC                     u6571:
 10605   0032BC  EF84  F019         	goto	l986
 10606   0032C0                     u6570:
 10607   0032C0  0EFF               	movlw	255
 10608   0032C2  143D               	andwf	___fldiv@grs^0,w,c
 10609   0032C4  6E32               	movwf	??___fldiv^0,c
 10610   0032C6  0EFF               	movlw	255
 10611   0032C8  143E               	andwf	(___fldiv@grs+1)^0,w,c
 10612   0032CA  6E33               	movwf	(??___fldiv+1)^0,c
 10613   0032CC  0EFF               	movlw	255
 10614   0032CE  143F               	andwf	(___fldiv@grs+2)^0,w,c
 10615   0032D0  6E34               	movwf	(??___fldiv+2)^0,c
 10616   0032D2  0E7F               	movlw	127
 10617   0032D4  1440               	andwf	(___fldiv@grs+3)^0,w,c
 10618   0032D6  6E35               	movwf	(??___fldiv+3)^0,c
 10619   0032D8  5032               	movf	??___fldiv^0,w,c
 10620   0032DA  1033               	iorwf	(??___fldiv+1)^0,w,c
 10621   0032DC  1034               	iorwf	(??___fldiv+2)^0,w,c
 10622   0032DE  1035               	iorwf	(??___fldiv+3)^0,w,c
 10623   0032E0  B4D8               	btfsc	status,2,c
 10624   0032E2  EF75  F019         	goto	u6581
 10625   0032E6  EF77  F019         	goto	u6580
 10626   0032EA                     u6581:
 10627   0032EA  EF7B  F019         	goto	l987
 10628   0032EE                     u6580:
 10629   0032EE                     l5298:
 10630   0032EE  0E01               	movlw	1
 10631   0032F0  6E42               	movwf	___fldiv@aexp^0,c
 10632   0032F2  EF84  F019         	goto	l986
 10633   0032F6                     l987:
 10634   0032F6  A02A               	btfss	___fldiv@b^0,0,c
 10635   0032F8  EF80  F019         	goto	u6591
 10636   0032FC  EF82  F019         	goto	u6590
 10637   003300                     u6591:
 10638   003300  EF84  F019         	goto	l986
 10639   003304                     u6590:
 10640   003304  EF77  F019         	goto	l5298
 10641   003308                     l986:
 10642   003308  5042               	movf	___fldiv@aexp^0,w,c
 10643   00330A  B4D8               	btfsc	status,2,c
 10644   00330C  EF8A  F019         	goto	u6601
 10645   003310  EF8C  F019         	goto	u6600
 10646   003314                     u6601:
 10647   003314  EFB0  F019         	goto	l5310
 10648   003318                     u6600:
 10649   003318  0E01               	movlw	1
 10650   00331A  262A               	addwf	___fldiv@b^0,f,c
 10651   00331C  0E00               	movlw	0
 10652   00331E  222B               	addwfc	(___fldiv@b+1)^0,f,c
 10653   003320  222C               	addwfc	(___fldiv@b+2)^0,f,c
 10654   003322  222D               	addwfc	(___fldiv@b+3)^0,f,c
 10655   003324  A02D               	btfss	(___fldiv@b+3)^0,0,c
 10656   003326  EF97  F019         	goto	u6611
 10657   00332A  EF99  F019         	goto	u6610
 10658   00332E                     u6611:
 10659   00332E  EFB0  F019         	goto	l5310
 10660   003332                     u6610:
 10661   003332  C02A  F032         	movff	___fldiv@b,??___fldiv
 10662   003336  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
 10663   00333A  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
 10664   00333E  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
 10665   003342  3435               	rlcf	(??___fldiv+3)^0,w,c
 10666   003344  3235               	rrcf	(??___fldiv+3)^0,f,c
 10667   003346  3234               	rrcf	(??___fldiv+2)^0,f,c
 10668   003348  3233               	rrcf	(??___fldiv+1)^0,f,c
 10669   00334A  3232               	rrcf	??___fldiv^0,f,c
 10670   00334C  C032  F02A         	movff	??___fldiv,___fldiv@b
 10671   003350  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
 10672   003354  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
 10673   003358  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
 10674   00335C  4A3B               	infsnz	___fldiv@new_exp^0,f,c
 10675   00335E  2A3C               	incf	(___fldiv@new_exp+1)^0,f,c
 10676   003360                     l5310:
 10677   003360  BE3C               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10678   003362  EFBB  F019         	goto	u6621
 10679   003366  503C               	movf	(___fldiv@new_exp+1)^0,w,c
 10680   003368  E108               	bnz	u6620
 10681   00336A  283B               	incf	___fldiv@new_exp^0,w,c
 10682   00336C  A0D8               	btfss	status,0,c
 10683   00336E  EFBB  F019         	goto	u6621
 10684   003372  EFBD  F019         	goto	u6620
 10685   003376                     u6621:
 10686   003376  EFC8  F019         	goto	l5314
 10687   00337A                     u6620:
 10688   00337A  0E00               	movlw	0
 10689   00337C  6E3C               	movwf	(___fldiv@new_exp+1)^0,c
 10690   00337E  683B               	setf	___fldiv@new_exp^0,c
 10691   003380  0E00               	movlw	0
 10692   003382  6E2A               	movwf	___fldiv@b^0,c
 10693   003384  0E00               	movlw	0
 10694   003386  6E2B               	movwf	(___fldiv@b+1)^0,c
 10695   003388  0E00               	movlw	0
 10696   00338A  6E2C               	movwf	(___fldiv@b+2)^0,c
 10697   00338C  0E00               	movlw	0
 10698   00338E  6E2D               	movwf	(___fldiv@b+3)^0,c
 10699   003390                     l5314:
 10700   003390  BE3C               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10701   003392  EFD5  F019         	goto	u6630
 10702   003396  503C               	movf	(___fldiv@new_exp+1)^0,w,c
 10703   003398  E106               	bnz	u6631
 10704   00339A  043B               	decf	___fldiv@new_exp^0,w,c
 10705   00339C  B0D8               	btfsc	status,0,c
 10706   00339E  EFD3  F019         	goto	u6631
 10707   0033A2  EFD5  F019         	goto	u6630
 10708   0033A6                     u6631:
 10709   0033A6  EFE3  F019         	goto	l5318
 10710   0033AA                     u6630:
 10711   0033AA  0E00               	movlw	0
 10712   0033AC  6E3C               	movwf	(___fldiv@new_exp+1)^0,c
 10713   0033AE  0E00               	movlw	0
 10714   0033B0  6E3B               	movwf	___fldiv@new_exp^0,c
 10715   0033B2  0E00               	movlw	0
 10716   0033B4  6E2A               	movwf	___fldiv@b^0,c
 10717   0033B6  0E00               	movlw	0
 10718   0033B8  6E2B               	movwf	(___fldiv@b+1)^0,c
 10719   0033BA  0E00               	movlw	0
 10720   0033BC  6E2C               	movwf	(___fldiv@b+2)^0,c
 10721   0033BE  0E00               	movlw	0
 10722   0033C0  6E2D               	movwf	(___fldiv@b+3)^0,c
 10723   0033C2  0E00               	movlw	0
 10724   0033C4  6E3A               	movwf	___fldiv@sign^0,c
 10725   0033C6                     l5318:
 10726   0033C6  C03B  F041         	movff	___fldiv@new_exp,___fldiv@bexp
 10727   0033CA  A041               	btfss	___fldiv@bexp^0,0,c
 10728   0033CC  EFEA  F019         	goto	u6641
 10729   0033D0  EFEC  F019         	goto	u6640
 10730   0033D4                     u6641:
 10731   0033D4  EFEF  F019         	goto	l5324
 10732   0033D8                     u6640:
 10733   0033D8  8E2C               	bsf	(___fldiv@b+2)^0,7,c
 10734   0033DA  EFF0  F019         	goto	l5326
 10735   0033DE                     l5324:
 10736   0033DE  9E2C               	bcf	(___fldiv@b+2)^0,7,c
 10737   0033E0                     l5326:
 10738   0033E0  90D8               	bcf	status,0,c
 10739   0033E2  3041               	rrcf	___fldiv@bexp^0,w,c
 10740   0033E4  6E2D               	movwf	(___fldiv@b+3)^0,c
 10741   0033E6  EFA6  F018         	goto	l5240
 10742   0033EA                     l973:
 10743   0033EA  0012               	return		;funcret
 10744   0033EC                     __end_of___fldiv:
 10745                           	callstack 0
 10746                           
 10747 ;; *************** function _dtoa *****************
 10748 ;; Defined at:
 10749 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 10750 ;; Parameters:    Size  Location     Type
 10751 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
 10752 ;;		 -> NULL(0), sprintf@f(12), 
 10753 ;;  d               2   30[COMRAM] int 
 10754 ;; Auto vars:     Size  Location     Type
 10755 ;;  i               2   39[COMRAM] int 
 10756 ;;  p               2   36[COMRAM] int 
 10757 ;;  w               2   34[COMRAM] int 
 10758 ;;  s               1   38[COMRAM] unsigned char 
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  1    wreg      void 
 10761 ;; Registers used:
 10762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/0
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10769 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10771 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10772 ;;Total ram usage:       13 bytes
 10773 ;; Hardware stack levels used: 1
 10774 ;; Hardware stack levels required when called: 5
 10775 ;; This function calls:
 10776 ;;		___awdiv
 10777 ;;		___awmod
 10778 ;;		_abs
 10779 ;;		_pad
 10780 ;; This function is called by:
 10781 ;;		_vfpfcnvrt
 10782 ;; This function uses a non-reentrant model
 10783 ;;
 10784                           
 10785                           	psect	text39
 10786   0043EC                     __ptext39:
 10787                           	callstack 0
 10788   0043EC                     _dtoa:
 10789                           	callstack 21
 10790   0043EC                     
 10791                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 10792   0043EC  BE20               	btfsc	(dtoa@d+1)^0,7,c
 10793   0043EE  EFFB  F021         	goto	u7371
 10794   0043F2  EFFE  F021         	goto	u7370
 10795   0043F6                     u7371:
 10796   0043F6  0E01               	movlw	1
 10797   0043F8  EFFF  F021         	goto	u7380
 10798   0043FC                     u7370:
 10799   0043FC  0E00               	movlw	0
 10800   0043FE                     u7380:
 10801   0043FE  6E27               	movwf	dtoa@s^0,c
 10802                           
 10803                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 10804   004400  BE5C               	btfsc	(_prec+1)^0,7,c
 10805   004402  EF07  F022         	goto	u7390
 10806   004406  EF05  F022         	goto	u7391
 10807   00440A                     u7391:
 10808   00440A  EF0D  F022         	goto	l1108
 10809   00440E                     u7390:
 10810   00440E  0E00               	movlw	0
 10811   004410  6E26               	movwf	(dtoa@p+1)^0,c
 10812   004412  0E01               	movlw	1
 10813   004414  6E25               	movwf	dtoa@p^0,c
 10814   004416  EF11  F022         	goto	l1110
 10815   00441A                     l1108:
 10816   00441A  C05B  F025         	movff	_prec,dtoa@p
 10817   00441E  C05C  F026         	movff	_prec+1,dtoa@p+1
 10818   004422                     l1110:
 10819                           
 10820                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 10821   004422  C0FC  F023         	movff	_width,dtoa@w
 10822   004426  C0FD  F024         	movff	_width+1,dtoa@w+1
 10823   00442A                     
 10824                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
 10825   00442A  5027               	movf	dtoa@s^0,w,c
 10826   00442C  B4D8               	btfsc	status,2,c
 10827   00442E  EF1B  F022         	goto	u7401
 10828   004432  EF1D  F022         	goto	u7400
 10829   004436                     u7401:
 10830   004436  EF34  F022         	goto	l1111
 10831   00443A                     u7400:
 10832   00443A                     
 10833                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
 10834   00443A  0623               	decf	dtoa@w^0,f,c
 10835   00443C  A0D8               	btfss	status,0,c
 10836   00443E  0624               	decf	(dtoa@w+1)^0,f,c
 10837   004440                     
 10838                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 10839   004440  5027               	movf	dtoa@s^0,w,c
 10840   004442  A4D8               	btfss	status,2,c
 10841   004444  EF26  F022         	goto	u7411
 10842   004448  EF28  F022         	goto	u7410
 10843   00444C                     u7411:
 10844   00444C  EF2E  F022         	goto	l5746
 10845   004450                     u7410:
 10846   004450  0E00               	movlw	0
 10847   004452  6E22               	movwf	(_dtoa$3035+1)^0,c
 10848   004454  0E2B               	movlw	43
 10849   004456  6E21               	movwf	_dtoa$3035^0,c
 10850   004458  EF32  F022         	goto	l5748
 10851   00445C                     l5746:
 10852   00445C  0E00               	movlw	0
 10853   00445E  6E22               	movwf	(_dtoa$3035+1)^0,c
 10854   004460  0E2D               	movlw	45
 10855   004462  6E21               	movwf	_dtoa$3035^0,c
 10856   004464                     l5748:
 10857   004464  C021  F027         	movff	_dtoa$3035,dtoa@s
 10858   004468                     l1111:
 10859                           
 10860                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 10861   004468  0E00               	movlw	0
 10862   00446A  6E29               	movwf	(dtoa@i+1)^0,c
 10863   00446C  0E4F               	movlw	79
 10864   00446E  6E28               	movwf	dtoa@i^0,c
 10865   004470                     
 10866                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 10867   004470  0E00               	movlw	0
 10868   004472  0101               	movlb	1	; () banked
 10869   004474  6F71               	movwf	(_dbuf+79)& (0+255),b
 10870                           
 10871                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 10872   004476  EF6D  F022         	goto	l5762
 10873   00447A                     l5752:
 10874                           
 10875                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
 10876   00447A  0628               	decf	dtoa@i^0,f,c
 10877   00447C  A0D8               	btfss	status,0,c
 10878   00447E  0629               	decf	(dtoa@i+1)^0,f,c
 10879   004480                     
 10880                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 10881   004480  0E22               	movlw	low _dbuf
 10882   004482  2428               	addwf	dtoa@i^0,w,c
 10883   004484  6ED9               	movwf	fsr2l,c
 10884   004486  0E01               	movlw	high _dbuf
 10885   004488  2029               	addwfc	(dtoa@i+1)^0,w,c
 10886   00448A  6EDA               	movwf	fsr2h,c
 10887   00448C  C01F  F003         	movff	dtoa@d,___awmod@dividend
 10888   004490  C020  F004         	movff	dtoa@d+1,___awmod@dividend+1
 10889   004494  0E00               	movlw	0
 10890   004496  6E06               	movwf	(___awmod@divisor+1)^0,c
 10891   004498  0E0A               	movlw	10
 10892   00449A  6E05               	movwf	___awmod@divisor^0,c
 10893   00449C  EC01  F027         	call	___awmod	;wreg free
 10894   0044A0  C003  F009         	movff	?___awmod,abs@a
 10895   0044A4  C004  F00A         	movff	?___awmod+1,abs@a+1
 10896   0044A8  ECE0  F029         	call	_abs	;wreg free
 10897   0044AC  5009               	movf	?_abs^0,w,c
 10898   0044AE  0F30               	addlw	48
 10899   0044B0  6EDF               	movwf	indf2,c
 10900   0044B2                     
 10901                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 567:         --p;
 10902   0044B2  0625               	decf	dtoa@p^0,f,c
 10903   0044B4  A0D8               	btfss	status,0,c
 10904   0044B6  0626               	decf	(dtoa@p+1)^0,f,c
 10905   0044B8                     
 10906                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
 10907   0044B8  0623               	decf	dtoa@w^0,f,c
 10908   0044BA  A0D8               	btfss	status,0,c
 10909   0044BC  0624               	decf	(dtoa@w+1)^0,f,c
 10910   0044BE                     
 10911                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 10912   0044BE  C01F  F003         	movff	dtoa@d,___awdiv@dividend
 10913   0044C2  C020  F004         	movff	dtoa@d+1,___awdiv@dividend+1
 10914   0044C6  0E00               	movlw	0
 10915   0044C8  6E06               	movwf	(___awdiv@divisor+1)^0,c
 10916   0044CA  0E0A               	movlw	10
 10917   0044CC  6E05               	movwf	___awdiv@divisor^0,c
 10918   0044CE  EC46  F026         	call	___awdiv	;wreg free
 10919   0044D2  C003  F01F         	movff	?___awdiv,dtoa@d
 10920   0044D6  C004  F020         	movff	?___awdiv+1,dtoa@d+1
 10921   0044DA                     l5762:
 10922                           
 10923                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 10924   0044DA  BE29               	btfsc	(dtoa@i+1)^0,7,c
 10925   0044DC  EF78  F022         	goto	u7421
 10926   0044E0  5029               	movf	(dtoa@i+1)^0,w,c
 10927   0044E2  E108               	bnz	u7420
 10928   0044E4  0428               	decf	dtoa@i^0,w,c
 10929   0044E6  A0D8               	btfss	status,0,c
 10930   0044E8  EF78  F022         	goto	u7421
 10931   0044EC  EF7A  F022         	goto	u7420
 10932   0044F0                     u7421:
 10933   0044F0  EF90  F022         	goto	l5768
 10934   0044F4                     u7420:
 10935   0044F4  501F               	movf	dtoa@d^0,w,c
 10936   0044F6  1020               	iorwf	(dtoa@d+1)^0,w,c
 10937   0044F8  A4D8               	btfss	status,2,c
 10938   0044FA  EF81  F022         	goto	u7431
 10939   0044FE  EF83  F022         	goto	u7430
 10940   004502                     u7431:
 10941   004502  EF3D  F022         	goto	l5752
 10942   004506                     u7430:
 10943   004506  BE26               	btfsc	(dtoa@p+1)^0,7,c
 10944   004508  EF90  F022         	goto	u7440
 10945   00450C  5026               	movf	(dtoa@p+1)^0,w,c
 10946   00450E  E106               	bnz	u7441
 10947   004510  0425               	decf	dtoa@p^0,w,c
 10948   004512  B0D8               	btfsc	status,0,c
 10949   004514  EF8E  F022         	goto	u7441
 10950   004518  EF90  F022         	goto	u7440
 10951   00451C                     u7441:
 10952   00451C  EF3D  F022         	goto	l5752
 10953   004520                     u7440:
 10954   004520                     l5768:
 10955                           
 10956                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 10957   004520  5027               	movf	dtoa@s^0,w,c
 10958   004522  B4D8               	btfsc	status,2,c
 10959   004524  EF96  F022         	goto	u7451
 10960   004528  EF98  F022         	goto	u7450
 10961   00452C                     u7451:
 10962   00452C  EFA3  F022         	goto	l5774
 10963   004530                     u7450:
 10964   004530                     
 10965                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
 10966   004530  0628               	decf	dtoa@i^0,f,c
 10967   004532  A0D8               	btfss	status,0,c
 10968   004534  0629               	decf	(dtoa@i+1)^0,f,c
 10969   004536                     
 10970                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 10971   004536  0E22               	movlw	low _dbuf
 10972   004538  2428               	addwf	dtoa@i^0,w,c
 10973   00453A  6ED9               	movwf	fsr2l,c
 10974   00453C  0E01               	movlw	high _dbuf
 10975   00453E  2029               	addwfc	(dtoa@i+1)^0,w,c
 10976   004540  6EDA               	movwf	fsr2h,c
 10977   004542  C027  FFDF         	movff	dtoa@s,indf2
 10978   004546                     l5774:
 10979                           
 10980                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 10981   004546  C01D  F014         	movff	dtoa@fp,pad@fp
 10982   00454A  C01E  F015         	movff	dtoa@fp+1,pad@fp+1
 10983   00454E  0E22               	movlw	low _dbuf
 10984   004550  2428               	addwf	dtoa@i^0,w,c
 10985   004552  6E16               	movwf	pad@buf^0,c
 10986   004554  0E01               	movlw	high _dbuf
 10987   004556  2029               	addwfc	(dtoa@i+1)^0,w,c
 10988   004558  6E17               	movwf	(pad@buf+1)^0,c
 10989   00455A  C023  F018         	movff	dtoa@w,pad@p
 10990   00455E  C024  F019         	movff	dtoa@w+1,pad@p+1
 10991   004562  EC01  F028         	call	_pad	;wreg free
 10992   004566  0012               	return		;funcret
 10993   004568                     __end_of_dtoa:
 10994                           	callstack 0
 10995                           
 10996 ;; *************** function _pad *****************
 10997 ;; Defined at:
 10998 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 11001 ;;		 -> NULL(0), sprintf@f(12), 
 11002 ;;  buf             2   21[COMRAM] PTR unsigned char 
 11003 ;;		 -> dbuf(80), 
 11004 ;;  p               2   23[COMRAM] int 
 11005 ;; Auto vars:     Size  Location     Type
 11006 ;;  i               2   26[COMRAM] int 
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  1    wreg      void 
 11009 ;; Registers used:
 11010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11016 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11019 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11020 ;;Total ram usage:        9 bytes
 11021 ;; Hardware stack levels used: 1
 11022 ;; Hardware stack levels required when called: 4
 11023 ;; This function calls:
 11024 ;;		_fputc
 11025 ;;		_fputs
 11026 ;; This function is called by:
 11027 ;;		_dtoa
 11028 ;;		_efgtoa
 11029 ;; This function uses a non-reentrant model
 11030 ;;
 11031                           
 11032                           	psect	text40
 11033   005002                     __ptext40:
 11034                           	callstack 0
 11035   005002                     _pad:
 11036                           	callstack 21
 11037   005002                     
 11038                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 11039   005002  0100               	movlb	0	; () banked
 11040   005004  A1FE               	btfss	_flags& (0+255),0,b
 11041   005006  EF07  F028         	goto	u7121
 11042   00500A  EF09  F028         	goto	u7120
 11043   00500E                     u7121:
 11044   00500E  EF13  F028         	goto	l5644
 11045   005012                     u7120:
 11046   005012                     
 11047                           ; BSR set to: 0
 11048                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 11049   005012  C016  F00D         	movff	pad@buf,fputs@s
 11050   005016  C017  F00E         	movff	pad@buf+1,fputs@s+1
 11051   00501A  C014  F00F         	movff	pad@fp,fputs@fp
 11052   00501E  C015  F010         	movff	pad@fp+1,fputs@fp+1
 11053   005022  EC0F  F029         	call	_fputs	;wreg free
 11054   005026                     l5644:
 11055                           
 11056                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 11057   005026  BE19               	btfsc	(pad@p+1)^0,7,c
 11058   005028  EF1A  F028         	goto	u7130
 11059   00502C  EF18  F028         	goto	u7131
 11060   005030                     u7131:
 11061   005030  EF1E  F028         	goto	l1099
 11062   005034                     u7130:
 11063   005034                     
 11064                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 11065   005034  0E00               	movlw	0
 11066   005036  6E19               	movwf	(pad@p+1)^0,c
 11067   005038  0E00               	movlw	0
 11068   00503A  6E18               	movwf	pad@p^0,c
 11069   00503C                     l1099:
 11070                           
 11071                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 11072   00503C  0E00               	movlw	0
 11073   00503E  6E1C               	movwf	(pad@i+1)^0,c
 11074   005040  0E00               	movlw	0
 11075   005042  6E1B               	movwf	pad@i^0,c
 11076                           
 11077                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11078   005044  EF30  F028         	goto	l5652
 11079   005048                     l5648:
 11080                           
 11081                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 11082   005048  0E00               	movlw	0
 11083   00504A  6E05               	movwf	(fputc@c+1)^0,c
 11084   00504C  0E20               	movlw	32
 11085   00504E  6E04               	movwf	fputc@c^0,c
 11086   005050  C014  F006         	movff	pad@fp,fputc@fp
 11087   005054  C015  F007         	movff	pad@fp+1,fputc@fp+1
 11088   005058  ECE1  F025         	call	_fputc	;wreg free
 11089   00505C                     
 11090                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
 11091   00505C  4A1B               	infsnz	pad@i^0,f,c
 11092   00505E  2A1C               	incf	(pad@i+1)^0,f,c
 11093   005060                     l5652:
 11094                           
 11095                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11096   005060  5018               	movf	pad@p^0,w,c
 11097   005062  5C1B               	subwf	pad@i^0,w,c
 11098   005064  501C               	movf	(pad@i+1)^0,w,c
 11099   005066  0A80               	xorlw	128
 11100   005068  6E1A               	movwf	??_pad^0,c
 11101   00506A  5019               	movf	(pad@p+1)^0,w,c
 11102   00506C  0A80               	xorlw	128
 11103   00506E  581A               	subwfb	??_pad^0,w,c
 11104   005070  A0D8               	btfss	status,0,c
 11105   005072  EF3D  F028         	goto	u7141
 11106   005076  EF3F  F028         	goto	u7140
 11107   00507A                     u7141:
 11108   00507A  EF24  F028         	goto	l5648
 11109   00507E                     u7140:
 11110   00507E                     
 11111                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 11112   00507E  0100               	movlb	0	; () banked
 11113   005080  B1FE               	btfsc	_flags& (0+255),0,b
 11114   005082  EF45  F028         	goto	u7151
 11115   005086  EF47  F028         	goto	u7150
 11116   00508A                     u7151:
 11117   00508A  EF51  F028         	goto	l1104
 11118   00508E                     u7150:
 11119   00508E                     
 11120                           ; BSR set to: 0
 11121                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 11122   00508E  C016  F00D         	movff	pad@buf,fputs@s
 11123   005092  C017  F00E         	movff	pad@buf+1,fputs@s+1
 11124   005096  C014  F00F         	movff	pad@fp,fputs@fp
 11125   00509A  C015  F010         	movff	pad@fp+1,fputs@fp+1
 11126   00509E  EC0F  F029         	call	_fputs	;wreg free
 11127   0050A2                     l1104:
 11128   0050A2  0012               	return		;funcret
 11129   0050A4                     __end_of_pad:
 11130                           	callstack 0
 11131                           
 11132 ;; *************** function _fputs *****************
 11133 ;; Defined at:
 11134 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;  s               2   12[COMRAM] PTR const unsigned char 
 11137 ;;		 -> dbuf(80), 
 11138 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 11139 ;;		 -> NULL(0), sprintf@f(12), 
 11140 ;; Auto vars:     Size  Location     Type
 11141 ;;  i               2   17[COMRAM] int 
 11142 ;;  c               1   16[COMRAM] unsigned char 
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  2   12[COMRAM] int 
 11145 ;; Registers used:
 11146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11153 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11155 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11156 ;;Total ram usage:        7 bytes
 11157 ;; Hardware stack levels used: 1
 11158 ;; Hardware stack levels required when called: 3
 11159 ;; This function calls:
 11160 ;;		_fputc
 11161 ;; This function is called by:
 11162 ;;		_pad
 11163 ;; This function uses a non-reentrant model
 11164 ;;
 11165                           
 11166                           	psect	text41
 11167   00521E                     __ptext41:
 11168                           	callstack 0
 11169   00521E                     _fputs:
 11170                           	callstack 21
 11171   00521E  0E00               	movlw	0
 11172   005220  6E13               	movwf	(fputs@i+1)^0,c
 11173   005222  0E00               	movlw	0
 11174   005224  6E12               	movwf	fputs@i^0,c
 11175   005226  EF20  F029         	goto	l5188
 11176   00522A                     l5184:
 11177   00522A  C011  F004         	movff	fputs@c,fputc@c
 11178   00522E  6A05               	clrf	(fputc@c+1)^0,c
 11179   005230  C00F  F006         	movff	fputs@fp,fputc@fp
 11180   005234  C010  F007         	movff	fputs@fp+1,fputc@fp+1
 11181   005238  ECE1  F025         	call	_fputc	;wreg free
 11182   00523C  4A12               	infsnz	fputs@i^0,f,c
 11183   00523E  2A13               	incf	(fputs@i+1)^0,f,c
 11184   005240                     l5188:
 11185   005240  5012               	movf	fputs@i^0,w,c
 11186   005242  240D               	addwf	fputs@s^0,w,c
 11187   005244  6ED9               	movwf	fsr2l,c
 11188   005246  5013               	movf	(fputs@i+1)^0,w,c
 11189   005248  200E               	addwfc	(fputs@s+1)^0,w,c
 11190   00524A  6EDA               	movwf	fsr2h,c
 11191   00524C  50DF               	movf	indf2,w,c
 11192   00524E  6E11               	movwf	fputs@c^0,c
 11193   005250  5011               	movf	fputs@c^0,w,c
 11194   005252  A4D8               	btfss	status,2,c
 11195   005254  EF2E  F029         	goto	u6411
 11196   005258  EF30  F029         	goto	u6410
 11197   00525C                     u6411:
 11198   00525C  EF15  F029         	goto	l5184
 11199   005260                     u6410:
 11200   005260  0012               	return		;funcret
 11201   005262                     __end_of_fputs:
 11202                           	callstack 0
 11203                           
 11204 ;; *************** function _fputc *****************
 11205 ;; Defined at:
 11206 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
 11207 ;; Parameters:    Size  Location     Type
 11208 ;;  c               2    3[COMRAM] int 
 11209 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 11210 ;;		 -> NULL(0), sprintf@f(12), 
 11211 ;; Auto vars:     Size  Location     Type
 11212 ;;		None
 11213 ;; Return value:  Size  Location     Type
 11214 ;;                  2    3[COMRAM] int 
 11215 ;; Registers used:
 11216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11217 ;; Tracked objects:
 11218 ;;		On entry : 0/0
 11219 ;;		On exit  : 0/0
 11220 ;;		Unchanged: 0/0
 11221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11222 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11224 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11225 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11226 ;;Total ram usage:        9 bytes
 11227 ;; Hardware stack levels used: 1
 11228 ;; Hardware stack levels required when called: 2
 11229 ;; This function calls:
 11230 ;;		_putch
 11231 ;; This function is called by:
 11232 ;;		_pad
 11233 ;;		_stoa
 11234 ;;		_vfpfcnvrt
 11235 ;;		_fputs
 11236 ;; This function uses a non-reentrant model
 11237 ;;
 11238                           
 11239                           	psect	text42
 11240   004BC2                     __ptext42:
 11241                           	callstack 0
 11242   004BC2                     _fputc:
 11243                           	callstack 23
 11244   004BC2  5006               	movf	fputc@fp^0,w,c
 11245   004BC4  1007               	iorwf	(fputc@fp+1)^0,w,c
 11246   004BC6  B4D8               	btfsc	status,2,c
 11247   004BC8  EFE8  F025         	goto	u5981
 11248   004BCC  EFEA  F025         	goto	u5980
 11249   004BD0                     u5981:
 11250   004BD0  EFF3  F025         	goto	l4970
 11251   004BD4                     u5980:
 11252   004BD4  5006               	movf	fputc@fp^0,w,c
 11253   004BD6  1007               	iorwf	(fputc@fp+1)^0,w,c
 11254   004BD8  A4D8               	btfss	status,2,c
 11255   004BDA  EFF1  F025         	goto	u5991
 11256   004BDE  EFF3  F025         	goto	u5990
 11257   004BE2                     u5991:
 11258   004BE2  EFF8  F025         	goto	l4972
 11259   004BE6                     u5990:
 11260   004BE6                     l4970:
 11261   004BE6  5004               	movf	fputc@c^0,w,c
 11262   004BE8  EC3E  F02A         	call	_putch
 11263   004BEC  EF45  F026         	goto	l1300
 11264   004BF0                     l4972:
 11265   004BF0  EE20 F00A          	lfsr	2,10
 11266   004BF4  5006               	movf	fputc@fp^0,w,c
 11267   004BF6  26D9               	addwf	fsr2l,f,c
 11268   004BF8  5007               	movf	(fputc@fp+1)^0,w,c
 11269   004BFA  22DA               	addwfc	fsr2h,f,c
 11270   004BFC  50DE               	movf	postinc2,w,c
 11271   004BFE  10DE               	iorwf	postinc2,w,c
 11272   004C00  B4D8               	btfsc	status,2,c
 11273   004C02  EF05  F026         	goto	u6001
 11274   004C06  EF07  F026         	goto	u6000
 11275   004C0A                     u6001:
 11276   004C0A  EF22  F026         	goto	l4976
 11277   004C0E                     u6000:
 11278   004C0E  EE20 F00A          	lfsr	2,10
 11279   004C12  5006               	movf	fputc@fp^0,w,c
 11280   004C14  26D9               	addwf	fsr2l,f,c
 11281   004C16  5007               	movf	(fputc@fp+1)^0,w,c
 11282   004C18  22DA               	addwfc	fsr2h,f,c
 11283   004C1A  EE10 F003          	lfsr	1,3
 11284   004C1E  5006               	movf	fputc@fp^0,w,c
 11285   004C20  26E1               	addwf	fsr1l,f,c
 11286   004C22  5007               	movf	(fputc@fp+1)^0,w,c
 11287   004C24  22E2               	addwfc	fsr1h,f,c
 11288   004C26  50DE               	movf	postinc2,w,c
 11289   004C28  5CE6               	subwf	postinc1,w,c
 11290   004C2A  50E6               	movf	postinc1,w,c
 11291   004C2C  0A80               	xorlw	128
 11292   004C2E  6E0C               	movwf	(??_fputc+4)^0,c
 11293   004C30  50DE               	movf	postinc2,w,c
 11294   004C32  0A80               	xorlw	128
 11295   004C34  580C               	subwfb	(??_fputc+4)^0,w,c
 11296   004C36  B0D8               	btfsc	status,0,c
 11297   004C38  EF20  F026         	goto	u6011
 11298   004C3C  EF22  F026         	goto	u6010
 11299   004C40                     u6011:
 11300   004C40  EF45  F026         	goto	l1300
 11301   004C44                     u6010:
 11302   004C44                     l4976:
 11303   004C44  EE20 F003          	lfsr	2,3
 11304   004C48  5006               	movf	fputc@fp^0,w,c
 11305   004C4A  26D9               	addwf	fsr2l,f,c
 11306   004C4C  5007               	movf	(fputc@fp+1)^0,w,c
 11307   004C4E  22DA               	addwfc	fsr2h,f,c
 11308   004C50  CFDE F008          	movff	postinc2,??_fputc
 11309   004C54  CFDD F009          	movff	postdec2,??_fputc+1
 11310   004C58  C006  FFD9         	movff	fputc@fp,fsr2l
 11311   004C5C  C007  FFDA         	movff	fputc@fp+1,fsr2h
 11312   004C60  CFDE F00A          	movff	postinc2,??_fputc+2
 11313   004C64  CFDD F00B          	movff	postdec2,??_fputc+3
 11314   004C68  5008               	movf	??_fputc^0,w,c
 11315   004C6A  240A               	addwf	(??_fputc+2)^0,w,c
 11316   004C6C  6ED9               	movwf	fsr2l,c
 11317   004C6E  5009               	movf	(??_fputc+1)^0,w,c
 11318   004C70  200B               	addwfc	(??_fputc+3)^0,w,c
 11319   004C72  6EDA               	movwf	fsr2h,c
 11320   004C74  C004  FFDF         	movff	fputc@c,indf2
 11321   004C78  EE20 F003          	lfsr	2,3
 11322   004C7C  5006               	movf	fputc@fp^0,w,c
 11323   004C7E  26D9               	addwf	fsr2l,f,c
 11324   004C80  5007               	movf	(fputc@fp+1)^0,w,c
 11325   004C82  22DA               	addwfc	fsr2h,f,c
 11326   004C84  2ADE               	incf	postinc2,f,c
 11327   004C86  0E00               	movlw	0
 11328   004C88  22DD               	addwfc	postdec2,f,c
 11329   004C8A                     l1300:
 11330   004C8A  0012               	return		;funcret
 11331   004C8C                     __end_of_fputc:
 11332                           	callstack 0
 11333                           
 11334 ;; *************** function _putch *****************
 11335 ;; Defined at:
 11336 ;;		line 11 in file "putch.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;  data            1    wreg     unsigned char 
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;  data            1    2[COMRAM] unsigned char 
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  1    wreg      void 
 11343 ;; Registers used:
 11344 ;;		wreg
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11353 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11354 ;;Total ram usage:        1 bytes
 11355 ;; Hardware stack levels used: 1
 11356 ;; Hardware stack levels required when called: 1
 11357 ;; This function calls:
 11358 ;;		Nothing
 11359 ;; This function is called by:
 11360 ;;		_fputc
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           	psect	text43
 11365   00547C                     __ptext43:
 11366                           	callstack 0
 11367   00547C                     _putch:
 11368                           	callstack 23
 11369                           
 11370                           ;incstack = 0
 11371                           ;putch@data stored from wreg
 11372   00547C  6E03               	movwf	putch@data^0,c
 11373   00547E                     l230:
 11374   00547E  A89E               	btfss	3998,4,c	;volatile
 11375   005480  EF44  F02A         	goto	u5971
 11376   005484  EF46  F02A         	goto	u5970
 11377   005488                     u5971:
 11378   005488  EF3F  F02A         	goto	l230
 11379   00548C                     u5970:
 11380   00548C                     
 11381                           ;putch.c: 13:     TXREG1 = data;
 11382   00548C  C003  FFAD         	movff	putch@data,4013	;volatile
 11383   005490  0012               	return		;funcret
 11384   005492                     __end_of_putch:
 11385                           	callstack 0
 11386                           
 11387 ;; *************** function _abs *****************
 11388 ;; Defined at:
 11389 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
 11390 ;; Parameters:    Size  Location     Type
 11391 ;;  a               2    8[COMRAM] int 
 11392 ;; Auto vars:     Size  Location     Type
 11393 ;;		None
 11394 ;; Return value:  Size  Location     Type
 11395 ;;                  2    8[COMRAM] int 
 11396 ;; Registers used:
 11397 ;;		wreg, status,2, status,0
 11398 ;; Tracked objects:
 11399 ;;		On entry : 0/0
 11400 ;;		On exit  : 0/0
 11401 ;;		Unchanged: 0/0
 11402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11406 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11407 ;;Total ram usage:        4 bytes
 11408 ;; Hardware stack levels used: 1
 11409 ;; Hardware stack levels required when called: 1
 11410 ;; This function calls:
 11411 ;;		Nothing
 11412 ;; This function is called by:
 11413 ;;		_dtoa
 11414 ;; This function uses a non-reentrant model
 11415 ;;
 11416                           
 11417                           	psect	text44
 11418   0053C0                     __ptext44:
 11419                           	callstack 0
 11420   0053C0                     _abs:
 11421                           	callstack 24
 11422   0053C0  BE0A               	btfsc	(abs@a+1)^0,7,c
 11423   0053C2  EFE5  F029         	goto	u7161
 11424   0053C6  EFE7  F029         	goto	u7160
 11425   0053CA                     u7161:
 11426   0053CA  EFED  F029         	goto	l1259
 11427   0053CE                     u7160:
 11428   0053CE  C009  F009         	movff	abs@a,?_abs
 11429   0053D2  C00A  F00A         	movff	abs@a+1,?_abs+1
 11430   0053D6  EFF9  F029         	goto	l1262
 11431   0053DA                     l1259:
 11432   0053DA  C009  F00B         	movff	abs@a,??_abs
 11433   0053DE  C00A  F00C         	movff	abs@a+1,??_abs+1
 11434   0053E2  1E0B               	comf	??_abs^0,f,c
 11435   0053E4  1E0C               	comf	(??_abs+1)^0,f,c
 11436   0053E6  4A0B               	infsnz	??_abs^0,f,c
 11437   0053E8  2A0C               	incf	(??_abs+1)^0,f,c
 11438   0053EA  C00B  F009         	movff	??_abs,?_abs
 11439   0053EE  C00C  F00A         	movff	??_abs+1,?_abs+1
 11440   0053F2                     l1262:
 11441   0053F2  0012               	return		;funcret
 11442   0053F4                     __end_of_abs:
 11443                           	callstack 0
 11444                           
 11445 ;; *************** function ___awmod *****************
 11446 ;; Defined at:
 11447 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;  dividend        2    2[COMRAM] int 
 11450 ;;  divisor         2    4[COMRAM] int 
 11451 ;; Auto vars:     Size  Location     Type
 11452 ;;  sign            1    7[COMRAM] unsigned char 
 11453 ;;  counter         1    6[COMRAM] unsigned char 
 11454 ;; Return value:  Size  Location     Type
 11455 ;;                  2    2[COMRAM] int 
 11456 ;; Registers used:
 11457 ;;		wreg, status,2, status,0
 11458 ;; Tracked objects:
 11459 ;;		On entry : 0/0
 11460 ;;		On exit  : 0/0
 11461 ;;		Unchanged: 0/0
 11462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11463 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11464 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11466 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11467 ;;Total ram usage:        6 bytes
 11468 ;; Hardware stack levels used: 1
 11469 ;; Hardware stack levels required when called: 1
 11470 ;; This function calls:
 11471 ;;		Nothing
 11472 ;; This function is called by:
 11473 ;;		_dtoa
 11474 ;; This function uses a non-reentrant model
 11475 ;;
 11476                           
 11477                           	psect	text45
 11478   004E02                     __ptext45:
 11479                           	callstack 0
 11480   004E02                     ___awmod:
 11481                           	callstack 24
 11482   004E02  0E00               	movlw	0
 11483   004E04  6E08               	movwf	___awmod@sign^0,c
 11484   004E06  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
 11485   004E08  EF0A  F027         	goto	u6900
 11486   004E0C  EF08  F027         	goto	u6901
 11487   004E10                     u6901:
 11488   004E10  EF10  F027         	goto	l5522
 11489   004E14                     u6900:
 11490   004E14  6C03               	negf	___awmod@dividend^0,c
 11491   004E16  1E04               	comf	(___awmod@dividend+1)^0,f,c
 11492   004E18  B0D8               	btfsc	status,0,c
 11493   004E1A  2A04               	incf	(___awmod@dividend+1)^0,f,c
 11494   004E1C  0E01               	movlw	1
 11495   004E1E  6E08               	movwf	___awmod@sign^0,c
 11496   004E20                     l5522:
 11497   004E20  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
 11498   004E22  EF17  F027         	goto	u6910
 11499   004E26  EF15  F027         	goto	u6911
 11500   004E2A                     u6911:
 11501   004E2A  EF1B  F027         	goto	l5526
 11502   004E2E                     u6910:
 11503   004E2E  6C05               	negf	___awmod@divisor^0,c
 11504   004E30  1E06               	comf	(___awmod@divisor+1)^0,f,c
 11505   004E32  B0D8               	btfsc	status,0,c
 11506   004E34  2A06               	incf	(___awmod@divisor+1)^0,f,c
 11507   004E36                     l5526:
 11508   004E36  5005               	movf	___awmod@divisor^0,w,c
 11509   004E38  1006               	iorwf	(___awmod@divisor+1)^0,w,c
 11510   004E3A  B4D8               	btfsc	status,2,c
 11511   004E3C  EF22  F027         	goto	u6921
 11512   004E40  EF24  F027         	goto	u6920
 11513   004E44                     u6921:
 11514   004E44  EF48  F027         	goto	l5542
 11515   004E48                     u6920:
 11516   004E48  0E01               	movlw	1
 11517   004E4A  6E07               	movwf	___awmod@counter^0,c
 11518   004E4C  EF2C  F027         	goto	l5532
 11519   004E50                     l5530:
 11520   004E50  90D8               	bcf	status,0,c
 11521   004E52  3605               	rlcf	___awmod@divisor^0,f,c
 11522   004E54  3606               	rlcf	(___awmod@divisor+1)^0,f,c
 11523   004E56  2A07               	incf	___awmod@counter^0,f,c
 11524   004E58                     l5532:
 11525   004E58  AE06               	btfss	(___awmod@divisor+1)^0,7,c
 11526   004E5A  EF31  F027         	goto	u6931
 11527   004E5E  EF33  F027         	goto	u6930
 11528   004E62                     u6931:
 11529   004E62  EF28  F027         	goto	l5530
 11530   004E66                     u6930:
 11531   004E66                     l5534:
 11532   004E66  5005               	movf	___awmod@divisor^0,w,c
 11533   004E68  5C03               	subwf	___awmod@dividend^0,w,c
 11534   004E6A  5006               	movf	(___awmod@divisor+1)^0,w,c
 11535   004E6C  5804               	subwfb	(___awmod@dividend+1)^0,w,c
 11536   004E6E  A0D8               	btfss	status,0,c
 11537   004E70  EF3C  F027         	goto	u6941
 11538   004E74  EF3E  F027         	goto	u6940
 11539   004E78                     u6941:
 11540   004E78  EF42  F027         	goto	l5538
 11541   004E7C                     u6940:
 11542   004E7C  5005               	movf	___awmod@divisor^0,w,c
 11543   004E7E  5E03               	subwf	___awmod@dividend^0,f,c
 11544   004E80  5006               	movf	(___awmod@divisor+1)^0,w,c
 11545   004E82  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
 11546   004E84                     l5538:
 11547   004E84  90D8               	bcf	status,0,c
 11548   004E86  3206               	rrcf	(___awmod@divisor+1)^0,f,c
 11549   004E88  3205               	rrcf	___awmod@divisor^0,f,c
 11550   004E8A  2E07               	decfsz	___awmod@counter^0,f,c
 11551   004E8C  EF33  F027         	goto	l5534
 11552   004E90                     l5542:
 11553   004E90  5008               	movf	___awmod@sign^0,w,c
 11554   004E92  B4D8               	btfsc	status,2,c
 11555   004E94  EF4E  F027         	goto	u6951
 11556   004E98  EF50  F027         	goto	u6950
 11557   004E9C                     u6951:
 11558   004E9C  EF54  F027         	goto	l5546
 11559   004EA0                     u6950:
 11560   004EA0  6C03               	negf	___awmod@dividend^0,c
 11561   004EA2  1E04               	comf	(___awmod@dividend+1)^0,f,c
 11562   004EA4  B0D8               	btfsc	status,0,c
 11563   004EA6  2A04               	incf	(___awmod@dividend+1)^0,f,c
 11564   004EA8                     l5546:
 11565   004EA8  C003  F003         	movff	___awmod@dividend,?___awmod
 11566   004EAC  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
 11567   004EB0  0012               	return		;funcret
 11568   004EB2                     __end_of___awmod:
 11569                           	callstack 0
 11570                           
 11571 ;; *************** function ___awdiv *****************
 11572 ;; Defined at:
 11573 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 11574 ;; Parameters:    Size  Location     Type
 11575 ;;  dividend        2    2[COMRAM] int 
 11576 ;;  divisor         2    4[COMRAM] int 
 11577 ;; Auto vars:     Size  Location     Type
 11578 ;;  quotient        2    8[COMRAM] int 
 11579 ;;  sign            1    7[COMRAM] unsigned char 
 11580 ;;  counter         1    6[COMRAM] unsigned char 
 11581 ;; Return value:  Size  Location     Type
 11582 ;;                  2    2[COMRAM] int 
 11583 ;; Registers used:
 11584 ;;		wreg, status,2, status,0
 11585 ;; Tracked objects:
 11586 ;;		On entry : 0/0
 11587 ;;		On exit  : 0/0
 11588 ;;		Unchanged: 0/0
 11589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11590 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11591 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11593 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11594 ;;Total ram usage:        8 bytes
 11595 ;; Hardware stack levels used: 1
 11596 ;; Hardware stack levels required when called: 1
 11597 ;; This function calls:
 11598 ;;		Nothing
 11599 ;; This function is called by:
 11600 ;;		_dtoa
 11601 ;; This function uses a non-reentrant model
 11602 ;;
 11603                           
 11604                           	psect	text46
 11605   004C8C                     __ptext46:
 11606                           	callstack 0
 11607   004C8C                     ___awdiv:
 11608                           	callstack 24
 11609   004C8C  0E00               	movlw	0
 11610   004C8E  6E08               	movwf	___awdiv@sign^0,c
 11611   004C90  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
 11612   004C92  EF4F  F026         	goto	u6840
 11613   004C96  EF4D  F026         	goto	u6841
 11614   004C9A                     u6841:
 11615   004C9A  EF55  F026         	goto	l5478
 11616   004C9E                     u6840:
 11617   004C9E  6C05               	negf	___awdiv@divisor^0,c
 11618   004CA0  1E06               	comf	(___awdiv@divisor+1)^0,f,c
 11619   004CA2  B0D8               	btfsc	status,0,c
 11620   004CA4  2A06               	incf	(___awdiv@divisor+1)^0,f,c
 11621   004CA6  0E01               	movlw	1
 11622   004CA8  6E08               	movwf	___awdiv@sign^0,c
 11623   004CAA                     l5478:
 11624   004CAA  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
 11625   004CAC  EF5C  F026         	goto	u6850
 11626   004CB0  EF5A  F026         	goto	u6851
 11627   004CB4                     u6851:
 11628   004CB4  EF62  F026         	goto	l5484
 11629   004CB8                     u6850:
 11630   004CB8  6C03               	negf	___awdiv@dividend^0,c
 11631   004CBA  1E04               	comf	(___awdiv@dividend+1)^0,f,c
 11632   004CBC  B0D8               	btfsc	status,0,c
 11633   004CBE  2A04               	incf	(___awdiv@dividend+1)^0,f,c
 11634   004CC0  0E01               	movlw	1
 11635   004CC2  1A08               	xorwf	___awdiv@sign^0,f,c
 11636   004CC4                     l5484:
 11637   004CC4  0E00               	movlw	0
 11638   004CC6  6E0A               	movwf	(___awdiv@quotient+1)^0,c
 11639   004CC8  0E00               	movlw	0
 11640   004CCA  6E09               	movwf	___awdiv@quotient^0,c
 11641   004CCC  5005               	movf	___awdiv@divisor^0,w,c
 11642   004CCE  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
 11643   004CD0  B4D8               	btfsc	status,2,c
 11644   004CD2  EF6D  F026         	goto	u6861
 11645   004CD6  EF6F  F026         	goto	u6860
 11646   004CDA                     u6861:
 11647   004CDA  EF97  F026         	goto	l5506
 11648   004CDE                     u6860:
 11649   004CDE  0E01               	movlw	1
 11650   004CE0  6E07               	movwf	___awdiv@counter^0,c
 11651   004CE2  EF77  F026         	goto	l5492
 11652   004CE6                     l5490:
 11653   004CE6  90D8               	bcf	status,0,c
 11654   004CE8  3605               	rlcf	___awdiv@divisor^0,f,c
 11655   004CEA  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
 11656   004CEC  2A07               	incf	___awdiv@counter^0,f,c
 11657   004CEE                     l5492:
 11658   004CEE  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
 11659   004CF0  EF7C  F026         	goto	u6871
 11660   004CF4  EF7E  F026         	goto	u6870
 11661   004CF8                     u6871:
 11662   004CF8  EF73  F026         	goto	l5490
 11663   004CFC                     u6870:
 11664   004CFC                     l5494:
 11665   004CFC  90D8               	bcf	status,0,c
 11666   004CFE  3609               	rlcf	___awdiv@quotient^0,f,c
 11667   004D00  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
 11668   004D02  5005               	movf	___awdiv@divisor^0,w,c
 11669   004D04  5C03               	subwf	___awdiv@dividend^0,w,c
 11670   004D06  5006               	movf	(___awdiv@divisor+1)^0,w,c
 11671   004D08  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
 11672   004D0A  A0D8               	btfss	status,0,c
 11673   004D0C  EF8A  F026         	goto	u6881
 11674   004D10  EF8C  F026         	goto	u6880
 11675   004D14                     u6881:
 11676   004D14  EF91  F026         	goto	l5502
 11677   004D18                     u6880:
 11678   004D18  5005               	movf	___awdiv@divisor^0,w,c
 11679   004D1A  5E03               	subwf	___awdiv@dividend^0,f,c
 11680   004D1C  5006               	movf	(___awdiv@divisor+1)^0,w,c
 11681   004D1E  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
 11682   004D20  8009               	bsf	___awdiv@quotient^0,0,c
 11683   004D22                     l5502:
 11684   004D22  90D8               	bcf	status,0,c
 11685   004D24  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
 11686   004D26  3205               	rrcf	___awdiv@divisor^0,f,c
 11687   004D28  2E07               	decfsz	___awdiv@counter^0,f,c
 11688   004D2A  EF7E  F026         	goto	l5494
 11689   004D2E                     l5506:
 11690   004D2E  5008               	movf	___awdiv@sign^0,w,c
 11691   004D30  B4D8               	btfsc	status,2,c
 11692   004D32  EF9D  F026         	goto	u6891
 11693   004D36  EF9F  F026         	goto	u6890
 11694   004D3A                     u6891:
 11695   004D3A  EFA3  F026         	goto	l5510
 11696   004D3E                     u6890:
 11697   004D3E  6C09               	negf	___awdiv@quotient^0,c
 11698   004D40  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
 11699   004D42  B0D8               	btfsc	status,0,c
 11700   004D44  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
 11701   004D46                     l5510:
 11702   004D46  C009  F003         	movff	___awdiv@quotient,?___awdiv
 11703   004D4A  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
 11704   004D4E  0012               	return		;funcret
 11705   004D50                     __end_of___awdiv:
 11706                           	callstack 0
 11707                           
 11708 ;; *************** function _LCD_ShowString *****************
 11709 ;; Defined at:
 11710 ;;		line 55 in file "lcd.c"
 11711 ;; Parameters:    Size  Location     Type
 11712 ;;  lineNum         1    wreg     unsigned char 
 11713 ;;  textData        2    3[COMRAM] PTR unsigned char 
 11714 ;;		 -> runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_5(17), 
 11715 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
 11716 ;; Auto vars:     Size  Location     Type
 11717 ;;  lineNum         1    7[COMRAM] unsigned char 
 11718 ;;  i               1    8[COMRAM] unsigned char 
 11719 ;; Return value:  Size  Location     Type
 11720 ;;                  1    wreg      void 
 11721 ;; Registers used:
 11722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11723 ;; Tracked objects:
 11724 ;;		On entry : 0/0
 11725 ;;		On exit  : 0/0
 11726 ;;		Unchanged: 0/0
 11727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11729 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11731 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11732 ;;Total ram usage:        6 bytes
 11733 ;; Hardware stack levels used: 1
 11734 ;; Hardware stack levels required when called: 2
 11735 ;; This function calls:
 11736 ;;		_LCD_Send
 11737 ;; This function is called by:
 11738 ;;		_main
 11739 ;;		_moveDisplay
 11740 ;;		_runADC
 11741 ;; This function uses a non-reentrant model
 11742 ;;
 11743                           
 11744                           	psect	text47
 11745   004D50                     __ptext47:
 11746                           	callstack 0
 11747   004D50                     _LCD_ShowString:
 11748                           	callstack 27
 11749                           
 11750                           ;incstack = 0
 11751                           ;LCD_ShowString@lineNum stored from wreg
 11752   004D50  6E08               	movwf	LCD_ShowString@lineNum^0,c
 11753   004D52                     
 11754                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 11755   004D52  806B               	bsf	107,0,c	;volatile
 11756   004D54                     l108:
 11757   004D54  B06B               	btfsc	107,0,c	;volatile
 11758   004D56  EFAF  F026         	goto	u8211
 11759   004D5A  EFB1  F026         	goto	u8210
 11760   004D5E                     u8211:
 11761   004D5E  EFAA  F026         	goto	l108
 11762   004D62                     u8210:
 11763   004D62                     
 11764                           ;lcd.c: 62:     SSP2IF = 0;
 11765   004D62  9EA4               	bcf	4004,7,c	;volatile
 11766   004D64                     
 11767                           ;lcd.c: 64:     LCD_Send(0x7c);
 11768   004D64  0E7C               	movlw	124
 11769   004D66  EC0D  F02A         	call	_LCD_Send
 11770                           
 11771                           ;lcd.c: 66:     LCD_Send(0x80);
 11772   004D6A  0E80               	movlw	128
 11773   004D6C  EC0D  F02A         	call	_LCD_Send
 11774   004D70                     
 11775                           ;lcd.c: 68:     if(lineNum == 1){
 11776   004D70  0408               	decf	LCD_ShowString@lineNum^0,w,c
 11777   004D72  A4D8               	btfss	status,2,c
 11778   004D74  EFBE  F026         	goto	u8221
 11779   004D78  EFC0  F026         	goto	u8220
 11780   004D7C                     u8221:
 11781   004D7C  EFC5  F026         	goto	l6298
 11782   004D80                     u8220:
 11783   004D80                     
 11784                           ;lcd.c: 69:         LCD_Send(0x80);
 11785   004D80  0E80               	movlw	128
 11786   004D82  EC0D  F02A         	call	_LCD_Send
 11787                           
 11788                           ;lcd.c: 70:     }
 11789   004D86  EFD1  F026         	goto	l112
 11790   004D8A                     l6298:
 11791   004D8A  0E02               	movlw	2
 11792   004D8C  1808               	xorwf	LCD_ShowString@lineNum^0,w,c
 11793   004D8E  A4D8               	btfss	status,2,c
 11794   004D90  EFCC  F026         	goto	u8231
 11795   004D94  EFCE  F026         	goto	u8230
 11796   004D98                     u8231:
 11797   004D98  EFD1  F026         	goto	l112
 11798   004D9C                     u8230:
 11799   004D9C                     
 11800                           ;lcd.c: 72:         LCD_Send(0xC0);
 11801   004D9C  0EC0               	movlw	192
 11802   004D9E  EC0D  F02A         	call	_LCD_Send
 11803   004DA2                     l112:
 11804                           
 11805                           ;lcd.c: 75:     LCD_Send(0x40);
 11806   004DA2  0E40               	movlw	64
 11807   004DA4  EC0D  F02A         	call	_LCD_Send
 11808   004DA8                     
 11809                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 11810   004DA8  0E00               	movlw	0
 11811   004DAA  6E09               	movwf	LCD_ShowString@i^0,c
 11812   004DAC                     l6308:
 11813                           
 11814                           ;lcd.c: 78:         LCD_Send(textData[i]);
 11815   004DAC  5009               	movf	LCD_ShowString@i^0,w,c
 11816   004DAE  2404               	addwf	LCD_ShowString@textData^0,w,c
 11817   004DB0  6E06               	movwf	??_LCD_ShowString^0,c
 11818   004DB2  0E00               	movlw	0
 11819   004DB4  2005               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 11820   004DB6  6E07               	movwf	(??_LCD_ShowString+1)^0,c
 11821   004DB8  C006  FFF6         	movff	??_LCD_ShowString,tblptrl
 11822   004DBC  C007  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 11823   004DC0  0E00               	movlw	low (__smallconst shr (0+16))
 11824   004DC2  6EF8               	movwf	tblptru,c
 11825   004DC4  0E0F               	movlw	(high __ramtop+-1)
 11826   004DC6  64F7               	cpfsgt	tblptrh,c
 11827   004DC8  D003               	bra	u8247
 11828   004DCA  0008               	tblrd		*
 11829   004DCC  50F5               	movf	tablat,w,c
 11830   004DCE  D005               	bra	u8240
 11831   004DD0                     u8247:
 11832   004DD0  CFF6 FFE1          	movff	tblptrl,fsr1l
 11833   004DD4  CFF7 FFE2          	movff	tblptrh,fsr1h
 11834   004DD8  50E7               	movf	indf1,w,c
 11835   004DDA                     u8240:
 11836   004DDA  EC0D  F02A         	call	_LCD_Send
 11837   004DDE                     
 11838                           ;lcd.c: 79:     }
 11839   004DDE  2A09               	incf	LCD_ShowString@i^0,f,c
 11840   004DE0  0E0F               	movlw	15
 11841   004DE2  6409               	cpfsgt	LCD_ShowString@i^0,c
 11842   004DE4  EFF6  F026         	goto	u8251
 11843   004DE8  EFF8  F026         	goto	u8250
 11844   004DEC                     u8251:
 11845   004DEC  EFD6  F026         	goto	l6308
 11846   004DF0                     u8250:
 11847   004DF0                     
 11848                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 11849   004DF0  846B               	bsf	107,2,c	;volatile
 11850   004DF2                     l116:
 11851   004DF2  B46B               	btfsc	107,2,c	;volatile
 11852   004DF4  EFFE  F026         	goto	u8261
 11853   004DF8  EF00  F027         	goto	u8260
 11854   004DFC                     u8261:
 11855   004DFC  EFF9  F026         	goto	l116
 11856   004E00                     u8260:
 11857   004E00  0012               	return		;funcret
 11858   004E02                     __end_of_LCD_ShowString:
 11859                           	callstack 0
 11860                           
 11861 ;; *************** function _LCD_Clear *****************
 11862 ;; Defined at:
 11863 ;;		line 94 in file "lcd.c"
 11864 ;; Parameters:    Size  Location     Type
 11865 ;;		None
 11866 ;; Auto vars:     Size  Location     Type
 11867 ;;		None
 11868 ;; Return value:  Size  Location     Type
 11869 ;;                  1    wreg      void 
 11870 ;; Registers used:
 11871 ;;		wreg, cstack
 11872 ;; Tracked objects:
 11873 ;;		On entry : 0/0
 11874 ;;		On exit  : 0/0
 11875 ;;		Unchanged: 0/0
 11876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11881 ;;Total ram usage:        0 bytes
 11882 ;; Hardware stack levels used: 1
 11883 ;; Hardware stack levels required when called: 2
 11884 ;; This function calls:
 11885 ;;		_LCD_Send
 11886 ;; This function is called by:
 11887 ;;		_moveDisplay
 11888 ;; This function uses a non-reentrant model
 11889 ;;
 11890                           
 11891                           	psect	text48
 11892   005356                     __ptext48:
 11893                           	callstack 0
 11894   005356                     _LCD_Clear:
 11895                           	callstack 27
 11896   005356                     
 11897                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
 11898   005356  806B               	bsf	107,0,c	;volatile
 11899   005358                     l131:
 11900   005358  B06B               	btfsc	107,0,c	;volatile
 11901   00535A  EFB1  F029         	goto	u8271
 11902   00535E  EFB3  F029         	goto	u8270
 11903   005362                     u8271:
 11904   005362  EFAC  F029         	goto	l131
 11905   005366                     u8270:
 11906   005366                     
 11907                           ;lcd.c: 97:     SSP2IF = 0;
 11908   005366  9EA4               	bcf	4004,7,c	;volatile
 11909   005368                     
 11910                           ;lcd.c: 99:     LCD_Send(0x7C);
 11911   005368  0E7C               	movlw	124
 11912   00536A  EC0D  F02A         	call	_LCD_Send
 11913                           
 11914                           ;lcd.c: 100:     LCD_Send(0x80);
 11915   00536E  0E80               	movlw	128
 11916   005370  EC0D  F02A         	call	_LCD_Send
 11917                           
 11918                           ;lcd.c: 101:     LCD_Send(0x01);
 11919   005374  0E01               	movlw	1
 11920   005376  EC0D  F02A         	call	_LCD_Send
 11921   00537A                     
 11922                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
 11923   00537A  846B               	bsf	107,2,c	;volatile
 11924   00537C                     l134:
 11925   00537C  B46B               	btfsc	107,2,c	;volatile
 11926   00537E  EFC3  F029         	goto	u8281
 11927   005382  EFC5  F029         	goto	u8280
 11928   005386                     u8281:
 11929   005386  EFBE  F029         	goto	l134
 11930   00538A                     u8280:
 11931   00538A  0012               	return		;funcret
 11932   00538C                     __end_of_LCD_Clear:
 11933                           	callstack 0
 11934                           
 11935 ;; *************** function _LCD_Init *****************
 11936 ;; Defined at:
 11937 ;;		line 3 in file "lcd.c"
 11938 ;; Parameters:    Size  Location     Type
 11939 ;;		None
 11940 ;; Auto vars:     Size  Location     Type
 11941 ;;		None
 11942 ;; Return value:  Size  Location     Type
 11943 ;;                  1    wreg      void 
 11944 ;; Registers used:
 11945 ;;		wreg, status,2, cstack
 11946 ;; Tracked objects:
 11947 ;;		On entry : 0/0
 11948 ;;		On exit  : 0/0
 11949 ;;		Unchanged: 0/0
 11950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11954 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11955 ;;Total ram usage:        1 bytes
 11956 ;; Hardware stack levels used: 1
 11957 ;; Hardware stack levels required when called: 2
 11958 ;; This function calls:
 11959 ;;		_LCD_Send
 11960 ;; This function is called by:
 11961 ;;		_main
 11962 ;; This function uses a non-reentrant model
 11963 ;;
 11964                           
 11965                           	psect	text49
 11966   004AE8                     __ptext49:
 11967                           	callstack 0
 11968   004AE8                     _LCD_Init:
 11969                           	callstack 28
 11970   004AE8                     
 11971                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 11972   004AE8  010F               	movlb	15	; () banked
 11973   004AEA  913B               	bcf	59,0,b	;volatile
 11974                           
 11975                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 11976   004AEC  933B               	bcf	59,1,b	;volatile
 11977                           
 11978                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 11979   004AEE  8095               	bsf	149,0,c	;volatile
 11980                           
 11981                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 11982   004AF0  8295               	bsf	149,1,c	;volatile
 11983                           
 11984                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 11985   004AF2  9092               	bcf	146,0,c	;volatile
 11986                           
 11987                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 11988   004AF4  8089               	bsf	137,0,c	;volatile
 11989   004AF6                     
 11990                           ; BSR set to: 15
 11991                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 11992   004AF6  506C               	movf	108,w,c	;volatile
 11993   004AF8  0BF0               	andlw	-16
 11994   004AFA  0908               	iorlw	8
 11995   004AFC  6E6C               	movwf	108,c	;volatile
 11996                           
 11997                           ;lcd.c: 15:     SSP2ADD = 19;
 11998   004AFE  0E13               	movlw	19
 11999   004B00  6E6E               	movwf	110,c	;volatile
 12000   004B02                     
 12001                           ; BSR set to: 15
 12002                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 12003   004B02  8A6C               	bsf	108,5,c	;volatile
 12004   004B04                     
 12005                           ; BSR set to: 15
 12006                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 12007   004B04  0E34               	movlw	52
 12008   004B06  6E04               	movwf	??_LCD_Init^0,c
 12009   004B08  0EF2               	movlw	242
 12010   004B0A                     u8957:
 12011   004B0A  2EE8               	decfsz	wreg,f,c
 12012   004B0C  D7FE               	bra	u8957
 12013   004B0E  2E04               	decfsz	??_LCD_Init^0,f,c
 12014   004B10  D7FC               	bra	u8957
 12015   004B12                     
 12016                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 12017   004B12  806B               	bsf	107,0,c	;volatile
 12018   004B14                     l99:
 12019   004B14  B06B               	btfsc	107,0,c	;volatile
 12020   004B16  EF8F  F025         	goto	u8501
 12021   004B1A  EF91  F025         	goto	u8500
 12022   004B1E                     u8501:
 12023   004B1E  EF8A  F025         	goto	l99
 12024   004B22                     u8500:
 12025   004B22                     
 12026                           ;lcd.c: 22:     SSP2IF = 0;
 12027   004B22  9EA4               	bcf	4004,7,c	;volatile
 12028   004B24                     
 12029                           ;lcd.c: 27:     LCD_Send(0x7C);
 12030   004B24  0E7C               	movlw	124
 12031   004B26  EC0D  F02A         	call	_LCD_Send
 12032                           
 12033                           ;lcd.c: 28:     LCD_Send(0x80);
 12034   004B2A  0E80               	movlw	128
 12035   004B2C  EC0D  F02A         	call	_LCD_Send
 12036                           
 12037                           ;lcd.c: 29:     LCD_Send(0x38);
 12038   004B30  0E38               	movlw	56
 12039   004B32  EC0D  F02A         	call	_LCD_Send
 12040                           
 12041                           ;lcd.c: 30:     LCD_Send(0x80);
 12042   004B36  0E80               	movlw	128
 12043   004B38  EC0D  F02A         	call	_LCD_Send
 12044                           
 12045                           ;lcd.c: 31:     LCD_Send(0x39);
 12046   004B3C  0E39               	movlw	57
 12047   004B3E  EC0D  F02A         	call	_LCD_Send
 12048                           
 12049                           ;lcd.c: 32:     LCD_Send(0x80);
 12050   004B42  0E80               	movlw	128
 12051   004B44  EC0D  F02A         	call	_LCD_Send
 12052                           
 12053                           ;lcd.c: 33:     LCD_Send(0x17);
 12054   004B48  0E17               	movlw	23
 12055   004B4A  EC0D  F02A         	call	_LCD_Send
 12056                           
 12057                           ;lcd.c: 34:     LCD_Send(0x80);
 12058   004B4E  0E80               	movlw	128
 12059   004B50  EC0D  F02A         	call	_LCD_Send
 12060                           
 12061                           ;lcd.c: 35:     LCD_Send(0x7A);
 12062   004B54  0E7A               	movlw	122
 12063   004B56  EC0D  F02A         	call	_LCD_Send
 12064                           
 12065                           ;lcd.c: 36:     LCD_Send(0x80);
 12066   004B5A  0E80               	movlw	128
 12067   004B5C  EC0D  F02A         	call	_LCD_Send
 12068                           
 12069                           ;lcd.c: 37:     LCD_Send(0x5E);
 12070   004B60  0E5E               	movlw	94
 12071   004B62  EC0D  F02A         	call	_LCD_Send
 12072                           
 12073                           ;lcd.c: 38:     LCD_Send(0x80);
 12074   004B66  0E80               	movlw	128
 12075   004B68  EC0D  F02A         	call	_LCD_Send
 12076                           
 12077                           ;lcd.c: 39:     LCD_Send(0x6B);
 12078   004B6C  0E6B               	movlw	107
 12079   004B6E  EC0D  F02A         	call	_LCD_Send
 12080                           
 12081                           ;lcd.c: 40:     LCD_Send(0x80);
 12082   004B72  0E80               	movlw	128
 12083   004B74  EC0D  F02A         	call	_LCD_Send
 12084                           
 12085                           ;lcd.c: 41:     LCD_Send(0x0C);
 12086   004B78  0E0C               	movlw	12
 12087   004B7A  EC0D  F02A         	call	_LCD_Send
 12088                           
 12089                           ;lcd.c: 42:     LCD_Send(0x80);
 12090   004B7E  0E80               	movlw	128
 12091   004B80  EC0D  F02A         	call	_LCD_Send
 12092                           
 12093                           ;lcd.c: 43:     LCD_Send(0x01);
 12094   004B84  0E01               	movlw	1
 12095   004B86  EC0D  F02A         	call	_LCD_Send
 12096                           
 12097                           ;lcd.c: 44:     LCD_Send(0x80);
 12098   004B8A  0E80               	movlw	128
 12099   004B8C  EC0D  F02A         	call	_LCD_Send
 12100                           
 12101                           ;lcd.c: 45:     LCD_Send(0x06);
 12102   004B90  0E06               	movlw	6
 12103   004B92  EC0D  F02A         	call	_LCD_Send
 12104                           
 12105                           ;lcd.c: 46:     LCD_Send(0x80);
 12106   004B96  0E80               	movlw	128
 12107   004B98  EC0D  F02A         	call	_LCD_Send
 12108                           
 12109                           ;lcd.c: 47:     LCD_Send(0x02);
 12110   004B9C  0E02               	movlw	2
 12111   004B9E  EC0D  F02A         	call	_LCD_Send
 12112   004BA2                     
 12113                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 12114   004BA2  846B               	bsf	107,2,c	;volatile
 12115   004BA4                     l102:
 12116   004BA4  B46B               	btfsc	107,2,c	;volatile
 12117   004BA6  EFD7  F025         	goto	u8511
 12118   004BAA  EFD9  F025         	goto	u8510
 12119   004BAE                     u8511:
 12120   004BAE  EFD2  F025         	goto	l102
 12121   004BB2                     u8510:
 12122   004BB2                     
 12123                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 12124   004BB2  0E34               	movlw	52
 12125   004BB4  6E04               	movwf	??_LCD_Init^0,c
 12126   004BB6  0EF2               	movlw	242
 12127   004BB8                     u8967:
 12128   004BB8  2EE8               	decfsz	wreg,f,c
 12129   004BBA  D7FE               	bra	u8967
 12130   004BBC  2E04               	decfsz	??_LCD_Init^0,f,c
 12131   004BBE  D7FC               	bra	u8967
 12132   004BC0  0012               	return		;funcret
 12133   004BC2                     __end_of_LCD_Init:
 12134                           	callstack 0
 12135                           
 12136 ;; *************** function _LCD_Send *****************
 12137 ;; Defined at:
 12138 ;;		line 85 in file "lcd.c"
 12139 ;; Parameters:    Size  Location     Type
 12140 ;;  data            1    wreg     unsigned char 
 12141 ;; Auto vars:     Size  Location     Type
 12142 ;;  data            1    2[COMRAM] unsigned char 
 12143 ;; Return value:  Size  Location     Type
 12144 ;;                  1    wreg      void 
 12145 ;; Registers used:
 12146 ;;		wreg
 12147 ;; Tracked objects:
 12148 ;;		On entry : 0/0
 12149 ;;		On exit  : 0/0
 12150 ;;		Unchanged: 0/0
 12151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12156 ;;Total ram usage:        1 bytes
 12157 ;; Hardware stack levels used: 1
 12158 ;; Hardware stack levels required when called: 1
 12159 ;; This function calls:
 12160 ;;		Nothing
 12161 ;; This function is called by:
 12162 ;;		_LCD_Init
 12163 ;;		_LCD_ShowString
 12164 ;;		_LCD_Clear
 12165 ;; This function uses a non-reentrant model
 12166 ;;
 12167                           
 12168                           	psect	text50
 12169   00541A                     __ptext50:
 12170                           	callstack 0
 12171   00541A                     _LCD_Send:
 12172                           	callstack 27
 12173                           
 12174                           ;incstack = 0
 12175                           ;LCD_Send@data stored from wreg
 12176   00541A  6E03               	movwf	LCD_Send@data^0,c
 12177   00541C                     
 12178                           ;lcd.c: 87:     SSP2BUF = data;
 12179   00541C  C003  FF6F         	movff	LCD_Send@data,3951	;volatile
 12180   005420                     l122:
 12181   005420  B06D               	btfsc	109,0,c	;volatile
 12182   005422  EF15  F02A         	goto	u8131
 12183   005426  EF17  F02A         	goto	u8130
 12184   00542A                     u8131:
 12185   00542A  EF10  F02A         	goto	l122
 12186   00542E                     u8130:
 12187   00542E                     l125:
 12188   00542E  AEA4               	btfss	4004,7,c	;volatile
 12189   005430  EF1C  F02A         	goto	u8141
 12190   005434  EF1E  F02A         	goto	u8140
 12191   005438                     u8141:
 12192   005438  EF17  F02A         	goto	l125
 12193   00543C                     u8140:
 12194   00543C                     
 12195                           ;lcd.c: 90:     SSP2IF = 0;
 12196   00543C  9EA4               	bcf	4004,7,c	;volatile
 12197   00543E  0012               	return		;funcret
 12198   005440                     __end_of_LCD_Send:
 12199                           	callstack 0
 12200                           
 12201 ;; *************** function _ISR *****************
 12202 ;; Defined at:
 12203 ;;		line 11 in file "interrupt.c"
 12204 ;; Parameters:    Size  Location     Type
 12205 ;;		None
 12206 ;; Auto vars:     Size  Location     Type
 12207 ;;		None
 12208 ;; Return value:  Size  Location     Type
 12209 ;;                  1    wreg      void 
 12210 ;; Registers used:
 12211 ;;		wreg, status,2
 12212 ;; Tracked objects:
 12213 ;;		On entry : 0/0
 12214 ;;		On exit  : 0/0
 12215 ;;		Unchanged: 0/0
 12216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12219 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12220 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12221 ;;Total ram usage:        2 bytes
 12222 ;; Hardware stack levels used: 1
 12223 ;; This function calls:
 12224 ;;		Nothing
 12225 ;; This function is called by:
 12226 ;;		Interrupt level 2
 12227 ;; This function uses a non-reentrant model
 12228 ;;
 12229                           
 12230                           	psect	intcode
 12231   000008                     __pintcode:
 12232                           	callstack 0
 12233   000008                     _ISR:
 12234                           	callstack 21
 12235                           
 12236                           ;incstack = 0
 12237   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12238   00000A                     
 12239                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 12240   00000A  A09D               	btfss	3997,0,c	;volatile
 12241   00000C  EF0A  F000         	goto	i2u591_41
 12242   000010  EF0C  F000         	goto	i2u591_40
 12243   000014                     i2u591_41:
 12244   000014  EF45  F000         	goto	i2l343
 12245   000018                     i2u591_40:
 12246   000018  A09E               	btfss	3998,0,c	;volatile
 12247   00001A  EF11  F000         	goto	i2u592_41
 12248   00001E  EF13  F000         	goto	i2u592_40
 12249   000022                     i2u592_41:
 12250   000022  EF45  F000         	goto	i2l343
 12251   000026                     i2u592_40:
 12252   000026  0101               	movlb	1	; () banked
 12253   000028  5121               	movf	_GPIOIE& (0+255),w,b
 12254   00002A  B4D8               	btfsc	status,2,c
 12255   00002C  EF1A  F000         	goto	i2u593_41
 12256   000030  EF1C  F000         	goto	i2u593_40
 12257   000034                     i2u593_41:
 12258   000034  EF45  F000         	goto	i2l343
 12259   000038                     i2u593_40:
 12260   000038                     
 12261                           ; BSR set to: 1
 12262                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 12263   000038  A480               	btfss	128,2,c	;volatile
 12264   00003A  EF21  F000         	goto	i2u594_41
 12265   00003E  EF23  F000         	goto	i2u594_40
 12266   000042                     i2u594_41:
 12267   000042  EF40  F000         	goto	i2l338
 12268   000046                     i2u594_40:
 12269   000046                     
 12270                           ; BSR set to: 1
 12271                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 12272   000046  0E03               	movlw	3
 12273   000048  6E02               	movwf	(??_ISR+1)^0,c
 12274   00004A  0E08               	movlw	8
 12275   00004C  6E01               	movwf	??_ISR^0,c
 12276   00004E  0E77               	movlw	119
 12277   000050                     i2u897_47:
 12278   000050  2EE8               	decfsz	wreg,f,c
 12279   000052  D7FE               	bra	i2u897_47
 12280   000054  2E01               	decfsz	??_ISR^0,f,c
 12281   000056  D7FC               	bra	i2u897_47
 12282   000058  2E02               	decfsz	(??_ISR+1)^0,f,c
 12283   00005A  D7FA               	bra	i2u897_47
 12284   00005C  0000               	nop	
 12285   00005E                     
 12286                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 12287   00005E  A480               	btfss	128,2,c	;volatile
 12288   000060  EF34  F000         	goto	i2u595_41
 12289   000064  EF36  F000         	goto	i2u595_40
 12290   000068                     i2u595_41:
 12291   000068  EF40  F000         	goto	i2l338
 12292   00006C                     i2u595_40:
 12293   00006C                     i2l340:
 12294   00006C  B480               	btfsc	128,2,c	;volatile
 12295   00006E  EF3B  F000         	goto	i2u596_41
 12296   000072  EF3D  F000         	goto	i2u596_40
 12297   000076                     i2u596_41:
 12298   000076  EF36  F000         	goto	i2l340
 12299   00007A                     i2u596_40:
 12300   00007A                     
 12301                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 12302   00007A  0E00               	movlw	0
 12303   00007C  0100               	movlb	0	; () banked
 12304   00007E  6FFF               	movwf	_keepStateGPIO& (0+255),b
 12305   000080                     i2l338:
 12306                           
 12307                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 12308   000080  0E9E               	movlw	158
 12309   000082  6ECF               	movwf	207,c	;volatile
 12310   000084  0E58               	movlw	88
 12311   000086  6ECE               	movwf	206,c	;volatile
 12312   000088                     
 12313                           ;interrupt.c: 23:         TMR1IF = 0;
 12314   000088  909E               	bcf	3998,0,c	;volatile
 12315   00008A                     i2l343:
 12316   00008A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12317   00008C  0011               	retfie		f
 12318   00008E                     __end_of_ISR:
 12319                           	callstack 0
 12320                           
 12321                           	psect	rparam
 12322   000000                     
 12323                           	psect	temp
 12324   00005D                     btemp:
 12325                           	callstack 0
 12326   00005D                     	ds	1
 12327   000000                     int$flags	set	btemp
 12328   000000                     wtemp8	set	btemp+1
 12329   000000                     ttemp5	set	btemp+1
 12330   000000                     ttemp6	set	btemp+4
 12331   000000                     ttemp7	set	btemp+8
 12332                           
 12333                           	psect	config
 12334                           
 12335                           ; Padding undefined space
 12336   300000                     	org	3145728
 12337   300000  FF                 	db	255
 12338                           
 12339                           ;Config register CONFIG1H @ 0x300001
 12340                           ;	Oscillator Selection bits
 12341                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 12342                           ;	4X PLL Enable
 12343                           ;	PLLCFG = ON, Oscillator multiplied by 4
 12344                           ;	Primary clock enable bit
 12345                           ;	PRICLKEN = 0x1, unprogrammed default
 12346                           ;	Fail-Safe Clock Monitor Enable bit
 12347                           ;	FCMEN = 0x0, unprogrammed default
 12348                           ;	Internal/External Oscillator Switchover bit
 12349                           ;	IESO = 0x0, unprogrammed default
 12350   300001                     	org	3145729
 12351   300001  33                 	db	51
 12352                           
 12353                           ;Config register CONFIG2L @ 0x300002
 12354                           ;	unspecified, using default values
 12355                           ;	Power-up Timer Enable bit
 12356                           ;	PWRTEN = 0x1, unprogrammed default
 12357                           ;	Brown-out Reset Enable bits
 12358                           ;	BOREN = 0x3, unprogrammed default
 12359                           ;	Brown Out Reset Voltage bits
 12360                           ;	BORV = 0x3, unprogrammed default
 12361   300002                     	org	3145730
 12362   300002  1F                 	db	31
 12363                           
 12364                           ;Config register CONFIG2H @ 0x300003
 12365                           ;	Watchdog Timer Enable bits
 12366                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 12367                           ;	Watchdog Timer Postscale Select bits
 12368                           ;	WDTPS = 0xF, unprogrammed default
 12369   300003                     	org	3145731
 12370   300003  3C                 	db	60
 12371                           tosu	equ	0xFFF
 12372                           tosh	equ	0xFFE
 12373                           tosl	equ	0xFFD
 12374                           stkptr	equ	0xFFC
 12375                           pclatu	equ	0xFFB
 12376                           pclath	equ	0xFFA
 12377                           pcl	equ	0xFF9
 12378                           tblptru	equ	0xFF8
 12379                           tblptrh	equ	0xFF7
 12380                           tblptrl	equ	0xFF6
 12381                           tablat	equ	0xFF5
 12382                           prodh	equ	0xFF4
 12383                           prodl	equ	0xFF3
 12384                           indf0	equ	0xFEF
 12385                           postinc0	equ	0xFEE
 12386                           postdec0	equ	0xFED
 12387                           preinc0	equ	0xFEC
 12388                           plusw0	equ	0xFEB
 12389                           fsr0h	equ	0xFEA
 12390                           fsr0l	equ	0xFE9
 12391                           wreg	equ	0xFE8
 12392                           indf1	equ	0xFE7
 12393                           postinc1	equ	0xFE6
 12394                           postdec1	equ	0xFE5
 12395                           preinc1	equ	0xFE4
 12396                           plusw1	equ	0xFE3
 12397                           fsr1h	equ	0xFE2
 12398                           fsr1l	equ	0xFE1
 12399                           bsr	equ	0xFE0
 12400                           indf2	equ	0xFDF
 12401                           postinc2	equ	0xFDE
 12402                           postdec2	equ	0xFDD
 12403                           preinc2	equ	0xFDC
 12404                           plusw2	equ	0xFDB
 12405                           fsr2h	equ	0xFDA
 12406                           fsr2l	equ	0xFD9
 12407                           status	equ	0xFD8

Data Sizes:
    Strings     163
    Constant    64
    Data        32
    BSS         120
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160    156     160
    BANK1           256     45     191
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK0[17]), STR_1(CODE[17]), 
		 -> STR_2(CODE[17]), STR_3(CODE[17]), STR_4(CODE[17]), STR_5(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    moveDisplay$3505	PTR unsigned char  size(1) Largest target is 6
		 -> STR_10(CODE[4]), STR_11(CODE[4]), STR_12(CODE[5]), STR_13(CODE[6]), 
		 -> STR_14(CODE[1]), STR_7(CODE[5]), STR_8(CODE[5]), STR_9(CODE[4]), 

    moveDisplay@F6953	PTR unsigned char [8] size(1) Largest target is 6
		 -> STR_10(CODE[4]), STR_11(CODE[4]), STR_12(CODE[5]), STR_13(CODE[6]), 
		 -> STR_14(CODE[1]), STR_7(CODE[5]), STR_8(CODE[5]), STR_9(CODE[4]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(1) Largest target is 6
		 -> STR_10(CODE[4]), STR_11(CODE[4]), STR_12(CODE[5]), STR_13(CODE[6]), 
		 -> STR_14(CODE[1]), STR_7(CODE[5]), STR_8(CODE[5]), STR_9(CODE[4]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6965	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S2925$buffer	PTR unsigned char  size(2) Largest target is 0

    S2925$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_15(CODE[6]), STR_16(CODE[5]), STR_17(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK0[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_10(CODE[4]), STR_11(CODE[4]), 
		 -> STR_12(CODE[5]), STR_13(CODE[6]), STR_14(CODE[1]), STR_24(CODE[7]), 
		 -> STR_7(CODE[5]), STR_8(CODE[5]), STR_9(CODE[4]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 6
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_10(CODE[4]), STR_11(CODE[4]), 
		 -> STR_12(CODE[5]), STR_13(CODE[6]), STR_14(CODE[1]), STR_7(CODE[5]), 
		 -> STR_8(CODE[5]), STR_9(CODE[4]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_18(CODE[4]), STR_21(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 19
		 -> STR_15(CODE[6]), STR_16(CODE[5]), STR_17(CODE[19]), STR_6(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 19
		 -> STR_15(CODE[6]), STR_16(CODE[5]), STR_17(CODE[19]), STR_6(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_15(CODE[6]), STR_16(CODE[5]), STR_17(CODE[19]), STR_6(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _runDAC->___fltol
    ___sindf->___fladd
    ___rem_pio2f->___flsub
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___flsub
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___cosdf
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_runADC
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___rem_pio2f->___flneg
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  270013
                                            154 BANK0      2     2      0
                                             43 BANK1      2     2      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGPIO
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             33    33      0     501
                                              3 COMRAM    32    32      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0  142468
                                            102 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   67434
                                             60 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   15652
                                             82 COMRAM     4     0      4
                                              0 BANK0     28    28      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   27000
                                             28 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   15736
                                             82 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     3      3   54723
                                             98 BANK0      4     1      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0     130
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   68699
                                            122 BANK0     32    32      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     926
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         47    46      1   57152
                                            122 BANK0      4     3      1
                                              0 BANK1     43    43      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    15     11   55398
                                             98 BANK0     24    13     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   54528
                                             93 BANK0      5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     8      4   53728
                                             81 BANK0     12     8      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2110
                                             12 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1362
                                              8 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   40258
                                             28 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3     463
                                              2 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             66 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     877
                                             82 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    8147
                                             82 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    6862
                                             66 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     875
                                             24 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    7913
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             41 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    6863
                                             28 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4693
                                             19 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1428
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                              8 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2     946
                                              3 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      31
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              3 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      54        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2D      BF       7       74.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9C      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRlllllh     2E      0       0      51        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRhhllh      10      0       0      42        0.0%
BITBIGSFRlllllh     10      0       0      50        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRhll         7      0       0      46        0.0%
BITBIGSFRhhllll      6      0       0      44        0.0%
BITBIGSFRlllhl       6      0       0      48        0.0%
BITBIGSFRhlh         5      0       0      45        0.0%
BITBIGSFRllh         5      0       0      47        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlllh      1      0       0      43        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      49        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BB      53        0.0%
DATA                 0      0     1BB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Apr 28 19:19:36 2024

              ___fldiv@aexp 0042                ___fldiv@bexp 0041                ___fldiv@sign 003A  
                        _C0 102D                          _C1 1029                          _C2 1025  
                        _C3 1021                          l50 3A54                          l42 38E2  
                        l52 398A                          l47 3936                          _S1 100D  
                        _S2 1009                          _S3 1005                          _S4 1001  
                        l99 4B14                ___awdiv@sign 0008         ___wmul@multiplicand 0005  
                       l101 4B22                         l102 4BA4                         l110 4D62  
                       l112 4DA2                         l105 4BC0                         l122 5420  
                       l210 3634                         l202 359E                         l131 5358  
                       l115 4DF0                         l116 4DF2                         l108 4D54  
                       l125 542E                         l133 5366                         l213 52BA  
                       l134 537C                         l230 547E                         l302 549E  
                       l127 543C                         l119 4E00                         l215 52C8  
                       l128 543E                         l216 52CE                         l312 46A2  
                       l137 538A                         l233 5490                         l305 54E4  
                       l218 52DC                         l219 52E0                         l317 46B4  
                       l318 46CA                         l255 47DC                         l290 54D6  
                       l293 54C8                         l622 4D4E                         l374 407E  
                       l391 5418                         l199 359C                         l384 406A  
                       l376 3ED0                         l296 54BA                         l650 4F5A  
                       l635 4EB0                         l379 3F6A                         l299 54AC  
                       l388 4090                         l661 49E8                         l656 49A2  
                       l920 21BE                         l665 5354                         l921 2184  
                       l919 21D0                         l936 22EA                         l928 24A0  
                       l688 48E4                         l945 23BA                         l961 521C  
                       l946 23A8                         l973 33EA                         l975 324A  
                       l984 3290                         l986 3308                         l978 320E  
                       l987 32F6                         _GIE 7F97                         _ISR 0008  
                       _abs 53C0                         _pad 5002                ___awmod@sign 0008  
                       tosl 0FFD                         wreg 0FE8                  _TXSTA1bits 0FAC  
              ___flmul@aexp 001E                ___flmul@bexp 0023                ___flmul@sign 001D  
              ___flmul@temp 0028                ___flmul@prod 0024                        ?_ISR 0001  
              ___fltol@exp1 0061                        l1012 275C                        l1005 2566  
                      l1102 507E                        l1110 4422                        l1022 288C  
                      l1014 27D4                        l1111 4468                        l1015 27C2  
                      l1104 50A2                        l1009 28CA                        l1122 4566  
                      l1202 5000                        ?_abs 0009                        l1300 4C8A  
                      l1108 441A                        l1060 41DC                        l1133 1AD6  
                      l1053 4180                        l1046 40E8                        l1136 1470  
                      l1049 4244                        l1138 12B6                        l1218 2C8E  
                      l1402 53BE                        l1315 547A                        l1308 5260  
                      l1244 51D6                        l1069 52A2                        l1262 53F2  
                      l1254 4AE6                        l1166 18BA                        l1182 42EE  
                      l1334 1FE0                        l1271 3BDA                        l1408 531A  
                      l1282 50F8                        l1194 43EA                        l1259 53DA  
                      l1099 503C                        l1268 3C96                        l1189 43A0  
                      l1198 4FF8                        l5000 204E                        l1288 5148  
                      l1368 3E94                        l1384 2EB2                        l1385 3050  
                      l5010 2078                        l5002 2060                        l5100 224E  
                      l5012 2088                        l5020 20B2                        l5004 2062  
                      l1397 3866                        l5110 22BA                        l5102 2258  
                      l5030 20EA                        l5022 20C2                        l5014 2098  
                      l5006 2068                        l5200 306C                        l5112 22CA  
                      l5104 225E                        l5040 20FE                        l5032 20EE  
                      l5024 20D4                        l5016 20A8                        l5008 2076  
                      l6000 4246                        l5210 30A0                        l5202 306E  
                      l5130 234C                        l5122 2324                        l5106 2284  
                      l5114 22DA                        l5050 2112                        l5042 2102  
                      l5034 20F2                        l5026 20E2                        l5018 20AA  
                      l6010 42BA                        l6002 4260                        l5220 30D2  
                      l5204 307E                        l5212 30A8                        l5132 2354  
                      l5124 232E                        l5116 2300                        l5108 22B8  
                      l5140 2378                        l5060 2126                        l5052 2116  
                      l5044 2106                        l5036 20F6                        l5028 20E6  
                      l6020 4326                        l6012 42C8                        l6004 426C  
                      l6100 28F0                        l5302 3318                        l5310 3360  
                      l5230 3106                        l5222 30D4                        l5214 30B8  
                      l5206 308E                        l5150 23CA                        l5142 237C  
                      l5134 2358                        l5126 233C                        l5118 2310  
                      l5070 219E                        l5062 2150                        l5054 211A  
                      l5046 210A                        l5038 20FA                        l6022 432A  
                      l6014 42E6                        l6006 4278                        l6110 2912  
                      l6102 28F8                        l5320 33CA                        l5312 337A  
                      l5304 3324                        l5240 314C                        l5224 30E4  
                      l5232 310E                        l5216 30BE                        l5208 309E  
                      l5400 2662                        l5160 2430                        l5152 23D6  
                      l5144 238A                        l5136 2368                        l5128 233E  
                      l5080 21DE                        l5072 21A2                        l5064 216C  
                      l5056 211E                        l5048 210E                        l6040 4F64  
                      l6032 43B4                        l6024 434C                        l6008 427C  
                      l6120 2954                        l6112 291E                        l6104 2904  
                      l5322 33D8                        l5314 3390                        l5306 3332  
                      l5250 3174                        l5242 3150                        l5234 311E  
                      l5226 30F4                        l5218 30C4                        l5410 26E0  
                      l5402 2672                        l5170 2478                        l5162 2440  
                      l5154 23E4                        l5146 23A0                        l5138 236A  
                      l5090 2220                        l5082 21EE                        l5074 21B0  
                      l5066 217C                        l5058 2122                        l6042 4F86  
                      l6050 4FD2                        l6034 43C8                        l6026 4382  
                      l6018 4312                        l6202 2C42                        l6130 29AC  
                      l6122 2968                        l6106 2908                        l6300 4D9C  
                      l5500 4D20                        l5324 33DE                        l5316 33AA  
                      l5308 335C                        l5260 31C2                        l5236 3134  
                      l5228 3104                        l5420 275A                        l5412 2716  
                      l5404 268E                        l5340 24BE                        l5172 247A  
                      l5164 2460                        l5156 241E                        l5092 222E  
                      l5076 21B2                        l5068 2192                        l6044 4F8E  
                      l6036 43CC                        l6028 4386                        l6204 2C5A  
                      l6140 2A1C                        l6132 29C0                        l6124 2978  
                      l6116 2926                        l6108 2910                        l6060 410E  
                      l6052 4094                        l6222 541C                        l6310 4DDE  
                      l6302 4DA8                        l5510 4D46                        l5502 4D22  
                      l5182 521E                        l5326 33E0                        l5318 33C6  
                      l5270 320C                        l5262 31D2                        l5254 3188  
                      l5238 3144                        l5246 3164                        l5430 27BA  
                      l5422 276C                        l5414 2724                        l5406 269A  
                      l5350 2504                        l5342 24CE                        l5334 24A2  
                      l5174 2480                        l5166 2464                        l5158 2420  
                      l5094 223A                        l5086 2202                        l5078 21BC  
                      l5190 53F4                        l6046 4FAA                        l6038 4F5C  
                      l6150 2A64                        l6142 2A26                        l6134 29CC  
                      l6126 2982                        l6118 2944                        l6230 51CC  
                      l6070 4168                        l6054 40A4                        l6214 538C  
                      ?_pad 0014                        l6312 4DE0                        l5504 4D28  
                      l5520 4E1C                        l5184 522A                        l5280 325A  
                      l5272 3218                        l5264 31DA                        l5256 31A2  
                      l5248 3174                        l5440 2828                        l5424 277A  
                      l5416 2742                        l5408 26B6                        l5360 2530  
                      l5352 250A                        l5344 24DE                        l5336 24AE  
                      l5176 248E                        l5168 2472                        l5096 223E  
                      l5088 2212                        l5192 5410                        l6048 4FCA  
                      l6160 2AEA                        l6152 2A6C                        l6136 29E8  
                      l6128 29A4                        l6208 2C68                        l6224 5192  
                      l6080 41CC                        l6072 416A                        l6064 4122  
                      l6056 40B2                        l6320 52A6                        l6216 53AC  
                      l6314 5356                        l5506 4D2E                        l5530 4E50  
                      l5522 4E20                        l5514 4E02                        l5186 523C  
                      l5282 3270                        l5290 32A0                        l5274 3236  
                      l5266 31EA                        l5258 31B2                        l5450 2890  
                      l5434 27E4                        l5442 282C                        l5426 277E  
                      l5418 274C                        l5370 2586                        l5362 2540  
                      l5354 2510                        l5346 24EE                        l5338 24BC  
                      l5178 2490                        l5098 224C                        l5610 484A  
                      l5602 480A                        l6170 2B30                        l6154 2A74  
                      l6146 2A3E                        l6138 2A04                        l6226 519A  
                      l6090 4224                        l6082 41EA                        l6074 4176  
                      l6066 412A                        l6058 40F8                        l6322 52B4  
                      l6218 53AE                        l6250 2CE6                        l6242 2C90  
                      l6234 3636                        l6410 1EEE                        l6402 1EB4  
                      l6330 1AFE                        l6316 5368                        l6308 4DAC  
                      l5508 4D3E                        l5540 4E8A                        l5532 4E58  
                      l5524 4E2E                        l5516 4E06                        l5188 5240  
                      l5292 32AE                        l5284 3276                        l5276 3238  
                      l5268 31FE                        l5196 3052                        l5460 28BA  
                      l5452 28A0                        l5444 2846                        l5436 27F0  
                      l5428 278C                        l5380 25C6                        l5364 2550  
                      l5356 251E                        l5348 24F4                        l5620 487A  
                      l5612 4858                        l5604 4834                        l5700 3B10  
                      l6172 2B3A                        l6156 2A96                        l6164 2AF8  
                      l6148 2A42                        l6228 51B0                        l6092 4232  
                      l6084 41EC                        l6076 41B2                        l6068 4136  
                      l6324 52B6                        l6260 2E54                        l6252 2D0A  
                      l6244 2CB0                        l6412 1F12                        l6404 1ECA  
                      l6332 1B00                        l6318 537A                        l5470 4C8C  
                      l5534 4E66                        l5542 4E90                        l5526 4E36  
                      l5518 4E14                        l5294 32B2                        l5286 3280  
                      l5278 3248                        l5198 305E                        l5550 4EB2  
                      l5454 28AE                        l5446 285A                        l5438 27FE  
                      l5390 2610                        l5382 25D2                        l5374 259A  
                      l5366 2556                        l5358 2520                        l5630 48A4  
                      l5622 4884                        l5606 4836                        l5702 3B1E  
                      l5710 3BFE                        l6174 2B4C                        l6182 2B62  
                      l6166 2B08                        l6158 2AC0                        l6094 4234  
                      l6086 41F0                        l6078 41BE                        l6430 5460  
                      l6238 3C98                        l6270 2EE2                        l6262 2E64  
                      l6254 2D76                        l6246 2CC6                        l6422 1F86  
                      l6414 1F36                        l6406 1EDA                        l6350 1BF0  
                      l6334 1B1E                        l6342 1B70                        l6326 1AD8  
                      l6510 4592                        l6502 4568                        l5480 4CB8  
                      l5472 4C90                        l5544 4EA0                        l5536 4E7C  
                      l5528 4E48                        l5640 5002                        l5296 32C0  
                      l5288 328E                        l5560 4F52                        l5552 4EE0  
                      l5456 28B0                        l5448 2874                        l5392 261C  
                      l5384 25EA                        l5376 25A6                        l5368 2576  
                      l5464 51D8                        l5632 48B4                        l5608 4846  
                      l5712 3C3A                        l5800 1178                        l6192 2BF0  
                      l6176 2B52                        l6184 2B80                        l6440 5278  
                      l6088 4214                        l6432 5466                        l6280 303C  
                      l6272 2F4E                        l6264 2E96                        l6256 2D9C  
                      l6248 2CC8                        l6344 1B8E                        l6336 1B34  
                      l6328 1AE8                        l6600 342A                        l6520 45E4  
                      l6512 459A                        l6504 4586                        l6290 4D52  
                      l5490 4CE6                        l5482 4CC0                        l5474 4C9E  
                      l5546 4EA8                        l5538 4E84                        l5650 505C  
                      l5642 5012                        l5298 32EE                        l5562 4F58  
                      l5554 4EF0                        l5570 4924                        l5458 28B6  
                      l5394 262C                        l5386 25F6                        l5378 25B0  
                      l5466 51E8                        l5634 48C4                        l5618 4870  
                      l5714 3C4E                        l5706 3B8E                        l5730 512A  
                      l5722 50FA                        l5810 11BE                        l5802 117C  
                      l6194 2C06                        l6186 2BA0                        l6178 2B5A  
                      l6098 28CC                        l6442 5280                        l6274 2F74  
                      l6258 2DF4                        l6418 1F5E                        l6346 1BAC  
                      l6362 1C88                        l6338 1B48                        l6610 345C  
                      l6602 342C                        l6450 54BE                        l6530 464A  
                      l6514 45A4                        l6506 458E                        l6460 4AE8  
                      l6292 4D64                        l5492 4CEE                        l5484 4CC4  
                      l5476 4CA6                        l5652 5060                        l5644 5026  
                      l5740 443A                        l5556 4F1E                        l5580 4990  
                      l5572 4952                        l5396 2638                        l5388 2602  
                      l5636 48D4                        l5628 4898                        l5660 49EA  
                      l5716 3C76                        l5708 3BCA                        l5724 510E  
                      l5732 512E                        l5900 161E                        l5812 11C6  
                      l5804 11A2                        l5820 1204                        l6196 2C14  
                      l6188 2BC8                        l6444 5292                        l6436 5262  
                      l6276 2FCC                        l6268 2EBE                        l6428 1FC2  
                      l6364 1C98                        l6348 1BBC                        l6356 1C2C  
                      l6372 1D54                        l6620 350C                        l6612 3462  
                      l6604 342E                        l6452 54B0                        l6532 4666  
                      l6516 45B0                        l6508 4590                        l6470 4B24  
                      l6462 4AF6                        l6294 4D70                        l5494 4CFC  
                      l5486 4CCC                        l5478 4CAA                        l5654 508E  
                      l5646 5034                        l5750 4470                        l5742 4440  
                      l5734 43EC                        l5558 4F2E                        l5582 49E0  
                      l5574 4962                        l5566 48E6                        l5398 2648  
                      l5590 5334                        l5662 4A0A                        l5718 3C86  
                      l5726 511A                        l5910 16EA                        l5902 163C  
                      l5830 124E                        l5822 122A                        l5814 11DA  
                      l5806 11B4                        l6438 5270                        l6550 3EBC  
                      l6542 3E96                        l6278 3024                        l6374 1D72  
                      l6366 1CE4                        l6358 1C60                        l6630 35BC  
                      l6622 3572                        l6614 3474                        l6606 3430  
                      l6454 54A2                        l6534 467E                        l6526 45EC  
                      l6518 45C2                        l6702 39E8                        l6710 3A14  
                      l6472 4BA2                        l6464 4B02                        l6296 4D80  
                      l6288 4D52                        l5496 4D02                        l5488 4CDE  
                      l5656 53C0                        l5648 5048                        l5760 44BE  
                      l5752 447A                        l5744 4450                        l5736 440E  
                      l5584 49E6                        l5576 4970                        l5568 4914  
                      l5592 5344                        l5664 4A48                        l5672 4A88  
                      l5728 511E                        l5920 179A                        l5912 16FA  
                      l5904 1670                        l5840 1280                        l5824 123C  
                      l5816 11E4                        l5808 11B8                        l6480 46EA  
                      l6560 3F60                        l6552 3EC6                        l6544 3E9E  
                      l6376 1D90                        l6392 1E10                        l6368 1D2C  
                      l6640 35F2                        l6632 35CA                        l6616 3480  
                      l6608 344C                        l6448 54CC                        l6456 5494  
                      l6536 469E                        l6528 4646                        l6712 3A56  
                      l6704 3A0C                        l6474 4BB2                        l6466 4B04  
                      l6298 4D8A                        l5498 4D18                        l5658 53CE  
                      l4962 547E                        l4970 4BE6                        l5770 4530  
                      l5754 4480                        l5762 44DA                        l5746 445C  
                      l5738 442A                        l5578 4982                        l5674 4A9A  
                      l5666 4A70                        l5690 50C6                        l5682 52E2  
                      l5930 17FE                        l5922 17CE                        l5914 170A  
                      l5906 16A2                        l5850 133E                        l5826 1240  
                      l6482 46FC                        l6490 471A                        l6570 402A  
                      l6562 3F68                        l6554 3ECE                        l6546 3EAE  
                      l6394 1E20                        l6378 1DA0                        l6386 1DD8  
                      l6642 35F8                        l6634 35D0                        l6626 357E  
                      l6618 34E8                        l6650 3622                        l6458 54DA  
                      l6538 46C4                        l6714 3A68                        l6468 4B12  
                      l4964 548C                        l4972 4BF0                        l5772 4536  
                      l5764 44F4                        l5756 44B2                        l5748 4464  
                      l5588 531C                        l4980 1FE2                        l5596 47DE  
                      l5668 4A7C                        l5684 52EA                        l5940 18B0  
                      l5932 1804                        l5924 17E2                        l5916 173E  
                      l5908 16B8                        l5860 13FE                        l5852 1370  
                      l5844 12C6                        l5828 1246                        l5780 10EC  
                      l6484 4702                        l6492 473A                        l6476 46D0  
                      l6580 4078                        l6572 4036                        l6564 3F78  
                      l6556 3EDE                        l6548 3EB0                        l6396 1E58  
                      l6644 3606                        l6636 35DE                        l6628 35AC  
                      l6716 3A7A                        l6660 389C                        l6652 3868  
                      l4974 4C0E                        l4966 4BC2                        l5774 4546  
                      l5766 4506                        l5758 44B8                        l4990 201E  
                      l4982 1FEE                        l5598 47F6                        l5678 4ADE  
                      l5694 3A86                        l5686 50A4                        l5950 18F4  
                      l5942 18CC                        l5934 180C                        l5918 1794  
                      l5926 17E6                        l5870 1492                        l5854 13AE  
                      l5846 12CC                        l5838 1266                        l5790 113C  
                      l5782 10FC                        l6494 47BC                        l6486 4714  
                      l6478 46D4                        l6574 4044                        l6566 3F90  
                      l6558 3EF6                        l6398 1E8C                        l6646 360C  
                      l6638 35E4                        l6590 340C                        l6582 33EC  
                      l6670 38F0                        l6662 38AE                        l6654 388E  
                      l4976 4C44                        l4968 4BD4                        l5768 4520  
                      l4992 202E                        l4984 1FFC                        l5696 3AA6  
                      l5688 50B2                        l5952 18FC                        l5944 18DA  
                      l5960 191C                        l5936 1818                        l5928 17F6  
                      l5880 14CA                        l5872 149C                        l5856 13C2  
                      l5864 143E                        l5848 1300                        l5792 1144  
                      l5784 110A                        l6496 47CA                        l6576 405C  
                      l6568 3FFA                        l6648 3610                        l6592 340E  
                      l6584 3400                        l6680 3944                        l6664 38BC  
                      l6672 3902                        l6656 3892                        l4994 2030  
                      l4986 1FFE                        l5698 3AFC                        l5970 19A2  
                      l5962 192E                        l5954 190C                        l5946 18EA  
                      l5938 1890                        l5890 1514                        l5882 14E2  
                      l5874 14A4                        l5866 1478                        l5858 13F6  
                      l5794 1154                        l5786 110E                        l5778 10E6  
                      l6498 47D8                        l6594 3410                        l6586 3408  
                      l6690 399C                        l6674 3910                        l6682 3956  
                      l6666 38D4                        l6658 3898                        l4988 200E  
                      l4996 2038                        l5980 1A1C                        l5972 19D6  
                      l5964 1940                        l5956 1910                        l5948 18EE  
                      l5892 1528                        l5884 14F4                        l5876 14AA  
                      l5868 1486                        l5796 1164                        l5788 1132  
                      l6596 3422                        l6588 340A                        l6692 39C0  
                      l6684 3964                        l6676 3928                        l4998 2048  
                      l5990 1A88                        l5982 1A24                        l5974 19DE  
                      l5966 1944                        l5958 1916                        l5894 158C  
                      l5878 14BC                        l5886 14FC                        l5798 1170  
                      l6598 3428                        l6694 39C4                        l6686 397C  
                      l5992 1A98                        l5984 1A32                        l5968 194A  
                      l5976 19E2                        l5896 15E4                        l5888 1504  
                      l6696 39CE                        l5994 1AAE                        l5986 1A62  
                      l5978 1A00                        l5898 1618                        l6698 39E0  
                      l5996 1AB6                        l5988 1A70                        STR_1 1065  
                      STR_2 1054                        STR_3 1076                        STR_4 1087  
                      STR_5 1098                        STR_6 10CB                        STR_7 10C1  
                      STR_8 10C6                        STR_9 10E0                        u6000 4C0E  
                      u6001 4C0A                        u6010 4C44                        u6011 4C40  
                      u6100 20E2                        u6020 1FFC                        u6101 20DE  
                      u6021 1FF8                        u6110 2150                        u6030 200E  
                      u6111 214C                        u6031 200A                        u7000 4952  
                      u6200 222E                        u6120 2168                        u6040 201E  
                      u7001 494E                        u6201 222A                        u6121 2162  
                      u6041 201A                        u7010 4970                        u6210 224C  
                      u6130 216A                        u6050 2060                        u7011 496C  
                      u6211 2248                        u6051 205C                        _PEIE 7F96  
                      u7020 4990                        u6300 238A                        u6220 2284  
                      u6140 2192                        u6060 2076                        u7100 48B4  
                      u7021 498C                        u6301 2386                        u6221 2280  
                      u6141 218E                        u6061 2072                        u7101 48B0  
                      u7030 49E0                        u6310 23A0                        u6230 22CA  
                      u6150 21B0                        u6070 2088                        u7110 48C4  
                      u7031 49DC                        u6311 239C                        u6231 22C6  
                      u6151 21AC                        u6071 2084                        u7111 48C0  
                      u7120 5012                        u7040 5334                        u6400 248E  
                      u6320 23B6                        u6240 2300                        u6160 21D0  
                      u6080 2098                        u7200 4A9A                        u8000 4232  
                      u7121 500E                        u7041 5330                        u6401 248A  
                      u6321 23B2                        u6241 22FC                        u6161 21CC  
                      u6081 2094                        u7201 4A96                        u8001 422E  
                      u6410 5260                        u7130 5034                        u6330 23CA  
                      u6250 2310                        u6170 21DE                        u6090 20D4  
                      u7050 47F6                        u8010 28F0                        u6411 525C  
                      u7131 5030                        u6331 23C6                        u6251 230C  
                      u6171 21DA                        u6091 20D0                        u7051 47F2  
                      u8011 28EC                        u7140 507E                        u6500 31EA  
                      u6420 306C                        u6340 23E4                        u6260 233C  
                      u6180 21EE                        u7060 482A                        u7220 4AD4  
                      u7300 3B8A                        u8100 2AEA                        u8020 2954  
                      u7141 507A                        u6501 31E6                        u6421 3068  
                      u6341 23E0                        u6261 2338                        u6181 21EA  
                      u7221 4ACE                        u7301 3B86                        u8101 2AE6  
                      u8021 2950                        u7150 508E                        u6510 320C  
                      u6430 307E                        u6350 241E                        u6270 234C  
                      u6190 2220                        u7070 4858                        u7230 4AD6  
                      u7310 3BAE                        u8110 2B08                        u8030 2978  
                      u7151 508A                        u6511 3208                        u6431 307A  
                      u6351 241A                        u6271 2348                        u6191 221C  
                      u7071 4854                        u7215 4AAC                        u8111 2B04  
                      u8031 2974                        u7160 53CE                        u7400 443A  
                      u6600 3318                        u6520 3236                        u6440 308E  
                      u6360 2430                        u6280 2368                        u7080 486C  
                      u7320 3BCA                        u7240 531A                        u8120 2B9C  
                      u8040 29A4                        u8200 304C                        u7161 53CA  
                      u7401 4436                        u6601 3314                        u6521 3232  
                      u6441 308A                        u6361 242C                        u6281 2364  
                      u7081 4868                        u7065 4820                        u7321 3BC6  
                      u7241 5316                        u8121 2B98                        u8041 29A0  
                      u8201 3048                        u8130 542E                        u8210 4D62  
                      u7410 4450                        u6610 3332                        u6530 325A  
                      u6450 30D2                        u6370 2440                        u6290 2378  
                      u7090 4894                        u7170 4A2A                        u7330 3C1E  
                      u7250 50B2                        u8050 29E8                        u8131 542A  
                      u8211 4D5E                        u7411 444C                        u6611 332E  
                      u6531 3256                        u6451 30CE                        u6371 243C  
                      u6291 2374                        u7091 4890                        u7315 3BA4  
                      u7251 50AE                        u8051 29E4                        u8140 543C  
                      u8220 4D80                        u7420 44F4                        u6620 337A  
                      u6540 3270                        u6460 30E4                        u6700 2540  
                      u6380 2460                        u7180 4A48                        u7340 3C3A  
                      u7260 3ACE                        u7500 11B4                        u8060 2A04  
                      u8300 52DC                        u8141 5438                        u8221 4D7C  
                      u7421 44F0                        u6621 3376                        u6541 326C  
                      u6461 30E0                        u6701 253C                        u6381 245C  
                      u7181 4A44                        u7341 3C36                        u7501 11B0  
                      u8061 2A00                        u8301 52D8                        u8230 4D9C  
                      u7430 4506                        u6630 33AA                        u6550 328E  
                      u6470 30F4                        u6710 2576                        u6390 2472  
                      u7190 4A70                        u7350 3C76                        u7270 3AFC  
                      u7510 122A                        u8070 2A64                        u8150 51CC  
                      u8310 1AFA                        u8231 4D98                        u7431 4502  
                      u6631 33A6                        u6551 328A                        u6471 30F0  
                      u6711 2572                        u6391 246E                        u7191 4A6C  
                      u7175 4A20                        u7351 3C72                        u7335 3C14  
                      u7271 3AF8                        u7511 1226                        u8071 2A60  
                      u8151 51C8                        u8311 1AF4                        u8240 4DDA  
                      u7440 4520                        u6640 33D8                        u6560 32AE  
                      u6480 3134                        u6800 27FE                        u6720 2586  
                      u7280 3B1E                        u7360 5148                        u7600 14BC  
                      u7520 123C                        u8080 2A96                        u8160 2CC2  
                      u8400 1D90                        u8320 1AFC                        u7441 451C  
                      u6641 33D4                        u6561 32AA                        u6481 3130  
                      u6801 27FA                        u6721 2582                        u7281 3B1A  
                      u7265 3AC4                        u7361 5144                        u7601 14B8  
                      u7521 1238                        u8081 2A92                        u8161 2CBC  
                      u8401 1D8C                        u8250 4DF0                        u7450 4530  
                      u7370 43FC                        u6570 32C0                        u6490 3174  
                      u6810 2846                        u6730 2700                        u6650 24BC  
                      u7610 14CA                        u7530 12B2                        u8090 2AC0  
                      u8170 2CC4                        u8410 1DA0                        u8330 1B1E  
                      u8251 4DEC                        u7451 452C                        u7371 43F6  
                      u6571 32BC                        u6491 3170                        u6811 2842  
                      u6651 24B8                        u7611 14C6                        u7531 12AE  
                      u8091 2ABC                        u8411 1D9C                        u8331 1B1A  
                      u8500 4B22                        u8260 4E00                        u6900 4E14  
                      u7380 43FE                        u6580 32EE                        u6820 2874  
                      u6740 275A                        u6660 24CE                        u7700 18CC  
                      u7620 14F4                        u7540 133E                        u7460 110A  
                      u8180 2CE6                        u8420 1E20                        u8340 1B34  
                      u8501 4B1E                        u8261 4DFC                        u6901 4E10  
                      u6581 32EA                        u6821 2870                        u6741 2756  
                      u6661 24CA                        u7701 18C8                        u7621 14F0  
                      u7541 133A                        u7461 1106                        u8181 2CE2  
                      u8421 1E1C                        u8341 1B30                        u8510 4BB2  
                      u8270 5366                        u6910 4E2E                        u7390 440E  
                      u6590 3304                        u6830 28AE                        u6750 277A  
                      u6670 24DE                        u7710 18DA                        u7630 163C  
                      u7550 1370                        u7470 1154                        u8190 2E64  
                      u8430 1ECA                        u8350 1B8E                        u8511 4BAE  
                      u8271 5362                        u8247 4DD0                        u6911 4E2A  
                      u7391 440A                        u6591 3300                        u6831 28AA  
                      u6751 2776                        u6735 26F6                        u6671 24DA  
                      u7295 3B32                        u7711 18D6                        u7631 1638  
                      u7551 136C                        u7471 1150                        u8191 2E60  
                      u8431 1EC6                        u8351 1B8A                        u8280 538A  
                      u6840 4C9E                        u6920 4E48                        u6760 278C  
                      u6680 251E                        u7296 3B3C                        u7720 192E  
                      u7640 16A2                        u7560 13AE                        u7480 1164  
                      u7800 42BA                        u8360 1BAC                        u8600 4644  
                      u8281 5386                        u6841 4C9A                        u6921 4E44  
                      u6761 2788                        u6681 251A                        u7297 3B4C  
                      u7721 192A                        u7641 169E                        u7561 13AA  
                      u7481 1160                        u7801 42B6                        u8521 46DE  
                      u8361 1BA8                        u6850 4CB8                        u6930 4E66  
                      u5970 548C                        u6770 27BA                        u6690 2530  
                      u7730 1A00                        u7650 16EA                        u7570 143A  
                      u7490 11A2                        u7810 42C8                        u8530 46FC  
                      u8290 52C8                        u8370 1BBC                        u8610 4666  
                      u6851 4CB4                        u6931 4E62                        u5971 5488  
                      u6771 27B6                        u6691 252C                        u7731 19FC  
                      u7651 16E6                        u7571 1436                        u7491 119E  
                      u7811 42C4                        u8531 46F8                        u8291 52C4  
                      u8371 1BB8                        u8611 4662                        u6860 4CDE  
                      u6940 4E7C                        u5980 4BD4                        u6780 27D0  
                      u7740 1A1C                        u7660 16FA                        u7580 1470  
                      u7900 4FF8                        u7820 42E6                        u8540 4714  
                      u8700 4090                        u8380 1C98                        u8620 469E  
                      u6861 4CDA                        u6941 4E78                        u5981 4BD0  
                      u6781 27CC                        u7741 1A18                        u7661 16F6  
                      u7581 146C                        u7901 4FF4                        u7821 42E2  
                      u8541 4710                        u8701 408C                        u8381 1C94  
                      u8445 54D4                        u8621 469A                        u6870 4CFC  
                      u6950 4EA0                        u5990 4BE6                        u6790 27E4  
                      u7750 1A82                        u7670 1794                        u7590 1486  
                      u7830 430E                        u7910 40A4                        u8390 1D72  
                      u8710 345C                        u8446 54D6                        u8630 46B4  
                      u6871 4CF8                        u6951 4E9C                        u5991 4BE2  
                      u6791 27E0                        u7751 1A7C                        u7671 1790  
                      u7591 1482                        u7831 430A                        u7911 40A0  
                      u8391 1D6E                        u8711 3458                        u8455 54C6  
                      u8631 46B0                        u8551 45BA                        u6880 4D18  
                      u6960 4EE0                        u7760 1A84                        u7680 17E2  
                      u7840 4348                        u7920 40B2                        u8720 3474  
                      u8456 54C8                        u8800 38E2                        u6881 4D14  
                      u6961 4EDC                        u7681 17DE                        u7841 4344  
                      u7921 40AE                        u8641 3EB6                        u8721 3470  
                      u8465 54B8                        u8561 45CC                        u8801 38DE  
                      u6890 4D3E                        u6970 4F1E                        u7770 1A98  
                      u7690 1890                        u7850 436E                        u7930 410E  
                      u8650 3EDE                        u8730 35AC                        u8466 54BA  
                      u8810 38F0                        u6891 4D3A                        u6971 4F1A  
                      u7771 1A94                        u7691 188C                        u7931 410A  
                      u8651 3EDA                        u8731 35A8                        u8475 54AA  
                      u8811 38EC                        u6980 4F52                        u7860 43A0  
                      u7780 4260                        u7940 4164                        u8660 3F78  
                      u8740 35CA                        u8476 54AC                        u8820 3910  
                      u6981 4F4E                        u7861 439C                        u7781 425C  
                      u7941 4160                        u8661 3F74                        u8741 35C6  
                      u8485 549C                        u8821 390C                        u6990 4914  
                      u7870 43B0                        u7790 42AA                        u7950 41AE  
                      u8670 4044                        u8750 35DE                        u8486 549E  
                      u8590 4642                        u8830 3936                        u6991 4910  
                      u7871 43AC                        u7951 41AA                        u8671 4040  
                      u8751 35DA                        u8495 54E2                        u8591 463C  
                      u8831 3932                        u7880 43EA                        u7960 41CC  
                      u8680 406A                        u8760 35F2                        u8496 54E4  
                      u8584 462C                        u8840 3944                        u7881 43E6  
                      u7857 4364                        u7961 41C8                        u8681 4066  
                      u8761 35EE                        u8585 4628                        u8841 3940  
                      u7890 4F86                        u7970 41DC                        u8690 4078  
                      u8770 3606                        u8578 45FE                        u8850 3964  
                      u7891 4F82                        u7971 41D8                        u8691 4074  
                      u8771 3602                        u8579 4646                        u8851 3960  
                      u8907 391C                        u7980 41EA                        u8780 3634  
                      u8860 398A                        u7797 42A0                        u7981 41E6  
                      u8781 3630                        u8861 3986                        u8917 3970  
                      u7990 4224                        u8870 3998                        u8790 38BC  
                      u7991 4220                        u8927 4670                        u8871 3994  
                      u8791 38B8                        u8880 3A68                        u8937 3618  
                      u8881 3A64                        u8947 4050                        u8957 4B0A  
                      u8967 4BB8                        u8897 38C8                        _TMR1 0FCE  
                      abs@a 0009                        _dbuf 0122                        _half 101D  
                      _labs 50A4                        _main 3868                        _dtoa 43EC  
                      _prec 005B                        _sinf 1AD8                        pad@i 001B  
                      pad@p 0018                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf1 0FE7                        indf2 0FDF                        fsr1l 0FE1  
                      fsr2l 0FD9                        _stoa 4246                        btemp 005D  
             ___fpclassifyf 49EA                        prodh 0FF4                        prodl 0FF3  
                      start 008E             ___fldiv@new_exp 003B                ___param_bank 0000  
                     ??_ISR 0001              _LCD_ShowString 4D50                       ??_abs 000B  
                     ??_pad 001A            __end_of_LCD_Init 4BC2            __end_of_LCD_Send 5440  
             ___fltol@sign1 0060                       ?_labs 0003             __end_of___fladd 24A2  
                     ?_main 0001                       ?_dtoa 001D             __end_of___fldiv 33EC  
           __end_of___awdiv 4D50             __end_of___cosdf 3E96             __end_of___flneg 5356  
                     STR_10 10DC                       STR_11 10D8                       STR_12 10BC  
                     STR_21 10D4                       STR_13 10B0                       STR_14 10CF  
                     STR_15 10B6                       STR_16 10B7                       STR_24 10A9  
                     STR_17 1041                       STR_18 10D0             __end_of___awmod 4EB2  
                     ?_sinf 009C             __end_of___flmul 28CC             __end_of___flsub 521E  
           __end_of___fltol 48E6                       ?_stoa 000D             ___awdiv@divisor 0005  
           __end_of___sindf 3868                       i2l340 006C                       i2l343 008A  
                     i2l338 0080                ___sindf$3511 0068                ___sindf$3512 006C  
              ___sindf$3513 0070             ___awdiv@counter 0007                vfpfcnvrt@fmt 00B3  
                     _TX1IF 7CF4             __end_of_pio2_1t 1015                       _fabsf 538C  
                     _flags 00FE         read_prec_or_width@c 000B         read_prec_or_width@n 000C  
                     _fputc 4BC2                       _fputs 521E                       labs@a 0003  
                     pad@fp 0014                       _width 00FC             __end_of_invpio2 101D  
                     _putch 547C                       dtoa@d 001F                       dtoa@i 0028  
                     dtoa@p 0025                       dtoa@s 0027                       dtoa@w 0023  
      __end_of_LED1_Control 54D8             __end_of_runGPIO 46CC                       pclath 0FFA  
                     tablat 0FF5        __end_of_LED2_Control 54CA                       sinf@n 00A8  
                     sinf@x 009C                       sinf@y 00AE                       plusw1 0FE3  
                     plusw2 0FDB                       stoa@l 0019                       stoa@p 0013  
                     stoa@s 000F                       stoa@w 0015                       ttemp5 005E  
                     ttemp6 0061                       ttemp7 0065        __end_of_LED3_Control 54BC  
                     status 0FD8                       wtemp8 005E             __end_of_sprintf 52A4  
            ?___fpclassifyf 0003        __end_of_LED4_Control 54AE        __end_of_LED5_Control 54A0  
      __end_of_LED6_Control 54E6             __initialization 514A      __end_of_LCD_ShowString 4E02  
              __end_of_half 1021                __end_of_labs 50FA                __end_of_main 3A86  
              __end_of_dtoa 4568                __end_of_sinf 1FE2                __end_of_stoa 43EC  
              LCD_Send@data 0003                      ??_labs 0007                      ??_main 00FA  
                    ??_dtoa 0021                      ??_sinf 005B                      ??_stoa 0011  
         __end_of_LCD_Clear 538C               __activetblptr 0002  __end_of_read_prec_or_width 5002  
              ?_moveDisplay 00DA                      ?_fabsf 0003                      ?_fputc 0004  
                    ?_fputs 000D                      _ADRESH 0FC4                      _ADRESL 0FC3  
          ___awdiv@dividend 0003                      ?_putch 0001                      _GODONE 7E11  
                    _GPIOIE 0121                      i2l4950 0038                      i2l4960 0088  
                    i2l4952 0046                      i2l4944 000A                      i2l4954 005E  
                    i2l4946 0018                      i2l4948 0026                      i2l4958 007A  
             ___rem_pio2f@n 0098               ___rem_pio2f@t 0094               ___rem_pio2f@x 007C  
             ___rem_pio2f@y 0080               vfpfcnvrt@done 00BB                      _SPBRG1 0FAF  
                    _TMR1IE 7CE8                      _TMR1IF 7CF0                      _TMR1ON 7E68  
                    _SSP1IF 7CF3                      _SSP2IF 7D27                      _TXREG1 0FAD  
          __end_of___xxtofl 4246                vfprintf@cfmt 00C1             ?_LCD_ShowString 0004  
                    _s1pio2 103D                      _s2pio2 1039                      _s3pio2 1035  
                    _s4pio2 1031                      ___flge 48E6                      ___fleq 4EB2  
                 ??___fladd 004B                      ___wmul 53F4                   ??___fldiv 0032  
                 ??___awdiv 0007                   ??___cosdf 0057                   ??___flneg 0057  
                 ??___awmod 0007                   ??___flmul 0019                   ??___flsub 005B  
                 ??___fltol 0057                      _efgtoa 10E6                   ??___sindf 0057  
                    _pio2_1 1015                      _floorf 3A86                      fabsf@u 0007  
                    fabsf@x 0003                      _memcpy 50FA        read_prec_or_width@ap 000A  
                    clear_0 5170            ___awdiv@quotient 0009                      _runADC 3E96  
                    _runDAC 33EC             ___awmod@divisor 0005                      isa$std 0001  
           ___awmod@counter 0007                      _printf 5460                      pad@buf 0016  
                    dtoa@fp 001D                      _strcpy 52E2                      fputc@c 0004  
                    fputs@c 0011                      fputs@i 0012                      fputs@s 000D  
           ___fpclassifyf@e 000B             ___fpclassifyf@u 000D             ___fpclassifyf@x 0003  
              __mediumconst 0000                      sinf@ux 00B2                   ??_runGPIO 0004  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
         __end_of_SPI_write 52E2                      stoa@cp 0017                      stoa@fp 000D  
          __end_of_vfprintf 51D8                   ??_sprintf 005B                  ___flge@ff1 002A  
                ___flge@ff2 002E             ??___fpclassifyf 0007                ___xxtofl@arg 000D  
              ___xxtofl@exp 000C                ___xxtofl@val 0003                  ___fleq@ff1 0003  
                ___fleq@ff2 0007                  __accesstop 0060     __end_of__initialization 5184  
                 ?_LCD_Init 0001                   ?_LCD_Send 0001                  ___flneg@f1 0078  
             ___rparam_used 0001                  ___fltol@f1 0053              __pcstackCOMRAM 0001  
         LED4_Control@state 0003                __pidataBANK1 5440               __end_of_fabsf 53C0  
             __end_of_fputc 4C8C               __end_of_fputs 5262               __end_of_putch 5492  
                __end_of_C0 1031                  __end_of_C1 102D                  __end_of_C2 1029  
                __end_of_C3 1025                  __end_of_S1 1011                  __end_of_S2 100D  
                __end_of_S3 1009                  __end_of_S4 1005                     ??_fabsf 0007  
                   ??_fputc 0008                     ??_fputs 0011                     ??_putch 0003  
                __pbssBANK0 00FC                  __pbssBANK1 0100                  ??_LCD_Init 0004  
                ??_LCD_Send 0003                 runADC@F6955 0100                SPI_write@LSB 0004  
              SPI_write@MSB 0003                     ?___flge 002A                     ?___fleq 0003  
                   ?___wmul 0003                     ?_efgtoa 007C               ??___rem_pio2f 0081  
                   ?_floorf 0043                _LED1_Control 54CA                     ?_memcpy 0003  
                   ?_runADC 0001                     ?_runDAC 0001                _LED2_Control 54BC  
                   ?_printf 00C2                     ?_strcpy 0003                _LED3_Control 54AE  
              _LED4_Control 54A0                   ?___xxtofl 0003                _LED5_Control 5492  
            ___rem_pio2f@fn 0090              ___rem_pio2f@ty 0083              ___rem_pio2f@ux 008C  
              _LED6_Control 54D8                     _SSP2ADD 0F6E                     _SSP1BUF 0FC9  
                   _SSP2BUF 0F6F           runGPIO@LEDControl 0012             LCD_ShowString@i 0009  
                   __Hparam 0000                     __Lparam 0000                     ___fladd 1FE2  
                   ___fldiv 3052                     ___awdiv 4C8C                     ___cosdf 3C98  
                   ___flneg 531C                     ___awmod 4E02                     ___flmul 24A2  
                   ___flsub 51D8                     ___fltol 47DE                     ___sindf 3636  
                 ?_vfprintf 00BD                __psmallconst 1000              main@setUpAgain 019D  
                   __pcinit 514A                     __ramtop 1000                     __ptext0 3868  
                   __ptext1 4568                     __ptext2 5492                     __ptext3 54A0  
                   __ptext4 54AE                     __ptext5 54BC                     __ptext6 54CA  
                   __ptext7 54D8                     __ptext8 33EC                     __ptext9 1AD8  
                   _pio2_1t 1011                   _T1CONbits 0FCD       read_prec_or_width@fmt 0009  
                ??___xxtofl 0007         __end_of___rem_pio2f 3052            ___awmod@dividend 0003  
                   _invpio2 1019                     _runGPIO 4568                     efgtoa@c 0082  
                   efgtoa@d 0090                     efgtoa@e 0094                     efgtoa@f 007E  
                   efgtoa@g 00A7                     efgtoa@h 009E                     efgtoa@i 009C  
                   efgtoa@l 00A2                     efgtoa@m 0092                     efgtoa@n 00AB  
                   efgtoa@p 0087                     efgtoa@t 0089                     efgtoa@u 00AD  
                   efgtoa@w 0096                   _LCD_Clear 5356                     _sprintf 5262  
          ___rem_pio2f$3510 0087        end_of_initialization 5184                     floorf@e 0051  
                   floorf@m 004D                     floorf@u 0053                     floorf@x 0043  
                   memcpy@d 000A                     memcpy@n 0007                     memcpy@s 000C  
                   fputc@fp 0006            ___rem_pio2f@F526 0115               __Lmediumconst 0000  
                   fputs@fp 000F            ??_LCD_ShowString 0006          _read_prec_or_width 4F5C  
         LED1_Control@state 0003       LCD_ShowString@lineNum 0008            ___rem_pio2f@sign 008B  
         __end_of_vfpfcnvrt 2C90                  efgtoa@mode 008E                  efgtoa@sign 00A6  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 0009  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 00B6                  ??_vfprintf 005B                     strcpy@d 0007  
                 _PORTAbits 0F80                   _PORTCbits 0F82                 ___fladd@grs 0052  
             ___xxtofl@sign 000B                   _TRISAbits 0F92                   _TRISBbits 0F93  
                 _TRISCbits 0F94                   _TRISDbits 0F95                  ?_LCD_Clear 0001  
      ??_read_prec_or_width 000B                 ___fldiv@grs 003D                 ___fldiv@rem 0036  
                 _SPI_write 52A4                 ___flmul@grs 001F           LED5_Control@state 0003  
            __end_of_s1pio2 1041              __end_of_s2pio2 103D              __end_of_s3pio2 1039  
            __end_of_s4pio2 1035              __end_of___flge 49EA              __end_of___fleq 4F5C  
               vfpfcnvrt@ap 00B4                 vfpfcnvrt@cp 00BC                 ___rem_pio2f 2C90  
               vfpfcnvrt@fp 00B1              __end_of___wmul 541A              __end_of_efgtoa 1AD8  
            __end_of_pio2_1 1019        moveDisplay@menuItem1 0172        moveDisplay@menuItem2 0183  
            __end_of_floorf 3C98        moveDisplay@menuItems 0194              __end_of_memcpy 514A  
                floorf@F521 0119              __end_of_runADC 4092              __end_of_runDAC 3636  
            __end_of_printf 547C              __end_of_strcpy 531C         start_initialization 514A  
               __end_of_ISR 008E                 __end_of_abs 53F4                 __end_of_pad 50A4  
                ?_SPI_write 0001       __end_of___fpclassifyf 4AE8             runADC@keepState 00F9  
               vfprintf@fmt 00BF                    ??___flge 0032                    ??___fleq 000B  
                  ??___wmul 0007                    ??_efgtoa 0083                 __pdataBANK1 019F  
                  ??_floorf 0047                    ??_memcpy 0009                    ??_runADC 00DA  
                  ??_runDAC 00C6                    ??_printf 005B                    ??_strcpy 0006  
                 ___fladd@a 0047                   ___fladd@b 0043                   ___fldiv@a 002E  
                 ___fldiv@b 002A               runGPIO@states 0006                   ___cosdf@r 0060  
                 ___cosdf@w 0070                   ___cosdf@x 0053                   ___cosdf@z 0074  
                 ___flmul@a 0015                   ___flmul@b 0011                 __pbssCOMRAM 005B  
                 ___flsub@a 0057                   ___flsub@b 0053               __pcstackBANK0 0060  
             __pcstackBANK1 0172                 ??_LCD_Clear 0004                   ___sindf@r 0060  
                 ___sindf@s 0074                   ___sindf@w 0064                   ___sindf@x 0053  
                 ___sindf@z 0078       runGPIO@numberOfStates 001F                 _efgtoa$3066 008B  
                 _dtoa$3035 0021               SPI_write@data 0005                   __pintcode 0008  
                  ?___fladd 0043                    ?___fldiv 002A                    ?___awdiv 0003  
                  ?___cosdf 0053                    ?___flneg 0078                    ?___awmod 0003  
                  ?___flmul 0011                    ?___flsub 0053                    ?___fltol 0053  
                runADC@pot1 00F5                  runADC@pot2 00F7                    ?___sindf 0053  
                runADC@text 00DC                   fabsf@F465 0111                 __smallconst 1000  
             ??_moveDisplay 00DB                    ?_runGPIO 0001             runDAC@keepState 00CF  
                 _sinf$3230 00A0                   _sinf$3231 00A4                    ?_sprintf 00C2  
                 _sinf$3506 00AA                 ??_SPI_write 0003              runDAC@DACindex 00D1  
                  _LCD_Init 4AE8                    _LCD_Send 541A              ___wmul@product 0007  
                  _LATAbits 0F89                    _LATBbits 0F8A                    _LATCbits 0F8B  
                  _LATDbits 0F8C           LED2_Control@state 0003                    i2u591_40 0018  
                  i2u591_41 0014                    i2u592_40 0026                    i2u592_41 0022  
                  i2u593_40 0038                    i2u593_41 0034                    i2u594_40 0046  
                  i2u594_41 0042                    i2u595_40 006C                    i2u595_41 0068  
                  i2u596_40 007A                    i2u596_41 0076                    i2u897_47 0050  
                 _vfpfcnvrt 28CC                  _ADCON0bits 0FC2                  _ADCON2bits 0FC0  
         ___wmul@multiplier 0003                   main@menuI 019E            moveDisplay@F6953 01B7  
                vfpfcnvrt@c 00BA                   copy_data0 515E         __end_of_moveDisplay 47DE  
          moveDisplay@menuI 019C            moveDisplay@where 00DA                runGPIO@F6965 01AB  
              runGPIO@F6983 019F                runGPIO@GPIOi 0021                    __Hrparam 0000  
                 memcpy@tmp 0009                  vfprintf@ap 00C0                    __Lrparam 0000  
                vfprintf@fp 00BD          runGPIO@GPIOreverse 001E           LED6_Control@state 0003  
              ?___rem_pio2f 007C                  ?_vfpfcnvrt 00B1         runDAC@selectModeDAC 00D0  
                _ANSELAbits 0F38                  _ANSELBbits 0F39                  _ANSELDbits 0F3B  
                _ANSELEbits 0F3C          ___fpclassifyf@F465 011D                  sprintf@fmt 00C4  
                  ___xxtofl 4092                    __ptext10 3636                    __ptext11 2C90  
                  __ptext20 5192                    __ptext12 538C                    __ptext21 28CC  
                  __ptext13 3C98                    __ptext30 49EA                    __ptext22 4246  
                  __ptext14 5460                    __ptext31 47DE                    __ptext23 4F5C  
                  __ptext15 52A4                    __ptext40 5002                    __ptext32 51D8  
                  __ptext24 53F4                    __ptext16 3E96                    __ptext41 521E  
                  __ptext33 1FE2                    __ptext25 10E6                    __ptext17 4092  
                  __ptext50 541A                    __ptext42 4BC2                    __ptext34 531C  
                  __ptext26 52E2                    __ptext18 46CC                    __ptext43 547C  
                  __ptext35 24A2                    __ptext27 50FA                    __ptext19 5262  
                  __ptext44 53C0                    __ptext36 48E6                    __ptext28 50A4  
                  __ptext45 4E02                    __ptext37 4EB2                    __ptext29 3A86  
                  __ptext46 4C8C                    __ptext38 3052                    __ptext47 4D50  
                  __ptext39 43EC                    __ptext48 5356                    __ptext49 4AE8  
            runADC@voltage1 00ED              runADC@voltage2 00F1                _SSP1CON1bits 0FC6  
              _SSP2CON1bits 0F6C                _SSP2CON2bits 0F6B                  strcpy@dest 0003  
                  efgtoa@fp 007C                    efgtoa@ne 0085                    efgtoa@pp 008D  
                  efgtoa@ou 0098                    isa$xinst 0000                    int$flags 005D  
               _runDAC$3503 00C7                 _runDAC$3504 00CB                    _vfprintf 5192  
             ?_LED1_Control 0001                   printf@fmt 00C2                _SSP1STATbits 0FC7  
             ?_LED2_Control 0001                _SSP2STATbits 0F6D               ?_LED3_Control 0001  
             ?_LED4_Control 0001                   putch@data 0003               ?_LED5_Control 0001  
                  memcpy@d1 0003               ?_LED6_Control 0001                    memcpy@s1 0005  
               _moveDisplay 46CC                    intlevel2 0000                   sprintf@ap 00CD  
                 strcpy@src 0005                  _RCSTA1bits 0FAB                    sinf@sign 00A9  
                  runGPIO@j 0022                 efgtoa@nmode 008F                    printf@ap 00C5  
            ??_LED1_Control 0003              ??_LED2_Control 0003                 ??_vfpfcnvrt 00B5  
    LCD_ShowString@textData 0004              ??_LED3_Control 0003              ??_LED4_Control 0003  
                  sprintf@f 00CE                    sprintf@s 00C2              ??_LED5_Control 0003  
            ??_LED6_Control 0003               ___fladd@signs 004F                ___fladd@aexp 0050  
              ___fladd@bexp 0051                ___cosdf$3507 0064                ___cosdf$3508 0068  
              ___cosdf$3509 006C               _keepStateGPIO 00FF           LED3_Control@state 0003  
