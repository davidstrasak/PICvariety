

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 17 15:00:11 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    80   000000                     
    81                           ; Generated 12/10/2023 GMT
    82                           ; 
    83                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution. Publication is not required when
    97                           ;        this file is used in an embedded application.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F46K22 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115   000000                     
   116                           	psect	idataBANK1
   117   004CEA                     __pidataBANK1:
   118                           	callstack 0
   119                           
   120                           ;initializer for moveDisplay@F6963
   121   004CEA  DC                 	db	low STR_15
   122   004CEB  FF                 	db	high STR_15
   123   004CEC  E1                 	db	low STR_16
   124   004CED  FF                 	db	high STR_16
   125   004CEE  FB                 	db	low STR_17
   126   004CEF  FF                 	db	high STR_17
   127   004CF0  F7                 	db	low STR_18
   128   004CF1  FF                 	db	high STR_18
   129   004CF2  F3                 	db	low STR_19
   130   004CF3  FF                 	db	high STR_19
   131   004CF4  D7                 	db	low STR_20
   132   004CF5  FF                 	db	high STR_20
   133   004CF6  C6                 	db	low STR_21
   134   004CF7  FF                 	db	high STR_21
   135   004CF8  D6                 	db	low (STR_26+4)
   136   004CF9  FF                 	db	high (STR_26+4)
   137                           
   138                           ;initializer for runGPIO@F6993
   139   004CFA  20                 	db	32
   140   004CFB  30                 	db	48
   141   004CFC  18                 	db	24
   142   004CFD  0C                 	db	12
   143   004CFE  06                 	db	6
   144   004CFF  03                 	db	3
   145   004D00  01                 	db	1
   146   004D01  03                 	db	3
   147   004D02  06                 	db	6
   148   004D03  0C                 	db	12
   149   004D04  18                 	db	24
   150   004D05  30                 	db	48
   151                           
   152                           ;initializer for runGPIO@F6975
   153   004D06  CC                 	db	low _LED1_Control
   154   004D07  4D                 	db	high _LED1_Control
   155   004D08  BE                 	db	low _LED2_Control
   156   004D09  4D                 	db	high _LED2_Control
   157   004D0A  B0                 	db	low _LED3_Control
   158   004D0B  4D                 	db	high _LED3_Control
   159   004D0C  A2                 	db	low _LED4_Control
   160   004D0D  4D                 	db	high _LED4_Control
   161   004D0E  94                 	db	low _LED5_Control
   162   004D0F  4D                 	db	high _LED5_Control
   163   004D10  DA                 	db	low _LED6_Control
   164   004D11  4D                 	db	high _LED6_Control
   165                           
   166                           	psect	mediumconst
   167   00FED2                     __pmediumconst:
   168                           	callstack 0
   169   00FED2  00                 	db	0
   170   00FED3  6C3C               	dw	27708
   171   00FED5  3636               	dw	13878
   172   00FED7                     __end_of_S4:
   173                           	callstack 0
   174   00FED7  07CF               	dw	1999
   175   00FED9  B950               	dw	47440
   176   00FEDB                     __end_of_S3:
   177                           	callstack 0
   178   00FEDB  8884               	dw	34948
   179   00FEDD  3C08               	dw	15368
   180   00FEDF                     __end_of_S2:
   181                           	callstack 0
   182   00FEDF  AAAB               	dw	43691
   183   00FEE1  BE2A               	dw	48682
   184   00FEE3                     __end_of_S1:
   185                           	callstack 0
   186   00FEE3  85A3               	dw	34211
   187   00FEE5  3288               	dw	12936
   188   00FEE7                     __end_of_pio2_1t:
   189                           	callstack 0
   190   00FEE7  0FDA               	dw	4058
   191   00FEE9  3FC9               	dw	16329
   192   00FEEB                     __end_of_pio2_1:
   193                           	callstack 0
   194   00FEEB  F983               	dw	63875
   195   00FEED  3F22               	dw	16162
   196   00FEEF                     __end_of_invpio2:
   197                           	callstack 0
   198   00FEEF  0000               	dw	0
   199   00FEF1  3F00               	dw	16128
   200   00FEF3                     __end_of_half:
   201                           	callstack 0
   202   00FEF3  9A17               	dw	39447
   203   00FEF5  37CC               	dw	14284
   204   00FEF7                     __end_of_C3:
   205                           	callstack 0
   206   00FEF7  043F               	dw	1087
   207   00FEF9  BAB6               	dw	47798
   208   00FEFB                     __end_of_C2:
   209                           	callstack 0
   210   00FEFB  AA9F               	dw	43679
   211   00FEFD  3D2A               	dw	15658
   212   00FEFF                     __end_of_C1:
   213                           	callstack 0
   214   00FEFF  0000               	dw	0
   215   00FF01  BF00               	dw	48896
   216   00FF03                     __end_of_C0:
   217                           	callstack 0
   218   00FF03  0FDB               	dw	4059
   219   00FF05  40C9               	dw	16585
   220   00FF07                     __end_of_s4pio2:
   221                           	callstack 0
   222   00FF07  CBE4               	dw	52196
   223   00FF09  4096               	dw	16534
   224   00FF0B                     __end_of_s3pio2:
   225                           	callstack 0
   226   00FF0B  0FDB               	dw	4059
   227   00FF0D  4049               	dw	16457
   228   00FF0F                     __end_of_s2pio2:
   229                           	callstack 0
   230   00FF0F  0FDB               	dw	4059
   231   00FF11  3FC9               	dw	16329
   232   00FF13                     __end_of_s1pio2:
   233                           	callstack 0
   234   000000                     _ADRESL	set	4035
   235   000000                     _RCREG1	set	4014
   236   000000                     _ANSELCbits	set	3898
   237   000000                     _TXREG1	set	4013
   238   000000                     _ADRESH	set	4036
   239   000000                     _LATBbits	set	3978
   240   000000                     _TXSTA1bits	set	4012
   241   000000                     _ANSELBbits	set	3897
   242   000000                     _TRISBbits	set	3987
   243   000000                     _SSP2STATbits	set	3949
   244   000000                     _SSP2ADD	set	3950
   245   000000                     _ANSELDbits	set	3899
   246   000000                     _PORTAbits	set	3968
   247   000000                     _PORTCbits	set	3970
   248   000000                     _LATCbits	set	3979
   249   000000                     _LATDbits	set	3980
   250   000000                     _ANSELAbits	set	3896
   251   000000                     _TRISAbits	set	3986
   252   000000                     _TRISCbits	set	3988
   253   000000                     _TMR2IE	set	31977
   254   000000                     _TMR2IF	set	31985
   255   000000                     _RC1IF	set	31989
   256   000000                     _RC1IE	set	31981
   257   000000                     _TMR1ON	set	32360
   258   000000                     _TMR1IF	set	31984
   259   000000                     _GIE	set	32663
   260   000000                     _TX1IF	set	31988
   261   000000                     _GODONE	set	32273
   262   000000                     _TRISDbits	set	3989
   263   000000                     _TMR1IE	set	31976
   264   000000                     _SSP1IF	set	31987
   265   000000                     _SSP2IF	set	32039
   266   000000                     _LATAbits	set	3977
   267   000000                     _CCPTMRS0bits	set	3913
   268   000000                     _ANSELEbits	set	3900
   269   000000                     _SSP2CON2bits	set	3947
   270   000000                     _SSP2CON1bits	set	3948
   271   000000                     _SSP2BUF	set	3951
   272   000000                     _RCSTA1bits	set	4011
   273   000000                     _SPBRG1	set	4015
   274   000000                     _ADCON2bits	set	4032
   275   000000                     _SSP1CON1bits	set	4038
   276   000000                     _SSP1BUF	set	4041
   277   000000                     _SSP1STATbits	set	4039
   278   000000                     _ADCON0bits	set	4034
   279   000000                     _PR2	set	4027
   280   000000                     _TMR2ON	set	32210
   281   000000                     _T1CONbits	set	4045
   282   000000                     _TMR1	set	4046
   283   000000                     _PEIE	set	32662
   284   000000                     _CCP1CONbits	set	4029
   285   000000                     _CCPR1L	set	4030
   286   00FF13                     STR_25:
   287   00FF13  50                 	db	80	;'P'
   288   00FF14  4F                 	db	79	;'O'
   289   00FF15  54                 	db	84	;'T'
   290   00FF16  31                 	db	49	;'1'
   291   00FF17  3A                 	db	58	;':'
   292   00FF18  25                 	db	37
   293   00FF19  2E                 	db	46
   294   00FF1A  31                 	db	49	;'1'
   295   00FF1B  66                 	db	102	;'f'
   296   00FF1C  50                 	db	80	;'P'
   297   00FF1D  4F                 	db	79	;'O'
   298   00FF1E  54                 	db	84	;'T'
   299   00FF1F  32                 	db	50	;'2'
   300   00FF20  3A                 	db	58	;':'
   301   00FF21  25                 	db	37
   302   00FF22  2E                 	db	46
   303   00FF23  31                 	db	49	;'1'
   304   00FF24  66                 	db	102	;'f'
   305   00FF25  00                 	db	0
   306   00FF26                     STR_27:
   307   00FF26  25                 	db	37
   308   00FF27  68                 	db	104	;'h'
   309   00FF28  75                 	db	117	;'u'
   310   00FF29  20                 	db	32
   311   00FF2A  20                 	db	32
   312   00FF2B  20                 	db	32
   313   00FF2C  20                 	db	32
   314   00FF2D  20                 	db	32
   315   00FF2E  20                 	db	32
   316   00FF2F  20                 	db	32
   317   00FF30  20                 	db	32
   318   00FF31  20                 	db	32
   319   00FF32  20                 	db	32
   320   00FF33  20                 	db	32
   321   00FF34  20                 	db	32
   322   00FF35  20                 	db	32
   323   00FF36  00                 	db	0
   324   00FF37                     STR_2:
   325   00FF37  20                 	db	32
   326   00FF38  20                 	db	32
   327   00FF39  20                 	db	32
   328   00FF3A  20                 	db	32
   329   00FF3B  20                 	db	32
   330   00FF3C  20                 	db	32
   331   00FF3D  20                 	db	32
   332   00FF3E  20                 	db	32
   333   00FF3F  20                 	db	32
   334   00FF40  20                 	db	32
   335   00FF41  20                 	db	32
   336   00FF42  20                 	db	32
   337   00FF43  20                 	db	32
   338   00FF44  20                 	db	32
   339   00FF45  20                 	db	32
   340   00FF46  20                 	db	32
   341   00FF47  00                 	db	0
   342   00FF48                     STR_3:
   343   00FF48  42                 	db	66	;'B'
   344   00FF49  52                 	db	82	;'R'
   345   00FF4A  3A                 	db	58	;':'
   346   00FF4B  20                 	db	32
   347   00FF4C  31                 	db	49	;'1'
   348   00FF4D  39                 	db	57	;'9'
   349   00FF4E  32                 	db	50	;'2'
   350   00FF4F  30                 	db	48	;'0'
   351   00FF50  30                 	db	48	;'0'
   352   00FF51  20                 	db	32
   353   00FF52  20                 	db	32
   354   00FF53  20                 	db	32
   355   00FF54  20                 	db	32
   356   00FF55  20                 	db	32
   357   00FF56  20                 	db	32
   358   00FF57  20                 	db	32
   359   00FF58  00                 	db	0
   360   00FF59                     STR_1:
   361   00FF59  50                 	db	80	;'P'
   362   00FF5A  6F                 	db	111	;'o'
   363   00FF5B  7A                 	db	122	;'z'
   364   00FF5C  6F                 	db	111	;'o'
   365   00FF5D  72                 	db	114	;'r'
   366   00FF5E  21                 	db	33
   367   00FF5F  20                 	db	32
   368   00FF60  48                 	db	72	;'H'
   369   00FF61  61                 	db	97	;'a'
   370   00FF62  64                 	db	100	;'d'
   371   00FF63  21                 	db	33
   372   00FF64  21                 	db	33
   373   00FF65  21                 	db	33
   374   00FF66  20                 	db	32
   375   00FF67  20                 	db	32
   376   00FF68  20                 	db	32
   377   00FF69  00                 	db	0
   378   00FF6A                     STR_5:
   379   00FF6A  5A                 	db	90	;'Z'
   380   00FF6B  6D                 	db	109	;'m'
   381   00FF6C  61                 	db	97	;'a'
   382   00FF6D  63                 	db	99	;'c'
   383   00FF6E  6B                 	db	107	;'k'
   384   00FF6F  6E                 	db	110	;'n'
   385   00FF70  65                 	db	101	;'e'
   386   00FF71  74                 	db	116	;'t'
   387   00FF72  65                 	db	101	;'e'
   388   00FF73  20                 	db	32
   389   00FF74  42                 	db	66	;'B'
   390   00FF75  54                 	db	84	;'T'
   391   00FF76  4E                 	db	78	;'N'
   392   00FF77  32                 	db	50	;'2'
   393   00FF78  20                 	db	32
   394   00FF79  20                 	db	32
   395   00FF7A  00                 	db	0
   396   00FF7B                     STR_8:
   397   00FF7B  52                 	db	82	;'R'
   398   00FF7C  42                 	db	66	;'B'
   399   00FF7D  30                 	db	48	;'0'
   400   00FF7E  2D                 	db	45
   401   00FF7F  41                 	db	65	;'A'
   402   00FF80  32                 	db	50	;'2'
   403   00FF81  2C                 	db	44
   404   00FF82  20                 	db	32
   405   00FF83  42                 	db	66	;'B'
   406   00FF84  52                 	db	82	;'R'
   407   00FF85  3A                 	db	58	;':'
   408   00FF86  31                 	db	49	;'1'
   409   00FF87  39                 	db	57	;'9'
   410   00FF88  32                 	db	50	;'2'
   411   00FF89  30                 	db	48	;'0'
   412   00FF8A  30                 	db	48	;'0'
   413   00FF8B  00                 	db	0
   414   00FF8C                     STR_7:
   415   00FF8C  56                 	db	86	;'V'
   416   00FF8D  6F                 	db	111	;'o'
   417   00FF8E  6C                 	db	108	;'l'
   418   00FF8F  74                 	db	116	;'t'
   419   00FF90  79                 	db	121	;'y'
   420   00FF91  20                 	db	32
   421   00FF92  6E                 	db	110	;'n'
   422   00FF93  61                 	db	97	;'a'
   423   00FF94  20                 	db	32
   424   00FF95  50                 	db	80	;'P'
   425   00FF96  4F                 	db	79	;'O'
   426   00FF97  54                 	db	84	;'T'
   427   00FF98  65                 	db	101	;'e'
   428   00FF99  63                 	db	99	;'c'
   429   00FF9A  68                 	db	104	;'h'
   430   00FF9B  3A                 	db	58	;':'
   431   00FF9C  00                 	db	0
   432   00FF9D                     STR_4:
   433   00FF9D  4B                 	db	75	;'K'
   434   00FF9E  6F                 	db	111	;'o'
   435   00FF9F  6E                 	db	110	;'n'
   436   00FFA0  65                 	db	101	;'e'
   437   00FFA1  63                 	db	99	;'c'
   438   00FFA2  20                 	db	32
   439   00FFA3  2D                 	db	45
   440   00FFA4  20                 	db	32
   441   00FFA5  6E                 	db	110	;'n'
   442   00FFA6  65                 	db	101	;'e'
   443   00FFA7  77                 	db	119	;'w'
   444   00FFA8  20                 	db	32
   445   00FFA9  6C                 	db	108	;'l'
   446   00FFAA  69                 	db	105	;'i'
   447   00FFAB  6E                 	db	110	;'n'
   448   00FFAC  65                 	db	101	;'e'
   449   00FFAD  00                 	db	0
   450   00FFAE                     STR_9:
   451   00FFAE  31                 	db	49	;'1'
   452   00FFAF  3A                 	db	58	;':'
   453   00FFB0  74                 	db	116	;'t'
   454   00FFB1  72                 	db	114	;'r'
   455   00FFB2  2C                 	db	44
   456   00FFB3  32                 	db	50	;'2'
   457   00FFB4  3A                 	db	58	;':'
   458   00FFB5  73                 	db	115	;'s'
   459   00FFB6  69                 	db	105	;'i'
   460   00FFB7  6E                 	db	110	;'n'
   461   00FFB8  2C                 	db	44
   462   00FFB9  33                 	db	51	;'3'
   463   00FFBA  3A                 	db	58	;':'
   464   00FFBB  70                 	db	112	;'p'
   465   00FFBC  69                 	db	105	;'i'
   466   00FFBD  6C                 	db	108	;'l'
   467   00FFBE  00                 	db	0
   468   00FFBF                     STR_34:
   469   00FFBF  28                 	db	40
   470   00FFC0  6E                 	db	110	;'n'
   471   00FFC1  75                 	db	117	;'u'
   472   00FFC2  6C                 	db	108	;'l'
   473   00FFC3  6C                 	db	108	;'l'
   474   00FFC4  29                 	db	41
   475   00FFC5  00                 	db	0
   476   00FFC6                     STR_21:
   477   00FFC6  4D                 	db	77	;'M'
   478   00FFC7  55                 	db	85	;'U'
   479   00FFC8  53                 	db	83	;'S'
   480   00FFC9  49                 	db	73	;'I'
   481   00FFCA  43                 	db	67	;'C'
   482   00FFCB  00                 	db	0
   483   00FFCC                     STR_23:
   484   00FFCC  3E                 	db	62	;'>'
   485   00FFCD  25                 	db	37
   486   00FFCE  2D                 	db	45
   487   00FFCF  2A                 	db	42
   488   00FFD0  73                 	db	115	;'s'
   489   00FFD1  00                 	db	0
   490   00FFD2                     STR_26:
   491   00FFD2  25                 	db	37
   492   00FFD3  73                 	db	115	;'s'
   493   00FFD4  20                 	db	32
   494   00FFD5  0A                 	db	10
   495   00FFD6  00                 	db	0
   496   00FFD7                     STR_20:
   497   00FFD7  47                 	db	71	;'G'
   498   00FFD8  41                 	db	65	;'A'
   499   00FFD9  4D                 	db	77	;'M'
   500   00FFDA  45                 	db	69	;'E'
   501   00FFDB  00                 	db	0
   502   00FFDC                     STR_15:
   503   00FFDC  47                 	db	71	;'G'
   504   00FFDD  50                 	db	80	;'P'
   505   00FFDE  49                 	db	73	;'I'
   506   00FFDF  4F                 	db	79	;'O'
   507   00FFE0  00                 	db	0
   508   00FFE1                     STR_16:
   509   00FFE1  55                 	db	85	;'U'
   510   00FFE2  41                 	db	65	;'A'
   511   00FFE3  52                 	db	82	;'R'
   512   00FFE4  54                 	db	84	;'T'
   513   00FFE5  00                 	db	0
   514   00FFE6                     STR_14:
   515   00FFE6  25                 	db	37
   516   00FFE7  64                 	db	100	;'d'
   517   00FFE8  20                 	db	32
   518   00FFE9  0D                 	db	13
   519   00FFEA  00                 	db	0
   520   00FFEB                     STR_28:
   521   00FFEB  69                 	db	105	;'i'
   522   00FFEC  6E                 	db	110	;'n'
   523   00FFED  66                 	db	102	;'f'
   524   00FFEE  00                 	db	0
   525   00FFEF                     STR_31:
   526   00FFEF  6E                 	db	110	;'n'
   527   00FFF0  61                 	db	97	;'a'
   528   00FFF1  6E                 	db	110	;'n'
   529   00FFF2  00                 	db	0
   530   00FFF3                     STR_19:
   531   00FFF3  44                 	db	68	;'D'
   532   00FFF4  41                 	db	65	;'A'
   533   00FFF5  43                 	db	67	;'C'
   534   00FFF6  00                 	db	0
   535   00FFF7                     STR_18:
   536   00FFF7  41                 	db	65	;'A'
   537   00FFF8  44                 	db	68	;'D'
   538   00FFF9  43                 	db	67	;'C'
   539   00FFFA  00                 	db	0
   540   00FFFB                     STR_17:
   541   00FFFB  50                 	db	80	;'P'
   542   00FFFC  57                 	db	87	;'W'
   543   00FFFD  4D                 	db	77	;'M'
   544   00FFFE  00                 	db	0
   545   00FFFF  00                 	db	0	; dummy byte at the end
   546   000000                     
   547                           ; #config settings
   548                           
   549                           	psect	cinit
   550   0049A6                     __pcinit:
   551                           	callstack 0
   552   0049A6                     start_initialization:
   553                           	callstack 0
   554   0049A6                     __initialization:
   555                           	callstack 0
   556                           
   557                           ; Initialize objects allocated to BANK1 (40 bytes)
   558                           ; load TBLPTR registers with __pidataBANK1
   559   0049A6  0EEA               	movlw	low __pidataBANK1
   560   0049A8  6EF6               	movwf	tblptrl,c
   561   0049AA  0E4C               	movlw	high __pidataBANK1
   562   0049AC  6EF7               	movwf	tblptrh,c
   563   0049AE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   564   0049B0  6EF8               	movwf	tblptru,c
   565   0049B2  EE01  F0CA         	lfsr	0,__pdataBANK1
   566   0049B6  EE10 F028          	lfsr	1,40
   567   0049BA                     copy_data0:
   568   0049BA  0009               	tblrd		*+
   569   0049BC  CFF5 FFEE          	movff	tablat,postinc0
   570   0049C0  50E5               	movf	postdec1,w,c
   571   0049C2  50E1               	movf	fsr1l,w,c
   572   0049C4  E1FA               	bnz	copy_data0
   573                           
   574                           ; Clear objects allocated to BANK2 (17 bytes)
   575   0049C6  EE02  F000         	lfsr	0,__pbssBANK2
   576   0049CA  0E11               	movlw	17
   577   0049CC                     clear_0:
   578   0049CC  6AEE               	clrf	postinc0,c
   579   0049CE  06E8               	decf	wreg,f,c
   580   0049D0  E1FD               	bnz	clear_0
   581                           
   582                           ; Clear objects allocated to BANK1 (149 bytes)
   583   0049D2  EE01  F000         	lfsr	0,__pbssBANK1
   584   0049D6  0E95               	movlw	149
   585   0049D8                     clear_1:
   586   0049D8  6AEE               	clrf	postinc0,c
   587   0049DA  06E8               	decf	wreg,f,c
   588   0049DC  E1FD               	bnz	clear_1
   589                           
   590                           ; Clear objects allocated to BANK0 (1 bytes)
   591   0049DE  0100               	movlb	0
   592   0049E0  6BFF               	clrf	__pbssBANK0& (0+255),b
   593                           
   594                           ; Clear objects allocated to COMRAM (5 bytes)
   595   0049E2  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   596   0049E4  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   597   0049E6  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   598   0049E8  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   599   0049EA  6A55               	clrf	__pbssCOMRAM& (0+255),c
   600   0049EC                     end_of_initialization:
   601                           	callstack 0
   602   0049EC                     __end_of__initialization:
   603                           	callstack 0
   604   0049EC  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   605   0049EE  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   606   0049F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   607   0049F2  6EF8               	movwf	tblptru,c
   608   0049F4  0100               	movlb	0
   609   0049F6  EF54  F014         	goto	_main	;jump to C main() function
   610                           
   611                           	psect	bssCOMRAM
   612   000055                     __pbssCOMRAM:
   613                           	callstack 0
   614   000055                     _width:
   615                           	callstack 0
   616   000055                     	ds	2
   617   000057                     _prec:
   618                           	callstack 0
   619   000057                     	ds	2
   620   000059                     _flags:
   621                           	callstack 0
   622   000059                     	ds	1
   623                           
   624                           	psect	bssBANK0
   625   0000FF                     __pbssBANK0:
   626                           	callstack 0
   627   0000FF                     _keepStateGPIO:
   628                           	callstack 0
   629   0000FF                     	ds	1
   630                           
   631                           	psect	bssBANK1
   632   000100                     __pbssBANK1:
   633                           	callstack 0
   634   000100                     	ds	17
   635   000111                     fabsf@F465:
   636                           	callstack 0
   637   000111                     	ds	4
   638   000115                     ___rem_pio2f@F526:
   639                           	callstack 0
   640   000115                     	ds	4
   641   000119                     floorf@F521:
   642                           	callstack 0
   643   000119                     	ds	4
   644   00011D                     ___fpclassifyf@F465:
   645                           	callstack 0
   646   00011D                     	ds	4
   647   000121                     ISR@i:
   648                           	callstack 0
   649   000121                     	ds	2
   650   000123                     _UARTIE:
   651                           	callstack 0
   652   000123                     	ds	1
   653   000124                     _GPIOIE:
   654                           	callstack 0
   655   000124                     	ds	1
   656   000125                     _dbuf:
   657                           	callstack 0
   658   000125                     	ds	80
   659   000175                     _gmail:
   660                           	callstack 0
   661   000175                     	ds	32
   662                           
   663                           	psect	dataBANK1
   664   0001CA                     __pdataBANK1:
   665                           	callstack 0
   666   0001CA                     moveDisplay@F6963:
   667                           	callstack 0
   668   0001CA                     	ds	16
   669   0001DA                     runGPIO@F6993:
   670                           	callstack 0
   671   0001DA                     	ds	12
   672   0001E6                     runGPIO@F6975:
   673                           	callstack 0
   674   0001E6                     	ds	12
   675                           
   676                           	psect	bssBANK2
   677   000200                     __pbssBANK2:
   678                           	callstack 0
   679   000200                     	ds	17
   680                           
   681                           	psect	cstackBANK1
   682   000195                     __pcstackBANK1:
   683                           	callstack 0
   684   000195                     moveDisplay@menuItem1:
   685                           	callstack 0
   686   000195                     runADC@text:
   687                           	callstack 0
   688                           
   689                           ; 17 bytes @ 0x0
   690   000195                     	ds	17
   691   0001A6                     runADC@voltage1:
   692                           	callstack 0
   693   0001A6                     moveDisplay@menuItem2:
   694                           	callstack 0
   695                           
   696                           ; 17 bytes @ 0x11
   697   0001A6                     	ds	4
   698   0001AA                     runADC@voltage2:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x15
   702   0001AA                     	ds	4
   703   0001AE                     runADC@pot1:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x19
   707   0001AE                     	ds	2
   708   0001B0                     runADC@pot2:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x1B
   712   0001B0                     	ds	2
   713   0001B2                     runADC@keepState:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x1D
   717   0001B2                     	ds	5
   718   0001B7                     moveDisplay@menuItems:
   719                           	callstack 0
   720                           
   721                           ; 16 bytes @ 0x22
   722   0001B7                     	ds	16
   723   0001C7                     moveDisplay@menuI:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0x32
   727   0001C7                     	ds	1
   728   0001C8                     main@setUpAgain:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x33
   732   0001C8                     	ds	1
   733   0001C9                     main@menuI:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0x34
   737   0001C9                     	ds	1
   738                           
   739                           	psect	cstackBANK0
   740   000060                     __pcstackBANK0:
   741                           	callstack 0
   742   000060                     ___fladd@signs:
   743                           	callstack 0
   744   000060                     floorf@m:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x0
   748   000060                     	ds	1
   749   000061                     ___fladd@aexp:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x1
   753   000061                     	ds	1
   754   000062                     ___fladd@bexp:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x2
   758   000062                     	ds	1
   759   000063                     ___fladd@grs:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x3
   763   000063                     	ds	1
   764   000064                     ?___flsub:
   765                           	callstack 0
   766   000064                     ?___sindf:
   767                           	callstack 0
   768   000064                     ?___cosdf:
   769                           	callstack 0
   770   000064                     ?___fltol:
   771                           	callstack 0
   772   000064                     floorf@e:
   773                           	callstack 0
   774   000064                     ___fltol@f1:
   775                           	callstack 0
   776   000064                     ___flsub@b:
   777                           	callstack 0
   778   000064                     ___cosdf@x:
   779                           	callstack 0
   780   000064                     ___sindf@x:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x4
   784   000064                     	ds	2
   785   000066                     floorf@u:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0x6
   789   000066                     	ds	2
   790   000068                     ??___fltol:
   791   000068                     ___flsub@a:
   792                           	callstack 0
   793   000068                     ___cosdf@r:
   794                           	callstack 0
   795   000068                     ___sindf@r:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x8
   799   000068                     	ds	4
   800   00006C                     ___sindf@w:
   801                           	callstack 0
   802   00006C                     ___cosdf$4449:
   803                           	callstack 0
   804                           
   805                           ; 4 bytes @ 0xC
   806   00006C                     	ds	4
   807   000070                     ___cosdf$4450:
   808                           	callstack 0
   809   000070                     ___sindf$4453:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x10
   813   000070                     	ds	4
   814   000074                     ___cosdf$4451:
   815                           	callstack 0
   816   000074                     ___sindf$4454:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x14
   820   000074                     	ds	4
   821   000078                     ___cosdf@w:
   822                           	callstack 0
   823   000078                     ___sindf$4455:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x18
   827   000078                     	ds	4
   828   00007C                     ___cosdf@z:
   829                           	callstack 0
   830   00007C                     ___sindf@s:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0x1C
   834   00007C                     	ds	4
   835   000080                     ?___flneg:
   836                           	callstack 0
   837   000080                     ___flneg@f1:
   838                           	callstack 0
   839   000080                     ___sindf@z:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x20
   843   000080                     	ds	4
   844   000084                     ?___rem_pio2f:
   845                           	callstack 0
   846   000084                     efgtoa@fp:
   847                           	callstack 0
   848   000084                     ___rem_pio2f@x:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x24
   852   000084                     	ds	2
   853   000086                     efgtoa@f:
   854                           	callstack 0
   855                           
   856                           ; 4 bytes @ 0x26
   857   000086                     	ds	2
   858   000088                     ___rem_pio2f@y:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x28
   862   000088                     	ds	1
   863   000089                     ??___rem_pio2f:
   864                           
   865                           ; 1 bytes @ 0x29
   866   000089                     	ds	1
   867   00008A                     efgtoa@c:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x2A
   871   00008A                     	ds	1
   872   00008B                     ??_efgtoa:
   873   00008B                     ___rem_pio2f@ty:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0x2B
   877   00008B                     	ds	2
   878   00008D                     efgtoa@ne:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x2D
   882   00008D                     	ds	2
   883   00008F                     efgtoa@p:
   884                           	callstack 0
   885   00008F                     ___rem_pio2f$4452:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x2F
   889   00008F                     	ds	2
   890   000091                     efgtoa@t:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x31
   894   000091                     	ds	2
   895   000093                     ___rem_pio2f@sign:
   896                           	callstack 0
   897   000093                     _efgtoa$3996:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x33
   901   000093                     	ds	1
   902   000094                     ___rem_pio2f@ux:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x34
   906   000094                     	ds	1
   907   000095                     efgtoa@pp:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0x35
   911   000095                     	ds	1
   912   000096                     efgtoa@mode:
   913                           	callstack 0
   914                           
   915                           ; 1 bytes @ 0x36
   916   000096                     	ds	1
   917   000097                     efgtoa@nmode:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0x37
   921   000097                     	ds	1
   922   000098                     efgtoa@d:
   923                           	callstack 0
   924   000098                     ___rem_pio2f@fn:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0x38
   928   000098                     	ds	2
   929   00009A                     efgtoa@m:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x3A
   933   00009A                     	ds	2
   934   00009C                     efgtoa@e:
   935                           	callstack 0
   936   00009C                     ___rem_pio2f@t:
   937                           	callstack 0
   938                           
   939                           ; 4 bytes @ 0x3C
   940   00009C                     	ds	2
   941   00009E                     efgtoa@w:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x3E
   945   00009E                     	ds	2
   946   0000A0                     efgtoa@ou:
   947                           	callstack 0
   948   0000A0                     ___rem_pio2f@n:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x40
   952   0000A0                     	ds	4
   953   0000A4                     ?_sinf:
   954                           	callstack 0
   955   0000A4                     efgtoa@i:
   956                           	callstack 0
   957   0000A4                     sinf@x:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x44
   961   0000A4                     	ds	2
   962   0000A6                     efgtoa@h:
   963                           	callstack 0
   964                           
   965                           ; 4 bytes @ 0x46
   966   0000A6                     	ds	2
   967   0000A8                     _sinf$4167:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0x48
   971   0000A8                     	ds	2
   972   0000AA                     efgtoa@l:
   973                           	callstack 0
   974                           
   975                           ; 4 bytes @ 0x4A
   976   0000AA                     	ds	2
   977   0000AC                     _sinf$4168:
   978                           	callstack 0
   979                           
   980                           ; 4 bytes @ 0x4C
   981   0000AC                     	ds	2
   982   0000AE                     efgtoa@sign:
   983                           	callstack 0
   984                           
   985                           ; 1 bytes @ 0x4E
   986   0000AE                     	ds	1
   987   0000AF                     efgtoa@g:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x4F
   991   0000AF                     	ds	1
   992   0000B0                     sinf@n:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x50
   996   0000B0                     	ds	1
   997   0000B1                     sinf@sign:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x51
  1001   0000B1                     	ds	1
  1002   0000B2                     _sinf$4448:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x52
  1006   0000B2                     	ds	1
  1007   0000B3                     efgtoa@n:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x53
  1011   0000B3                     	ds	2
  1012   0000B5                     efgtoa@u:
  1013                           	callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x55
  1016   0000B5                     	ds	1
  1017   0000B6                     sinf@y:
  1018                           	callstack 0
  1019                           
  1020                           ; 4 bytes @ 0x56
  1021   0000B6                     	ds	3
  1022   0000B9                     vfpfcnvrt@fp:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x59
  1026   0000B9                     	ds	1
  1027   0000BA                     sinf@ux:
  1028                           	callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x5A
  1031   0000BA                     	ds	1
  1032   0000BB                     vfpfcnvrt@fmt:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x5B
  1036   0000BB                     	ds	1
  1037   0000BC                     vfpfcnvrt@ap:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x5C
  1041   0000BC                     	ds	1
  1042   0000BD                     ??_vfpfcnvrt:
  1043                           
  1044                           ; 1 bytes @ 0x5D
  1045   0000BD                     	ds	2
  1046   0000BF                     vfpfcnvrt@done:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x5F
  1050   0000BF                     	ds	1
  1051   0000C0                     vfpfcnvrt@convarg:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x60
  1055   0000C0                     	ds	4
  1056   0000C4                     vfpfcnvrt@c:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x64
  1060   0000C4                     	ds	1
  1061   0000C5                     vfpfcnvrt@cp:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x65
  1065   0000C5                     	ds	2
  1066   0000C7                     ?_vfprintf:
  1067                           	callstack 0
  1068   0000C7                     vfprintf@fp:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x67
  1072   0000C7                     	ds	2
  1073   0000C9                     vfprintf@fmt:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x69
  1077   0000C9                     	ds	2
  1078   0000CB                     vfprintf@ap:
  1079                           	callstack 0
  1080                           
  1081                           ; 1 bytes @ 0x6B
  1082   0000CB                     	ds	1
  1083   0000CC                     vfprintf@cfmt:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x6C
  1087   0000CC                     	ds	2
  1088   0000CE                     ?_printf:
  1089                           	callstack 0
  1090   0000CE                     ?_sprintf:
  1091                           	callstack 0
  1092   0000CE                     sprintf@s:
  1093                           	callstack 0
  1094   0000CE                     printf@fmt:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x6E
  1098   0000CE                     	ds	2
  1099   0000D0                     sprintf@fmt:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x70
  1103   0000D0                     	ds	2
  1104   0000D2                     ??_runUART:
  1105   0000D2                     ??_runDAC:
  1106                           
  1107                           ; 1 bytes @ 0x72
  1108   0000D2                     	ds	1
  1109   0000D3                     _runDAC$4445:
  1110                           	callstack 0
  1111                           
  1112                           ; 4 bytes @ 0x73
  1113   0000D3                     	ds	1
  1114   0000D4                     runUART@reversed:
  1115                           	callstack 0
  1116                           
  1117                           ; 31 bytes @ 0x74
  1118   0000D4                     	ds	3
  1119   0000D7                     _runDAC$4446:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x77
  1123   0000D7                     	ds	3
  1124   0000DA                     sprintf@ap:
  1125                           	callstack 0
  1126                           
  1127                           ; 1 bytes @ 0x7A
  1128   0000DA                     	ds	1
  1129   0000DB                     runDAC@keepState:
  1130                           	callstack 0
  1131   0000DB                     sprintf@f:
  1132                           	callstack 0
  1133                           
  1134                           ; 12 bytes @ 0x7B
  1135   0000DB                     	ds	1
  1136   0000DC                     runDAC@selectModeDAC:
  1137                           	callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x7C
  1140   0000DC                     	ds	1
  1141   0000DD                     runDAC@DACindex:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x7D
  1145   0000DD                     	ds	10
  1146   0000E7                     ??_runADC:
  1147   0000E7                     ??_runGAME:
  1148   0000E7                     moveDisplay@where:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x87
  1152   0000E7                     	ds	1
  1153   0000E8                     ??_moveDisplay:
  1154                           
  1155                           ; 1 bytes @ 0x88
  1156   0000E8                     	ds	1
  1157   0000E9                     runGAME@text:
  1158                           	callstack 0
  1159                           
  1160                           ; 17 bytes @ 0x89
  1161   0000E9                     	ds	10
  1162   0000F3                     runUART@keepState:
  1163                           	callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x93
  1166   0000F3                     	ds	1
  1167   0000F4                     runUART@len:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x94
  1171   0000F4                     	ds	2
  1172   0000F6                     runUART@i:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x96
  1176   0000F6                     	ds	2
  1177   0000F8                     runUART@p:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x98
  1181   0000F8                     	ds	2
  1182   0000FA                     runGAME@pot1:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x9A
  1186   0000FA                     	ds	2
  1187   0000FC                     runGAME@keepState:
  1188                           	callstack 0
  1189                           
  1190                           ; 1 bytes @ 0x9C
  1191   0000FC                     	ds	1
  1192   0000FD                     ??_main:
  1193                           
  1194                           ; 1 bytes @ 0x9D
  1195   0000FD                     	ds	2
  1196                           
  1197                           	psect	cstackCOMRAM
  1198   000001                     __pcstackCOMRAM:
  1199                           	callstack 0
  1200   000001                     ??_ISR:
  1201                           
  1202                           ; 1 bytes @ 0x0
  1203   000001                     	ds	4
  1204   000005                     ISR@temp:
  1205                           	callstack 0
  1206                           
  1207                           ; 1 bytes @ 0x4
  1208   000005                     	ds	1
  1209   000006                     ?_strlen:
  1210                           	callstack 0
  1211   000006                     ?___fpclassifyf:
  1212                           	callstack 0
  1213   000006                     ?___wmul:
  1214                           	callstack 0
  1215   000006                     ?___awdiv:
  1216                           	callstack 0
  1217   000006                     ?___awmod:
  1218                           	callstack 0
  1219   000006                     ?___lwdiv:
  1220                           	callstack 0
  1221   000006                     ?___lwmod:
  1222                           	callstack 0
  1223   000006                     ?_labs:
  1224                           	callstack 0
  1225   000006                     ?_fabsf:
  1226                           	callstack 0
  1227   000006                     ?___xxtofl:
  1228                           	callstack 0
  1229   000006                     LCD_Send@data:
  1230                           	callstack 0
  1231   000006                     SPI_write@MSB:
  1232                           	callstack 0
  1233   000006                     putch@data:
  1234                           	callstack 0
  1235   000006                     LED1_Control@state:
  1236                           	callstack 0
  1237   000006                     LED2_Control@state:
  1238                           	callstack 0
  1239   000006                     LED3_Control@state:
  1240                           	callstack 0
  1241   000006                     LED4_Control@state:
  1242                           	callstack 0
  1243   000006                     LED5_Control@state:
  1244                           	callstack 0
  1245   000006                     LED6_Control@state:
  1246                           	callstack 0
  1247   000006                     ___wmul@multiplier:
  1248                           	callstack 0
  1249   000006                     ___awdiv@dividend:
  1250                           	callstack 0
  1251   000006                     ___awmod@dividend:
  1252                           	callstack 0
  1253   000006                     ___lwdiv@dividend:
  1254                           	callstack 0
  1255   000006                     ___lwmod@dividend:
  1256                           	callstack 0
  1257   000006                     memcpy@d1:
  1258                           	callstack 0
  1259   000006                     strcpy@dest:
  1260                           	callstack 0
  1261   000006                     strlen@s:
  1262                           	callstack 0
  1263   000006                     ___fleq@ff1:
  1264                           	callstack 0
  1265   000006                     ___xxtofl@val:
  1266                           	callstack 0
  1267   000006                     ___fpclassifyf@x:
  1268                           	callstack 0
  1269   000006                     labs@a:
  1270                           	callstack 0
  1271   000006                     fabsf@x:
  1272                           	callstack 0
  1273                           
  1274                           ; 4 bytes @ 0x5
  1275   000006                     	ds	1
  1276   000007                     ??_LCD_Init:
  1277   000007                     ??_runGPIO:
  1278   000007                     SPI_write@LSB:
  1279                           	callstack 0
  1280   000007                     LCD_ShowString@textData:
  1281                           	callstack 0
  1282   000007                     fputc@c:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x6
  1286   000007                     	ds	1
  1287   000008                     SPI_write@data:
  1288                           	callstack 0
  1289   000008                     ___wmul@multiplicand:
  1290                           	callstack 0
  1291   000008                     ___awdiv@divisor:
  1292                           	callstack 0
  1293   000008                     ___awmod@divisor:
  1294                           	callstack 0
  1295   000008                     ___lwdiv@divisor:
  1296                           	callstack 0
  1297   000008                     ___lwmod@divisor:
  1298                           	callstack 0
  1299   000008                     memcpy@s1:
  1300                           	callstack 0
  1301   000008                     strcpy@src:
  1302                           	callstack 0
  1303   000008                     strlen@a:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x7
  1307   000008                     	ds	1
  1308   000009                     ??_LCD_ShowString:
  1309   000009                     fputc@fp:
  1310                           	callstack 0
  1311   000009                     runGPIO@states:
  1312                           	callstack 0
  1313                           
  1314                           ; 12 bytes @ 0x8
  1315   000009                     	ds	1
  1316   00000A                     ??___fpclassifyf:
  1317   00000A                     ??_labs:
  1318   00000A                     ??___xxtofl:
  1319   00000A                     ___awdiv@counter:
  1320                           	callstack 0
  1321   00000A                     ___awmod@counter:
  1322                           	callstack 0
  1323   00000A                     ___lwdiv@counter:
  1324                           	callstack 0
  1325   00000A                     ___lwmod@counter:
  1326                           	callstack 0
  1327   00000A                     ___wmul@product:
  1328                           	callstack 0
  1329   00000A                     memcpy@n:
  1330                           	callstack 0
  1331   00000A                     strcpy@d:
  1332                           	callstack 0
  1333   00000A                     ___fleq@ff2:
  1334                           	callstack 0
  1335   00000A                     fabsf@u:
  1336                           	callstack 0
  1337                           
  1338                           ; 4 bytes @ 0x9
  1339   00000A                     	ds	1
  1340   00000B                     ??_fputc:
  1341   00000B                     LCD_ShowString@lineNum:
  1342                           	callstack 0
  1343   00000B                     ___awdiv@sign:
  1344                           	callstack 0
  1345   00000B                     ___awmod@sign:
  1346                           	callstack 0
  1347   00000B                     ___lwdiv@quotient:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0xA
  1351   00000B                     	ds	1
  1352   00000C                     ?_abs:
  1353                           	callstack 0
  1354   00000C                     ?_read_prec_or_width:
  1355                           	callstack 0
  1356   00000C                     LCD_ShowString@i:
  1357                           	callstack 0
  1358   00000C                     read_prec_or_width@fmt:
  1359                           	callstack 0
  1360   00000C                     memcpy@tmp:
  1361                           	callstack 0
  1362   00000C                     ___awdiv@quotient:
  1363                           	callstack 0
  1364   00000C                     abs@a:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0xB
  1368   00000C                     	ds	1
  1369   00000D                     read_prec_or_width@ap:
  1370                           	callstack 0
  1371   00000D                     memcpy@d:
  1372                           	callstack 0
  1373                           
  1374                           ; 2 bytes @ 0xC
  1375   00000D                     	ds	1
  1376   00000E                     ??_runPWM:
  1377   00000E                     ??_abs:
  1378   00000E                     ??___fleq:
  1379   00000E                     ___xxtofl@sign:
  1380                           	callstack 0
  1381   00000E                     read_prec_or_width@c:
  1382                           	callstack 0
  1383   00000E                     ___fpclassifyf@e:
  1384                           	callstack 0
  1385                           
  1386                           ; 2 bytes @ 0xD
  1387   00000E                     	ds	1
  1388   00000F                     ___xxtofl@exp:
  1389                           	callstack 0
  1390   00000F                     read_prec_or_width@n:
  1391                           	callstack 0
  1392   00000F                     memcpy@s:
  1393                           	callstack 0
  1394                           
  1395                           ; 2 bytes @ 0xE
  1396   00000F                     	ds	1
  1397   000010                     runPWM@keepState:
  1398                           	callstack 0
  1399   000010                     stoa@fp:
  1400                           	callstack 0
  1401   000010                     fputs@s:
  1402                           	callstack 0
  1403   000010                     ___xxtofl@arg:
  1404                           	callstack 0
  1405   000010                     ___fpclassifyf@u:
  1406                           	callstack 0
  1407                           
  1408                           ; 4 bytes @ 0xF
  1409   000010                     	ds	1
  1410   000011                     runPWM@multiplier:
  1411                           	callstack 0
  1412                           
  1413                           ; 1 bytes @ 0x10
  1414   000011                     	ds	1
  1415   000012                     stoa@s:
  1416                           	callstack 0
  1417   000012                     fputs@fp:
  1418                           	callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x11
  1421   000012                     	ds	2
  1422   000014                     ??_stoa:
  1423   000014                     ?___flmul:
  1424                           	callstack 0
  1425   000014                     fputs@c:
  1426                           	callstack 0
  1427   000014                     ___flmul@b:
  1428                           	callstack 0
  1429                           
  1430                           ; 4 bytes @ 0x13
  1431   000014                     	ds	1
  1432   000015                     fputs@i:
  1433                           	callstack 0
  1434   000015                     runGPIO@LEDControl:
  1435                           	callstack 0
  1436                           
  1437                           ; 12 bytes @ 0x14
  1438   000015                     	ds	1
  1439   000016                     stoa@p:
  1440                           	callstack 0
  1441                           
  1442                           ; 2 bytes @ 0x15
  1443   000016                     	ds	1
  1444   000017                     pad@fp:
  1445                           	callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x16
  1448   000017                     	ds	1
  1449   000018                     stoa@w:
  1450                           	callstack 0
  1451   000018                     ___flmul@a:
  1452                           	callstack 0
  1453                           
  1454                           ; 4 bytes @ 0x17
  1455   000018                     	ds	1
  1456   000019                     pad@buf:
  1457                           	callstack 0
  1458                           
  1459                           ; 2 bytes @ 0x18
  1460   000019                     	ds	1
  1461   00001A                     stoa@cp:
  1462                           	callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x19
  1465   00001A                     	ds	1
  1466   00001B                     pad@p:
  1467                           	callstack 0
  1468                           
  1469                           ; 2 bytes @ 0x1A
  1470   00001B                     	ds	1
  1471   00001C                     ??___flmul:
  1472   00001C                     stoa@l:
  1473                           	callstack 0
  1474                           
  1475                           ; 2 bytes @ 0x1B
  1476   00001C                     	ds	1
  1477   00001D                     ??_pad:
  1478                           
  1479                           ; 1 bytes @ 0x1C
  1480   00001D                     	ds	1
  1481   00001E                     pad@i:
  1482                           	callstack 0
  1483                           
  1484                           ; 2 bytes @ 0x1D
  1485   00001E                     	ds	2
  1486   000020                     ___flmul@sign:
  1487                           	callstack 0
  1488   000020                     dtoa@fp:
  1489                           	callstack 0
  1490   000020                     utoa@fp:
  1491                           	callstack 0
  1492                           
  1493                           ; 2 bytes @ 0x1F
  1494   000020                     	ds	1
  1495   000021                     runGPIO@GPIOreverse:
  1496                           	callstack 0
  1497   000021                     ___flmul@aexp:
  1498                           	callstack 0
  1499                           
  1500                           ; 1 bytes @ 0x20
  1501   000021                     	ds	1
  1502   000022                     runGPIO@numberOfStates:
  1503                           	callstack 0
  1504   000022                     dtoa@d:
  1505                           	callstack 0
  1506   000022                     utoa@d:
  1507                           	callstack 0
  1508   000022                     ___flmul@grs:
  1509                           	callstack 0
  1510                           
  1511                           ; 4 bytes @ 0x21
  1512   000022                     	ds	2
  1513   000024                     runGPIO@GPIOi:
  1514                           	callstack 0
  1515   000024                     _dtoa$3965:
  1516                           	callstack 0
  1517   000024                     utoa@w:
  1518                           	callstack 0
  1519                           
  1520                           ; 2 bytes @ 0x23
  1521   000024                     	ds	1
  1522   000025                     runGPIO@j:
  1523                           	callstack 0
  1524                           
  1525                           ; 2 bytes @ 0x24
  1526   000025                     	ds	1
  1527   000026                     ___flmul@bexp:
  1528                           	callstack 0
  1529   000026                     dtoa@w:
  1530                           	callstack 0
  1531   000026                     utoa@p:
  1532                           	callstack 0
  1533                           
  1534                           ; 2 bytes @ 0x25
  1535   000026                     	ds	1
  1536   000027                     ___flmul@prod:
  1537                           	callstack 0
  1538                           
  1539                           ; 4 bytes @ 0x26
  1540   000027                     	ds	1
  1541   000028                     dtoa@p:
  1542                           	callstack 0
  1543   000028                     utoa@i:
  1544                           	callstack 0
  1545                           
  1546                           ; 2 bytes @ 0x27
  1547   000028                     	ds	2
  1548   00002A                     dtoa@s:
  1549                           	callstack 0
  1550                           
  1551                           ; 1 bytes @ 0x29
  1552   00002A                     	ds	1
  1553   00002B                     ___flmul@temp:
  1554                           	callstack 0
  1555   00002B                     dtoa@i:
  1556                           	callstack 0
  1557                           
  1558                           ; 2 bytes @ 0x2A
  1559   00002B                     	ds	2
  1560   00002D                     ?___fldiv:
  1561                           	callstack 0
  1562   00002D                     ___flge@ff1:
  1563                           	callstack 0
  1564   00002D                     ___fldiv@b:
  1565                           	callstack 0
  1566                           
  1567                           ; 4 bytes @ 0x2C
  1568   00002D                     	ds	4
  1569   000031                     ___flge@ff2:
  1570                           	callstack 0
  1571   000031                     ___fldiv@a:
  1572                           	callstack 0
  1573                           
  1574                           ; 4 bytes @ 0x30
  1575   000031                     	ds	4
  1576   000035                     ??___fldiv:
  1577   000035                     ??___flge:
  1578                           
  1579                           ; 1 bytes @ 0x34
  1580   000035                     	ds	4
  1581   000039                     ___fldiv@rem:
  1582                           	callstack 0
  1583                           
  1584                           ; 4 bytes @ 0x38
  1585   000039                     	ds	4
  1586   00003D                     ___fldiv@sign:
  1587                           	callstack 0
  1588                           
  1589                           ; 1 bytes @ 0x3C
  1590   00003D                     	ds	1
  1591   00003E                     ___fldiv@new_exp:
  1592                           	callstack 0
  1593                           
  1594                           ; 2 bytes @ 0x3D
  1595   00003E                     	ds	2
  1596   000040                     ___fldiv@grs:
  1597                           	callstack 0
  1598                           
  1599                           ; 4 bytes @ 0x3F
  1600   000040                     	ds	4
  1601   000044                     ___fldiv@bexp:
  1602                           	callstack 0
  1603                           
  1604                           ; 1 bytes @ 0x43
  1605   000044                     	ds	1
  1606   000045                     ___fldiv@aexp:
  1607                           	callstack 0
  1608                           
  1609                           ; 1 bytes @ 0x44
  1610   000045                     	ds	1
  1611   000046                     ?___fladd:
  1612                           	callstack 0
  1613   000046                     ?_floorf:
  1614                           	callstack 0
  1615   000046                     ___fladd@b:
  1616                           	callstack 0
  1617   000046                     floorf@x:
  1618                           	callstack 0
  1619                           
  1620                           ; 4 bytes @ 0x45
  1621   000046                     	ds	4
  1622   00004A                     ??_floorf:
  1623   00004A                     ___fladd@a:
  1624                           	callstack 0
  1625                           
  1626                           ; 4 bytes @ 0x49
  1627   00004A                     	ds	4
  1628   00004E                     ??___fladd:
  1629                           
  1630                           ; 1 bytes @ 0x4D
  1631   00004E                     	ds	4
  1632   000052                     ___fltol@sign1:
  1633                           	callstack 0
  1634                           
  1635                           ; 1 bytes @ 0x51
  1636   000052                     	ds	1
  1637   000053                     ___fltol@exp1:
  1638                           	callstack 0
  1639                           
  1640                           ; 1 bytes @ 0x52
  1641   000053                     	ds	1
  1642   000054                     printf@ap:
  1643                           	callstack 0
  1644                           
  1645                           ; 1 bytes @ 0x53
  1646   000054                     	ds	1
  1647                           
  1648 ;;
  1649 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1650 ;;
  1651 ;; *************** function _main *****************
  1652 ;; Defined at:
  1653 ;;		line 10 in file "main.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  menuI           1   52[BANK1 ] unsigned char 
  1658 ;;  setUpAgain      1   51[BANK1 ] unsigned char 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;Total ram usage:        4 bytes
  1673 ;; Hardware stack levels required when called: 10
  1674 ;; This function calls:
  1675 ;;		_LCD_Init
  1676 ;;		_LCD_ShowString
  1677 ;;		_moveDisplay
  1678 ;;		_runADC
  1679 ;;		_runDAC
  1680 ;;		_runGAME
  1681 ;;		_runGPIO
  1682 ;;		_runMUSIC
  1683 ;;		_runPWM
  1684 ;;		_runUART
  1685 ;; This function is called by:
  1686 ;;		Startup code after reset
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text0
  1691   0028A8                     __ptext0:
  1692                           	callstack 0
  1693   0028A8                     _main:
  1694                           	callstack 21
  1695   0028A8                     
  1696                           ;main.c: 11:     _delay((unsigned long)((100)*(32E6/4000.0)));
  1697   0028A8  0E05               	movlw	5
  1698   0028AA  0100               	movlb	0	; () banked
  1699   0028AC  6FFE               	movwf	(??_main+1)& (0+255),b
  1700   0028AE  0E0F               	movlw	15
  1701   0028B0  6FFD               	movwf	??_main& (0+255),b
  1702   0028B2  0EF1               	movlw	241
  1703   0028B4                     u9857:
  1704   0028B4  2EE8               	decfsz	wreg,f,c
  1705   0028B6  D7FE               	bra	u9857
  1706   0028B8  2FFD               	decfsz	??_main& (0+255),f,b
  1707   0028BA  D7FC               	bra	u9857
  1708   0028BC  2FFE               	decfsz	(??_main+1)& (0+255),f,b
  1709   0028BE  D7FA               	bra	u9857
  1710   0028C0                     
  1711                           ;main.c: 13:     TRISCbits.RC0 = 1;
  1712   0028C0  8094               	bsf	148,0,c	;volatile
  1713   0028C2                     
  1714                           ;main.c: 14:     TRISAbits.RA4 = 1;
  1715   0028C2  8892               	bsf	146,4,c	;volatile
  1716   0028C4                     
  1717                           ;main.c: 15:     TRISAbits.RA3 = 1;
  1718   0028C4  8692               	bsf	146,3,c	;volatile
  1719   0028C6                     
  1720                           ;main.c: 16:     TRISAbits.RA2 = 1;
  1721   0028C6  8492               	bsf	146,2,c	;volatile
  1722   0028C8                     
  1723                           ;main.c: 17:     ANSELAbits.ANSA3 = 0;
  1724   0028C8  010F               	movlb	15	; () banked
  1725   0028CA  9738               	bcf	56,3,b	;volatile
  1726   0028CC                     
  1727                           ; BSR set to: 15
  1728                           ;main.c: 18:     ANSELAbits.ANSA2 = 0;
  1729   0028CC  9538               	bcf	56,2,b	;volatile
  1730   0028CE                     
  1731                           ; BSR set to: 15
  1732                           ;main.c: 21:     TRISDbits.RD2 = 0;
  1733   0028CE  9495               	bcf	149,2,c	;volatile
  1734   0028D0                     
  1735                           ; BSR set to: 15
  1736                           ;main.c: 22:     TRISDbits.RD3 = 0;
  1737   0028D0  9695               	bcf	149,3,c	;volatile
  1738   0028D2                     
  1739                           ; BSR set to: 15
  1740                           ;main.c: 23:     TRISCbits.RC4 = 0;
  1741   0028D2  9894               	bcf	148,4,c	;volatile
  1742   0028D4                     
  1743                           ; BSR set to: 15
  1744                           ;main.c: 24:     TRISDbits.RD4 = 0;
  1745   0028D4  9895               	bcf	149,4,c	;volatile
  1746   0028D6                     
  1747                           ; BSR set to: 15
  1748                           ;main.c: 25:     TRISDbits.RD5 = 0;
  1749   0028D6  9A95               	bcf	149,5,c	;volatile
  1750   0028D8                     
  1751                           ; BSR set to: 15
  1752                           ;main.c: 26:     TRISDbits.RD6 = 0;
  1753   0028D8  9C95               	bcf	149,6,c	;volatile
  1754   0028DA                     
  1755                           ; BSR set to: 15
  1756                           ;main.c: 27:     LATDbits.LD2 = 1;
  1757   0028DA  848C               	bsf	140,2,c	;volatile
  1758   0028DC                     
  1759                           ; BSR set to: 15
  1760                           ;main.c: 28:     LATDbits.LD3 = 1;
  1761   0028DC  868C               	bsf	140,3,c	;volatile
  1762   0028DE                     
  1763                           ; BSR set to: 15
  1764                           ;main.c: 29:     LATCbits.LC4 = 1;
  1765   0028DE  888B               	bsf	139,4,c	;volatile
  1766   0028E0                     
  1767                           ; BSR set to: 15
  1768                           ;main.c: 30:     LATDbits.LD4 = 1;
  1769   0028E0  888C               	bsf	140,4,c	;volatile
  1770   0028E2                     
  1771                           ; BSR set to: 15
  1772                           ;main.c: 31:     LATDbits.LD5 = 1;
  1773   0028E2  8A8C               	bsf	140,5,c	;volatile
  1774   0028E4                     
  1775                           ; BSR set to: 15
  1776                           ;main.c: 32:     LATDbits.LD6 = 1;
  1777   0028E4  8C8C               	bsf	140,6,c	;volatile
  1778   0028E6                     
  1779                           ; BSR set to: 15
  1780                           ;main.c: 35:     LCD_Init();
  1781   0028E6  EC5C  F021         	call	_LCD_Init	;wreg free
  1782   0028EA                     
  1783                           ;main.c: 36:     uint8_t menuI = 0;
  1784   0028EA  0E00               	movlw	0
  1785   0028EC  0101               	movlb	1	; () banked
  1786   0028EE  6FC9               	movwf	main@menuI& (0+255),b
  1787   0028F0                     
  1788                           ; BSR set to: 1
  1789                           ;main.c: 37:     uint8_t setUpAgain = 0;
  1790   0028F0  0E00               	movlw	0
  1791   0028F2  6FC8               	movwf	main@setUpAgain& (0+255),b
  1792   0028F4                     
  1793                           ; BSR set to: 1
  1794                           ;main.c: 44:     menuI = moveDisplay(menuI,0);
  1795   0028F4  0E00               	movlw	0
  1796   0028F6  0100               	movlb	0	; () banked
  1797   0028F8  6FE7               	movwf	moveDisplay@where& (0+255),b
  1798   0028FA  0101               	movlb	1	; () banked
  1799   0028FC  51C9               	movf	main@menuI& (0+255),w,b
  1800   0028FE  EC51  F01E         	call	_moveDisplay
  1801   002902  0101               	movlb	1	; () banked
  1802   002904  6FC9               	movwf	main@menuI& (0+255),b
  1803   002906                     l7816:
  1804                           
  1805                           ; BSR set to: 1
  1806                           ;main.c: 47:         if(PORTCbits.RC0){
  1807   002906  A082               	btfss	130,0,c	;volatile
  1808   002908  EF88  F014         	goto	u9751
  1809   00290C  EF8A  F014         	goto	u9750
  1810   002910                     u9751:
  1811   002910  EFAD  F014         	goto	l52
  1812   002914                     u9750:
  1813   002914                     
  1814                           ; BSR set to: 1
  1815                           ;main.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1816   002914  0E03               	movlw	3
  1817   002916  0100               	movlb	0	; () banked
  1818   002918  6FFE               	movwf	(??_main+1)& (0+255),b
  1819   00291A  0E08               	movlw	8
  1820   00291C  6FFD               	movwf	??_main& (0+255),b
  1821   00291E  0E77               	movlw	119
  1822   002920                     u9867:
  1823   002920  2EE8               	decfsz	wreg,f,c
  1824   002922  D7FE               	bra	u9867
  1825   002924  2FFD               	decfsz	??_main& (0+255),f,b
  1826   002926  D7FC               	bra	u9867
  1827   002928  2FFE               	decfsz	(??_main+1)& (0+255),f,b
  1828   00292A  D7FA               	bra	u9867
  1829   00292C                     
  1830                           ;main.c: 49:             if(PORTCbits.RC0){
  1831   00292C  A082               	btfss	130,0,c	;volatile
  1832   00292E  EF9B  F014         	goto	u9761
  1833   002932  EF9D  F014         	goto	u9760
  1834   002936                     u9761:
  1835   002936  EFAD  F014         	goto	l52
  1836   00293A                     u9760:
  1837   00293A                     
  1838                           ;main.c: 50:                 menuI = moveDisplay(menuI,2);
  1839   00293A  0E02               	movlw	2
  1840   00293C  0100               	movlb	0	; () banked
  1841   00293E  6FE7               	movwf	moveDisplay@where& (0+255),b
  1842   002940  0101               	movlb	1	; () banked
  1843   002942  51C9               	movf	main@menuI& (0+255),w,b
  1844   002944  EC51  F01E         	call	_moveDisplay
  1845   002948  0101               	movlb	1	; () banked
  1846   00294A  6FC9               	movwf	main@menuI& (0+255),b
  1847   00294C                     l54:
  1848   00294C  B082               	btfsc	130,0,c	;volatile
  1849   00294E  EFAB  F014         	goto	u9771
  1850   002952  EFAD  F014         	goto	u9770
  1851   002956                     u9771:
  1852   002956  EFA6  F014         	goto	l54
  1853   00295A                     u9770:
  1854   00295A                     l52:
  1855                           
  1856                           ;main.c: 54:         if(PORTAbits.RA4){
  1857   00295A  A880               	btfss	128,4,c	;volatile
  1858   00295C  EFB2  F014         	goto	u9781
  1859   002960  EFB4  F014         	goto	u9780
  1860   002964                     u9781:
  1861   002964  EFD7  F014         	goto	l57
  1862   002968                     u9780:
  1863   002968                     
  1864                           ;main.c: 55:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1865   002968  0E03               	movlw	3
  1866   00296A  0100               	movlb	0	; () banked
  1867   00296C  6FFE               	movwf	(??_main+1)& (0+255),b
  1868   00296E  0E08               	movlw	8
  1869   002970  6FFD               	movwf	??_main& (0+255),b
  1870   002972  0E77               	movlw	119
  1871   002974                     u9877:
  1872   002974  2EE8               	decfsz	wreg,f,c
  1873   002976  D7FE               	bra	u9877
  1874   002978  2FFD               	decfsz	??_main& (0+255),f,b
  1875   00297A  D7FC               	bra	u9877
  1876   00297C  2FFE               	decfsz	(??_main+1)& (0+255),f,b
  1877   00297E  D7FA               	bra	u9877
  1878   002980                     
  1879                           ;main.c: 56:             if(PORTAbits.RA4){
  1880   002980  A880               	btfss	128,4,c	;volatile
  1881   002982  EFC5  F014         	goto	u9791
  1882   002986  EFC7  F014         	goto	u9790
  1883   00298A                     u9791:
  1884   00298A  EFD7  F014         	goto	l57
  1885   00298E                     u9790:
  1886   00298E                     
  1887                           ;main.c: 57:                 menuI = moveDisplay(menuI,1);
  1888   00298E  0E01               	movlw	1
  1889   002990  0100               	movlb	0	; () banked
  1890   002992  6FE7               	movwf	moveDisplay@where& (0+255),b
  1891   002994  0101               	movlb	1	; () banked
  1892   002996  51C9               	movf	main@menuI& (0+255),w,b
  1893   002998  EC51  F01E         	call	_moveDisplay
  1894   00299C  0101               	movlb	1	; () banked
  1895   00299E  6FC9               	movwf	main@menuI& (0+255),b
  1896   0029A0                     l59:
  1897   0029A0  B880               	btfsc	128,4,c	;volatile
  1898   0029A2  EFD5  F014         	goto	u9801
  1899   0029A6  EFD7  F014         	goto	u9800
  1900   0029AA                     u9801:
  1901   0029AA  EFD0  F014         	goto	l59
  1902   0029AE                     u9800:
  1903   0029AE                     l57:
  1904                           
  1905                           ;main.c: 61:         if(PORTAbits.RA3){
  1906   0029AE  A680               	btfss	128,3,c	;volatile
  1907   0029B0  EFDC  F014         	goto	u9811
  1908   0029B4  EFDE  F014         	goto	u9810
  1909   0029B8                     u9811:
  1910   0029B8  EF94  F015         	goto	l62
  1911   0029BC                     u9810:
  1912   0029BC                     
  1913                           ;main.c: 62:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1914   0029BC  0E03               	movlw	3
  1915   0029BE  0100               	movlb	0	; () banked
  1916   0029C0  6FFE               	movwf	(??_main+1)& (0+255),b
  1917   0029C2  0E08               	movlw	8
  1918   0029C4  6FFD               	movwf	??_main& (0+255),b
  1919   0029C6  0E77               	movlw	119
  1920   0029C8                     u9887:
  1921   0029C8  2EE8               	decfsz	wreg,f,c
  1922   0029CA  D7FE               	bra	u9887
  1923   0029CC  2FFD               	decfsz	??_main& (0+255),f,b
  1924   0029CE  D7FC               	bra	u9887
  1925   0029D0  2FFE               	decfsz	(??_main+1)& (0+255),f,b
  1926   0029D2  D7FA               	bra	u9887
  1927   0029D4                     
  1928                           ;main.c: 63:             if(PORTAbits.RA3){
  1929   0029D4  A680               	btfss	128,3,c	;volatile
  1930   0029D6  EFEF  F014         	goto	u9821
  1931   0029DA  EFF1  F014         	goto	u9820
  1932   0029DE                     u9821:
  1933   0029DE  EF94  F015         	goto	l62
  1934   0029E2                     u9820:
  1935   0029E2                     l64:
  1936   0029E2  B680               	btfsc	128,3,c	;volatile
  1937   0029E4  EFF6  F014         	goto	u9831
  1938   0029E8  EFF8  F014         	goto	u9830
  1939   0029EC                     u9831:
  1940   0029EC  EFF1  F014         	goto	l64
  1941   0029F0                     u9830:
  1942   0029F0  EF74  F015         	goto	l7880
  1943   0029F4                     l7836:
  1944                           
  1945                           ; BSR set to: 1
  1946                           ;main.c: 67:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  1947   0029F4  0E59               	movlw	low STR_1
  1948   0029F6  6E07               	movwf	LCD_ShowString@textData^0,c
  1949   0029F8  0EFF               	movlw	high STR_1
  1950   0029FA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1951   0029FC  0E01               	movlw	1
  1952   0029FE  EC90  F022         	call	_LCD_ShowString
  1953                           
  1954                           ;main.c: 68:                         LCD_ShowString((char)2, "                ");
  1955   002A02  0E37               	movlw	low STR_2
  1956   002A04  6E07               	movwf	LCD_ShowString@textData^0,c
  1957   002A06  0EFF               	movlw	high STR_2
  1958   002A08  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1959   002A0A  0E02               	movlw	2
  1960   002A0C  EC90  F022         	call	_LCD_ShowString
  1961   002A10                     
  1962                           ;main.c: 69:                         runGPIO();
  1963   002A10  EC40  F01C         	call	_runGPIO	;wreg free
  1964   002A14                     l7840:
  1965                           
  1966                           ;main.c: 70:                         setUpAgain = 1;
  1967   002A14  0E01               	movlw	1
  1968   002A16  0101               	movlb	1	; () banked
  1969   002A18  6FC8               	movwf	main@setUpAgain& (0+255),b
  1970                           
  1971                           ;main.c: 71:                         break;
  1972   002A1A  EF94  F015         	goto	l62
  1973   002A1E                     l7842:
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;main.c: 73:                         LCD_ShowString((char)1, "BR: 19200       ");
  1977   002A1E  0E48               	movlw	low STR_3
  1978   002A20  6E07               	movwf	LCD_ShowString@textData^0,c
  1979   002A22  0EFF               	movlw	high STR_3
  1980   002A24  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1981   002A26  0E01               	movlw	1
  1982   002A28  EC90  F022         	call	_LCD_ShowString
  1983                           
  1984                           ;main.c: 74:                         LCD_ShowString((char)2, "Konec - new line");
  1985   002A2C  0E9D               	movlw	low STR_4
  1986   002A2E  6E07               	movwf	LCD_ShowString@textData^0,c
  1987   002A30  0EFF               	movlw	high STR_4
  1988   002A32  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1989   002A34  0E02               	movlw	2
  1990   002A36  EC90  F022         	call	_LCD_ShowString
  1991   002A3A                     
  1992                           ;main.c: 75:                         runUART();
  1993   002A3A  ECF8  F01C         	call	_runUART	;wreg free
  1994   002A3E  EF0A  F015         	goto	l7840
  1995   002A42                     l7848:
  1996                           
  1997                           ; BSR set to: 1
  1998                           ;main.c: 79:                         LCD_ShowString((char)1, "Zmacknete BTN2  ");
  1999   002A42  0E6A               	movlw	low STR_5
  2000   002A44  6E07               	movwf	LCD_ShowString@textData^0,c
  2001   002A46  0EFF               	movlw	high STR_5
  2002   002A48  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2003   002A4A  0E01               	movlw	1
  2004   002A4C  EC90  F022         	call	_LCD_ShowString
  2005                           
  2006                           ;main.c: 80:                         LCD_ShowString((char)2, "                ");
  2007   002A50  0E37               	movlw	low STR_2
  2008   002A52  6E07               	movwf	LCD_ShowString@textData^0,c
  2009   002A54  0EFF               	movlw	high STR_2
  2010   002A56  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2011   002A58  0E02               	movlw	2
  2012   002A5A  EC90  F022         	call	_LCD_ShowString
  2013   002A5E                     
  2014                           ;main.c: 81:                         runPWM();
  2015   002A5E  ECAE  F01D         	call	_runPWM	;wreg free
  2016   002A62  EF0A  F015         	goto	l7840
  2017   002A66                     l7854:
  2018                           
  2019                           ; BSR set to: 1
  2020                           ;main.c: 85:                         LCD_ShowString((char)1, "Volty na POTech:");
  2021   002A66  0E8C               	movlw	low STR_7
  2022   002A68  6E07               	movwf	LCD_ShowString@textData^0,c
  2023   002A6A  0EFF               	movlw	high STR_7
  2024   002A6C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2025   002A6E  0E01               	movlw	1
  2026   002A70  EC90  F022         	call	_LCD_ShowString
  2027   002A74                     
  2028                           ;main.c: 86:                         runADC();
  2029   002A74  ECD1  F017         	call	_runADC	;wreg free
  2030   002A78  EF0A  F015         	goto	l7840
  2031   002A7C                     l7860:
  2032                           
  2033                           ; BSR set to: 1
  2034                           ;main.c: 90:                         LCD_ShowString((char)1, "RB0-A2, BR:19200");
  2035   002A7C  0E7B               	movlw	low STR_8
  2036   002A7E  6E07               	movwf	LCD_ShowString@textData^0,c
  2037   002A80  0EFF               	movlw	high STR_8
  2038   002A82  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2039   002A84  0E01               	movlw	1
  2040   002A86  EC90  F022         	call	_LCD_ShowString
  2041                           
  2042                           ;main.c: 91:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  2043   002A8A  0EAE               	movlw	low STR_9
  2044   002A8C  6E07               	movwf	LCD_ShowString@textData^0,c
  2045   002A8E  0EFF               	movlw	high STR_9
  2046   002A90  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2047   002A92  0E02               	movlw	2
  2048   002A94  EC90  F022         	call	_LCD_ShowString
  2049   002A98                     
  2050                           ;main.c: 92:                         runDAC();
  2051   002A98  ECE0  F012         	call	_runDAC	;wreg free
  2052   002A9C  EF0A  F015         	goto	l7840
  2053   002AA0                     l7866:
  2054                           
  2055                           ; BSR set to: 1
  2056                           ;main.c: 96:                         LCD_ShowString((char)1, "                ");
  2057   002AA0  0E37               	movlw	low STR_2
  2058   002AA2  6E07               	movwf	LCD_ShowString@textData^0,c
  2059   002AA4  0EFF               	movlw	high STR_2
  2060   002AA6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2061   002AA8  0E01               	movlw	1
  2062   002AAA  EC90  F022         	call	_LCD_ShowString
  2063                           
  2064                           ;main.c: 97:                         LCD_ShowString((char)2, "                ");
  2065   002AAE  0E37               	movlw	low STR_2
  2066   002AB0  6E07               	movwf	LCD_ShowString@textData^0,c
  2067   002AB2  0EFF               	movlw	high STR_2
  2068   002AB4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2069   002AB6  0E02               	movlw	2
  2070   002AB8  EC90  F022         	call	_LCD_ShowString
  2071   002ABC                     
  2072                           ;main.c: 98:                         runGAME();
  2073   002ABC  ECDA  F01E         	call	_runGAME	;wreg free
  2074   002AC0  EF0A  F015         	goto	l7840
  2075   002AC4                     l7872:
  2076                           
  2077                           ; BSR set to: 1
  2078                           ;main.c: 102:                         LCD_ShowString((char)1, "                ");
  2079   002AC4  0E37               	movlw	low STR_2
  2080   002AC6  6E07               	movwf	LCD_ShowString@textData^0,c
  2081   002AC8  0EFF               	movlw	high STR_2
  2082   002ACA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2083   002ACC  0E01               	movlw	1
  2084   002ACE  EC90  F022         	call	_LCD_ShowString
  2085                           
  2086                           ;main.c: 103:                         LCD_ShowString((char)2, "                ");
  2087   002AD2  0E37               	movlw	low STR_2
  2088   002AD4  6E07               	movwf	LCD_ShowString@textData^0,c
  2089   002AD6  0EFF               	movlw	high STR_2
  2090   002AD8  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2091   002ADA  0E02               	movlw	2
  2092   002ADC  EC90  F022         	call	_LCD_ShowString
  2093   002AE0                     
  2094                           ;main.c: 104:                         runMUSIC();
  2095   002AE0  ECF4  F026         	call	_runMUSIC	;wreg free
  2096   002AE4  EF0A  F015         	goto	l7840
  2097   002AE8                     l7880:
  2098   002AE8  0101               	movlb	1	; () banked
  2099   002AEA  51C9               	movf	main@menuI& (0+255),w,b
  2100                           
  2101                           ; Switch size 1, requested type "simple"
  2102                           ; Number of cases is 7, Range of values is 0 to 6
  2103                           ; switch strategies available:
  2104                           ; Name         Instructions Cycles
  2105                           ; simple_byte           22    12 (average)
  2106                           ;	Chosen strategy is simple_byte
  2107   002AEC  0A00               	xorlw	0	; case 0
  2108   002AEE  B4D8               	btfsc	status,2,c
  2109   002AF0  EFFA  F014         	goto	l7836
  2110   002AF4  0A01               	xorlw	1	; case 1
  2111   002AF6  B4D8               	btfsc	status,2,c
  2112   002AF8  EF0F  F015         	goto	l7842
  2113   002AFC  0A03               	xorlw	3	; case 2
  2114   002AFE  B4D8               	btfsc	status,2,c
  2115   002B00  EF21  F015         	goto	l7848
  2116   002B04  0A01               	xorlw	1	; case 3
  2117   002B06  B4D8               	btfsc	status,2,c
  2118   002B08  EF33  F015         	goto	l7854
  2119   002B0C  0A07               	xorlw	7	; case 4
  2120   002B0E  B4D8               	btfsc	status,2,c
  2121   002B10  EF3E  F015         	goto	l7860
  2122   002B14  0A01               	xorlw	1	; case 5
  2123   002B16  B4D8               	btfsc	status,2,c
  2124   002B18  EF50  F015         	goto	l7866
  2125   002B1C  0A03               	xorlw	3	; case 6
  2126   002B1E  B4D8               	btfsc	status,2,c
  2127   002B20  EF62  F015         	goto	l7872
  2128   002B24  EF94  F015         	goto	l62
  2129   002B28                     l62:
  2130                           
  2131                           ;main.c: 111:         if(PORTAbits.RA2){
  2132   002B28  5080               	movf	128,w,c	;volatile
  2133   002B2A                     
  2134                           ;main.c: 115:         if(setUpAgain){
  2135   002B2A  0101               	movlb	1	; () banked
  2136   002B2C  51C8               	movf	main@setUpAgain& (0+255),w,b
  2137   002B2E  B4D8               	btfsc	status,2,c
  2138   002B30  EF9C  F015         	goto	u9841
  2139   002B34  EF9E  F015         	goto	u9840
  2140   002B38                     u9841:
  2141   002B38  EF83  F014         	goto	l7816
  2142   002B3C                     u9840:
  2143   002B3C                     
  2144                           ; BSR set to: 1
  2145                           ;main.c: 116:         menuI = moveDisplay(menuI,0);
  2146   002B3C  0E00               	movlw	0
  2147   002B3E  0100               	movlb	0	; () banked
  2148   002B40  6FE7               	movwf	moveDisplay@where& (0+255),b
  2149   002B42  0101               	movlb	1	; () banked
  2150   002B44  51C9               	movf	main@menuI& (0+255),w,b
  2151   002B46  EC51  F01E         	call	_moveDisplay
  2152   002B4A  0101               	movlb	1	; () banked
  2153   002B4C  6FC9               	movwf	main@menuI& (0+255),b
  2154   002B4E                     
  2155                           ; BSR set to: 1
  2156                           ;main.c: 117:         setUpAgain = 0;
  2157   002B4E  0E00               	movlw	0
  2158   002B50  6FC8               	movwf	main@setUpAgain& (0+255),b
  2159   002B52  EF83  F014         	goto	l7816
  2160   002B56  EF8A  F000         	goto	start
  2161   002B5A                     __end_of_main:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _runUART *****************
  2165 ;; Defined at:
  2166 ;;		line 4 in file "UART.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  p               2  152[BANK0 ] int 
  2171 ;;  i               2  150[BANK0 ] unsigned int 
  2172 ;;  reversed       31  116[BANK0 ] unsigned char [31]
  2173 ;;  len             2  148[BANK0 ] unsigned int 
  2174 ;;  keepState       1  147[BANK0 ] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;Total ram usage:       40 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 9
  2191 ;; This function calls:
  2192 ;;		_printf
  2193 ;;		_strlen
  2194 ;; This function is called by:
  2195 ;;		_main
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text1
  2200   0039F0                     __ptext1:
  2201                           	callstack 0
  2202   0039F0                     _runUART:
  2203                           	callstack 21
  2204   0039F0                     
  2205                           ;UART.c: 6:     TRISAbits.RA2 = 1;
  2206   0039F0  8492               	bsf	146,2,c	;volatile
  2207                           
  2208                           ;UART.c: 8:     ANSELCbits.ANSC6 = 0;
  2209   0039F2  010F               	movlb	15	; () banked
  2210   0039F4  9D3A               	bcf	58,6,b	;volatile
  2211                           
  2212                           ;UART.c: 9:     ANSELCbits.ANSC7 = 0;
  2213   0039F6  9F3A               	bcf	58,7,b	;volatile
  2214                           
  2215                           ;UART.c: 10:     TRISCbits.TRISC6 = 1;
  2216   0039F8  8C94               	bsf	148,6,c	;volatile
  2217                           
  2218                           ;UART.c: 11:     TRISCbits.TRISC7 = 1;
  2219   0039FA  8E94               	bsf	148,7,c	;volatile
  2220   0039FC                     
  2221                           ; BSR set to: 15
  2222                           ;UART.c: 14:     SPBRG1 = 25;
  2223   0039FC  0E19               	movlw	25
  2224   0039FE  6EAF               	movwf	175,c	;volatile
  2225   003A00                     
  2226                           ; BSR set to: 15
  2227                           ;UART.c: 16:     TXSTA1bits.SYNC = 0;
  2228   003A00  98AC               	bcf	172,4,c	;volatile
  2229   003A02                     
  2230                           ; BSR set to: 15
  2231                           ;UART.c: 17:     RCSTA1bits.SPEN = 1;
  2232   003A02  8EAB               	bsf	171,7,c	;volatile
  2233   003A04                     
  2234                           ; BSR set to: 15
  2235                           ;UART.c: 18:     TXSTA1bits.TXEN = 1;
  2236   003A04  8AAC               	bsf	172,5,c	;volatile
  2237   003A06                     
  2238                           ; BSR set to: 15
  2239                           ;UART.c: 19:     RCSTA1bits.CREN = 1;
  2240   003A06  88AB               	bsf	171,4,c	;volatile
  2241                           
  2242                           ;UART.c: 21:     UARTIE = 1;
  2243   003A08  0E01               	movlw	1
  2244   003A0A  0101               	movlb	1	; () banked
  2245   003A0C  6F23               	movwf	_UARTIE& (0+255),b
  2246   003A0E                     
  2247                           ; BSR set to: 1
  2248                           ;UART.c: 22:     RC1IE = 1;
  2249   003A0E  8A9D               	bsf	3997,5,c	;volatile
  2250   003A10                     
  2251                           ; BSR set to: 1
  2252                           ;UART.c: 23:     PEIE = 1;
  2253   003A10  8CF2               	bsf	4082,6,c	;volatile
  2254   003A12                     
  2255                           ; BSR set to: 1
  2256                           ;UART.c: 24:     GIE = 1;
  2257   003A12  8EF2               	bsf	4082,7,c	;volatile
  2258                           
  2259                           ;UART.c: 26:     uint8_t keepState = 1;
  2260   003A14  0E01               	movlw	1
  2261   003A16  0100               	movlb	0	; () banked
  2262   003A18  6FF3               	movwf	runUART@keepState& (0+255),b
  2263                           
  2264                           ;UART.c: 28:     while(keepState){
  2265   003A1A  EF9B  F01D         	goto	l538
  2266   003A1E                     l7536:
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;UART.c: 29:         if(gmail.full){
  2270   003A1E  0101               	movlb	1	; () banked
  2271   003A20  5194               	movf	(_gmail+31)& (0+255),w,b	;volatile
  2272   003A22  B4D8               	btfsc	status,2,c
  2273   003A24  EF16  F01D         	goto	u9371
  2274   003A28  EF18  F01D         	goto	u9370
  2275   003A2C                     u9371:
  2276   003A2C  EF77  F01D         	goto	l540
  2277   003A30                     u9370:
  2278   003A30                     
  2279                           ; BSR set to: 1
  2280                           ;UART.c: 30:             char reversed[31];;UART.c: 31:             size_t len = strlen(
      +                          (const char*)gmail.data);
  2281   003A30  0E75               	movlw	low _gmail
  2282   003A32  6E06               	movwf	strlen@s^0,c
  2283   003A34  0E01               	movlw	high _gmail
  2284   003A36  6E07               	movwf	(strlen@s+1)^0,c
  2285   003A38  EC0B  F026         	call	_strlen	;wreg free
  2286   003A3C  C006  F0F4         	movff	?_strlen,runUART@len
  2287   003A40  C007  F0F5         	movff	?_strlen+1,runUART@len+1
  2288   003A44                     
  2289                           ;UART.c: 33:             for(size_t i = 0; i < len; i++) {
  2290   003A44  0E00               	movlw	0
  2291   003A46  0100               	movlb	0	; () banked
  2292   003A48  6FF7               	movwf	(runUART@i+1)& (0+255),b
  2293   003A4A  0E00               	movlw	0
  2294   003A4C  6FF6               	movwf	runUART@i& (0+255),b
  2295   003A4E  EF3F  F01D         	goto	l7546
  2296   003A52                     l7542:
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;UART.c: 34:                 reversed[i] = gmail.data[len - 1 - i];
  2300   003A52  0E74               	movlw	low (_gmail+65535)
  2301   003A54  6FD2               	movwf	??_runUART& (0+255),b
  2302   003A56  0E01               	movlw	high (_gmail+65535)
  2303   003A58  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2304   003A5A  51F6               	movf	runUART@i& (0+255),w,b
  2305   003A5C  5FD2               	subwf	??_runUART& (0+255),f,b
  2306   003A5E  51F7               	movf	(runUART@i+1)& (0+255),w,b
  2307   003A60  5BD3               	subwfb	(??_runUART+1)& (0+255),f,b
  2308   003A62  51F4               	movf	runUART@len& (0+255),w,b
  2309   003A64  25D2               	addwf	??_runUART& (0+255),w,b
  2310   003A66  6ED9               	movwf	fsr2l,c
  2311   003A68  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2312   003A6A  21D3               	addwfc	(??_runUART+1)& (0+255),w,b
  2313   003A6C  6EDA               	movwf	fsr2h,c
  2314   003A6E  51F6               	movf	runUART@i& (0+255),w,b
  2315   003A70  0FD4               	addlw	low runUART@reversed
  2316   003A72  6EE1               	movwf	fsr1l,c
  2317   003A74  6AE2               	clrf	fsr1h,c
  2318   003A76  CFDF FFE7          	movff	indf2,indf1
  2319   003A7A                     
  2320                           ; BSR set to: 0
  2321                           ;UART.c: 35:             }
  2322   003A7A  4BF6               	infsnz	runUART@i& (0+255),f,b
  2323   003A7C  2BF7               	incf	(runUART@i+1)& (0+255),f,b
  2324   003A7E                     l7546:
  2325                           
  2326                           ; BSR set to: 0
  2327   003A7E  51F4               	movf	runUART@len& (0+255),w,b
  2328   003A80  5DF6               	subwf	runUART@i& (0+255),w,b
  2329   003A82  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2330   003A84  59F7               	subwfb	(runUART@i+1)& (0+255),w,b
  2331   003A86  A0D8               	btfss	status,0,c
  2332   003A88  EF48  F01D         	goto	u9381
  2333   003A8C  EF4A  F01D         	goto	u9380
  2334   003A90                     u9381:
  2335   003A90  EF29  F01D         	goto	l7542
  2336   003A94                     u9380:
  2337   003A94                     
  2338                           ; BSR set to: 0
  2339                           ;UART.c: 36:             reversed[len] = '\0';
  2340   003A94  51F4               	movf	runUART@len& (0+255),w,b
  2341   003A96  0FD4               	addlw	low runUART@reversed
  2342   003A98  6ED9               	movwf	fsr2l,c
  2343   003A9A  6ADA               	clrf	fsr2h,c
  2344   003A9C  6ADF               	clrf	indf2,c
  2345   003A9E                     
  2346                           ; BSR set to: 0
  2347                           ;UART.c: 37:             printf("%s \n", reversed);
  2348   003A9E  0ED2               	movlw	low STR_26
  2349   003AA0  6FCE               	movwf	printf@fmt& (0+255),b
  2350   003AA2  0EFF               	movlw	high STR_26
  2351   003AA4  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  2352   003AA6  0ED4               	movlw	low runUART@reversed
  2353   003AA8  6FD0               	movwf	(?_printf+2)& (0+255),b
  2354   003AAA  6BD1               	clrf	(?_printf+3)& (0+255),b
  2355   003AAC  ECAF  F026         	call	_printf	;wreg free
  2356   003AB0                     
  2357                           ;UART.c: 39:             gmail.full = 0;
  2358   003AB0  0E00               	movlw	0
  2359   003AB2  0101               	movlb	1	; () banked
  2360   003AB4  6F94               	movwf	(_gmail+31)& (0+255),b	;volatile
  2361   003AB6                     
  2362                           ; BSR set to: 1
  2363                           ;UART.c: 41:             for(int p = 0; p < 31; p++) {
  2364   003AB6  0E00               	movlw	0
  2365   003AB8  0100               	movlb	0	; () banked
  2366   003ABA  6FF9               	movwf	(runUART@p+1)& (0+255),b
  2367   003ABC  0E00               	movlw	0
  2368   003ABE  6FF8               	movwf	runUART@p& (0+255),b
  2369   003AC0                     l7560:
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;UART.c: 42:                 gmail.data[p] = '\0';
  2373   003AC0  0E75               	movlw	low _gmail
  2374   003AC2  25F8               	addwf	runUART@p& (0+255),w,b
  2375   003AC4  6ED9               	movwf	fsr2l,c
  2376   003AC6  0E01               	movlw	high _gmail
  2377   003AC8  21F9               	addwfc	(runUART@p+1)& (0+255),w,b
  2378   003ACA  6EDA               	movwf	fsr2h,c
  2379   003ACC  6ADF               	clrf	indf2,c
  2380   003ACE                     
  2381                           ; BSR set to: 0
  2382                           ;UART.c: 43:             }
  2383   003ACE  4BF8               	infsnz	runUART@p& (0+255),f,b
  2384   003AD0  2BF9               	incf	(runUART@p+1)& (0+255),f,b
  2385   003AD2                     
  2386                           ; BSR set to: 0
  2387   003AD2  BFF9               	btfsc	(runUART@p+1)& (0+255),7,b
  2388   003AD4  EF75  F01D         	goto	u9391
  2389   003AD8  51F9               	movf	(runUART@p+1)& (0+255),w,b
  2390   003ADA  E109               	bnz	u9390
  2391   003ADC  0E1F               	movlw	31
  2392   003ADE  5DF8               	subwf	runUART@p& (0+255),w,b
  2393   003AE0  A0D8               	btfss	status,0,c
  2394   003AE2  EF75  F01D         	goto	u9391
  2395   003AE6  EF77  F01D         	goto	u9390
  2396   003AEA                     u9391:
  2397   003AEA  EF60  F01D         	goto	l7560
  2398   003AEE                     u9390:
  2399   003AEE                     l540:
  2400                           
  2401                           ;UART.c: 47:         if(PORTAbits.RA2){
  2402   003AEE  A480               	btfss	128,2,c	;volatile
  2403   003AF0  EF7C  F01D         	goto	u9401
  2404   003AF4  EF7E  F01D         	goto	u9400
  2405   003AF8                     u9401:
  2406   003AF8  EF9B  F01D         	goto	l538
  2407   003AFC                     u9400:
  2408   003AFC                     
  2409                           ;UART.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2410   003AFC  0E03               	movlw	3
  2411   003AFE  0100               	movlb	0	; () banked
  2412   003B00  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2413   003B02  0E08               	movlw	8
  2414   003B04  6FD2               	movwf	??_runUART& (0+255),b
  2415   003B06  0E77               	movlw	119
  2416   003B08                     u9897:
  2417   003B08  2EE8               	decfsz	wreg,f,c
  2418   003B0A  D7FE               	bra	u9897
  2419   003B0C  2FD2               	decfsz	??_runUART& (0+255),f,b
  2420   003B0E  D7FC               	bra	u9897
  2421   003B10  2FD3               	decfsz	(??_runUART+1)& (0+255),f,b
  2422   003B12  D7FA               	bra	u9897
  2423   003B14                     
  2424                           ;UART.c: 49:             if(PORTAbits.RA2){
  2425   003B14  A480               	btfss	128,2,c	;volatile
  2426   003B16  EF8F  F01D         	goto	u9411
  2427   003B1A  EF91  F01D         	goto	u9410
  2428   003B1E                     u9411:
  2429   003B1E  EF9B  F01D         	goto	l538
  2430   003B22                     u9410:
  2431   003B22                     l548:
  2432   003B22  B480               	btfsc	128,2,c	;volatile
  2433   003B24  EF96  F01D         	goto	u9421
  2434   003B28  EF98  F01D         	goto	u9420
  2435   003B2C                     u9421:
  2436   003B2C  EF91  F01D         	goto	l548
  2437   003B30                     u9420:
  2438   003B30                     
  2439                           ;UART.c: 51:                 keepState = 0;
  2440   003B30  0E00               	movlw	0
  2441   003B32  0100               	movlb	0	; () banked
  2442   003B34  6FF3               	movwf	runUART@keepState& (0+255),b
  2443   003B36                     l538:
  2444                           
  2445                           ;UART.c: 28:     while(keepState){
  2446   003B36  0100               	movlb	0	; () banked
  2447   003B38  51F3               	movf	runUART@keepState& (0+255),w,b
  2448   003B3A  A4D8               	btfss	status,2,c
  2449   003B3C  EFA2  F01D         	goto	u9431
  2450   003B40  EFA4  F01D         	goto	u9430
  2451   003B44                     u9431:
  2452   003B44  EF0F  F01D         	goto	l7536
  2453   003B48                     u9430:
  2454   003B48                     
  2455                           ; BSR set to: 0
  2456                           ;UART.c: 58:     RCSTA1bits.SPEN = 0;
  2457   003B48  9EAB               	bcf	171,7,c	;volatile
  2458                           
  2459                           ;UART.c: 59:     TXSTA1bits.TXEN = 0;
  2460   003B4A  9AAC               	bcf	172,5,c	;volatile
  2461                           
  2462                           ;UART.c: 60:     RCSTA1bits.CREN = 0;
  2463   003B4C  98AB               	bcf	171,4,c	;volatile
  2464   003B4E                     
  2465                           ; BSR set to: 0
  2466                           ;UART.c: 61:     UARTIE = 0;
  2467   003B4E  0E00               	movlw	0
  2468   003B50  0101               	movlb	1	; () banked
  2469   003B52  6F23               	movwf	_UARTIE& (0+255),b
  2470   003B54                     
  2471                           ; BSR set to: 1
  2472                           ;UART.c: 62:     RC1IE = 0;
  2473   003B54  9A9D               	bcf	3997,5,c	;volatile
  2474   003B56                     
  2475                           ; BSR set to: 1
  2476                           ;UART.c: 63:     PEIE = 0;
  2477   003B56  9CF2               	bcf	4082,6,c	;volatile
  2478   003B58                     
  2479                           ; BSR set to: 1
  2480                           ;UART.c: 64:     GIE = 0;
  2481   003B58  9EF2               	bcf	4082,7,c	;volatile
  2482   003B5A                     
  2483                           ; BSR set to: 1
  2484   003B5A  0012               	return		;funcret
  2485   003B5C                     __end_of_runUART:
  2486                           	callstack 0
  2487                           
  2488 ;; *************** function _strlen *****************
  2489 ;; Defined at:
  2490 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strlen.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;  s               2    5[COMRAM] PTR const unsigned char 
  2493 ;;		 -> gmail$data(31), gmail(32), 
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  a               2    7[COMRAM] PTR const unsigned char 
  2496 ;;		 -> gmail$data(31), gmail(32), 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  2    5[COMRAM] unsigned int 
  2499 ;; Registers used:
  2500 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2509 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;Total ram usage:        4 bytes
  2511 ;; Hardware stack levels used: 1
  2512 ;; Hardware stack levels required when called: 1
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_runUART
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text2
  2521   004C16                     __ptext2:
  2522                           	callstack 0
  2523   004C16                     _strlen:
  2524                           	callstack 28
  2525   004C16  C006  F008         	movff	strlen@s,strlen@a
  2526   004C1A  C007  F009         	movff	strlen@s+1,strlen@a+1
  2527   004C1E  EF13  F026         	goto	l7470
  2528   004C22                     l7468:
  2529   004C22  4A06               	infsnz	strlen@s^0,f,c
  2530   004C24  2A07               	incf	(strlen@s+1)^0,f,c
  2531   004C26                     l7470:
  2532   004C26  C006  FFD9         	movff	strlen@s,fsr2l
  2533   004C2A  C007  FFDA         	movff	strlen@s+1,fsr2h
  2534   004C2E  50DF               	movf	indf2,w,c
  2535   004C30  A4D8               	btfss	status,2,c
  2536   004C32  EF1D  F026         	goto	u9311
  2537   004C36  EF1F  F026         	goto	u9310
  2538   004C3A                     u9311:
  2539   004C3A  EF11  F026         	goto	l7468
  2540   004C3E                     u9310:
  2541   004C3E  5008               	movf	strlen@a^0,w,c
  2542   004C40  5C06               	subwf	strlen@s^0,w,c
  2543   004C42  6E06               	movwf	?_strlen^0,c
  2544   004C44  5009               	movf	(strlen@a+1)^0,w,c
  2545   004C46  5807               	subwfb	(strlen@s+1)^0,w,c
  2546   004C48  6E07               	movwf	(?_strlen+1)^0,c
  2547   004C4A  0012               	return		;funcret
  2548   004C4C                     __end_of_strlen:
  2549                           	callstack 0
  2550                           
  2551 ;; *************** function _runPWM *****************
  2552 ;; Defined at:
  2553 ;;		line 11 in file "PWM.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;		None
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  multiplier      1   16[COMRAM] unsigned char 
  2558 ;;  keepState       1   15[COMRAM] unsigned char 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;Total ram usage:        4 bytes
  2573 ;; Hardware stack levels used: 1
  2574 ;; Hardware stack levels required when called: 2
  2575 ;; This function calls:
  2576 ;;		___awdiv
  2577 ;; This function is called by:
  2578 ;;		_main
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text3
  2583   003B5C                     __ptext3:
  2584                           	callstack 0
  2585   003B5C                     _runPWM:
  2586                           	callstack 28
  2587   003B5C                     
  2588                           ;PWM.c: 13:     TRISCbits.RC2 = 1;
  2589   003B5C  8494               	bsf	148,2,c	;volatile
  2590   003B5E                     
  2591                           ;PWM.c: 14:     CCPTMRS0bits.C1TSEL = 0b00;
  2592   003B5E  0EFC               	movlw	-4
  2593   003B60  010F               	movlb	15	; () banked
  2594   003B62  1749               	andwf	73,f,b	;volatile
  2595                           
  2596                           ;PWM.c: 15:     PR2 = 199;
  2597   003B64  0EC7               	movlw	199
  2598   003B66  6EBB               	movwf	187,c	;volatile
  2599                           
  2600                           ;PWM.c: 16:     CCP1CONbits.CCP1M |= 0b1100;
  2601   003B68  0E0C               	movlw	12
  2602   003B6A  12BD               	iorwf	189,f,c	;volatile
  2603                           
  2604                           ;PWM.c: 17:     CCP1CONbits.P1M = 0b10;
  2605   003B6C  50BD               	movf	189,w,c	;volatile
  2606   003B6E  0B3F               	andlw	-193
  2607   003B70  0980               	iorlw	128
  2608   003B72  6EBD               	movwf	189,c	;volatile
  2609                           
  2610                           ;PWM.c: 18:     CCPR1L = 0;
  2611   003B74  0E00               	movlw	0
  2612   003B76  6EBE               	movwf	190,c	;volatile
  2613   003B78                     
  2614                           ; BSR set to: 15
  2615                           ;PWM.c: 19:     TMR2IF = 0;
  2616   003B78  929E               	bcf	3998,1,c	;volatile
  2617   003B7A                     
  2618                           ; BSR set to: 15
  2619                           ;PWM.c: 20:     TMR2ON = 1;
  2620   003B7A  84BA               	bsf	4026,2,c	;volatile
  2621   003B7C                     l482:
  2622   003B7C  A29E               	btfss	3998,1,c	;volatile
  2623   003B7E  EFC3  F01D         	goto	u9441
  2624   003B82  EFC5  F01D         	goto	u9440
  2625   003B86                     u9441:
  2626   003B86  EFBE  F01D         	goto	l482
  2627   003B8A                     u9440:
  2628   003B8A                     
  2629                           ;PWM.c: 22:     TRISCbits.RC2 = 1;
  2630   003B8A  8494               	bsf	148,2,c	;volatile
  2631                           
  2632                           ;PWM.c: 25:     TRISAbits.RA4 = 1;
  2633   003B8C  8892               	bsf	146,4,c	;volatile
  2634                           
  2635                           ;PWM.c: 26:     TRISAbits.RA2 = 1;
  2636   003B8E  8492               	bsf	146,2,c	;volatile
  2637                           
  2638                           ;PWM.c: 28:     TRISDbits.RD2 = 0;
  2639   003B90  9495               	bcf	149,2,c	;volatile
  2640                           
  2641                           ;PWM.c: 29:     TRISDbits.RD3 = 0;
  2642   003B92  9695               	bcf	149,3,c	;volatile
  2643                           
  2644                           ;PWM.c: 30:     TRISCbits.RC4 = 0;
  2645   003B94  9894               	bcf	148,4,c	;volatile
  2646                           
  2647                           ;PWM.c: 31:     TRISDbits.RD4 = 0;
  2648   003B96  9895               	bcf	149,4,c	;volatile
  2649                           
  2650                           ;PWM.c: 32:     TRISDbits.RD5 = 0;
  2651   003B98  9A95               	bcf	149,5,c	;volatile
  2652                           
  2653                           ;PWM.c: 33:     TRISDbits.RD6 = 0;
  2654   003B9A  9C95               	bcf	149,6,c	;volatile
  2655                           
  2656                           ;PWM.c: 34:     LATDbits.LD2 = 1;
  2657   003B9C  848C               	bsf	140,2,c	;volatile
  2658                           
  2659                           ;PWM.c: 35:     LATDbits.LD3 = 1;
  2660   003B9E  868C               	bsf	140,3,c	;volatile
  2661                           
  2662                           ;PWM.c: 36:     LATCbits.LC4 = 1;
  2663   003BA0  888B               	bsf	139,4,c	;volatile
  2664                           
  2665                           ;PWM.c: 37:     LATDbits.LD4 = 1;
  2666   003BA2  888C               	bsf	140,4,c	;volatile
  2667                           
  2668                           ;PWM.c: 38:     LATDbits.LD5 = 1;
  2669   003BA4  8A8C               	bsf	140,5,c	;volatile
  2670                           
  2671                           ;PWM.c: 39:     LATDbits.LD6 = 1;
  2672   003BA6  8C8C               	bsf	140,6,c	;volatile
  2673   003BA8                     
  2674                           ;PWM.c: 41:     uint8_t keepState;;PWM.c: 42:     keepState = 1;
  2675   003BA8  0E01               	movlw	1
  2676   003BAA  6E10               	movwf	runPWM@keepState^0,c
  2677                           
  2678                           ;PWM.c: 44:     uint8_t multiplier;;PWM.c: 45:     multiplier = 0;
  2679   003BAC  0E00               	movlw	0
  2680   003BAE  6E11               	movwf	runPWM@multiplier^0,c
  2681                           
  2682                           ;PWM.c: 47:     while(keepState){
  2683   003BB0  EF44  F01E         	goto	l485
  2684   003BB4                     l7594:
  2685                           
  2686                           ;PWM.c: 49:         CCPR1L = multiplier*199/5;
  2687   003BB4  5011               	movf	runPWM@multiplier^0,w,c
  2688   003BB6  0DC7               	mullw	199
  2689   003BB8  CFF3 F006          	movff	prodl,___awdiv@dividend
  2690   003BBC  CFF4 F007          	movff	prodh,___awdiv@dividend+1
  2691   003BC0  0E00               	movlw	0
  2692   003BC2  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2693   003BC4  0E05               	movlw	5
  2694   003BC6  6E08               	movwf	___awdiv@divisor^0,c
  2695   003BC8  EC2E  F022         	call	___awdiv	;wreg free
  2696   003BCC  5006               	movf	?___awdiv^0,w,c
  2697   003BCE  6EBE               	movwf	190,c	;volatile
  2698   003BD0                     
  2699                           ;PWM.c: 51:         if(PORTAbits.RA4){
  2700   003BD0  A880               	btfss	128,4,c	;volatile
  2701   003BD2  EFED  F01D         	goto	u9451
  2702   003BD6  EFEF  F01D         	goto	u9450
  2703   003BDA                     u9451:
  2704   003BDA  EF21  F01E         	goto	l7612
  2705   003BDE                     u9450:
  2706   003BDE                     
  2707                           ;PWM.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2708   003BDE  0E03               	movlw	3
  2709   003BE0  6E0F               	movwf	(??_runPWM+1)^0,c
  2710   003BE2  0E08               	movlw	8
  2711   003BE4  6E0E               	movwf	??_runPWM^0,c
  2712   003BE6  0E77               	movlw	119
  2713   003BE8                     u9907:
  2714   003BE8  2EE8               	decfsz	wreg,f,c
  2715   003BEA  D7FE               	bra	u9907
  2716   003BEC  2E0E               	decfsz	??_runPWM^0,f,c
  2717   003BEE  D7FC               	bra	u9907
  2718   003BF0  2E0F               	decfsz	(??_runPWM+1)^0,f,c
  2719   003BF2  D7FA               	bra	u9907
  2720   003BF4  0000               	nop	
  2721   003BF6                     
  2722                           ;PWM.c: 53:             if(PORTAbits.RA4){
  2723   003BF6  A880               	btfss	128,4,c	;volatile
  2724   003BF8  EF00  F01E         	goto	u9461
  2725   003BFC  EF02  F01E         	goto	u9460
  2726   003C00                     u9461:
  2727   003C00  EF21  F01E         	goto	l7612
  2728   003C04                     u9460:
  2729   003C04                     l489:
  2730   003C04  B880               	btfsc	128,4,c	;volatile
  2731   003C06  EF07  F01E         	goto	u9471
  2732   003C0A  EF09  F01E         	goto	u9470
  2733   003C0E                     u9471:
  2734   003C0E  EF02  F01E         	goto	l489
  2735   003C12                     u9470:
  2736   003C12                     
  2737                           ;PWM.c: 55:                 if(multiplier == 5 ){
  2738   003C12  0E05               	movlw	5
  2739   003C14  1811               	xorwf	runPWM@multiplier^0,w,c
  2740   003C16  A4D8               	btfss	status,2,c
  2741   003C18  EF10  F01E         	goto	u9481
  2742   003C1C  EF12  F01E         	goto	u9480
  2743   003C20                     u9481:
  2744   003C20  EF16  F01E         	goto	l7608
  2745   003C24                     u9480:
  2746   003C24                     
  2747                           ;PWM.c: 56:                     multiplier = 0;
  2748   003C24  0E00               	movlw	0
  2749   003C26  6E11               	movwf	runPWM@multiplier^0,c
  2750                           
  2751                           ;PWM.c: 57:                 } else if(multiplier <5){
  2752   003C28  EF21  F01E         	goto	l7612
  2753   003C2C                     l7608:
  2754   003C2C  0E05               	movlw	5
  2755   003C2E  6011               	cpfslt	runPWM@multiplier^0,c
  2756   003C30  EF1C  F01E         	goto	u9491
  2757   003C34  EF1E  F01E         	goto	u9490
  2758   003C38                     u9491:
  2759   003C38  EF21  F01E         	goto	l488
  2760   003C3C                     u9490:
  2761   003C3C                     
  2762                           ;PWM.c: 58:                     multiplier++;
  2763   003C3C  2A11               	incf	runPWM@multiplier^0,f,c
  2764   003C3E  EF21  F01E         	goto	l7612
  2765   003C42                     l488:
  2766   003C42                     l7612:
  2767                           
  2768                           ;PWM.c: 63:         if(PORTAbits.RA2){
  2769   003C42  A480               	btfss	128,2,c	;volatile
  2770   003C44  EF26  F01E         	goto	u9501
  2771   003C48  EF28  F01E         	goto	u9500
  2772   003C4C                     u9501:
  2773   003C4C  EF44  F01E         	goto	l485
  2774   003C50                     u9500:
  2775   003C50                     
  2776                           ;PWM.c: 64:         _delay((unsigned long)((50)*(32E6/4000.0)));
  2777   003C50  0E03               	movlw	3
  2778   003C52  6E0F               	movwf	(??_runPWM+1)^0,c
  2779   003C54  0E08               	movlw	8
  2780   003C56  6E0E               	movwf	??_runPWM^0,c
  2781   003C58  0E77               	movlw	119
  2782   003C5A                     u9917:
  2783   003C5A  2EE8               	decfsz	wreg,f,c
  2784   003C5C  D7FE               	bra	u9917
  2785   003C5E  2E0E               	decfsz	??_runPWM^0,f,c
  2786   003C60  D7FC               	bra	u9917
  2787   003C62  2E0F               	decfsz	(??_runPWM+1)^0,f,c
  2788   003C64  D7FA               	bra	u9917
  2789   003C66  0000               	nop	
  2790   003C68                     
  2791                           ;PWM.c: 65:         if(PORTAbits.RA2){
  2792   003C68  A480               	btfss	128,2,c	;volatile
  2793   003C6A  EF39  F01E         	goto	u9511
  2794   003C6E  EF3B  F01E         	goto	u9510
  2795   003C72                     u9511:
  2796   003C72  EF44  F01E         	goto	l485
  2797   003C76                     u9510:
  2798   003C76                     l497:
  2799   003C76  B480               	btfsc	128,2,c	;volatile
  2800   003C78  EF40  F01E         	goto	u9521
  2801   003C7C  EF42  F01E         	goto	u9520
  2802   003C80                     u9521:
  2803   003C80  EF3B  F01E         	goto	l497
  2804   003C84                     u9520:
  2805   003C84                     
  2806                           ;PWM.c: 67:             keepState = 0;
  2807   003C84  0E00               	movlw	0
  2808   003C86  6E10               	movwf	runPWM@keepState^0,c
  2809   003C88                     l485:
  2810                           
  2811                           ;PWM.c: 47:     while(keepState){
  2812   003C88  5010               	movf	runPWM@keepState^0,w,c
  2813   003C8A  A4D8               	btfss	status,2,c
  2814   003C8C  EF4A  F01E         	goto	u9531
  2815   003C90  EF4C  F01E         	goto	u9530
  2816   003C94                     u9531:
  2817   003C94  EFDA  F01D         	goto	l7594
  2818   003C98                     u9530:
  2819   003C98                     
  2820                           ;PWM.c: 74:     CCP1CONbits.CCP1M = 0b0000;
  2821   003C98  0EF0               	movlw	-16
  2822   003C9A  16BD               	andwf	189,f,c	;volatile
  2823   003C9C                     
  2824                           ;PWM.c: 75:     TMR2ON = 0;
  2825   003C9C  94BA               	bcf	4026,2,c	;volatile
  2826   003C9E                     
  2827                           ;PWM.c: 76:     TMR2IE = 0;
  2828   003C9E  929D               	bcf	3997,1,c	;volatile
  2829   003CA0  0012               	return		;funcret
  2830   003CA2                     __end_of_runPWM:
  2831                           	callstack 0
  2832                           
  2833 ;; *************** function _runMUSIC *****************
  2834 ;; Defined at:
  2835 ;;		line 10 in file "MUSIC.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;		None
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;		None
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		None
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;Total ram usage:        0 bytes
  2854 ;; Hardware stack levels used: 1
  2855 ;; Hardware stack levels required when called: 1
  2856 ;; This function calls:
  2857 ;;		Nothing
  2858 ;; This function is called by:
  2859 ;;		_main
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text4
  2864   004DE8                     __ptext4:
  2865                           	callstack 0
  2866   004DE8                     _runMUSIC:
  2867                           	callstack 29
  2868   004DE8  0012               	return		;funcret
  2869   004DEA                     __end_of_runMUSIC:
  2870                           	callstack 0
  2871                           
  2872 ;; *************** function _runGPIO *****************
  2873 ;; Defined at:
  2874 ;;		line 19 in file "GPIO.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;		None
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  j               2   36[COMRAM] int 
  2879 ;;  states         12    8[COMRAM] unsigned char [12]
  2880 ;;  LEDControl     12   20[COMRAM] PTR FTN(unsigned char ,)
  2881 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  2882 ;;		 -> LED2_Control(1), LED1_Control(1), 
  2883 ;;  numberOfStat    2   33[COMRAM] int 
  2884 ;;  GPIOi           1   35[COMRAM] unsigned char 
  2885 ;;  GPIOreverse     1   32[COMRAM] unsigned char 
  2886 ;;  GPIOindex       1    0        unsigned char 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Locals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;Total ram usage:       32 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 2
  2903 ;; This function calls:
  2904 ;;		_LED1_Control
  2905 ;;		_LED2_Control
  2906 ;;		_LED3_Control
  2907 ;;		_LED4_Control
  2908 ;;		_LED5_Control
  2909 ;;		_LED6_Control
  2910 ;; This function is called by:
  2911 ;;		_main
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text5
  2916   003880                     __ptext5:
  2917                           	callstack 0
  2918   003880                     _runGPIO:
  2919                           	callstack 28
  2920   003880                     
  2921                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  2922   003880  9495               	bcf	149,2,c	;volatile
  2923                           
  2924                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  2925   003882  9695               	bcf	149,3,c	;volatile
  2926                           
  2927                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  2928   003884  9894               	bcf	148,4,c	;volatile
  2929                           
  2930                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  2931   003886  9895               	bcf	149,4,c	;volatile
  2932                           
  2933                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  2934   003888  9A95               	bcf	149,5,c	;volatile
  2935                           
  2936                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  2937   00388A  9C95               	bcf	149,6,c	;volatile
  2938                           
  2939                           ;GPIO.c: 27:     ANSELDbits.ANSD2 = 0;
  2940   00388C  010F               	movlb	15	; () banked
  2941   00388E  953B               	bcf	59,2,b	;volatile
  2942                           
  2943                           ;GPIO.c: 28:     ANSELDbits.ANSD3 = 0;
  2944   003890  973B               	bcf	59,3,b	;volatile
  2945                           
  2946                           ;GPIO.c: 29:     ANSELCbits.ANSC4 = 0;
  2947   003892  993A               	bcf	58,4,b	;volatile
  2948                           
  2949                           ;GPIO.c: 30:     ANSELDbits.ANSD4 = 0;
  2950   003894  993B               	bcf	59,4,b	;volatile
  2951                           
  2952                           ;GPIO.c: 31:     ANSELDbits.ANSD5 = 0;
  2953   003896  9B3B               	bcf	59,5,b	;volatile
  2954                           
  2955                           ;GPIO.c: 32:     ANSELDbits.ANSD6 = 0;
  2956   003898  9D3B               	bcf	59,6,b	;volatile
  2957                           
  2958                           ;GPIO.c: 33:     LATDbits.LD2 = 1;
  2959   00389A  848C               	bsf	140,2,c	;volatile
  2960                           
  2961                           ;GPIO.c: 34:     LATDbits.LD3 = 1;
  2962   00389C  868C               	bsf	140,3,c	;volatile
  2963                           
  2964                           ;GPIO.c: 35:     LATCbits.LC4 = 1;
  2965   00389E  888B               	bsf	139,4,c	;volatile
  2966                           
  2967                           ;GPIO.c: 36:     LATDbits.LD4 = 1;
  2968   0038A0  888C               	bsf	140,4,c	;volatile
  2969                           
  2970                           ;GPIO.c: 37:     LATDbits.LD5 = 1;
  2971   0038A2  8A8C               	bsf	140,5,c	;volatile
  2972                           
  2973                           ;GPIO.c: 38:     LATDbits.LD6 = 1;
  2974   0038A4  8C8C               	bsf	140,6,c	;volatile
  2975                           
  2976                           ;GPIO.c: 41:     TRISAbits.RA2 = 1;
  2977   0038A6  8492               	bsf	146,2,c	;volatile
  2978                           
  2979                           ;GPIO.c: 42:     ANSELAbits.ANSA2 = 0;
  2980   0038A8  9538               	bcf	56,2,b	;volatile
  2981   0038AA                     
  2982                           ; BSR set to: 15
  2983                           ;GPIO.c: 47:     T1CONbits.TMR1CS = 0b00;
  2984   0038AA  0E3F               	movlw	-193
  2985   0038AC  16CD               	andwf	205,f,c	;volatile
  2986                           
  2987                           ;GPIO.c: 48:     T1CONbits.T1CKPS = 0b11;
  2988   0038AE  0E30               	movlw	48
  2989   0038B0  12CD               	iorwf	205,f,c	;volatile
  2990   0038B2                     
  2991                           ; BSR set to: 15
  2992                           ;GPIO.c: 49:     TMR1IE = 1;
  2993   0038B2  809D               	bsf	3997,0,c	;volatile
  2994   0038B4                     
  2995                           ; BSR set to: 15
  2996                           ;GPIO.c: 50:     PEIE = 1;
  2997   0038B4  8CF2               	bsf	4082,6,c	;volatile
  2998   0038B6                     
  2999                           ; BSR set to: 15
  3000                           ;GPIO.c: 51:     GIE = 1;
  3001   0038B6  8EF2               	bsf	4082,7,c	;volatile
  3002                           
  3003                           ;GPIO.c: 52:     GPIOIE = 1;
  3004   0038B8  0E01               	movlw	1
  3005   0038BA  0101               	movlb	1	; () banked
  3006   0038BC  6F24               	movwf	_GPIOIE& (0+255),b
  3007   0038BE                     
  3008                           ; BSR set to: 1
  3009                           ;GPIO.c: 53:     TMR1IF = 1;
  3010   0038BE  809E               	bsf	3998,0,c	;volatile
  3011                           
  3012                           ;GPIO.c: 54:     TMR1 = 0xFFFF - (25000 - 1);
  3013   0038C0  0E9E               	movlw	158
  3014   0038C2  6ECF               	movwf	207,c	;volatile
  3015   0038C4  0E58               	movlw	88
  3016   0038C6  6ECE               	movwf	206,c	;volatile
  3017   0038C8                     
  3018                           ; BSR set to: 1
  3019                           ;GPIO.c: 55:     TMR1ON = 1;
  3020   0038C8  80CD               	bsf	4045,0,c	;volatile
  3021                           
  3022                           ;GPIO.c: 58:     keepStateGPIO = 1;
  3023   0038CA  0E01               	movlw	1
  3024   0038CC  0100               	movlb	0	; () banked
  3025   0038CE  6FFF               	movwf	_keepStateGPIO& (0+255),b
  3026                           
  3027                           ;GPIO.c: 61:     uint8_t GPIOreverse;;GPIO.c: 62:     GPIOreverse = 0;
  3028   0038D0  0E00               	movlw	0
  3029   0038D2  6E21               	movwf	runGPIO@GPIOreverse^0,c
  3030   0038D4                     
  3031                           ; BSR set to: 0
  3032                           ;GPIO.c: 64:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  3033   0038D4  EE21  F0E6         	lfsr	2,runGPIO@F6975
  3034   0038D8  EE10  F015         	lfsr	1,runGPIO@LEDControl
  3035   0038DC  0E0B               	movlw	11
  3036   0038DE                     u6081:
  3037   0038DE  CFDB FFE3          	movff	plusw2,plusw1
  3038   0038E2  06E8               	decf	wreg,f,c
  3039   0038E4  E2FC               	bc	u6081
  3040   0038E6                     
  3041                           ; BSR set to: 0
  3042                           ;GPIO.c: 65:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  3043   0038E6  EE21  F0DA         	lfsr	2,runGPIO@F6993
  3044   0038EA  EE10  F009         	lfsr	1,runGPIO@states
  3045   0038EE  0E0B               	movlw	11
  3046   0038F0                     u6091:
  3047   0038F0  CFDB FFE3          	movff	plusw2,plusw1
  3048   0038F4  06E8               	decf	wreg,f,c
  3049   0038F6  E2FC               	bc	u6091
  3050                           
  3051                           ;GPIO.c: 66:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  3052   0038F8  0E00               	movlw	0
  3053   0038FA  6E23               	movwf	(runGPIO@numberOfStates+1)^0,c
  3054   0038FC  0E0C               	movlw	12
  3055   0038FE  6E22               	movwf	runGPIO@numberOfStates^0,c
  3056                           
  3057                           ;GPIO.c: 67:     uint8_t GPIOi;;GPIO.c: 68:     GPIOi = 0;
  3058   003900  0E00               	movlw	0
  3059   003902  6E24               	movwf	runGPIO@GPIOi^0,c
  3060                           
  3061                           ;GPIO.c: 70:     while(keepStateGPIO){
  3062   003904  EFE3  F01C         	goto	l348
  3063   003908                     l5460:
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;GPIO.c: 72:         for(int j = 0; j < 6; j++) {
  3067   003908  0E00               	movlw	0
  3068   00390A  6E26               	movwf	(runGPIO@j+1)^0,c
  3069   00390C  0E00               	movlw	0
  3070   00390E  6E25               	movwf	runGPIO@j^0,c
  3071   003910                     l5466:
  3072                           
  3073                           ;GPIO.c: 73:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  3074   003910  5025               	movf	runGPIO@j^0,w,c
  3075   003912  0D02               	mullw	2
  3076   003914  50F3               	movf	243,w,c
  3077   003916  0F15               	addlw	low runGPIO@LEDControl
  3078   003918  6ED9               	movwf	fsr2l,c
  3079   00391A  6ADA               	clrf	fsr2h,c
  3080   00391C  D802               	call	u6108
  3081   00391E  EFB5  F01C         	goto	u6109
  3082   003922                     u6108:
  3083   003922  0005               	push	
  3084   003924  6EFA               	movwf	pclath,c
  3085   003926  50DE               	movf	postinc2,w,c
  3086   003928  6EFD               	movwf	tosl,c
  3087   00392A  50DE               	movf	postinc2,w,c
  3088   00392C  6EFE               	movwf	tosh,c
  3089   00392E  50F8               	movf	tblptru,w,c
  3090   003930  6EFF               	movwf	tosu,c
  3091   003932  50FA               	movf	pclath,w,c
  3092   003934  5025               	movf	runGPIO@j^0,w,c
  3093   003936  0805               	sublw	5
  3094   003938  6E07               	movwf	??_runGPIO^0,c
  3095   00393A  5024               	movf	runGPIO@GPIOi^0,w,c
  3096   00393C  0F09               	addlw	low runGPIO@states
  3097   00393E  6ED9               	movwf	fsr2l,c
  3098   003940  6ADA               	clrf	fsr2h,c
  3099   003942  50DF               	movf	indf2,w,c
  3100   003944  6E08               	movwf	(??_runGPIO+1)^0,c
  3101   003946  2A07               	incf	??_runGPIO^0,f,c
  3102   003948  EFA8  F01C         	goto	u6114
  3103   00394C                     u6115:
  3104   00394C  90D8               	bcf	status,0,c
  3105   00394E  3208               	rrcf	(??_runGPIO+1)^0,f,c
  3106   003950                     u6114:
  3107   003950  2E07               	decfsz	??_runGPIO^0,f,c
  3108   003952  EFA6  F01C         	goto	u6115
  3109   003956  A008               	btfss	(??_runGPIO+1)^0,0,c
  3110   003958  EFB0  F01C         	goto	u6121
  3111   00395C  EFB3  F01C         	goto	u6120
  3112   003960                     u6121:
  3113   003960  0E01               	movlw	1
  3114   003962  EFB4  F01C         	goto	u6130
  3115   003966                     u6120:
  3116   003966  0E00               	movlw	0
  3117   003968                     u6130:
  3118   003968  0012               	return		;indir
  3119   00396A                     u6109:
  3120   00396A                     
  3121                           ;GPIO.c: 74:         }
  3122   00396A  4A25               	infsnz	runGPIO@j^0,f,c
  3123   00396C  2A26               	incf	(runGPIO@j+1)^0,f,c
  3124   00396E  BE26               	btfsc	(runGPIO@j+1)^0,7,c
  3125   003970  EFC3  F01C         	goto	u6141
  3126   003974  5026               	movf	(runGPIO@j+1)^0,w,c
  3127   003976  E109               	bnz	u6140
  3128   003978  0E06               	movlw	6
  3129   00397A  5C25               	subwf	runGPIO@j^0,w,c
  3130   00397C  A0D8               	btfss	status,0,c
  3131   00397E  EFC3  F01C         	goto	u6141
  3132   003982  EFC5  F01C         	goto	u6140
  3133   003986                     u6141:
  3134   003986  EF88  F01C         	goto	l5466
  3135   00398A                     u6140:
  3136   00398A                     
  3137                           ;GPIO.c: 75:         _delay((unsigned long)((400)*(32E6/4000.0)));
  3138   00398A  0E11               	movlw	17
  3139   00398C  6E08               	movwf	(??_runGPIO+1)^0,c
  3140   00398E  0E3C               	movlw	60
  3141   003990  6E07               	movwf	??_runGPIO^0,c
  3142   003992  0ECB               	movlw	203
  3143   003994                     u9927:
  3144   003994  2EE8               	decfsz	wreg,f,c
  3145   003996  D7FE               	bra	u9927
  3146   003998  2E07               	decfsz	??_runGPIO^0,f,c
  3147   00399A  D7FC               	bra	u9927
  3148   00399C  2E08               	decfsz	(??_runGPIO+1)^0,f,c
  3149   00399E  D7FA               	bra	u9927
  3150   0039A0  0000               	nop	
  3151   0039A2                     
  3152                           ;GPIO.c: 76:         GPIOi++;
  3153   0039A2  2A24               	incf	runGPIO@GPIOi^0,f,c
  3154                           
  3155                           ;GPIO.c: 77:         if(GPIOi == numberOfStates){
  3156   0039A4  5024               	movf	runGPIO@GPIOi^0,w,c
  3157   0039A6  6E07               	movwf	??_runGPIO^0,c
  3158   0039A8  6A08               	clrf	(??_runGPIO+1)^0,c
  3159   0039AA  5022               	movf	runGPIO@numberOfStates^0,w,c
  3160   0039AC  1807               	xorwf	??_runGPIO^0,w,c
  3161   0039AE  E107               	bnz	u6151
  3162   0039B0  5023               	movf	(runGPIO@numberOfStates+1)^0,w,c
  3163   0039B2  1808               	xorwf	(??_runGPIO+1)^0,w,c
  3164   0039B4  A4D8               	btfss	status,2,c
  3165   0039B6  EFDF  F01C         	goto	u6151
  3166   0039BA  EFE1  F01C         	goto	u6150
  3167   0039BE                     u6151:
  3168   0039BE  EFE3  F01C         	goto	l348
  3169   0039C2                     u6150:
  3170   0039C2                     
  3171                           ;GPIO.c: 78:             GPIOi = 0;
  3172   0039C2  0E00               	movlw	0
  3173   0039C4  6E24               	movwf	runGPIO@GPIOi^0,c
  3174   0039C6                     l348:
  3175                           
  3176                           ;GPIO.c: 70:     while(keepStateGPIO){
  3177   0039C6  0100               	movlb	0	; () banked
  3178   0039C8  51FF               	movf	_keepStateGPIO& (0+255),w,b
  3179   0039CA  A4D8               	btfss	status,2,c
  3180   0039CC  EFEA  F01C         	goto	u6161
  3181   0039D0  EFEC  F01C         	goto	u6160
  3182   0039D4                     u6161:
  3183   0039D4  EF84  F01C         	goto	l5460
  3184   0039D8                     u6160:
  3185   0039D8                     
  3186                           ; BSR set to: 0
  3187                           ;GPIO.c: 83:     LATDbits.LD2 = 1;
  3188   0039D8  848C               	bsf	140,2,c	;volatile
  3189                           
  3190                           ;GPIO.c: 84:     LATDbits.LD3 = 1;
  3191   0039DA  868C               	bsf	140,3,c	;volatile
  3192                           
  3193                           ;GPIO.c: 85:     LATCbits.LC4 = 1;
  3194   0039DC  888B               	bsf	139,4,c	;volatile
  3195                           
  3196                           ;GPIO.c: 86:     LATDbits.LD4 = 1;
  3197   0039DE  888C               	bsf	140,4,c	;volatile
  3198                           
  3199                           ;GPIO.c: 87:     LATDbits.LD5 = 1;
  3200   0039E0  8A8C               	bsf	140,5,c	;volatile
  3201                           
  3202                           ;GPIO.c: 88:     LATDbits.LD6 = 1;
  3203   0039E2  8C8C               	bsf	140,6,c	;volatile
  3204                           
  3205                           ;GPIO.c: 89:     TMR1ON = 0;
  3206   0039E4  90CD               	bcf	4045,0,c	;volatile
  3207                           
  3208                           ;GPIO.c: 90:     TMR1IE = 0;
  3209   0039E6  909D               	bcf	3997,0,c	;volatile
  3210   0039E8                     
  3211                           ; BSR set to: 0
  3212                           ;GPIO.c: 91:     GPIOIE = 0;
  3213   0039E8  0E00               	movlw	0
  3214   0039EA  0101               	movlb	1	; () banked
  3215   0039EC  6F24               	movwf	_GPIOIE& (0+255),b
  3216   0039EE                     
  3217                           ; BSR set to: 1
  3218   0039EE  0012               	return		;funcret
  3219   0039F0                     __end_of_runGPIO:
  3220                           	callstack 0
  3221                           
  3222 ;; *************** function _LED5_Control *****************
  3223 ;; Defined at:
  3224 ;;		line 14 in file "GPIO.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  state           1    wreg     unsigned char 
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;  state           1    5[COMRAM] unsigned char 
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  1    wreg      void 
  3231 ;; Registers used:
  3232 ;;		wreg
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;Total ram usage:        1 bytes
  3243 ;; Hardware stack levels used: 1
  3244 ;; Hardware stack levels required when called: 1
  3245 ;; This function calls:
  3246 ;;		Nothing
  3247 ;; This function is called by:
  3248 ;;		_runGPIO
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text6
  3253   004D94                     __ptext6:
  3254                           	callstack 0
  3255   004D94                     _LED5_Control:
  3256                           	callstack 28
  3257                           
  3258                           ; BSR set to: 1
  3259                           ;incstack = 0
  3260                           ;LED5_Control@state stored from wreg
  3261   004D94  6E06               	movwf	LED5_Control@state^0,c
  3262   004D96  B006               	btfsc	LED5_Control@state^0,0,c
  3263   004D98  D002               	bra	u6005
  3264   004D9A  9A8C               	bcf	140,5,c	;volatile
  3265   004D9C  D001               	bra	u6006
  3266   004D9E                     u6005:
  3267   004D9E  8A8C               	bsf	140,5,c	;volatile
  3268   004DA0                     u6006:
  3269   004DA0  0012               	return		;funcret
  3270   004DA2                     __end_of_LED5_Control:
  3271                           	callstack 0
  3272                           
  3273 ;; *************** function _LED4_Control *****************
  3274 ;; Defined at:
  3275 ;;		line 13 in file "GPIO.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  state           1    wreg     unsigned char 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  state           1    5[COMRAM] unsigned char 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;Total ram usage:        1 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; Hardware stack levels required when called: 1
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_runGPIO
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text7
  3304   004DA2                     __ptext7:
  3305                           	callstack 0
  3306   004DA2                     _LED4_Control:
  3307                           	callstack 28
  3308                           
  3309                           ;incstack = 0
  3310                           ;LED4_Control@state stored from wreg
  3311   004DA2  6E06               	movwf	LED4_Control@state^0,c
  3312   004DA4  B006               	btfsc	LED4_Control@state^0,0,c
  3313   004DA6  D002               	bra	u5995
  3314   004DA8  988C               	bcf	140,4,c	;volatile
  3315   004DAA  D001               	bra	u5996
  3316   004DAC                     u5995:
  3317   004DAC  888C               	bsf	140,4,c	;volatile
  3318   004DAE                     u5996:
  3319   004DAE  0012               	return		;funcret
  3320   004DB0                     __end_of_LED4_Control:
  3321                           	callstack 0
  3322                           
  3323 ;; *************** function _LED3_Control *****************
  3324 ;; Defined at:
  3325 ;;		line 12 in file "GPIO.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  state           1    wreg     unsigned char 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  state           1    5[COMRAM] unsigned char 
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      void 
  3332 ;; Registers used:
  3333 ;;		wreg
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;Total ram usage:        1 bytes
  3344 ;; Hardware stack levels used: 1
  3345 ;; Hardware stack levels required when called: 1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_runGPIO
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text8
  3354   004DB0                     __ptext8:
  3355                           	callstack 0
  3356   004DB0                     _LED3_Control:
  3357                           	callstack 28
  3358                           
  3359                           ;incstack = 0
  3360                           ;LED3_Control@state stored from wreg
  3361   004DB0  6E06               	movwf	LED3_Control@state^0,c
  3362   004DB2  B006               	btfsc	LED3_Control@state^0,0,c
  3363   004DB4  D002               	bra	u5985
  3364   004DB6  988B               	bcf	139,4,c	;volatile
  3365   004DB8  D001               	bra	u5986
  3366   004DBA                     u5985:
  3367   004DBA  888B               	bsf	139,4,c	;volatile
  3368   004DBC                     u5986:
  3369   004DBC  0012               	return		;funcret
  3370   004DBE                     __end_of_LED3_Control:
  3371                           	callstack 0
  3372                           
  3373 ;; *************** function _LED2_Control *****************
  3374 ;; Defined at:
  3375 ;;		line 11 in file "GPIO.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;  state           1    wreg     unsigned char 
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  state           1    5[COMRAM] unsigned char 
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;Total ram usage:        1 bytes
  3394 ;; Hardware stack levels used: 1
  3395 ;; Hardware stack levels required when called: 1
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		_runGPIO
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text9
  3404   004DBE                     __ptext9:
  3405                           	callstack 0
  3406   004DBE                     _LED2_Control:
  3407                           	callstack 28
  3408                           
  3409                           ;incstack = 0
  3410                           ;LED2_Control@state stored from wreg
  3411   004DBE  6E06               	movwf	LED2_Control@state^0,c
  3412   004DC0  B006               	btfsc	LED2_Control@state^0,0,c
  3413   004DC2  D002               	bra	u5975
  3414   004DC4  968C               	bcf	140,3,c	;volatile
  3415   004DC6  D001               	bra	u5976
  3416   004DC8                     u5975:
  3417   004DC8  868C               	bsf	140,3,c	;volatile
  3418   004DCA                     u5976:
  3419   004DCA  0012               	return		;funcret
  3420   004DCC                     __end_of_LED2_Control:
  3421                           	callstack 0
  3422                           
  3423 ;; *************** function _LED1_Control *****************
  3424 ;; Defined at:
  3425 ;;		line 10 in file "GPIO.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  state           1    wreg     unsigned char 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  state           1    5[COMRAM] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;Total ram usage:        1 bytes
  3444 ;; Hardware stack levels used: 1
  3445 ;; Hardware stack levels required when called: 1
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_runGPIO
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text10
  3454   004DCC                     __ptext10:
  3455                           	callstack 0
  3456   004DCC                     _LED1_Control:
  3457                           	callstack 28
  3458                           
  3459                           ;incstack = 0
  3460                           ;LED1_Control@state stored from wreg
  3461   004DCC  6E06               	movwf	LED1_Control@state^0,c
  3462   004DCE  B006               	btfsc	LED1_Control@state^0,0,c
  3463   004DD0  D002               	bra	u5965
  3464   004DD2  948C               	bcf	140,2,c	;volatile
  3465   004DD4  D001               	bra	u5966
  3466   004DD6                     u5965:
  3467   004DD6  848C               	bsf	140,2,c	;volatile
  3468   004DD8                     u5966:
  3469   004DD8  0012               	return		;funcret
  3470   004DDA                     __end_of_LED1_Control:
  3471                           	callstack 0
  3472                           
  3473 ;; *************** function _LED6_Control *****************
  3474 ;; Defined at:
  3475 ;;		line 15 in file "GPIO.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  state           1    wreg     unsigned char 
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  state           1    5[COMRAM] unsigned char 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;Total ram usage:        1 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; Hardware stack levels required when called: 1
  3496 ;; This function calls:
  3497 ;;		Nothing
  3498 ;; This function is called by:
  3499 ;;		_runGPIO
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text11
  3504   004DDA                     __ptext11:
  3505                           	callstack 0
  3506   004DDA                     _LED6_Control:
  3507                           	callstack 28
  3508                           
  3509                           ;incstack = 0
  3510                           ;LED6_Control@state stored from wreg
  3511   004DDA  6E06               	movwf	LED6_Control@state^0,c
  3512   004DDC  B006               	btfsc	LED6_Control@state^0,0,c
  3513   004DDE  D002               	bra	u6015
  3514   004DE0  9C8C               	bcf	140,6,c	;volatile
  3515   004DE2  D001               	bra	u6016
  3516   004DE4                     u6015:
  3517   004DE4  8C8C               	bsf	140,6,c	;volatile
  3518   004DE6                     u6016:
  3519   004DE6  0012               	return		;funcret
  3520   004DE8                     __end_of_LED6_Control:
  3521                           	callstack 0
  3522                           
  3523 ;; *************** function _runGAME *****************
  3524 ;; Defined at:
  3525 ;;		line 10 in file "GAME.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  text           17  137[BANK0 ] unsigned char [17]
  3530 ;;  pot1            2  154[BANK0 ] unsigned short 
  3531 ;;  keepState       1  156[BANK0 ] unsigned char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      void 
  3534 ;; Registers used:
  3535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;Total ram usage:       22 bytes
  3546 ;; Hardware stack levels used: 1
  3547 ;; Hardware stack levels required when called: 9
  3548 ;; This function calls:
  3549 ;;		_LCD_ShowString
  3550 ;;		_sprintf
  3551 ;; This function is called by:
  3552 ;;		_main
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text12
  3557   003DB4                     __ptext12:
  3558                           	callstack 0
  3559   003DB4                     _runGAME:
  3560                           	callstack 21
  3561   003DB4                     
  3562                           ;GAME.c: 12:     TRISDbits.RD2 = 0;
  3563   003DB4  9495               	bcf	149,2,c	;volatile
  3564                           
  3565                           ;GAME.c: 13:     TRISDbits.RD3 = 0;
  3566   003DB6  9695               	bcf	149,3,c	;volatile
  3567                           
  3568                           ;GAME.c: 14:     TRISCbits.RC4 = 0;
  3569   003DB8  9894               	bcf	148,4,c	;volatile
  3570                           
  3571                           ;GAME.c: 15:     TRISDbits.RD4 = 0;
  3572   003DBA  9895               	bcf	149,4,c	;volatile
  3573                           
  3574                           ;GAME.c: 16:     TRISDbits.RD5 = 0;
  3575   003DBC  9A95               	bcf	149,5,c	;volatile
  3576                           
  3577                           ;GAME.c: 17:     TRISDbits.RD6 = 0;
  3578   003DBE  9C95               	bcf	149,6,c	;volatile
  3579                           
  3580                           ;GAME.c: 18:     ANSELDbits.ANSD2 = 0;
  3581   003DC0  010F               	movlb	15	; () banked
  3582   003DC2  953B               	bcf	59,2,b	;volatile
  3583                           
  3584                           ;GAME.c: 19:     ANSELDbits.ANSD3 = 0;
  3585   003DC4  973B               	bcf	59,3,b	;volatile
  3586                           
  3587                           ;GAME.c: 20:     ANSELCbits.ANSC4 = 0;
  3588   003DC6  993A               	bcf	58,4,b	;volatile
  3589                           
  3590                           ;GAME.c: 21:     ANSELDbits.ANSD4 = 0;
  3591   003DC8  993B               	bcf	59,4,b	;volatile
  3592                           
  3593                           ;GAME.c: 22:     ANSELDbits.ANSD5 = 0;
  3594   003DCA  9B3B               	bcf	59,5,b	;volatile
  3595                           
  3596                           ;GAME.c: 23:     ANSELDbits.ANSD6 = 0;
  3597   003DCC  9D3B               	bcf	59,6,b	;volatile
  3598                           
  3599                           ;GAME.c: 24:     LATDbits.LD2 = 1;
  3600   003DCE  848C               	bsf	140,2,c	;volatile
  3601                           
  3602                           ;GAME.c: 25:     LATDbits.LD3 = 1;
  3603   003DD0  868C               	bsf	140,3,c	;volatile
  3604                           
  3605                           ;GAME.c: 26:     LATCbits.LC4 = 1;
  3606   003DD2  888B               	bsf	139,4,c	;volatile
  3607                           
  3608                           ;GAME.c: 27:     LATDbits.LD4 = 1;
  3609   003DD4  888C               	bsf	140,4,c	;volatile
  3610                           
  3611                           ;GAME.c: 28:     LATDbits.LD5 = 1;
  3612   003DD6  8A8C               	bsf	140,5,c	;volatile
  3613                           
  3614                           ;GAME.c: 29:     LATDbits.LD6 = 1;
  3615   003DD8  8C8C               	bsf	140,6,c	;volatile
  3616                           
  3617                           ;GAME.c: 32:     TRISAbits.RA2 = 1;
  3618   003DDA  8492               	bsf	146,2,c	;volatile
  3619                           
  3620                           ;GAME.c: 33:     ANSELAbits.ANSA2 = 0;
  3621   003DDC  9538               	bcf	56,2,b	;volatile
  3622                           
  3623                           ;GAME.c: 36:     ANSELAbits.ANSA5 = 1;
  3624   003DDE  8B38               	bsf	56,5,b	;volatile
  3625                           
  3626                           ;GAME.c: 38:     ADCON2bits.ADFM = 1;
  3627   003DE0  8EC0               	bsf	192,7,c	;volatile
  3628   003DE2                     
  3629                           ; BSR set to: 15
  3630                           ;GAME.c: 39:     ADCON2bits.ADCS = 0b110;
  3631   003DE2  50C0               	movf	192,w,c	;volatile
  3632   003DE4  0BF8               	andlw	-8
  3633   003DE6  0906               	iorlw	6
  3634   003DE8  6EC0               	movwf	192,c	;volatile
  3635                           
  3636                           ;GAME.c: 40:     ADCON2bits.ACQT = 0b110;
  3637   003DEA  50C0               	movf	192,w,c	;volatile
  3638   003DEC  0BC7               	andlw	-57
  3639   003DEE  0930               	iorlw	48
  3640   003DF0  6EC0               	movwf	192,c	;volatile
  3641   003DF2                     
  3642                           ; BSR set to: 15
  3643                           ;GAME.c: 41:     ADCON0bits.ADON = 1;
  3644   003DF2  80C2               	bsf	194,0,c	;volatile
  3645   003DF4                     
  3646                           ; BSR set to: 15
  3647                           ;GAME.c: 44:     uint16_t pot1;;GAME.c: 45:     char text[17] = "";
  3648   003DF4  EE20  F0E9         	lfsr	2,runGAME@text
  3649   003DF8  0E10               	movlw	16
  3650   003DFA                     u9691:
  3651   003DFA  6ADE               	clrf	postinc2,c
  3652   003DFC  06E8               	decf	wreg,f,c
  3653   003DFE  E2FD               	bc	u9691
  3654   003E00                     
  3655                           ; BSR set to: 15
  3656                           ;GAME.c: 46:     uint8_t keepState = 1;
  3657   003E00  0E01               	movlw	1
  3658   003E02  0100               	movlb	0	; () banked
  3659   003E04  6FFC               	movwf	runGAME@keepState& (0+255),b
  3660                           
  3661                           ;GAME.c: 48:     while(keepState){
  3662   003E06  EF54  F01F         	goto	l599
  3663   003E0A                     l7750:
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;GAME.c: 50:         ADCON0bits.CHS = 5;
  3667   003E0A  50C2               	movf	194,w,c	;volatile
  3668   003E0C  0B83               	andlw	-125
  3669   003E0E  0914               	iorlw	20
  3670   003E10  6EC2               	movwf	194,c	;volatile
  3671   003E12                     
  3672                           ; BSR set to: 0
  3673                           ;GAME.c: 51:         GODONE = 1;
  3674   003E12  82C2               	bsf	4034,1,c	;volatile
  3675   003E14                     l601:
  3676   003E14  B2C2               	btfsc	4034,1,c	;volatile
  3677   003E16  EF0F  F01F         	goto	u9701
  3678   003E1A  EF11  F01F         	goto	u9700
  3679   003E1E                     u9701:
  3680   003E1E  EF0A  F01F         	goto	l601
  3681   003E22                     u9700:
  3682   003E22                     
  3683                           ;GAME.c: 53:         pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  3684   003E22  50C3               	movf	195,w,c	;volatile
  3685   003E24  CFC4 F0E7          	movff	4036,??_runGAME	;volatile
  3686   003E28  0100               	movlb	0	; () banked
  3687   003E2A  6BE8               	clrf	(??_runGAME+1)& (0+255),b
  3688   003E2C  C0E7  F0E8         	movff	??_runGAME,??_runGAME+1
  3689   003E30  6BE7               	clrf	??_runGAME& (0+255),b
  3690   003E32  11E7               	iorwf	??_runGAME& (0+255),w,b
  3691   003E34  6FFA               	movwf	runGAME@pot1& (0+255),b
  3692   003E36  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  3693   003E38  6FFB               	movwf	(runGAME@pot1+1)& (0+255),b
  3694   003E3A                     
  3695                           ; BSR set to: 0
  3696                           ;GAME.c: 55:         sprintf(text, "%hu             ", pot1);
  3697   003E3A  0EE9               	movlw	low runGAME@text
  3698   003E3C  6FCE               	movwf	sprintf@s& (0+255),b
  3699   003E3E  6BCF               	clrf	(sprintf@s+1)& (0+255),b
  3700   003E40  0E26               	movlw	low STR_27
  3701   003E42  6FD0               	movwf	sprintf@fmt& (0+255),b
  3702   003E44  0EFF               	movlw	high STR_27
  3703   003E46  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  3704   003E48  C0FA  F0D2         	movff	runGAME@pot1,?_sprintf+4
  3705   003E4C  C0FB  F0D3         	movff	runGAME@pot1+1,?_sprintf+5
  3706   003E50  EC6E  F025         	call	_sprintf
  3707   003E54                     
  3708                           ;GAME.c: 56:         LCD_ShowString(2, text);
  3709   003E54  0EE9               	movlw	low runGAME@text
  3710   003E56  6E07               	movwf	LCD_ShowString@textData^0,c
  3711   003E58  6A08               	clrf	(LCD_ShowString@textData+1)^0,c
  3712   003E5A  0E02               	movlw	2
  3713   003E5C  EC90  F022         	call	_LCD_ShowString
  3714   003E60                     
  3715                           ;GAME.c: 58:         if(PORTAbits.RA2){
  3716   003E60  A480               	btfss	128,2,c	;volatile
  3717   003E62  EF35  F01F         	goto	u9711
  3718   003E66  EF37  F01F         	goto	u9710
  3719   003E6A                     u9711:
  3720   003E6A  EF54  F01F         	goto	l599
  3721   003E6E                     u9710:
  3722   003E6E                     
  3723                           ;GAME.c: 59:             _delay((unsigned long)((50)*(32E6/4000.0)));
  3724   003E6E  0E03               	movlw	3
  3725   003E70  0100               	movlb	0	; () banked
  3726   003E72  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  3727   003E74  0E08               	movlw	8
  3728   003E76  6FE7               	movwf	??_runGAME& (0+255),b
  3729   003E78  0E77               	movlw	119
  3730   003E7A                     u9937:
  3731   003E7A  2EE8               	decfsz	wreg,f,c
  3732   003E7C  D7FE               	bra	u9937
  3733   003E7E  2FE7               	decfsz	??_runGAME& (0+255),f,b
  3734   003E80  D7FC               	bra	u9937
  3735   003E82  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  3736   003E84  D7FA               	bra	u9937
  3737   003E86                     
  3738                           ;GAME.c: 60:             if(PORTAbits.RA2){
  3739   003E86  A480               	btfss	128,2,c	;volatile
  3740   003E88  EF48  F01F         	goto	u9721
  3741   003E8C  EF4A  F01F         	goto	u9720
  3742   003E90                     u9721:
  3743   003E90  EF54  F01F         	goto	l599
  3744   003E94                     u9720:
  3745   003E94                     l606:
  3746   003E94  B480               	btfsc	128,2,c	;volatile
  3747   003E96  EF4F  F01F         	goto	u9731
  3748   003E9A  EF51  F01F         	goto	u9730
  3749   003E9E                     u9731:
  3750   003E9E  EF4A  F01F         	goto	l606
  3751   003EA2                     u9730:
  3752   003EA2                     
  3753                           ;GAME.c: 62:                 keepState = 0;
  3754   003EA2  0E00               	movlw	0
  3755   003EA4  0100               	movlb	0	; () banked
  3756   003EA6  6FFC               	movwf	runGAME@keepState& (0+255),b
  3757   003EA8                     l599:
  3758                           
  3759                           ;GAME.c: 48:     while(keepState){
  3760   003EA8  0100               	movlb	0	; () banked
  3761   003EAA  51FC               	movf	runGAME@keepState& (0+255),w,b
  3762   003EAC  A4D8               	btfss	status,2,c
  3763   003EAE  EF5B  F01F         	goto	u9741
  3764   003EB2  EF5D  F01F         	goto	u9740
  3765   003EB6                     u9741:
  3766   003EB6  EF05  F01F         	goto	l7750
  3767   003EBA                     u9740:
  3768   003EBA                     
  3769                           ; BSR set to: 0
  3770                           ;GAME.c: 68:     ADCON0bits.ADON = 0;
  3771   003EBA  90C2               	bcf	194,0,c	;volatile
  3772   003EBC                     
  3773                           ; BSR set to: 0
  3774   003EBC  0012               	return		;funcret
  3775   003EBE                     __end_of_runGAME:
  3776                           	callstack 0
  3777                           
  3778 ;; *************** function _runDAC *****************
  3779 ;; Defined at:
  3780 ;;		line 10 in file "DAC.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  DACindex        1  125[BANK0 ] unsigned char 
  3785 ;;  selectModeDA    1  124[BANK0 ] unsigned char 
  3786 ;;  keepState       1  123[BANK0 ] unsigned char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;Total ram usage:       12 bytes
  3801 ;; Hardware stack levels used: 1
  3802 ;; Hardware stack levels required when called: 9
  3803 ;; This function calls:
  3804 ;;		_SPI_write
  3805 ;;		___fladd
  3806 ;;		___fldiv
  3807 ;;		___flmul
  3808 ;;		___fltol
  3809 ;;		___xxtofl
  3810 ;;		_printf
  3811 ;;		_sinf
  3812 ;; This function is called by:
  3813 ;;		_main
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text13
  3818   0025C0                     __ptext13:
  3819                           	callstack 0
  3820   0025C0                     _runDAC:
  3821                           	callstack 21
  3822   0025C0                     
  3823                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  3824   0025C0  8094               	bsf	148,0,c	;volatile
  3825                           
  3826                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  3827   0025C2  8892               	bsf	146,4,c	;volatile
  3828                           
  3829                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  3830   0025C4  8692               	bsf	146,3,c	;volatile
  3831                           
  3832                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  3833   0025C6  8492               	bsf	146,2,c	;volatile
  3834                           
  3835                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  3836   0025C8  010F               	movlb	15	; () banked
  3837   0025CA  9738               	bcf	56,3,b	;volatile
  3838                           
  3839                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  3840   0025CC  9538               	bcf	56,2,b	;volatile
  3841                           
  3842                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  3843   0025CE  9693               	bcf	147,3,c	;volatile
  3844                           
  3845                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  3846   0025D0  9694               	bcf	148,3,c	;volatile
  3847                           
  3848                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  3849   0025D2  9A94               	bcf	148,5,c	;volatile
  3850   0025D4                     
  3851                           ; BSR set to: 15
  3852                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  3853   0025D4  50C6               	movf	198,w,c	;volatile
  3854   0025D6  0BF0               	andlw	-16
  3855   0025D8  0902               	iorlw	2
  3856   0025DA  6EC6               	movwf	198,c	;volatile
  3857   0025DC                     
  3858                           ; BSR set to: 15
  3859                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  3860   0025DC  98C6               	bcf	198,4,c	;volatile
  3861   0025DE                     
  3862                           ; BSR set to: 15
  3863                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  3864   0025DE  8CC7               	bsf	199,6,c	;volatile
  3865   0025E0                     
  3866                           ; BSR set to: 15
  3867                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  3868   0025E0  8AC6               	bsf	198,5,c	;volatile
  3869   0025E2                     
  3870                           ; BSR set to: 15
  3871                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  3872   0025E2  8139               	bsf	57,0,b	;volatile
  3873   0025E4                     
  3874                           ; BSR set to: 15
  3875                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  3876   0025E4  9EC0               	bcf	192,7,c	;volatile
  3877                           
  3878                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  3879   0025E6  50C0               	movf	192,w,c	;volatile
  3880   0025E8  0BF8               	andlw	-8
  3881   0025EA  0906               	iorlw	6
  3882   0025EC  6EC0               	movwf	192,c	;volatile
  3883                           
  3884                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  3885   0025EE  50C0               	movf	192,w,c	;volatile
  3886   0025F0  0BC7               	andlw	-57
  3887   0025F2  0930               	iorlw	48
  3888   0025F4  6EC0               	movwf	192,c	;volatile
  3889   0025F6                     
  3890                           ; BSR set to: 15
  3891                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  3892   0025F6  80C2               	bsf	194,0,c	;volatile
  3893                           
  3894                           ;DAC.c: 38:     SPBRG1 = 25;
  3895   0025F8  0E19               	movlw	25
  3896   0025FA  6EAF               	movwf	175,c	;volatile
  3897   0025FC                     
  3898                           ; BSR set to: 15
  3899                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  3900   0025FC  8EAB               	bsf	171,7,c	;volatile
  3901   0025FE                     
  3902                           ; BSR set to: 15
  3903                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  3904   0025FE  98AC               	bcf	172,4,c	;volatile
  3905   002600                     
  3906                           ; BSR set to: 15
  3907                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  3908   002600  8AAC               	bsf	172,5,c	;volatile
  3909   002602                     
  3910                           ; BSR set to: 15
  3911                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  3912   002602  88AB               	bsf	171,4,c	;volatile
  3913   002604                     
  3914                           ; BSR set to: 15
  3915                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  3916   002604  868A               	bsf	138,3,c	;volatile
  3917                           
  3918                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  3919   002606  50C2               	movf	194,w,c	;volatile
  3920   002608  0B83               	andlw	-125
  3921   00260A  0930               	iorlw	48
  3922   00260C  6EC2               	movwf	194,c	;volatile
  3923                           
  3924                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  3925   00260E  0E01               	movlw	1
  3926   002610  0100               	movlb	0	; () banked
  3927   002612  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3928                           
  3929                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  3930   002614  0E01               	movlw	1
  3931   002616  6FDB               	movwf	runDAC@keepState& (0+255),b
  3932                           
  3933                           ;DAC.c: 52:     uint8_t DACindex = 0;
  3934   002618  0E00               	movlw	0
  3935   00261A  6FDD               	movwf	runDAC@DACindex& (0+255),b
  3936                           
  3937                           ;DAC.c: 54:     while(keepState){
  3938   00261C  EF4A  F014         	goto	l7738
  3939   002620                     l7696:
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;DAC.c: 57:                 if(DACindex<255/2){
  3943   002620  0E7F               	movlw	127
  3944   002622  61DD               	cpfslt	runDAC@DACindex& (0+255),b
  3945   002624  EF16  F013         	goto	u9611
  3946   002628  EF18  F013         	goto	u9610
  3947   00262C                     u9611:
  3948   00262C  EF40  F013         	goto	l7700
  3949   002630                     u9610:
  3950   002630                     
  3951                           ; BSR set to: 0
  3952                           ;DAC.c: 58:                     SPI_write((uint8_t)(1.9*DACindex));
  3953   002630  0E33               	movlw	51
  3954   002632  6E18               	movwf	___flmul@a^0,c
  3955   002634  0E33               	movlw	51
  3956   002636  6E19               	movwf	(___flmul@a+1)^0,c
  3957   002638  0EF3               	movlw	243
  3958   00263A  6E1A               	movwf	(___flmul@a+2)^0,c
  3959   00263C  0E3F               	movlw	63
  3960   00263E  6E1B               	movwf	(___flmul@a+3)^0,c
  3961   002640  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3962   002642  6E06               	movwf	___xxtofl@val^0,c
  3963   002644  6A07               	clrf	(___xxtofl@val+1)^0,c
  3964   002646  6A08               	clrf	(___xxtofl@val+2)^0,c
  3965   002648  6A09               	clrf	(___xxtofl@val+3)^0,c
  3966   00264A  0E01               	movlw	1
  3967   00264C  ECD9  F019         	call	___xxtofl
  3968   002650  C006  F014         	movff	?___xxtofl,___flmul@b
  3969   002654  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3970   002658  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3971   00265C  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3972   002660  EC1D  F00D         	call	___flmul	;wreg free
  3973   002664  C014  F064         	movff	?___flmul,___fltol@f1
  3974   002668  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  3975   00266C  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  3976   002670  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  3977   002674  EC5F  F01F         	call	___fltol	;wreg free
  3978   002678  0100               	movlb	0	; () banked
  3979   00267A  5164               	movf	?___fltol& (0+255),w,b
  3980   00267C  ECB3  F025         	call	_SPI_write
  3981   002680                     l7700:
  3982                           
  3983                           ;DAC.c: 60:                 if(DACindex>=255/2){
  3984   002680  0E7E               	movlw	126
  3985   002682  0100               	movlb	0	; () banked
  3986   002684  65DD               	cpfsgt	runDAC@DACindex& (0+255),b
  3987   002686  EF47  F013         	goto	u9621
  3988   00268A  EF49  F013         	goto	u9620
  3989   00268E                     u9621:
  3990   00268E  EF05  F014         	goto	l219
  3991   002692                     u9620:
  3992   002692                     
  3993                           ; BSR set to: 0
  3994                           ;DAC.c: 61:                     SPI_write((uint8_t)(1.9*(255-DACindex)));
  3995   002692  0E33               	movlw	51
  3996   002694  6E18               	movwf	___flmul@a^0,c
  3997   002696  0E33               	movlw	51
  3998   002698  6E19               	movwf	(___flmul@a+1)^0,c
  3999   00269A  0EF3               	movlw	243
  4000   00269C  6E1A               	movwf	(___flmul@a+2)^0,c
  4001   00269E  0E3F               	movlw	63
  4002   0026A0  6E1B               	movwf	(___flmul@a+3)^0,c
  4003   0026A2  51DD               	movf	runDAC@DACindex& (0+255),w,b
  4004   0026A4  0AFF               	xorlw	255
  4005   0026A6  6FD2               	movwf	??_runDAC& (0+255),b
  4006   0026A8  51D2               	movf	??_runDAC& (0+255),w,b
  4007   0026AA  6E06               	movwf	___xxtofl@val^0,c
  4008   0026AC  6A07               	clrf	(___xxtofl@val+1)^0,c
  4009   0026AE  6A08               	clrf	(___xxtofl@val+2)^0,c
  4010   0026B0  6A09               	clrf	(___xxtofl@val+3)^0,c
  4011   0026B2  0E01               	movlw	1
  4012   0026B4  ECD9  F019         	call	___xxtofl
  4013   0026B8  C006  F014         	movff	?___xxtofl,___flmul@b
  4014   0026BC  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  4015   0026C0  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  4016   0026C4  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  4017   0026C8  EC1D  F00D         	call	___flmul	;wreg free
  4018   0026CC  C014  F064         	movff	?___flmul,___fltol@f1
  4019   0026D0  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  4020   0026D4  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  4021   0026D8  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  4022   0026DC  EC5F  F01F         	call	___fltol	;wreg free
  4023   0026E0  0100               	movlb	0	; () banked
  4024   0026E2  5164               	movf	?___fltol& (0+255),w,b
  4025   0026E4  ECB3  F025         	call	_SPI_write
  4026   0026E8  EF05  F014         	goto	l219
  4027   0026EC                     l7704:
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  4031   0026EC  0E00               	movlw	0
  4032   0026EE  6E31               	movwf	___fldiv@a^0,c
  4033   0026F0  0E00               	movlw	0
  4034   0026F2  6E32               	movwf	(___fldiv@a+1)^0,c
  4035   0026F4  0E7F               	movlw	127
  4036   0026F6  6E33               	movwf	(___fldiv@a+2)^0,c
  4037   0026F8  0E43               	movlw	67
  4038   0026FA  6E34               	movwf	(___fldiv@a+3)^0,c
  4039   0026FC  0EC3               	movlw	195
  4040   0026FE  6E18               	movwf	___flmul@a^0,c
  4041   002700  0EF5               	movlw	245
  4042   002702  6E19               	movwf	(___flmul@a+1)^0,c
  4043   002704  0EC8               	movlw	200
  4044   002706  6E1A               	movwf	(___flmul@a+2)^0,c
  4045   002708  0E40               	movlw	64
  4046   00270A  6E1B               	movwf	(___flmul@a+3)^0,c
  4047   00270C  51DD               	movf	runDAC@DACindex& (0+255),w,b
  4048   00270E  6E06               	movwf	___xxtofl@val^0,c
  4049   002710  6A07               	clrf	(___xxtofl@val+1)^0,c
  4050   002712  6A08               	clrf	(___xxtofl@val+2)^0,c
  4051   002714  6A09               	clrf	(___xxtofl@val+3)^0,c
  4052   002716  0E01               	movlw	1
  4053   002718  ECD9  F019         	call	___xxtofl
  4054   00271C  C006  F014         	movff	?___xxtofl,___flmul@b
  4055   002720  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  4056   002724  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  4057   002728  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  4058   00272C  EC1D  F00D         	call	___flmul	;wreg free
  4059   002730  C014  F02D         	movff	?___flmul,___fldiv@b
  4060   002734  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  4061   002738  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  4062   00273C  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  4063   002740  EC13  F011         	call	___fldiv	;wreg free
  4064   002744  C02D  F0D3         	movff	?___fldiv,_runDAC$4445
  4065   002748  C02E  F0D4         	movff	?___fldiv+1,_runDAC$4445+1
  4066   00274C  C02F  F0D5         	movff	?___fldiv+2,_runDAC$4445+2
  4067   002750  C030  F0D6         	movff	?___fldiv+3,_runDAC$4445+3
  4068   002754                     
  4069                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  4070   002754  C0D3  F0A4         	movff	_runDAC$4445,sinf@x
  4071   002758  C0D4  F0A5         	movff	_runDAC$4445+1,sinf@x+1
  4072   00275C  C0D5  F0A6         	movff	_runDAC$4445+2,sinf@x+2
  4073   002760  C0D6  F0A7         	movff	_runDAC$4445+3,sinf@x+3
  4074   002764  EC37  F008         	call	_sinf	;wreg free
  4075   002768  C0A4  F0D7         	movff	?_sinf,_runDAC$4446
  4076   00276C  C0A5  F0D8         	movff	?_sinf+1,_runDAC$4446+1
  4077   002770  C0A6  F0D9         	movff	?_sinf+2,_runDAC$4446+2
  4078   002774  C0A7  F0DA         	movff	?_sinf+3,_runDAC$4446+3
  4079   002778                     
  4080                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  4081   002778  0E00               	movlw	0
  4082   00277A  6E4A               	movwf	___fladd@a^0,c
  4083   00277C  0E00               	movlw	0
  4084   00277E  6E4B               	movwf	(___fladd@a+1)^0,c
  4085   002780  0EFE               	movlw	254
  4086   002782  6E4C               	movwf	(___fladd@a+2)^0,c
  4087   002784  0E42               	movlw	66
  4088   002786  6E4D               	movwf	(___fladd@a+3)^0,c
  4089   002788  0E00               	movlw	0
  4090   00278A  6E18               	movwf	___flmul@a^0,c
  4091   00278C  0E00               	movlw	0
  4092   00278E  6E19               	movwf	(___flmul@a+1)^0,c
  4093   002790  0EFE               	movlw	254
  4094   002792  6E1A               	movwf	(___flmul@a+2)^0,c
  4095   002794  0E42               	movlw	66
  4096   002796  6E1B               	movwf	(___flmul@a+3)^0,c
  4097   002798  C0D7  F014         	movff	_runDAC$4446,___flmul@b
  4098   00279C  C0D8  F015         	movff	_runDAC$4446+1,___flmul@b+1
  4099   0027A0  C0D9  F016         	movff	_runDAC$4446+2,___flmul@b+2
  4100   0027A4  C0DA  F017         	movff	_runDAC$4446+3,___flmul@b+3
  4101   0027A8  EC1D  F00D         	call	___flmul	;wreg free
  4102   0027AC  C014  F046         	movff	?___flmul,___fladd@b
  4103   0027B0  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4104   0027B4  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4105   0027B8  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4106   0027BC  ECBC  F00A         	call	___fladd	;wreg free
  4107   0027C0  C046  F064         	movff	?___fladd,___fltol@f1
  4108   0027C4  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  4109   0027C8  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  4110   0027CC  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  4111   0027D0  EC5F  F01F         	call	___fltol	;wreg free
  4112   0027D4  0100               	movlb	0	; () banked
  4113   0027D6  5164               	movf	?___fltol& (0+255),w,b
  4114   0027D8  ECB3  F025         	call	_SPI_write
  4115                           
  4116                           ;DAC.c: 66:                 break;
  4117   0027DC  EF05  F014         	goto	l219
  4118   0027E0                     l7710:
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  4122   0027E0  51DD               	movf	runDAC@DACindex& (0+255),w,b
  4123   0027E2  0AFF               	xorlw	255
  4124   0027E4  ECB3  F025         	call	_SPI_write
  4125                           
  4126                           ;DAC.c: 69:                 break;
  4127   0027E8  EF05  F014         	goto	l219
  4128   0027EC                     l7714:
  4129                           
  4130                           ; BSR set to: 0
  4131   0027EC  51DC               	movf	runDAC@selectModeDAC& (0+255),w,b
  4132                           
  4133                           ; Switch size 1, requested type "simple"
  4134                           ; Number of cases is 3, Range of values is 1 to 3
  4135                           ; switch strategies available:
  4136                           ; Name         Instructions Cycles
  4137                           ; simple_byte           10     6 (average)
  4138                           ;	Chosen strategy is simple_byte
  4139   0027EE  0A01               	xorlw	1	; case 1
  4140   0027F0  B4D8               	btfsc	status,2,c
  4141   0027F2  EF10  F013         	goto	l7696
  4142   0027F6  0A03               	xorlw	3	; case 2
  4143   0027F8  B4D8               	btfsc	status,2,c
  4144   0027FA  EF76  F013         	goto	l7704
  4145   0027FE  0A01               	xorlw	1	; case 3
  4146   002800  B4D8               	btfsc	status,2,c
  4147   002802  EFF0  F013         	goto	l7710
  4148   002806  EF05  F014         	goto	l219
  4149   00280A                     l219:
  4150                           
  4151                           ;DAC.c: 71:         GODONE = 1;
  4152   00280A  82C2               	bsf	4034,1,c	;volatile
  4153   00280C                     l222:
  4154   00280C  B2C2               	btfsc	4034,1,c	;volatile
  4155   00280E  EF0B  F014         	goto	u9631
  4156   002812  EF0D  F014         	goto	u9630
  4157   002816                     u9631:
  4158   002816  EF06  F014         	goto	l222
  4159   00281A                     u9630:
  4160   00281A                     
  4161                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  4162   00281A  0EE6               	movlw	low STR_14
  4163   00281C  0100               	movlb	0	; () banked
  4164   00281E  6FCE               	movwf	printf@fmt& (0+255),b
  4165   002820  0EFF               	movlw	high STR_14
  4166   002822  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  4167   002824  CFC4 F0D0          	movff	4036,?_printf+2	;volatile
  4168   002828  6BD1               	clrf	(?_printf+3)& (0+255),b
  4169   00282A  ECAF  F026         	call	_printf	;wreg free
  4170   00282E                     
  4171                           ;DAC.c: 75:         if(PORTCbits.RC0){
  4172   00282E  A082               	btfss	130,0,c	;volatile
  4173   002830  EF1C  F014         	goto	u9641
  4174   002834  EF1E  F014         	goto	u9640
  4175   002838                     u9641:
  4176   002838  EF21  F014         	goto	l7722
  4177   00283C                     u9640:
  4178   00283C                     
  4179                           ;DAC.c: 76:             selectModeDAC = 1;
  4180   00283C  0E01               	movlw	1
  4181   00283E  0100               	movlb	0	; () banked
  4182   002840  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  4183   002842                     l7722:
  4184                           
  4185                           ;DAC.c: 78:         if(PORTAbits.RA4){
  4186   002842  A880               	btfss	128,4,c	;volatile
  4187   002844  EF26  F014         	goto	u9651
  4188   002848  EF28  F014         	goto	u9650
  4189   00284C                     u9651:
  4190   00284C  EF2B  F014         	goto	l7726
  4191   002850                     u9650:
  4192   002850                     
  4193                           ;DAC.c: 79:             selectModeDAC = 2;
  4194   002850  0E02               	movlw	2
  4195   002852  0100               	movlb	0	; () banked
  4196   002854  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  4197   002856                     l7726:
  4198                           
  4199                           ;DAC.c: 81:         if(PORTAbits.RA3){
  4200   002856  A680               	btfss	128,3,c	;volatile
  4201   002858  EF30  F014         	goto	u9661
  4202   00285C  EF32  F014         	goto	u9660
  4203   002860                     u9661:
  4204   002860  EF35  F014         	goto	l7730
  4205   002864                     u9660:
  4206   002864                     
  4207                           ;DAC.c: 82:             selectModeDAC = 3;
  4208   002864  0E03               	movlw	3
  4209   002866  0100               	movlb	0	; () banked
  4210   002868  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  4211   00286A                     l7730:
  4212                           
  4213                           ;DAC.c: 84:         if(PORTAbits.RA2){
  4214   00286A  A480               	btfss	128,2,c	;volatile
  4215   00286C  EF3A  F014         	goto	u9671
  4216   002870  EF3C  F014         	goto	u9670
  4217   002874                     u9671:
  4218   002874  EF3F  F014         	goto	l7734
  4219   002878                     u9670:
  4220   002878                     
  4221                           ;DAC.c: 85:             keepState = 0;
  4222   002878  0E00               	movlw	0
  4223   00287A  0100               	movlb	0	; () banked
  4224   00287C  6FDB               	movwf	runDAC@keepState& (0+255),b
  4225   00287E                     l7734:
  4226                           
  4227                           ;DAC.c: 87:         DACindex++;
  4228   00287E  0100               	movlb	0	; () banked
  4229   002880  2BDD               	incf	runDAC@DACindex& (0+255),f,b
  4230   002882                     
  4231                           ; BSR set to: 0
  4232                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  4233   002882  0E68               	movlw	104
  4234   002884  0100               	movlb	0	; () banked
  4235   002886  6FD2               	movwf	??_runDAC& (0+255),b
  4236   002888  0EE4               	movlw	228
  4237   00288A                     u9947:
  4238   00288A  2EE8               	decfsz	wreg,f,c
  4239   00288C  D7FE               	bra	u9947
  4240   00288E  2FD2               	decfsz	??_runDAC& (0+255),f,b
  4241   002890  D7FC               	bra	u9947
  4242   002892  0000               	nop	
  4243   002894                     l7738:
  4244                           
  4245                           ;DAC.c: 54:     while(keepState){
  4246   002894  0100               	movlb	0	; () banked
  4247   002896  51DB               	movf	runDAC@keepState& (0+255),w,b
  4248   002898  A4D8               	btfss	status,2,c
  4249   00289A  EF51  F014         	goto	u9681
  4250   00289E  EF53  F014         	goto	u9680
  4251   0028A2                     u9681:
  4252   0028A2  EFF6  F013         	goto	l7714
  4253   0028A6                     u9680:
  4254   0028A6                     
  4255                           ; BSR set to: 0
  4256   0028A6  0012               	return		;funcret
  4257   0028A8                     __end_of_runDAC:
  4258                           	callstack 0
  4259                           
  4260 ;; *************** function _sinf *****************
  4261 ;; Defined at:
  4262 ;;		line 27 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sinf.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  x               4   68[BANK0 ] float 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  ux              4   90[BANK0 ] struct .
  4267 ;;  y               4   86[BANK0 ] struct .
  4268 ;;  sign            1   81[BANK0 ] _Bool 
  4269 ;;  n               1   80[BANK0 ] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  4   68[BANK0 ] float 
  4272 ;; Registers used:
  4273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4279 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4280 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4282 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4283 ;;Total ram usage:       26 bytes
  4284 ;; Hardware stack levels used: 1
  4285 ;; Hardware stack levels required when called: 4
  4286 ;; This function calls:
  4287 ;;		___cosdf
  4288 ;;		___fladd
  4289 ;;		___flneg
  4290 ;;		___rem_pio2f
  4291 ;;		___sindf
  4292 ;; This function is called by:
  4293 ;;		_runDAC
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text14
  4298   00106E                     __ptext14:
  4299                           	callstack 0
  4300   00106E                     _sinf:
  4301                           	callstack 25
  4302   00106E  C0A4  F0BA         	movff	sinf@x,sinf@ux
  4303   001072  C0A5  F0BB         	movff	sinf@x+1,sinf@ux+1
  4304   001076  C0A6  F0BC         	movff	sinf@x+2,sinf@ux+2
  4305   00107A  C0A7  F0BD         	movff	sinf@x+3,sinf@ux+3
  4306   00107E  0100               	movlb	0	; () banked
  4307   001080  BFBD               	btfsc	(sinf@ux+3)& (0+255),7,b
  4308   001082  EF45  F008         	goto	u9181
  4309   001086  EF48  F008         	goto	u9180
  4310   00108A                     u9181:
  4311   00108A  0E01               	movlw	1
  4312   00108C  EF49  F008         	goto	u9190
  4313   001090                     u9180:
  4314   001090  0E00               	movlw	0
  4315   001092                     u9190:
  4316   001092  6FB1               	movwf	sinf@sign& (0+255),b
  4317   001094                     
  4318                           ; BSR set to: 0
  4319   001094  9FBD               	bcf	(sinf@ux+3)& (0+255),7,b
  4320   001096                     
  4321                           ; BSR set to: 0
  4322   001096  0EDB               	movlw	219
  4323   001098  5DBA               	subwf	sinf@ux& (0+255),w,b
  4324   00109A  0E0F               	movlw	15
  4325   00109C  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  4326   00109E  0E49               	movlw	73
  4327   0010A0  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  4328   0010A2  0E3F               	movlw	63
  4329   0010A4  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4330   0010A6  B0D8               	btfsc	status,0,c
  4331   0010A8  EF58  F008         	goto	u9201
  4332   0010AC  EF5A  F008         	goto	u9200
  4333   0010B0                     u9201:
  4334   0010B0  EF83  F008         	goto	l7360
  4335   0010B4                     u9200:
  4336   0010B4                     
  4337                           ; BSR set to: 0
  4338   0010B4  0E80               	movlw	128
  4339   0010B6  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  4340   0010B8  0E39               	movlw	57
  4341   0010BA  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4342   0010BC  B0D8               	btfsc	status,0,c
  4343   0010BE  EF63  F008         	goto	u9211
  4344   0010C2  EF65  F008         	goto	u9210
  4345   0010C6                     u9211:
  4346   0010C6  EF6F  F008         	goto	l7356
  4347   0010CA                     u9210:
  4348   0010CA                     
  4349                           ; BSR set to: 0
  4350   0010CA  C0A4  F0A4         	movff	sinf@x,?_sinf
  4351   0010CE  C0A5  F0A5         	movff	sinf@x+1,?_sinf+1
  4352   0010D2  C0A6  F0A6         	movff	sinf@x+2,?_sinf+2
  4353   0010D6  C0A7  F0A7         	movff	sinf@x+3,?_sinf+3
  4354   0010DA  EFBB  F00A         	goto	l1600
  4355   0010DE                     l7356:
  4356                           
  4357                           ; BSR set to: 0
  4358   0010DE  C0A4  F064         	movff	sinf@x,___sindf@x
  4359   0010E2  C0A5  F065         	movff	sinf@x+1,___sindf@x+1
  4360   0010E6  C0A6  F066         	movff	sinf@x+2,___sindf@x+2
  4361   0010EA  C0A7  F067         	movff	sinf@x+3,___sindf@x+3
  4362   0010EE  ECAD  F015         	call	___sindf	;wreg free
  4363   0010F2  C064  F0A4         	movff	?___sindf,?_sinf
  4364   0010F6  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  4365   0010FA  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  4366   0010FE  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  4367   001102  EFBB  F00A         	goto	l1600
  4368   001106                     l7360:
  4369                           
  4370                           ; BSR set to: 0
  4371   001106  0ED2               	movlw	210
  4372   001108  5DBA               	subwf	sinf@ux& (0+255),w,b
  4373   00110A  0E53               	movlw	83
  4374   00110C  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  4375   00110E  0E7B               	movlw	123
  4376   001110  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  4377   001112  0E40               	movlw	64
  4378   001114  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4379   001116  B0D8               	btfsc	status,0,c
  4380   001118  EF90  F008         	goto	u9221
  4381   00111C  EF92  F008         	goto	u9220
  4382   001120                     u9221:
  4383   001120  EF75  F009         	goto	l7390
  4384   001124                     u9220:
  4385   001124                     
  4386                           ; BSR set to: 0
  4387   001124  0EE4               	movlw	228
  4388   001126  5DBA               	subwf	sinf@ux& (0+255),w,b
  4389   001128  0ECB               	movlw	203
  4390   00112A  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  4391   00112C  0E16               	movlw	22
  4392   00112E  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  4393   001130  0E40               	movlw	64
  4394   001132  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4395   001134  B0D8               	btfsc	status,0,c
  4396   001136  EF9F  F008         	goto	u9231
  4397   00113A  EFA1  F008         	goto	u9230
  4398   00113E                     u9231:
  4399   00113E  EF0F  F009         	goto	l7380
  4400   001142                     u9230:
  4401   001142                     
  4402                           ; BSR set to: 0
  4403   001142  51B1               	movf	sinf@sign& (0+255),w,b
  4404   001144  B4D8               	btfsc	status,2,c
  4405   001146  EFA7  F008         	goto	u9241
  4406   00114A  EFA9  F008         	goto	u9240
  4407   00114E                     u9241:
  4408   00114E  EFE1  F008         	goto	l7374
  4409   001152                     u9240:
  4410   001152                     
  4411                           ; BSR set to: 0
  4412   001152  0EDB               	movlw	219
  4413   001154  6E4A               	movwf	___fladd@a^0,c
  4414   001156  0E0F               	movlw	15
  4415   001158  6E4B               	movwf	(___fladd@a+1)^0,c
  4416   00115A  0EC9               	movlw	201
  4417   00115C  6E4C               	movwf	(___fladd@a+2)^0,c
  4418   00115E  0E3F               	movlw	63
  4419   001160  6E4D               	movwf	(___fladd@a+3)^0,c
  4420   001162  C0A4  F046         	movff	sinf@x,___fladd@b
  4421   001166  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4422   00116A  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4423   00116E  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4424   001172  ECBC  F00A         	call	___fladd	;wreg free
  4425   001176  C046  F0B2         	movff	?___fladd,_sinf$4448
  4426   00117A  C047  F0B3         	movff	?___fladd+1,_sinf$4448+1
  4427   00117E  C048  F0B4         	movff	?___fladd+2,_sinf$4448+2
  4428   001182  C049  F0B5         	movff	?___fladd+3,_sinf$4448+3
  4429   001186                     l7368:
  4430   001186  C0B2  F064         	movff	_sinf$4448,___cosdf@x
  4431   00118A  C0B3  F065         	movff	_sinf$4448+1,___cosdf@x+1
  4432   00118E  C0B4  F066         	movff	_sinf$4448+2,___cosdf@x+2
  4433   001192  C0B5  F067         	movff	_sinf$4448+3,___cosdf@x+3
  4434   001196  ECDA  F018         	call	___cosdf	;wreg free
  4435   00119A  C064  F080         	movff	?___cosdf,___flneg@f1
  4436   00119E  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  4437   0011A2  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  4438   0011A6  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  4439   0011AA  ECD2  F025         	call	___flneg	;wreg free
  4440   0011AE  C080  F0A4         	movff	?___flneg,?_sinf
  4441   0011B2  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  4442   0011B6  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  4443   0011BA  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  4444   0011BE  EFBB  F00A         	goto	l1600
  4445   0011C2                     l7374:
  4446                           
  4447                           ; BSR set to: 0
  4448   0011C2  C0A4  F046         	movff	sinf@x,___fladd@b
  4449   0011C6  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4450   0011CA  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4451   0011CE  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4452   0011D2  0EDB               	movlw	219
  4453   0011D4  6E4A               	movwf	___fladd@a^0,c
  4454   0011D6  0E0F               	movlw	15
  4455   0011D8  6E4B               	movwf	(___fladd@a+1)^0,c
  4456   0011DA  0EC9               	movlw	201
  4457   0011DC  6E4C               	movwf	(___fladd@a+2)^0,c
  4458   0011DE  0EBF               	movlw	191
  4459   0011E0  6E4D               	movwf	(___fladd@a+3)^0,c
  4460   0011E2  ECBC  F00A         	call	___fladd	;wreg free
  4461   0011E6  C046  F0B2         	movff	?___fladd,_sinf$4448
  4462   0011EA  C047  F0B3         	movff	?___fladd+1,_sinf$4448+1
  4463   0011EE  C048  F0B4         	movff	?___fladd+2,_sinf$4448+2
  4464   0011F2  C049  F0B5         	movff	?___fladd+3,_sinf$4448+3
  4465   0011F6                     l7376:
  4466   0011F6  C0B2  F064         	movff	_sinf$4448,___cosdf@x
  4467   0011FA  C0B3  F065         	movff	_sinf$4448+1,___cosdf@x+1
  4468   0011FE  C0B4  F066         	movff	_sinf$4448+2,___cosdf@x+2
  4469   001202  C0B5  F067         	movff	_sinf$4448+3,___cosdf@x+3
  4470   001206  ECDA  F018         	call	___cosdf	;wreg free
  4471   00120A  C064  F0A4         	movff	?___cosdf,?_sinf
  4472   00120E  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  4473   001212  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  4474   001216  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  4475   00121A  EFBB  F00A         	goto	l1600
  4476   00121E                     l7380:
  4477                           
  4478                           ; BSR set to: 0
  4479   00121E  51B1               	movf	sinf@sign& (0+255),w,b
  4480   001220  A4D8               	btfss	status,2,c
  4481   001222  EF15  F009         	goto	u9251
  4482   001226  EF17  F009         	goto	u9250
  4483   00122A                     u9251:
  4484   00122A  EF3D  F009         	goto	l7384
  4485   00122E                     u9250:
  4486   00122E                     
  4487                           ; BSR set to: 0
  4488   00122E  0EDB               	movlw	219
  4489   001230  6E4A               	movwf	___fladd@a^0,c
  4490   001232  0E0F               	movlw	15
  4491   001234  6E4B               	movwf	(___fladd@a+1)^0,c
  4492   001236  0E49               	movlw	73
  4493   001238  6E4C               	movwf	(___fladd@a+2)^0,c
  4494   00123A  0EC0               	movlw	192
  4495   00123C  6E4D               	movwf	(___fladd@a+3)^0,c
  4496   00123E  C0A4  F046         	movff	sinf@x,___fladd@b
  4497   001242  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4498   001246  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4499   00124A  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4500   00124E  ECBC  F00A         	call	___fladd	;wreg free
  4501   001252  C046  F080         	movff	?___fladd,___flneg@f1
  4502   001256  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  4503   00125A  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  4504   00125E  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  4505   001262  ECD2  F025         	call	___flneg	;wreg free
  4506   001266  C080  F0A8         	movff	?___flneg,_sinf$4167
  4507   00126A  C081  F0A9         	movff	?___flneg+1,_sinf$4167+1
  4508   00126E  C082  F0AA         	movff	?___flneg+2,_sinf$4167+2
  4509   001272  C083  F0AB         	movff	?___flneg+3,_sinf$4167+3
  4510   001276  EF61  F009         	goto	l7386
  4511   00127A                     l7384:
  4512                           
  4513                           ; BSR set to: 0
  4514   00127A  0EDB               	movlw	219
  4515   00127C  6E4A               	movwf	___fladd@a^0,c
  4516   00127E  0E0F               	movlw	15
  4517   001280  6E4B               	movwf	(___fladd@a+1)^0,c
  4518   001282  0E49               	movlw	73
  4519   001284  6E4C               	movwf	(___fladd@a+2)^0,c
  4520   001286  0E40               	movlw	64
  4521   001288  6E4D               	movwf	(___fladd@a+3)^0,c
  4522   00128A  C0A4  F046         	movff	sinf@x,___fladd@b
  4523   00128E  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4524   001292  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4525   001296  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4526   00129A  ECBC  F00A         	call	___fladd	;wreg free
  4527   00129E  C046  F080         	movff	?___fladd,___flneg@f1
  4528   0012A2  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  4529   0012A6  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  4530   0012AA  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  4531   0012AE  ECD2  F025         	call	___flneg	;wreg free
  4532   0012B2  C080  F0A8         	movff	?___flneg,_sinf$4167
  4533   0012B6  C081  F0A9         	movff	?___flneg+1,_sinf$4167+1
  4534   0012BA  C082  F0AA         	movff	?___flneg+2,_sinf$4167+2
  4535   0012BE  C083  F0AB         	movff	?___flneg+3,_sinf$4167+3
  4536   0012C2                     l7386:
  4537   0012C2  C0A8  F064         	movff	_sinf$4167,___sindf@x
  4538   0012C6  C0A9  F065         	movff	_sinf$4167+1,___sindf@x+1
  4539   0012CA  C0AA  F066         	movff	_sinf$4167+2,___sindf@x+2
  4540   0012CE  C0AB  F067         	movff	_sinf$4167+3,___sindf@x+3
  4541   0012D2  ECAD  F015         	call	___sindf	;wreg free
  4542   0012D6  C064  F0A4         	movff	?___sindf,?_sinf
  4543   0012DA  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  4544   0012DE  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  4545   0012E2  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  4546   0012E6  EFBB  F00A         	goto	l1600
  4547   0012EA                     l7390:
  4548                           
  4549                           ; BSR set to: 0
  4550   0012EA  0ED6               	movlw	214
  4551   0012EC  5DBA               	subwf	sinf@ux& (0+255),w,b
  4552   0012EE  0E31               	movlw	49
  4553   0012F0  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  4554   0012F2  0EE2               	movlw	226
  4555   0012F4  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  4556   0012F6  0E40               	movlw	64
  4557   0012F8  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4558   0012FA  B0D8               	btfsc	status,0,c
  4559   0012FC  EF82  F009         	goto	u9261
  4560   001300  EF84  F009         	goto	u9260
  4561   001304                     u9261:
  4562   001304  EF25  F00A         	goto	l7420
  4563   001308                     u9260:
  4564   001308                     
  4565                           ; BSR set to: 0
  4566   001308  0EE0               	movlw	224
  4567   00130A  5DBA               	subwf	sinf@ux& (0+255),w,b
  4568   00130C  0EED               	movlw	237
  4569   00130E  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  4570   001310  0EAF               	movlw	175
  4571   001312  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  4572   001314  0E40               	movlw	64
  4573   001316  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4574   001318  B0D8               	btfsc	status,0,c
  4575   00131A  EF91  F009         	goto	u9271
  4576   00131E  EF93  F009         	goto	u9270
  4577   001322                     u9271:
  4578   001322  EFD3  F009         	goto	l7410
  4579   001326                     u9270:
  4580   001326                     
  4581                           ; BSR set to: 0
  4582   001326  51B1               	movf	sinf@sign& (0+255),w,b
  4583   001328  B4D8               	btfsc	status,2,c
  4584   00132A  EF99  F009         	goto	u9281
  4585   00132E  EF9B  F009         	goto	u9280
  4586   001332                     u9281:
  4587   001332  EFB7  F009         	goto	l7404
  4588   001336                     u9280:
  4589   001336                     
  4590                           ; BSR set to: 0
  4591   001336  C0A4  F046         	movff	sinf@x,___fladd@b
  4592   00133A  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4593   00133E  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4594   001342  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4595   001346  0EE4               	movlw	228
  4596   001348  6E4A               	movwf	___fladd@a^0,c
  4597   00134A  0ECB               	movlw	203
  4598   00134C  6E4B               	movwf	(___fladd@a+1)^0,c
  4599   00134E  0E96               	movlw	150
  4600   001350  6E4C               	movwf	(___fladd@a+2)^0,c
  4601   001352  0E40               	movlw	64
  4602   001354  6E4D               	movwf	(___fladd@a+3)^0,c
  4603   001356  ECBC  F00A         	call	___fladd	;wreg free
  4604   00135A  C046  F0B2         	movff	?___fladd,_sinf$4448
  4605   00135E  C047  F0B3         	movff	?___fladd+1,_sinf$4448+1
  4606   001362  C048  F0B4         	movff	?___fladd+2,_sinf$4448+2
  4607   001366  C049  F0B5         	movff	?___fladd+3,_sinf$4448+3
  4608   00136A  EFFB  F008         	goto	l7376
  4609   00136E                     l7404:
  4610                           
  4611                           ; BSR set to: 0
  4612   00136E  0EE4               	movlw	228
  4613   001370  6E4A               	movwf	___fladd@a^0,c
  4614   001372  0ECB               	movlw	203
  4615   001374  6E4B               	movwf	(___fladd@a+1)^0,c
  4616   001376  0E96               	movlw	150
  4617   001378  6E4C               	movwf	(___fladd@a+2)^0,c
  4618   00137A  0EC0               	movlw	192
  4619   00137C  6E4D               	movwf	(___fladd@a+3)^0,c
  4620   00137E  C0A4  F046         	movff	sinf@x,___fladd@b
  4621   001382  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4622   001386  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4623   00138A  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4624   00138E  ECBC  F00A         	call	___fladd	;wreg free
  4625   001392  C046  F0B2         	movff	?___fladd,_sinf$4448
  4626   001396  C047  F0B3         	movff	?___fladd+1,_sinf$4448+1
  4627   00139A  C048  F0B4         	movff	?___fladd+2,_sinf$4448+2
  4628   00139E  C049  F0B5         	movff	?___fladd+3,_sinf$4448+3
  4629   0013A2  EFC3  F008         	goto	l7368
  4630   0013A6                     l7410:
  4631                           
  4632                           ; BSR set to: 0
  4633   0013A6  51B1               	movf	sinf@sign& (0+255),w,b
  4634   0013A8  A4D8               	btfss	status,2,c
  4635   0013AA  EFD9  F009         	goto	u9291
  4636   0013AE  EFDB  F009         	goto	u9290
  4637   0013B2                     u9291:
  4638   0013B2  EFF7  F009         	goto	l7414
  4639   0013B6                     u9290:
  4640   0013B6                     
  4641                           ; BSR set to: 0
  4642   0013B6  C0A4  F046         	movff	sinf@x,___fladd@b
  4643   0013BA  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4644   0013BE  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4645   0013C2  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4646   0013C6  0EDB               	movlw	219
  4647   0013C8  6E4A               	movwf	___fladd@a^0,c
  4648   0013CA  0E0F               	movlw	15
  4649   0013CC  6E4B               	movwf	(___fladd@a+1)^0,c
  4650   0013CE  0EC9               	movlw	201
  4651   0013D0  6E4C               	movwf	(___fladd@a+2)^0,c
  4652   0013D2  0EC0               	movlw	192
  4653   0013D4  6E4D               	movwf	(___fladd@a+3)^0,c
  4654   0013D6  ECBC  F00A         	call	___fladd	;wreg free
  4655   0013DA  C046  F0AC         	movff	?___fladd,_sinf$4168
  4656   0013DE  C047  F0AD         	movff	?___fladd+1,_sinf$4168+1
  4657   0013E2  C048  F0AE         	movff	?___fladd+2,_sinf$4168+2
  4658   0013E6  C049  F0AF         	movff	?___fladd+3,_sinf$4168+3
  4659   0013EA  EF11  F00A         	goto	l7416
  4660   0013EE                     l7414:
  4661                           
  4662                           ; BSR set to: 0
  4663   0013EE  C0A4  F046         	movff	sinf@x,___fladd@b
  4664   0013F2  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4665   0013F6  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4666   0013FA  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4667   0013FE  0EDB               	movlw	219
  4668   001400  6E4A               	movwf	___fladd@a^0,c
  4669   001402  0E0F               	movlw	15
  4670   001404  6E4B               	movwf	(___fladd@a+1)^0,c
  4671   001406  0EC9               	movlw	201
  4672   001408  6E4C               	movwf	(___fladd@a+2)^0,c
  4673   00140A  0E40               	movlw	64
  4674   00140C  6E4D               	movwf	(___fladd@a+3)^0,c
  4675   00140E  ECBC  F00A         	call	___fladd	;wreg free
  4676   001412  C046  F0AC         	movff	?___fladd,_sinf$4168
  4677   001416  C047  F0AD         	movff	?___fladd+1,_sinf$4168+1
  4678   00141A  C048  F0AE         	movff	?___fladd+2,_sinf$4168+2
  4679   00141E  C049  F0AF         	movff	?___fladd+3,_sinf$4168+3
  4680   001422                     l7416:
  4681   001422  C0AC  F064         	movff	_sinf$4168,___sindf@x
  4682   001426  C0AD  F065         	movff	_sinf$4168+1,___sindf@x+1
  4683   00142A  C0AE  F066         	movff	_sinf$4168+2,___sindf@x+2
  4684   00142E  C0AF  F067         	movff	_sinf$4168+3,___sindf@x+3
  4685   001432  ECAD  F015         	call	___sindf	;wreg free
  4686   001436  C064  F0A4         	movff	?___sindf,?_sinf
  4687   00143A  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  4688   00143E  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  4689   001442  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  4690   001446  EFBB  F00A         	goto	l1600
  4691   00144A                     l7420:
  4692                           
  4693                           ; BSR set to: 0
  4694   00144A  0E80               	movlw	128
  4695   00144C  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  4696   00144E  0E7F               	movlw	127
  4697   001450  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4698   001452  A0D8               	btfss	status,0,c
  4699   001454  EF2E  F00A         	goto	u9301
  4700   001458  EF30  F00A         	goto	u9300
  4701   00145C                     u9301:
  4702   00145C  EF42  F00A         	goto	l7428
  4703   001460                     u9300:
  4704   001460                     
  4705                           ; BSR set to: 0
  4706   001460  0EFF               	movlw	255
  4707   001462  13BA               	iorwf	sinf@ux& (0+255),f,b
  4708   001464  0EFF               	movlw	255
  4709   001466  13BB               	iorwf	(sinf@ux+1)& (0+255),f,b
  4710   001468  0EFF               	movlw	255
  4711   00146A  13BC               	iorwf	(sinf@ux+2)& (0+255),f,b
  4712   00146C  0E00               	movlw	0
  4713   00146E  13BD               	iorwf	(sinf@ux+3)& (0+255),f,b
  4714   001470                     
  4715                           ; BSR set to: 0
  4716   001470  C0BA  F0A4         	movff	sinf@ux,?_sinf
  4717   001474  C0BB  F0A5         	movff	sinf@ux+1,?_sinf+1
  4718   001478  C0BC  F0A6         	movff	sinf@ux+2,?_sinf+2
  4719   00147C  C0BD  F0A7         	movff	sinf@ux+3,?_sinf+3
  4720   001480  EFBB  F00A         	goto	l1600
  4721   001484                     l7428:
  4722                           
  4723                           ; BSR set to: 0
  4724   001484  C0A4  F084         	movff	sinf@x,___rem_pio2f@x
  4725   001488  C0A5  F085         	movff	sinf@x+1,___rem_pio2f@x+1
  4726   00148C  C0A6  F086         	movff	sinf@x+2,___rem_pio2f@x+2
  4727   001490  C0A7  F087         	movff	sinf@x+3,___rem_pio2f@x+3
  4728   001494  0EB6               	movlw	low sinf@y
  4729   001496  6F88               	movwf	___rem_pio2f@y& (0+255),b
  4730   001498  EC32  F00F         	call	___rem_pio2f	;wreg free
  4731   00149C  0100               	movlb	0	; () banked
  4732   00149E  5184               	movf	?___rem_pio2f& (0+255),w,b
  4733   0014A0  0B03               	andlw	3
  4734   0014A2  6FB0               	movwf	sinf@n& (0+255),b
  4735   0014A4  EFAC  F00A         	goto	l7446
  4736   0014A8                     l7430:
  4737                           
  4738                           ; BSR set to: 0
  4739   0014A8  C0B6  F080         	movff	sinf@y,___flneg@f1
  4740   0014AC  C0B7  F081         	movff	sinf@y+1,___flneg@f1+1
  4741   0014B0  C0B8  F082         	movff	sinf@y+2,___flneg@f1+2
  4742   0014B4  C0B9  F083         	movff	sinf@y+3,___flneg@f1+3
  4743   0014B8  ECD2  F025         	call	___flneg	;wreg free
  4744   0014BC  C080  F0B6         	movff	?___flneg,sinf@y
  4745   0014C0  C081  F0B7         	movff	?___flneg+1,sinf@y+1
  4746   0014C4  C082  F0B8         	movff	?___flneg+2,sinf@y+2
  4747   0014C8  C083  F0B9         	movff	?___flneg+3,sinf@y+3
  4748   0014CC                     l7432:
  4749   0014CC  C0B6  F064         	movff	sinf@y,___sindf@x
  4750   0014D0  C0B7  F065         	movff	sinf@y+1,___sindf@x+1
  4751   0014D4  C0B8  F066         	movff	sinf@y+2,___sindf@x+2
  4752   0014D8  C0B9  F067         	movff	sinf@y+3,___sindf@x+3
  4753   0014DC  ECAD  F015         	call	___sindf	;wreg free
  4754   0014E0  C064  F0A4         	movff	?___sindf,?_sinf
  4755   0014E4  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  4756   0014E8  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  4757   0014EC  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  4758   0014F0  EFBB  F00A         	goto	l1600
  4759   0014F4                     l7436:
  4760                           
  4761                           ; BSR set to: 0
  4762   0014F4  C0B6  F064         	movff	sinf@y,___cosdf@x
  4763   0014F8  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  4764   0014FC  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  4765   001500  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  4766   001504  ECDA  F018         	call	___cosdf	;wreg free
  4767   001508  C064  F0A4         	movff	?___cosdf,?_sinf
  4768   00150C  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  4769   001510  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  4770   001514  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  4771   001518  EFBB  F00A         	goto	l1600
  4772   00151C                     l7440:
  4773                           
  4774                           ; BSR set to: 0
  4775   00151C  C0B6  F064         	movff	sinf@y,___cosdf@x
  4776   001520  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  4777   001524  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  4778   001528  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  4779   00152C  ECDA  F018         	call	___cosdf	;wreg free
  4780   001530  C064  F080         	movff	?___cosdf,___flneg@f1
  4781   001534  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  4782   001538  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  4783   00153C  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  4784   001540  ECD2  F025         	call	___flneg	;wreg free
  4785   001544  C080  F0A4         	movff	?___flneg,?_sinf
  4786   001548  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  4787   00154C  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  4788   001550  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  4789   001554  EFBB  F00A         	goto	l1600
  4790   001558                     l7446:
  4791                           
  4792                           ; BSR set to: 0
  4793   001558  51B0               	movf	sinf@n& (0+255),w,b
  4794                           
  4795                           ; Switch size 1, requested type "simple"
  4796                           ; Number of cases is 3, Range of values is 0 to 2
  4797                           ; switch strategies available:
  4798                           ; Name         Instructions Cycles
  4799                           ; simple_byte           10     6 (average)
  4800                           ;	Chosen strategy is simple_byte
  4801   00155A  0A00               	xorlw	0	; case 0
  4802   00155C  B4D8               	btfsc	status,2,c
  4803   00155E  EF66  F00A         	goto	l7432
  4804   001562  0A01               	xorlw	1	; case 1
  4805   001564  B4D8               	btfsc	status,2,c
  4806   001566  EF7A  F00A         	goto	l7436
  4807   00156A  0A03               	xorlw	3	; case 2
  4808   00156C  B4D8               	btfsc	status,2,c
  4809   00156E  EF54  F00A         	goto	l7430
  4810   001572  EF8E  F00A         	goto	l7440
  4811   001576                     l1600:
  4812   001576  0012               	return		;funcret
  4813   001578                     __end_of_sinf:
  4814                           	callstack 0
  4815                           
  4816 ;; *************** function ___sindf *****************
  4817 ;; Defined at:
  4818 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__sindf.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  x               4    4[BANK0 ] float 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  z               4   32[BANK0 ] float 
  4823 ;;  s               4   28[BANK0 ] float 
  4824 ;;  w               4   12[BANK0 ] float 
  4825 ;;  r               4    8[BANK0 ] float 
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  4    4[BANK0 ] float 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4835 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;Total ram usage:       32 bytes
  4840 ;; Hardware stack levels used: 1
  4841 ;; Hardware stack levels required when called: 2
  4842 ;; This function calls:
  4843 ;;		___fladd
  4844 ;;		___flmul
  4845 ;; This function is called by:
  4846 ;;		_sinf
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text15
  4851   002B5A                     __ptext15:
  4852                           	callstack 0
  4853   002B5A                     ___sindf:
  4854                           	callstack 26
  4855   002B5A  C064  F014         	movff	___sindf@x,___flmul@b
  4856   002B5E  C065  F015         	movff	___sindf@x+1,___flmul@b+1
  4857   002B62  C066  F016         	movff	___sindf@x+2,___flmul@b+2
  4858   002B66  C067  F017         	movff	___sindf@x+3,___flmul@b+3
  4859   002B6A  C064  F018         	movff	___sindf@x,___flmul@a
  4860   002B6E  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  4861   002B72  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  4862   002B76  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  4863   002B7A  EC1D  F00D         	call	___flmul	;wreg free
  4864   002B7E  C014  F080         	movff	?___flmul,___sindf@z
  4865   002B82  C015  F081         	movff	?___flmul+1,___sindf@z+1
  4866   002B86  C016  F082         	movff	?___flmul+2,___sindf@z+2
  4867   002B8A  C017  F083         	movff	?___flmul+3,___sindf@z+3
  4868   002B8E  C080  F014         	movff	___sindf@z,___flmul@b
  4869   002B92  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4870   002B96  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4871   002B9A  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4872   002B9E  C080  F018         	movff	___sindf@z,___flmul@a
  4873   002BA2  C081  F019         	movff	___sindf@z+1,___flmul@a+1
  4874   002BA6  C082  F01A         	movff	___sindf@z+2,___flmul@a+2
  4875   002BAA  C083  F01B         	movff	___sindf@z+3,___flmul@a+3
  4876   002BAE  EC1D  F00D         	call	___flmul	;wreg free
  4877   002BB2  C014  F06C         	movff	?___flmul,___sindf@w
  4878   002BB6  C015  F06D         	movff	?___flmul+1,___sindf@w+1
  4879   002BBA  C016  F06E         	movff	?___flmul+2,___sindf@w+2
  4880   002BBE  C017  F06F         	movff	?___flmul+3,___sindf@w+3
  4881   002BC2  0E3C               	movlw	60
  4882   002BC4  6E18               	movwf	___flmul@a^0,c
  4883   002BC6  0E6C               	movlw	108
  4884   002BC8  6E19               	movwf	(___flmul@a+1)^0,c
  4885   002BCA  0E36               	movlw	54
  4886   002BCC  6E1A               	movwf	(___flmul@a+2)^0,c
  4887   002BCE  0E36               	movlw	54
  4888   002BD0  6E1B               	movwf	(___flmul@a+3)^0,c
  4889   002BD2  C080  F014         	movff	___sindf@z,___flmul@b
  4890   002BD6  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4891   002BDA  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4892   002BDE  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4893   002BE2  EC1D  F00D         	call	___flmul	;wreg free
  4894   002BE6  C014  F046         	movff	?___flmul,___fladd@b
  4895   002BEA  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4896   002BEE  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4897   002BF2  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4898   002BF6  0ECF               	movlw	207
  4899   002BF8  6E4A               	movwf	___fladd@a^0,c
  4900   002BFA  0E07               	movlw	7
  4901   002BFC  6E4B               	movwf	(___fladd@a+1)^0,c
  4902   002BFE  0E50               	movlw	80
  4903   002C00  6E4C               	movwf	(___fladd@a+2)^0,c
  4904   002C02  0EB9               	movlw	185
  4905   002C04  6E4D               	movwf	(___fladd@a+3)^0,c
  4906   002C06  ECBC  F00A         	call	___fladd	;wreg free
  4907   002C0A  C046  F068         	movff	?___fladd,___sindf@r
  4908   002C0E  C047  F069         	movff	?___fladd+1,___sindf@r+1
  4909   002C12  C048  F06A         	movff	?___fladd+2,___sindf@r+2
  4910   002C16  C049  F06B         	movff	?___fladd+3,___sindf@r+3
  4911   002C1A  C080  F014         	movff	___sindf@z,___flmul@b
  4912   002C1E  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4913   002C22  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4914   002C26  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4915   002C2A  C064  F018         	movff	___sindf@x,___flmul@a
  4916   002C2E  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  4917   002C32  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  4918   002C36  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  4919   002C3A  EC1D  F00D         	call	___flmul	;wreg free
  4920   002C3E  C014  F07C         	movff	?___flmul,___sindf@s
  4921   002C42  C015  F07D         	movff	?___flmul+1,___sindf@s+1
  4922   002C46  C016  F07E         	movff	?___flmul+2,___sindf@s+2
  4923   002C4A  C017  F07F         	movff	?___flmul+3,___sindf@s+3
  4924   002C4E  0EAB               	movlw	171
  4925   002C50  6E4A               	movwf	___fladd@a^0,c
  4926   002C52  0EAA               	movlw	170
  4927   002C54  6E4B               	movwf	(___fladd@a+1)^0,c
  4928   002C56  0E2A               	movlw	42
  4929   002C58  6E4C               	movwf	(___fladd@a+2)^0,c
  4930   002C5A  0EBE               	movlw	190
  4931   002C5C  6E4D               	movwf	(___fladd@a+3)^0,c
  4932   002C5E  0E84               	movlw	132
  4933   002C60  6E18               	movwf	___flmul@a^0,c
  4934   002C62  0E88               	movlw	136
  4935   002C64  6E19               	movwf	(___flmul@a+1)^0,c
  4936   002C66  0E08               	movlw	8
  4937   002C68  6E1A               	movwf	(___flmul@a+2)^0,c
  4938   002C6A  0E3C               	movlw	60
  4939   002C6C  6E1B               	movwf	(___flmul@a+3)^0,c
  4940   002C6E  C080  F014         	movff	___sindf@z,___flmul@b
  4941   002C72  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4942   002C76  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4943   002C7A  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4944   002C7E  EC1D  F00D         	call	___flmul	;wreg free
  4945   002C82  C014  F046         	movff	?___flmul,___fladd@b
  4946   002C86  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4947   002C8A  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4948   002C8E  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4949   002C92  ECBC  F00A         	call	___fladd	;wreg free
  4950   002C96  C046  F070         	movff	?___fladd,___sindf$4453
  4951   002C9A  C047  F071         	movff	?___fladd+1,___sindf$4453+1
  4952   002C9E  C048  F072         	movff	?___fladd+2,___sindf$4453+2
  4953   002CA2  C049  F073         	movff	?___fladd+3,___sindf$4453+3
  4954   002CA6  C06C  F018         	movff	___sindf@w,___flmul@a
  4955   002CAA  C06D  F019         	movff	___sindf@w+1,___flmul@a+1
  4956   002CAE  C06E  F01A         	movff	___sindf@w+2,___flmul@a+2
  4957   002CB2  C06F  F01B         	movff	___sindf@w+3,___flmul@a+3
  4958   002CB6  C07C  F014         	movff	___sindf@s,___flmul@b
  4959   002CBA  C07D  F015         	movff	___sindf@s+1,___flmul@b+1
  4960   002CBE  C07E  F016         	movff	___sindf@s+2,___flmul@b+2
  4961   002CC2  C07F  F017         	movff	___sindf@s+3,___flmul@b+3
  4962   002CC6  EC1D  F00D         	call	___flmul	;wreg free
  4963   002CCA  C014  F074         	movff	?___flmul,___sindf$4454
  4964   002CCE  C015  F075         	movff	?___flmul+1,___sindf$4454+1
  4965   002CD2  C016  F076         	movff	?___flmul+2,___sindf$4454+2
  4966   002CD6  C017  F077         	movff	?___flmul+3,___sindf$4454+3
  4967   002CDA  C064  F04A         	movff	___sindf@x,___fladd@a
  4968   002CDE  C065  F04B         	movff	___sindf@x+1,___fladd@a+1
  4969   002CE2  C066  F04C         	movff	___sindf@x+2,___fladd@a+2
  4970   002CE6  C067  F04D         	movff	___sindf@x+3,___fladd@a+3
  4971   002CEA  C07C  F018         	movff	___sindf@s,___flmul@a
  4972   002CEE  C07D  F019         	movff	___sindf@s+1,___flmul@a+1
  4973   002CF2  C07E  F01A         	movff	___sindf@s+2,___flmul@a+2
  4974   002CF6  C07F  F01B         	movff	___sindf@s+3,___flmul@a+3
  4975   002CFA  C070  F014         	movff	___sindf$4453,___flmul@b
  4976   002CFE  C071  F015         	movff	___sindf$4453+1,___flmul@b+1
  4977   002D02  C072  F016         	movff	___sindf$4453+2,___flmul@b+2
  4978   002D06  C073  F017         	movff	___sindf$4453+3,___flmul@b+3
  4979   002D0A  EC1D  F00D         	call	___flmul	;wreg free
  4980   002D0E  C014  F046         	movff	?___flmul,___fladd@b
  4981   002D12  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4982   002D16  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4983   002D1A  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4984   002D1E  ECBC  F00A         	call	___fladd	;wreg free
  4985   002D22  C046  F078         	movff	?___fladd,___sindf$4455
  4986   002D26  C047  F079         	movff	?___fladd+1,___sindf$4455+1
  4987   002D2A  C048  F07A         	movff	?___fladd+2,___sindf$4455+2
  4988   002D2E  C049  F07B         	movff	?___fladd+3,___sindf$4455+3
  4989   002D32  C078  F046         	movff	___sindf$4455,___fladd@b
  4990   002D36  C079  F047         	movff	___sindf$4455+1,___fladd@b+1
  4991   002D3A  C07A  F048         	movff	___sindf$4455+2,___fladd@b+2
  4992   002D3E  C07B  F049         	movff	___sindf$4455+3,___fladd@b+3
  4993   002D42  C068  F018         	movff	___sindf@r,___flmul@a
  4994   002D46  C069  F019         	movff	___sindf@r+1,___flmul@a+1
  4995   002D4A  C06A  F01A         	movff	___sindf@r+2,___flmul@a+2
  4996   002D4E  C06B  F01B         	movff	___sindf@r+3,___flmul@a+3
  4997   002D52  C074  F014         	movff	___sindf$4454,___flmul@b
  4998   002D56  C075  F015         	movff	___sindf$4454+1,___flmul@b+1
  4999   002D5A  C076  F016         	movff	___sindf$4454+2,___flmul@b+2
  5000   002D5E  C077  F017         	movff	___sindf$4454+3,___flmul@b+3
  5001   002D62  EC1D  F00D         	call	___flmul	;wreg free
  5002   002D66  C014  F04A         	movff	?___flmul,___fladd@a
  5003   002D6A  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  5004   002D6E  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  5005   002D72  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  5006   002D76  ECBC  F00A         	call	___fladd	;wreg free
  5007   002D7A  C046  F064         	movff	?___fladd,?___sindf
  5008   002D7E  C047  F065         	movff	?___fladd+1,?___sindf+1
  5009   002D82  C048  F066         	movff	?___fladd+2,?___sindf+2
  5010   002D86  C049  F067         	movff	?___fladd+3,?___sindf+3
  5011   002D8A  0012               	return		;funcret
  5012   002D8C                     __end_of___sindf:
  5013                           	callstack 0
  5014                           
  5015 ;; *************** function ___rem_pio2f *****************
  5016 ;; Defined at:
  5017 ;;		line 44 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__rem_pio2f.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;  x               4   36[BANK0 ] float 
  5020 ;;  y               1   40[BANK0 ] PTR 
  5021 ;;		 -> sinf@y(4), 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  n               4   64[BANK0 ] long 
  5024 ;;  t               4   60[BANK0 ] float 
  5025 ;;  fn              4   56[BANK0 ] float 
  5026 ;;  ux              4   52[BANK0 ] struct .
  5027 ;;  ty              4   43[BANK0 ] [1]
  5028 ;;  sign            1   51[BANK0 ] _Bool 
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  2   36[BANK0 ] int 
  5031 ;; Registers used:
  5032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5038 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;Total ram usage:       32 bytes
  5043 ;; Hardware stack levels used: 1
  5044 ;; Hardware stack levels required when called: 3
  5045 ;; This function calls:
  5046 ;;		___fladd
  5047 ;;		___flmul
  5048 ;;		___flneg
  5049 ;;		___flsub
  5050 ;;		___fltol
  5051 ;;		___xxtofl
  5052 ;;		_fabsf
  5053 ;; This function is called by:
  5054 ;;		_sinf
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text16
  5059   001E64                     __ptext16:
  5060                           	callstack 0
  5061   001E64                     ___rem_pio2f:
  5062                           	callstack 25
  5063   001E64  C115  F094         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  5064   001E68  C116  F095         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  5065   001E6C  C117  F096         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  5066   001E70  C118  F097         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  5067   001E74  C084  F094         	movff	___rem_pio2f@x,___rem_pio2f@ux
  5068   001E78  C085  F095         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  5069   001E7C  C086  F096         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  5070   001E80  C087  F097         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  5071   001E84  0100               	movlb	0	; () banked
  5072   001E86  BF97               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  5073   001E88  EF48  F00F         	goto	u9051
  5074   001E8C  EF4B  F00F         	goto	u9050
  5075   001E90                     u9051:
  5076   001E90  0E01               	movlw	1
  5077   001E92  EF4C  F00F         	goto	u9060
  5078   001E96                     u9050:
  5079   001E96  0E00               	movlw	0
  5080   001E98                     u9060:
  5081   001E98  6F93               	movwf	___rem_pio2f@sign& (0+255),b
  5082   001E9A                     
  5083                           ; BSR set to: 0
  5084   001E9A  9F97               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  5085   001E9C                     
  5086                           ; BSR set to: 0
  5087   001E9C  0EDB               	movlw	219
  5088   001E9E  5D94               	subwf	___rem_pio2f@ux& (0+255),w,b
  5089   001EA0  0E0F               	movlw	15
  5090   001EA2  5995               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  5091   001EA4  0EC9               	movlw	201
  5092   001EA6  5996               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  5093   001EA8  0E4D               	movlw	77
  5094   001EAA  5997               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  5095   001EAC  B0D8               	btfsc	status,0,c
  5096   001EAE  EF5B  F00F         	goto	u9071
  5097   001EB2  EF5D  F00F         	goto	u9070
  5098   001EB6                     u9071:
  5099   001EB6  EF49  F010         	goto	l7292
  5100   001EBA                     u9070:
  5101   001EBA                     
  5102                           ; BSR set to: 0
  5103   001EBA  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  5104   001EBE  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  5105   001EC2  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  5106   001EC6  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  5107   001ECA  EC41  F026         	call	_fabsf	;wreg free
  5108   001ECE  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  5109   001ED2  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  5110   001ED6  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  5111   001EDA  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  5112   001EDE  0E00               	movlw	0
  5113   001EE0  6E4A               	movwf	___fladd@a^0,c
  5114   001EE2  0E00               	movlw	0
  5115   001EE4  6E4B               	movwf	(___fladd@a+1)^0,c
  5116   001EE6  0E00               	movlw	0
  5117   001EE8  6E4C               	movwf	(___fladd@a+2)^0,c
  5118   001EEA  0E3F               	movlw	63
  5119   001EEC  6E4D               	movwf	(___fladd@a+3)^0,c
  5120   001EEE  0E83               	movlw	131
  5121   001EF0  6E18               	movwf	___flmul@a^0,c
  5122   001EF2  0EF9               	movlw	249
  5123   001EF4  6E19               	movwf	(___flmul@a+1)^0,c
  5124   001EF6  0E22               	movlw	34
  5125   001EF8  6E1A               	movwf	(___flmul@a+2)^0,c
  5126   001EFA  0E3F               	movlw	63
  5127   001EFC  6E1B               	movwf	(___flmul@a+3)^0,c
  5128   001EFE  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  5129   001F02  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  5130   001F06  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  5131   001F0A  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  5132   001F0E  EC1D  F00D         	call	___flmul	;wreg free
  5133   001F12  C014  F046         	movff	?___flmul,___fladd@b
  5134   001F16  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5135   001F1A  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5136   001F1E  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5137   001F22  ECBC  F00A         	call	___fladd	;wreg free
  5138   001F26  C046  F064         	movff	?___fladd,___fltol@f1
  5139   001F2A  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  5140   001F2E  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  5141   001F32  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  5142   001F36  EC5F  F01F         	call	___fltol	;wreg free
  5143   001F3A  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  5144   001F3E  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  5145   001F42  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  5146   001F46  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  5147   001F4A  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  5148   001F4E  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  5149   001F52  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  5150   001F56  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  5151   001F5A  0E01               	movlw	1
  5152   001F5C  ECD9  F019         	call	___xxtofl
  5153   001F60  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  5154   001F64  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  5155   001F68  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  5156   001F6C  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  5157   001F70  0EDA               	movlw	218
  5158   001F72  6E18               	movwf	___flmul@a^0,c
  5159   001F74  0E0F               	movlw	15
  5160   001F76  6E19               	movwf	(___flmul@a+1)^0,c
  5161   001F78  0EC9               	movlw	201
  5162   001F7A  6E1A               	movwf	(___flmul@a+2)^0,c
  5163   001F7C  0E3F               	movlw	63
  5164   001F7E  6E1B               	movwf	(___flmul@a+3)^0,c
  5165   001F80  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  5166   001F84  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  5167   001F88  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  5168   001F8C  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  5169   001F90  EC1D  F00D         	call	___flmul	;wreg free
  5170   001F94  C014  F068         	movff	?___flmul,___flsub@a
  5171   001F98  C015  F069         	movff	?___flmul+1,___flsub@a+1
  5172   001F9C  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  5173   001FA0  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  5174   001FA4  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  5175   001FA8  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  5176   001FAC  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  5177   001FB0  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  5178   001FB4  EC4A  F025         	call	___flsub	;wreg free
  5179   001FB8  C064  F08F         	movff	?___flsub,___rem_pio2f$4452
  5180   001FBC  C065  F090         	movff	?___flsub+1,___rem_pio2f$4452+1
  5181   001FC0  C066  F091         	movff	?___flsub+2,___rem_pio2f$4452+2
  5182   001FC4  C067  F092         	movff	?___flsub+3,___rem_pio2f$4452+3
  5183   001FC8  C08F  F064         	movff	___rem_pio2f$4452,___flsub@b
  5184   001FCC  C090  F065         	movff	___rem_pio2f$4452+1,___flsub@b+1
  5185   001FD0  C091  F066         	movff	___rem_pio2f$4452+2,___flsub@b+2
  5186   001FD4  C092  F067         	movff	___rem_pio2f$4452+3,___flsub@b+3
  5187   001FD8  0EA3               	movlw	163
  5188   001FDA  6E18               	movwf	___flmul@a^0,c
  5189   001FDC  0E85               	movlw	133
  5190   001FDE  6E19               	movwf	(___flmul@a+1)^0,c
  5191   001FE0  0E88               	movlw	136
  5192   001FE2  6E1A               	movwf	(___flmul@a+2)^0,c
  5193   001FE4  0E32               	movlw	50
  5194   001FE6  6E1B               	movwf	(___flmul@a+3)^0,c
  5195   001FE8  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  5196   001FEC  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  5197   001FF0  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  5198   001FF4  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  5199   001FF8  EC1D  F00D         	call	___flmul	;wreg free
  5200   001FFC  C014  F068         	movff	?___flmul,___flsub@a
  5201   002000  C015  F069         	movff	?___flmul+1,___flsub@a+1
  5202   002004  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  5203   002008  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  5204   00200C  EC4A  F025         	call	___flsub	;wreg free
  5205   002010  0100               	movlb	0	; () banked
  5206   002012  5188               	movf	___rem_pio2f@y& (0+255),w,b
  5207   002014  6ED9               	movwf	fsr2l,c
  5208   002016  6ADA               	clrf	fsr2h,c
  5209   002018  C064  FFDE         	movff	?___flsub,postinc2
  5210   00201C  C065  FFDE         	movff	?___flsub+1,postinc2
  5211   002020  C066  FFDE         	movff	?___flsub+2,postinc2
  5212   002024  C067  FFDE         	movff	?___flsub+3,postinc2
  5213   002028                     
  5214                           ; BSR set to: 0
  5215   002028  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  5216   00202A  B4D8               	btfsc	status,2,c
  5217   00202C  EF1A  F010         	goto	u9081
  5218   002030  EF1C  F010         	goto	u9080
  5219   002034                     u9081:
  5220   002034  EF43  F010         	goto	l1650
  5221   002038                     u9080:
  5222   002038                     l7286:
  5223                           
  5224                           ; BSR set to: 0
  5225   002038  5188               	movf	___rem_pio2f@y& (0+255),w,b
  5226   00203A  6ED9               	movwf	fsr2l,c
  5227   00203C  6ADA               	clrf	fsr2h,c
  5228   00203E  CFDE F080          	movff	postinc2,___flneg@f1
  5229   002042  CFDE F081          	movff	postinc2,___flneg@f1+1
  5230   002046  CFDE F082          	movff	postinc2,___flneg@f1+2
  5231   00204A  CFDE F083          	movff	postinc2,___flneg@f1+3
  5232   00204E  ECD2  F025         	call	___flneg	;wreg free
  5233   002052  0100               	movlb	0	; () banked
  5234   002054  5188               	movf	___rem_pio2f@y& (0+255),w,b
  5235   002056  6ED9               	movwf	fsr2l,c
  5236   002058  6ADA               	clrf	fsr2h,c
  5237   00205A  C080  FFDE         	movff	?___flneg,postinc2
  5238   00205E  C081  FFDE         	movff	?___flneg+1,postinc2
  5239   002062  C082  FFDE         	movff	?___flneg+2,postinc2
  5240   002066  C083  FFDE         	movff	?___flneg+3,postinc2
  5241   00206A                     
  5242                           ; BSR set to: 0
  5243   00206A  C0A0  F089         	movff	___rem_pio2f@n,??___rem_pio2f
  5244   00206E  C0A1  F08A         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  5245   002072  1F89               	comf	??___rem_pio2f& (0+255),f,b
  5246   002074  1F8A               	comf	(??___rem_pio2f+1)& (0+255),f,b
  5247   002076  4B89               	infsnz	??___rem_pio2f& (0+255),f,b
  5248   002078  2B8A               	incf	(??___rem_pio2f+1)& (0+255),f,b
  5249   00207A  C089  F084         	movff	??___rem_pio2f,?___rem_pio2f
  5250   00207E  C08A  F085         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  5251   002082  EF12  F011         	goto	l1651
  5252   002086                     l1650:
  5253                           
  5254                           ; BSR set to: 0
  5255   002086  C0A0  F084         	movff	___rem_pio2f@n,?___rem_pio2f
  5256   00208A  C0A1  F085         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  5257   00208E  EF12  F011         	goto	l1651
  5258   002092                     l7292:
  5259                           
  5260                           ; BSR set to: 0
  5261   002092  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  5262   002096  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  5263   00209A  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  5264   00209E  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  5265   0020A2  EC41  F026         	call	_fabsf	;wreg free
  5266   0020A6  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  5267   0020AA  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  5268   0020AE  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  5269   0020B2  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  5270   0020B6  0E00               	movlw	0
  5271   0020B8  6E4A               	movwf	___fladd@a^0,c
  5272   0020BA  0E00               	movlw	0
  5273   0020BC  6E4B               	movwf	(___fladd@a+1)^0,c
  5274   0020BE  0E00               	movlw	0
  5275   0020C0  6E4C               	movwf	(___fladd@a+2)^0,c
  5276   0020C2  0E3F               	movlw	63
  5277   0020C4  6E4D               	movwf	(___fladd@a+3)^0,c
  5278   0020C6  0E83               	movlw	131
  5279   0020C8  6E18               	movwf	___flmul@a^0,c
  5280   0020CA  0EF9               	movlw	249
  5281   0020CC  6E19               	movwf	(___flmul@a+1)^0,c
  5282   0020CE  0E22               	movlw	34
  5283   0020D0  6E1A               	movwf	(___flmul@a+2)^0,c
  5284   0020D2  0E3F               	movlw	63
  5285   0020D4  6E1B               	movwf	(___flmul@a+3)^0,c
  5286   0020D6  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  5287   0020DA  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  5288   0020DE  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  5289   0020E2  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  5290   0020E6  EC1D  F00D         	call	___flmul	;wreg free
  5291   0020EA  C014  F046         	movff	?___flmul,___fladd@b
  5292   0020EE  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5293   0020F2  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5294   0020F6  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5295   0020FA  ECBC  F00A         	call	___fladd	;wreg free
  5296   0020FE  C046  F064         	movff	?___fladd,___fltol@f1
  5297   002102  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  5298   002106  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  5299   00210A  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  5300   00210E  EC5F  F01F         	call	___fltol	;wreg free
  5301   002112  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  5302   002116  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  5303   00211A  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  5304   00211E  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  5305   002122  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  5306   002126  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  5307   00212A  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  5308   00212E  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  5309   002132  0E01               	movlw	1
  5310   002134  ECD9  F019         	call	___xxtofl
  5311   002138  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  5312   00213C  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  5313   002140  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  5314   002144  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  5315   002148  0EDA               	movlw	218
  5316   00214A  6E18               	movwf	___flmul@a^0,c
  5317   00214C  0E0F               	movlw	15
  5318   00214E  6E19               	movwf	(___flmul@a+1)^0,c
  5319   002150  0EC9               	movlw	201
  5320   002152  6E1A               	movwf	(___flmul@a+2)^0,c
  5321   002154  0E3F               	movlw	63
  5322   002156  6E1B               	movwf	(___flmul@a+3)^0,c
  5323   002158  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  5324   00215C  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  5325   002160  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  5326   002164  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  5327   002168  EC1D  F00D         	call	___flmul	;wreg free
  5328   00216C  C014  F068         	movff	?___flmul,___flsub@a
  5329   002170  C015  F069         	movff	?___flmul+1,___flsub@a+1
  5330   002174  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  5331   002178  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  5332   00217C  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  5333   002180  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  5334   002184  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  5335   002188  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  5336   00218C  EC4A  F025         	call	___flsub	;wreg free
  5337   002190  C064  F08F         	movff	?___flsub,___rem_pio2f$4452
  5338   002194  C065  F090         	movff	?___flsub+1,___rem_pio2f$4452+1
  5339   002198  C066  F091         	movff	?___flsub+2,___rem_pio2f$4452+2
  5340   00219C  C067  F092         	movff	?___flsub+3,___rem_pio2f$4452+3
  5341   0021A0  C08F  F064         	movff	___rem_pio2f$4452,___flsub@b
  5342   0021A4  C090  F065         	movff	___rem_pio2f$4452+1,___flsub@b+1
  5343   0021A8  C091  F066         	movff	___rem_pio2f$4452+2,___flsub@b+2
  5344   0021AC  C092  F067         	movff	___rem_pio2f$4452+3,___flsub@b+3
  5345   0021B0  0EA3               	movlw	163
  5346   0021B2  6E18               	movwf	___flmul@a^0,c
  5347   0021B4  0E85               	movlw	133
  5348   0021B6  6E19               	movwf	(___flmul@a+1)^0,c
  5349   0021B8  0E88               	movlw	136
  5350   0021BA  6E1A               	movwf	(___flmul@a+2)^0,c
  5351   0021BC  0E32               	movlw	50
  5352   0021BE  6E1B               	movwf	(___flmul@a+3)^0,c
  5353   0021C0  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  5354   0021C4  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  5355   0021C8  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  5356   0021CC  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  5357   0021D0  EC1D  F00D         	call	___flmul	;wreg free
  5358   0021D4  C014  F068         	movff	?___flmul,___flsub@a
  5359   0021D8  C015  F069         	movff	?___flmul+1,___flsub@a+1
  5360   0021DC  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  5361   0021E0  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  5362   0021E4  EC4A  F025         	call	___flsub	;wreg free
  5363   0021E8  C064  F08B         	movff	?___flsub,___rem_pio2f@ty
  5364   0021EC  C065  F08C         	movff	?___flsub+1,___rem_pio2f@ty+1
  5365   0021F0  C066  F08D         	movff	?___flsub+2,___rem_pio2f@ty+2
  5366   0021F4  C067  F08E         	movff	?___flsub+3,___rem_pio2f@ty+3
  5367   0021F8  0100               	movlb	0	; () banked
  5368   0021FA  5188               	movf	___rem_pio2f@y& (0+255),w,b
  5369   0021FC  6ED9               	movwf	fsr2l,c
  5370   0021FE  6ADA               	clrf	fsr2h,c
  5371   002200  C08B  FFDE         	movff	___rem_pio2f@ty,postinc2
  5372   002204  C08C  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  5373   002208  C08D  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  5374   00220C  C08E  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  5375   002210                     
  5376                           ; BSR set to: 0
  5377   002210  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  5378   002212  B4D8               	btfsc	status,2,c
  5379   002214  EF0E  F011         	goto	u9091
  5380   002218  EF10  F011         	goto	u9090
  5381   00221C                     u9091:
  5382   00221C  EF43  F010         	goto	l1650
  5383   002220                     u9090:
  5384   002220  EF1C  F010         	goto	l7286
  5385   002224                     l1651:
  5386                           
  5387                           ; BSR set to: 0
  5388   002224  0012               	return		;funcret
  5389   002226                     __end_of___rem_pio2f:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function _fabsf *****************
  5393 ;; Defined at:
  5394 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fabsf.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  x               4    5[COMRAM] float 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;  u               4    9[COMRAM] struct .
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  4    5[COMRAM] float 
  5401 ;; Registers used:
  5402 ;;		status,2, status,0
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5408 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5409 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5411 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5412 ;;Total ram usage:        8 bytes
  5413 ;; Hardware stack levels used: 1
  5414 ;; Hardware stack levels required when called: 1
  5415 ;; This function calls:
  5416 ;;		Nothing
  5417 ;; This function is called by:
  5418 ;;		___rem_pio2f
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	text17
  5423   004C82                     __ptext17:
  5424                           	callstack 0
  5425   004C82                     _fabsf:
  5426                           	callstack 26
  5427   004C82  C111  F00A         	movff	fabsf@F465,fabsf@u
  5428   004C86  C112  F00B         	movff	fabsf@F465+1,fabsf@u+1
  5429   004C8A  C113  F00C         	movff	fabsf@F465+2,fabsf@u+2
  5430   004C8E  C114  F00D         	movff	fabsf@F465+3,fabsf@u+3
  5431   004C92  C006  F00A         	movff	fabsf@x,fabsf@u
  5432   004C96  C007  F00B         	movff	fabsf@x+1,fabsf@u+1
  5433   004C9A  C008  F00C         	movff	fabsf@x+2,fabsf@u+2
  5434   004C9E  C009  F00D         	movff	fabsf@x+3,fabsf@u+3
  5435   004CA2  9E0D               	bcf	(fabsf@u+3)^0,7,c
  5436   004CA4  C00A  F006         	movff	fabsf@u,?_fabsf
  5437   004CA8  C00B  F007         	movff	fabsf@u+1,?_fabsf+1
  5438   004CAC  C00C  F008         	movff	fabsf@u+2,?_fabsf+2
  5439   004CB0  C00D  F009         	movff	fabsf@u+3,?_fabsf+3
  5440   004CB4  0012               	return		;funcret
  5441   004CB6                     __end_of_fabsf:
  5442                           	callstack 0
  5443                           
  5444 ;; *************** function ___cosdf *****************
  5445 ;; Defined at:
  5446 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__cosdf.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  x               4    4[BANK0 ] float 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  z               4   28[BANK0 ] float 
  5451 ;;  w               4   24[BANK0 ] float 
  5452 ;;  r               4    8[BANK0 ] float 
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  4    4[BANK0 ] float 
  5455 ;; Registers used:
  5456 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5462 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5465 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5466 ;;Total ram usage:       28 bytes
  5467 ;; Hardware stack levels used: 1
  5468 ;; Hardware stack levels required when called: 2
  5469 ;; This function calls:
  5470 ;;		___fladd
  5471 ;;		___flmul
  5472 ;; This function is called by:
  5473 ;;		_sinf
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	text18
  5478   0031B4                     __ptext18:
  5479                           	callstack 0
  5480   0031B4                     ___cosdf:
  5481                           	callstack 26
  5482   0031B4  C064  F014         	movff	___cosdf@x,___flmul@b
  5483   0031B8  C065  F015         	movff	___cosdf@x+1,___flmul@b+1
  5484   0031BC  C066  F016         	movff	___cosdf@x+2,___flmul@b+2
  5485   0031C0  C067  F017         	movff	___cosdf@x+3,___flmul@b+3
  5486   0031C4  C064  F018         	movff	___cosdf@x,___flmul@a
  5487   0031C8  C065  F019         	movff	___cosdf@x+1,___flmul@a+1
  5488   0031CC  C066  F01A         	movff	___cosdf@x+2,___flmul@a+2
  5489   0031D0  C067  F01B         	movff	___cosdf@x+3,___flmul@a+3
  5490   0031D4  EC1D  F00D         	call	___flmul	;wreg free
  5491   0031D8  C014  F07C         	movff	?___flmul,___cosdf@z
  5492   0031DC  C015  F07D         	movff	?___flmul+1,___cosdf@z+1
  5493   0031E0  C016  F07E         	movff	?___flmul+2,___cosdf@z+2
  5494   0031E4  C017  F07F         	movff	?___flmul+3,___cosdf@z+3
  5495   0031E8  C07C  F014         	movff	___cosdf@z,___flmul@b
  5496   0031EC  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  5497   0031F0  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  5498   0031F4  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  5499   0031F8  C07C  F018         	movff	___cosdf@z,___flmul@a
  5500   0031FC  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  5501   003200  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  5502   003204  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  5503   003208  EC1D  F00D         	call	___flmul	;wreg free
  5504   00320C  C014  F078         	movff	?___flmul,___cosdf@w
  5505   003210  C015  F079         	movff	?___flmul+1,___cosdf@w+1
  5506   003214  C016  F07A         	movff	?___flmul+2,___cosdf@w+2
  5507   003218  C017  F07B         	movff	?___flmul+3,___cosdf@w+3
  5508   00321C  0E17               	movlw	23
  5509   00321E  6E18               	movwf	___flmul@a^0,c
  5510   003220  0E9A               	movlw	154
  5511   003222  6E19               	movwf	(___flmul@a+1)^0,c
  5512   003224  0ECC               	movlw	204
  5513   003226  6E1A               	movwf	(___flmul@a+2)^0,c
  5514   003228  0E37               	movlw	55
  5515   00322A  6E1B               	movwf	(___flmul@a+3)^0,c
  5516   00322C  C07C  F014         	movff	___cosdf@z,___flmul@b
  5517   003230  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  5518   003234  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  5519   003238  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  5520   00323C  EC1D  F00D         	call	___flmul	;wreg free
  5521   003240  C014  F046         	movff	?___flmul,___fladd@b
  5522   003244  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5523   003248  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5524   00324C  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5525   003250  0E3F               	movlw	63
  5526   003252  6E4A               	movwf	___fladd@a^0,c
  5527   003254  0E04               	movlw	4
  5528   003256  6E4B               	movwf	(___fladd@a+1)^0,c
  5529   003258  0EB6               	movlw	182
  5530   00325A  6E4C               	movwf	(___fladd@a+2)^0,c
  5531   00325C  0EBA               	movlw	186
  5532   00325E  6E4D               	movwf	(___fladd@a+3)^0,c
  5533   003260  ECBC  F00A         	call	___fladd	;wreg free
  5534   003264  C046  F068         	movff	?___fladd,___cosdf@r
  5535   003268  C047  F069         	movff	?___fladd+1,___cosdf@r+1
  5536   00326C  C048  F06A         	movff	?___fladd+2,___cosdf@r+2
  5537   003270  C049  F06B         	movff	?___fladd+3,___cosdf@r+3
  5538   003274  0E00               	movlw	0
  5539   003276  6E4A               	movwf	___fladd@a^0,c
  5540   003278  0E00               	movlw	0
  5541   00327A  6E4B               	movwf	(___fladd@a+1)^0,c
  5542   00327C  0E80               	movlw	128
  5543   00327E  6E4C               	movwf	(___fladd@a+2)^0,c
  5544   003280  0E3F               	movlw	63
  5545   003282  6E4D               	movwf	(___fladd@a+3)^0,c
  5546   003284  0E00               	movlw	0
  5547   003286  6E18               	movwf	___flmul@a^0,c
  5548   003288  0E00               	movlw	0
  5549   00328A  6E19               	movwf	(___flmul@a+1)^0,c
  5550   00328C  0E00               	movlw	0
  5551   00328E  6E1A               	movwf	(___flmul@a+2)^0,c
  5552   003290  0EBF               	movlw	191
  5553   003292  6E1B               	movwf	(___flmul@a+3)^0,c
  5554   003294  C07C  F014         	movff	___cosdf@z,___flmul@b
  5555   003298  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  5556   00329C  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  5557   0032A0  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  5558   0032A4  EC1D  F00D         	call	___flmul	;wreg free
  5559   0032A8  C014  F046         	movff	?___flmul,___fladd@b
  5560   0032AC  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5561   0032B0  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5562   0032B4  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5563   0032B8  ECBC  F00A         	call	___fladd	;wreg free
  5564   0032BC  C046  F06C         	movff	?___fladd,___cosdf$4449
  5565   0032C0  C047  F06D         	movff	?___fladd+1,___cosdf$4449+1
  5566   0032C4  C048  F06E         	movff	?___fladd+2,___cosdf$4449+2
  5567   0032C8  C049  F06F         	movff	?___fladd+3,___cosdf$4449+3
  5568   0032CC  C07C  F018         	movff	___cosdf@z,___flmul@a
  5569   0032D0  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  5570   0032D4  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  5571   0032D8  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  5572   0032DC  C078  F014         	movff	___cosdf@w,___flmul@b
  5573   0032E0  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  5574   0032E4  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  5575   0032E8  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  5576   0032EC  EC1D  F00D         	call	___flmul	;wreg free
  5577   0032F0  C014  F070         	movff	?___flmul,___cosdf$4450
  5578   0032F4  C015  F071         	movff	?___flmul+1,___cosdf$4450+1
  5579   0032F8  C016  F072         	movff	?___flmul+2,___cosdf$4450+2
  5580   0032FC  C017  F073         	movff	?___flmul+3,___cosdf$4450+3
  5581   003300  0E9F               	movlw	159
  5582   003302  6E18               	movwf	___flmul@a^0,c
  5583   003304  0EAA               	movlw	170
  5584   003306  6E19               	movwf	(___flmul@a+1)^0,c
  5585   003308  0E2A               	movlw	42
  5586   00330A  6E1A               	movwf	(___flmul@a+2)^0,c
  5587   00330C  0E3D               	movlw	61
  5588   00330E  6E1B               	movwf	(___flmul@a+3)^0,c
  5589   003310  C078  F014         	movff	___cosdf@w,___flmul@b
  5590   003314  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  5591   003318  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  5592   00331C  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  5593   003320  EC1D  F00D         	call	___flmul	;wreg free
  5594   003324  C014  F04A         	movff	?___flmul,___fladd@a
  5595   003328  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  5596   00332C  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  5597   003330  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  5598   003334  C06C  F046         	movff	___cosdf$4449,___fladd@b
  5599   003338  C06D  F047         	movff	___cosdf$4449+1,___fladd@b+1
  5600   00333C  C06E  F048         	movff	___cosdf$4449+2,___fladd@b+2
  5601   003340  C06F  F049         	movff	___cosdf$4449+3,___fladd@b+3
  5602   003344  ECBC  F00A         	call	___fladd	;wreg free
  5603   003348  C046  F074         	movff	?___fladd,___cosdf$4451
  5604   00334C  C047  F075         	movff	?___fladd+1,___cosdf$4451+1
  5605   003350  C048  F076         	movff	?___fladd+2,___cosdf$4451+2
  5606   003354  C049  F077         	movff	?___fladd+3,___cosdf$4451+3
  5607   003358  C074  F046         	movff	___cosdf$4451,___fladd@b
  5608   00335C  C075  F047         	movff	___cosdf$4451+1,___fladd@b+1
  5609   003360  C076  F048         	movff	___cosdf$4451+2,___fladd@b+2
  5610   003364  C077  F049         	movff	___cosdf$4451+3,___fladd@b+3
  5611   003368  C068  F018         	movff	___cosdf@r,___flmul@a
  5612   00336C  C069  F019         	movff	___cosdf@r+1,___flmul@a+1
  5613   003370  C06A  F01A         	movff	___cosdf@r+2,___flmul@a+2
  5614   003374  C06B  F01B         	movff	___cosdf@r+3,___flmul@a+3
  5615   003378  C070  F014         	movff	___cosdf$4450,___flmul@b
  5616   00337C  C071  F015         	movff	___cosdf$4450+1,___flmul@b+1
  5617   003380  C072  F016         	movff	___cosdf$4450+2,___flmul@b+2
  5618   003384  C073  F017         	movff	___cosdf$4450+3,___flmul@b+3
  5619   003388  EC1D  F00D         	call	___flmul	;wreg free
  5620   00338C  C014  F04A         	movff	?___flmul,___fladd@a
  5621   003390  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  5622   003394  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  5623   003398  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  5624   00339C  ECBC  F00A         	call	___fladd	;wreg free
  5625   0033A0  C046  F064         	movff	?___fladd,?___cosdf
  5626   0033A4  C047  F065         	movff	?___fladd+1,?___cosdf+1
  5627   0033A8  C048  F066         	movff	?___fladd+2,?___cosdf+2
  5628   0033AC  C049  F067         	movff	?___fladd+3,?___cosdf+3
  5629   0033B0  0012               	return		;funcret
  5630   0033B2                     __end_of___cosdf:
  5631                           	callstack 0
  5632                           
  5633 ;; *************** function _printf *****************
  5634 ;; Defined at:
  5635 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\printf.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  5638 ;;		 -> STR_26(5), STR_14(5), 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  ret             2    0        int 
  5641 ;;  ap              1   83[COMRAM] PTR void [1]
  5642 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  2  110[BANK0 ] int 
  5645 ;; Registers used:
  5646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5652 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;Total ram usage:        5 bytes
  5657 ;; Hardware stack levels used: 1
  5658 ;; Hardware stack levels required when called: 8
  5659 ;; This function calls:
  5660 ;;		_vfprintf
  5661 ;; This function is called by:
  5662 ;;		_runDAC
  5663 ;;		_runUART
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           	psect	text19
  5668   004D5E                     __ptext19:
  5669                           	callstack 0
  5670   004D5E                     _printf:
  5671                           	callstack 21
  5672   004D5E  0ED0               	movlw	low (?_printf+2)
  5673   004D60  6E54               	movwf	printf@ap^0,c
  5674   004D62  0E00               	movlw	0
  5675   004D64  0100               	movlb	0	; () banked
  5676   004D66  6FC7               	movwf	vfprintf@fp& (0+255),b
  5677   004D68  0E00               	movlw	0
  5678   004D6A  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  5679   004D6C  C0CE  F0C9         	movff	printf@fmt,vfprintf@fmt
  5680   004D70  C0CF  F0CA         	movff	printf@fmt+1,vfprintf@fmt+1
  5681   004D74  0E54               	movlw	low printf@ap
  5682   004D76  6FCB               	movwf	vfprintf@ap& (0+255),b
  5683   004D78  EC25  F025         	call	_vfprintf	;wreg free
  5684   004D7C  0012               	return		;funcret
  5685   004D7E                     __end_of_printf:
  5686                           	callstack 0
  5687                           
  5688 ;; *************** function _SPI_write *****************
  5689 ;; Defined at:
  5690 ;;		line 93 in file "DAC.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;  data            1    wreg     unsigned char 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  data            1    7[COMRAM] unsigned char 
  5695 ;;  LSB             1    6[COMRAM] unsigned char 
  5696 ;;  MSB             1    5[COMRAM] unsigned char 
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  1    wreg      void 
  5699 ;; Registers used:
  5700 ;;		wreg, status,2, status,0
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5707 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5709 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;Total ram usage:        3 bytes
  5711 ;; Hardware stack levels used: 1
  5712 ;; Hardware stack levels required when called: 1
  5713 ;; This function calls:
  5714 ;;		Nothing
  5715 ;; This function is called by:
  5716 ;;		_runDAC
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720                           	psect	text20
  5721   004B66                     __ptext20:
  5722                           	callstack 0
  5723   004B66                     _SPI_write:
  5724                           	callstack 28
  5725                           
  5726                           ;incstack = 0
  5727                           ;SPI_write@data stored from wreg
  5728   004B66  6E08               	movwf	SPI_write@data^0,c
  5729   004B68                     
  5730                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  5731   004B68  3808               	swapf	SPI_write@data^0,w,c
  5732   004B6A  0B0F               	andlw	15
  5733   004B6C  0930               	iorlw	48
  5734   004B6E  6E06               	movwf	SPI_write@MSB^0,c
  5735                           
  5736                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  5737   004B70  3808               	swapf	SPI_write@data^0,w,c
  5738   004B72  0BF0               	andlw	240
  5739   004B74  6E07               	movwf	SPI_write@LSB^0,c
  5740   004B76                     
  5741                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  5742   004B76  968A               	bcf	138,3,c	;volatile
  5743   004B78                     
  5744                           ;DAC.c: 101:     SSP1BUF = MSB;
  5745   004B78  C006  FFC9         	movff	SPI_write@MSB,4041	;volatile
  5746   004B7C                     l233:
  5747   004B7C  A69E               	btfss	3998,3,c	;volatile
  5748   004B7E  EFC3  F025         	goto	u5811
  5749   004B82  EFC5  F025         	goto	u5810
  5750   004B86                     u5811:
  5751   004B86  EFBE  F025         	goto	l233
  5752   004B8A                     u5810:
  5753   004B8A                     
  5754                           ;DAC.c: 103:     SSP1IF = 0;
  5755   004B8A  969E               	bcf	3998,3,c	;volatile
  5756                           
  5757                           ;DAC.c: 105:     SSP1BUF = LSB;
  5758   004B8C  C007  FFC9         	movff	SPI_write@LSB,4041	;volatile
  5759   004B90                     l236:
  5760   004B90  A69E               	btfss	3998,3,c	;volatile
  5761   004B92  EFCD  F025         	goto	u5821
  5762   004B96  EFCF  F025         	goto	u5820
  5763   004B9A                     u5821:
  5764   004B9A  EFC8  F025         	goto	l236
  5765   004B9E                     u5820:
  5766   004B9E                     
  5767                           ;DAC.c: 107:     SSP1IF = 0;
  5768   004B9E  969E               	bcf	3998,3,c	;volatile
  5769                           
  5770                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  5771   004BA0  868A               	bsf	138,3,c	;volatile
  5772   004BA2  0012               	return		;funcret
  5773   004BA4                     __end_of_SPI_write:
  5774                           	callstack 0
  5775                           
  5776 ;; *************** function _runADC *****************
  5777 ;; Defined at:
  5778 ;;		line 13 in file "ADC.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;		None
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  text           17    0[BANK1 ] unsigned char [17]
  5783 ;;  voltage2        4   21[BANK1 ] float 
  5784 ;;  voltage1        4   17[BANK1 ] float 
  5785 ;;  pot2            2   27[BANK1 ] unsigned short 
  5786 ;;  pot1            2   25[BANK1 ] unsigned short 
  5787 ;;  keepState       1   29[BANK1 ] unsigned char 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  1    wreg      void 
  5790 ;; Registers used:
  5791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Totals:         0       2      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;Total ram usage:       32 bytes
  5802 ;; Hardware stack levels used: 1
  5803 ;; Hardware stack levels required when called: 9
  5804 ;; This function calls:
  5805 ;;		_LCD_ShowString
  5806 ;;		___fldiv
  5807 ;;		___flmul
  5808 ;;		___xxtofl
  5809 ;;		_sprintf
  5810 ;; This function is called by:
  5811 ;;		_main
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           	psect	text21
  5816   002FA2                     __ptext21:
  5817                           	callstack 0
  5818   002FA2                     _runADC:
  5819                           	callstack 21
  5820   002FA2                     
  5821                           ;ADC.c: 16: ANSELAbits.ANSA5 = 1;
  5822   002FA2  010F               	movlb	15	; () banked
  5823   002FA4  8B38               	bsf	56,5,b	;volatile
  5824                           
  5825                           ;ADC.c: 17: ANSELEbits.ANSE0 = 1;
  5826   002FA6  813C               	bsf	60,0,b	;volatile
  5827                           
  5828                           ;ADC.c: 19: ADCON2bits.ADFM = 1;
  5829   002FA8  8EC0               	bsf	192,7,c	;volatile
  5830   002FAA                     
  5831                           ; BSR set to: 15
  5832                           ;ADC.c: 20: ADCON2bits.ADCS = 0b110;
  5833   002FAA  50C0               	movf	192,w,c	;volatile
  5834   002FAC  0BF8               	andlw	-8
  5835   002FAE  0906               	iorlw	6
  5836   002FB0  6EC0               	movwf	192,c	;volatile
  5837                           
  5838                           ;ADC.c: 21: ADCON2bits.ACQT = 0b110;
  5839   002FB2  50C0               	movf	192,w,c	;volatile
  5840   002FB4  0BC7               	andlw	-57
  5841   002FB6  0930               	iorlw	48
  5842   002FB8  6EC0               	movwf	192,c	;volatile
  5843   002FBA                     
  5844                           ; BSR set to: 15
  5845                           ;ADC.c: 22: ADCON0bits.ADON = 1;
  5846   002FBA  80C2               	bsf	194,0,c	;volatile
  5847   002FBC                     
  5848                           ; BSR set to: 15
  5849                           ;ADC.c: 25: uint16_t pot1, pot2;;ADC.c: 26: float voltage1, voltage2;;ADC.c: 27: char te
      +                          xt[17] = "";
  5850   002FBC  EE21  F095         	lfsr	2,runADC@text
  5851   002FC0  0E10               	movlw	16
  5852   002FC2                     u9541:
  5853   002FC2  6ADE               	clrf	postinc2,c
  5854   002FC4  06E8               	decf	wreg,f,c
  5855   002FC6  E2FD               	bc	u9541
  5856   002FC8                     
  5857                           ; BSR set to: 15
  5858                           ;ADC.c: 28: uint8_t keepState = 1;
  5859   002FC8  0E01               	movlw	1
  5860   002FCA  0101               	movlb	1	; () banked
  5861   002FCC  6FB2               	movwf	runADC@keepState& (0+255),b
  5862                           
  5863                           ;ADC.c: 30: while(keepState){
  5864   002FCE  EFCF  F018         	goto	l429
  5865   002FD2                     l7640:
  5866                           
  5867                           ; BSR set to: 1
  5868                           ;ADC.c: 32:     ADCON0bits.CHS = 5;
  5869   002FD2  50C2               	movf	194,w,c	;volatile
  5870   002FD4  0B83               	andlw	-125
  5871   002FD6  0914               	iorlw	20
  5872   002FD8  6EC2               	movwf	194,c	;volatile
  5873   002FDA                     
  5874                           ; BSR set to: 1
  5875                           ;ADC.c: 33:     GODONE = 1;
  5876   002FDA  82C2               	bsf	4034,1,c	;volatile
  5877   002FDC                     l431:
  5878   002FDC  B2C2               	btfsc	4034,1,c	;volatile
  5879   002FDE  EFF3  F017         	goto	u9551
  5880   002FE2  EFF5  F017         	goto	u9550
  5881   002FE6                     u9551:
  5882   002FE6  EFEE  F017         	goto	l431
  5883   002FEA                     u9550:
  5884   002FEA                     
  5885                           ;ADC.c: 35:     pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  5886   002FEA  50C3               	movf	195,w,c	;volatile
  5887   002FEC  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  5888   002FF0  0100               	movlb	0	; () banked
  5889   002FF2  6BE8               	clrf	(??_runADC+1)& (0+255),b
  5890   002FF4  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  5891   002FF8  6BE7               	clrf	??_runADC& (0+255),b
  5892   002FFA  11E7               	iorwf	??_runADC& (0+255),w,b
  5893   002FFC  0101               	movlb	1	; () banked
  5894   002FFE  6FAE               	movwf	runADC@pot1& (0+255),b
  5895   003000  0100               	movlb	0	; () banked
  5896   003002  51E8               	movf	(??_runADC+1)& (0+255),w,b
  5897   003004  0101               	movlb	1	; () banked
  5898   003006  6FAF               	movwf	(runADC@pot1+1)& (0+255),b
  5899   003008                     
  5900                           ; BSR set to: 1
  5901                           ;ADC.c: 36:     voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  5902   003008  0E00               	movlw	0
  5903   00300A  6E31               	movwf	___fldiv@a^0,c
  5904   00300C  0EC0               	movlw	192
  5905   00300E  6E32               	movwf	(___fldiv@a+1)^0,c
  5906   003010  0E7F               	movlw	127
  5907   003012  6E33               	movwf	(___fldiv@a+2)^0,c
  5908   003014  0E44               	movlw	68
  5909   003016  6E34               	movwf	(___fldiv@a+3)^0,c
  5910   003018  C1AE  F006         	movff	runADC@pot1,___xxtofl@val
  5911   00301C  C1AF  F007         	movff	runADC@pot1+1,___xxtofl@val+1
  5912   003020  6A08               	clrf	(___xxtofl@val+2)^0,c
  5913   003022  6A09               	clrf	(___xxtofl@val+3)^0,c
  5914   003024  0E00               	movlw	0
  5915   003026  ECD9  F019         	call	___xxtofl
  5916   00302A  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5917   00302E  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5918   003032  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5919   003036  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5920   00303A  EC13  F011         	call	___fldiv	;wreg free
  5921   00303E  C02D  F014         	movff	?___fldiv,___flmul@b
  5922   003042  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  5923   003046  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  5924   00304A  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  5925   00304E  0E33               	movlw	51
  5926   003050  6E18               	movwf	___flmul@a^0,c
  5927   003052  0E33               	movlw	51
  5928   003054  6E19               	movwf	(___flmul@a+1)^0,c
  5929   003056  0E53               	movlw	83
  5930   003058  6E1A               	movwf	(___flmul@a+2)^0,c
  5931   00305A  0E40               	movlw	64
  5932   00305C  6E1B               	movwf	(___flmul@a+3)^0,c
  5933   00305E  EC1D  F00D         	call	___flmul	;wreg free
  5934   003062  C014  F1A6         	movff	?___flmul,runADC@voltage1
  5935   003066  C015  F1A7         	movff	?___flmul+1,runADC@voltage1+1
  5936   00306A  C016  F1A8         	movff	?___flmul+2,runADC@voltage1+2
  5937   00306E  C017  F1A9         	movff	?___flmul+3,runADC@voltage1+3
  5938   003072                     
  5939                           ;ADC.c: 39:     ADCON0bits.CHS = 4;
  5940   003072  50C2               	movf	194,w,c	;volatile
  5941   003074  0B83               	andlw	-125
  5942   003076  0910               	iorlw	16
  5943   003078  6EC2               	movwf	194,c	;volatile
  5944   00307A                     
  5945                           ;ADC.c: 40:     GODONE = 1;
  5946   00307A  82C2               	bsf	4034,1,c	;volatile
  5947   00307C                     l434:
  5948   00307C  B2C2               	btfsc	4034,1,c	;volatile
  5949   00307E  EF43  F018         	goto	u9561
  5950   003082  EF45  F018         	goto	u9560
  5951   003086                     u9561:
  5952   003086  EF3E  F018         	goto	l434
  5953   00308A                     u9560:
  5954   00308A                     
  5955                           ;ADC.c: 42:     pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  5956   00308A  50C3               	movf	195,w,c	;volatile
  5957   00308C  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  5958   003090  0100               	movlb	0	; () banked
  5959   003092  6BE8               	clrf	(??_runADC+1)& (0+255),b
  5960   003094  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  5961   003098  6BE7               	clrf	??_runADC& (0+255),b
  5962   00309A  11E7               	iorwf	??_runADC& (0+255),w,b
  5963   00309C  0101               	movlb	1	; () banked
  5964   00309E  6FB0               	movwf	runADC@pot2& (0+255),b
  5965   0030A0  0100               	movlb	0	; () banked
  5966   0030A2  51E8               	movf	(??_runADC+1)& (0+255),w,b
  5967   0030A4  0101               	movlb	1	; () banked
  5968   0030A6  6FB1               	movwf	(runADC@pot2+1)& (0+255),b
  5969   0030A8                     
  5970                           ; BSR set to: 1
  5971                           ;ADC.c: 43:     voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  5972   0030A8  0E00               	movlw	0
  5973   0030AA  6E31               	movwf	___fldiv@a^0,c
  5974   0030AC  0EC0               	movlw	192
  5975   0030AE  6E32               	movwf	(___fldiv@a+1)^0,c
  5976   0030B0  0E7F               	movlw	127
  5977   0030B2  6E33               	movwf	(___fldiv@a+2)^0,c
  5978   0030B4  0E44               	movlw	68
  5979   0030B6  6E34               	movwf	(___fldiv@a+3)^0,c
  5980   0030B8  C1B0  F006         	movff	runADC@pot2,___xxtofl@val
  5981   0030BC  C1B1  F007         	movff	runADC@pot2+1,___xxtofl@val+1
  5982   0030C0  6A08               	clrf	(___xxtofl@val+2)^0,c
  5983   0030C2  6A09               	clrf	(___xxtofl@val+3)^0,c
  5984   0030C4  0E00               	movlw	0
  5985   0030C6  ECD9  F019         	call	___xxtofl
  5986   0030CA  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5987   0030CE  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5988   0030D2  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5989   0030D6  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5990   0030DA  EC13  F011         	call	___fldiv	;wreg free
  5991   0030DE  C02D  F014         	movff	?___fldiv,___flmul@b
  5992   0030E2  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  5993   0030E6  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  5994   0030EA  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  5995   0030EE  0E33               	movlw	51
  5996   0030F0  6E18               	movwf	___flmul@a^0,c
  5997   0030F2  0E33               	movlw	51
  5998   0030F4  6E19               	movwf	(___flmul@a+1)^0,c
  5999   0030F6  0E53               	movlw	83
  6000   0030F8  6E1A               	movwf	(___flmul@a+2)^0,c
  6001   0030FA  0E40               	movlw	64
  6002   0030FC  6E1B               	movwf	(___flmul@a+3)^0,c
  6003   0030FE  EC1D  F00D         	call	___flmul	;wreg free
  6004   003102  C014  F1AA         	movff	?___flmul,runADC@voltage2
  6005   003106  C015  F1AB         	movff	?___flmul+1,runADC@voltage2+1
  6006   00310A  C016  F1AC         	movff	?___flmul+2,runADC@voltage2+2
  6007   00310E  C017  F1AD         	movff	?___flmul+3,runADC@voltage2+3
  6008   003112                     
  6009                           ;ADC.c: 45:     sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  6010   003112  0E95               	movlw	low runADC@text
  6011   003114  0100               	movlb	0	; () banked
  6012   003116  6FCE               	movwf	sprintf@s& (0+255),b
  6013   003118  0E01               	movlw	high runADC@text
  6014   00311A  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  6015   00311C  0E13               	movlw	low STR_25
  6016   00311E  6FD0               	movwf	sprintf@fmt& (0+255),b
  6017   003120  0EFF               	movlw	high STR_25
  6018   003122  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  6019   003124  C1A6  F0D2         	movff	runADC@voltage1,?_sprintf+4
  6020   003128  C1A7  F0D3         	movff	runADC@voltage1+1,?_sprintf+5
  6021   00312C  C1A8  F0D4         	movff	runADC@voltage1+2,?_sprintf+6
  6022   003130  C1A9  F0D5         	movff	runADC@voltage1+3,?_sprintf+7
  6023   003134  C1AA  F0D6         	movff	runADC@voltage2,?_sprintf+8
  6024   003138  C1AB  F0D7         	movff	runADC@voltage2+1,?_sprintf+9
  6025   00313C  C1AC  F0D8         	movff	runADC@voltage2+2,?_sprintf+10
  6026   003140  C1AD  F0D9         	movff	runADC@voltage2+3,?_sprintf+11
  6027   003144  EC6E  F025         	call	_sprintf	;wreg free
  6028   003148                     
  6029                           ;ADC.c: 46:     LCD_ShowString(2, text);
  6030   003148  0E95               	movlw	low runADC@text
  6031   00314A  6E07               	movwf	LCD_ShowString@textData^0,c
  6032   00314C  0E01               	movlw	high runADC@text
  6033   00314E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  6034   003150  0E02               	movlw	2
  6035   003152  EC90  F022         	call	_LCD_ShowString
  6036   003156                     
  6037                           ;ADC.c: 48:     if(PORTAbits.RA2){
  6038   003156  A480               	btfss	128,2,c	;volatile
  6039   003158  EFB0  F018         	goto	u9571
  6040   00315C  EFB2  F018         	goto	u9570
  6041   003160                     u9571:
  6042   003160  EFCF  F018         	goto	l429
  6043   003164                     u9570:
  6044   003164                     
  6045                           ;ADC.c: 49:         _delay((unsigned long)((50)*(32E6/4000.0)));
  6046   003164  0E03               	movlw	3
  6047   003166  0100               	movlb	0	; () banked
  6048   003168  6FE8               	movwf	(??_runADC+1)& (0+255),b
  6049   00316A  0E08               	movlw	8
  6050   00316C  6FE7               	movwf	??_runADC& (0+255),b
  6051   00316E  0E77               	movlw	119
  6052   003170                     u9957:
  6053   003170  2EE8               	decfsz	wreg,f,c
  6054   003172  D7FE               	bra	u9957
  6055   003174  2FE7               	decfsz	??_runADC& (0+255),f,b
  6056   003176  D7FC               	bra	u9957
  6057   003178  2FE8               	decfsz	(??_runADC+1)& (0+255),f,b
  6058   00317A  D7FA               	bra	u9957
  6059   00317C                     
  6060                           ;ADC.c: 50:         if(PORTAbits.RA2){
  6061   00317C  A480               	btfss	128,2,c	;volatile
  6062   00317E  EFC3  F018         	goto	u9581
  6063   003182  EFC5  F018         	goto	u9580
  6064   003186                     u9581:
  6065   003186  EFCF  F018         	goto	l429
  6066   00318A                     u9580:
  6067   00318A                     l439:
  6068   00318A  B480               	btfsc	128,2,c	;volatile
  6069   00318C  EFCA  F018         	goto	u9591
  6070   003190  EFCC  F018         	goto	u9590
  6071   003194                     u9591:
  6072   003194  EFC5  F018         	goto	l439
  6073   003198                     u9590:
  6074   003198                     
  6075                           ;ADC.c: 52:             keepState = 0;
  6076   003198  0E00               	movlw	0
  6077   00319A  0101               	movlb	1	; () banked
  6078   00319C  6FB2               	movwf	runADC@keepState& (0+255),b
  6079   00319E                     l429:
  6080                           
  6081                           ;ADC.c: 30: while(keepState){
  6082   00319E  0101               	movlb	1	; () banked
  6083   0031A0  51B2               	movf	runADC@keepState& (0+255),w,b
  6084   0031A2  A4D8               	btfss	status,2,c
  6085   0031A4  EFD6  F018         	goto	u9601
  6086   0031A8  EFD8  F018         	goto	u9600
  6087   0031AC                     u9601:
  6088   0031AC  EFE9  F017         	goto	l7640
  6089   0031B0                     u9600:
  6090   0031B0                     
  6091                           ; BSR set to: 1
  6092                           ;ADC.c: 58: ADCON0bits.ADON = 0;
  6093   0031B0  90C2               	bcf	194,0,c	;volatile
  6094   0031B2                     
  6095                           ; BSR set to: 1
  6096   0031B2  0012               	return		;funcret
  6097   0031B4                     __end_of_runADC:
  6098                           	callstack 0
  6099                           
  6100 ;; *************** function ___xxtofl *****************
  6101 ;; Defined at:
  6102 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\xxtofl.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  sign            1    wreg     unsigned char 
  6105 ;;  val             4    5[COMRAM] long 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;  sign            1   13[COMRAM] unsigned char 
  6108 ;;  arg             4   15[COMRAM] unsigned long 
  6109 ;;  exp             1   14[COMRAM] unsigned char 
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  4    5[COMRAM] unsigned char 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;Total ram usage:       14 bytes
  6124 ;; Hardware stack levels used: 1
  6125 ;; Hardware stack levels required when called: 1
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		_runDAC
  6130 ;;		_runADC
  6131 ;;		___rem_pio2f
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text22
  6136   0033B2                     __ptext22:
  6137                           	callstack 0
  6138   0033B2                     ___xxtofl:
  6139                           	callstack 26
  6140                           
  6141                           ; BSR set to: 1
  6142                           ;incstack = 0
  6143                           ;___xxtofl@sign stored from wreg
  6144   0033B2  6E0E               	movwf	___xxtofl@sign^0,c
  6145   0033B4  500E               	movf	___xxtofl@sign^0,w,c
  6146   0033B6  B4D8               	btfsc	status,2,c
  6147   0033B8  EFE0  F019         	goto	u8791
  6148   0033BC  EFE2  F019         	goto	u8790
  6149   0033C0                     u8791:
  6150   0033C0  EF04  F01A         	goto	l1279
  6151   0033C4                     u8790:
  6152   0033C4  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  6153   0033C6  EFE9  F019         	goto	u8800
  6154   0033CA  EFE7  F019         	goto	u8801
  6155   0033CE                     u8801:
  6156   0033CE  EF04  F01A         	goto	l1279
  6157   0033D2                     u8800:
  6158   0033D2  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  6159   0033D6  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  6160   0033DA  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  6161   0033DE  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  6162   0033E2  1E0A               	comf	??___xxtofl^0,f,c
  6163   0033E4  1E0B               	comf	(??___xxtofl+1)^0,f,c
  6164   0033E6  1E0C               	comf	(??___xxtofl+2)^0,f,c
  6165   0033E8  1E0D               	comf	(??___xxtofl+3)^0,f,c
  6166   0033EA  2A0A               	incf	??___xxtofl^0,f,c
  6167   0033EC  0E00               	movlw	0
  6168   0033EE  220B               	addwfc	(??___xxtofl+1)^0,f,c
  6169   0033F0  220C               	addwfc	(??___xxtofl+2)^0,f,c
  6170   0033F2  220D               	addwfc	(??___xxtofl+3)^0,f,c
  6171   0033F4  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  6172   0033F8  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  6173   0033FC  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  6174   003400  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  6175   003404  EF0C  F01A         	goto	l7052
  6176   003408                     l1279:
  6177   003408  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  6178   00340C  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6179   003410  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6180   003414  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6181   003418                     l7052:
  6182   003418  5006               	movf	___xxtofl@val^0,w,c
  6183   00341A  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  6184   00341C  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  6185   00341E  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  6186   003420  A4D8               	btfss	status,2,c
  6187   003422  EF15  F01A         	goto	u8811
  6188   003426  EF17  F01A         	goto	u8810
  6189   00342A                     u8811:
  6190   00342A  EF21  F01A         	goto	l7058
  6191   00342E                     u8810:
  6192   00342E  0E00               	movlw	0
  6193   003430  6E06               	movwf	?___xxtofl^0,c
  6194   003432  0E00               	movlw	0
  6195   003434  6E07               	movwf	(?___xxtofl+1)^0,c
  6196   003436  0E00               	movlw	0
  6197   003438  6E08               	movwf	(?___xxtofl+2)^0,c
  6198   00343A  0E00               	movlw	0
  6199   00343C  6E09               	movwf	(?___xxtofl+3)^0,c
  6200   00343E  EFB2  F01A         	goto	l1282
  6201   003442                     l7058:
  6202   003442  0E96               	movlw	150
  6203   003444  6E0F               	movwf	___xxtofl@exp^0,c
  6204   003446  EF2B  F01A         	goto	l7062
  6205   00344A                     l7060:
  6206   00344A  2A0F               	incf	___xxtofl@exp^0,f,c
  6207   00344C  90D8               	bcf	status,0,c
  6208   00344E  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  6209   003450  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  6210   003452  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  6211   003454  3210               	rrcf	___xxtofl@arg^0,f,c
  6212   003456                     l7062:
  6213   003456  0E00               	movlw	0
  6214   003458  1410               	andwf	___xxtofl@arg^0,w,c
  6215   00345A  6E0A               	movwf	??___xxtofl^0,c
  6216   00345C  0E00               	movlw	0
  6217   00345E  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  6218   003460  6E0B               	movwf	(??___xxtofl+1)^0,c
  6219   003462  0E00               	movlw	0
  6220   003464  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  6221   003466  6E0C               	movwf	(??___xxtofl+2)^0,c
  6222   003468  0EFE               	movlw	254
  6223   00346A  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  6224   00346C  6E0D               	movwf	(??___xxtofl+3)^0,c
  6225   00346E  500A               	movf	??___xxtofl^0,w,c
  6226   003470  100B               	iorwf	(??___xxtofl+1)^0,w,c
  6227   003472  100C               	iorwf	(??___xxtofl+2)^0,w,c
  6228   003474  100D               	iorwf	(??___xxtofl+3)^0,w,c
  6229   003476  A4D8               	btfss	status,2,c
  6230   003478  EF40  F01A         	goto	u8821
  6231   00347C  EF42  F01A         	goto	u8820
  6232   003480                     u8821:
  6233   003480  EF25  F01A         	goto	l7060
  6234   003484                     u8820:
  6235   003484  EF50  F01A         	goto	l1286
  6236   003488                     l7064:
  6237   003488  2A0F               	incf	___xxtofl@exp^0,f,c
  6238   00348A  0E01               	movlw	1
  6239   00348C  2610               	addwf	___xxtofl@arg^0,f,c
  6240   00348E  0E00               	movlw	0
  6241   003490  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  6242   003492  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  6243   003494  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  6244   003496  90D8               	bcf	status,0,c
  6245   003498  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  6246   00349A  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  6247   00349C  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  6248   00349E  3210               	rrcf	___xxtofl@arg^0,f,c
  6249   0034A0                     l1286:
  6250   0034A0  0E00               	movlw	0
  6251   0034A2  1410               	andwf	___xxtofl@arg^0,w,c
  6252   0034A4  6E0A               	movwf	??___xxtofl^0,c
  6253   0034A6  0E00               	movlw	0
  6254   0034A8  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  6255   0034AA  6E0B               	movwf	(??___xxtofl+1)^0,c
  6256   0034AC  0E00               	movlw	0
  6257   0034AE  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  6258   0034B0  6E0C               	movwf	(??___xxtofl+2)^0,c
  6259   0034B2  0EFF               	movlw	255
  6260   0034B4  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  6261   0034B6  6E0D               	movwf	(??___xxtofl+3)^0,c
  6262   0034B8  500A               	movf	??___xxtofl^0,w,c
  6263   0034BA  100B               	iorwf	(??___xxtofl+1)^0,w,c
  6264   0034BC  100C               	iorwf	(??___xxtofl+2)^0,w,c
  6265   0034BE  100D               	iorwf	(??___xxtofl+3)^0,w,c
  6266   0034C0  A4D8               	btfss	status,2,c
  6267   0034C2  EF65  F01A         	goto	u8831
  6268   0034C6  EF67  F01A         	goto	u8830
  6269   0034CA                     u8831:
  6270   0034CA  EF44  F01A         	goto	l7064
  6271   0034CE                     u8830:
  6272   0034CE  EF6F  F01A         	goto	l7072
  6273   0034D2                     l7070:
  6274   0034D2  060F               	decf	___xxtofl@exp^0,f,c
  6275   0034D4  90D8               	bcf	status,0,c
  6276   0034D6  3610               	rlcf	___xxtofl@arg^0,f,c
  6277   0034D8  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  6278   0034DA  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  6279   0034DC  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  6280   0034DE                     l7072:
  6281   0034DE  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  6282   0034E0  EF74  F01A         	goto	u8841
  6283   0034E4  EF76  F01A         	goto	u8840
  6284   0034E8                     u8841:
  6285   0034E8  EF7E  F01A         	goto	l1293
  6286   0034EC                     u8840:
  6287   0034EC  0E02               	movlw	2
  6288   0034EE  600F               	cpfslt	___xxtofl@exp^0,c
  6289   0034F0  EF7C  F01A         	goto	u8851
  6290   0034F4  EF7E  F01A         	goto	u8850
  6291   0034F8                     u8851:
  6292   0034F8  EF69  F01A         	goto	l7070
  6293   0034FC                     u8850:
  6294   0034FC                     l1293:
  6295   0034FC  B00F               	btfsc	___xxtofl@exp^0,0,c
  6296   0034FE  EF83  F01A         	goto	u8861
  6297   003502  EF85  F01A         	goto	u8860
  6298   003506                     u8861:
  6299   003506  EF86  F01A         	goto	l7078
  6300   00350A                     u8860:
  6301   00350A  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  6302   00350C                     l7078:
  6303   00350C  90D8               	bcf	status,0,c
  6304   00350E  320F               	rrcf	___xxtofl@exp^0,f,c
  6305   003510  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  6306   003514  6A0B               	clrf	(??___xxtofl+1)^0,c
  6307   003516  6A0C               	clrf	(??___xxtofl+2)^0,c
  6308   003518  6A0D               	clrf	(??___xxtofl+3)^0,c
  6309   00351A  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  6310   00351E  6A0C               	clrf	(??___xxtofl+2)^0,c
  6311   003520  6A0B               	clrf	(??___xxtofl+1)^0,c
  6312   003522  6A0A               	clrf	??___xxtofl^0,c
  6313   003524  500A               	movf	??___xxtofl^0,w,c
  6314   003526  1210               	iorwf	___xxtofl@arg^0,f,c
  6315   003528  500B               	movf	(??___xxtofl+1)^0,w,c
  6316   00352A  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  6317   00352C  500C               	movf	(??___xxtofl+2)^0,w,c
  6318   00352E  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  6319   003530  500D               	movf	(??___xxtofl+3)^0,w,c
  6320   003532  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  6321   003534  500E               	movf	___xxtofl@sign^0,w,c
  6322   003536  B4D8               	btfsc	status,2,c
  6323   003538  EFA0  F01A         	goto	u8871
  6324   00353C  EFA2  F01A         	goto	u8870
  6325   003540                     u8871:
  6326   003540  EFAA  F01A         	goto	l7088
  6327   003544                     u8870:
  6328   003544  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  6329   003546  EFA9  F01A         	goto	u8880
  6330   00354A  EFA7  F01A         	goto	u8881
  6331   00354E                     u8881:
  6332   00354E  EFAA  F01A         	goto	l7088
  6333   003552                     u8880:
  6334   003552  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  6335   003554                     l7088:
  6336   003554  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  6337   003558  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  6338   00355C  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  6339   003560  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  6340   003564                     l1282:
  6341   003564  0012               	return		;funcret
  6342   003566                     __end_of___xxtofl:
  6343                           	callstack 0
  6344                           
  6345 ;; *************** function _moveDisplay *****************
  6346 ;; Defined at:
  6347 ;;		line 11 in file "menu.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  menuI           1    wreg     unsigned char 
  6350 ;;  where           1  135[BANK0 ] unsigned char 
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;  menuI           1   50[BANK1 ] unsigned char 
  6353 ;;  menuItem2      17   17[BANK1 ] unsigned char [17]
  6354 ;;  menuItem1      17    0[BANK1 ] unsigned char [17]
  6355 ;;  menuItems      16   34[BANK1 ] PTR unsigned char [8]
  6356 ;;		 -> STR_22(1), STR_21(6), STR_20(5), STR_19(4), 
  6357 ;;		 -> STR_18(4), STR_17(4), STR_16(5), STR_15(5), 
  6358 ;; Return value:  Size  Location     Type
  6359 ;;                  1    wreg      unsigned char 
  6360 ;; Registers used:
  6361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6367 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6368 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6369 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6370 ;;      Totals:         0       3      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6371 ;;Total ram usage:       54 bytes
  6372 ;; Hardware stack levels used: 1
  6373 ;; Hardware stack levels required when called: 9
  6374 ;; This function calls:
  6375 ;;		_LCD_Clear
  6376 ;;		_LCD_ShowString
  6377 ;;		_sprintf
  6378 ;; This function is called by:
  6379 ;;		_main
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           	psect	text23
  6384   003CA2                     __ptext23:
  6385                           	callstack 0
  6386   003CA2                     _moveDisplay:
  6387                           	callstack 21
  6388                           
  6389                           ;incstack = 0
  6390                           ;moveDisplay@menuI stored from wreg
  6391   003CA2  0101               	movlb	1	; () banked
  6392   003CA4  6FC7               	movwf	moveDisplay@menuI& (0+255),b
  6393   003CA6                     
  6394                           ;menu.c: 12:     LCD_Clear();
  6395   003CA6  EC26  F026         	call	_LCD_Clear	;wreg free
  6396   003CAA                     
  6397                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  6398   003CAA  EE21  F0CA         	lfsr	2,moveDisplay@F6963
  6399   003CAE  EE11  F0B7         	lfsr	1,moveDisplay@menuItems
  6400   003CB2  0E0F               	movlw	15
  6401   003CB4                     u9341:
  6402   003CB4  CFDB FFE3          	movff	plusw2,plusw1
  6403   003CB8  06E8               	decf	wreg,f,c
  6404   003CBA  E2FC               	bc	u9341
  6405                           
  6406                           ;menu.c: 14:     switch (where){
  6407   003CBC  EF78  F01E         	goto	l7506
  6408   003CC0                     l7496:
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;menu.c: 18:             if(menuI<6){
  6412   003CC0  0E06               	movlw	6
  6413   003CC2  0101               	movlb	1	; () banked
  6414   003CC4  61C7               	cpfslt	moveDisplay@menuI& (0+255),b
  6415   003CC6  EF67  F01E         	goto	u9351
  6416   003CCA  EF69  F01E         	goto	u9350
  6417   003CCE                     u9351:
  6418   003CCE  EF88  F01E         	goto	l7508
  6419   003CD2                     u9350:
  6420   003CD2                     
  6421                           ; BSR set to: 1
  6422                           ;menu.c: 19:             menuI++;
  6423   003CD2  2BC7               	incf	moveDisplay@menuI& (0+255),f,b
  6424   003CD4  EF88  F01E         	goto	l7508
  6425   003CD8                     l7500:
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;menu.c: 23:             if(menuI>0){
  6429   003CD8  0101               	movlb	1	; () banked
  6430   003CDA  51C7               	movf	moveDisplay@menuI& (0+255),w,b
  6431   003CDC  B4D8               	btfsc	status,2,c
  6432   003CDE  EF73  F01E         	goto	u9361
  6433   003CE2  EF75  F01E         	goto	u9360
  6434   003CE6                     u9361:
  6435   003CE6  EF88  F01E         	goto	l7508
  6436   003CEA                     u9360:
  6437   003CEA                     
  6438                           ; BSR set to: 1
  6439                           ;menu.c: 24:             menuI--;
  6440   003CEA  07C7               	decf	moveDisplay@menuI& (0+255),f,b
  6441   003CEC  EF88  F01E         	goto	l7508
  6442   003CF0                     l7506:
  6443   003CF0  0100               	movlb	0	; () banked
  6444   003CF2  51E7               	movf	moveDisplay@where& (0+255),w,b
  6445                           
  6446                           ; Switch size 1, requested type "simple"
  6447                           ; Number of cases is 3, Range of values is 0 to 2
  6448                           ; switch strategies available:
  6449                           ; Name         Instructions Cycles
  6450                           ; simple_byte           10     6 (average)
  6451                           ;	Chosen strategy is simple_byte
  6452   003CF4  0A00               	xorlw	0	; case 0
  6453   003CF6  B4D8               	btfsc	status,2,c
  6454   003CF8  EF88  F01E         	goto	l7508
  6455   003CFC  0A01               	xorlw	1	; case 1
  6456   003CFE  B4D8               	btfsc	status,2,c
  6457   003D00  EF60  F01E         	goto	l7496
  6458   003D04  0A03               	xorlw	3	; case 2
  6459   003D06  B4D8               	btfsc	status,2,c
  6460   003D08  EF6C  F01E         	goto	l7500
  6461   003D0C  EF88  F01E         	goto	l7508
  6462   003D10                     l7508:
  6463                           
  6464                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  6465   003D10  0E95               	movlw	low moveDisplay@menuItem1
  6466   003D12  0100               	movlb	0	; () banked
  6467   003D14  6FCE               	movwf	sprintf@s& (0+255),b
  6468   003D16  0E01               	movlw	high moveDisplay@menuItem1
  6469   003D18  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  6470   003D1A  0ECC               	movlw	low STR_23
  6471   003D1C  6FD0               	movwf	sprintf@fmt& (0+255),b
  6472   003D1E  0EFF               	movlw	high STR_23
  6473   003D20  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  6474   003D22  0E00               	movlw	0
  6475   003D24  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  6476   003D26  0E0F               	movlw	15
  6477   003D28  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  6478   003D2A  0101               	movlb	1	; () banked
  6479   003D2C  51C7               	movf	moveDisplay@menuI& (0+255),w,b
  6480   003D2E  0D02               	mullw	2
  6481   003D30  0EB7               	movlw	low moveDisplay@menuItems
  6482   003D32  24F3               	addwf	243,w,c
  6483   003D34  6ED9               	movwf	fsr2l,c
  6484   003D36  0E01               	movlw	high moveDisplay@menuItems
  6485   003D38  20F4               	addwfc	prodh,w,c
  6486   003D3A  6EDA               	movwf	fsr2h,c
  6487   003D3C  CFDE F0D4          	movff	postinc2,?_sprintf+6
  6488   003D40  CFDD F0D5          	movff	postdec2,?_sprintf+7
  6489   003D44  EC6E  F025         	call	_sprintf	;wreg free
  6490                           
  6491                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  6492   003D48  0EA6               	movlw	low moveDisplay@menuItem2
  6493   003D4A  0100               	movlb	0	; () banked
  6494   003D4C  6FCE               	movwf	sprintf@s& (0+255),b
  6495   003D4E  0E01               	movlw	high moveDisplay@menuItem2
  6496   003D50  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  6497   003D52  0ECD               	movlw	low (STR_23+1)
  6498   003D54  6FD0               	movwf	sprintf@fmt& (0+255),b
  6499   003D56  0EFF               	movlw	high (STR_23+1)
  6500   003D58  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  6501   003D5A  0E00               	movlw	0
  6502   003D5C  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  6503   003D5E  0E10               	movlw	16
  6504   003D60  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  6505   003D62  0101               	movlb	1	; () banked
  6506   003D64  51C7               	movf	moveDisplay@menuI& (0+255),w,b
  6507   003D66  0100               	movlb	0	; () banked
  6508   003D68  6FE8               	movwf	??_moveDisplay& (0+255),b
  6509   003D6A  6BE9               	clrf	(??_moveDisplay+1)& (0+255),b
  6510   003D6C  90D8               	bcf	status,0,c
  6511   003D6E  37E8               	rlcf	??_moveDisplay& (0+255),f,b
  6512   003D70  37E9               	rlcf	(??_moveDisplay+1)& (0+255),f,b
  6513   003D72  0E02               	movlw	2
  6514   003D74  27E8               	addwf	??_moveDisplay& (0+255),f,b
  6515   003D76  0E00               	movlw	0
  6516   003D78  23E9               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  6517   003D7A  0EB7               	movlw	low moveDisplay@menuItems
  6518   003D7C  25E8               	addwf	??_moveDisplay& (0+255),w,b
  6519   003D7E  6ED9               	movwf	fsr2l,c
  6520   003D80  0E01               	movlw	high moveDisplay@menuItems
  6521   003D82  21E9               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  6522   003D84  6EDA               	movwf	fsr2h,c
  6523   003D86  CFDE F0D4          	movff	postinc2,?_sprintf+6
  6524   003D8A  CFDD F0D5          	movff	postdec2,?_sprintf+7
  6525   003D8E  EC6E  F025         	call	_sprintf	;wreg free
  6526   003D92                     
  6527                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  6528   003D92  0E95               	movlw	low moveDisplay@menuItem1
  6529   003D94  6E07               	movwf	LCD_ShowString@textData^0,c
  6530   003D96  0E01               	movlw	high moveDisplay@menuItem1
  6531   003D98  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  6532   003D9A  0E01               	movlw	1
  6533   003D9C  EC90  F022         	call	_LCD_ShowString
  6534   003DA0                     
  6535                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  6536   003DA0  0EA6               	movlw	low moveDisplay@menuItem2
  6537   003DA2  6E07               	movwf	LCD_ShowString@textData^0,c
  6538   003DA4  0E01               	movlw	high moveDisplay@menuItem2
  6539   003DA6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  6540   003DA8  0E02               	movlw	2
  6541   003DAA  EC90  F022         	call	_LCD_ShowString
  6542   003DAE                     
  6543                           ;menu.c: 35:     return menuI;
  6544   003DAE  0101               	movlb	1	; () banked
  6545   003DB0  51C7               	movf	moveDisplay@menuI& (0+255),w,b
  6546   003DB2                     
  6547                           ; BSR set to: 1
  6548   003DB2  0012               	return		;funcret
  6549   003DB4                     __end_of_moveDisplay:
  6550                           	callstack 0
  6551                           
  6552 ;; *************** function _sprintf *****************
  6553 ;; Defined at:
  6554 ;;		line 9 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_sprintf.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;  s               2  110[BANK0 ] PTR unsigned char 
  6557 ;;		 -> runGAME@text(17), runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), 
  6558 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  6559 ;;		 -> STR_27(17), STR_25(19), STR_24(5), STR_23(6), 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;  f              12  123[BANK0 ] struct _IO_FILE
  6562 ;;  ret             2    0        int 
  6563 ;;  ap              1  122[BANK0 ] PTR void [1]
  6564 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  2  110[BANK0 ] int 
  6567 ;; Registers used:
  6568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6574 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;Total ram usage:       25 bytes
  6579 ;; Hardware stack levels used: 1
  6580 ;; Hardware stack levels required when called: 8
  6581 ;; This function calls:
  6582 ;;		_vfprintf
  6583 ;; This function is called by:
  6584 ;;		_moveDisplay
  6585 ;;		_runADC
  6586 ;;		_runGAME
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           	psect	text24
  6591   004ADC                     __ptext24:
  6592                           	callstack 0
  6593   004ADC                     _sprintf:
  6594                           	callstack 21
  6595   004ADC  0ED2               	movlw	low (?_sprintf+4)
  6596   004ADE  0100               	movlb	0	; () banked
  6597   004AE0  6FDA               	movwf	sprintf@ap& (0+255),b
  6598   004AE2  C0CE  F0DB         	movff	sprintf@s,sprintf@f
  6599   004AE6  C0CF  F0DC         	movff	sprintf@s+1,sprintf@f+1
  6600   004AEA                     
  6601                           ; BSR set to: 0
  6602   004AEA  0E00               	movlw	0
  6603   004AEC  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  6604   004AEE  0E00               	movlw	0
  6605   004AF0  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  6606   004AF2                     
  6607                           ; BSR set to: 0
  6608   004AF2  0E00               	movlw	0
  6609   004AF4  6FE6               	movwf	(sprintf@f+11)& (0+255),b
  6610   004AF6  0E00               	movlw	0
  6611   004AF8  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  6612   004AFA                     
  6613                           ; BSR set to: 0
  6614   004AFA  0EDB               	movlw	low sprintf@f
  6615   004AFC  6FC7               	movwf	vfprintf@fp& (0+255),b
  6616   004AFE  6BC8               	clrf	(vfprintf@fp+1)& (0+255),b
  6617   004B00  C0D0  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  6618   004B04  C0D1  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6619   004B08  0EDA               	movlw	low sprintf@ap
  6620   004B0A  6FCB               	movwf	vfprintf@ap& (0+255),b
  6621   004B0C  EC25  F025         	call	_vfprintf	;wreg free
  6622   004B10  0100               	movlb	0	; () banked
  6623   004B12  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  6624   004B14  25CE               	addwf	sprintf@s& (0+255),w,b
  6625   004B16  6ED9               	movwf	fsr2l,c
  6626   004B18  51DF               	movf	(sprintf@f+4)& (0+255),w,b
  6627   004B1A  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  6628   004B1C  6EDA               	movwf	fsr2h,c
  6629   004B1E  6ADF               	clrf	indf2,c
  6630   004B20                     
  6631                           ; BSR set to: 0
  6632   004B20  0012               	return		;funcret
  6633   004B22                     __end_of_sprintf:
  6634                           	callstack 0
  6635                           
  6636 ;; *************** function _vfprintf *****************
  6637 ;; Defined at:
  6638 ;;		line 1817 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  6641 ;;		 -> NULL(0), sprintf@f(12), 
  6642 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  6643 ;;		 -> STR_27(17), STR_26(5), STR_25(19), STR_24(5), 
  6644 ;;		 -> STR_23(6), STR_14(5), 
  6645 ;;  ap              1  107[BANK0 ] PTR PTR void 
  6646 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  6649 ;;		 -> STR_27(17), STR_26(5), STR_25(19), STR_24(5), 
  6650 ;;		 -> STR_23(6), STR_14(5), 
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  2  103[BANK0 ] int 
  6653 ;; Registers used:
  6654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6660 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;Total ram usage:        7 bytes
  6665 ;; Hardware stack levels used: 1
  6666 ;; Hardware stack levels required when called: 7
  6667 ;; This function calls:
  6668 ;;		_vfpfcnvrt
  6669 ;; This function is called by:
  6670 ;;		_sprintf
  6671 ;;		_printf
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           	psect	text25
  6676   004A4A                     __ptext25:
  6677                           	callstack 0
  6678   004A4A                     _vfprintf:
  6679                           	callstack 21
  6680   004A4A                     
  6681                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE *fp, const 
      +                          char *fmt, va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1818: {;D:\MP
      +                          LABX\Compiler\pic\sources\c99\common\doprnt.c: 1820:     char *cfmt;;D:\MPLABX\Compiler\
      +                          pic\sources\c99\common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6682   004A4A  C0C9  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  6683   004A4E  C0CA  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6684                           
  6685                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  6686   004A52  EF36  F025         	goto	l7252
  6687   004A56                     l7250:
  6688                           
  6689                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt, ap);
  6690   004A56  C0C7  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  6691   004A5A  C0C8  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6692   004A5E  0ECC               	movlw	low vfprintf@cfmt
  6693   004A60  0100               	movlb	0	; () banked
  6694   004A62  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  6695   004A64  C0CB  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  6696   004A68  EC89  F005         	call	_vfpfcnvrt	;wreg free
  6697   004A6C                     l7252:
  6698                           
  6699                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  6700   004A6C  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  6701   004A70  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6702   004A74                     	if	0	;tblptru may be non-zero
  6703   004A74                     	endif
  6704   004A74                     	if	0	;tblptru may be non-zero
  6705   004A74                     	endif
  6706   004A74  0008               	tblrd		*
  6707   004A76  50F5               	movf	tablat,w,c
  6708   004A78  0900               	iorlw	0
  6709   004A7A  A4D8               	btfss	status,2,c
  6710   004A7C  EF42  F025         	goto	u9041
  6711   004A80  EF44  F025         	goto	u9040
  6712   004A84                     u9041:
  6713   004A84  EF2B  F025         	goto	l7250
  6714   004A88                     u9040:
  6715   004A88                     
  6716                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6717   004A88  0E00               	movlw	0
  6718   004A8A  0100               	movlb	0	; () banked
  6719   004A8C  6FC8               	movwf	(?_vfprintf+1)& (0+255),b
  6720   004A8E  0E00               	movlw	0
  6721   004A90  6FC7               	movwf	?_vfprintf& (0+255),b
  6722   004A92                     
  6723                           ; BSR set to: 0
  6724   004A92  0012               	return		;funcret
  6725   004A94                     __end_of_vfprintf:
  6726                           	callstack 0
  6727                           
  6728 ;; *************** function _vfpfcnvrt *****************
  6729 ;; Defined at:
  6730 ;;		line 1177 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  6733 ;;		 -> NULL(0), sprintf@f(12), 
  6734 ;;  fmt             1   91[BANK0 ] PTR PTR unsigned char 
  6735 ;;		 -> vfprintf@cfmt(2), 
  6736 ;;  ap              1   92[BANK0 ] PTR PTR void 
  6737 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  convarg         4   96[BANK0 ] struct .
  6740 ;;  cp              2  101[BANK0 ] PTR unsigned char 
  6741 ;;		 -> STR_27(17), STR_26(5), STR_25(19), STR_24(5), 
  6742 ;;		 -> STR_23(6), STR_14(5), 
  6743 ;;  c               1  100[BANK0 ] unsigned char 
  6744 ;;  done            1   95[BANK0 ] _Bool 
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1    wreg      void 
  6747 ;; Registers used:
  6748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6754 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6757 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6758 ;;Total ram usage:       14 bytes
  6759 ;; Hardware stack levels used: 1
  6760 ;; Hardware stack levels required when called: 6
  6761 ;; This function calls:
  6762 ;;		_dtoa
  6763 ;;		_efgtoa
  6764 ;;		_fputc
  6765 ;;		_read_prec_or_width
  6766 ;;		_stoa
  6767 ;;		_utoa
  6768 ;; This function is called by:
  6769 ;;		_vfprintf
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text26
  6774   000B12                     __ptext26:
  6775                           	callstack 0
  6776   000B12                     _vfpfcnvrt:
  6777                           	callstack 21
  6778   000B12                     
  6779                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1178: {;D:\MPLABX\Co
      +                          mpiler\pic\sources\c99\common\doprnt.c: 1179:     char c, *cp;;D:\MPLABX\Compiler\pic\so
      +                          urces\c99\common\doprnt.c: 1180:     _Bool done;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1188:  } convarg;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1201:
      +                               if ((*fmt)[0] == '%') {
  6780   000B12  0100               	movlb	0	; () banked
  6781   000B14  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6782   000B16  6ED9               	movwf	fsr2l,c
  6783   000B18  6ADA               	clrf	fsr2h,c
  6784   000B1A  CFDE FFF6          	movff	postinc2,tblptrl
  6785   000B1E  CFDD FFF7          	movff	postdec2,tblptrh
  6786   000B22                     	if	0	;tblptru may be non-zero
  6787   000B22                     	endif
  6788   000B22                     	if	0	;tblptru may be non-zero
  6789   000B22                     	endif
  6790   000B22  0008               	tblrd		*
  6791   000B24  50F5               	movf	tablat,w,c
  6792   000B26  0A25               	xorlw	37
  6793   000B28  A4D8               	btfss	status,2,c
  6794   000B2A  EF99  F005         	goto	u8891
  6795   000B2E  EF9B  F005         	goto	u8890
  6796   000B32                     u8891:
  6797   000B32  EF23  F008         	goto	l7240
  6798   000B36                     u8890:
  6799   000B36                     
  6800                           ; BSR set to: 0
  6801                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  6802   000B36  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6803   000B38  6ED9               	movwf	fsr2l,c
  6804   000B3A  6ADA               	clrf	fsr2h,c
  6805   000B3C  2ADE               	incf	postinc2,f,c
  6806   000B3E  0E00               	movlw	0
  6807   000B40  22DD               	addwfc	postdec2,f,c
  6808   000B42                     
  6809                           ; BSR set to: 0
  6810                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1204:         flags = width = 0;
  6811   000B42  0E00               	movlw	0
  6812   000B44  6E56               	movwf	(_width+1)^0,c
  6813   000B46  0E00               	movlw	0
  6814   000B48  6E55               	movwf	_width^0,c
  6815   000B4A  C055  F059         	movff	_width,_flags
  6816   000B4E                     
  6817                           ; BSR set to: 0
  6818                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1205:         prec = -1;
  6819   000B4E  6857               	setf	_prec^0,c
  6820   000B50  6858               	setf	(_prec+1)^0,c
  6821   000B52                     
  6822                           ; BSR set to: 0
  6823                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1209:         done = 0;
  6824   000B52  0E00               	movlw	0
  6825   000B54  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  6826                           
  6827                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  6828   000B56  EFC9  F005         	goto	l7112
  6829   000B5A                     l7102:
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1214:                     flags |= 
      +                          (1 << 0);
  6833   000B5A  8059               	bsf	_flags^0,0,c
  6834   000B5C                     
  6835                           ; BSR set to: 0
  6836                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1215:                     ++*fmt;
  6837   000B5C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6838   000B5E  6ED9               	movwf	fsr2l,c
  6839   000B60  6ADA               	clrf	fsr2h,c
  6840   000B62  2ADE               	incf	postinc2,f,c
  6841   000B64  0E00               	movlw	0
  6842   000B66  22DD               	addwfc	postdec2,f,c
  6843                           
  6844                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1216:                     break;
  6845   000B68  EFC9  F005         	goto	l7112
  6846   000B6C                     l7106:
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1243:                     done = 1;
  6850   000B6C  0E01               	movlw	1
  6851   000B6E  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  6852                           
  6853                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1244:                     break;
  6854   000B70  EFC9  F005         	goto	l7112
  6855   000B74                     l7110:
  6856                           
  6857                           ; BSR set to: 0
  6858   000B74  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6859   000B76  6ED9               	movwf	fsr2l,c
  6860   000B78  6ADA               	clrf	fsr2h,c
  6861   000B7A  CFDE FFF6          	movff	postinc2,tblptrl
  6862   000B7E  CFDD FFF7          	movff	postdec2,tblptrh
  6863   000B82                     	if	0	;tblptru may be non-zero
  6864   000B82                     	endif
  6865   000B82                     	if	0	;tblptru may be non-zero
  6866   000B82                     	endif
  6867   000B82  0008               	tblrd		*
  6868   000B84  50F5               	movf	tablat,w,c
  6869                           
  6870                           ; Switch size 1, requested type "simple"
  6871                           ; Number of cases is 1, Range of values is 45 to 45
  6872                           ; switch strategies available:
  6873                           ; Name         Instructions Cycles
  6874                           ; simple_byte            4     3 (average)
  6875                           ;	Chosen strategy is simple_byte
  6876   000B86  0A2D               	xorlw	45	; case 45
  6877   000B88  B4D8               	btfsc	status,2,c
  6878   000B8A  EFAD  F005         	goto	l7102
  6879   000B8E  EFB6  F005         	goto	l7106
  6880   000B92                     l7112:
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  6884   000B92  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  6885   000B94  B4D8               	btfsc	status,2,c
  6886   000B96  EFCF  F005         	goto	u8901
  6887   000B9A  EFD1  F005         	goto	u8900
  6888   000B9E                     u8901:
  6889   000B9E  EFBA  F005         	goto	l7110
  6890   000BA2                     u8900:
  6891   000BA2                     
  6892                           ; BSR set to: 0
  6893                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1256:   width = read_prec_or_width(
      +                          fmt, ap);
  6894   000BA2  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6895   000BA6  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6896   000BAA  EC41  F023         	call	_read_prec_or_width	;wreg free
  6897   000BAE  C00C  F055         	movff	?_read_prec_or_width,_width
  6898   000BB2  C00D  F056         	movff	?_read_prec_or_width+1,_width+1
  6899   000BB6                     
  6900                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1257:   if (width < 0) {
  6901   000BB6  BE56               	btfsc	(_width+1)^0,7,c
  6902   000BB8  EFE2  F005         	goto	u8910
  6903   000BBC  EFE0  F005         	goto	u8911
  6904   000BC0                     u8911:
  6905   000BC0  EFE7  F005         	goto	l7120
  6906   000BC4                     u8910:
  6907   000BC4                     
  6908                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1258:    flags |= (1 << 0);
  6909   000BC4  8059               	bsf	_flags^0,0,c
  6910                           
  6911                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1259:    width = -width;
  6912   000BC6  6C55               	negf	_width^0,c
  6913   000BC8  1E56               	comf	(_width+1)^0,f,c
  6914   000BCA  B0D8               	btfsc	status,0,c
  6915   000BCC  2A56               	incf	(_width+1)^0,f,c
  6916   000BCE                     l7120:
  6917                           
  6918                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1265:         if ((*fmt)[0] == '.')
      +                           {
  6919   000BCE  0100               	movlb	0	; () banked
  6920   000BD0  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6921   000BD2  6ED9               	movwf	fsr2l,c
  6922   000BD4  6ADA               	clrf	fsr2h,c
  6923   000BD6  CFDE FFF6          	movff	postinc2,tblptrl
  6924   000BDA  CFDD FFF7          	movff	postdec2,tblptrh
  6925   000BDE                     	if	0	;tblptru may be non-zero
  6926   000BDE                     	endif
  6927   000BDE                     	if	0	;tblptru may be non-zero
  6928   000BDE                     	endif
  6929   000BDE  0008               	tblrd		*
  6930   000BE0  50F5               	movf	tablat,w,c
  6931   000BE2  0A2E               	xorlw	46
  6932   000BE4  A4D8               	btfss	status,2,c
  6933   000BE6  EFF7  F005         	goto	u8921
  6934   000BEA  EFF9  F005         	goto	u8920
  6935   000BEE                     u8921:
  6936   000BEE  EF09  F006         	goto	l7126
  6937   000BF2                     u8920:
  6938   000BF2                     
  6939                           ; BSR set to: 0
  6940                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1266:             ++*fmt;
  6941   000BF2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6942   000BF4  6ED9               	movwf	fsr2l,c
  6943   000BF6  6ADA               	clrf	fsr2h,c
  6944   000BF8  2ADE               	incf	postinc2,f,c
  6945   000BFA  0E00               	movlw	0
  6946   000BFC  22DD               	addwfc	postdec2,f,c
  6947   000BFE                     
  6948                           ; BSR set to: 0
  6949                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1267:    prec = read_prec_or_width(
      +                          fmt, ap);
  6950   000BFE  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6951   000C02  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6952   000C06  EC41  F023         	call	_read_prec_or_width	;wreg free
  6953   000C0A  C00C  F057         	movff	?_read_prec_or_width,_prec
  6954   000C0E  C00D  F058         	movff	?_read_prec_or_width+1,_prec+1
  6955   000C12                     l7126:
  6956                           
  6957                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt;
  6958   000C12  0100               	movlb	0	; () banked
  6959   000C14  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6960   000C16  6ED9               	movwf	fsr2l,c
  6961   000C18  6ADA               	clrf	fsr2h,c
  6962   000C1A  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  6963   000C1E  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  6964   000C22                     
  6965                           ; BSR set to: 0
  6966                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  6967   000C22  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6968   000C26  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6969   000C2A                     	if	0	;tblptru may be non-zero
  6970   000C2A                     	endif
  6971   000C2A                     	if	0	;tblptru may be non-zero
  6972   000C2A                     	endif
  6973   000C2A  0008               	tblrd		*
  6974   000C2C  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  6975                           
  6976                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1294:   switch(c) {
  6977   000C30  EF26  F006         	goto	l7138
  6978   000C34                     l7130:
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1298:     cp++;
  6982   000C34  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  6983   000C36  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  6984                           
  6985                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1305:     break;
  6986   000C38  EF39  F006         	goto	l7140
  6987   000C3C                     l7132:
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1350:     c = 'i';
  6991   000C3C  0E69               	movlw	105
  6992   000C3E  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  6993                           
  6994                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1351:     break;
  6995   000C40  EF39  F006         	goto	l7140
  6996   000C44                     l7134:
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  7000   000C44  0E00               	movlw	0
  7001   000C46  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  7002                           
  7003                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1354:     break;
  7004   000C48  EF39  F006         	goto	l7140
  7005   000C4C                     l7138:
  7006                           
  7007                           ; BSR set to: 0
  7008   000C4C  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  7009                           
  7010                           ; Switch size 1, requested type "simple"
  7011                           ; Number of cases is 4, Range of values is 100 to 117
  7012                           ; switch strategies available:
  7013                           ; Name         Instructions Cycles
  7014                           ; simple_byte           13     7 (average)
  7015                           ;	Chosen strategy is simple_byte
  7016   000C4E  0A64               	xorlw	100	; case 100
  7017   000C50  B4D8               	btfsc	status,2,c
  7018   000C52  EF1E  F006         	goto	l7132
  7019   000C56  0A0C               	xorlw	12	; case 104
  7020   000C58  B4D8               	btfsc	status,2,c
  7021   000C5A  EF1A  F006         	goto	l7130
  7022   000C5E  0A01               	xorlw	1	; case 105
  7023   000C60  B4D8               	btfsc	status,2,c
  7024   000C62  EF1E  F006         	goto	l7132
  7025   000C66  0A1C               	xorlw	28	; case 117
  7026   000C68  B4D8               	btfsc	status,2,c
  7027   000C6A  EF1E  F006         	goto	l7132
  7028   000C6E  EF22  F006         	goto	l7134
  7029   000C72                     l7140:
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1361:   if (*cp == 'd' || *cp == 'i
      +                          ') {
  7033   000C72  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7034   000C76  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7035   000C7A                     	if	0	;tblptru may be non-zero
  7036   000C7A                     	endif
  7037   000C7A                     	if	0	;tblptru may be non-zero
  7038   000C7A                     	endif
  7039   000C7A  0008               	tblrd		*
  7040   000C7C  50F5               	movf	tablat,w,c
  7041   000C7E  0A64               	xorlw	100
  7042   000C80  B4D8               	btfsc	status,2,c
  7043   000C82  EF45  F006         	goto	u8931
  7044   000C86  EF47  F006         	goto	u8930
  7045   000C8A                     u8931:
  7046   000C8A  EF73  F006         	goto	l7150
  7047   000C8E                     u8930:
  7048   000C8E                     
  7049                           ; BSR set to: 0
  7050   000C8E  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7051   000C92  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7052   000C96                     	if	0	;tblptru may be non-zero
  7053   000C96                     	endif
  7054   000C96                     	if	0	;tblptru may be non-zero
  7055   000C96                     	endif
  7056   000C96  0008               	tblrd		*
  7057   000C98  50F5               	movf	tablat,w,c
  7058   000C9A  0A69               	xorlw	105
  7059   000C9C  A4D8               	btfss	status,2,c
  7060   000C9E  EF53  F006         	goto	u8941
  7061   000CA2  EF55  F006         	goto	u8940
  7062   000CA6                     u8941:
  7063   000CA6  EF97  F006         	goto	l7158
  7064   000CAA                     u8940:
  7065   000CAA  EF73  F006         	goto	l7150
  7066   000CAE                     l7144:
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1365:      convarg.sint = (vfpf_sin
      +                          t_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  7070   000CAE  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  7071   000CB0  6ED9               	movwf	fsr2l,c
  7072   000CB2  6ADA               	clrf	fsr2h,c
  7073   000CB4  0E02               	movlw	2
  7074   000CB6  26DF               	addwf	indf2,f,c
  7075   000CB8  5CDF               	subwf	indf2,w,c
  7076   000CBA  6ED9               	movwf	fsr2l,c
  7077   000CBC  6ADA               	clrf	fsr2h,c
  7078   000CBE  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  7079   000CC2  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  7080                           
  7081                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1366:      break;
  7082   000CC6  EF7E  F006         	goto	l7152
  7083   000CCA                     l7146:
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1369:      convarg.sint = (vfpf_sin
      +                          t_t)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  7087   000CCA  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  7088   000CCC  6ED9               	movwf	fsr2l,c
  7089   000CCE  6ADA               	clrf	fsr2h,c
  7090   000CD0  0E02               	movlw	2
  7091   000CD2  26DF               	addwf	indf2,f,c
  7092   000CD4  5CDF               	subwf	indf2,w,c
  7093   000CD6  6ED9               	movwf	fsr2l,c
  7094   000CD8  6ADA               	clrf	fsr2h,c
  7095   000CDA  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  7096   000CDE  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  7097                           
  7098                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1370:      break;
  7099   000CE2  EF7E  F006         	goto	l7152
  7100   000CE6                     l7150:
  7101                           
  7102                           ; BSR set to: 0
  7103   000CE6  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  7104                           
  7105                           ; Switch size 1, requested type "simple"
  7106                           ; Number of cases is 2, Range of values is 104 to 105
  7107                           ; switch strategies available:
  7108                           ; Name         Instructions Cycles
  7109                           ; simple_byte            7     4 (average)
  7110                           ;	Chosen strategy is simple_byte
  7111   000CE8  0A68               	xorlw	104	; case 104
  7112   000CEA  B4D8               	btfsc	status,2,c
  7113   000CEC  EF65  F006         	goto	l7146
  7114   000CF0  0A01               	xorlw	1	; case 105
  7115   000CF2  B4D8               	btfsc	status,2,c
  7116   000CF4  EF57  F006         	goto	l7144
  7117   000CF8  EF7E  F006         	goto	l7152
  7118   000CFC                     l7152:
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1406:    *fmt = cp+1;
  7122   000CFC  0E01               	movlw	1
  7123   000CFE  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  7124   000D00  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  7125   000D02  0E00               	movlw	0
  7126   000D04  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  7127   000D06  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7128   000D08  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7129   000D0A  6ED9               	movwf	fsr2l,c
  7130   000D0C  6ADA               	clrf	fsr2h,c
  7131   000D0E  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  7132   000D12  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  7133   000D16                     
  7134                           ; BSR set to: 0
  7135                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1432:    return (void) dtoa(fp, con
      +                          varg.sint);;	Return value of _vfpfcnvrt is never used
  7136   000D16  C0B9  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  7137   000D1A  C0BA  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7138   000D1E  C0C0  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  7139   000D22  C0C1  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  7140   000D26  EC82  F01B         	call	_dtoa	;wreg free
  7141   000D2A  EF36  F008         	goto	l1474
  7142   000D2E                     l7158:
  7143                           
  7144                           ; BSR set to: 0
  7145   000D2E  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7146   000D32  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7147   000D36                     	if	0	;tblptru may be non-zero
  7148   000D36                     	endif
  7149   000D36                     	if	0	;tblptru may be non-zero
  7150   000D36                     	endif
  7151   000D36  0008               	tblrd		*
  7152   000D38  50F5               	movf	tablat,w,c
  7153   000D3A  0A75               	xorlw	117
  7154   000D3C  A4D8               	btfss	status,2,c
  7155   000D3E  EFA3  F006         	goto	u8951
  7156   000D42  EFA5  F006         	goto	u8950
  7157   000D46                     u8951:
  7158   000D46  EFF5  F006         	goto	l7178
  7159   000D4A                     u8950:
  7160   000D4A  EFC3  F006         	goto	l7166
  7161   000D4E                     l7160:
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1456:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7165   000D4E  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  7166   000D50  6ED9               	movwf	fsr2l,c
  7167   000D52  6ADA               	clrf	fsr2h,c
  7168   000D54  0E02               	movlw	2
  7169   000D56  26DF               	addwf	indf2,f,c
  7170   000D58  5CDF               	subwf	indf2,w,c
  7171   000D5A  6ED9               	movwf	fsr2l,c
  7172   000D5C  6ADA               	clrf	fsr2h,c
  7173   000D5E  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  7174   000D62  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  7175                           
  7176                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1457:      break;
  7177   000D66  EFCE  F006         	goto	l7168
  7178   000D6A                     l7162:
  7179                           
  7180                           ; BSR set to: 0
  7181                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1460:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned short)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7182   000D6A  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  7183   000D6C  6ED9               	movwf	fsr2l,c
  7184   000D6E  6ADA               	clrf	fsr2h,c
  7185   000D70  0E02               	movlw	2
  7186   000D72  26DF               	addwf	indf2,f,c
  7187   000D74  5CDF               	subwf	indf2,w,c
  7188   000D76  6ED9               	movwf	fsr2l,c
  7189   000D78  6ADA               	clrf	fsr2h,c
  7190   000D7A  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  7191   000D7E  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  7192                           
  7193                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1461:      break;
  7194   000D82  EFCE  F006         	goto	l7168
  7195   000D86                     l7166:
  7196                           
  7197                           ; BSR set to: 0
  7198   000D86  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  7199                           
  7200                           ; Switch size 1, requested type "simple"
  7201                           ; Number of cases is 2, Range of values is 104 to 105
  7202                           ; switch strategies available:
  7203                           ; Name         Instructions Cycles
  7204                           ; simple_byte            7     4 (average)
  7205                           ;	Chosen strategy is simple_byte
  7206   000D88  0A68               	xorlw	104	; case 104
  7207   000D8A  B4D8               	btfsc	status,2,c
  7208   000D8C  EFB5  F006         	goto	l7162
  7209   000D90  0A01               	xorlw	1	; case 105
  7210   000D92  B4D8               	btfsc	status,2,c
  7211   000D94  EFA7  F006         	goto	l7160
  7212   000D98  EFCE  F006         	goto	l7168
  7213   000D9C                     l7168:
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1497:    *fmt = cp+1;
  7217   000D9C  0E01               	movlw	1
  7218   000D9E  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  7219   000DA0  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  7220   000DA2  0E00               	movlw	0
  7221   000DA4  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  7222   000DA6  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7223   000DA8  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7224   000DAA  6ED9               	movwf	fsr2l,c
  7225   000DAC  6ADA               	clrf	fsr2h,c
  7226   000DAE  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  7227   000DB2  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  7228                           
  7229                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1498:    switch (*cp) {
  7230   000DB6  EFE9  F006         	goto	l7176
  7231   000DBA                     l7170:
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1542:      return (void) utoa(fp, c
      +                          onvarg.uint);;	Return value of _vfpfcnvrt is never used
  7235   000DBA  C0B9  F020         	movff	vfpfcnvrt@fp,utoa@fp
  7236   000DBE  C0BA  F021         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  7237   000DC2  C0C0  F022         	movff	vfpfcnvrt@convarg,utoa@d
  7238   000DC6  C0C1  F023         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  7239   000DCA  ECE4  F020         	call	_utoa	;wreg free
  7240   000DCE  EF36  F008         	goto	l1474
  7241   000DD2                     l7176:
  7242                           
  7243                           ; BSR set to: 0
  7244   000DD2  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7245   000DD6  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7246   000DDA                     	if	0	;tblptru may be non-zero
  7247   000DDA                     	endif
  7248   000DDA                     	if	0	;tblptru may be non-zero
  7249   000DDA                     	endif
  7250   000DDA  0008               	tblrd		*
  7251   000DDC  50F5               	movf	tablat,w,c
  7252                           
  7253                           ; Switch size 1, requested type "simple"
  7254                           ; Number of cases is 1, Range of values is 117 to 117
  7255                           ; switch strategies available:
  7256                           ; Name         Instructions Cycles
  7257                           ; simple_byte            4     3 (average)
  7258                           ;	Chosen strategy is simple_byte
  7259   000DDE  0A75               	xorlw	117	; case 117
  7260   000DE0  B4D8               	btfsc	status,2,c
  7261   000DE2  EFDD  F006         	goto	l7170
  7262   000DE6  EFF5  F006         	goto	l7178
  7263   000DEA                     l7178:
  7264                           
  7265                           ; BSR set to: 0
  7266                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  7267   000DEA  0E00               	movlw	0
  7268   000DEC  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  7269   000DEE                     
  7270                           ; BSR set to: 0
  7271                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt)[0] == 's') {
  7272   000DEE  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7273   000DF0  6ED9               	movwf	fsr2l,c
  7274   000DF2  6ADA               	clrf	fsr2h,c
  7275   000DF4  CFDE FFF6          	movff	postinc2,tblptrl
  7276   000DF8  CFDD FFF7          	movff	postdec2,tblptrh
  7277   000DFC                     	if	0	;tblptru may be non-zero
  7278   000DFC                     	endif
  7279   000DFC                     	if	0	;tblptru may be non-zero
  7280   000DFC                     	endif
  7281   000DFC  0008               	tblrd		*
  7282   000DFE  50F5               	movf	tablat,w,c
  7283   000E00  0A73               	xorlw	115
  7284   000E02  A4D8               	btfss	status,2,c
  7285   000E04  EF06  F007         	goto	u8961
  7286   000E08  EF08  F007         	goto	u8960
  7287   000E0C                     u8961:
  7288   000E0C  EF12  F007         	goto	l7186
  7289   000E10                     u8960:
  7290   000E10                     
  7291                           ; BSR set to: 0
  7292                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  7293   000E10  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7294   000E12  6ED9               	movwf	fsr2l,c
  7295   000E14  6ADA               	clrf	fsr2h,c
  7296   000E16  2ADE               	incf	postinc2,f,c
  7297   000E18  0E00               	movlw	0
  7298   000E1A  22DD               	addwfc	postdec2,f,c
  7299   000E1C                     l7184:
  7300                           
  7301                           ; BSR set to: 0
  7302                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1659:    done = 1;
  7303   000E1C  0E01               	movlw	1
  7304   000E1E  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  7305                           
  7306                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1660:   }
  7307   000E20  EF5E  F007         	goto	l7196
  7308   000E24                     l7186:
  7309                           
  7310                           ; BSR set to: 0
  7311   000E24  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7312   000E26  6ED9               	movwf	fsr2l,c
  7313   000E28  6ADA               	clrf	fsr2h,c
  7314   000E2A  CFDE FFF6          	movff	postinc2,tblptrl
  7315   000E2E  CFDD FFF7          	movff	postdec2,tblptrh
  7316   000E32                     	if	0	;tblptru may be non-zero
  7317   000E32                     	endif
  7318   000E32                     	if	0	;tblptru may be non-zero
  7319   000E32                     	endif
  7320   000E32  0008               	tblrd		*
  7321   000E34  50F5               	movf	tablat,w,c
  7322   000E36  0A6C               	xorlw	108
  7323   000E38  A4D8               	btfss	status,2,c
  7324   000E3A  EF21  F007         	goto	u8971
  7325   000E3E  EF23  F007         	goto	u8970
  7326   000E42                     u8971:
  7327   000E42  EF5E  F007         	goto	l7196
  7328   000E46                     u8970:
  7329   000E46                     
  7330                           ; BSR set to: 0
  7331   000E46  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7332   000E48  6ED9               	movwf	fsr2l,c
  7333   000E4A  6ADA               	clrf	fsr2h,c
  7334   000E4C  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  7335   000E50  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  7336   000E54  0E01               	movlw	1
  7337   000E56  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7338   000E58  0E00               	movlw	0
  7339   000E5A  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7340   000E5C  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7341   000E60  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7342   000E64                     	if	0	;tblptru may be non-zero
  7343   000E64                     	endif
  7344   000E64                     	if	0	;tblptru may be non-zero
  7345   000E64                     	endif
  7346   000E64  0008               	tblrd		*
  7347   000E66  50F5               	movf	tablat,w,c
  7348   000E68  0A6C               	xorlw	108
  7349   000E6A  A4D8               	btfss	status,2,c
  7350   000E6C  EF3A  F007         	goto	u8981
  7351   000E70  EF3C  F007         	goto	u8980
  7352   000E74                     u8981:
  7353   000E74  EF5E  F007         	goto	l7196
  7354   000E78                     u8980:
  7355   000E78                     
  7356                           ; BSR set to: 0
  7357   000E78  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7358   000E7A  6ED9               	movwf	fsr2l,c
  7359   000E7C  6ADA               	clrf	fsr2h,c
  7360   000E7E  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  7361   000E82  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  7362   000E86  0E02               	movlw	2
  7363   000E88  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7364   000E8A  0E00               	movlw	0
  7365   000E8C  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7366   000E8E  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7367   000E92  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7368   000E96                     	if	0	;tblptru may be non-zero
  7369   000E96                     	endif
  7370   000E96                     	if	0	;tblptru may be non-zero
  7371   000E96                     	endif
  7372   000E96  0008               	tblrd		*
  7373   000E98  50F5               	movf	tablat,w,c
  7374   000E9A  0A73               	xorlw	115
  7375   000E9C  A4D8               	btfss	status,2,c
  7376   000E9E  EF53  F007         	goto	u8991
  7377   000EA2  EF55  F007         	goto	u8990
  7378   000EA6                     u8991:
  7379   000EA6  EF5E  F007         	goto	l7196
  7380   000EAA                     u8990:
  7381   000EAA                     
  7382                           ; BSR set to: 0
  7383                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 3;
  7384   000EAA  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7385   000EAC  6ED9               	movwf	fsr2l,c
  7386   000EAE  6ADA               	clrf	fsr2h,c
  7387   000EB0  0E03               	movlw	3
  7388   000EB2  26DE               	addwf	postinc2,f,c
  7389   000EB4  0E00               	movlw	0
  7390   000EB6  22DD               	addwfc	postdec2,f,c
  7391   000EB8  EF0E  F007         	goto	l7184
  7392   000EBC                     l7196:
  7393                           
  7394                           ; BSR set to: 0
  7395                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1665:   if (done) {
  7396   000EBC  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  7397   000EBE  B4D8               	btfsc	status,2,c
  7398   000EC0  EF64  F007         	goto	u9001
  7399   000EC4  EF66  F007         	goto	u9000
  7400   000EC8                     u9001:
  7401   000EC8  EF7A  F007         	goto	l7202
  7402   000ECC                     u9000:
  7403   000ECC                     
  7404                           ; BSR set to: 0
  7405                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1682:    return (void) stoa(fp, (*(
      +                          char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpfcnvrt is never use
      +                          d
  7406   000ECC  C0B9  F010         	movff	vfpfcnvrt@fp,stoa@fp
  7407   000ED0  C0BA  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  7408   000ED4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  7409   000ED6  6ED9               	movwf	fsr2l,c
  7410   000ED8  6ADA               	clrf	fsr2h,c
  7411   000EDA  0E02               	movlw	2
  7412   000EDC  26DF               	addwf	indf2,f,c
  7413   000EDE  5CDF               	subwf	indf2,w,c
  7414   000EE0  6ED9               	movwf	fsr2l,c
  7415   000EE2  6ADA               	clrf	fsr2h,c
  7416   000EE4  CFDE F012          	movff	postinc2,stoa@s
  7417   000EE8  CFDE F013          	movff	postinc2,stoa@s+1
  7418   000EEC  ECB3  F01A         	call	_stoa	;wreg free
  7419   000EF0  EF36  F008         	goto	l1474
  7420   000EF4                     l7202:
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt;
  7424   000EF4  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7425   000EF6  6ED9               	movwf	fsr2l,c
  7426   000EF8  6ADA               	clrf	fsr2h,c
  7427   000EFA  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  7428   000EFE  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  7429   000F02                     
  7430                           ; BSR set to: 0
  7431                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  7432   000F02  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7433   000F06  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7434   000F0A                     	if	0	;tblptru may be non-zero
  7435   000F0A                     	endif
  7436   000F0A                     	if	0	;tblptru may be non-zero
  7437   000F0A                     	endif
  7438   000F0A  0008               	tblrd		*
  7439   000F0C  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  7440                           
  7441                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1691:   switch(c) {
  7442   000F10  EF96  F007         	goto	l7214
  7443   000F14                     l7206:
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  7447   000F14  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  7448   000F16  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  7449                           
  7450                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1696:     break;
  7451   000F18  EFA5  F007         	goto	l7216
  7452   000F1C                     l7208:
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1721:     c = 'l';
  7456   000F1C  0E6C               	movlw	108
  7457   000F1E  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  7458                           
  7459                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1722:     break;
  7460   000F20  EFA5  F007         	goto	l7216
  7461   000F24                     l7210:
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  7465   000F24  0E00               	movlw	0
  7466   000F26  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  7467                           
  7468                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1725:     break;
  7469   000F28  EFA5  F007         	goto	l7216
  7470   000F2C                     l7214:
  7471                           
  7472                           ; BSR set to: 0
  7473   000F2C  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  7474                           
  7475                           ; Switch size 1, requested type "simple"
  7476                           ; Number of cases is 3, Range of values is 76 to 108
  7477                           ; switch strategies available:
  7478                           ; Name         Instructions Cycles
  7479                           ; simple_byte           10     6 (average)
  7480                           ;	Chosen strategy is simple_byte
  7481   000F2E  0A4C               	xorlw	76	; case 76
  7482   000F30  B4D8               	btfsc	status,2,c
  7483   000F32  EF8A  F007         	goto	l7206
  7484   000F36  0A2A               	xorlw	42	; case 102
  7485   000F38  B4D8               	btfsc	status,2,c
  7486   000F3A  EF8E  F007         	goto	l7208
  7487   000F3E  0A0A               	xorlw	10	; case 108
  7488   000F40  B4D8               	btfsc	status,2,c
  7489   000F42  EF8A  F007         	goto	l7206
  7490   000F46  EF92  F007         	goto	l7210
  7491   000F4A                     l7216:
  7492                           
  7493                           ; BSR set to: 0
  7494   000F4A  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7495   000F4E  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7496   000F52                     	if	0	;tblptru may be non-zero
  7497   000F52                     	endif
  7498   000F52                     	if	0	;tblptru may be non-zero
  7499   000F52                     	endif
  7500   000F52  0008               	tblrd		*
  7501   000F54  50F5               	movf	tablat,w,c
  7502   000F56  0A66               	xorlw	102
  7503   000F58  A4D8               	btfss	status,2,c
  7504   000F5A  EFB1  F007         	goto	u9011
  7505   000F5E  EFB3  F007         	goto	u9010
  7506   000F62                     u9011:
  7507   000F62  EF1A  F008         	goto	l7236
  7508   000F66                     u9010:
  7509   000F66  EFDD  F007         	goto	l7224
  7510   000F6A                     l7218:
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1756:      convarg.f = (long double
      +                          )(*(double *)__va_arg(*(double **)ap, (double)0));
  7514   000F6A  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  7515   000F6C  6ED9               	movwf	fsr2l,c
  7516   000F6E  6ADA               	clrf	fsr2h,c
  7517   000F70  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  7518   000F74  0E04               	movlw	4
  7519   000F76  26DF               	addwf	indf2,f,c
  7520   000F78  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  7521   000F7A  6ED9               	movwf	fsr2l,c
  7522   000F7C  6ADA               	clrf	fsr2h,c
  7523   000F7E  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  7524   000F82  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  7525   000F86  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  7526   000F8A  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  7527                           
  7528                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1757:      break;
  7529   000F8E  EFE8  F007         	goto	l7226
  7530   000F92                     l7220:
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1759:      convarg.f = (long double
      +                          )(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7534   000F92  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  7535   000F94  6ED9               	movwf	fsr2l,c
  7536   000F96  6ADA               	clrf	fsr2h,c
  7537   000F98  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  7538   000F9C  0E04               	movlw	4
  7539   000F9E  26DF               	addwf	indf2,f,c
  7540   000FA0  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  7541   000FA2  6ED9               	movwf	fsr2l,c
  7542   000FA4  6ADA               	clrf	fsr2h,c
  7543   000FA6  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  7544   000FAA  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  7545   000FAE  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  7546   000FB2  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  7547                           
  7548                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1760:      break;
  7549   000FB6  EFE8  F007         	goto	l7226
  7550   000FBA                     l7224:
  7551                           
  7552                           ; BSR set to: 0
  7553   000FBA  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  7554                           
  7555                           ; Switch size 1, requested type "simple"
  7556                           ; Number of cases is 2, Range of values is 76 to 108
  7557                           ; switch strategies available:
  7558                           ; Name         Instructions Cycles
  7559                           ; simple_byte            7     4 (average)
  7560                           ;	Chosen strategy is simple_byte
  7561   000FBC  0A4C               	xorlw	76	; case 76
  7562   000FBE  B4D8               	btfsc	status,2,c
  7563   000FC0  EFC9  F007         	goto	l7220
  7564   000FC4  0A20               	xorlw	32	; case 108
  7565   000FC6  B4D8               	btfsc	status,2,c
  7566   000FC8  EFB5  F007         	goto	l7218
  7567   000FCC  EFE8  F007         	goto	l7226
  7568   000FD0                     l7226:
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1762:    *fmt = cp+1;
  7572   000FD0  0E01               	movlw	1
  7573   000FD2  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  7574   000FD4  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  7575   000FD6  0E00               	movlw	0
  7576   000FD8  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  7577   000FDA  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7578   000FDC  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7579   000FDE  6ED9               	movwf	fsr2l,c
  7580   000FE0  6ADA               	clrf	fsr2h,c
  7581   000FE2  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  7582   000FE6  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  7583                           
  7584                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1763:    switch (*cp) {
  7585   000FEA  EF0E  F008         	goto	l7234
  7586   000FEE                     l7228:
  7587                           
  7588                           ; BSR set to: 0
  7589                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1790:      return (void) efgtoa(fp,
      +                           convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  7590   000FEE  C0B9  F084         	movff	vfpfcnvrt@fp,efgtoa@fp
  7591   000FF2  C0BA  F085         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7592   000FF6  C0C0  F086         	movff	vfpfcnvrt@convarg,efgtoa@f
  7593   000FFA  C0C1  F087         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  7594   000FFE  C0C2  F088         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  7595   001002  C0C3  F089         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  7596   001006  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7597   00100A  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7598   00100E                     	if	0	;tblptru may be non-zero
  7599   00100E                     	endif
  7600   00100E                     	if	0	;tblptru may be non-zero
  7601   00100E                     	endif
  7602   00100E  0008               	tblrd		*
  7603   001010  CFF5 F08A          	movff	tablat,efgtoa@c
  7604   001014  EC8C  F000         	call	_efgtoa	;wreg free
  7605   001018  EF36  F008         	goto	l1474
  7606   00101C                     l7234:
  7607                           
  7608                           ; BSR set to: 0
  7609   00101C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7610   001020  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7611   001024                     	if	0	;tblptru may be non-zero
  7612   001024                     	endif
  7613   001024                     	if	0	;tblptru may be non-zero
  7614   001024                     	endif
  7615   001024  0008               	tblrd		*
  7616   001026  50F5               	movf	tablat,w,c
  7617                           
  7618                           ; Switch size 1, requested type "simple"
  7619                           ; Number of cases is 1, Range of values is 102 to 102
  7620                           ; switch strategies available:
  7621                           ; Name         Instructions Cycles
  7622                           ; simple_byte            4     3 (average)
  7623                           ;	Chosen strategy is simple_byte
  7624   001028  0A66               	xorlw	102	; case 102
  7625   00102A  B4D8               	btfsc	status,2,c
  7626   00102C  EFF7  F007         	goto	l7228
  7627   001030  EF1A  F008         	goto	l7236
  7628   001034                     l7236:
  7629                           
  7630                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  7631   001034  0100               	movlb	0	; () banked
  7632   001036  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7633   001038  6ED9               	movwf	fsr2l,c
  7634   00103A  6ADA               	clrf	fsr2h,c
  7635   00103C  2ADE               	incf	postinc2,f,c
  7636   00103E  0E00               	movlw	0
  7637   001040  22DD               	addwfc	postdec2,f,c
  7638   001042  EF36  F008         	goto	l1474
  7639   001046                     l7240:
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*fmt)[0], fp)
      +                          ;
  7643   001046  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7644   001048  6ED9               	movwf	fsr2l,c
  7645   00104A  6ADA               	clrf	fsr2h,c
  7646   00104C  CFDE FFF6          	movff	postinc2,tblptrl
  7647   001050  CFDD FFF7          	movff	postdec2,tblptrh
  7648   001054                     	if	0	;tblptru may be non-zero
  7649   001054                     	endif
  7650   001054                     	if	0	;tblptru may be non-zero
  7651   001054                     	endif
  7652   001054  0008               	tblrd		*
  7653   001056  50F5               	movf	tablat,w,c
  7654   001058  6E07               	movwf	fputc@c^0,c
  7655   00105A  6A08               	clrf	(fputc@c+1)^0,c
  7656   00105C  C0B9  F009         	movff	vfpfcnvrt@fp,fputc@fp
  7657   001060  C0BA  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7658   001064  ECC9  F021         	call	_fputc	;wreg free
  7659   001068  EF1A  F008         	goto	l7236
  7660   00106C                     l1474:
  7661   00106C  0012               	return		;funcret
  7662   00106E                     __end_of_vfpfcnvrt:
  7663                           	callstack 0
  7664                           
  7665 ;; *************** function _utoa *****************
  7666 ;; Defined at:
  7667 ;;		line 1001 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  7670 ;;		 -> NULL(0), sprintf@f(12), 
  7671 ;;  d               2   33[COMRAM] unsigned int 
  7672 ;; Auto vars:     Size  Location     Type
  7673 ;;  i               2   39[COMRAM] int 
  7674 ;;  p               2   37[COMRAM] int 
  7675 ;;  w               2   35[COMRAM] int 
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  1    wreg      void 
  7678 ;; Registers used:
  7679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7686 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7688 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7689 ;;Total ram usage:       10 bytes
  7690 ;; Hardware stack levels used: 1
  7691 ;; Hardware stack levels required when called: 5
  7692 ;; This function calls:
  7693 ;;		___lwdiv
  7694 ;;		___lwmod
  7695 ;;		_pad
  7696 ;; This function is called by:
  7697 ;;		_vfpfcnvrt
  7698 ;; This function uses a non-reentrant model
  7699 ;;
  7700                           
  7701                           	psect	text27
  7702   0041C8                     __ptext27:
  7703                           	callstack 0
  7704   0041C8                     _utoa:
  7705                           	callstack 21
  7706   0041C8                     
  7707                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1001: static void utoa(FILE *fp, vf
      +                          pf_uint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1002: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 1003:     int i, w;;D:\MPLABX\Compiler\pic\sources\
      +                          c99\common\doprnt.c: 1005:  int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1
      +                          017:     p = (0 <= prec) ? prec : 1;
  7708   0041C8  BE58               	btfsc	(_prec+1)^0,7,c
  7709   0041CA  EFEB  F020         	goto	u8730
  7710   0041CE  EFE9  F020         	goto	u8731
  7711   0041D2                     u8731:
  7712   0041D2  EFF1  F020         	goto	l1431
  7713   0041D6                     u8730:
  7714   0041D6  0E00               	movlw	0
  7715   0041D8  6E27               	movwf	(utoa@p+1)^0,c
  7716   0041DA  0E01               	movlw	1
  7717   0041DC  6E26               	movwf	utoa@p^0,c
  7718   0041DE  EFF5  F020         	goto	l1433
  7719   0041E2                     l1431:
  7720   0041E2  C057  F026         	movff	_prec,utoa@p
  7721   0041E6  C058  F027         	movff	_prec+1,utoa@p+1
  7722   0041EA                     l1433:
  7723                           
  7724                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1019:     w = width;
  7725   0041EA  C055  F024         	movff	_width,utoa@w
  7726   0041EE  C056  F025         	movff	_width+1,utoa@w+1
  7727   0041F2                     
  7728                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1022:     i = sizeof(dbuf) - 1;
  7729   0041F2  0E00               	movlw	0
  7730   0041F4  6E29               	movwf	(utoa@i+1)^0,c
  7731   0041F6  0E4F               	movlw	79
  7732   0041F8  6E28               	movwf	utoa@i^0,c
  7733   0041FA                     
  7734                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i] = '\0';
  7735   0041FA  0E00               	movlw	0
  7736   0041FC  0101               	movlb	1	; () banked
  7737   0041FE  6F74               	movwf	(_dbuf+79)& (0+255),b
  7738                           
  7739                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  7740   004200  EF2C  F021         	goto	l7022
  7741   004204                     l7012:
  7742                           
  7743                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1033:     )) {;D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 1034:         --i;
  7744   004204  0628               	decf	utoa@i^0,f,c
  7745   004206  A0D8               	btfss	status,0,c
  7746   004208  0629               	decf	(utoa@i+1)^0,f,c
  7747   00420A                     
  7748                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1035:         dbuf[i] = '0' + (d % 
      +                          10);
  7749   00420A  0E25               	movlw	low _dbuf
  7750   00420C  2428               	addwf	utoa@i^0,w,c
  7751   00420E  6ED9               	movwf	fsr2l,c
  7752   004210  0E01               	movlw	high _dbuf
  7753   004212  2029               	addwfc	(utoa@i+1)^0,w,c
  7754   004214  6EDA               	movwf	fsr2h,c
  7755   004216  C022  F006         	movff	utoa@d,___lwmod@dividend
  7756   00421A  C023  F007         	movff	utoa@d+1,___lwmod@dividend+1
  7757   00421E  0E00               	movlw	0
  7758   004220  6E09               	movwf	(___lwmod@divisor+1)^0,c
  7759   004222  0E0A               	movlw	10
  7760   004224  6E08               	movwf	___lwmod@divisor^0,c
  7761   004226  EC76  F024         	call	___lwmod	;wreg free
  7762   00422A  5006               	movf	?___lwmod^0,w,c
  7763   00422C  0F30               	addlw	48
  7764   00422E  6EDF               	movwf	indf2,c
  7765   004230                     
  7766                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1037:         --p;
  7767   004230  0626               	decf	utoa@p^0,f,c
  7768   004232  A0D8               	btfss	status,0,c
  7769   004234  0627               	decf	(utoa@p+1)^0,f,c
  7770   004236                     
  7771                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1041:         --w;
  7772   004236  0624               	decf	utoa@w^0,f,c
  7773   004238  A0D8               	btfss	status,0,c
  7774   00423A  0625               	decf	(utoa@w+1)^0,f,c
  7775   00423C                     
  7776                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1042:         d = d / 10;
  7777   00423C  C022  F006         	movff	utoa@d,___lwdiv@dividend
  7778   004240  C023  F007         	movff	utoa@d+1,___lwdiv@dividend+1
  7779   004244  0E00               	movlw	0
  7780   004246  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  7781   004248  0E0A               	movlw	10
  7782   00424A  6E08               	movwf	___lwdiv@divisor^0,c
  7783   00424C  EC3C  F024         	call	___lwdiv	;wreg free
  7784   004250  C006  F022         	movff	?___lwdiv,utoa@d
  7785   004254  C007  F023         	movff	?___lwdiv+1,utoa@d+1
  7786   004258                     l7022:
  7787                           
  7788                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  7789   004258  5028               	movf	utoa@i^0,w,c
  7790   00425A  1029               	iorwf	(utoa@i+1)^0,w,c
  7791   00425C  B4D8               	btfsc	status,2,c
  7792   00425E  EF33  F021         	goto	u8741
  7793   004262  EF35  F021         	goto	u8740
  7794   004266                     u8741:
  7795   004266  EF4B  F021         	goto	l7028
  7796   00426A                     u8740:
  7797   00426A  5022               	movf	utoa@d^0,w,c
  7798   00426C  1023               	iorwf	(utoa@d+1)^0,w,c
  7799   00426E  A4D8               	btfss	status,2,c
  7800   004270  EF3C  F021         	goto	u8751
  7801   004274  EF3E  F021         	goto	u8750
  7802   004278                     u8751:
  7803   004278  EF02  F021         	goto	l7012
  7804   00427C                     u8750:
  7805   00427C  BE27               	btfsc	(utoa@p+1)^0,7,c
  7806   00427E  EF4B  F021         	goto	u8760
  7807   004282  5027               	movf	(utoa@p+1)^0,w,c
  7808   004284  E106               	bnz	u8761
  7809   004286  0426               	decf	utoa@p^0,w,c
  7810   004288  B0D8               	btfsc	status,0,c
  7811   00428A  EF49  F021         	goto	u8761
  7812   00428E  EF4B  F021         	goto	u8760
  7813   004292                     u8761:
  7814   004292  EF02  F021         	goto	l7012
  7815   004296                     u8760:
  7816   004296                     l7028:
  7817                           
  7818                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1046:     return (void) pad(fp, &db
      +                          uf[i], w);
  7819   004296  C020  F017         	movff	utoa@fp,pad@fp
  7820   00429A  C021  F018         	movff	utoa@fp+1,pad@fp+1
  7821   00429E  0E25               	movlw	low _dbuf
  7822   0042A0  2428               	addwf	utoa@i^0,w,c
  7823   0042A2  6E19               	movwf	pad@buf^0,c
  7824   0042A4  0E01               	movlw	high _dbuf
  7825   0042A6  2029               	addwfc	(utoa@i+1)^0,w,c
  7826   0042A8  6E1A               	movwf	(pad@buf+1)^0,c
  7827   0042AA  C024  F01B         	movff	utoa@w,pad@p
  7828   0042AE  C025  F01C         	movff	utoa@w+1,pad@p+1
  7829   0042B2  ECED  F023         	call	_pad	;wreg free
  7830   0042B6  0012               	return		;funcret
  7831   0042B8                     __end_of_utoa:
  7832                           	callstack 0
  7833                           
  7834 ;; *************** function ___lwmod *****************
  7835 ;; Defined at:
  7836 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwmod.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;  dividend        2    5[COMRAM] unsigned int 
  7839 ;;  divisor         2    7[COMRAM] unsigned int 
  7840 ;; Auto vars:     Size  Location     Type
  7841 ;;  counter         1    9[COMRAM] unsigned char 
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  2    5[COMRAM] unsigned int 
  7844 ;; Registers used:
  7845 ;;		wreg, status,2, status,0
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7851 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7852 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7854 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7855 ;;Total ram usage:        5 bytes
  7856 ;; Hardware stack levels used: 1
  7857 ;; Hardware stack levels required when called: 1
  7858 ;; This function calls:
  7859 ;;		Nothing
  7860 ;; This function is called by:
  7861 ;;		_utoa
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           	psect	text28
  7866   0048EC                     __ptext28:
  7867                           	callstack 0
  7868   0048EC                     ___lwmod:
  7869                           	callstack 24
  7870   0048EC  5008               	movf	___lwmod@divisor^0,w,c
  7871   0048EE  1009               	iorwf	(___lwmod@divisor+1)^0,w,c
  7872   0048F0  B4D8               	btfsc	status,2,c
  7873   0048F2  EF7D  F024         	goto	u7931
  7874   0048F6  EF7F  F024         	goto	u7930
  7875   0048FA                     u7931:
  7876   0048FA  EFA3  F024         	goto	l1125
  7877   0048FE                     u7930:
  7878   0048FE  0E01               	movlw	1
  7879   004900  6E0A               	movwf	___lwmod@counter^0,c
  7880   004902  EF87  F024         	goto	l6596
  7881   004906                     l6594:
  7882   004906  90D8               	bcf	status,0,c
  7883   004908  3608               	rlcf	___lwmod@divisor^0,f,c
  7884   00490A  3609               	rlcf	(___lwmod@divisor+1)^0,f,c
  7885   00490C  2A0A               	incf	___lwmod@counter^0,f,c
  7886   00490E                     l6596:
  7887   00490E  AE09               	btfss	(___lwmod@divisor+1)^0,7,c
  7888   004910  EF8C  F024         	goto	u7941
  7889   004914  EF8E  F024         	goto	u7940
  7890   004918                     u7941:
  7891   004918  EF83  F024         	goto	l6594
  7892   00491C                     u7940:
  7893   00491C                     l6598:
  7894   00491C  5008               	movf	___lwmod@divisor^0,w,c
  7895   00491E  5C06               	subwf	___lwmod@dividend^0,w,c
  7896   004920  5009               	movf	(___lwmod@divisor+1)^0,w,c
  7897   004922  5807               	subwfb	(___lwmod@dividend+1)^0,w,c
  7898   004924  A0D8               	btfss	status,0,c
  7899   004926  EF97  F024         	goto	u7951
  7900   00492A  EF99  F024         	goto	u7950
  7901   00492E                     u7951:
  7902   00492E  EF9D  F024         	goto	l6602
  7903   004932                     u7950:
  7904   004932  5008               	movf	___lwmod@divisor^0,w,c
  7905   004934  5E06               	subwf	___lwmod@dividend^0,f,c
  7906   004936  5009               	movf	(___lwmod@divisor+1)^0,w,c
  7907   004938  5A07               	subwfb	(___lwmod@dividend+1)^0,f,c
  7908   00493A                     l6602:
  7909   00493A  90D8               	bcf	status,0,c
  7910   00493C  3209               	rrcf	(___lwmod@divisor+1)^0,f,c
  7911   00493E  3208               	rrcf	___lwmod@divisor^0,f,c
  7912   004940  2E0A               	decfsz	___lwmod@counter^0,f,c
  7913   004942  EF8E  F024         	goto	l6598
  7914   004946                     l1125:
  7915   004946  C006  F006         	movff	___lwmod@dividend,?___lwmod
  7916   00494A  C007  F007         	movff	___lwmod@dividend+1,?___lwmod+1
  7917   00494E  0012               	return		;funcret
  7918   004950                     __end_of___lwmod:
  7919                           	callstack 0
  7920                           
  7921 ;; *************** function ___lwdiv *****************
  7922 ;; Defined at:
  7923 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwdiv.c"
  7924 ;; Parameters:    Size  Location     Type
  7925 ;;  dividend        2    5[COMRAM] unsigned int 
  7926 ;;  divisor         2    7[COMRAM] unsigned int 
  7927 ;; Auto vars:     Size  Location     Type
  7928 ;;  quotient        2   10[COMRAM] unsigned int 
  7929 ;;  counter         1    9[COMRAM] unsigned char 
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  2    5[COMRAM] unsigned int 
  7932 ;; Registers used:
  7933 ;;		wreg, status,2, status,0
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/0
  7936 ;;		On exit  : 0/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7939 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7940 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7942 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7943 ;;Total ram usage:        7 bytes
  7944 ;; Hardware stack levels used: 1
  7945 ;; Hardware stack levels required when called: 1
  7946 ;; This function calls:
  7947 ;;		Nothing
  7948 ;; This function is called by:
  7949 ;;		_utoa
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           	psect	text29
  7954   004878                     __ptext29:
  7955                           	callstack 0
  7956   004878                     ___lwdiv:
  7957                           	callstack 24
  7958   004878  0E00               	movlw	0
  7959   00487A  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  7960   00487C  0E00               	movlw	0
  7961   00487E  6E0B               	movwf	___lwdiv@quotient^0,c
  7962   004880  5008               	movf	___lwdiv@divisor^0,w,c
  7963   004882  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7964   004884  B4D8               	btfsc	status,2,c
  7965   004886  EF47  F024         	goto	u7901
  7966   00488A  EF49  F024         	goto	u7900
  7967   00488E                     u7901:
  7968   00488E  EF71  F024         	goto	l1115
  7969   004892                     u7900:
  7970   004892  0E01               	movlw	1
  7971   004894  6E0A               	movwf	___lwdiv@counter^0,c
  7972   004896  EF51  F024         	goto	l6576
  7973   00489A                     l6574:
  7974   00489A  90D8               	bcf	status,0,c
  7975   00489C  3608               	rlcf	___lwdiv@divisor^0,f,c
  7976   00489E  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7977   0048A0  2A0A               	incf	___lwdiv@counter^0,f,c
  7978   0048A2                     l6576:
  7979   0048A2  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  7980   0048A4  EF56  F024         	goto	u7911
  7981   0048A8  EF58  F024         	goto	u7910
  7982   0048AC                     u7911:
  7983   0048AC  EF4D  F024         	goto	l6574
  7984   0048B0                     u7910:
  7985   0048B0                     l6578:
  7986   0048B0  90D8               	bcf	status,0,c
  7987   0048B2  360B               	rlcf	___lwdiv@quotient^0,f,c
  7988   0048B4  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7989   0048B6  5008               	movf	___lwdiv@divisor^0,w,c
  7990   0048B8  5C06               	subwf	___lwdiv@dividend^0,w,c
  7991   0048BA  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  7992   0048BC  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7993   0048BE  A0D8               	btfss	status,0,c
  7994   0048C0  EF64  F024         	goto	u7921
  7995   0048C4  EF66  F024         	goto	u7920
  7996   0048C8                     u7921:
  7997   0048C8  EF6B  F024         	goto	l6586
  7998   0048CC                     u7920:
  7999   0048CC  5008               	movf	___lwdiv@divisor^0,w,c
  8000   0048CE  5E06               	subwf	___lwdiv@dividend^0,f,c
  8001   0048D0  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  8002   0048D2  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8003   0048D4  800B               	bsf	___lwdiv@quotient^0,0,c
  8004   0048D6                     l6586:
  8005   0048D6  90D8               	bcf	status,0,c
  8006   0048D8  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8007   0048DA  3208               	rrcf	___lwdiv@divisor^0,f,c
  8008   0048DC  2E0A               	decfsz	___lwdiv@counter^0,f,c
  8009   0048DE  EF58  F024         	goto	l6578
  8010   0048E2                     l1115:
  8011   0048E2  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  8012   0048E6  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8013   0048EA  0012               	return		;funcret
  8014   0048EC                     __end_of___lwdiv:
  8015                           	callstack 0
  8016                           
  8017 ;; *************** function _stoa *****************
  8018 ;; Defined at:
  8019 ;;		line 942 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  8022 ;;		 -> NULL(0), sprintf@f(12), 
  8023 ;;  s               2   17[COMRAM] PTR unsigned char 
  8024 ;;		 -> ?_printf(2), ?_sprintf(2), runUART@reversed(31), STR_22(1), 
  8025 ;;		 -> STR_21(6), STR_20(5), STR_19(4), STR_18(4), 
  8026 ;;		 -> STR_17(4), STR_16(5), STR_15(5), 
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;  l               2   27[COMRAM] int 
  8029 ;;  cp              2   25[COMRAM] PTR unsigned char 
  8030 ;;		 -> ?_printf(2), STR_34(7), ?_sprintf(2), runUART@reversed(31), 
  8031 ;;		 -> STR_22(1), STR_21(6), STR_20(5), STR_19(4), 
  8032 ;;		 -> STR_18(4), STR_17(4), STR_16(5), STR_15(5), 
  8033 ;;  w               2   23[COMRAM] int 
  8034 ;;  p               2   21[COMRAM] int 
  8035 ;; Return value:  Size  Location     Type
  8036 ;;                  1    wreg      void 
  8037 ;; Registers used:
  8038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8039 ;; Tracked objects:
  8040 ;;		On entry : 0/0
  8041 ;;		On exit  : 0/0
  8042 ;;		Unchanged: 0/0
  8043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8044 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8045 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8046 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8047 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8048 ;;Total ram usage:       14 bytes
  8049 ;; Hardware stack levels used: 1
  8050 ;; Hardware stack levels required when called: 3
  8051 ;; This function calls:
  8052 ;;		_fputc
  8053 ;; This function is called by:
  8054 ;;		_vfpfcnvrt
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           	psect	text30
  8059   003566                     __ptext30:
  8060                           	callstack 0
  8061   003566                     _stoa:
  8062                           	callstack 23
  8063   003566                     
  8064                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 942: static void stoa(FILE *fp, cha
      +                          r *s);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 943: {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 944:     char *cp;;D:\MPLABX\Compiler\pic\sources\c99\commo
      +                          n\doprnt.c: 945:     int l, p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 947: 
      +                           int w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 951:     cp = s;
  8065   003566  C012  F01A         	movff	stoa@s,stoa@cp
  8066   00356A  C013  F01B         	movff	stoa@s+1,stoa@cp+1
  8067                           
  8068                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 952:     if (!cp) {
  8069   00356E  501A               	movf	stoa@cp^0,w,c
  8070   003570  101B               	iorwf	(stoa@cp+1)^0,w,c
  8071   003572  A4D8               	btfss	status,2,c
  8072   003574  EFBE  F01A         	goto	u8621
  8073   003578  EFC0  F01A         	goto	u8620
  8074   00357C                     u8621:
  8075   00357C  EFC4  F01A         	goto	l6970
  8076   003580                     u8620:
  8077   003580                     
  8078                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 953:         cp = "(null)";
  8079   003580  0EBF               	movlw	low STR_34
  8080   003582  6E1A               	movwf	stoa@cp^0,c
  8081   003584  0EFF               	movlw	high STR_34
  8082   003586  6E1B               	movwf	(stoa@cp+1)^0,c
  8083   003588                     l6970:
  8084                           
  8085                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 957:  for (l = 0; cp[l] != '\0'; l+
      +                          +) {
  8086   003588  0E00               	movlw	0
  8087   00358A  6E1D               	movwf	(stoa@l+1)^0,c
  8088   00358C  0E00               	movlw	0
  8089   00358E  6E1C               	movwf	stoa@l^0,c
  8090   003590  EFCC  F01A         	goto	l6974
  8091   003594                     l6972:
  8092   003594  4A1C               	infsnz	stoa@l^0,f,c
  8093   003596  2A1D               	incf	(stoa@l+1)^0,f,c
  8094   003598                     l6974:
  8095   003598  501C               	movf	stoa@l^0,w,c
  8096   00359A  241A               	addwf	stoa@cp^0,w,c
  8097   00359C  6E14               	movwf	??_stoa^0,c
  8098   00359E  501D               	movf	(stoa@l+1)^0,w,c
  8099   0035A0  201B               	addwfc	(stoa@cp+1)^0,w,c
  8100   0035A2  6E15               	movwf	(??_stoa+1)^0,c
  8101   0035A4  C014  FFF6         	movff	??_stoa,tblptrl
  8102   0035A8  C015  FFF7         	movff	??_stoa+1,tblptrh
  8103   0035AC  0E00               	movlw	low (__mediumconst shr (0+16))
  8104   0035AE  6EF8               	movwf	tblptru,c
  8105   0035B0  0E0F               	movlw	(high __ramtop+-1)
  8106   0035B2  64F7               	cpfsgt	tblptrh,c
  8107   0035B4  D003               	bra	u8637
  8108   0035B6  0008               	tblrd		*
  8109   0035B8  50F5               	movf	tablat,w,c
  8110   0035BA  D005               	bra	u8630
  8111   0035BC                     u8637:
  8112   0035BC  CFF6 FFE1          	movff	tblptrl,fsr1l
  8113   0035C0  CFF7 FFE2          	movff	tblptrh,fsr1h
  8114   0035C4  50E7               	movf	indf1,w,c
  8115   0035C6                     u8630:
  8116   0035C6  0900               	iorlw	0
  8117   0035C8  A4D8               	btfss	status,2,c
  8118   0035CA  EFE9  F01A         	goto	u8641
  8119   0035CE  EFEB  F01A         	goto	u8640
  8120   0035D2                     u8641:
  8121   0035D2  EFCA  F01A         	goto	l6972
  8122   0035D6                     u8640:
  8123   0035D6                     
  8124                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 961:  if (!(prec < 0) && (prec < l)
      +                          ) {
  8125   0035D6  BE58               	btfsc	(_prec+1)^0,7,c
  8126   0035D8  EFF0  F01A         	goto	u8651
  8127   0035DC  EFF2  F01A         	goto	u8650
  8128   0035E0                     u8651:
  8129   0035E0  EF05  F01B         	goto	l1415
  8130   0035E4                     u8650:
  8131   0035E4  501C               	movf	stoa@l^0,w,c
  8132   0035E6  5C57               	subwf	_prec^0,w,c
  8133   0035E8  5058               	movf	(_prec+1)^0,w,c
  8134   0035EA  0A80               	xorlw	128
  8135   0035EC  6E14               	movwf	??_stoa^0,c
  8136   0035EE  501D               	movf	(stoa@l+1)^0,w,c
  8137   0035F0  0A80               	xorlw	128
  8138   0035F2  5814               	subwfb	??_stoa^0,w,c
  8139   0035F4  B0D8               	btfsc	status,0,c
  8140   0035F6  EFFF  F01A         	goto	u8661
  8141   0035FA  EF01  F01B         	goto	u8660
  8142   0035FE                     u8661:
  8143   0035FE  EF05  F01B         	goto	l1415
  8144   003602                     u8660:
  8145   003602                     
  8146                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 962:   l = prec;
  8147   003602  C057  F01C         	movff	_prec,stoa@l
  8148   003606  C058  F01D         	movff	_prec+1,stoa@l+1
  8149   00360A                     l1415:
  8150                           
  8151                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 965:     p = l;
  8152   00360A  C01C  F016         	movff	stoa@l,stoa@p
  8153   00360E  C01D  F017         	movff	stoa@l+1,stoa@p+1
  8154                           
  8155                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 969:     w = width;
  8156   003612  C055  F018         	movff	_width,stoa@w
  8157   003616  C056  F019         	movff	_width+1,stoa@w+1
  8158                           
  8159                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 970:     if (!(flags & (1 << 0))) {
  8160   00361A  B059               	btfsc	_flags^0,0,c
  8161   00361C  EF12  F01B         	goto	u8671
  8162   003620  EF14  F01B         	goto	u8670
  8163   003624                     u8671:
  8164   003624  EF50  F01B         	goto	l6994
  8165   003628                     u8670:
  8166   003628  EF22  F01B         	goto	l6988
  8167   00362C                     l6984:
  8168                           
  8169                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 972:             fputc(' ', fp);
  8170   00362C  0E00               	movlw	0
  8171   00362E  6E08               	movwf	(fputc@c+1)^0,c
  8172   003630  0E20               	movlw	32
  8173   003632  6E07               	movwf	fputc@c^0,c
  8174   003634  C010  F009         	movff	stoa@fp,fputc@fp
  8175   003638  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  8176   00363C  ECC9  F021         	call	_fputc	;wreg free
  8177   003640                     
  8178                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 973:             ++l;
  8179   003640  4A1C               	infsnz	stoa@l^0,f,c
  8180   003642  2A1D               	incf	(stoa@l+1)^0,f,c
  8181   003644                     l6988:
  8182                           
  8183                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 971:         while (l < w) {
  8184   003644  5018               	movf	stoa@w^0,w,c
  8185   003646  5C1C               	subwf	stoa@l^0,w,c
  8186   003648  501D               	movf	(stoa@l+1)^0,w,c
  8187   00364A  0A80               	xorlw	128
  8188   00364C  6E14               	movwf	??_stoa^0,c
  8189   00364E  5019               	movf	(stoa@w+1)^0,w,c
  8190   003650  0A80               	xorlw	128
  8191   003652  5814               	subwfb	??_stoa^0,w,c
  8192   003654  A0D8               	btfss	status,0,c
  8193   003656  EF2F  F01B         	goto	u8681
  8194   00365A  EF31  F01B         	goto	u8680
  8195   00365E                     u8681:
  8196   00365E  EF16  F01B         	goto	l6984
  8197   003662                     u8680:
  8198   003662  EF50  F01B         	goto	l6994
  8199   003666                     l6990:
  8200                           
  8201                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 980:         fputc(*cp, fp);
  8202   003666  C01A  FFF6         	movff	stoa@cp,tblptrl
  8203   00366A  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  8204   00366E  0E00               	movlw	low (__mediumconst shr (0+16))
  8205   003670  6EF8               	movwf	tblptru,c
  8206   003672  0E0F               	movlw	(high __ramtop+-1)
  8207   003674  64F7               	cpfsgt	tblptrh,c
  8208   003676  D003               	bra	u8697
  8209   003678  0008               	tblrd		*
  8210   00367A  50F5               	movf	tablat,w,c
  8211   00367C  D005               	bra	u8690
  8212   00367E                     u8697:
  8213   00367E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8214   003682  CFF7 FFE2          	movff	tblptrh,fsr1h
  8215   003686  50E7               	movf	indf1,w,c
  8216   003688                     u8690:
  8217   003688  6E14               	movwf	??_stoa^0,c
  8218   00368A  5014               	movf	??_stoa^0,w,c
  8219   00368C  6E07               	movwf	fputc@c^0,c
  8220   00368E  6A08               	clrf	(fputc@c+1)^0,c
  8221   003690  C010  F009         	movff	stoa@fp,fputc@fp
  8222   003694  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  8223   003698  ECC9  F021         	call	_fputc	;wreg free
  8224   00369C                     
  8225                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 981:         ++cp;
  8226   00369C  4A1A               	infsnz	stoa@cp^0,f,c
  8227   00369E  2A1B               	incf	(stoa@cp+1)^0,f,c
  8228   0036A0                     l6994:
  8229                           
  8230                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 979:     while (p--) {
  8231   0036A0  0616               	decf	stoa@p^0,f,c
  8232   0036A2  A0D8               	btfss	status,0,c
  8233   0036A4  0617               	decf	(stoa@p+1)^0,f,c
  8234   0036A6  2816               	incf	stoa@p^0,w,c
  8235   0036A8  E106               	bnz	u8701
  8236   0036AA  2817               	incf	(stoa@p+1)^0,w,c
  8237   0036AC  A4D8               	btfss	status,2,c
  8238   0036AE  EF5B  F01B         	goto	u8701
  8239   0036B2  EF5D  F01B         	goto	u8700
  8240   0036B6                     u8701:
  8241   0036B6  EF33  F01B         	goto	l6990
  8242   0036BA                     u8700:
  8243   0036BA                     
  8244                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 986:     if (flags & (1 << 0)) {
  8245   0036BA  A059               	btfss	_flags^0,0,c
  8246   0036BC  EF62  F01B         	goto	u8711
  8247   0036C0  EF64  F01B         	goto	u8710
  8248   0036C4                     u8711:
  8249   0036C4  EF81  F01B         	goto	l1427
  8250   0036C8                     u8710:
  8251   0036C8  EF72  F01B         	goto	l7002
  8252   0036CC                     l6998:
  8253                           
  8254                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 988:             fputc(' ', fp);
  8255   0036CC  0E00               	movlw	0
  8256   0036CE  6E08               	movwf	(fputc@c+1)^0,c
  8257   0036D0  0E20               	movlw	32
  8258   0036D2  6E07               	movwf	fputc@c^0,c
  8259   0036D4  C010  F009         	movff	stoa@fp,fputc@fp
  8260   0036D8  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  8261   0036DC  ECC9  F021         	call	_fputc	;wreg free
  8262   0036E0                     
  8263                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 989:             ++l;
  8264   0036E0  4A1C               	infsnz	stoa@l^0,f,c
  8265   0036E2  2A1D               	incf	(stoa@l+1)^0,f,c
  8266   0036E4                     l7002:
  8267                           
  8268                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 987:         while (l < w) {
  8269   0036E4  5018               	movf	stoa@w^0,w,c
  8270   0036E6  5C1C               	subwf	stoa@l^0,w,c
  8271   0036E8  501D               	movf	(stoa@l+1)^0,w,c
  8272   0036EA  0A80               	xorlw	128
  8273   0036EC  6E14               	movwf	??_stoa^0,c
  8274   0036EE  5019               	movf	(stoa@w+1)^0,w,c
  8275   0036F0  0A80               	xorlw	128
  8276   0036F2  5814               	subwfb	??_stoa^0,w,c
  8277   0036F4  A0D8               	btfss	status,0,c
  8278   0036F6  EF7F  F01B         	goto	u8721
  8279   0036FA  EF81  F01B         	goto	u8720
  8280   0036FE                     u8721:
  8281   0036FE  EF66  F01B         	goto	l6998
  8282   003702                     u8720:
  8283   003702                     l1427:
  8284   003702  0012               	return		;funcret
  8285   003704                     __end_of_stoa:
  8286                           	callstack 0
  8287                           
  8288 ;; *************** function _read_prec_or_width *****************
  8289 ;; Defined at:
  8290 ;;		line 1158 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;  fmt             1   11[COMRAM] PTR PTR const unsigned c
  8293 ;;		 -> vfprintf@cfmt(2), 
  8294 ;;  ap              1   12[COMRAM] PTR PTR void [1]
  8295 ;;		 -> printf@ap(1), sprintf@ap(1), 
  8296 ;; Auto vars:     Size  Location     Type
  8297 ;;  c               1   13[COMRAM] unsigned char 
  8298 ;;  n               2   14[COMRAM] int 
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  2   11[COMRAM] int 
  8301 ;; Registers used:
  8302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/0
  8305 ;;		On exit  : 0/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8309 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8311 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8312 ;;Total ram usage:        5 bytes
  8313 ;; Hardware stack levels used: 1
  8314 ;; Hardware stack levels required when called: 2
  8315 ;; This function calls:
  8316 ;;		___wmul
  8317 ;; This function is called by:
  8318 ;;		_vfpfcnvrt
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322                           	psect	text31
  8323   004682                     __ptext31:
  8324                           	callstack 0
  8325   004682                     _read_prec_or_width:
  8326                           	callstack 24
  8327   004682                     
  8328                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1159:     int n = 0;
  8329   004682  0E00               	movlw	0
  8330   004684  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  8331   004686  0E00               	movlw	0
  8332   004688  6E0F               	movwf	read_prec_or_width@n^0,c
  8333   00468A                     
  8334                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1160:     if ((*fmt)[0] == '*') {
  8335   00468A  500C               	movf	read_prec_or_width@fmt^0,w,c
  8336   00468C  6ED9               	movwf	fsr2l,c
  8337   00468E  6ADA               	clrf	fsr2h,c
  8338   004690  CFDE FFF6          	movff	postinc2,tblptrl
  8339   004694  CFDD FFF7          	movff	postdec2,tblptrh
  8340   004698                     	if	0	;tblptru may be non-zero
  8341   004698                     	endif
  8342   004698                     	if	0	;tblptru may be non-zero
  8343   004698                     	endif
  8344   004698  0008               	tblrd		*
  8345   00469A  50F5               	movf	tablat,w,c
  8346   00469C  0A2A               	xorlw	42
  8347   00469E  A4D8               	btfss	status,2,c
  8348   0046A0  EF54  F023         	goto	u8771
  8349   0046A4  EF56  F023         	goto	u8770
  8350   0046A8                     u8771:
  8351   0046A8  EF80  F023         	goto	l7044
  8352   0046AC                     u8770:
  8353   0046AC                     
  8354                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1161:         ++*fmt;
  8355   0046AC  500C               	movf	read_prec_or_width@fmt^0,w,c
  8356   0046AE  6ED9               	movwf	fsr2l,c
  8357   0046B0  6ADA               	clrf	fsr2h,c
  8358   0046B2  2ADE               	incf	postinc2,f,c
  8359   0046B4  0E00               	movlw	0
  8360   0046B6  22DD               	addwfc	postdec2,f,c
  8361   0046B8                     
  8362                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1162:         n = (*(int *)__va_arg
      +                          (*(int **)*ap, (int)0));
  8363   0046B8  500D               	movf	read_prec_or_width@ap^0,w,c
  8364   0046BA  6ED9               	movwf	fsr2l,c
  8365   0046BC  6ADA               	clrf	fsr2h,c
  8366   0046BE  0E02               	movlw	2
  8367   0046C0  26DF               	addwf	indf2,f,c
  8368   0046C2  5CDF               	subwf	indf2,w,c
  8369   0046C4  6ED9               	movwf	fsr2l,c
  8370   0046C6  6ADA               	clrf	fsr2h,c
  8371   0046C8  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  8372   0046CC  CFDE F010          	movff	postinc2,read_prec_or_width@n+1
  8373                           
  8374                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1163:     } else {
  8375   0046D0  EF93  F023         	goto	l1443
  8376   0046D4                     l7040:
  8377                           
  8378                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1166:             n = n * 10 + c;
  8379   0046D4  C00F  F006         	movff	read_prec_or_width@n,___wmul@multiplier
  8380   0046D8  C010  F007         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  8381   0046DC  0E00               	movlw	0
  8382   0046DE  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  8383   0046E0  0E0A               	movlw	10
  8384   0046E2  6E08               	movwf	___wmul@multiplicand^0,c
  8385   0046E4  EC89  F026         	call	___wmul	;wreg free
  8386   0046E8  500E               	movf	read_prec_or_width@c^0,w,c
  8387   0046EA  2406               	addwf	?___wmul^0,w,c
  8388   0046EC  6E0F               	movwf	read_prec_or_width@n^0,c
  8389   0046EE  0E00               	movlw	0
  8390   0046F0  2007               	addwfc	(?___wmul+1)^0,w,c
  8391   0046F2  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  8392   0046F4                     
  8393                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1167:             ++*fmt;
  8394   0046F4  500C               	movf	read_prec_or_width@fmt^0,w,c
  8395   0046F6  6ED9               	movwf	fsr2l,c
  8396   0046F8  6ADA               	clrf	fsr2h,c
  8397   0046FA  2ADE               	incf	postinc2,f,c
  8398   0046FC  0E00               	movlw	0
  8399   0046FE  22DD               	addwfc	postdec2,f,c
  8400   004700                     l7044:
  8401                           
  8402                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1165:         while ((c = ((unsigne
      +                          d)(*fmt)[0]) - '0') < 10) {
  8403   004700  500C               	movf	read_prec_or_width@fmt^0,w,c
  8404   004702  6ED9               	movwf	fsr2l,c
  8405   004704  6ADA               	clrf	fsr2h,c
  8406   004706  CFDE FFF6          	movff	postinc2,tblptrl
  8407   00470A  CFDD FFF7          	movff	postdec2,tblptrh
  8408   00470E                     	if	0	;tblptru may be non-zero
  8409   00470E                     	endif
  8410   00470E                     	if	0	;tblptru may be non-zero
  8411   00470E                     	endif
  8412   00470E  0008               	tblrd		*
  8413   004710  50F5               	movf	tablat,w,c
  8414   004712  0FD0               	addlw	208
  8415   004714  6E0E               	movwf	read_prec_or_width@c^0,c
  8416   004716  0E09               	movlw	9
  8417   004718  640E               	cpfsgt	read_prec_or_width@c^0,c
  8418   00471A  EF91  F023         	goto	u8781
  8419   00471E  EF93  F023         	goto	u8780
  8420   004722                     u8781:
  8421   004722  EF6A  F023         	goto	l7040
  8422   004726                     u8780:
  8423   004726                     l1443:
  8424                           
  8425                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1170:     return n;
  8426   004726  C00F  F00C         	movff	read_prec_or_width@n,?_read_prec_or_width
  8427   00472A  C010  F00D         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  8428   00472E  0012               	return		;funcret
  8429   004730                     __end_of_read_prec_or_width:
  8430                           	callstack 0
  8431                           
  8432 ;; *************** function ___wmul *****************
  8433 ;; Defined at:
  8434 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul16.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;  multiplier      2    5[COMRAM] unsigned int 
  8437 ;;  multiplicand    2    7[COMRAM] unsigned int 
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;  product         2    9[COMRAM] unsigned int 
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  2    5[COMRAM] unsigned int 
  8442 ;; Registers used:
  8443 ;;		wreg, status,2, status,0, prodl, prodh
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8452 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8453 ;;Total ram usage:        6 bytes
  8454 ;; Hardware stack levels used: 1
  8455 ;; Hardware stack levels required when called: 1
  8456 ;; This function calls:
  8457 ;;		Nothing
  8458 ;; This function is called by:
  8459 ;;		_read_prec_or_width
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           	psect	text32
  8464   004D12                     __ptext32:
  8465                           	callstack 0
  8466   004D12                     ___wmul:
  8467                           	callstack 24
  8468   004D12  5006               	movf	___wmul@multiplier^0,w,c
  8469   004D14  0208               	mulwf	___wmul@multiplicand^0,c
  8470   004D16  CFF3 F00A          	movff	prodl,___wmul@product
  8471   004D1A  CFF4 F00B          	movff	prodh,___wmul@product+1
  8472   004D1E  5006               	movf	___wmul@multiplier^0,w,c
  8473   004D20  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  8474   004D22  50F3               	movf	243,w,c
  8475   004D24  260B               	addwf	(___wmul@product+1)^0,f,c
  8476   004D26  5007               	movf	(___wmul@multiplier+1)^0,w,c
  8477   004D28  0208               	mulwf	___wmul@multiplicand^0,c
  8478   004D2A  50F3               	movf	243,w,c
  8479   004D2C  260B               	addwf	(___wmul@product+1)^0,f,c
  8480   004D2E  C00A  F006         	movff	___wmul@product,?___wmul
  8481   004D32  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  8482   004D36  0012               	return		;funcret
  8483   004D38                     __end_of___wmul:
  8484                           	callstack 0
  8485                           
  8486 ;; *************** function _efgtoa *****************
  8487 ;; Defined at:
  8488 ;;		line 587 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  8489 ;; Parameters:    Size  Location     Type
  8490 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  8491 ;;		 -> NULL(0), sprintf@f(12), 
  8492 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  8493 ;;  c               1   42[BANK0 ] unsigned char 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;  u               4   85[BANK0 ] struct flui
  8496 ;;  g               4   79[BANK0 ] struct flui
  8497 ;;  l               4   74[BANK0 ] struct flui
  8498 ;;  h               4   70[BANK0 ] struct flui
  8499 ;;  ou              4   64[BANK0 ] struct flui
  8500 ;;  n               2   83[BANK0 ] int 
  8501 ;;  i               2   68[BANK0 ] int 
  8502 ;;  w               2   62[BANK0 ] int 
  8503 ;;  e               2   60[BANK0 ] int 
  8504 ;;  m               2   58[BANK0 ] int 
  8505 ;;  d               2   56[BANK0 ] int 
  8506 ;;  t               2   49[BANK0 ] int 
  8507 ;;  p               2   47[BANK0 ] int 
  8508 ;;  ne              2   45[BANK0 ] int 
  8509 ;;  sign            1   78[BANK0 ] unsigned char 
  8510 ;;  nmode           1   55[BANK0 ] unsigned char 
  8511 ;;  mode            1   54[BANK0 ] unsigned char 
  8512 ;;  pp              1   53[BANK0 ] unsigned char 
  8513 ;;  esign           1    0        unsigned char 
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  1    wreg      void 
  8516 ;; Registers used:
  8517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8523 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8524 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8525 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8526 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8527 ;;Total ram usage:       53 bytes
  8528 ;; Hardware stack levels used: 1
  8529 ;; Hardware stack levels required when called: 5
  8530 ;; This function calls:
  8531 ;;		___fladd
  8532 ;;		___fldiv
  8533 ;;		___fleq
  8534 ;;		___flge
  8535 ;;		___flmul
  8536 ;;		___flneg
  8537 ;;		___flsub
  8538 ;;		___fltol
  8539 ;;		___fpclassifyf
  8540 ;;		_floorf
  8541 ;;		_labs
  8542 ;;		_memcpy
  8543 ;;		_pad
  8544 ;;		_strcpy
  8545 ;; This function is called by:
  8546 ;;		_vfpfcnvrt
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text33
  8551   000118                     __ptext33:
  8552                           	callstack 0
  8553   000118                     _efgtoa:
  8554                           	callstack 21
  8555   000118                     
  8556                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 587: static void efgtoa(FILE *fp, l
      +                          ong double f, char c);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 588: {;D:\MPLA
      +                          BX\Compiler\pic\sources\c99\common\doprnt.c: 589:     char mode, nmode, pp, sign, esign;
      +                          ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, 
      +                          t, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 591:     long double h, l;;D:\
      +                          MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 592:  union flui g, u, ou;
  8557   000118  0E00               	movlw	0
  8558   00011A  0100               	movlb	0	; () banked
  8559   00011C  6FAE               	movwf	efgtoa@sign& (0+255),b
  8560   00011E                     
  8561                           ; BSR set to: 0
  8562                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  8563   00011E  C086  F0AF         	movff	efgtoa@f,efgtoa@g
  8564   000122  C087  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  8565   000126  C088  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  8566   00012A  C089  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  8567   00012E                     
  8568                           ; BSR set to: 0
  8569                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 597:     if (g.f < 0.0) {
  8570   00012E  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8571   000130  EF9E  F000         	goto	u8300
  8572   000134  EF9C  F000         	goto	u8301
  8573   000138                     u8301:
  8574   000138  EFB2  F000         	goto	l6754
  8575   00013C                     u8300:
  8576   00013C                     
  8577                           ; BSR set to: 0
  8578                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 598:         sign = 1;
  8579   00013C  0E01               	movlw	1
  8580   00013E  6FAE               	movwf	efgtoa@sign& (0+255),b
  8581   000140                     
  8582                           ; BSR set to: 0
  8583                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 599:         g.f = -g.f;
  8584   000140  C0AF  F080         	movff	efgtoa@g,___flneg@f1
  8585   000144  C0B0  F081         	movff	efgtoa@g+1,___flneg@f1+1
  8586   000148  C0B1  F082         	movff	efgtoa@g+2,___flneg@f1+2
  8587   00014C  C0B2  F083         	movff	efgtoa@g+3,___flneg@f1+3
  8588   000150  ECD2  F025         	call	___flneg	;wreg free
  8589   000154  C080  F0AF         	movff	?___flneg,efgtoa@g
  8590   000158  C081  F0B0         	movff	?___flneg+1,efgtoa@g+1
  8591   00015C  C082  F0B1         	movff	?___flneg+2,efgtoa@g+2
  8592   000160  C083  F0B2         	movff	?___flneg+3,efgtoa@g+3
  8593   000164                     l6754:
  8594                           
  8595                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  8596   000164  0E00               	movlw	0
  8597   000166  0100               	movlb	0	; () banked
  8598   000168  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  8599   00016A  0E00               	movlw	0
  8600   00016C  6FB3               	movwf	efgtoa@n& (0+255),b
  8601   00016E                     
  8602                           ; BSR set to: 0
  8603                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 604:     w = width;
  8604   00016E  C055  F09E         	movff	_width,efgtoa@w
  8605   000172  C056  F09F         	movff	_width+1,efgtoa@w+1
  8606   000176                     
  8607                           ; BSR set to: 0
  8608                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 605:     if (sign
  8609   000176  51AE               	movf	efgtoa@sign& (0+255),w,b
  8610   000178  B4D8               	btfsc	status,2,c
  8611   00017A  EFC1  F000         	goto	u8311
  8612   00017E  EFC3  F000         	goto	u8310
  8613   000182                     u8311:
  8614   000182  EFD7  F000         	goto	l6768
  8615   000186                     u8310:
  8616   000186                     
  8617                           ; BSR set to: 0
  8618                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 609:    ) {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 610:   sign = sign ? '-' : '+';
  8619   000186  51AE               	movf	efgtoa@sign& (0+255),w,b
  8620   000188  A4D8               	btfss	status,2,c
  8621   00018A  EFC9  F000         	goto	u8321
  8622   00018E  EFCB  F000         	goto	u8320
  8623   000192                     u8321:
  8624   000192  EFD1  F000         	goto	l6764
  8625   000196                     u8320:
  8626   000196                     
  8627                           ; BSR set to: 0
  8628   000196  0E00               	movlw	0
  8629   000198  6F94               	movwf	(_efgtoa$3996+1)& (0+255),b
  8630   00019A  0E2B               	movlw	43
  8631   00019C  6F93               	movwf	_efgtoa$3996& (0+255),b
  8632   00019E  EFD5  F000         	goto	l6766
  8633   0001A2                     l6764:
  8634                           
  8635                           ; BSR set to: 0
  8636   0001A2  0E00               	movlw	0
  8637   0001A4  6F94               	movwf	(_efgtoa$3996+1)& (0+255),b
  8638   0001A6  0E2D               	movlw	45
  8639   0001A8  6F93               	movwf	_efgtoa$3996& (0+255),b
  8640   0001AA                     l6766:
  8641                           
  8642                           ; BSR set to: 0
  8643   0001AA  C093  F0AE         	movff	_efgtoa$3996,efgtoa@sign
  8644   0001AE                     l6768:
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 619:     if (( __fpclassifyf(g.f) =
      +                          = 1 )) {
  8648   0001AE  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  8649   0001B2  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8650   0001B6  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8651   0001BA  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8652   0001BE  EC65  F020         	call	___fpclassifyf	;wreg free
  8653   0001C2  0406               	decf	?___fpclassifyf^0,w,c
  8654   0001C4  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  8655   0001C6  A4D8               	btfss	status,2,c
  8656   0001C8  EFE8  F000         	goto	u8331
  8657   0001CC  EFEA  F000         	goto	u8330
  8658   0001D0                     u8331:
  8659   0001D0  EF1D  F001         	goto	l6786
  8660   0001D4                     u8330:
  8661   0001D4                     
  8662                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 620:   if (sign) {
  8663   0001D4  0100               	movlb	0	; () banked
  8664   0001D6  51AE               	movf	efgtoa@sign& (0+255),w,b
  8665   0001D8  B4D8               	btfsc	status,2,c
  8666   0001DA  EFF1  F000         	goto	u8341
  8667   0001DE  EFF3  F000         	goto	u8340
  8668   0001E2                     u8341:
  8669   0001E2  EFFC  F000         	goto	l6778
  8670   0001E6                     u8340:
  8671   0001E6                     
  8672                           ; BSR set to: 0
  8673                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] = sign;
  8674   0001E6  C0AE  F125         	movff	efgtoa@sign,_dbuf
  8675   0001EA                     
  8676                           ; BSR set to: 0
  8677                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 622:    w--;
  8678   0001EA  079E               	decf	efgtoa@w& (0+255),f,b
  8679   0001EC  A0D8               	btfss	status,0,c
  8680   0001EE  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8681   0001F0                     
  8682                           ; BSR set to: 0
  8683                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  8684   0001F0  0E00               	movlw	0
  8685   0001F2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  8686   0001F4  0E01               	movlw	1
  8687   0001F6  6FB3               	movwf	efgtoa@n& (0+255),b
  8688   0001F8                     l6778:
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 631:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 632:             strcpy(&dbuf[n], "inf");
  8692   0001F8  0E25               	movlw	low _dbuf
  8693   0001FA  25B3               	addwf	efgtoa@n& (0+255),w,b
  8694   0001FC  6E06               	movwf	strcpy@dest^0,c
  8695   0001FE  0E01               	movlw	high _dbuf
  8696   000200  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8697   000202  6E07               	movwf	(strcpy@dest+1)^0,c
  8698   000204  0EEB               	movlw	low STR_28
  8699   000206  6E08               	movwf	strcpy@src^0,c
  8700   000208  0EFF               	movlw	high STR_28
  8701   00020A  6E09               	movwf	(strcpy@src+1)^0,c
  8702   00020C  ECEF  F025         	call	_strcpy	;wreg free
  8703   000210                     l6780:
  8704                           
  8705                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 633:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8706   000210  0100               	movlb	0	; () banked
  8707   000212  0EFD               	movlw	253
  8708   000214  279E               	addwf	efgtoa@w& (0+255),f,b
  8709   000216  0EFF               	movlw	255
  8710   000218  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8711   00021A                     
  8712                           ; BSR set to: 0
  8713                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 635:         return (void) pad(fp, 
      +                          &dbuf[0], w);
  8714   00021A  C084  F017         	movff	efgtoa@fp,pad@fp
  8715   00021E  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  8716   000222  0E25               	movlw	low _dbuf
  8717   000224  6E19               	movwf	pad@buf^0,c
  8718   000226  0E01               	movlw	high _dbuf
  8719   000228  6E1A               	movwf	(pad@buf+1)^0,c
  8720   00022A  C09E  F01B         	movff	efgtoa@w,pad@p
  8721   00022E  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  8722   000232  ECED  F023         	call	_pad	;wreg free
  8723   000236  EF88  F005         	goto	l1366
  8724   00023A                     l6786:
  8725                           
  8726                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 637:     if (( __fpclassifyf(g.f) =
      +                          = 0 )) {
  8727   00023A  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  8728   00023E  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8729   000242  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8730   000246  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8731   00024A  EC65  F020         	call	___fpclassifyf	;wreg free
  8732   00024E  5006               	movf	?___fpclassifyf^0,w,c
  8733   000250  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  8734   000252  A4D8               	btfss	status,2,c
  8735   000254  EF2E  F001         	goto	u8351
  8736   000258  EF30  F001         	goto	u8350
  8737   00025C                     u8351:
  8738   00025C  EF50  F001         	goto	l6804
  8739   000260                     u8350:
  8740   000260                     
  8741                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 638:   if (sign) {
  8742   000260  0100               	movlb	0	; () banked
  8743   000262  51AE               	movf	efgtoa@sign& (0+255),w,b
  8744   000264  B4D8               	btfsc	status,2,c
  8745   000266  EF37  F001         	goto	u8361
  8746   00026A  EF39  F001         	goto	u8360
  8747   00026E                     u8361:
  8748   00026E  EF42  F001         	goto	l6796
  8749   000272                     u8360:
  8750   000272                     
  8751                           ; BSR set to: 0
  8752                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] = sign;
  8753   000272  C0AE  F125         	movff	efgtoa@sign,_dbuf
  8754   000276                     
  8755                           ; BSR set to: 0
  8756                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 640:    w--;
  8757   000276  079E               	decf	efgtoa@w& (0+255),f,b
  8758   000278  A0D8               	btfss	status,0,c
  8759   00027A  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8760   00027C                     
  8761                           ; BSR set to: 0
  8762                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  8763   00027C  0E00               	movlw	0
  8764   00027E  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  8765   000280  0E01               	movlw	1
  8766   000282  6FB3               	movwf	efgtoa@n& (0+255),b
  8767   000284                     l6796:
  8768                           
  8769                           ; BSR set to: 0
  8770                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 649:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 650:             strcpy(&dbuf[n], "nan");
  8771   000284  0E25               	movlw	low _dbuf
  8772   000286  25B3               	addwf	efgtoa@n& (0+255),w,b
  8773   000288  6E06               	movwf	strcpy@dest^0,c
  8774   00028A  0E01               	movlw	high _dbuf
  8775   00028C  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8776   00028E  6E07               	movwf	(strcpy@dest+1)^0,c
  8777   000290  0EEF               	movlw	low STR_31
  8778   000292  6E08               	movwf	strcpy@src^0,c
  8779   000294  0EFF               	movlw	high STR_31
  8780   000296  6E09               	movwf	(strcpy@src+1)^0,c
  8781   000298  ECEF  F025         	call	_strcpy	;wreg free
  8782   00029C  EF08  F001         	goto	l6780
  8783   0002A0                     l6804:
  8784                           
  8785                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.0;
  8786   0002A0  0E00               	movlw	0
  8787   0002A2  0100               	movlb	0	; () banked
  8788   0002A4  6FB5               	movwf	efgtoa@u& (0+255),b
  8789   0002A6  0E00               	movlw	0
  8790   0002A8  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  8791   0002AA  0E80               	movlw	128
  8792   0002AC  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  8793   0002AE  0E3F               	movlw	63
  8794   0002B0  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  8795                           
  8796                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  8797   0002B2  0E00               	movlw	0
  8798   0002B4  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  8799   0002B6  0E00               	movlw	0
  8800   0002B8  6F9C               	movwf	efgtoa@e& (0+255),b
  8801   0002BA                     
  8802                           ; BSR set to: 0
  8803                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f == 0.0)) {
  8804   0002BA  C0AF  F006         	movff	efgtoa@g,___fleq@ff1
  8805   0002BE  C0B0  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  8806   0002C2  C0B1  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  8807   0002C6  C0B2  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  8808   0002CA  0E00               	movlw	0
  8809   0002CC  6E0A               	movwf	___fleq@ff2^0,c
  8810   0002CE  0E00               	movlw	0
  8811   0002D0  6E0B               	movwf	(___fleq@ff2+1)^0,c
  8812   0002D2  0E00               	movlw	0
  8813   0002D4  6E0C               	movwf	(___fleq@ff2+2)^0,c
  8814   0002D6  0E00               	movlw	0
  8815   0002D8  6E0D               	movwf	(___fleq@ff2+3)^0,c
  8816   0002DA  EC98  F023         	call	___fleq	;wreg free
  8817   0002DE  B0D8               	btfsc	status,0,c
  8818   0002E0  EF74  F001         	goto	u8371
  8819   0002E4  EF76  F001         	goto	u8370
  8820   0002E8                     u8371:
  8821   0002E8  EF55  F002         	goto	l1369
  8822   0002EC                     u8370:
  8823   0002EC  EF83  F001         	goto	l6812
  8824   0002F0                     l1371:
  8825                           
  8826                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  8827   0002F0  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  8828   0002F4  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  8829   0002F8  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  8830   0002FC  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  8831   000300                     
  8832                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 662:    ++e;
  8833   000300  0100               	movlb	0	; () banked
  8834   000302  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  8835   000304  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  8836   000306                     l6812:
  8837                           
  8838                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 660:   while ((labs((g).u-((ou.f = 
      +                          u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  8839   000306  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8840   00030A  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8841   00030E  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8842   000312  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8843   000316  0E00               	movlw	0
  8844   000318  6E18               	movwf	___flmul@a^0,c
  8845   00031A  0E00               	movlw	0
  8846   00031C  6E19               	movwf	(___flmul@a+1)^0,c
  8847   00031E  0E20               	movlw	32
  8848   000320  6E1A               	movwf	(___flmul@a+2)^0,c
  8849   000322  0E41               	movlw	65
  8850   000324  6E1B               	movwf	(___flmul@a+3)^0,c
  8851   000326  EC1D  F00D         	call	___flmul	;wreg free
  8852   00032A  C014  F0A0         	movff	?___flmul,efgtoa@ou
  8853   00032E  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
  8854   000332  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
  8855   000336  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
  8856   00033A  0100               	movlb	0	; () banked
  8857   00033C  51A0               	movf	efgtoa@ou& (0+255),w,b
  8858   00033E  5DAF               	subwf	efgtoa@g& (0+255),w,b
  8859   000340  6E06               	movwf	labs@a^0,c
  8860   000342  51A1               	movf	(efgtoa@ou+1)& (0+255),w,b
  8861   000344  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8862   000346  6E07               	movwf	(labs@a+1)^0,c
  8863   000348  51A2               	movf	(efgtoa@ou+2)& (0+255),w,b
  8864   00034A  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8865   00034C  6E08               	movwf	(labs@a+2)^0,c
  8866   00034E  51A3               	movf	(efgtoa@ou+3)& (0+255),w,b
  8867   000350  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8868   000352  6E09               	movwf	(labs@a+3)^0,c
  8869   000354  ECA8  F024         	call	_labs	;wreg free
  8870   000358  BE09               	btfsc	(?_labs+3)^0,7,c
  8871   00035A  EFBA  F001         	goto	u8381
  8872   00035E  5009               	movf	(?_labs+3)^0,w,c
  8873   000360  1008               	iorwf	(?_labs+2)^0,w,c
  8874   000362  1007               	iorwf	(?_labs+1)^0,w,c
  8875   000364  E109               	bnz	u8380
  8876   000366  0E02               	movlw	2
  8877   000368  5C06               	subwf	?_labs^0,w,c
  8878   00036A  A0D8               	btfss	status,0,c
  8879   00036C  EFBA  F001         	goto	u8381
  8880   000370  EFBC  F001         	goto	u8380
  8881   000374                     u8381:
  8882   000374  EF78  F001         	goto	l1371
  8883   000378                     u8380:
  8884   000378  C0A0  F02D         	movff	efgtoa@ou,___flge@ff1
  8885   00037C  C0A1  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
  8886   000380  C0A2  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
  8887   000384  C0A3  F030         	movff	efgtoa@ou+3,___flge@ff1+3
  8888   000388  C0AF  F031         	movff	efgtoa@g,___flge@ff2
  8889   00038C  C0B0  F032         	movff	efgtoa@g+1,___flge@ff2+1
  8890   000390  C0B1  F033         	movff	efgtoa@g+2,___flge@ff2+2
  8891   000394  C0B2  F034         	movff	efgtoa@g+3,___flge@ff2+3
  8892   000398  ECE3  F01F         	call	___flge	;wreg free
  8893   00039C  A0D8               	btfss	status,0,c
  8894   00039E  EFD3  F001         	goto	u8391
  8895   0003A2  EFD5  F001         	goto	u8390
  8896   0003A6                     u8391:
  8897   0003A6  EF78  F001         	goto	l1371
  8898   0003AA                     u8390:
  8899   0003AA                     
  8900                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 664:   if ((labs((g).u-(u).u) <= 1)
      +                          ) {
  8901   0003AA  0100               	movlb	0	; () banked
  8902   0003AC  51B5               	movf	efgtoa@u& (0+255),w,b
  8903   0003AE  5DAF               	subwf	efgtoa@g& (0+255),w,b
  8904   0003B0  6E06               	movwf	labs@a^0,c
  8905   0003B2  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  8906   0003B4  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8907   0003B6  6E07               	movwf	(labs@a+1)^0,c
  8908   0003B8  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  8909   0003BA  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8910   0003BC  6E08               	movwf	(labs@a+2)^0,c
  8911   0003BE  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  8912   0003C0  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8913   0003C2  6E09               	movwf	(labs@a+3)^0,c
  8914   0003C4  ECA8  F024         	call	_labs	;wreg free
  8915   0003C8  BE09               	btfsc	(?_labs+3)^0,7,c
  8916   0003CA  EFF4  F001         	goto	u8400
  8917   0003CE  5009               	movf	(?_labs+3)^0,w,c
  8918   0003D0  1008               	iorwf	(?_labs+2)^0,w,c
  8919   0003D2  1007               	iorwf	(?_labs+1)^0,w,c
  8920   0003D4  E107               	bnz	u8401
  8921   0003D6  0E02               	movlw	2
  8922   0003D8  5C06               	subwf	?_labs^0,w,c
  8923   0003DA  B0D8               	btfsc	status,0,c
  8924   0003DC  EFF2  F001         	goto	u8401
  8925   0003E0  EFF4  F001         	goto	u8400
  8926   0003E4                     u8401:
  8927   0003E4  EF3C  F002         	goto	l6830
  8928   0003E8                     u8400:
  8929   0003E8                     l6820:
  8930                           
  8931                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 665:    g = u;
  8932   0003E8  C0B5  F0AF         	movff	efgtoa@u,efgtoa@g
  8933   0003EC  C0B6  F0B0         	movff	efgtoa@u+1,efgtoa@g+1
  8934   0003F0  C0B7  F0B1         	movff	efgtoa@u+2,efgtoa@g+2
  8935   0003F4  C0B8  F0B2         	movff	efgtoa@u+3,efgtoa@g+3
  8936                           
  8937                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 666:   }
  8938   0003F8  EF55  F002         	goto	l1369
  8939   0003FC                     l6822:
  8940                           
  8941                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 669:     u.f = u.f/10.0;
  8942   0003FC  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  8943   000400  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  8944   000404  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  8945   000408  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  8946   00040C  0E00               	movlw	0
  8947   00040E  6E31               	movwf	___fldiv@a^0,c
  8948   000410  0E00               	movlw	0
  8949   000412  6E32               	movwf	(___fldiv@a+1)^0,c
  8950   000414  0E20               	movlw	32
  8951   000416  6E33               	movwf	(___fldiv@a+2)^0,c
  8952   000418  0E41               	movlw	65
  8953   00041A  6E34               	movwf	(___fldiv@a+3)^0,c
  8954   00041C  EC13  F011         	call	___fldiv	;wreg free
  8955   000420  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  8956   000424  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  8957   000428  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  8958   00042C  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  8959   000430                     
  8960                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 670:     --e;
  8961   000430  0100               	movlb	0	; () banked
  8962   000432  079C               	decf	efgtoa@e& (0+255),f,b
  8963   000434  A0D8               	btfss	status,0,c
  8964   000436  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  8965   000438                     
  8966                           ; BSR set to: 0
  8967                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 671:     if ((labs((g).u-(u).u) <= 
      +                          1)) {
  8968   000438  51B5               	movf	efgtoa@u& (0+255),w,b
  8969   00043A  5DAF               	subwf	efgtoa@g& (0+255),w,b
  8970   00043C  6E06               	movwf	labs@a^0,c
  8971   00043E  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  8972   000440  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8973   000442  6E07               	movwf	(labs@a+1)^0,c
  8974   000444  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  8975   000446  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8976   000448  6E08               	movwf	(labs@a+2)^0,c
  8977   00044A  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  8978   00044C  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8979   00044E  6E09               	movwf	(labs@a+3)^0,c
  8980   000450  ECA8  F024         	call	_labs	;wreg free
  8981   000454  BE09               	btfsc	(?_labs+3)^0,7,c
  8982   000456  EF3A  F002         	goto	u8410
  8983   00045A  5009               	movf	(?_labs+3)^0,w,c
  8984   00045C  1008               	iorwf	(?_labs+2)^0,w,c
  8985   00045E  1007               	iorwf	(?_labs+1)^0,w,c
  8986   000460  E107               	bnz	u8411
  8987   000462  0E02               	movlw	2
  8988   000464  5C06               	subwf	?_labs^0,w,c
  8989   000466  B0D8               	btfsc	status,0,c
  8990   000468  EF38  F002         	goto	u8411
  8991   00046C  EF3A  F002         	goto	u8410
  8992   000470                     u8411:
  8993   000470  EF3C  F002         	goto	l6830
  8994   000474                     u8410:
  8995   000474  EFF4  F001         	goto	l6820
  8996   000478                     l6830:
  8997                           
  8998                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 668:    while (g.f < u.f) {
  8999   000478  C0AF  F02D         	movff	efgtoa@g,___flge@ff1
  9000   00047C  C0B0  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  9001   000480  C0B1  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  9002   000484  C0B2  F030         	movff	efgtoa@g+3,___flge@ff1+3
  9003   000488  C0B5  F031         	movff	efgtoa@u,___flge@ff2
  9004   00048C  C0B6  F032         	movff	efgtoa@u+1,___flge@ff2+1
  9005   000490  C0B7  F033         	movff	efgtoa@u+2,___flge@ff2+2
  9006   000494  C0B8  F034         	movff	efgtoa@u+3,___flge@ff2+3
  9007   000498  ECE3  F01F         	call	___flge	;wreg free
  9008   00049C  A0D8               	btfss	status,0,c
  9009   00049E  EF53  F002         	goto	u8421
  9010   0004A2  EF55  F002         	goto	u8420
  9011   0004A6                     u8421:
  9012   0004A6  EFFE  F001         	goto	l6822
  9013   0004AA                     u8420:
  9014   0004AA                     l1369:
  9015                           
  9016                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  9017   0004AA  C08A  F096         	movff	efgtoa@c,efgtoa@mode
  9018                           
  9019                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 685:     nmode = mode;
  9020   0004AE  C096  F097         	movff	efgtoa@mode,efgtoa@nmode
  9021   0004B2                     
  9022                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 695:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
  9023   0004B2  BE58               	btfsc	(_prec+1)^0,7,c
  9024   0004B4  EF5E  F002         	goto	u8431
  9025   0004B8  EF60  F002         	goto	u8430
  9026   0004BC                     u8431:
  9027   0004BC  EF66  F002         	goto	l6836
  9028   0004C0                     u8430:
  9029   0004C0  C057  F08F         	movff	_prec,efgtoa@p
  9030   0004C4  C058  F090         	movff	_prec+1,efgtoa@p+1
  9031   0004C8  EF6B  F002         	goto	l6838
  9032   0004CC                     l6836:
  9033   0004CC  0E00               	movlw	0
  9034   0004CE  0100               	movlb	0	; () banked
  9035   0004D0  6F90               	movwf	(efgtoa@p+1)& (0+255),b
  9036   0004D2  0E06               	movlw	6
  9037   0004D4  6F8F               	movwf	efgtoa@p& (0+255),b
  9038   0004D6                     l6838:
  9039                           
  9040                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 697:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 711:     m = p;
  9041   0004D6  C08F  F09A         	movff	efgtoa@p,efgtoa@m
  9042   0004DA  C090  F09B         	movff	efgtoa@p+1,efgtoa@m+1
  9043   0004DE                     
  9044                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 715:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 716:         ++m;
  9045   0004DE  0100               	movlb	0	; () banked
  9046   0004E0  4B9A               	infsnz	efgtoa@m& (0+255),f,b
  9047   0004E2  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
  9048   0004E4                     
  9049                           ; BSR set to: 0
  9050                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 717:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 721:     if (nmode == 'f') {
  9051   0004E4  0E66               	movlw	102
  9052   0004E6  1997               	xorwf	efgtoa@nmode& (0+255),w,b
  9053   0004E8  A4D8               	btfss	status,2,c
  9054   0004EA  EF79  F002         	goto	u8441
  9055   0004EE  EF7B  F002         	goto	u8440
  9056   0004F2                     u8441:
  9057   0004F2  EF9B  F002         	goto	l6852
  9058   0004F6                     u8440:
  9059   0004F6                     
  9060                           ; BSR set to: 0
  9061                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 722:         if (e < 0) {
  9062   0004F6  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9063   0004F8  EF82  F002         	goto	u8450
  9064   0004FC  EF80  F002         	goto	u8451
  9065   000500                     u8451:
  9066   000500  EF8E  F002         	goto	l6848
  9067   000504                     u8450:
  9068   000504                     
  9069                           ; BSR set to: 0
  9070                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 723:             u.f = 1.0;
  9071   000504  0E00               	movlw	0
  9072   000506  6FB5               	movwf	efgtoa@u& (0+255),b
  9073   000508  0E00               	movlw	0
  9074   00050A  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  9075   00050C  0E80               	movlw	128
  9076   00050E  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  9077   000510  0E3F               	movlw	63
  9078   000512  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  9079                           
  9080                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 724:             e = 0;
  9081   000514  0E00               	movlw	0
  9082   000516  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  9083   000518  0E00               	movlw	0
  9084   00051A  6F9C               	movwf	efgtoa@e& (0+255),b
  9085   00051C                     l6848:
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 726:         if (!(mode == 'g')) {
  9089   00051C  0E67               	movlw	103
  9090   00051E  1996               	xorwf	efgtoa@mode& (0+255),w,b
  9091   000520  B4D8               	btfsc	status,2,c
  9092   000522  EF95  F002         	goto	u8461
  9093   000526  EF97  F002         	goto	u8460
  9094   00052A                     u8461:
  9095   00052A  EF9B  F002         	goto	l6852
  9096   00052E                     u8460:
  9097   00052E                     
  9098                           ; BSR set to: 0
  9099                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 727:             m += e;
  9100   00052E  519C               	movf	efgtoa@e& (0+255),w,b
  9101   000530  279A               	addwf	efgtoa@m& (0+255),f,b
  9102   000532  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  9103   000534  239B               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9104   000536                     l6852:
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  9108   000536  0E00               	movlw	0
  9109   000538  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  9110   00053A  0E00               	movlw	0
  9111   00053C  6FA4               	movwf	efgtoa@i& (0+255),b
  9112   00053E                     
  9113                           ; BSR set to: 0
  9114                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  9115   00053E  C0AF  F0A6         	movff	efgtoa@g,efgtoa@h
  9116   000542  C0B0  F0A7         	movff	efgtoa@g+1,efgtoa@h+1
  9117   000546  C0B1  F0A8         	movff	efgtoa@g+2,efgtoa@h+2
  9118   00054A  C0B2  F0A9         	movff	efgtoa@g+3,efgtoa@h+3
  9119   00054E                     
  9120                           ; BSR set to: 0
  9121                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  9122   00054E  C0B5  F0A0         	movff	efgtoa@u,efgtoa@ou
  9123   000552  C0B6  F0A1         	movff	efgtoa@u+1,efgtoa@ou+1
  9124   000556  C0B7  F0A2         	movff	efgtoa@u+2,efgtoa@ou+2
  9125   00055A  C0B8  F0A3         	movff	efgtoa@u+3,efgtoa@ou+3
  9126                           
  9127                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
  9128   00055E  EF2C  F003         	goto	l6866
  9129   000562                     l6858:
  9130                           
  9131                           ; BSR set to: 0
  9132                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 737:         l = floorf(h/u.f);
  9133   000562  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
  9134   000566  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
  9135   00056A  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
  9136   00056E  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
  9137   000572  C0B5  F031         	movff	efgtoa@u,___fldiv@a
  9138   000576  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
  9139   00057A  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
  9140   00057E  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
  9141   000582  EC13  F011         	call	___fldiv	;wreg free
  9142   000586  C02D  F046         	movff	?___fldiv,floorf@x
  9143   00058A  C02E  F047         	movff	?___fldiv+1,floorf@x+1
  9144   00058E  C02F  F048         	movff	?___fldiv+2,floorf@x+2
  9145   000592  C030  F049         	movff	?___fldiv+3,floorf@x+3
  9146   000596  ECC6  F016         	call	_floorf	;wreg free
  9147   00059A  C046  F0AA         	movff	?_floorf,efgtoa@l
  9148   00059E  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
  9149   0005A2  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
  9150   0005A6  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
  9151                           
  9152                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 738:         d = (int)l;
  9153   0005AA  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  9154   0005AE  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  9155   0005B2  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  9156   0005B6  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  9157   0005BA  EC5F  F01F         	call	___fltol	;wreg free
  9158   0005BE  C064  F098         	movff	?___fltol,efgtoa@d
  9159   0005C2  C065  F099         	movff	?___fltol+1,efgtoa@d+1
  9160   0005C6                     
  9161                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 739:         h -= l*u.f;
  9162   0005C6  C0A6  F064         	movff	efgtoa@h,___flsub@b
  9163   0005CA  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
  9164   0005CE  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
  9165   0005D2  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
  9166   0005D6  C0AA  F018         	movff	efgtoa@l,___flmul@a
  9167   0005DA  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
  9168   0005DE  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
  9169   0005E2  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
  9170   0005E6  C0B5  F014         	movff	efgtoa@u,___flmul@b
  9171   0005EA  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  9172   0005EE  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  9173   0005F2  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  9174   0005F6  EC1D  F00D         	call	___flmul	;wreg free
  9175   0005FA  C014  F068         	movff	?___flmul,___flsub@a
  9176   0005FE  C015  F069         	movff	?___flmul+1,___flsub@a+1
  9177   000602  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  9178   000606  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  9179   00060A  EC4A  F025         	call	___flsub	;wreg free
  9180   00060E  C064  F0A6         	movff	?___flsub,efgtoa@h
  9181   000612  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
  9182   000616  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
  9183   00061A  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
  9184   00061E                     
  9185                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 740:         u.f = u.f/10.0;
  9186   00061E  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  9187   000622  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  9188   000626  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  9189   00062A  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  9190   00062E  0E00               	movlw	0
  9191   000630  6E31               	movwf	___fldiv@a^0,c
  9192   000632  0E00               	movlw	0
  9193   000634  6E32               	movwf	(___fldiv@a+1)^0,c
  9194   000636  0E20               	movlw	32
  9195   000638  6E33               	movwf	(___fldiv@a+2)^0,c
  9196   00063A  0E41               	movlw	65
  9197   00063C  6E34               	movwf	(___fldiv@a+3)^0,c
  9198   00063E  EC13  F011         	call	___fldiv	;wreg free
  9199   000642  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  9200   000646  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  9201   00064A  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  9202   00064E  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  9203   000652                     
  9204                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 741:         ++i;
  9205   000652  0100               	movlb	0	; () banked
  9206   000654  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  9207   000656  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  9208   000658                     l6866:
  9209                           
  9210                           ; BSR set to: 0
  9211                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
  9212   000658  519A               	movf	efgtoa@m& (0+255),w,b
  9213   00065A  5DA4               	subwf	efgtoa@i& (0+255),w,b
  9214   00065C  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  9215   00065E  0A80               	xorlw	128
  9216   000660  6F8B               	movwf	??_efgtoa& (0+255),b
  9217   000662  519B               	movf	(efgtoa@m+1)& (0+255),w,b
  9218   000664  0A80               	xorlw	128
  9219   000666  598B               	subwfb	??_efgtoa& (0+255),w,b
  9220   000668  A0D8               	btfss	status,0,c
  9221   00066A  EF39  F003         	goto	u8471
  9222   00066E  EF3B  F003         	goto	u8470
  9223   000672                     u8471:
  9224   000672  EFB1  F002         	goto	l6858
  9225   000676                     u8470:
  9226   000676                     
  9227                           ; BSR set to: 0
  9228                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 745:     l = u.f*5.0;
  9229   000676  C0B5  F014         	movff	efgtoa@u,___flmul@b
  9230   00067A  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  9231   00067E  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  9232   000682  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  9233   000686  0E00               	movlw	0
  9234   000688  6E18               	movwf	___flmul@a^0,c
  9235   00068A  0E00               	movlw	0
  9236   00068C  6E19               	movwf	(___flmul@a+1)^0,c
  9237   00068E  0EA0               	movlw	160
  9238   000690  6E1A               	movwf	(___flmul@a+2)^0,c
  9239   000692  0E40               	movlw	64
  9240   000694  6E1B               	movwf	(___flmul@a+3)^0,c
  9241   000696  EC1D  F00D         	call	___flmul	;wreg free
  9242   00069A  C014  F0AA         	movff	?___flmul,efgtoa@l
  9243   00069E  C015  F0AB         	movff	?___flmul+1,efgtoa@l+1
  9244   0006A2  C016  F0AC         	movff	?___flmul+2,efgtoa@l+2
  9245   0006A6  C017  F0AD         	movff	?___flmul+3,efgtoa@l+3
  9246   0006AA                     
  9247                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 746:     if (h < l) {
  9248   0006AA  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
  9249   0006AE  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  9250   0006B2  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  9251   0006B6  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
  9252   0006BA  C0AA  F031         	movff	efgtoa@l,___flge@ff2
  9253   0006BE  C0AB  F032         	movff	efgtoa@l+1,___flge@ff2+1
  9254   0006C2  C0AC  F033         	movff	efgtoa@l+2,___flge@ff2+2
  9255   0006C6  C0AD  F034         	movff	efgtoa@l+3,___flge@ff2+3
  9256   0006CA  ECE3  F01F         	call	___flge	;wreg free
  9257   0006CE  B0D8               	btfsc	status,0,c
  9258   0006D0  EF6C  F003         	goto	u8481
  9259   0006D4  EF6E  F003         	goto	u8480
  9260   0006D8                     u8481:
  9261   0006D8  EF79  F003         	goto	l6874
  9262   0006DC                     u8480:
  9263   0006DC                     
  9264                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 747:         l = 0.0;
  9265   0006DC  0E00               	movlw	0
  9266   0006DE  0100               	movlb	0	; () banked
  9267   0006E0  6FAA               	movwf	efgtoa@l& (0+255),b
  9268   0006E2  0E00               	movlw	0
  9269   0006E4  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
  9270   0006E6  0E00               	movlw	0
  9271   0006E8  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
  9272   0006EA  0E00               	movlw	0
  9273   0006EC  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
  9274                           
  9275                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 748:     } else {
  9276   0006EE  EFA2  F003         	goto	l6880
  9277   0006F2                     l6874:
  9278                           
  9279                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 750:         if ((h == l) && !(d % 
      +                          2)) {
  9280   0006F2  C0A6  F006         	movff	efgtoa@h,___fleq@ff1
  9281   0006F6  C0A7  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  9282   0006FA  C0A8  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  9283   0006FE  C0A9  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  9284   000702  C0AA  F00A         	movff	efgtoa@l,___fleq@ff2
  9285   000706  C0AB  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  9286   00070A  C0AC  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  9287   00070E  C0AD  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  9288   000712  EC98  F023         	call	___fleq	;wreg free
  9289   000716  A0D8               	btfss	status,0,c
  9290   000718  EF90  F003         	goto	u8491
  9291   00071C  EF92  F003         	goto	u8490
  9292   000720                     u8491:
  9293   000720  EFA2  F003         	goto	l6880
  9294   000724                     u8490:
  9295   000724  0100               	movlb	0	; () banked
  9296   000726  B198               	btfsc	efgtoa@d& (0+255),0,b
  9297   000728  EF98  F003         	goto	u8501
  9298   00072C  EF9A  F003         	goto	u8500
  9299   000730                     u8501:
  9300   000730  EFA2  F003         	goto	l6880
  9301   000734                     u8500:
  9302   000734                     
  9303                           ; BSR set to: 0
  9304                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 751:             l = 0.0;
  9305   000734  0E00               	movlw	0
  9306   000736  6FAA               	movwf	efgtoa@l& (0+255),b
  9307   000738  0E00               	movlw	0
  9308   00073A  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
  9309   00073C  0E00               	movlw	0
  9310   00073E  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
  9311   000740  0E00               	movlw	0
  9312   000742  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
  9313   000744                     l6880:
  9314                           
  9315                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 756:     h = g.f + l;
  9316   000744  C0AF  F046         	movff	efgtoa@g,___fladd@b
  9317   000748  C0B0  F047         	movff	efgtoa@g+1,___fladd@b+1
  9318   00074C  C0B1  F048         	movff	efgtoa@g+2,___fladd@b+2
  9319   000750  C0B2  F049         	movff	efgtoa@g+3,___fladd@b+3
  9320   000754  C0AA  F04A         	movff	efgtoa@l,___fladd@a
  9321   000758  C0AB  F04B         	movff	efgtoa@l+1,___fladd@a+1
  9322   00075C  C0AC  F04C         	movff	efgtoa@l+2,___fladd@a+2
  9323   000760  C0AD  F04D         	movff	efgtoa@l+3,___fladd@a+3
  9324   000764  ECBC  F00A         	call	___fladd	;wreg free
  9325   000768  C046  F0A6         	movff	?___fladd,efgtoa@h
  9326   00076C  C047  F0A7         	movff	?___fladd+1,efgtoa@h+1
  9327   000770  C048  F0A8         	movff	?___fladd+2,efgtoa@h+2
  9328   000774  C049  F0A9         	movff	?___fladd+3,efgtoa@h+3
  9329   000778                     
  9330                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 758:  if (h >= (ou.f*10.0)) {
  9331   000778  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
  9332   00077C  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  9333   000780  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  9334   000784  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
  9335   000788  0E00               	movlw	0
  9336   00078A  6E18               	movwf	___flmul@a^0,c
  9337   00078C  0E00               	movlw	0
  9338   00078E  6E19               	movwf	(___flmul@a+1)^0,c
  9339   000790  0E20               	movlw	32
  9340   000792  6E1A               	movwf	(___flmul@a+2)^0,c
  9341   000794  0E41               	movlw	65
  9342   000796  6E1B               	movwf	(___flmul@a+3)^0,c
  9343   000798  C0A0  F014         	movff	efgtoa@ou,___flmul@b
  9344   00079C  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
  9345   0007A0  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
  9346   0007A4  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
  9347   0007A8  EC1D  F00D         	call	___flmul	;wreg free
  9348   0007AC  C014  F031         	movff	?___flmul,___flge@ff2
  9349   0007B0  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  9350   0007B4  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  9351   0007B8  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  9352   0007BC  ECE3  F01F         	call	___flge	;wreg free
  9353   0007C0  A0D8               	btfss	status,0,c
  9354   0007C2  EFE5  F003         	goto	u8511
  9355   0007C6  EFE7  F003         	goto	u8510
  9356   0007CA                     u8511:
  9357   0007CA  EF10  F004         	goto	l6892
  9358   0007CE                     u8510:
  9359   0007CE                     
  9360                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 759:   e++;
  9361   0007CE  0100               	movlb	0	; () banked
  9362   0007D0  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  9363   0007D2  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  9364   0007D4                     
  9365                           ; BSR set to: 0
  9366                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10.0;
  9367   0007D4  C0A0  F014         	movff	efgtoa@ou,___flmul@b
  9368   0007D8  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
  9369   0007DC  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
  9370   0007E0  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
  9371   0007E4  0E00               	movlw	0
  9372   0007E6  6E18               	movwf	___flmul@a^0,c
  9373   0007E8  0E00               	movlw	0
  9374   0007EA  6E19               	movwf	(___flmul@a+1)^0,c
  9375   0007EC  0E20               	movlw	32
  9376   0007EE  6E1A               	movwf	(___flmul@a+2)^0,c
  9377   0007F0  0E41               	movlw	65
  9378   0007F2  6E1B               	movwf	(___flmul@a+3)^0,c
  9379   0007F4  EC1D  F00D         	call	___flmul	;wreg free
  9380   0007F8  C014  F0A0         	movff	?___flmul,efgtoa@ou
  9381   0007FC  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
  9382   000800  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
  9383   000804  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
  9384   000808                     
  9385                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 762:   if (nmode == 'f') {
  9386   000808  0E66               	movlw	102
  9387   00080A  0100               	movlb	0	; () banked
  9388   00080C  1997               	xorwf	efgtoa@nmode& (0+255),w,b
  9389   00080E  A4D8               	btfss	status,2,c
  9390   000810  EF0C  F004         	goto	u8521
  9391   000814  EF0E  F004         	goto	u8520
  9392   000818                     u8521:
  9393   000818  EF10  F004         	goto	l6892
  9394   00081C                     u8520:
  9395   00081C                     
  9396                           ; BSR set to: 0
  9397                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 764:    m++;
  9398   00081C  4B9A               	infsnz	efgtoa@m& (0+255),f,b
  9399   00081E  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
  9400   000820                     l6892:
  9401                           
  9402                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  9403   000820  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  9404   000824  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  9405   000828  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  9406   00082C  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  9407   000830                     
  9408                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  9409   000830  C09C  F08D         	movff	efgtoa@e,efgtoa@ne
  9410   000834  C09D  F08E         	movff	efgtoa@e+1,efgtoa@ne+1
  9411   000838                     
  9412                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  9413   000838  0E00               	movlw	0
  9414   00083A  0100               	movlb	0	; () banked
  9415   00083C  6F95               	movwf	efgtoa@pp& (0+255),b
  9416   00083E                     
  9417                           ; BSR set to: 0
  9418                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  9419   00083E  0E00               	movlw	0
  9420   000840  6F92               	movwf	(efgtoa@t+1)& (0+255),b
  9421   000842  0E00               	movlw	0
  9422   000844  6F91               	movwf	efgtoa@t& (0+255),b
  9423   000846                     
  9424                           ; BSR set to: 0
  9425                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  9426   000846  0E00               	movlw	0
  9427   000848  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  9428   00084A  0E00               	movlw	0
  9429   00084C  6FA4               	movwf	efgtoa@i& (0+255),b
  9430                           
  9431                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
  9432   00084E  EF0E  F005         	goto	l6942
  9433   000852                     l6902:
  9434                           
  9435                           ; BSR set to: 0
  9436                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 780:         l = floorf(h/u.f);
  9437   000852  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
  9438   000856  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
  9439   00085A  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
  9440   00085E  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
  9441   000862  C0B5  F031         	movff	efgtoa@u,___fldiv@a
  9442   000866  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
  9443   00086A  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
  9444   00086E  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
  9445   000872  EC13  F011         	call	___fldiv	;wreg free
  9446   000876  C02D  F046         	movff	?___fldiv,floorf@x
  9447   00087A  C02E  F047         	movff	?___fldiv+1,floorf@x+1
  9448   00087E  C02F  F048         	movff	?___fldiv+2,floorf@x+2
  9449   000882  C030  F049         	movff	?___fldiv+3,floorf@x+3
  9450   000886  ECC6  F016         	call	_floorf	;wreg free
  9451   00088A  C046  F0AA         	movff	?_floorf,efgtoa@l
  9452   00088E  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
  9453   000892  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
  9454   000896  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
  9455                           
  9456                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 781:         d = (int)l > 9 ? 9 : (
      +                          int)l;
  9457   00089A  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  9458   00089E  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  9459   0008A2  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  9460   0008A6  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  9461   0008AA  EC5F  F01F         	call	___fltol	;wreg free
  9462   0008AE  0100               	movlb	0	; () banked
  9463   0008B0  BF65               	btfsc	(?___fltol+1)& (0+255),7,b
  9464   0008B2  EF66  F004         	goto	u8530
  9465   0008B6  5165               	movf	(?___fltol+1)& (0+255),w,b
  9466   0008B8  E107               	bnz	u8531
  9467   0008BA  0E0A               	movlw	10
  9468   0008BC  5D64               	subwf	?___fltol& (0+255),w,b
  9469   0008BE  B0D8               	btfsc	status,0,c
  9470   0008C0  EF64  F004         	goto	u8531
  9471   0008C4  EF66  F004         	goto	u8530
  9472   0008C8                     u8531:
  9473   0008C8  EF76  F004         	goto	l6906
  9474   0008CC                     u8530:
  9475   0008CC                     
  9476                           ; BSR set to: 0
  9477   0008CC  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  9478   0008D0  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  9479   0008D4  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  9480   0008D8  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  9481   0008DC  EC5F  F01F         	call	___fltol	;wreg free
  9482   0008E0  C064  F098         	movff	?___fltol,efgtoa@d
  9483   0008E4  C065  F099         	movff	?___fltol+1,efgtoa@d+1
  9484   0008E8  EF7A  F004         	goto	l1399
  9485   0008EC                     l6906:
  9486                           
  9487                           ; BSR set to: 0
  9488   0008EC  0E00               	movlw	0
  9489   0008EE  6F99               	movwf	(efgtoa@d+1)& (0+255),b
  9490   0008F0  0E09               	movlw	9
  9491   0008F2  6F98               	movwf	efgtoa@d& (0+255),b
  9492   0008F4                     l1399:
  9493                           
  9494                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 792:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 793:             if (!pp && (ne < 0)) {
  9495   0008F4  0100               	movlb	0	; () banked
  9496   0008F6  5195               	movf	efgtoa@pp& (0+255),w,b
  9497   0008F8  A4D8               	btfss	status,2,c
  9498   0008FA  EF81  F004         	goto	u8541
  9499   0008FE  EF83  F004         	goto	u8540
  9500   000902                     u8541:
  9501   000902  EFAB  F004         	goto	l6926
  9502   000906                     u8540:
  9503   000906                     
  9504                           ; BSR set to: 0
  9505   000906  BF8E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9506   000908  EF8A  F004         	goto	u8550
  9507   00090C  EF88  F004         	goto	u8551
  9508   000910                     u8551:
  9509   000910  EFAB  F004         	goto	l6926
  9510   000914                     u8550:
  9511   000914                     
  9512                           ; BSR set to: 0
  9513                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 794:                 dbuf[n++] = '.
      +                          ';
  9514   000914  0E25               	movlw	low _dbuf
  9515   000916  25B3               	addwf	efgtoa@n& (0+255),w,b
  9516   000918  6ED9               	movwf	fsr2l,c
  9517   00091A  0E01               	movlw	high _dbuf
  9518   00091C  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9519   00091E  6EDA               	movwf	fsr2h,c
  9520   000920  0E2E               	movlw	46
  9521   000922  6EDF               	movwf	indf2,c
  9522   000924                     
  9523                           ; BSR set to: 0
  9524   000924  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  9525   000926  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  9526   000928                     
  9527                           ; BSR set to: 0
  9528                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 795:                 --w;
  9529   000928  079E               	decf	efgtoa@w& (0+255),f,b
  9530   00092A  A0D8               	btfss	status,0,c
  9531   00092C  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9532   00092E                     
  9533                           ; BSR set to: 0
  9534                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 796:                 pp = 1;
  9535   00092E  0E01               	movlw	1
  9536   000930  6F95               	movwf	efgtoa@pp& (0+255),b
  9537   000932  EFAB  F004         	goto	l6926
  9538   000936                     l6918:
  9539                           
  9540                           ; BSR set to: 0
  9541                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 799:                 dbuf[n++] = '0
      +                          ';
  9542   000936  0E25               	movlw	low _dbuf
  9543   000938  25B3               	addwf	efgtoa@n& (0+255),w,b
  9544   00093A  6ED9               	movwf	fsr2l,c
  9545   00093C  0E01               	movlw	high _dbuf
  9546   00093E  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9547   000940  6EDA               	movwf	fsr2h,c
  9548   000942  0E30               	movlw	48
  9549   000944  6EDF               	movwf	indf2,c
  9550   000946                     
  9551                           ; BSR set to: 0
  9552   000946  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  9553   000948  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  9554   00094A                     
  9555                           ; BSR set to: 0
  9556                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 800:                 --w;
  9557   00094A  079E               	decf	efgtoa@w& (0+255),f,b
  9558   00094C  A0D8               	btfss	status,0,c
  9559   00094E  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9560   000950                     
  9561                           ; BSR set to: 0
  9562                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 801:                 --t;
  9563   000950  0791               	decf	efgtoa@t& (0+255),f,b
  9564   000952  A0D8               	btfss	status,0,c
  9565   000954  0792               	decf	(efgtoa@t+1)& (0+255),f,b
  9566   000956                     l6926:
  9567                           
  9568                           ; BSR set to: 0
  9569                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 798:             while (t) {
  9570   000956  5191               	movf	efgtoa@t& (0+255),w,b
  9571   000958  1192               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9572   00095A  A4D8               	btfss	status,2,c
  9573   00095C  EFB2  F004         	goto	u8561
  9574   000960  EFB4  F004         	goto	u8560
  9575   000964                     u8561:
  9576   000964  EF9B  F004         	goto	l6918
  9577   000968                     u8560:
  9578   000968                     
  9579                           ; BSR set to: 0
  9580                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 803:             dbuf[n++] = (char)
      +                          ((int)'0' + d);
  9581   000968  0E25               	movlw	low _dbuf
  9582   00096A  25B3               	addwf	efgtoa@n& (0+255),w,b
  9583   00096C  6ED9               	movwf	fsr2l,c
  9584   00096E  0E01               	movlw	high _dbuf
  9585   000970  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9586   000972  6EDA               	movwf	fsr2h,c
  9587   000974  5198               	movf	efgtoa@d& (0+255),w,b
  9588   000976  0F30               	addlw	48
  9589   000978  6EDF               	movwf	indf2,c
  9590   00097A                     
  9591                           ; BSR set to: 0
  9592   00097A  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  9593   00097C  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  9594   00097E                     
  9595                           ; BSR set to: 0
  9596                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 804:             --w;
  9597   00097E  079E               	decf	efgtoa@w& (0+255),f,b
  9598   000980  A0D8               	btfss	status,0,c
  9599   000982  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9600   000984                     
  9601                           ; BSR set to: 0
  9602                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 805:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 806:         h -= l*u.f;
  9603   000984  C0A6  F064         	movff	efgtoa@h,___flsub@b
  9604   000988  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
  9605   00098C  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
  9606   000990  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
  9607   000994  C0AA  F018         	movff	efgtoa@l,___flmul@a
  9608   000998  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
  9609   00099C  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
  9610   0009A0  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
  9611   0009A4  C0B5  F014         	movff	efgtoa@u,___flmul@b
  9612   0009A8  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  9613   0009AC  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  9614   0009B0  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  9615   0009B4  EC1D  F00D         	call	___flmul	;wreg free
  9616   0009B8  C014  F068         	movff	?___flmul,___flsub@a
  9617   0009BC  C015  F069         	movff	?___flmul+1,___flsub@a+1
  9618   0009C0  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  9619   0009C4  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  9620   0009C8  EC4A  F025         	call	___flsub	;wreg free
  9621   0009CC  C064  F0A6         	movff	?___flsub,efgtoa@h
  9622   0009D0  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
  9623   0009D4  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
  9624   0009D8  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
  9625   0009DC                     
  9626                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 807:         u.f = u.f/10.0;
  9627   0009DC  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  9628   0009E0  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  9629   0009E4  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  9630   0009E8  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  9631   0009EC  0E00               	movlw	0
  9632   0009EE  6E31               	movwf	___fldiv@a^0,c
  9633   0009F0  0E00               	movlw	0
  9634   0009F2  6E32               	movwf	(___fldiv@a+1)^0,c
  9635   0009F4  0E20               	movlw	32
  9636   0009F6  6E33               	movwf	(___fldiv@a+2)^0,c
  9637   0009F8  0E41               	movlw	65
  9638   0009FA  6E34               	movwf	(___fldiv@a+3)^0,c
  9639   0009FC  EC13  F011         	call	___fldiv	;wreg free
  9640   000A00  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  9641   000A04  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  9642   000A08  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  9643   000A0C  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  9644   000A10                     
  9645                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 808:         --ne;
  9646   000A10  0100               	movlb	0	; () banked
  9647   000A12  078D               	decf	efgtoa@ne& (0+255),f,b
  9648   000A14  A0D8               	btfss	status,0,c
  9649   000A16  078E               	decf	(efgtoa@ne+1)& (0+255),f,b
  9650   000A18                     
  9651                           ; BSR set to: 0
  9652                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 809:         ++i;
  9653   000A18  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  9654   000A1A  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  9655   000A1C                     l6942:
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
  9659   000A1C  519A               	movf	efgtoa@m& (0+255),w,b
  9660   000A1E  5DA4               	subwf	efgtoa@i& (0+255),w,b
  9661   000A20  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  9662   000A22  0A80               	xorlw	128
  9663   000A24  6F8B               	movwf	??_efgtoa& (0+255),b
  9664   000A26  519B               	movf	(efgtoa@m+1)& (0+255),w,b
  9665   000A28  0A80               	xorlw	128
  9666   000A2A  598B               	subwfb	??_efgtoa& (0+255),w,b
  9667   000A2C  B0D8               	btfsc	status,0,c
  9668   000A2E  EF1B  F005         	goto	u8571
  9669   000A32  EF1D  F005         	goto	u8570
  9670   000A36                     u8571:
  9671   000A36  EF2B  F005         	goto	l6946
  9672   000A3A                     u8570:
  9673   000A3A                     
  9674                           ; BSR set to: 0
  9675   000A3A  BFB4               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9676   000A3C  EF29  F005         	goto	u8581
  9677   000A40  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  9678   000A42  E109               	bnz	u8580
  9679   000A44  0E4B               	movlw	75
  9680   000A46  5DB3               	subwf	efgtoa@n& (0+255),w,b
  9681   000A48  A0D8               	btfss	status,0,c
  9682   000A4A  EF29  F005         	goto	u8581
  9683   000A4E  EF2B  F005         	goto	u8580
  9684   000A52                     u8581:
  9685   000A52  EF29  F004         	goto	l6902
  9686   000A56                     u8580:
  9687   000A56                     l6946:
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(dbuf) - 1;
  9691   000A56  0E00               	movlw	0
  9692   000A58  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  9693   000A5A  0E4F               	movlw	79
  9694   000A5C  6FA4               	movwf	efgtoa@i& (0+255),b
  9695   000A5E                     
  9696                           ; BSR set to: 0
  9697                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] = '\0';
  9698   000A5E  0E25               	movlw	low _dbuf
  9699   000A60  25A4               	addwf	efgtoa@i& (0+255),w,b
  9700   000A62  6ED9               	movwf	fsr2l,c
  9701   000A64  0E01               	movlw	high _dbuf
  9702   000A66  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9703   000A68  6EDA               	movwf	fsr2h,c
  9704   000A6A  6ADF               	clrf	indf2,c
  9705   000A6C                     
  9706                           ; BSR set to: 0
  9707                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbuf[i-n], &dbuf[0], 
      +                          (size_t)n);
  9708   000A6C  0E25               	movlw	low _dbuf
  9709   000A6E  6F8B               	movwf	??_efgtoa& (0+255),b
  9710   000A70  0E01               	movlw	high _dbuf
  9711   000A72  6F8C               	movwf	(??_efgtoa+1)& (0+255),b
  9712   000A74  51B3               	movf	efgtoa@n& (0+255),w,b
  9713   000A76  5F8B               	subwf	??_efgtoa& (0+255),f,b
  9714   000A78  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  9715   000A7A  5B8C               	subwfb	(??_efgtoa+1)& (0+255),f,b
  9716   000A7C  51A4               	movf	efgtoa@i& (0+255),w,b
  9717   000A7E  258B               	addwf	??_efgtoa& (0+255),w,b
  9718   000A80  6E06               	movwf	memcpy@d1^0,c
  9719   000A82  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  9720   000A84  218C               	addwfc	(??_efgtoa+1)& (0+255),w,b
  9721   000A86  6E07               	movwf	(memcpy@d1+1)^0,c
  9722   000A88  0E25               	movlw	low _dbuf
  9723   000A8A  6E08               	movwf	memcpy@s1^0,c
  9724   000A8C  0E01               	movlw	high _dbuf
  9725   000A8E  6E09               	movwf	(memcpy@s1+1)^0,c
  9726   000A90  C0B3  F00A         	movff	efgtoa@n,memcpy@n
  9727   000A94  C0B4  F00B         	movff	efgtoa@n+1,memcpy@n+1
  9728   000A98  ECFD  F024         	call	_memcpy	;wreg free
  9729   000A9C                     
  9730                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  9731   000A9C  0100               	movlb	0	; () banked
  9732   000A9E  51B3               	movf	efgtoa@n& (0+255),w,b
  9733   000AA0  5DA4               	subwf	efgtoa@i& (0+255),w,b
  9734   000AA2  6FB3               	movwf	efgtoa@n& (0+255),b
  9735   000AA4  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  9736   000AA6  59A5               	subwfb	(efgtoa@i+1)& (0+255),w,b
  9737   000AA8  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9738   000AAA                     
  9739                           ; BSR set to: 0
  9740                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 850:  i = sign == 0 ? 0 : 1;
  9741   000AAA  51AE               	movf	efgtoa@sign& (0+255),w,b
  9742   000AAC  A4D8               	btfss	status,2,c
  9743   000AAE  EF5B  F005         	goto	u8591
  9744   000AB2  EF5E  F005         	goto	u8590
  9745   000AB6                     u8591:
  9746   000AB6  0E01               	movlw	1
  9747   000AB8  EF5F  F005         	goto	u8600
  9748   000ABC                     u8590:
  9749   000ABC  0E00               	movlw	0
  9750   000ABE                     u8600:
  9751   000ABE  6FA4               	movwf	efgtoa@i& (0+255),b
  9752   000AC0  6BA5               	clrf	(efgtoa@i+1)& (0+255),b
  9753   000AC2                     
  9754                           ; BSR set to: 0
  9755                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  9756   000AC2  51AE               	movf	efgtoa@sign& (0+255),w,b
  9757   000AC4  B4D8               	btfsc	status,2,c
  9758   000AC6  EF67  F005         	goto	u8611
  9759   000ACA  EF69  F005         	goto	u8610
  9760   000ACE                     u8611:
  9761   000ACE  EF74  F005         	goto	l6960
  9762   000AD2                     u8610:
  9763   000AD2                     
  9764                           ; BSR set to: 0
  9765                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] = sign;
  9766   000AD2  07B3               	decf	efgtoa@n& (0+255),f,b
  9767   000AD4  A0D8               	btfss	status,0,c
  9768   000AD6  07B4               	decf	(efgtoa@n+1)& (0+255),f,b
  9769   000AD8  0E25               	movlw	low _dbuf
  9770   000ADA  25B3               	addwf	efgtoa@n& (0+255),w,b
  9771   000ADC  6ED9               	movwf	fsr2l,c
  9772   000ADE  0E01               	movlw	high _dbuf
  9773   000AE0  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9774   000AE2  6EDA               	movwf	fsr2h,c
  9775   000AE4  C0AE  FFDF         	movff	efgtoa@sign,indf2
  9776   000AE8                     l6960:
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  9780   000AE8  51A4               	movf	efgtoa@i& (0+255),w,b
  9781   000AEA  5F9E               	subwf	efgtoa@w& (0+255),f,b
  9782   000AEC  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  9783   000AEE  5B9F               	subwfb	(efgtoa@w+1)& (0+255),f,b
  9784   000AF0                     
  9785                           ; BSR set to: 0
  9786                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 867:     return (void) pad(fp, &dbu
      +                          f[n], w);
  9787   000AF0  C084  F017         	movff	efgtoa@fp,pad@fp
  9788   000AF4  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  9789   000AF8  0E25               	movlw	low _dbuf
  9790   000AFA  25B3               	addwf	efgtoa@n& (0+255),w,b
  9791   000AFC  6E19               	movwf	pad@buf^0,c
  9792   000AFE  0E01               	movlw	high _dbuf
  9793   000B00  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9794   000B02  6E1A               	movwf	(pad@buf+1)^0,c
  9795   000B04  C09E  F01B         	movff	efgtoa@w,pad@p
  9796   000B08  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  9797   000B0C  ECED  F023         	call	_pad	;wreg free
  9798   000B10                     l1366:
  9799   000B10  0012               	return		;funcret
  9800   000B12                     __end_of_efgtoa:
  9801                           	callstack 0
  9802                           
  9803 ;; *************** function _strcpy *****************
  9804 ;; Defined at:
  9805 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strcpy.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;  dest            2    5[COMRAM] PTR unsigned char 
  9808 ;;		 -> dbuf(80), 
  9809 ;;  src             2    7[COMRAM] PTR const unsigned char 
  9810 ;;		 -> STR_31(4), STR_28(4), 
  9811 ;; Auto vars:     Size  Location     Type
  9812 ;;  d               2    9[COMRAM] PTR unsigned char 
  9813 ;;		 -> dbuf(80), 
  9814 ;; Return value:  Size  Location     Type
  9815 ;;                  2    5[COMRAM] PTR unsigned char 
  9816 ;; Registers used:
  9817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9818 ;; Tracked objects:
  9819 ;;		On entry : 0/0
  9820 ;;		On exit  : 0/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9823 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9824 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9826 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9827 ;;Total ram usage:        6 bytes
  9828 ;; Hardware stack levels used: 1
  9829 ;; Hardware stack levels required when called: 1
  9830 ;; This function calls:
  9831 ;;		Nothing
  9832 ;; This function is called by:
  9833 ;;		_efgtoa
  9834 ;; This function uses a non-reentrant model
  9835 ;;
  9836                           
  9837                           	psect	text34
  9838   004BDE                     __ptext34:
  9839                           	callstack 0
  9840   004BDE                     _strcpy:
  9841                           	callstack 24
  9842   004BDE  C006  F00A         	movff	strcpy@dest,strcpy@d
  9843   004BE2  C007  F00B         	movff	strcpy@dest+1,strcpy@d+1
  9844   004BE6                     l6650:
  9845   004BE6  C008  FFF6         	movff	strcpy@src,tblptrl
  9846   004BEA  C009  FFF7         	movff	strcpy@src+1,tblptrh
  9847   004BEE  4A08               	infsnz	strcpy@src^0,f,c
  9848   004BF0  2A09               	incf	(strcpy@src+1)^0,f,c
  9849   004BF2                     	if	0	;tblptru may be non-zero
  9850   004BF2                     	endif
  9851   004BF2                     	if	0	;tblptru may be non-zero
  9852   004BF2                     	endif
  9853   004BF2  C00A  FFD9         	movff	strcpy@d,fsr2l
  9854   004BF6  C00B  FFDA         	movff	strcpy@d+1,fsr2h
  9855   004BFA  4A0A               	infsnz	strcpy@d^0,f,c
  9856   004BFC  2A0B               	incf	(strcpy@d+1)^0,f,c
  9857   004BFE  0008               	tblrd		*
  9858   004C00  CFF5 FFDF          	movff	tablat,indf2
  9859   004C04  50DF               	movf	indf2,w,c
  9860   004C06  A4D8               	btfss	status,2,c
  9861   004C08  EF08  F026         	goto	u8081
  9862   004C0C  EF0A  F026         	goto	u8080
  9863   004C10                     u8081:
  9864   004C10  EFF3  F025         	goto	l6650
  9865   004C14                     u8080:
  9866   004C14  0012               	return		;funcret
  9867   004C16                     __end_of_strcpy:
  9868                           	callstack 0
  9869                           
  9870 ;; *************** function _memcpy *****************
  9871 ;; Defined at:
  9872 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\memcpy.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;  d1              2    5[COMRAM] PTR void 
  9875 ;;		 -> dbuf(80), 
  9876 ;;  s1              2    7[COMRAM] PTR const void 
  9877 ;;		 -> dbuf(80), 
  9878 ;;  n               2    9[COMRAM] unsigned int 
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;  s               2   14[COMRAM] PTR const unsigned char 
  9881 ;;		 -> dbuf(80), 
  9882 ;;  d               2   12[COMRAM] PTR unsigned char 
  9883 ;;		 -> dbuf(80), 
  9884 ;;  tmp             1   11[COMRAM] unsigned char 
  9885 ;; Return value:  Size  Location     Type
  9886 ;;                  2    5[COMRAM] PTR void 
  9887 ;; Registers used:
  9888 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9889 ;; Tracked objects:
  9890 ;;		On entry : 0/0
  9891 ;;		On exit  : 0/0
  9892 ;;		Unchanged: 0/0
  9893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9894 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9895 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9897 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9898 ;;Total ram usage:       11 bytes
  9899 ;; Hardware stack levels used: 1
  9900 ;; Hardware stack levels required when called: 1
  9901 ;; This function calls:
  9902 ;;		Nothing
  9903 ;; This function is called by:
  9904 ;;		_efgtoa
  9905 ;; This function uses a non-reentrant model
  9906 ;;
  9907                           
  9908                           	psect	text35
  9909   0049FA                     __ptext35:
  9910                           	callstack 0
  9911   0049FA                     _memcpy:
  9912                           	callstack 24
  9913   0049FA  C008  F00F         	movff	memcpy@s1,memcpy@s
  9914   0049FE  C009  F010         	movff	memcpy@s1+1,memcpy@s+1
  9915   004A02  C006  F00D         	movff	memcpy@d1,memcpy@d
  9916   004A06  C007  F00E         	movff	memcpy@d1+1,memcpy@d+1
  9917   004A0A  EF17  F025         	goto	l6698
  9918   004A0E                     l6690:
  9919   004A0E  C00F  FFD9         	movff	memcpy@s,fsr2l
  9920   004A12  C010  FFDA         	movff	memcpy@s+1,fsr2h
  9921   004A16  50DF               	movf	indf2,w,c
  9922   004A18  6E0C               	movwf	memcpy@tmp^0,c
  9923   004A1A  4A0F               	infsnz	memcpy@s^0,f,c
  9924   004A1C  2A10               	incf	(memcpy@s+1)^0,f,c
  9925   004A1E  C00D  FFD9         	movff	memcpy@d,fsr2l
  9926   004A22  C00E  FFDA         	movff	memcpy@d+1,fsr2h
  9927   004A26  C00C  FFDF         	movff	memcpy@tmp,indf2
  9928   004A2A  4A0D               	infsnz	memcpy@d^0,f,c
  9929   004A2C  2A0E               	incf	(memcpy@d+1)^0,f,c
  9930   004A2E                     l6698:
  9931   004A2E  060A               	decf	memcpy@n^0,f,c
  9932   004A30  A0D8               	btfss	status,0,c
  9933   004A32  060B               	decf	(memcpy@n+1)^0,f,c
  9934   004A34  280A               	incf	memcpy@n^0,w,c
  9935   004A36  E106               	bnz	u8201
  9936   004A38  280B               	incf	(memcpy@n+1)^0,w,c
  9937   004A3A  A4D8               	btfss	status,2,c
  9938   004A3C  EF22  F025         	goto	u8201
  9939   004A40  EF24  F025         	goto	u8200
  9940   004A44                     u8201:
  9941   004A44  EF07  F025         	goto	l6690
  9942   004A48                     u8200:
  9943   004A48  0012               	return		;funcret
  9944   004A4A                     __end_of_memcpy:
  9945                           	callstack 0
  9946                           
  9947 ;; *************** function _labs *****************
  9948 ;; Defined at:
  9949 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\labs.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;  a               4    5[COMRAM] long 
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;		None
  9954 ;; Return value:  Size  Location     Type
  9955 ;;                  4    5[COMRAM] long 
  9956 ;; Registers used:
  9957 ;;		wreg, status,2, status,0
  9958 ;; Tracked objects:
  9959 ;;		On entry : 0/0
  9960 ;;		On exit  : 0/0
  9961 ;;		Unchanged: 0/0
  9962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9963 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9965 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9966 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9967 ;;Total ram usage:        8 bytes
  9968 ;; Hardware stack levels used: 1
  9969 ;; Hardware stack levels required when called: 1
  9970 ;; This function calls:
  9971 ;;		Nothing
  9972 ;; This function is called by:
  9973 ;;		_efgtoa
  9974 ;; This function uses a non-reentrant model
  9975 ;;
  9976                           
  9977                           	psect	text36
  9978   004950                     __ptext36:
  9979                           	callstack 0
  9980   004950                     _labs:
  9981                           	callstack 24
  9982   004950  BE09               	btfsc	(labs@a+3)^0,7,c
  9983   004952  EFAD  F024         	goto	u8091
  9984   004956  EFAF  F024         	goto	u8090
  9985   00495A                     u8091:
  9986   00495A  EFB9  F024         	goto	l6656
  9987   00495E                     u8090:
  9988   00495E  C006  F006         	movff	labs@a,?_labs
  9989   004962  C007  F007         	movff	labs@a+1,?_labs+1
  9990   004966  C008  F008         	movff	labs@a+2,?_labs+2
  9991   00496A  C009  F009         	movff	labs@a+3,?_labs+3
  9992   00496E  EFD2  F024         	goto	l1548
  9993   004972                     l6656:
  9994   004972  C006  F00A         	movff	labs@a,??_labs
  9995   004976  C007  F00B         	movff	labs@a+1,??_labs+1
  9996   00497A  C008  F00C         	movff	labs@a+2,??_labs+2
  9997   00497E  C009  F00D         	movff	labs@a+3,??_labs+3
  9998   004982  1E0A               	comf	??_labs^0,f,c
  9999   004984  1E0B               	comf	(??_labs+1)^0,f,c
 10000   004986  1E0C               	comf	(??_labs+2)^0,f,c
 10001   004988  1E0D               	comf	(??_labs+3)^0,f,c
 10002   00498A  2A0A               	incf	??_labs^0,f,c
 10003   00498C  0E00               	movlw	0
 10004   00498E  220B               	addwfc	(??_labs+1)^0,f,c
 10005   004990  220C               	addwfc	(??_labs+2)^0,f,c
 10006   004992  220D               	addwfc	(??_labs+3)^0,f,c
 10007   004994  C00A  F006         	movff	??_labs,?_labs
 10008   004998  C00B  F007         	movff	??_labs+1,?_labs+1
 10009   00499C  C00C  F008         	movff	??_labs+2,?_labs+2
 10010   0049A0  C00D  F009         	movff	??_labs+3,?_labs+3
 10011   0049A4                     l1548:
 10012   0049A4  0012               	return		;funcret
 10013   0049A6                     __end_of_labs:
 10014                           	callstack 0
 10015                           
 10016 ;; *************** function _floorf *****************
 10017 ;; Defined at:
 10018 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\floorf.c"
 10019 ;; Parameters:    Size  Location     Type
 10020 ;;  x               4   69[COMRAM] float 
 10021 ;; Auto vars:     Size  Location     Type
 10022 ;;  u               4    6[BANK0 ] struct .
 10023 ;;  m               4    0[BANK0 ] unsigned long 
 10024 ;;  e               2    4[BANK0 ] int 
 10025 ;; Return value:  Size  Location     Type
 10026 ;;                  4   69[COMRAM] float 
 10027 ;; Registers used:
 10028 ;;		wreg, status,2, status,0
 10029 ;; Tracked objects:
 10030 ;;		On entry : 0/0
 10031 ;;		On exit  : 0/0
 10032 ;;		Unchanged: 0/0
 10033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10035 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10036 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10037 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10038 ;;Total ram usage:       20 bytes
 10039 ;; Hardware stack levels used: 1
 10040 ;; Hardware stack levels required when called: 1
 10041 ;; This function calls:
 10042 ;;		Nothing
 10043 ;; This function is called by:
 10044 ;;		_efgtoa
 10045 ;; This function uses a non-reentrant model
 10046 ;;
 10047                           
 10048                           	psect	text37
 10049   002D8C                     __ptext37:
 10050                           	callstack 0
 10051   002D8C                     _floorf:
 10052                           	callstack 24
 10053   002D8C  C119  F066         	movff	floorf@F521,floorf@u
 10054   002D90  C11A  F067         	movff	floorf@F521+1,floorf@u+1
 10055   002D94  C11B  F068         	movff	floorf@F521+2,floorf@u+2
 10056   002D98  C11C  F069         	movff	floorf@F521+3,floorf@u+3
 10057   002D9C  C046  F066         	movff	floorf@x,floorf@u
 10058   002DA0  C047  F067         	movff	floorf@x+1,floorf@u+1
 10059   002DA4  C048  F068         	movff	floorf@x+2,floorf@u+2
 10060   002DA8  C049  F069         	movff	floorf@x+3,floorf@u+3
 10061   002DAC  0E81               	movlw	129
 10062   002DAE  6E4A               	movwf	??_floorf^0,c
 10063   002DB0  0EFF               	movlw	255
 10064   002DB2  6E4B               	movwf	(??_floorf+1)^0,c
 10065   002DB4  C066  F04C         	movff	floorf@u,??_floorf+2
 10066   002DB8  C067  F04D         	movff	floorf@u+1,??_floorf+3
 10067   002DBC  C068  F04E         	movff	floorf@u+2,??_floorf+4
 10068   002DC0  C069  F04F         	movff	floorf@u+3,??_floorf+5
 10069   002DC4  0E18               	movlw	24
 10070   002DC6  EFEA  F016         	goto	u8100
 10071   002DCA                     u8105:
 10072   002DCA  90D8               	bcf	status,0,c
 10073   002DCC  324F               	rrcf	(??_floorf+5)^0,f,c
 10074   002DCE  324E               	rrcf	(??_floorf+4)^0,f,c
 10075   002DD0  324D               	rrcf	(??_floorf+3)^0,f,c
 10076   002DD2  324C               	rrcf	(??_floorf+2)^0,f,c
 10077   002DD4                     u8100:
 10078   002DD4  2EE8               	decfsz	wreg,f,c
 10079   002DD6  EFE5  F016         	goto	u8105
 10080   002DDA  504C               	movf	(??_floorf+2)^0,w,c
 10081   002DDC  244A               	addwf	??_floorf^0,w,c
 10082   002DDE  0100               	movlb	0	; () banked
 10083   002DE0  6F64               	movwf	floorf@e& (0+255),b
 10084   002DE2  0E00               	movlw	0
 10085   002DE4  204B               	addwfc	(??_floorf+1)^0,w,c
 10086   002DE6  6F65               	movwf	(floorf@e+1)& (0+255),b
 10087   002DE8  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 10088   002DEA  EF00  F017         	goto	u8111
 10089   002DEE  5165               	movf	(floorf@e+1)& (0+255),w,b
 10090   002DF0  E109               	bnz	u8110
 10091   002DF2  0E17               	movlw	23
 10092   002DF4  5D64               	subwf	floorf@e& (0+255),w,b
 10093   002DF6  A0D8               	btfss	status,0,c
 10094   002DF8  EF00  F017         	goto	u8111
 10095   002DFC  EF02  F017         	goto	u8110
 10096   002E00                     u8111:
 10097   002E00  EF0C  F017         	goto	l6666
 10098   002E04                     u8110:
 10099   002E04                     l6664:
 10100                           
 10101                           ; BSR set to: 0
 10102   002E04  C046  F046         	movff	floorf@x,?_floorf
 10103   002E08  C047  F047         	movff	floorf@x+1,?_floorf+1
 10104   002E0C  C048  F048         	movff	floorf@x+2,?_floorf+2
 10105   002E10  C049  F049         	movff	floorf@x+3,?_floorf+3
 10106   002E14  EFD0  F017         	goto	l1534
 10107   002E18                     l6666:
 10108                           
 10109                           ; BSR set to: 0
 10110   002E18  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 10111   002E1A  EF11  F017         	goto	u8121
 10112   002E1E  EF13  F017         	goto	u8120
 10113   002E22                     u8121:
 10114   002E22  EF84  F017         	goto	l6676
 10115   002E26                     u8120:
 10116   002E26                     
 10117                           ; BSR set to: 0
 10118   002E26  C064  F04A         	movff	floorf@e,??_floorf
 10119   002E2A  0EFF               	movlw	255
 10120   002E2C  6E4B               	movwf	(??_floorf+1)^0,c
 10121   002E2E  0EFF               	movlw	255
 10122   002E30  6E4C               	movwf	(??_floorf+2)^0,c
 10123   002E32  0E7F               	movlw	127
 10124   002E34  6E4D               	movwf	(??_floorf+3)^0,c
 10125   002E36  0E00               	movlw	0
 10126   002E38  6E4E               	movwf	(??_floorf+4)^0,c
 10127   002E3A                     u8135:
 10128   002E3A  664A               	tstfsz	??_floorf^0,c
 10129   002E3C  EF22  F017         	goto	u8136
 10130   002E40  EF2A  F017         	goto	u8137
 10131   002E44                     u8136:
 10132   002E44  344E               	rlcf	(??_floorf+4)^0,w,c
 10133   002E46  324E               	rrcf	(??_floorf+4)^0,f,c
 10134   002E48  324D               	rrcf	(??_floorf+3)^0,f,c
 10135   002E4A  324C               	rrcf	(??_floorf+2)^0,f,c
 10136   002E4C  324B               	rrcf	(??_floorf+1)^0,f,c
 10137   002E4E  2E4A               	decfsz	??_floorf^0,f,c
 10138   002E50  EF1D  F017         	goto	u8135
 10139   002E54                     u8137:
 10140   002E54  C04B  F060         	movff	??_floorf+1,floorf@m
 10141   002E58  C04C  F061         	movff	??_floorf+2,floorf@m+1
 10142   002E5C  C04D  F062         	movff	??_floorf+3,floorf@m+2
 10143   002E60  C04E  F063         	movff	??_floorf+4,floorf@m+3
 10144   002E64  0100               	movlb	0	; () banked
 10145   002E66  5160               	movf	floorf@m& (0+255),w,b
 10146   002E68  1566               	andwf	floorf@u& (0+255),w,b
 10147   002E6A  6E4A               	movwf	??_floorf^0,c
 10148   002E6C  5161               	movf	(floorf@m+1)& (0+255),w,b
 10149   002E6E  1567               	andwf	(floorf@u+1)& (0+255),w,b
 10150   002E70  6E4B               	movwf	(??_floorf+1)^0,c
 10151   002E72  5162               	movf	(floorf@m+2)& (0+255),w,b
 10152   002E74  1568               	andwf	(floorf@u+2)& (0+255),w,b
 10153   002E76  6E4C               	movwf	(??_floorf+2)^0,c
 10154   002E78  5163               	movf	(floorf@m+3)& (0+255),w,b
 10155   002E7A  1569               	andwf	(floorf@u+3)& (0+255),w,b
 10156   002E7C  6E4D               	movwf	(??_floorf+3)^0,c
 10157   002E7E  504A               	movf	??_floorf^0,w,c
 10158   002E80  104B               	iorwf	(??_floorf+1)^0,w,c
 10159   002E82  104C               	iorwf	(??_floorf+2)^0,w,c
 10160   002E84  104D               	iorwf	(??_floorf+3)^0,w,c
 10161   002E86  A4D8               	btfss	status,2,c
 10162   002E88  EF48  F017         	goto	u8141
 10163   002E8C  EF4A  F017         	goto	u8140
 10164   002E90                     u8141:
 10165   002E90  EF4C  F017         	goto	l6672
 10166   002E94                     u8140:
 10167   002E94  EF02  F017         	goto	l6664
 10168   002E98                     l6672:
 10169                           
 10170                           ; BSR set to: 0
 10171   002E98  C066  F04A         	movff	floorf@u,??_floorf
 10172   002E9C  C067  F04B         	movff	floorf@u+1,??_floorf+1
 10173   002EA0  C068  F04C         	movff	floorf@u+2,??_floorf+2
 10174   002EA4  C069  F04D         	movff	floorf@u+3,??_floorf+3
 10175   002EA8  0E20               	movlw	32
 10176   002EAA  EF5C  F017         	goto	u8150
 10177   002EAE                     u8155:
 10178   002EAE  90D8               	bcf	status,0,c
 10179   002EB0  324D               	rrcf	(??_floorf+3)^0,f,c
 10180   002EB2  324C               	rrcf	(??_floorf+2)^0,f,c
 10181   002EB4  324B               	rrcf	(??_floorf+1)^0,f,c
 10182   002EB6  324A               	rrcf	??_floorf^0,f,c
 10183   002EB8                     u8150:
 10184   002EB8  2EE8               	decfsz	wreg,f,c
 10185   002EBA  EF57  F017         	goto	u8155
 10186   002EBE  504A               	movf	??_floorf^0,w,c
 10187   002EC0  104B               	iorwf	(??_floorf+1)^0,w,c
 10188   002EC2  104C               	iorwf	(??_floorf+2)^0,w,c
 10189   002EC4  104D               	iorwf	(??_floorf+3)^0,w,c
 10190   002EC6  B4D8               	btfsc	status,2,c
 10191   002EC8  EF68  F017         	goto	u8161
 10192   002ECC  EF6A  F017         	goto	u8160
 10193   002ED0                     u8161:
 10194   002ED0  EF72  F017         	goto	l1537
 10195   002ED4                     u8160:
 10196   002ED4                     
 10197                           ; BSR set to: 0
 10198   002ED4  5160               	movf	floorf@m& (0+255),w,b
 10199   002ED6  2766               	addwf	floorf@u& (0+255),f,b
 10200   002ED8  5161               	movf	(floorf@m+1)& (0+255),w,b
 10201   002EDA  2367               	addwfc	(floorf@u+1)& (0+255),f,b
 10202   002EDC  5162               	movf	(floorf@m+2)& (0+255),w,b
 10203   002EDE  2368               	addwfc	(floorf@u+2)& (0+255),f,b
 10204   002EE0  5163               	movf	(floorf@m+3)& (0+255),w,b
 10205   002EE2  2369               	addwfc	(floorf@u+3)& (0+255),f,b
 10206   002EE4                     l1537:
 10207                           
 10208                           ; BSR set to: 0
 10209   002EE4  1D60               	comf	floorf@m& (0+255),w,b
 10210   002EE6  6E4A               	movwf	??_floorf^0,c
 10211   002EE8  1D61               	comf	(floorf@m+1)& (0+255),w,b
 10212   002EEA  6E4B               	movwf	(??_floorf+1)^0,c
 10213   002EEC  1D62               	comf	(floorf@m+2)& (0+255),w,b
 10214   002EEE  6E4C               	movwf	(??_floorf+2)^0,c
 10215   002EF0  1D63               	comf	(floorf@m+3)& (0+255),w,b
 10216   002EF2  6E4D               	movwf	(??_floorf+3)^0,c
 10217   002EF4  504A               	movf	??_floorf^0,w,c
 10218   002EF6  1766               	andwf	floorf@u& (0+255),f,b
 10219   002EF8  504B               	movf	(??_floorf+1)^0,w,c
 10220   002EFA  1767               	andwf	(floorf@u+1)& (0+255),f,b
 10221   002EFC  504C               	movf	(??_floorf+2)^0,w,c
 10222   002EFE  1768               	andwf	(floorf@u+2)& (0+255),f,b
 10223   002F00  504D               	movf	(??_floorf+3)^0,w,c
 10224   002F02  1769               	andwf	(floorf@u+3)& (0+255),f,b
 10225   002F04  EFC8  F017         	goto	l6684
 10226   002F08                     l6676:
 10227                           
 10228                           ; BSR set to: 0
 10229   002F08  C066  F04A         	movff	floorf@u,??_floorf
 10230   002F0C  C067  F04B         	movff	floorf@u+1,??_floorf+1
 10231   002F10  C068  F04C         	movff	floorf@u+2,??_floorf+2
 10232   002F14  C069  F04D         	movff	floorf@u+3,??_floorf+3
 10233   002F18  0E20               	movlw	32
 10234   002F1A  EF94  F017         	goto	u8170
 10235   002F1E                     u8175:
 10236   002F1E  90D8               	bcf	status,0,c
 10237   002F20  324D               	rrcf	(??_floorf+3)^0,f,c
 10238   002F22  324C               	rrcf	(??_floorf+2)^0,f,c
 10239   002F24  324B               	rrcf	(??_floorf+1)^0,f,c
 10240   002F26  324A               	rrcf	??_floorf^0,f,c
 10241   002F28                     u8170:
 10242   002F28  2EE8               	decfsz	wreg,f,c
 10243   002F2A  EF8F  F017         	goto	u8175
 10244   002F2E  504A               	movf	??_floorf^0,w,c
 10245   002F30  104B               	iorwf	(??_floorf+1)^0,w,c
 10246   002F32  104C               	iorwf	(??_floorf+2)^0,w,c
 10247   002F34  104D               	iorwf	(??_floorf+3)^0,w,c
 10248   002F36  A4D8               	btfss	status,2,c
 10249   002F38  EFA0  F017         	goto	u8181
 10250   002F3C  EFA2  F017         	goto	u8180
 10251   002F40                     u8181:
 10252   002F40  EFAC  F017         	goto	l6680
 10253   002F44                     u8180:
 10254   002F44                     
 10255                           ; BSR set to: 0
 10256   002F44  0E00               	movlw	0
 10257   002F46  6F66               	movwf	floorf@u& (0+255),b
 10258   002F48  0E00               	movlw	0
 10259   002F4A  6F67               	movwf	(floorf@u+1)& (0+255),b
 10260   002F4C  0E00               	movlw	0
 10261   002F4E  6F68               	movwf	(floorf@u+2)& (0+255),b
 10262   002F50  0E00               	movlw	0
 10263   002F52  6F69               	movwf	(floorf@u+3)& (0+255),b
 10264   002F54  EFC8  F017         	goto	l6684
 10265   002F58                     l6680:
 10266                           
 10267                           ; BSR set to: 0
 10268   002F58  90D8               	bcf	status,0,c
 10269   002F5A  3566               	rlcf	floorf@u& (0+255),w,b
 10270   002F5C  6E4A               	movwf	??_floorf^0,c
 10271   002F5E  3567               	rlcf	(floorf@u+1)& (0+255),w,b
 10272   002F60  6E4B               	movwf	(??_floorf+1)^0,c
 10273   002F62  3568               	rlcf	(floorf@u+2)& (0+255),w,b
 10274   002F64  6E4C               	movwf	(??_floorf+2)^0,c
 10275   002F66  3569               	rlcf	(floorf@u+3)& (0+255),w,b
 10276   002F68  6E4D               	movwf	(??_floorf+3)^0,c
 10277   002F6A  504A               	movf	??_floorf^0,w,c
 10278   002F6C  104B               	iorwf	(??_floorf+1)^0,w,c
 10279   002F6E  104C               	iorwf	(??_floorf+2)^0,w,c
 10280   002F70  104D               	iorwf	(??_floorf+3)^0,w,c
 10281   002F72  B4D8               	btfsc	status,2,c
 10282   002F74  EFBE  F017         	goto	u8191
 10283   002F78  EFC0  F017         	goto	u8190
 10284   002F7C                     u8191:
 10285   002F7C  EFC8  F017         	goto	l6684
 10286   002F80                     u8190:
 10287   002F80                     
 10288                           ; BSR set to: 0
 10289   002F80  0E00               	movlw	0
 10290   002F82  6F66               	movwf	floorf@u& (0+255),b
 10291   002F84  0E00               	movlw	0
 10292   002F86  6F67               	movwf	(floorf@u+1)& (0+255),b
 10293   002F88  0E80               	movlw	128
 10294   002F8A  6F68               	movwf	(floorf@u+2)& (0+255),b
 10295   002F8C  0EBF               	movlw	191
 10296   002F8E  6F69               	movwf	(floorf@u+3)& (0+255),b
 10297   002F90                     l6684:
 10298                           
 10299                           ; BSR set to: 0
 10300   002F90  C066  F046         	movff	floorf@u,?_floorf
 10301   002F94  C067  F047         	movff	floorf@u+1,?_floorf+1
 10302   002F98  C068  F048         	movff	floorf@u+2,?_floorf+2
 10303   002F9C  C069  F049         	movff	floorf@u+3,?_floorf+3
 10304   002FA0                     l1534:
 10305                           
 10306                           ; BSR set to: 0
 10307   002FA0  0012               	return		;funcret
 10308   002FA2                     __end_of_floorf:
 10309                           	callstack 0
 10310                           
 10311 ;; *************** function ___fpclassifyf *****************
 10312 ;; Defined at:
 10313 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__fpclassifyf.c"
 10314 ;; Parameters:    Size  Location     Type
 10315 ;;  x               4    5[COMRAM] float 
 10316 ;; Auto vars:     Size  Location     Type
 10317 ;;  u               4   15[COMRAM] struct .
 10318 ;;  e               2   13[COMRAM] int 
 10319 ;; Return value:  Size  Location     Type
 10320 ;;                  2    5[COMRAM] int 
 10321 ;; Registers used:
 10322 ;;		wreg, status,2, status,0
 10323 ;; Tracked objects:
 10324 ;;		On entry : 0/0
 10325 ;;		On exit  : 0/0
 10326 ;;		Unchanged: 0/0
 10327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10329 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10330 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10331 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10332 ;;Total ram usage:       14 bytes
 10333 ;; Hardware stack levels used: 1
 10334 ;; Hardware stack levels required when called: 1
 10335 ;; This function calls:
 10336 ;;		Nothing
 10337 ;; This function is called by:
 10338 ;;		_efgtoa
 10339 ;; This function uses a non-reentrant model
 10340 ;;
 10341                           
 10342                           	psect	text38
 10343   0040CA                     __ptext38:
 10344                           	callstack 0
 10345   0040CA                     ___fpclassifyf:
 10346                           	callstack 24
 10347   0040CA  C11D  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
 10348   0040CE  C11E  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 10349   0040D2  C11F  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 10350   0040D6  C120  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 10351   0040DA  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 10352   0040DE  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10353   0040E2  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10354   0040E6  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10355   0040EA  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 10356   0040EE  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10357   0040F2  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10358   0040F6  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10359   0040FA  0E18               	movlw	24
 10360   0040FC  EF85  F020         	goto	u8010
 10361   004100                     u8015:
 10362   004100  90D8               	bcf	status,0,c
 10363   004102  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 10364   004104  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 10365   004106  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 10366   004108  320A               	rrcf	??___fpclassifyf^0,f,c
 10367   00410A                     u8010:
 10368   00410A  2EE8               	decfsz	wreg,f,c
 10369   00410C  EF80  F020         	goto	u8015
 10370   004110  500A               	movf	??___fpclassifyf^0,w,c
 10371   004112  6E0E               	movwf	___fpclassifyf@e^0,c
 10372   004114  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 10373   004116  500E               	movf	___fpclassifyf@e^0,w,c
 10374   004118  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10375   00411A  A4D8               	btfss	status,2,c
 10376   00411C  EF92  F020         	goto	u8021
 10377   004120  EF94  F020         	goto	u8020
 10378   004124                     u8021:
 10379   004124  EFB4  F020         	goto	l6638
 10380   004128                     u8020:
 10381   004128  90D8               	bcf	status,0,c
 10382   00412A  3410               	rlcf	___fpclassifyf@u^0,w,c
 10383   00412C  6E0A               	movwf	??___fpclassifyf^0,c
 10384   00412E  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 10385   004130  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 10386   004132  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 10387   004134  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 10388   004136  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 10389   004138  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 10390   00413A  500A               	movf	??___fpclassifyf^0,w,c
 10391   00413C  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 10392   00413E  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 10393   004140  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 10394   004142  A4D8               	btfss	status,2,c
 10395   004144  EFA6  F020         	goto	u8031
 10396   004148  EFA8  F020         	goto	u8030
 10397   00414C                     u8031:
 10398   00414C  EFAE  F020         	goto	l6634
 10399   004150                     u8030:
 10400   004150  0E00               	movlw	0
 10401   004152  6E07               	movwf	(?___fpclassifyf+1)^0,c
 10402   004154  0E02               	movlw	2
 10403   004156  6E06               	movwf	?___fpclassifyf^0,c
 10404   004158  EFE3  F020         	goto	l1520
 10405   00415C                     l6634:
 10406   00415C  0E00               	movlw	0
 10407   00415E  6E07               	movwf	(?___fpclassifyf+1)^0,c
 10408   004160  0E03               	movlw	3
 10409   004162  6E06               	movwf	?___fpclassifyf^0,c
 10410   004164  EFE3  F020         	goto	l1520
 10411   004168                     l6638:
 10412   004168  280E               	incf	___fpclassifyf@e^0,w,c
 10413   00416A  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10414   00416C  A4D8               	btfss	status,2,c
 10415   00416E  EFBB  F020         	goto	u8041
 10416   004172  EFBD  F020         	goto	u8040
 10417   004176                     u8041:
 10418   004176  EFDF  F020         	goto	l6644
 10419   00417A                     u8040:
 10420   00417A  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 10421   00417E  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10422   004182  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10423   004186  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10424   00418A  0E09               	movlw	9
 10425   00418C                     u8055:
 10426   00418C  90D8               	bcf	status,0,c
 10427   00418E  360A               	rlcf	??___fpclassifyf^0,f,c
 10428   004190  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 10429   004192  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 10430   004194  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 10431   004196  2EE8               	decfsz	wreg,f,c
 10432   004198  EFC6  F020         	goto	u8055
 10433   00419C  500A               	movf	??___fpclassifyf^0,w,c
 10434   00419E  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 10435   0041A0  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 10436   0041A2  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 10437   0041A4  B4D8               	btfsc	status,2,c
 10438   0041A6  EFD7  F020         	goto	u8061
 10439   0041AA  EFDA  F020         	goto	u8060
 10440   0041AE                     u8061:
 10441   0041AE  0E01               	movlw	1
 10442   0041B0  EFDB  F020         	goto	u8070
 10443   0041B4                     u8060:
 10444   0041B4  0E00               	movlw	0
 10445   0041B6                     u8070:
 10446   0041B6  6E06               	movwf	?___fpclassifyf^0,c
 10447   0041B8  6A07               	clrf	(?___fpclassifyf+1)^0,c
 10448   0041BA  EFE3  F020         	goto	l1520
 10449   0041BE                     l6644:
 10450   0041BE  0E00               	movlw	0
 10451   0041C0  6E07               	movwf	(?___fpclassifyf+1)^0,c
 10452   0041C2  0E04               	movlw	4
 10453   0041C4  6E06               	movwf	?___fpclassifyf^0,c
 10454   0041C6                     l1520:
 10455   0041C6  0012               	return		;funcret
 10456   0041C8                     __end_of___fpclassifyf:
 10457                           	callstack 0
 10458                           
 10459 ;; *************** function ___fltol *****************
 10460 ;; Defined at:
 10461 ;;		line 43 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fltol.c"
 10462 ;; Parameters:    Size  Location     Type
 10463 ;;  f1              4    4[BANK0 ] int 
 10464 ;; Auto vars:     Size  Location     Type
 10465 ;;  exp1            1   82[COMRAM] unsigned char 
 10466 ;;  sign1           1   81[COMRAM] unsigned char 
 10467 ;; Return value:  Size  Location     Type
 10468 ;;                  4    4[BANK0 ] long 
 10469 ;; Registers used:
 10470 ;;		wreg, status,2, status,0
 10471 ;; Tracked objects:
 10472 ;;		On entry : 0/0
 10473 ;;		On exit  : 0/0
 10474 ;;		Unchanged: 0/0
 10475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10476 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10477 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10478 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10480 ;;Total ram usage:       10 bytes
 10481 ;; Hardware stack levels used: 1
 10482 ;; Hardware stack levels required when called: 1
 10483 ;; This function calls:
 10484 ;;		Nothing
 10485 ;; This function is called by:
 10486 ;;		_runDAC
 10487 ;;		_efgtoa
 10488 ;;		___rem_pio2f
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492                           	psect	text39
 10493   003EBE                     __ptext39:
 10494                           	callstack 0
 10495   003EBE                     ___fltol:
 10496                           	callstack 24
 10497   003EBE  0100               	movlb	0	; () banked
 10498   003EC0  3566               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10499   003EC2  3567               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10500   003EC4  6E53               	movwf	___fltol@exp1^0,c
 10501   003EC6  5053               	movf	___fltol@exp1^0,w,c
 10502   003EC8  A4D8               	btfss	status,2,c
 10503   003ECA  EF69  F01F         	goto	u7831
 10504   003ECE  EF6B  F01F         	goto	u7830
 10505   003ED2                     u7831:
 10506   003ED2  EF75  F01F         	goto	l6530
 10507   003ED6                     u7830:
 10508   003ED6                     l6526:
 10509                           
 10510                           ; BSR set to: 0
 10511   003ED6  0E00               	movlw	0
 10512   003ED8  6F64               	movwf	?___fltol& (0+255),b
 10513   003EDA  0E00               	movlw	0
 10514   003EDC  6F65               	movwf	(?___fltol+1)& (0+255),b
 10515   003EDE  0E00               	movlw	0
 10516   003EE0  6F66               	movwf	(?___fltol+2)& (0+255),b
 10517   003EE2  0E00               	movlw	0
 10518   003EE4  6F67               	movwf	(?___fltol+3)& (0+255),b
 10519   003EE6  EFE2  F01F         	goto	l921
 10520   003EEA                     l6530:
 10521                           
 10522                           ; BSR set to: 0
 10523   003EEA  C064  F068         	movff	___fltol@f1,??___fltol
 10524   003EEE  C065  F069         	movff	___fltol@f1+1,??___fltol+1
 10525   003EF2  C066  F06A         	movff	___fltol@f1+2,??___fltol+2
 10526   003EF6  C067  F06B         	movff	___fltol@f1+3,??___fltol+3
 10527   003EFA  0E20               	movlw	32
 10528   003EFC  EF85  F01F         	goto	u7840
 10529   003F00                     u7845:
 10530   003F00  90D8               	bcf	status,0,c
 10531   003F02  336B               	rrcf	(??___fltol+3)& (0+255),f,b
 10532   003F04  336A               	rrcf	(??___fltol+2)& (0+255),f,b
 10533   003F06  3369               	rrcf	(??___fltol+1)& (0+255),f,b
 10534   003F08  3368               	rrcf	??___fltol& (0+255),f,b
 10535   003F0A                     u7840:
 10536   003F0A  2EE8               	decfsz	wreg,f,c
 10537   003F0C  EF80  F01F         	goto	u7845
 10538   003F10  5168               	movf	??___fltol& (0+255),w,b
 10539   003F12  6E52               	movwf	___fltol@sign1^0,c
 10540   003F14                     
 10541                           ; BSR set to: 0
 10542   003F14  8F66               	bsf	(___fltol@f1+2)& (0+255),7,b
 10543   003F16                     
 10544                           ; BSR set to: 0
 10545   003F16  0EFF               	movlw	255
 10546   003F18  1764               	andwf	___fltol@f1& (0+255),f,b
 10547   003F1A  0EFF               	movlw	255
 10548   003F1C  1765               	andwf	(___fltol@f1+1)& (0+255),f,b
 10549   003F1E  0EFF               	movlw	255
 10550   003F20  1766               	andwf	(___fltol@f1+2)& (0+255),f,b
 10551   003F22  0E00               	movlw	0
 10552   003F24  1767               	andwf	(___fltol@f1+3)& (0+255),f,b
 10553   003F26                     
 10554                           ; BSR set to: 0
 10555   003F26  0E96               	movlw	150
 10556   003F28  5E53               	subwf	___fltol@exp1^0,f,c
 10557   003F2A                     
 10558                           ; BSR set to: 0
 10559   003F2A  BE53               	btfsc	___fltol@exp1^0,7,c
 10560   003F2C  EF9C  F01F         	goto	u7850
 10561   003F30  EF9A  F01F         	goto	u7851
 10562   003F34                     u7851:
 10563   003F34  EFB2  F01F         	goto	l6550
 10564   003F38                     u7850:
 10565   003F38                     
 10566                           ; BSR set to: 0
 10567   003F38  5053               	movf	___fltol@exp1^0,w,c
 10568   003F3A  0A80               	xorlw	128
 10569   003F3C  0F97               	addlw	151
 10570   003F3E  B0D8               	btfsc	status,0,c
 10571   003F40  EFA4  F01F         	goto	u7861
 10572   003F44  EFA6  F01F         	goto	u7860
 10573   003F48                     u7861:
 10574   003F48  EFA8  F01F         	goto	l6546
 10575   003F4C                     u7860:
 10576   003F4C  EF6B  F01F         	goto	l6526
 10577   003F50                     l6546:
 10578                           
 10579                           ; BSR set to: 0
 10580   003F50  90D8               	bcf	status,0,c
 10581   003F52  3367               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10582   003F54  3366               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10583   003F56  3365               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10584   003F58  3364               	rrcf	___fltol@f1& (0+255),f,b
 10585   003F5A                     
 10586                           ; BSR set to: 0
 10587   003F5A  3E53               	incfsz	___fltol@exp1^0,f,c
 10588   003F5C  EFA8  F01F         	goto	l6546
 10589   003F60  EFCA  F01F         	goto	l6560
 10590   003F64                     l6550:
 10591                           
 10592                           ; BSR set to: 0
 10593   003F64  0E1F               	movlw	31
 10594   003F66  6453               	cpfsgt	___fltol@exp1^0,c
 10595   003F68  EFB8  F01F         	goto	u7871
 10596   003F6C  EFBA  F01F         	goto	u7870
 10597   003F70                     u7871:
 10598   003F70  EFC2  F01F         	goto	l6558
 10599   003F74                     u7870:
 10600   003F74  EF6B  F01F         	goto	l6526
 10601   003F78                     l6556:
 10602                           
 10603                           ; BSR set to: 0
 10604   003F78  90D8               	bcf	status,0,c
 10605   003F7A  3764               	rlcf	___fltol@f1& (0+255),f,b
 10606   003F7C  3765               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10607   003F7E  3766               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10608   003F80  3767               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10609   003F82  0653               	decf	___fltol@exp1^0,f,c
 10610   003F84                     l6558:
 10611                           
 10612                           ; BSR set to: 0
 10613   003F84  5053               	movf	___fltol@exp1^0,w,c
 10614   003F86  A4D8               	btfss	status,2,c
 10615   003F88  EFC8  F01F         	goto	u7881
 10616   003F8C  EFCA  F01F         	goto	u7880
 10617   003F90                     u7881:
 10618   003F90  EFBC  F01F         	goto	l6556
 10619   003F94                     u7880:
 10620   003F94                     l6560:
 10621                           
 10622                           ; BSR set to: 0
 10623   003F94  5052               	movf	___fltol@sign1^0,w,c
 10624   003F96  B4D8               	btfsc	status,2,c
 10625   003F98  EFD0  F01F         	goto	u7891
 10626   003F9C  EFD2  F01F         	goto	u7890
 10627   003FA0                     u7891:
 10628   003FA0  EFDA  F01F         	goto	l6564
 10629   003FA4                     u7890:
 10630   003FA4                     
 10631                           ; BSR set to: 0
 10632   003FA4  1F67               	comf	(___fltol@f1+3)& (0+255),f,b
 10633   003FA6  1F66               	comf	(___fltol@f1+2)& (0+255),f,b
 10634   003FA8  1F65               	comf	(___fltol@f1+1)& (0+255),f,b
 10635   003FAA  6D64               	negf	___fltol@f1& (0+255),b
 10636   003FAC  0E00               	movlw	0
 10637   003FAE  2365               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10638   003FB0  2366               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10639   003FB2  2367               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10640   003FB4                     l6564:
 10641                           
 10642                           ; BSR set to: 0
 10643   003FB4  C064  F064         	movff	___fltol@f1,?___fltol
 10644   003FB8  C065  F065         	movff	___fltol@f1+1,?___fltol+1
 10645   003FBC  C066  F066         	movff	___fltol@f1+2,?___fltol+2
 10646   003FC0  C067  F067         	movff	___fltol@f1+3,?___fltol+3
 10647   003FC4                     l921:
 10648                           
 10649                           ; BSR set to: 0
 10650   003FC4  0012               	return		;funcret
 10651   003FC6                     __end_of___fltol:
 10652                           	callstack 0
 10653                           
 10654 ;; *************** function ___flsub *****************
 10655 ;; Defined at:
 10656 ;;		line 245 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 10657 ;; Parameters:    Size  Location     Type
 10658 ;;  b               4    4[BANK0 ] long 
 10659 ;;  a               4    8[BANK0 ] long 
 10660 ;; Auto vars:     Size  Location     Type
 10661 ;;		None
 10662 ;; Return value:  Size  Location     Type
 10663 ;;                  4    4[BANK0 ] long 
 10664 ;; Registers used:
 10665 ;;		wreg, status,2, status,0, cstack
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10671 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10674 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10675 ;;Total ram usage:        8 bytes
 10676 ;; Hardware stack levels used: 1
 10677 ;; Hardware stack levels required when called: 2
 10678 ;; This function calls:
 10679 ;;		___fladd
 10680 ;; This function is called by:
 10681 ;;		_efgtoa
 10682 ;;		___rem_pio2f
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686                           	psect	text40
 10687   004A94                     __ptext40:
 10688                           	callstack 0
 10689   004A94                     ___flsub:
 10690                           	callstack 23
 10691   004A94  0E00               	movlw	0
 10692   004A96  0100               	movlb	0	; () banked
 10693   004A98  1B68               	xorwf	___flsub@a& (0+255),f,b
 10694   004A9A  0E00               	movlw	0
 10695   004A9C  1B69               	xorwf	(___flsub@a+1)& (0+255),f,b
 10696   004A9E  0E00               	movlw	0
 10697   004AA0  1B6A               	xorwf	(___flsub@a+2)& (0+255),f,b
 10698   004AA2  0E80               	movlw	128
 10699   004AA4  1B6B               	xorwf	(___flsub@a+3)& (0+255),f,b
 10700   004AA6                     
 10701                           ; BSR set to: 0
 10702   004AA6  C064  F046         	movff	___flsub@b,___fladd@b
 10703   004AAA  C065  F047         	movff	___flsub@b+1,___fladd@b+1
 10704   004AAE  C066  F048         	movff	___flsub@b+2,___fladd@b+2
 10705   004AB2  C067  F049         	movff	___flsub@b+3,___fladd@b+3
 10706   004AB6  C068  F04A         	movff	___flsub@a,___fladd@a
 10707   004ABA  C069  F04B         	movff	___flsub@a+1,___fladd@a+1
 10708   004ABE  C06A  F04C         	movff	___flsub@a+2,___fladd@a+2
 10709   004AC2  C06B  F04D         	movff	___flsub@a+3,___fladd@a+3
 10710   004AC6  ECBC  F00A         	call	___fladd	;wreg free
 10711   004ACA  C046  F064         	movff	?___fladd,?___flsub
 10712   004ACE  C047  F065         	movff	?___fladd+1,?___flsub+1
 10713   004AD2  C048  F066         	movff	?___fladd+2,?___flsub+2
 10714   004AD6  C049  F067         	movff	?___fladd+3,?___flsub+3
 10715   004ADA  0012               	return		;funcret
 10716   004ADC                     __end_of___flsub:
 10717                           	callstack 0
 10718                           
 10719 ;; *************** function ___fladd *****************
 10720 ;; Defined at:
 10721 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 10722 ;; Parameters:    Size  Location     Type
 10723 ;;  b               4   69[COMRAM] long 
 10724 ;;  a               4   73[COMRAM] long 
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;  grs             1    3[BANK0 ] unsigned char 
 10727 ;;  bexp            1    2[BANK0 ] unsigned char 
 10728 ;;  aexp            1    1[BANK0 ] unsigned char 
 10729 ;;  signs           1    0[BANK0 ] unsigned char 
 10730 ;; Return value:  Size  Location     Type
 10731 ;;                  4   69[COMRAM] unsigned char 
 10732 ;; Registers used:
 10733 ;;		wreg, status,2, status,0
 10734 ;; Tracked objects:
 10735 ;;		On entry : 0/0
 10736 ;;		On exit  : 0/0
 10737 ;;		Unchanged: 0/0
 10738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10739 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10740 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10741 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10742 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10743 ;;Total ram usage:       16 bytes
 10744 ;; Hardware stack levels used: 1
 10745 ;; Hardware stack levels required when called: 1
 10746 ;; This function calls:
 10747 ;;		Nothing
 10748 ;; This function is called by:
 10749 ;;		_runDAC
 10750 ;;		___flsub
 10751 ;;		_efgtoa
 10752 ;;		_sinf
 10753 ;;		___cosdf
 10754 ;;		___rem_pio2f
 10755 ;;		___sindf
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text41
 10760   001578                     __ptext41:
 10761                           	callstack 0
 10762   001578                     ___fladd:
 10763                           	callstack 23
 10764   001578  5049               	movf	(___fladd@b+3)^0,w,c
 10765   00157A  0B80               	andlw	128
 10766   00157C  0100               	movlb	0	; () banked
 10767   00157E  6F60               	movwf	___fladd@signs& (0+255),b
 10768   001580  5049               	movf	(___fladd@b+3)^0,w,c
 10769   001582  2449               	addwf	(___fladd@b+3)^0,w,c
 10770   001584  6F62               	movwf	___fladd@bexp& (0+255),b
 10771   001586                     
 10772                           ; BSR set to: 0
 10773   001586  AE48               	btfss	(___fladd@b+2)^0,7,c
 10774   001588  EFC8  F00A         	goto	u6801
 10775   00158C  EFCA  F00A         	goto	u6800
 10776   001590                     u6801:
 10777   001590  EFCB  F00A         	goto	l5914
 10778   001594                     u6800:
 10779   001594                     
 10780                           ; BSR set to: 0
 10781   001594  8162               	bsf	___fladd@bexp& (0+255),0,b
 10782   001596                     l5914:
 10783                           
 10784                           ; BSR set to: 0
 10785   001596  5162               	movf	___fladd@bexp& (0+255),w,b
 10786   001598  B4D8               	btfsc	status,2,c
 10787   00159A  EFD1  F00A         	goto	u6811
 10788   00159E  EFD3  F00A         	goto	u6810
 10789   0015A2                     u6811:
 10790   0015A2  EFE8  F00A         	goto	l5924
 10791   0015A6                     u6810:
 10792   0015A6                     
 10793                           ; BSR set to: 0
 10794   0015A6  2962               	incf	___fladd@bexp& (0+255),w,b
 10795   0015A8  A4D8               	btfss	status,2,c
 10796   0015AA  EFD9  F00A         	goto	u6821
 10797   0015AE  EFDB  F00A         	goto	u6820
 10798   0015B2                     u6821:
 10799   0015B2  EFE3  F00A         	goto	l5920
 10800   0015B6                     u6820:
 10801   0015B6                     
 10802                           ; BSR set to: 0
 10803   0015B6  0E00               	movlw	0
 10804   0015B8  6E46               	movwf	___fladd@b^0,c
 10805   0015BA  0E00               	movlw	0
 10806   0015BC  6E47               	movwf	(___fladd@b+1)^0,c
 10807   0015BE  0E00               	movlw	0
 10808   0015C0  6E48               	movwf	(___fladd@b+2)^0,c
 10809   0015C2  0E00               	movlw	0
 10810   0015C4  6E49               	movwf	(___fladd@b+3)^0,c
 10811   0015C6                     l5920:
 10812                           
 10813                           ; BSR set to: 0
 10814   0015C6  8E48               	bsf	(___fladd@b+2)^0,7,c
 10815   0015C8                     
 10816                           ; BSR set to: 0
 10817   0015C8  0E00               	movlw	0
 10818   0015CA  6E49               	movwf	(___fladd@b+3)^0,c
 10819   0015CC  EFF0  F00A         	goto	l5926
 10820   0015D0                     l5924:
 10821                           
 10822                           ; BSR set to: 0
 10823   0015D0  0E00               	movlw	0
 10824   0015D2  6E46               	movwf	___fladd@b^0,c
 10825   0015D4  0E00               	movlw	0
 10826   0015D6  6E47               	movwf	(___fladd@b+1)^0,c
 10827   0015D8  0E00               	movlw	0
 10828   0015DA  6E48               	movwf	(___fladd@b+2)^0,c
 10829   0015DC  0E00               	movlw	0
 10830   0015DE  6E49               	movwf	(___fladd@b+3)^0,c
 10831   0015E0                     l5926:
 10832                           
 10833                           ; BSR set to: 0
 10834   0015E0  504D               	movf	(___fladd@a+3)^0,w,c
 10835   0015E2  0B80               	andlw	128
 10836   0015E4  6F61               	movwf	___fladd@aexp& (0+255),b
 10837   0015E6                     
 10838                           ; BSR set to: 0
 10839   0015E6  5160               	movf	___fladd@signs& (0+255),w,b
 10840   0015E8  1961               	xorwf	___fladd@aexp& (0+255),w,b
 10841   0015EA  B4D8               	btfsc	status,2,c
 10842   0015EC  EFFA  F00A         	goto	u6831
 10843   0015F0  EFFC  F00A         	goto	u6830
 10844   0015F4                     u6831:
 10845   0015F4  EFFD  F00A         	goto	l5932
 10846   0015F8                     u6830:
 10847   0015F8                     
 10848                           ; BSR set to: 0
 10849   0015F8  8D60               	bsf	___fladd@signs& (0+255),6,b
 10850   0015FA                     l5932:
 10851                           
 10852                           ; BSR set to: 0
 10853   0015FA  504D               	movf	(___fladd@a+3)^0,w,c
 10854   0015FC  244D               	addwf	(___fladd@a+3)^0,w,c
 10855   0015FE  6F61               	movwf	___fladd@aexp& (0+255),b
 10856   001600                     
 10857                           ; BSR set to: 0
 10858   001600  AE4C               	btfss	(___fladd@a+2)^0,7,c
 10859   001602  EF05  F00B         	goto	u6841
 10860   001606  EF07  F00B         	goto	u6840
 10861   00160A                     u6841:
 10862   00160A  EF08  F00B         	goto	l5938
 10863   00160E                     u6840:
 10864   00160E                     
 10865                           ; BSR set to: 0
 10866   00160E  8161               	bsf	___fladd@aexp& (0+255),0,b
 10867   001610                     l5938:
 10868                           
 10869                           ; BSR set to: 0
 10870   001610  5161               	movf	___fladd@aexp& (0+255),w,b
 10871   001612  B4D8               	btfsc	status,2,c
 10872   001614  EF0E  F00B         	goto	u6851
 10873   001618  EF10  F00B         	goto	u6850
 10874   00161C                     u6851:
 10875   00161C  EF25  F00B         	goto	l5948
 10876   001620                     u6850:
 10877   001620                     
 10878                           ; BSR set to: 0
 10879   001620  2961               	incf	___fladd@aexp& (0+255),w,b
 10880   001622  A4D8               	btfss	status,2,c
 10881   001624  EF16  F00B         	goto	u6861
 10882   001628  EF18  F00B         	goto	u6860
 10883   00162C                     u6861:
 10884   00162C  EF20  F00B         	goto	l5944
 10885   001630                     u6860:
 10886   001630                     
 10887                           ; BSR set to: 0
 10888   001630  0E00               	movlw	0
 10889   001632  6E4A               	movwf	___fladd@a^0,c
 10890   001634  0E00               	movlw	0
 10891   001636  6E4B               	movwf	(___fladd@a+1)^0,c
 10892   001638  0E00               	movlw	0
 10893   00163A  6E4C               	movwf	(___fladd@a+2)^0,c
 10894   00163C  0E00               	movlw	0
 10895   00163E  6E4D               	movwf	(___fladd@a+3)^0,c
 10896   001640                     l5944:
 10897                           
 10898                           ; BSR set to: 0
 10899   001640  8E4C               	bsf	(___fladd@a+2)^0,7,c
 10900   001642                     
 10901                           ; BSR set to: 0
 10902   001642  0E00               	movlw	0
 10903   001644  6E4D               	movwf	(___fladd@a+3)^0,c
 10904   001646  EF2D  F00B         	goto	l5950
 10905   00164A                     l5948:
 10906                           
 10907                           ; BSR set to: 0
 10908   00164A  0E00               	movlw	0
 10909   00164C  6E4A               	movwf	___fladd@a^0,c
 10910   00164E  0E00               	movlw	0
 10911   001650  6E4B               	movwf	(___fladd@a+1)^0,c
 10912   001652  0E00               	movlw	0
 10913   001654  6E4C               	movwf	(___fladd@a+2)^0,c
 10914   001656  0E00               	movlw	0
 10915   001658  6E4D               	movwf	(___fladd@a+3)^0,c
 10916   00165A                     l5950:
 10917                           
 10918                           ; BSR set to: 0
 10919   00165A  5162               	movf	___fladd@bexp& (0+255),w,b
 10920   00165C  5D61               	subwf	___fladd@aexp& (0+255),w,b
 10921   00165E  B0D8               	btfsc	status,0,c
 10922   001660  EF34  F00B         	goto	u6871
 10923   001664  EF36  F00B         	goto	u6870
 10924   001668                     u6871:
 10925   001668  EF5D  F00B         	goto	l5986
 10926   00166C                     u6870:
 10927   00166C                     
 10928                           ; BSR set to: 0
 10929   00166C  AD60               	btfss	___fladd@signs& (0+255),6,b
 10930   00166E  EF3B  F00B         	goto	u6881
 10931   001672  EF3D  F00B         	goto	u6880
 10932   001676                     u6881:
 10933   001676  EF3F  F00B         	goto	l5956
 10934   00167A                     u6880:
 10935   00167A                     
 10936                           ; BSR set to: 0
 10937   00167A  0E80               	movlw	128
 10938   00167C  1B60               	xorwf	___fladd@signs& (0+255),f,b
 10939   00167E                     l5956:
 10940                           
 10941                           ; BSR set to: 0
 10942   00167E  C062  F063         	movff	___fladd@bexp,___fladd@grs
 10943   001682                     
 10944                           ; BSR set to: 0
 10945   001682  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 10946   001686                     
 10947                           ; BSR set to: 0
 10948   001686  C063  F061         	movff	___fladd@grs,___fladd@aexp
 10949   00168A                     
 10950                           ; BSR set to: 0
 10951   00168A  C046  F063         	movff	___fladd@b,___fladd@grs
 10952   00168E                     
 10953                           ; BSR set to: 0
 10954   00168E  C04A  F046         	movff	___fladd@a,___fladd@b
 10955   001692                     
 10956                           ; BSR set to: 0
 10957   001692  C063  F04A         	movff	___fladd@grs,___fladd@a
 10958   001696                     
 10959                           ; BSR set to: 0
 10960   001696  C047  F063         	movff	___fladd@b+1,___fladd@grs
 10961   00169A                     
 10962                           ; BSR set to: 0
 10963   00169A  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
 10964   00169E                     
 10965                           ; BSR set to: 0
 10966   00169E  C063  F04B         	movff	___fladd@grs,___fladd@a+1
 10967   0016A2                     
 10968                           ; BSR set to: 0
 10969   0016A2  C048  F063         	movff	___fladd@b+2,___fladd@grs
 10970   0016A6                     
 10971                           ; BSR set to: 0
 10972   0016A6  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
 10973   0016AA                     
 10974                           ; BSR set to: 0
 10975   0016AA  C063  F04C         	movff	___fladd@grs,___fladd@a+2
 10976   0016AE                     
 10977                           ; BSR set to: 0
 10978   0016AE  C049  F063         	movff	___fladd@b+3,___fladd@grs
 10979   0016B2                     
 10980                           ; BSR set to: 0
 10981   0016B2  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
 10982   0016B6                     
 10983                           ; BSR set to: 0
 10984   0016B6  C063  F04D         	movff	___fladd@grs,___fladd@a+3
 10985   0016BA                     l5986:
 10986                           
 10987                           ; BSR set to: 0
 10988   0016BA  0E00               	movlw	0
 10989   0016BC  6F63               	movwf	___fladd@grs& (0+255),b
 10990   0016BE                     
 10991                           ; BSR set to: 0
 10992   0016BE  5162               	movf	___fladd@bexp& (0+255),w,b
 10993   0016C0  C061  F04E         	movff	___fladd@aexp,??___fladd
 10994   0016C4  6A4F               	clrf	(??___fladd+1)^0,c
 10995   0016C6  5E4E               	subwf	??___fladd^0,f,c
 10996   0016C8  0E00               	movlw	0
 10997   0016CA  5A4F               	subwfb	(??___fladd+1)^0,f,c
 10998   0016CC  BE4F               	btfsc	(??___fladd+1)^0,7,c
 10999   0016CE  EF72  F00B         	goto	u6891
 11000   0016D2  504F               	movf	(??___fladd+1)^0,w,c
 11001   0016D4  E109               	bnz	u6890
 11002   0016D6  0E1A               	movlw	26
 11003   0016D8  5C4E               	subwf	??___fladd^0,w,c
 11004   0016DA  A0D8               	btfss	status,0,c
 11005   0016DC  EF72  F00B         	goto	u6891
 11006   0016E0  EF74  F00B         	goto	u6890
 11007   0016E4                     u6891:
 11008   0016E4  EFAB  F00B         	goto	l1153
 11009   0016E8                     u6890:
 11010   0016E8                     
 11011                           ; BSR set to: 0
 11012   0016E8  5046               	movf	___fladd@b^0,w,c
 11013   0016EA  1047               	iorwf	(___fladd@b+1)^0,w,c
 11014   0016EC  1048               	iorwf	(___fladd@b+2)^0,w,c
 11015   0016EE  1049               	iorwf	(___fladd@b+3)^0,w,c
 11016   0016F0  A4D8               	btfss	status,2,c
 11017   0016F2  EF7D  F00B         	goto	u6901
 11018   0016F6  EF80  F00B         	goto	u6900
 11019   0016FA                     u6901:
 11020   0016FA  0E01               	movlw	1
 11021   0016FC  EF81  F00B         	goto	u6910
 11022   001700                     u6900:
 11023   001700  0E00               	movlw	0
 11024   001702                     u6910:
 11025   001702  6F63               	movwf	___fladd@grs& (0+255),b
 11026   001704                     
 11027                           ; BSR set to: 0
 11028   001704  0E00               	movlw	0
 11029   001706  6E46               	movwf	___fladd@b^0,c
 11030   001708  0E00               	movlw	0
 11031   00170A  6E47               	movwf	(___fladd@b+1)^0,c
 11032   00170C  0E00               	movlw	0
 11033   00170E  6E48               	movwf	(___fladd@b+2)^0,c
 11034   001710  0E00               	movlw	0
 11035   001712  6E49               	movwf	(___fladd@b+3)^0,c
 11036   001714                     
 11037                           ; BSR set to: 0
 11038   001714  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 11039   001718  EFB4  F00B         	goto	l1152
 11040   00171C                     l1154:
 11041                           
 11042                           ; BSR set to: 0
 11043   00171C  A163               	btfss	___fladd@grs& (0+255),0,b
 11044   00171E  EF93  F00B         	goto	u6921
 11045   001722  EF95  F00B         	goto	u6920
 11046   001726                     u6921:
 11047   001726  EF9B  F00B         	goto	l5998
 11048   00172A                     u6920:
 11049   00172A                     
 11050                           ; BSR set to: 0
 11051   00172A  90D8               	bcf	status,0,c
 11052   00172C  3163               	rrcf	___fladd@grs& (0+255),w,b
 11053   00172E  0901               	iorlw	1
 11054   001730  6F63               	movwf	___fladd@grs& (0+255),b
 11055   001732  EF9D  F00B         	goto	l6000
 11056   001736                     l5998:
 11057                           
 11058                           ; BSR set to: 0
 11059   001736  90D8               	bcf	status,0,c
 11060   001738  3363               	rrcf	___fladd@grs& (0+255),f,b
 11061   00173A                     l6000:
 11062                           
 11063                           ; BSR set to: 0
 11064   00173A  A046               	btfss	___fladd@b^0,0,c
 11065   00173C  EFA2  F00B         	goto	u6931
 11066   001740  EFA4  F00B         	goto	u6930
 11067   001744                     u6931:
 11068   001744  EFA5  F00B         	goto	l6004
 11069   001748                     u6930:
 11070   001748                     
 11071                           ; BSR set to: 0
 11072   001748  8F63               	bsf	___fladd@grs& (0+255),7,b
 11073   00174A                     l6004:
 11074                           
 11075                           ; BSR set to: 0
 11076   00174A  3449               	rlcf	(___fladd@b+3)^0,w,c
 11077   00174C  3249               	rrcf	(___fladd@b+3)^0,f,c
 11078   00174E  3248               	rrcf	(___fladd@b+2)^0,f,c
 11079   001750  3247               	rrcf	(___fladd@b+1)^0,f,c
 11080   001752  3246               	rrcf	___fladd@b^0,f,c
 11081   001754                     
 11082                           ; BSR set to: 0
 11083   001754  2B62               	incf	___fladd@bexp& (0+255),f,b
 11084   001756                     l1153:
 11085                           
 11086                           ; BSR set to: 0
 11087   001756  5161               	movf	___fladd@aexp& (0+255),w,b
 11088   001758  5D62               	subwf	___fladd@bexp& (0+255),w,b
 11089   00175A  A0D8               	btfss	status,0,c
 11090   00175C  EFB2  F00B         	goto	u6941
 11091   001760  EFB4  F00B         	goto	u6940
 11092   001764                     u6941:
 11093   001764  EF8E  F00B         	goto	l1154
 11094   001768                     u6940:
 11095   001768                     l1152:
 11096                           
 11097                           ; BSR set to: 0
 11098   001768  BD60               	btfsc	___fladd@signs& (0+255),6,b
 11099   00176A  EFB9  F00B         	goto	u6951
 11100   00176E  EFBB  F00B         	goto	u6950
 11101   001772                     u6951:
 11102   001772  EFFB  F00B         	goto	l6032
 11103   001776                     u6950:
 11104   001776                     
 11105                           ; BSR set to: 0
 11106   001776  5162               	movf	___fladd@bexp& (0+255),w,b
 11107   001778  A4D8               	btfss	status,2,c
 11108   00177A  EFC1  F00B         	goto	u6961
 11109   00177E  EFC3  F00B         	goto	u6960
 11110   001782                     u6961:
 11111   001782  EFCD  F00B         	goto	l6014
 11112   001786                     u6960:
 11113   001786                     
 11114                           ; BSR set to: 0
 11115   001786  0E00               	movlw	0
 11116   001788  6E46               	movwf	?___fladd^0,c
 11117   00178A  0E00               	movlw	0
 11118   00178C  6E47               	movwf	(?___fladd+1)^0,c
 11119   00178E  0E00               	movlw	0
 11120   001790  6E48               	movwf	(?___fladd+2)^0,c
 11121   001792  0E00               	movlw	0
 11122   001794  6E49               	movwf	(?___fladd+3)^0,c
 11123   001796  EF1C  F00D         	goto	l1161
 11124   00179A                     l6014:
 11125                           
 11126                           ; BSR set to: 0
 11127   00179A  504A               	movf	___fladd@a^0,w,c
 11128   00179C  2646               	addwf	___fladd@b^0,f,c
 11129   00179E  504B               	movf	(___fladd@a+1)^0,w,c
 11130   0017A0  2247               	addwfc	(___fladd@b+1)^0,f,c
 11131   0017A2  504C               	movf	(___fladd@a+2)^0,w,c
 11132   0017A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 11133   0017A6  504D               	movf	(___fladd@a+3)^0,w,c
 11134   0017A8  2249               	addwfc	(___fladd@b+3)^0,f,c
 11135   0017AA                     
 11136                           ; BSR set to: 0
 11137   0017AA  A049               	btfss	(___fladd@b+3)^0,0,c
 11138   0017AC  EFDA  F00B         	goto	u6971
 11139   0017B0  EFDC  F00B         	goto	u6970
 11140   0017B4                     u6971:
 11141   0017B4  EF88  F00C         	goto	l6068
 11142   0017B8                     u6970:
 11143   0017B8                     
 11144                           ; BSR set to: 0
 11145   0017B8  A163               	btfss	___fladd@grs& (0+255),0,b
 11146   0017BA  EFE1  F00B         	goto	u6981
 11147   0017BE  EFE3  F00B         	goto	u6980
 11148   0017C2                     u6981:
 11149   0017C2  EFE9  F00B         	goto	l6022
 11150   0017C6                     u6980:
 11151   0017C6                     
 11152                           ; BSR set to: 0
 11153   0017C6  90D8               	bcf	status,0,c
 11154   0017C8  3163               	rrcf	___fladd@grs& (0+255),w,b
 11155   0017CA  0901               	iorlw	1
 11156   0017CC  6F63               	movwf	___fladd@grs& (0+255),b
 11157   0017CE  EFEB  F00B         	goto	l6024
 11158   0017D2                     l6022:
 11159                           
 11160                           ; BSR set to: 0
 11161   0017D2  90D8               	bcf	status,0,c
 11162   0017D4  3363               	rrcf	___fladd@grs& (0+255),f,b
 11163   0017D6                     l6024:
 11164                           
 11165                           ; BSR set to: 0
 11166   0017D6  A046               	btfss	___fladd@b^0,0,c
 11167   0017D8  EFF0  F00B         	goto	u6991
 11168   0017DC  EFF2  F00B         	goto	u6990
 11169   0017E0                     u6991:
 11170   0017E0  EFF3  F00B         	goto	l6028
 11171   0017E4                     u6990:
 11172   0017E4                     
 11173                           ; BSR set to: 0
 11174   0017E4  8F63               	bsf	___fladd@grs& (0+255),7,b
 11175   0017E6                     l6028:
 11176                           
 11177                           ; BSR set to: 0
 11178   0017E6  3449               	rlcf	(___fladd@b+3)^0,w,c
 11179   0017E8  3249               	rrcf	(___fladd@b+3)^0,f,c
 11180   0017EA  3248               	rrcf	(___fladd@b+2)^0,f,c
 11181   0017EC  3247               	rrcf	(___fladd@b+1)^0,f,c
 11182   0017EE  3246               	rrcf	___fladd@b^0,f,c
 11183   0017F0                     
 11184                           ; BSR set to: 0
 11185   0017F0  2B62               	incf	___fladd@bexp& (0+255),f,b
 11186   0017F2  EF88  F00C         	goto	l6068
 11187   0017F6                     l6032:
 11188                           
 11189                           ; BSR set to: 0
 11190   0017F6  504A               	movf	___fladd@a^0,w,c
 11191   0017F8  5C46               	subwf	___fladd@b^0,w,c
 11192   0017FA  504B               	movf	(___fladd@a+1)^0,w,c
 11193   0017FC  5847               	subwfb	(___fladd@b+1)^0,w,c
 11194   0017FE  504C               	movf	(___fladd@a+2)^0,w,c
 11195   001800  5848               	subwfb	(___fladd@b+2)^0,w,c
 11196   001802  5049               	movf	(___fladd@b+3)^0,w,c
 11197   001804  0A80               	xorlw	128
 11198   001806  6E4E               	movwf	??___fladd^0,c
 11199   001808  504D               	movf	(___fladd@a+3)^0,w,c
 11200   00180A  0A80               	xorlw	128
 11201   00180C  584E               	subwfb	??___fladd^0,w,c
 11202   00180E  B0D8               	btfsc	status,0,c
 11203   001810  EF0C  F00C         	goto	u7001
 11204   001814  EF0E  F00C         	goto	u7000
 11205   001818                     u7001:
 11206   001818  EF39  F00C         	goto	l6042
 11207   00181C                     u7000:
 11208   00181C                     
 11209                           ; BSR set to: 0
 11210   00181C  5046               	movf	___fladd@b^0,w,c
 11211   00181E  5C4A               	subwf	___fladd@a^0,w,c
 11212   001820  6E4E               	movwf	??___fladd^0,c
 11213   001822  5047               	movf	(___fladd@b+1)^0,w,c
 11214   001824  584B               	subwfb	(___fladd@a+1)^0,w,c
 11215   001826  6E4F               	movwf	(??___fladd+1)^0,c
 11216   001828  5048               	movf	(___fladd@b+2)^0,w,c
 11217   00182A  584C               	subwfb	(___fladd@a+2)^0,w,c
 11218   00182C  6E50               	movwf	(??___fladd+2)^0,c
 11219   00182E  5049               	movf	(___fladd@b+3)^0,w,c
 11220   001830  584D               	subwfb	(___fladd@a+3)^0,w,c
 11221   001832  6E51               	movwf	(??___fladd+3)^0,c
 11222   001834  0EFF               	movlw	255
 11223   001836  244E               	addwf	??___fladd^0,w,c
 11224   001838  6E46               	movwf	___fladd@b^0,c
 11225   00183A  0EFF               	movlw	255
 11226   00183C  204F               	addwfc	(??___fladd+1)^0,w,c
 11227   00183E  6E47               	movwf	(___fladd@b+1)^0,c
 11228   001840  0EFF               	movlw	255
 11229   001842  2050               	addwfc	(??___fladd+2)^0,w,c
 11230   001844  6E48               	movwf	(___fladd@b+2)^0,c
 11231   001846  0EFF               	movlw	255
 11232   001848  2051               	addwfc	(??___fladd+3)^0,w,c
 11233   00184A  6E49               	movwf	(___fladd@b+3)^0,c
 11234   00184C  0E80               	movlw	128
 11235   00184E  1B60               	xorwf	___fladd@signs& (0+255),f,b
 11236   001850                     
 11237                           ; BSR set to: 0
 11238   001850  6D63               	negf	___fladd@grs& (0+255),b
 11239   001852                     
 11240                           ; BSR set to: 0
 11241   001852  5163               	movf	___fladd@grs& (0+255),w,b
 11242   001854  A4D8               	btfss	status,2,c
 11243   001856  EF2F  F00C         	goto	u7011
 11244   00185A  EF31  F00C         	goto	u7010
 11245   00185E                     u7011:
 11246   00185E  EF41  F00C         	goto	l1169
 11247   001862                     u7010:
 11248   001862                     
 11249                           ; BSR set to: 0
 11250   001862  0E01               	movlw	1
 11251   001864  2646               	addwf	___fladd@b^0,f,c
 11252   001866  0E00               	movlw	0
 11253   001868  2247               	addwfc	(___fladd@b+1)^0,f,c
 11254   00186A  2248               	addwfc	(___fladd@b+2)^0,f,c
 11255   00186C  2249               	addwfc	(___fladd@b+3)^0,f,c
 11256   00186E  EF41  F00C         	goto	l1169
 11257   001872                     l6042:
 11258                           
 11259                           ; BSR set to: 0
 11260   001872  504A               	movf	___fladd@a^0,w,c
 11261   001874  5E46               	subwf	___fladd@b^0,f,c
 11262   001876  504B               	movf	(___fladd@a+1)^0,w,c
 11263   001878  5A47               	subwfb	(___fladd@b+1)^0,f,c
 11264   00187A  504C               	movf	(___fladd@a+2)^0,w,c
 11265   00187C  5A48               	subwfb	(___fladd@b+2)^0,f,c
 11266   00187E  504D               	movf	(___fladd@a+3)^0,w,c
 11267   001880  5A49               	subwfb	(___fladd@b+3)^0,f,c
 11268   001882                     l1169:
 11269                           
 11270                           ; BSR set to: 0
 11271   001882  5046               	movf	___fladd@b^0,w,c
 11272   001884  1047               	iorwf	(___fladd@b+1)^0,w,c
 11273   001886  1048               	iorwf	(___fladd@b+2)^0,w,c
 11274   001888  1049               	iorwf	(___fladd@b+3)^0,w,c
 11275   00188A  A4D8               	btfss	status,2,c
 11276   00188C  EF4A  F00C         	goto	u7021
 11277   001890  EF4C  F00C         	goto	u7020
 11278   001894                     u7021:
 11279   001894  EF81  F00C         	goto	l6066
 11280   001898                     u7020:
 11281   001898                     
 11282                           ; BSR set to: 0
 11283   001898  5163               	movf	___fladd@grs& (0+255),w,b
 11284   00189A  A4D8               	btfss	status,2,c
 11285   00189C  EF52  F00C         	goto	u7031
 11286   0018A0  EF54  F00C         	goto	u7030
 11287   0018A4                     u7031:
 11288   0018A4  EF81  F00C         	goto	l6066
 11289   0018A8                     u7030:
 11290   0018A8                     
 11291                           ; BSR set to: 0
 11292   0018A8  0E00               	movlw	0
 11293   0018AA  6E46               	movwf	?___fladd^0,c
 11294   0018AC  0E00               	movlw	0
 11295   0018AE  6E47               	movwf	(?___fladd+1)^0,c
 11296   0018B0  0E00               	movlw	0
 11297   0018B2  6E48               	movwf	(?___fladd+2)^0,c
 11298   0018B4  0E00               	movlw	0
 11299   0018B6  6E49               	movwf	(?___fladd+3)^0,c
 11300   0018B8  EF1C  F00D         	goto	l1161
 11301   0018BC                     l6050:
 11302                           
 11303                           ; BSR set to: 0
 11304   0018BC  90D8               	bcf	status,0,c
 11305   0018BE  3646               	rlcf	___fladd@b^0,f,c
 11306   0018C0  3647               	rlcf	(___fladd@b+1)^0,f,c
 11307   0018C2  3648               	rlcf	(___fladd@b+2)^0,f,c
 11308   0018C4  3649               	rlcf	(___fladd@b+3)^0,f,c
 11309   0018C6                     
 11310                           ; BSR set to: 0
 11311   0018C6  AF63               	btfss	___fladd@grs& (0+255),7,b
 11312   0018C8  EF68  F00C         	goto	u7041
 11313   0018CC  EF6A  F00C         	goto	u7040
 11314   0018D0                     u7041:
 11315   0018D0  EF6B  F00C         	goto	l6056
 11316   0018D4                     u7040:
 11317   0018D4                     
 11318                           ; BSR set to: 0
 11319   0018D4  8046               	bsf	___fladd@b^0,0,c
 11320   0018D6                     l6056:
 11321                           
 11322                           ; BSR set to: 0
 11323   0018D6  A163               	btfss	___fladd@grs& (0+255),0,b
 11324   0018D8  EF70  F00C         	goto	u7051
 11325   0018DC  EF72  F00C         	goto	u7050
 11326   0018E0                     u7051:
 11327   0018E0  EF76  F00C         	goto	l6060
 11328   0018E4                     u7050:
 11329   0018E4                     
 11330                           ; BSR set to: 0
 11331   0018E4  80D8               	bsf	status,0,c
 11332   0018E6  3763               	rlcf	___fladd@grs& (0+255),f,b
 11333   0018E8  EF78  F00C         	goto	l6062
 11334   0018EC                     l6060:
 11335                           
 11336                           ; BSR set to: 0
 11337   0018EC  90D8               	bcf	status,0,c
 11338   0018EE  3763               	rlcf	___fladd@grs& (0+255),f,b
 11339   0018F0                     l6062:
 11340                           
 11341                           ; BSR set to: 0
 11342   0018F0  5162               	movf	___fladd@bexp& (0+255),w,b
 11343   0018F2  B4D8               	btfsc	status,2,c
 11344   0018F4  EF7E  F00C         	goto	u7061
 11345   0018F8  EF80  F00C         	goto	u7060
 11346   0018FC                     u7061:
 11347   0018FC  EF81  F00C         	goto	l6066
 11348   001900                     u7060:
 11349   001900                     
 11350                           ; BSR set to: 0
 11351   001900  0762               	decf	___fladd@bexp& (0+255),f,b
 11352   001902                     l6066:
 11353                           
 11354                           ; BSR set to: 0
 11355   001902  AE48               	btfss	(___fladd@b+2)^0,7,c
 11356   001904  EF86  F00C         	goto	u7071
 11357   001908  EF88  F00C         	goto	u7070
 11358   00190C                     u7071:
 11359   00190C  EF5E  F00C         	goto	l6050
 11360   001910                     u7070:
 11361   001910                     l6068:
 11362                           
 11363                           ; BSR set to: 0
 11364   001910  0E00               	movlw	0
 11365   001912  6F61               	movwf	___fladd@aexp& (0+255),b
 11366   001914                     
 11367                           ; BSR set to: 0
 11368   001914  AF63               	btfss	___fladd@grs& (0+255),7,b
 11369   001916  EF8F  F00C         	goto	u7081
 11370   00191A  EF91  F00C         	goto	u7080
 11371   00191E                     u7081:
 11372   00191E  EFA9  F00C         	goto	l1178
 11373   001922                     u7080:
 11374   001922                     
 11375                           ; BSR set to: 0
 11376   001922  C063  F04E         	movff	___fladd@grs,??___fladd
 11377   001926  0E7F               	movlw	127
 11378   001928  164E               	andwf	??___fladd^0,f,c
 11379   00192A  B4D8               	btfsc	status,2,c
 11380   00192C  EF9A  F00C         	goto	u7091
 11381   001930  EF9C  F00C         	goto	u7090
 11382   001934                     u7091:
 11383   001934  EFA0  F00C         	goto	l1179
 11384   001938                     u7090:
 11385   001938                     l6074:
 11386                           
 11387                           ; BSR set to: 0
 11388   001938  0E01               	movlw	1
 11389   00193A  6F61               	movwf	___fladd@aexp& (0+255),b
 11390   00193C  EFA9  F00C         	goto	l1178
 11391   001940                     l1179:
 11392                           
 11393                           ; BSR set to: 0
 11394   001940  A046               	btfss	___fladd@b^0,0,c
 11395   001942  EFA5  F00C         	goto	u7101
 11396   001946  EFA7  F00C         	goto	u7100
 11397   00194A                     u7101:
 11398   00194A  EFA9  F00C         	goto	l1178
 11399   00194E                     u7100:
 11400   00194E  EF9C  F00C         	goto	l6074
 11401   001952                     l1178:
 11402                           
 11403                           ; BSR set to: 0
 11404   001952  5161               	movf	___fladd@aexp& (0+255),w,b
 11405   001954  B4D8               	btfsc	status,2,c
 11406   001956  EFAF  F00C         	goto	u7111
 11407   00195A  EFB1  F00C         	goto	u7110
 11408   00195E                     u7111:
 11409   00195E  EFDC  F00C         	goto	l6086
 11410   001962                     u7110:
 11411   001962                     
 11412                           ; BSR set to: 0
 11413   001962  0E01               	movlw	1
 11414   001964  2646               	addwf	___fladd@b^0,f,c
 11415   001966  0E00               	movlw	0
 11416   001968  2247               	addwfc	(___fladd@b+1)^0,f,c
 11417   00196A  2248               	addwfc	(___fladd@b+2)^0,f,c
 11418   00196C  2249               	addwfc	(___fladd@b+3)^0,f,c
 11419   00196E                     
 11420                           ; BSR set to: 0
 11421   00196E  A049               	btfss	(___fladd@b+3)^0,0,c
 11422   001970  EFBC  F00C         	goto	u7121
 11423   001974  EFBE  F00C         	goto	u7120
 11424   001978                     u7121:
 11425   001978  EFDC  F00C         	goto	l6086
 11426   00197C                     u7120:
 11427   00197C                     
 11428                           ; BSR set to: 0
 11429   00197C  C046  F04E         	movff	___fladd@b,??___fladd
 11430   001980  C047  F04F         	movff	___fladd@b+1,??___fladd+1
 11431   001984  C048  F050         	movff	___fladd@b+2,??___fladd+2
 11432   001988  C049  F051         	movff	___fladd@b+3,??___fladd+3
 11433   00198C  3451               	rlcf	(??___fladd+3)^0,w,c
 11434   00198E  3251               	rrcf	(??___fladd+3)^0,f,c
 11435   001990  3250               	rrcf	(??___fladd+2)^0,f,c
 11436   001992  324F               	rrcf	(??___fladd+1)^0,f,c
 11437   001994  324E               	rrcf	??___fladd^0,f,c
 11438   001996  C04E  F046         	movff	??___fladd,___fladd@b
 11439   00199A  C04F  F047         	movff	??___fladd+1,___fladd@b+1
 11440   00199E  C050  F048         	movff	??___fladd+2,___fladd@b+2
 11441   0019A2  C051  F049         	movff	??___fladd+3,___fladd@b+3
 11442   0019A6  2962               	incf	___fladd@bexp& (0+255),w,b
 11443   0019A8  B4D8               	btfsc	status,2,c
 11444   0019AA  EFD9  F00C         	goto	u7131
 11445   0019AE  EFDB  F00C         	goto	u7130
 11446   0019B2                     u7131:
 11447   0019B2  EFDC  F00C         	goto	l6086
 11448   0019B6                     u7130:
 11449   0019B6                     
 11450                           ; BSR set to: 0
 11451   0019B6  2B62               	incf	___fladd@bexp& (0+255),f,b
 11452   0019B8                     l6086:
 11453                           
 11454                           ; BSR set to: 0
 11455   0019B8  2962               	incf	___fladd@bexp& (0+255),w,b
 11456   0019BA  B4D8               	btfsc	status,2,c
 11457   0019BC  EFE2  F00C         	goto	u7141
 11458   0019C0  EFE4  F00C         	goto	u7140
 11459   0019C4                     u7141:
 11460   0019C4  EFEC  F00C         	goto	l6090
 11461   0019C8                     u7140:
 11462   0019C8                     
 11463                           ; BSR set to: 0
 11464   0019C8  5162               	movf	___fladd@bexp& (0+255),w,b
 11465   0019CA  A4D8               	btfss	status,2,c
 11466   0019CC  EFEA  F00C         	goto	u7151
 11467   0019D0  EFEC  F00C         	goto	u7150
 11468   0019D4                     u7151:
 11469   0019D4  EFFE  F00C         	goto	l6094
 11470   0019D8                     u7150:
 11471   0019D8                     l6090:
 11472                           
 11473                           ; BSR set to: 0
 11474   0019D8  0E00               	movlw	0
 11475   0019DA  6E46               	movwf	___fladd@b^0,c
 11476   0019DC  0E00               	movlw	0
 11477   0019DE  6E47               	movwf	(___fladd@b+1)^0,c
 11478   0019E0  0E00               	movlw	0
 11479   0019E2  6E48               	movwf	(___fladd@b+2)^0,c
 11480   0019E4  0E00               	movlw	0
 11481   0019E6  6E49               	movwf	(___fladd@b+3)^0,c
 11482   0019E8  5162               	movf	___fladd@bexp& (0+255),w,b
 11483   0019EA  A4D8               	btfss	status,2,c
 11484   0019EC  EFFA  F00C         	goto	u7161
 11485   0019F0  EFFC  F00C         	goto	u7160
 11486   0019F4                     u7161:
 11487   0019F4  EFFE  F00C         	goto	l6094
 11488   0019F8                     u7160:
 11489   0019F8                     
 11490                           ; BSR set to: 0
 11491   0019F8  0E00               	movlw	0
 11492   0019FA  6F60               	movwf	___fladd@signs& (0+255),b
 11493   0019FC                     l6094:
 11494                           
 11495                           ; BSR set to: 0
 11496   0019FC  A162               	btfss	___fladd@bexp& (0+255),0,b
 11497   0019FE  EF03  F00D         	goto	u7171
 11498   001A02  EF05  F00D         	goto	u7170
 11499   001A06                     u7171:
 11500   001A06  EF08  F00D         	goto	l6098
 11501   001A0A                     u7170:
 11502   001A0A                     
 11503                           ; BSR set to: 0
 11504   001A0A  8E48               	bsf	(___fladd@b+2)^0,7,c
 11505   001A0C  EF09  F00D         	goto	l6100
 11506   001A10                     l6098:
 11507                           
 11508                           ; BSR set to: 0
 11509   001A10  9E48               	bcf	(___fladd@b+2)^0,7,c
 11510   001A12                     l6100:
 11511                           
 11512                           ; BSR set to: 0
 11513   001A12  90D8               	bcf	status,0,c
 11514   001A14  3162               	rrcf	___fladd@bexp& (0+255),w,b
 11515   001A16  6E49               	movwf	(___fladd@b+3)^0,c
 11516   001A18                     
 11517                           ; BSR set to: 0
 11518   001A18  AF60               	btfss	___fladd@signs& (0+255),7,b
 11519   001A1A  EF11  F00D         	goto	u7181
 11520   001A1E  EF13  F00D         	goto	u7180
 11521   001A22                     u7181:
 11522   001A22  EF14  F00D         	goto	l6106
 11523   001A26                     u7180:
 11524   001A26                     
 11525                           ; BSR set to: 0
 11526   001A26  8E49               	bsf	(___fladd@b+3)^0,7,c
 11527   001A28                     l6106:
 11528                           
 11529                           ; BSR set to: 0
 11530   001A28  C046  F046         	movff	___fladd@b,?___fladd
 11531   001A2C  C047  F047         	movff	___fladd@b+1,?___fladd+1
 11532   001A30  C048  F048         	movff	___fladd@b+2,?___fladd+2
 11533   001A34  C049  F049         	movff	___fladd@b+3,?___fladd+3
 11534   001A38                     l1161:
 11535                           
 11536                           ; BSR set to: 0
 11537   001A38  0012               	return		;funcret
 11538   001A3A                     __end_of___fladd:
 11539                           	callstack 0
 11540                           
 11541 ;; *************** function ___flneg *****************
 11542 ;; Defined at:
 11543 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flneg.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;  f1              4   32[BANK0 ] unsigned char 
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;		None
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  4   32[BANK0 ] unsigned char 
 11550 ;; Registers used:
 11551 ;;		wreg, status,2, status,0
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11557 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11560 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11561 ;;Total ram usage:        4 bytes
 11562 ;; Hardware stack levels used: 1
 11563 ;; Hardware stack levels required when called: 1
 11564 ;; This function calls:
 11565 ;;		Nothing
 11566 ;; This function is called by:
 11567 ;;		_efgtoa
 11568 ;;		_sinf
 11569 ;;		___rem_pio2f
 11570 ;; This function uses a non-reentrant model
 11571 ;;
 11572                           
 11573                           	psect	text42
 11574   004BA4                     __ptext42:
 11575                           	callstack 0
 11576   004BA4                     ___flneg:
 11577                           	callstack 24
 11578   004BA4  0100               	movlb	0	; () banked
 11579   004BA6  5180               	movf	___flneg@f1& (0+255),w,b
 11580   004BA8  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
 11581   004BAA  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
 11582   004BAC  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
 11583   004BAE  B4D8               	btfsc	status,2,c
 11584   004BB0  EFDC  F025         	goto	u7821
 11585   004BB4  EFDE  F025         	goto	u7820
 11586   004BB8                     u7821:
 11587   004BB8  EFE6  F025         	goto	l6520
 11588   004BBC                     u7820:
 11589   004BBC                     
 11590                           ; BSR set to: 0
 11591   004BBC  0E00               	movlw	0
 11592   004BBE  1B80               	xorwf	___flneg@f1& (0+255),f,b
 11593   004BC0  0E00               	movlw	0
 11594   004BC2  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
 11595   004BC4  0E00               	movlw	0
 11596   004BC6  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
 11597   004BC8  0E80               	movlw	128
 11598   004BCA  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
 11599   004BCC                     l6520:
 11600                           
 11601                           ; BSR set to: 0
 11602   004BCC  C080  F080         	movff	___flneg@f1,?___flneg
 11603   004BD0  C081  F081         	movff	___flneg@f1+1,?___flneg+1
 11604   004BD4  C082  F082         	movff	___flneg@f1+2,?___flneg+2
 11605   004BD8  C083  F083         	movff	___flneg@f1+3,?___flneg+3
 11606   004BDC                     
 11607                           ; BSR set to: 0
 11608   004BDC  0012               	return		;funcret
 11609   004BDE                     __end_of___flneg:
 11610                           	callstack 0
 11611                           
 11612 ;; *************** function ___flmul *****************
 11613 ;; Defined at:
 11614 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcmul.c"
 11615 ;; Parameters:    Size  Location     Type
 11616 ;;  b               4   19[COMRAM] unsigned char 
 11617 ;;  a               4   23[COMRAM] unsigned char 
 11618 ;; Auto vars:     Size  Location     Type
 11619 ;;  prod            4   38[COMRAM] struct .
 11620 ;;  grs             4   33[COMRAM] unsigned long 
 11621 ;;  temp            2   42[COMRAM] struct .
 11622 ;;  bexp            1   37[COMRAM] unsigned char 
 11623 ;;  aexp            1   32[COMRAM] unsigned char 
 11624 ;;  sign            1   31[COMRAM] unsigned char 
 11625 ;; Return value:  Size  Location     Type
 11626 ;;                  4   19[COMRAM] unsigned char 
 11627 ;; Registers used:
 11628 ;;		wreg, status,2, status,0, prodl, prodh
 11629 ;; Tracked objects:
 11630 ;;		On entry : 0/0
 11631 ;;		On exit  : 0/0
 11632 ;;		Unchanged: 0/0
 11633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11634 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11635 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11636 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11637 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11638 ;;Total ram usage:       25 bytes
 11639 ;; Hardware stack levels used: 1
 11640 ;; Hardware stack levels required when called: 1
 11641 ;; This function calls:
 11642 ;;		Nothing
 11643 ;; This function is called by:
 11644 ;;		_runDAC
 11645 ;;		_runADC
 11646 ;;		_efgtoa
 11647 ;;		___cosdf
 11648 ;;		___rem_pio2f
 11649 ;;		___sindf
 11650 ;; This function uses a non-reentrant model
 11651 ;;
 11652                           
 11653                           	psect	text43
 11654   001A3A                     __ptext43:
 11655                           	callstack 0
 11656   001A3A                     ___flmul:
 11657                           	callstack 24
 11658   001A3A  5017               	movf	(___flmul@b+3)^0,w,c
 11659   001A3C  0B80               	andlw	128
 11660   001A3E  6E20               	movwf	___flmul@sign^0,c
 11661   001A40  5017               	movf	(___flmul@b+3)^0,w,c
 11662   001A42  2417               	addwf	(___flmul@b+3)^0,w,c
 11663   001A44  6E26               	movwf	___flmul@bexp^0,c
 11664   001A46  AE16               	btfss	(___flmul@b+2)^0,7,c
 11665   001A48  EF28  F00D         	goto	u7431
 11666   001A4C  EF2A  F00D         	goto	u7430
 11667   001A50                     u7431:
 11668   001A50  EF2B  F00D         	goto	l6268
 11669   001A54                     u7430:
 11670   001A54  8026               	bsf	___flmul@bexp^0,0,c
 11671   001A56                     l6268:
 11672   001A56  5026               	movf	___flmul@bexp^0,w,c
 11673   001A58  B4D8               	btfsc	status,2,c
 11674   001A5A  EF31  F00D         	goto	u7441
 11675   001A5E  EF33  F00D         	goto	u7440
 11676   001A62                     u7441:
 11677   001A62  EF46  F00D         	goto	l6276
 11678   001A66                     u7440:
 11679   001A66  2826               	incf	___flmul@bexp^0,w,c
 11680   001A68  A4D8               	btfss	status,2,c
 11681   001A6A  EF39  F00D         	goto	u7451
 11682   001A6E  EF3B  F00D         	goto	u7450
 11683   001A72                     u7451:
 11684   001A72  EF43  F00D         	goto	l6274
 11685   001A76                     u7450:
 11686   001A76  0E00               	movlw	0
 11687   001A78  6E14               	movwf	___flmul@b^0,c
 11688   001A7A  0E00               	movlw	0
 11689   001A7C  6E15               	movwf	(___flmul@b+1)^0,c
 11690   001A7E  0E00               	movlw	0
 11691   001A80  6E16               	movwf	(___flmul@b+2)^0,c
 11692   001A82  0E00               	movlw	0
 11693   001A84  6E17               	movwf	(___flmul@b+3)^0,c
 11694   001A86                     l6274:
 11695   001A86  8E16               	bsf	(___flmul@b+2)^0,7,c
 11696   001A88  EF4E  F00D         	goto	l6278
 11697   001A8C                     l6276:
 11698   001A8C  0E00               	movlw	0
 11699   001A8E  6E14               	movwf	___flmul@b^0,c
 11700   001A90  0E00               	movlw	0
 11701   001A92  6E15               	movwf	(___flmul@b+1)^0,c
 11702   001A94  0E00               	movlw	0
 11703   001A96  6E16               	movwf	(___flmul@b+2)^0,c
 11704   001A98  0E00               	movlw	0
 11705   001A9A  6E17               	movwf	(___flmul@b+3)^0,c
 11706   001A9C                     l6278:
 11707   001A9C  501B               	movf	(___flmul@a+3)^0,w,c
 11708   001A9E  0B80               	andlw	128
 11709   001AA0  1A20               	xorwf	___flmul@sign^0,f,c
 11710   001AA2  501B               	movf	(___flmul@a+3)^0,w,c
 11711   001AA4  241B               	addwf	(___flmul@a+3)^0,w,c
 11712   001AA6  6E21               	movwf	___flmul@aexp^0,c
 11713   001AA8  AE1A               	btfss	(___flmul@a+2)^0,7,c
 11714   001AAA  EF59  F00D         	goto	u7461
 11715   001AAE  EF5B  F00D         	goto	u7460
 11716   001AB2                     u7461:
 11717   001AB2  EF5C  F00D         	goto	l6286
 11718   001AB6                     u7460:
 11719   001AB6  8021               	bsf	___flmul@aexp^0,0,c
 11720   001AB8                     l6286:
 11721   001AB8  5021               	movf	___flmul@aexp^0,w,c
 11722   001ABA  B4D8               	btfsc	status,2,c
 11723   001ABC  EF62  F00D         	goto	u7471
 11724   001AC0  EF64  F00D         	goto	u7470
 11725   001AC4                     u7471:
 11726   001AC4  EF77  F00D         	goto	l6294
 11727   001AC8                     u7470:
 11728   001AC8  2821               	incf	___flmul@aexp^0,w,c
 11729   001ACA  A4D8               	btfss	status,2,c
 11730   001ACC  EF6A  F00D         	goto	u7481
 11731   001AD0  EF6C  F00D         	goto	u7480
 11732   001AD4                     u7481:
 11733   001AD4  EF74  F00D         	goto	l6292
 11734   001AD8                     u7480:
 11735   001AD8  0E00               	movlw	0
 11736   001ADA  6E18               	movwf	___flmul@a^0,c
 11737   001ADC  0E00               	movlw	0
 11738   001ADE  6E19               	movwf	(___flmul@a+1)^0,c
 11739   001AE0  0E00               	movlw	0
 11740   001AE2  6E1A               	movwf	(___flmul@a+2)^0,c
 11741   001AE4  0E00               	movlw	0
 11742   001AE6  6E1B               	movwf	(___flmul@a+3)^0,c
 11743   001AE8                     l6292:
 11744   001AE8  8E1A               	bsf	(___flmul@a+2)^0,7,c
 11745   001AEA  EF7F  F00D         	goto	l1238
 11746   001AEE                     l6294:
 11747   001AEE  0E00               	movlw	0
 11748   001AF0  6E18               	movwf	___flmul@a^0,c
 11749   001AF2  0E00               	movlw	0
 11750   001AF4  6E19               	movwf	(___flmul@a+1)^0,c
 11751   001AF6  0E00               	movlw	0
 11752   001AF8  6E1A               	movwf	(___flmul@a+2)^0,c
 11753   001AFA  0E00               	movlw	0
 11754   001AFC  6E1B               	movwf	(___flmul@a+3)^0,c
 11755   001AFE                     l1238:
 11756   001AFE  5021               	movf	___flmul@aexp^0,w,c
 11757   001B00  B4D8               	btfsc	status,2,c
 11758   001B02  EF85  F00D         	goto	u7491
 11759   001B06  EF87  F00D         	goto	u7490
 11760   001B0A                     u7491:
 11761   001B0A  EF8F  F00D         	goto	l6298
 11762   001B0E                     u7490:
 11763   001B0E  5026               	movf	___flmul@bexp^0,w,c
 11764   001B10  A4D8               	btfss	status,2,c
 11765   001B12  EF8D  F00D         	goto	u7501
 11766   001B16  EF8F  F00D         	goto	u7500
 11767   001B1A                     u7501:
 11768   001B1A  EF99  F00D         	goto	l6302
 11769   001B1E                     u7500:
 11770   001B1E                     l6298:
 11771   001B1E  0E00               	movlw	0
 11772   001B20  6E14               	movwf	?___flmul^0,c
 11773   001B22  0E00               	movlw	0
 11774   001B24  6E15               	movwf	(?___flmul+1)^0,c
 11775   001B26  0E00               	movlw	0
 11776   001B28  6E16               	movwf	(?___flmul+2)^0,c
 11777   001B2A  0E00               	movlw	0
 11778   001B2C  6E17               	movwf	(?___flmul+3)^0,c
 11779   001B2E  EF31  F00F         	goto	l1242
 11780   001B32                     l6302:
 11781   001B32  501A               	movf	(___flmul@a+2)^0,w,c
 11782   001B34  0214               	mulwf	___flmul@b^0,c
 11783   001B36  CFF3 F02B          	movff	prodl,___flmul@temp
 11784   001B3A  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11785   001B3E  502B               	movf	___flmul@temp^0,w,c
 11786   001B40  6E22               	movwf	___flmul@grs^0,c
 11787   001B42  6A23               	clrf	(___flmul@grs+1)^0,c
 11788   001B44  6A24               	clrf	(___flmul@grs+2)^0,c
 11789   001B46  6A25               	clrf	(___flmul@grs+3)^0,c
 11790   001B48  502C               	movf	(___flmul@temp+1)^0,w,c
 11791   001B4A  6E27               	movwf	___flmul@prod^0,c
 11792   001B4C  6A28               	clrf	(___flmul@prod+1)^0,c
 11793   001B4E  6A29               	clrf	(___flmul@prod+2)^0,c
 11794   001B50  6A2A               	clrf	(___flmul@prod+3)^0,c
 11795   001B52  5019               	movf	(___flmul@a+1)^0,w,c
 11796   001B54  0215               	mulwf	(___flmul@b+1)^0,c
 11797   001B56  CFF3 F02B          	movff	prodl,___flmul@temp
 11798   001B5A  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11799   001B5E  502B               	movf	___flmul@temp^0,w,c
 11800   001B60  2622               	addwf	___flmul@grs^0,f,c
 11801   001B62  0E00               	movlw	0
 11802   001B64  2223               	addwfc	(___flmul@grs+1)^0,f,c
 11803   001B66  2224               	addwfc	(___flmul@grs+2)^0,f,c
 11804   001B68  2225               	addwfc	(___flmul@grs+3)^0,f,c
 11805   001B6A  502C               	movf	(___flmul@temp+1)^0,w,c
 11806   001B6C  2627               	addwf	___flmul@prod^0,f,c
 11807   001B6E  0E00               	movlw	0
 11808   001B70  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11809   001B72  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11810   001B74  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11811   001B76  5018               	movf	___flmul@a^0,w,c
 11812   001B78  0216               	mulwf	(___flmul@b+2)^0,c
 11813   001B7A  CFF3 F02B          	movff	prodl,___flmul@temp
 11814   001B7E  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11815   001B82  502B               	movf	___flmul@temp^0,w,c
 11816   001B84  2622               	addwf	___flmul@grs^0,f,c
 11817   001B86  0E00               	movlw	0
 11818   001B88  2223               	addwfc	(___flmul@grs+1)^0,f,c
 11819   001B8A  2224               	addwfc	(___flmul@grs+2)^0,f,c
 11820   001B8C  2225               	addwfc	(___flmul@grs+3)^0,f,c
 11821   001B8E  502C               	movf	(___flmul@temp+1)^0,w,c
 11822   001B90  2627               	addwf	___flmul@prod^0,f,c
 11823   001B92  0E00               	movlw	0
 11824   001B94  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11825   001B96  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11826   001B98  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11827   001B9A  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 11828   001B9E  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 11829   001BA2  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 11830   001BA6  6A22               	clrf	___flmul@grs^0,c
 11831   001BA8  5018               	movf	___flmul@a^0,w,c
 11832   001BAA  0215               	mulwf	(___flmul@b+1)^0,c
 11833   001BAC  CFF3 F02B          	movff	prodl,___flmul@temp
 11834   001BB0  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11835   001BB4  502B               	movf	___flmul@temp^0,w,c
 11836   001BB6  2622               	addwf	___flmul@grs^0,f,c
 11837   001BB8  502C               	movf	(___flmul@temp+1)^0,w,c
 11838   001BBA  2223               	addwfc	(___flmul@grs+1)^0,f,c
 11839   001BBC  0E00               	movlw	0
 11840   001BBE  2224               	addwfc	(___flmul@grs+2)^0,f,c
 11841   001BC0  0E00               	movlw	0
 11842   001BC2  2225               	addwfc	(___flmul@grs+3)^0,f,c
 11843   001BC4  5019               	movf	(___flmul@a+1)^0,w,c
 11844   001BC6  0214               	mulwf	___flmul@b^0,c
 11845   001BC8  CFF3 F02B          	movff	prodl,___flmul@temp
 11846   001BCC  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11847   001BD0  502B               	movf	___flmul@temp^0,w,c
 11848   001BD2  2622               	addwf	___flmul@grs^0,f,c
 11849   001BD4  502C               	movf	(___flmul@temp+1)^0,w,c
 11850   001BD6  2223               	addwfc	(___flmul@grs+1)^0,f,c
 11851   001BD8  0E00               	movlw	0
 11852   001BDA  2224               	addwfc	(___flmul@grs+2)^0,f,c
 11853   001BDC  0E00               	movlw	0
 11854   001BDE  2225               	addwfc	(___flmul@grs+3)^0,f,c
 11855   001BE0  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 11856   001BE4  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 11857   001BE8  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 11858   001BEC  6A22               	clrf	___flmul@grs^0,c
 11859   001BEE  5018               	movf	___flmul@a^0,w,c
 11860   001BF0  0214               	mulwf	___flmul@b^0,c
 11861   001BF2  CFF3 F02B          	movff	prodl,___flmul@temp
 11862   001BF6  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11863   001BFA  502B               	movf	___flmul@temp^0,w,c
 11864   001BFC  2622               	addwf	___flmul@grs^0,f,c
 11865   001BFE  502C               	movf	(___flmul@temp+1)^0,w,c
 11866   001C00  2223               	addwfc	(___flmul@grs+1)^0,f,c
 11867   001C02  0E00               	movlw	0
 11868   001C04  2224               	addwfc	(___flmul@grs+2)^0,f,c
 11869   001C06  0E00               	movlw	0
 11870   001C08  2225               	addwfc	(___flmul@grs+3)^0,f,c
 11871   001C0A  501A               	movf	(___flmul@a+2)^0,w,c
 11872   001C0C  0215               	mulwf	(___flmul@b+1)^0,c
 11873   001C0E  CFF3 F02B          	movff	prodl,___flmul@temp
 11874   001C12  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11875   001C16  502B               	movf	___flmul@temp^0,w,c
 11876   001C18  2627               	addwf	___flmul@prod^0,f,c
 11877   001C1A  502C               	movf	(___flmul@temp+1)^0,w,c
 11878   001C1C  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11879   001C1E  0E00               	movlw	0
 11880   001C20  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11881   001C22  0E00               	movlw	0
 11882   001C24  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11883   001C26  5019               	movf	(___flmul@a+1)^0,w,c
 11884   001C28  0216               	mulwf	(___flmul@b+2)^0,c
 11885   001C2A  CFF3 F02B          	movff	prodl,___flmul@temp
 11886   001C2E  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11887   001C32  502B               	movf	___flmul@temp^0,w,c
 11888   001C34  2627               	addwf	___flmul@prod^0,f,c
 11889   001C36  502C               	movf	(___flmul@temp+1)^0,w,c
 11890   001C38  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11891   001C3A  0E00               	movlw	0
 11892   001C3C  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11893   001C3E  0E00               	movlw	0
 11894   001C40  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11895   001C42  501A               	movf	(___flmul@a+2)^0,w,c
 11896   001C44  0216               	mulwf	(___flmul@b+2)^0,c
 11897   001C46  CFF3 F02B          	movff	prodl,___flmul@temp
 11898   001C4A  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11899   001C4E  502B               	movf	___flmul@temp^0,w,c
 11900   001C50  6E1C               	movwf	??___flmul^0,c
 11901   001C52  502C               	movf	(___flmul@temp+1)^0,w,c
 11902   001C54  6E1D               	movwf	(??___flmul+1)^0,c
 11903   001C56  6A1E               	clrf	(??___flmul+2)^0,c
 11904   001C58  6A1F               	clrf	(??___flmul+3)^0,c
 11905   001C5A  C01E  F01F         	movff	??___flmul+2,??___flmul+3
 11906   001C5E  C01D  F01E         	movff	??___flmul+1,??___flmul+2
 11907   001C62  C01C  F01D         	movff	??___flmul,??___flmul+1
 11908   001C66  6A1C               	clrf	??___flmul^0,c
 11909   001C68  501C               	movf	??___flmul^0,w,c
 11910   001C6A  2627               	addwf	___flmul@prod^0,f,c
 11911   001C6C  501D               	movf	(??___flmul+1)^0,w,c
 11912   001C6E  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11913   001C70  501E               	movf	(??___flmul+2)^0,w,c
 11914   001C72  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11915   001C74  501F               	movf	(??___flmul+3)^0,w,c
 11916   001C76  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11917   001C78  C022  F01C         	movff	___flmul@grs,??___flmul
 11918   001C7C  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
 11919   001C80  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
 11920   001C84  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
 11921   001C88  0E19               	movlw	25
 11922   001C8A  EF4C  F00E         	goto	u7510
 11923   001C8E                     u7515:
 11924   001C8E  90D8               	bcf	status,0,c
 11925   001C90  321F               	rrcf	(??___flmul+3)^0,f,c
 11926   001C92  321E               	rrcf	(??___flmul+2)^0,f,c
 11927   001C94  321D               	rrcf	(??___flmul+1)^0,f,c
 11928   001C96  321C               	rrcf	??___flmul^0,f,c
 11929   001C98                     u7510:
 11930   001C98  2EE8               	decfsz	wreg,f,c
 11931   001C9A  EF47  F00E         	goto	u7515
 11932   001C9E  501C               	movf	??___flmul^0,w,c
 11933   001CA0  2627               	addwf	___flmul@prod^0,f,c
 11934   001CA2  501D               	movf	(??___flmul+1)^0,w,c
 11935   001CA4  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11936   001CA6  501E               	movf	(??___flmul+2)^0,w,c
 11937   001CA8  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11938   001CAA  501F               	movf	(??___flmul+3)^0,w,c
 11939   001CAC  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11940   001CAE  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 11941   001CB2  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 11942   001CB6  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 11943   001CBA  6A22               	clrf	___flmul@grs^0,c
 11944   001CBC  5021               	movf	___flmul@aexp^0,w,c
 11945   001CBE  C026  F01C         	movff	___flmul@bexp,??___flmul
 11946   001CC2  6A1D               	clrf	(??___flmul+1)^0,c
 11947   001CC4  261C               	addwf	??___flmul^0,f,c
 11948   001CC6  0E00               	movlw	0
 11949   001CC8  221D               	addwfc	(??___flmul+1)^0,f,c
 11950   001CCA  0E82               	movlw	130
 11951   001CCC  241C               	addwf	??___flmul^0,w,c
 11952   001CCE  6E2B               	movwf	___flmul@temp^0,c
 11953   001CD0  0EFF               	movlw	255
 11954   001CD2  201D               	addwfc	(??___flmul+1)^0,w,c
 11955   001CD4  6E2C               	movwf	(___flmul@temp+1)^0,c
 11956   001CD6  EF82  F00E         	goto	l6350
 11957   001CDA                     l6344:
 11958   001CDA  90D8               	bcf	status,0,c
 11959   001CDC  3627               	rlcf	___flmul@prod^0,f,c
 11960   001CDE  3628               	rlcf	(___flmul@prod+1)^0,f,c
 11961   001CE0  3629               	rlcf	(___flmul@prod+2)^0,f,c
 11962   001CE2  362A               	rlcf	(___flmul@prod+3)^0,f,c
 11963   001CE4  AE25               	btfss	(___flmul@grs+3)^0,7,c
 11964   001CE6  EF77  F00E         	goto	u7521
 11965   001CEA  EF79  F00E         	goto	u7520
 11966   001CEE                     u7521:
 11967   001CEE  EF7A  F00E         	goto	l1245
 11968   001CF2                     u7520:
 11969   001CF2  8027               	bsf	___flmul@prod^0,0,c
 11970   001CF4                     l1245:
 11971   001CF4  90D8               	bcf	status,0,c
 11972   001CF6  3622               	rlcf	___flmul@grs^0,f,c
 11973   001CF8  3623               	rlcf	(___flmul@grs+1)^0,f,c
 11974   001CFA  3624               	rlcf	(___flmul@grs+2)^0,f,c
 11975   001CFC  3625               	rlcf	(___flmul@grs+3)^0,f,c
 11976   001CFE  062B               	decf	___flmul@temp^0,f,c
 11977   001D00  A0D8               	btfss	status,0,c
 11978   001D02  062C               	decf	(___flmul@temp+1)^0,f,c
 11979   001D04                     l6350:
 11980   001D04  AE29               	btfss	(___flmul@prod+2)^0,7,c
 11981   001D06  EF87  F00E         	goto	u7531
 11982   001D0A  EF89  F00E         	goto	u7530
 11983   001D0E                     u7531:
 11984   001D0E  EF6D  F00E         	goto	l6344
 11985   001D12                     u7530:
 11986   001D12  0E00               	movlw	0
 11987   001D14  6E21               	movwf	___flmul@aexp^0,c
 11988   001D16  AE25               	btfss	(___flmul@grs+3)^0,7,c
 11989   001D18  EF90  F00E         	goto	u7541
 11990   001D1C  EF92  F00E         	goto	u7540
 11991   001D20                     u7541:
 11992   001D20  EFB6  F00E         	goto	l1247
 11993   001D24                     u7540:
 11994   001D24  0EFF               	movlw	255
 11995   001D26  1422               	andwf	___flmul@grs^0,w,c
 11996   001D28  6E1C               	movwf	??___flmul^0,c
 11997   001D2A  0EFF               	movlw	255
 11998   001D2C  1423               	andwf	(___flmul@grs+1)^0,w,c
 11999   001D2E  6E1D               	movwf	(??___flmul+1)^0,c
 12000   001D30  0EFF               	movlw	255
 12001   001D32  1424               	andwf	(___flmul@grs+2)^0,w,c
 12002   001D34  6E1E               	movwf	(??___flmul+2)^0,c
 12003   001D36  0E7F               	movlw	127
 12004   001D38  1425               	andwf	(___flmul@grs+3)^0,w,c
 12005   001D3A  6E1F               	movwf	(??___flmul+3)^0,c
 12006   001D3C  501C               	movf	??___flmul^0,w,c
 12007   001D3E  101D               	iorwf	(??___flmul+1)^0,w,c
 12008   001D40  101E               	iorwf	(??___flmul+2)^0,w,c
 12009   001D42  101F               	iorwf	(??___flmul+3)^0,w,c
 12010   001D44  B4D8               	btfsc	status,2,c
 12011   001D46  EFA7  F00E         	goto	u7551
 12012   001D4A  EFA9  F00E         	goto	u7550
 12013   001D4E                     u7551:
 12014   001D4E  EFAD  F00E         	goto	l1248
 12015   001D52                     u7550:
 12016   001D52                     l6358:
 12017   001D52  0E01               	movlw	1
 12018   001D54  6E21               	movwf	___flmul@aexp^0,c
 12019   001D56  EFB6  F00E         	goto	l1247
 12020   001D5A                     l1248:
 12021   001D5A  A027               	btfss	___flmul@prod^0,0,c
 12022   001D5C  EFB2  F00E         	goto	u7561
 12023   001D60  EFB4  F00E         	goto	u7560
 12024   001D64                     u7561:
 12025   001D64  EFB6  F00E         	goto	l1247
 12026   001D68                     u7560:
 12027   001D68  EFA9  F00E         	goto	l6358
 12028   001D6C                     l1247:
 12029   001D6C  5021               	movf	___flmul@aexp^0,w,c
 12030   001D6E  B4D8               	btfsc	status,2,c
 12031   001D70  EFBC  F00E         	goto	u7571
 12032   001D74  EFBE  F00E         	goto	u7570
 12033   001D78                     u7571:
 12034   001D78  EFE2  F00E         	goto	l6370
 12035   001D7C                     u7570:
 12036   001D7C  0E01               	movlw	1
 12037   001D7E  2627               	addwf	___flmul@prod^0,f,c
 12038   001D80  0E00               	movlw	0
 12039   001D82  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12040   001D84  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12041   001D86  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12042   001D88  A02A               	btfss	(___flmul@prod+3)^0,0,c
 12043   001D8A  EFC9  F00E         	goto	u7581
 12044   001D8E  EFCB  F00E         	goto	u7580
 12045   001D92                     u7581:
 12046   001D92  EFE2  F00E         	goto	l6370
 12047   001D96                     u7580:
 12048   001D96  C027  F01C         	movff	___flmul@prod,??___flmul
 12049   001D9A  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
 12050   001D9E  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
 12051   001DA2  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
 12052   001DA6  341F               	rlcf	(??___flmul+3)^0,w,c
 12053   001DA8  321F               	rrcf	(??___flmul+3)^0,f,c
 12054   001DAA  321E               	rrcf	(??___flmul+2)^0,f,c
 12055   001DAC  321D               	rrcf	(??___flmul+1)^0,f,c
 12056   001DAE  321C               	rrcf	??___flmul^0,f,c
 12057   001DB0  C01C  F027         	movff	??___flmul,___flmul@prod
 12058   001DB4  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
 12059   001DB8  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
 12060   001DBC  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
 12061   001DC0  4A2B               	infsnz	___flmul@temp^0,f,c
 12062   001DC2  2A2C               	incf	(___flmul@temp+1)^0,f,c
 12063   001DC4                     l6370:
 12064   001DC4  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 12065   001DC6  EFED  F00E         	goto	u7591
 12066   001DCA  502C               	movf	(___flmul@temp+1)^0,w,c
 12067   001DCC  E108               	bnz	u7590
 12068   001DCE  282B               	incf	___flmul@temp^0,w,c
 12069   001DD0  A0D8               	btfss	status,0,c
 12070   001DD2  EFED  F00E         	goto	u7591
 12071   001DD6  EFEF  F00E         	goto	u7590
 12072   001DDA                     u7591:
 12073   001DDA  EFF9  F00E         	goto	l6374
 12074   001DDE                     u7590:
 12075   001DDE  0E00               	movlw	0
 12076   001DE0  6E27               	movwf	___flmul@prod^0,c
 12077   001DE2  0E00               	movlw	0
 12078   001DE4  6E28               	movwf	(___flmul@prod+1)^0,c
 12079   001DE6  0E80               	movlw	128
 12080   001DE8  6E29               	movwf	(___flmul@prod+2)^0,c
 12081   001DEA  0E7F               	movlw	127
 12082   001DEC  6E2A               	movwf	(___flmul@prod+3)^0,c
 12083   001DEE  EF27  F00F         	goto	l6386
 12084   001DF2                     l6374:
 12085   001DF2  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 12086   001DF4  EF06  F00F         	goto	u7600
 12087   001DF8  502C               	movf	(___flmul@temp+1)^0,w,c
 12088   001DFA  E106               	bnz	u7601
 12089   001DFC  042B               	decf	___flmul@temp^0,w,c
 12090   001DFE  B0D8               	btfsc	status,0,c
 12091   001E00  EF04  F00F         	goto	u7601
 12092   001E04  EF06  F00F         	goto	u7600
 12093   001E08                     u7601:
 12094   001E08  EF12  F00F         	goto	l1255
 12095   001E0C                     u7600:
 12096   001E0C  0E00               	movlw	0
 12097   001E0E  6E27               	movwf	___flmul@prod^0,c
 12098   001E10  0E00               	movlw	0
 12099   001E12  6E28               	movwf	(___flmul@prod+1)^0,c
 12100   001E14  0E00               	movlw	0
 12101   001E16  6E29               	movwf	(___flmul@prod+2)^0,c
 12102   001E18  0E00               	movlw	0
 12103   001E1A  6E2A               	movwf	(___flmul@prod+3)^0,c
 12104   001E1C  0E00               	movlw	0
 12105   001E1E  6E20               	movwf	___flmul@sign^0,c
 12106   001E20  EF27  F00F         	goto	l6386
 12107   001E24                     l1255:
 12108   001E24  C02B  F026         	movff	___flmul@temp,___flmul@bexp
 12109   001E28  0EFF               	movlw	255
 12110   001E2A  1627               	andwf	___flmul@prod^0,f,c
 12111   001E2C  0EFF               	movlw	255
 12112   001E2E  1628               	andwf	(___flmul@prod+1)^0,f,c
 12113   001E30  0E7F               	movlw	127
 12114   001E32  1629               	andwf	(___flmul@prod+2)^0,f,c
 12115   001E34  0E00               	movlw	0
 12116   001E36  162A               	andwf	(___flmul@prod+3)^0,f,c
 12117   001E38  A026               	btfss	___flmul@bexp^0,0,c
 12118   001E3A  EF21  F00F         	goto	u7611
 12119   001E3E  EF23  F00F         	goto	u7610
 12120   001E42                     u7611:
 12121   001E42  EF24  F00F         	goto	l6384
 12122   001E46                     u7610:
 12123   001E46  8E29               	bsf	(___flmul@prod+2)^0,7,c
 12124   001E48                     l6384:
 12125   001E48  90D8               	bcf	status,0,c
 12126   001E4A  3026               	rrcf	___flmul@bexp^0,w,c
 12127   001E4C  6E2A               	movwf	(___flmul@prod+3)^0,c
 12128   001E4E                     l6386:
 12129   001E4E  5020               	movf	___flmul@sign^0,w,c
 12130   001E50  122A               	iorwf	(___flmul@prod+3)^0,f,c
 12131   001E52  C027  F014         	movff	___flmul@prod,?___flmul
 12132   001E56  C028  F015         	movff	___flmul@prod+1,?___flmul+1
 12133   001E5A  C029  F016         	movff	___flmul@prod+2,?___flmul+2
 12134   001E5E  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
 12135   001E62                     l1242:
 12136   001E62  0012               	return		;funcret
 12137   001E64                     __end_of___flmul:
 12138                           	callstack 0
 12139                           
 12140 ;; *************** function ___flge *****************
 12141 ;; Defined at:
 12142 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flge.c"
 12143 ;; Parameters:    Size  Location     Type
 12144 ;;  ff1             4   44[COMRAM] unsigned char 
 12145 ;;  ff2             4   48[COMRAM] unsigned char 
 12146 ;; Auto vars:     Size  Location     Type
 12147 ;;		None
 12148 ;; Return value:  Size  Location     Type
 12149 ;;		None               void
 12150 ;; Registers used:
 12151 ;;		wreg, status,2, status,0
 12152 ;; Tracked objects:
 12153 ;;		On entry : 0/0
 12154 ;;		On exit  : 0/0
 12155 ;;		Unchanged: 0/0
 12156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12157 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12159 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12160 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12161 ;;Total ram usage:       12 bytes
 12162 ;; Hardware stack levels used: 1
 12163 ;; Hardware stack levels required when called: 1
 12164 ;; This function calls:
 12165 ;;		Nothing
 12166 ;; This function is called by:
 12167 ;;		_efgtoa
 12168 ;; This function uses a non-reentrant model
 12169 ;;
 12170                           
 12171                           	psect	text44
 12172   003FC6                     __ptext44:
 12173                           	callstack 0
 12174   003FC6                     ___flge:
 12175                           	callstack 24
 12176   003FC6  0E00               	movlw	0
 12177   003FC8  142D               	andwf	___flge@ff1^0,w,c
 12178   003FCA  6E35               	movwf	??___flge^0,c
 12179   003FCC  0E00               	movlw	0
 12180   003FCE  142E               	andwf	(___flge@ff1+1)^0,w,c
 12181   003FD0  6E36               	movwf	(??___flge+1)^0,c
 12182   003FD2  0E80               	movlw	128
 12183   003FD4  142F               	andwf	(___flge@ff1+2)^0,w,c
 12184   003FD6  6E37               	movwf	(??___flge+2)^0,c
 12185   003FD8  0E7F               	movlw	127
 12186   003FDA  1430               	andwf	(___flge@ff1+3)^0,w,c
 12187   003FDC  6E38               	movwf	(??___flge+3)^0,c
 12188   003FDE  5035               	movf	??___flge^0,w,c
 12189   003FE0  1036               	iorwf	(??___flge+1)^0,w,c
 12190   003FE2  1037               	iorwf	(??___flge+2)^0,w,c
 12191   003FE4  1038               	iorwf	(??___flge+3)^0,w,c
 12192   003FE6  A4D8               	btfss	status,2,c
 12193   003FE8  EFF8  F01F         	goto	u7771
 12194   003FEC  EFFA  F01F         	goto	u7770
 12195   003FF0                     u7771:
 12196   003FF0  EF02  F020         	goto	l6498
 12197   003FF4                     u7770:
 12198   003FF4  0E00               	movlw	0
 12199   003FF6  6E2D               	movwf	___flge@ff1^0,c
 12200   003FF8  0E00               	movlw	0
 12201   003FFA  6E2E               	movwf	(___flge@ff1+1)^0,c
 12202   003FFC  0E00               	movlw	0
 12203   003FFE  6E2F               	movwf	(___flge@ff1+2)^0,c
 12204   004000  0E00               	movlw	0
 12205   004002  6E30               	movwf	(___flge@ff1+3)^0,c
 12206   004004                     l6498:
 12207   004004  0E00               	movlw	0
 12208   004006  1431               	andwf	___flge@ff2^0,w,c
 12209   004008  6E35               	movwf	??___flge^0,c
 12210   00400A  0E00               	movlw	0
 12211   00400C  1432               	andwf	(___flge@ff2+1)^0,w,c
 12212   00400E  6E36               	movwf	(??___flge+1)^0,c
 12213   004010  0E80               	movlw	128
 12214   004012  1433               	andwf	(___flge@ff2+2)^0,w,c
 12215   004014  6E37               	movwf	(??___flge+2)^0,c
 12216   004016  0E7F               	movlw	127
 12217   004018  1434               	andwf	(___flge@ff2+3)^0,w,c
 12218   00401A  6E38               	movwf	(??___flge+3)^0,c
 12219   00401C  5035               	movf	??___flge^0,w,c
 12220   00401E  1036               	iorwf	(??___flge+1)^0,w,c
 12221   004020  1037               	iorwf	(??___flge+2)^0,w,c
 12222   004022  1038               	iorwf	(??___flge+3)^0,w,c
 12223   004024  A4D8               	btfss	status,2,c
 12224   004026  EF17  F020         	goto	u7781
 12225   00402A  EF19  F020         	goto	u7780
 12226   00402E                     u7781:
 12227   00402E  EF21  F020         	goto	l6502
 12228   004032                     u7780:
 12229   004032  0E00               	movlw	0
 12230   004034  6E31               	movwf	___flge@ff2^0,c
 12231   004036  0E00               	movlw	0
 12232   004038  6E32               	movwf	(___flge@ff2+1)^0,c
 12233   00403A  0E00               	movlw	0
 12234   00403C  6E33               	movwf	(___flge@ff2+2)^0,c
 12235   00403E  0E00               	movlw	0
 12236   004040  6E34               	movwf	(___flge@ff2+3)^0,c
 12237   004042                     l6502:
 12238   004042  AE30               	btfss	(___flge@ff1+3)^0,7,c
 12239   004044  EF26  F020         	goto	u7791
 12240   004048  EF28  F020         	goto	u7790
 12241   00404C                     u7791:
 12242   00404C  EF31  F020         	goto	l6506
 12243   004050                     u7790:
 12244   004050  6C2D               	negf	___flge@ff1^0,c
 12245   004052  1E2E               	comf	(___flge@ff1+1)^0,f,c
 12246   004054  B0D8               	btfsc	status,0,c
 12247   004056  2A2E               	incf	(___flge@ff1+1)^0,f,c
 12248   004058  1E2F               	comf	(___flge@ff1+2)^0,f,c
 12249   00405A  B0D8               	btfsc	status,0,c
 12250   00405C  2A2F               	incf	(___flge@ff1+2)^0,f,c
 12251   00405E  0E80               	movlw	128
 12252   004060  5630               	subfwb	(___flge@ff1+3)^0,f,c
 12253   004062                     l6506:
 12254   004062  AE34               	btfss	(___flge@ff2+3)^0,7,c
 12255   004064  EF36  F020         	goto	u7801
 12256   004068  EF38  F020         	goto	u7800
 12257   00406C                     u7801:
 12258   00406C  EF41  F020         	goto	l889
 12259   004070                     u7800:
 12260   004070  6C31               	negf	___flge@ff2^0,c
 12261   004072  1E32               	comf	(___flge@ff2+1)^0,f,c
 12262   004074  B0D8               	btfsc	status,0,c
 12263   004076  2A32               	incf	(___flge@ff2+1)^0,f,c
 12264   004078  1E33               	comf	(___flge@ff2+2)^0,f,c
 12265   00407A  B0D8               	btfsc	status,0,c
 12266   00407C  2A33               	incf	(___flge@ff2+2)^0,f,c
 12267   00407E  0E80               	movlw	128
 12268   004080  5634               	subfwb	(___flge@ff2+3)^0,f,c
 12269   004082                     l889:
 12270   004082  0E00               	movlw	0
 12271   004084  1A2D               	xorwf	___flge@ff1^0,f,c
 12272   004086  0E00               	movlw	0
 12273   004088  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
 12274   00408A  0E00               	movlw	0
 12275   00408C  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
 12276   00408E  0E80               	movlw	128
 12277   004090  1A30               	xorwf	(___flge@ff1+3)^0,f,c
 12278   004092  0E00               	movlw	0
 12279   004094  1A31               	xorwf	___flge@ff2^0,f,c
 12280   004096  0E00               	movlw	0
 12281   004098  1A32               	xorwf	(___flge@ff2+1)^0,f,c
 12282   00409A  0E00               	movlw	0
 12283   00409C  1A33               	xorwf	(___flge@ff2+2)^0,f,c
 12284   00409E  0E80               	movlw	128
 12285   0040A0  1A34               	xorwf	(___flge@ff2+3)^0,f,c
 12286   0040A2  5031               	movf	___flge@ff2^0,w,c
 12287   0040A4  5C2D               	subwf	___flge@ff1^0,w,c
 12288   0040A6  5032               	movf	(___flge@ff2+1)^0,w,c
 12289   0040A8  582E               	subwfb	(___flge@ff1+1)^0,w,c
 12290   0040AA  5033               	movf	(___flge@ff2+2)^0,w,c
 12291   0040AC  582F               	subwfb	(___flge@ff1+2)^0,w,c
 12292   0040AE  5034               	movf	(___flge@ff2+3)^0,w,c
 12293   0040B0  5830               	subwfb	(___flge@ff1+3)^0,w,c
 12294   0040B2  B0D8               	btfsc	status,0,c
 12295   0040B4  EF5E  F020         	goto	u7811
 12296   0040B8  EF60  F020         	goto	u7810
 12297   0040BC                     u7811:
 12298   0040BC  EF63  F020         	goto	l6512
 12299   0040C0                     u7810:
 12300   0040C0  90D8               	bcf	status,0,c
 12301   0040C2  EF64  F020         	goto	l894
 12302   0040C6                     l6512:
 12303   0040C6  80D8               	bsf	status,0,c
 12304   0040C8                     l894:
 12305   0040C8  0012               	return		;funcret
 12306   0040CA                     __end_of___flge:
 12307                           	callstack 0
 12308                           
 12309 ;; *************** function ___fleq *****************
 12310 ;; Defined at:
 12311 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fleq.c"
 12312 ;; Parameters:    Size  Location     Type
 12313 ;;  ff1             4    5[COMRAM] unsigned char 
 12314 ;;  ff2             4    9[COMRAM] unsigned char 
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;		None
 12317 ;; Return value:  Size  Location     Type
 12318 ;;		None               void
 12319 ;; Registers used:
 12320 ;;		wreg, status,2, status,0
 12321 ;; Tracked objects:
 12322 ;;		On entry : 0/0
 12323 ;;		On exit  : 0/0
 12324 ;;		Unchanged: 0/0
 12325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12326 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12328 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12329 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12330 ;;Total ram usage:       12 bytes
 12331 ;; Hardware stack levels used: 1
 12332 ;; Hardware stack levels required when called: 1
 12333 ;; This function calls:
 12334 ;;		Nothing
 12335 ;; This function is called by:
 12336 ;;		_efgtoa
 12337 ;; This function uses a non-reentrant model
 12338 ;;
 12339                           
 12340                           	psect	text45
 12341   004730                     __ptext45:
 12342                           	callstack 0
 12343   004730                     ___fleq:
 12344                           	callstack 24
 12345   004730  0E00               	movlw	0
 12346   004732  1406               	andwf	___fleq@ff1^0,w,c
 12347   004734  6E0E               	movwf	??___fleq^0,c
 12348   004736  0E00               	movlw	0
 12349   004738  1407               	andwf	(___fleq@ff1+1)^0,w,c
 12350   00473A  6E0F               	movwf	(??___fleq+1)^0,c
 12351   00473C  0E80               	movlw	128
 12352   00473E  1408               	andwf	(___fleq@ff1+2)^0,w,c
 12353   004740  6E10               	movwf	(??___fleq+2)^0,c
 12354   004742  0E7F               	movlw	127
 12355   004744  1409               	andwf	(___fleq@ff1+3)^0,w,c
 12356   004746  6E11               	movwf	(??___fleq+3)^0,c
 12357   004748  500E               	movf	??___fleq^0,w,c
 12358   00474A  100F               	iorwf	(??___fleq+1)^0,w,c
 12359   00474C  1010               	iorwf	(??___fleq+2)^0,w,c
 12360   00474E  1011               	iorwf	(??___fleq+3)^0,w,c
 12361   004750  A4D8               	btfss	status,2,c
 12362   004752  EFAD  F023         	goto	u7741
 12363   004756  EFAF  F023         	goto	u7740
 12364   00475A                     u7741:
 12365   00475A  EFB7  F023         	goto	l6482
 12366   00475E                     u7740:
 12367   00475E  0E00               	movlw	0
 12368   004760  6E06               	movwf	___fleq@ff1^0,c
 12369   004762  0E00               	movlw	0
 12370   004764  6E07               	movwf	(___fleq@ff1+1)^0,c
 12371   004766  0E00               	movlw	0
 12372   004768  6E08               	movwf	(___fleq@ff1+2)^0,c
 12373   00476A  0E00               	movlw	0
 12374   00476C  6E09               	movwf	(___fleq@ff1+3)^0,c
 12375   00476E                     l6482:
 12376   00476E  0E00               	movlw	0
 12377   004770  140A               	andwf	___fleq@ff2^0,w,c
 12378   004772  6E0E               	movwf	??___fleq^0,c
 12379   004774  0E00               	movlw	0
 12380   004776  140B               	andwf	(___fleq@ff2+1)^0,w,c
 12381   004778  6E0F               	movwf	(??___fleq+1)^0,c
 12382   00477A  0E80               	movlw	128
 12383   00477C  140C               	andwf	(___fleq@ff2+2)^0,w,c
 12384   00477E  6E10               	movwf	(??___fleq+2)^0,c
 12385   004780  0E7F               	movlw	127
 12386   004782  140D               	andwf	(___fleq@ff2+3)^0,w,c
 12387   004784  6E11               	movwf	(??___fleq+3)^0,c
 12388   004786  500E               	movf	??___fleq^0,w,c
 12389   004788  100F               	iorwf	(??___fleq+1)^0,w,c
 12390   00478A  1010               	iorwf	(??___fleq+2)^0,w,c
 12391   00478C  1011               	iorwf	(??___fleq+3)^0,w,c
 12392   00478E  A4D8               	btfss	status,2,c
 12393   004790  EFCC  F023         	goto	u7751
 12394   004794  EFCE  F023         	goto	u7750
 12395   004798                     u7751:
 12396   004798  EFD6  F023         	goto	l6486
 12397   00479C                     u7750:
 12398   00479C  0E00               	movlw	0
 12399   00479E  6E0A               	movwf	___fleq@ff2^0,c
 12400   0047A0  0E00               	movlw	0
 12401   0047A2  6E0B               	movwf	(___fleq@ff2+1)^0,c
 12402   0047A4  0E00               	movlw	0
 12403   0047A6  6E0C               	movwf	(___fleq@ff2+2)^0,c
 12404   0047A8  0E00               	movlw	0
 12405   0047AA  6E0D               	movwf	(___fleq@ff2+3)^0,c
 12406   0047AC                     l6486:
 12407   0047AC  500A               	movf	___fleq@ff2^0,w,c
 12408   0047AE  1806               	xorwf	___fleq@ff1^0,w,c
 12409   0047B0  E10F               	bnz	u7760
 12410   0047B2  500B               	movf	(___fleq@ff2+1)^0,w,c
 12411   0047B4  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 12412   0047B6  E10C               	bnz	u7760
 12413   0047B8  500C               	movf	(___fleq@ff2+2)^0,w,c
 12414   0047BA  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 12415   0047BC  E109               	bnz	u7760
 12416   0047BE  500D               	movf	(___fleq@ff2+3)^0,w,c
 12417   0047C0  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 12418   0047C2  B4D8               	btfsc	status,2,c
 12419   0047C4  EFE6  F023         	goto	u7761
 12420   0047C8  EFE8  F023         	goto	u7760
 12421   0047CC                     u7761:
 12422   0047CC  EFEB  F023         	goto	l6490
 12423   0047D0                     u7760:
 12424   0047D0  90D8               	bcf	status,0,c
 12425   0047D2  EFEC  F023         	goto	l883
 12426   0047D6                     l6490:
 12427   0047D6  80D8               	bsf	status,0,c
 12428   0047D8                     l883:
 12429   0047D8  0012               	return		;funcret
 12430   0047DA                     __end_of___fleq:
 12431                           	callstack 0
 12432                           
 12433 ;; *************** function ___fldiv *****************
 12434 ;; Defined at:
 12435 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcdiv.c"
 12436 ;; Parameters:    Size  Location     Type
 12437 ;;  b               4   44[COMRAM] unsigned char 
 12438 ;;  a               4   48[COMRAM] unsigned char 
 12439 ;; Auto vars:     Size  Location     Type
 12440 ;;  grs             4   63[COMRAM] unsigned long 
 12441 ;;  rem             4   56[COMRAM] unsigned long 
 12442 ;;  new_exp         2   61[COMRAM] short 
 12443 ;;  aexp            1   68[COMRAM] unsigned char 
 12444 ;;  bexp            1   67[COMRAM] unsigned char 
 12445 ;;  sign            1   60[COMRAM] unsigned char 
 12446 ;; Return value:  Size  Location     Type
 12447 ;;                  4   44[COMRAM] unsigned char 
 12448 ;; Registers used:
 12449 ;;		wreg, status,2, status,0
 12450 ;; Tracked objects:
 12451 ;;		On entry : 0/0
 12452 ;;		On exit  : 0/0
 12453 ;;		Unchanged: 0/0
 12454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12455 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12456 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12457 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12458 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12459 ;;Total ram usage:       25 bytes
 12460 ;; Hardware stack levels used: 1
 12461 ;; Hardware stack levels required when called: 1
 12462 ;; This function calls:
 12463 ;;		Nothing
 12464 ;; This function is called by:
 12465 ;;		_runDAC
 12466 ;;		_runADC
 12467 ;;		_efgtoa
 12468 ;; This function uses a non-reentrant model
 12469 ;;
 12470                           
 12471                           	psect	text46
 12472   002226                     __ptext46:
 12473                           	callstack 0
 12474   002226                     ___fldiv:
 12475                           	callstack 24
 12476   002226  5030               	movf	(___fldiv@b+3)^0,w,c
 12477   002228  0B80               	andlw	128
 12478   00222A  6E3D               	movwf	___fldiv@sign^0,c
 12479   00222C  5030               	movf	(___fldiv@b+3)^0,w,c
 12480   00222E  2430               	addwf	(___fldiv@b+3)^0,w,c
 12481   002230  6E44               	movwf	___fldiv@bexp^0,c
 12482   002232  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 12483   002234  EF1E  F011         	goto	u7201
 12484   002238  EF20  F011         	goto	u7200
 12485   00223C                     u7201:
 12486   00223C  EF21  F011         	goto	l6130
 12487   002240                     u7200:
 12488   002240  8044               	bsf	___fldiv@bexp^0,0,c
 12489   002242                     l6130:
 12490   002242  5044               	movf	___fldiv@bexp^0,w,c
 12491   002244  B4D8               	btfsc	status,2,c
 12492   002246  EF27  F011         	goto	u7211
 12493   00224A  EF29  F011         	goto	u7210
 12494   00224E                     u7211:
 12495   00224E  EF3E  F011         	goto	l6140
 12496   002252                     u7210:
 12497   002252  2844               	incf	___fldiv@bexp^0,w,c
 12498   002254  A4D8               	btfss	status,2,c
 12499   002256  EF2F  F011         	goto	u7221
 12500   00225A  EF31  F011         	goto	u7220
 12501   00225E                     u7221:
 12502   00225E  EF39  F011         	goto	l6136
 12503   002262                     u7220:
 12504   002262  0E00               	movlw	0
 12505   002264  6E2D               	movwf	___fldiv@b^0,c
 12506   002266  0E00               	movlw	0
 12507   002268  6E2E               	movwf	(___fldiv@b+1)^0,c
 12508   00226A  0E00               	movlw	0
 12509   00226C  6E2F               	movwf	(___fldiv@b+2)^0,c
 12510   00226E  0E00               	movlw	0
 12511   002270  6E30               	movwf	(___fldiv@b+3)^0,c
 12512   002272                     l6136:
 12513   002272  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 12514   002274  0E00               	movlw	0
 12515   002276  6E30               	movwf	(___fldiv@b+3)^0,c
 12516   002278  EF46  F011         	goto	l6142
 12517   00227C                     l6140:
 12518   00227C  0E00               	movlw	0
 12519   00227E  6E2D               	movwf	___fldiv@b^0,c
 12520   002280  0E00               	movlw	0
 12521   002282  6E2E               	movwf	(___fldiv@b+1)^0,c
 12522   002284  0E00               	movlw	0
 12523   002286  6E2F               	movwf	(___fldiv@b+2)^0,c
 12524   002288  0E00               	movlw	0
 12525   00228A  6E30               	movwf	(___fldiv@b+3)^0,c
 12526   00228C                     l6142:
 12527   00228C  5034               	movf	(___fldiv@a+3)^0,w,c
 12528   00228E  0B80               	andlw	128
 12529   002290  1A3D               	xorwf	___fldiv@sign^0,f,c
 12530   002292  5034               	movf	(___fldiv@a+3)^0,w,c
 12531   002294  2434               	addwf	(___fldiv@a+3)^0,w,c
 12532   002296  6E45               	movwf	___fldiv@aexp^0,c
 12533   002298  AE33               	btfss	(___fldiv@a+2)^0,7,c
 12534   00229A  EF51  F011         	goto	u7231
 12535   00229E  EF53  F011         	goto	u7230
 12536   0022A2                     u7231:
 12537   0022A2  EF54  F011         	goto	l6150
 12538   0022A6                     u7230:
 12539   0022A6  8045               	bsf	___fldiv@aexp^0,0,c
 12540   0022A8                     l6150:
 12541   0022A8  5045               	movf	___fldiv@aexp^0,w,c
 12542   0022AA  B4D8               	btfsc	status,2,c
 12543   0022AC  EF5A  F011         	goto	u7241
 12544   0022B0  EF5C  F011         	goto	u7240
 12545   0022B4                     u7241:
 12546   0022B4  EF71  F011         	goto	l6160
 12547   0022B8                     u7240:
 12548   0022B8  2845               	incf	___fldiv@aexp^0,w,c
 12549   0022BA  A4D8               	btfss	status,2,c
 12550   0022BC  EF62  F011         	goto	u7251
 12551   0022C0  EF64  F011         	goto	u7250
 12552   0022C4                     u7251:
 12553   0022C4  EF6C  F011         	goto	l6156
 12554   0022C8                     u7250:
 12555   0022C8  0E00               	movlw	0
 12556   0022CA  6E31               	movwf	___fldiv@a^0,c
 12557   0022CC  0E00               	movlw	0
 12558   0022CE  6E32               	movwf	(___fldiv@a+1)^0,c
 12559   0022D0  0E00               	movlw	0
 12560   0022D2  6E33               	movwf	(___fldiv@a+2)^0,c
 12561   0022D4  0E00               	movlw	0
 12562   0022D6  6E34               	movwf	(___fldiv@a+3)^0,c
 12563   0022D8                     l6156:
 12564   0022D8  8E33               	bsf	(___fldiv@a+2)^0,7,c
 12565   0022DA  0E00               	movlw	0
 12566   0022DC  6E34               	movwf	(___fldiv@a+3)^0,c
 12567   0022DE  EF79  F011         	goto	l6162
 12568   0022E2                     l6160:
 12569   0022E2  0E00               	movlw	0
 12570   0022E4  6E31               	movwf	___fldiv@a^0,c
 12571   0022E6  0E00               	movlw	0
 12572   0022E8  6E32               	movwf	(___fldiv@a+1)^0,c
 12573   0022EA  0E00               	movlw	0
 12574   0022EC  6E33               	movwf	(___fldiv@a+2)^0,c
 12575   0022EE  0E00               	movlw	0
 12576   0022F0  6E34               	movwf	(___fldiv@a+3)^0,c
 12577   0022F2                     l6162:
 12578   0022F2  5031               	movf	___fldiv@a^0,w,c
 12579   0022F4  1032               	iorwf	(___fldiv@a+1)^0,w,c
 12580   0022F6  1033               	iorwf	(___fldiv@a+2)^0,w,c
 12581   0022F8  1034               	iorwf	(___fldiv@a+3)^0,w,c
 12582   0022FA  A4D8               	btfss	status,2,c
 12583   0022FC  EF82  F011         	goto	u7261
 12584   002300  EF84  F011         	goto	u7260
 12585   002304                     u7261:
 12586   002304  EF9C  F011         	goto	l6174
 12587   002308                     u7260:
 12588   002308  0E00               	movlw	0
 12589   00230A  6E2D               	movwf	___fldiv@b^0,c
 12590   00230C  0E00               	movlw	0
 12591   00230E  6E2E               	movwf	(___fldiv@b+1)^0,c
 12592   002310  0E00               	movlw	0
 12593   002312  6E2F               	movwf	(___fldiv@b+2)^0,c
 12594   002314  0E00               	movlw	0
 12595   002316  6E30               	movwf	(___fldiv@b+3)^0,c
 12596   002318  0E80               	movlw	128
 12597   00231A  122F               	iorwf	(___fldiv@b+2)^0,f,c
 12598   00231C  0E7F               	movlw	127
 12599   00231E  1230               	iorwf	(___fldiv@b+3)^0,f,c
 12600   002320                     l6168:
 12601   002320  503D               	movf	___fldiv@sign^0,w,c
 12602   002322  1230               	iorwf	(___fldiv@b+3)^0,f,c
 12603   002324  C02D  F02D         	movff	___fldiv@b,?___fldiv
 12604   002328  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
 12605   00232C  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
 12606   002330  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
 12607   002334  EFDF  F012         	goto	l1206
 12608   002338                     l6174:
 12609   002338  5044               	movf	___fldiv@bexp^0,w,c
 12610   00233A  A4D8               	btfss	status,2,c
 12611   00233C  EFA2  F011         	goto	u7271
 12612   002340  EFA4  F011         	goto	u7270
 12613   002344                     u7271:
 12614   002344  EFAE  F011         	goto	l6182
 12615   002348                     u7270:
 12616   002348  0E00               	movlw	0
 12617   00234A  6E2D               	movwf	?___fldiv^0,c
 12618   00234C  0E00               	movlw	0
 12619   00234E  6E2E               	movwf	(?___fldiv+1)^0,c
 12620   002350  0E00               	movlw	0
 12621   002352  6E2F               	movwf	(?___fldiv+2)^0,c
 12622   002354  0E00               	movlw	0
 12623   002356  6E30               	movwf	(?___fldiv+3)^0,c
 12624   002358  EFDF  F012         	goto	l1206
 12625   00235C                     l6182:
 12626   00235C  5045               	movf	___fldiv@aexp^0,w,c
 12627   00235E  C044  F035         	movff	___fldiv@bexp,??___fldiv
 12628   002362  6A36               	clrf	(??___fldiv+1)^0,c
 12629   002364  5E35               	subwf	??___fldiv^0,f,c
 12630   002366  0E00               	movlw	0
 12631   002368  5A36               	subwfb	(??___fldiv+1)^0,f,c
 12632   00236A  0E7F               	movlw	127
 12633   00236C  2435               	addwf	??___fldiv^0,w,c
 12634   00236E  6E3E               	movwf	___fldiv@new_exp^0,c
 12635   002370  0E00               	movlw	0
 12636   002372  2036               	addwfc	(??___fldiv+1)^0,w,c
 12637   002374  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 12638   002376  C02D  F039         	movff	___fldiv@b,___fldiv@rem
 12639   00237A  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
 12640   00237E  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
 12641   002382  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
 12642   002386  0E00               	movlw	0
 12643   002388  6E2D               	movwf	___fldiv@b^0,c
 12644   00238A  0E00               	movlw	0
 12645   00238C  6E2E               	movwf	(___fldiv@b+1)^0,c
 12646   00238E  0E00               	movlw	0
 12647   002390  6E2F               	movwf	(___fldiv@b+2)^0,c
 12648   002392  0E00               	movlw	0
 12649   002394  6E30               	movwf	(___fldiv@b+3)^0,c
 12650   002396  0E00               	movlw	0
 12651   002398  6E40               	movwf	___fldiv@grs^0,c
 12652   00239A  0E00               	movlw	0
 12653   00239C  6E41               	movwf	(___fldiv@grs+1)^0,c
 12654   00239E  0E00               	movlw	0
 12655   0023A0  6E42               	movwf	(___fldiv@grs+2)^0,c
 12656   0023A2  0E00               	movlw	0
 12657   0023A4  6E43               	movwf	(___fldiv@grs+3)^0,c
 12658   0023A6  0E00               	movlw	0
 12659   0023A8  6E45               	movwf	___fldiv@aexp^0,c
 12660   0023AA  EF0F  F012         	goto	l1208
 12661   0023AE                     l6192:
 12662   0023AE  5045               	movf	___fldiv@aexp^0,w,c
 12663   0023B0  B4D8               	btfsc	status,2,c
 12664   0023B2  EFDD  F011         	goto	u7281
 12665   0023B6  EFDF  F011         	goto	u7280
 12666   0023BA                     u7281:
 12667   0023BA  EFF6  F011         	goto	l6200
 12668   0023BE                     u7280:
 12669   0023BE  90D8               	bcf	status,0,c
 12670   0023C0  3639               	rlcf	___fldiv@rem^0,f,c
 12671   0023C2  363A               	rlcf	(___fldiv@rem+1)^0,f,c
 12672   0023C4  363B               	rlcf	(___fldiv@rem+2)^0,f,c
 12673   0023C6  363C               	rlcf	(___fldiv@rem+3)^0,f,c
 12674   0023C8  90D8               	bcf	status,0,c
 12675   0023CA  362D               	rlcf	___fldiv@b^0,f,c
 12676   0023CC  362E               	rlcf	(___fldiv@b+1)^0,f,c
 12677   0023CE  362F               	rlcf	(___fldiv@b+2)^0,f,c
 12678   0023D0  3630               	rlcf	(___fldiv@b+3)^0,f,c
 12679   0023D2  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 12680   0023D4  EFEE  F011         	goto	u7291
 12681   0023D8  EFF0  F011         	goto	u7290
 12682   0023DC                     u7291:
 12683   0023DC  EFF1  F011         	goto	l1211
 12684   0023E0                     u7290:
 12685   0023E0  802D               	bsf	___fldiv@b^0,0,c
 12686   0023E2                     l1211:
 12687   0023E2  90D8               	bcf	status,0,c
 12688   0023E4  3640               	rlcf	___fldiv@grs^0,f,c
 12689   0023E6  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 12690   0023E8  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 12691   0023EA  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 12692   0023EC                     l6200:
 12693   0023EC  5031               	movf	___fldiv@a^0,w,c
 12694   0023EE  5C39               	subwf	___fldiv@rem^0,w,c
 12695   0023F0  5032               	movf	(___fldiv@a+1)^0,w,c
 12696   0023F2  583A               	subwfb	(___fldiv@rem+1)^0,w,c
 12697   0023F4  5033               	movf	(___fldiv@a+2)^0,w,c
 12698   0023F6  583B               	subwfb	(___fldiv@rem+2)^0,w,c
 12699   0023F8  5034               	movf	(___fldiv@a+3)^0,w,c
 12700   0023FA  583C               	subwfb	(___fldiv@rem+3)^0,w,c
 12701   0023FC  A0D8               	btfss	status,0,c
 12702   0023FE  EF03  F012         	goto	u7301
 12703   002402  EF05  F012         	goto	u7300
 12704   002406                     u7301:
 12705   002406  EF0E  F012         	goto	l6206
 12706   00240A                     u7300:
 12707   00240A  8C43               	bsf	(___fldiv@grs+3)^0,6,c
 12708   00240C  5031               	movf	___fldiv@a^0,w,c
 12709   00240E  5E39               	subwf	___fldiv@rem^0,f,c
 12710   002410  5032               	movf	(___fldiv@a+1)^0,w,c
 12711   002412  5A3A               	subwfb	(___fldiv@rem+1)^0,f,c
 12712   002414  5033               	movf	(___fldiv@a+2)^0,w,c
 12713   002416  5A3B               	subwfb	(___fldiv@rem+2)^0,f,c
 12714   002418  5034               	movf	(___fldiv@a+3)^0,w,c
 12715   00241A  5A3C               	subwfb	(___fldiv@rem+3)^0,f,c
 12716   00241C                     l6206:
 12717   00241C  2A45               	incf	___fldiv@aexp^0,f,c
 12718   00241E                     l1208:
 12719   00241E  0E19               	movlw	25
 12720   002420  6445               	cpfsgt	___fldiv@aexp^0,c
 12721   002422  EF15  F012         	goto	u7311
 12722   002426  EF17  F012         	goto	u7310
 12723   00242A                     u7311:
 12724   00242A  EFD7  F011         	goto	l6192
 12725   00242E                     u7310:
 12726   00242E  5039               	movf	___fldiv@rem^0,w,c
 12727   002430  103A               	iorwf	(___fldiv@rem+1)^0,w,c
 12728   002432  103B               	iorwf	(___fldiv@rem+2)^0,w,c
 12729   002434  103C               	iorwf	(___fldiv@rem+3)^0,w,c
 12730   002436  B4D8               	btfsc	status,2,c
 12731   002438  EF20  F012         	goto	u7321
 12732   00243C  EF22  F012         	goto	u7320
 12733   002440                     u7321:
 12734   002440  EF3A  F012         	goto	l6218
 12735   002444                     u7320:
 12736   002444  8040               	bsf	___fldiv@grs^0,0,c
 12737   002446  EF3A  F012         	goto	l6218
 12738   00244A                     l6212:
 12739   00244A  90D8               	bcf	status,0,c
 12740   00244C  362D               	rlcf	___fldiv@b^0,f,c
 12741   00244E  362E               	rlcf	(___fldiv@b+1)^0,f,c
 12742   002450  362F               	rlcf	(___fldiv@b+2)^0,f,c
 12743   002452  3630               	rlcf	(___fldiv@b+3)^0,f,c
 12744   002454  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 12745   002456  EF2F  F012         	goto	u7331
 12746   00245A  EF31  F012         	goto	u7330
 12747   00245E                     u7331:
 12748   00245E  EF32  F012         	goto	l1217
 12749   002462                     u7330:
 12750   002462  802D               	bsf	___fldiv@b^0,0,c
 12751   002464                     l1217:
 12752   002464  90D8               	bcf	status,0,c
 12753   002466  3640               	rlcf	___fldiv@grs^0,f,c
 12754   002468  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 12755   00246A  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 12756   00246C  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 12757   00246E  063E               	decf	___fldiv@new_exp^0,f,c
 12758   002470  A0D8               	btfss	status,0,c
 12759   002472  063F               	decf	(___fldiv@new_exp+1)^0,f,c
 12760   002474                     l6218:
 12761   002474  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 12762   002476  EF3F  F012         	goto	u7341
 12763   00247A  EF41  F012         	goto	u7340
 12764   00247E                     u7341:
 12765   00247E  EF25  F012         	goto	l6212
 12766   002482                     u7340:
 12767   002482  0E00               	movlw	0
 12768   002484  6E45               	movwf	___fldiv@aexp^0,c
 12769   002486  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 12770   002488  EF48  F012         	goto	u7351
 12771   00248C  EF4A  F012         	goto	u7350
 12772   002490                     u7351:
 12773   002490  EF6E  F012         	goto	l1219
 12774   002494                     u7350:
 12775   002494  0EFF               	movlw	255
 12776   002496  1440               	andwf	___fldiv@grs^0,w,c
 12777   002498  6E35               	movwf	??___fldiv^0,c
 12778   00249A  0EFF               	movlw	255
 12779   00249C  1441               	andwf	(___fldiv@grs+1)^0,w,c
 12780   00249E  6E36               	movwf	(??___fldiv+1)^0,c
 12781   0024A0  0EFF               	movlw	255
 12782   0024A2  1442               	andwf	(___fldiv@grs+2)^0,w,c
 12783   0024A4  6E37               	movwf	(??___fldiv+2)^0,c
 12784   0024A6  0E7F               	movlw	127
 12785   0024A8  1443               	andwf	(___fldiv@grs+3)^0,w,c
 12786   0024AA  6E38               	movwf	(??___fldiv+3)^0,c
 12787   0024AC  5035               	movf	??___fldiv^0,w,c
 12788   0024AE  1036               	iorwf	(??___fldiv+1)^0,w,c
 12789   0024B0  1037               	iorwf	(??___fldiv+2)^0,w,c
 12790   0024B2  1038               	iorwf	(??___fldiv+3)^0,w,c
 12791   0024B4  B4D8               	btfsc	status,2,c
 12792   0024B6  EF5F  F012         	goto	u7361
 12793   0024BA  EF61  F012         	goto	u7360
 12794   0024BE                     u7361:
 12795   0024BE  EF65  F012         	goto	l1220
 12796   0024C2                     u7360:
 12797   0024C2                     l6226:
 12798   0024C2  0E01               	movlw	1
 12799   0024C4  6E45               	movwf	___fldiv@aexp^0,c
 12800   0024C6  EF6E  F012         	goto	l1219
 12801   0024CA                     l1220:
 12802   0024CA  A02D               	btfss	___fldiv@b^0,0,c
 12803   0024CC  EF6A  F012         	goto	u7371
 12804   0024D0  EF6C  F012         	goto	u7370
 12805   0024D4                     u7371:
 12806   0024D4  EF6E  F012         	goto	l1219
 12807   0024D8                     u7370:
 12808   0024D8  EF61  F012         	goto	l6226
 12809   0024DC                     l1219:
 12810   0024DC  5045               	movf	___fldiv@aexp^0,w,c
 12811   0024DE  B4D8               	btfsc	status,2,c
 12812   0024E0  EF74  F012         	goto	u7381
 12813   0024E4  EF76  F012         	goto	u7380
 12814   0024E8                     u7381:
 12815   0024E8  EF9A  F012         	goto	l6238
 12816   0024EC                     u7380:
 12817   0024EC  0E01               	movlw	1
 12818   0024EE  262D               	addwf	___fldiv@b^0,f,c
 12819   0024F0  0E00               	movlw	0
 12820   0024F2  222E               	addwfc	(___fldiv@b+1)^0,f,c
 12821   0024F4  222F               	addwfc	(___fldiv@b+2)^0,f,c
 12822   0024F6  2230               	addwfc	(___fldiv@b+3)^0,f,c
 12823   0024F8  A030               	btfss	(___fldiv@b+3)^0,0,c
 12824   0024FA  EF81  F012         	goto	u7391
 12825   0024FE  EF83  F012         	goto	u7390
 12826   002502                     u7391:
 12827   002502  EF9A  F012         	goto	l6238
 12828   002506                     u7390:
 12829   002506  C02D  F035         	movff	___fldiv@b,??___fldiv
 12830   00250A  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
 12831   00250E  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
 12832   002512  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
 12833   002516  3438               	rlcf	(??___fldiv+3)^0,w,c
 12834   002518  3238               	rrcf	(??___fldiv+3)^0,f,c
 12835   00251A  3237               	rrcf	(??___fldiv+2)^0,f,c
 12836   00251C  3236               	rrcf	(??___fldiv+1)^0,f,c
 12837   00251E  3235               	rrcf	??___fldiv^0,f,c
 12838   002520  C035  F02D         	movff	??___fldiv,___fldiv@b
 12839   002524  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
 12840   002528  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
 12841   00252C  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
 12842   002530  4A3E               	infsnz	___fldiv@new_exp^0,f,c
 12843   002532  2A3F               	incf	(___fldiv@new_exp+1)^0,f,c
 12844   002534                     l6238:
 12845   002534  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12846   002536  EFA5  F012         	goto	u7401
 12847   00253A  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 12848   00253C  E108               	bnz	u7400
 12849   00253E  283E               	incf	___fldiv@new_exp^0,w,c
 12850   002540  A0D8               	btfss	status,0,c
 12851   002542  EFA5  F012         	goto	u7401
 12852   002546  EFA7  F012         	goto	u7400
 12853   00254A                     u7401:
 12854   00254A  EFB2  F012         	goto	l6242
 12855   00254E                     u7400:
 12856   00254E  0E00               	movlw	0
 12857   002550  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 12858   002552  683E               	setf	___fldiv@new_exp^0,c
 12859   002554  0E00               	movlw	0
 12860   002556  6E2D               	movwf	___fldiv@b^0,c
 12861   002558  0E00               	movlw	0
 12862   00255A  6E2E               	movwf	(___fldiv@b+1)^0,c
 12863   00255C  0E00               	movlw	0
 12864   00255E  6E2F               	movwf	(___fldiv@b+2)^0,c
 12865   002560  0E00               	movlw	0
 12866   002562  6E30               	movwf	(___fldiv@b+3)^0,c
 12867   002564                     l6242:
 12868   002564  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12869   002566  EFBF  F012         	goto	u7410
 12870   00256A  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 12871   00256C  E106               	bnz	u7411
 12872   00256E  043E               	decf	___fldiv@new_exp^0,w,c
 12873   002570  B0D8               	btfsc	status,0,c
 12874   002572  EFBD  F012         	goto	u7411
 12875   002576  EFBF  F012         	goto	u7410
 12876   00257A                     u7411:
 12877   00257A  EFCD  F012         	goto	l6246
 12878   00257E                     u7410:
 12879   00257E  0E00               	movlw	0
 12880   002580  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 12881   002582  0E00               	movlw	0
 12882   002584  6E3E               	movwf	___fldiv@new_exp^0,c
 12883   002586  0E00               	movlw	0
 12884   002588  6E2D               	movwf	___fldiv@b^0,c
 12885   00258A  0E00               	movlw	0
 12886   00258C  6E2E               	movwf	(___fldiv@b+1)^0,c
 12887   00258E  0E00               	movlw	0
 12888   002590  6E2F               	movwf	(___fldiv@b+2)^0,c
 12889   002592  0E00               	movlw	0
 12890   002594  6E30               	movwf	(___fldiv@b+3)^0,c
 12891   002596  0E00               	movlw	0
 12892   002598  6E3D               	movwf	___fldiv@sign^0,c
 12893   00259A                     l6246:
 12894   00259A  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
 12895   00259E  A044               	btfss	___fldiv@bexp^0,0,c
 12896   0025A0  EFD4  F012         	goto	u7421
 12897   0025A4  EFD6  F012         	goto	u7420
 12898   0025A8                     u7421:
 12899   0025A8  EFD9  F012         	goto	l6252
 12900   0025AC                     u7420:
 12901   0025AC  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 12902   0025AE  EFDA  F012         	goto	l6254
 12903   0025B2                     l6252:
 12904   0025B2  9E2F               	bcf	(___fldiv@b+2)^0,7,c
 12905   0025B4                     l6254:
 12906   0025B4  90D8               	bcf	status,0,c
 12907   0025B6  3044               	rrcf	___fldiv@bexp^0,w,c
 12908   0025B8  6E30               	movwf	(___fldiv@b+3)^0,c
 12909   0025BA  EF90  F011         	goto	l6168
 12910   0025BE                     l1206:
 12911   0025BE  0012               	return		;funcret
 12912   0025C0                     __end_of___fldiv:
 12913                           	callstack 0
 12914                           
 12915 ;; *************** function _dtoa *****************
 12916 ;; Defined at:
 12917 ;;		line 513 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 12918 ;; Parameters:    Size  Location     Type
 12919 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 12920 ;;		 -> NULL(0), sprintf@f(12), 
 12921 ;;  d               2   33[COMRAM] int 
 12922 ;; Auto vars:     Size  Location     Type
 12923 ;;  i               2   42[COMRAM] int 
 12924 ;;  p               2   39[COMRAM] int 
 12925 ;;  w               2   37[COMRAM] int 
 12926 ;;  s               1   41[COMRAM] unsigned char 
 12927 ;; Return value:  Size  Location     Type
 12928 ;;                  1    wreg      void 
 12929 ;; Registers used:
 12930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12931 ;; Tracked objects:
 12932 ;;		On entry : 0/0
 12933 ;;		On exit  : 0/0
 12934 ;;		Unchanged: 0/0
 12935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12936 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12937 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12939 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12940 ;;Total ram usage:       13 bytes
 12941 ;; Hardware stack levels used: 1
 12942 ;; Hardware stack levels required when called: 5
 12943 ;; This function calls:
 12944 ;;		___awdiv
 12945 ;;		___awmod
 12946 ;;		_abs
 12947 ;;		_pad
 12948 ;; This function is called by:
 12949 ;;		_vfpfcnvrt
 12950 ;; This function uses a non-reentrant model
 12951 ;;
 12952                           
 12953                           	psect	text47
 12954   003704                     __ptext47:
 12955                           	callstack 0
 12956   003704                     _dtoa:
 12957                           	callstack 21
 12958   003704                     
 12959                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 513: static void dtoa(FILE *fp, vfp
      +                          f_sint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 514: {;D:\MPLABX\Compile
      +                          r\pic\sources\c99\common\doprnt.c: 515:  char s;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 516:     int i, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 518:
      +                            int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 524:     s = d < 0 ? 1 : 0;
 12960   003704  BE23               	btfsc	(dtoa@d+1)^0,7,c
 12961   003706  EF87  F01B         	goto	u8211
 12962   00370A  EF8A  F01B         	goto	u8210
 12963   00370E                     u8211:
 12964   00370E  0E01               	movlw	1
 12965   003710  EF8B  F01B         	goto	u8220
 12966   003714                     u8210:
 12967   003714  0E00               	movlw	0
 12968   003716                     u8220:
 12969   003716  6E2A               	movwf	dtoa@s^0,c
 12970                           
 12971                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 533:     p = (0 <= prec) ? prec : 1
      +                          ;
 12972   003718  BE58               	btfsc	(_prec+1)^0,7,c
 12973   00371A  EF93  F01B         	goto	u8230
 12974   00371E  EF91  F01B         	goto	u8231
 12975   003722                     u8231:
 12976   003722  EF99  F01B         	goto	l1341
 12977   003726                     u8230:
 12978   003726  0E00               	movlw	0
 12979   003728  6E29               	movwf	(dtoa@p+1)^0,c
 12980   00372A  0E01               	movlw	1
 12981   00372C  6E28               	movwf	dtoa@p^0,c
 12982   00372E  EF9D  F01B         	goto	l1343
 12983   003732                     l1341:
 12984   003732  C057  F028         	movff	_prec,dtoa@p
 12985   003736  C058  F029         	movff	_prec+1,dtoa@p+1
 12986   00373A                     l1343:
 12987                           
 12988                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 535:     w = width;
 12989   00373A  C055  F026         	movff	_width,dtoa@w
 12990   00373E  C056  F027         	movff	_width+1,dtoa@w+1
 12991   003742                     
 12992                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 536:     if (s
 12993   003742  502A               	movf	dtoa@s^0,w,c
 12994   003744  B4D8               	btfsc	status,2,c
 12995   003746  EFA7  F01B         	goto	u8241
 12996   00374A  EFA9  F01B         	goto	u8240
 12997   00374E                     u8241:
 12998   00374E  EFC0  F01B         	goto	l1344
 12999   003752                     u8240:
 13000   003752                     
 13001                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 540:     ) {;D:\MPLABX\Compiler\pic
      +                          \sources\c99\common\doprnt.c: 541:         --w;
 13002   003752  0626               	decf	dtoa@w^0,f,c
 13003   003754  A0D8               	btfss	status,0,c
 13004   003756  0627               	decf	(dtoa@w+1)^0,f,c
 13005   003758                     
 13006                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-' : '+';
 13007   003758  502A               	movf	dtoa@s^0,w,c
 13008   00375A  A4D8               	btfss	status,2,c
 13009   00375C  EFB2  F01B         	goto	u8251
 13010   003760  EFB4  F01B         	goto	u8250
 13011   003764                     u8251:
 13012   003764  EFBA  F01B         	goto	l6712
 13013   003768                     u8250:
 13014   003768  0E00               	movlw	0
 13015   00376A  6E25               	movwf	(_dtoa$3965+1)^0,c
 13016   00376C  0E2B               	movlw	43
 13017   00376E  6E24               	movwf	_dtoa$3965^0,c
 13018   003770  EFBE  F01B         	goto	l6714
 13019   003774                     l6712:
 13020   003774  0E00               	movlw	0
 13021   003776  6E25               	movwf	(_dtoa$3965+1)^0,c
 13022   003778  0E2D               	movlw	45
 13023   00377A  6E24               	movwf	_dtoa$3965^0,c
 13024   00377C                     l6714:
 13025   00377C  C024  F02A         	movff	_dtoa$3965,dtoa@s
 13026   003780                     l1344:
 13027                           
 13028                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 552:     i = sizeof(dbuf) - 1;
 13029   003780  0E00               	movlw	0
 13030   003782  6E2C               	movwf	(dtoa@i+1)^0,c
 13031   003784  0E4F               	movlw	79
 13032   003786  6E2B               	movwf	dtoa@i^0,c
 13033   003788                     
 13034                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] = '\0';
 13035   003788  0E00               	movlw	0
 13036   00378A  0101               	movlb	1	; () banked
 13037   00378C  6F74               	movwf	(_dbuf+79)& (0+255),b
 13038                           
 13039                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 13040   00378E  EFF9  F01B         	goto	l6728
 13041   003792                     l6718:
 13042                           
 13043                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 563:     )) {;D:\MPLABX\Compiler\pi
      +                          c\sources\c99\common\doprnt.c: 564:         --i;
 13044   003792  062B               	decf	dtoa@i^0,f,c
 13045   003794  A0D8               	btfss	status,0,c
 13046   003796  062C               	decf	(dtoa@i+1)^0,f,c
 13047   003798                     
 13048                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 565:         dbuf[i] = (char)((int)
      +                          '0' + abs(d % 10));
 13049   003798  0E25               	movlw	low _dbuf
 13050   00379A  242B               	addwf	dtoa@i^0,w,c
 13051   00379C  6ED9               	movwf	fsr2l,c
 13052   00379E  0E01               	movlw	high _dbuf
 13053   0037A0  202C               	addwfc	(dtoa@i+1)^0,w,c
 13054   0037A2  6EDA               	movwf	fsr2h,c
 13055   0037A4  C022  F006         	movff	dtoa@d,___awmod@dividend
 13056   0037A8  C023  F007         	movff	dtoa@d+1,___awmod@dividend+1
 13057   0037AC  0E00               	movlw	0
 13058   0037AE  6E09               	movwf	(___awmod@divisor+1)^0,c
 13059   0037B0  0E0A               	movlw	10
 13060   0037B2  6E08               	movwf	___awmod@divisor^0,c
 13061   0037B4  ECE9  F022         	call	___awmod	;wreg free
 13062   0037B8  C006  F00C         	movff	?___awmod,abs@a
 13063   0037BC  C007  F00D         	movff	?___awmod+1,abs@a+1
 13064   0037C0  EC5B  F026         	call	_abs	;wreg free
 13065   0037C4  500C               	movf	?_abs^0,w,c
 13066   0037C6  0F30               	addlw	48
 13067   0037C8  6EDF               	movwf	indf2,c
 13068   0037CA                     
 13069                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 567:         --p;
 13070   0037CA  0628               	decf	dtoa@p^0,f,c
 13071   0037CC  A0D8               	btfss	status,0,c
 13072   0037CE  0629               	decf	(dtoa@p+1)^0,f,c
 13073   0037D0                     
 13074                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 571:         --w;
 13075   0037D0  0626               	decf	dtoa@w^0,f,c
 13076   0037D2  A0D8               	btfss	status,0,c
 13077   0037D4  0627               	decf	(dtoa@w+1)^0,f,c
 13078   0037D6                     
 13079                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 572:         d = d / 10;
 13080   0037D6  C022  F006         	movff	dtoa@d,___awdiv@dividend
 13081   0037DA  C023  F007         	movff	dtoa@d+1,___awdiv@dividend+1
 13082   0037DE  0E00               	movlw	0
 13083   0037E0  6E09               	movwf	(___awdiv@divisor+1)^0,c
 13084   0037E2  0E0A               	movlw	10
 13085   0037E4  6E08               	movwf	___awdiv@divisor^0,c
 13086   0037E6  EC2E  F022         	call	___awdiv	;wreg free
 13087   0037EA  C006  F022         	movff	?___awdiv,dtoa@d
 13088   0037EE  C007  F023         	movff	?___awdiv+1,dtoa@d+1
 13089   0037F2                     l6728:
 13090                           
 13091                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 13092   0037F2  BE2C               	btfsc	(dtoa@i+1)^0,7,c
 13093   0037F4  EF04  F01C         	goto	u8261
 13094   0037F8  502C               	movf	(dtoa@i+1)^0,w,c
 13095   0037FA  E108               	bnz	u8260
 13096   0037FC  042B               	decf	dtoa@i^0,w,c
 13097   0037FE  A0D8               	btfss	status,0,c
 13098   003800  EF04  F01C         	goto	u8261
 13099   003804  EF06  F01C         	goto	u8260
 13100   003808                     u8261:
 13101   003808  EF1C  F01C         	goto	l6734
 13102   00380C                     u8260:
 13103   00380C  5022               	movf	dtoa@d^0,w,c
 13104   00380E  1023               	iorwf	(dtoa@d+1)^0,w,c
 13105   003810  A4D8               	btfss	status,2,c
 13106   003812  EF0D  F01C         	goto	u8271
 13107   003816  EF0F  F01C         	goto	u8270
 13108   00381A                     u8271:
 13109   00381A  EFC9  F01B         	goto	l6718
 13110   00381E                     u8270:
 13111   00381E  BE29               	btfsc	(dtoa@p+1)^0,7,c
 13112   003820  EF1C  F01C         	goto	u8280
 13113   003824  5029               	movf	(dtoa@p+1)^0,w,c
 13114   003826  E106               	bnz	u8281
 13115   003828  0428               	decf	dtoa@p^0,w,c
 13116   00382A  B0D8               	btfsc	status,0,c
 13117   00382C  EF1A  F01C         	goto	u8281
 13118   003830  EF1C  F01C         	goto	u8280
 13119   003834                     u8281:
 13120   003834  EFC9  F01B         	goto	l6718
 13121   003838                     u8280:
 13122   003838                     l6734:
 13123                           
 13124                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 576:     if (s != 0) {
 13125   003838  502A               	movf	dtoa@s^0,w,c
 13126   00383A  B4D8               	btfsc	status,2,c
 13127   00383C  EF22  F01C         	goto	u8291
 13128   003840  EF24  F01C         	goto	u8290
 13129   003844                     u8291:
 13130   003844  EF2F  F01C         	goto	l6740
 13131   003848                     u8290:
 13132   003848                     
 13133                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 577:         --i;
 13134   003848  062B               	decf	dtoa@i^0,f,c
 13135   00384A  A0D8               	btfss	status,0,c
 13136   00384C  062C               	decf	(dtoa@i+1)^0,f,c
 13137   00384E                     
 13138                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 578:         dbuf[i] = s;
 13139   00384E  0E25               	movlw	low _dbuf
 13140   003850  242B               	addwf	dtoa@i^0,w,c
 13141   003852  6ED9               	movwf	fsr2l,c
 13142   003854  0E01               	movlw	high _dbuf
 13143   003856  202C               	addwfc	(dtoa@i+1)^0,w,c
 13144   003858  6EDA               	movwf	fsr2h,c
 13145   00385A  C02A  FFDF         	movff	dtoa@s,indf2
 13146   00385E                     l6740:
 13147                           
 13148                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 582:     return (void) pad(fp, &dbu
      +                          f[i], w);
 13149   00385E  C020  F017         	movff	dtoa@fp,pad@fp
 13150   003862  C021  F018         	movff	dtoa@fp+1,pad@fp+1
 13151   003866  0E25               	movlw	low _dbuf
 13152   003868  242B               	addwf	dtoa@i^0,w,c
 13153   00386A  6E19               	movwf	pad@buf^0,c
 13154   00386C  0E01               	movlw	high _dbuf
 13155   00386E  202C               	addwfc	(dtoa@i+1)^0,w,c
 13156   003870  6E1A               	movwf	(pad@buf+1)^0,c
 13157   003872  C026  F01B         	movff	dtoa@w,pad@p
 13158   003876  C027  F01C         	movff	dtoa@w+1,pad@p+1
 13159   00387A  ECED  F023         	call	_pad	;wreg free
 13160   00387E  0012               	return		;funcret
 13161   003880                     __end_of_dtoa:
 13162                           	callstack 0
 13163                           
 13164 ;; *************** function _pad *****************
 13165 ;; Defined at:
 13166 ;;		line 193 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 13167 ;; Parameters:    Size  Location     Type
 13168 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 13169 ;;		 -> NULL(0), sprintf@f(12), 
 13170 ;;  buf             2   24[COMRAM] PTR unsigned char 
 13171 ;;		 -> dbuf(80), 
 13172 ;;  p               2   26[COMRAM] int 
 13173 ;; Auto vars:     Size  Location     Type
 13174 ;;  i               2   29[COMRAM] int 
 13175 ;; Return value:  Size  Location     Type
 13176 ;;                  1    wreg      void 
 13177 ;; Registers used:
 13178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13179 ;; Tracked objects:
 13180 ;;		On entry : 0/0
 13181 ;;		On exit  : 0/0
 13182 ;;		Unchanged: 0/0
 13183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13184 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13187 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13188 ;;Total ram usage:        9 bytes
 13189 ;; Hardware stack levels used: 1
 13190 ;; Hardware stack levels required when called: 4
 13191 ;; This function calls:
 13192 ;;		_fputc
 13193 ;;		_fputs
 13194 ;; This function is called by:
 13195 ;;		_dtoa
 13196 ;;		_efgtoa
 13197 ;;		_utoa
 13198 ;; This function uses a non-reentrant model
 13199 ;;
 13200                           
 13201                           	psect	text48
 13202   0047DA                     __ptext48:
 13203                           	callstack 0
 13204   0047DA                     _pad:
 13205                           	callstack 21
 13206   0047DA                     
 13207                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 193: static void pad(FILE *fp, char
      +                           *buf, int p);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 194: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 195:     int i;;D:\MPLABX\Compiler\pic\sources\c99\
      +                          common\doprnt.c: 199:     if (flags & (1 << 0)) {
 13208   0047DA  A059               	btfss	_flags^0,0,c
 13209   0047DC  EFF2  F023         	goto	u7961
 13210   0047E0  EFF4  F023         	goto	u7960
 13211   0047E4                     u7961:
 13212   0047E4  EFFE  F023         	goto	l6610
 13213   0047E8                     u7960:
 13214   0047E8                     
 13215                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 200:         fputs((const char *)bu
      +                          f, fp);
 13216   0047E8  C019  F010         	movff	pad@buf,fputs@s
 13217   0047EC  C01A  F011         	movff	pad@buf+1,fputs@s+1
 13218   0047F0  C017  F012         	movff	pad@fp,fputs@fp
 13219   0047F4  C018  F013         	movff	pad@fp+1,fputs@fp+1
 13220   0047F8  EC91  F025         	call	_fputs	;wreg free
 13221   0047FC                     l6610:
 13222                           
 13223                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) {
 13224   0047FC  BE1C               	btfsc	(pad@p+1)^0,7,c
 13225   0047FE  EF05  F024         	goto	u7970
 13226   004802  EF03  F024         	goto	u7971
 13227   004806                     u7971:
 13228   004806  EF09  F024         	goto	l1332
 13229   00480A                     u7970:
 13230   00480A                     
 13231                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 13232   00480A  0E00               	movlw	0
 13233   00480C  6E1C               	movwf	(pad@p+1)^0,c
 13234   00480E  0E00               	movlw	0
 13235   004810  6E1B               	movwf	pad@p^0,c
 13236   004812                     l1332:
 13237                           
 13238                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 13239   004812  0E00               	movlw	0
 13240   004814  6E1F               	movwf	(pad@i+1)^0,c
 13241   004816  0E00               	movlw	0
 13242   004818  6E1E               	movwf	pad@i^0,c
 13243                           
 13244                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 13245   00481A  EF1B  F024         	goto	l6618
 13246   00481E                     l6614:
 13247                           
 13248                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 210:         fputc(' ', fp);
 13249   00481E  0E00               	movlw	0
 13250   004820  6E08               	movwf	(fputc@c+1)^0,c
 13251   004822  0E20               	movlw	32
 13252   004824  6E07               	movwf	fputc@c^0,c
 13253   004826  C017  F009         	movff	pad@fp,fputc@fp
 13254   00482A  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 13255   00482E  ECC9  F021         	call	_fputc	;wreg free
 13256   004832                     
 13257                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 211:         ++i;
 13258   004832  4A1E               	infsnz	pad@i^0,f,c
 13259   004834  2A1F               	incf	(pad@i+1)^0,f,c
 13260   004836                     l6618:
 13261                           
 13262                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 13263   004836  501B               	movf	pad@p^0,w,c
 13264   004838  5C1E               	subwf	pad@i^0,w,c
 13265   00483A  501F               	movf	(pad@i+1)^0,w,c
 13266   00483C  0A80               	xorlw	128
 13267   00483E  6E1D               	movwf	??_pad^0,c
 13268   004840  501C               	movf	(pad@p+1)^0,w,c
 13269   004842  0A80               	xorlw	128
 13270   004844  581D               	subwfb	??_pad^0,w,c
 13271   004846  A0D8               	btfss	status,0,c
 13272   004848  EF28  F024         	goto	u7981
 13273   00484C  EF2A  F024         	goto	u7980
 13274   004850                     u7981:
 13275   004850  EF0F  F024         	goto	l6614
 13276   004854                     u7980:
 13277   004854                     
 13278                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 216:     if (!(flags & (1 << 0))) {
 13279   004854  B059               	btfsc	_flags^0,0,c
 13280   004856  EF2F  F024         	goto	u7991
 13281   00485A  EF31  F024         	goto	u7990
 13282   00485E                     u7991:
 13283   00485E  EF3B  F024         	goto	l1337
 13284   004862                     u7990:
 13285   004862                     
 13286                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 218:         fputs((const char *)bu
      +                          f, fp);
 13287   004862  C019  F010         	movff	pad@buf,fputs@s
 13288   004866  C01A  F011         	movff	pad@buf+1,fputs@s+1
 13289   00486A  C017  F012         	movff	pad@fp,fputs@fp
 13290   00486E  C018  F013         	movff	pad@fp+1,fputs@fp+1
 13291   004872  EC91  F025         	call	_fputs	;wreg free
 13292   004876                     l1337:
 13293   004876  0012               	return		;funcret
 13294   004878                     __end_of_pad:
 13295                           	callstack 0
 13296                           
 13297 ;; *************** function _fputs *****************
 13298 ;; Defined at:
 13299 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputs.c"
 13300 ;; Parameters:    Size  Location     Type
 13301 ;;  s               2   15[COMRAM] PTR const unsigned char 
 13302 ;;		 -> dbuf(80), 
 13303 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 13304 ;;		 -> NULL(0), sprintf@f(12), 
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;  i               2   20[COMRAM] int 
 13307 ;;  c               1   19[COMRAM] unsigned char 
 13308 ;; Return value:  Size  Location     Type
 13309 ;;                  2   15[COMRAM] int 
 13310 ;; Registers used:
 13311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13312 ;; Tracked objects:
 13313 ;;		On entry : 0/0
 13314 ;;		On exit  : 0/0
 13315 ;;		Unchanged: 0/0
 13316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13318 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13320 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13321 ;;Total ram usage:        7 bytes
 13322 ;; Hardware stack levels used: 1
 13323 ;; Hardware stack levels required when called: 3
 13324 ;; This function calls:
 13325 ;;		_fputc
 13326 ;; This function is called by:
 13327 ;;		_pad
 13328 ;; This function uses a non-reentrant model
 13329 ;;
 13330                           
 13331                           	psect	text49
 13332   004B22                     __ptext49:
 13333                           	callstack 0
 13334   004B22                     _fputs:
 13335                           	callstack 21
 13336   004B22  0E00               	movlw	0
 13337   004B24  6E16               	movwf	(fputs@i+1)^0,c
 13338   004B26  0E00               	movlw	0
 13339   004B28  6E15               	movwf	fputs@i^0,c
 13340   004B2A  EFA2  F025         	goto	l6116
 13341   004B2E                     l6112:
 13342   004B2E  C014  F007         	movff	fputs@c,fputc@c
 13343   004B32  6A08               	clrf	(fputc@c+1)^0,c
 13344   004B34  C012  F009         	movff	fputs@fp,fputc@fp
 13345   004B38  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 13346   004B3C  ECC9  F021         	call	_fputc	;wreg free
 13347   004B40  4A15               	infsnz	fputs@i^0,f,c
 13348   004B42  2A16               	incf	(fputs@i+1)^0,f,c
 13349   004B44                     l6116:
 13350   004B44  5015               	movf	fputs@i^0,w,c
 13351   004B46  2410               	addwf	fputs@s^0,w,c
 13352   004B48  6ED9               	movwf	fsr2l,c
 13353   004B4A  5016               	movf	(fputs@i+1)^0,w,c
 13354   004B4C  2011               	addwfc	(fputs@s+1)^0,w,c
 13355   004B4E  6EDA               	movwf	fsr2h,c
 13356   004B50  50DF               	movf	indf2,w,c
 13357   004B52  6E14               	movwf	fputs@c^0,c
 13358   004B54  5014               	movf	fputs@c^0,w,c
 13359   004B56  A4D8               	btfss	status,2,c
 13360   004B58  EFB0  F025         	goto	u7191
 13361   004B5C  EFB2  F025         	goto	u7190
 13362   004B60                     u7191:
 13363   004B60  EF97  F025         	goto	l6112
 13364   004B64                     u7190:
 13365   004B64  0012               	return		;funcret
 13366   004B66                     __end_of_fputs:
 13367                           	callstack 0
 13368                           
 13369 ;; *************** function _fputc *****************
 13370 ;; Defined at:
 13371 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputc.c"
 13372 ;; Parameters:    Size  Location     Type
 13373 ;;  c               2    6[COMRAM] int 
 13374 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 13375 ;;		 -> NULL(0), sprintf@f(12), 
 13376 ;; Auto vars:     Size  Location     Type
 13377 ;;		None
 13378 ;; Return value:  Size  Location     Type
 13379 ;;                  2    6[COMRAM] int 
 13380 ;; Registers used:
 13381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13382 ;; Tracked objects:
 13383 ;;		On entry : 0/0
 13384 ;;		On exit  : 0/0
 13385 ;;		Unchanged: 0/0
 13386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13389 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13390 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13391 ;;Total ram usage:        9 bytes
 13392 ;; Hardware stack levels used: 1
 13393 ;; Hardware stack levels required when called: 2
 13394 ;; This function calls:
 13395 ;;		_putch
 13396 ;; This function is called by:
 13397 ;;		_pad
 13398 ;;		_stoa
 13399 ;;		_vfpfcnvrt
 13400 ;;		_fputs
 13401 ;; This function uses a non-reentrant model
 13402 ;;
 13403                           
 13404                           	psect	text50
 13405   004392                     __ptext50:
 13406                           	callstack 0
 13407   004392                     _fputc:
 13408                           	callstack 21
 13409   004392  5009               	movf	fputc@fp^0,w,c
 13410   004394  100A               	iorwf	(fputc@fp+1)^0,w,c
 13411   004396  B4D8               	btfsc	status,2,c
 13412   004398  EFD0  F021         	goto	u6761
 13413   00439C  EFD2  F021         	goto	u6760
 13414   0043A0                     u6761:
 13415   0043A0  EFDB  F021         	goto	l5898
 13416   0043A4                     u6760:
 13417   0043A4  5009               	movf	fputc@fp^0,w,c
 13418   0043A6  100A               	iorwf	(fputc@fp+1)^0,w,c
 13419   0043A8  A4D8               	btfss	status,2,c
 13420   0043AA  EFD9  F021         	goto	u6771
 13421   0043AE  EFDB  F021         	goto	u6770
 13422   0043B2                     u6771:
 13423   0043B2  EFE0  F021         	goto	l5900
 13424   0043B6                     u6770:
 13425   0043B6                     l5898:
 13426   0043B6  5007               	movf	fputc@c^0,w,c
 13427   0043B8  ECBF  F026         	call	_putch
 13428   0043BC  EF2D  F022         	goto	l1566
 13429   0043C0                     l5900:
 13430   0043C0  EE20 F00A          	lfsr	2,10
 13431   0043C4  5009               	movf	fputc@fp^0,w,c
 13432   0043C6  26D9               	addwf	fsr2l,f,c
 13433   0043C8  500A               	movf	(fputc@fp+1)^0,w,c
 13434   0043CA  22DA               	addwfc	fsr2h,f,c
 13435   0043CC  50DE               	movf	postinc2,w,c
 13436   0043CE  10DE               	iorwf	postinc2,w,c
 13437   0043D0  B4D8               	btfsc	status,2,c
 13438   0043D2  EFED  F021         	goto	u6781
 13439   0043D6  EFEF  F021         	goto	u6780
 13440   0043DA                     u6781:
 13441   0043DA  EF0A  F022         	goto	l5904
 13442   0043DE                     u6780:
 13443   0043DE  EE20 F00A          	lfsr	2,10
 13444   0043E2  5009               	movf	fputc@fp^0,w,c
 13445   0043E4  26D9               	addwf	fsr2l,f,c
 13446   0043E6  500A               	movf	(fputc@fp+1)^0,w,c
 13447   0043E8  22DA               	addwfc	fsr2h,f,c
 13448   0043EA  EE10 F003          	lfsr	1,3
 13449   0043EE  5009               	movf	fputc@fp^0,w,c
 13450   0043F0  26E1               	addwf	fsr1l,f,c
 13451   0043F2  500A               	movf	(fputc@fp+1)^0,w,c
 13452   0043F4  22E2               	addwfc	fsr1h,f,c
 13453   0043F6  50DE               	movf	postinc2,w,c
 13454   0043F8  5CE6               	subwf	postinc1,w,c
 13455   0043FA  50E6               	movf	postinc1,w,c
 13456   0043FC  0A80               	xorlw	128
 13457   0043FE  6E0F               	movwf	(??_fputc+4)^0,c
 13458   004400  50DE               	movf	postinc2,w,c
 13459   004402  0A80               	xorlw	128
 13460   004404  580F               	subwfb	(??_fputc+4)^0,w,c
 13461   004406  B0D8               	btfsc	status,0,c
 13462   004408  EF08  F022         	goto	u6791
 13463   00440C  EF0A  F022         	goto	u6790
 13464   004410                     u6791:
 13465   004410  EF2D  F022         	goto	l1566
 13466   004414                     u6790:
 13467   004414                     l5904:
 13468   004414  EE20 F003          	lfsr	2,3
 13469   004418  5009               	movf	fputc@fp^0,w,c
 13470   00441A  26D9               	addwf	fsr2l,f,c
 13471   00441C  500A               	movf	(fputc@fp+1)^0,w,c
 13472   00441E  22DA               	addwfc	fsr2h,f,c
 13473   004420  CFDE F00B          	movff	postinc2,??_fputc
 13474   004424  CFDD F00C          	movff	postdec2,??_fputc+1
 13475   004428  C009  FFD9         	movff	fputc@fp,fsr2l
 13476   00442C  C00A  FFDA         	movff	fputc@fp+1,fsr2h
 13477   004430  CFDE F00D          	movff	postinc2,??_fputc+2
 13478   004434  CFDD F00E          	movff	postdec2,??_fputc+3
 13479   004438  500B               	movf	??_fputc^0,w,c
 13480   00443A  240D               	addwf	(??_fputc+2)^0,w,c
 13481   00443C  6ED9               	movwf	fsr2l,c
 13482   00443E  500C               	movf	(??_fputc+1)^0,w,c
 13483   004440  200E               	addwfc	(??_fputc+3)^0,w,c
 13484   004442  6EDA               	movwf	fsr2h,c
 13485   004444  C007  FFDF         	movff	fputc@c,indf2
 13486   004448  EE20 F003          	lfsr	2,3
 13487   00444C  5009               	movf	fputc@fp^0,w,c
 13488   00444E  26D9               	addwf	fsr2l,f,c
 13489   004450  500A               	movf	(fputc@fp+1)^0,w,c
 13490   004452  22DA               	addwfc	fsr2h,f,c
 13491   004454  2ADE               	incf	postinc2,f,c
 13492   004456  0E00               	movlw	0
 13493   004458  22DD               	addwfc	postdec2,f,c
 13494   00445A                     l1566:
 13495   00445A  0012               	return		;funcret
 13496   00445C                     __end_of_fputc:
 13497                           	callstack 0
 13498                           
 13499 ;; *************** function _putch *****************
 13500 ;; Defined at:
 13501 ;;		line 11 in file "putch.c"
 13502 ;; Parameters:    Size  Location     Type
 13503 ;;  data            1    wreg     unsigned char 
 13504 ;; Auto vars:     Size  Location     Type
 13505 ;;  data            1    5[COMRAM] unsigned char 
 13506 ;; Return value:  Size  Location     Type
 13507 ;;                  1    wreg      void 
 13508 ;; Registers used:
 13509 ;;		wreg
 13510 ;; Tracked objects:
 13511 ;;		On entry : 0/0
 13512 ;;		On exit  : 0/0
 13513 ;;		Unchanged: 0/0
 13514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13518 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13519 ;;Total ram usage:        1 bytes
 13520 ;; Hardware stack levels used: 1
 13521 ;; Hardware stack levels required when called: 1
 13522 ;; This function calls:
 13523 ;;		Nothing
 13524 ;; This function is called by:
 13525 ;;		_fputc
 13526 ;; This function uses a non-reentrant model
 13527 ;;
 13528                           
 13529                           	psect	text51
 13530   004D7E                     __ptext51:
 13531                           	callstack 0
 13532   004D7E                     _putch:
 13533                           	callstack 21
 13534                           
 13535                           ;incstack = 0
 13536                           ;putch@data stored from wreg
 13537   004D7E  6E06               	movwf	putch@data^0,c
 13538   004D80                     l254:
 13539   004D80  A89E               	btfss	3998,4,c	;volatile
 13540   004D82  EFC5  F026         	goto	u6751
 13541   004D86  EFC7  F026         	goto	u6750
 13542   004D8A                     u6751:
 13543   004D8A  EFC0  F026         	goto	l254
 13544   004D8E                     u6750:
 13545   004D8E                     
 13546                           ;putch.c: 13:     TXREG1 = data;
 13547   004D8E  C006  FFAD         	movff	putch@data,4013	;volatile
 13548   004D92  0012               	return		;funcret
 13549   004D94                     __end_of_putch:
 13550                           	callstack 0
 13551                           
 13552 ;; *************** function _abs *****************
 13553 ;; Defined at:
 13554 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\abs.c"
 13555 ;; Parameters:    Size  Location     Type
 13556 ;;  a               2   11[COMRAM] int 
 13557 ;; Auto vars:     Size  Location     Type
 13558 ;;		None
 13559 ;; Return value:  Size  Location     Type
 13560 ;;                  2   11[COMRAM] int 
 13561 ;; Registers used:
 13562 ;;		wreg, status,2, status,0
 13563 ;; Tracked objects:
 13564 ;;		On entry : 0/0
 13565 ;;		On exit  : 0/0
 13566 ;;		Unchanged: 0/0
 13567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13571 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13572 ;;Total ram usage:        4 bytes
 13573 ;; Hardware stack levels used: 1
 13574 ;; Hardware stack levels required when called: 1
 13575 ;; This function calls:
 13576 ;;		Nothing
 13577 ;; This function is called by:
 13578 ;;		_dtoa
 13579 ;; This function uses a non-reentrant model
 13580 ;;
 13581                           
 13582                           	psect	text52
 13583   004CB6                     __ptext52:
 13584                           	callstack 0
 13585   004CB6                     _abs:
 13586                           	callstack 24
 13587   004CB6  BE0D               	btfsc	(abs@a+1)^0,7,c
 13588   004CB8  EF60  F026         	goto	u8001
 13589   004CBC  EF62  F026         	goto	u8000
 13590   004CC0                     u8001:
 13591   004CC0  EF68  F026         	goto	l1525
 13592   004CC4                     u8000:
 13593   004CC4  C00C  F00C         	movff	abs@a,?_abs
 13594   004CC8  C00D  F00D         	movff	abs@a+1,?_abs+1
 13595   004CCC  EF74  F026         	goto	l1528
 13596   004CD0                     l1525:
 13597   004CD0  C00C  F00E         	movff	abs@a,??_abs
 13598   004CD4  C00D  F00F         	movff	abs@a+1,??_abs+1
 13599   004CD8  1E0E               	comf	??_abs^0,f,c
 13600   004CDA  1E0F               	comf	(??_abs+1)^0,f,c
 13601   004CDC  4A0E               	infsnz	??_abs^0,f,c
 13602   004CDE  2A0F               	incf	(??_abs+1)^0,f,c
 13603   004CE0  C00E  F00C         	movff	??_abs,?_abs
 13604   004CE4  C00F  F00D         	movff	??_abs+1,?_abs+1
 13605   004CE8                     l1528:
 13606   004CE8  0012               	return		;funcret
 13607   004CEA                     __end_of_abs:
 13608                           	callstack 0
 13609                           
 13610 ;; *************** function ___awmod *****************
 13611 ;; Defined at:
 13612 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awmod.c"
 13613 ;; Parameters:    Size  Location     Type
 13614 ;;  dividend        2    5[COMRAM] int 
 13615 ;;  divisor         2    7[COMRAM] int 
 13616 ;; Auto vars:     Size  Location     Type
 13617 ;;  sign            1   10[COMRAM] unsigned char 
 13618 ;;  counter         1    9[COMRAM] unsigned char 
 13619 ;; Return value:  Size  Location     Type
 13620 ;;                  2    5[COMRAM] int 
 13621 ;; Registers used:
 13622 ;;		wreg, status,2, status,0
 13623 ;; Tracked objects:
 13624 ;;		On entry : 0/0
 13625 ;;		On exit  : 0/0
 13626 ;;		Unchanged: 0/0
 13627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13631 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13632 ;;Total ram usage:        6 bytes
 13633 ;; Hardware stack levels used: 1
 13634 ;; Hardware stack levels required when called: 1
 13635 ;; This function calls:
 13636 ;;		Nothing
 13637 ;; This function is called by:
 13638 ;;		_dtoa
 13639 ;; This function uses a non-reentrant model
 13640 ;;
 13641                           
 13642                           	psect	text53
 13643   0045D2                     __ptext53:
 13644                           	callstack 0
 13645   0045D2                     ___awmod:
 13646                           	callstack 24
 13647   0045D2  0E00               	movlw	0
 13648   0045D4  6E0B               	movwf	___awmod@sign^0,c
 13649   0045D6  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 13650   0045D8  EFF2  F022         	goto	u7680
 13651   0045DC  EFF0  F022         	goto	u7681
 13652   0045E0                     u7681:
 13653   0045E0  EFF8  F022         	goto	l6450
 13654   0045E4                     u7680:
 13655   0045E4  6C06               	negf	___awmod@dividend^0,c
 13656   0045E6  1E07               	comf	(___awmod@dividend+1)^0,f,c
 13657   0045E8  B0D8               	btfsc	status,0,c
 13658   0045EA  2A07               	incf	(___awmod@dividend+1)^0,f,c
 13659   0045EC  0E01               	movlw	1
 13660   0045EE  6E0B               	movwf	___awmod@sign^0,c
 13661   0045F0                     l6450:
 13662   0045F0  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 13663   0045F2  EFFF  F022         	goto	u7690
 13664   0045F6  EFFD  F022         	goto	u7691
 13665   0045FA                     u7691:
 13666   0045FA  EF03  F023         	goto	l6454
 13667   0045FE                     u7690:
 13668   0045FE  6C08               	negf	___awmod@divisor^0,c
 13669   004600  1E09               	comf	(___awmod@divisor+1)^0,f,c
 13670   004602  B0D8               	btfsc	status,0,c
 13671   004604  2A09               	incf	(___awmod@divisor+1)^0,f,c
 13672   004606                     l6454:
 13673   004606  5008               	movf	___awmod@divisor^0,w,c
 13674   004608  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 13675   00460A  B4D8               	btfsc	status,2,c
 13676   00460C  EF0A  F023         	goto	u7701
 13677   004610  EF0C  F023         	goto	u7700
 13678   004614                     u7701:
 13679   004614  EF30  F023         	goto	l6470
 13680   004618                     u7700:
 13681   004618  0E01               	movlw	1
 13682   00461A  6E0A               	movwf	___awmod@counter^0,c
 13683   00461C  EF14  F023         	goto	l6460
 13684   004620                     l6458:
 13685   004620  90D8               	bcf	status,0,c
 13686   004622  3608               	rlcf	___awmod@divisor^0,f,c
 13687   004624  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 13688   004626  2A0A               	incf	___awmod@counter^0,f,c
 13689   004628                     l6460:
 13690   004628  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 13691   00462A  EF19  F023         	goto	u7711
 13692   00462E  EF1B  F023         	goto	u7710
 13693   004632                     u7711:
 13694   004632  EF10  F023         	goto	l6458
 13695   004636                     u7710:
 13696   004636                     l6462:
 13697   004636  5008               	movf	___awmod@divisor^0,w,c
 13698   004638  5C06               	subwf	___awmod@dividend^0,w,c
 13699   00463A  5009               	movf	(___awmod@divisor+1)^0,w,c
 13700   00463C  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 13701   00463E  A0D8               	btfss	status,0,c
 13702   004640  EF24  F023         	goto	u7721
 13703   004644  EF26  F023         	goto	u7720
 13704   004648                     u7721:
 13705   004648  EF2A  F023         	goto	l6466
 13706   00464C                     u7720:
 13707   00464C  5008               	movf	___awmod@divisor^0,w,c
 13708   00464E  5E06               	subwf	___awmod@dividend^0,f,c
 13709   004650  5009               	movf	(___awmod@divisor+1)^0,w,c
 13710   004652  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 13711   004654                     l6466:
 13712   004654  90D8               	bcf	status,0,c
 13713   004656  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 13714   004658  3208               	rrcf	___awmod@divisor^0,f,c
 13715   00465A  2E0A               	decfsz	___awmod@counter^0,f,c
 13716   00465C  EF1B  F023         	goto	l6462
 13717   004660                     l6470:
 13718   004660  500B               	movf	___awmod@sign^0,w,c
 13719   004662  B4D8               	btfsc	status,2,c
 13720   004664  EF36  F023         	goto	u7731
 13721   004668  EF38  F023         	goto	u7730
 13722   00466C                     u7731:
 13723   00466C  EF3C  F023         	goto	l6474
 13724   004670                     u7730:
 13725   004670  6C06               	negf	___awmod@dividend^0,c
 13726   004672  1E07               	comf	(___awmod@dividend+1)^0,f,c
 13727   004674  B0D8               	btfsc	status,0,c
 13728   004676  2A07               	incf	(___awmod@dividend+1)^0,f,c
 13729   004678                     l6474:
 13730   004678  C006  F006         	movff	___awmod@dividend,?___awmod
 13731   00467C  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 13732   004680  0012               	return		;funcret
 13733   004682                     __end_of___awmod:
 13734                           	callstack 0
 13735                           
 13736 ;; *************** function ___awdiv *****************
 13737 ;; Defined at:
 13738 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awdiv.c"
 13739 ;; Parameters:    Size  Location     Type
 13740 ;;  dividend        2    5[COMRAM] int 
 13741 ;;  divisor         2    7[COMRAM] int 
 13742 ;; Auto vars:     Size  Location     Type
 13743 ;;  quotient        2   11[COMRAM] int 
 13744 ;;  sign            1   10[COMRAM] unsigned char 
 13745 ;;  counter         1    9[COMRAM] unsigned char 
 13746 ;; Return value:  Size  Location     Type
 13747 ;;                  2    5[COMRAM] int 
 13748 ;; Registers used:
 13749 ;;		wreg, status,2, status,0
 13750 ;; Tracked objects:
 13751 ;;		On entry : 0/0
 13752 ;;		On exit  : 0/0
 13753 ;;		Unchanged: 0/0
 13754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13756 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13758 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13759 ;;Total ram usage:        8 bytes
 13760 ;; Hardware stack levels used: 1
 13761 ;; Hardware stack levels required when called: 1
 13762 ;; This function calls:
 13763 ;;		Nothing
 13764 ;; This function is called by:
 13765 ;;		_runPWM
 13766 ;;		_dtoa
 13767 ;; This function uses a non-reentrant model
 13768 ;;
 13769                           
 13770                           	psect	text54
 13771   00445C                     __ptext54:
 13772                           	callstack 0
 13773   00445C                     ___awdiv:
 13774                           	callstack 24
 13775   00445C  0E00               	movlw	0
 13776   00445E  6E0B               	movwf	___awdiv@sign^0,c
 13777   004460  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
 13778   004462  EF37  F022         	goto	u7620
 13779   004466  EF35  F022         	goto	u7621
 13780   00446A                     u7621:
 13781   00446A  EF3D  F022         	goto	l6406
 13782   00446E                     u7620:
 13783   00446E  6C08               	negf	___awdiv@divisor^0,c
 13784   004470  1E09               	comf	(___awdiv@divisor+1)^0,f,c
 13785   004472  B0D8               	btfsc	status,0,c
 13786   004474  2A09               	incf	(___awdiv@divisor+1)^0,f,c
 13787   004476  0E01               	movlw	1
 13788   004478  6E0B               	movwf	___awdiv@sign^0,c
 13789   00447A                     l6406:
 13790   00447A  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
 13791   00447C  EF44  F022         	goto	u7630
 13792   004480  EF42  F022         	goto	u7631
 13793   004484                     u7631:
 13794   004484  EF4A  F022         	goto	l6412
 13795   004488                     u7630:
 13796   004488  6C06               	negf	___awdiv@dividend^0,c
 13797   00448A  1E07               	comf	(___awdiv@dividend+1)^0,f,c
 13798   00448C  B0D8               	btfsc	status,0,c
 13799   00448E  2A07               	incf	(___awdiv@dividend+1)^0,f,c
 13800   004490  0E01               	movlw	1
 13801   004492  1A0B               	xorwf	___awdiv@sign^0,f,c
 13802   004494                     l6412:
 13803   004494  0E00               	movlw	0
 13804   004496  6E0D               	movwf	(___awdiv@quotient+1)^0,c
 13805   004498  0E00               	movlw	0
 13806   00449A  6E0C               	movwf	___awdiv@quotient^0,c
 13807   00449C  5008               	movf	___awdiv@divisor^0,w,c
 13808   00449E  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
 13809   0044A0  B4D8               	btfsc	status,2,c
 13810   0044A2  EF55  F022         	goto	u7641
 13811   0044A6  EF57  F022         	goto	u7640
 13812   0044AA                     u7641:
 13813   0044AA  EF7F  F022         	goto	l6434
 13814   0044AE                     u7640:
 13815   0044AE  0E01               	movlw	1
 13816   0044B0  6E0A               	movwf	___awdiv@counter^0,c
 13817   0044B2  EF5F  F022         	goto	l6420
 13818   0044B6                     l6418:
 13819   0044B6  90D8               	bcf	status,0,c
 13820   0044B8  3608               	rlcf	___awdiv@divisor^0,f,c
 13821   0044BA  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
 13822   0044BC  2A0A               	incf	___awdiv@counter^0,f,c
 13823   0044BE                     l6420:
 13824   0044BE  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
 13825   0044C0  EF64  F022         	goto	u7651
 13826   0044C4  EF66  F022         	goto	u7650
 13827   0044C8                     u7651:
 13828   0044C8  EF5B  F022         	goto	l6418
 13829   0044CC                     u7650:
 13830   0044CC                     l6422:
 13831   0044CC  90D8               	bcf	status,0,c
 13832   0044CE  360C               	rlcf	___awdiv@quotient^0,f,c
 13833   0044D0  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
 13834   0044D2  5008               	movf	___awdiv@divisor^0,w,c
 13835   0044D4  5C06               	subwf	___awdiv@dividend^0,w,c
 13836   0044D6  5009               	movf	(___awdiv@divisor+1)^0,w,c
 13837   0044D8  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
 13838   0044DA  A0D8               	btfss	status,0,c
 13839   0044DC  EF72  F022         	goto	u7661
 13840   0044E0  EF74  F022         	goto	u7660
 13841   0044E4                     u7661:
 13842   0044E4  EF79  F022         	goto	l6430
 13843   0044E8                     u7660:
 13844   0044E8  5008               	movf	___awdiv@divisor^0,w,c
 13845   0044EA  5E06               	subwf	___awdiv@dividend^0,f,c
 13846   0044EC  5009               	movf	(___awdiv@divisor+1)^0,w,c
 13847   0044EE  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
 13848   0044F0  800C               	bsf	___awdiv@quotient^0,0,c
 13849   0044F2                     l6430:
 13850   0044F2  90D8               	bcf	status,0,c
 13851   0044F4  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
 13852   0044F6  3208               	rrcf	___awdiv@divisor^0,f,c
 13853   0044F8  2E0A               	decfsz	___awdiv@counter^0,f,c
 13854   0044FA  EF66  F022         	goto	l6422
 13855   0044FE                     l6434:
 13856   0044FE  500B               	movf	___awdiv@sign^0,w,c
 13857   004500  B4D8               	btfsc	status,2,c
 13858   004502  EF85  F022         	goto	u7671
 13859   004506  EF87  F022         	goto	u7670
 13860   00450A                     u7671:
 13861   00450A  EF8B  F022         	goto	l6438
 13862   00450E                     u7670:
 13863   00450E  6C0C               	negf	___awdiv@quotient^0,c
 13864   004510  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
 13865   004512  B0D8               	btfsc	status,0,c
 13866   004514  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
 13867   004516                     l6438:
 13868   004516  C00C  F006         	movff	___awdiv@quotient,?___awdiv
 13869   00451A  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
 13870   00451E  0012               	return		;funcret
 13871   004520                     __end_of___awdiv:
 13872                           	callstack 0
 13873                           
 13874 ;; *************** function _LCD_ShowString *****************
 13875 ;; Defined at:
 13876 ;;		line 55 in file "lcd.c"
 13877 ;; Parameters:    Size  Location     Type
 13878 ;;  lineNum         1    wreg     unsigned char 
 13879 ;;  textData        2    6[COMRAM] PTR unsigned char 
 13880 ;;		 -> runGAME@text(17), runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), 
 13881 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 13882 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_6(17), 
 13883 ;;		 -> STR_5(17), STR_4(17), STR_3(17), STR_2(17), 
 13884 ;;		 -> STR_1(17), 
 13885 ;; Auto vars:     Size  Location     Type
 13886 ;;  lineNum         1   10[COMRAM] unsigned char 
 13887 ;;  i               1   11[COMRAM] unsigned char 
 13888 ;; Return value:  Size  Location     Type
 13889 ;;                  1    wreg      void 
 13890 ;; Registers used:
 13891 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13892 ;; Tracked objects:
 13893 ;;		On entry : 0/0
 13894 ;;		On exit  : 0/0
 13895 ;;		Unchanged: 0/0
 13896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13899 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13900 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13901 ;;Total ram usage:        6 bytes
 13902 ;; Hardware stack levels used: 1
 13903 ;; Hardware stack levels required when called: 2
 13904 ;; This function calls:
 13905 ;;		_LCD_Send
 13906 ;; This function is called by:
 13907 ;;		_main
 13908 ;;		_moveDisplay
 13909 ;;		_runADC
 13910 ;;		_runGAME
 13911 ;; This function uses a non-reentrant model
 13912 ;;
 13913                           
 13914                           	psect	text55
 13915   004520                     __ptext55:
 13916                           	callstack 0
 13917   004520                     _LCD_ShowString:
 13918                           	callstack 27
 13919                           
 13920                           ;incstack = 0
 13921                           ;LCD_ShowString@lineNum stored from wreg
 13922   004520  6E0B               	movwf	LCD_ShowString@lineNum^0,c
 13923   004522                     
 13924                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 13925   004522  806B               	bsf	107,0,c	;volatile
 13926   004524                     l124:
 13927   004524  B06B               	btfsc	107,0,c	;volatile
 13928   004526  EF97  F022         	goto	u9101
 13929   00452A  EF99  F022         	goto	u9100
 13930   00452E                     u9101:
 13931   00452E  EF92  F022         	goto	l124
 13932   004532                     u9100:
 13933   004532                     
 13934                           ;lcd.c: 62:     SSP2IF = 0;
 13935   004532  9EA4               	bcf	4004,7,c	;volatile
 13936   004534                     
 13937                           ;lcd.c: 64:     LCD_Send(0x7c);
 13938   004534  0E7C               	movlw	124
 13939   004536  EC9C  F026         	call	_LCD_Send
 13940                           
 13941                           ;lcd.c: 66:     LCD_Send(0x80);
 13942   00453A  0E80               	movlw	128
 13943   00453C  EC9C  F026         	call	_LCD_Send
 13944   004540                     
 13945                           ;lcd.c: 68:     if(lineNum == 1){
 13946   004540  040B               	decf	LCD_ShowString@lineNum^0,w,c
 13947   004542  A4D8               	btfss	status,2,c
 13948   004544  EFA6  F022         	goto	u9111
 13949   004548  EFA8  F022         	goto	u9110
 13950   00454C                     u9111:
 13951   00454C  EFAD  F022         	goto	l7322
 13952   004550                     u9110:
 13953   004550                     
 13954                           ;lcd.c: 69:         LCD_Send(0x80);
 13955   004550  0E80               	movlw	128
 13956   004552  EC9C  F026         	call	_LCD_Send
 13957                           
 13958                           ;lcd.c: 70:     }
 13959   004556  EFB9  F022         	goto	l128
 13960   00455A                     l7322:
 13961   00455A  0E02               	movlw	2
 13962   00455C  180B               	xorwf	LCD_ShowString@lineNum^0,w,c
 13963   00455E  A4D8               	btfss	status,2,c
 13964   004560  EFB4  F022         	goto	u9121
 13965   004564  EFB6  F022         	goto	u9120
 13966   004568                     u9121:
 13967   004568  EFB9  F022         	goto	l128
 13968   00456C                     u9120:
 13969   00456C                     
 13970                           ;lcd.c: 72:         LCD_Send(0xC0);
 13971   00456C  0EC0               	movlw	192
 13972   00456E  EC9C  F026         	call	_LCD_Send
 13973   004572                     l128:
 13974                           
 13975                           ;lcd.c: 75:     LCD_Send(0x40);
 13976   004572  0E40               	movlw	64
 13977   004574  EC9C  F026         	call	_LCD_Send
 13978   004578                     
 13979                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 13980   004578  0E00               	movlw	0
 13981   00457A  6E0C               	movwf	LCD_ShowString@i^0,c
 13982   00457C                     l7332:
 13983                           
 13984                           ;lcd.c: 78:         LCD_Send(textData[i]);
 13985   00457C  500C               	movf	LCD_ShowString@i^0,w,c
 13986   00457E  2407               	addwf	LCD_ShowString@textData^0,w,c
 13987   004580  6E09               	movwf	??_LCD_ShowString^0,c
 13988   004582  0E00               	movlw	0
 13989   004584  2008               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 13990   004586  6E0A               	movwf	(??_LCD_ShowString+1)^0,c
 13991   004588  C009  FFF6         	movff	??_LCD_ShowString,tblptrl
 13992   00458C  C00A  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 13993   004590  0E00               	movlw	low (__mediumconst shr (0+16))
 13994   004592  6EF8               	movwf	tblptru,c
 13995   004594  0E0F               	movlw	(high __ramtop+-1)
 13996   004596  64F7               	cpfsgt	tblptrh,c
 13997   004598  D003               	bra	u9137
 13998   00459A  0008               	tblrd		*
 13999   00459C  50F5               	movf	tablat,w,c
 14000   00459E  D005               	bra	u9130
 14001   0045A0                     u9137:
 14002   0045A0  CFF6 FFE1          	movff	tblptrl,fsr1l
 14003   0045A4  CFF7 FFE2          	movff	tblptrh,fsr1h
 14004   0045A8  50E7               	movf	indf1,w,c
 14005   0045AA                     u9130:
 14006   0045AA  EC9C  F026         	call	_LCD_Send
 14007   0045AE                     
 14008                           ;lcd.c: 79:     }
 14009   0045AE  2A0C               	incf	LCD_ShowString@i^0,f,c
 14010   0045B0  0E0F               	movlw	15
 14011   0045B2  640C               	cpfsgt	LCD_ShowString@i^0,c
 14012   0045B4  EFDE  F022         	goto	u9141
 14013   0045B8  EFE0  F022         	goto	u9140
 14014   0045BC                     u9141:
 14015   0045BC  EFBE  F022         	goto	l7332
 14016   0045C0                     u9140:
 14017   0045C0                     
 14018                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 14019   0045C0  846B               	bsf	107,2,c	;volatile
 14020   0045C2                     l132:
 14021   0045C2  B46B               	btfsc	107,2,c	;volatile
 14022   0045C4  EFE6  F022         	goto	u9151
 14023   0045C8  EFE8  F022         	goto	u9150
 14024   0045CC                     u9151:
 14025   0045CC  EFE1  F022         	goto	l132
 14026   0045D0                     u9150:
 14027   0045D0  0012               	return		;funcret
 14028   0045D2                     __end_of_LCD_ShowString:
 14029                           	callstack 0
 14030                           
 14031 ;; *************** function _LCD_Clear *****************
 14032 ;; Defined at:
 14033 ;;		line 94 in file "lcd.c"
 14034 ;; Parameters:    Size  Location     Type
 14035 ;;		None
 14036 ;; Auto vars:     Size  Location     Type
 14037 ;;		None
 14038 ;; Return value:  Size  Location     Type
 14039 ;;                  1    wreg      void 
 14040 ;; Registers used:
 14041 ;;		wreg, cstack
 14042 ;; Tracked objects:
 14043 ;;		On entry : 0/0
 14044 ;;		On exit  : 0/0
 14045 ;;		Unchanged: 0/0
 14046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14051 ;;Total ram usage:        0 bytes
 14052 ;; Hardware stack levels used: 1
 14053 ;; Hardware stack levels required when called: 2
 14054 ;; This function calls:
 14055 ;;		_LCD_Send
 14056 ;; This function is called by:
 14057 ;;		_moveDisplay
 14058 ;; This function uses a non-reentrant model
 14059 ;;
 14060                           
 14061                           	psect	text56
 14062   004C4C                     __ptext56:
 14063                           	callstack 0
 14064   004C4C                     _LCD_Clear:
 14065                           	callstack 27
 14066   004C4C                     
 14067                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
 14068   004C4C  806B               	bsf	107,0,c	;volatile
 14069   004C4E                     l147:
 14070   004C4E  B06B               	btfsc	107,0,c	;volatile
 14071   004C50  EF2C  F026         	goto	u9161
 14072   004C54  EF2E  F026         	goto	u9160
 14073   004C58                     u9161:
 14074   004C58  EF27  F026         	goto	l147
 14075   004C5C                     u9160:
 14076   004C5C                     
 14077                           ;lcd.c: 97:     SSP2IF = 0;
 14078   004C5C  9EA4               	bcf	4004,7,c	;volatile
 14079   004C5E                     
 14080                           ;lcd.c: 99:     LCD_Send(0x7C);
 14081   004C5E  0E7C               	movlw	124
 14082   004C60  EC9C  F026         	call	_LCD_Send
 14083                           
 14084                           ;lcd.c: 100:     LCD_Send(0x80);
 14085   004C64  0E80               	movlw	128
 14086   004C66  EC9C  F026         	call	_LCD_Send
 14087                           
 14088                           ;lcd.c: 101:     LCD_Send(0x01);
 14089   004C6A  0E01               	movlw	1
 14090   004C6C  EC9C  F026         	call	_LCD_Send
 14091   004C70                     
 14092                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
 14093   004C70  846B               	bsf	107,2,c	;volatile
 14094   004C72                     l150:
 14095   004C72  B46B               	btfsc	107,2,c	;volatile
 14096   004C74  EF3E  F026         	goto	u9171
 14097   004C78  EF40  F026         	goto	u9170
 14098   004C7C                     u9171:
 14099   004C7C  EF39  F026         	goto	l150
 14100   004C80                     u9170:
 14101   004C80  0012               	return		;funcret
 14102   004C82                     __end_of_LCD_Clear:
 14103                           	callstack 0
 14104                           
 14105 ;; *************** function _LCD_Init *****************
 14106 ;; Defined at:
 14107 ;;		line 3 in file "lcd.c"
 14108 ;; Parameters:    Size  Location     Type
 14109 ;;		None
 14110 ;; Auto vars:     Size  Location     Type
 14111 ;;		None
 14112 ;; Return value:  Size  Location     Type
 14113 ;;                  1    wreg      void 
 14114 ;; Registers used:
 14115 ;;		wreg, status,2, cstack
 14116 ;; Tracked objects:
 14117 ;;		On entry : 0/0
 14118 ;;		On exit  : 0/0
 14119 ;;		Unchanged: 0/0
 14120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14123 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14125 ;;Total ram usage:        1 bytes
 14126 ;; Hardware stack levels used: 1
 14127 ;; Hardware stack levels required when called: 2
 14128 ;; This function calls:
 14129 ;;		_LCD_Send
 14130 ;; This function is called by:
 14131 ;;		_main
 14132 ;; This function uses a non-reentrant model
 14133 ;;
 14134                           
 14135                           	psect	text57
 14136   0042B8                     __ptext57:
 14137                           	callstack 0
 14138   0042B8                     _LCD_Init:
 14139                           	callstack 28
 14140   0042B8                     
 14141                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 14142   0042B8  010F               	movlb	15	; () banked
 14143   0042BA  913B               	bcf	59,0,b	;volatile
 14144                           
 14145                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 14146   0042BC  933B               	bcf	59,1,b	;volatile
 14147                           
 14148                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 14149   0042BE  8095               	bsf	149,0,c	;volatile
 14150                           
 14151                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 14152   0042C0  8295               	bsf	149,1,c	;volatile
 14153                           
 14154                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 14155   0042C2  9092               	bcf	146,0,c	;volatile
 14156                           
 14157                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 14158   0042C4  8089               	bsf	137,0,c	;volatile
 14159   0042C6                     
 14160                           ; BSR set to: 15
 14161                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 14162   0042C6  506C               	movf	108,w,c	;volatile
 14163   0042C8  0BF0               	andlw	-16
 14164   0042CA  0908               	iorlw	8
 14165   0042CC  6E6C               	movwf	108,c	;volatile
 14166                           
 14167                           ;lcd.c: 15:     SSP2ADD = 19;
 14168   0042CE  0E13               	movlw	19
 14169   0042D0  6E6E               	movwf	110,c	;volatile
 14170   0042D2                     
 14171                           ; BSR set to: 15
 14172                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 14173   0042D2  8A6C               	bsf	108,5,c	;volatile
 14174   0042D4                     
 14175                           ; BSR set to: 15
 14176                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 14177   0042D4  0E34               	movlw	52
 14178   0042D6  6E07               	movwf	??_LCD_Init^0,c
 14179   0042D8  0EF2               	movlw	242
 14180   0042DA                     u9967:
 14181   0042DA  2EE8               	decfsz	wreg,f,c
 14182   0042DC  D7FE               	bra	u9967
 14183   0042DE  2E07               	decfsz	??_LCD_Init^0,f,c
 14184   0042E0  D7FC               	bra	u9967
 14185   0042E2                     
 14186                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 14187   0042E2  806B               	bsf	107,0,c	;volatile
 14188   0042E4                     l115:
 14189   0042E4  B06B               	btfsc	107,0,c	;volatile
 14190   0042E6  EF77  F021         	goto	u9321
 14191   0042EA  EF79  F021         	goto	u9320
 14192   0042EE                     u9321:
 14193   0042EE  EF72  F021         	goto	l115
 14194   0042F2                     u9320:
 14195   0042F2                     
 14196                           ;lcd.c: 22:     SSP2IF = 0;
 14197   0042F2  9EA4               	bcf	4004,7,c	;volatile
 14198   0042F4                     
 14199                           ;lcd.c: 27:     LCD_Send(0x7C);
 14200   0042F4  0E7C               	movlw	124
 14201   0042F6  EC9C  F026         	call	_LCD_Send
 14202                           
 14203                           ;lcd.c: 28:     LCD_Send(0x80);
 14204   0042FA  0E80               	movlw	128
 14205   0042FC  EC9C  F026         	call	_LCD_Send
 14206                           
 14207                           ;lcd.c: 29:     LCD_Send(0x38);
 14208   004300  0E38               	movlw	56
 14209   004302  EC9C  F026         	call	_LCD_Send
 14210                           
 14211                           ;lcd.c: 30:     LCD_Send(0x80);
 14212   004306  0E80               	movlw	128
 14213   004308  EC9C  F026         	call	_LCD_Send
 14214                           
 14215                           ;lcd.c: 31:     LCD_Send(0x39);
 14216   00430C  0E39               	movlw	57
 14217   00430E  EC9C  F026         	call	_LCD_Send
 14218                           
 14219                           ;lcd.c: 32:     LCD_Send(0x80);
 14220   004312  0E80               	movlw	128
 14221   004314  EC9C  F026         	call	_LCD_Send
 14222                           
 14223                           ;lcd.c: 33:     LCD_Send(0x17);
 14224   004318  0E17               	movlw	23
 14225   00431A  EC9C  F026         	call	_LCD_Send
 14226                           
 14227                           ;lcd.c: 34:     LCD_Send(0x80);
 14228   00431E  0E80               	movlw	128
 14229   004320  EC9C  F026         	call	_LCD_Send
 14230                           
 14231                           ;lcd.c: 35:     LCD_Send(0x7A);
 14232   004324  0E7A               	movlw	122
 14233   004326  EC9C  F026         	call	_LCD_Send
 14234                           
 14235                           ;lcd.c: 36:     LCD_Send(0x80);
 14236   00432A  0E80               	movlw	128
 14237   00432C  EC9C  F026         	call	_LCD_Send
 14238                           
 14239                           ;lcd.c: 37:     LCD_Send(0x5E);
 14240   004330  0E5E               	movlw	94
 14241   004332  EC9C  F026         	call	_LCD_Send
 14242                           
 14243                           ;lcd.c: 38:     LCD_Send(0x80);
 14244   004336  0E80               	movlw	128
 14245   004338  EC9C  F026         	call	_LCD_Send
 14246                           
 14247                           ;lcd.c: 39:     LCD_Send(0x6B);
 14248   00433C  0E6B               	movlw	107
 14249   00433E  EC9C  F026         	call	_LCD_Send
 14250                           
 14251                           ;lcd.c: 40:     LCD_Send(0x80);
 14252   004342  0E80               	movlw	128
 14253   004344  EC9C  F026         	call	_LCD_Send
 14254                           
 14255                           ;lcd.c: 41:     LCD_Send(0x0C);
 14256   004348  0E0C               	movlw	12
 14257   00434A  EC9C  F026         	call	_LCD_Send
 14258                           
 14259                           ;lcd.c: 42:     LCD_Send(0x80);
 14260   00434E  0E80               	movlw	128
 14261   004350  EC9C  F026         	call	_LCD_Send
 14262                           
 14263                           ;lcd.c: 43:     LCD_Send(0x01);
 14264   004354  0E01               	movlw	1
 14265   004356  EC9C  F026         	call	_LCD_Send
 14266                           
 14267                           ;lcd.c: 44:     LCD_Send(0x80);
 14268   00435A  0E80               	movlw	128
 14269   00435C  EC9C  F026         	call	_LCD_Send
 14270                           
 14271                           ;lcd.c: 45:     LCD_Send(0x06);
 14272   004360  0E06               	movlw	6
 14273   004362  EC9C  F026         	call	_LCD_Send
 14274                           
 14275                           ;lcd.c: 46:     LCD_Send(0x80);
 14276   004366  0E80               	movlw	128
 14277   004368  EC9C  F026         	call	_LCD_Send
 14278                           
 14279                           ;lcd.c: 47:     LCD_Send(0x02);
 14280   00436C  0E02               	movlw	2
 14281   00436E  EC9C  F026         	call	_LCD_Send
 14282   004372                     
 14283                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 14284   004372  846B               	bsf	107,2,c	;volatile
 14285   004374                     l118:
 14286   004374  B46B               	btfsc	107,2,c	;volatile
 14287   004376  EFBF  F021         	goto	u9331
 14288   00437A  EFC1  F021         	goto	u9330
 14289   00437E                     u9331:
 14290   00437E  EFBA  F021         	goto	l118
 14291   004382                     u9330:
 14292   004382                     
 14293                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 14294   004382  0E34               	movlw	52
 14295   004384  6E07               	movwf	??_LCD_Init^0,c
 14296   004386  0EF2               	movlw	242
 14297   004388                     u9977:
 14298   004388  2EE8               	decfsz	wreg,f,c
 14299   00438A  D7FE               	bra	u9977
 14300   00438C  2E07               	decfsz	??_LCD_Init^0,f,c
 14301   00438E  D7FC               	bra	u9977
 14302   004390  0012               	return		;funcret
 14303   004392                     __end_of_LCD_Init:
 14304                           	callstack 0
 14305                           
 14306 ;; *************** function _LCD_Send *****************
 14307 ;; Defined at:
 14308 ;;		line 85 in file "lcd.c"
 14309 ;; Parameters:    Size  Location     Type
 14310 ;;  data            1    wreg     unsigned char 
 14311 ;; Auto vars:     Size  Location     Type
 14312 ;;  data            1    5[COMRAM] unsigned char 
 14313 ;; Return value:  Size  Location     Type
 14314 ;;                  1    wreg      void 
 14315 ;; Registers used:
 14316 ;;		wreg
 14317 ;; Tracked objects:
 14318 ;;		On entry : 0/0
 14319 ;;		On exit  : 0/0
 14320 ;;		Unchanged: 0/0
 14321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14326 ;;Total ram usage:        1 bytes
 14327 ;; Hardware stack levels used: 1
 14328 ;; Hardware stack levels required when called: 1
 14329 ;; This function calls:
 14330 ;;		Nothing
 14331 ;; This function is called by:
 14332 ;;		_LCD_Init
 14333 ;;		_LCD_ShowString
 14334 ;;		_LCD_Clear
 14335 ;; This function uses a non-reentrant model
 14336 ;;
 14337                           
 14338                           	psect	text58
 14339   004D38                     __ptext58:
 14340                           	callstack 0
 14341   004D38                     _LCD_Send:
 14342                           	callstack 27
 14343                           
 14344                           ;incstack = 0
 14345                           ;LCD_Send@data stored from wreg
 14346   004D38  6E06               	movwf	LCD_Send@data^0,c
 14347   004D3A                     
 14348                           ;lcd.c: 87:     SSP2BUF = data;
 14349   004D3A  C006  FF6F         	movff	LCD_Send@data,3951	;volatile
 14350   004D3E                     l138:
 14351   004D3E  B06D               	btfsc	109,0,c	;volatile
 14352   004D40  EFA4  F026         	goto	u9021
 14353   004D44  EFA6  F026         	goto	u9020
 14354   004D48                     u9021:
 14355   004D48  EF9F  F026         	goto	l138
 14356   004D4C                     u9020:
 14357   004D4C                     l141:
 14358   004D4C  AEA4               	btfss	4004,7,c	;volatile
 14359   004D4E  EFAB  F026         	goto	u9031
 14360   004D52  EFAD  F026         	goto	u9030
 14361   004D56                     u9031:
 14362   004D56  EFA6  F026         	goto	l141
 14363   004D5A                     u9030:
 14364   004D5A                     
 14365                           ;lcd.c: 90:     SSP2IF = 0;
 14366   004D5A  9EA4               	bcf	4004,7,c	;volatile
 14367   004D5C  0012               	return		;funcret
 14368   004D5E                     __end_of_LCD_Send:
 14369                           	callstack 0
 14370                           
 14371 ;; *************** function _ISR *****************
 14372 ;; Defined at:
 14373 ;;		line 11 in file "interrupt.c"
 14374 ;; Parameters:    Size  Location     Type
 14375 ;;		None
 14376 ;; Auto vars:     Size  Location     Type
 14377 ;;  temp            1    4[COMRAM] unsigned char 
 14378 ;; Return value:  Size  Location     Type
 14379 ;;                  1    wreg      void 
 14380 ;; Registers used:
 14381 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14382 ;; Tracked objects:
 14383 ;;		On entry : 0/0
 14384 ;;		On exit  : 0/0
 14385 ;;		Unchanged: 0/0
 14386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14389 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14390 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14391 ;;Total ram usage:        5 bytes
 14392 ;; Hardware stack levels used: 1
 14393 ;; This function calls:
 14394 ;;		Nothing
 14395 ;; This function is called by:
 14396 ;;		Interrupt level 2
 14397 ;; This function uses a non-reentrant model
 14398 ;;
 14399                           
 14400                           	psect	intcode
 14401   000008                     __pintcode:
 14402                           	callstack 0
 14403   000008                     _ISR:
 14404                           	callstack 21
 14405                           
 14406                           ;incstack = 0
 14407   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14408   00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
 14409   00000E  CFDA F004          	movff	fsr2h,??_ISR+3
 14410   000012                     
 14411                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 14412   000012  A09D               	btfss	3997,0,c	;volatile
 14413   000014  EF0E  F000         	goto	i2u665_41
 14414   000018  EF10  F000         	goto	i2u665_40
 14415   00001C                     i2u665_41:
 14416   00001C  EF49  F000         	goto	i2l5870
 14417   000020                     i2u665_40:
 14418   000020  A09E               	btfss	3998,0,c	;volatile
 14419   000022  EF15  F000         	goto	i2u666_41
 14420   000026  EF17  F000         	goto	i2u666_40
 14421   00002A                     i2u666_41:
 14422   00002A  EF49  F000         	goto	i2l5870
 14423   00002E                     i2u666_40:
 14424   00002E  0101               	movlb	1	; () banked
 14425   000030  5124               	movf	_GPIOIE& (0+255),w,b
 14426   000032  B4D8               	btfsc	status,2,c
 14427   000034  EF1E  F000         	goto	i2u667_41
 14428   000038  EF20  F000         	goto	i2u667_40
 14429   00003C                     i2u667_41:
 14430   00003C  EF49  F000         	goto	i2l5870
 14431   000040                     i2u667_40:
 14432   000040                     
 14433                           ; BSR set to: 1
 14434                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 14435   000040  A480               	btfss	128,2,c	;volatile
 14436   000042  EF25  F000         	goto	i2u668_41
 14437   000046  EF27  F000         	goto	i2u668_40
 14438   00004A                     i2u668_41:
 14439   00004A  EF44  F000         	goto	i2l384
 14440   00004E                     i2u668_40:
 14441   00004E                     
 14442                           ; BSR set to: 1
 14443                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 14444   00004E  0E03               	movlw	3
 14445   000050  6E02               	movwf	(??_ISR+1)^0,c
 14446   000052  0E08               	movlw	8
 14447   000054  6E01               	movwf	??_ISR^0,c
 14448   000056  0E77               	movlw	119
 14449   000058                     i2u998_47:
 14450   000058  2EE8               	decfsz	wreg,f,c
 14451   00005A  D7FE               	bra	i2u998_47
 14452   00005C  2E01               	decfsz	??_ISR^0,f,c
 14453   00005E  D7FC               	bra	i2u998_47
 14454   000060  2E02               	decfsz	(??_ISR+1)^0,f,c
 14455   000062  D7FA               	bra	i2u998_47
 14456   000064  0000               	nop	
 14457   000066                     
 14458                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 14459   000066  A480               	btfss	128,2,c	;volatile
 14460   000068  EF38  F000         	goto	i2u669_41
 14461   00006C  EF3A  F000         	goto	i2u669_40
 14462   000070                     i2u669_41:
 14463   000070  EF44  F000         	goto	i2l384
 14464   000074                     i2u669_40:
 14465   000074                     i2l386:
 14466   000074  B480               	btfsc	128,2,c	;volatile
 14467   000076  EF3F  F000         	goto	i2u670_41
 14468   00007A  EF41  F000         	goto	i2u670_40
 14469   00007E                     i2u670_41:
 14470   00007E  EF3A  F000         	goto	i2l386
 14471   000082                     i2u670_40:
 14472   000082                     
 14473                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 14474   000082  0E00               	movlw	0
 14475   000084  0100               	movlb	0	; () banked
 14476   000086  6FFF               	movwf	_keepStateGPIO& (0+255),b
 14477   000088                     i2l384:
 14478                           
 14479                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 14480   000088  0E9E               	movlw	158
 14481   00008A  6ECF               	movwf	207,c	;volatile
 14482   00008C  0E58               	movlw	88
 14483   00008E  6ECE               	movwf	206,c	;volatile
 14484   000090                     
 14485                           ;interrupt.c: 23:         TMR1IF = 0;
 14486   000090  909E               	bcf	3998,0,c	;volatile
 14487   000092                     i2l5870:
 14488                           
 14489                           ;interrupt.c: 26:     if(RC1IE && RC1IF && UARTIE){
 14490   000092  AA9D               	btfss	3997,5,c	;volatile
 14491   000094  EF4E  F000         	goto	i2u671_41
 14492   000098  EF50  F000         	goto	i2u671_40
 14493   00009C                     i2u671_41:
 14494   00009C  EF84  F000         	goto	i2l394
 14495   0000A0                     i2u671_40:
 14496   0000A0  AA9E               	btfss	3998,5,c	;volatile
 14497   0000A2  EF55  F000         	goto	i2u672_41
 14498   0000A6  EF57  F000         	goto	i2u672_40
 14499   0000AA                     i2u672_41:
 14500   0000AA  EF84  F000         	goto	i2l394
 14501   0000AE                     i2u672_40:
 14502   0000AE  0101               	movlb	1	; () banked
 14503   0000B0  5123               	movf	_UARTIE& (0+255),w,b
 14504   0000B2  B4D8               	btfsc	status,2,c
 14505   0000B4  EF5E  F000         	goto	i2u673_41
 14506   0000B8  EF60  F000         	goto	i2u673_40
 14507   0000BC                     i2u673_41:
 14508   0000BC  EF84  F000         	goto	i2l394
 14509   0000C0                     i2u673_40:
 14510   0000C0                     
 14511                           ; BSR set to: 1
 14512                           ;interrupt.c: 27:         char temp = RCREG1;
 14513   0000C0  CFAE F005          	movff	4014,ISR@temp	;volatile
 14514   0000C4                     
 14515                           ; BSR set to: 1
 14516                           ;interrupt.c: 28:         static int i = 0;;interrupt.c: 30:         if(temp != '\n'){
 14517   0000C4  0E0A               	movlw	10
 14518   0000C6  1805               	xorwf	ISR@temp^0,w,c
 14519   0000C8  B4D8               	btfsc	status,2,c
 14520   0000CA  EF69  F000         	goto	i2u674_41
 14521   0000CE  EF6B  F000         	goto	i2u674_40
 14522   0000D2                     i2u674_41:
 14523   0000D2  EF77  F000         	goto	i2l5884
 14524   0000D6                     i2u674_40:
 14525   0000D6                     
 14526                           ; BSR set to: 1
 14527                           ;interrupt.c: 31:             gmail.data[i] = temp;
 14528   0000D6  0E75               	movlw	low _gmail
 14529   0000D8  2521               	addwf	ISR@i& (0+255),w,b
 14530   0000DA  6ED9               	movwf	fsr2l,c
 14531   0000DC  0E01               	movlw	high _gmail
 14532   0000DE  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 14533   0000E0  6EDA               	movwf	fsr2h,c
 14534   0000E2  C005  FFDF         	movff	ISR@temp,indf2
 14535   0000E6                     
 14536                           ; BSR set to: 1
 14537                           ;interrupt.c: 32:             i++;
 14538   0000E6  4B21               	infsnz	ISR@i& (0+255),f,b
 14539   0000E8  2B22               	incf	(ISR@i+1)& (0+255),f,b
 14540                           
 14541                           ;interrupt.c: 33:         } else {
 14542   0000EA  EF84  F000         	goto	i2l394
 14543   0000EE                     i2l5884:
 14544                           
 14545                           ; BSR set to: 1
 14546                           ;interrupt.c: 34:             gmail.full = 1;
 14547   0000EE  0E01               	movlw	1
 14548   0000F0  6F94               	movwf	(_gmail+31)& (0+255),b	;volatile
 14549   0000F2                     
 14550                           ; BSR set to: 1
 14551                           ;interrupt.c: 35:             gmail.data[i] = '\0';
 14552   0000F2  0E75               	movlw	low _gmail
 14553   0000F4  2521               	addwf	ISR@i& (0+255),w,b
 14554   0000F6  6ED9               	movwf	fsr2l,c
 14555   0000F8  0E01               	movlw	high _gmail
 14556   0000FA  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 14557   0000FC  6EDA               	movwf	fsr2h,c
 14558   0000FE  6ADF               	clrf	indf2,c
 14559   000100                     
 14560                           ; BSR set to: 1
 14561                           ;interrupt.c: 36:             i = 0;
 14562   000100  0E00               	movlw	0
 14563   000102  6F22               	movwf	(ISR@i+1)& (0+255),b
 14564   000104  0E00               	movlw	0
 14565   000106  6F21               	movwf	ISR@i& (0+255),b
 14566   000108                     i2l394:
 14567   000108  C004  FFDA         	movff	??_ISR+3,fsr2h
 14568   00010C  C003  FFD9         	movff	??_ISR+2,fsr2l
 14569   000110  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14570   000112  0011               	retfie		f
 14571   000114                     __end_of_ISR:
 14572                           	callstack 0
 14573                           
 14574                           	psect	rparam
 14575   000000                     
 14576                           	psect	temp
 14577   00005A                     btemp:
 14578                           	callstack 0
 14579   00005A                     	ds	1
 14580   000000                     int$flags	set	btemp
 14581   000000                     wtemp8	set	btemp+1
 14582   000000                     ttemp5	set	btemp+1
 14583   000000                     ttemp6	set	btemp+4
 14584   000000                     ttemp7	set	btemp+8
 14585                           
 14586                           	psect	config
 14587                           
 14588                           ; Padding undefined space
 14589   300000                     	org	3145728
 14590   300000  FF                 	db	255
 14591                           
 14592                           ;Config register CONFIG1H @ 0x300001
 14593                           ;	Oscillator Selection bits
 14594                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 14595                           ;	4X PLL Enable
 14596                           ;	PLLCFG = ON, Oscillator multiplied by 4
 14597                           ;	Primary clock enable bit
 14598                           ;	PRICLKEN = 0x1, unprogrammed default
 14599                           ;	Fail-Safe Clock Monitor Enable bit
 14600                           ;	FCMEN = 0x0, unprogrammed default
 14601                           ;	Internal/External Oscillator Switchover bit
 14602                           ;	IESO = 0x0, unprogrammed default
 14603   300001                     	org	3145729
 14604   300001  33                 	db	51
 14605                           
 14606                           ;Config register CONFIG2L @ 0x300002
 14607                           ;	unspecified, using default values
 14608                           ;	Power-up Timer Enable bit
 14609                           ;	PWRTEN = 0x1, unprogrammed default
 14610                           ;	Brown-out Reset Enable bits
 14611                           ;	BOREN = 0x3, unprogrammed default
 14612                           ;	Brown Out Reset Voltage bits
 14613                           ;	BORV = 0x3, unprogrammed default
 14614   300002                     	org	3145730
 14615   300002  1F                 	db	31
 14616                           
 14617                           ;Config register CONFIG2H @ 0x300003
 14618                           ;	Watchdog Timer Enable bits
 14619                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 14620                           ;	Watchdog Timer Postscale Select bits
 14621                           ;	WDTPS = 0xF, unprogrammed default
 14622   300003                     	org	3145731
 14623   300003  3C                 	db	60
 14624                           tosu	equ	0xFFF
 14625                           tosh	equ	0xFFE
 14626                           tosl	equ	0xFFD
 14627                           stkptr	equ	0xFFC
 14628                           pclatu	equ	0xFFB
 14629                           pclath	equ	0xFFA
 14630                           pcl	equ	0xFF9
 14631                           tblptru	equ	0xFF8
 14632                           tblptrh	equ	0xFF7
 14633                           tblptrl	equ	0xFF6
 14634                           tablat	equ	0xFF5
 14635                           prodh	equ	0xFF4
 14636                           prodl	equ	0xFF3
 14637                           indf0	equ	0xFEF
 14638                           postinc0	equ	0xFEE
 14639                           postdec0	equ	0xFED
 14640                           preinc0	equ	0xFEC
 14641                           plusw0	equ	0xFEB
 14642                           fsr0h	equ	0xFEA
 14643                           fsr0l	equ	0xFE9
 14644                           wreg	equ	0xFE8
 14645                           indf1	equ	0xFE7
 14646                           postinc1	equ	0xFE6
 14647                           postdec1	equ	0xFE5
 14648                           preinc1	equ	0xFE4
 14649                           plusw1	equ	0xFE3
 14650                           fsr1h	equ	0xFE2
 14651                           fsr1l	equ	0xFE1
 14652                           bsr	equ	0xFE0
 14653                           indf2	equ	0xFDF
 14654                           postinc2	equ	0xFDE
 14655                           postdec2	equ	0xFDD
 14656                           preinc2	equ	0xFDC
 14657                           plusw2	equ	0xFDB
 14658                           fsr2h	equ	0xFDA
 14659                           fsr2l	equ	0xFD9
 14660                           status	equ	0xFD8

Data Sizes:
    Strings     236
    Constant    64
    Data        40
    BSS         172
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    159     160
    BANK1           256     53     242
    BANK2           256      0      17
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@text(BANK0[17]), 
		 -> STR_1(CODE[17]), STR_10(CODE[17]), STR_11(CODE[17]), STR_12(CODE[17]), 
		 -> STR_13(CODE[17]), STR_2(CODE[17]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[17]), STR_6(CODE[17]), STR_7(CODE[17]), STR_8(CODE[17]), 
		 -> STR_9(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    moveDisplay$4447	PTR unsigned char  size(2) Largest target is 6
		 -> STR_15(CODE[5]), STR_16(CODE[5]), STR_17(CODE[4]), STR_18(CODE[4]), 
		 -> STR_19(CODE[4]), STR_20(CODE[5]), STR_21(CODE[6]), STR_22(CODE[1]), 

    moveDisplay@F6963	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_15(CODE[5]), STR_16(CODE[5]), STR_17(CODE[4]), STR_18(CODE[4]), 
		 -> STR_19(CODE[4]), STR_20(CODE[5]), STR_21(CODE[6]), STR_22(CODE[1]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_15(CODE[5]), STR_16(CODE[5]), STR_17(CODE[4]), STR_18(CODE[4]), 
		 -> STR_19(CODE[4]), STR_20(CODE[5]), STR_21(CODE[6]), STR_22(CODE[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_14(CODE[5]), STR_26(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6975	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S3855$buffer	PTR unsigned char  size(2) Largest target is 0

    S3855$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_23(CODE[6]), STR_24(CODE[5]), STR_25(CODE[19]), STR_27(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@text(BANK0[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_15(CODE[5]), 
		 -> STR_16(CODE[5]), STR_17(CODE[4]), STR_18(CODE[4]), STR_19(CODE[4]), 
		 -> STR_20(CODE[5]), STR_21(CODE[6]), STR_22(CODE[1]), STR_34(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_15(CODE[5]), 
		 -> STR_16(CODE[5]), STR_17(CODE[4]), STR_18(CODE[4]), STR_19(CODE[4]), 
		 -> STR_20(CODE[5]), STR_21(CODE[6]), STR_22(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_28(CODE[4]), STR_31(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_14(CODE[5]), STR_23(CODE[6]), STR_24(CODE[5]), STR_25(CODE[19]), 
		 -> STR_26(CODE[5]), STR_27(CODE[17]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_14(CODE[5]), STR_23(CODE[6]), STR_24(CODE[5]), STR_25(CODE[19]), 
		 -> STR_26(CODE[5]), STR_27(CODE[17]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_14(CODE[5]), STR_23(CODE[6]), STR_24(CODE[5]), STR_25(CODE[19]), 
		 -> STR_26(CODE[5]), STR_27(CODE[17]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runUART->_printf
    _runPWM->___awdiv
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _runDAC->_printf
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _utoa->_pad
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_runGAME
    _runUART->_printf
    _runGAME->_sprintf
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___flneg
    ___cosdf->___fladd
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  429348
                                            157 BANK0      2     2      0
                                             51 BANK1      2     2      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGAME
                            _runGPIO
                           _runMUSIC
                             _runPWM
                            _runUART
 ---------------------------------------------------------------------------------
 (1) _runUART                                             40    40      0   63493
                                            114 BANK0     40    40      0
                             _printf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _runPWM                                               4     4      0     944
                                             13 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _runMUSIC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             33    33      0     342
                                              6 COMRAM    32    32      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runGAME                                             22    22      0   65503
                                            135 BANK0     22    22      0
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0  152644
                                            114 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   68822
                                             68 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   16012
                                              4 BANK0     32    28      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   27668
                                             36 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     199
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   16096
                                              4 BANK0     28    24      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     3      4   62831
                                             83 COMRAM     1     1      0
                                            110 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0      90
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   78247
                                            135 BANK0      2     2      0
                                              0 BANK1     30    30      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         54    53      1   66160
                                            135 BANK0      3     2      1
                                              0 BANK1     51    51      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12   63596
                                            110 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5   62528
                                            103 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   61722
                                             89 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                10     6      4    6310
                                             31 COMRAM    10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     412
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2110
                                             15 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1362
                                             11 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   41068
                                             36 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     463
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             69 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             81 COMRAM     2     2      0
                                              4 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    8147
                                              4 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6862
                                             69 COMRAM    12     4      8
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     875
                                             32 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8273
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    7313
                                             31 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4963
                                             22 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1428
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     805
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    1756
                                              6 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      31
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              6 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
           _utoa
             ___lwdiv
             ___lwmod
             _pad
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGAME
     _LCD_ShowString
     _sprintf
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *
   _runMUSIC
   _runPWM
     ___awdiv
   _runUART
     _printf
     _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      11       9        6.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     35      F2       7       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRlllllh     21      0       0      52        0.0%
BITBIGSFRlllllh     10      0       0      51        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRlllllh      C      0       0      53        0.0%
BITBIGSFRhhllhl      A      0       0      44        0.0%
BITBIGSFRhll         7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      45        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRllh         5      0       0      48        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhllhh      1      0       0      43        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FC      54        0.0%
DATA                 0      0     1FC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 17 15:00:11 2024

              ___fldiv@aexp 0045                ___fldiv@bexp 0044                ___fldiv@sign 003D  
                        _C0 FEFF                          _C1 FEFB                          _C2 FEF7  
                        _C3 FEF3                          l52 295A                          l62 2B28  
                        l54 294C                          l64 29E2                          l57 29AE  
                        l59 29A0                          _S1 FEDF                          _S2 FEDB  
                        _S3 FED7                          _S4 FED3                ___awdiv@sign 000B  
       ___wmul@multiplicand 0008                         l121 4390                         l115 42E4  
                       l131 45C0                         l132 45C2                         l124 4524  
                       l141 4D4C                         l117 42F2                         l118 4374  
                       l150 4C72                         l126 4532                         l230 28A6  
                       l222 280C                         l143 4D5A                         l135 45D0  
                       l144 4D5C                         l128 4572                         l153 4C80  
                       l233 4B7C                         l138 4D3E                         l147 4C4E  
                       l235 4B8A                         l219 280A                         l236 4B90  
                       l332 4DBC                         l149 4C5C                         l341 4DE6  
                       l501 3CA0                         l254 4D80                         l238 4B9E  
                       l326 4DD8                         l431 2FDC                         l239 4BA2  
                       l335 4DAE                         l257 4D92                         l601 3E14  
                       l329 4DCA                         l353 39D8                         l442 31B0  
                       l434 307C                         l610 3EBC                         l338 4DA0  
                       l354 39EE                         l283 3DB2                         l443 31B2  
                       l348 39C6                         l540 3AEE                         l429 319E  
                       l621 4DE8                         l606 3E94                         l439 318A  
                       l551 3B48                         l624 4D36                         l552 3B5A  
                       l609 3EBA                         l482 3B7C                         l538 3B36  
                       l484 3B8A                         l548 3B22                         l485 3C88  
                       l488 3C42                         l921 3FC4                         l497 3C76  
                       l489 3C04                         l855 451E                         l599 3EA8  
                       l883 47D8                         l868 4680                         l894 40C8  
                       l889 4082                         l898 4BDC                         _GIE 7F97  
                       _PR2 0FBB                         _ISR 0008                         _abs 4CB6  
                       _pad 47DA                ___awmod@sign 000B                         prod 0FF3  
                       tosl 0FFD                         wreg 0FE8                  _TXSTA1bits 0FAC  
              ___flmul@aexp 0021                ___flmul@bexp 0026                ___flmul@sign 0020  
              ___flmul@temp 002B                ___flmul@prod 0027                        ?_ISR 0001  
                      ISR@i 0121                ___fltol@exp1 0053                        l1122 48EA  
                      l1211 23E2                        l1115 48E2                        ?_abs 000C  
                      l1220 24CA                        l1132 494E                        l1125 4946  
                      l1206 25BE                        l1302 4B20                        l1208 241E  
                      l1152 1768                        l1217 2464                        l1161 1A38  
                      l1153 1756                        l1242 1E62                        l1154 171C  
                      l1219 24DC                        l1332 4812                        l1341 3732  
                      l1245 1CF4                        l1238 1AFE                        l1422 36BA  
                      l1510 4A92                        l1335 4854                        l1343 373A  
                      l1255 1E24                        l1247 1D6C                        l1415 360A  
                      l1431 41E2                        l1344 3780                        l1248 1D5A  
                      l1520 41C6                        l1600 1576                        l1337 4876  
                      l1169 1882                        l1433 41EA                        l1178 1952  
                      l1194 4ADA                        l1282 3564                        l1355 387E  
                      l1179 1940                        l1371 02F0                        l1443 4726  
                      l1427 3702                        l1525 4CD0                        l1293 34FC  
                      l1534 2FA0                        l1366 0B10                        l1286 34A0  
                      l1447 472E                        l1439 42B6                        l1279 3408  
                      l1528 4CE8                        l1537 2EE4                        l1369 04AA  
                      l1554 4A48                        l1474 106C                        l1634 33B0  
                      l1650 2086                        l1651 2224                        l1548 49A4  
                      l1581 4D7C                        l1566 445A                        l1574 4B64  
                      l1399 08F4                        l1663 2D8A                        l6000 173A  
                      l1680 4C4A                        l6010 1786                        l6002 1748  
                      l1674 4C14                        l6100 1A12                        l6020 17C6  
                      l6004 174A                        l1668 4CB4                        l6110 4B22  
                      l6102 1A18                        l6030 17F0                        l6022 17D2  
                      l6014 179A                        l6006 1754                        l6112 4B2E  
                      l6200 23EC                        l6104 1A26                        l6040 1862  
                      l6024 17D6                        l6016 17AA                        l6008 1776  
                      l6032 17F6                        l6120 4D2E                        l7000 36E0  
                      l5144 4C82                        l6114 4B40                        l6210 2444  
                      l6202 240A                        l6130 2242                        l6106 1A28  
                      l6050 18BC                        l6034 181C                        l6042 1872  
                      l6026 17E4                        l6018 17B8                        l7002 36E4  
                      l7010 41FA                        l5250 4B68                        l5146 4CA2  
                      l6116 4B44                        l6220 2482                        l6212 244A  
                      l6204 240C                        l6132 2252                        l6140 227C  
                      l6124 2226                        l6060 18EC                        l6052 18C6  
                      l6044 1898                        l6036 1850                        l6028 17E6  
                      l7020 423C                        l7012 4204                        l7004 41C8  
                      l7100 0B52                        l5252 4B76                        l5148 4CA4  
                      l6230 24EC                        l6222 2486                        l6214 2454  
                      l6206 241C                        l6150 22A8                        l6142 228C  
                      l6134 2262                        l6126 2232                        l6310 1B6A  
                      l6302 1B32                        l6070 1914                        l6062 18F0  
                      l6054 18D4                        l6046 18A8                        l6038 1852  
                      l6118 4D12                        l7014 420A                        l7022 4258  
                      l7006 41D6                        l7110 0B74                        l7102 0B5A  
                      l5254 4B78                        ?_pad 0017                        l6400 4460  
                      l6240 254E                        l6232 24F8                        l6224 2494  
                      l6216 2462                        l6208 242E                        l6152 22B8  
                      l6160 22E2                        l6144 2292                        l6136 2272  
                      l6128 2240                        l6320 1BB4                        l6312 1B82  
                      l6304 1B3E                        l6080 196E                        l6072 1922  
                      l6064 1900                        l6056 18D6                        l7040 46D4  
                      l7032 4682                        l7024 426A                        l7016 4230  
                      l7008 41F2                        l7120 0BCE                        l7104 0B5C  
                      l7112 0B92                        l6410 4490                        l6402 446E  
                      l6250 25AC                        l6242 2564                        l6234 2506  
                      l6226 24C2                        l6218 2474                        l6170 2324  
                      l6162 22F2                        l6154 22C8                        l6146 2298  
                      l6138 2274                        l6330 1C0A                        l6322 1BC4  
                      l6314 1B8E                        l6306 1B48                        l6090 19D8  
                      l6082 197C                        l6074 1938                        l6058 18E4  
                      l6066 1902                        l7042 46F4                        l7034 468A  
                      l7026 427C                        l7018 4236                        l7210 0F24  
                      l7202 0EF4                        l7130 0C34                        l7122 0BF2  
                      l7114 0BA2                        l7106 0B6C                        l7050 33D2  
                      l5450 38B6                        l5442 3880                        l6420 44BE  
                      l6412 4494                        l6404 4476                        l6252 25B2  
                      l6244 257E                        l6236 2530                        l6164 2308  
                      l6156 22D8                        l6148 22A6                        l6500 4032  
                      l6340 1CAE                        l6332 1C26                        l6324 1BD0  
                      l6316 1B9A                        l6308 1B5E                        l6092 19F8  
                      l6084 19B6                        l6068 1910                        l7036 46AC  
                      l7044 4700                        l7028 4296                        l7220 0F92  
                      l7204 0F02                        l7132 0C3C                        l7140 0C72  
                      l7124 0BFE                        l7116 0BB6                        l7060 344A  
                      l7052 3418                        l7300 21A0                        l5380 4DC0  
                      l5460 3908                        l5452 38BE                        l5444 38AA  
                      l6430 44F2                        l6422 44CC                        l6414 449C  
                      l6406 447A                        l6254 25B4                        l6246 259A  
                      l6238 2534                        l6190 23A6                        l6182 235C  
                      l6166 2318                        l6174 2338                        l6158 22DA  
                      l6510 40C0                        l6502 4042                        l6350 1D04  
                      l6342 1CBC                        l6334 1C32                        l6326 1BE0  
                      l6318 1BA8                        l6270 1A66                        l6262 1A3A  
                      l6094 19FC                        l6078 1962                        l6086 19B8  
                      l7038 46B8                        l7206 0F14                        l7214 0F2C  
                      l7142 0C8E                        l7150 0CE6                        l7134 0C44  
                      l7126 0C12                        l7118 0BC4                        l7070 34D2  
                      l7062 3456                        l7054 342E                        l7046 33B4  
                      l7302 21F8                        l5382 4DB2                        l5470 396E  
                      l5454 38C8                        l5446 38B2                        l7320 4550  
                      l7312 4522                        l6432 44F8                        l6424 44D2  
                      l6416 44AE                        l6408 4488                        l6248 259E  
                      l6192 23AE                        l6184 2376                        l6176 2348  
                      l6168 2320                        l6512 40C6                        l6504 4050  
                      l6352 1D12                        l6344 1CDA                        l6336 1C4E  
                      l6328 1BFA                        l6280 1AA2                        l6272 1A76  
                      l6264 1A46                        l6520 4BCC                        l6096 1A0A  
                      l6088 19C8                        l6600 4932                        l7224 0FBA  
                      l7208 0F1C                        l7216 0F4A                        l7160 0D4E  
                      l7152 0CFC                        l7144 0CAE                        l7128 0C22  
                      l7240 1046                        l7080 3510                        l7072 34DE  
                      l7064 3488                        l7048 33C4                        l7304 2210  
                      l5384 4DA4                        l5472 398A                        l5456 38D4  
                      l5448 38B4                        l7322 455A                        l7314 4522  
                      l6426 44E8                        l6418 44B6                        l6434 44FE  
                      l6450 45F0                        l6442 45D2                        l6610 47FC  
                      l6194 23BE                        l6186 2386                        l6178 2348  
                      l6506 4062                        l6362 1D7C                        l6370 1DC4  
                      l6354 1D16                        l6346 1CE4                        l6338 1C78  
                      l6290 1AD8                        l6282 1AA8                        l6274 1A86  
                      l6266 1A54                        l6098 1A10                        l6530 3EEA  
                      l6602 493A                        l7234 101C                        l7226 0FD0  
                      l7218 0F6A                        l7170 0DBA                        l7162 0D6A  
                      l7154 0D16                        l7146 0CCA                        l7138 0C4C  
                      l7250 4A56                        l7082 3534                        l7074 34EC  
                      l7066 348A                        l7058 3442                        l7410 13A6  
                      l5378 4DCE                        l5386 4D96                        l5474 39A2  
                      l5466 3910                        l5458 38E6                        l7340 4C5E  
                      l7332 457C                        l7324 456C                        l7316 4534  
                      l6436 450E                        l6428 44F0                        l6460 4628  
                      l6452 45FE                        l6444 45D6                        l5900 43C0  
                      l6620 4862                        l6612 480A                        l6700 3704  
                      l6196 23D2                        l6188 2396                        l6508 4070  
                      l6380 1E38                        l6372 1DDE                        l6364 1D88  
                      l6356 1D24                        l6348 1CF2                        l6292 1AE8  
                      l6284 1AB6                        l6276 1A8C                        l6268 1A56  
                      l6516 4BA4                        l6540 3F38                        l6532 3F14  
                      l6524 3EBE                        l6604 4940                        l7228 0FEE  
                      l7236 1034                        l7180 0DEE                        l7092 0B12  
                      l7252 4A6C                        l7500 3CD8                        l7084 3544  
                      l7076 350A                        l7068 3496                        l7412 13B6  
                      l7404 136E                        l7420 144A                        l5388 4DDC  
                      l5476 39C2                        l5468 396A                        l7246 4D3A  
                      l7342 4C70                        l7334 45AE                        l7326 4578  
                      l7318 4540                        l6438 4516                        l6462 4636  
                      l6470 4660                        l6454 4606                        l6446 45E4  
                      l6622 4CB6                        l5902 43DE                        l6614 481E  
                      l6606 47DA                        l6710 3768                        l6702 3726  
                      l6198 23E0                        l6382 1E46                        l6374 1DF2  
                      l6366 1D96                        l6358 1D52                        l6294 1AEE  
                      l6286 1AB8                        l6278 1A9C                        l6518 4BBC  
                      l5910 1586                        l6550 3F64                        l6534 3F16  
                      l6526 3ED6                        l6630 4128                        l7190 0E78  
                      l7182 0E10                        l7166 0D86                        l7158 0D2E  
                      l7094 0B36                        l7254 4A88                        l7510 3D92  
                      l7502 3CEA                        l7086 3552                        l7078 350C  
                      l7262 31B4                        l7270 1E9A                        l7430 14A8  
                      l7422 1460                        l7414 13EE                        l7350 1096  
                      l5478 39E8                        l7336 45B0                        l6472 4670  
                      l6464 464C                        l6456 4618                        l6448 45EC  
                      l6624 4CC4                        l5904 4414                        l6616 4832  
                      l6608 47E8                        l6720 3798                        l6712 3774  
                      l6704 3742                        l6480 475E                        l6384 1E48  
                      l6376 1E0C                        l6368 1DC0                        l6296 1B0E  
                      l6288 1AC8                        l5920 15C6                        l5912 1594  
                      l6392 4A94                        l6560 3F94                        l6536 3F26  
                      l6640 417A                        l6632 4150                        l7192 0EAA  
                      l7184 0E1C                        l7176 0DD2                        l7168 0D9C  
                      l7096 0B42                        l7248 4A4A                        l7512 3DA0  
                      l7088 3554                        l7280 1F70                        l7272 1E9C  
                      l7440 151C                        l7432 14CC                        l7424 1470  
                      l7416 1422                        l7352 10B4                        l7360 1106  
                      l7344 106E                        l7600 3BF6                        l7520 39FC  
                      l7338 4C4C                        l6474 4678                        l6466 4654  
                      l6458 4620                        l6618 4836                        l6730 380C  
                      l6722 37CA                        l6714 377C                        l6706 3752  
                      l6490 47D6                        l6482 476E                        l6378 1E28  
                      l6386 1E4E                        l6298 1B1E                        l5930 15F8  
                      l5922 15C8                        l5914 1596                        l6394 4AA6  
                      l6562 3FA4                        l6546 3F50                        l6538 3F2A  
                      l6634 415C                        l6626 40CA                        l6650 4BE6  
                      l6810 0300                        l6570 4880                        l7186 0E24  
                      l7178 0DEA                        l7098 0B4E                        l7514 3DAE  
                      l7506 3CF0                        l7450 4D62                        l7282 1FC8  
                      l7274 1EBA                        l7266 1E64                        l7258 2B5A  
                      l7362 1124                        l7354 10CA                        l7346 107E  
                      l7610 3C3C                        l7530 3A0E                        l7522 3A00  
                      l6468 465A                        l6740 385E                        l6732 381E  
                      l6724 37D0                        l6716 3788                        l6708 3758  
                      l6484 479C                        l6388 1E52                        l5940 1620  
                      l5932 15FA                        l5916 15A6                        l5924 15D0  
                      l5908 1578                        l6564 3FB4                        l6556 3F78  
                      l6548 3F5A                        l6644 41BE                        l6628 40EA  
                      l6660 2D8C                        l6652 4950                        l6900 0846  
                      l6820 03E8                        l6812 0306                        l6804 02A0  
                      l6580 48B6                        l6572 4892                        l7188 0E46  
                      l7196 0EBC                        l7460 4AFA                        l7508 3D10  
                      l7284 2028                        l7276 1EDE                        l7292 2092  
                      l7268 1E84                        l7436 14F4                        l7428 1484  
                      l7364 1142                        l7380 121E                        l7356 10DE  
                      l7348 1094                        l7700 2680                        l7620 3C84  
                      l7604 3C12                        l7612 3C42                        l7540 3A44  
                      l7532 3A10                        l7524 3A02                        l6398 445C  
                      l6734 3838                        l6726 37D6                        l6718 3792  
                      l6486 47AC                        l6478 4730                        l6494 3FC6  
                      l5950 165A                        l5942 1630                        l5934 1600  
                      l5926 15E0                        l5918 15B6                        l6558 3F84  
                      l6638 4168                        l6662 2DAC                        l6654 495E  
                      l6910 0914                        l6902 0852                        l6822 03FC  
                      l6830 0478                        l6814 033A                        l6806 02BA  
                      l6750 013C                        l6582 48CC                        l6574 489A  
                      l6590 48EC                        l7198 0ECC                        l7462 4B10  
                      l7454 4ADC                        l7630 2FA2                        l7294 20B6  
                      l7286 2038                        l7278 1F4A                        l7446 1558  
                      l7382 122E                        l7366 1152                        l7374 11C2  
                      l7390 12EA                        l7710 27E0                        l7702 2692  
                      l7622 3C98                        l7614 3C50                        l7606 3C24  
                      l7470 4C26                        l7550 3A9E                        l7542 3A52  
                      l7534 3A12                        l7526 3A04                        l7518 39F0  
                      l7480 42D2                        l6736 3848                        l6728 37F2  
                      l6488 47D0                        l6496 3FF4                        l5960 1686  
                      l5952 166C                        l5944 1640                        l5936 160E  
                      l5928 15E6                        l6680 2F58                        l6672 2E98  
                      l6664 2E04                        l6656 4972                        l6648 4BDE  
                      l6920 0946                        l6912 0924                        l6904 08CC  
                      l6840 04DE                        l6832 04B2                        l6824 0430  
                      l6816 0378                        l6760 0186                        l6752 0140  
                      l6744 0118                        l6584 48D4                        l6576 48A2  
                      l6568 4878                        l6592 48FE                        l7456 4AEA  
                      l7640 2FD2                        l7632 2FAA                        l7448 4D5E  
                      l7296 2122                        l7288 206A                        l7392 1308  
                      l7384 127A                        l7376 11F6                        l7368 1186  
                      l7720 283C                        l7704 26EC                        l7624 3C9C  
                      l7616 3C68                        l7608 3C2C                        l7472 4C3E  
                      l7560 3AC0                        l7552 3AB0                        l7544 3A7A  
                      l7536 3A1E                        l7528 3A06                        l7800 28DE  
                      l7490 4382                        l7482 42D4                        l5890 4D80  
                      l6738 384E                        l6498 4004                        l5970 169A  
                      l5962 168A                        l5954 167A                        l5946 1642  
                      l5938 1610                        l6682 2F80                        l6674 2ED4  
                      l6666 2E18                        l6690 4A0E                        l6930 097A  
                      l6922 094A                        l6914 0928                        l6906 08EC  
                      l6850 052E                        l6842 04E4                        l6834 04C0  
                      l6826 0438                        l6818 03AA                        l6770 01D4  
                      l6762 0196                        l6754 0164                        l6746 011E  
                      l6586 48D6                        l6578 48B0                        l6594 4906  
                      l7458 4AF2                        l7650 307A                        l7642 2FDA  
                      l7634 2FBA                        l7298 2148                        l7394 1326  
                      l7386 12C2                        l7730 286A                        l7722 2842  
                      l7714 27EC                        l7706 2754                        l7626 3C9E  
                      l7466 4C16                        l7562 3ACE                        l7554 3AB6  
                      l7546 3A7E                        l7538 3A30                        l7810 28EA  
                      l7802 28E0                        l7484 42E2                        l7476 42B8  
                      l5892 4D8E                        l5980 16AE                        l5972 169E  
                      l5964 168E                        l5956 167E                        l5948 164A  
                      l6684 2F90                        l6668 2E26                        l6676 2F08  
                      l6692 4A1A                        l6940 0A18                        l6932 097E  
                      l6924 0950                        l6916 092E                        l6908 0906  
                      l6860 05C6                        l6844 04F6                        l6852 0536  
                      l6836 04CC                        l6780 0210                        l6772 01E6  
                      l6764 01A2                        l6756 016E                        l6748 012E  
                      l6588 48DC                        l6596 490E                        l7492 3CA6  
                      l7660 3156                        l7652 308A                        l7644 2FEA  
                      l7636 2FBC                        l7396 1336                        l7732 2878  
                      l7724 2850                        l7716 281A                        l7708 2778  
                      l7740 3DB4                        l7468 4C22                        l7580 3B58  
                      l7572 3B30                        l7564 3AD2                        l7548 3A94  
                      l7820 292C                        l7812 28F0                        l7804 28E2  
                      l7486 42F4                        l7478 42C6                        l5894 4392  
                      l5990 16E8                        l5982 16B2                        l5974 16A2  
                      l5966 1692                        l5958 1682                        l6678 2F44  
                      l6694 4A1E                        l6950 0A6C                        l6934 0984  
                      l6918 0936                        l6926 0956                        l6942 0A1C  
                      l6870 06AA                        l6862 061E                        l6854 053E  
                      l6846 0504                        l6838 04D6                        l6790 0272  
                      l6782 021A                        l6774 01EA                        l6766 01AA  
                      l6758 0176                        l6598 491C                        l7494 3CAA  
                      l7662 3164                        l7654 30A8                        l7646 3008  
                      l7638 2FC8                        l7734 287E                        l7726 2856  
                      l7718 282E                        l7670 25C0                        l7750 3E0A  
                      l7742 3DE2                        l7590 3B7A                        l7574 3B4E  
                      l7566 3AFC                        l7830 29BC                        l7822 293A  
                      l7814 28F4                        l7806 28E4                        l7488 4372  
                      l5896 43A4                        l5992 1704                        l5984 16B6  
                      l5976 16A6                        l5968 1696                        l6696 4A2A  
                      l6688 49FA                        l6960 0AE8                        l6952 0A9C  
                      l6944 0A3A                        l6936 09DC                        l6928 0968  
                      l6880 0744                        l6872 06DC                        l6864 0652  
                      l6856 054E                        l6848 051C                        l6792 0276  
                      l6776 01F0                        l6768 01AE                        l7496 3CC0  
                      l7664 317C                        l7656 3112                        l7648 3072  
                      l7736 2882                        l7728 2864                        l7680 25E2  
                      l7672 25D4                        l7760 3E60                        l7752 3E12  
                      l7744 3DF2                        l7592 3BA8                        l7584 3B5C  
                      l7576 3B54                        l7568 3B14                        l7840 2A14  
                      l7832 29D4                        l7824 2968                        l7816 2906  
                      l7808 28E6                        l5898 43B6                        l5994 1714  
                      l5978 16AA                        l5986 16BA                        l6698 4A2E  
                      l6962 0AF0                        l6954 0AAA                        l6946 0A56  
                      l6938 0A10                        l6890 081C                        l6882 0778  
                      l6874 06F2                        l6858 0562                        l6866 0658  
                      l6794 027C                        l6778 01F8                        l6786 023A  
                      l6970 3588                        l7498 3CD2                        l7658 3148  
                      l7738 2894                        l7690 2600                        l7682 25E4  
                      l7674 25DC                        l7762 3E6E                        l7754 3E22  
                      l7746 3DF4                        l7594 3BB4                        l7586 3B5E  
                      l7578 3B56                        l7850 2A5E                        l7842 2A1E  
                      l7826 2980                        l7818 2914                        l7770 28A8  
                      l5996 172A                        l5988 16BE                        l6956 0AC2  
                      l6948 0A5E                        l6884 07CE                        l6892 0820  
                      l6876 0724                        l6868 0676                        l6796 0284  
                      l6788 0260                        l6980 3602                        l6972 3594  
                      l7668 3198                        l7692 2602                        l7684 25F6  
                      l7676 25DE                        l7764 3E86                        l7756 3E3A  
                      l7748 3E00                        l7596 3BD0                        l7588 3B78  
                      l7860 2A7C                        l7844 2A3A                        l7836 29F4  
                      l7828 298E                        l7780 28C8                        l7772 28C0  
                      l5998 1736                        l6958 0AD2                        l6894 0830  
                      l6886 07D4                        l6878 0734                        l6990 3666  
                      l6974 3598                        l6966 3566                        l7694 2604  
                      l7686 25FC                        l7678 25E0                        l7758 3E54  
                      l7598 3BDE                        l7862 2A98                        l7854 2A66  
                      l7838 2A10                        l7790 28D4                        l7782 28CC  
                      l7774 28C2                        l6896 0838                        l6888 0808  
                      l6992 369C                        l6984 362C                        l6976 35D6  
                      l6968 3580                        l7696 2620                        l7688 25FE  
                      l7768 3EA2                        l7872 2AC4                        l7856 2A74  
                      l7848 2A42                        l7880 2AE8                        l7792 28D6  
                      l7784 28CE                        l7776 28C4                        l6898 083E  
                      l6986 3640                        l6994 36A0                        l6978 35E4  
                      l7698 2630                        l7882 2B2A                        l7874 2AE0  
                      l7866 2AA0                        l7794 28D8                        l7786 28D0  
                      l7778 28C6                        l6988 3644                        l7884 2B3C  
                      l7868 2ABC                        l7796 28DA                        l7788 28D2  
                      l6998 36CC                        l7886 2B4E                        l7798 28DC  
                      STR_1 FF59                        STR_2 FF37                        STR_3 FF48  
                      STR_4 FF9D                        STR_5 FF6A                        STR_6 FF37  
                      STR_7 FF8C                        STR_8 FF7B                        STR_9 FFAE  
                      u6005 4D9E                        u6006 4DA0                        u6015 4DE4  
                      u7000 181C                        u6016 4DE6                        u6120 3966  
                      u7001 1818                        u6121 3960                        u7010 1862  
                      u6130 3968                        u6114 3950                        u7011 185E  
                      u6115 394C                        _PEIE 7F96                        u7100 194E  
                      u7020 1898                        u6140 398A                        u6108 3922  
                      u7101 194A                        u7021 1894                        u6141 3986  
                      u6109 396A                        u7110 1962                        u7030 18A8  
                      u6150 39C2                        u7111 195E                        u7031 18A4  
                      u6151 39BE                        u8000 4CC4                        u7200 2240  
                      u7120 197C                        u7040 18D4                        u6160 39D8  
                      u8001 4CC0                        u7201 223C                        u7121 1978  
                      u7041 18D0                        u6161 39D4                        u6081 38DE  
                      u7210 2252                        u7130 19B6                        u7050 18E4  
                      u8010 410A                        u7211 224E                        u7131 19B2  
                      u7051 18E0                        u6091 38F0                        u7300 240A  
                      u7220 2262                        u7140 19C8                        u7060 1900  
                      u8020 4128                        u8100 2DD4                        u7301 2406  
                      u7221 225E                        u7141 19C4                        u7061 18FC  
                      u8021 4124                        u7310 242E                        u7230 22A6  
                      u7150 19D8                        u7070 1910                        u8030 4150  
                      u8110 2E04                        u7311 242A                        u7231 22A2  
                      u7151 19D4                        u7071 190C                        u8031 414C  
                      u8015 4100                        u8111 2E00                        u7400 254E  
                      u7320 2444                        u7240 22B8                        u7160 19F8  
                      u7080 1922                        u8040 417A                        u8120 2E26  
                      u8200 4A48                        u9000 0ECC                        u7401 254A  
                      u7321 2440                        u7241 22B4                        u7161 19F4  
                      u7081 191E                        u8041 4176                        u8121 2E22  
                      u8105 2DCA                        u8201 4A44                        u9001 0EC8  
                      u8210 3714                        u7410 257E                        u7330 2462  
                      u7250 22C8                        u7170 1A0A                        u7090 1938  
                      u9010 0F66                        u5810 4B8A                        u8211 370E  
                      u7411 257A                        u7331 245E                        u7251 22C4  
                      u7171 1A06                        u7091 1934                        u9011 0F62  
                      u5811 4B86                        u9020 4D4C                        u9100 4532  
                      u8220 3716                        u7420 25AC                        u7340 2482  
                      u7260 2308                        u7500 1B1E                        u7180 1A26  
                      u8060 41B4                        u8140 2E94                        u8300 013C  
                      u5820 4B9E                        u9021 4D48                        u9101 452E  
                      u7421 25A8                        u7341 247E                        u7261 2304  
                      u7501 1B1A                        u7181 1A22                        u8061 41AE  
                      u8141 2E90                        u8301 0138                        u5821 4B9A  
                      u9030 4D5A                        u9110 4550                        u7190 4B64  
                      u8230 3726                        u7350 2494                        u7270 2348  
                      u7510 1C98                        u7430 1A54                        u8070 41B6  
                      u8150 2EB8                        u8310 0186                        u9031 4D56  
                      u9111 454C                        u7191 4B60                        u8231 3722  
                      u7351 2490                        u7271 2344                        u7431 1A50  
                      u8055 418C                        u8135 2E3A                        u8311 0182  
                      u9120 456C                        u8240 3752                        u7360 24C2  
                      u7280 23BE                        u7600 1E0C                        u7520 1CF2  
                      u7440 1A66                        u6800 1594                        u8160 2ED4  
                      u8136 2E44                        u8080 4C14                        u8400 03E8  
                      u8320 0196                        u9040 4A88                        u9200 10B4  
                      u9121 4568                        u8241 374E                        u7361 24BE  
                      u7281 23BA                        u7601 1E08                        u7521 1CEE  
                      u7441 1A62                        u6801 1590                        u8161 2ED0  
                      u8137 2E54                        u8081 4C10                        u8401 03E4  
                      u8321 0192                        u9041 4A84                        u9201 10B0  
                      u9130 45AA                        u8250 3768                        u7370 24D8  
                      u7290 23E0                        u7610 1E46                        u7530 1D12  
                      u7450 1A76                        u6810 15A6                        u8170 2F28  
                      u8090 495E                        u8410 0474                        u8330 01D4  
                      u9050 1E96                        u9210 10CA                        u8251 3764  
                      u7371 24D4                        u7291 23DC                        u7611 1E42  
                      u7531 1D0E                        u7515 1C8E                        u7451 1A72  
                      u6811 15A2                        u8155 2EAE                        u8091 495A  
                      u8411 0470                        u8331 01D0                        u9051 1E90  
                      u9211 10C6                        u9140 45C0                        u7620 446E  
                      u7700 4618                        u8260 380C                        u7380 24EC  
                      u7540 1D24                        u7460 1AB6                        u6900 1700  
                      u6820 15B6                        u8180 2F44                        u8500 0734  
                      u8420 04AA                        u8340 01E6                        u9060 1E98  
                      u9300 1460                        u9220 1124                        u9141 45BC  
                      u7621 446A                        u7701 4614                        u8261 3808  
                      u7381 24E8                        u7541 1D20                        u7461 1AB2  
                      u6901 16FA                        u6821 15B2                        u8181 2F40  
                      u8501 0730                        u8421 04A6                        u8341 01E2  
                      u9301 145C                        u9221 1120                        u9150 45D0  
                      u7630 4488                        u7710 4636                        u6750 4D8E  
                      u8270 381E                        u7390 2506                        u7550 1D52  
                      u7470 1AC8                        u6910 1702                        u6830 15F8  
                      u8190 2F80                        u8510 07CE                        u8430 04C0  
                      u8350 0260                        u9070 1EBA                        u9230 1142  
                      u9310 4C3E                        u9151 45CC                        u7631 4484  
                      u7711 4632                        u6751 4D8A                        u8271 381A  
                      u7391 2502                        u7551 1D4E                        u7471 1AC4  
                      u6831 15F4                        u8191 2F7C                        u8175 2F1E  
                      u8511 07CA                        u8431 04BC                        u8351 025C  
                      u9071 1EB6                        u9231 113E                        u9311 4C3A  
                      u9320 42F2                        u9160 4C5C                        u7640 44AE  
                      u7720 464C                        u6760 43A4                        u8280 3838  
                      u7800 4070                        u7560 1D68                        u7480 1AD8  
                      u6920 172A                        u6840 160E                        u8600 0ABE  
                      u8520 081C                        u8440 04F6                        u8360 0272  
                      u9080 2038                        u9240 1152                        u9400 3AFC  
                      u9321 42EE                        u9161 4C58                        u9137 45A0  
                      u7641 44AA                        u7721 4648                        u6761 43A0  
                      u8281 3834                        u7801 406C                        u7561 1D64  
                      u7481 1AD4                        u6921 1726                        u6841 160A  
                      u8521 0818                        u8441 04F2                        u8361 026E  
                      u9081 2034                        u9241 114E                        u9401 3AF8  
                      u9330 4382                        u9170 4C80                        u7650 44CC  
                      u7730 4670                        u6770 43B6                        u8290 3848  
                      u7810 40C0                        u7570 1D7C                        u7490 1B0E  
                      u6930 1748                        u6850 1620                        u8610 0AD2  
                      u8530 08CC                        u8450 0504                        u8370 02EC  
                      u9090 2220                        u9250 122E                        u9410 3B22  
                      u9331 437E                        u9171 4C7C                        u7651 44C8  
                      u7731 466C                        u6771 43B2                        u8291 3844  
                      u7811 40BC                        u7571 1D78                        u7491 1B0A  
                      u6931 1744                        u6851 161C                        u8611 0ACE  
                      u8531 08C8                        u8451 0500                        u8371 02E8  
                      u9091 221C                        u9251 122A                        u9411 3B1E  
                      u7660 44E8                        u6780 43DE                        u7740 475E  
                      u7580 1D96                        u7820 4BBC                        u6940 1768  
                      u6860 1630                        u8540 0906                        u8460 052E  
                      u8380 0378                        u8700 36BA                        u8620 3580  
                      u7900 4892                        u9260 1308                        u9180 1090  
                      u9500 3C50                        u9420 3B30                        u7661 44E4  
                      u6781 43DA                        u7741 475A                        u7581 1D92  
                      u7821 4BB8                        u6941 1764                        u6861 162C  
                      u8541 0902                        u8461 052A                        u8381 0374  
                      u8701 36B6                        u8621 357C                        u7901 488E  
                      u9341 3CB4                        u9261 1304                        u9181 108A  
                      u5965 4DD6                        u9501 3C4C                        u9421 3B2C  
                      u7670 450E                        u6790 4414                        u7750 479C  
                      u7590 1DDE                        u6950 1776                        u6870 166C  
                      u7830 3ED6                        u8550 0914                        u8470 0676  
                      u8390 03AA                        u8710 36C8                        u8630 35C6  
                      u7910 48B0                        u9350 3CD2                        u9270 1326  
                      u9190 1092                        u5966 4DD8                        u9510 3C76  
                      u9430 3B48                        u7671 450A                        u6791 4410  
                      u7751 4798                        u7591 1DDA                        u6951 1772  
                      u6871 1668                        u7831 3ED2                        u8551 0910  
                      u8471 0672                        u8391 03A6                        u8711 36C4  
                      u7911 48AC                        u9351 3CCE                        u9271 1322  
                      u5975 4DC8                        u9511 3C72                        u9431 3B44  
                      u7680 45E4                        u7760 47D0                        u6960 1786  
                      u6880 167A                        u7840 3F0A                        u8560 0968  
                      u8480 06DC                        u8720 3702                        u8640 35D6  
                      u7920 48CC                        u9360 3CEA                        u8800 33D2  
                      u9600 31B0                        u9280 1336                        u5976 4DCA  
                      u9520 3C84                        u9440 3B8A                        u7681 45E0  
                      u7761 47CC                        u6961 1782                        u6881 1676  
                      u8561 0964                        u8481 06D8                        u8721 36FE  
                      u8641 35D2                        u7921 48C8                        u9361 3CE6  
                      u8801 33CE                        u9601 31AC                        u9281 1332  
                      u5985 4DBA                        u9521 3C80                        u9441 3B86  
                      u7690 45FE                        u7770 3FF4                        u6970 17B8  
                      u6890 16E8                        u7850 3F38                        u8570 0A3A  
                      u8490 0724                        u8650 35E4                        u7930 48FE  
                      u8730 41D6                        u8810 342E                        u9290 13B6  
                      u9610 2630                        u5986 4DBC                        u9530 3C98  
                      u9450 3BDE                        u9370 3A30                        u7691 45FA  
                      u7771 3FF0                        u6971 17B4                        u6891 16E4  
                      u7851 3F34                        u8571 0A36                        u8491 0720  
                      u8651 35E0                        u7931 48FA                        u8731 41D2  
                      u8811 342A                        u9291 13B2                        u9611 262C  
                      u5995 4DAC                        u9531 3C94                        u9451 3BDA  
                      u9371 3A2C                        u7780 4032                        u6980 17C6  
                      u7860 3F4C                        u8580 0A56                        u8660 3602  
                      u7940 491C                        u8740 426A                        u8900 0BA2  
                      u8820 3484                        u9620 2692                        u9700 3E22  
                      u5996 4DAE                        u9460 3C04                        u9380 3A94  
                      u7781 402E                        u6981 17C2                        u7861 3F48  
                      u7845 3F00                        u8581 0A52                        u8661 35FE  
                      u8637 35BC                        u7941 4918                        u8741 4266  
                      u8901 0B9E                        u8821 3480                        u9541 2FC2  
                      u9621 268E                        u9701 3E1E                        u9461 3C00  
                      u9381 3A90                        u7790 4050                        u6990 17E4  
                      u7870 3F74                        u8590 0ABC                        u8670 3628  
                      u7950 4932                        u8750 427C                        u8910 0BC4  
                      u8830 34CE                        u9550 2FEA                        u9630 281A  
                      u9710 3E6E                        u9470 3C12                        u9390 3AEE  
                      u7791 404C                        u6991 17E0                        u7871 3F70  
                      u8591 0AB6                        u8671 3624                        u7951 492E  
                      u8751 4278                        u8911 0BC0                        u8831 34CA  
                      u9551 2FE6                        u9631 2816                        u9711 3E6A  
                      u9471 3C0E                        u9391 3AEA                        u7960 47E8  
                      u7880 3F94                        u8680 3662                        u8760 4296  
                      u8920 0BF2                        u8840 34EC                        u9560 308A  
                      u9640 283C                        u9720 3E94                        u9480 3C24  
                      u9800 29AE                        u7961 47E4                        u7881 3F90  
                      u8681 365E                        u8761 4292                        u8921 0BEE  
                      u8841 34E8                        u9561 3086                        u9641 2838  
                      u9721 3E90                        u9481 3C20                        u9801 29AA  
                      u7970 480A                        u7890 3FA4                        u8770 46AC  
                      u8690 3688                        u8930 0C8E                        u8850 34FC  
                      u9570 3164                        u9650 2850                        u9730 3EA2  
                      u9490 3C3C                        u9810 29BC                        u7971 4806  
                      u7891 3FA0                        u8771 46A8                        u8931 0C8A  
                      u8851 34F8                        u9571 3160                        u9651 284C  
                      u9731 3E9E                        u9491 3C38                        u9811 29B8  
                      u7980 4854                        u8780 4726                        u8940 0CAA  
                      u8860 350A                        u9580 318A                        u9660 2864  
                      u9740 3EBA                        u9820 29E2                        u7981 4850  
                      u8781 4722                        u8941 0CA6                        u8861 3506  
                      u9581 3186                        u9661 2860                        u9741 3EB6  
                      u9821 29DE                        u7990 4862                        u8950 0D4A  
                      u8870 3544                        u8790 33C4                        u9590 3198  
                      u9670 2878                        u9830 29F0                        u9750 2914  
                      u7991 485E                        u8951 0D46                        u8871 3540  
                      u8791 33C0                        u9591 3194                        u9671 2874  
                      u9831 29EC                        u9751 2910                        u8960 0E10  
                      u8880 3552                        u9680 28A6                        u9840 2B3C  
                      u9760 293A                        u8697 367E                        u8961 0E0C  
                      u8881 354E                        u9681 28A2                        u9841 2B38  
                      u9761 2936                        u8970 0E46                        u8890 0B36  
                      u9770 295A                        u8971 0E42                        u8891 0B32  
                      u9691 3DFA                        u9907 3BE8                        u9771 2956  
                      u8980 0E78                        u9780 2968                        u8981 0E74  
                      u9917 3C5A                        u9781 2964                        u8990 0EAA  
                      u9790 298E                        u8991 0EA6                        u9927 3994  
                      u9791 298A                        u9937 3E7A                        u9857 28B4  
                      _TMR1 0FCE                        u9947 288A                        u9867 2920  
                      u9957 3170                        u9877 2974                        u9967 42DA  
                      u9887 29C8                        u9977 4388                        u9897 3B08  
                      abs@a 000C                        _dbuf 0125                        _half FEEF  
                      _labs 4950                        _main 28A8                        _dtoa 3704  
                      _prec 0057                        _sinf 106E                        pad@i 001E  
                      pad@p 001B                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf1 0FE7                        indf2 0FDF                        fsr1l 0FE1  
                      fsr2l 0FD9                        _stoa 3566                        btemp 005A  
                      _utoa 41C8               ___fpclassifyf 40CA                        prodh 0FF4  
                      prodl 0FF3                        start 0114             ___fldiv@new_exp 003E  
              ___param_bank 0000                       ??_ISR 0001              _LCD_ShowString 4520  
                     ??_abs 000E                       ??_pad 001D            __end_of_LCD_Init 4392  
          __end_of_LCD_Send 4D5E               ___fltol@sign1 0052                       ?_labs 0006  
           __end_of___fladd 1A3A                       ?_main 0001                       ?_dtoa 0020  
           __end_of___fldiv 25C0             __end_of___awdiv 4520             __end_of___cosdf 33B2  
           __end_of___flneg 4BDE                       STR_10 FF37                       STR_11 FF37  
                     STR_12 FF37                       STR_20 FFD7                       STR_13 FF37  
                     STR_21 FFC6                       STR_14 FFE6                       STR_22 FFD6  
                     STR_31 FFEF                       STR_23 FFCC                       STR_15 FFDC  
                     STR_24 FFCD                       STR_16 FFE1                       STR_25 FF13  
                     STR_17 FFFB                       STR_26 FFD2                       STR_34 FFBF  
                     STR_18 FFF7                       STR_27 FF26                       STR_19 FFF3  
                     STR_28 FFEB             __end_of___awmod 4682                       ?_sinf 00A4  
           __end_of___flmul 1E64             __end_of___flsub 4ADC             __end_of___fltol 3FC6  
                     ?_stoa 0010                       ?_utoa 0020             ___awdiv@divisor 0008  
                     _RC1IE 7CED                       _RC1IF 7CF5             __end_of___lwdiv 48EC  
           __end_of___sindf 2D8C             __end_of___lwmod 4950                       i2l384 0088  
                     i2l394 0108                       i2l386 0074             ___awdiv@counter 000A  
              ___sindf$4453 0070                ___sindf$4454 0074                ___sindf$4455 0078  
              vfpfcnvrt@fmt 00BB                       _TX1IF 7CF4             __end_of_pio2_1t FEE7  
                     _fabsf 4C82                       _flags 0059                       _gmail 0175  
       read_prec_or_width@c 000E         read_prec_or_width@n 000F                       _fputc 4392  
                     _fputs 4B22                       labs@a 0006                       pad@fp 0017  
                     _width 0055             __end_of_invpio2 FEEF                       _putch 4D7E  
                     dtoa@d 0022                       dtoa@i 002B                       dtoa@p 0028  
                     dtoa@s 002A                       dtoa@w 0026        __end_of_LED1_Control 4DDA  
           __end_of_runGAME 3EBE             __end_of_runGPIO 39F0                       pclath 0FFA  
                     tablat 0FF5             __end_of_runUART 3B5C        __end_of_LED2_Control 4DCC  
                     sinf@n 00B0                       sinf@x 00A4                       sinf@y 00B6  
                     plusw1 0FE3                       plusw2 0FDB                       stoa@l 001C  
                     stoa@p 0016                       stoa@s 0012                       stoa@w 0018  
                     ttemp5 005B                       ttemp6 005E                       ttemp7 0062  
                     utoa@d 0022        __end_of_LED3_Control 4DBE                       utoa@i 0028  
                     utoa@p 0026                       utoa@w 0024                       status 0FD8  
                     wtemp8 005B             __end_of_sprintf 4B22              ?___fpclassifyf 0006  
      __end_of_LED4_Control 4DB0        __end_of_LED5_Control 4DA2             runUART@reversed 00D4  
      __end_of_LED6_Control 4DE8             __initialization 49A6      __end_of_LCD_ShowString 45D2  
              __end_of_half FEF3                __end_of_labs 49A6                __end_of_main 2B5A  
              __end_of_dtoa 3880                __end_of_sinf 1578                __end_of_stoa 3704  
              __end_of_utoa 42B8                LCD_Send@data 0006                      ??_labs 000A  
                    ??_main 00FD                      ??_dtoa 0024                      ??_sinf 0054  
                    ??_stoa 0014                      ??_utoa 0024           __end_of_LCD_Clear 4C82  
             __activetblptr 0002  __end_of_read_prec_or_width 4730                ?_moveDisplay 00E7  
                    ?_fabsf 0006                      ?_fputc 0007                      ?_fputs 0010  
                    _ADRESH 0FC4                      _ADRESL 0FC3                      _CCPR1L 0FBE  
          ___awdiv@dividend 0006                      ?_putch 0001                      _GODONE 7E11  
                    _GPIOIE 0124                      i2l5860 004E                      i2l5852 0012  
                    i2l5862 0066                      i2l5854 0020                      i2l5870 0092  
                    i2l5880 00D6                      i2l5872 00A0                      i2l5856 002E  
                    i2l5882 00E6                      i2l5874 00AE                      i2l5866 0082  
                    i2l5858 0040                      i2l5884 00EE                      i2l5876 00C0  
                    i2l5868 0090                      i2l5886 00F2                      i2l5878 00C4  
                    i2l5888 0100                      _RCREG1 0FAE               ___rem_pio2f@n 00A0  
             ___rem_pio2f@t 009C               ___rem_pio2f@x 0084               ___rem_pio2f@y 0088  
             vfpfcnvrt@done 00BF                      _UARTIE 0123                      _SPBRG1 0FAF  
                    _TMR1IE 7CE8                      _TMR1IF 7CF0                      _TMR2IE 7CE9  
                    _TMR2IF 7CF1                      _TMR1ON 7E68                      _TMR2ON 7DD2  
                    _SSP1IF 7CF3                      _SSP2IF 7D27                      _TXREG1 0FAD  
          __end_of___xxtofl 3566                _CCPTMRS0bits 0F49                vfprintf@cfmt 00CC  
           ?_LCD_ShowString 0007                      _s1pio2 FF0F                      _s2pio2 FF0B  
                    _s3pio2 FF07                      _s4pio2 FF03                      ___flge 3FC6  
                    ___fleq 4730                   ??___fladd 004E                      ___wmul 4D12  
                 ??___fldiv 0035                   ??___awdiv 000A                   ??___cosdf 0052  
                 ??___flneg 0052                   ??___awmod 000A                   ??___flmul 001C  
                 ??___flsub 0052                   ??___fltol 0068            runUART@keepState 00F3  
                    _efgtoa 0118                   ??___lwdiv 000A                   ??___sindf 0052  
                 ??___lwmod 000A                      _pio2_1 FEE7                      _floorf 2D8C  
                    fabsf@u 000A                      fabsf@x 0006                      _memcpy 49FA  
      read_prec_or_width@ap 000D                      clear_0 49CC                      clear_1 49D8  
          ___awdiv@quotient 000C                      _runADC 2FA2                      _runDAC 25C0  
           ___awmod@divisor 0008                      isa$std 0001                      _runPWM 3B5C  
           ___awmod@counter 000A                      _printf 4D5E                      pad@buf 0019  
                    dtoa@fp 0020                      _strcpy 4BDE                      _strlen 4C16  
                    fputc@c 0007                      fputs@c 0014                      fputs@i 0015  
                    fputs@s 0010            __end_of_runMUSIC 4DEA             ___fpclassifyf@e 000E  
           ___fpclassifyf@u 0010             ___fpclassifyf@x 0006                __mediumconst FED2  
                 ??_runGAME 00E7                      sinf@ux 00BA                   ??_runGPIO 0007  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
         __end_of_SPI_write 4BA4                   ??_runUART 00D2                      stoa@cp 001A  
                    stoa@fp 0010            __end_of_vfprintf 4A94                      utoa@fp 0020  
                 ??_sprintf 0054                  ___flge@ff1 002D                  ___flge@ff2 0031  
           ??___fpclassifyf 000A                ___xxtofl@arg 0010                ___xxtofl@exp 000F  
              ___xxtofl@val 0006                  ___fleq@ff1 0006                  ___fleq@ff2 000A  
                __accesstop 0060     __end_of__initialization 49EC                   ?_LCD_Init 0001  
                 ?_LCD_Send 0001                  ___flneg@f1 0080               ___rparam_used 0001  
                ___fltol@f1 0064              __pcstackCOMRAM 0001           LED4_Control@state 0006  
              __pidataBANK1 4CEA               __end_of_fabsf 4CB6               __end_of_fputc 445C  
             __end_of_fputs 4B66               __end_of_putch 4D94                  __end_of_C0 FF03  
                __end_of_C1 FEFF                  __end_of_C2 FEFB                  __end_of_C3 FEF7  
                __end_of_S1 FEE3                  __end_of_S2 FEDF                  __end_of_S3 FEDB  
                __end_of_S4 FED7                     ??_fabsf 000A                     ??_fputc 000B  
                   ??_fputs 0014                     ??_putch 0006                  __pbssBANK0 00FF  
                __pbssBANK1 0100                  __pbssBANK2 0200                  ??_LCD_Init 0007  
                ??_LCD_Send 0006                 runADC@F6965 0100                SPI_write@LSB 0007  
              SPI_write@MSB 0006                     ISR@temp 0005                     ?___flge 002D  
                   ?___fleq 0006                     ?___wmul 0006                     ?_efgtoa 0084  
             ??___rem_pio2f 0089                     ?_floorf 0046                _LED1_Control 4DCC  
                   ?_memcpy 0006                     ?_runADC 0001                     ?_runDAC 0001  
              _LED2_Control 4DBE                     ?_runPWM 0001                     ?_printf 00CE  
                   ?_strcpy 0006                     ?_strlen 0006                _LED3_Control 4DB0  
              _LED4_Control 4DA2                   ?___xxtofl 0006                _LED5_Control 4D94  
            ___rem_pio2f@fn 0098              ___rem_pio2f@ty 008B              ___rem_pio2f@ux 0094  
              _LED6_Control 4DDA                     _SSP2ADD 0F6E                     _SSP1BUF 0FC9  
                   _SSP2BUF 0F6F                 runGAME@pot1 00FA                 runGAME@text 00E9  
         runGPIO@LEDControl 0015             LCD_ShowString@i 000C                     __Hparam 0000  
                   __Lparam 0000                   ?_runMUSIC 0001                     ___fladd 1578  
                   ___fldiv 2226                     ___awdiv 445C                     ___cosdf 31B4  
                   ___flneg 4BA4                     ___awmod 45D2                     ___flmul 1A3A  
                   ___flsub 4A94                     ___fltol 3EBE                     ___lwdiv 4878  
                   ___sindf 2B5A                     ___lwmod 48EC                   ?_vfprintf 00C7  
            main@setUpAgain 01C8                     __pcinit 49A6                     __ramtop 1000  
                   __ptext0 28A8                     __ptext1 39F0                     __ptext2 4C16  
                   __ptext3 3B5C                     __ptext4 4DE8                     __ptext5 3880  
                   __ptext6 4D94                     __ptext7 4DA2                     __ptext8 4DB0  
                   __ptext9 4DBE                     _pio2_1t FEE3                   _T1CONbits 0FCD  
           runPWM@keepState 0010       read_prec_or_width@fmt 000C                  ??___xxtofl 000A  
       __end_of___rem_pio2f 2226            ___awmod@dividend 0006                     _invpio2 FEEB  
                   _runGAME 3DB4                     _runGPIO 3880                     efgtoa@c 008A  
                   efgtoa@d 0098                     efgtoa@e 009C                     efgtoa@f 0086  
                   efgtoa@g 00AF                     efgtoa@h 00A6                     efgtoa@i 00A4  
                   efgtoa@l 00AA                     efgtoa@m 009A                     efgtoa@n 00B3  
                   efgtoa@p 008F                     efgtoa@t 0091                     efgtoa@u 00B5  
                   efgtoa@w 009E                     _runUART 39F0                   _LCD_Clear 4C4C  
                   _sprintf 4ADC            ___rem_pio2f$4452 008F        end_of_initialization 49EC  
                   floorf@e 0064                     floorf@m 0060                     floorf@u 0066  
                   floorf@x 0046                     memcpy@d 000D                     memcpy@n 000A  
                   memcpy@s 000F                     fputc@fp 0009            ___rem_pio2f@F526 0115  
             __Lmediumconst FED2                     fputs@fp 0012            ??_LCD_ShowString 0009  
        _read_prec_or_width 4682           LED1_Control@state 0006       LCD_ShowString@lineNum 000B  
          ___rem_pio2f@sign 0093                  ??_runMUSIC 0006           __end_of_vfpfcnvrt 106E  
                efgtoa@mode 0096                  efgtoa@sign 00AE                     postdec1 0FE5  
                   postdec2 0FDD         ?_read_prec_or_width 000C                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 00C0  
                ??_vfprintf 0054                     strcpy@d 000A                     strlen@a 0008  
                   strlen@s 0006                   _PORTAbits 0F80                   _PORTCbits 0F82  
               ___fladd@grs 0063               ___xxtofl@sign 000E                   _TRISAbits 0F92  
                 _TRISBbits 0F93                   _TRISCbits 0F94                   _TRISDbits 0F95  
                ?_LCD_Clear 0001        ??_read_prec_or_width 000E                 ___fldiv@grs 0040  
               ___fldiv@rem 0039                   _SPI_write 4B66                 ___flmul@grs 0022  
               _CCP1CONbits 0FBD           LED5_Control@state 0006              __end_of_s1pio2 FF13  
            __end_of_s2pio2 FF0F              __end_of_s3pio2 FF0B              __end_of_s4pio2 FF07  
            __end_of___flge 40CA              __end_of___fleq 47DA                 vfpfcnvrt@ap 00BC  
               vfpfcnvrt@cp 00C5                 ___rem_pio2f 1E64                 vfpfcnvrt@fp 00B9  
            __end_of___wmul 4D38              __end_of_efgtoa 0B12              __end_of_pio2_1 FEEB  
      moveDisplay@menuItem1 0195        moveDisplay@menuItem2 01A6              __end_of_floorf 2FA2  
      moveDisplay@menuItems 01B7              __end_of_memcpy 4A4A                  floorf@F521 0119  
            __end_of_runADC 31B4              __end_of_runDAC 28A8              __end_of_runPWM 3CA2  
            __end_of_printf 4D7E              __end_of_strcpy 4C16              __end_of_strlen 4C4C  
       start_initialization 49A6                 __end_of_ISR 0114                 __end_of_abs 4CEA  
               __end_of_pad 4878                  ?_SPI_write 0001       __end_of___fpclassifyf 41C8  
           runADC@keepState 01B2                 vfprintf@fmt 00C9                    ??___flge 0035  
                  ??___fleq 000E                    ??___wmul 000A                    ??_efgtoa 008B  
               __pdataBANK1 01CA                    ??_floorf 004A                    ??_memcpy 000C  
                  ??_runADC 00E7                    ??_runDAC 00D2                    ??_runPWM 000E  
                  ??_printf 0054                    ??_strcpy 000A                    ??_strlen 0008  
                 ___fladd@a 004A                   ___fladd@b 0046                   ___fldiv@a 0031  
                 ___fldiv@b 002D               runGPIO@states 0009                   ___cosdf@r 0068  
                 ___cosdf@w 0078                   ___cosdf@x 0064                   ___cosdf@z 007C  
                 ___flmul@a 0018                   ___flmul@b 0014                 __pbssCOMRAM 0055  
                 ___flsub@a 0068                   ___flsub@b 0064               __pcstackBANK0 0060  
             __pcstackBANK1 0195                 ??_LCD_Clear 0007                   ___sindf@r 0068  
                 ___sindf@s 007C                   ___sindf@w 006C                   ___sindf@x 0064  
                 ___sindf@z 0080       runGPIO@numberOfStates 0022                 _efgtoa$3996 0093  
          ___lwdiv@dividend 0006                   _dtoa$3965 0024               SPI_write@data 0008  
                 __pintcode 0008               __pmediumconst FED2                    ?___fladd 0046  
                  ?___fldiv 002D                    ?___awdiv 0006                    ?___cosdf 0064  
                  ?___flneg 0080                    ?___awmod 0006                    ?___flmul 0014  
                  ?___flsub 0064                    ?___fltol 0064                  runADC@pot1 01AE  
                runADC@pot2 01B0                    ?___lwdiv 0006                    ?___sindf 0064  
                  ?___lwmod 0006                  runADC@text 0195                   fabsf@F465 0111  
             ??_moveDisplay 00E8                    ?_runGAME 0001                    ?_runGPIO 0001  
                  ?_runUART 0001             runDAC@keepState 00DB            ___lwdiv@quotient 000B  
                  ?_sprintf 00CE                   _sinf$4167 00A8                   _sinf$4168 00AC  
                 _sinf$4448 00B2                 ??_SPI_write 0006              runDAC@DACindex 00DD  
                  _LCD_Init 42B8                    _LCD_Send 4D38              ___wmul@product 000A  
                  _LATAbits 0F89                    _LATBbits 0F8A                    _LATCbits 0F8B  
                  _LATDbits 0F8C                runGAME@F6962 0200                  runUART@len 00F4  
         LED2_Control@state 0006                    i2u670_40 0082                    i2u670_41 007E  
                  i2u671_40 00A0                    i2u671_41 009C                    i2u672_40 00AE  
                  i2u672_41 00AA                    i2u673_40 00C0                    i2u665_40 0020  
                  i2u673_41 00BC                    i2u665_41 001C                    i2u674_40 00D6  
                  i2u666_40 002E                    i2u674_41 00D2                    i2u666_41 002A  
                  i2u667_40 0040                    i2u667_41 003C                    i2u668_40 004E  
                  i2u668_41 004A                    i2u669_40 0074                    i2u669_41 0070  
                  i2u998_47 0058                   _vfpfcnvrt 0B12                  _ADCON0bits 0FC2  
                _ADCON2bits 0FC0           ___wmul@multiplier 0006                   main@menuI 01C9  
          moveDisplay@F6963 01CA                  vfpfcnvrt@c 00C4                   copy_data0 49BA  
       __end_of_moveDisplay 3DB4            moveDisplay@menuI 01C7            moveDisplay@where 00E7  
              runGPIO@F6975 01E6                runGPIO@F6993 01DA                runGPIO@GPIOi 0024  
                  __Hrparam 0000                   memcpy@tmp 000C                  vfprintf@ap 00CB  
                  __Lrparam 0000                  vfprintf@fp 00C7          runGPIO@GPIOreverse 0021  
         LED6_Control@state 0006                ?___rem_pio2f 0084                  ?_vfpfcnvrt 00B9  
       runDAC@selectModeDAC 00DC                  _ANSELAbits 0F38                  _ANSELBbits 0F39  
                _ANSELCbits 0F3A                  _ANSELDbits 0F3B                  _ANSELEbits 0F3C  
        ___fpclassifyf@F465 011D                  sprintf@fmt 00D0                    ___xxtofl 33B2  
           ___lwdiv@divisor 0008             ___lwdiv@counter 000A                    __ptext10 4DCC  
                  __ptext11 4DDA                    __ptext20 4B66                    __ptext12 3DB4  
                  __ptext21 2FA2                    __ptext13 25C0                    __ptext30 3566  
                  __ptext22 33B2                    __ptext14 106E                    __ptext31 4682  
                  __ptext23 3CA2                    __ptext15 2B5A                    __ptext40 4A94  
                  __ptext32 4D12                    __ptext24 4ADC                    __ptext16 1E64  
                  __ptext41 1578                    __ptext33 0118                    __ptext25 4A4A  
                  __ptext17 4C82                    __ptext50 4392                    __ptext42 4BA4  
                  __ptext34 4BDE                    __ptext26 0B12                    __ptext18 31B4  
                  __ptext51 4D7E                    __ptext43 1A3A                    __ptext35 49FA  
                  __ptext27 41C8                    __ptext19 4D5E                    __ptext52 4CB6  
                  __ptext44 3FC6                    __ptext36 4950                    __ptext28 48EC  
                  __ptext53 45D2                    __ptext45 4730                    __ptext37 2D8C  
                  __ptext29 4878                    __ptext54 445C                    __ptext46 2226  
                  __ptext38 40CA                    __ptext55 4520                    __ptext47 3704  
                  __ptext39 3EBE                    __ptext56 4C4C                    __ptext48 47DA  
                  __ptext57 42B8                    __ptext49 4B22                    __ptext58 4D38  
            runADC@voltage1 01A6              runADC@voltage2 01AA                _SSP1CON1bits 0FC6  
              _SSP2CON1bits 0F6C                _SSP2CON2bits 0F6B                  strcpy@dest 0006  
                  efgtoa@fp 0084                    efgtoa@ne 008D                    efgtoa@pp 0095  
                  efgtoa@ou 00A0                    _runMUSIC 4DE8                    isa$xinst 0000  
                  int$flags 005A                 _runDAC$4445 00D3                 _runDAC$4446 00D7  
                  _vfprintf 4A4A               ?_LED1_Control 0001                   printf@fmt 00CE  
              _SSP1STATbits 0FC7               ?_LED2_Control 0001                _SSP2STATbits 0F6D  
             ?_LED3_Control 0001            runGAME@keepState 00FC               ?_LED4_Control 0001  
                 putch@data 0006               ?_LED5_Control 0001                    memcpy@d1 0006  
             ?_LED6_Control 0001                    memcpy@s1 0008                 _moveDisplay 3CA2  
                  intlevel2 0000                   sprintf@ap 00DA            ___lwmod@dividend 0006  
                 strcpy@src 0008                  _RCSTA1bits 0FAB                    sinf@sign 00B1  
                  runGPIO@j 0025                    runUART@i 00F6                    runUART@p 00F8  
               efgtoa@nmode 0097                    printf@ap 0054              ??_LED1_Control 0006  
            ??_LED2_Control 0006                 ??_vfpfcnvrt 00BD      LCD_ShowString@textData 0007  
            ??_LED3_Control 0006              ??_LED4_Control 0006                    sprintf@f 00DB  
                  sprintf@s 00CE              ??_LED5_Control 0006             ___lwmod@divisor 0008  
            ??_LED6_Control 0006             ___lwmod@counter 000A            runPWM@multiplier 0011  
             ___fladd@signs 0060                ___fladd@aexp 0061                ___fladd@bexp 0062  
              ___cosdf$4450 0070                ___cosdf$4451 0074                ___cosdf$4449 006C  
             _keepStateGPIO 00FF           LED3_Control@state 0006  
