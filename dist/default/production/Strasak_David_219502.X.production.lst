

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 17 22:08:36 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83   000000                     
    84                           ; Generated 12/10/2023 GMT
    85                           ; 
    86                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F46K22 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118   000000                     
   119                           	psect	idataBANK1
   120   005260                     __pidataBANK1:
   121                           	callstack 0
   122                           
   123                           ;initializer for moveDisplay@F6965
   124   005260  DC                 	db	low STR_24
   125   005261  FF                 	db	high STR_24
   126   005262  E1                 	db	low STR_25
   127   005263  FF                 	db	high STR_25
   128   005264  FB                 	db	low STR_26
   129   005265  FF                 	db	high STR_26
   130   005266  F7                 	db	low STR_27
   131   005267  FF                 	db	high STR_27
   132   005268  F3                 	db	low STR_28
   133   005269  FF                 	db	high STR_28
   134   00526A  D7                 	db	low STR_29
   135   00526B  FF                 	db	high STR_29
   136   00526C  C6                 	db	low STR_30
   137   00526D  FF                 	db	high STR_30
   138   00526E  D6                 	db	low (STR_35+4)
   139   00526F  FF                 	db	high (STR_35+4)
   140                           
   141                           ;initializer for runGPIO@F6993
   142   005270  20                 	db	32
   143   005271  30                 	db	48
   144   005272  18                 	db	24
   145   005273  0C                 	db	12
   146   005274  06                 	db	6
   147   005275  03                 	db	3
   148   005276  01                 	db	1
   149   005277  03                 	db	3
   150   005278  06                 	db	6
   151   005279  0C                 	db	12
   152   00527A  18                 	db	24
   153   00527B  30                 	db	48
   154                           
   155                           ;initializer for runGPIO@F6975
   156   00527C  42                 	db	low _LED1_Control
   157   00527D  53                 	db	high _LED1_Control
   158   00527E  34                 	db	low _LED2_Control
   159   00527F  53                 	db	high _LED2_Control
   160   005280  26                 	db	low _LED3_Control
   161   005281  53                 	db	high _LED3_Control
   162   005282  18                 	db	low _LED4_Control
   163   005283  53                 	db	high _LED4_Control
   164   005284  0A                 	db	low _LED5_Control
   165   005285  53                 	db	high _LED5_Control
   166   005286  50                 	db	low _LED6_Control
   167   005287  53                 	db	high _LED6_Control
   168                           
   169                           	psect	mediumconst
   170   00FDF2                     __pmediumconst:
   171                           	callstack 0
   172   00FDF2  00                 	db	0
   173   00FDF3  6C3C               	dw	27708
   174   00FDF5  3636               	dw	13878
   175   00FDF7                     __end_of_S4:
   176                           	callstack 0
   177   00FDF7  07CF               	dw	1999
   178   00FDF9  B950               	dw	47440
   179   00FDFB                     __end_of_S3:
   180                           	callstack 0
   181   00FDFB  8884               	dw	34948
   182   00FDFD  3C08               	dw	15368
   183   00FDFF                     __end_of_S2:
   184                           	callstack 0
   185   00FDFF  AAAB               	dw	43691
   186   00FE01  BE2A               	dw	48682
   187   00FE03                     __end_of_S1:
   188                           	callstack 0
   189   00FE03  85A3               	dw	34211
   190   00FE05  3288               	dw	12936
   191   00FE07                     __end_of_pio2_1t:
   192                           	callstack 0
   193   00FE07  0FDA               	dw	4058
   194   00FE09  3FC9               	dw	16329
   195   00FE0B                     __end_of_pio2_1:
   196                           	callstack 0
   197   00FE0B  F983               	dw	63875
   198   00FE0D  3F22               	dw	16162
   199   00FE0F                     __end_of_invpio2:
   200                           	callstack 0
   201   00FE0F  0000               	dw	0
   202   00FE11  3F00               	dw	16128
   203   00FE13                     __end_of_half:
   204                           	callstack 0
   205   00FE13  9A17               	dw	39447
   206   00FE15  37CC               	dw	14284
   207   00FE17                     __end_of_C3:
   208                           	callstack 0
   209   00FE17  043F               	dw	1087
   210   00FE19  BAB6               	dw	47798
   211   00FE1B                     __end_of_C2:
   212                           	callstack 0
   213   00FE1B  AA9F               	dw	43679
   214   00FE1D  3D2A               	dw	15658
   215   00FE1F                     __end_of_C1:
   216                           	callstack 0
   217   00FE1F  0000               	dw	0
   218   00FE21  BF00               	dw	48896
   219   00FE23                     __end_of_C0:
   220                           	callstack 0
   221   00FE23  0FDB               	dw	4059
   222   00FE25  40C9               	dw	16585
   223   00FE27                     __end_of_s4pio2:
   224                           	callstack 0
   225   00FE27  CBE4               	dw	52196
   226   00FE29  4096               	dw	16534
   227   00FE2B                     __end_of_s3pio2:
   228                           	callstack 0
   229   00FE2B  0FDB               	dw	4059
   230   00FE2D  4049               	dw	16457
   231   00FE2F                     __end_of_s2pio2:
   232                           	callstack 0
   233   00FE2F  0FDB               	dw	4059
   234   00FE31  3FC9               	dw	16329
   235   00FE33                     __end_of_s1pio2:
   236                           	callstack 0
   237   000000                     _ADRESL	set	4035
   238   000000                     _RCREG1	set	4014
   239   000000                     _ANSELCbits	set	3898
   240   000000                     _TXREG1	set	4013
   241   000000                     _ADRESH	set	4036
   242   000000                     _LATBbits	set	3978
   243   000000                     _TXSTA1bits	set	4012
   244   000000                     _ANSELBbits	set	3897
   245   000000                     _TRISBbits	set	3987
   246   000000                     _SSP2STATbits	set	3949
   247   000000                     _SSP2ADD	set	3950
   248   000000                     _ANSELDbits	set	3899
   249   000000                     _PORTAbits	set	3968
   250   000000                     _PORTCbits	set	3970
   251   000000                     _LATCbits	set	3979
   252   000000                     _LATDbits	set	3980
   253   000000                     _ANSELAbits	set	3896
   254   000000                     _TRISAbits	set	3986
   255   000000                     _TRISCbits	set	3988
   256   000000                     _TMR2IE	set	31977
   257   000000                     _TMR2IF	set	31985
   258   000000                     _RC1IF	set	31989
   259   000000                     _RC1IE	set	31981
   260   000000                     _TMR1ON	set	32360
   261   000000                     _TMR1IF	set	31984
   262   000000                     _GIE	set	32663
   263   000000                     _TX1IF	set	31988
   264   000000                     _GODONE	set	32273
   265   000000                     _TRISDbits	set	3989
   266   000000                     _TMR1IE	set	31976
   267   000000                     _SSP1IF	set	31987
   268   000000                     _SSP2IF	set	32039
   269   000000                     _LATAbits	set	3977
   270   000000                     _CCPTMRS0bits	set	3913
   271   000000                     _ANSELEbits	set	3900
   272   000000                     _SSP2CON2bits	set	3947
   273   000000                     _SSP2CON1bits	set	3948
   274   000000                     _SSP2BUF	set	3951
   275   000000                     _RCSTA1bits	set	4011
   276   000000                     _SPBRG1	set	4015
   277   000000                     _ADCON2bits	set	4032
   278   000000                     _SSP1CON1bits	set	4038
   279   000000                     _SSP1BUF	set	4041
   280   000000                     _SSP1STATbits	set	4039
   281   000000                     _ADCON0bits	set	4034
   282   000000                     _PR2	set	4027
   283   000000                     _TMR2ON	set	32210
   284   000000                     _T1CONbits	set	4045
   285   000000                     _TMR1	set	4046
   286   000000                     _PEIE	set	32662
   287   000000                     _CCP1CONbits	set	4029
   288   000000                     _CCPR1L	set	4030
   289   00FE33                     STR_36:
   290   00FE33  25                 	db	37
   291   00FE34  75                 	db	117	;'u'
   292   00FE35  20                 	db	32
   293   00FE36  20                 	db	32
   294   00FE37  20                 	db	32
   295   00FE38  20                 	db	32
   296   00FE39  20                 	db	32
   297   00FE3A  20                 	db	32
   298   00FE3B  20                 	db	32
   299   00FE3C  20                 	db	32
   300   00FE3D  20                 	db	32
   301   00FE3E  20                 	db	32
   302   00FE3F  20                 	db	32
   303   00FE40  20                 	db	32
   304   00FE41  20                 	db	32
   305   00FE42  20                 	db	32
   306   00FE43  20                 	db	32
   307   00FE44  20                 	db	32
   308   00FE45  00                 	db	0
   309   00FE46                     STR_34:
   310   00FE46  50                 	db	80	;'P'
   311   00FE47  4F                 	db	79	;'O'
   312   00FE48  54                 	db	84	;'T'
   313   00FE49  31                 	db	49	;'1'
   314   00FE4A  3A                 	db	58	;':'
   315   00FE4B  25                 	db	37
   316   00FE4C  2E                 	db	46
   317   00FE4D  31                 	db	49	;'1'
   318   00FE4E  66                 	db	102	;'f'
   319   00FE4F  50                 	db	80	;'P'
   320   00FE50  4F                 	db	79	;'O'
   321   00FE51  54                 	db	84	;'T'
   322   00FE52  32                 	db	50	;'2'
   323   00FE53  3A                 	db	58	;':'
   324   00FE54  25                 	db	37
   325   00FE55  2E                 	db	46
   326   00FE56  31                 	db	49	;'1'
   327   00FE57  66                 	db	102	;'f'
   328   00FE58  00                 	db	0
   329   00FE59                     STR_39:
   330   00FE59  53                 	db	83	;'S'
   331   00FE5A  6B                 	db	107	;'k'
   332   00FE5B  6F                 	db	111	;'o'
   333   00FE5C  72                 	db	114	;'r'
   334   00FE5D  65                 	db	101	;'e'
   335   00FE5E  3A                 	db	58	;':'
   336   00FE5F  20                 	db	32
   337   00FE60  25                 	db	37
   338   00FE61  75                 	db	117	;'u'
   339   00FE62  20                 	db	32
   340   00FE63  20                 	db	32
   341   00FE64  20                 	db	32
   342   00FE65  20                 	db	32
   343   00FE66  20                 	db	32
   344   00FE67  20                 	db	32
   345   00FE68  20                 	db	32
   346   00FE69  20                 	db	32
   347   00FE6A  00                 	db	0
   348   00FE6B                     STR_37:
   349   00FE6B  25                 	db	37
   350   00FE6C  68                 	db	104	;'h'
   351   00FE6D  75                 	db	117	;'u'
   352   00FE6E  20                 	db	32
   353   00FE6F  20                 	db	32
   354   00FE70  20                 	db	32
   355   00FE71  20                 	db	32
   356   00FE72  20                 	db	32
   357   00FE73  20                 	db	32
   358   00FE74  20                 	db	32
   359   00FE75  20                 	db	32
   360   00FE76  20                 	db	32
   361   00FE77  20                 	db	32
   362   00FE78  20                 	db	32
   363   00FE79  20                 	db	32
   364   00FE7A  20                 	db	32
   365   00FE7B  00                 	db	0
   366   00FE7C                     STR_40:
   367   00FE7C  47                 	db	71	;'G'
   368   00FE7D  41                 	db	65	;'A'
   369   00FE7E  4D                 	db	77	;'M'
   370   00FE7F  45                 	db	69	;'E'
   371   00FE80  20                 	db	32
   372   00FE81  4F                 	db	79	;'O'
   373   00FE82  56                 	db	86	;'V'
   374   00FE83  45                 	db	69	;'E'
   375   00FE84  52                 	db	82	;'R'
   376   00FE85  20                 	db	32
   377   00FE86  20                 	db	32
   378   00FE87  20                 	db	32
   379   00FE88  20                 	db	32
   380   00FE89  20                 	db	32
   381   00FE8A  20                 	db	32
   382   00FE8B  20                 	db	32
   383   00FE8C  00                 	db	0
   384   00FE8D                     STR_15:
   385   00FE8D  50                 	db	80	;'P'
   386   00FE8E  4F                 	db	79	;'O'
   387   00FE8F  54                 	db	84	;'T'
   388   00FE90  31                 	db	49	;'1'
   389   00FE91  20                 	db	32
   390   00FE92  20                 	db	32
   391   00FE93  20                 	db	32
   392   00FE94  20                 	db	32
   393   00FE95  20                 	db	32
   394   00FE96  20                 	db	32
   395   00FE97  20                 	db	32
   396   00FE98  20                 	db	32
   397   00FE99  20                 	db	32
   398   00FE9A  20                 	db	32
   399   00FE9B  20                 	db	32
   400   00FE9C  20                 	db	32
   401   00FE9D  00                 	db	0
   402   00FE9E                     STR_21:
   403   00FE9E  4E                 	db	78	;'N'
   404   00FE9F  65                 	db	101	;'e'
   405   00FEA0  62                 	db	98	;'b'
   406   00FEA1  79                 	db	121	;'y'
   407   00FEA2  6C                 	db	108	;'l'
   408   00FEA3  6F                 	db	111	;'o'
   409   00FEA4  20                 	db	32
   410   00FEA5  20                 	db	32
   411   00FEA6  20                 	db	32
   412   00FEA7  20                 	db	32
   413   00FEA8  20                 	db	32
   414   00FEA9  20                 	db	32
   415   00FEAA  20                 	db	32
   416   00FEAB  20                 	db	32
   417   00FEAC  20                 	db	32
   418   00FEAD  20                 	db	32
   419   00FEAE  00                 	db	0
   420   00FEAF                     STR_5:
   421   00FEAF  42                 	db	66	;'B'
   422   00FEB0  52                 	db	82	;'R'
   423   00FEB1  3A                 	db	58	;':'
   424   00FEB2  20                 	db	32
   425   00FEB3  31                 	db	49	;'1'
   426   00FEB4  39                 	db	57	;'9'
   427   00FEB5  32                 	db	50	;'2'
   428   00FEB6  30                 	db	48	;'0'
   429   00FEB7  30                 	db	48	;'0'
   430   00FEB8  20                 	db	32
   431   00FEB9  20                 	db	32
   432   00FEBA  20                 	db	32
   433   00FEBB  20                 	db	32
   434   00FEBC  20                 	db	32
   435   00FEBD  20                 	db	32
   436   00FEBE  20                 	db	32
   437   00FEBF  00                 	db	0
   438   00FEC0                     STR_1:
   439   00FEC0  56                 	db	86	;'V'
   440   00FEC1  79                 	db	121	;'y'
   441   00FEC2  74                 	db	116	;'t'
   442   00FEC3  76                 	db	118	;'v'
   443   00FEC4  6F                 	db	111	;'o'
   444   00FEC5  72                 	db	114	;'r'
   445   00FEC6  69                 	db	105	;'i'
   446   00FEC7  6C                 	db	108	;'l'
   447   00FEC8  3A                 	db	58	;':'
   448   00FEC9  20                 	db	32
   449   00FECA  20                 	db	32
   450   00FECB  20                 	db	32
   451   00FECC  20                 	db	32
   452   00FECD  20                 	db	32
   453   00FECE  20                 	db	32
   454   00FECF  20                 	db	32
   455   00FED0  00                 	db	0
   456   00FED1                     STR_18:
   457   00FED1  50                 	db	80	;'P'
   458   00FED2  72                 	db	114	;'r'
   459   00FED3  69                 	db	105	;'i'
   460   00FED4  70                 	db	112	;'p'
   461   00FED5  72                 	db	114	;'r'
   462   00FED6  61                 	db	97	;'a'
   463   00FED7  76                 	db	118	;'v'
   464   00FED8  69                 	db	105	;'i'
   465   00FED9  74                 	db	116	;'t'
   466   00FEDA  20                 	db	32
   467   00FEDB  20                 	db	32
   468   00FEDC  20                 	db	32
   469   00FEDD  20                 	db	32
   470   00FEDE  20                 	db	32
   471   00FEDF  20                 	db	32
   472   00FEE0  20                 	db	32
   473   00FEE1  00                 	db	0
   474   00FEE2                     STR_16:
   475   00FEE2  5A                 	db	90	;'Z'
   476   00FEE3  72                 	db	114	;'r'
   477   00FEE4  79                 	db	121	;'y'
   478   00FEE5  63                 	db	99	;'c'
   479   00FEE6  68                 	db	104	;'h'
   480   00FEE7  6C                 	db	108	;'l'
   481   00FEE8  69                 	db	105	;'i'
   482   00FEE9  20                 	db	32
   483   00FEEA  74                 	db	116	;'t'
   484   00FEEB  6F                 	db	111	;'o'
   485   00FEEC  20                 	db	32
   486   00FEED  20                 	db	32
   487   00FEEE  20                 	db	32
   488   00FEEF  20                 	db	32
   489   00FEF0  20                 	db	32
   490   00FEF1  20                 	db	32
   491   00FEF2  00                 	db	0
   492   00FEF3                     STR_17:
   493   00FEF3  70                 	db	112	;'p'
   494   00FEF4  6F                 	db	111	;'o'
   495   00FEF5  6D                 	db	109	;'m'
   496   00FEF6  6F                 	db	111	;'o'
   497   00FEF7  63                 	db	99	;'c'
   498   00FEF8  69                 	db	105	;'i'
   499   00FEF9  20                 	db	32
   500   00FEFA  42                 	db	66	;'B'
   501   00FEFB  54                 	db	84	;'T'
   502   00FEFC  4E                 	db	78	;'N'
   503   00FEFD  34                 	db	52	;'4'
   504   00FEFE  20                 	db	32
   505   00FEFF  20                 	db	32
   506   00FF00  20                 	db	32
   507   00FF01  20                 	db	32
   508   00FF02  20                 	db	32
   509   00FF03  00                 	db	0
   510   00FF04                     STR_14:
   511   00FF04  48                 	db	72	;'H'
   512   00FF05  79                 	db	121	;'y'
   513   00FF06  62                 	db	98	;'b'
   514   00FF07  65                 	db	101	;'e'
   515   00FF08  6A                 	db	106	;'j'
   516   00FF09  20                 	db	32
   517   00FF0A  70                 	db	112	;'p'
   518   00FF0B  6F                 	db	111	;'o'
   519   00FF0C  6D                 	db	109	;'m'
   520   00FF0D  6F                 	db	111	;'o'
   521   00FF0E  63                 	db	99	;'c'
   522   00FF0F  69                 	db	105	;'i'
   523   00FF10  20                 	db	32
   524   00FF11  20                 	db	32
   525   00FF12  20                 	db	32
   526   00FF13  20                 	db	32
   527   00FF14  00                 	db	0
   528   00FF15                     STR_3:
   529   00FF15  50                 	db	80	;'P'
   530   00FF16  6F                 	db	111	;'o'
   531   00FF17  7A                 	db	122	;'z'
   532   00FF18  6F                 	db	111	;'o'
   533   00FF19  72                 	db	114	;'r'
   534   00FF1A  21                 	db	33
   535   00FF1B  20                 	db	32
   536   00FF1C  48                 	db	72	;'H'
   537   00FF1D  61                 	db	97	;'a'
   538   00FF1E  64                 	db	100	;'d'
   539   00FF1F  21                 	db	33
   540   00FF20  21                 	db	33
   541   00FF21  21                 	db	33
   542   00FF22  20                 	db	32
   543   00FF23  20                 	db	32
   544   00FF24  20                 	db	32
   545   00FF25  00                 	db	0
   546   00FF26                     STR_2:
   547   00FF26  44                 	db	68	;'D'
   548   00FF27  61                 	db	97	;'a'
   549   00FF28  76                 	db	118	;'v'
   550   00FF29  69                 	db	105	;'i'
   551   00FF2A  64                 	db	100	;'d'
   552   00FF2B  20                 	db	32
   553   00FF2C  53                 	db	83	;'S'
   554   00FF2D  74                 	db	116	;'t'
   555   00FF2E  72                 	db	114	;'r'
   556   00FF2F  61                 	db	97	;'a'
   557   00FF30  73                 	db	115	;'s'
   558   00FF31  61                 	db	97	;'a'
   559   00FF32  6B                 	db	107	;'k'
   560   00FF33  20                 	db	32
   561   00FF34  20                 	db	32
   562   00FF35  20                 	db	32
   563   00FF36  00                 	db	0
   564   00FF37                     STR_12:
   565   00FF37  4C                 	db	76	;'L'
   566   00FF38  61                 	db	97	;'a'
   567   00FF39  64                 	db	100	;'d'
   568   00FF3A  65                 	db	101	;'e'
   569   00FF3B  6E                 	db	110	;'n'
   570   00FF3C  69                 	db	105	;'i'
   571   00FF3D  20                 	db	32
   572   00FF3E  70                 	db	112	;'p'
   573   00FF3F  6F                 	db	111	;'o'
   574   00FF40  74                 	db	116	;'t'
   575   00FF41  61                 	db	97	;'a'
   576   00FF42  6B                 	db	107	;'k'
   577   00FF43  75                 	db	117	;'u'
   578   00FF44  20                 	db	32
   579   00FF45  20                 	db	32
   580   00FF46  20                 	db	32
   581   00FF47  00                 	db	0
   582   00FF48                     STR_7:
   583   00FF48  5A                 	db	90	;'Z'
   584   00FF49  6D                 	db	109	;'m'
   585   00FF4A  61                 	db	97	;'a'
   586   00FF4B  63                 	db	99	;'c'
   587   00FF4C  6B                 	db	107	;'k'
   588   00FF4D  6E                 	db	110	;'n'
   589   00FF4E  65                 	db	101	;'e'
   590   00FF4F  74                 	db	116	;'t'
   591   00FF50  65                 	db	101	;'e'
   592   00FF51  20                 	db	32
   593   00FF52  42                 	db	66	;'B'
   594   00FF53  54                 	db	84	;'T'
   595   00FF54  4E                 	db	78	;'N'
   596   00FF55  32                 	db	50	;'2'
   597   00FF56  20                 	db	32
   598   00FF57  20                 	db	32
   599   00FF58  00                 	db	0
   600   00FF59                     STR_22:
   601   00FF59  49                 	db	73	;'I'
   602   00FF5A  6D                 	db	109	;'m'
   603   00FF5B  70                 	db	112	;'p'
   604   00FF5C  6C                 	db	108	;'l'
   605   00FF5D  65                 	db	101	;'e'
   606   00FF5E  6D                 	db	109	;'m'
   607   00FF5F  65                 	db	101	;'e'
   608   00FF60  6E                 	db	110	;'n'
   609   00FF61  74                 	db	116	;'t'
   610   00FF62  6F                 	db	111	;'o'
   611   00FF63  76                 	db	118	;'v'
   612   00FF64  61                 	db	97	;'a'
   613   00FF65  6E                 	db	110	;'n'
   614   00FF66  6F                 	db	111	;'o'
   615   00FF67  20                 	db	32
   616   00FF68  20                 	db	32
   617   00FF69  00                 	db	0
   618   00FF6A                     STR_10:
   619   00FF6A  52                 	db	82	;'R'
   620   00FF6B  42                 	db	66	;'B'
   621   00FF6C  30                 	db	48	;'0'
   622   00FF6D  2D                 	db	45
   623   00FF6E  41                 	db	65	;'A'
   624   00FF6F  32                 	db	50	;'2'
   625   00FF70  2C                 	db	44
   626   00FF71  20                 	db	32
   627   00FF72  42                 	db	66	;'B'
   628   00FF73  52                 	db	82	;'R'
   629   00FF74  3A                 	db	58	;':'
   630   00FF75  31                 	db	49	;'1'
   631   00FF76  39                 	db	57	;'9'
   632   00FF77  32                 	db	50	;'2'
   633   00FF78  30                 	db	48	;'0'
   634   00FF79  30                 	db	48	;'0'
   635   00FF7A  00                 	db	0
   636   00FF7B                     STR_9:
   637   00FF7B  56                 	db	86	;'V'
   638   00FF7C  6F                 	db	111	;'o'
   639   00FF7D  6C                 	db	108	;'l'
   640   00FF7E  74                 	db	116	;'t'
   641   00FF7F  79                 	db	121	;'y'
   642   00FF80  20                 	db	32
   643   00FF81  6E                 	db	110	;'n'
   644   00FF82  61                 	db	97	;'a'
   645   00FF83  20                 	db	32
   646   00FF84  50                 	db	80	;'P'
   647   00FF85  4F                 	db	79	;'O'
   648   00FF86  54                 	db	84	;'T'
   649   00FF87  65                 	db	101	;'e'
   650   00FF88  63                 	db	99	;'c'
   651   00FF89  68                 	db	104	;'h'
   652   00FF8A  3A                 	db	58	;':'
   653   00FF8B  00                 	db	0
   654   00FF8C                     STR_6:
   655   00FF8C  4B                 	db	75	;'K'
   656   00FF8D  6F                 	db	111	;'o'
   657   00FF8E  6E                 	db	110	;'n'
   658   00FF8F  65                 	db	101	;'e'
   659   00FF90  63                 	db	99	;'c'
   660   00FF91  20                 	db	32
   661   00FF92  2D                 	db	45
   662   00FF93  20                 	db	32
   663   00FF94  6E                 	db	110	;'n'
   664   00FF95  65                 	db	101	;'e'
   665   00FF96  77                 	db	119	;'w'
   666   00FF97  20                 	db	32
   667   00FF98  6C                 	db	108	;'l'
   668   00FF99  69                 	db	105	;'i'
   669   00FF9A  6E                 	db	110	;'n'
   670   00FF9B  65                 	db	101	;'e'
   671   00FF9C  00                 	db	0
   672   00FF9D                     STR_11:
   673   00FF9D  31                 	db	49	;'1'
   674   00FF9E  3A                 	db	58	;':'
   675   00FF9F  74                 	db	116	;'t'
   676   00FFA0  72                 	db	114	;'r'
   677   00FFA1  2C                 	db	44
   678   00FFA2  32                 	db	50	;'2'
   679   00FFA3  3A                 	db	58	;':'
   680   00FFA4  73                 	db	115	;'s'
   681   00FFA5  69                 	db	105	;'i'
   682   00FFA6  6E                 	db	110	;'n'
   683   00FFA7  2C                 	db	44
   684   00FFA8  33                 	db	51	;'3'
   685   00FFA9  3A                 	db	58	;':'
   686   00FFAA  70                 	db	112	;'p'
   687   00FFAB  69                 	db	105	;'i'
   688   00FFAC  6C                 	db	108	;'l'
   689   00FFAD  00                 	db	0
   690   00FFAE                     STR_20:
   691   00FFAE  20                 	db	32
   692   00FFAF  20                 	db	32
   693   00FFB0  20                 	db	32
   694   00FFB1  20                 	db	32
   695   00FFB2  20                 	db	32
   696   00FFB3  20                 	db	32
   697   00FFB4  20                 	db	32
   698   00FFB5  20                 	db	32
   699   00FFB6  20                 	db	32
   700   00FFB7  20                 	db	32
   701   00FFB8  20                 	db	32
   702   00FFB9  50                 	db	80	;'P'
   703   00FFBA  6F                 	db	111	;'o'
   704   00FFBB  7A                 	db	122	;'z'
   705   00FFBC  6F                 	db	111	;'o'
   706   00FFBD  72                 	db	114	;'r'
   707   00FFBE  00                 	db	0
   708   00FFBF                     STR_47:
   709   00FFBF  28                 	db	40
   710   00FFC0  6E                 	db	110	;'n'
   711   00FFC1  75                 	db	117	;'u'
   712   00FFC2  6C                 	db	108	;'l'
   713   00FFC3  6C                 	db	108	;'l'
   714   00FFC4  29                 	db	41
   715   00FFC5  00                 	db	0
   716   00FFC6                     STR_30:
   717   00FFC6  4D                 	db	77	;'M'
   718   00FFC7  55                 	db	85	;'U'
   719   00FFC8  53                 	db	83	;'S'
   720   00FFC9  49                 	db	73	;'I'
   721   00FFCA  43                 	db	67	;'C'
   722   00FFCB  00                 	db	0
   723   00FFCC                     STR_32:
   724   00FFCC  3E                 	db	62	;'>'
   725   00FFCD  25                 	db	37
   726   00FFCE  2D                 	db	45
   727   00FFCF  2A                 	db	42
   728   00FFD0  73                 	db	115	;'s'
   729   00FFD1  00                 	db	0
   730   00FFD2                     STR_35:
   731   00FFD2  25                 	db	37
   732   00FFD3  73                 	db	115	;'s'
   733   00FFD4  20                 	db	32
   734   00FFD5  0A                 	db	10
   735   00FFD6  00                 	db	0
   736   00FFD7                     STR_29:
   737   00FFD7  47                 	db	71	;'G'
   738   00FFD8  41                 	db	65	;'A'
   739   00FFD9  4D                 	db	77	;'M'
   740   00FFDA  45                 	db	69	;'E'
   741   00FFDB  00                 	db	0
   742   00FFDC                     STR_24:
   743   00FFDC  47                 	db	71	;'G'
   744   00FFDD  50                 	db	80	;'P'
   745   00FFDE  49                 	db	73	;'I'
   746   00FFDF  4F                 	db	79	;'O'
   747   00FFE0  00                 	db	0
   748   00FFE1                     STR_25:
   749   00FFE1  55                 	db	85	;'U'
   750   00FFE2  41                 	db	65	;'A'
   751   00FFE3  52                 	db	82	;'R'
   752   00FFE4  54                 	db	84	;'T'
   753   00FFE5  00                 	db	0
   754   00FFE6                     STR_23:
   755   00FFE6  25                 	db	37
   756   00FFE7  64                 	db	100	;'d'
   757   00FFE8  20                 	db	32
   758   00FFE9  0D                 	db	13
   759   00FFEA  00                 	db	0
   760   00FFEB                     STR_41:
   761   00FFEB  69                 	db	105	;'i'
   762   00FFEC  6E                 	db	110	;'n'
   763   00FFED  66                 	db	102	;'f'
   764   00FFEE  00                 	db	0
   765   00FFEF                     STR_44:
   766   00FFEF  6E                 	db	110	;'n'
   767   00FFF0  61                 	db	97	;'a'
   768   00FFF1  6E                 	db	110	;'n'
   769   00FFF2  00                 	db	0
   770   00FFF3                     STR_28:
   771   00FFF3  44                 	db	68	;'D'
   772   00FFF4  41                 	db	65	;'A'
   773   00FFF5  43                 	db	67	;'C'
   774   00FFF6  00                 	db	0
   775   00FFF7                     STR_27:
   776   00FFF7  41                 	db	65	;'A'
   777   00FFF8  44                 	db	68	;'D'
   778   00FFF9  43                 	db	67	;'C'
   779   00FFFA  00                 	db	0
   780   00FFFB                     STR_26:
   781   00FFFB  50                 	db	80	;'P'
   782   00FFFC  57                 	db	87	;'W'
   783   00FFFD  4D                 	db	77	;'M'
   784   00FFFE  00                 	db	0
   785   00FFFF  00                 	db	0	; dummy byte at the end
   786   000000                     
   787                           ; #config settings
   788                           
   789                           	psect	cinit
   790   004F1C                     __pcinit:
   791                           	callstack 0
   792   004F1C                     start_initialization:
   793                           	callstack 0
   794   004F1C                     __initialization:
   795                           	callstack 0
   796                           
   797                           ; Initialize objects allocated to BANK1 (40 bytes)
   798                           ; load TBLPTR registers with __pidataBANK1
   799   004F1C  0E60               	movlw	low __pidataBANK1
   800   004F1E  6EF6               	movwf	tblptrl,c
   801   004F20  0E52               	movlw	high __pidataBANK1
   802   004F22  6EF7               	movwf	tblptrh,c
   803   004F24  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   804   004F26  6EF8               	movwf	tblptru,c
   805   004F28  EE01  F0CE         	lfsr	0,__pdataBANK1
   806   004F2C  EE10 F028          	lfsr	1,40
   807   004F30                     copy_data0:
   808   004F30  0009               	tblrd		*+
   809   004F32  CFF5 FFEE          	movff	tablat,postinc0
   810   004F36  50E5               	movf	postdec1,w,c
   811   004F38  50E1               	movf	fsr1l,w,c
   812   004F3A  E1FA               	bnz	copy_data0
   813                           
   814                           ; Clear objects allocated to BANK2 (42 bytes)
   815   004F3C  EE02  F000         	lfsr	0,__pbssBANK2
   816   004F40  0E2A               	movlw	42
   817   004F42                     clear_0:
   818   004F42  6AEE               	clrf	postinc0,c
   819   004F44  06E8               	decf	wreg,f,c
   820   004F46  E1FD               	bnz	clear_0
   821                           
   822                           ; Clear objects allocated to BANK1 (155 bytes)
   823   004F48  EE01  F000         	lfsr	0,__pbssBANK1
   824   004F4C  0E9B               	movlw	155
   825   004F4E                     clear_1:
   826   004F4E  6AEE               	clrf	postinc0,c
   827   004F50  06E8               	decf	wreg,f,c
   828   004F52  E1FD               	bnz	clear_1
   829                           
   830                           ; Clear objects allocated to BANK0 (1 bytes)
   831   004F54  0100               	movlb	0
   832   004F56  6BFE               	clrf	__pbssBANK0& (0+255),b
   833                           
   834                           ; Clear objects allocated to COMRAM (5 bytes)
   835   004F58  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   836   004F5A  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   837   004F5C  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   838   004F5E  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   839   004F60  6A55               	clrf	__pbssCOMRAM& (0+255),c
   840   004F62                     end_of_initialization:
   841                           	callstack 0
   842   004F62                     __end_of__initialization:
   843                           	callstack 0
   844   004F62  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   845   004F64  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   846   004F66  0E00               	movlw	low (__Lmediumconst shr (0+16))
   847   004F68  6EF8               	movwf	tblptru,c
   848   004F6A  0100               	movlb	0
   849   004F6C  EF47  F011         	goto	_main	;jump to C main() function
   850                           
   851                           	psect	bssCOMRAM
   852   000055                     __pbssCOMRAM:
   853                           	callstack 0
   854   000055                     _width:
   855                           	callstack 0
   856   000055                     	ds	2
   857   000057                     _prec:
   858                           	callstack 0
   859   000057                     	ds	2
   860   000059                     _flags:
   861                           	callstack 0
   862   000059                     	ds	1
   863                           
   864                           	psect	bssBANK0
   865   0000FE                     __pbssBANK0:
   866                           	callstack 0
   867   0000FE                     _keepStateGPIO:
   868                           	callstack 0
   869   0000FE                     	ds	1
   870                           
   871                           	psect	bssBANK1
   872   000100                     __pbssBANK1:
   873                           	callstack 0
   874   000100                     	ds	17
   875   000111                     fabsf@F465:
   876                           	callstack 0
   877   000111                     	ds	4
   878   000115                     ___rem_pio2f@F526:
   879                           	callstack 0
   880   000115                     	ds	4
   881   000119                     floorf@F521:
   882                           	callstack 0
   883   000119                     	ds	4
   884   00011D                     ___fpclassifyf@F465:
   885                           	callstack 0
   886   00011D                     	ds	4
   887   000121                     ISR@i:
   888                           	callstack 0
   889   000121                     	ds	2
   890   000123                     _GAMEtime:
   891                           	callstack 0
   892   000123                     	ds	1
   893   000124                     _GAMEIE:
   894                           	callstack 0
   895   000124                     	ds	1
   896   000125                     _UARTIE:
   897                           	callstack 0
   898   000125                     	ds	1
   899   000126                     _GPIOIE:
   900                           	callstack 0
   901   000126                     	ds	1
   902   000127                     _dbuf:
   903                           	callstack 0
   904   000127                     	ds	80
   905   000177                     _gmail:
   906                           	callstack 0
   907   000177                     	ds	32
   908   000197                     _seed:
   909                           	callstack 0
   910   000197                     	ds	4
   911                           
   912                           	psect	dataBANK1
   913   0001CE                     __pdataBANK1:
   914                           	callstack 0
   915   0001CE                     moveDisplay@F6965:
   916                           	callstack 0
   917   0001CE                     	ds	16
   918   0001DE                     runGPIO@F6993:
   919                           	callstack 0
   920   0001DE                     	ds	12
   921   0001EA                     runGPIO@F6975:
   922                           	callstack 0
   923   0001EA                     	ds	12
   924                           
   925                           	psect	bssBANK2
   926   000200                     __pbssBANK2:
   927                           	callstack 0
   928   000200                     	ds	25
   929   000219                     	ds	17
   930                           
   931                           	psect	cstackBANK1
   932   00019B                     __pcstackBANK1:
   933                           	callstack 0
   934   00019B                     moveDisplay@menuItem1:
   935                           	callstack 0
   936   00019B                     runADC@text:
   937                           	callstack 0
   938   00019B                     runGAME@text:
   939                           	callstack 0
   940                           
   941                           ; 17 bytes @ 0x0
   942   00019B                     	ds	17
   943   0001AC                     runADC@voltage1:
   944                           	callstack 0
   945   0001AC                     moveDisplay@menuItem2:
   946                           	callstack 0
   947   0001AC                     runGAME@approxText:
   948                           	callstack 0
   949                           
   950                           ; 25 bytes @ 0x11
   951   0001AC                     	ds	4
   952   0001B0                     runADC@voltage2:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x15
   956   0001B0                     	ds	4
   957   0001B4                     runADC@pot1:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x19
   961   0001B4                     	ds	2
   962   0001B6                     runADC@pot2:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x1B
   966   0001B6                     	ds	2
   967   0001B8                     runADC@keepState:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0x1D
   971   0001B8                     	ds	5
   972   0001BD                     moveDisplay@menuItems:
   973                           	callstack 0
   974                           
   975                           ; 16 bytes @ 0x22
   976   0001BD                     	ds	8
   977   0001C5                     runGAME@keepStateGAME:
   978                           	callstack 0
   979                           
   980                           ; 1 bytes @ 0x2A
   981   0001C5                     	ds	1
   982   0001C6                     runGAME@GAMEpart:
   983                           	callstack 0
   984                           
   985                           ; 1 bytes @ 0x2B
   986   0001C6                     	ds	1
   987   0001C7                     runGAME@GAMEround:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x2C
   991   0001C7                     	ds	1
   992   0001C8                     runGAME@GAMEdivider:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x2D
   996   0001C8                     	ds	1
   997   0001C9                     runGAME@pot1:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x2E
  1001   0001C9                     	ds	2
  1002   0001CB                     runGAME@randomNumber:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x30
  1006   0001CB                     	ds	2
  1007   0001CD                     moveDisplay@menuI:
  1008                           	callstack 0
  1009                           
  1010                           ; 1 bytes @ 0x32
  1011   0001CD                     	ds	1
  1012                           
  1013                           	psect	cstackBANK0
  1014   000060                     __pcstackBANK0:
  1015                           	callstack 0
  1016   000060                     ___fladd@signs:
  1017                           	callstack 0
  1018   000060                     floorf@m:
  1019                           	callstack 0
  1020                           
  1021                           ; 4 bytes @ 0x0
  1022   000060                     	ds	1
  1023   000061                     ___fladd@aexp:
  1024                           	callstack 0
  1025                           
  1026                           ; 1 bytes @ 0x1
  1027   000061                     	ds	1
  1028   000062                     ___fladd@bexp:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x2
  1032   000062                     	ds	1
  1033   000063                     ___fladd@grs:
  1034                           	callstack 0
  1035                           
  1036                           ; 1 bytes @ 0x3
  1037   000063                     	ds	1
  1038   000064                     ?___flsub:
  1039                           	callstack 0
  1040   000064                     ?___sindf:
  1041                           	callstack 0
  1042   000064                     ?___cosdf:
  1043                           	callstack 0
  1044   000064                     ?___fltol:
  1045                           	callstack 0
  1046   000064                     floorf@e:
  1047                           	callstack 0
  1048   000064                     ___fltol@f1:
  1049                           	callstack 0
  1050   000064                     ___flsub@b:
  1051                           	callstack 0
  1052   000064                     ___cosdf@x:
  1053                           	callstack 0
  1054   000064                     ___sindf@x:
  1055                           	callstack 0
  1056                           
  1057                           ; 4 bytes @ 0x4
  1058   000064                     	ds	2
  1059   000066                     floorf@u:
  1060                           	callstack 0
  1061                           
  1062                           ; 4 bytes @ 0x6
  1063   000066                     	ds	2
  1064   000068                     ??___fltol:
  1065   000068                     ___flsub@a:
  1066                           	callstack 0
  1067   000068                     ___cosdf@r:
  1068                           	callstack 0
  1069   000068                     ___sindf@r:
  1070                           	callstack 0
  1071                           
  1072                           ; 4 bytes @ 0x8
  1073   000068                     	ds	4
  1074   00006C                     ___sindf@w:
  1075                           	callstack 0
  1076   00006C                     ___cosdf$4535:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0xC
  1080   00006C                     	ds	4
  1081   000070                     ___cosdf$4536:
  1082                           	callstack 0
  1083   000070                     ___sindf$4539:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x10
  1087   000070                     	ds	4
  1088   000074                     ___cosdf$4537:
  1089                           	callstack 0
  1090   000074                     ___sindf$4540:
  1091                           	callstack 0
  1092                           
  1093                           ; 4 bytes @ 0x14
  1094   000074                     	ds	4
  1095   000078                     ___cosdf@w:
  1096                           	callstack 0
  1097   000078                     ___sindf$4541:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x18
  1101   000078                     	ds	4
  1102   00007C                     ___cosdf@z:
  1103                           	callstack 0
  1104   00007C                     ___sindf@s:
  1105                           	callstack 0
  1106                           
  1107                           ; 4 bytes @ 0x1C
  1108   00007C                     	ds	4
  1109   000080                     ?___flneg:
  1110                           	callstack 0
  1111   000080                     ___flneg@f1:
  1112                           	callstack 0
  1113   000080                     ___sindf@z:
  1114                           	callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x20
  1117   000080                     	ds	4
  1118   000084                     ?___rem_pio2f:
  1119                           	callstack 0
  1120   000084                     efgtoa@fp:
  1121                           	callstack 0
  1122   000084                     ___rem_pio2f@x:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x24
  1126   000084                     	ds	2
  1127   000086                     efgtoa@f:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x26
  1131   000086                     	ds	2
  1132   000088                     ___rem_pio2f@y:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x28
  1136   000088                     	ds	1
  1137   000089                     ??___rem_pio2f:
  1138                           
  1139                           ; 1 bytes @ 0x29
  1140   000089                     	ds	1
  1141   00008A                     efgtoa@c:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x2A
  1145   00008A                     	ds	1
  1146   00008B                     ??_efgtoa:
  1147   00008B                     ___rem_pio2f@ty:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x2B
  1151   00008B                     	ds	2
  1152   00008D                     efgtoa@ne:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x2D
  1156   00008D                     	ds	2
  1157   00008F                     efgtoa@p:
  1158                           	callstack 0
  1159   00008F                     ___rem_pio2f$4538:
  1160                           	callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x2F
  1163   00008F                     	ds	2
  1164   000091                     efgtoa@t:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x31
  1168   000091                     	ds	2
  1169   000093                     ___rem_pio2f@sign:
  1170                           	callstack 0
  1171   000093                     _efgtoa$4075:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x33
  1175   000093                     	ds	1
  1176   000094                     ___rem_pio2f@ux:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x34
  1180   000094                     	ds	1
  1181   000095                     efgtoa@pp:
  1182                           	callstack 0
  1183                           
  1184                           ; 1 bytes @ 0x35
  1185   000095                     	ds	1
  1186   000096                     efgtoa@mode:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x36
  1190   000096                     	ds	1
  1191   000097                     efgtoa@nmode:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x37
  1195   000097                     	ds	1
  1196   000098                     efgtoa@d:
  1197                           	callstack 0
  1198   000098                     ___rem_pio2f@fn:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0x38
  1202   000098                     	ds	2
  1203   00009A                     efgtoa@m:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x3A
  1207   00009A                     	ds	2
  1208   00009C                     efgtoa@e:
  1209                           	callstack 0
  1210   00009C                     ___rem_pio2f@t:
  1211                           	callstack 0
  1212                           
  1213                           ; 4 bytes @ 0x3C
  1214   00009C                     	ds	2
  1215   00009E                     efgtoa@w:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x3E
  1219   00009E                     	ds	2
  1220   0000A0                     efgtoa@ou:
  1221                           	callstack 0
  1222   0000A0                     ___rem_pio2f@n:
  1223                           	callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x40
  1226   0000A0                     	ds	4
  1227   0000A4                     ?_sinf:
  1228                           	callstack 0
  1229   0000A4                     efgtoa@i:
  1230                           	callstack 0
  1231   0000A4                     sinf@x:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x44
  1235   0000A4                     	ds	2
  1236   0000A6                     efgtoa@h:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x46
  1240   0000A6                     	ds	2
  1241   0000A8                     _sinf$4250:
  1242                           	callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x48
  1245   0000A8                     	ds	2
  1246   0000AA                     efgtoa@l:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x4A
  1250   0000AA                     	ds	2
  1251   0000AC                     _sinf$4251:
  1252                           	callstack 0
  1253                           
  1254                           ; 4 bytes @ 0x4C
  1255   0000AC                     	ds	2
  1256   0000AE                     efgtoa@sign:
  1257                           	callstack 0
  1258                           
  1259                           ; 1 bytes @ 0x4E
  1260   0000AE                     	ds	1
  1261   0000AF                     efgtoa@g:
  1262                           	callstack 0
  1263                           
  1264                           ; 4 bytes @ 0x4F
  1265   0000AF                     	ds	1
  1266   0000B0                     sinf@n:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x50
  1270   0000B0                     	ds	1
  1271   0000B1                     sinf@sign:
  1272                           	callstack 0
  1273                           
  1274                           ; 1 bytes @ 0x51
  1275   0000B1                     	ds	1
  1276   0000B2                     _sinf$4534:
  1277                           	callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x52
  1280   0000B2                     	ds	1
  1281   0000B3                     efgtoa@n:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x53
  1285   0000B3                     	ds	2
  1286   0000B5                     efgtoa@u:
  1287                           	callstack 0
  1288                           
  1289                           ; 4 bytes @ 0x55
  1290   0000B5                     	ds	1
  1291   0000B6                     sinf@y:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x56
  1295   0000B6                     	ds	3
  1296   0000B9                     vfpfcnvrt@fp:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x59
  1300   0000B9                     	ds	1
  1301   0000BA                     sinf@ux:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x5A
  1305   0000BA                     	ds	1
  1306   0000BB                     vfpfcnvrt@fmt:
  1307                           	callstack 0
  1308                           
  1309                           ; 1 bytes @ 0x5B
  1310   0000BB                     	ds	1
  1311   0000BC                     vfpfcnvrt@ap:
  1312                           	callstack 0
  1313                           
  1314                           ; 1 bytes @ 0x5C
  1315   0000BC                     	ds	1
  1316   0000BD                     ??_vfpfcnvrt:
  1317                           
  1318                           ; 1 bytes @ 0x5D
  1319   0000BD                     	ds	2
  1320   0000BF                     vfpfcnvrt@done:
  1321                           	callstack 0
  1322                           
  1323                           ; 1 bytes @ 0x5F
  1324   0000BF                     	ds	1
  1325   0000C0                     vfpfcnvrt@convarg:
  1326                           	callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x60
  1329   0000C0                     	ds	4
  1330   0000C4                     vfpfcnvrt@c:
  1331                           	callstack 0
  1332                           
  1333                           ; 1 bytes @ 0x64
  1334   0000C4                     	ds	1
  1335   0000C5                     vfpfcnvrt@cp:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x65
  1339   0000C5                     	ds	2
  1340   0000C7                     ?_vfprintf:
  1341                           	callstack 0
  1342   0000C7                     vfprintf@fp:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x67
  1346   0000C7                     	ds	2
  1347   0000C9                     vfprintf@fmt:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x69
  1351   0000C9                     	ds	2
  1352   0000CB                     vfprintf@ap:
  1353                           	callstack 0
  1354                           
  1355                           ; 1 bytes @ 0x6B
  1356   0000CB                     	ds	1
  1357   0000CC                     vfprintf@cfmt:
  1358                           	callstack 0
  1359                           
  1360                           ; 2 bytes @ 0x6C
  1361   0000CC                     	ds	2
  1362   0000CE                     ?_printf:
  1363                           	callstack 0
  1364   0000CE                     ?_sprintf:
  1365                           	callstack 0
  1366   0000CE                     sprintf@s:
  1367                           	callstack 0
  1368   0000CE                     printf@fmt:
  1369                           	callstack 0
  1370                           
  1371                           ; 2 bytes @ 0x6E
  1372   0000CE                     	ds	2
  1373   0000D0                     sprintf@fmt:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x70
  1377   0000D0                     	ds	2
  1378   0000D2                     ??_runUART:
  1379   0000D2                     ??_runDAC:
  1380                           
  1381                           ; 1 bytes @ 0x72
  1382   0000D2                     	ds	1
  1383   0000D3                     _runDAC$4531:
  1384                           	callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x73
  1387   0000D3                     	ds	1
  1388   0000D4                     runUART@reversed:
  1389                           	callstack 0
  1390                           
  1391                           ; 31 bytes @ 0x74
  1392   0000D4                     	ds	3
  1393   0000D7                     _runDAC$4532:
  1394                           	callstack 0
  1395                           
  1396                           ; 4 bytes @ 0x77
  1397   0000D7                     	ds	3
  1398   0000DA                     sprintf@ap:
  1399                           	callstack 0
  1400                           
  1401                           ; 1 bytes @ 0x7A
  1402   0000DA                     	ds	1
  1403   0000DB                     runDAC@keepState:
  1404                           	callstack 0
  1405   0000DB                     sprintf@f:
  1406                           	callstack 0
  1407                           
  1408                           ; 12 bytes @ 0x7B
  1409   0000DB                     	ds	1
  1410   0000DC                     runDAC@selectModeDAC:
  1411                           	callstack 0
  1412                           
  1413                           ; 1 bytes @ 0x7C
  1414   0000DC                     	ds	1
  1415   0000DD                     runDAC@DACindex:
  1416                           	callstack 0
  1417                           
  1418                           ; 1 bytes @ 0x7D
  1419   0000DD                     	ds	10
  1420   0000E7                     ??_runADC:
  1421   0000E7                     ??_runGAME:
  1422   0000E7                     moveDisplay@where:
  1423                           	callstack 0
  1424                           
  1425                           ; 1 bytes @ 0x87
  1426   0000E7                     	ds	1
  1427   0000E8                     ??_moveDisplay:
  1428                           
  1429                           ; 1 bytes @ 0x88
  1430   0000E8                     	ds	11
  1431   0000F3                     runUART@keepState:
  1432                           	callstack 0
  1433                           
  1434                           ; 1 bytes @ 0x93
  1435   0000F3                     	ds	1
  1436   0000F4                     runUART@len:
  1437                           	callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x94
  1440   0000F4                     	ds	2
  1441   0000F6                     runUART@i:
  1442                           	callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x96
  1445   0000F6                     	ds	2
  1446   0000F8                     runUART@p:
  1447                           	callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x98
  1450   0000F8                     	ds	2
  1451   0000FA                     ??_main:
  1452                           
  1453                           ; 1 bytes @ 0x9A
  1454   0000FA                     	ds	2
  1455   0000FC                     main@setUpAgain:
  1456                           	callstack 0
  1457                           
  1458                           ; 1 bytes @ 0x9C
  1459   0000FC                     	ds	1
  1460   0000FD                     main@menuI:
  1461                           	callstack 0
  1462                           
  1463                           ; 1 bytes @ 0x9D
  1464   0000FD                     	ds	1
  1465                           
  1466                           	psect	cstackCOMRAM
  1467   000001                     __pcstackCOMRAM:
  1468                           	callstack 0
  1469   000001                     ??_ISR:
  1470                           
  1471                           ; 1 bytes @ 0x0
  1472   000001                     	ds	4
  1473   000005                     ISR@temp:
  1474                           	callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x4
  1477   000005                     	ds	1
  1478   000006                     ?_strlen:
  1479                           	callstack 0
  1480   000006                     ?___fpclassifyf:
  1481                           	callstack 0
  1482   000006                     ?___wmul:
  1483                           	callstack 0
  1484   000006                     ?___awmod:
  1485                           	callstack 0
  1486   000006                     ?___lwdiv:
  1487                           	callstack 0
  1488   000006                     ?___lwmod:
  1489                           	callstack 0
  1490   000006                     ?_labs:
  1491                           	callstack 0
  1492   000006                     ?_fabsf:
  1493                           	callstack 0
  1494   000006                     ?___lmul:
  1495                           	callstack 0
  1496   000006                     ?___xxtofl:
  1497                           	callstack 0
  1498   000006                     LCD_Send@data:
  1499                           	callstack 0
  1500   000006                     SPI_write@MSB:
  1501                           	callstack 0
  1502   000006                     putch@data:
  1503                           	callstack 0
  1504   000006                     LED1_Control@state:
  1505                           	callstack 0
  1506   000006                     LED2_Control@state:
  1507                           	callstack 0
  1508   000006                     LED3_Control@state:
  1509                           	callstack 0
  1510   000006                     LED4_Control@state:
  1511                           	callstack 0
  1512   000006                     LED5_Control@state:
  1513                           	callstack 0
  1514   000006                     LED6_Control@state:
  1515                           	callstack 0
  1516   000006                     ___lbdiv@divisor:
  1517                           	callstack 0
  1518   000006                     ___wmul@multiplier:
  1519                           	callstack 0
  1520   000006                     ___awmod@dividend:
  1521                           	callstack 0
  1522   000006                     ___lwdiv@dividend:
  1523                           	callstack 0
  1524   000006                     ___lwmod@dividend:
  1525                           	callstack 0
  1526   000006                     memcpy@d1:
  1527                           	callstack 0
  1528   000006                     strcpy@dest:
  1529                           	callstack 0
  1530   000006                     strlen@s:
  1531                           	callstack 0
  1532   000006                     ___lmul@multiplier:
  1533                           	callstack 0
  1534   000006                     ___fleq@ff1:
  1535                           	callstack 0
  1536   000006                     ___xxtofl@val:
  1537                           	callstack 0
  1538   000006                     ___fpclassifyf@x:
  1539                           	callstack 0
  1540   000006                     labs@a:
  1541                           	callstack 0
  1542   000006                     fabsf@x:
  1543                           	callstack 0
  1544                           
  1545                           ; 4 bytes @ 0x5
  1546   000006                     	ds	1
  1547   000007                     ??_LCD_Init:
  1548   000007                     ??_runGPIO:
  1549   000007                     SPI_write@LSB:
  1550                           	callstack 0
  1551   000007                     ___lbdiv@dividend:
  1552                           	callstack 0
  1553   000007                     LCD_ShowString@textData:
  1554                           	callstack 0
  1555   000007                     fputc@c:
  1556                           	callstack 0
  1557                           
  1558                           ; 2 bytes @ 0x6
  1559   000007                     	ds	1
  1560   000008                     SPI_write@data:
  1561                           	callstack 0
  1562   000008                     ___lbdiv@counter:
  1563                           	callstack 0
  1564   000008                     ___wmul@multiplicand:
  1565                           	callstack 0
  1566   000008                     ___awmod@divisor:
  1567                           	callstack 0
  1568   000008                     ___lwdiv@divisor:
  1569                           	callstack 0
  1570   000008                     ___lwmod@divisor:
  1571                           	callstack 0
  1572   000008                     memcpy@s1:
  1573                           	callstack 0
  1574   000008                     strcpy@src:
  1575                           	callstack 0
  1576   000008                     strlen@a:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x7
  1580   000008                     	ds	1
  1581   000009                     ??_LCD_ShowString:
  1582   000009                     ___lbdiv@quotient:
  1583                           	callstack 0
  1584   000009                     fputc@fp:
  1585                           	callstack 0
  1586   000009                     runGPIO@states:
  1587                           	callstack 0
  1588                           
  1589                           ; 12 bytes @ 0x8
  1590   000009                     	ds	1
  1591   00000A                     ??___fpclassifyf:
  1592   00000A                     ??_labs:
  1593   00000A                     ??___xxtofl:
  1594   00000A                     ___awmod@counter:
  1595                           	callstack 0
  1596   00000A                     ___lwdiv@counter:
  1597                           	callstack 0
  1598   00000A                     ___lwmod@counter:
  1599                           	callstack 0
  1600   00000A                     ___wmul@product:
  1601                           	callstack 0
  1602   00000A                     memcpy@n:
  1603                           	callstack 0
  1604   00000A                     strcpy@d:
  1605                           	callstack 0
  1606   00000A                     ___lmul@multiplicand:
  1607                           	callstack 0
  1608   00000A                     ___fleq@ff2:
  1609                           	callstack 0
  1610   00000A                     fabsf@u:
  1611                           	callstack 0
  1612                           
  1613                           ; 4 bytes @ 0x9
  1614   00000A                     	ds	1
  1615   00000B                     ??_fputc:
  1616   00000B                     LCD_ShowString@lineNum:
  1617                           	callstack 0
  1618   00000B                     ___awmod@sign:
  1619                           	callstack 0
  1620   00000B                     ___lwdiv@quotient:
  1621                           	callstack 0
  1622                           
  1623                           ; 2 bytes @ 0xA
  1624   00000B                     	ds	1
  1625   00000C                     ?_abs:
  1626                           	callstack 0
  1627   00000C                     ?_read_prec_or_width:
  1628                           	callstack 0
  1629   00000C                     LCD_ShowString@i:
  1630                           	callstack 0
  1631   00000C                     read_prec_or_width@fmt:
  1632                           	callstack 0
  1633   00000C                     memcpy@tmp:
  1634                           	callstack 0
  1635   00000C                     abs@a:
  1636                           	callstack 0
  1637                           
  1638                           ; 2 bytes @ 0xB
  1639   00000C                     	ds	1
  1640   00000D                     read_prec_or_width@ap:
  1641                           	callstack 0
  1642   00000D                     memcpy@d:
  1643                           	callstack 0
  1644                           
  1645                           ; 2 bytes @ 0xC
  1646   00000D                     	ds	1
  1647   00000E                     ??_abs:
  1648   00000E                     ??___fleq:
  1649   00000E                     ___xxtofl@sign:
  1650                           	callstack 0
  1651   00000E                     read_prec_or_width@c:
  1652                           	callstack 0
  1653   00000E                     ___fpclassifyf@e:
  1654                           	callstack 0
  1655   00000E                     ___lmul@product:
  1656                           	callstack 0
  1657                           
  1658                           ; 4 bytes @ 0xD
  1659   00000E                     	ds	1
  1660   00000F                     ___xxtofl@exp:
  1661                           	callstack 0
  1662   00000F                     read_prec_or_width@n:
  1663                           	callstack 0
  1664   00000F                     memcpy@s:
  1665                           	callstack 0
  1666                           
  1667                           ; 2 bytes @ 0xE
  1668   00000F                     	ds	1
  1669   000010                     stoa@fp:
  1670                           	callstack 0
  1671   000010                     fputs@s:
  1672                           	callstack 0
  1673   000010                     ___xxtofl@arg:
  1674                           	callstack 0
  1675   000010                     ___fpclassifyf@u:
  1676                           	callstack 0
  1677                           
  1678                           ; 4 bytes @ 0xF
  1679   000010                     	ds	2
  1680   000012                     ?_rand:
  1681                           	callstack 0
  1682   000012                     stoa@s:
  1683                           	callstack 0
  1684   000012                     fputs@fp:
  1685                           	callstack 0
  1686                           
  1687                           ; 2 bytes @ 0x11
  1688   000012                     	ds	2
  1689   000014                     ??_rand:
  1690   000014                     ??_stoa:
  1691   000014                     ?___flmul:
  1692                           	callstack 0
  1693   000014                     fputs@c:
  1694                           	callstack 0
  1695   000014                     ___flmul@b:
  1696                           	callstack 0
  1697                           
  1698                           ; 4 bytes @ 0x13
  1699   000014                     	ds	1
  1700   000015                     fputs@i:
  1701                           	callstack 0
  1702   000015                     runGPIO@LEDControl:
  1703                           	callstack 0
  1704                           
  1705                           ; 12 bytes @ 0x14
  1706   000015                     	ds	1
  1707   000016                     stoa@p:
  1708                           	callstack 0
  1709                           
  1710                           ; 2 bytes @ 0x15
  1711   000016                     	ds	1
  1712   000017                     pad@fp:
  1713                           	callstack 0
  1714                           
  1715                           ; 2 bytes @ 0x16
  1716   000017                     	ds	1
  1717   000018                     ?___awdiv:
  1718                           	callstack 0
  1719   000018                     ___awdiv@dividend:
  1720                           	callstack 0
  1721   000018                     stoa@w:
  1722                           	callstack 0
  1723   000018                     ___flmul@a:
  1724                           	callstack 0
  1725                           
  1726                           ; 4 bytes @ 0x17
  1727   000018                     	ds	1
  1728   000019                     pad@buf:
  1729                           	callstack 0
  1730                           
  1731                           ; 2 bytes @ 0x18
  1732   000019                     	ds	1
  1733   00001A                     ___awdiv@divisor:
  1734                           	callstack 0
  1735   00001A                     stoa@cp:
  1736                           	callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x19
  1739   00001A                     	ds	1
  1740   00001B                     pad@p:
  1741                           	callstack 0
  1742                           
  1743                           ; 2 bytes @ 0x1A
  1744   00001B                     	ds	1
  1745   00001C                     ??___flmul:
  1746   00001C                     ___awdiv@counter:
  1747                           	callstack 0
  1748   00001C                     stoa@l:
  1749                           	callstack 0
  1750                           
  1751                           ; 2 bytes @ 0x1B
  1752   00001C                     	ds	1
  1753   00001D                     ??_pad:
  1754   00001D                     ___awdiv@sign:
  1755                           	callstack 0
  1756                           
  1757                           ; 1 bytes @ 0x1C
  1758   00001D                     	ds	1
  1759   00001E                     ___awdiv@quotient:
  1760                           	callstack 0
  1761   00001E                     pad@i:
  1762                           	callstack 0
  1763                           
  1764                           ; 2 bytes @ 0x1D
  1765   00001E                     	ds	2
  1766   000020                     ??_runPWM:
  1767   000020                     ___flmul@sign:
  1768                           	callstack 0
  1769   000020                     dtoa@fp:
  1770                           	callstack 0
  1771   000020                     utoa@fp:
  1772                           	callstack 0
  1773                           
  1774                           ; 2 bytes @ 0x1F
  1775   000020                     	ds	1
  1776   000021                     ___flmul@aexp:
  1777                           	callstack 0
  1778   000021                     runGPIO@numberOfStates:
  1779                           	callstack 0
  1780                           
  1781                           ; 2 bytes @ 0x20
  1782   000021                     	ds	1
  1783   000022                     runPWM@keepState:
  1784                           	callstack 0
  1785   000022                     dtoa@d:
  1786                           	callstack 0
  1787   000022                     utoa@d:
  1788                           	callstack 0
  1789   000022                     ___flmul@grs:
  1790                           	callstack 0
  1791                           
  1792                           ; 4 bytes @ 0x21
  1793   000022                     	ds	1
  1794   000023                     runGPIO@GPIOi:
  1795                           	callstack 0
  1796   000023                     runPWM@multiplier:
  1797                           	callstack 0
  1798                           
  1799                           ; 1 bytes @ 0x22
  1800   000023                     	ds	1
  1801   000024                     runGPIO@j:
  1802                           	callstack 0
  1803   000024                     _dtoa$4044:
  1804                           	callstack 0
  1805   000024                     utoa@w:
  1806                           	callstack 0
  1807                           
  1808                           ; 2 bytes @ 0x23
  1809   000024                     	ds	2
  1810   000026                     ___flmul@bexp:
  1811                           	callstack 0
  1812   000026                     dtoa@w:
  1813                           	callstack 0
  1814   000026                     utoa@p:
  1815                           	callstack 0
  1816                           
  1817                           ; 2 bytes @ 0x25
  1818   000026                     	ds	1
  1819   000027                     ___flmul@prod:
  1820                           	callstack 0
  1821                           
  1822                           ; 4 bytes @ 0x26
  1823   000027                     	ds	1
  1824   000028                     dtoa@p:
  1825                           	callstack 0
  1826   000028                     utoa@i:
  1827                           	callstack 0
  1828                           
  1829                           ; 2 bytes @ 0x27
  1830   000028                     	ds	2
  1831   00002A                     dtoa@s:
  1832                           	callstack 0
  1833                           
  1834                           ; 1 bytes @ 0x29
  1835   00002A                     	ds	1
  1836   00002B                     ___flmul@temp:
  1837                           	callstack 0
  1838   00002B                     dtoa@i:
  1839                           	callstack 0
  1840                           
  1841                           ; 2 bytes @ 0x2A
  1842   00002B                     	ds	2
  1843   00002D                     ?___fldiv:
  1844                           	callstack 0
  1845   00002D                     ___flge@ff1:
  1846                           	callstack 0
  1847   00002D                     ___fldiv@b:
  1848                           	callstack 0
  1849                           
  1850                           ; 4 bytes @ 0x2C
  1851   00002D                     	ds	4
  1852   000031                     ___flge@ff2:
  1853                           	callstack 0
  1854   000031                     ___fldiv@a:
  1855                           	callstack 0
  1856                           
  1857                           ; 4 bytes @ 0x30
  1858   000031                     	ds	4
  1859   000035                     ??___fldiv:
  1860   000035                     ??___flge:
  1861                           
  1862                           ; 1 bytes @ 0x34
  1863   000035                     	ds	4
  1864   000039                     ___fldiv@rem:
  1865                           	callstack 0
  1866                           
  1867                           ; 4 bytes @ 0x38
  1868   000039                     	ds	4
  1869   00003D                     ___fldiv@sign:
  1870                           	callstack 0
  1871                           
  1872                           ; 1 bytes @ 0x3C
  1873   00003D                     	ds	1
  1874   00003E                     ___fldiv@new_exp:
  1875                           	callstack 0
  1876                           
  1877                           ; 2 bytes @ 0x3D
  1878   00003E                     	ds	2
  1879   000040                     ___fldiv@grs:
  1880                           	callstack 0
  1881                           
  1882                           ; 4 bytes @ 0x3F
  1883   000040                     	ds	4
  1884   000044                     ___fldiv@bexp:
  1885                           	callstack 0
  1886                           
  1887                           ; 1 bytes @ 0x43
  1888   000044                     	ds	1
  1889   000045                     ___fldiv@aexp:
  1890                           	callstack 0
  1891                           
  1892                           ; 1 bytes @ 0x44
  1893   000045                     	ds	1
  1894   000046                     ?___fladd:
  1895                           	callstack 0
  1896   000046                     ?_floorf:
  1897                           	callstack 0
  1898   000046                     ___fladd@b:
  1899                           	callstack 0
  1900   000046                     floorf@x:
  1901                           	callstack 0
  1902                           
  1903                           ; 4 bytes @ 0x45
  1904   000046                     	ds	4
  1905   00004A                     ??_floorf:
  1906   00004A                     ___fladd@a:
  1907                           	callstack 0
  1908                           
  1909                           ; 4 bytes @ 0x49
  1910   00004A                     	ds	4
  1911   00004E                     ??___fladd:
  1912                           
  1913                           ; 1 bytes @ 0x4D
  1914   00004E                     	ds	4
  1915   000052                     ___fltol@sign1:
  1916                           	callstack 0
  1917                           
  1918                           ; 1 bytes @ 0x51
  1919   000052                     	ds	1
  1920   000053                     ___fltol@exp1:
  1921                           	callstack 0
  1922                           
  1923                           ; 1 bytes @ 0x52
  1924   000053                     	ds	1
  1925   000054                     printf@ap:
  1926                           	callstack 0
  1927                           
  1928                           ; 1 bytes @ 0x53
  1929   000054                     	ds	1
  1930                           
  1931 ;;
  1932 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1933 ;;
  1934 ;; *************** function _main *****************
  1935 ;; Defined at:
  1936 ;;		line 10 in file "main.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;		None
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  menuI           1  157[BANK0 ] unsigned char 
  1941 ;;  setUpAgain      1  156[BANK0 ] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;Total ram usage:        4 bytes
  1956 ;; Hardware stack levels required when called: 10
  1957 ;; This function calls:
  1958 ;;		_LCD_Init
  1959 ;;		_LCD_ShowString
  1960 ;;		_moveDisplay
  1961 ;;		_runADC
  1962 ;;		_runDAC
  1963 ;;		_runGAME
  1964 ;;		_runGPIO
  1965 ;;		_runMUSIC
  1966 ;;		_runPWM
  1967 ;;		_runUART
  1968 ;; This function is called by:
  1969 ;;		Startup code after reset
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text0
  1974   00228E                     __ptext0:
  1975                           	callstack 0
  1976   00228E                     _main:
  1977                           	callstack 21
  1978   00228E                     
  1979                           ;main.c: 11:     _delay((unsigned long)((100)*(32E6/4000.0)));
  1980   00228E  0E05               	movlw	5
  1981   002290  0100               	movlb	0	; () banked
  1982   002292  6FFB               	movwf	(??_main+1)& (0+255),b
  1983   002294  0E0F               	movlw	15
  1984   002296  6FFA               	movwf	??_main& (0+255),b
  1985   002298  0EF1               	movlw	241
  1986   00229A                     u10357:
  1987   00229A  2EE8               	decfsz	wreg,f,c
  1988   00229C  D7FE               	bra	u10357
  1989   00229E  2FFA               	decfsz	??_main& (0+255),f,b
  1990   0022A0  D7FC               	bra	u10357
  1991   0022A2  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1992   0022A4  D7FA               	bra	u10357
  1993   0022A6                     
  1994                           ;main.c: 13:     TRISCbits.RC0 = 1;
  1995   0022A6  8094               	bsf	148,0,c	;volatile
  1996   0022A8                     
  1997                           ;main.c: 14:     TRISAbits.RA4 = 1;
  1998   0022A8  8892               	bsf	146,4,c	;volatile
  1999   0022AA                     
  2000                           ;main.c: 15:     TRISAbits.RA3 = 1;
  2001   0022AA  8692               	bsf	146,3,c	;volatile
  2002   0022AC                     
  2003                           ;main.c: 16:     TRISAbits.RA2 = 1;
  2004   0022AC  8492               	bsf	146,2,c	;volatile
  2005   0022AE                     
  2006                           ;main.c: 17:     ANSELAbits.ANSA3 = 0;
  2007   0022AE  010F               	movlb	15	; () banked
  2008   0022B0  9738               	bcf	56,3,b	;volatile
  2009   0022B2                     
  2010                           ; BSR set to: 15
  2011                           ;main.c: 18:     ANSELAbits.ANSA2 = 0;
  2012   0022B2  9538               	bcf	56,2,b	;volatile
  2013   0022B4                     
  2014                           ; BSR set to: 15
  2015                           ;main.c: 21:     TRISDbits.RD2 = 0;
  2016   0022B4  9495               	bcf	149,2,c	;volatile
  2017   0022B6                     
  2018                           ; BSR set to: 15
  2019                           ;main.c: 22:     TRISDbits.RD3 = 0;
  2020   0022B6  9695               	bcf	149,3,c	;volatile
  2021   0022B8                     
  2022                           ; BSR set to: 15
  2023                           ;main.c: 23:     TRISCbits.RC4 = 0;
  2024   0022B8  9894               	bcf	148,4,c	;volatile
  2025   0022BA                     
  2026                           ; BSR set to: 15
  2027                           ;main.c: 24:     TRISDbits.RD4 = 0;
  2028   0022BA  9895               	bcf	149,4,c	;volatile
  2029   0022BC                     
  2030                           ; BSR set to: 15
  2031                           ;main.c: 25:     TRISDbits.RD5 = 0;
  2032   0022BC  9A95               	bcf	149,5,c	;volatile
  2033   0022BE                     
  2034                           ; BSR set to: 15
  2035                           ;main.c: 26:     TRISDbits.RD6 = 0;
  2036   0022BE  9C95               	bcf	149,6,c	;volatile
  2037   0022C0                     
  2038                           ; BSR set to: 15
  2039                           ;main.c: 27:     LATDbits.LD2 = 1;
  2040   0022C0  848C               	bsf	140,2,c	;volatile
  2041   0022C2                     
  2042                           ; BSR set to: 15
  2043                           ;main.c: 28:     LATDbits.LD3 = 1;
  2044   0022C2  868C               	bsf	140,3,c	;volatile
  2045   0022C4                     
  2046                           ; BSR set to: 15
  2047                           ;main.c: 29:     LATCbits.LC4 = 1;
  2048   0022C4  888B               	bsf	139,4,c	;volatile
  2049   0022C6                     
  2050                           ; BSR set to: 15
  2051                           ;main.c: 30:     LATDbits.LD4 = 1;
  2052   0022C6  888C               	bsf	140,4,c	;volatile
  2053   0022C8                     
  2054                           ; BSR set to: 15
  2055                           ;main.c: 31:     LATDbits.LD5 = 1;
  2056   0022C8  8A8C               	bsf	140,5,c	;volatile
  2057   0022CA                     
  2058                           ; BSR set to: 15
  2059                           ;main.c: 32:     LATDbits.LD6 = 1;
  2060   0022CA  8C8C               	bsf	140,6,c	;volatile
  2061   0022CC                     
  2062                           ; BSR set to: 15
  2063                           ;main.c: 35:     LCD_Init();
  2064   0022CC  EC7D  F023         	call	_LCD_Init	;wreg free
  2065   0022D0                     
  2066                           ;main.c: 36:     uint8_t menuI = 0;
  2067   0022D0  0E00               	movlw	0
  2068   0022D2  0100               	movlb	0	; () banked
  2069   0022D4  6FFD               	movwf	main@menuI& (0+255),b
  2070   0022D6                     
  2071                           ; BSR set to: 0
  2072                           ;main.c: 37:     uint8_t setUpAgain = 0;
  2073   0022D6  0E00               	movlw	0
  2074   0022D8  6FFC               	movwf	main@setUpAgain& (0+255),b
  2075   0022DA                     
  2076                           ; BSR set to: 0
  2077                           ;main.c: 39:     LCD_ShowString((char)1, "Vytvoril:       ");
  2078   0022DA  0EC0               	movlw	low STR_1
  2079   0022DC  6E07               	movwf	LCD_ShowString@textData^0,c
  2080   0022DE  0EFE               	movlw	high STR_1
  2081   0022E0  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2082   0022E2  0E01               	movlw	1
  2083   0022E4  ECB1  F024         	call	_LCD_ShowString
  2084   0022E8                     
  2085                           ;main.c: 40:     LCD_ShowString((char)2, "David Strasak   ");
  2086   0022E8  0E26               	movlw	low STR_2
  2087   0022EA  6E07               	movwf	LCD_ShowString@textData^0,c
  2088   0022EC  0EFF               	movlw	high STR_2
  2089   0022EE  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2090   0022F0  0E02               	movlw	2
  2091   0022F2  ECB1  F024         	call	_LCD_ShowString
  2092   0022F6                     
  2093                           ;main.c: 41:     _delay((unsigned long)((2000)*(32E6/4000.0)));
  2094   0022F6  0E52               	movlw	82
  2095   0022F8  0100               	movlb	0	; () banked
  2096   0022FA  6FFB               	movwf	(??_main+1)& (0+255),b
  2097   0022FC  0E2B               	movlw	43
  2098   0022FE  6FFA               	movwf	??_main& (0+255),b
  2099   002300  0E00               	movlw	0
  2100   002302                     u10367:
  2101   002302  2EE8               	decfsz	wreg,f,c
  2102   002304  D7FE               	bra	u10367
  2103   002306  2FFA               	decfsz	??_main& (0+255),f,b
  2104   002308  D7FC               	bra	u10367
  2105   00230A  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2106   00230C  D7FA               	bra	u10367
  2107   00230E  0000               	nop	
  2108   002310                     
  2109                           ;main.c: 44:     menuI = moveDisplay(menuI,0);
  2110   002310  0E00               	movlw	0
  2111   002312  0100               	movlb	0	; () banked
  2112   002314  6FE7               	movwf	moveDisplay@where& (0+255),b
  2113   002316  51FD               	movf	main@menuI& (0+255),w,b
  2114   002318  ECF7  F020         	call	_moveDisplay
  2115   00231C  0100               	movlb	0	; () banked
  2116   00231E  6FFD               	movwf	main@menuI& (0+255),b
  2117   002320                     l8442:
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;main.c: 47:         if(PORTCbits.RC0){
  2121   002320  A082               	btfss	130,0,c	;volatile
  2122   002322  EF95  F011         	goto	u10251
  2123   002326  EF97  F011         	goto	u10250
  2124   00232A                     u10251:
  2125   00232A  EFB9  F011         	goto	l56
  2126   00232E                     u10250:
  2127   00232E                     
  2128                           ; BSR set to: 0
  2129                           ;main.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2130   00232E  0E03               	movlw	3
  2131   002330  0100               	movlb	0	; () banked
  2132   002332  6FFB               	movwf	(??_main+1)& (0+255),b
  2133   002334  0E08               	movlw	8
  2134   002336  6FFA               	movwf	??_main& (0+255),b
  2135   002338  0E77               	movlw	119
  2136   00233A                     u10377:
  2137   00233A  2EE8               	decfsz	wreg,f,c
  2138   00233C  D7FE               	bra	u10377
  2139   00233E  2FFA               	decfsz	??_main& (0+255),f,b
  2140   002340  D7FC               	bra	u10377
  2141   002342  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2142   002344  D7FA               	bra	u10377
  2143   002346                     
  2144                           ;main.c: 49:             if(PORTCbits.RC0){
  2145   002346  A082               	btfss	130,0,c	;volatile
  2146   002348  EFA8  F011         	goto	u10261
  2147   00234C  EFAA  F011         	goto	u10260
  2148   002350                     u10261:
  2149   002350  EFB9  F011         	goto	l56
  2150   002354                     u10260:
  2151   002354                     
  2152                           ;main.c: 50:                 menuI = moveDisplay(menuI,2);
  2153   002354  0E02               	movlw	2
  2154   002356  0100               	movlb	0	; () banked
  2155   002358  6FE7               	movwf	moveDisplay@where& (0+255),b
  2156   00235A  51FD               	movf	main@menuI& (0+255),w,b
  2157   00235C  ECF7  F020         	call	_moveDisplay
  2158   002360  0100               	movlb	0	; () banked
  2159   002362  6FFD               	movwf	main@menuI& (0+255),b
  2160   002364                     l58:
  2161   002364  B082               	btfsc	130,0,c	;volatile
  2162   002366  EFB7  F011         	goto	u10271
  2163   00236A  EFB9  F011         	goto	u10270
  2164   00236E                     u10271:
  2165   00236E  EFB2  F011         	goto	l58
  2166   002372                     u10270:
  2167   002372                     l56:
  2168                           
  2169                           ;main.c: 54:         if(PORTAbits.RA4){
  2170   002372  A880               	btfss	128,4,c	;volatile
  2171   002374  EFBE  F011         	goto	u10281
  2172   002378  EFC0  F011         	goto	u10280
  2173   00237C                     u10281:
  2174   00237C  EFE2  F011         	goto	l61
  2175   002380                     u10280:
  2176   002380                     
  2177                           ;main.c: 55:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2178   002380  0E03               	movlw	3
  2179   002382  0100               	movlb	0	; () banked
  2180   002384  6FFB               	movwf	(??_main+1)& (0+255),b
  2181   002386  0E08               	movlw	8
  2182   002388  6FFA               	movwf	??_main& (0+255),b
  2183   00238A  0E77               	movlw	119
  2184   00238C                     u10387:
  2185   00238C  2EE8               	decfsz	wreg,f,c
  2186   00238E  D7FE               	bra	u10387
  2187   002390  2FFA               	decfsz	??_main& (0+255),f,b
  2188   002392  D7FC               	bra	u10387
  2189   002394  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2190   002396  D7FA               	bra	u10387
  2191   002398                     
  2192                           ;main.c: 56:             if(PORTAbits.RA4){
  2193   002398  A880               	btfss	128,4,c	;volatile
  2194   00239A  EFD1  F011         	goto	u10291
  2195   00239E  EFD3  F011         	goto	u10290
  2196   0023A2                     u10291:
  2197   0023A2  EFE2  F011         	goto	l61
  2198   0023A6                     u10290:
  2199   0023A6                     
  2200                           ;main.c: 57:                 menuI = moveDisplay(menuI,1);
  2201   0023A6  0E01               	movlw	1
  2202   0023A8  0100               	movlb	0	; () banked
  2203   0023AA  6FE7               	movwf	moveDisplay@where& (0+255),b
  2204   0023AC  51FD               	movf	main@menuI& (0+255),w,b
  2205   0023AE  ECF7  F020         	call	_moveDisplay
  2206   0023B2  0100               	movlb	0	; () banked
  2207   0023B4  6FFD               	movwf	main@menuI& (0+255),b
  2208   0023B6                     l63:
  2209   0023B6  B880               	btfsc	128,4,c	;volatile
  2210   0023B8  EFE0  F011         	goto	u10301
  2211   0023BC  EFE2  F011         	goto	u10300
  2212   0023C0                     u10301:
  2213   0023C0  EFDB  F011         	goto	l63
  2214   0023C4                     u10300:
  2215   0023C4                     l61:
  2216                           
  2217                           ;main.c: 61:         if(PORTAbits.RA3){
  2218   0023C4  A680               	btfss	128,3,c	;volatile
  2219   0023C6  EFE7  F011         	goto	u10311
  2220   0023CA  EFE9  F011         	goto	u10310
  2221   0023CE                     u10311:
  2222   0023CE  EF1C  F013         	goto	l66
  2223   0023D2                     u10310:
  2224   0023D2                     
  2225                           ;main.c: 62:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2226   0023D2  0E03               	movlw	3
  2227   0023D4  0100               	movlb	0	; () banked
  2228   0023D6  6FFB               	movwf	(??_main+1)& (0+255),b
  2229   0023D8  0E08               	movlw	8
  2230   0023DA  6FFA               	movwf	??_main& (0+255),b
  2231   0023DC  0E77               	movlw	119
  2232   0023DE                     u10397:
  2233   0023DE  2EE8               	decfsz	wreg,f,c
  2234   0023E0  D7FE               	bra	u10397
  2235   0023E2  2FFA               	decfsz	??_main& (0+255),f,b
  2236   0023E4  D7FC               	bra	u10397
  2237   0023E6  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2238   0023E8  D7FA               	bra	u10397
  2239   0023EA                     
  2240                           ;main.c: 63:             if(PORTAbits.RA3){
  2241   0023EA  A680               	btfss	128,3,c	;volatile
  2242   0023EC  EFFA  F011         	goto	u10321
  2243   0023F0  EFFC  F011         	goto	u10320
  2244   0023F4                     u10321:
  2245   0023F4  EF1C  F013         	goto	l66
  2246   0023F8                     u10320:
  2247   0023F8                     l68:
  2248   0023F8  B680               	btfsc	128,3,c	;volatile
  2249   0023FA  EF01  F012         	goto	u10331
  2250   0023FE  EF03  F012         	goto	u10330
  2251   002402                     u10331:
  2252   002402  EFFC  F011         	goto	l68
  2253   002406                     u10330:
  2254   002406  EFFC  F012         	goto	l8526
  2255   00240A                     l8462:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;main.c: 67:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  2259   00240A  0E15               	movlw	low STR_3
  2260   00240C  6E07               	movwf	LCD_ShowString@textData^0,c
  2261   00240E  0EFF               	movlw	high STR_3
  2262   002410  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2263   002412  0E01               	movlw	1
  2264   002414  ECB1  F024         	call	_LCD_ShowString
  2265                           
  2266                           ;main.c: 68:                         LCD_ShowString((char)2, "                ");
  2267   002418  0E35               	movlw	low (STR_36+2)
  2268   00241A  6E07               	movwf	LCD_ShowString@textData^0,c
  2269   00241C  0EFE               	movlw	high (STR_36+2)
  2270   00241E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2271   002420  0E02               	movlw	2
  2272   002422  ECB1  F024         	call	_LCD_ShowString
  2273   002426                     
  2274                           ;main.c: 69:                         runGPIO();
  2275   002426  EC9E  F01F         	call	_runGPIO	;wreg free
  2276   00242A                     l8466:
  2277                           
  2278                           ;main.c: 70:                         setUpAgain = 1;
  2279   00242A  0E01               	movlw	1
  2280   00242C  0100               	movlb	0	; () banked
  2281   00242E  6FFC               	movwf	main@setUpAgain& (0+255),b
  2282                           
  2283                           ;main.c: 71:                         break;
  2284   002430  EF1C  F013         	goto	l66
  2285   002434                     l8468:
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;main.c: 73:                         LCD_ShowString((char)1, "BR: 19200       ");
  2289   002434  0EAF               	movlw	low STR_5
  2290   002436  6E07               	movwf	LCD_ShowString@textData^0,c
  2291   002438  0EFE               	movlw	high STR_5
  2292   00243A  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2293   00243C  0E01               	movlw	1
  2294   00243E  ECB1  F024         	call	_LCD_ShowString
  2295                           
  2296                           ;main.c: 74:                         LCD_ShowString((char)2, "Konec - new line");
  2297   002442  0E8C               	movlw	low STR_6
  2298   002444  6E07               	movwf	LCD_ShowString@textData^0,c
  2299   002446  0EFF               	movlw	high STR_6
  2300   002448  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2301   00244A  0E02               	movlw	2
  2302   00244C  ECB1  F024         	call	_LCD_ShowString
  2303   002450                     
  2304                           ;main.c: 75:                         runUART();
  2305   002450  ECE8  F01E         	call	_runUART	;wreg free
  2306   002454  EF15  F012         	goto	l8466
  2307   002458                     l8474:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;main.c: 79:                         LCD_ShowString((char)1, "Zmacknete BTN2  ");
  2311   002458  0E48               	movlw	low STR_7
  2312   00245A  6E07               	movwf	LCD_ShowString@textData^0,c
  2313   00245C  0EFF               	movlw	high STR_7
  2314   00245E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2315   002460  0E01               	movlw	1
  2316   002462  ECB1  F024         	call	_LCD_ShowString
  2317                           
  2318                           ;main.c: 80:                         LCD_ShowString((char)2, "                ");
  2319   002466  0E35               	movlw	low (STR_36+2)
  2320   002468  6E07               	movwf	LCD_ShowString@textData^0,c
  2321   00246A  0EFE               	movlw	high (STR_36+2)
  2322   00246C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2323   00246E  0E02               	movlw	2
  2324   002470  ECB1  F024         	call	_LCD_ShowString
  2325   002474                     
  2326                           ;main.c: 81:                         runPWM();
  2327   002474  EC54  F020         	call	_runPWM	;wreg free
  2328   002478  EF15  F012         	goto	l8466
  2329   00247C                     l8480:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;main.c: 85:                         LCD_ShowString((char)1, "Volty na POTech:");
  2333   00247C  0E7B               	movlw	low STR_9
  2334   00247E  6E07               	movwf	LCD_ShowString@textData^0,c
  2335   002480  0EFF               	movlw	high STR_9
  2336   002482  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2337   002484  0E01               	movlw	1
  2338   002486  ECB1  F024         	call	_LCD_ShowString
  2339   00248A                     
  2340                           ;main.c: 86:                         runADC();
  2341   00248A  EC79  F01A         	call	_runADC	;wreg free
  2342   00248E  EF15  F012         	goto	l8466
  2343   002492                     l8486:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;main.c: 90:                         LCD_ShowString((char)1, "RB0-A2, BR:19200");
  2347   002492  0E6A               	movlw	low STR_10
  2348   002494  6E07               	movwf	LCD_ShowString@textData^0,c
  2349   002496  0EFF               	movlw	high STR_10
  2350   002498  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2351   00249A  0E01               	movlw	1
  2352   00249C  ECB1  F024         	call	_LCD_ShowString
  2353                           
  2354                           ;main.c: 91:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  2355   0024A0  0E9D               	movlw	low STR_11
  2356   0024A2  6E07               	movwf	LCD_ShowString@textData^0,c
  2357   0024A4  0EFF               	movlw	high STR_11
  2358   0024A6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2359   0024A8  0E02               	movlw	2
  2360   0024AA  ECB1  F024         	call	_LCD_ShowString
  2361   0024AE                     
  2362                           ;main.c: 92:                         runDAC();
  2363   0024AE  ECE1  F016         	call	_runDAC	;wreg free
  2364   0024B2  EF15  F012         	goto	l8466
  2365   0024B6                     l8492:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;main.c: 96:                         LCD_ShowString((char)1, "Ladeni potaku   ");
  2369   0024B6  0E37               	movlw	low STR_12
  2370   0024B8  6E07               	movwf	LCD_ShowString@textData^0,c
  2371   0024BA  0EFF               	movlw	high STR_12
  2372   0024BC  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2373   0024BE  0E01               	movlw	1
  2374   0024C0  ECB1  F024         	call	_LCD_ShowString
  2375                           
  2376                           ;main.c: 97:                         LCD_ShowString((char)2, "                ");
  2377   0024C4  0E35               	movlw	low (STR_36+2)
  2378   0024C6  6E07               	movwf	LCD_ShowString@textData^0,c
  2379   0024C8  0EFE               	movlw	high (STR_36+2)
  2380   0024CA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2381   0024CC  0E02               	movlw	2
  2382   0024CE  ECB1  F024         	call	_LCD_ShowString
  2383   0024D2                     
  2384                           ;main.c: 98:                         _delay((unsigned long)((1000)*(32E6/4000.0)));
  2385   0024D2  0E29               	movlw	41
  2386   0024D4  0100               	movlb	0	; () banked
  2387   0024D6  6FFB               	movwf	(??_main+1)& (0+255),b
  2388   0024D8  0E96               	movlw	150
  2389   0024DA  6FFA               	movwf	??_main& (0+255),b
  2390   0024DC  0E7F               	movlw	127
  2391   0024DE                     u10407:
  2392   0024DE  2EE8               	decfsz	wreg,f,c
  2393   0024E0  D7FE               	bra	u10407
  2394   0024E2  2FFA               	decfsz	??_main& (0+255),f,b
  2395   0024E4  D7FC               	bra	u10407
  2396   0024E6  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2397   0024E8  D7FA               	bra	u10407
  2398   0024EA                     
  2399                           ;main.c: 99:                         LCD_ShowString((char)1, "Hybej pomoci    ");
  2400   0024EA  0E04               	movlw	low STR_14
  2401   0024EC  6E07               	movwf	LCD_ShowString@textData^0,c
  2402   0024EE  0EFF               	movlw	high STR_14
  2403   0024F0  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2404   0024F2  0E01               	movlw	1
  2405   0024F4  ECB1  F024         	call	_LCD_ShowString
  2406   0024F8                     
  2407                           ;main.c: 100:                         LCD_ShowString((char)2, "POT1            ");
  2408   0024F8  0E8D               	movlw	low STR_15
  2409   0024FA  6E07               	movwf	LCD_ShowString@textData^0,c
  2410   0024FC  0EFE               	movlw	high STR_15
  2411   0024FE  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2412   002500  0E02               	movlw	2
  2413   002502  ECB1  F024         	call	_LCD_ShowString
  2414   002506                     
  2415                           ;main.c: 101:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2416   002506  0E52               	movlw	82
  2417   002508  0100               	movlb	0	; () banked
  2418   00250A  6FFB               	movwf	(??_main+1)& (0+255),b
  2419   00250C  0E2B               	movlw	43
  2420   00250E  6FFA               	movwf	??_main& (0+255),b
  2421   002510  0E00               	movlw	0
  2422   002512                     u10417:
  2423   002512  2EE8               	decfsz	wreg,f,c
  2424   002514  D7FE               	bra	u10417
  2425   002516  2FFA               	decfsz	??_main& (0+255),f,b
  2426   002518  D7FC               	bra	u10417
  2427   00251A  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2428   00251C  D7FA               	bra	u10417
  2429   00251E  0000               	nop	
  2430                           
  2431                           ;main.c: 102:                         LCD_ShowString((char)1, "Zrychli to      ");
  2432   002520  0EE2               	movlw	low STR_16
  2433   002522  6E07               	movwf	LCD_ShowString@textData^0,c
  2434   002524  0EFE               	movlw	high STR_16
  2435   002526  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2436   002528  0E01               	movlw	1
  2437   00252A  ECB1  F024         	call	_LCD_ShowString
  2438                           
  2439                           ;main.c: 103:                         LCD_ShowString((char)2, "pomoci BTN4     ");
  2440   00252E  0EF3               	movlw	low STR_17
  2441   002530  6E07               	movwf	LCD_ShowString@textData^0,c
  2442   002532  0EFE               	movlw	high STR_17
  2443   002534  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2444   002536  0E02               	movlw	2
  2445   002538  ECB1  F024         	call	_LCD_ShowString
  2446   00253C                     
  2447                           ;main.c: 104:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2448   00253C  0E52               	movlw	82
  2449   00253E  0100               	movlb	0	; () banked
  2450   002540  6FFB               	movwf	(??_main+1)& (0+255),b
  2451   002542  0E2B               	movlw	43
  2452   002544  6FFA               	movwf	??_main& (0+255),b
  2453   002546  0E00               	movlw	0
  2454   002548                     u10427:
  2455   002548  2EE8               	decfsz	wreg,f,c
  2456   00254A  D7FE               	bra	u10427
  2457   00254C  2FFA               	decfsz	??_main& (0+255),f,b
  2458   00254E  D7FC               	bra	u10427
  2459   002550  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2460   002552  D7FA               	bra	u10427
  2461   002554  0000               	nop	
  2462   002556                     
  2463                           ;main.c: 105:                         LCD_ShowString((char)1, "Pripravit       ");
  2464   002556  0ED1               	movlw	low STR_18
  2465   002558  6E07               	movwf	LCD_ShowString@textData^0,c
  2466   00255A  0EFE               	movlw	high STR_18
  2467   00255C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2468   00255E  0E01               	movlw	1
  2469   002560  ECB1  F024         	call	_LCD_ShowString
  2470   002564                     
  2471                           ;main.c: 106:                         LCD_ShowString((char)2, "                ");
  2472   002564  0E35               	movlw	low (STR_36+2)
  2473   002566  6E07               	movwf	LCD_ShowString@textData^0,c
  2474   002568  0EFE               	movlw	high (STR_36+2)
  2475   00256A  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2476   00256C  0E02               	movlw	2
  2477   00256E  ECB1  F024         	call	_LCD_ShowString
  2478   002572                     
  2479                           ;main.c: 107:                         _delay((unsigned long)((1000)*(32E6/4000.0)));
  2480   002572  0E29               	movlw	41
  2481   002574  0100               	movlb	0	; () banked
  2482   002576  6FFB               	movwf	(??_main+1)& (0+255),b
  2483   002578  0E96               	movlw	150
  2484   00257A  6FFA               	movwf	??_main& (0+255),b
  2485   00257C  0E7F               	movlw	127
  2486   00257E                     u10437:
  2487   00257E  2EE8               	decfsz	wreg,f,c
  2488   002580  D7FE               	bra	u10437
  2489   002582  2FFA               	decfsz	??_main& (0+255),f,b
  2490   002584  D7FC               	bra	u10437
  2491   002586  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2492   002588  D7FA               	bra	u10437
  2493                           
  2494                           ;main.c: 108:                         LCD_ShowString((char)2, "           Pozor");
  2495   00258A  0EAE               	movlw	low STR_20
  2496   00258C  6E07               	movwf	LCD_ShowString@textData^0,c
  2497   00258E  0EFF               	movlw	high STR_20
  2498   002590  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2499   002592  0E02               	movlw	2
  2500   002594  ECB1  F024         	call	_LCD_ShowString
  2501   002598                     
  2502                           ;main.c: 109:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2503   002598  0E52               	movlw	82
  2504   00259A  0100               	movlb	0	; () banked
  2505   00259C  6FFB               	movwf	(??_main+1)& (0+255),b
  2506   00259E  0E2B               	movlw	43
  2507   0025A0  6FFA               	movwf	??_main& (0+255),b
  2508   0025A2  0E00               	movlw	0
  2509   0025A4                     u10447:
  2510   0025A4  2EE8               	decfsz	wreg,f,c
  2511   0025A6  D7FE               	bra	u10447
  2512   0025A8  2FFA               	decfsz	??_main& (0+255),f,b
  2513   0025AA  D7FC               	bra	u10447
  2514   0025AC  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2515   0025AE  D7FA               	bra	u10447
  2516   0025B0  0000               	nop	
  2517   0025B2                     
  2518                           ;main.c: 110:                         runGAME();
  2519   0025B2  EC4F  F00F         	call	_runGAME	;wreg free
  2520   0025B6  EF15  F012         	goto	l8466
  2521   0025BA                     l8516:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;main.c: 114:                         LCD_ShowString((char)1, "Nebylo          ");
  2525   0025BA  0E9E               	movlw	low STR_21
  2526   0025BC  6E07               	movwf	LCD_ShowString@textData^0,c
  2527   0025BE  0EFE               	movlw	high STR_21
  2528   0025C0  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2529   0025C2  0E01               	movlw	1
  2530   0025C4  ECB1  F024         	call	_LCD_ShowString
  2531                           
  2532                           ;main.c: 115:                         LCD_ShowString((char)2, "Implementovano  ");
  2533   0025C8  0E59               	movlw	low STR_22
  2534   0025CA  6E07               	movwf	LCD_ShowString@textData^0,c
  2535   0025CC  0EFF               	movlw	high STR_22
  2536   0025CE  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2537   0025D0  0E02               	movlw	2
  2538   0025D2  ECB1  F024         	call	_LCD_ShowString
  2539   0025D6                     
  2540                           ;main.c: 116:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2541   0025D6  0E52               	movlw	82
  2542   0025D8  0100               	movlb	0	; () banked
  2543   0025DA  6FFB               	movwf	(??_main+1)& (0+255),b
  2544   0025DC  0E2B               	movlw	43
  2545   0025DE  6FFA               	movwf	??_main& (0+255),b
  2546   0025E0  0E00               	movlw	0
  2547   0025E2                     u10457:
  2548   0025E2  2EE8               	decfsz	wreg,f,c
  2549   0025E4  D7FE               	bra	u10457
  2550   0025E6  2FFA               	decfsz	??_main& (0+255),f,b
  2551   0025E8  D7FC               	bra	u10457
  2552   0025EA  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2553   0025EC  D7FA               	bra	u10457
  2554   0025EE  0000               	nop	
  2555   0025F0                     
  2556                           ;main.c: 117:                         runMUSIC();
  2557   0025F0  ECAF  F029         	call	_runMUSIC	;wreg free
  2558   0025F4  EF15  F012         	goto	l8466
  2559   0025F8                     l8526:
  2560   0025F8  0100               	movlb	0	; () banked
  2561   0025FA  51FD               	movf	main@menuI& (0+255),w,b
  2562                           
  2563                           ; Switch size 1, requested type "simple"
  2564                           ; Number of cases is 7, Range of values is 0 to 6
  2565                           ; switch strategies available:
  2566                           ; Name         Instructions Cycles
  2567                           ; simple_byte           22    12 (average)
  2568                           ;	Chosen strategy is simple_byte
  2569   0025FC  0A00               	xorlw	0	; case 0
  2570   0025FE  B4D8               	btfsc	status,2,c
  2571   002600  EF05  F012         	goto	l8462
  2572   002604  0A01               	xorlw	1	; case 1
  2573   002606  B4D8               	btfsc	status,2,c
  2574   002608  EF1A  F012         	goto	l8468
  2575   00260C  0A03               	xorlw	3	; case 2
  2576   00260E  B4D8               	btfsc	status,2,c
  2577   002610  EF2C  F012         	goto	l8474
  2578   002614  0A01               	xorlw	1	; case 3
  2579   002616  B4D8               	btfsc	status,2,c
  2580   002618  EF3E  F012         	goto	l8480
  2581   00261C  0A07               	xorlw	7	; case 4
  2582   00261E  B4D8               	btfsc	status,2,c
  2583   002620  EF49  F012         	goto	l8486
  2584   002624  0A01               	xorlw	1	; case 5
  2585   002626  B4D8               	btfsc	status,2,c
  2586   002628  EF5B  F012         	goto	l8492
  2587   00262C  0A03               	xorlw	3	; case 6
  2588   00262E  B4D8               	btfsc	status,2,c
  2589   002630  EFDD  F012         	goto	l8516
  2590   002634  EF1C  F013         	goto	l66
  2591   002638                     l66:
  2592                           
  2593                           ;main.c: 124:         if(PORTAbits.RA2){
  2594   002638  5080               	movf	128,w,c	;volatile
  2595   00263A                     
  2596                           ;main.c: 128:         if(setUpAgain){
  2597   00263A  0100               	movlb	0	; () banked
  2598   00263C  51FC               	movf	main@setUpAgain& (0+255),w,b
  2599   00263E  B4D8               	btfsc	status,2,c
  2600   002640  EF24  F013         	goto	u10341
  2601   002644  EF26  F013         	goto	u10340
  2602   002648                     u10341:
  2603   002648  EF90  F011         	goto	l8442
  2604   00264C                     u10340:
  2605   00264C                     
  2606                           ; BSR set to: 0
  2607                           ;main.c: 129:         menuI = moveDisplay(menuI,0);
  2608   00264C  0E00               	movlw	0
  2609   00264E  6FE7               	movwf	moveDisplay@where& (0+255),b
  2610   002650  51FD               	movf	main@menuI& (0+255),w,b
  2611   002652  ECF7  F020         	call	_moveDisplay
  2612   002656  0100               	movlb	0	; () banked
  2613   002658  6FFD               	movwf	main@menuI& (0+255),b
  2614   00265A                     
  2615                           ; BSR set to: 0
  2616                           ;main.c: 130:         setUpAgain = 0;
  2617   00265A  0E00               	movlw	0
  2618   00265C  6FFC               	movwf	main@setUpAgain& (0+255),b
  2619   00265E  EF90  F011         	goto	l8442
  2620   002662  EFA7  F000         	goto	start
  2621   002666                     __end_of_main:
  2622                           	callstack 0
  2623                           
  2624 ;; *************** function _runUART *****************
  2625 ;; Defined at:
  2626 ;;		line 4 in file "UART.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  p               2  152[BANK0 ] int 
  2631 ;;  i               2  150[BANK0 ] unsigned int 
  2632 ;;  reversed       31  116[BANK0 ] unsigned char [31]
  2633 ;;  len             2  148[BANK0 ] unsigned int 
  2634 ;;  keepState       1  147[BANK0 ] unsigned char 
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;Total ram usage:       40 bytes
  2649 ;; Hardware stack levels used: 1
  2650 ;; Hardware stack levels required when called: 9
  2651 ;; This function calls:
  2652 ;;		_printf
  2653 ;;		_strlen
  2654 ;; This function is called by:
  2655 ;;		_main
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text1
  2660   003DD0                     __ptext1:
  2661                           	callstack 0
  2662   003DD0                     _runUART:
  2663                           	callstack 21
  2664   003DD0                     
  2665                           ;UART.c: 6:     TRISAbits.RA2 = 1;
  2666   003DD0  8492               	bsf	146,2,c	;volatile
  2667                           
  2668                           ;UART.c: 8:     ANSELCbits.ANSC6 = 0;
  2669   003DD2  010F               	movlb	15	; () banked
  2670   003DD4  9D3A               	bcf	58,6,b	;volatile
  2671                           
  2672                           ;UART.c: 9:     ANSELCbits.ANSC7 = 0;
  2673   003DD6  9F3A               	bcf	58,7,b	;volatile
  2674                           
  2675                           ;UART.c: 10:     TRISCbits.TRISC6 = 1;
  2676   003DD8  8C94               	bsf	148,6,c	;volatile
  2677                           
  2678                           ;UART.c: 11:     TRISCbits.TRISC7 = 1;
  2679   003DDA  8E94               	bsf	148,7,c	;volatile
  2680   003DDC                     
  2681                           ; BSR set to: 15
  2682                           ;UART.c: 14:     SPBRG1 = 25;
  2683   003DDC  0E19               	movlw	25
  2684   003DDE  6EAF               	movwf	175,c	;volatile
  2685   003DE0                     
  2686                           ; BSR set to: 15
  2687                           ;UART.c: 16:     TXSTA1bits.SYNC = 0;
  2688   003DE0  98AC               	bcf	172,4,c	;volatile
  2689   003DE2                     
  2690                           ; BSR set to: 15
  2691                           ;UART.c: 17:     RCSTA1bits.SPEN = 1;
  2692   003DE2  8EAB               	bsf	171,7,c	;volatile
  2693   003DE4                     
  2694                           ; BSR set to: 15
  2695                           ;UART.c: 18:     TXSTA1bits.TXEN = 1;
  2696   003DE4  8AAC               	bsf	172,5,c	;volatile
  2697   003DE6                     
  2698                           ; BSR set to: 15
  2699                           ;UART.c: 19:     RCSTA1bits.CREN = 1;
  2700   003DE6  88AB               	bsf	171,4,c	;volatile
  2701                           
  2702                           ;UART.c: 21:     UARTIE = 1;
  2703   003DE8  0E01               	movlw	1
  2704   003DEA  0101               	movlb	1	; () banked
  2705   003DEC  6F25               	movwf	_UARTIE& (0+255),b
  2706   003DEE                     
  2707                           ; BSR set to: 1
  2708                           ;UART.c: 22:     RC1IE = 1;
  2709   003DEE  8A9D               	bsf	3997,5,c	;volatile
  2710   003DF0                     
  2711                           ; BSR set to: 1
  2712                           ;UART.c: 23:     PEIE = 1;
  2713   003DF0  8CF2               	bsf	4082,6,c	;volatile
  2714   003DF2                     
  2715                           ; BSR set to: 1
  2716                           ;UART.c: 24:     GIE = 1;
  2717   003DF2  8EF2               	bsf	4082,7,c	;volatile
  2718                           
  2719                           ;UART.c: 26:     uint8_t keepState = 1;
  2720   003DF4  0E01               	movlw	1
  2721   003DF6  0100               	movlb	0	; () banked
  2722   003DF8  6FF3               	movwf	runUART@keepState& (0+255),b
  2723                           
  2724                           ;UART.c: 28:     while(keepState){
  2725   003DFA  EF8B  F01F         	goto	l579
  2726   003DFE                     l8070:
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;UART.c: 29:         if(gmail.full){
  2730   003DFE  0101               	movlb	1	; () banked
  2731   003E00  5196               	movf	(_gmail+31)& (0+255),w,b	;volatile
  2732   003E02  B4D8               	btfsc	status,2,c
  2733   003E04  EF06  F01F         	goto	u9841
  2734   003E08  EF08  F01F         	goto	u9840
  2735   003E0C                     u9841:
  2736   003E0C  EF67  F01F         	goto	l581
  2737   003E10                     u9840:
  2738   003E10                     
  2739                           ; BSR set to: 1
  2740                           ;UART.c: 30:             char reversed[31];;UART.c: 31:             size_t len = strlen(
      +                          (const char*)gmail.data);
  2741   003E10  0E77               	movlw	low _gmail
  2742   003E12  6E06               	movwf	strlen@s^0,c
  2743   003E14  0E01               	movlw	high _gmail
  2744   003E16  6E07               	movwf	(strlen@s+1)^0,c
  2745   003E18  ECC6  F028         	call	_strlen	;wreg free
  2746   003E1C  C006  F0F4         	movff	?_strlen,runUART@len
  2747   003E20  C007  F0F5         	movff	?_strlen+1,runUART@len+1
  2748   003E24                     
  2749                           ;UART.c: 33:             for(size_t i = 0; i < len; i++) {
  2750   003E24  0E00               	movlw	0
  2751   003E26  0100               	movlb	0	; () banked
  2752   003E28  6FF7               	movwf	(runUART@i+1)& (0+255),b
  2753   003E2A  0E00               	movlw	0
  2754   003E2C  6FF6               	movwf	runUART@i& (0+255),b
  2755   003E2E  EF2F  F01F         	goto	l8080
  2756   003E32                     l8076:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;UART.c: 34:                 reversed[i] = gmail.data[len - 1 - i];
  2760   003E32  0E76               	movlw	low (_gmail+65535)
  2761   003E34  6FD2               	movwf	??_runUART& (0+255),b
  2762   003E36  0E01               	movlw	high (_gmail+65535)
  2763   003E38  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2764   003E3A  51F6               	movf	runUART@i& (0+255),w,b
  2765   003E3C  5FD2               	subwf	??_runUART& (0+255),f,b
  2766   003E3E  51F7               	movf	(runUART@i+1)& (0+255),w,b
  2767   003E40  5BD3               	subwfb	(??_runUART+1)& (0+255),f,b
  2768   003E42  51F4               	movf	runUART@len& (0+255),w,b
  2769   003E44  25D2               	addwf	??_runUART& (0+255),w,b
  2770   003E46  6ED9               	movwf	fsr2l,c
  2771   003E48  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2772   003E4A  21D3               	addwfc	(??_runUART+1)& (0+255),w,b
  2773   003E4C  6EDA               	movwf	fsr2h,c
  2774   003E4E  51F6               	movf	runUART@i& (0+255),w,b
  2775   003E50  0FD4               	addlw	low runUART@reversed
  2776   003E52  6EE1               	movwf	fsr1l,c
  2777   003E54  6AE2               	clrf	fsr1h,c
  2778   003E56  CFDF FFE7          	movff	indf2,indf1
  2779   003E5A                     
  2780                           ; BSR set to: 0
  2781                           ;UART.c: 35:             }
  2782   003E5A  4BF6               	infsnz	runUART@i& (0+255),f,b
  2783   003E5C  2BF7               	incf	(runUART@i+1)& (0+255),f,b
  2784   003E5E                     l8080:
  2785                           
  2786                           ; BSR set to: 0
  2787   003E5E  51F4               	movf	runUART@len& (0+255),w,b
  2788   003E60  5DF6               	subwf	runUART@i& (0+255),w,b
  2789   003E62  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2790   003E64  59F7               	subwfb	(runUART@i+1)& (0+255),w,b
  2791   003E66  A0D8               	btfss	status,0,c
  2792   003E68  EF38  F01F         	goto	u9851
  2793   003E6C  EF3A  F01F         	goto	u9850
  2794   003E70                     u9851:
  2795   003E70  EF19  F01F         	goto	l8076
  2796   003E74                     u9850:
  2797   003E74                     
  2798                           ; BSR set to: 0
  2799                           ;UART.c: 36:             reversed[len] = '\0';
  2800   003E74  51F4               	movf	runUART@len& (0+255),w,b
  2801   003E76  0FD4               	addlw	low runUART@reversed
  2802   003E78  6ED9               	movwf	fsr2l,c
  2803   003E7A  6ADA               	clrf	fsr2h,c
  2804   003E7C  6ADF               	clrf	indf2,c
  2805   003E7E                     
  2806                           ; BSR set to: 0
  2807                           ;UART.c: 37:             printf("%s \n", reversed);
  2808   003E7E  0ED2               	movlw	low STR_35
  2809   003E80  6FCE               	movwf	printf@fmt& (0+255),b
  2810   003E82  0EFF               	movlw	high STR_35
  2811   003E84  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  2812   003E86  0ED4               	movlw	low runUART@reversed
  2813   003E88  6FD0               	movwf	(?_printf+2)& (0+255),b
  2814   003E8A  6BD1               	clrf	(?_printf+3)& (0+255),b
  2815   003E8C  EC6A  F029         	call	_printf	;wreg free
  2816   003E90                     
  2817                           ;UART.c: 39:             gmail.full = 0;
  2818   003E90  0E00               	movlw	0
  2819   003E92  0101               	movlb	1	; () banked
  2820   003E94  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
  2821   003E96                     
  2822                           ; BSR set to: 1
  2823                           ;UART.c: 41:             for(int p = 0; p < 31; p++) {
  2824   003E96  0E00               	movlw	0
  2825   003E98  0100               	movlb	0	; () banked
  2826   003E9A  6FF9               	movwf	(runUART@p+1)& (0+255),b
  2827   003E9C  0E00               	movlw	0
  2828   003E9E  6FF8               	movwf	runUART@p& (0+255),b
  2829   003EA0                     l8094:
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;UART.c: 42:                 gmail.data[p] = '\0';
  2833   003EA0  0E77               	movlw	low _gmail
  2834   003EA2  25F8               	addwf	runUART@p& (0+255),w,b
  2835   003EA4  6ED9               	movwf	fsr2l,c
  2836   003EA6  0E01               	movlw	high _gmail
  2837   003EA8  21F9               	addwfc	(runUART@p+1)& (0+255),w,b
  2838   003EAA  6EDA               	movwf	fsr2h,c
  2839   003EAC  6ADF               	clrf	indf2,c
  2840   003EAE                     
  2841                           ; BSR set to: 0
  2842                           ;UART.c: 43:             }
  2843   003EAE  4BF8               	infsnz	runUART@p& (0+255),f,b
  2844   003EB0  2BF9               	incf	(runUART@p+1)& (0+255),f,b
  2845   003EB2                     
  2846                           ; BSR set to: 0
  2847   003EB2  BFF9               	btfsc	(runUART@p+1)& (0+255),7,b
  2848   003EB4  EF65  F01F         	goto	u9861
  2849   003EB8  51F9               	movf	(runUART@p+1)& (0+255),w,b
  2850   003EBA  E109               	bnz	u9860
  2851   003EBC  0E1F               	movlw	31
  2852   003EBE  5DF8               	subwf	runUART@p& (0+255),w,b
  2853   003EC0  A0D8               	btfss	status,0,c
  2854   003EC2  EF65  F01F         	goto	u9861
  2855   003EC6  EF67  F01F         	goto	u9860
  2856   003ECA                     u9861:
  2857   003ECA  EF50  F01F         	goto	l8094
  2858   003ECE                     u9860:
  2859   003ECE                     l581:
  2860                           
  2861                           ;UART.c: 47:         if(PORTAbits.RA2){
  2862   003ECE  A480               	btfss	128,2,c	;volatile
  2863   003ED0  EF6C  F01F         	goto	u9871
  2864   003ED4  EF6E  F01F         	goto	u9870
  2865   003ED8                     u9871:
  2866   003ED8  EF8B  F01F         	goto	l579
  2867   003EDC                     u9870:
  2868   003EDC                     
  2869                           ;UART.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2870   003EDC  0E03               	movlw	3
  2871   003EDE  0100               	movlb	0	; () banked
  2872   003EE0  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2873   003EE2  0E08               	movlw	8
  2874   003EE4  6FD2               	movwf	??_runUART& (0+255),b
  2875   003EE6  0E77               	movlw	119
  2876   003EE8                     u10467:
  2877   003EE8  2EE8               	decfsz	wreg,f,c
  2878   003EEA  D7FE               	bra	u10467
  2879   003EEC  2FD2               	decfsz	??_runUART& (0+255),f,b
  2880   003EEE  D7FC               	bra	u10467
  2881   003EF0  2FD3               	decfsz	(??_runUART+1)& (0+255),f,b
  2882   003EF2  D7FA               	bra	u10467
  2883   003EF4                     
  2884                           ;UART.c: 49:             if(PORTAbits.RA2){
  2885   003EF4  A480               	btfss	128,2,c	;volatile
  2886   003EF6  EF7F  F01F         	goto	u9881
  2887   003EFA  EF81  F01F         	goto	u9880
  2888   003EFE                     u9881:
  2889   003EFE  EF8B  F01F         	goto	l579
  2890   003F02                     u9880:
  2891   003F02                     l589:
  2892   003F02  B480               	btfsc	128,2,c	;volatile
  2893   003F04  EF86  F01F         	goto	u9891
  2894   003F08  EF88  F01F         	goto	u9890
  2895   003F0C                     u9891:
  2896   003F0C  EF81  F01F         	goto	l589
  2897   003F10                     u9890:
  2898   003F10                     
  2899                           ;UART.c: 51:                 keepState = 0;
  2900   003F10  0E00               	movlw	0
  2901   003F12  0100               	movlb	0	; () banked
  2902   003F14  6FF3               	movwf	runUART@keepState& (0+255),b
  2903   003F16                     l579:
  2904                           
  2905                           ;UART.c: 28:     while(keepState){
  2906   003F16  0100               	movlb	0	; () banked
  2907   003F18  51F3               	movf	runUART@keepState& (0+255),w,b
  2908   003F1A  A4D8               	btfss	status,2,c
  2909   003F1C  EF92  F01F         	goto	u9901
  2910   003F20  EF94  F01F         	goto	u9900
  2911   003F24                     u9901:
  2912   003F24  EFFF  F01E         	goto	l8070
  2913   003F28                     u9900:
  2914   003F28                     
  2915                           ; BSR set to: 0
  2916                           ;UART.c: 58:     RCSTA1bits.SPEN = 0;
  2917   003F28  9EAB               	bcf	171,7,c	;volatile
  2918                           
  2919                           ;UART.c: 59:     TXSTA1bits.TXEN = 0;
  2920   003F2A  9AAC               	bcf	172,5,c	;volatile
  2921                           
  2922                           ;UART.c: 60:     RCSTA1bits.CREN = 0;
  2923   003F2C  98AB               	bcf	171,4,c	;volatile
  2924   003F2E                     
  2925                           ; BSR set to: 0
  2926                           ;UART.c: 61:     UARTIE = 0;
  2927   003F2E  0E00               	movlw	0
  2928   003F30  0101               	movlb	1	; () banked
  2929   003F32  6F25               	movwf	_UARTIE& (0+255),b
  2930   003F34                     
  2931                           ; BSR set to: 1
  2932                           ;UART.c: 62:     RC1IE = 0;
  2933   003F34  9A9D               	bcf	3997,5,c	;volatile
  2934   003F36                     
  2935                           ; BSR set to: 1
  2936                           ;UART.c: 63:     PEIE = 0;
  2937   003F36  9CF2               	bcf	4082,6,c	;volatile
  2938   003F38                     
  2939                           ; BSR set to: 1
  2940                           ;UART.c: 64:     GIE = 0;
  2941   003F38  9EF2               	bcf	4082,7,c	;volatile
  2942   003F3A                     
  2943                           ; BSR set to: 1
  2944   003F3A  0012               	return		;funcret
  2945   003F3C                     __end_of_runUART:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _strlen *****************
  2949 ;; Defined at:
  2950 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strlen.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  s               2    5[COMRAM] PTR const unsigned char 
  2953 ;;		 -> gmail$data(31), gmail(32), 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  a               2    7[COMRAM] PTR const unsigned char 
  2956 ;;		 -> gmail$data(31), gmail(32), 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  2    5[COMRAM] unsigned int 
  2959 ;; Registers used:
  2960 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;Total ram usage:        4 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 1
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_runUART
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text2
  2981   00518C                     __ptext2:
  2982                           	callstack 0
  2983   00518C                     _strlen:
  2984                           	callstack 28
  2985   00518C  C006  F008         	movff	strlen@s,strlen@a
  2986   005190  C007  F009         	movff	strlen@s+1,strlen@a+1
  2987   005194  EFCE  F028         	goto	l7932
  2988   005198                     l7930:
  2989   005198  4A06               	infsnz	strlen@s^0,f,c
  2990   00519A  2A07               	incf	(strlen@s+1)^0,f,c
  2991   00519C                     l7932:
  2992   00519C  C006  FFD9         	movff	strlen@s,fsr2l
  2993   0051A0  C007  FFDA         	movff	strlen@s+1,fsr2h
  2994   0051A4  50DF               	movf	indf2,w,c
  2995   0051A6  A4D8               	btfss	status,2,c
  2996   0051A8  EFD8  F028         	goto	u9651
  2997   0051AC  EFDA  F028         	goto	u9650
  2998   0051B0                     u9651:
  2999   0051B0  EFCC  F028         	goto	l7930
  3000   0051B4                     u9650:
  3001   0051B4  5008               	movf	strlen@a^0,w,c
  3002   0051B6  5C06               	subwf	strlen@s^0,w,c
  3003   0051B8  6E06               	movwf	?_strlen^0,c
  3004   0051BA  5009               	movf	(strlen@a+1)^0,w,c
  3005   0051BC  5807               	subwfb	(strlen@s+1)^0,w,c
  3006   0051BE  6E07               	movwf	(?_strlen+1)^0,c
  3007   0051C0  0012               	return		;funcret
  3008   0051C2                     __end_of_strlen:
  3009                           	callstack 0
  3010                           
  3011 ;; *************** function _runPWM *****************
  3012 ;; Defined at:
  3013 ;;		line 11 in file "PWM.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  multiplier      1   34[COMRAM] unsigned char 
  3018 ;;  keepState       1   33[COMRAM] unsigned char 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;Total ram usage:        4 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; Hardware stack levels required when called: 2
  3035 ;; This function calls:
  3036 ;;		___awdiv
  3037 ;; This function is called by:
  3038 ;;		_main
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text3
  3043   0040A8                     __ptext3:
  3044                           	callstack 0
  3045   0040A8                     _runPWM:
  3046                           	callstack 28
  3047   0040A8                     
  3048                           ;PWM.c: 13:     TRISCbits.RC2 = 1;
  3049   0040A8  8494               	bsf	148,2,c	;volatile
  3050   0040AA                     
  3051                           ;PWM.c: 14:     CCPTMRS0bits.C1TSEL = 0b00;
  3052   0040AA  0EFC               	movlw	-4
  3053   0040AC  010F               	movlb	15	; () banked
  3054   0040AE  1749               	andwf	73,f,b	;volatile
  3055                           
  3056                           ;PWM.c: 15:     PR2 = 199;
  3057   0040B0  0EC7               	movlw	199
  3058   0040B2  6EBB               	movwf	187,c	;volatile
  3059                           
  3060                           ;PWM.c: 16:     CCP1CONbits.CCP1M |= 0b1100;
  3061   0040B4  0E0C               	movlw	12
  3062   0040B6  12BD               	iorwf	189,f,c	;volatile
  3063                           
  3064                           ;PWM.c: 17:     CCP1CONbits.P1M = 0b10;
  3065   0040B8  50BD               	movf	189,w,c	;volatile
  3066   0040BA  0B3F               	andlw	-193
  3067   0040BC  0980               	iorlw	128
  3068   0040BE  6EBD               	movwf	189,c	;volatile
  3069                           
  3070                           ;PWM.c: 18:     CCPR1L = 0;
  3071   0040C0  0E00               	movlw	0
  3072   0040C2  6EBE               	movwf	190,c	;volatile
  3073   0040C4                     
  3074                           ; BSR set to: 15
  3075                           ;PWM.c: 19:     TMR2IF = 0;
  3076   0040C4  929E               	bcf	3998,1,c	;volatile
  3077   0040C6                     
  3078                           ; BSR set to: 15
  3079                           ;PWM.c: 20:     TMR2ON = 1;
  3080   0040C6  84BA               	bsf	4026,2,c	;volatile
  3081   0040C8                     l519:
  3082   0040C8  A29E               	btfss	3998,1,c	;volatile
  3083   0040CA  EF69  F020         	goto	u9911
  3084   0040CE  EF6B  F020         	goto	u9910
  3085   0040D2                     u9911:
  3086   0040D2  EF64  F020         	goto	l519
  3087   0040D6                     u9910:
  3088   0040D6                     
  3089                           ;PWM.c: 22:     TRISCbits.RC2 = 1;
  3090   0040D6  8494               	bsf	148,2,c	;volatile
  3091                           
  3092                           ;PWM.c: 25:     TRISAbits.RA4 = 1;
  3093   0040D8  8892               	bsf	146,4,c	;volatile
  3094                           
  3095                           ;PWM.c: 26:     TRISAbits.RA2 = 1;
  3096   0040DA  8492               	bsf	146,2,c	;volatile
  3097                           
  3098                           ;PWM.c: 28:     TRISDbits.RD2 = 0;
  3099   0040DC  9495               	bcf	149,2,c	;volatile
  3100                           
  3101                           ;PWM.c: 29:     TRISDbits.RD3 = 0;
  3102   0040DE  9695               	bcf	149,3,c	;volatile
  3103                           
  3104                           ;PWM.c: 30:     TRISCbits.RC4 = 0;
  3105   0040E0  9894               	bcf	148,4,c	;volatile
  3106                           
  3107                           ;PWM.c: 31:     TRISDbits.RD4 = 0;
  3108   0040E2  9895               	bcf	149,4,c	;volatile
  3109                           
  3110                           ;PWM.c: 32:     TRISDbits.RD5 = 0;
  3111   0040E4  9A95               	bcf	149,5,c	;volatile
  3112                           
  3113                           ;PWM.c: 33:     TRISDbits.RD6 = 0;
  3114   0040E6  9C95               	bcf	149,6,c	;volatile
  3115                           
  3116                           ;PWM.c: 34:     LATDbits.LD2 = 1;
  3117   0040E8  848C               	bsf	140,2,c	;volatile
  3118                           
  3119                           ;PWM.c: 35:     LATDbits.LD3 = 1;
  3120   0040EA  868C               	bsf	140,3,c	;volatile
  3121                           
  3122                           ;PWM.c: 36:     LATCbits.LC4 = 1;
  3123   0040EC  888B               	bsf	139,4,c	;volatile
  3124                           
  3125                           ;PWM.c: 37:     LATDbits.LD4 = 1;
  3126   0040EE  888C               	bsf	140,4,c	;volatile
  3127                           
  3128                           ;PWM.c: 38:     LATDbits.LD5 = 1;
  3129   0040F0  8A8C               	bsf	140,5,c	;volatile
  3130                           
  3131                           ;PWM.c: 39:     LATDbits.LD6 = 1;
  3132   0040F2  8C8C               	bsf	140,6,c	;volatile
  3133   0040F4                     
  3134                           ;PWM.c: 41:     uint8_t keepState;;PWM.c: 42:     keepState = 1;
  3135   0040F4  0E01               	movlw	1
  3136   0040F6  6E22               	movwf	runPWM@keepState^0,c
  3137                           
  3138                           ;PWM.c: 44:     uint8_t multiplier;;PWM.c: 45:     multiplier = 0;
  3139   0040F8  0E00               	movlw	0
  3140   0040FA  6E23               	movwf	runPWM@multiplier^0,c
  3141                           
  3142                           ;PWM.c: 47:     while(keepState){
  3143   0040FC  EFEA  F020         	goto	l522
  3144   004100                     l8128:
  3145                           
  3146                           ;PWM.c: 49:         CCPR1L = multiplier*199/5;
  3147   004100  5023               	movf	runPWM@multiplier^0,w,c
  3148   004102  0DC7               	mullw	199
  3149   004104  CFF3 F018          	movff	prodl,___awdiv@dividend
  3150   004108  CFF4 F019          	movff	prodh,___awdiv@dividend+1
  3151   00410C  0E00               	movlw	0
  3152   00410E  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  3153   004110  0E05               	movlw	5
  3154   004112  6E1A               	movwf	___awdiv@divisor^0,c
  3155   004114  EC4F  F024         	call	___awdiv	;wreg free
  3156   004118  5018               	movf	?___awdiv^0,w,c
  3157   00411A  6EBE               	movwf	190,c	;volatile
  3158   00411C                     
  3159                           ;PWM.c: 51:         if(PORTAbits.RA4){
  3160   00411C  A880               	btfss	128,4,c	;volatile
  3161   00411E  EF93  F020         	goto	u9921
  3162   004122  EF95  F020         	goto	u9920
  3163   004126                     u9921:
  3164   004126  EFC7  F020         	goto	l8146
  3165   00412A                     u9920:
  3166   00412A                     
  3167                           ;PWM.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  3168   00412A  0E03               	movlw	3
  3169   00412C  6E21               	movwf	(??_runPWM+1)^0,c
  3170   00412E  0E08               	movlw	8
  3171   004130  6E20               	movwf	??_runPWM^0,c
  3172   004132  0E77               	movlw	119
  3173   004134                     u10477:
  3174   004134  2EE8               	decfsz	wreg,f,c
  3175   004136  D7FE               	bra	u10477
  3176   004138  2E20               	decfsz	??_runPWM^0,f,c
  3177   00413A  D7FC               	bra	u10477
  3178   00413C  2E21               	decfsz	(??_runPWM+1)^0,f,c
  3179   00413E  D7FA               	bra	u10477
  3180   004140  0000               	nop	
  3181   004142                     
  3182                           ;PWM.c: 53:             if(PORTAbits.RA4){
  3183   004142  A880               	btfss	128,4,c	;volatile
  3184   004144  EFA6  F020         	goto	u9931
  3185   004148  EFA8  F020         	goto	u9930
  3186   00414C                     u9931:
  3187   00414C  EFC7  F020         	goto	l8146
  3188   004150                     u9930:
  3189   004150                     l526:
  3190   004150  B880               	btfsc	128,4,c	;volatile
  3191   004152  EFAD  F020         	goto	u9941
  3192   004156  EFAF  F020         	goto	u9940
  3193   00415A                     u9941:
  3194   00415A  EFA8  F020         	goto	l526
  3195   00415E                     u9940:
  3196   00415E                     
  3197                           ;PWM.c: 55:                 if(multiplier == 5 ){
  3198   00415E  0E05               	movlw	5
  3199   004160  1823               	xorwf	runPWM@multiplier^0,w,c
  3200   004162  A4D8               	btfss	status,2,c
  3201   004164  EFB6  F020         	goto	u9951
  3202   004168  EFB8  F020         	goto	u9950
  3203   00416C                     u9951:
  3204   00416C  EFBC  F020         	goto	l8142
  3205   004170                     u9950:
  3206   004170                     
  3207                           ;PWM.c: 56:                     multiplier = 0;
  3208   004170  0E00               	movlw	0
  3209   004172  6E23               	movwf	runPWM@multiplier^0,c
  3210                           
  3211                           ;PWM.c: 57:                 } else if(multiplier <5){
  3212   004174  EFC7  F020         	goto	l8146
  3213   004178                     l8142:
  3214   004178  0E05               	movlw	5
  3215   00417A  6023               	cpfslt	runPWM@multiplier^0,c
  3216   00417C  EFC2  F020         	goto	u9961
  3217   004180  EFC4  F020         	goto	u9960
  3218   004184                     u9961:
  3219   004184  EFC7  F020         	goto	l525
  3220   004188                     u9960:
  3221   004188                     
  3222                           ;PWM.c: 58:                     multiplier++;
  3223   004188  2A23               	incf	runPWM@multiplier^0,f,c
  3224   00418A  EFC7  F020         	goto	l8146
  3225   00418E                     l525:
  3226   00418E                     l8146:
  3227                           
  3228                           ;PWM.c: 63:         if(PORTAbits.RA2){
  3229   00418E  A480               	btfss	128,2,c	;volatile
  3230   004190  EFCC  F020         	goto	u9971
  3231   004194  EFCE  F020         	goto	u9970
  3232   004198                     u9971:
  3233   004198  EFEA  F020         	goto	l522
  3234   00419C                     u9970:
  3235   00419C                     
  3236                           ;PWM.c: 64:         _delay((unsigned long)((50)*(32E6/4000.0)));
  3237   00419C  0E03               	movlw	3
  3238   00419E  6E21               	movwf	(??_runPWM+1)^0,c
  3239   0041A0  0E08               	movlw	8
  3240   0041A2  6E20               	movwf	??_runPWM^0,c
  3241   0041A4  0E77               	movlw	119
  3242   0041A6                     u10487:
  3243   0041A6  2EE8               	decfsz	wreg,f,c
  3244   0041A8  D7FE               	bra	u10487
  3245   0041AA  2E20               	decfsz	??_runPWM^0,f,c
  3246   0041AC  D7FC               	bra	u10487
  3247   0041AE  2E21               	decfsz	(??_runPWM+1)^0,f,c
  3248   0041B0  D7FA               	bra	u10487
  3249   0041B2  0000               	nop	
  3250   0041B4                     
  3251                           ;PWM.c: 65:         if(PORTAbits.RA2){
  3252   0041B4  A480               	btfss	128,2,c	;volatile
  3253   0041B6  EFDF  F020         	goto	u9981
  3254   0041BA  EFE1  F020         	goto	u9980
  3255   0041BE                     u9981:
  3256   0041BE  EFEA  F020         	goto	l522
  3257   0041C2                     u9980:
  3258   0041C2                     l534:
  3259   0041C2  B480               	btfsc	128,2,c	;volatile
  3260   0041C4  EFE6  F020         	goto	u9991
  3261   0041C8  EFE8  F020         	goto	u9990
  3262   0041CC                     u9991:
  3263   0041CC  EFE1  F020         	goto	l534
  3264   0041D0                     u9990:
  3265   0041D0                     
  3266                           ;PWM.c: 67:             keepState = 0;
  3267   0041D0  0E00               	movlw	0
  3268   0041D2  6E22               	movwf	runPWM@keepState^0,c
  3269   0041D4                     l522:
  3270                           
  3271                           ;PWM.c: 47:     while(keepState){
  3272   0041D4  5022               	movf	runPWM@keepState^0,w,c
  3273   0041D6  A4D8               	btfss	status,2,c
  3274   0041D8  EFF0  F020         	goto	u10001
  3275   0041DC  EFF2  F020         	goto	u10000
  3276   0041E0                     u10001:
  3277   0041E0  EF80  F020         	goto	l8128
  3278   0041E4                     u10000:
  3279   0041E4                     
  3280                           ;PWM.c: 74:     CCP1CONbits.CCP1M = 0b0000;
  3281   0041E4  0EF0               	movlw	-16
  3282   0041E6  16BD               	andwf	189,f,c	;volatile
  3283   0041E8                     
  3284                           ;PWM.c: 75:     TMR2ON = 0;
  3285   0041E8  94BA               	bcf	4026,2,c	;volatile
  3286   0041EA                     
  3287                           ;PWM.c: 76:     TMR2IE = 0;
  3288   0041EA  929D               	bcf	3997,1,c	;volatile
  3289   0041EC  0012               	return		;funcret
  3290   0041EE                     __end_of_runPWM:
  3291                           	callstack 0
  3292                           
  3293 ;; *************** function _runMUSIC *****************
  3294 ;; Defined at:
  3295 ;;		line 10 in file "MUSIC.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		None
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;Total ram usage:        0 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; Hardware stack levels required when called: 1
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text4
  3324   00535E                     __ptext4:
  3325                           	callstack 0
  3326   00535E                     _runMUSIC:
  3327                           	callstack 29
  3328   00535E  0012               	return		;funcret
  3329   005360                     __end_of_runMUSIC:
  3330                           	callstack 0
  3331                           
  3332 ;; *************** function _runGPIO *****************
  3333 ;; Defined at:
  3334 ;;		line 19 in file "GPIO.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  j               2   35[COMRAM] int 
  3339 ;;  states         12    8[COMRAM] unsigned char [12]
  3340 ;;  LEDControl     12   20[COMRAM] PTR FTN(unsigned char ,)
  3341 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  3342 ;;		 -> LED2_Control(1), LED1_Control(1), 
  3343 ;;  numberOfStat    2   32[COMRAM] int 
  3344 ;;  GPIOi           1   34[COMRAM] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Locals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;Total ram usage:       31 bytes
  3359 ;; Hardware stack levels used: 1
  3360 ;; Hardware stack levels required when called: 2
  3361 ;; This function calls:
  3362 ;;		_LED1_Control
  3363 ;;		_LED2_Control
  3364 ;;		_LED3_Control
  3365 ;;		_LED4_Control
  3366 ;;		_LED5_Control
  3367 ;;		_LED6_Control
  3368 ;; This function is called by:
  3369 ;;		_main
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text5
  3374   003F3C                     __ptext5:
  3375                           	callstack 0
  3376   003F3C                     _runGPIO:
  3377                           	callstack 28
  3378   003F3C                     
  3379                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  3380   003F3C  9495               	bcf	149,2,c	;volatile
  3381                           
  3382                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  3383   003F3E  9695               	bcf	149,3,c	;volatile
  3384                           
  3385                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  3386   003F40  9894               	bcf	148,4,c	;volatile
  3387                           
  3388                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  3389   003F42  9895               	bcf	149,4,c	;volatile
  3390                           
  3391                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  3392   003F44  9A95               	bcf	149,5,c	;volatile
  3393                           
  3394                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  3395   003F46  9C95               	bcf	149,6,c	;volatile
  3396                           
  3397                           ;GPIO.c: 27:     ANSELDbits.ANSD2 = 0;
  3398   003F48  010F               	movlb	15	; () banked
  3399   003F4A  953B               	bcf	59,2,b	;volatile
  3400                           
  3401                           ;GPIO.c: 28:     ANSELDbits.ANSD3 = 0;
  3402   003F4C  973B               	bcf	59,3,b	;volatile
  3403                           
  3404                           ;GPIO.c: 29:     ANSELCbits.ANSC4 = 0;
  3405   003F4E  993A               	bcf	58,4,b	;volatile
  3406                           
  3407                           ;GPIO.c: 30:     ANSELDbits.ANSD4 = 0;
  3408   003F50  993B               	bcf	59,4,b	;volatile
  3409                           
  3410                           ;GPIO.c: 31:     ANSELDbits.ANSD5 = 0;
  3411   003F52  9B3B               	bcf	59,5,b	;volatile
  3412                           
  3413                           ;GPIO.c: 32:     ANSELDbits.ANSD6 = 0;
  3414   003F54  9D3B               	bcf	59,6,b	;volatile
  3415                           
  3416                           ;GPIO.c: 33:     LATDbits.LD2 = 1;
  3417   003F56  848C               	bsf	140,2,c	;volatile
  3418                           
  3419                           ;GPIO.c: 34:     LATDbits.LD3 = 1;
  3420   003F58  868C               	bsf	140,3,c	;volatile
  3421                           
  3422                           ;GPIO.c: 35:     LATCbits.LC4 = 1;
  3423   003F5A  888B               	bsf	139,4,c	;volatile
  3424                           
  3425                           ;GPIO.c: 36:     LATDbits.LD4 = 1;
  3426   003F5C  888C               	bsf	140,4,c	;volatile
  3427                           
  3428                           ;GPIO.c: 37:     LATDbits.LD5 = 1;
  3429   003F5E  8A8C               	bsf	140,5,c	;volatile
  3430                           
  3431                           ;GPIO.c: 38:     LATDbits.LD6 = 1;
  3432   003F60  8C8C               	bsf	140,6,c	;volatile
  3433                           
  3434                           ;GPIO.c: 41:     TRISAbits.RA2 = 1;
  3435   003F62  8492               	bsf	146,2,c	;volatile
  3436                           
  3437                           ;GPIO.c: 42:     ANSELAbits.ANSA2 = 0;
  3438   003F64  9538               	bcf	56,2,b	;volatile
  3439   003F66                     
  3440                           ; BSR set to: 15
  3441                           ;GPIO.c: 47:     T1CONbits.TMR1CS = 0b00;
  3442   003F66  0E3F               	movlw	-193
  3443   003F68  16CD               	andwf	205,f,c	;volatile
  3444                           
  3445                           ;GPIO.c: 48:     T1CONbits.T1CKPS = 0b11;
  3446   003F6A  0E30               	movlw	48
  3447   003F6C  12CD               	iorwf	205,f,c	;volatile
  3448   003F6E                     
  3449                           ; BSR set to: 15
  3450                           ;GPIO.c: 49:     TMR1IE = 1;
  3451   003F6E  809D               	bsf	3997,0,c	;volatile
  3452   003F70                     
  3453                           ; BSR set to: 15
  3454                           ;GPIO.c: 50:     PEIE = 1;
  3455   003F70  8CF2               	bsf	4082,6,c	;volatile
  3456   003F72                     
  3457                           ; BSR set to: 15
  3458                           ;GPIO.c: 51:     GIE = 1;
  3459   003F72  8EF2               	bsf	4082,7,c	;volatile
  3460                           
  3461                           ;GPIO.c: 52:     GPIOIE = 1;
  3462   003F74  0E01               	movlw	1
  3463   003F76  0101               	movlb	1	; () banked
  3464   003F78  6F26               	movwf	_GPIOIE& (0+255),b
  3465   003F7A                     
  3466                           ; BSR set to: 1
  3467                           ;GPIO.c: 53:     TMR1IF = 1;
  3468   003F7A  809E               	bsf	3998,0,c	;volatile
  3469                           
  3470                           ;GPIO.c: 54:     TMR1 = 0xFFFF - (25000 - 1);
  3471   003F7C  0E9E               	movlw	158
  3472   003F7E  6ECF               	movwf	207,c	;volatile
  3473   003F80  0E58               	movlw	88
  3474   003F82  6ECE               	movwf	206,c	;volatile
  3475   003F84                     
  3476                           ; BSR set to: 1
  3477                           ;GPIO.c: 55:     TMR1ON = 1;
  3478   003F84  80CD               	bsf	4045,0,c	;volatile
  3479                           
  3480                           ;GPIO.c: 58:     keepStateGPIO = 1;
  3481   003F86  0E01               	movlw	1
  3482   003F88  0100               	movlb	0	; () banked
  3483   003F8A  6FFE               	movwf	_keepStateGPIO& (0+255),b
  3484   003F8C                     
  3485                           ; BSR set to: 0
  3486                           ;GPIO.c: 60:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  3487   003F8C  EE21  F0EA         	lfsr	2,runGPIO@F6975
  3488   003F90  EE10  F015         	lfsr	1,runGPIO@LEDControl
  3489   003F94  0E0B               	movlw	11
  3490   003F96                     u9751:
  3491   003F96  CFDB FFE3          	movff	plusw2,plusw1
  3492   003F9A  06E8               	decf	wreg,f,c
  3493   003F9C  E2FC               	bc	u9751
  3494   003F9E                     
  3495                           ; BSR set to: 0
  3496                           ;GPIO.c: 61:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  3497   003F9E  EE21  F0DE         	lfsr	2,runGPIO@F6993
  3498   003FA2  EE10  F009         	lfsr	1,runGPIO@states
  3499   003FA6  0E0B               	movlw	11
  3500   003FA8                     u9761:
  3501   003FA8  CFDB FFE3          	movff	plusw2,plusw1
  3502   003FAC  06E8               	decf	wreg,f,c
  3503   003FAE  E2FC               	bc	u9761
  3504                           
  3505                           ;GPIO.c: 62:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  3506   003FB0  0E00               	movlw	0
  3507   003FB2  6E22               	movwf	(runGPIO@numberOfStates+1)^0,c
  3508   003FB4  0E0C               	movlw	12
  3509   003FB6  6E21               	movwf	runGPIO@numberOfStates^0,c
  3510                           
  3511                           ;GPIO.c: 63:     uint8_t GPIOi;;GPIO.c: 64:     GPIOi = 0;
  3512   003FB8  0E00               	movlw	0
  3513   003FBA  6E23               	movwf	runGPIO@GPIOi^0,c
  3514                           
  3515                           ;GPIO.c: 66:     while(keepStateGPIO){
  3516   003FBC  EF3F  F020         	goto	l372
  3517   003FC0                     l8030:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;GPIO.c: 68:         for(int j = 0; j < 6; j++) {
  3521   003FC0  0E00               	movlw	0
  3522   003FC2  6E25               	movwf	(runGPIO@j+1)^0,c
  3523   003FC4  0E00               	movlw	0
  3524   003FC6  6E24               	movwf	runGPIO@j^0,c
  3525   003FC8                     l8036:
  3526                           
  3527                           ;GPIO.c: 69:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  3528   003FC8  5024               	movf	runGPIO@j^0,w,c
  3529   003FCA  0D02               	mullw	2
  3530   003FCC  50F3               	movf	243,w,c
  3531   003FCE  0F15               	addlw	low runGPIO@LEDControl
  3532   003FD0  6ED9               	movwf	fsr2l,c
  3533   003FD2  6ADA               	clrf	fsr2h,c
  3534   003FD4  D802               	call	u9778
  3535   003FD6  EF11  F020         	goto	u9779
  3536   003FDA                     u9778:
  3537   003FDA  0005               	push	
  3538   003FDC  6EFA               	movwf	pclath,c
  3539   003FDE  50DE               	movf	postinc2,w,c
  3540   003FE0  6EFD               	movwf	tosl,c
  3541   003FE2  50DE               	movf	postinc2,w,c
  3542   003FE4  6EFE               	movwf	tosh,c
  3543   003FE6  50F8               	movf	tblptru,w,c
  3544   003FE8  6EFF               	movwf	tosu,c
  3545   003FEA  50FA               	movf	pclath,w,c
  3546   003FEC  5024               	movf	runGPIO@j^0,w,c
  3547   003FEE  0805               	sublw	5
  3548   003FF0  6E07               	movwf	??_runGPIO^0,c
  3549   003FF2  5023               	movf	runGPIO@GPIOi^0,w,c
  3550   003FF4  0F09               	addlw	low runGPIO@states
  3551   003FF6  6ED9               	movwf	fsr2l,c
  3552   003FF8  6ADA               	clrf	fsr2h,c
  3553   003FFA  50DF               	movf	indf2,w,c
  3554   003FFC  6E08               	movwf	(??_runGPIO+1)^0,c
  3555   003FFE  2A07               	incf	??_runGPIO^0,f,c
  3556   004000  EF04  F020         	goto	u9784
  3557   004004                     u9785:
  3558   004004  90D8               	bcf	status,0,c
  3559   004006  3208               	rrcf	(??_runGPIO+1)^0,f,c
  3560   004008                     u9784:
  3561   004008  2E07               	decfsz	??_runGPIO^0,f,c
  3562   00400A  EF02  F020         	goto	u9785
  3563   00400E  A008               	btfss	(??_runGPIO+1)^0,0,c
  3564   004010  EF0C  F020         	goto	u9791
  3565   004014  EF0F  F020         	goto	u9790
  3566   004018                     u9791:
  3567   004018  0E01               	movlw	1
  3568   00401A  EF10  F020         	goto	u9800
  3569   00401E                     u9790:
  3570   00401E  0E00               	movlw	0
  3571   004020                     u9800:
  3572   004020  0012               	return		;indir
  3573   004022                     u9779:
  3574   004022                     
  3575                           ;GPIO.c: 70:         }
  3576   004022  4A24               	infsnz	runGPIO@j^0,f,c
  3577   004024  2A25               	incf	(runGPIO@j+1)^0,f,c
  3578   004026  BE25               	btfsc	(runGPIO@j+1)^0,7,c
  3579   004028  EF1F  F020         	goto	u9811
  3580   00402C  5025               	movf	(runGPIO@j+1)^0,w,c
  3581   00402E  E109               	bnz	u9810
  3582   004030  0E06               	movlw	6
  3583   004032  5C24               	subwf	runGPIO@j^0,w,c
  3584   004034  A0D8               	btfss	status,0,c
  3585   004036  EF1F  F020         	goto	u9811
  3586   00403A  EF21  F020         	goto	u9810
  3587   00403E                     u9811:
  3588   00403E  EFE4  F01F         	goto	l8036
  3589   004042                     u9810:
  3590   004042                     
  3591                           ;GPIO.c: 71:         _delay((unsigned long)((400)*(32E6/4000.0)));
  3592   004042  0E11               	movlw	17
  3593   004044  6E08               	movwf	(??_runGPIO+1)^0,c
  3594   004046  0E3C               	movlw	60
  3595   004048  6E07               	movwf	??_runGPIO^0,c
  3596   00404A  0ECB               	movlw	203
  3597   00404C                     u10497:
  3598   00404C  2EE8               	decfsz	wreg,f,c
  3599   00404E  D7FE               	bra	u10497
  3600   004050  2E07               	decfsz	??_runGPIO^0,f,c
  3601   004052  D7FC               	bra	u10497
  3602   004054  2E08               	decfsz	(??_runGPIO+1)^0,f,c
  3603   004056  D7FA               	bra	u10497
  3604   004058  0000               	nop	
  3605   00405A                     
  3606                           ;GPIO.c: 72:         GPIOi++;
  3607   00405A  2A23               	incf	runGPIO@GPIOi^0,f,c
  3608                           
  3609                           ;GPIO.c: 73:         if(GPIOi == numberOfStates){
  3610   00405C  5023               	movf	runGPIO@GPIOi^0,w,c
  3611   00405E  6E07               	movwf	??_runGPIO^0,c
  3612   004060  6A08               	clrf	(??_runGPIO+1)^0,c
  3613   004062  5021               	movf	runGPIO@numberOfStates^0,w,c
  3614   004064  1807               	xorwf	??_runGPIO^0,w,c
  3615   004066  E107               	bnz	u9821
  3616   004068  5022               	movf	(runGPIO@numberOfStates+1)^0,w,c
  3617   00406A  1808               	xorwf	(??_runGPIO+1)^0,w,c
  3618   00406C  A4D8               	btfss	status,2,c
  3619   00406E  EF3B  F020         	goto	u9821
  3620   004072  EF3D  F020         	goto	u9820
  3621   004076                     u9821:
  3622   004076  EF3F  F020         	goto	l372
  3623   00407A                     u9820:
  3624   00407A                     
  3625                           ;GPIO.c: 74:             GPIOi = 0;
  3626   00407A  0E00               	movlw	0
  3627   00407C  6E23               	movwf	runGPIO@GPIOi^0,c
  3628   00407E                     l372:
  3629                           
  3630                           ;GPIO.c: 66:     while(keepStateGPIO){
  3631   00407E  0100               	movlb	0	; () banked
  3632   004080  51FE               	movf	_keepStateGPIO& (0+255),w,b
  3633   004082  A4D8               	btfss	status,2,c
  3634   004084  EF46  F020         	goto	u9831
  3635   004088  EF48  F020         	goto	u9830
  3636   00408C                     u9831:
  3637   00408C  EFE0  F01F         	goto	l8030
  3638   004090                     u9830:
  3639   004090                     
  3640                           ; BSR set to: 0
  3641                           ;GPIO.c: 79:     LATDbits.LD2 = 1;
  3642   004090  848C               	bsf	140,2,c	;volatile
  3643                           
  3644                           ;GPIO.c: 80:     LATDbits.LD3 = 1;
  3645   004092  868C               	bsf	140,3,c	;volatile
  3646                           
  3647                           ;GPIO.c: 81:     LATCbits.LC4 = 1;
  3648   004094  888B               	bsf	139,4,c	;volatile
  3649                           
  3650                           ;GPIO.c: 82:     LATDbits.LD4 = 1;
  3651   004096  888C               	bsf	140,4,c	;volatile
  3652                           
  3653                           ;GPIO.c: 83:     LATDbits.LD5 = 1;
  3654   004098  8A8C               	bsf	140,5,c	;volatile
  3655                           
  3656                           ;GPIO.c: 84:     LATDbits.LD6 = 1;
  3657   00409A  8C8C               	bsf	140,6,c	;volatile
  3658                           
  3659                           ;GPIO.c: 85:     TMR1ON = 0;
  3660   00409C  90CD               	bcf	4045,0,c	;volatile
  3661                           
  3662                           ;GPIO.c: 86:     TMR1IE = 0;
  3663   00409E  909D               	bcf	3997,0,c	;volatile
  3664   0040A0                     
  3665                           ; BSR set to: 0
  3666                           ;GPIO.c: 87:     GPIOIE = 0;
  3667   0040A0  0E00               	movlw	0
  3668   0040A2  0101               	movlb	1	; () banked
  3669   0040A4  6F26               	movwf	_GPIOIE& (0+255),b
  3670   0040A6                     
  3671                           ; BSR set to: 1
  3672   0040A6  0012               	return		;funcret
  3673   0040A8                     __end_of_runGPIO:
  3674                           	callstack 0
  3675                           
  3676 ;; *************** function _LED5_Control *****************
  3677 ;; Defined at:
  3678 ;;		line 14 in file "GPIO.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  state           1    wreg     unsigned char 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  state           1    5[COMRAM] unsigned char 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;Total ram usage:        1 bytes
  3697 ;; Hardware stack levels used: 1
  3698 ;; Hardware stack levels required when called: 1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_runGPIO
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           	psect	text6
  3707   00530A                     __ptext6:
  3708                           	callstack 0
  3709   00530A                     _LED5_Control:
  3710                           	callstack 28
  3711                           
  3712                           ; BSR set to: 1
  3713                           ;incstack = 0
  3714                           ;LED5_Control@state stored from wreg
  3715   00530A  6E06               	movwf	LED5_Control@state^0,c
  3716   00530C  B006               	btfsc	LED5_Control@state^0,0,c
  3717   00530E  D002               	bra	u9635
  3718   005310  9A8C               	bcf	140,5,c	;volatile
  3719   005312  D001               	bra	u9636
  3720   005314                     u9635:
  3721   005314  8A8C               	bsf	140,5,c	;volatile
  3722   005316                     u9636:
  3723   005316  0012               	return		;funcret
  3724   005318                     __end_of_LED5_Control:
  3725                           	callstack 0
  3726                           
  3727 ;; *************** function _LED4_Control *****************
  3728 ;; Defined at:
  3729 ;;		line 13 in file "GPIO.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  state           1    wreg     unsigned char 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  state           1    5[COMRAM] unsigned char 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;Total ram usage:        1 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 1
  3750 ;; This function calls:
  3751 ;;		Nothing
  3752 ;; This function is called by:
  3753 ;;		_runGPIO
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text7
  3758   005318                     __ptext7:
  3759                           	callstack 0
  3760   005318                     _LED4_Control:
  3761                           	callstack 28
  3762                           
  3763                           ;incstack = 0
  3764                           ;LED4_Control@state stored from wreg
  3765   005318  6E06               	movwf	LED4_Control@state^0,c
  3766   00531A  B006               	btfsc	LED4_Control@state^0,0,c
  3767   00531C  D002               	bra	u9625
  3768   00531E  988C               	bcf	140,4,c	;volatile
  3769   005320  D001               	bra	u9626
  3770   005322                     u9625:
  3771   005322  888C               	bsf	140,4,c	;volatile
  3772   005324                     u9626:
  3773   005324  0012               	return		;funcret
  3774   005326                     __end_of_LED4_Control:
  3775                           	callstack 0
  3776                           
  3777 ;; *************** function _LED3_Control *****************
  3778 ;; Defined at:
  3779 ;;		line 12 in file "GPIO.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  state           1    wreg     unsigned char 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  state           1    5[COMRAM] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;Total ram usage:        1 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 1
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_runGPIO
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text8
  3808   005326                     __ptext8:
  3809                           	callstack 0
  3810   005326                     _LED3_Control:
  3811                           	callstack 28
  3812                           
  3813                           ;incstack = 0
  3814                           ;LED3_Control@state stored from wreg
  3815   005326  6E06               	movwf	LED3_Control@state^0,c
  3816   005328  B006               	btfsc	LED3_Control@state^0,0,c
  3817   00532A  D002               	bra	u9615
  3818   00532C  988B               	bcf	139,4,c	;volatile
  3819   00532E  D001               	bra	u9616
  3820   005330                     u9615:
  3821   005330  888B               	bsf	139,4,c	;volatile
  3822   005332                     u9616:
  3823   005332  0012               	return		;funcret
  3824   005334                     __end_of_LED3_Control:
  3825                           	callstack 0
  3826                           
  3827 ;; *************** function _LED2_Control *****************
  3828 ;; Defined at:
  3829 ;;		line 11 in file "GPIO.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  state           1    wreg     unsigned char 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  state           1    5[COMRAM] unsigned char 
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;Total ram usage:        1 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; Hardware stack levels required when called: 1
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_runGPIO
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text9
  3858   005334                     __ptext9:
  3859                           	callstack 0
  3860   005334                     _LED2_Control:
  3861                           	callstack 28
  3862                           
  3863                           ;incstack = 0
  3864                           ;LED2_Control@state stored from wreg
  3865   005334  6E06               	movwf	LED2_Control@state^0,c
  3866   005336  B006               	btfsc	LED2_Control@state^0,0,c
  3867   005338  D002               	bra	u9605
  3868   00533A  968C               	bcf	140,3,c	;volatile
  3869   00533C  D001               	bra	u9606
  3870   00533E                     u9605:
  3871   00533E  868C               	bsf	140,3,c	;volatile
  3872   005340                     u9606:
  3873   005340  0012               	return		;funcret
  3874   005342                     __end_of_LED2_Control:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function _LED1_Control *****************
  3878 ;; Defined at:
  3879 ;;		line 10 in file "GPIO.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  state           1    wreg     unsigned char 
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;  state           1    5[COMRAM] unsigned char 
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      void 
  3886 ;; Registers used:
  3887 ;;		wreg
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;Total ram usage:        1 bytes
  3898 ;; Hardware stack levels used: 1
  3899 ;; Hardware stack levels required when called: 1
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_runGPIO
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text10
  3908   005342                     __ptext10:
  3909                           	callstack 0
  3910   005342                     _LED1_Control:
  3911                           	callstack 28
  3912                           
  3913                           ;incstack = 0
  3914                           ;LED1_Control@state stored from wreg
  3915   005342  6E06               	movwf	LED1_Control@state^0,c
  3916   005344  B006               	btfsc	LED1_Control@state^0,0,c
  3917   005346  D002               	bra	u9595
  3918   005348  948C               	bcf	140,2,c	;volatile
  3919   00534A  D001               	bra	u9596
  3920   00534C                     u9595:
  3921   00534C  848C               	bsf	140,2,c	;volatile
  3922   00534E                     u9596:
  3923   00534E  0012               	return		;funcret
  3924   005350                     __end_of_LED1_Control:
  3925                           	callstack 0
  3926                           
  3927 ;; *************** function _LED6_Control *****************
  3928 ;; Defined at:
  3929 ;;		line 15 in file "GPIO.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  state           1    wreg     unsigned char 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;  state           1    5[COMRAM] unsigned char 
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;Total ram usage:        1 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; Hardware stack levels required when called: 1
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_runGPIO
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text11
  3958   005350                     __ptext11:
  3959                           	callstack 0
  3960   005350                     _LED6_Control:
  3961                           	callstack 28
  3962                           
  3963                           ;incstack = 0
  3964                           ;LED6_Control@state stored from wreg
  3965   005350  6E06               	movwf	LED6_Control@state^0,c
  3966   005352  B006               	btfsc	LED6_Control@state^0,0,c
  3967   005354  D002               	bra	u9645
  3968   005356  9C8C               	bcf	140,6,c	;volatile
  3969   005358  D001               	bra	u9646
  3970   00535A                     u9645:
  3971   00535A  8C8C               	bsf	140,6,c	;volatile
  3972   00535C                     u9646:
  3973   00535C  0012               	return		;funcret
  3974   00535E                     __end_of_LED6_Control:
  3975                           	callstack 0
  3976                           
  3977 ;; *************** function _runGAME *****************
  3978 ;; Defined at:
  3979 ;;		line 10 in file "GAME.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;  approxText     25   17[BANK1 ] unsigned char [25]
  3984 ;;  text           17    0[BANK1 ] unsigned char [17]
  3985 ;;  randomNumber    2   48[BANK1 ] unsigned short 
  3986 ;;  pot1            2   46[BANK1 ] unsigned short 
  3987 ;;  GAMEdivider     1   45[BANK1 ] unsigned char 
  3988 ;;  GAMEround       1   44[BANK1 ] unsigned char 
  3989 ;;  GAMEpart        1   43[BANK1 ] unsigned char 
  3990 ;;  keepStateGAM    1   42[BANK1 ] unsigned char 
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;Total ram usage:       52 bytes
  4005 ;; Hardware stack levels used: 1
  4006 ;; Hardware stack levels required when called: 9
  4007 ;; This function calls:
  4008 ;;		_LCD_ShowString
  4009 ;;		___awdiv
  4010 ;;		___lbdiv
  4011 ;;		_rand
  4012 ;;		_sprintf
  4013 ;; This function is called by:
  4014 ;;		_main
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text12
  4019   001E9E                     __ptext12:
  4020                           	callstack 0
  4021   001E9E                     _runGAME:
  4022                           	callstack 21
  4023   001E9E                     
  4024                           ;GAME.c: 12:     TRISDbits.RD2 = 0;
  4025   001E9E  9495               	bcf	149,2,c	;volatile
  4026                           
  4027                           ;GAME.c: 13:     TRISDbits.RD3 = 0;
  4028   001EA0  9695               	bcf	149,3,c	;volatile
  4029                           
  4030                           ;GAME.c: 14:     TRISCbits.RC4 = 0;
  4031   001EA2  9894               	bcf	148,4,c	;volatile
  4032                           
  4033                           ;GAME.c: 15:     TRISDbits.RD4 = 0;
  4034   001EA4  9895               	bcf	149,4,c	;volatile
  4035                           
  4036                           ;GAME.c: 16:     TRISDbits.RD5 = 0;
  4037   001EA6  9A95               	bcf	149,5,c	;volatile
  4038                           
  4039                           ;GAME.c: 17:     TRISDbits.RD6 = 0;
  4040   001EA8  9C95               	bcf	149,6,c	;volatile
  4041                           
  4042                           ;GAME.c: 18:     ANSELDbits.ANSD2 = 0;
  4043   001EAA  010F               	movlb	15	; () banked
  4044   001EAC  953B               	bcf	59,2,b	;volatile
  4045                           
  4046                           ;GAME.c: 19:     ANSELDbits.ANSD3 = 0;
  4047   001EAE  973B               	bcf	59,3,b	;volatile
  4048                           
  4049                           ;GAME.c: 20:     ANSELCbits.ANSC4 = 0;
  4050   001EB0  993A               	bcf	58,4,b	;volatile
  4051                           
  4052                           ;GAME.c: 21:     ANSELDbits.ANSD4 = 0;
  4053   001EB2  993B               	bcf	59,4,b	;volatile
  4054                           
  4055                           ;GAME.c: 22:     ANSELDbits.ANSD5 = 0;
  4056   001EB4  9B3B               	bcf	59,5,b	;volatile
  4057                           
  4058                           ;GAME.c: 23:     ANSELDbits.ANSD6 = 0;
  4059   001EB6  9D3B               	bcf	59,6,b	;volatile
  4060                           
  4061                           ;GAME.c: 24:     LATDbits.LD2 = 1;
  4062   001EB8  848C               	bsf	140,2,c	;volatile
  4063                           
  4064                           ;GAME.c: 25:     LATDbits.LD3 = 1;
  4065   001EBA  868C               	bsf	140,3,c	;volatile
  4066                           
  4067                           ;GAME.c: 26:     LATCbits.LC4 = 1;
  4068   001EBC  888B               	bsf	139,4,c	;volatile
  4069                           
  4070                           ;GAME.c: 27:     LATDbits.LD4 = 1;
  4071   001EBE  888C               	bsf	140,4,c	;volatile
  4072                           
  4073                           ;GAME.c: 28:     LATDbits.LD5 = 1;
  4074   001EC0  8A8C               	bsf	140,5,c	;volatile
  4075                           
  4076                           ;GAME.c: 29:     LATDbits.LD6 = 1;
  4077   001EC2  8C8C               	bsf	140,6,c	;volatile
  4078                           
  4079                           ;GAME.c: 32:     TRISAbits.RA2 = 1;
  4080   001EC4  8492               	bsf	146,2,c	;volatile
  4081                           
  4082                           ;GAME.c: 33:     ANSELAbits.ANSA2 = 0;
  4083   001EC6  9538               	bcf	56,2,b	;volatile
  4084                           
  4085                           ;GAME.c: 36:     ANSELAbits.ANSA5 = 1;
  4086   001EC8  8B38               	bsf	56,5,b	;volatile
  4087                           
  4088                           ;GAME.c: 37:     ADCON2bits.ADFM = 1;
  4089   001ECA  8EC0               	bsf	192,7,c	;volatile
  4090   001ECC                     
  4091                           ; BSR set to: 15
  4092                           ;GAME.c: 38:     ADCON2bits.ADCS = 0b110;
  4093   001ECC  50C0               	movf	192,w,c	;volatile
  4094   001ECE  0BF8               	andlw	-8
  4095   001ED0  0906               	iorlw	6
  4096   001ED2  6EC0               	movwf	192,c	;volatile
  4097                           
  4098                           ;GAME.c: 39:     ADCON2bits.ACQT = 0b110;
  4099   001ED4  50C0               	movf	192,w,c	;volatile
  4100   001ED6  0BC7               	andlw	-57
  4101   001ED8  0930               	iorlw	48
  4102   001EDA  6EC0               	movwf	192,c	;volatile
  4103   001EDC                     
  4104                           ; BSR set to: 15
  4105                           ;GAME.c: 40:     ADCON0bits.ADON = 1;
  4106   001EDC  80C2               	bsf	194,0,c	;volatile
  4107   001EDE                     
  4108                           ; BSR set to: 15
  4109                           ;GAME.c: 42:     uint16_t pot1;;GAME.c: 43:     char text[17] = "";
  4110   001EDE  EE21  F09B         	lfsr	2,runGAME@text
  4111   001EE2  0E10               	movlw	16
  4112   001EE4                     u10161:
  4113   001EE4  6ADE               	clrf	postinc2,c
  4114   001EE6  06E8               	decf	wreg,f,c
  4115   001EE8  E2FD               	bc	u10161
  4116   001EEA                     
  4117                           ; BSR set to: 15
  4118                           ;GAME.c: 44:     uint8_t keepStateGAME;;GAME.c: 48:     T1CONbits.TMR1CS = 0b00;
  4119   001EEA  0E3F               	movlw	-193
  4120   001EEC  16CD               	andwf	205,f,c	;volatile
  4121   001EEE                     
  4122                           ; BSR set to: 15
  4123                           ;GAME.c: 49:     T1CONbits.T1CKPS = 0b11;
  4124   001EEE  0E30               	movlw	48
  4125   001EF0  12CD               	iorwf	205,f,c	;volatile
  4126   001EF2                     
  4127                           ; BSR set to: 15
  4128                           ;GAME.c: 50:     TMR1IE = 1;
  4129   001EF2  809D               	bsf	3997,0,c	;volatile
  4130   001EF4                     
  4131                           ; BSR set to: 15
  4132                           ;GAME.c: 51:     PEIE = 1;
  4133   001EF4  8CF2               	bsf	4082,6,c	;volatile
  4134   001EF6                     
  4135                           ; BSR set to: 15
  4136                           ;GAME.c: 52:     GIE = 1;
  4137   001EF6  8EF2               	bsf	4082,7,c	;volatile
  4138   001EF8                     
  4139                           ; BSR set to: 15
  4140                           ;GAME.c: 53:     GAMEIE = 1;
  4141   001EF8  0E01               	movlw	1
  4142   001EFA  0101               	movlb	1	; () banked
  4143   001EFC  6F24               	movwf	_GAMEIE& (0+255),b
  4144   001EFE                     
  4145                           ; BSR set to: 1
  4146                           ;GAME.c: 54:     TMR1IF = 1;
  4147   001EFE  809E               	bsf	3998,0,c	;volatile
  4148   001F00                     
  4149                           ; BSR set to: 1
  4150                           ;GAME.c: 55:     TMR1 = 0xFFFF - (62500 - 1);
  4151   001F00  0E0B               	movlw	11
  4152   001F02  6ECF               	movwf	207,c	;volatile
  4153   001F04  0EDC               	movlw	220
  4154   001F06  6ECE               	movwf	206,c	;volatile
  4155   001F08                     
  4156                           ; BSR set to: 1
  4157                           ;GAME.c: 56:     TMR1ON = 1;
  4158   001F08  80CD               	bsf	4045,0,c	;volatile
  4159   001F0A                     
  4160                           ; BSR set to: 1
  4161                           ;GAME.c: 58:     GAMEtime = 0;
  4162   001F0A  0E00               	movlw	0
  4163   001F0C  6F23               	movwf	_GAMEtime& (0+255),b
  4164   001F0E                     
  4165                           ; BSR set to: 1
  4166                           ;GAME.c: 59:     uint8_t GAMEround = 1;
  4167   001F0E  0E01               	movlw	1
  4168   001F10  6FC7               	movwf	runGAME@GAMEround& (0+255),b
  4169   001F12                     
  4170                           ; BSR set to: 1
  4171                           ;GAME.c: 62:     char approxText[25] = "";
  4172   001F12  EE21  F0AC         	lfsr	2,runGAME@approxText
  4173   001F16  0E18               	movlw	24
  4174   001F18                     u10171:
  4175   001F18  6ADE               	clrf	postinc2,c
  4176   001F1A  06E8               	decf	wreg,f,c
  4177   001F1C  E2FD               	bc	u10171
  4178   001F1E                     
  4179                           ; BSR set to: 1
  4180                           ;GAME.c: 65:     uint16_t randomNumber;;GAME.c: 66:     randomNumber = (uint16_t)(2 + ra
      +                          nd() / ((0x7fff) / (1023 - 2 + 1) + 1));
  4181   001F1E  EC97  F026         	call	_rand
  4182   001F22  C012  F018         	movff	?_rand,___awdiv@dividend
  4183   001F26  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  4184   001F2A  0E00               	movlw	0
  4185   001F2C  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  4186   001F2E  0E21               	movlw	33
  4187   001F30  6E1A               	movwf	___awdiv@divisor^0,c
  4188   001F32  EC4F  F024         	call	___awdiv	;wreg free
  4189   001F36  0E02               	movlw	2
  4190   001F38  2418               	addwf	?___awdiv^0,w,c
  4191   001F3A  0101               	movlb	1	; () banked
  4192   001F3C  6FCB               	movwf	runGAME@randomNumber& (0+255),b
  4193   001F3E  0E00               	movlw	0
  4194   001F40  2019               	addwfc	(?___awdiv+1)^0,w,c
  4195   001F42  6FCC               	movwf	(runGAME@randomNumber+1)& (0+255),b
  4196   001F44                     
  4197                           ; BSR set to: 1
  4198                           ;GAME.c: 67:     sprintf(approxText, "%u                ", randomNumber);
  4199   001F44  0EAC               	movlw	low runGAME@approxText
  4200   001F46  0100               	movlb	0	; () banked
  4201   001F48  6FCE               	movwf	sprintf@s& (0+255),b
  4202   001F4A  0E01               	movlw	high runGAME@approxText
  4203   001F4C  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4204   001F4E  0E33               	movlw	low STR_36
  4205   001F50  6FD0               	movwf	sprintf@fmt& (0+255),b
  4206   001F52  0EFE               	movlw	high STR_36
  4207   001F54  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4208   001F56  C1CB  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  4209   001F5A  C1CC  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  4210   001F5E  EC29  F028         	call	_sprintf	;wreg free
  4211   001F62                     
  4212                           ;GAME.c: 68:     LCD_ShowString((char)1, approxText);
  4213   001F62  0EAC               	movlw	low runGAME@approxText
  4214   001F64  6E07               	movwf	LCD_ShowString@textData^0,c
  4215   001F66  0E01               	movlw	high runGAME@approxText
  4216   001F68  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4217   001F6A  0E01               	movlw	1
  4218   001F6C  ECB1  F024         	call	_LCD_ShowString
  4219   001F70                     
  4220                           ;GAME.c: 69:     keepStateGAME = 1;
  4221   001F70  0E01               	movlw	1
  4222   001F72  0101               	movlb	1	; () banked
  4223   001F74  6FC5               	movwf	runGAME@keepStateGAME& (0+255),b
  4224                           
  4225                           ;GAME.c: 72:     while(keepStateGAME){
  4226   001F76  EF33  F011         	goto	l8382
  4227   001F7A                     l8318:
  4228                           
  4229                           ; BSR set to: 1
  4230                           ;GAME.c: 74:         ADCON0bits.CHS = 4;
  4231   001F7A  50C2               	movf	194,w,c	;volatile
  4232   001F7C  0B83               	andlw	-125
  4233   001F7E  0910               	iorlw	16
  4234   001F80  6EC2               	movwf	194,c	;volatile
  4235   001F82                     
  4236                           ; BSR set to: 1
  4237                           ;GAME.c: 75:         GODONE = 1;
  4238   001F82  82C2               	bsf	4034,1,c	;volatile
  4239   001F84                     l664:
  4240   001F84  B2C2               	btfsc	4034,1,c	;volatile
  4241   001F86  EFC7  F00F         	goto	u10181
  4242   001F8A  EFC9  F00F         	goto	u10180
  4243   001F8E                     u10181:
  4244   001F8E  EFC2  F00F         	goto	l664
  4245   001F92                     u10180:
  4246   001F92                     
  4247                           ;GAME.c: 77:         pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  4248   001F92  50C3               	movf	195,w,c	;volatile
  4249   001F94  CFC4 F0E7          	movff	4036,??_runGAME	;volatile
  4250   001F98  0100               	movlb	0	; () banked
  4251   001F9A  6BE8               	clrf	(??_runGAME+1)& (0+255),b
  4252   001F9C  C0E7  F0E8         	movff	??_runGAME,??_runGAME+1
  4253   001FA0  6BE7               	clrf	??_runGAME& (0+255),b
  4254   001FA2  11E7               	iorwf	??_runGAME& (0+255),w,b
  4255   001FA4  0101               	movlb	1	; () banked
  4256   001FA6  6FC9               	movwf	runGAME@pot1& (0+255),b
  4257   001FA8  0100               	movlb	0	; () banked
  4258   001FAA  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  4259   001FAC  0101               	movlb	1	; () banked
  4260   001FAE  6FCA               	movwf	(runGAME@pot1+1)& (0+255),b
  4261   001FB0                     
  4262                           ; BSR set to: 1
  4263                           ;GAME.c: 79:         sprintf(text, "%hu             ", pot1);
  4264   001FB0  0E9B               	movlw	low runGAME@text
  4265   001FB2  0100               	movlb	0	; () banked
  4266   001FB4  6FCE               	movwf	sprintf@s& (0+255),b
  4267   001FB6  0E01               	movlw	high runGAME@text
  4268   001FB8  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4269   001FBA  0E6B               	movlw	low STR_37
  4270   001FBC  6FD0               	movwf	sprintf@fmt& (0+255),b
  4271   001FBE  0EFE               	movlw	high STR_37
  4272   001FC0  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4273   001FC2  C1C9  F0D2         	movff	runGAME@pot1,?_sprintf+4
  4274   001FC6  C1CA  F0D3         	movff	runGAME@pot1+1,?_sprintf+5
  4275   001FCA  EC29  F028         	call	_sprintf	;wreg free
  4276   001FCE                     
  4277                           ;GAME.c: 80:         LCD_ShowString((char)2, text);
  4278   001FCE  0E9B               	movlw	low runGAME@text
  4279   001FD0  6E07               	movwf	LCD_ShowString@textData^0,c
  4280   001FD2  0E01               	movlw	high runGAME@text
  4281   001FD4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4282   001FD6  0E02               	movlw	2
  4283   001FD8  ECB1  F024         	call	_LCD_ShowString
  4284                           
  4285                           ;GAME.c: 82:         switch(GAMEround){
  4286   001FDC  EF04  F010         	goto	l8340
  4287   001FE0                     l8328:
  4288                           
  4289                           ; BSR set to: 1
  4290                           ;GAME.c: 84:                 GAMEdivider = 26;
  4291   001FE0  0E1A               	movlw	26
  4292   001FE2  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4293                           
  4294                           ;GAME.c: 85:                 break;
  4295   001FE4  EF18  F010         	goto	l8342
  4296   001FE8                     l8330:
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;GAME.c: 87:                 GAMEdivider = 24;
  4300   001FE8  0E18               	movlw	24
  4301   001FEA  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4302                           
  4303                           ;GAME.c: 88:                 break;
  4304   001FEC  EF18  F010         	goto	l8342
  4305   001FF0                     l8332:
  4306                           
  4307                           ; BSR set to: 1
  4308                           ;GAME.c: 90:                 GAMEdivider = 18;
  4309   001FF0  0E12               	movlw	18
  4310   001FF2  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4311                           
  4312                           ;GAME.c: 91:                 break;
  4313   001FF4  EF18  F010         	goto	l8342
  4314   001FF8                     l8334:
  4315                           
  4316                           ; BSR set to: 1
  4317                           ;GAME.c: 93:                 GAMEdivider = 16;
  4318   001FF8  0E10               	movlw	16
  4319   001FFA  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4320                           
  4321                           ;GAME.c: 94:                 break;
  4322   001FFC  EF18  F010         	goto	l8342
  4323   002000                     l8336:
  4324                           
  4325                           ; BSR set to: 1
  4326                           ;GAME.c: 96:                 GAMEdivider = 15;
  4327   002000  0E0F               	movlw	15
  4328   002002  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4329                           
  4330                           ;GAME.c: 97:                 break;
  4331   002004  EF18  F010         	goto	l8342
  4332   002008                     l8340:
  4333   002008  0101               	movlb	1	; () banked
  4334   00200A  51C7               	movf	runGAME@GAMEround& (0+255),w,b
  4335                           
  4336                           ; Switch size 1, requested type "simple"
  4337                           ; Number of cases is 4, Range of values is 1 to 4
  4338                           ; switch strategies available:
  4339                           ; Name         Instructions Cycles
  4340                           ; simple_byte           13     7 (average)
  4341                           ;	Chosen strategy is simple_byte
  4342   00200C  0A01               	xorlw	1	; case 1
  4343   00200E  B4D8               	btfsc	status,2,c
  4344   002010  EFF0  F00F         	goto	l8328
  4345   002014  0A03               	xorlw	3	; case 2
  4346   002016  B4D8               	btfsc	status,2,c
  4347   002018  EFF4  F00F         	goto	l8330
  4348   00201C  0A01               	xorlw	1	; case 3
  4349   00201E  B4D8               	btfsc	status,2,c
  4350   002020  EFF8  F00F         	goto	l8332
  4351   002024  0A07               	xorlw	7	; case 4
  4352   002026  B4D8               	btfsc	status,2,c
  4353   002028  EFFC  F00F         	goto	l8334
  4354   00202C  EF00  F010         	goto	l8336
  4355   002030                     l8342:
  4356                           
  4357                           ; BSR set to: 1
  4358                           ;GAME.c: 100:         GAMEpart = GAMEtime/GAMEdivider;
  4359   002030  C1C8  F006         	movff	runGAME@GAMEdivider,___lbdiv@divisor
  4360   002034  5123               	movf	_GAMEtime& (0+255),w,b
  4361   002036  EC35  F027         	call	___lbdiv
  4362   00203A  0101               	movlb	1	; () banked
  4363   00203C  6FC6               	movwf	runGAME@GAMEpart& (0+255),b
  4364   00203E                     
  4365                           ; BSR set to: 1
  4366                           ;GAME.c: 102:         if(PORTAbits.RA2){
  4367   00203E  A480               	btfss	128,2,c	;volatile
  4368   002040  EF24  F010         	goto	u10191
  4369   002044  EF26  F010         	goto	u10190
  4370   002048                     u10191:
  4371   002048  EF0F  F011         	goto	l8380
  4372   00204C                     u10190:
  4373   00204C                     
  4374                           ; BSR set to: 1
  4375                           ;GAME.c: 103:             _delay((unsigned long)((50)*(32E6/4000.0)));
  4376   00204C  0E03               	movlw	3
  4377   00204E  0100               	movlb	0	; () banked
  4378   002050  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4379   002052  0E08               	movlw	8
  4380   002054  6FE7               	movwf	??_runGAME& (0+255),b
  4381   002056  0E77               	movlw	119
  4382   002058                     u10507:
  4383   002058  2EE8               	decfsz	wreg,f,c
  4384   00205A  D7FE               	bra	u10507
  4385   00205C  2FE7               	decfsz	??_runGAME& (0+255),f,b
  4386   00205E  D7FC               	bra	u10507
  4387   002060  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  4388   002062  D7FA               	bra	u10507
  4389   002064                     
  4390                           ;GAME.c: 104:             if(PORTAbits.RA2){
  4391   002064  A480               	btfss	128,2,c	;volatile
  4392   002066  EF37  F010         	goto	u10201
  4393   00206A  EF39  F010         	goto	u10200
  4394   00206E                     u10201:
  4395   00206E  EF0F  F011         	goto	l8380
  4396   002072                     u10200:
  4397   002072                     l676:
  4398   002072  B480               	btfsc	128,2,c	;volatile
  4399   002074  EF3E  F010         	goto	u10211
  4400   002078  EF40  F010         	goto	u10210
  4401   00207C                     u10211:
  4402   00207C  EF39  F010         	goto	l676
  4403   002080                     u10210:
  4404   002080                     
  4405                           ;GAME.c: 106:                 GAMEpart = 7;
  4406   002080  0E07               	movlw	7
  4407   002082  0101               	movlb	1	; () banked
  4408   002084  6FC6               	movwf	runGAME@GAMEpart& (0+255),b
  4409   002086  EF0F  F011         	goto	l8380
  4410   00208A                     l680:
  4411                           
  4412                           ; BSR set to: 1
  4413                           ;GAME.c: 112:                 LATDbits.LD2 = 1;
  4414   00208A  848C               	bsf	140,2,c	;volatile
  4415                           
  4416                           ;GAME.c: 113:                 LATDbits.LD3 = 1;
  4417   00208C  868C               	bsf	140,3,c	;volatile
  4418                           
  4419                           ;GAME.c: 114:                 LATCbits.LC4 = 1;
  4420   00208E  888B               	bsf	139,4,c	;volatile
  4421                           
  4422                           ;GAME.c: 115:                 LATDbits.LD4 = 1;
  4423   002090  888C               	bsf	140,4,c	;volatile
  4424                           
  4425                           ;GAME.c: 116:                 LATDbits.LD5 = 1;
  4426   002092  8A8C               	bsf	140,5,c	;volatile
  4427                           
  4428                           ;GAME.c: 117:                 LATDbits.LD6 = 1;
  4429   002094  8C8C               	bsf	140,6,c	;volatile
  4430                           
  4431                           ;GAME.c: 118:                 break;
  4432   002096  EF33  F011         	goto	l8382
  4433   00209A                     l682:
  4434                           
  4435                           ; BSR set to: 1
  4436                           ;GAME.c: 120:                 LATDbits.LD2 = 0;
  4437   00209A  948C               	bcf	140,2,c	;volatile
  4438                           
  4439                           ;GAME.c: 121:                 LATDbits.LD3 = 1;
  4440   00209C  868C               	bsf	140,3,c	;volatile
  4441                           
  4442                           ;GAME.c: 122:                 LATCbits.LC4 = 1;
  4443   00209E  888B               	bsf	139,4,c	;volatile
  4444                           
  4445                           ;GAME.c: 123:                 LATDbits.LD4 = 1;
  4446   0020A0  888C               	bsf	140,4,c	;volatile
  4447                           
  4448                           ;GAME.c: 124:                 LATDbits.LD5 = 1;
  4449   0020A2  8A8C               	bsf	140,5,c	;volatile
  4450                           
  4451                           ;GAME.c: 125:                 LATDbits.LD6 = 1;
  4452   0020A4  8C8C               	bsf	140,6,c	;volatile
  4453                           
  4454                           ;GAME.c: 126:                 break;
  4455   0020A6  EF33  F011         	goto	l8382
  4456   0020AA                     l683:
  4457                           
  4458                           ; BSR set to: 1
  4459                           ;GAME.c: 128:                 LATDbits.LD2 = 0;
  4460   0020AA  948C               	bcf	140,2,c	;volatile
  4461                           
  4462                           ;GAME.c: 129:                 LATDbits.LD3 = 0;
  4463   0020AC  968C               	bcf	140,3,c	;volatile
  4464                           
  4465                           ;GAME.c: 130:                 LATCbits.LC4 = 1;
  4466   0020AE  888B               	bsf	139,4,c	;volatile
  4467                           
  4468                           ;GAME.c: 131:                 LATDbits.LD4 = 1;
  4469   0020B0  888C               	bsf	140,4,c	;volatile
  4470                           
  4471                           ;GAME.c: 132:                 LATDbits.LD5 = 1;
  4472   0020B2  8A8C               	bsf	140,5,c	;volatile
  4473                           
  4474                           ;GAME.c: 133:                 LATDbits.LD6 = 1;
  4475   0020B4  8C8C               	bsf	140,6,c	;volatile
  4476                           
  4477                           ;GAME.c: 134:                 break;
  4478   0020B6  EF33  F011         	goto	l8382
  4479   0020BA                     l684:
  4480                           
  4481                           ; BSR set to: 1
  4482                           ;GAME.c: 136:                 LATDbits.LD2 = 0;
  4483   0020BA  948C               	bcf	140,2,c	;volatile
  4484                           
  4485                           ;GAME.c: 137:                 LATDbits.LD3 = 0;
  4486   0020BC  968C               	bcf	140,3,c	;volatile
  4487                           
  4488                           ;GAME.c: 138:                 LATCbits.LC4 = 0;
  4489   0020BE  988B               	bcf	139,4,c	;volatile
  4490                           
  4491                           ;GAME.c: 139:                 LATDbits.LD4 = 1;
  4492   0020C0  888C               	bsf	140,4,c	;volatile
  4493                           
  4494                           ;GAME.c: 140:                 LATDbits.LD5 = 1;
  4495   0020C2  8A8C               	bsf	140,5,c	;volatile
  4496                           
  4497                           ;GAME.c: 141:                 LATDbits.LD6 = 1;
  4498   0020C4  8C8C               	bsf	140,6,c	;volatile
  4499                           
  4500                           ;GAME.c: 142:                 break;
  4501   0020C6  EF33  F011         	goto	l8382
  4502   0020CA                     l685:
  4503                           
  4504                           ; BSR set to: 1
  4505                           ;GAME.c: 144:                 LATDbits.LD2 = 0;
  4506   0020CA  948C               	bcf	140,2,c	;volatile
  4507                           
  4508                           ;GAME.c: 145:                 LATDbits.LD3 = 0;
  4509   0020CC  968C               	bcf	140,3,c	;volatile
  4510                           
  4511                           ;GAME.c: 146:                 LATCbits.LC4 = 0;
  4512   0020CE  988B               	bcf	139,4,c	;volatile
  4513                           
  4514                           ;GAME.c: 147:                 LATDbits.LD4 = 0;
  4515   0020D0  988C               	bcf	140,4,c	;volatile
  4516                           
  4517                           ;GAME.c: 148:                 LATDbits.LD5 = 1;
  4518   0020D2  8A8C               	bsf	140,5,c	;volatile
  4519                           
  4520                           ;GAME.c: 149:                 LATDbits.LD6 = 1;
  4521   0020D4  8C8C               	bsf	140,6,c	;volatile
  4522                           
  4523                           ;GAME.c: 150:                 break;
  4524   0020D6  EF33  F011         	goto	l8382
  4525   0020DA                     l686:
  4526                           
  4527                           ; BSR set to: 1
  4528                           ;GAME.c: 152:                 LATDbits.LD2 = 0;
  4529   0020DA  948C               	bcf	140,2,c	;volatile
  4530                           
  4531                           ;GAME.c: 153:                 LATDbits.LD3 = 0;
  4532   0020DC  968C               	bcf	140,3,c	;volatile
  4533                           
  4534                           ;GAME.c: 154:                 LATCbits.LC4 = 0;
  4535   0020DE  988B               	bcf	139,4,c	;volatile
  4536                           
  4537                           ;GAME.c: 155:                 LATDbits.LD4 = 0;
  4538   0020E0  988C               	bcf	140,4,c	;volatile
  4539                           
  4540                           ;GAME.c: 156:                 LATDbits.LD5 = 0;
  4541   0020E2  9A8C               	bcf	140,5,c	;volatile
  4542                           
  4543                           ;GAME.c: 157:                 LATDbits.LD6 = 1;
  4544   0020E4  8C8C               	bsf	140,6,c	;volatile
  4545                           
  4546                           ;GAME.c: 158:                 break;
  4547   0020E6  EF33  F011         	goto	l8382
  4548   0020EA                     l687:
  4549                           
  4550                           ; BSR set to: 1
  4551                           ;GAME.c: 160:                 LATDbits.LD2 = 0;
  4552   0020EA  948C               	bcf	140,2,c	;volatile
  4553                           
  4554                           ;GAME.c: 161:                 LATDbits.LD3 = 0;
  4555   0020EC  968C               	bcf	140,3,c	;volatile
  4556                           
  4557                           ;GAME.c: 162:                 LATCbits.LC4 = 0;
  4558   0020EE  988B               	bcf	139,4,c	;volatile
  4559                           
  4560                           ;GAME.c: 163:                 LATDbits.LD4 = 0;
  4561   0020F0  988C               	bcf	140,4,c	;volatile
  4562                           
  4563                           ;GAME.c: 164:                 LATDbits.LD5 = 0;
  4564   0020F2  9A8C               	bcf	140,5,c	;volatile
  4565                           
  4566                           ;GAME.c: 165:                 LATDbits.LD6 = 0;
  4567   0020F4  9C8C               	bcf	140,6,c	;volatile
  4568                           
  4569                           ;GAME.c: 166:                 break;
  4570   0020F6  EF33  F011         	goto	l8382
  4571   0020FA                     l8354:
  4572                           
  4573                           ; BSR set to: 1
  4574                           ;GAME.c: 168:                 GAMEtime = 0;
  4575   0020FA  0E00               	movlw	0
  4576   0020FC  6F23               	movwf	_GAMEtime& (0+255),b
  4577   0020FE                     
  4578                           ; BSR set to: 1
  4579                           ;GAME.c: 169:                 if(pot1 >= randomNumber - 2 && pot1 <= randomNumber + 2){
  4580   0020FE  0EFE               	movlw	254
  4581   002100  25CB               	addwf	runGAME@randomNumber& (0+255),w,b
  4582   002102  0100               	movlb	0	; () banked
  4583   002104  6FE7               	movwf	??_runGAME& (0+255),b
  4584   002106  0EFF               	movlw	255
  4585   002108  0101               	movlb	1	; () banked
  4586   00210A  21CC               	addwfc	(runGAME@randomNumber+1)& (0+255),w,b
  4587   00210C  0100               	movlb	0	; () banked
  4588   00210E  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4589   002110  51E7               	movf	??_runGAME& (0+255),w,b
  4590   002112  0101               	movlb	1	; () banked
  4591   002114  5DC9               	subwf	runGAME@pot1& (0+255),w,b
  4592   002116  0100               	movlb	0	; () banked
  4593   002118  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  4594   00211A  0101               	movlb	1	; () banked
  4595   00211C  59CA               	subwfb	(runGAME@pot1+1)& (0+255),w,b
  4596   00211E  A0D8               	btfss	status,0,c
  4597   002120  EF94  F010         	goto	u10221
  4598   002124  EF96  F010         	goto	u10220
  4599   002128                     u10221:
  4600   002128  EFDB  F010         	goto	l689
  4601   00212C                     u10220:
  4602   00212C                     
  4603                           ; BSR set to: 1
  4604   00212C  0E02               	movlw	2
  4605   00212E  25CB               	addwf	runGAME@randomNumber& (0+255),w,b
  4606   002130  0100               	movlb	0	; () banked
  4607   002132  6FE7               	movwf	??_runGAME& (0+255),b
  4608   002134  0E00               	movlw	0
  4609   002136  0101               	movlb	1	; () banked
  4610   002138  21CC               	addwfc	(runGAME@randomNumber+1)& (0+255),w,b
  4611   00213A  0100               	movlb	0	; () banked
  4612   00213C  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4613   00213E  0101               	movlb	1	; () banked
  4614   002140  51C9               	movf	runGAME@pot1& (0+255),w,b
  4615   002142  0100               	movlb	0	; () banked
  4616   002144  5DE7               	subwf	??_runGAME& (0+255),w,b
  4617   002146  0101               	movlb	1	; () banked
  4618   002148  51CA               	movf	(runGAME@pot1+1)& (0+255),w,b
  4619   00214A  0100               	movlb	0	; () banked
  4620   00214C  59E8               	subwfb	(??_runGAME+1)& (0+255),w,b
  4621   00214E  A0D8               	btfss	status,0,c
  4622   002150  EFAC  F010         	goto	u10231
  4623   002154  EFAE  F010         	goto	u10230
  4624   002158                     u10231:
  4625   002158  EFDB  F010         	goto	l689
  4626   00215C                     u10230:
  4627   00215C                     
  4628                           ; BSR set to: 0
  4629                           ;GAME.c: 170:                     GAMEround += 1;
  4630   00215C  0101               	movlb	1	; () banked
  4631   00215E  2BC7               	incf	runGAME@GAMEround& (0+255),f,b
  4632   002160                     
  4633                           ; BSR set to: 1
  4634                           ;GAME.c: 171:                     randomNumber = (uint16_t)(2 + rand() / ((0x7fff) / (10
      +                          23 - 2 + 1) + 1));
  4635   002160  EC97  F026         	call	_rand	;wreg free
  4636   002164  C012  F018         	movff	?_rand,___awdiv@dividend
  4637   002168  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  4638   00216C  0E00               	movlw	0
  4639   00216E  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  4640   002170  0E21               	movlw	33
  4641   002172  6E1A               	movwf	___awdiv@divisor^0,c
  4642   002174  EC4F  F024         	call	___awdiv	;wreg free
  4643   002178  0E02               	movlw	2
  4644   00217A  2418               	addwf	?___awdiv^0,w,c
  4645   00217C  0101               	movlb	1	; () banked
  4646   00217E  6FCB               	movwf	runGAME@randomNumber& (0+255),b
  4647   002180  0E00               	movlw	0
  4648   002182  2019               	addwfc	(?___awdiv+1)^0,w,c
  4649   002184  6FCC               	movwf	(runGAME@randomNumber+1)& (0+255),b
  4650   002186                     
  4651                           ; BSR set to: 1
  4652                           ;GAME.c: 172:                     sprintf(approxText, "%u                ", randomNumber
      +                          );
  4653   002186  0EAC               	movlw	low runGAME@approxText
  4654   002188  0100               	movlb	0	; () banked
  4655   00218A  6FCE               	movwf	sprintf@s& (0+255),b
  4656   00218C  0E01               	movlw	high runGAME@approxText
  4657   00218E  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4658   002190  0E33               	movlw	low STR_36
  4659   002192  6FD0               	movwf	sprintf@fmt& (0+255),b
  4660   002194  0EFE               	movlw	high STR_36
  4661   002196  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4662   002198  C1CB  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  4663   00219C  C1CC  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  4664   0021A0  EC29  F028         	call	_sprintf	;wreg free
  4665   0021A4                     
  4666                           ;GAME.c: 173:                     LCD_ShowString((char)1, approxText);
  4667   0021A4  0EAC               	movlw	low runGAME@approxText
  4668   0021A6  6E07               	movwf	LCD_ShowString@textData^0,c
  4669   0021A8  0E01               	movlw	high runGAME@approxText
  4670   0021AA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4671   0021AC  0E01               	movlw	1
  4672   0021AE  ECB1  F024         	call	_LCD_ShowString
  4673                           
  4674                           ;GAME.c: 174:                 } else {
  4675   0021B2  EF33  F011         	goto	l8382
  4676   0021B6                     l689:
  4677                           
  4678                           ;GAME.c: 175:                     ADCON0bits.ADON = 0;
  4679   0021B6  90C2               	bcf	194,0,c	;volatile
  4680   0021B8                     
  4681                           ;GAME.c: 176:                     sprintf(approxText, "Skore: %u        ", GAMEround - 1
      +                          );
  4682   0021B8  0EAC               	movlw	low runGAME@approxText
  4683   0021BA  0100               	movlb	0	; () banked
  4684   0021BC  6FCE               	movwf	sprintf@s& (0+255),b
  4685   0021BE  0E01               	movlw	high runGAME@approxText
  4686   0021C0  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4687   0021C2  0E59               	movlw	low STR_39
  4688   0021C4  6FD0               	movwf	sprintf@fmt& (0+255),b
  4689   0021C6  0EFE               	movlw	high STR_39
  4690   0021C8  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4691   0021CA  0EFF               	movlw	255
  4692   0021CC  0101               	movlb	1	; () banked
  4693   0021CE  25C7               	addwf	runGAME@GAMEround& (0+255),w,b
  4694   0021D0  0100               	movlb	0	; () banked
  4695   0021D2  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  4696   0021D4  6BD3               	clrf	(?_sprintf+5)& (0+255),b
  4697   0021D6  0EFF               	movlw	255
  4698   0021D8  23D3               	addwfc	(?_sprintf+5)& (0+255),f,b
  4699   0021DA  EC29  F028         	call	_sprintf	;wreg free
  4700   0021DE                     
  4701                           ;GAME.c: 177:                     LCD_ShowString((char)1, "GAME OVER       ");
  4702   0021DE  0E7C               	movlw	low STR_40
  4703   0021E0  6E07               	movwf	LCD_ShowString@textData^0,c
  4704   0021E2  0EFE               	movlw	high STR_40
  4705   0021E4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4706   0021E6  0E01               	movlw	1
  4707   0021E8  ECB1  F024         	call	_LCD_ShowString
  4708   0021EC                     
  4709                           ;GAME.c: 178:                     LCD_ShowString((char)2, approxText);
  4710   0021EC  0EAC               	movlw	low runGAME@approxText
  4711   0021EE  6E07               	movwf	LCD_ShowString@textData^0,c
  4712   0021F0  0E01               	movlw	high runGAME@approxText
  4713   0021F2  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4714   0021F4  0E02               	movlw	2
  4715   0021F6  ECB1  F024         	call	_LCD_ShowString
  4716   0021FA                     
  4717                           ;GAME.c: 179:                     keepStateGAME = 0;
  4718   0021FA  0E00               	movlw	0
  4719   0021FC  0101               	movlb	1	; () banked
  4720   0021FE  6FC5               	movwf	runGAME@keepStateGAME& (0+255),b
  4721   002200                     
  4722                           ; BSR set to: 1
  4723                           ;GAME.c: 180:                     _delay((unsigned long)((2000)*(32E6/4000.0)));
  4724   002200  0E52               	movlw	82
  4725   002202  0100               	movlb	0	; () banked
  4726   002204  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4727   002206  0E2B               	movlw	43
  4728   002208  6FE7               	movwf	??_runGAME& (0+255),b
  4729   00220A  0E00               	movlw	0
  4730   00220C                     u10517:
  4731   00220C  2EE8               	decfsz	wreg,f,c
  4732   00220E  D7FE               	bra	u10517
  4733   002210  2FE7               	decfsz	??_runGAME& (0+255),f,b
  4734   002212  D7FC               	bra	u10517
  4735   002214  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  4736   002216  D7FA               	bra	u10517
  4737   002218  0000               	nop	
  4738   00221A  EF33  F011         	goto	l8382
  4739   00221E                     l8380:
  4740   00221E  0101               	movlb	1	; () banked
  4741   002220  51C6               	movf	runGAME@GAMEpart& (0+255),w,b
  4742                           
  4743                           ; Switch size 1, requested type "simple"
  4744                           ; Number of cases is 8, Range of values is 0 to 7
  4745                           ; switch strategies available:
  4746                           ; Name         Instructions Cycles
  4747                           ; simple_byte           25    13 (average)
  4748                           ;	Chosen strategy is simple_byte
  4749   002222  0A00               	xorlw	0	; case 0
  4750   002224  B4D8               	btfsc	status,2,c
  4751   002226  EF45  F010         	goto	l680
  4752   00222A  0A01               	xorlw	1	; case 1
  4753   00222C  B4D8               	btfsc	status,2,c
  4754   00222E  EF4D  F010         	goto	l682
  4755   002232  0A03               	xorlw	3	; case 2
  4756   002234  B4D8               	btfsc	status,2,c
  4757   002236  EF55  F010         	goto	l683
  4758   00223A  0A01               	xorlw	1	; case 3
  4759   00223C  B4D8               	btfsc	status,2,c
  4760   00223E  EF5D  F010         	goto	l684
  4761   002242  0A07               	xorlw	7	; case 4
  4762   002244  B4D8               	btfsc	status,2,c
  4763   002246  EF65  F010         	goto	l685
  4764   00224A  0A01               	xorlw	1	; case 5
  4765   00224C  B4D8               	btfsc	status,2,c
  4766   00224E  EF6D  F010         	goto	l686
  4767   002252  0A03               	xorlw	3	; case 6
  4768   002254  B4D8               	btfsc	status,2,c
  4769   002256  EF75  F010         	goto	l687
  4770   00225A  0A01               	xorlw	1	; case 7
  4771   00225C  B4D8               	btfsc	status,2,c
  4772   00225E  EF7D  F010         	goto	l8354
  4773   002262  EF33  F011         	goto	l8382
  4774   002266                     l8382:
  4775                           
  4776                           ;GAME.c: 72:     while(keepStateGAME){
  4777   002266  0101               	movlb	1	; () banked
  4778   002268  51C5               	movf	runGAME@keepStateGAME& (0+255),w,b
  4779   00226A  A4D8               	btfss	status,2,c
  4780   00226C  EF3A  F011         	goto	u10241
  4781   002270  EF3C  F011         	goto	u10240
  4782   002274                     u10241:
  4783   002274  EFBD  F00F         	goto	l8318
  4784   002278                     u10240:
  4785   002278                     
  4786                           ; BSR set to: 1
  4787                           ;GAME.c: 187:     LATDbits.LD2 = 1;
  4788   002278  848C               	bsf	140,2,c	;volatile
  4789                           
  4790                           ;GAME.c: 188:     LATDbits.LD3 = 1;
  4791   00227A  868C               	bsf	140,3,c	;volatile
  4792                           
  4793                           ;GAME.c: 189:     LATCbits.LC4 = 1;
  4794   00227C  888B               	bsf	139,4,c	;volatile
  4795                           
  4796                           ;GAME.c: 190:     LATDbits.LD4 = 1;
  4797   00227E  888C               	bsf	140,4,c	;volatile
  4798                           
  4799                           ;GAME.c: 191:     LATDbits.LD5 = 1;
  4800   002280  8A8C               	bsf	140,5,c	;volatile
  4801                           
  4802                           ;GAME.c: 192:     LATDbits.LD6 = 1;
  4803   002282  8C8C               	bsf	140,6,c	;volatile
  4804                           
  4805                           ;GAME.c: 193:     TMR1ON = 0;
  4806   002284  90CD               	bcf	4045,0,c	;volatile
  4807                           
  4808                           ;GAME.c: 194:     TMR1IE = 0;
  4809   002286  909D               	bcf	3997,0,c	;volatile
  4810   002288                     
  4811                           ; BSR set to: 1
  4812                           ;GAME.c: 195:     GAMEIE = 0;
  4813   002288  0E00               	movlw	0
  4814   00228A  6F24               	movwf	_GAMEIE& (0+255),b
  4815   00228C                     
  4816                           ; BSR set to: 1
  4817   00228C  0012               	return		;funcret
  4818   00228E                     __end_of_runGAME:
  4819                           	callstack 0
  4820                           
  4821 ;; *************** function _rand *****************
  4822 ;; Defined at:
  4823 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\rand.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;		None
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;		None
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  2   17[COMRAM] int 
  4830 ;; Registers used:
  4831 ;;		wreg, status,2, status,0, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;Total ram usage:        6 bytes
  4842 ;; Hardware stack levels used: 1
  4843 ;; Hardware stack levels required when called: 2
  4844 ;; This function calls:
  4845 ;;		___lmul
  4846 ;; This function is called by:
  4847 ;;		_runGAME
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text13
  4852   004D2E                     __ptext13:
  4853                           	callstack 0
  4854   004D2E                     _rand:
  4855                           	callstack 27
  4856   004D2E  C197  F006         	movff	_seed,___lmul@multiplier
  4857   004D32  C198  F007         	movff	_seed+1,___lmul@multiplier+1
  4858   004D36  C199  F008         	movff	_seed+2,___lmul@multiplier+2
  4859   004D3A  C19A  F009         	movff	_seed+3,___lmul@multiplier+3
  4860   004D3E  0E2D               	movlw	45
  4861   004D40  6E0A               	movwf	___lmul@multiplicand^0,c
  4862   004D42  0E7F               	movlw	127
  4863   004D44  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  4864   004D46  0E95               	movlw	149
  4865   004D48  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  4866   004D4A  0E4C               	movlw	76
  4867   004D4C  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  4868   004D4E  ECCE  F026         	call	___lmul	;wreg free
  4869   004D52  0E01               	movlw	1
  4870   004D54  2406               	addwf	?___lmul^0,w,c
  4871   004D56  0101               	movlb	1	; () banked
  4872   004D58  6F97               	movwf	_seed& (0+255),b
  4873   004D5A  0E00               	movlw	0
  4874   004D5C  2007               	addwfc	(?___lmul+1)^0,w,c
  4875   004D5E  6F98               	movwf	(_seed+1)& (0+255),b
  4876   004D60  0E00               	movlw	0
  4877   004D62  2008               	addwfc	(?___lmul+2)^0,w,c
  4878   004D64  6F99               	movwf	(_seed+2)& (0+255),b
  4879   004D66  0E00               	movlw	0
  4880   004D68  2009               	addwfc	(?___lmul+3)^0,w,c
  4881   004D6A  6F9A               	movwf	(_seed+3)& (0+255),b
  4882   004D6C                     
  4883                           ; BSR set to: 1
  4884   004D6C  C197  F014         	movff	_seed,??_rand
  4885   004D70  C198  F015         	movff	_seed+1,??_rand+1
  4886   004D74  C199  F016         	movff	_seed+2,??_rand+2
  4887   004D78  C19A  F017         	movff	_seed+3,??_rand+3
  4888   004D7C  0E12               	movlw	18
  4889   004D7E  EFC6  F026         	goto	u9660
  4890   004D82                     u9665:
  4891   004D82  90D8               	bcf	status,0,c
  4892   004D84  3217               	rrcf	(??_rand+3)^0,f,c
  4893   004D86  3216               	rrcf	(??_rand+2)^0,f,c
  4894   004D88  3215               	rrcf	(??_rand+1)^0,f,c
  4895   004D8A  3214               	rrcf	??_rand^0,f,c
  4896   004D8C                     u9660:
  4897   004D8C  2EE8               	decfsz	wreg,f,c
  4898   004D8E  EFC1  F026         	goto	u9665
  4899   004D92  C014  F012         	movff	??_rand,?_rand
  4900   004D96  C015  F013         	movff	??_rand+1,?_rand+1
  4901   004D9A                     
  4902                           ; BSR set to: 1
  4903   004D9A  0012               	return		;funcret
  4904   004D9C                     __end_of_rand:
  4905                           	callstack 0
  4906                           
  4907 ;; *************** function ___lmul *****************
  4908 ;; Defined at:
  4909 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul32.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  multiplier      4    5[COMRAM] unsigned long 
  4912 ;;  multiplicand    4    9[COMRAM] unsigned long 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;  product         4   13[COMRAM] unsigned long 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  4    5[COMRAM] unsigned long 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4924 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;Total ram usage:       12 bytes
  4929 ;; Hardware stack levels used: 1
  4930 ;; Hardware stack levels required when called: 1
  4931 ;; This function calls:
  4932 ;;		Nothing
  4933 ;; This function is called by:
  4934 ;;		_rand
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           	psect	text14
  4939   004D9C                     __ptext14:
  4940                           	callstack 0
  4941   004D9C                     ___lmul:
  4942                           	callstack 27
  4943   004D9C  0E00               	movlw	0
  4944   004D9E  6E0E               	movwf	___lmul@product^0,c
  4945   004DA0  0E00               	movlw	0
  4946   004DA2  6E0F               	movwf	(___lmul@product+1)^0,c
  4947   004DA4  0E00               	movlw	0
  4948   004DA6  6E10               	movwf	(___lmul@product+2)^0,c
  4949   004DA8  0E00               	movlw	0
  4950   004DAA  6E11               	movwf	(___lmul@product+3)^0,c
  4951   004DAC                     l7684:
  4952   004DAC  A006               	btfss	___lmul@multiplier^0,0,c
  4953   004DAE  EFDB  F026         	goto	u9281
  4954   004DB2  EFDD  F026         	goto	u9280
  4955   004DB6                     u9281:
  4956   004DB6  EFE5  F026         	goto	l7688
  4957   004DBA                     u9280:
  4958   004DBA  500A               	movf	___lmul@multiplicand^0,w,c
  4959   004DBC  260E               	addwf	___lmul@product^0,f,c
  4960   004DBE  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  4961   004DC0  220F               	addwfc	(___lmul@product+1)^0,f,c
  4962   004DC2  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  4963   004DC4  2210               	addwfc	(___lmul@product+2)^0,f,c
  4964   004DC6  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  4965   004DC8  2211               	addwfc	(___lmul@product+3)^0,f,c
  4966   004DCA                     l7688:
  4967   004DCA  90D8               	bcf	status,0,c
  4968   004DCC  360A               	rlcf	___lmul@multiplicand^0,f,c
  4969   004DCE  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4970   004DD0  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4971   004DD2  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4972   004DD4  90D8               	bcf	status,0,c
  4973   004DD6  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  4974   004DD8  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  4975   004DDA  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  4976   004DDC  3206               	rrcf	___lmul@multiplier^0,f,c
  4977   004DDE  5006               	movf	___lmul@multiplier^0,w,c
  4978   004DE0  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  4979   004DE2  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  4980   004DE4  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  4981   004DE6  A4D8               	btfss	status,2,c
  4982   004DE8  EFF8  F026         	goto	u9291
  4983   004DEC  EFFA  F026         	goto	u9290
  4984   004DF0                     u9291:
  4985   004DF0  EFD6  F026         	goto	l7684
  4986   004DF4                     u9290:
  4987   004DF4  C00E  F006         	movff	___lmul@product,?___lmul
  4988   004DF8  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  4989   004DFC  C010  F008         	movff	___lmul@product+2,?___lmul+2
  4990   004E00  C011  F009         	movff	___lmul@product+3,?___lmul+3
  4991   004E04  0012               	return		;funcret
  4992   004E06                     __end_of___lmul:
  4993                           	callstack 0
  4994                           
  4995 ;; *************** function ___lbdiv *****************
  4996 ;; Defined at:
  4997 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lbdiv.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  dividend        1    wreg     unsigned char 
  5000 ;;  divisor         1    5[COMRAM] unsigned char 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  dividend        1    6[COMRAM] unsigned char 
  5003 ;;  quotient        1    8[COMRAM] unsigned char 
  5004 ;;  counter         1    7[COMRAM] unsigned char 
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  1    wreg      unsigned char 
  5007 ;; Registers used:
  5008 ;;		wreg, status,2, status,0
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5014 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5017 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5018 ;;Total ram usage:        4 bytes
  5019 ;; Hardware stack levels used: 1
  5020 ;; Hardware stack levels required when called: 1
  5021 ;; This function calls:
  5022 ;;		Nothing
  5023 ;; This function is called by:
  5024 ;;		_runGAME
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text15
  5029   004E6A                     __ptext15:
  5030                           	callstack 0
  5031   004E6A                     ___lbdiv:
  5032                           	callstack 28
  5033                           
  5034                           ;incstack = 0
  5035                           ;___lbdiv@dividend stored from wreg
  5036   004E6A  6E07               	movwf	___lbdiv@dividend^0,c
  5037   004E6C  0E00               	movlw	0
  5038   004E6E  6E09               	movwf	___lbdiv@quotient^0,c
  5039   004E70  5006               	movf	___lbdiv@divisor^0,w,c
  5040   004E72  B4D8               	btfsc	status,2,c
  5041   004E74  EF3E  F027         	goto	u9671
  5042   004E78  EF40  F027         	goto	u9670
  5043   004E7C                     u9671:
  5044   004E7C  EF61  F027         	goto	l7966
  5045   004E80                     u9670:
  5046   004E80  0E01               	movlw	1
  5047   004E82  6E08               	movwf	___lbdiv@counter^0,c
  5048   004E84  EF47  F027         	goto	l7954
  5049   004E88                     l7950:
  5050   004E88  90D8               	bcf	status,0,c
  5051   004E8A  3606               	rlcf	___lbdiv@divisor^0,f,c
  5052   004E8C  2A08               	incf	___lbdiv@counter^0,f,c
  5053   004E8E                     l7954:
  5054   004E8E  AE06               	btfss	___lbdiv@divisor^0,7,c
  5055   004E90  EF4C  F027         	goto	u9681
  5056   004E94  EF4E  F027         	goto	u9680
  5057   004E98                     u9681:
  5058   004E98  EF44  F027         	goto	l7950
  5059   004E9C                     u9680:
  5060   004E9C                     l7956:
  5061   004E9C  90D8               	bcf	status,0,c
  5062   004E9E  3609               	rlcf	___lbdiv@quotient^0,f,c
  5063   004EA0  5006               	movf	___lbdiv@divisor^0,w,c
  5064   004EA2  5C07               	subwf	___lbdiv@dividend^0,w,c
  5065   004EA4  A0D8               	btfss	status,0,c
  5066   004EA6  EF57  F027         	goto	u9691
  5067   004EAA  EF59  F027         	goto	u9690
  5068   004EAE                     u9691:
  5069   004EAE  EF5C  F027         	goto	l7962
  5070   004EB2                     u9690:
  5071   004EB2  5006               	movf	___lbdiv@divisor^0,w,c
  5072   004EB4  5E07               	subwf	___lbdiv@dividend^0,f,c
  5073   004EB6  8009               	bsf	___lbdiv@quotient^0,0,c
  5074   004EB8                     l7962:
  5075   004EB8  90D8               	bcf	status,0,c
  5076   004EBA  3206               	rrcf	___lbdiv@divisor^0,f,c
  5077   004EBC  2E08               	decfsz	___lbdiv@counter^0,f,c
  5078   004EBE  EF4E  F027         	goto	l7956
  5079   004EC2                     l7966:
  5080   004EC2  5009               	movf	___lbdiv@quotient^0,w,c
  5081   004EC4  0012               	return		;funcret
  5082   004EC6                     __end_of___lbdiv:
  5083                           	callstack 0
  5084                           
  5085 ;; *************** function _runDAC *****************
  5086 ;; Defined at:
  5087 ;;		line 10 in file "DAC.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;		None
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  DACindex        1  125[BANK0 ] unsigned char 
  5092 ;;  selectModeDA    1  124[BANK0 ] unsigned char 
  5093 ;;  keepState       1  123[BANK0 ] unsigned char 
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  1    wreg      void 
  5096 ;; Registers used:
  5097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;Total ram usage:       12 bytes
  5108 ;; Hardware stack levels used: 1
  5109 ;; Hardware stack levels required when called: 9
  5110 ;; This function calls:
  5111 ;;		_SPI_write
  5112 ;;		___fladd
  5113 ;;		___fldiv
  5114 ;;		___flmul
  5115 ;;		___fltol
  5116 ;;		___xxtofl
  5117 ;;		_printf
  5118 ;;		_sinf
  5119 ;; This function is called by:
  5120 ;;		_main
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text16
  5125   002DC2                     __ptext16:
  5126                           	callstack 0
  5127   002DC2                     _runDAC:
  5128                           	callstack 21
  5129   002DC2                     
  5130                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  5131   002DC2  8094               	bsf	148,0,c	;volatile
  5132                           
  5133                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  5134   002DC4  8892               	bsf	146,4,c	;volatile
  5135                           
  5136                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  5137   002DC6  8692               	bsf	146,3,c	;volatile
  5138                           
  5139                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  5140   002DC8  8492               	bsf	146,2,c	;volatile
  5141                           
  5142                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  5143   002DCA  010F               	movlb	15	; () banked
  5144   002DCC  9738               	bcf	56,3,b	;volatile
  5145                           
  5146                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  5147   002DCE  9538               	bcf	56,2,b	;volatile
  5148                           
  5149                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  5150   002DD0  9693               	bcf	147,3,c	;volatile
  5151                           
  5152                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  5153   002DD2  9694               	bcf	148,3,c	;volatile
  5154                           
  5155                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  5156   002DD4  9A94               	bcf	148,5,c	;volatile
  5157   002DD6                     
  5158                           ; BSR set to: 15
  5159                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  5160   002DD6  50C6               	movf	198,w,c	;volatile
  5161   002DD8  0BF0               	andlw	-16
  5162   002DDA  0902               	iorlw	2
  5163   002DDC  6EC6               	movwf	198,c	;volatile
  5164   002DDE                     
  5165                           ; BSR set to: 15
  5166                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  5167   002DDE  98C6               	bcf	198,4,c	;volatile
  5168   002DE0                     
  5169                           ; BSR set to: 15
  5170                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  5171   002DE0  8CC7               	bsf	199,6,c	;volatile
  5172   002DE2                     
  5173                           ; BSR set to: 15
  5174                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  5175   002DE2  8AC6               	bsf	198,5,c	;volatile
  5176   002DE4                     
  5177                           ; BSR set to: 15
  5178                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  5179   002DE4  8139               	bsf	57,0,b	;volatile
  5180   002DE6                     
  5181                           ; BSR set to: 15
  5182                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  5183   002DE6  9EC0               	bcf	192,7,c	;volatile
  5184                           
  5185                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  5186   002DE8  50C0               	movf	192,w,c	;volatile
  5187   002DEA  0BF8               	andlw	-8
  5188   002DEC  0906               	iorlw	6
  5189   002DEE  6EC0               	movwf	192,c	;volatile
  5190                           
  5191                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  5192   002DF0  50C0               	movf	192,w,c	;volatile
  5193   002DF2  0BC7               	andlw	-57
  5194   002DF4  0930               	iorlw	48
  5195   002DF6  6EC0               	movwf	192,c	;volatile
  5196   002DF8                     
  5197                           ; BSR set to: 15
  5198                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  5199   002DF8  80C2               	bsf	194,0,c	;volatile
  5200                           
  5201                           ;DAC.c: 38:     SPBRG1 = 25;
  5202   002DFA  0E19               	movlw	25
  5203   002DFC  6EAF               	movwf	175,c	;volatile
  5204   002DFE                     
  5205                           ; BSR set to: 15
  5206                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  5207   002DFE  8EAB               	bsf	171,7,c	;volatile
  5208   002E00                     
  5209                           ; BSR set to: 15
  5210                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  5211   002E00  98AC               	bcf	172,4,c	;volatile
  5212   002E02                     
  5213                           ; BSR set to: 15
  5214                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  5215   002E02  8AAC               	bsf	172,5,c	;volatile
  5216   002E04                     
  5217                           ; BSR set to: 15
  5218                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  5219   002E04  88AB               	bsf	171,4,c	;volatile
  5220   002E06                     
  5221                           ; BSR set to: 15
  5222                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  5223   002E06  868A               	bsf	138,3,c	;volatile
  5224                           
  5225                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  5226   002E08  50C2               	movf	194,w,c	;volatile
  5227   002E0A  0B83               	andlw	-125
  5228   002E0C  0930               	iorlw	48
  5229   002E0E  6EC2               	movwf	194,c	;volatile
  5230                           
  5231                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  5232   002E10  0E01               	movlw	1
  5233   002E12  0100               	movlb	0	; () banked
  5234   002E14  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5235                           
  5236                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  5237   002E16  0E01               	movlw	1
  5238   002E18  6FDB               	movwf	runDAC@keepState& (0+255),b
  5239                           
  5240                           ;DAC.c: 52:     uint8_t DACindex = 0;
  5241   002E1A  0E00               	movlw	0
  5242   002E1C  6FDD               	movwf	runDAC@DACindex& (0+255),b
  5243                           
  5244                           ;DAC.c: 54:     while(keepState){
  5245   002E1E  EF4B  F018         	goto	l8272
  5246   002E22                     l8230:
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;DAC.c: 57:                 if(DACindex<255/2){
  5250   002E22  0E7F               	movlw	127
  5251   002E24  61DD               	cpfslt	runDAC@DACindex& (0+255),b
  5252   002E26  EF17  F017         	goto	u10081
  5253   002E2A  EF19  F017         	goto	u10080
  5254   002E2E                     u10081:
  5255   002E2E  EF41  F017         	goto	l8234
  5256   002E32                     u10080:
  5257   002E32                     
  5258                           ; BSR set to: 0
  5259                           ;DAC.c: 58:                     SPI_write((uint8_t)(1.9*DACindex));
  5260   002E32  0E33               	movlw	51
  5261   002E34  6E18               	movwf	___flmul@a^0,c
  5262   002E36  0E33               	movlw	51
  5263   002E38  6E19               	movwf	(___flmul@a+1)^0,c
  5264   002E3A  0EF3               	movlw	243
  5265   002E3C  6E1A               	movwf	(___flmul@a+2)^0,c
  5266   002E3E  0E3F               	movlw	63
  5267   002E40  6E1B               	movwf	(___flmul@a+3)^0,c
  5268   002E42  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5269   002E44  6E06               	movwf	___xxtofl@val^0,c
  5270   002E46  6A07               	clrf	(___xxtofl@val+1)^0,c
  5271   002E48  6A08               	clrf	(___xxtofl@val+2)^0,c
  5272   002E4A  6A09               	clrf	(___xxtofl@val+3)^0,c
  5273   002E4C  0E01               	movlw	1
  5274   002E4E  EC81  F01C         	call	___xxtofl
  5275   002E52  C006  F014         	movff	?___xxtofl,___flmul@b
  5276   002E56  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5277   002E5A  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5278   002E5E  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5279   002E62  EC3A  F00D         	call	___flmul	;wreg free
  5280   002E66  C014  F064         	movff	?___flmul,___fltol@f1
  5281   002E6A  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  5282   002E6E  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  5283   002E72  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  5284   002E76  EC80  F021         	call	___fltol	;wreg free
  5285   002E7A  0100               	movlb	0	; () banked
  5286   002E7C  5164               	movf	?___fltol& (0+255),w,b
  5287   002E7E  EC6E  F028         	call	_SPI_write
  5288   002E82                     l8234:
  5289                           
  5290                           ;DAC.c: 60:                 if(DACindex>=255/2){
  5291   002E82  0E7E               	movlw	126
  5292   002E84  0100               	movlb	0	; () banked
  5293   002E86  65DD               	cpfsgt	runDAC@DACindex& (0+255),b
  5294   002E88  EF48  F017         	goto	u10091
  5295   002E8C  EF4A  F017         	goto	u10090
  5296   002E90                     u10091:
  5297   002E90  EF06  F018         	goto	l231
  5298   002E94                     u10090:
  5299   002E94                     
  5300                           ; BSR set to: 0
  5301                           ;DAC.c: 61:                     SPI_write((uint8_t)(1.9*(255-DACindex)));
  5302   002E94  0E33               	movlw	51
  5303   002E96  6E18               	movwf	___flmul@a^0,c
  5304   002E98  0E33               	movlw	51
  5305   002E9A  6E19               	movwf	(___flmul@a+1)^0,c
  5306   002E9C  0EF3               	movlw	243
  5307   002E9E  6E1A               	movwf	(___flmul@a+2)^0,c
  5308   002EA0  0E3F               	movlw	63
  5309   002EA2  6E1B               	movwf	(___flmul@a+3)^0,c
  5310   002EA4  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5311   002EA6  0AFF               	xorlw	255
  5312   002EA8  6FD2               	movwf	??_runDAC& (0+255),b
  5313   002EAA  51D2               	movf	??_runDAC& (0+255),w,b
  5314   002EAC  6E06               	movwf	___xxtofl@val^0,c
  5315   002EAE  6A07               	clrf	(___xxtofl@val+1)^0,c
  5316   002EB0  6A08               	clrf	(___xxtofl@val+2)^0,c
  5317   002EB2  6A09               	clrf	(___xxtofl@val+3)^0,c
  5318   002EB4  0E01               	movlw	1
  5319   002EB6  EC81  F01C         	call	___xxtofl
  5320   002EBA  C006  F014         	movff	?___xxtofl,___flmul@b
  5321   002EBE  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5322   002EC2  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5323   002EC6  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5324   002ECA  EC3A  F00D         	call	___flmul	;wreg free
  5325   002ECE  C014  F064         	movff	?___flmul,___fltol@f1
  5326   002ED2  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  5327   002ED6  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  5328   002EDA  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  5329   002EDE  EC80  F021         	call	___fltol	;wreg free
  5330   002EE2  0100               	movlb	0	; () banked
  5331   002EE4  5164               	movf	?___fltol& (0+255),w,b
  5332   002EE6  EC6E  F028         	call	_SPI_write
  5333   002EEA  EF06  F018         	goto	l231
  5334   002EEE                     l8238:
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5338   002EEE  0E00               	movlw	0
  5339   002EF0  6E31               	movwf	___fldiv@a^0,c
  5340   002EF2  0E00               	movlw	0
  5341   002EF4  6E32               	movwf	(___fldiv@a+1)^0,c
  5342   002EF6  0E7F               	movlw	127
  5343   002EF8  6E33               	movwf	(___fldiv@a+2)^0,c
  5344   002EFA  0E43               	movlw	67
  5345   002EFC  6E34               	movwf	(___fldiv@a+3)^0,c
  5346   002EFE  0EC3               	movlw	195
  5347   002F00  6E18               	movwf	___flmul@a^0,c
  5348   002F02  0EF5               	movlw	245
  5349   002F04  6E19               	movwf	(___flmul@a+1)^0,c
  5350   002F06  0EC8               	movlw	200
  5351   002F08  6E1A               	movwf	(___flmul@a+2)^0,c
  5352   002F0A  0E40               	movlw	64
  5353   002F0C  6E1B               	movwf	(___flmul@a+3)^0,c
  5354   002F0E  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5355   002F10  6E06               	movwf	___xxtofl@val^0,c
  5356   002F12  6A07               	clrf	(___xxtofl@val+1)^0,c
  5357   002F14  6A08               	clrf	(___xxtofl@val+2)^0,c
  5358   002F16  6A09               	clrf	(___xxtofl@val+3)^0,c
  5359   002F18  0E01               	movlw	1
  5360   002F1A  EC81  F01C         	call	___xxtofl
  5361   002F1E  C006  F014         	movff	?___xxtofl,___flmul@b
  5362   002F22  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5363   002F26  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5364   002F2A  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5365   002F2E  EC3A  F00D         	call	___flmul	;wreg free
  5366   002F32  C014  F02D         	movff	?___flmul,___fldiv@b
  5367   002F36  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  5368   002F3A  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  5369   002F3E  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  5370   002F42  EC14  F015         	call	___fldiv	;wreg free
  5371   002F46  C02D  F0D3         	movff	?___fldiv,_runDAC$4531
  5372   002F4A  C02E  F0D4         	movff	?___fldiv+1,_runDAC$4531+1
  5373   002F4E  C02F  F0D5         	movff	?___fldiv+2,_runDAC$4531+2
  5374   002F52  C030  F0D6         	movff	?___fldiv+3,_runDAC$4531+3
  5375   002F56                     
  5376                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5377   002F56  C0D3  F0A4         	movff	_runDAC$4531,sinf@x
  5378   002F5A  C0D4  F0A5         	movff	_runDAC$4531+1,sinf@x+1
  5379   002F5E  C0D5  F0A6         	movff	_runDAC$4531+2,sinf@x+2
  5380   002F62  C0D6  F0A7         	movff	_runDAC$4531+3,sinf@x+3
  5381   002F66  EC54  F008         	call	_sinf	;wreg free
  5382   002F6A  C0A4  F0D7         	movff	?_sinf,_runDAC$4532
  5383   002F6E  C0A5  F0D8         	movff	?_sinf+1,_runDAC$4532+1
  5384   002F72  C0A6  F0D9         	movff	?_sinf+2,_runDAC$4532+2
  5385   002F76  C0A7  F0DA         	movff	?_sinf+3,_runDAC$4532+3
  5386   002F7A                     
  5387                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5388   002F7A  0E00               	movlw	0
  5389   002F7C  6E4A               	movwf	___fladd@a^0,c
  5390   002F7E  0E00               	movlw	0
  5391   002F80  6E4B               	movwf	(___fladd@a+1)^0,c
  5392   002F82  0EFE               	movlw	254
  5393   002F84  6E4C               	movwf	(___fladd@a+2)^0,c
  5394   002F86  0E42               	movlw	66
  5395   002F88  6E4D               	movwf	(___fladd@a+3)^0,c
  5396   002F8A  0E00               	movlw	0
  5397   002F8C  6E18               	movwf	___flmul@a^0,c
  5398   002F8E  0E00               	movlw	0
  5399   002F90  6E19               	movwf	(___flmul@a+1)^0,c
  5400   002F92  0EFE               	movlw	254
  5401   002F94  6E1A               	movwf	(___flmul@a+2)^0,c
  5402   002F96  0E42               	movlw	66
  5403   002F98  6E1B               	movwf	(___flmul@a+3)^0,c
  5404   002F9A  C0D7  F014         	movff	_runDAC$4532,___flmul@b
  5405   002F9E  C0D8  F015         	movff	_runDAC$4532+1,___flmul@b+1
  5406   002FA2  C0D9  F016         	movff	_runDAC$4532+2,___flmul@b+2
  5407   002FA6  C0DA  F017         	movff	_runDAC$4532+3,___flmul@b+3
  5408   002FAA  EC3A  F00D         	call	___flmul	;wreg free
  5409   002FAE  C014  F046         	movff	?___flmul,___fladd@b
  5410   002FB2  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5411   002FB6  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5412   002FBA  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5413   002FBE  ECD9  F00A         	call	___fladd	;wreg free
  5414   002FC2  C046  F064         	movff	?___fladd,___fltol@f1
  5415   002FC6  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  5416   002FCA  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  5417   002FCE  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  5418   002FD2  EC80  F021         	call	___fltol	;wreg free
  5419   002FD6  0100               	movlb	0	; () banked
  5420   002FD8  5164               	movf	?___fltol& (0+255),w,b
  5421   002FDA  EC6E  F028         	call	_SPI_write
  5422                           
  5423                           ;DAC.c: 66:                 break;
  5424   002FDE  EF06  F018         	goto	l231
  5425   002FE2                     l8244:
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  5429   002FE2  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5430   002FE4  0AFF               	xorlw	255
  5431   002FE6  EC6E  F028         	call	_SPI_write
  5432                           
  5433                           ;DAC.c: 69:                 break;
  5434   002FEA  EF06  F018         	goto	l231
  5435   002FEE                     l8248:
  5436                           
  5437                           ; BSR set to: 0
  5438   002FEE  51DC               	movf	runDAC@selectModeDAC& (0+255),w,b
  5439                           
  5440                           ; Switch size 1, requested type "simple"
  5441                           ; Number of cases is 3, Range of values is 1 to 3
  5442                           ; switch strategies available:
  5443                           ; Name         Instructions Cycles
  5444                           ; simple_byte           10     6 (average)
  5445                           ;	Chosen strategy is simple_byte
  5446   002FF0  0A01               	xorlw	1	; case 1
  5447   002FF2  B4D8               	btfsc	status,2,c
  5448   002FF4  EF11  F017         	goto	l8230
  5449   002FF8  0A03               	xorlw	3	; case 2
  5450   002FFA  B4D8               	btfsc	status,2,c
  5451   002FFC  EF77  F017         	goto	l8238
  5452   003000  0A01               	xorlw	1	; case 3
  5453   003002  B4D8               	btfsc	status,2,c
  5454   003004  EFF1  F017         	goto	l8244
  5455   003008  EF06  F018         	goto	l231
  5456   00300C                     l231:
  5457                           
  5458                           ;DAC.c: 71:         GODONE = 1;
  5459   00300C  82C2               	bsf	4034,1,c	;volatile
  5460   00300E                     l234:
  5461   00300E  B2C2               	btfsc	4034,1,c	;volatile
  5462   003010  EF0C  F018         	goto	u10101
  5463   003014  EF0E  F018         	goto	u10100
  5464   003018                     u10101:
  5465   003018  EF07  F018         	goto	l234
  5466   00301C                     u10100:
  5467   00301C                     
  5468                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  5469   00301C  0EE6               	movlw	low STR_23
  5470   00301E  0100               	movlb	0	; () banked
  5471   003020  6FCE               	movwf	printf@fmt& (0+255),b
  5472   003022  0EFF               	movlw	high STR_23
  5473   003024  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  5474   003026  CFC4 F0D0          	movff	4036,?_printf+2	;volatile
  5475   00302A  6BD1               	clrf	(?_printf+3)& (0+255),b
  5476   00302C  EC6A  F029         	call	_printf	;wreg free
  5477   003030                     
  5478                           ;DAC.c: 75:         if(PORTCbits.RC0){
  5479   003030  A082               	btfss	130,0,c	;volatile
  5480   003032  EF1D  F018         	goto	u10111
  5481   003036  EF1F  F018         	goto	u10110
  5482   00303A                     u10111:
  5483   00303A  EF22  F018         	goto	l8256
  5484   00303E                     u10110:
  5485   00303E                     
  5486                           ;DAC.c: 76:             selectModeDAC = 1;
  5487   00303E  0E01               	movlw	1
  5488   003040  0100               	movlb	0	; () banked
  5489   003042  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5490   003044                     l8256:
  5491                           
  5492                           ;DAC.c: 78:         if(PORTAbits.RA4){
  5493   003044  A880               	btfss	128,4,c	;volatile
  5494   003046  EF27  F018         	goto	u10121
  5495   00304A  EF29  F018         	goto	u10120
  5496   00304E                     u10121:
  5497   00304E  EF2C  F018         	goto	l8260
  5498   003052                     u10120:
  5499   003052                     
  5500                           ;DAC.c: 79:             selectModeDAC = 2;
  5501   003052  0E02               	movlw	2
  5502   003054  0100               	movlb	0	; () banked
  5503   003056  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5504   003058                     l8260:
  5505                           
  5506                           ;DAC.c: 81:         if(PORTAbits.RA3){
  5507   003058  A680               	btfss	128,3,c	;volatile
  5508   00305A  EF31  F018         	goto	u10131
  5509   00305E  EF33  F018         	goto	u10130
  5510   003062                     u10131:
  5511   003062  EF36  F018         	goto	l8264
  5512   003066                     u10130:
  5513   003066                     
  5514                           ;DAC.c: 82:             selectModeDAC = 3;
  5515   003066  0E03               	movlw	3
  5516   003068  0100               	movlb	0	; () banked
  5517   00306A  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5518   00306C                     l8264:
  5519                           
  5520                           ;DAC.c: 84:         if(PORTAbits.RA2){
  5521   00306C  A480               	btfss	128,2,c	;volatile
  5522   00306E  EF3B  F018         	goto	u10141
  5523   003072  EF3D  F018         	goto	u10140
  5524   003076                     u10141:
  5525   003076  EF40  F018         	goto	l8268
  5526   00307A                     u10140:
  5527   00307A                     
  5528                           ;DAC.c: 85:             keepState = 0;
  5529   00307A  0E00               	movlw	0
  5530   00307C  0100               	movlb	0	; () banked
  5531   00307E  6FDB               	movwf	runDAC@keepState& (0+255),b
  5532   003080                     l8268:
  5533                           
  5534                           ;DAC.c: 87:         DACindex++;
  5535   003080  0100               	movlb	0	; () banked
  5536   003082  2BDD               	incf	runDAC@DACindex& (0+255),f,b
  5537   003084                     
  5538                           ; BSR set to: 0
  5539                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  5540   003084  0E68               	movlw	104
  5541   003086  0100               	movlb	0	; () banked
  5542   003088  6FD2               	movwf	??_runDAC& (0+255),b
  5543   00308A  0EE4               	movlw	228
  5544   00308C                     u10527:
  5545   00308C  2EE8               	decfsz	wreg,f,c
  5546   00308E  D7FE               	bra	u10527
  5547   003090  2FD2               	decfsz	??_runDAC& (0+255),f,b
  5548   003092  D7FC               	bra	u10527
  5549   003094  0000               	nop	
  5550   003096                     l8272:
  5551                           
  5552                           ;DAC.c: 54:     while(keepState){
  5553   003096  0100               	movlb	0	; () banked
  5554   003098  51DB               	movf	runDAC@keepState& (0+255),w,b
  5555   00309A  A4D8               	btfss	status,2,c
  5556   00309C  EF52  F018         	goto	u10151
  5557   0030A0  EF54  F018         	goto	u10150
  5558   0030A4                     u10151:
  5559   0030A4  EFF7  F017         	goto	l8248
  5560   0030A8                     u10150:
  5561   0030A8                     
  5562                           ; BSR set to: 0
  5563   0030A8  0012               	return		;funcret
  5564   0030AA                     __end_of_runDAC:
  5565                           	callstack 0
  5566                           
  5567 ;; *************** function _sinf *****************
  5568 ;; Defined at:
  5569 ;;		line 27 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sinf.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  x               4   68[BANK0 ] float 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  ux              4   90[BANK0 ] struct .
  5574 ;;  y               4   86[BANK0 ] struct .
  5575 ;;  sign            1   81[BANK0 ] _Bool 
  5576 ;;  n               1   80[BANK0 ] unsigned char 
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  4   68[BANK0 ] float 
  5579 ;; Registers used:
  5580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5586 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;Total ram usage:       26 bytes
  5591 ;; Hardware stack levels used: 1
  5592 ;; Hardware stack levels required when called: 4
  5593 ;; This function calls:
  5594 ;;		___cosdf
  5595 ;;		___fladd
  5596 ;;		___flneg
  5597 ;;		___rem_pio2f
  5598 ;;		___sindf
  5599 ;; This function is called by:
  5600 ;;		_runDAC
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           
  5604                           	psect	text17
  5605   0010A8                     __ptext17:
  5606                           	callstack 0
  5607   0010A8                     _sinf:
  5608                           	callstack 25
  5609   0010A8  C0A4  F0BA         	movff	sinf@x,sinf@ux
  5610   0010AC  C0A5  F0BB         	movff	sinf@x+1,sinf@ux+1
  5611   0010B0  C0A6  F0BC         	movff	sinf@x+2,sinf@ux+2
  5612   0010B4  C0A7  F0BD         	movff	sinf@x+3,sinf@ux+3
  5613   0010B8  0100               	movlb	0	; () banked
  5614   0010BA  BFBD               	btfsc	(sinf@ux+3)& (0+255),7,b
  5615   0010BC  EF62  F008         	goto	u9461
  5616   0010C0  EF65  F008         	goto	u9460
  5617   0010C4                     u9461:
  5618   0010C4  0E01               	movlw	1
  5619   0010C6  EF66  F008         	goto	u9470
  5620   0010CA                     u9460:
  5621   0010CA  0E00               	movlw	0
  5622   0010CC                     u9470:
  5623   0010CC  6FB1               	movwf	sinf@sign& (0+255),b
  5624   0010CE                     
  5625                           ; BSR set to: 0
  5626   0010CE  9FBD               	bcf	(sinf@ux+3)& (0+255),7,b
  5627   0010D0                     
  5628                           ; BSR set to: 0
  5629   0010D0  0EDB               	movlw	219
  5630   0010D2  5DBA               	subwf	sinf@ux& (0+255),w,b
  5631   0010D4  0E0F               	movlw	15
  5632   0010D6  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5633   0010D8  0E49               	movlw	73
  5634   0010DA  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5635   0010DC  0E3F               	movlw	63
  5636   0010DE  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5637   0010E0  B0D8               	btfsc	status,0,c
  5638   0010E2  EF75  F008         	goto	u9481
  5639   0010E6  EF77  F008         	goto	u9480
  5640   0010EA                     u9481:
  5641   0010EA  EFA0  F008         	goto	l7810
  5642   0010EE                     u9480:
  5643   0010EE                     
  5644                           ; BSR set to: 0
  5645   0010EE  0E80               	movlw	128
  5646   0010F0  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  5647   0010F2  0E39               	movlw	57
  5648   0010F4  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5649   0010F6  B0D8               	btfsc	status,0,c
  5650   0010F8  EF80  F008         	goto	u9491
  5651   0010FC  EF82  F008         	goto	u9490
  5652   001100                     u9491:
  5653   001100  EF8C  F008         	goto	l7806
  5654   001104                     u9490:
  5655   001104                     
  5656                           ; BSR set to: 0
  5657   001104  C0A4  F0A4         	movff	sinf@x,?_sinf
  5658   001108  C0A5  F0A5         	movff	sinf@x+1,?_sinf+1
  5659   00110C  C0A6  F0A6         	movff	sinf@x+2,?_sinf+2
  5660   001110  C0A7  F0A7         	movff	sinf@x+3,?_sinf+3
  5661   001114  EFD8  F00A         	goto	l1694
  5662   001118                     l7806:
  5663                           
  5664                           ; BSR set to: 0
  5665   001118  C0A4  F064         	movff	sinf@x,___sindf@x
  5666   00111C  C0A5  F065         	movff	sinf@x+1,___sindf@x+1
  5667   001120  C0A6  F066         	movff	sinf@x+2,___sindf@x+2
  5668   001124  C0A7  F067         	movff	sinf@x+3,___sindf@x+3
  5669   001128  EC55  F018         	call	___sindf	;wreg free
  5670   00112C  C064  F0A4         	movff	?___sindf,?_sinf
  5671   001130  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5672   001134  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5673   001138  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5674   00113C  EFD8  F00A         	goto	l1694
  5675   001140                     l7810:
  5676                           
  5677                           ; BSR set to: 0
  5678   001140  0ED2               	movlw	210
  5679   001142  5DBA               	subwf	sinf@ux& (0+255),w,b
  5680   001144  0E53               	movlw	83
  5681   001146  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5682   001148  0E7B               	movlw	123
  5683   00114A  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5684   00114C  0E40               	movlw	64
  5685   00114E  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5686   001150  B0D8               	btfsc	status,0,c
  5687   001152  EFAD  F008         	goto	u9501
  5688   001156  EFAF  F008         	goto	u9500
  5689   00115A                     u9501:
  5690   00115A  EF92  F009         	goto	l7840
  5691   00115E                     u9500:
  5692   00115E                     
  5693                           ; BSR set to: 0
  5694   00115E  0EE4               	movlw	228
  5695   001160  5DBA               	subwf	sinf@ux& (0+255),w,b
  5696   001162  0ECB               	movlw	203
  5697   001164  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5698   001166  0E16               	movlw	22
  5699   001168  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5700   00116A  0E40               	movlw	64
  5701   00116C  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5702   00116E  B0D8               	btfsc	status,0,c
  5703   001170  EFBC  F008         	goto	u9511
  5704   001174  EFBE  F008         	goto	u9510
  5705   001178                     u9511:
  5706   001178  EF2C  F009         	goto	l7830
  5707   00117C                     u9510:
  5708   00117C                     
  5709                           ; BSR set to: 0
  5710   00117C  51B1               	movf	sinf@sign& (0+255),w,b
  5711   00117E  B4D8               	btfsc	status,2,c
  5712   001180  EFC4  F008         	goto	u9521
  5713   001184  EFC6  F008         	goto	u9520
  5714   001188                     u9521:
  5715   001188  EFFE  F008         	goto	l7824
  5716   00118C                     u9520:
  5717   00118C                     
  5718                           ; BSR set to: 0
  5719   00118C  0EDB               	movlw	219
  5720   00118E  6E4A               	movwf	___fladd@a^0,c
  5721   001190  0E0F               	movlw	15
  5722   001192  6E4B               	movwf	(___fladd@a+1)^0,c
  5723   001194  0EC9               	movlw	201
  5724   001196  6E4C               	movwf	(___fladd@a+2)^0,c
  5725   001198  0E3F               	movlw	63
  5726   00119A  6E4D               	movwf	(___fladd@a+3)^0,c
  5727   00119C  C0A4  F046         	movff	sinf@x,___fladd@b
  5728   0011A0  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5729   0011A4  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5730   0011A8  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5731   0011AC  ECD9  F00A         	call	___fladd	;wreg free
  5732   0011B0  C046  F0B2         	movff	?___fladd,_sinf$4534
  5733   0011B4  C047  F0B3         	movff	?___fladd+1,_sinf$4534+1
  5734   0011B8  C048  F0B4         	movff	?___fladd+2,_sinf$4534+2
  5735   0011BC  C049  F0B5         	movff	?___fladd+3,_sinf$4534+3
  5736   0011C0                     l7818:
  5737   0011C0  C0B2  F064         	movff	_sinf$4534,___cosdf@x
  5738   0011C4  C0B3  F065         	movff	_sinf$4534+1,___cosdf@x+1
  5739   0011C8  C0B4  F066         	movff	_sinf$4534+2,___cosdf@x+2
  5740   0011CC  C0B5  F067         	movff	_sinf$4534+3,___cosdf@x+3
  5741   0011D0  EC82  F01B         	call	___cosdf	;wreg free
  5742   0011D4  C064  F080         	movff	?___cosdf,___flneg@f1
  5743   0011D8  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  5744   0011DC  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  5745   0011E0  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  5746   0011E4  EC8D  F028         	call	___flneg	;wreg free
  5747   0011E8  C080  F0A4         	movff	?___flneg,?_sinf
  5748   0011EC  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  5749   0011F0  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  5750   0011F4  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  5751   0011F8  EFD8  F00A         	goto	l1694
  5752   0011FC                     l7824:
  5753                           
  5754                           ; BSR set to: 0
  5755   0011FC  C0A4  F046         	movff	sinf@x,___fladd@b
  5756   001200  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5757   001204  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5758   001208  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5759   00120C  0EDB               	movlw	219
  5760   00120E  6E4A               	movwf	___fladd@a^0,c
  5761   001210  0E0F               	movlw	15
  5762   001212  6E4B               	movwf	(___fladd@a+1)^0,c
  5763   001214  0EC9               	movlw	201
  5764   001216  6E4C               	movwf	(___fladd@a+2)^0,c
  5765   001218  0EBF               	movlw	191
  5766   00121A  6E4D               	movwf	(___fladd@a+3)^0,c
  5767   00121C  ECD9  F00A         	call	___fladd	;wreg free
  5768   001220  C046  F0B2         	movff	?___fladd,_sinf$4534
  5769   001224  C047  F0B3         	movff	?___fladd+1,_sinf$4534+1
  5770   001228  C048  F0B4         	movff	?___fladd+2,_sinf$4534+2
  5771   00122C  C049  F0B5         	movff	?___fladd+3,_sinf$4534+3
  5772   001230                     l7826:
  5773   001230  C0B2  F064         	movff	_sinf$4534,___cosdf@x
  5774   001234  C0B3  F065         	movff	_sinf$4534+1,___cosdf@x+1
  5775   001238  C0B4  F066         	movff	_sinf$4534+2,___cosdf@x+2
  5776   00123C  C0B5  F067         	movff	_sinf$4534+3,___cosdf@x+3
  5777   001240  EC82  F01B         	call	___cosdf	;wreg free
  5778   001244  C064  F0A4         	movff	?___cosdf,?_sinf
  5779   001248  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  5780   00124C  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  5781   001250  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  5782   001254  EFD8  F00A         	goto	l1694
  5783   001258                     l7830:
  5784                           
  5785                           ; BSR set to: 0
  5786   001258  51B1               	movf	sinf@sign& (0+255),w,b
  5787   00125A  A4D8               	btfss	status,2,c
  5788   00125C  EF32  F009         	goto	u9531
  5789   001260  EF34  F009         	goto	u9530
  5790   001264                     u9531:
  5791   001264  EF5A  F009         	goto	l7834
  5792   001268                     u9530:
  5793   001268                     
  5794                           ; BSR set to: 0
  5795   001268  0EDB               	movlw	219
  5796   00126A  6E4A               	movwf	___fladd@a^0,c
  5797   00126C  0E0F               	movlw	15
  5798   00126E  6E4B               	movwf	(___fladd@a+1)^0,c
  5799   001270  0E49               	movlw	73
  5800   001272  6E4C               	movwf	(___fladd@a+2)^0,c
  5801   001274  0EC0               	movlw	192
  5802   001276  6E4D               	movwf	(___fladd@a+3)^0,c
  5803   001278  C0A4  F046         	movff	sinf@x,___fladd@b
  5804   00127C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5805   001280  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5806   001284  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5807   001288  ECD9  F00A         	call	___fladd	;wreg free
  5808   00128C  C046  F080         	movff	?___fladd,___flneg@f1
  5809   001290  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5810   001294  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5811   001298  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5812   00129C  EC8D  F028         	call	___flneg	;wreg free
  5813   0012A0  C080  F0A8         	movff	?___flneg,_sinf$4250
  5814   0012A4  C081  F0A9         	movff	?___flneg+1,_sinf$4250+1
  5815   0012A8  C082  F0AA         	movff	?___flneg+2,_sinf$4250+2
  5816   0012AC  C083  F0AB         	movff	?___flneg+3,_sinf$4250+3
  5817   0012B0  EF7E  F009         	goto	l7836
  5818   0012B4                     l7834:
  5819                           
  5820                           ; BSR set to: 0
  5821   0012B4  0EDB               	movlw	219
  5822   0012B6  6E4A               	movwf	___fladd@a^0,c
  5823   0012B8  0E0F               	movlw	15
  5824   0012BA  6E4B               	movwf	(___fladd@a+1)^0,c
  5825   0012BC  0E49               	movlw	73
  5826   0012BE  6E4C               	movwf	(___fladd@a+2)^0,c
  5827   0012C0  0E40               	movlw	64
  5828   0012C2  6E4D               	movwf	(___fladd@a+3)^0,c
  5829   0012C4  C0A4  F046         	movff	sinf@x,___fladd@b
  5830   0012C8  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5831   0012CC  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5832   0012D0  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5833   0012D4  ECD9  F00A         	call	___fladd	;wreg free
  5834   0012D8  C046  F080         	movff	?___fladd,___flneg@f1
  5835   0012DC  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5836   0012E0  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5837   0012E4  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5838   0012E8  EC8D  F028         	call	___flneg	;wreg free
  5839   0012EC  C080  F0A8         	movff	?___flneg,_sinf$4250
  5840   0012F0  C081  F0A9         	movff	?___flneg+1,_sinf$4250+1
  5841   0012F4  C082  F0AA         	movff	?___flneg+2,_sinf$4250+2
  5842   0012F8  C083  F0AB         	movff	?___flneg+3,_sinf$4250+3
  5843   0012FC                     l7836:
  5844   0012FC  C0A8  F064         	movff	_sinf$4250,___sindf@x
  5845   001300  C0A9  F065         	movff	_sinf$4250+1,___sindf@x+1
  5846   001304  C0AA  F066         	movff	_sinf$4250+2,___sindf@x+2
  5847   001308  C0AB  F067         	movff	_sinf$4250+3,___sindf@x+3
  5848   00130C  EC55  F018         	call	___sindf	;wreg free
  5849   001310  C064  F0A4         	movff	?___sindf,?_sinf
  5850   001314  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5851   001318  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5852   00131C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5853   001320  EFD8  F00A         	goto	l1694
  5854   001324                     l7840:
  5855                           
  5856                           ; BSR set to: 0
  5857   001324  0ED6               	movlw	214
  5858   001326  5DBA               	subwf	sinf@ux& (0+255),w,b
  5859   001328  0E31               	movlw	49
  5860   00132A  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5861   00132C  0EE2               	movlw	226
  5862   00132E  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5863   001330  0E40               	movlw	64
  5864   001332  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5865   001334  B0D8               	btfsc	status,0,c
  5866   001336  EF9F  F009         	goto	u9541
  5867   00133A  EFA1  F009         	goto	u9540
  5868   00133E                     u9541:
  5869   00133E  EF42  F00A         	goto	l7870
  5870   001342                     u9540:
  5871   001342                     
  5872                           ; BSR set to: 0
  5873   001342  0EE0               	movlw	224
  5874   001344  5DBA               	subwf	sinf@ux& (0+255),w,b
  5875   001346  0EED               	movlw	237
  5876   001348  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5877   00134A  0EAF               	movlw	175
  5878   00134C  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5879   00134E  0E40               	movlw	64
  5880   001350  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5881   001352  B0D8               	btfsc	status,0,c
  5882   001354  EFAE  F009         	goto	u9551
  5883   001358  EFB0  F009         	goto	u9550
  5884   00135C                     u9551:
  5885   00135C  EFF0  F009         	goto	l7860
  5886   001360                     u9550:
  5887   001360                     
  5888                           ; BSR set to: 0
  5889   001360  51B1               	movf	sinf@sign& (0+255),w,b
  5890   001362  B4D8               	btfsc	status,2,c
  5891   001364  EFB6  F009         	goto	u9561
  5892   001368  EFB8  F009         	goto	u9560
  5893   00136C                     u9561:
  5894   00136C  EFD4  F009         	goto	l7854
  5895   001370                     u9560:
  5896   001370                     
  5897                           ; BSR set to: 0
  5898   001370  C0A4  F046         	movff	sinf@x,___fladd@b
  5899   001374  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5900   001378  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5901   00137C  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5902   001380  0EE4               	movlw	228
  5903   001382  6E4A               	movwf	___fladd@a^0,c
  5904   001384  0ECB               	movlw	203
  5905   001386  6E4B               	movwf	(___fladd@a+1)^0,c
  5906   001388  0E96               	movlw	150
  5907   00138A  6E4C               	movwf	(___fladd@a+2)^0,c
  5908   00138C  0E40               	movlw	64
  5909   00138E  6E4D               	movwf	(___fladd@a+3)^0,c
  5910   001390  ECD9  F00A         	call	___fladd	;wreg free
  5911   001394  C046  F0B2         	movff	?___fladd,_sinf$4534
  5912   001398  C047  F0B3         	movff	?___fladd+1,_sinf$4534+1
  5913   00139C  C048  F0B4         	movff	?___fladd+2,_sinf$4534+2
  5914   0013A0  C049  F0B5         	movff	?___fladd+3,_sinf$4534+3
  5915   0013A4  EF18  F009         	goto	l7826
  5916   0013A8                     l7854:
  5917                           
  5918                           ; BSR set to: 0
  5919   0013A8  0EE4               	movlw	228
  5920   0013AA  6E4A               	movwf	___fladd@a^0,c
  5921   0013AC  0ECB               	movlw	203
  5922   0013AE  6E4B               	movwf	(___fladd@a+1)^0,c
  5923   0013B0  0E96               	movlw	150
  5924   0013B2  6E4C               	movwf	(___fladd@a+2)^0,c
  5925   0013B4  0EC0               	movlw	192
  5926   0013B6  6E4D               	movwf	(___fladd@a+3)^0,c
  5927   0013B8  C0A4  F046         	movff	sinf@x,___fladd@b
  5928   0013BC  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5929   0013C0  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5930   0013C4  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5931   0013C8  ECD9  F00A         	call	___fladd	;wreg free
  5932   0013CC  C046  F0B2         	movff	?___fladd,_sinf$4534
  5933   0013D0  C047  F0B3         	movff	?___fladd+1,_sinf$4534+1
  5934   0013D4  C048  F0B4         	movff	?___fladd+2,_sinf$4534+2
  5935   0013D8  C049  F0B5         	movff	?___fladd+3,_sinf$4534+3
  5936   0013DC  EFE0  F008         	goto	l7818
  5937   0013E0                     l7860:
  5938                           
  5939                           ; BSR set to: 0
  5940   0013E0  51B1               	movf	sinf@sign& (0+255),w,b
  5941   0013E2  A4D8               	btfss	status,2,c
  5942   0013E4  EFF6  F009         	goto	u9571
  5943   0013E8  EFF8  F009         	goto	u9570
  5944   0013EC                     u9571:
  5945   0013EC  EF14  F00A         	goto	l7864
  5946   0013F0                     u9570:
  5947   0013F0                     
  5948                           ; BSR set to: 0
  5949   0013F0  C0A4  F046         	movff	sinf@x,___fladd@b
  5950   0013F4  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5951   0013F8  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5952   0013FC  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5953   001400  0EDB               	movlw	219
  5954   001402  6E4A               	movwf	___fladd@a^0,c
  5955   001404  0E0F               	movlw	15
  5956   001406  6E4B               	movwf	(___fladd@a+1)^0,c
  5957   001408  0EC9               	movlw	201
  5958   00140A  6E4C               	movwf	(___fladd@a+2)^0,c
  5959   00140C  0EC0               	movlw	192
  5960   00140E  6E4D               	movwf	(___fladd@a+3)^0,c
  5961   001410  ECD9  F00A         	call	___fladd	;wreg free
  5962   001414  C046  F0AC         	movff	?___fladd,_sinf$4251
  5963   001418  C047  F0AD         	movff	?___fladd+1,_sinf$4251+1
  5964   00141C  C048  F0AE         	movff	?___fladd+2,_sinf$4251+2
  5965   001420  C049  F0AF         	movff	?___fladd+3,_sinf$4251+3
  5966   001424  EF2E  F00A         	goto	l7866
  5967   001428                     l7864:
  5968                           
  5969                           ; BSR set to: 0
  5970   001428  C0A4  F046         	movff	sinf@x,___fladd@b
  5971   00142C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5972   001430  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5973   001434  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5974   001438  0EDB               	movlw	219
  5975   00143A  6E4A               	movwf	___fladd@a^0,c
  5976   00143C  0E0F               	movlw	15
  5977   00143E  6E4B               	movwf	(___fladd@a+1)^0,c
  5978   001440  0EC9               	movlw	201
  5979   001442  6E4C               	movwf	(___fladd@a+2)^0,c
  5980   001444  0E40               	movlw	64
  5981   001446  6E4D               	movwf	(___fladd@a+3)^0,c
  5982   001448  ECD9  F00A         	call	___fladd	;wreg free
  5983   00144C  C046  F0AC         	movff	?___fladd,_sinf$4251
  5984   001450  C047  F0AD         	movff	?___fladd+1,_sinf$4251+1
  5985   001454  C048  F0AE         	movff	?___fladd+2,_sinf$4251+2
  5986   001458  C049  F0AF         	movff	?___fladd+3,_sinf$4251+3
  5987   00145C                     l7866:
  5988   00145C  C0AC  F064         	movff	_sinf$4251,___sindf@x
  5989   001460  C0AD  F065         	movff	_sinf$4251+1,___sindf@x+1
  5990   001464  C0AE  F066         	movff	_sinf$4251+2,___sindf@x+2
  5991   001468  C0AF  F067         	movff	_sinf$4251+3,___sindf@x+3
  5992   00146C  EC55  F018         	call	___sindf	;wreg free
  5993   001470  C064  F0A4         	movff	?___sindf,?_sinf
  5994   001474  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5995   001478  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5996   00147C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5997   001480  EFD8  F00A         	goto	l1694
  5998   001484                     l7870:
  5999                           
  6000                           ; BSR set to: 0
  6001   001484  0E80               	movlw	128
  6002   001486  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  6003   001488  0E7F               	movlw	127
  6004   00148A  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  6005   00148C  A0D8               	btfss	status,0,c
  6006   00148E  EF4B  F00A         	goto	u9581
  6007   001492  EF4D  F00A         	goto	u9580
  6008   001496                     u9581:
  6009   001496  EF5F  F00A         	goto	l7878
  6010   00149A                     u9580:
  6011   00149A                     
  6012                           ; BSR set to: 0
  6013   00149A  0EFF               	movlw	255
  6014   00149C  13BA               	iorwf	sinf@ux& (0+255),f,b
  6015   00149E  0EFF               	movlw	255
  6016   0014A0  13BB               	iorwf	(sinf@ux+1)& (0+255),f,b
  6017   0014A2  0EFF               	movlw	255
  6018   0014A4  13BC               	iorwf	(sinf@ux+2)& (0+255),f,b
  6019   0014A6  0E00               	movlw	0
  6020   0014A8  13BD               	iorwf	(sinf@ux+3)& (0+255),f,b
  6021   0014AA                     
  6022                           ; BSR set to: 0
  6023   0014AA  C0BA  F0A4         	movff	sinf@ux,?_sinf
  6024   0014AE  C0BB  F0A5         	movff	sinf@ux+1,?_sinf+1
  6025   0014B2  C0BC  F0A6         	movff	sinf@ux+2,?_sinf+2
  6026   0014B6  C0BD  F0A7         	movff	sinf@ux+3,?_sinf+3
  6027   0014BA  EFD8  F00A         	goto	l1694
  6028   0014BE                     l7878:
  6029                           
  6030                           ; BSR set to: 0
  6031   0014BE  C0A4  F084         	movff	sinf@x,___rem_pio2f@x
  6032   0014C2  C0A5  F085         	movff	sinf@x+1,___rem_pio2f@x+1
  6033   0014C6  C0A6  F086         	movff	sinf@x+2,___rem_pio2f@x+2
  6034   0014CA  C0A7  F087         	movff	sinf@x+3,___rem_pio2f@x+3
  6035   0014CE  0EB6               	movlw	low sinf@y
  6036   0014D0  6F88               	movwf	___rem_pio2f@y& (0+255),b
  6037   0014D2  EC33  F013         	call	___rem_pio2f	;wreg free
  6038   0014D6  0100               	movlb	0	; () banked
  6039   0014D8  5184               	movf	?___rem_pio2f& (0+255),w,b
  6040   0014DA  0B03               	andlw	3
  6041   0014DC  6FB0               	movwf	sinf@n& (0+255),b
  6042   0014DE  EFC9  F00A         	goto	l7896
  6043   0014E2                     l7880:
  6044                           
  6045                           ; BSR set to: 0
  6046   0014E2  C0B6  F080         	movff	sinf@y,___flneg@f1
  6047   0014E6  C0B7  F081         	movff	sinf@y+1,___flneg@f1+1
  6048   0014EA  C0B8  F082         	movff	sinf@y+2,___flneg@f1+2
  6049   0014EE  C0B9  F083         	movff	sinf@y+3,___flneg@f1+3
  6050   0014F2  EC8D  F028         	call	___flneg	;wreg free
  6051   0014F6  C080  F0B6         	movff	?___flneg,sinf@y
  6052   0014FA  C081  F0B7         	movff	?___flneg+1,sinf@y+1
  6053   0014FE  C082  F0B8         	movff	?___flneg+2,sinf@y+2
  6054   001502  C083  F0B9         	movff	?___flneg+3,sinf@y+3
  6055   001506                     l7882:
  6056   001506  C0B6  F064         	movff	sinf@y,___sindf@x
  6057   00150A  C0B7  F065         	movff	sinf@y+1,___sindf@x+1
  6058   00150E  C0B8  F066         	movff	sinf@y+2,___sindf@x+2
  6059   001512  C0B9  F067         	movff	sinf@y+3,___sindf@x+3
  6060   001516  EC55  F018         	call	___sindf	;wreg free
  6061   00151A  C064  F0A4         	movff	?___sindf,?_sinf
  6062   00151E  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  6063   001522  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  6064   001526  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  6065   00152A  EFD8  F00A         	goto	l1694
  6066   00152E                     l7886:
  6067                           
  6068                           ; BSR set to: 0
  6069   00152E  C0B6  F064         	movff	sinf@y,___cosdf@x
  6070   001532  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  6071   001536  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  6072   00153A  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  6073   00153E  EC82  F01B         	call	___cosdf	;wreg free
  6074   001542  C064  F0A4         	movff	?___cosdf,?_sinf
  6075   001546  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  6076   00154A  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  6077   00154E  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  6078   001552  EFD8  F00A         	goto	l1694
  6079   001556                     l7890:
  6080                           
  6081                           ; BSR set to: 0
  6082   001556  C0B6  F064         	movff	sinf@y,___cosdf@x
  6083   00155A  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  6084   00155E  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  6085   001562  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  6086   001566  EC82  F01B         	call	___cosdf	;wreg free
  6087   00156A  C064  F080         	movff	?___cosdf,___flneg@f1
  6088   00156E  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  6089   001572  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  6090   001576  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  6091   00157A  EC8D  F028         	call	___flneg	;wreg free
  6092   00157E  C080  F0A4         	movff	?___flneg,?_sinf
  6093   001582  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  6094   001586  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  6095   00158A  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  6096   00158E  EFD8  F00A         	goto	l1694
  6097   001592                     l7896:
  6098                           
  6099                           ; BSR set to: 0
  6100   001592  51B0               	movf	sinf@n& (0+255),w,b
  6101                           
  6102                           ; Switch size 1, requested type "simple"
  6103                           ; Number of cases is 3, Range of values is 0 to 2
  6104                           ; switch strategies available:
  6105                           ; Name         Instructions Cycles
  6106                           ; simple_byte           10     6 (average)
  6107                           ;	Chosen strategy is simple_byte
  6108   001594  0A00               	xorlw	0	; case 0
  6109   001596  B4D8               	btfsc	status,2,c
  6110   001598  EF83  F00A         	goto	l7882
  6111   00159C  0A01               	xorlw	1	; case 1
  6112   00159E  B4D8               	btfsc	status,2,c
  6113   0015A0  EF97  F00A         	goto	l7886
  6114   0015A4  0A03               	xorlw	3	; case 2
  6115   0015A6  B4D8               	btfsc	status,2,c
  6116   0015A8  EF71  F00A         	goto	l7880
  6117   0015AC  EFAB  F00A         	goto	l7890
  6118   0015B0                     l1694:
  6119   0015B0  0012               	return		;funcret
  6120   0015B2                     __end_of_sinf:
  6121                           	callstack 0
  6122                           
  6123 ;; *************** function ___sindf *****************
  6124 ;; Defined at:
  6125 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__sindf.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  x               4    4[BANK0 ] float 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;  z               4   32[BANK0 ] float 
  6130 ;;  s               4   28[BANK0 ] float 
  6131 ;;  w               4   12[BANK0 ] float 
  6132 ;;  r               4    8[BANK0 ] float 
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  4    4[BANK0 ] float 
  6135 ;; Registers used:
  6136 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6142 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6145 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6146 ;;Total ram usage:       32 bytes
  6147 ;; Hardware stack levels used: 1
  6148 ;; Hardware stack levels required when called: 2
  6149 ;; This function calls:
  6150 ;;		___fladd
  6151 ;;		___flmul
  6152 ;; This function is called by:
  6153 ;;		_sinf
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           	psect	text18
  6158   0030AA                     __ptext18:
  6159                           	callstack 0
  6160   0030AA                     ___sindf:
  6161                           	callstack 26
  6162   0030AA  C064  F014         	movff	___sindf@x,___flmul@b
  6163   0030AE  C065  F015         	movff	___sindf@x+1,___flmul@b+1
  6164   0030B2  C066  F016         	movff	___sindf@x+2,___flmul@b+2
  6165   0030B6  C067  F017         	movff	___sindf@x+3,___flmul@b+3
  6166   0030BA  C064  F018         	movff	___sindf@x,___flmul@a
  6167   0030BE  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  6168   0030C2  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  6169   0030C6  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  6170   0030CA  EC3A  F00D         	call	___flmul	;wreg free
  6171   0030CE  C014  F080         	movff	?___flmul,___sindf@z
  6172   0030D2  C015  F081         	movff	?___flmul+1,___sindf@z+1
  6173   0030D6  C016  F082         	movff	?___flmul+2,___sindf@z+2
  6174   0030DA  C017  F083         	movff	?___flmul+3,___sindf@z+3
  6175   0030DE  C080  F014         	movff	___sindf@z,___flmul@b
  6176   0030E2  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6177   0030E6  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6178   0030EA  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6179   0030EE  C080  F018         	movff	___sindf@z,___flmul@a
  6180   0030F2  C081  F019         	movff	___sindf@z+1,___flmul@a+1
  6181   0030F6  C082  F01A         	movff	___sindf@z+2,___flmul@a+2
  6182   0030FA  C083  F01B         	movff	___sindf@z+3,___flmul@a+3
  6183   0030FE  EC3A  F00D         	call	___flmul	;wreg free
  6184   003102  C014  F06C         	movff	?___flmul,___sindf@w
  6185   003106  C015  F06D         	movff	?___flmul+1,___sindf@w+1
  6186   00310A  C016  F06E         	movff	?___flmul+2,___sindf@w+2
  6187   00310E  C017  F06F         	movff	?___flmul+3,___sindf@w+3
  6188   003112  0E3C               	movlw	60
  6189   003114  6E18               	movwf	___flmul@a^0,c
  6190   003116  0E6C               	movlw	108
  6191   003118  6E19               	movwf	(___flmul@a+1)^0,c
  6192   00311A  0E36               	movlw	54
  6193   00311C  6E1A               	movwf	(___flmul@a+2)^0,c
  6194   00311E  0E36               	movlw	54
  6195   003120  6E1B               	movwf	(___flmul@a+3)^0,c
  6196   003122  C080  F014         	movff	___sindf@z,___flmul@b
  6197   003126  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6198   00312A  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6199   00312E  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6200   003132  EC3A  F00D         	call	___flmul	;wreg free
  6201   003136  C014  F046         	movff	?___flmul,___fladd@b
  6202   00313A  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6203   00313E  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6204   003142  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6205   003146  0ECF               	movlw	207
  6206   003148  6E4A               	movwf	___fladd@a^0,c
  6207   00314A  0E07               	movlw	7
  6208   00314C  6E4B               	movwf	(___fladd@a+1)^0,c
  6209   00314E  0E50               	movlw	80
  6210   003150  6E4C               	movwf	(___fladd@a+2)^0,c
  6211   003152  0EB9               	movlw	185
  6212   003154  6E4D               	movwf	(___fladd@a+3)^0,c
  6213   003156  ECD9  F00A         	call	___fladd	;wreg free
  6214   00315A  C046  F068         	movff	?___fladd,___sindf@r
  6215   00315E  C047  F069         	movff	?___fladd+1,___sindf@r+1
  6216   003162  C048  F06A         	movff	?___fladd+2,___sindf@r+2
  6217   003166  C049  F06B         	movff	?___fladd+3,___sindf@r+3
  6218   00316A  C080  F014         	movff	___sindf@z,___flmul@b
  6219   00316E  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6220   003172  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6221   003176  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6222   00317A  C064  F018         	movff	___sindf@x,___flmul@a
  6223   00317E  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  6224   003182  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  6225   003186  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  6226   00318A  EC3A  F00D         	call	___flmul	;wreg free
  6227   00318E  C014  F07C         	movff	?___flmul,___sindf@s
  6228   003192  C015  F07D         	movff	?___flmul+1,___sindf@s+1
  6229   003196  C016  F07E         	movff	?___flmul+2,___sindf@s+2
  6230   00319A  C017  F07F         	movff	?___flmul+3,___sindf@s+3
  6231   00319E  0EAB               	movlw	171
  6232   0031A0  6E4A               	movwf	___fladd@a^0,c
  6233   0031A2  0EAA               	movlw	170
  6234   0031A4  6E4B               	movwf	(___fladd@a+1)^0,c
  6235   0031A6  0E2A               	movlw	42
  6236   0031A8  6E4C               	movwf	(___fladd@a+2)^0,c
  6237   0031AA  0EBE               	movlw	190
  6238   0031AC  6E4D               	movwf	(___fladd@a+3)^0,c
  6239   0031AE  0E84               	movlw	132
  6240   0031B0  6E18               	movwf	___flmul@a^0,c
  6241   0031B2  0E88               	movlw	136
  6242   0031B4  6E19               	movwf	(___flmul@a+1)^0,c
  6243   0031B6  0E08               	movlw	8
  6244   0031B8  6E1A               	movwf	(___flmul@a+2)^0,c
  6245   0031BA  0E3C               	movlw	60
  6246   0031BC  6E1B               	movwf	(___flmul@a+3)^0,c
  6247   0031BE  C080  F014         	movff	___sindf@z,___flmul@b
  6248   0031C2  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6249   0031C6  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6250   0031CA  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6251   0031CE  EC3A  F00D         	call	___flmul	;wreg free
  6252   0031D2  C014  F046         	movff	?___flmul,___fladd@b
  6253   0031D6  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6254   0031DA  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6255   0031DE  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6256   0031E2  ECD9  F00A         	call	___fladd	;wreg free
  6257   0031E6  C046  F070         	movff	?___fladd,___sindf$4539
  6258   0031EA  C047  F071         	movff	?___fladd+1,___sindf$4539+1
  6259   0031EE  C048  F072         	movff	?___fladd+2,___sindf$4539+2
  6260   0031F2  C049  F073         	movff	?___fladd+3,___sindf$4539+3
  6261   0031F6  C06C  F018         	movff	___sindf@w,___flmul@a
  6262   0031FA  C06D  F019         	movff	___sindf@w+1,___flmul@a+1
  6263   0031FE  C06E  F01A         	movff	___sindf@w+2,___flmul@a+2
  6264   003202  C06F  F01B         	movff	___sindf@w+3,___flmul@a+3
  6265   003206  C07C  F014         	movff	___sindf@s,___flmul@b
  6266   00320A  C07D  F015         	movff	___sindf@s+1,___flmul@b+1
  6267   00320E  C07E  F016         	movff	___sindf@s+2,___flmul@b+2
  6268   003212  C07F  F017         	movff	___sindf@s+3,___flmul@b+3
  6269   003216  EC3A  F00D         	call	___flmul	;wreg free
  6270   00321A  C014  F074         	movff	?___flmul,___sindf$4540
  6271   00321E  C015  F075         	movff	?___flmul+1,___sindf$4540+1
  6272   003222  C016  F076         	movff	?___flmul+2,___sindf$4540+2
  6273   003226  C017  F077         	movff	?___flmul+3,___sindf$4540+3
  6274   00322A  C064  F04A         	movff	___sindf@x,___fladd@a
  6275   00322E  C065  F04B         	movff	___sindf@x+1,___fladd@a+1
  6276   003232  C066  F04C         	movff	___sindf@x+2,___fladd@a+2
  6277   003236  C067  F04D         	movff	___sindf@x+3,___fladd@a+3
  6278   00323A  C07C  F018         	movff	___sindf@s,___flmul@a
  6279   00323E  C07D  F019         	movff	___sindf@s+1,___flmul@a+1
  6280   003242  C07E  F01A         	movff	___sindf@s+2,___flmul@a+2
  6281   003246  C07F  F01B         	movff	___sindf@s+3,___flmul@a+3
  6282   00324A  C070  F014         	movff	___sindf$4539,___flmul@b
  6283   00324E  C071  F015         	movff	___sindf$4539+1,___flmul@b+1
  6284   003252  C072  F016         	movff	___sindf$4539+2,___flmul@b+2
  6285   003256  C073  F017         	movff	___sindf$4539+3,___flmul@b+3
  6286   00325A  EC3A  F00D         	call	___flmul	;wreg free
  6287   00325E  C014  F046         	movff	?___flmul,___fladd@b
  6288   003262  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6289   003266  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6290   00326A  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6291   00326E  ECD9  F00A         	call	___fladd	;wreg free
  6292   003272  C046  F078         	movff	?___fladd,___sindf$4541
  6293   003276  C047  F079         	movff	?___fladd+1,___sindf$4541+1
  6294   00327A  C048  F07A         	movff	?___fladd+2,___sindf$4541+2
  6295   00327E  C049  F07B         	movff	?___fladd+3,___sindf$4541+3
  6296   003282  C078  F046         	movff	___sindf$4541,___fladd@b
  6297   003286  C079  F047         	movff	___sindf$4541+1,___fladd@b+1
  6298   00328A  C07A  F048         	movff	___sindf$4541+2,___fladd@b+2
  6299   00328E  C07B  F049         	movff	___sindf$4541+3,___fladd@b+3
  6300   003292  C068  F018         	movff	___sindf@r,___flmul@a
  6301   003296  C069  F019         	movff	___sindf@r+1,___flmul@a+1
  6302   00329A  C06A  F01A         	movff	___sindf@r+2,___flmul@a+2
  6303   00329E  C06B  F01B         	movff	___sindf@r+3,___flmul@a+3
  6304   0032A2  C074  F014         	movff	___sindf$4540,___flmul@b
  6305   0032A6  C075  F015         	movff	___sindf$4540+1,___flmul@b+1
  6306   0032AA  C076  F016         	movff	___sindf$4540+2,___flmul@b+2
  6307   0032AE  C077  F017         	movff	___sindf$4540+3,___flmul@b+3
  6308   0032B2  EC3A  F00D         	call	___flmul	;wreg free
  6309   0032B6  C014  F04A         	movff	?___flmul,___fladd@a
  6310   0032BA  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6311   0032BE  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6312   0032C2  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6313   0032C6  ECD9  F00A         	call	___fladd	;wreg free
  6314   0032CA  C046  F064         	movff	?___fladd,?___sindf
  6315   0032CE  C047  F065         	movff	?___fladd+1,?___sindf+1
  6316   0032D2  C048  F066         	movff	?___fladd+2,?___sindf+2
  6317   0032D6  C049  F067         	movff	?___fladd+3,?___sindf+3
  6318   0032DA  0012               	return		;funcret
  6319   0032DC                     __end_of___sindf:
  6320                           	callstack 0
  6321                           
  6322 ;; *************** function ___rem_pio2f *****************
  6323 ;; Defined at:
  6324 ;;		line 44 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__rem_pio2f.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  x               4   36[BANK0 ] float 
  6327 ;;  y               1   40[BANK0 ] PTR 
  6328 ;;		 -> sinf@y(4), 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;  n               4   64[BANK0 ] long 
  6331 ;;  t               4   60[BANK0 ] float 
  6332 ;;  fn              4   56[BANK0 ] float 
  6333 ;;  ux              4   52[BANK0 ] struct .
  6334 ;;  ty              4   43[BANK0 ] [1]
  6335 ;;  sign            1   51[BANK0 ] _Bool 
  6336 ;; Return value:  Size  Location     Type
  6337 ;;                  2   36[BANK0 ] int 
  6338 ;; Registers used:
  6339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6345 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6346 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6347 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;Total ram usage:       32 bytes
  6350 ;; Hardware stack levels used: 1
  6351 ;; Hardware stack levels required when called: 3
  6352 ;; This function calls:
  6353 ;;		___fladd
  6354 ;;		___flmul
  6355 ;;		___flneg
  6356 ;;		___flsub
  6357 ;;		___fltol
  6358 ;;		___xxtofl
  6359 ;;		_fabsf
  6360 ;; This function is called by:
  6361 ;;		_sinf
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text19
  6366   002666                     __ptext19:
  6367                           	callstack 0
  6368   002666                     ___rem_pio2f:
  6369                           	callstack 25
  6370   002666  C115  F094         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  6371   00266A  C116  F095         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  6372   00266E  C117  F096         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  6373   002672  C118  F097         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  6374   002676  C084  F094         	movff	___rem_pio2f@x,___rem_pio2f@ux
  6375   00267A  C085  F095         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  6376   00267E  C086  F096         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  6377   002682  C087  F097         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  6378   002686  0100               	movlb	0	; () banked
  6379   002688  BF97               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  6380   00268A  EF49  F013         	goto	u9311
  6381   00268E  EF4C  F013         	goto	u9310
  6382   002692                     u9311:
  6383   002692  0E01               	movlw	1
  6384   002694  EF4D  F013         	goto	u9320
  6385   002698                     u9310:
  6386   002698  0E00               	movlw	0
  6387   00269A                     u9320:
  6388   00269A  6F93               	movwf	___rem_pio2f@sign& (0+255),b
  6389   00269C                     
  6390                           ; BSR set to: 0
  6391   00269C  9F97               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  6392   00269E                     
  6393                           ; BSR set to: 0
  6394   00269E  0EDB               	movlw	219
  6395   0026A0  5D94               	subwf	___rem_pio2f@ux& (0+255),w,b
  6396   0026A2  0E0F               	movlw	15
  6397   0026A4  5995               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  6398   0026A6  0EC9               	movlw	201
  6399   0026A8  5996               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  6400   0026AA  0E4D               	movlw	77
  6401   0026AC  5997               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  6402   0026AE  B0D8               	btfsc	status,0,c
  6403   0026B0  EF5C  F013         	goto	u9331
  6404   0026B4  EF5E  F013         	goto	u9330
  6405   0026B8                     u9331:
  6406   0026B8  EF4A  F014         	goto	l7736
  6407   0026BC                     u9330:
  6408   0026BC                     
  6409                           ; BSR set to: 0
  6410   0026BC  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  6411   0026C0  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  6412   0026C4  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  6413   0026C8  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  6414   0026CC  ECFC  F028         	call	_fabsf	;wreg free
  6415   0026D0  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  6416   0026D4  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  6417   0026D8  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  6418   0026DC  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  6419   0026E0  0E00               	movlw	0
  6420   0026E2  6E4A               	movwf	___fladd@a^0,c
  6421   0026E4  0E00               	movlw	0
  6422   0026E6  6E4B               	movwf	(___fladd@a+1)^0,c
  6423   0026E8  0E00               	movlw	0
  6424   0026EA  6E4C               	movwf	(___fladd@a+2)^0,c
  6425   0026EC  0E3F               	movlw	63
  6426   0026EE  6E4D               	movwf	(___fladd@a+3)^0,c
  6427   0026F0  0E83               	movlw	131
  6428   0026F2  6E18               	movwf	___flmul@a^0,c
  6429   0026F4  0EF9               	movlw	249
  6430   0026F6  6E19               	movwf	(___flmul@a+1)^0,c
  6431   0026F8  0E22               	movlw	34
  6432   0026FA  6E1A               	movwf	(___flmul@a+2)^0,c
  6433   0026FC  0E3F               	movlw	63
  6434   0026FE  6E1B               	movwf	(___flmul@a+3)^0,c
  6435   002700  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  6436   002704  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  6437   002708  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  6438   00270C  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  6439   002710  EC3A  F00D         	call	___flmul	;wreg free
  6440   002714  C014  F046         	movff	?___flmul,___fladd@b
  6441   002718  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6442   00271C  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6443   002720  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6444   002724  ECD9  F00A         	call	___fladd	;wreg free
  6445   002728  C046  F064         	movff	?___fladd,___fltol@f1
  6446   00272C  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  6447   002730  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  6448   002734  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  6449   002738  EC80  F021         	call	___fltol	;wreg free
  6450   00273C  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  6451   002740  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  6452   002744  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  6453   002748  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  6454   00274C  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  6455   002750  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  6456   002754  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  6457   002758  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  6458   00275C  0E01               	movlw	1
  6459   00275E  EC81  F01C         	call	___xxtofl
  6460   002762  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  6461   002766  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  6462   00276A  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  6463   00276E  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  6464   002772  0EDA               	movlw	218
  6465   002774  6E18               	movwf	___flmul@a^0,c
  6466   002776  0E0F               	movlw	15
  6467   002778  6E19               	movwf	(___flmul@a+1)^0,c
  6468   00277A  0EC9               	movlw	201
  6469   00277C  6E1A               	movwf	(___flmul@a+2)^0,c
  6470   00277E  0E3F               	movlw	63
  6471   002780  6E1B               	movwf	(___flmul@a+3)^0,c
  6472   002782  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6473   002786  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6474   00278A  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6475   00278E  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6476   002792  EC3A  F00D         	call	___flmul	;wreg free
  6477   002796  C014  F068         	movff	?___flmul,___flsub@a
  6478   00279A  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6479   00279E  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6480   0027A2  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6481   0027A6  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  6482   0027AA  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  6483   0027AE  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  6484   0027B2  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  6485   0027B6  EC05  F028         	call	___flsub	;wreg free
  6486   0027BA  C064  F08F         	movff	?___flsub,___rem_pio2f$4538
  6487   0027BE  C065  F090         	movff	?___flsub+1,___rem_pio2f$4538+1
  6488   0027C2  C066  F091         	movff	?___flsub+2,___rem_pio2f$4538+2
  6489   0027C6  C067  F092         	movff	?___flsub+3,___rem_pio2f$4538+3
  6490   0027CA  C08F  F064         	movff	___rem_pio2f$4538,___flsub@b
  6491   0027CE  C090  F065         	movff	___rem_pio2f$4538+1,___flsub@b+1
  6492   0027D2  C091  F066         	movff	___rem_pio2f$4538+2,___flsub@b+2
  6493   0027D6  C092  F067         	movff	___rem_pio2f$4538+3,___flsub@b+3
  6494   0027DA  0EA3               	movlw	163
  6495   0027DC  6E18               	movwf	___flmul@a^0,c
  6496   0027DE  0E85               	movlw	133
  6497   0027E0  6E19               	movwf	(___flmul@a+1)^0,c
  6498   0027E2  0E88               	movlw	136
  6499   0027E4  6E1A               	movwf	(___flmul@a+2)^0,c
  6500   0027E6  0E32               	movlw	50
  6501   0027E8  6E1B               	movwf	(___flmul@a+3)^0,c
  6502   0027EA  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6503   0027EE  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6504   0027F2  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6505   0027F6  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6506   0027FA  EC3A  F00D         	call	___flmul	;wreg free
  6507   0027FE  C014  F068         	movff	?___flmul,___flsub@a
  6508   002802  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6509   002806  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6510   00280A  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6511   00280E  EC05  F028         	call	___flsub	;wreg free
  6512   002812  0100               	movlb	0	; () banked
  6513   002814  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6514   002816  6ED9               	movwf	fsr2l,c
  6515   002818  6ADA               	clrf	fsr2h,c
  6516   00281A  C064  FFDE         	movff	?___flsub,postinc2
  6517   00281E  C065  FFDE         	movff	?___flsub+1,postinc2
  6518   002822  C066  FFDE         	movff	?___flsub+2,postinc2
  6519   002826  C067  FFDE         	movff	?___flsub+3,postinc2
  6520   00282A                     
  6521                           ; BSR set to: 0
  6522   00282A  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  6523   00282C  B4D8               	btfsc	status,2,c
  6524   00282E  EF1B  F014         	goto	u9341
  6525   002832  EF1D  F014         	goto	u9340
  6526   002836                     u9341:
  6527   002836  EF44  F014         	goto	l1744
  6528   00283A                     u9340:
  6529   00283A                     l7730:
  6530                           
  6531                           ; BSR set to: 0
  6532   00283A  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6533   00283C  6ED9               	movwf	fsr2l,c
  6534   00283E  6ADA               	clrf	fsr2h,c
  6535   002840  CFDE F080          	movff	postinc2,___flneg@f1
  6536   002844  CFDE F081          	movff	postinc2,___flneg@f1+1
  6537   002848  CFDE F082          	movff	postinc2,___flneg@f1+2
  6538   00284C  CFDE F083          	movff	postinc2,___flneg@f1+3
  6539   002850  EC8D  F028         	call	___flneg	;wreg free
  6540   002854  0100               	movlb	0	; () banked
  6541   002856  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6542   002858  6ED9               	movwf	fsr2l,c
  6543   00285A  6ADA               	clrf	fsr2h,c
  6544   00285C  C080  FFDE         	movff	?___flneg,postinc2
  6545   002860  C081  FFDE         	movff	?___flneg+1,postinc2
  6546   002864  C082  FFDE         	movff	?___flneg+2,postinc2
  6547   002868  C083  FFDE         	movff	?___flneg+3,postinc2
  6548   00286C                     
  6549                           ; BSR set to: 0
  6550   00286C  C0A0  F089         	movff	___rem_pio2f@n,??___rem_pio2f
  6551   002870  C0A1  F08A         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  6552   002874  1F89               	comf	??___rem_pio2f& (0+255),f,b
  6553   002876  1F8A               	comf	(??___rem_pio2f+1)& (0+255),f,b
  6554   002878  4B89               	infsnz	??___rem_pio2f& (0+255),f,b
  6555   00287A  2B8A               	incf	(??___rem_pio2f+1)& (0+255),f,b
  6556   00287C  C089  F084         	movff	??___rem_pio2f,?___rem_pio2f
  6557   002880  C08A  F085         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  6558   002884  EF13  F015         	goto	l1745
  6559   002888                     l1744:
  6560                           
  6561                           ; BSR set to: 0
  6562   002888  C0A0  F084         	movff	___rem_pio2f@n,?___rem_pio2f
  6563   00288C  C0A1  F085         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  6564   002890  EF13  F015         	goto	l1745
  6565   002894                     l7736:
  6566                           
  6567                           ; BSR set to: 0
  6568   002894  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  6569   002898  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  6570   00289C  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  6571   0028A0  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  6572   0028A4  ECFC  F028         	call	_fabsf	;wreg free
  6573   0028A8  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  6574   0028AC  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  6575   0028B0  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  6576   0028B4  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  6577   0028B8  0E00               	movlw	0
  6578   0028BA  6E4A               	movwf	___fladd@a^0,c
  6579   0028BC  0E00               	movlw	0
  6580   0028BE  6E4B               	movwf	(___fladd@a+1)^0,c
  6581   0028C0  0E00               	movlw	0
  6582   0028C2  6E4C               	movwf	(___fladd@a+2)^0,c
  6583   0028C4  0E3F               	movlw	63
  6584   0028C6  6E4D               	movwf	(___fladd@a+3)^0,c
  6585   0028C8  0E83               	movlw	131
  6586   0028CA  6E18               	movwf	___flmul@a^0,c
  6587   0028CC  0EF9               	movlw	249
  6588   0028CE  6E19               	movwf	(___flmul@a+1)^0,c
  6589   0028D0  0E22               	movlw	34
  6590   0028D2  6E1A               	movwf	(___flmul@a+2)^0,c
  6591   0028D4  0E3F               	movlw	63
  6592   0028D6  6E1B               	movwf	(___flmul@a+3)^0,c
  6593   0028D8  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  6594   0028DC  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  6595   0028E0  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  6596   0028E4  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  6597   0028E8  EC3A  F00D         	call	___flmul	;wreg free
  6598   0028EC  C014  F046         	movff	?___flmul,___fladd@b
  6599   0028F0  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6600   0028F4  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6601   0028F8  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6602   0028FC  ECD9  F00A         	call	___fladd	;wreg free
  6603   002900  C046  F064         	movff	?___fladd,___fltol@f1
  6604   002904  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  6605   002908  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  6606   00290C  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  6607   002910  EC80  F021         	call	___fltol	;wreg free
  6608   002914  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  6609   002918  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  6610   00291C  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  6611   002920  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  6612   002924  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  6613   002928  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  6614   00292C  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  6615   002930  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  6616   002934  0E01               	movlw	1
  6617   002936  EC81  F01C         	call	___xxtofl
  6618   00293A  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  6619   00293E  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  6620   002942  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  6621   002946  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  6622   00294A  0EDA               	movlw	218
  6623   00294C  6E18               	movwf	___flmul@a^0,c
  6624   00294E  0E0F               	movlw	15
  6625   002950  6E19               	movwf	(___flmul@a+1)^0,c
  6626   002952  0EC9               	movlw	201
  6627   002954  6E1A               	movwf	(___flmul@a+2)^0,c
  6628   002956  0E3F               	movlw	63
  6629   002958  6E1B               	movwf	(___flmul@a+3)^0,c
  6630   00295A  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6631   00295E  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6632   002962  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6633   002966  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6634   00296A  EC3A  F00D         	call	___flmul	;wreg free
  6635   00296E  C014  F068         	movff	?___flmul,___flsub@a
  6636   002972  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6637   002976  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6638   00297A  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6639   00297E  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  6640   002982  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  6641   002986  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  6642   00298A  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  6643   00298E  EC05  F028         	call	___flsub	;wreg free
  6644   002992  C064  F08F         	movff	?___flsub,___rem_pio2f$4538
  6645   002996  C065  F090         	movff	?___flsub+1,___rem_pio2f$4538+1
  6646   00299A  C066  F091         	movff	?___flsub+2,___rem_pio2f$4538+2
  6647   00299E  C067  F092         	movff	?___flsub+3,___rem_pio2f$4538+3
  6648   0029A2  C08F  F064         	movff	___rem_pio2f$4538,___flsub@b
  6649   0029A6  C090  F065         	movff	___rem_pio2f$4538+1,___flsub@b+1
  6650   0029AA  C091  F066         	movff	___rem_pio2f$4538+2,___flsub@b+2
  6651   0029AE  C092  F067         	movff	___rem_pio2f$4538+3,___flsub@b+3
  6652   0029B2  0EA3               	movlw	163
  6653   0029B4  6E18               	movwf	___flmul@a^0,c
  6654   0029B6  0E85               	movlw	133
  6655   0029B8  6E19               	movwf	(___flmul@a+1)^0,c
  6656   0029BA  0E88               	movlw	136
  6657   0029BC  6E1A               	movwf	(___flmul@a+2)^0,c
  6658   0029BE  0E32               	movlw	50
  6659   0029C0  6E1B               	movwf	(___flmul@a+3)^0,c
  6660   0029C2  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6661   0029C6  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6662   0029CA  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6663   0029CE  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6664   0029D2  EC3A  F00D         	call	___flmul	;wreg free
  6665   0029D6  C014  F068         	movff	?___flmul,___flsub@a
  6666   0029DA  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6667   0029DE  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6668   0029E2  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6669   0029E6  EC05  F028         	call	___flsub	;wreg free
  6670   0029EA  C064  F08B         	movff	?___flsub,___rem_pio2f@ty
  6671   0029EE  C065  F08C         	movff	?___flsub+1,___rem_pio2f@ty+1
  6672   0029F2  C066  F08D         	movff	?___flsub+2,___rem_pio2f@ty+2
  6673   0029F6  C067  F08E         	movff	?___flsub+3,___rem_pio2f@ty+3
  6674   0029FA  0100               	movlb	0	; () banked
  6675   0029FC  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6676   0029FE  6ED9               	movwf	fsr2l,c
  6677   002A00  6ADA               	clrf	fsr2h,c
  6678   002A02  C08B  FFDE         	movff	___rem_pio2f@ty,postinc2
  6679   002A06  C08C  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  6680   002A0A  C08D  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  6681   002A0E  C08E  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  6682   002A12                     
  6683                           ; BSR set to: 0
  6684   002A12  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  6685   002A14  B4D8               	btfsc	status,2,c
  6686   002A16  EF0F  F015         	goto	u9351
  6687   002A1A  EF11  F015         	goto	u9350
  6688   002A1E                     u9351:
  6689   002A1E  EF44  F014         	goto	l1744
  6690   002A22                     u9350:
  6691   002A22  EF1D  F014         	goto	l7730
  6692   002A26                     l1745:
  6693                           
  6694                           ; BSR set to: 0
  6695   002A26  0012               	return		;funcret
  6696   002A28                     __end_of___rem_pio2f:
  6697                           	callstack 0
  6698                           
  6699 ;; *************** function _fabsf *****************
  6700 ;; Defined at:
  6701 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fabsf.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;  x               4    5[COMRAM] float 
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;  u               4    9[COMRAM] struct .
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  4    5[COMRAM] float 
  6708 ;; Registers used:
  6709 ;;		status,2, status,0
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6718 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6719 ;;Total ram usage:        8 bytes
  6720 ;; Hardware stack levels used: 1
  6721 ;; Hardware stack levels required when called: 1
  6722 ;; This function calls:
  6723 ;;		Nothing
  6724 ;; This function is called by:
  6725 ;;		___rem_pio2f
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text20
  6730   0051F8                     __ptext20:
  6731                           	callstack 0
  6732   0051F8                     _fabsf:
  6733                           	callstack 26
  6734   0051F8  C111  F00A         	movff	fabsf@F465,fabsf@u
  6735   0051FC  C112  F00B         	movff	fabsf@F465+1,fabsf@u+1
  6736   005200  C113  F00C         	movff	fabsf@F465+2,fabsf@u+2
  6737   005204  C114  F00D         	movff	fabsf@F465+3,fabsf@u+3
  6738   005208  C006  F00A         	movff	fabsf@x,fabsf@u
  6739   00520C  C007  F00B         	movff	fabsf@x+1,fabsf@u+1
  6740   005210  C008  F00C         	movff	fabsf@x+2,fabsf@u+2
  6741   005214  C009  F00D         	movff	fabsf@x+3,fabsf@u+3
  6742   005218  9E0D               	bcf	(fabsf@u+3)^0,7,c
  6743   00521A  C00A  F006         	movff	fabsf@u,?_fabsf
  6744   00521E  C00B  F007         	movff	fabsf@u+1,?_fabsf+1
  6745   005222  C00C  F008         	movff	fabsf@u+2,?_fabsf+2
  6746   005226  C00D  F009         	movff	fabsf@u+3,?_fabsf+3
  6747   00522A  0012               	return		;funcret
  6748   00522C                     __end_of_fabsf:
  6749                           	callstack 0
  6750                           
  6751 ;; *************** function ___cosdf *****************
  6752 ;; Defined at:
  6753 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__cosdf.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;  x               4    4[BANK0 ] float 
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;  z               4   28[BANK0 ] float 
  6758 ;;  w               4   24[BANK0 ] float 
  6759 ;;  r               4    8[BANK0 ] float 
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  4    4[BANK0 ] float 
  6762 ;; Registers used:
  6763 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6769 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6773 ;;Total ram usage:       28 bytes
  6774 ;; Hardware stack levels used: 1
  6775 ;; Hardware stack levels required when called: 2
  6776 ;; This function calls:
  6777 ;;		___fladd
  6778 ;;		___flmul
  6779 ;; This function is called by:
  6780 ;;		_sinf
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           	psect	text21
  6785   003704                     __ptext21:
  6786                           	callstack 0
  6787   003704                     ___cosdf:
  6788                           	callstack 26
  6789   003704  C064  F014         	movff	___cosdf@x,___flmul@b
  6790   003708  C065  F015         	movff	___cosdf@x+1,___flmul@b+1
  6791   00370C  C066  F016         	movff	___cosdf@x+2,___flmul@b+2
  6792   003710  C067  F017         	movff	___cosdf@x+3,___flmul@b+3
  6793   003714  C064  F018         	movff	___cosdf@x,___flmul@a
  6794   003718  C065  F019         	movff	___cosdf@x+1,___flmul@a+1
  6795   00371C  C066  F01A         	movff	___cosdf@x+2,___flmul@a+2
  6796   003720  C067  F01B         	movff	___cosdf@x+3,___flmul@a+3
  6797   003724  EC3A  F00D         	call	___flmul	;wreg free
  6798   003728  C014  F07C         	movff	?___flmul,___cosdf@z
  6799   00372C  C015  F07D         	movff	?___flmul+1,___cosdf@z+1
  6800   003730  C016  F07E         	movff	?___flmul+2,___cosdf@z+2
  6801   003734  C017  F07F         	movff	?___flmul+3,___cosdf@z+3
  6802   003738  C07C  F014         	movff	___cosdf@z,___flmul@b
  6803   00373C  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6804   003740  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6805   003744  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6806   003748  C07C  F018         	movff	___cosdf@z,___flmul@a
  6807   00374C  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6808   003750  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6809   003754  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6810   003758  EC3A  F00D         	call	___flmul	;wreg free
  6811   00375C  C014  F078         	movff	?___flmul,___cosdf@w
  6812   003760  C015  F079         	movff	?___flmul+1,___cosdf@w+1
  6813   003764  C016  F07A         	movff	?___flmul+2,___cosdf@w+2
  6814   003768  C017  F07B         	movff	?___flmul+3,___cosdf@w+3
  6815   00376C  0E17               	movlw	23
  6816   00376E  6E18               	movwf	___flmul@a^0,c
  6817   003770  0E9A               	movlw	154
  6818   003772  6E19               	movwf	(___flmul@a+1)^0,c
  6819   003774  0ECC               	movlw	204
  6820   003776  6E1A               	movwf	(___flmul@a+2)^0,c
  6821   003778  0E37               	movlw	55
  6822   00377A  6E1B               	movwf	(___flmul@a+3)^0,c
  6823   00377C  C07C  F014         	movff	___cosdf@z,___flmul@b
  6824   003780  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6825   003784  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6826   003788  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6827   00378C  EC3A  F00D         	call	___flmul	;wreg free
  6828   003790  C014  F046         	movff	?___flmul,___fladd@b
  6829   003794  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6830   003798  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6831   00379C  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6832   0037A0  0E3F               	movlw	63
  6833   0037A2  6E4A               	movwf	___fladd@a^0,c
  6834   0037A4  0E04               	movlw	4
  6835   0037A6  6E4B               	movwf	(___fladd@a+1)^0,c
  6836   0037A8  0EB6               	movlw	182
  6837   0037AA  6E4C               	movwf	(___fladd@a+2)^0,c
  6838   0037AC  0EBA               	movlw	186
  6839   0037AE  6E4D               	movwf	(___fladd@a+3)^0,c
  6840   0037B0  ECD9  F00A         	call	___fladd	;wreg free
  6841   0037B4  C046  F068         	movff	?___fladd,___cosdf@r
  6842   0037B8  C047  F069         	movff	?___fladd+1,___cosdf@r+1
  6843   0037BC  C048  F06A         	movff	?___fladd+2,___cosdf@r+2
  6844   0037C0  C049  F06B         	movff	?___fladd+3,___cosdf@r+3
  6845   0037C4  0E00               	movlw	0
  6846   0037C6  6E4A               	movwf	___fladd@a^0,c
  6847   0037C8  0E00               	movlw	0
  6848   0037CA  6E4B               	movwf	(___fladd@a+1)^0,c
  6849   0037CC  0E80               	movlw	128
  6850   0037CE  6E4C               	movwf	(___fladd@a+2)^0,c
  6851   0037D0  0E3F               	movlw	63
  6852   0037D2  6E4D               	movwf	(___fladd@a+3)^0,c
  6853   0037D4  0E00               	movlw	0
  6854   0037D6  6E18               	movwf	___flmul@a^0,c
  6855   0037D8  0E00               	movlw	0
  6856   0037DA  6E19               	movwf	(___flmul@a+1)^0,c
  6857   0037DC  0E00               	movlw	0
  6858   0037DE  6E1A               	movwf	(___flmul@a+2)^0,c
  6859   0037E0  0EBF               	movlw	191
  6860   0037E2  6E1B               	movwf	(___flmul@a+3)^0,c
  6861   0037E4  C07C  F014         	movff	___cosdf@z,___flmul@b
  6862   0037E8  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6863   0037EC  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6864   0037F0  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6865   0037F4  EC3A  F00D         	call	___flmul	;wreg free
  6866   0037F8  C014  F046         	movff	?___flmul,___fladd@b
  6867   0037FC  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6868   003800  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6869   003804  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6870   003808  ECD9  F00A         	call	___fladd	;wreg free
  6871   00380C  C046  F06C         	movff	?___fladd,___cosdf$4535
  6872   003810  C047  F06D         	movff	?___fladd+1,___cosdf$4535+1
  6873   003814  C048  F06E         	movff	?___fladd+2,___cosdf$4535+2
  6874   003818  C049  F06F         	movff	?___fladd+3,___cosdf$4535+3
  6875   00381C  C07C  F018         	movff	___cosdf@z,___flmul@a
  6876   003820  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6877   003824  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6878   003828  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6879   00382C  C078  F014         	movff	___cosdf@w,___flmul@b
  6880   003830  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6881   003834  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6882   003838  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6883   00383C  EC3A  F00D         	call	___flmul	;wreg free
  6884   003840  C014  F070         	movff	?___flmul,___cosdf$4536
  6885   003844  C015  F071         	movff	?___flmul+1,___cosdf$4536+1
  6886   003848  C016  F072         	movff	?___flmul+2,___cosdf$4536+2
  6887   00384C  C017  F073         	movff	?___flmul+3,___cosdf$4536+3
  6888   003850  0E9F               	movlw	159
  6889   003852  6E18               	movwf	___flmul@a^0,c
  6890   003854  0EAA               	movlw	170
  6891   003856  6E19               	movwf	(___flmul@a+1)^0,c
  6892   003858  0E2A               	movlw	42
  6893   00385A  6E1A               	movwf	(___flmul@a+2)^0,c
  6894   00385C  0E3D               	movlw	61
  6895   00385E  6E1B               	movwf	(___flmul@a+3)^0,c
  6896   003860  C078  F014         	movff	___cosdf@w,___flmul@b
  6897   003864  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6898   003868  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6899   00386C  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6900   003870  EC3A  F00D         	call	___flmul	;wreg free
  6901   003874  C014  F04A         	movff	?___flmul,___fladd@a
  6902   003878  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6903   00387C  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6904   003880  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6905   003884  C06C  F046         	movff	___cosdf$4535,___fladd@b
  6906   003888  C06D  F047         	movff	___cosdf$4535+1,___fladd@b+1
  6907   00388C  C06E  F048         	movff	___cosdf$4535+2,___fladd@b+2
  6908   003890  C06F  F049         	movff	___cosdf$4535+3,___fladd@b+3
  6909   003894  ECD9  F00A         	call	___fladd	;wreg free
  6910   003898  C046  F074         	movff	?___fladd,___cosdf$4537
  6911   00389C  C047  F075         	movff	?___fladd+1,___cosdf$4537+1
  6912   0038A0  C048  F076         	movff	?___fladd+2,___cosdf$4537+2
  6913   0038A4  C049  F077         	movff	?___fladd+3,___cosdf$4537+3
  6914   0038A8  C074  F046         	movff	___cosdf$4537,___fladd@b
  6915   0038AC  C075  F047         	movff	___cosdf$4537+1,___fladd@b+1
  6916   0038B0  C076  F048         	movff	___cosdf$4537+2,___fladd@b+2
  6917   0038B4  C077  F049         	movff	___cosdf$4537+3,___fladd@b+3
  6918   0038B8  C068  F018         	movff	___cosdf@r,___flmul@a
  6919   0038BC  C069  F019         	movff	___cosdf@r+1,___flmul@a+1
  6920   0038C0  C06A  F01A         	movff	___cosdf@r+2,___flmul@a+2
  6921   0038C4  C06B  F01B         	movff	___cosdf@r+3,___flmul@a+3
  6922   0038C8  C070  F014         	movff	___cosdf$4536,___flmul@b
  6923   0038CC  C071  F015         	movff	___cosdf$4536+1,___flmul@b+1
  6924   0038D0  C072  F016         	movff	___cosdf$4536+2,___flmul@b+2
  6925   0038D4  C073  F017         	movff	___cosdf$4536+3,___flmul@b+3
  6926   0038D8  EC3A  F00D         	call	___flmul	;wreg free
  6927   0038DC  C014  F04A         	movff	?___flmul,___fladd@a
  6928   0038E0  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6929   0038E4  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6930   0038E8  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6931   0038EC  ECD9  F00A         	call	___fladd	;wreg free
  6932   0038F0  C046  F064         	movff	?___fladd,?___cosdf
  6933   0038F4  C047  F065         	movff	?___fladd+1,?___cosdf+1
  6934   0038F8  C048  F066         	movff	?___fladd+2,?___cosdf+2
  6935   0038FC  C049  F067         	movff	?___fladd+3,?___cosdf+3
  6936   003900  0012               	return		;funcret
  6937   003902                     __end_of___cosdf:
  6938                           	callstack 0
  6939                           
  6940 ;; *************** function _printf *****************
  6941 ;; Defined at:
  6942 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\printf.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  6945 ;;		 -> STR_35(5), STR_23(5), 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;  ret             2    0        int 
  6948 ;;  ap              1   83[COMRAM] PTR void [1]
  6949 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6950 ;; Return value:  Size  Location     Type
  6951 ;;                  2  110[BANK0 ] int 
  6952 ;; Registers used:
  6953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6959 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6962 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6963 ;;Total ram usage:        5 bytes
  6964 ;; Hardware stack levels used: 1
  6965 ;; Hardware stack levels required when called: 8
  6966 ;; This function calls:
  6967 ;;		_vfprintf
  6968 ;; This function is called by:
  6969 ;;		_runDAC
  6970 ;;		_runUART
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           	psect	text22
  6975   0052D4                     __ptext22:
  6976                           	callstack 0
  6977   0052D4                     _printf:
  6978                           	callstack 21
  6979   0052D4  0ED0               	movlw	low (?_printf+2)
  6980   0052D6  6E54               	movwf	printf@ap^0,c
  6981   0052D8  0E00               	movlw	0
  6982   0052DA  0100               	movlb	0	; () banked
  6983   0052DC  6FC7               	movwf	vfprintf@fp& (0+255),b
  6984   0052DE  0E00               	movlw	0
  6985   0052E0  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6986   0052E2  C0CE  F0C9         	movff	printf@fmt,vfprintf@fmt
  6987   0052E6  C0CF  F0CA         	movff	printf@fmt+1,vfprintf@fmt+1
  6988   0052EA  0E54               	movlw	low printf@ap
  6989   0052EC  6FCB               	movwf	vfprintf@ap& (0+255),b
  6990   0052EE  ECE0  F027         	call	_vfprintf	;wreg free
  6991   0052F2  0012               	return		;funcret
  6992   0052F4                     __end_of_printf:
  6993                           	callstack 0
  6994                           
  6995 ;; *************** function _SPI_write *****************
  6996 ;; Defined at:
  6997 ;;		line 93 in file "DAC.c"
  6998 ;; Parameters:    Size  Location     Type
  6999 ;;  data            1    wreg     unsigned char 
  7000 ;; Auto vars:     Size  Location     Type
  7001 ;;  data            1    7[COMRAM] unsigned char 
  7002 ;;  LSB             1    6[COMRAM] unsigned char 
  7003 ;;  MSB             1    5[COMRAM] unsigned char 
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  1    wreg      void 
  7006 ;; Registers used:
  7007 ;;		wreg, status,2, status,0
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7014 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7016 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7017 ;;Total ram usage:        3 bytes
  7018 ;; Hardware stack levels used: 1
  7019 ;; Hardware stack levels required when called: 1
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		_runDAC
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           	psect	text23
  7028   0050DC                     __ptext23:
  7029                           	callstack 0
  7030   0050DC                     _SPI_write:
  7031                           	callstack 28
  7032                           
  7033                           ;incstack = 0
  7034                           ;SPI_write@data stored from wreg
  7035   0050DC  6E08               	movwf	SPI_write@data^0,c
  7036   0050DE                     
  7037                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  7038   0050DE  3808               	swapf	SPI_write@data^0,w,c
  7039   0050E0  0B0F               	andlw	15
  7040   0050E2  0930               	iorlw	48
  7041   0050E4  6E06               	movwf	SPI_write@MSB^0,c
  7042                           
  7043                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  7044   0050E6  3808               	swapf	SPI_write@data^0,w,c
  7045   0050E8  0BF0               	andlw	240
  7046   0050EA  6E07               	movwf	SPI_write@LSB^0,c
  7047   0050EC                     
  7048                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  7049   0050EC  968A               	bcf	138,3,c	;volatile
  7050   0050EE                     
  7051                           ;DAC.c: 101:     SSP1BUF = MSB;
  7052   0050EE  C006  FFC9         	movff	SPI_write@MSB,4041	;volatile
  7053   0050F2                     l245:
  7054   0050F2  A69E               	btfss	3998,3,c	;volatile
  7055   0050F4  EF7E  F028         	goto	u9441
  7056   0050F8  EF80  F028         	goto	u9440
  7057   0050FC                     u9441:
  7058   0050FC  EF79  F028         	goto	l245
  7059   005100                     u9440:
  7060   005100                     
  7061                           ;DAC.c: 103:     SSP1IF = 0;
  7062   005100  969E               	bcf	3998,3,c	;volatile
  7063                           
  7064                           ;DAC.c: 105:     SSP1BUF = LSB;
  7065   005102  C007  FFC9         	movff	SPI_write@LSB,4041	;volatile
  7066   005106                     l248:
  7067   005106  A69E               	btfss	3998,3,c	;volatile
  7068   005108  EF88  F028         	goto	u9451
  7069   00510C  EF8A  F028         	goto	u9450
  7070   005110                     u9451:
  7071   005110  EF83  F028         	goto	l248
  7072   005114                     u9450:
  7073   005114                     
  7074                           ;DAC.c: 107:     SSP1IF = 0;
  7075   005114  969E               	bcf	3998,3,c	;volatile
  7076                           
  7077                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  7078   005116  868A               	bsf	138,3,c	;volatile
  7079   005118  0012               	return		;funcret
  7080   00511A                     __end_of_SPI_write:
  7081                           	callstack 0
  7082                           
  7083 ;; *************** function _runADC *****************
  7084 ;; Defined at:
  7085 ;;		line 13 in file "ADC.c"
  7086 ;; Parameters:    Size  Location     Type
  7087 ;;		None
  7088 ;; Auto vars:     Size  Location     Type
  7089 ;;  text           17    0[BANK1 ] unsigned char [17]
  7090 ;;  voltage2        4   21[BANK1 ] float 
  7091 ;;  voltage1        4   17[BANK1 ] float 
  7092 ;;  pot2            2   27[BANK1 ] unsigned short 
  7093 ;;  pot1            2   25[BANK1 ] unsigned short 
  7094 ;;  keepState       1   29[BANK1 ] unsigned char 
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  1    wreg      void 
  7097 ;; Registers used:
  7098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7105 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7106 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7107 ;;      Totals:         0       2      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7108 ;;Total ram usage:       32 bytes
  7109 ;; Hardware stack levels used: 1
  7110 ;; Hardware stack levels required when called: 9
  7111 ;; This function calls:
  7112 ;;		_LCD_ShowString
  7113 ;;		___fldiv
  7114 ;;		___flmul
  7115 ;;		___xxtofl
  7116 ;;		_sprintf
  7117 ;; This function is called by:
  7118 ;;		_main
  7119 ;; This function uses a non-reentrant model
  7120 ;;
  7121                           
  7122                           	psect	text24
  7123   0034F2                     __ptext24:
  7124                           	callstack 0
  7125   0034F2                     _runADC:
  7126                           	callstack 21
  7127   0034F2                     
  7128                           ;ADC.c: 16: ANSELAbits.ANSA5 = 1;
  7129   0034F2  010F               	movlb	15	; () banked
  7130   0034F4  8B38               	bsf	56,5,b	;volatile
  7131                           
  7132                           ;ADC.c: 17: ANSELEbits.ANSE0 = 1;
  7133   0034F6  813C               	bsf	60,0,b	;volatile
  7134                           
  7135                           ;ADC.c: 19: ADCON2bits.ADFM = 1;
  7136   0034F8  8EC0               	bsf	192,7,c	;volatile
  7137   0034FA                     
  7138                           ; BSR set to: 15
  7139                           ;ADC.c: 20: ADCON2bits.ADCS = 0b110;
  7140   0034FA  50C0               	movf	192,w,c	;volatile
  7141   0034FC  0BF8               	andlw	-8
  7142   0034FE  0906               	iorlw	6
  7143   003500  6EC0               	movwf	192,c	;volatile
  7144                           
  7145                           ;ADC.c: 21: ADCON2bits.ACQT = 0b110;
  7146   003502  50C0               	movf	192,w,c	;volatile
  7147   003504  0BC7               	andlw	-57
  7148   003506  0930               	iorlw	48
  7149   003508  6EC0               	movwf	192,c	;volatile
  7150   00350A                     
  7151                           ; BSR set to: 15
  7152                           ;ADC.c: 22: ADCON0bits.ADON = 1;
  7153   00350A  80C2               	bsf	194,0,c	;volatile
  7154   00350C                     
  7155                           ; BSR set to: 15
  7156                           ;ADC.c: 25: uint16_t pot1, pot2;;ADC.c: 26: float voltage1, voltage2;;ADC.c: 27: char te
      +                          xt[17] = "";
  7157   00350C  EE21  F09B         	lfsr	2,runADC@text
  7158   003510  0E10               	movlw	16
  7159   003512                     u10011:
  7160   003512  6ADE               	clrf	postinc2,c
  7161   003514  06E8               	decf	wreg,f,c
  7162   003516  E2FD               	bc	u10011
  7163   003518                     
  7164                           ; BSR set to: 15
  7165                           ;ADC.c: 28: uint8_t keepState = 1;
  7166   003518  0E01               	movlw	1
  7167   00351A  0101               	movlb	1	; () banked
  7168   00351C  6FB8               	movwf	runADC@keepState& (0+255),b
  7169                           
  7170                           ;ADC.c: 30: while(keepState){
  7171   00351E  EF77  F01B         	goto	l462
  7172   003522                     l8174:
  7173                           
  7174                           ; BSR set to: 1
  7175                           ;ADC.c: 32:     ADCON0bits.CHS = 5;
  7176   003522  50C2               	movf	194,w,c	;volatile
  7177   003524  0B83               	andlw	-125
  7178   003526  0914               	iorlw	20
  7179   003528  6EC2               	movwf	194,c	;volatile
  7180   00352A                     
  7181                           ; BSR set to: 1
  7182                           ;ADC.c: 33:     GODONE = 1;
  7183   00352A  82C2               	bsf	4034,1,c	;volatile
  7184   00352C                     l464:
  7185   00352C  B2C2               	btfsc	4034,1,c	;volatile
  7186   00352E  EF9B  F01A         	goto	u10021
  7187   003532  EF9D  F01A         	goto	u10020
  7188   003536                     u10021:
  7189   003536  EF96  F01A         	goto	l464
  7190   00353A                     u10020:
  7191   00353A                     
  7192                           ;ADC.c: 35:     pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  7193   00353A  50C3               	movf	195,w,c	;volatile
  7194   00353C  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  7195   003540  0100               	movlb	0	; () banked
  7196   003542  6BE8               	clrf	(??_runADC+1)& (0+255),b
  7197   003544  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  7198   003548  6BE7               	clrf	??_runADC& (0+255),b
  7199   00354A  11E7               	iorwf	??_runADC& (0+255),w,b
  7200   00354C  0101               	movlb	1	; () banked
  7201   00354E  6FB4               	movwf	runADC@pot1& (0+255),b
  7202   003550  0100               	movlb	0	; () banked
  7203   003552  51E8               	movf	(??_runADC+1)& (0+255),w,b
  7204   003554  0101               	movlb	1	; () banked
  7205   003556  6FB5               	movwf	(runADC@pot1+1)& (0+255),b
  7206   003558                     
  7207                           ; BSR set to: 1
  7208                           ;ADC.c: 36:     voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  7209   003558  0E00               	movlw	0
  7210   00355A  6E31               	movwf	___fldiv@a^0,c
  7211   00355C  0EC0               	movlw	192
  7212   00355E  6E32               	movwf	(___fldiv@a+1)^0,c
  7213   003560  0E7F               	movlw	127
  7214   003562  6E33               	movwf	(___fldiv@a+2)^0,c
  7215   003564  0E44               	movlw	68
  7216   003566  6E34               	movwf	(___fldiv@a+3)^0,c
  7217   003568  C1B4  F006         	movff	runADC@pot1,___xxtofl@val
  7218   00356C  C1B5  F007         	movff	runADC@pot1+1,___xxtofl@val+1
  7219   003570  6A08               	clrf	(___xxtofl@val+2)^0,c
  7220   003572  6A09               	clrf	(___xxtofl@val+3)^0,c
  7221   003574  0E00               	movlw	0
  7222   003576  EC81  F01C         	call	___xxtofl
  7223   00357A  C006  F02D         	movff	?___xxtofl,___fldiv@b
  7224   00357E  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  7225   003582  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  7226   003586  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  7227   00358A  EC14  F015         	call	___fldiv	;wreg free
  7228   00358E  C02D  F014         	movff	?___fldiv,___flmul@b
  7229   003592  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  7230   003596  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  7231   00359A  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  7232   00359E  0E33               	movlw	51
  7233   0035A0  6E18               	movwf	___flmul@a^0,c
  7234   0035A2  0E33               	movlw	51
  7235   0035A4  6E19               	movwf	(___flmul@a+1)^0,c
  7236   0035A6  0E53               	movlw	83
  7237   0035A8  6E1A               	movwf	(___flmul@a+2)^0,c
  7238   0035AA  0E40               	movlw	64
  7239   0035AC  6E1B               	movwf	(___flmul@a+3)^0,c
  7240   0035AE  EC3A  F00D         	call	___flmul	;wreg free
  7241   0035B2  C014  F1AC         	movff	?___flmul,runADC@voltage1
  7242   0035B6  C015  F1AD         	movff	?___flmul+1,runADC@voltage1+1
  7243   0035BA  C016  F1AE         	movff	?___flmul+2,runADC@voltage1+2
  7244   0035BE  C017  F1AF         	movff	?___flmul+3,runADC@voltage1+3
  7245   0035C2                     
  7246                           ;ADC.c: 39:     ADCON0bits.CHS = 4;
  7247   0035C2  50C2               	movf	194,w,c	;volatile
  7248   0035C4  0B83               	andlw	-125
  7249   0035C6  0910               	iorlw	16
  7250   0035C8  6EC2               	movwf	194,c	;volatile
  7251   0035CA                     
  7252                           ;ADC.c: 40:     GODONE = 1;
  7253   0035CA  82C2               	bsf	4034,1,c	;volatile
  7254   0035CC                     l467:
  7255   0035CC  B2C2               	btfsc	4034,1,c	;volatile
  7256   0035CE  EFEB  F01A         	goto	u10031
  7257   0035D2  EFED  F01A         	goto	u10030
  7258   0035D6                     u10031:
  7259   0035D6  EFE6  F01A         	goto	l467
  7260   0035DA                     u10030:
  7261   0035DA                     
  7262                           ;ADC.c: 42:     pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  7263   0035DA  50C3               	movf	195,w,c	;volatile
  7264   0035DC  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  7265   0035E0  0100               	movlb	0	; () banked
  7266   0035E2  6BE8               	clrf	(??_runADC+1)& (0+255),b
  7267   0035E4  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  7268   0035E8  6BE7               	clrf	??_runADC& (0+255),b
  7269   0035EA  11E7               	iorwf	??_runADC& (0+255),w,b
  7270   0035EC  0101               	movlb	1	; () banked
  7271   0035EE  6FB6               	movwf	runADC@pot2& (0+255),b
  7272   0035F0  0100               	movlb	0	; () banked
  7273   0035F2  51E8               	movf	(??_runADC+1)& (0+255),w,b
  7274   0035F4  0101               	movlb	1	; () banked
  7275   0035F6  6FB7               	movwf	(runADC@pot2+1)& (0+255),b
  7276   0035F8                     
  7277                           ; BSR set to: 1
  7278                           ;ADC.c: 43:     voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  7279   0035F8  0E00               	movlw	0
  7280   0035FA  6E31               	movwf	___fldiv@a^0,c
  7281   0035FC  0EC0               	movlw	192
  7282   0035FE  6E32               	movwf	(___fldiv@a+1)^0,c
  7283   003600  0E7F               	movlw	127
  7284   003602  6E33               	movwf	(___fldiv@a+2)^0,c
  7285   003604  0E44               	movlw	68
  7286   003606  6E34               	movwf	(___fldiv@a+3)^0,c
  7287   003608  C1B6  F006         	movff	runADC@pot2,___xxtofl@val
  7288   00360C  C1B7  F007         	movff	runADC@pot2+1,___xxtofl@val+1
  7289   003610  6A08               	clrf	(___xxtofl@val+2)^0,c
  7290   003612  6A09               	clrf	(___xxtofl@val+3)^0,c
  7291   003614  0E00               	movlw	0
  7292   003616  EC81  F01C         	call	___xxtofl
  7293   00361A  C006  F02D         	movff	?___xxtofl,___fldiv@b
  7294   00361E  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  7295   003622  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  7296   003626  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  7297   00362A  EC14  F015         	call	___fldiv	;wreg free
  7298   00362E  C02D  F014         	movff	?___fldiv,___flmul@b
  7299   003632  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  7300   003636  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  7301   00363A  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  7302   00363E  0E33               	movlw	51
  7303   003640  6E18               	movwf	___flmul@a^0,c
  7304   003642  0E33               	movlw	51
  7305   003644  6E19               	movwf	(___flmul@a+1)^0,c
  7306   003646  0E53               	movlw	83
  7307   003648  6E1A               	movwf	(___flmul@a+2)^0,c
  7308   00364A  0E40               	movlw	64
  7309   00364C  6E1B               	movwf	(___flmul@a+3)^0,c
  7310   00364E  EC3A  F00D         	call	___flmul	;wreg free
  7311   003652  C014  F1B0         	movff	?___flmul,runADC@voltage2
  7312   003656  C015  F1B1         	movff	?___flmul+1,runADC@voltage2+1
  7313   00365A  C016  F1B2         	movff	?___flmul+2,runADC@voltage2+2
  7314   00365E  C017  F1B3         	movff	?___flmul+3,runADC@voltage2+3
  7315   003662                     
  7316                           ;ADC.c: 45:     sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  7317   003662  0E9B               	movlw	low runADC@text
  7318   003664  0100               	movlb	0	; () banked
  7319   003666  6FCE               	movwf	sprintf@s& (0+255),b
  7320   003668  0E01               	movlw	high runADC@text
  7321   00366A  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7322   00366C  0E46               	movlw	low STR_34
  7323   00366E  6FD0               	movwf	sprintf@fmt& (0+255),b
  7324   003670  0EFE               	movlw	high STR_34
  7325   003672  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7326   003674  C1AC  F0D2         	movff	runADC@voltage1,?_sprintf+4
  7327   003678  C1AD  F0D3         	movff	runADC@voltage1+1,?_sprintf+5
  7328   00367C  C1AE  F0D4         	movff	runADC@voltage1+2,?_sprintf+6
  7329   003680  C1AF  F0D5         	movff	runADC@voltage1+3,?_sprintf+7
  7330   003684  C1B0  F0D6         	movff	runADC@voltage2,?_sprintf+8
  7331   003688  C1B1  F0D7         	movff	runADC@voltage2+1,?_sprintf+9
  7332   00368C  C1B2  F0D8         	movff	runADC@voltage2+2,?_sprintf+10
  7333   003690  C1B3  F0D9         	movff	runADC@voltage2+3,?_sprintf+11
  7334   003694  EC29  F028         	call	_sprintf	;wreg free
  7335   003698                     
  7336                           ;ADC.c: 46:     LCD_ShowString(2, text);
  7337   003698  0E9B               	movlw	low runADC@text
  7338   00369A  6E07               	movwf	LCD_ShowString@textData^0,c
  7339   00369C  0E01               	movlw	high runADC@text
  7340   00369E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7341   0036A0  0E02               	movlw	2
  7342   0036A2  ECB1  F024         	call	_LCD_ShowString
  7343   0036A6                     
  7344                           ;ADC.c: 48:     if(PORTAbits.RA2){
  7345   0036A6  A480               	btfss	128,2,c	;volatile
  7346   0036A8  EF58  F01B         	goto	u10041
  7347   0036AC  EF5A  F01B         	goto	u10040
  7348   0036B0                     u10041:
  7349   0036B0  EF77  F01B         	goto	l462
  7350   0036B4                     u10040:
  7351   0036B4                     
  7352                           ;ADC.c: 49:         _delay((unsigned long)((50)*(32E6/4000.0)));
  7353   0036B4  0E03               	movlw	3
  7354   0036B6  0100               	movlb	0	; () banked
  7355   0036B8  6FE8               	movwf	(??_runADC+1)& (0+255),b
  7356   0036BA  0E08               	movlw	8
  7357   0036BC  6FE7               	movwf	??_runADC& (0+255),b
  7358   0036BE  0E77               	movlw	119
  7359   0036C0                     u10537:
  7360   0036C0  2EE8               	decfsz	wreg,f,c
  7361   0036C2  D7FE               	bra	u10537
  7362   0036C4  2FE7               	decfsz	??_runADC& (0+255),f,b
  7363   0036C6  D7FC               	bra	u10537
  7364   0036C8  2FE8               	decfsz	(??_runADC+1)& (0+255),f,b
  7365   0036CA  D7FA               	bra	u10537
  7366   0036CC                     
  7367                           ;ADC.c: 50:         if(PORTAbits.RA2){
  7368   0036CC  A480               	btfss	128,2,c	;volatile
  7369   0036CE  EF6B  F01B         	goto	u10051
  7370   0036D2  EF6D  F01B         	goto	u10050
  7371   0036D6                     u10051:
  7372   0036D6  EF77  F01B         	goto	l462
  7373   0036DA                     u10050:
  7374   0036DA                     l472:
  7375   0036DA  B480               	btfsc	128,2,c	;volatile
  7376   0036DC  EF72  F01B         	goto	u10061
  7377   0036E0  EF74  F01B         	goto	u10060
  7378   0036E4                     u10061:
  7379   0036E4  EF6D  F01B         	goto	l472
  7380   0036E8                     u10060:
  7381   0036E8                     
  7382                           ;ADC.c: 52:             keepState = 0;
  7383   0036E8  0E00               	movlw	0
  7384   0036EA  0101               	movlb	1	; () banked
  7385   0036EC  6FB8               	movwf	runADC@keepState& (0+255),b
  7386   0036EE                     l462:
  7387                           
  7388                           ;ADC.c: 30: while(keepState){
  7389   0036EE  0101               	movlb	1	; () banked
  7390   0036F0  51B8               	movf	runADC@keepState& (0+255),w,b
  7391   0036F2  A4D8               	btfss	status,2,c
  7392   0036F4  EF7E  F01B         	goto	u10071
  7393   0036F8  EF80  F01B         	goto	u10070
  7394   0036FC                     u10071:
  7395   0036FC  EF91  F01A         	goto	l8174
  7396   003700                     u10070:
  7397   003700                     
  7398                           ; BSR set to: 1
  7399                           ;ADC.c: 58: ADCON0bits.ADON = 0;
  7400   003700  90C2               	bcf	194,0,c	;volatile
  7401   003702                     
  7402                           ; BSR set to: 1
  7403   003702  0012               	return		;funcret
  7404   003704                     __end_of_runADC:
  7405                           	callstack 0
  7406                           
  7407 ;; *************** function ___xxtofl *****************
  7408 ;; Defined at:
  7409 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\xxtofl.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  sign            1    wreg     unsigned char 
  7412 ;;  val             4    5[COMRAM] long 
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;  sign            1   13[COMRAM] unsigned char 
  7415 ;;  arg             4   15[COMRAM] unsigned long 
  7416 ;;  exp             1   14[COMRAM] unsigned char 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  4    5[COMRAM] unsigned char 
  7419 ;; Registers used:
  7420 ;;		wreg, status,2, status,0
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7426 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7429 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;Total ram usage:       14 bytes
  7431 ;; Hardware stack levels used: 1
  7432 ;; Hardware stack levels required when called: 1
  7433 ;; This function calls:
  7434 ;;		Nothing
  7435 ;; This function is called by:
  7436 ;;		_runDAC
  7437 ;;		_runADC
  7438 ;;		___rem_pio2f
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text25
  7443   003902                     __ptext25:
  7444                           	callstack 0
  7445   003902                     ___xxtofl:
  7446                           	callstack 26
  7447                           
  7448                           ; BSR set to: 1
  7449                           ;incstack = 0
  7450                           ;___xxtofl@sign stored from wreg
  7451   003902  6E0E               	movwf	___xxtofl@sign^0,c
  7452   003904  500E               	movf	___xxtofl@sign^0,w,c
  7453   003906  B4D8               	btfsc	status,2,c
  7454   003908  EF88  F01C         	goto	u9031
  7455   00390C  EF8A  F01C         	goto	u9030
  7456   003910                     u9031:
  7457   003910  EFAC  F01C         	goto	l1365
  7458   003914                     u9030:
  7459   003914  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7460   003916  EF91  F01C         	goto	u9040
  7461   00391A  EF8F  F01C         	goto	u9041
  7462   00391E                     u9041:
  7463   00391E  EFAC  F01C         	goto	l1365
  7464   003922                     u9040:
  7465   003922  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  7466   003926  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  7467   00392A  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  7468   00392E  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  7469   003932  1E0A               	comf	??___xxtofl^0,f,c
  7470   003934  1E0B               	comf	(??___xxtofl+1)^0,f,c
  7471   003936  1E0C               	comf	(??___xxtofl+2)^0,f,c
  7472   003938  1E0D               	comf	(??___xxtofl+3)^0,f,c
  7473   00393A  2A0A               	incf	??___xxtofl^0,f,c
  7474   00393C  0E00               	movlw	0
  7475   00393E  220B               	addwfc	(??___xxtofl+1)^0,f,c
  7476   003940  220C               	addwfc	(??___xxtofl+2)^0,f,c
  7477   003942  220D               	addwfc	(??___xxtofl+3)^0,f,c
  7478   003944  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  7479   003948  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  7480   00394C  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  7481   003950  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  7482   003954  EFB4  F01C         	goto	l7478
  7483   003958                     l1365:
  7484   003958  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  7485   00395C  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7486   003960  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7487   003964  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7488   003968                     l7478:
  7489   003968  5006               	movf	___xxtofl@val^0,w,c
  7490   00396A  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  7491   00396C  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  7492   00396E  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  7493   003970  A4D8               	btfss	status,2,c
  7494   003972  EFBD  F01C         	goto	u9051
  7495   003976  EFBF  F01C         	goto	u9050
  7496   00397A                     u9051:
  7497   00397A  EFC9  F01C         	goto	l7484
  7498   00397E                     u9050:
  7499   00397E  0E00               	movlw	0
  7500   003980  6E06               	movwf	?___xxtofl^0,c
  7501   003982  0E00               	movlw	0
  7502   003984  6E07               	movwf	(?___xxtofl+1)^0,c
  7503   003986  0E00               	movlw	0
  7504   003988  6E08               	movwf	(?___xxtofl+2)^0,c
  7505   00398A  0E00               	movlw	0
  7506   00398C  6E09               	movwf	(?___xxtofl+3)^0,c
  7507   00398E  EF5A  F01D         	goto	l1368
  7508   003992                     l7484:
  7509   003992  0E96               	movlw	150
  7510   003994  6E0F               	movwf	___xxtofl@exp^0,c
  7511   003996  EFD3  F01C         	goto	l7488
  7512   00399A                     l7486:
  7513   00399A  2A0F               	incf	___xxtofl@exp^0,f,c
  7514   00399C  90D8               	bcf	status,0,c
  7515   00399E  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7516   0039A0  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7517   0039A2  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7518   0039A4  3210               	rrcf	___xxtofl@arg^0,f,c
  7519   0039A6                     l7488:
  7520   0039A6  0E00               	movlw	0
  7521   0039A8  1410               	andwf	___xxtofl@arg^0,w,c
  7522   0039AA  6E0A               	movwf	??___xxtofl^0,c
  7523   0039AC  0E00               	movlw	0
  7524   0039AE  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7525   0039B0  6E0B               	movwf	(??___xxtofl+1)^0,c
  7526   0039B2  0E00               	movlw	0
  7527   0039B4  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7528   0039B6  6E0C               	movwf	(??___xxtofl+2)^0,c
  7529   0039B8  0EFE               	movlw	254
  7530   0039BA  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7531   0039BC  6E0D               	movwf	(??___xxtofl+3)^0,c
  7532   0039BE  500A               	movf	??___xxtofl^0,w,c
  7533   0039C0  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7534   0039C2  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7535   0039C4  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7536   0039C6  A4D8               	btfss	status,2,c
  7537   0039C8  EFE8  F01C         	goto	u9061
  7538   0039CC  EFEA  F01C         	goto	u9060
  7539   0039D0                     u9061:
  7540   0039D0  EFCD  F01C         	goto	l7486
  7541   0039D4                     u9060:
  7542   0039D4  EFF8  F01C         	goto	l1372
  7543   0039D8                     l7490:
  7544   0039D8  2A0F               	incf	___xxtofl@exp^0,f,c
  7545   0039DA  0E01               	movlw	1
  7546   0039DC  2610               	addwf	___xxtofl@arg^0,f,c
  7547   0039DE  0E00               	movlw	0
  7548   0039E0  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  7549   0039E2  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  7550   0039E4  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  7551   0039E6  90D8               	bcf	status,0,c
  7552   0039E8  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7553   0039EA  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7554   0039EC  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7555   0039EE  3210               	rrcf	___xxtofl@arg^0,f,c
  7556   0039F0                     l1372:
  7557   0039F0  0E00               	movlw	0
  7558   0039F2  1410               	andwf	___xxtofl@arg^0,w,c
  7559   0039F4  6E0A               	movwf	??___xxtofl^0,c
  7560   0039F6  0E00               	movlw	0
  7561   0039F8  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7562   0039FA  6E0B               	movwf	(??___xxtofl+1)^0,c
  7563   0039FC  0E00               	movlw	0
  7564   0039FE  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7565   003A00  6E0C               	movwf	(??___xxtofl+2)^0,c
  7566   003A02  0EFF               	movlw	255
  7567   003A04  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7568   003A06  6E0D               	movwf	(??___xxtofl+3)^0,c
  7569   003A08  500A               	movf	??___xxtofl^0,w,c
  7570   003A0A  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7571   003A0C  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7572   003A0E  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7573   003A10  A4D8               	btfss	status,2,c
  7574   003A12  EF0D  F01D         	goto	u9071
  7575   003A16  EF0F  F01D         	goto	u9070
  7576   003A1A                     u9071:
  7577   003A1A  EFEC  F01C         	goto	l7490
  7578   003A1E                     u9070:
  7579   003A1E  EF17  F01D         	goto	l7498
  7580   003A22                     l7496:
  7581   003A22  060F               	decf	___xxtofl@exp^0,f,c
  7582   003A24  90D8               	bcf	status,0,c
  7583   003A26  3610               	rlcf	___xxtofl@arg^0,f,c
  7584   003A28  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  7585   003A2A  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  7586   003A2C  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  7587   003A2E                     l7498:
  7588   003A2E  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  7589   003A30  EF1C  F01D         	goto	u9081
  7590   003A34  EF1E  F01D         	goto	u9080
  7591   003A38                     u9081:
  7592   003A38  EF26  F01D         	goto	l1379
  7593   003A3C                     u9080:
  7594   003A3C  0E02               	movlw	2
  7595   003A3E  600F               	cpfslt	___xxtofl@exp^0,c
  7596   003A40  EF24  F01D         	goto	u9091
  7597   003A44  EF26  F01D         	goto	u9090
  7598   003A48                     u9091:
  7599   003A48  EF11  F01D         	goto	l7496
  7600   003A4C                     u9090:
  7601   003A4C                     l1379:
  7602   003A4C  B00F               	btfsc	___xxtofl@exp^0,0,c
  7603   003A4E  EF2B  F01D         	goto	u9101
  7604   003A52  EF2D  F01D         	goto	u9100
  7605   003A56                     u9101:
  7606   003A56  EF2E  F01D         	goto	l7504
  7607   003A5A                     u9100:
  7608   003A5A  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  7609   003A5C                     l7504:
  7610   003A5C  90D8               	bcf	status,0,c
  7611   003A5E  320F               	rrcf	___xxtofl@exp^0,f,c
  7612   003A60  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  7613   003A64  6A0B               	clrf	(??___xxtofl+1)^0,c
  7614   003A66  6A0C               	clrf	(??___xxtofl+2)^0,c
  7615   003A68  6A0D               	clrf	(??___xxtofl+3)^0,c
  7616   003A6A  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  7617   003A6E  6A0C               	clrf	(??___xxtofl+2)^0,c
  7618   003A70  6A0B               	clrf	(??___xxtofl+1)^0,c
  7619   003A72  6A0A               	clrf	??___xxtofl^0,c
  7620   003A74  500A               	movf	??___xxtofl^0,w,c
  7621   003A76  1210               	iorwf	___xxtofl@arg^0,f,c
  7622   003A78  500B               	movf	(??___xxtofl+1)^0,w,c
  7623   003A7A  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  7624   003A7C  500C               	movf	(??___xxtofl+2)^0,w,c
  7625   003A7E  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  7626   003A80  500D               	movf	(??___xxtofl+3)^0,w,c
  7627   003A82  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  7628   003A84  500E               	movf	___xxtofl@sign^0,w,c
  7629   003A86  B4D8               	btfsc	status,2,c
  7630   003A88  EF48  F01D         	goto	u9111
  7631   003A8C  EF4A  F01D         	goto	u9110
  7632   003A90                     u9111:
  7633   003A90  EF52  F01D         	goto	l7514
  7634   003A94                     u9110:
  7635   003A94  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7636   003A96  EF51  F01D         	goto	u9120
  7637   003A9A  EF4F  F01D         	goto	u9121
  7638   003A9E                     u9121:
  7639   003A9E  EF52  F01D         	goto	l7514
  7640   003AA2                     u9120:
  7641   003AA2  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  7642   003AA4                     l7514:
  7643   003AA4  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  7644   003AA8  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  7645   003AAC  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  7646   003AB0  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  7647   003AB4                     l1368:
  7648   003AB4  0012               	return		;funcret
  7649   003AB6                     __end_of___xxtofl:
  7650                           	callstack 0
  7651                           
  7652 ;; *************** function _moveDisplay *****************
  7653 ;; Defined at:
  7654 ;;		line 11 in file "menu.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;  menuI           1    wreg     unsigned char 
  7657 ;;  where           1  135[BANK0 ] unsigned char 
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;  menuI           1   50[BANK1 ] unsigned char 
  7660 ;;  menuItem2      17   17[BANK1 ] unsigned char [17]
  7661 ;;  menuItem1      17    0[BANK1 ] unsigned char [17]
  7662 ;;  menuItems      16   34[BANK1 ] PTR unsigned char [8]
  7663 ;;		 -> STR_31(1), STR_30(6), STR_29(5), STR_28(4), 
  7664 ;;		 -> STR_27(4), STR_26(4), STR_25(5), STR_24(5), 
  7665 ;; Return value:  Size  Location     Type
  7666 ;;                  1    wreg      unsigned char 
  7667 ;; Registers used:
  7668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7669 ;; Tracked objects:
  7670 ;;		On entry : 0/0
  7671 ;;		On exit  : 0/0
  7672 ;;		Unchanged: 0/0
  7673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7674 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7676 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7677 ;;      Totals:         0       3      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7678 ;;Total ram usage:       54 bytes
  7679 ;; Hardware stack levels used: 1
  7680 ;; Hardware stack levels required when called: 9
  7681 ;; This function calls:
  7682 ;;		_LCD_Clear
  7683 ;;		_LCD_ShowString
  7684 ;;		_sprintf
  7685 ;; This function is called by:
  7686 ;;		_main
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           	psect	text26
  7691   0041EE                     __ptext26:
  7692                           	callstack 0
  7693   0041EE                     _moveDisplay:
  7694                           	callstack 21
  7695                           
  7696                           ;incstack = 0
  7697                           ;moveDisplay@menuI stored from wreg
  7698   0041EE  0101               	movlb	1	; () banked
  7699   0041F0  6FCD               	movwf	moveDisplay@menuI& (0+255),b
  7700   0041F2                     
  7701                           ;menu.c: 12:     LCD_Clear();
  7702   0041F2  ECE1  F028         	call	_LCD_Clear	;wreg free
  7703   0041F6                     
  7704                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  7705   0041F6  EE21  F0CE         	lfsr	2,moveDisplay@F6965
  7706   0041FA  EE11  F0BD         	lfsr	1,moveDisplay@menuItems
  7707   0041FE  0E0F               	movlw	15
  7708   004200                     u9721:
  7709   004200  CFDB FFE3          	movff	plusw2,plusw1
  7710   004204  06E8               	decf	wreg,f,c
  7711   004206  E2FC               	bc	u9721
  7712                           
  7713                           ;menu.c: 14:     switch (where){
  7714   004208  EF1E  F021         	goto	l8000
  7715   00420C                     l7990:
  7716                           
  7717                           ; BSR set to: 0
  7718                           ;menu.c: 18:             if(menuI<6){
  7719   00420C  0E06               	movlw	6
  7720   00420E  0101               	movlb	1	; () banked
  7721   004210  61CD               	cpfslt	moveDisplay@menuI& (0+255),b
  7722   004212  EF0D  F021         	goto	u9731
  7723   004216  EF0F  F021         	goto	u9730
  7724   00421A                     u9731:
  7725   00421A  EF2E  F021         	goto	l8002
  7726   00421E                     u9730:
  7727   00421E                     
  7728                           ; BSR set to: 1
  7729                           ;menu.c: 19:             menuI++;
  7730   00421E  2BCD               	incf	moveDisplay@menuI& (0+255),f,b
  7731   004220  EF2E  F021         	goto	l8002
  7732   004224                     l7994:
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;menu.c: 23:             if(menuI>0){
  7736   004224  0101               	movlb	1	; () banked
  7737   004226  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7738   004228  B4D8               	btfsc	status,2,c
  7739   00422A  EF19  F021         	goto	u9741
  7740   00422E  EF1B  F021         	goto	u9740
  7741   004232                     u9741:
  7742   004232  EF2E  F021         	goto	l8002
  7743   004236                     u9740:
  7744   004236                     
  7745                           ; BSR set to: 1
  7746                           ;menu.c: 24:             menuI--;
  7747   004236  07CD               	decf	moveDisplay@menuI& (0+255),f,b
  7748   004238  EF2E  F021         	goto	l8002
  7749   00423C                     l8000:
  7750   00423C  0100               	movlb	0	; () banked
  7751   00423E  51E7               	movf	moveDisplay@where& (0+255),w,b
  7752                           
  7753                           ; Switch size 1, requested type "simple"
  7754                           ; Number of cases is 3, Range of values is 0 to 2
  7755                           ; switch strategies available:
  7756                           ; Name         Instructions Cycles
  7757                           ; simple_byte           10     6 (average)
  7758                           ;	Chosen strategy is simple_byte
  7759   004240  0A00               	xorlw	0	; case 0
  7760   004242  B4D8               	btfsc	status,2,c
  7761   004244  EF2E  F021         	goto	l8002
  7762   004248  0A01               	xorlw	1	; case 1
  7763   00424A  B4D8               	btfsc	status,2,c
  7764   00424C  EF06  F021         	goto	l7990
  7765   004250  0A03               	xorlw	3	; case 2
  7766   004252  B4D8               	btfsc	status,2,c
  7767   004254  EF12  F021         	goto	l7994
  7768   004258  EF2E  F021         	goto	l8002
  7769   00425C                     l8002:
  7770                           
  7771                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  7772   00425C  0E9B               	movlw	low moveDisplay@menuItem1
  7773   00425E  0100               	movlb	0	; () banked
  7774   004260  6FCE               	movwf	sprintf@s& (0+255),b
  7775   004262  0E01               	movlw	high moveDisplay@menuItem1
  7776   004264  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7777   004266  0ECC               	movlw	low STR_32
  7778   004268  6FD0               	movwf	sprintf@fmt& (0+255),b
  7779   00426A  0EFF               	movlw	high STR_32
  7780   00426C  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7781   00426E  0E00               	movlw	0
  7782   004270  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7783   004272  0E0F               	movlw	15
  7784   004274  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7785   004276  0101               	movlb	1	; () banked
  7786   004278  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7787   00427A  0D02               	mullw	2
  7788   00427C  0EBD               	movlw	low moveDisplay@menuItems
  7789   00427E  24F3               	addwf	243,w,c
  7790   004280  6ED9               	movwf	fsr2l,c
  7791   004282  0E01               	movlw	high moveDisplay@menuItems
  7792   004284  20F4               	addwfc	prodh,w,c
  7793   004286  6EDA               	movwf	fsr2h,c
  7794   004288  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7795   00428C  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7796   004290  EC29  F028         	call	_sprintf	;wreg free
  7797                           
  7798                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  7799   004294  0EAC               	movlw	low moveDisplay@menuItem2
  7800   004296  0100               	movlb	0	; () banked
  7801   004298  6FCE               	movwf	sprintf@s& (0+255),b
  7802   00429A  0E01               	movlw	high moveDisplay@menuItem2
  7803   00429C  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7804   00429E  0ECD               	movlw	low (STR_32+1)
  7805   0042A0  6FD0               	movwf	sprintf@fmt& (0+255),b
  7806   0042A2  0EFF               	movlw	high (STR_32+1)
  7807   0042A4  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7808   0042A6  0E00               	movlw	0
  7809   0042A8  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7810   0042AA  0E10               	movlw	16
  7811   0042AC  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7812   0042AE  0101               	movlb	1	; () banked
  7813   0042B0  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7814   0042B2  0100               	movlb	0	; () banked
  7815   0042B4  6FE8               	movwf	??_moveDisplay& (0+255),b
  7816   0042B6  6BE9               	clrf	(??_moveDisplay+1)& (0+255),b
  7817   0042B8  90D8               	bcf	status,0,c
  7818   0042BA  37E8               	rlcf	??_moveDisplay& (0+255),f,b
  7819   0042BC  37E9               	rlcf	(??_moveDisplay+1)& (0+255),f,b
  7820   0042BE  0E02               	movlw	2
  7821   0042C0  27E8               	addwf	??_moveDisplay& (0+255),f,b
  7822   0042C2  0E00               	movlw	0
  7823   0042C4  23E9               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  7824   0042C6  0EBD               	movlw	low moveDisplay@menuItems
  7825   0042C8  25E8               	addwf	??_moveDisplay& (0+255),w,b
  7826   0042CA  6ED9               	movwf	fsr2l,c
  7827   0042CC  0E01               	movlw	high moveDisplay@menuItems
  7828   0042CE  21E9               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  7829   0042D0  6EDA               	movwf	fsr2h,c
  7830   0042D2  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7831   0042D6  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7832   0042DA  EC29  F028         	call	_sprintf	;wreg free
  7833   0042DE                     
  7834                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  7835   0042DE  0E9B               	movlw	low moveDisplay@menuItem1
  7836   0042E0  6E07               	movwf	LCD_ShowString@textData^0,c
  7837   0042E2  0E01               	movlw	high moveDisplay@menuItem1
  7838   0042E4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7839   0042E6  0E01               	movlw	1
  7840   0042E8  ECB1  F024         	call	_LCD_ShowString
  7841   0042EC                     
  7842                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  7843   0042EC  0EAC               	movlw	low moveDisplay@menuItem2
  7844   0042EE  6E07               	movwf	LCD_ShowString@textData^0,c
  7845   0042F0  0E01               	movlw	high moveDisplay@menuItem2
  7846   0042F2  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7847   0042F4  0E02               	movlw	2
  7848   0042F6  ECB1  F024         	call	_LCD_ShowString
  7849   0042FA                     
  7850                           ;menu.c: 35:     return menuI;
  7851   0042FA  0101               	movlb	1	; () banked
  7852   0042FC  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7853   0042FE                     
  7854                           ; BSR set to: 1
  7855   0042FE  0012               	return		;funcret
  7856   004300                     __end_of_moveDisplay:
  7857                           	callstack 0
  7858                           
  7859 ;; *************** function _sprintf *****************
  7860 ;; Defined at:
  7861 ;;		line 9 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_sprintf.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;  s               2  110[BANK0 ] PTR unsigned char 
  7864 ;;		 -> runGAME@approxText(25), runGAME@text(17), runADC@text(17), moveDisplay@menuItem2(17), 
  7865 ;;		 -> moveDisplay@menuItem1(17), 
  7866 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  7867 ;;		 -> STR_39(18), STR_38(19), STR_37(17), STR_36(19), 
  7868 ;;		 -> STR_34(19), STR_33(5), STR_32(6), 
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;  f              12  123[BANK0 ] struct _IO_FILE
  7871 ;;  ret             2    0        int 
  7872 ;;  ap              1  122[BANK0 ] PTR void [1]
  7873 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  2  110[BANK0 ] int 
  7876 ;; Registers used:
  7877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7883 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7884 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7886 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7887 ;;Total ram usage:       25 bytes
  7888 ;; Hardware stack levels used: 1
  7889 ;; Hardware stack levels required when called: 8
  7890 ;; This function calls:
  7891 ;;		_vfprintf
  7892 ;; This function is called by:
  7893 ;;		_moveDisplay
  7894 ;;		_runADC
  7895 ;;		_runGAME
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           	psect	text27
  7900   005052                     __ptext27:
  7901                           	callstack 0
  7902   005052                     _sprintf:
  7903                           	callstack 21
  7904   005052  0ED2               	movlw	low (?_sprintf+4)
  7905   005054  0100               	movlb	0	; () banked
  7906   005056  6FDA               	movwf	sprintf@ap& (0+255),b
  7907   005058  C0CE  F0DB         	movff	sprintf@s,sprintf@f
  7908   00505C  C0CF  F0DC         	movff	sprintf@s+1,sprintf@f+1
  7909   005060                     
  7910                           ; BSR set to: 0
  7911   005060  0E00               	movlw	0
  7912   005062  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  7913   005064  0E00               	movlw	0
  7914   005066  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  7915   005068                     
  7916                           ; BSR set to: 0
  7917   005068  0E00               	movlw	0
  7918   00506A  6FE6               	movwf	(sprintf@f+11)& (0+255),b
  7919   00506C  0E00               	movlw	0
  7920   00506E  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  7921   005070                     
  7922                           ; BSR set to: 0
  7923   005070  0EDB               	movlw	low sprintf@f
  7924   005072  6FC7               	movwf	vfprintf@fp& (0+255),b
  7925   005074  6BC8               	clrf	(vfprintf@fp+1)& (0+255),b
  7926   005076  C0D0  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  7927   00507A  C0D1  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7928   00507E  0EDA               	movlw	low sprintf@ap
  7929   005080  6FCB               	movwf	vfprintf@ap& (0+255),b
  7930   005082  ECE0  F027         	call	_vfprintf	;wreg free
  7931   005086  0100               	movlb	0	; () banked
  7932   005088  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  7933   00508A  25CE               	addwf	sprintf@s& (0+255),w,b
  7934   00508C  6ED9               	movwf	fsr2l,c
  7935   00508E  51DF               	movf	(sprintf@f+4)& (0+255),w,b
  7936   005090  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  7937   005092  6EDA               	movwf	fsr2h,c
  7938   005094  6ADF               	clrf	indf2,c
  7939   005096                     
  7940                           ; BSR set to: 0
  7941   005096  0012               	return		;funcret
  7942   005098                     __end_of_sprintf:
  7943                           	callstack 0
  7944                           
  7945 ;; *************** function _vfprintf *****************
  7946 ;; Defined at:
  7947 ;;		line 1817 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  7950 ;;		 -> NULL(0), sprintf@f(12), 
  7951 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  7952 ;;		 -> STR_39(18), STR_38(19), STR_37(17), STR_36(19), 
  7953 ;;		 -> STR_35(5), STR_34(19), STR_33(5), STR_32(6), 
  7954 ;;		 -> STR_23(5), 
  7955 ;;  ap              1  107[BANK0 ] PTR PTR void 
  7956 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  7959 ;;		 -> STR_39(18), STR_38(19), STR_37(17), STR_36(19), 
  7960 ;;		 -> STR_35(5), STR_34(19), STR_33(5), STR_32(6), 
  7961 ;;		 -> STR_23(5), 
  7962 ;; Return value:  Size  Location     Type
  7963 ;;                  2  103[BANK0 ] int 
  7964 ;; Registers used:
  7965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7966 ;; Tracked objects:
  7967 ;;		On entry : 0/0
  7968 ;;		On exit  : 0/0
  7969 ;;		Unchanged: 0/0
  7970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7971 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7972 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7974 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7975 ;;Total ram usage:        7 bytes
  7976 ;; Hardware stack levels used: 1
  7977 ;; Hardware stack levels required when called: 7
  7978 ;; This function calls:
  7979 ;;		_vfpfcnvrt
  7980 ;; This function is called by:
  7981 ;;		_sprintf
  7982 ;;		_printf
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           	psect	text28
  7987   004FC0                     __ptext28:
  7988                           	callstack 0
  7989   004FC0                     _vfprintf:
  7990                           	callstack 21
  7991   004FC0                     
  7992                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE *fp, const 
      +                          char *fmt, va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1818: {;D:\MP
      +                          LABX\Compiler\pic\sources\c99\common\doprnt.c: 1820:     char *cfmt;;D:\MPLABX\Compiler\
      +                          pic\sources\c99\common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7993   004FC0  C0C9  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  7994   004FC4  C0CA  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7995                           
  7996                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  7997   004FC8  EFF1  F027         	goto	l7696
  7998   004FCC                     l7694:
  7999                           
  8000                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt, ap);
  8001   004FCC  C0C7  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  8002   004FD0  C0C8  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8003   004FD4  0ECC               	movlw	low vfprintf@cfmt
  8004   004FD6  0100               	movlb	0	; () banked
  8005   004FD8  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  8006   004FDA  C0CB  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  8007   004FDE  ECA6  F005         	call	_vfpfcnvrt	;wreg free
  8008   004FE2                     l7696:
  8009                           
  8010                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  8011   004FE2  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  8012   004FE6  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8013   004FEA                     	if	0	;tblptru may be non-zero
  8014   004FEA                     	endif
  8015   004FEA                     	if	0	;tblptru may be non-zero
  8016   004FEA                     	endif
  8017   004FEA  0008               	tblrd		*
  8018   004FEC  50F5               	movf	tablat,w,c
  8019   004FEE  0900               	iorlw	0
  8020   004FF0  A4D8               	btfss	status,2,c
  8021   004FF2  EFFD  F027         	goto	u9301
  8022   004FF6  EFFF  F027         	goto	u9300
  8023   004FFA                     u9301:
  8024   004FFA  EFE6  F027         	goto	l7694
  8025   004FFE                     u9300:
  8026   004FFE                     
  8027                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  8028   004FFE  0E00               	movlw	0
  8029   005000  0100               	movlb	0	; () banked
  8030   005002  6FC8               	movwf	(?_vfprintf+1)& (0+255),b
  8031   005004  0E00               	movlw	0
  8032   005006  6FC7               	movwf	?_vfprintf& (0+255),b
  8033   005008                     
  8034                           ; BSR set to: 0
  8035   005008  0012               	return		;funcret
  8036   00500A                     __end_of_vfprintf:
  8037                           	callstack 0
  8038                           
  8039 ;; *************** function _vfpfcnvrt *****************
  8040 ;; Defined at:
  8041 ;;		line 1177 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  8044 ;;		 -> NULL(0), sprintf@f(12), 
  8045 ;;  fmt             1   91[BANK0 ] PTR PTR unsigned char 
  8046 ;;		 -> vfprintf@cfmt(2), 
  8047 ;;  ap              1   92[BANK0 ] PTR PTR void 
  8048 ;;		 -> printf@ap(1), sprintf@ap(1), 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;  convarg         4   96[BANK0 ] struct .
  8051 ;;  cp              2  101[BANK0 ] PTR unsigned char 
  8052 ;;		 -> STR_39(18), STR_38(19), STR_37(17), STR_36(19), 
  8053 ;;		 -> STR_35(5), STR_34(19), STR_33(5), STR_32(6), 
  8054 ;;		 -> STR_23(5), 
  8055 ;;  c               1  100[BANK0 ] unsigned char 
  8056 ;;  done            1   95[BANK0 ] _Bool 
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  1    wreg      void 
  8059 ;; Registers used:
  8060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8066 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8067 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8070 ;;Total ram usage:       14 bytes
  8071 ;; Hardware stack levels used: 1
  8072 ;; Hardware stack levels required when called: 6
  8073 ;; This function calls:
  8074 ;;		_dtoa
  8075 ;;		_efgtoa
  8076 ;;		_fputc
  8077 ;;		_read_prec_or_width
  8078 ;;		_stoa
  8079 ;;		_utoa
  8080 ;; This function is called by:
  8081 ;;		_vfprintf
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085                           	psect	text29
  8086   000B4C                     __ptext29:
  8087                           	callstack 0
  8088   000B4C                     _vfpfcnvrt:
  8089                           	callstack 21
  8090   000B4C                     
  8091                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1178: {;D:\MPLABX\Co
      +                          mpiler\pic\sources\c99\common\doprnt.c: 1179:     char c, *cp;;D:\MPLABX\Compiler\pic\so
      +                          urces\c99\common\doprnt.c: 1180:     _Bool done;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1188:  } convarg;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1201:
      +                               if ((*fmt)[0] == '%') {
  8092   000B4C  0100               	movlb	0	; () banked
  8093   000B4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8094   000B50  6ED9               	movwf	fsr2l,c
  8095   000B52  6ADA               	clrf	fsr2h,c
  8096   000B54  CFDE FFF6          	movff	postinc2,tblptrl
  8097   000B58  CFDD FFF7          	movff	postdec2,tblptrh
  8098   000B5C                     	if	0	;tblptru may be non-zero
  8099   000B5C                     	endif
  8100   000B5C                     	if	0	;tblptru may be non-zero
  8101   000B5C                     	endif
  8102   000B5C  0008               	tblrd		*
  8103   000B5E  50F5               	movf	tablat,w,c
  8104   000B60  0A25               	xorlw	37
  8105   000B62  A4D8               	btfss	status,2,c
  8106   000B64  EFB6  F005         	goto	u9131
  8107   000B68  EFB8  F005         	goto	u9130
  8108   000B6C                     u9131:
  8109   000B6C  EF40  F008         	goto	l7666
  8110   000B70                     u9130:
  8111   000B70                     
  8112                           ; BSR set to: 0
  8113                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  8114   000B70  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8115   000B72  6ED9               	movwf	fsr2l,c
  8116   000B74  6ADA               	clrf	fsr2h,c
  8117   000B76  2ADE               	incf	postinc2,f,c
  8118   000B78  0E00               	movlw	0
  8119   000B7A  22DD               	addwfc	postdec2,f,c
  8120   000B7C                     
  8121                           ; BSR set to: 0
  8122                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1204:         flags = width = 0;
  8123   000B7C  0E00               	movlw	0
  8124   000B7E  6E56               	movwf	(_width+1)^0,c
  8125   000B80  0E00               	movlw	0
  8126   000B82  6E55               	movwf	_width^0,c
  8127   000B84  C055  F059         	movff	_width,_flags
  8128   000B88                     
  8129                           ; BSR set to: 0
  8130                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1205:         prec = -1;
  8131   000B88  6857               	setf	_prec^0,c
  8132   000B8A  6858               	setf	(_prec+1)^0,c
  8133   000B8C                     
  8134                           ; BSR set to: 0
  8135                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1209:         done = 0;
  8136   000B8C  0E00               	movlw	0
  8137   000B8E  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8138                           
  8139                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  8140   000B90  EFE6  F005         	goto	l7538
  8141   000B94                     l7528:
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1214:                     flags |= 
      +                          (1 << 0);
  8145   000B94  8059               	bsf	_flags^0,0,c
  8146   000B96                     
  8147                           ; BSR set to: 0
  8148                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1215:                     ++*fmt;
  8149   000B96  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8150   000B98  6ED9               	movwf	fsr2l,c
  8151   000B9A  6ADA               	clrf	fsr2h,c
  8152   000B9C  2ADE               	incf	postinc2,f,c
  8153   000B9E  0E00               	movlw	0
  8154   000BA0  22DD               	addwfc	postdec2,f,c
  8155                           
  8156                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1216:                     break;
  8157   000BA2  EFE6  F005         	goto	l7538
  8158   000BA6                     l7532:
  8159                           
  8160                           ; BSR set to: 0
  8161                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1243:                     done = 1;
  8162   000BA6  0E01               	movlw	1
  8163   000BA8  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8164                           
  8165                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1244:                     break;
  8166   000BAA  EFE6  F005         	goto	l7538
  8167   000BAE                     l7536:
  8168                           
  8169                           ; BSR set to: 0
  8170   000BAE  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8171   000BB0  6ED9               	movwf	fsr2l,c
  8172   000BB2  6ADA               	clrf	fsr2h,c
  8173   000BB4  CFDE FFF6          	movff	postinc2,tblptrl
  8174   000BB8  CFDD FFF7          	movff	postdec2,tblptrh
  8175   000BBC                     	if	0	;tblptru may be non-zero
  8176   000BBC                     	endif
  8177   000BBC                     	if	0	;tblptru may be non-zero
  8178   000BBC                     	endif
  8179   000BBC  0008               	tblrd		*
  8180   000BBE  50F5               	movf	tablat,w,c
  8181                           
  8182                           ; Switch size 1, requested type "simple"
  8183                           ; Number of cases is 1, Range of values is 45 to 45
  8184                           ; switch strategies available:
  8185                           ; Name         Instructions Cycles
  8186                           ; simple_byte            4     3 (average)
  8187                           ;	Chosen strategy is simple_byte
  8188   000BC0  0A2D               	xorlw	45	; case 45
  8189   000BC2  B4D8               	btfsc	status,2,c
  8190   000BC4  EFCA  F005         	goto	l7528
  8191   000BC8  EFD3  F005         	goto	l7532
  8192   000BCC                     l7538:
  8193                           
  8194                           ; BSR set to: 0
  8195                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  8196   000BCC  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  8197   000BCE  B4D8               	btfsc	status,2,c
  8198   000BD0  EFEC  F005         	goto	u9141
  8199   000BD4  EFEE  F005         	goto	u9140
  8200   000BD8                     u9141:
  8201   000BD8  EFD7  F005         	goto	l7536
  8202   000BDC                     u9140:
  8203   000BDC                     
  8204                           ; BSR set to: 0
  8205                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1256:   width = read_prec_or_width(
      +                          fmt, ap);
  8206   000BDC  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  8207   000BE0  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  8208   000BE4  EC62  F025         	call	_read_prec_or_width	;wreg free
  8209   000BE8  C00C  F055         	movff	?_read_prec_or_width,_width
  8210   000BEC  C00D  F056         	movff	?_read_prec_or_width+1,_width+1
  8211   000BF0                     
  8212                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1257:   if (width < 0) {
  8213   000BF0  BE56               	btfsc	(_width+1)^0,7,c
  8214   000BF2  EFFF  F005         	goto	u9150
  8215   000BF6  EFFD  F005         	goto	u9151
  8216   000BFA                     u9151:
  8217   000BFA  EF04  F006         	goto	l7546
  8218   000BFE                     u9150:
  8219   000BFE                     
  8220                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1258:    flags |= (1 << 0);
  8221   000BFE  8059               	bsf	_flags^0,0,c
  8222                           
  8223                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1259:    width = -width;
  8224   000C00  6C55               	negf	_width^0,c
  8225   000C02  1E56               	comf	(_width+1)^0,f,c
  8226   000C04  B0D8               	btfsc	status,0,c
  8227   000C06  2A56               	incf	(_width+1)^0,f,c
  8228   000C08                     l7546:
  8229                           
  8230                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1265:         if ((*fmt)[0] == '.')
      +                           {
  8231   000C08  0100               	movlb	0	; () banked
  8232   000C0A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8233   000C0C  6ED9               	movwf	fsr2l,c
  8234   000C0E  6ADA               	clrf	fsr2h,c
  8235   000C10  CFDE FFF6          	movff	postinc2,tblptrl
  8236   000C14  CFDD FFF7          	movff	postdec2,tblptrh
  8237   000C18                     	if	0	;tblptru may be non-zero
  8238   000C18                     	endif
  8239   000C18                     	if	0	;tblptru may be non-zero
  8240   000C18                     	endif
  8241   000C18  0008               	tblrd		*
  8242   000C1A  50F5               	movf	tablat,w,c
  8243   000C1C  0A2E               	xorlw	46
  8244   000C1E  A4D8               	btfss	status,2,c
  8245   000C20  EF14  F006         	goto	u9161
  8246   000C24  EF16  F006         	goto	u9160
  8247   000C28                     u9161:
  8248   000C28  EF26  F006         	goto	l7552
  8249   000C2C                     u9160:
  8250   000C2C                     
  8251                           ; BSR set to: 0
  8252                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1266:             ++*fmt;
  8253   000C2C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8254   000C2E  6ED9               	movwf	fsr2l,c
  8255   000C30  6ADA               	clrf	fsr2h,c
  8256   000C32  2ADE               	incf	postinc2,f,c
  8257   000C34  0E00               	movlw	0
  8258   000C36  22DD               	addwfc	postdec2,f,c
  8259   000C38                     
  8260                           ; BSR set to: 0
  8261                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1267:    prec = read_prec_or_width(
      +                          fmt, ap);
  8262   000C38  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  8263   000C3C  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  8264   000C40  EC62  F025         	call	_read_prec_or_width	;wreg free
  8265   000C44  C00C  F057         	movff	?_read_prec_or_width,_prec
  8266   000C48  C00D  F058         	movff	?_read_prec_or_width+1,_prec+1
  8267   000C4C                     l7552:
  8268                           
  8269                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt;
  8270   000C4C  0100               	movlb	0	; () banked
  8271   000C4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8272   000C50  6ED9               	movwf	fsr2l,c
  8273   000C52  6ADA               	clrf	fsr2h,c
  8274   000C54  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  8275   000C58  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  8276   000C5C                     
  8277                           ; BSR set to: 0
  8278                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  8279   000C5C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8280   000C60  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8281   000C64                     	if	0	;tblptru may be non-zero
  8282   000C64                     	endif
  8283   000C64                     	if	0	;tblptru may be non-zero
  8284   000C64                     	endif
  8285   000C64  0008               	tblrd		*
  8286   000C66  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  8287                           
  8288                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1294:   switch(c) {
  8289   000C6A  EF43  F006         	goto	l7564
  8290   000C6E                     l7556:
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1298:     cp++;
  8294   000C6E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  8295   000C70  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  8296                           
  8297                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1305:     break;
  8298   000C72  EF56  F006         	goto	l7566
  8299   000C76                     l7558:
  8300                           
  8301                           ; BSR set to: 0
  8302                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1350:     c = 'i';
  8303   000C76  0E69               	movlw	105
  8304   000C78  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8305                           
  8306                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1351:     break;
  8307   000C7A  EF56  F006         	goto	l7566
  8308   000C7E                     l7560:
  8309                           
  8310                           ; BSR set to: 0
  8311                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  8312   000C7E  0E00               	movlw	0
  8313   000C80  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8314                           
  8315                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1354:     break;
  8316   000C82  EF56  F006         	goto	l7566
  8317   000C86                     l7564:
  8318                           
  8319                           ; BSR set to: 0
  8320   000C86  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8321                           
  8322                           ; Switch size 1, requested type "simple"
  8323                           ; Number of cases is 4, Range of values is 100 to 117
  8324                           ; switch strategies available:
  8325                           ; Name         Instructions Cycles
  8326                           ; simple_byte           13     7 (average)
  8327                           ;	Chosen strategy is simple_byte
  8328   000C88  0A64               	xorlw	100	; case 100
  8329   000C8A  B4D8               	btfsc	status,2,c
  8330   000C8C  EF3B  F006         	goto	l7558
  8331   000C90  0A0C               	xorlw	12	; case 104
  8332   000C92  B4D8               	btfsc	status,2,c
  8333   000C94  EF37  F006         	goto	l7556
  8334   000C98  0A01               	xorlw	1	; case 105
  8335   000C9A  B4D8               	btfsc	status,2,c
  8336   000C9C  EF3B  F006         	goto	l7558
  8337   000CA0  0A1C               	xorlw	28	; case 117
  8338   000CA2  B4D8               	btfsc	status,2,c
  8339   000CA4  EF3B  F006         	goto	l7558
  8340   000CA8  EF3F  F006         	goto	l7560
  8341   000CAC                     l7566:
  8342                           
  8343                           ; BSR set to: 0
  8344                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1361:   if (*cp == 'd' || *cp == 'i
      +                          ') {
  8345   000CAC  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8346   000CB0  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8347   000CB4                     	if	0	;tblptru may be non-zero
  8348   000CB4                     	endif
  8349   000CB4                     	if	0	;tblptru may be non-zero
  8350   000CB4                     	endif
  8351   000CB4  0008               	tblrd		*
  8352   000CB6  50F5               	movf	tablat,w,c
  8353   000CB8  0A64               	xorlw	100
  8354   000CBA  B4D8               	btfsc	status,2,c
  8355   000CBC  EF62  F006         	goto	u9171
  8356   000CC0  EF64  F006         	goto	u9170
  8357   000CC4                     u9171:
  8358   000CC4  EF90  F006         	goto	l7576
  8359   000CC8                     u9170:
  8360   000CC8                     
  8361                           ; BSR set to: 0
  8362   000CC8  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8363   000CCC  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8364   000CD0                     	if	0	;tblptru may be non-zero
  8365   000CD0                     	endif
  8366   000CD0                     	if	0	;tblptru may be non-zero
  8367   000CD0                     	endif
  8368   000CD0  0008               	tblrd		*
  8369   000CD2  50F5               	movf	tablat,w,c
  8370   000CD4  0A69               	xorlw	105
  8371   000CD6  A4D8               	btfss	status,2,c
  8372   000CD8  EF70  F006         	goto	u9181
  8373   000CDC  EF72  F006         	goto	u9180
  8374   000CE0                     u9181:
  8375   000CE0  EFB4  F006         	goto	l7584
  8376   000CE4                     u9180:
  8377   000CE4  EF90  F006         	goto	l7576
  8378   000CE8                     l7570:
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1365:      convarg.sint = (vfpf_sin
      +                          t_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8382   000CE8  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8383   000CEA  6ED9               	movwf	fsr2l,c
  8384   000CEC  6ADA               	clrf	fsr2h,c
  8385   000CEE  0E02               	movlw	2
  8386   000CF0  26DF               	addwf	indf2,f,c
  8387   000CF2  5CDF               	subwf	indf2,w,c
  8388   000CF4  6ED9               	movwf	fsr2l,c
  8389   000CF6  6ADA               	clrf	fsr2h,c
  8390   000CF8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8391   000CFC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8392                           
  8393                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1366:      break;
  8394   000D00  EF9B  F006         	goto	l7578
  8395   000D04                     l7572:
  8396                           
  8397                           ; BSR set to: 0
  8398                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1369:      convarg.sint = (vfpf_sin
      +                          t_t)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  8399   000D04  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8400   000D06  6ED9               	movwf	fsr2l,c
  8401   000D08  6ADA               	clrf	fsr2h,c
  8402   000D0A  0E02               	movlw	2
  8403   000D0C  26DF               	addwf	indf2,f,c
  8404   000D0E  5CDF               	subwf	indf2,w,c
  8405   000D10  6ED9               	movwf	fsr2l,c
  8406   000D12  6ADA               	clrf	fsr2h,c
  8407   000D14  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8408   000D18  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8409                           
  8410                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1370:      break;
  8411   000D1C  EF9B  F006         	goto	l7578
  8412   000D20                     l7576:
  8413                           
  8414                           ; BSR set to: 0
  8415   000D20  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8416                           
  8417                           ; Switch size 1, requested type "simple"
  8418                           ; Number of cases is 2, Range of values is 104 to 105
  8419                           ; switch strategies available:
  8420                           ; Name         Instructions Cycles
  8421                           ; simple_byte            7     4 (average)
  8422                           ;	Chosen strategy is simple_byte
  8423   000D22  0A68               	xorlw	104	; case 104
  8424   000D24  B4D8               	btfsc	status,2,c
  8425   000D26  EF82  F006         	goto	l7572
  8426   000D2A  0A01               	xorlw	1	; case 105
  8427   000D2C  B4D8               	btfsc	status,2,c
  8428   000D2E  EF74  F006         	goto	l7570
  8429   000D32  EF9B  F006         	goto	l7578
  8430   000D36                     l7578:
  8431                           
  8432                           ; BSR set to: 0
  8433                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1406:    *fmt = cp+1;
  8434   000D36  0E01               	movlw	1
  8435   000D38  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8436   000D3A  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8437   000D3C  0E00               	movlw	0
  8438   000D3E  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8439   000D40  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8440   000D42  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8441   000D44  6ED9               	movwf	fsr2l,c
  8442   000D46  6ADA               	clrf	fsr2h,c
  8443   000D48  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8444   000D4C  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8445   000D50                     
  8446                           ; BSR set to: 0
  8447                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1432:    return (void) dtoa(fp, con
      +                          varg.sint);;	Return value of _vfpfcnvrt is never used
  8448   000D50  C0B9  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  8449   000D54  C0BA  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8450   000D58  C0C0  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  8451   000D5C  C0C1  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  8452   000D60  EC2A  F01E         	call	_dtoa	;wreg free
  8453   000D64  EF53  F008         	goto	l1560
  8454   000D68                     l7584:
  8455                           
  8456                           ; BSR set to: 0
  8457   000D68  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8458   000D6C  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8459   000D70                     	if	0	;tblptru may be non-zero
  8460   000D70                     	endif
  8461   000D70                     	if	0	;tblptru may be non-zero
  8462   000D70                     	endif
  8463   000D70  0008               	tblrd		*
  8464   000D72  50F5               	movf	tablat,w,c
  8465   000D74  0A75               	xorlw	117
  8466   000D76  A4D8               	btfss	status,2,c
  8467   000D78  EFC0  F006         	goto	u9191
  8468   000D7C  EFC2  F006         	goto	u9190
  8469   000D80                     u9191:
  8470   000D80  EF12  F007         	goto	l7604
  8471   000D84                     u9190:
  8472   000D84  EFE0  F006         	goto	l7592
  8473   000D88                     l7586:
  8474                           
  8475                           ; BSR set to: 0
  8476                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1456:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8477   000D88  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8478   000D8A  6ED9               	movwf	fsr2l,c
  8479   000D8C  6ADA               	clrf	fsr2h,c
  8480   000D8E  0E02               	movlw	2
  8481   000D90  26DF               	addwf	indf2,f,c
  8482   000D92  5CDF               	subwf	indf2,w,c
  8483   000D94  6ED9               	movwf	fsr2l,c
  8484   000D96  6ADA               	clrf	fsr2h,c
  8485   000D98  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8486   000D9C  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8487                           
  8488                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1457:      break;
  8489   000DA0  EFEB  F006         	goto	l7594
  8490   000DA4                     l7588:
  8491                           
  8492                           ; BSR set to: 0
  8493                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1460:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned short)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8494   000DA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8495   000DA6  6ED9               	movwf	fsr2l,c
  8496   000DA8  6ADA               	clrf	fsr2h,c
  8497   000DAA  0E02               	movlw	2
  8498   000DAC  26DF               	addwf	indf2,f,c
  8499   000DAE  5CDF               	subwf	indf2,w,c
  8500   000DB0  6ED9               	movwf	fsr2l,c
  8501   000DB2  6ADA               	clrf	fsr2h,c
  8502   000DB4  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8503   000DB8  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8504                           
  8505                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1461:      break;
  8506   000DBC  EFEB  F006         	goto	l7594
  8507   000DC0                     l7592:
  8508                           
  8509                           ; BSR set to: 0
  8510   000DC0  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8511                           
  8512                           ; Switch size 1, requested type "simple"
  8513                           ; Number of cases is 2, Range of values is 104 to 105
  8514                           ; switch strategies available:
  8515                           ; Name         Instructions Cycles
  8516                           ; simple_byte            7     4 (average)
  8517                           ;	Chosen strategy is simple_byte
  8518   000DC2  0A68               	xorlw	104	; case 104
  8519   000DC4  B4D8               	btfsc	status,2,c
  8520   000DC6  EFD2  F006         	goto	l7588
  8521   000DCA  0A01               	xorlw	1	; case 105
  8522   000DCC  B4D8               	btfsc	status,2,c
  8523   000DCE  EFC4  F006         	goto	l7586
  8524   000DD2  EFEB  F006         	goto	l7594
  8525   000DD6                     l7594:
  8526                           
  8527                           ; BSR set to: 0
  8528                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1497:    *fmt = cp+1;
  8529   000DD6  0E01               	movlw	1
  8530   000DD8  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8531   000DDA  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8532   000DDC  0E00               	movlw	0
  8533   000DDE  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8534   000DE0  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8535   000DE2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8536   000DE4  6ED9               	movwf	fsr2l,c
  8537   000DE6  6ADA               	clrf	fsr2h,c
  8538   000DE8  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8539   000DEC  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8540                           
  8541                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1498:    switch (*cp) {
  8542   000DF0  EF06  F007         	goto	l7602
  8543   000DF4                     l7596:
  8544                           
  8545                           ; BSR set to: 0
  8546                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1542:      return (void) utoa(fp, c
      +                          onvarg.uint);;	Return value of _vfpfcnvrt is never used
  8547   000DF4  C0B9  F020         	movff	vfpfcnvrt@fp,utoa@fp
  8548   000DF8  C0BA  F021         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  8549   000DFC  C0C0  F022         	movff	vfpfcnvrt@convarg,utoa@d
  8550   000E00  C0C1  F023         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  8551   000E04  EC05  F023         	call	_utoa	;wreg free
  8552   000E08  EF53  F008         	goto	l1560
  8553   000E0C                     l7602:
  8554                           
  8555                           ; BSR set to: 0
  8556   000E0C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8557   000E10  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8558   000E14                     	if	0	;tblptru may be non-zero
  8559   000E14                     	endif
  8560   000E14                     	if	0	;tblptru may be non-zero
  8561   000E14                     	endif
  8562   000E14  0008               	tblrd		*
  8563   000E16  50F5               	movf	tablat,w,c
  8564                           
  8565                           ; Switch size 1, requested type "simple"
  8566                           ; Number of cases is 1, Range of values is 117 to 117
  8567                           ; switch strategies available:
  8568                           ; Name         Instructions Cycles
  8569                           ; simple_byte            4     3 (average)
  8570                           ;	Chosen strategy is simple_byte
  8571   000E18  0A75               	xorlw	117	; case 117
  8572   000E1A  B4D8               	btfsc	status,2,c
  8573   000E1C  EFFA  F006         	goto	l7596
  8574   000E20  EF12  F007         	goto	l7604
  8575   000E24                     l7604:
  8576                           
  8577                           ; BSR set to: 0
  8578                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  8579   000E24  0E00               	movlw	0
  8580   000E26  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8581   000E28                     
  8582                           ; BSR set to: 0
  8583                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt)[0] == 's') {
  8584   000E28  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8585   000E2A  6ED9               	movwf	fsr2l,c
  8586   000E2C  6ADA               	clrf	fsr2h,c
  8587   000E2E  CFDE FFF6          	movff	postinc2,tblptrl
  8588   000E32  CFDD FFF7          	movff	postdec2,tblptrh
  8589   000E36                     	if	0	;tblptru may be non-zero
  8590   000E36                     	endif
  8591   000E36                     	if	0	;tblptru may be non-zero
  8592   000E36                     	endif
  8593   000E36  0008               	tblrd		*
  8594   000E38  50F5               	movf	tablat,w,c
  8595   000E3A  0A73               	xorlw	115
  8596   000E3C  A4D8               	btfss	status,2,c
  8597   000E3E  EF23  F007         	goto	u9201
  8598   000E42  EF25  F007         	goto	u9200
  8599   000E46                     u9201:
  8600   000E46  EF2F  F007         	goto	l7612
  8601   000E4A                     u9200:
  8602   000E4A                     
  8603                           ; BSR set to: 0
  8604                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  8605   000E4A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8606   000E4C  6ED9               	movwf	fsr2l,c
  8607   000E4E  6ADA               	clrf	fsr2h,c
  8608   000E50  2ADE               	incf	postinc2,f,c
  8609   000E52  0E00               	movlw	0
  8610   000E54  22DD               	addwfc	postdec2,f,c
  8611   000E56                     l7610:
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1659:    done = 1;
  8615   000E56  0E01               	movlw	1
  8616   000E58  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8617                           
  8618                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1660:   }
  8619   000E5A  EF7B  F007         	goto	l7622
  8620   000E5E                     l7612:
  8621                           
  8622                           ; BSR set to: 0
  8623   000E5E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8624   000E60  6ED9               	movwf	fsr2l,c
  8625   000E62  6ADA               	clrf	fsr2h,c
  8626   000E64  CFDE FFF6          	movff	postinc2,tblptrl
  8627   000E68  CFDD FFF7          	movff	postdec2,tblptrh
  8628   000E6C                     	if	0	;tblptru may be non-zero
  8629   000E6C                     	endif
  8630   000E6C                     	if	0	;tblptru may be non-zero
  8631   000E6C                     	endif
  8632   000E6C  0008               	tblrd		*
  8633   000E6E  50F5               	movf	tablat,w,c
  8634   000E70  0A6C               	xorlw	108
  8635   000E72  A4D8               	btfss	status,2,c
  8636   000E74  EF3E  F007         	goto	u9211
  8637   000E78  EF40  F007         	goto	u9210
  8638   000E7C                     u9211:
  8639   000E7C  EF7B  F007         	goto	l7622
  8640   000E80                     u9210:
  8641   000E80                     
  8642                           ; BSR set to: 0
  8643   000E80  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8644   000E82  6ED9               	movwf	fsr2l,c
  8645   000E84  6ADA               	clrf	fsr2h,c
  8646   000E86  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8647   000E8A  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8648   000E8E  0E01               	movlw	1
  8649   000E90  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8650   000E92  0E00               	movlw	0
  8651   000E94  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8652   000E96  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8653   000E9A  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8654   000E9E                     	if	0	;tblptru may be non-zero
  8655   000E9E                     	endif
  8656   000E9E                     	if	0	;tblptru may be non-zero
  8657   000E9E                     	endif
  8658   000E9E  0008               	tblrd		*
  8659   000EA0  50F5               	movf	tablat,w,c
  8660   000EA2  0A6C               	xorlw	108
  8661   000EA4  A4D8               	btfss	status,2,c
  8662   000EA6  EF57  F007         	goto	u9221
  8663   000EAA  EF59  F007         	goto	u9220
  8664   000EAE                     u9221:
  8665   000EAE  EF7B  F007         	goto	l7622
  8666   000EB2                     u9220:
  8667   000EB2                     
  8668                           ; BSR set to: 0
  8669   000EB2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8670   000EB4  6ED9               	movwf	fsr2l,c
  8671   000EB6  6ADA               	clrf	fsr2h,c
  8672   000EB8  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8673   000EBC  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8674   000EC0  0E02               	movlw	2
  8675   000EC2  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8676   000EC4  0E00               	movlw	0
  8677   000EC6  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8678   000EC8  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8679   000ECC  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8680   000ED0                     	if	0	;tblptru may be non-zero
  8681   000ED0                     	endif
  8682   000ED0                     	if	0	;tblptru may be non-zero
  8683   000ED0                     	endif
  8684   000ED0  0008               	tblrd		*
  8685   000ED2  50F5               	movf	tablat,w,c
  8686   000ED4  0A73               	xorlw	115
  8687   000ED6  A4D8               	btfss	status,2,c
  8688   000ED8  EF70  F007         	goto	u9231
  8689   000EDC  EF72  F007         	goto	u9230
  8690   000EE0                     u9231:
  8691   000EE0  EF7B  F007         	goto	l7622
  8692   000EE4                     u9230:
  8693   000EE4                     
  8694                           ; BSR set to: 0
  8695                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 3;
  8696   000EE4  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8697   000EE6  6ED9               	movwf	fsr2l,c
  8698   000EE8  6ADA               	clrf	fsr2h,c
  8699   000EEA  0E03               	movlw	3
  8700   000EEC  26DE               	addwf	postinc2,f,c
  8701   000EEE  0E00               	movlw	0
  8702   000EF0  22DD               	addwfc	postdec2,f,c
  8703   000EF2  EF2B  F007         	goto	l7610
  8704   000EF6                     l7622:
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1665:   if (done) {
  8708   000EF6  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  8709   000EF8  B4D8               	btfsc	status,2,c
  8710   000EFA  EF81  F007         	goto	u9241
  8711   000EFE  EF83  F007         	goto	u9240
  8712   000F02                     u9241:
  8713   000F02  EF97  F007         	goto	l7628
  8714   000F06                     u9240:
  8715   000F06                     
  8716                           ; BSR set to: 0
  8717                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1682:    return (void) stoa(fp, (*(
      +                          char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpfcnvrt is never use
      +                          d
  8718   000F06  C0B9  F010         	movff	vfpfcnvrt@fp,stoa@fp
  8719   000F0A  C0BA  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8720   000F0E  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8721   000F10  6ED9               	movwf	fsr2l,c
  8722   000F12  6ADA               	clrf	fsr2h,c
  8723   000F14  0E02               	movlw	2
  8724   000F16  26DF               	addwf	indf2,f,c
  8725   000F18  5CDF               	subwf	indf2,w,c
  8726   000F1A  6ED9               	movwf	fsr2l,c
  8727   000F1C  6ADA               	clrf	fsr2h,c
  8728   000F1E  CFDE F012          	movff	postinc2,stoa@s
  8729   000F22  CFDE F013          	movff	postinc2,stoa@s+1
  8730   000F26  EC5B  F01D         	call	_stoa	;wreg free
  8731   000F2A  EF53  F008         	goto	l1560
  8732   000F2E                     l7628:
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt;
  8736   000F2E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8737   000F30  6ED9               	movwf	fsr2l,c
  8738   000F32  6ADA               	clrf	fsr2h,c
  8739   000F34  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  8740   000F38  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  8741   000F3C                     
  8742                           ; BSR set to: 0
  8743                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  8744   000F3C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8745   000F40  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8746   000F44                     	if	0	;tblptru may be non-zero
  8747   000F44                     	endif
  8748   000F44                     	if	0	;tblptru may be non-zero
  8749   000F44                     	endif
  8750   000F44  0008               	tblrd		*
  8751   000F46  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  8752                           
  8753                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1691:   switch(c) {
  8754   000F4A  EFB3  F007         	goto	l7640
  8755   000F4E                     l7632:
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  8759   000F4E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  8760   000F50  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  8761                           
  8762                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1696:     break;
  8763   000F52  EFC2  F007         	goto	l7642
  8764   000F56                     l7634:
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1721:     c = 'l';
  8768   000F56  0E6C               	movlw	108
  8769   000F58  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8770                           
  8771                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1722:     break;
  8772   000F5A  EFC2  F007         	goto	l7642
  8773   000F5E                     l7636:
  8774                           
  8775                           ; BSR set to: 0
  8776                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  8777   000F5E  0E00               	movlw	0
  8778   000F60  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8779                           
  8780                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1725:     break;
  8781   000F62  EFC2  F007         	goto	l7642
  8782   000F66                     l7640:
  8783                           
  8784                           ; BSR set to: 0
  8785   000F66  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8786                           
  8787                           ; Switch size 1, requested type "simple"
  8788                           ; Number of cases is 3, Range of values is 76 to 108
  8789                           ; switch strategies available:
  8790                           ; Name         Instructions Cycles
  8791                           ; simple_byte           10     6 (average)
  8792                           ;	Chosen strategy is simple_byte
  8793   000F68  0A4C               	xorlw	76	; case 76
  8794   000F6A  B4D8               	btfsc	status,2,c
  8795   000F6C  EFA7  F007         	goto	l7632
  8796   000F70  0A2A               	xorlw	42	; case 102
  8797   000F72  B4D8               	btfsc	status,2,c
  8798   000F74  EFAB  F007         	goto	l7634
  8799   000F78  0A0A               	xorlw	10	; case 108
  8800   000F7A  B4D8               	btfsc	status,2,c
  8801   000F7C  EFA7  F007         	goto	l7632
  8802   000F80  EFAF  F007         	goto	l7636
  8803   000F84                     l7642:
  8804                           
  8805                           ; BSR set to: 0
  8806   000F84  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8807   000F88  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8808   000F8C                     	if	0	;tblptru may be non-zero
  8809   000F8C                     	endif
  8810   000F8C                     	if	0	;tblptru may be non-zero
  8811   000F8C                     	endif
  8812   000F8C  0008               	tblrd		*
  8813   000F8E  50F5               	movf	tablat,w,c
  8814   000F90  0A66               	xorlw	102
  8815   000F92  A4D8               	btfss	status,2,c
  8816   000F94  EFCE  F007         	goto	u9251
  8817   000F98  EFD0  F007         	goto	u9250
  8818   000F9C                     u9251:
  8819   000F9C  EF37  F008         	goto	l7662
  8820   000FA0                     u9250:
  8821   000FA0  EFFA  F007         	goto	l7650
  8822   000FA4                     l7644:
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1756:      convarg.f = (long double
      +                          )(*(double *)__va_arg(*(double **)ap, (double)0));
  8826   000FA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8827   000FA6  6ED9               	movwf	fsr2l,c
  8828   000FA8  6ADA               	clrf	fsr2h,c
  8829   000FAA  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8830   000FAE  0E04               	movlw	4
  8831   000FB0  26DF               	addwf	indf2,f,c
  8832   000FB2  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8833   000FB4  6ED9               	movwf	fsr2l,c
  8834   000FB6  6ADA               	clrf	fsr2h,c
  8835   000FB8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8836   000FBC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8837   000FC0  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8838   000FC4  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8839                           
  8840                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1757:      break;
  8841   000FC8  EF05  F008         	goto	l7652
  8842   000FCC                     l7646:
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1759:      convarg.f = (long double
      +                          )(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  8846   000FCC  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8847   000FCE  6ED9               	movwf	fsr2l,c
  8848   000FD0  6ADA               	clrf	fsr2h,c
  8849   000FD2  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8850   000FD6  0E04               	movlw	4
  8851   000FD8  26DF               	addwf	indf2,f,c
  8852   000FDA  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8853   000FDC  6ED9               	movwf	fsr2l,c
  8854   000FDE  6ADA               	clrf	fsr2h,c
  8855   000FE0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8856   000FE4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8857   000FE8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8858   000FEC  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8859                           
  8860                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1760:      break;
  8861   000FF0  EF05  F008         	goto	l7652
  8862   000FF4                     l7650:
  8863                           
  8864                           ; BSR set to: 0
  8865   000FF4  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8866                           
  8867                           ; Switch size 1, requested type "simple"
  8868                           ; Number of cases is 2, Range of values is 76 to 108
  8869                           ; switch strategies available:
  8870                           ; Name         Instructions Cycles
  8871                           ; simple_byte            7     4 (average)
  8872                           ;	Chosen strategy is simple_byte
  8873   000FF6  0A4C               	xorlw	76	; case 76
  8874   000FF8  B4D8               	btfsc	status,2,c
  8875   000FFA  EFE6  F007         	goto	l7646
  8876   000FFE  0A20               	xorlw	32	; case 108
  8877   001000  B4D8               	btfsc	status,2,c
  8878   001002  EFD2  F007         	goto	l7644
  8879   001006  EF05  F008         	goto	l7652
  8880   00100A                     l7652:
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1762:    *fmt = cp+1;
  8884   00100A  0E01               	movlw	1
  8885   00100C  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8886   00100E  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8887   001010  0E00               	movlw	0
  8888   001012  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8889   001014  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8890   001016  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8891   001018  6ED9               	movwf	fsr2l,c
  8892   00101A  6ADA               	clrf	fsr2h,c
  8893   00101C  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8894   001020  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8895                           
  8896                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1763:    switch (*cp) {
  8897   001024  EF2B  F008         	goto	l7660
  8898   001028                     l7654:
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1790:      return (void) efgtoa(fp,
      +                           convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  8902   001028  C0B9  F084         	movff	vfpfcnvrt@fp,efgtoa@fp
  8903   00102C  C0BA  F085         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  8904   001030  C0C0  F086         	movff	vfpfcnvrt@convarg,efgtoa@f
  8905   001034  C0C1  F087         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  8906   001038  C0C2  F088         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  8907   00103C  C0C3  F089         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  8908   001040  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8909   001044  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8910   001048                     	if	0	;tblptru may be non-zero
  8911   001048                     	endif
  8912   001048                     	if	0	;tblptru may be non-zero
  8913   001048                     	endif
  8914   001048  0008               	tblrd		*
  8915   00104A  CFF5 F08A          	movff	tablat,efgtoa@c
  8916   00104E  ECA9  F000         	call	_efgtoa	;wreg free
  8917   001052  EF53  F008         	goto	l1560
  8918   001056                     l7660:
  8919                           
  8920                           ; BSR set to: 0
  8921   001056  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8922   00105A  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8923   00105E                     	if	0	;tblptru may be non-zero
  8924   00105E                     	endif
  8925   00105E                     	if	0	;tblptru may be non-zero
  8926   00105E                     	endif
  8927   00105E  0008               	tblrd		*
  8928   001060  50F5               	movf	tablat,w,c
  8929                           
  8930                           ; Switch size 1, requested type "simple"
  8931                           ; Number of cases is 1, Range of values is 102 to 102
  8932                           ; switch strategies available:
  8933                           ; Name         Instructions Cycles
  8934                           ; simple_byte            4     3 (average)
  8935                           ;	Chosen strategy is simple_byte
  8936   001062  0A66               	xorlw	102	; case 102
  8937   001064  B4D8               	btfsc	status,2,c
  8938   001066  EF14  F008         	goto	l7654
  8939   00106A  EF37  F008         	goto	l7662
  8940   00106E                     l7662:
  8941                           
  8942                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  8943   00106E  0100               	movlb	0	; () banked
  8944   001070  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8945   001072  6ED9               	movwf	fsr2l,c
  8946   001074  6ADA               	clrf	fsr2h,c
  8947   001076  2ADE               	incf	postinc2,f,c
  8948   001078  0E00               	movlw	0
  8949   00107A  22DD               	addwfc	postdec2,f,c
  8950   00107C  EF53  F008         	goto	l1560
  8951   001080                     l7666:
  8952                           
  8953                           ; BSR set to: 0
  8954                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*fmt)[0], fp)
      +                          ;
  8955   001080  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8956   001082  6ED9               	movwf	fsr2l,c
  8957   001084  6ADA               	clrf	fsr2h,c
  8958   001086  CFDE FFF6          	movff	postinc2,tblptrl
  8959   00108A  CFDD FFF7          	movff	postdec2,tblptrh
  8960   00108E                     	if	0	;tblptru may be non-zero
  8961   00108E                     	endif
  8962   00108E                     	if	0	;tblptru may be non-zero
  8963   00108E                     	endif
  8964   00108E  0008               	tblrd		*
  8965   001090  50F5               	movf	tablat,w,c
  8966   001092  6E07               	movwf	fputc@c^0,c
  8967   001094  6A08               	clrf	(fputc@c+1)^0,c
  8968   001096  C0B9  F009         	movff	vfpfcnvrt@fp,fputc@fp
  8969   00109A  C0BA  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8970   00109E  ECEA  F023         	call	_fputc	;wreg free
  8971   0010A2  EF37  F008         	goto	l7662
  8972   0010A6                     l1560:
  8973   0010A6  0012               	return		;funcret
  8974   0010A8                     __end_of_vfpfcnvrt:
  8975                           	callstack 0
  8976                           
  8977 ;; *************** function _utoa *****************
  8978 ;; Defined at:
  8979 ;;		line 1001 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  8982 ;;		 -> NULL(0), sprintf@f(12), 
  8983 ;;  d               2   33[COMRAM] unsigned int 
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;  i               2   39[COMRAM] int 
  8986 ;;  p               2   37[COMRAM] int 
  8987 ;;  w               2   35[COMRAM] int 
  8988 ;; Return value:  Size  Location     Type
  8989 ;;                  1    wreg      void 
  8990 ;; Registers used:
  8991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8992 ;; Tracked objects:
  8993 ;;		On entry : 0/0
  8994 ;;		On exit  : 0/0
  8995 ;;		Unchanged: 0/0
  8996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8998 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9000 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9001 ;;Total ram usage:       10 bytes
  9002 ;; Hardware stack levels used: 1
  9003 ;; Hardware stack levels required when called: 5
  9004 ;; This function calls:
  9005 ;;		___lwdiv
  9006 ;;		___lwmod
  9007 ;;		_pad
  9008 ;; This function is called by:
  9009 ;;		_vfpfcnvrt
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013                           	psect	text30
  9014   00460A                     __ptext30:
  9015                           	callstack 0
  9016   00460A                     _utoa:
  9017                           	callstack 21
  9018   00460A                     
  9019                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1001: static void utoa(FILE *fp, vf
      +                          pf_uint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1002: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 1003:     int i, w;;D:\MPLABX\Compiler\pic\sources\
      +                          c99\common\doprnt.c: 1005:  int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1
      +                          017:     p = (0 <= prec) ? prec : 1;
  9020   00460A  BE58               	btfsc	(_prec+1)^0,7,c
  9021   00460C  EF0C  F023         	goto	u8970
  9022   004610  EF0A  F023         	goto	u8971
  9023   004614                     u8971:
  9024   004614  EF12  F023         	goto	l1517
  9025   004618                     u8970:
  9026   004618  0E00               	movlw	0
  9027   00461A  6E27               	movwf	(utoa@p+1)^0,c
  9028   00461C  0E01               	movlw	1
  9029   00461E  6E26               	movwf	utoa@p^0,c
  9030   004620  EF16  F023         	goto	l1519
  9031   004624                     l1517:
  9032   004624  C057  F026         	movff	_prec,utoa@p
  9033   004628  C058  F027         	movff	_prec+1,utoa@p+1
  9034   00462C                     l1519:
  9035                           
  9036                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1019:     w = width;
  9037   00462C  C055  F024         	movff	_width,utoa@w
  9038   004630  C056  F025         	movff	_width+1,utoa@w+1
  9039   004634                     
  9040                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1022:     i = sizeof(dbuf) - 1;
  9041   004634  0E00               	movlw	0
  9042   004636  6E29               	movwf	(utoa@i+1)^0,c
  9043   004638  0E4F               	movlw	79
  9044   00463A  6E28               	movwf	utoa@i^0,c
  9045   00463C                     
  9046                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i] = '\0';
  9047   00463C  0E00               	movlw	0
  9048   00463E  0101               	movlb	1	; () banked
  9049   004640  6F76               	movwf	(_dbuf+79)& (0+255),b
  9050                           
  9051                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  9052   004642  EF4D  F023         	goto	l7448
  9053   004646                     l7438:
  9054                           
  9055                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1033:     )) {;D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 1034:         --i;
  9056   004646  0628               	decf	utoa@i^0,f,c
  9057   004648  A0D8               	btfss	status,0,c
  9058   00464A  0629               	decf	(utoa@i+1)^0,f,c
  9059   00464C                     
  9060                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1035:         dbuf[i] = '0' + (d % 
      +                          10);
  9061   00464C  0E27               	movlw	low _dbuf
  9062   00464E  2428               	addwf	utoa@i^0,w,c
  9063   004650  6ED9               	movwf	fsr2l,c
  9064   004652  0E01               	movlw	high _dbuf
  9065   004654  2029               	addwfc	(utoa@i+1)^0,w,c
  9066   004656  6EDA               	movwf	fsr2h,c
  9067   004658  C022  F006         	movff	utoa@d,___lwmod@dividend
  9068   00465C  C023  F007         	movff	utoa@d+1,___lwmod@dividend+1
  9069   004660  0E00               	movlw	0
  9070   004662  6E09               	movwf	(___lwmod@divisor+1)^0,c
  9071   004664  0E0A               	movlw	10
  9072   004666  6E08               	movwf	___lwmod@divisor^0,c
  9073   004668  EC03  F027         	call	___lwmod	;wreg free
  9074   00466C  5006               	movf	?___lwmod^0,w,c
  9075   00466E  0F30               	addlw	48
  9076   004670  6EDF               	movwf	indf2,c
  9077   004672                     
  9078                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1037:         --p;
  9079   004672  0626               	decf	utoa@p^0,f,c
  9080   004674  A0D8               	btfss	status,0,c
  9081   004676  0627               	decf	(utoa@p+1)^0,f,c
  9082   004678                     
  9083                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1041:         --w;
  9084   004678  0624               	decf	utoa@w^0,f,c
  9085   00467A  A0D8               	btfss	status,0,c
  9086   00467C  0625               	decf	(utoa@w+1)^0,f,c
  9087   00467E                     
  9088                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1042:         d = d / 10;
  9089   00467E  C022  F006         	movff	utoa@d,___lwdiv@dividend
  9090   004682  C023  F007         	movff	utoa@d+1,___lwdiv@dividend+1
  9091   004686  0E00               	movlw	0
  9092   004688  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  9093   00468A  0E0A               	movlw	10
  9094   00468C  6E08               	movwf	___lwdiv@divisor^0,c
  9095   00468E  EC5D  F026         	call	___lwdiv	;wreg free
  9096   004692  C006  F022         	movff	?___lwdiv,utoa@d
  9097   004696  C007  F023         	movff	?___lwdiv+1,utoa@d+1
  9098   00469A                     l7448:
  9099                           
  9100                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  9101   00469A  5028               	movf	utoa@i^0,w,c
  9102   00469C  1029               	iorwf	(utoa@i+1)^0,w,c
  9103   00469E  B4D8               	btfsc	status,2,c
  9104   0046A0  EF54  F023         	goto	u8981
  9105   0046A4  EF56  F023         	goto	u8980
  9106   0046A8                     u8981:
  9107   0046A8  EF6C  F023         	goto	l7454
  9108   0046AC                     u8980:
  9109   0046AC  5022               	movf	utoa@d^0,w,c
  9110   0046AE  1023               	iorwf	(utoa@d+1)^0,w,c
  9111   0046B0  A4D8               	btfss	status,2,c
  9112   0046B2  EF5D  F023         	goto	u8991
  9113   0046B6  EF5F  F023         	goto	u8990
  9114   0046BA                     u8991:
  9115   0046BA  EF23  F023         	goto	l7438
  9116   0046BE                     u8990:
  9117   0046BE  BE27               	btfsc	(utoa@p+1)^0,7,c
  9118   0046C0  EF6C  F023         	goto	u9000
  9119   0046C4  5027               	movf	(utoa@p+1)^0,w,c
  9120   0046C6  E106               	bnz	u9001
  9121   0046C8  0426               	decf	utoa@p^0,w,c
  9122   0046CA  B0D8               	btfsc	status,0,c
  9123   0046CC  EF6A  F023         	goto	u9001
  9124   0046D0  EF6C  F023         	goto	u9000
  9125   0046D4                     u9001:
  9126   0046D4  EF23  F023         	goto	l7438
  9127   0046D8                     u9000:
  9128   0046D8                     l7454:
  9129                           
  9130                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1046:     return (void) pad(fp, &db
      +                          uf[i], w);
  9131   0046D8  C020  F017         	movff	utoa@fp,pad@fp
  9132   0046DC  C021  F018         	movff	utoa@fp+1,pad@fp+1
  9133   0046E0  0E27               	movlw	low _dbuf
  9134   0046E2  2428               	addwf	utoa@i^0,w,c
  9135   0046E4  6E19               	movwf	pad@buf^0,c
  9136   0046E6  0E01               	movlw	high _dbuf
  9137   0046E8  2029               	addwfc	(utoa@i+1)^0,w,c
  9138   0046EA  6E1A               	movwf	(pad@buf+1)^0,c
  9139   0046EC  C024  F01B         	movff	utoa@w,pad@p
  9140   0046F0  C025  F01C         	movff	utoa@w+1,pad@p+1
  9141   0046F4  EC0E  F026         	call	_pad	;wreg free
  9142   0046F8  0012               	return		;funcret
  9143   0046FA                     __end_of_utoa:
  9144                           	callstack 0
  9145                           
  9146 ;; *************** function ___lwmod *****************
  9147 ;; Defined at:
  9148 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwmod.c"
  9149 ;; Parameters:    Size  Location     Type
  9150 ;;  dividend        2    5[COMRAM] unsigned int 
  9151 ;;  divisor         2    7[COMRAM] unsigned int 
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;  counter         1    9[COMRAM] unsigned char 
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  2    5[COMRAM] unsigned int 
  9156 ;; Registers used:
  9157 ;;		wreg, status,2, status,0
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9163 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9166 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9167 ;;Total ram usage:        5 bytes
  9168 ;; Hardware stack levels used: 1
  9169 ;; Hardware stack levels required when called: 1
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_utoa
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           	psect	text31
  9178   004E06                     __ptext31:
  9179                           	callstack 0
  9180   004E06                     ___lwmod:
  9181                           	callstack 24
  9182   004E06  5008               	movf	___lwmod@divisor^0,w,c
  9183   004E08  1009               	iorwf	(___lwmod@divisor+1)^0,w,c
  9184   004E0A  B4D8               	btfsc	status,2,c
  9185   004E0C  EF0A  F027         	goto	u8171
  9186   004E10  EF0C  F027         	goto	u8170
  9187   004E14                     u8171:
  9188   004E14  EF30  F027         	goto	l1211
  9189   004E18                     u8170:
  9190   004E18  0E01               	movlw	1
  9191   004E1A  6E0A               	movwf	___lwmod@counter^0,c
  9192   004E1C  EF14  F027         	goto	l7022
  9193   004E20                     l7020:
  9194   004E20  90D8               	bcf	status,0,c
  9195   004E22  3608               	rlcf	___lwmod@divisor^0,f,c
  9196   004E24  3609               	rlcf	(___lwmod@divisor+1)^0,f,c
  9197   004E26  2A0A               	incf	___lwmod@counter^0,f,c
  9198   004E28                     l7022:
  9199   004E28  AE09               	btfss	(___lwmod@divisor+1)^0,7,c
  9200   004E2A  EF19  F027         	goto	u8181
  9201   004E2E  EF1B  F027         	goto	u8180
  9202   004E32                     u8181:
  9203   004E32  EF10  F027         	goto	l7020
  9204   004E36                     u8180:
  9205   004E36                     l7024:
  9206   004E36  5008               	movf	___lwmod@divisor^0,w,c
  9207   004E38  5C06               	subwf	___lwmod@dividend^0,w,c
  9208   004E3A  5009               	movf	(___lwmod@divisor+1)^0,w,c
  9209   004E3C  5807               	subwfb	(___lwmod@dividend+1)^0,w,c
  9210   004E3E  A0D8               	btfss	status,0,c
  9211   004E40  EF24  F027         	goto	u8191
  9212   004E44  EF26  F027         	goto	u8190
  9213   004E48                     u8191:
  9214   004E48  EF2A  F027         	goto	l7028
  9215   004E4C                     u8190:
  9216   004E4C  5008               	movf	___lwmod@divisor^0,w,c
  9217   004E4E  5E06               	subwf	___lwmod@dividend^0,f,c
  9218   004E50  5009               	movf	(___lwmod@divisor+1)^0,w,c
  9219   004E52  5A07               	subwfb	(___lwmod@dividend+1)^0,f,c
  9220   004E54                     l7028:
  9221   004E54  90D8               	bcf	status,0,c
  9222   004E56  3209               	rrcf	(___lwmod@divisor+1)^0,f,c
  9223   004E58  3208               	rrcf	___lwmod@divisor^0,f,c
  9224   004E5A  2E0A               	decfsz	___lwmod@counter^0,f,c
  9225   004E5C  EF1B  F027         	goto	l7024
  9226   004E60                     l1211:
  9227   004E60  C006  F006         	movff	___lwmod@dividend,?___lwmod
  9228   004E64  C007  F007         	movff	___lwmod@dividend+1,?___lwmod+1
  9229   004E68  0012               	return		;funcret
  9230   004E6A                     __end_of___lwmod:
  9231                           	callstack 0
  9232                           
  9233 ;; *************** function ___lwdiv *****************
  9234 ;; Defined at:
  9235 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwdiv.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;  dividend        2    5[COMRAM] unsigned int 
  9238 ;;  divisor         2    7[COMRAM] unsigned int 
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;  quotient        2   10[COMRAM] unsigned int 
  9241 ;;  counter         1    9[COMRAM] unsigned char 
  9242 ;; Return value:  Size  Location     Type
  9243 ;;                  2    5[COMRAM] unsigned int 
  9244 ;; Registers used:
  9245 ;;		wreg, status,2, status,0
  9246 ;; Tracked objects:
  9247 ;;		On entry : 0/0
  9248 ;;		On exit  : 0/0
  9249 ;;		Unchanged: 0/0
  9250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9251 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9252 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9254 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9255 ;;Total ram usage:        7 bytes
  9256 ;; Hardware stack levels used: 1
  9257 ;; Hardware stack levels required when called: 1
  9258 ;; This function calls:
  9259 ;;		Nothing
  9260 ;; This function is called by:
  9261 ;;		_utoa
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           	psect	text32
  9266   004CBA                     __ptext32:
  9267                           	callstack 0
  9268   004CBA                     ___lwdiv:
  9269                           	callstack 24
  9270   004CBA  0E00               	movlw	0
  9271   004CBC  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9272   004CBE  0E00               	movlw	0
  9273   004CC0  6E0B               	movwf	___lwdiv@quotient^0,c
  9274   004CC2  5008               	movf	___lwdiv@divisor^0,w,c
  9275   004CC4  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9276   004CC6  B4D8               	btfsc	status,2,c
  9277   004CC8  EF68  F026         	goto	u8141
  9278   004CCC  EF6A  F026         	goto	u8140
  9279   004CD0                     u8141:
  9280   004CD0  EF92  F026         	goto	l1201
  9281   004CD4                     u8140:
  9282   004CD4  0E01               	movlw	1
  9283   004CD6  6E0A               	movwf	___lwdiv@counter^0,c
  9284   004CD8  EF72  F026         	goto	l7002
  9285   004CDC                     l7000:
  9286   004CDC  90D8               	bcf	status,0,c
  9287   004CDE  3608               	rlcf	___lwdiv@divisor^0,f,c
  9288   004CE0  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9289   004CE2  2A0A               	incf	___lwdiv@counter^0,f,c
  9290   004CE4                     l7002:
  9291   004CE4  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  9292   004CE6  EF77  F026         	goto	u8151
  9293   004CEA  EF79  F026         	goto	u8150
  9294   004CEE                     u8151:
  9295   004CEE  EF6E  F026         	goto	l7000
  9296   004CF2                     u8150:
  9297   004CF2                     l7004:
  9298   004CF2  90D8               	bcf	status,0,c
  9299   004CF4  360B               	rlcf	___lwdiv@quotient^0,f,c
  9300   004CF6  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9301   004CF8  5008               	movf	___lwdiv@divisor^0,w,c
  9302   004CFA  5C06               	subwf	___lwdiv@dividend^0,w,c
  9303   004CFC  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9304   004CFE  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9305   004D00  A0D8               	btfss	status,0,c
  9306   004D02  EF85  F026         	goto	u8161
  9307   004D06  EF87  F026         	goto	u8160
  9308   004D0A                     u8161:
  9309   004D0A  EF8C  F026         	goto	l7012
  9310   004D0E                     u8160:
  9311   004D0E  5008               	movf	___lwdiv@divisor^0,w,c
  9312   004D10  5E06               	subwf	___lwdiv@dividend^0,f,c
  9313   004D12  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9314   004D14  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9315   004D16  800B               	bsf	___lwdiv@quotient^0,0,c
  9316   004D18                     l7012:
  9317   004D18  90D8               	bcf	status,0,c
  9318   004D1A  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9319   004D1C  3208               	rrcf	___lwdiv@divisor^0,f,c
  9320   004D1E  2E0A               	decfsz	___lwdiv@counter^0,f,c
  9321   004D20  EF79  F026         	goto	l7004
  9322   004D24                     l1201:
  9323   004D24  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  9324   004D28  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9325   004D2C  0012               	return		;funcret
  9326   004D2E                     __end_of___lwdiv:
  9327                           	callstack 0
  9328                           
  9329 ;; *************** function _stoa *****************
  9330 ;; Defined at:
  9331 ;;		line 942 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  9334 ;;		 -> NULL(0), sprintf@f(12), 
  9335 ;;  s               2   17[COMRAM] PTR unsigned char 
  9336 ;;		 -> ?_printf(2), ?_sprintf(2), runUART@reversed(31), STR_31(1), 
  9337 ;;		 -> STR_30(6), STR_29(5), STR_28(4), STR_27(4), 
  9338 ;;		 -> STR_26(4), STR_25(5), STR_24(5), 
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;  l               2   27[COMRAM] int 
  9341 ;;  cp              2   25[COMRAM] PTR unsigned char 
  9342 ;;		 -> ?_printf(2), STR_47(7), ?_sprintf(2), runUART@reversed(31), 
  9343 ;;		 -> STR_31(1), STR_30(6), STR_29(5), STR_28(4), 
  9344 ;;		 -> STR_27(4), STR_26(4), STR_25(5), STR_24(5), 
  9345 ;;  w               2   23[COMRAM] int 
  9346 ;;  p               2   21[COMRAM] int 
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      void 
  9349 ;; Registers used:
  9350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9357 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9359 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9360 ;;Total ram usage:       14 bytes
  9361 ;; Hardware stack levels used: 1
  9362 ;; Hardware stack levels required when called: 3
  9363 ;; This function calls:
  9364 ;;		_fputc
  9365 ;; This function is called by:
  9366 ;;		_vfpfcnvrt
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           	psect	text33
  9371   003AB6                     __ptext33:
  9372                           	callstack 0
  9373   003AB6                     _stoa:
  9374                           	callstack 23
  9375   003AB6                     
  9376                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 942: static void stoa(FILE *fp, cha
      +                          r *s);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 943: {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 944:     char *cp;;D:\MPLABX\Compiler\pic\sources\c99\commo
      +                          n\doprnt.c: 945:     int l, p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 947: 
      +                           int w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 951:     cp = s;
  9377   003AB6  C012  F01A         	movff	stoa@s,stoa@cp
  9378   003ABA  C013  F01B         	movff	stoa@s+1,stoa@cp+1
  9379                           
  9380                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 952:     if (!cp) {
  9381   003ABE  501A               	movf	stoa@cp^0,w,c
  9382   003AC0  101B               	iorwf	(stoa@cp+1)^0,w,c
  9383   003AC2  A4D8               	btfss	status,2,c
  9384   003AC4  EF66  F01D         	goto	u8861
  9385   003AC8  EF68  F01D         	goto	u8860
  9386   003ACC                     u8861:
  9387   003ACC  EF6C  F01D         	goto	l7396
  9388   003AD0                     u8860:
  9389   003AD0                     
  9390                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 953:         cp = "(null)";
  9391   003AD0  0EBF               	movlw	low STR_47
  9392   003AD2  6E1A               	movwf	stoa@cp^0,c
  9393   003AD4  0EFF               	movlw	high STR_47
  9394   003AD6  6E1B               	movwf	(stoa@cp+1)^0,c
  9395   003AD8                     l7396:
  9396                           
  9397                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 957:  for (l = 0; cp[l] != '\0'; l+
      +                          +) {
  9398   003AD8  0E00               	movlw	0
  9399   003ADA  6E1D               	movwf	(stoa@l+1)^0,c
  9400   003ADC  0E00               	movlw	0
  9401   003ADE  6E1C               	movwf	stoa@l^0,c
  9402   003AE0  EF74  F01D         	goto	l7400
  9403   003AE4                     l7398:
  9404   003AE4  4A1C               	infsnz	stoa@l^0,f,c
  9405   003AE6  2A1D               	incf	(stoa@l+1)^0,f,c
  9406   003AE8                     l7400:
  9407   003AE8  501C               	movf	stoa@l^0,w,c
  9408   003AEA  241A               	addwf	stoa@cp^0,w,c
  9409   003AEC  6E14               	movwf	??_stoa^0,c
  9410   003AEE  501D               	movf	(stoa@l+1)^0,w,c
  9411   003AF0  201B               	addwfc	(stoa@cp+1)^0,w,c
  9412   003AF2  6E15               	movwf	(??_stoa+1)^0,c
  9413   003AF4  C014  FFF6         	movff	??_stoa,tblptrl
  9414   003AF8  C015  FFF7         	movff	??_stoa+1,tblptrh
  9415   003AFC  0E00               	movlw	low (__mediumconst shr (0+16))
  9416   003AFE  6EF8               	movwf	tblptru,c
  9417   003B00  0E0F               	movlw	(high __ramtop+-1)
  9418   003B02  64F7               	cpfsgt	tblptrh,c
  9419   003B04  D003               	bra	u8877
  9420   003B06  0008               	tblrd		*
  9421   003B08  50F5               	movf	tablat,w,c
  9422   003B0A  D005               	bra	u8870
  9423   003B0C                     u8877:
  9424   003B0C  CFF6 FFE1          	movff	tblptrl,fsr1l
  9425   003B10  CFF7 FFE2          	movff	tblptrh,fsr1h
  9426   003B14  50E7               	movf	indf1,w,c
  9427   003B16                     u8870:
  9428   003B16  0900               	iorlw	0
  9429   003B18  A4D8               	btfss	status,2,c
  9430   003B1A  EF91  F01D         	goto	u8881
  9431   003B1E  EF93  F01D         	goto	u8880
  9432   003B22                     u8881:
  9433   003B22  EF72  F01D         	goto	l7398
  9434   003B26                     u8880:
  9435   003B26                     
  9436                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 961:  if (!(prec < 0) && (prec < l)
      +                          ) {
  9437   003B26  BE58               	btfsc	(_prec+1)^0,7,c
  9438   003B28  EF98  F01D         	goto	u8891
  9439   003B2C  EF9A  F01D         	goto	u8890
  9440   003B30                     u8891:
  9441   003B30  EFAD  F01D         	goto	l1501
  9442   003B34                     u8890:
  9443   003B34  501C               	movf	stoa@l^0,w,c
  9444   003B36  5C57               	subwf	_prec^0,w,c
  9445   003B38  5058               	movf	(_prec+1)^0,w,c
  9446   003B3A  0A80               	xorlw	128
  9447   003B3C  6E14               	movwf	??_stoa^0,c
  9448   003B3E  501D               	movf	(stoa@l+1)^0,w,c
  9449   003B40  0A80               	xorlw	128
  9450   003B42  5814               	subwfb	??_stoa^0,w,c
  9451   003B44  B0D8               	btfsc	status,0,c
  9452   003B46  EFA7  F01D         	goto	u8901
  9453   003B4A  EFA9  F01D         	goto	u8900
  9454   003B4E                     u8901:
  9455   003B4E  EFAD  F01D         	goto	l1501
  9456   003B52                     u8900:
  9457   003B52                     
  9458                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 962:   l = prec;
  9459   003B52  C057  F01C         	movff	_prec,stoa@l
  9460   003B56  C058  F01D         	movff	_prec+1,stoa@l+1
  9461   003B5A                     l1501:
  9462                           
  9463                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 965:     p = l;
  9464   003B5A  C01C  F016         	movff	stoa@l,stoa@p
  9465   003B5E  C01D  F017         	movff	stoa@l+1,stoa@p+1
  9466                           
  9467                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 969:     w = width;
  9468   003B62  C055  F018         	movff	_width,stoa@w
  9469   003B66  C056  F019         	movff	_width+1,stoa@w+1
  9470                           
  9471                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 970:     if (!(flags & (1 << 0))) {
  9472   003B6A  B059               	btfsc	_flags^0,0,c
  9473   003B6C  EFBA  F01D         	goto	u8911
  9474   003B70  EFBC  F01D         	goto	u8910
  9475   003B74                     u8911:
  9476   003B74  EFF8  F01D         	goto	l7420
  9477   003B78                     u8910:
  9478   003B78  EFCA  F01D         	goto	l7414
  9479   003B7C                     l7410:
  9480                           
  9481                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 972:             fputc(' ', fp);
  9482   003B7C  0E00               	movlw	0
  9483   003B7E  6E08               	movwf	(fputc@c+1)^0,c
  9484   003B80  0E20               	movlw	32
  9485   003B82  6E07               	movwf	fputc@c^0,c
  9486   003B84  C010  F009         	movff	stoa@fp,fputc@fp
  9487   003B88  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9488   003B8C  ECEA  F023         	call	_fputc	;wreg free
  9489   003B90                     
  9490                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 973:             ++l;
  9491   003B90  4A1C               	infsnz	stoa@l^0,f,c
  9492   003B92  2A1D               	incf	(stoa@l+1)^0,f,c
  9493   003B94                     l7414:
  9494                           
  9495                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 971:         while (l < w) {
  9496   003B94  5018               	movf	stoa@w^0,w,c
  9497   003B96  5C1C               	subwf	stoa@l^0,w,c
  9498   003B98  501D               	movf	(stoa@l+1)^0,w,c
  9499   003B9A  0A80               	xorlw	128
  9500   003B9C  6E14               	movwf	??_stoa^0,c
  9501   003B9E  5019               	movf	(stoa@w+1)^0,w,c
  9502   003BA0  0A80               	xorlw	128
  9503   003BA2  5814               	subwfb	??_stoa^0,w,c
  9504   003BA4  A0D8               	btfss	status,0,c
  9505   003BA6  EFD7  F01D         	goto	u8921
  9506   003BAA  EFD9  F01D         	goto	u8920
  9507   003BAE                     u8921:
  9508   003BAE  EFBE  F01D         	goto	l7410
  9509   003BB2                     u8920:
  9510   003BB2  EFF8  F01D         	goto	l7420
  9511   003BB6                     l7416:
  9512                           
  9513                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 980:         fputc(*cp, fp);
  9514   003BB6  C01A  FFF6         	movff	stoa@cp,tblptrl
  9515   003BBA  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  9516   003BBE  0E00               	movlw	low (__mediumconst shr (0+16))
  9517   003BC0  6EF8               	movwf	tblptru,c
  9518   003BC2  0E0F               	movlw	(high __ramtop+-1)
  9519   003BC4  64F7               	cpfsgt	tblptrh,c
  9520   003BC6  D003               	bra	u8937
  9521   003BC8  0008               	tblrd		*
  9522   003BCA  50F5               	movf	tablat,w,c
  9523   003BCC  D005               	bra	u8930
  9524   003BCE                     u8937:
  9525   003BCE  CFF6 FFE1          	movff	tblptrl,fsr1l
  9526   003BD2  CFF7 FFE2          	movff	tblptrh,fsr1h
  9527   003BD6  50E7               	movf	indf1,w,c
  9528   003BD8                     u8930:
  9529   003BD8  6E14               	movwf	??_stoa^0,c
  9530   003BDA  5014               	movf	??_stoa^0,w,c
  9531   003BDC  6E07               	movwf	fputc@c^0,c
  9532   003BDE  6A08               	clrf	(fputc@c+1)^0,c
  9533   003BE0  C010  F009         	movff	stoa@fp,fputc@fp
  9534   003BE4  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9535   003BE8  ECEA  F023         	call	_fputc	;wreg free
  9536   003BEC                     
  9537                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 981:         ++cp;
  9538   003BEC  4A1A               	infsnz	stoa@cp^0,f,c
  9539   003BEE  2A1B               	incf	(stoa@cp+1)^0,f,c
  9540   003BF0                     l7420:
  9541                           
  9542                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 979:     while (p--) {
  9543   003BF0  0616               	decf	stoa@p^0,f,c
  9544   003BF2  A0D8               	btfss	status,0,c
  9545   003BF4  0617               	decf	(stoa@p+1)^0,f,c
  9546   003BF6  2816               	incf	stoa@p^0,w,c
  9547   003BF8  E106               	bnz	u8941
  9548   003BFA  2817               	incf	(stoa@p+1)^0,w,c
  9549   003BFC  A4D8               	btfss	status,2,c
  9550   003BFE  EF03  F01E         	goto	u8941
  9551   003C02  EF05  F01E         	goto	u8940
  9552   003C06                     u8941:
  9553   003C06  EFDB  F01D         	goto	l7416
  9554   003C0A                     u8940:
  9555   003C0A                     
  9556                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 986:     if (flags & (1 << 0)) {
  9557   003C0A  A059               	btfss	_flags^0,0,c
  9558   003C0C  EF0A  F01E         	goto	u8951
  9559   003C10  EF0C  F01E         	goto	u8950
  9560   003C14                     u8951:
  9561   003C14  EF29  F01E         	goto	l1513
  9562   003C18                     u8950:
  9563   003C18  EF1A  F01E         	goto	l7428
  9564   003C1C                     l7424:
  9565                           
  9566                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 988:             fputc(' ', fp);
  9567   003C1C  0E00               	movlw	0
  9568   003C1E  6E08               	movwf	(fputc@c+1)^0,c
  9569   003C20  0E20               	movlw	32
  9570   003C22  6E07               	movwf	fputc@c^0,c
  9571   003C24  C010  F009         	movff	stoa@fp,fputc@fp
  9572   003C28  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9573   003C2C  ECEA  F023         	call	_fputc	;wreg free
  9574   003C30                     
  9575                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 989:             ++l;
  9576   003C30  4A1C               	infsnz	stoa@l^0,f,c
  9577   003C32  2A1D               	incf	(stoa@l+1)^0,f,c
  9578   003C34                     l7428:
  9579                           
  9580                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 987:         while (l < w) {
  9581   003C34  5018               	movf	stoa@w^0,w,c
  9582   003C36  5C1C               	subwf	stoa@l^0,w,c
  9583   003C38  501D               	movf	(stoa@l+1)^0,w,c
  9584   003C3A  0A80               	xorlw	128
  9585   003C3C  6E14               	movwf	??_stoa^0,c
  9586   003C3E  5019               	movf	(stoa@w+1)^0,w,c
  9587   003C40  0A80               	xorlw	128
  9588   003C42  5814               	subwfb	??_stoa^0,w,c
  9589   003C44  A0D8               	btfss	status,0,c
  9590   003C46  EF27  F01E         	goto	u8961
  9591   003C4A  EF29  F01E         	goto	u8960
  9592   003C4E                     u8961:
  9593   003C4E  EF0E  F01E         	goto	l7424
  9594   003C52                     u8960:
  9595   003C52                     l1513:
  9596   003C52  0012               	return		;funcret
  9597   003C54                     __end_of_stoa:
  9598                           	callstack 0
  9599                           
  9600 ;; *************** function _read_prec_or_width *****************
  9601 ;; Defined at:
  9602 ;;		line 1158 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  fmt             1   11[COMRAM] PTR PTR const unsigned c
  9605 ;;		 -> vfprintf@cfmt(2), 
  9606 ;;  ap              1   12[COMRAM] PTR PTR void [1]
  9607 ;;		 -> printf@ap(1), sprintf@ap(1), 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  c               1   13[COMRAM] unsigned char 
  9610 ;;  n               2   14[COMRAM] int 
  9611 ;; Return value:  Size  Location     Type
  9612 ;;                  2   11[COMRAM] int 
  9613 ;; Registers used:
  9614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9623 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9624 ;;Total ram usage:        5 bytes
  9625 ;; Hardware stack levels used: 1
  9626 ;; Hardware stack levels required when called: 2
  9627 ;; This function calls:
  9628 ;;		___wmul
  9629 ;; This function is called by:
  9630 ;;		_vfpfcnvrt
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           	psect	text34
  9635   004AC4                     __ptext34:
  9636                           	callstack 0
  9637   004AC4                     _read_prec_or_width:
  9638                           	callstack 24
  9639   004AC4                     
  9640                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1159:     int n = 0;
  9641   004AC4  0E00               	movlw	0
  9642   004AC6  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9643   004AC8  0E00               	movlw	0
  9644   004ACA  6E0F               	movwf	read_prec_or_width@n^0,c
  9645   004ACC                     
  9646                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1160:     if ((*fmt)[0] == '*') {
  9647   004ACC  500C               	movf	read_prec_or_width@fmt^0,w,c
  9648   004ACE  6ED9               	movwf	fsr2l,c
  9649   004AD0  6ADA               	clrf	fsr2h,c
  9650   004AD2  CFDE FFF6          	movff	postinc2,tblptrl
  9651   004AD6  CFDD FFF7          	movff	postdec2,tblptrh
  9652   004ADA                     	if	0	;tblptru may be non-zero
  9653   004ADA                     	endif
  9654   004ADA                     	if	0	;tblptru may be non-zero
  9655   004ADA                     	endif
  9656   004ADA  0008               	tblrd		*
  9657   004ADC  50F5               	movf	tablat,w,c
  9658   004ADE  0A2A               	xorlw	42
  9659   004AE0  A4D8               	btfss	status,2,c
  9660   004AE2  EF75  F025         	goto	u9011
  9661   004AE6  EF77  F025         	goto	u9010
  9662   004AEA                     u9011:
  9663   004AEA  EFA1  F025         	goto	l7470
  9664   004AEE                     u9010:
  9665   004AEE                     
  9666                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1161:         ++*fmt;
  9667   004AEE  500C               	movf	read_prec_or_width@fmt^0,w,c
  9668   004AF0  6ED9               	movwf	fsr2l,c
  9669   004AF2  6ADA               	clrf	fsr2h,c
  9670   004AF4  2ADE               	incf	postinc2,f,c
  9671   004AF6  0E00               	movlw	0
  9672   004AF8  22DD               	addwfc	postdec2,f,c
  9673   004AFA                     
  9674                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1162:         n = (*(int *)__va_arg
      +                          (*(int **)*ap, (int)0));
  9675   004AFA  500D               	movf	read_prec_or_width@ap^0,w,c
  9676   004AFC  6ED9               	movwf	fsr2l,c
  9677   004AFE  6ADA               	clrf	fsr2h,c
  9678   004B00  0E02               	movlw	2
  9679   004B02  26DF               	addwf	indf2,f,c
  9680   004B04  5CDF               	subwf	indf2,w,c
  9681   004B06  6ED9               	movwf	fsr2l,c
  9682   004B08  6ADA               	clrf	fsr2h,c
  9683   004B0A  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  9684   004B0E  CFDE F010          	movff	postinc2,read_prec_or_width@n+1
  9685                           
  9686                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1163:     } else {
  9687   004B12  EFB4  F025         	goto	l1529
  9688   004B16                     l7466:
  9689                           
  9690                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1166:             n = n * 10 + c;
  9691   004B16  C00F  F006         	movff	read_prec_or_width@n,___wmul@multiplier
  9692   004B1A  C010  F007         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  9693   004B1E  0E00               	movlw	0
  9694   004B20  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  9695   004B22  0E0A               	movlw	10
  9696   004B24  6E08               	movwf	___wmul@multiplicand^0,c
  9697   004B26  EC44  F029         	call	___wmul	;wreg free
  9698   004B2A  500E               	movf	read_prec_or_width@c^0,w,c
  9699   004B2C  2406               	addwf	?___wmul^0,w,c
  9700   004B2E  6E0F               	movwf	read_prec_or_width@n^0,c
  9701   004B30  0E00               	movlw	0
  9702   004B32  2007               	addwfc	(?___wmul+1)^0,w,c
  9703   004B34  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9704   004B36                     
  9705                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1167:             ++*fmt;
  9706   004B36  500C               	movf	read_prec_or_width@fmt^0,w,c
  9707   004B38  6ED9               	movwf	fsr2l,c
  9708   004B3A  6ADA               	clrf	fsr2h,c
  9709   004B3C  2ADE               	incf	postinc2,f,c
  9710   004B3E  0E00               	movlw	0
  9711   004B40  22DD               	addwfc	postdec2,f,c
  9712   004B42                     l7470:
  9713                           
  9714                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1165:         while ((c = ((unsigne
      +                          d)(*fmt)[0]) - '0') < 10) {
  9715   004B42  500C               	movf	read_prec_or_width@fmt^0,w,c
  9716   004B44  6ED9               	movwf	fsr2l,c
  9717   004B46  6ADA               	clrf	fsr2h,c
  9718   004B48  CFDE FFF6          	movff	postinc2,tblptrl
  9719   004B4C  CFDD FFF7          	movff	postdec2,tblptrh
  9720   004B50                     	if	0	;tblptru may be non-zero
  9721   004B50                     	endif
  9722   004B50                     	if	0	;tblptru may be non-zero
  9723   004B50                     	endif
  9724   004B50  0008               	tblrd		*
  9725   004B52  50F5               	movf	tablat,w,c
  9726   004B54  0FD0               	addlw	208
  9727   004B56  6E0E               	movwf	read_prec_or_width@c^0,c
  9728   004B58  0E09               	movlw	9
  9729   004B5A  640E               	cpfsgt	read_prec_or_width@c^0,c
  9730   004B5C  EFB2  F025         	goto	u9021
  9731   004B60  EFB4  F025         	goto	u9020
  9732   004B64                     u9021:
  9733   004B64  EF8B  F025         	goto	l7466
  9734   004B68                     u9020:
  9735   004B68                     l1529:
  9736                           
  9737                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1170:     return n;
  9738   004B68  C00F  F00C         	movff	read_prec_or_width@n,?_read_prec_or_width
  9739   004B6C  C010  F00D         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  9740   004B70  0012               	return		;funcret
  9741   004B72                     __end_of_read_prec_or_width:
  9742                           	callstack 0
  9743                           
  9744 ;; *************** function ___wmul *****************
  9745 ;; Defined at:
  9746 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul16.c"
  9747 ;; Parameters:    Size  Location     Type
  9748 ;;  multiplier      2    5[COMRAM] unsigned int 
  9749 ;;  multiplicand    2    7[COMRAM] unsigned int 
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;  product         2    9[COMRAM] unsigned int 
  9752 ;; Return value:  Size  Location     Type
  9753 ;;                  2    5[COMRAM] unsigned int 
  9754 ;; Registers used:
  9755 ;;		wreg, status,2, status,0, prodl, prodh
  9756 ;; Tracked objects:
  9757 ;;		On entry : 0/0
  9758 ;;		On exit  : 0/0
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9762 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9764 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9765 ;;Total ram usage:        6 bytes
  9766 ;; Hardware stack levels used: 1
  9767 ;; Hardware stack levels required when called: 1
  9768 ;; This function calls:
  9769 ;;		Nothing
  9770 ;; This function is called by:
  9771 ;;		_read_prec_or_width
  9772 ;; This function uses a non-reentrant model
  9773 ;;
  9774                           
  9775                           	psect	text35
  9776   005288                     __ptext35:
  9777                           	callstack 0
  9778   005288                     ___wmul:
  9779                           	callstack 24
  9780   005288  5006               	movf	___wmul@multiplier^0,w,c
  9781   00528A  0208               	mulwf	___wmul@multiplicand^0,c
  9782   00528C  CFF3 F00A          	movff	prodl,___wmul@product
  9783   005290  CFF4 F00B          	movff	prodh,___wmul@product+1
  9784   005294  5006               	movf	___wmul@multiplier^0,w,c
  9785   005296  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  9786   005298  50F3               	movf	243,w,c
  9787   00529A  260B               	addwf	(___wmul@product+1)^0,f,c
  9788   00529C  5007               	movf	(___wmul@multiplier+1)^0,w,c
  9789   00529E  0208               	mulwf	___wmul@multiplicand^0,c
  9790   0052A0  50F3               	movf	243,w,c
  9791   0052A2  260B               	addwf	(___wmul@product+1)^0,f,c
  9792   0052A4  C00A  F006         	movff	___wmul@product,?___wmul
  9793   0052A8  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  9794   0052AC  0012               	return		;funcret
  9795   0052AE                     __end_of___wmul:
  9796                           	callstack 0
  9797                           
  9798 ;; *************** function _efgtoa *****************
  9799 ;; Defined at:
  9800 ;;		line 587 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  9803 ;;		 -> NULL(0), sprintf@f(12), 
  9804 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  9805 ;;  c               1   42[BANK0 ] unsigned char 
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;  u               4   85[BANK0 ] struct flui
  9808 ;;  g               4   79[BANK0 ] struct flui
  9809 ;;  l               4   74[BANK0 ] struct flui
  9810 ;;  h               4   70[BANK0 ] struct flui
  9811 ;;  ou              4   64[BANK0 ] struct flui
  9812 ;;  n               2   83[BANK0 ] int 
  9813 ;;  i               2   68[BANK0 ] int 
  9814 ;;  w               2   62[BANK0 ] int 
  9815 ;;  e               2   60[BANK0 ] int 
  9816 ;;  m               2   58[BANK0 ] int 
  9817 ;;  d               2   56[BANK0 ] int 
  9818 ;;  t               2   49[BANK0 ] int 
  9819 ;;  p               2   47[BANK0 ] int 
  9820 ;;  ne              2   45[BANK0 ] int 
  9821 ;;  sign            1   78[BANK0 ] unsigned char 
  9822 ;;  nmode           1   55[BANK0 ] unsigned char 
  9823 ;;  mode            1   54[BANK0 ] unsigned char 
  9824 ;;  pp              1   53[BANK0 ] unsigned char 
  9825 ;;  esign           1    0        unsigned char 
  9826 ;; Return value:  Size  Location     Type
  9827 ;;                  1    wreg      void 
  9828 ;; Registers used:
  9829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9830 ;; Tracked objects:
  9831 ;;		On entry : 0/0
  9832 ;;		On exit  : 0/0
  9833 ;;		Unchanged: 0/0
  9834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9835 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9836 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9837 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9838 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9839 ;;Total ram usage:       53 bytes
  9840 ;; Hardware stack levels used: 1
  9841 ;; Hardware stack levels required when called: 5
  9842 ;; This function calls:
  9843 ;;		___fladd
  9844 ;;		___fldiv
  9845 ;;		___fleq
  9846 ;;		___flge
  9847 ;;		___flmul
  9848 ;;		___flneg
  9849 ;;		___flsub
  9850 ;;		___fltol
  9851 ;;		___fpclassifyf
  9852 ;;		_floorf
  9853 ;;		_labs
  9854 ;;		_memcpy
  9855 ;;		_pad
  9856 ;;		_strcpy
  9857 ;; This function is called by:
  9858 ;;		_vfpfcnvrt
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862                           	psect	text36
  9863   000152                     __ptext36:
  9864                           	callstack 0
  9865   000152                     _efgtoa:
  9866                           	callstack 21
  9867   000152                     
  9868                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 587: static void efgtoa(FILE *fp, l
      +                          ong double f, char c);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 588: {;D:\MPLA
      +                          BX\Compiler\pic\sources\c99\common\doprnt.c: 589:     char mode, nmode, pp, sign, esign;
      +                          ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, 
      +                          t, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 591:     long double h, l;;D:\
      +                          MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 592:  union flui g, u, ou;
  9869   000152  0E00               	movlw	0
  9870   000154  0100               	movlb	0	; () banked
  9871   000156  6FAE               	movwf	efgtoa@sign& (0+255),b
  9872   000158                     
  9873                           ; BSR set to: 0
  9874                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  9875   000158  C086  F0AF         	movff	efgtoa@f,efgtoa@g
  9876   00015C  C087  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  9877   000160  C088  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  9878   000164  C089  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  9879   000168                     
  9880                           ; BSR set to: 0
  9881                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 597:     if (g.f < 0.0) {
  9882   000168  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  9883   00016A  EFBB  F000         	goto	u8540
  9884   00016E  EFB9  F000         	goto	u8541
  9885   000172                     u8541:
  9886   000172  EFCF  F000         	goto	l7180
  9887   000176                     u8540:
  9888   000176                     
  9889                           ; BSR set to: 0
  9890                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 598:         sign = 1;
  9891   000176  0E01               	movlw	1
  9892   000178  6FAE               	movwf	efgtoa@sign& (0+255),b
  9893   00017A                     
  9894                           ; BSR set to: 0
  9895                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 599:         g.f = -g.f;
  9896   00017A  C0AF  F080         	movff	efgtoa@g,___flneg@f1
  9897   00017E  C0B0  F081         	movff	efgtoa@g+1,___flneg@f1+1
  9898   000182  C0B1  F082         	movff	efgtoa@g+2,___flneg@f1+2
  9899   000186  C0B2  F083         	movff	efgtoa@g+3,___flneg@f1+3
  9900   00018A  EC8D  F028         	call	___flneg	;wreg free
  9901   00018E  C080  F0AF         	movff	?___flneg,efgtoa@g
  9902   000192  C081  F0B0         	movff	?___flneg+1,efgtoa@g+1
  9903   000196  C082  F0B1         	movff	?___flneg+2,efgtoa@g+2
  9904   00019A  C083  F0B2         	movff	?___flneg+3,efgtoa@g+3
  9905   00019E                     l7180:
  9906                           
  9907                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  9908   00019E  0E00               	movlw	0
  9909   0001A0  0100               	movlb	0	; () banked
  9910   0001A2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9911   0001A4  0E00               	movlw	0
  9912   0001A6  6FB3               	movwf	efgtoa@n& (0+255),b
  9913   0001A8                     
  9914                           ; BSR set to: 0
  9915                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 604:     w = width;
  9916   0001A8  C055  F09E         	movff	_width,efgtoa@w
  9917   0001AC  C056  F09F         	movff	_width+1,efgtoa@w+1
  9918   0001B0                     
  9919                           ; BSR set to: 0
  9920                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 605:     if (sign
  9921   0001B0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9922   0001B2  B4D8               	btfsc	status,2,c
  9923   0001B4  EFDE  F000         	goto	u8551
  9924   0001B8  EFE0  F000         	goto	u8550
  9925   0001BC                     u8551:
  9926   0001BC  EFF4  F000         	goto	l7194
  9927   0001C0                     u8550:
  9928   0001C0                     
  9929                           ; BSR set to: 0
  9930                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 609:    ) {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 610:   sign = sign ? '-' : '+';
  9931   0001C0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9932   0001C2  A4D8               	btfss	status,2,c
  9933   0001C4  EFE6  F000         	goto	u8561
  9934   0001C8  EFE8  F000         	goto	u8560
  9935   0001CC                     u8561:
  9936   0001CC  EFEE  F000         	goto	l7190
  9937   0001D0                     u8560:
  9938   0001D0                     
  9939                           ; BSR set to: 0
  9940   0001D0  0E00               	movlw	0
  9941   0001D2  6F94               	movwf	(_efgtoa$4075+1)& (0+255),b
  9942   0001D4  0E2B               	movlw	43
  9943   0001D6  6F93               	movwf	_efgtoa$4075& (0+255),b
  9944   0001D8  EFF2  F000         	goto	l7192
  9945   0001DC                     l7190:
  9946                           
  9947                           ; BSR set to: 0
  9948   0001DC  0E00               	movlw	0
  9949   0001DE  6F94               	movwf	(_efgtoa$4075+1)& (0+255),b
  9950   0001E0  0E2D               	movlw	45
  9951   0001E2  6F93               	movwf	_efgtoa$4075& (0+255),b
  9952   0001E4                     l7192:
  9953                           
  9954                           ; BSR set to: 0
  9955   0001E4  C093  F0AE         	movff	_efgtoa$4075,efgtoa@sign
  9956   0001E8                     l7194:
  9957                           
  9958                           ; BSR set to: 0
  9959                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 619:     if (( __fpclassifyf(g.f) =
      +                          = 1 )) {
  9960   0001E8  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  9961   0001EC  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9962   0001F0  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9963   0001F4  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9964   0001F8  EC86  F022         	call	___fpclassifyf	;wreg free
  9965   0001FC  0406               	decf	?___fpclassifyf^0,w,c
  9966   0001FE  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9967   000200  A4D8               	btfss	status,2,c
  9968   000202  EF05  F001         	goto	u8571
  9969   000206  EF07  F001         	goto	u8570
  9970   00020A                     u8571:
  9971   00020A  EF3A  F001         	goto	l7212
  9972   00020E                     u8570:
  9973   00020E                     
  9974                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 620:   if (sign) {
  9975   00020E  0100               	movlb	0	; () banked
  9976   000210  51AE               	movf	efgtoa@sign& (0+255),w,b
  9977   000212  B4D8               	btfsc	status,2,c
  9978   000214  EF0E  F001         	goto	u8581
  9979   000218  EF10  F001         	goto	u8580
  9980   00021C                     u8581:
  9981   00021C  EF19  F001         	goto	l7204
  9982   000220                     u8580:
  9983   000220                     
  9984                           ; BSR set to: 0
  9985                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] = sign;
  9986   000220  C0AE  F127         	movff	efgtoa@sign,_dbuf
  9987   000224                     
  9988                           ; BSR set to: 0
  9989                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 622:    w--;
  9990   000224  079E               	decf	efgtoa@w& (0+255),f,b
  9991   000226  A0D8               	btfss	status,0,c
  9992   000228  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9993   00022A                     
  9994                           ; BSR set to: 0
  9995                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  9996   00022A  0E00               	movlw	0
  9997   00022C  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9998   00022E  0E01               	movlw	1
  9999   000230  6FB3               	movwf	efgtoa@n& (0+255),b
 10000   000232                     l7204:
 10001                           
 10002                           ; BSR set to: 0
 10003                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 631:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 632:             strcpy(&dbuf[n], "inf");
 10004   000232  0E27               	movlw	low _dbuf
 10005   000234  25B3               	addwf	efgtoa@n& (0+255),w,b
 10006   000236  6E06               	movwf	strcpy@dest^0,c
 10007   000238  0E01               	movlw	high _dbuf
 10008   00023A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10009   00023C  6E07               	movwf	(strcpy@dest+1)^0,c
 10010   00023E  0EEB               	movlw	low STR_41
 10011   000240  6E08               	movwf	strcpy@src^0,c
 10012   000242  0EFF               	movlw	high STR_41
 10013   000244  6E09               	movwf	(strcpy@src+1)^0,c
 10014   000246  ECAA  F028         	call	_strcpy	;wreg free
 10015   00024A                     l7206:
 10016                           
 10017                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 633:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
 10018   00024A  0100               	movlb	0	; () banked
 10019   00024C  0EFD               	movlw	253
 10020   00024E  279E               	addwf	efgtoa@w& (0+255),f,b
 10021   000250  0EFF               	movlw	255
 10022   000252  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
 10023   000254                     
 10024                           ; BSR set to: 0
 10025                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 635:         return (void) pad(fp, 
      +                          &dbuf[0], w);
 10026   000254  C084  F017         	movff	efgtoa@fp,pad@fp
 10027   000258  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
 10028   00025C  0E27               	movlw	low _dbuf
 10029   00025E  6E19               	movwf	pad@buf^0,c
 10030   000260  0E01               	movlw	high _dbuf
 10031   000262  6E1A               	movwf	(pad@buf+1)^0,c
 10032   000264  C09E  F01B         	movff	efgtoa@w,pad@p
 10033   000268  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
 10034   00026C  EC0E  F026         	call	_pad	;wreg free
 10035   000270  EFA5  F005         	goto	l1452
 10036   000274                     l7212:
 10037                           
 10038                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 637:     if (( __fpclassifyf(g.f) =
      +                          = 0 )) {
 10039   000274  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
 10040   000278  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
 10041   00027C  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
 10042   000280  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
 10043   000284  EC86  F022         	call	___fpclassifyf	;wreg free
 10044   000288  5006               	movf	?___fpclassifyf^0,w,c
 10045   00028A  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
 10046   00028C  A4D8               	btfss	status,2,c
 10047   00028E  EF4B  F001         	goto	u8591
 10048   000292  EF4D  F001         	goto	u8590
 10049   000296                     u8591:
 10050   000296  EF6D  F001         	goto	l7230
 10051   00029A                     u8590:
 10052   00029A                     
 10053                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 638:   if (sign) {
 10054   00029A  0100               	movlb	0	; () banked
 10055   00029C  51AE               	movf	efgtoa@sign& (0+255),w,b
 10056   00029E  B4D8               	btfsc	status,2,c
 10057   0002A0  EF54  F001         	goto	u8601
 10058   0002A4  EF56  F001         	goto	u8600
 10059   0002A8                     u8601:
 10060   0002A8  EF5F  F001         	goto	l7222
 10061   0002AC                     u8600:
 10062   0002AC                     
 10063                           ; BSR set to: 0
 10064                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] = sign;
 10065   0002AC  C0AE  F127         	movff	efgtoa@sign,_dbuf
 10066   0002B0                     
 10067                           ; BSR set to: 0
 10068                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 640:    w--;
 10069   0002B0  079E               	decf	efgtoa@w& (0+255),f,b
 10070   0002B2  A0D8               	btfss	status,0,c
 10071   0002B4  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10072   0002B6                     
 10073                           ; BSR set to: 0
 10074                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 10075   0002B6  0E00               	movlw	0
 10076   0002B8  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
 10077   0002BA  0E01               	movlw	1
 10078   0002BC  6FB3               	movwf	efgtoa@n& (0+255),b
 10079   0002BE                     l7222:
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 649:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 650:             strcpy(&dbuf[n], "nan");
 10083   0002BE  0E27               	movlw	low _dbuf
 10084   0002C0  25B3               	addwf	efgtoa@n& (0+255),w,b
 10085   0002C2  6E06               	movwf	strcpy@dest^0,c
 10086   0002C4  0E01               	movlw	high _dbuf
 10087   0002C6  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10088   0002C8  6E07               	movwf	(strcpy@dest+1)^0,c
 10089   0002CA  0EEF               	movlw	low STR_44
 10090   0002CC  6E08               	movwf	strcpy@src^0,c
 10091   0002CE  0EFF               	movlw	high STR_44
 10092   0002D0  6E09               	movwf	(strcpy@src+1)^0,c
 10093   0002D2  ECAA  F028         	call	_strcpy	;wreg free
 10094   0002D6  EF25  F001         	goto	l7206
 10095   0002DA                     l7230:
 10096                           
 10097                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.0;
 10098   0002DA  0E00               	movlw	0
 10099   0002DC  0100               	movlb	0	; () banked
 10100   0002DE  6FB5               	movwf	efgtoa@u& (0+255),b
 10101   0002E0  0E00               	movlw	0
 10102   0002E2  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
 10103   0002E4  0E80               	movlw	128
 10104   0002E6  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
 10105   0002E8  0E3F               	movlw	63
 10106   0002EA  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
 10107                           
 10108                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 10109   0002EC  0E00               	movlw	0
 10110   0002EE  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
 10111   0002F0  0E00               	movlw	0
 10112   0002F2  6F9C               	movwf	efgtoa@e& (0+255),b
 10113   0002F4                     
 10114                           ; BSR set to: 0
 10115                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f == 0.0)) {
 10116   0002F4  C0AF  F006         	movff	efgtoa@g,___fleq@ff1
 10117   0002F8  C0B0  F007         	movff	efgtoa@g+1,___fleq@ff1+1
 10118   0002FC  C0B1  F008         	movff	efgtoa@g+2,___fleq@ff1+2
 10119   000300  C0B2  F009         	movff	efgtoa@g+3,___fleq@ff1+3
 10120   000304  0E00               	movlw	0
 10121   000306  6E0A               	movwf	___fleq@ff2^0,c
 10122   000308  0E00               	movlw	0
 10123   00030A  6E0B               	movwf	(___fleq@ff2+1)^0,c
 10124   00030C  0E00               	movlw	0
 10125   00030E  6E0C               	movwf	(___fleq@ff2+2)^0,c
 10126   000310  0E00               	movlw	0
 10127   000312  6E0D               	movwf	(___fleq@ff2+3)^0,c
 10128   000314  ECB9  F025         	call	___fleq	;wreg free
 10129   000318  B0D8               	btfsc	status,0,c
 10130   00031A  EF91  F001         	goto	u8611
 10131   00031E  EF93  F001         	goto	u8610
 10132   000322                     u8611:
 10133   000322  EF72  F002         	goto	l1455
 10134   000326                     u8610:
 10135   000326  EFA0  F001         	goto	l7238
 10136   00032A                     l1457:
 10137                           
 10138                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 10139   00032A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
 10140   00032E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
 10141   000332  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
 10142   000336  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
 10143   00033A                     
 10144                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 662:    ++e;
 10145   00033A  0100               	movlb	0	; () banked
 10146   00033C  4B9C               	infsnz	efgtoa@e& (0+255),f,b
 10147   00033E  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
 10148   000340                     l7238:
 10149                           
 10150                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 660:   while ((labs((g).u-((ou.f = 
      +                          u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 10151   000340  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10152   000344  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10153   000348  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10154   00034C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10155   000350  0E00               	movlw	0
 10156   000352  6E18               	movwf	___flmul@a^0,c
 10157   000354  0E00               	movlw	0
 10158   000356  6E19               	movwf	(___flmul@a+1)^0,c
 10159   000358  0E20               	movlw	32
 10160   00035A  6E1A               	movwf	(___flmul@a+2)^0,c
 10161   00035C  0E41               	movlw	65
 10162   00035E  6E1B               	movwf	(___flmul@a+3)^0,c
 10163   000360  EC3A  F00D         	call	___flmul	;wreg free
 10164   000364  C014  F0A0         	movff	?___flmul,efgtoa@ou
 10165   000368  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
 10166   00036C  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
 10167   000370  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
 10168   000374  0100               	movlb	0	; () banked
 10169   000376  51A0               	movf	efgtoa@ou& (0+255),w,b
 10170   000378  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10171   00037A  6E06               	movwf	labs@a^0,c
 10172   00037C  51A1               	movf	(efgtoa@ou+1)& (0+255),w,b
 10173   00037E  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10174   000380  6E07               	movwf	(labs@a+1)^0,c
 10175   000382  51A2               	movf	(efgtoa@ou+2)& (0+255),w,b
 10176   000384  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10177   000386  6E08               	movwf	(labs@a+2)^0,c
 10178   000388  51A3               	movf	(efgtoa@ou+3)& (0+255),w,b
 10179   00038A  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10180   00038C  6E09               	movwf	(labs@a+3)^0,c
 10181   00038E  EC63  F027         	call	_labs	;wreg free
 10182   000392  BE09               	btfsc	(?_labs+3)^0,7,c
 10183   000394  EFD7  F001         	goto	u8621
 10184   000398  5009               	movf	(?_labs+3)^0,w,c
 10185   00039A  1008               	iorwf	(?_labs+2)^0,w,c
 10186   00039C  1007               	iorwf	(?_labs+1)^0,w,c
 10187   00039E  E109               	bnz	u8620
 10188   0003A0  0E02               	movlw	2
 10189   0003A2  5C06               	subwf	?_labs^0,w,c
 10190   0003A4  A0D8               	btfss	status,0,c
 10191   0003A6  EFD7  F001         	goto	u8621
 10192   0003AA  EFD9  F001         	goto	u8620
 10193   0003AE                     u8621:
 10194   0003AE  EF95  F001         	goto	l1457
 10195   0003B2                     u8620:
 10196   0003B2  C0A0  F02D         	movff	efgtoa@ou,___flge@ff1
 10197   0003B6  C0A1  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
 10198   0003BA  C0A2  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
 10199   0003BE  C0A3  F030         	movff	efgtoa@ou+3,___flge@ff1+3
 10200   0003C2  C0AF  F031         	movff	efgtoa@g,___flge@ff2
 10201   0003C6  C0B0  F032         	movff	efgtoa@g+1,___flge@ff2+1
 10202   0003CA  C0B1  F033         	movff	efgtoa@g+2,___flge@ff2+2
 10203   0003CE  C0B2  F034         	movff	efgtoa@g+3,___flge@ff2+3
 10204   0003D2  EC04  F022         	call	___flge	;wreg free
 10205   0003D6  A0D8               	btfss	status,0,c
 10206   0003D8  EFF0  F001         	goto	u8631
 10207   0003DC  EFF2  F001         	goto	u8630
 10208   0003E0                     u8631:
 10209   0003E0  EF95  F001         	goto	l1457
 10210   0003E4                     u8630:
 10211   0003E4                     
 10212                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 664:   if ((labs((g).u-(u).u) <= 1)
      +                          ) {
 10213   0003E4  0100               	movlb	0	; () banked
 10214   0003E6  51B5               	movf	efgtoa@u& (0+255),w,b
 10215   0003E8  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10216   0003EA  6E06               	movwf	labs@a^0,c
 10217   0003EC  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
 10218   0003EE  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10219   0003F0  6E07               	movwf	(labs@a+1)^0,c
 10220   0003F2  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
 10221   0003F4  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10222   0003F6  6E08               	movwf	(labs@a+2)^0,c
 10223   0003F8  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
 10224   0003FA  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10225   0003FC  6E09               	movwf	(labs@a+3)^0,c
 10226   0003FE  EC63  F027         	call	_labs	;wreg free
 10227   000402  BE09               	btfsc	(?_labs+3)^0,7,c
 10228   000404  EF11  F002         	goto	u8640
 10229   000408  5009               	movf	(?_labs+3)^0,w,c
 10230   00040A  1008               	iorwf	(?_labs+2)^0,w,c
 10231   00040C  1007               	iorwf	(?_labs+1)^0,w,c
 10232   00040E  E107               	bnz	u8641
 10233   000410  0E02               	movlw	2
 10234   000412  5C06               	subwf	?_labs^0,w,c
 10235   000414  B0D8               	btfsc	status,0,c
 10236   000416  EF0F  F002         	goto	u8641
 10237   00041A  EF11  F002         	goto	u8640
 10238   00041E                     u8641:
 10239   00041E  EF59  F002         	goto	l7256
 10240   000422                     u8640:
 10241   000422                     l7246:
 10242                           
 10243                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 665:    g = u;
 10244   000422  C0B5  F0AF         	movff	efgtoa@u,efgtoa@g
 10245   000426  C0B6  F0B0         	movff	efgtoa@u+1,efgtoa@g+1
 10246   00042A  C0B7  F0B1         	movff	efgtoa@u+2,efgtoa@g+2
 10247   00042E  C0B8  F0B2         	movff	efgtoa@u+3,efgtoa@g+3
 10248                           
 10249                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 666:   }
 10250   000432  EF72  F002         	goto	l1455
 10251   000436                     l7248:
 10252                           
 10253                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 669:     u.f = u.f/10.0;
 10254   000436  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10255   00043A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10256   00043E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10257   000442  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10258   000446  0E00               	movlw	0
 10259   000448  6E31               	movwf	___fldiv@a^0,c
 10260   00044A  0E00               	movlw	0
 10261   00044C  6E32               	movwf	(___fldiv@a+1)^0,c
 10262   00044E  0E20               	movlw	32
 10263   000450  6E33               	movwf	(___fldiv@a+2)^0,c
 10264   000452  0E41               	movlw	65
 10265   000454  6E34               	movwf	(___fldiv@a+3)^0,c
 10266   000456  EC14  F015         	call	___fldiv	;wreg free
 10267   00045A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10268   00045E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10269   000462  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10270   000466  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10271   00046A                     
 10272                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 670:     --e;
 10273   00046A  0100               	movlb	0	; () banked
 10274   00046C  079C               	decf	efgtoa@e& (0+255),f,b
 10275   00046E  A0D8               	btfss	status,0,c
 10276   000470  079D               	decf	(efgtoa@e+1)& (0+255),f,b
 10277   000472                     
 10278                           ; BSR set to: 0
 10279                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 671:     if ((labs((g).u-(u).u) <= 
      +                          1)) {
 10280   000472  51B5               	movf	efgtoa@u& (0+255),w,b
 10281   000474  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10282   000476  6E06               	movwf	labs@a^0,c
 10283   000478  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
 10284   00047A  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10285   00047C  6E07               	movwf	(labs@a+1)^0,c
 10286   00047E  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
 10287   000480  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10288   000482  6E08               	movwf	(labs@a+2)^0,c
 10289   000484  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
 10290   000486  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10291   000488  6E09               	movwf	(labs@a+3)^0,c
 10292   00048A  EC63  F027         	call	_labs	;wreg free
 10293   00048E  BE09               	btfsc	(?_labs+3)^0,7,c
 10294   000490  EF57  F002         	goto	u8650
 10295   000494  5009               	movf	(?_labs+3)^0,w,c
 10296   000496  1008               	iorwf	(?_labs+2)^0,w,c
 10297   000498  1007               	iorwf	(?_labs+1)^0,w,c
 10298   00049A  E107               	bnz	u8651
 10299   00049C  0E02               	movlw	2
 10300   00049E  5C06               	subwf	?_labs^0,w,c
 10301   0004A0  B0D8               	btfsc	status,0,c
 10302   0004A2  EF55  F002         	goto	u8651
 10303   0004A6  EF57  F002         	goto	u8650
 10304   0004AA                     u8651:
 10305   0004AA  EF59  F002         	goto	l7256
 10306   0004AE                     u8650:
 10307   0004AE  EF11  F002         	goto	l7246
 10308   0004B2                     l7256:
 10309                           
 10310                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 668:    while (g.f < u.f) {
 10311   0004B2  C0AF  F02D         	movff	efgtoa@g,___flge@ff1
 10312   0004B6  C0B0  F02E         	movff	efgtoa@g+1,___flge@ff1+1
 10313   0004BA  C0B1  F02F         	movff	efgtoa@g+2,___flge@ff1+2
 10314   0004BE  C0B2  F030         	movff	efgtoa@g+3,___flge@ff1+3
 10315   0004C2  C0B5  F031         	movff	efgtoa@u,___flge@ff2
 10316   0004C6  C0B6  F032         	movff	efgtoa@u+1,___flge@ff2+1
 10317   0004CA  C0B7  F033         	movff	efgtoa@u+2,___flge@ff2+2
 10318   0004CE  C0B8  F034         	movff	efgtoa@u+3,___flge@ff2+3
 10319   0004D2  EC04  F022         	call	___flge	;wreg free
 10320   0004D6  A0D8               	btfss	status,0,c
 10321   0004D8  EF70  F002         	goto	u8661
 10322   0004DC  EF72  F002         	goto	u8660
 10323   0004E0                     u8661:
 10324   0004E0  EF1B  F002         	goto	l7248
 10325   0004E4                     u8660:
 10326   0004E4                     l1455:
 10327                           
 10328                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 10329   0004E4  C08A  F096         	movff	efgtoa@c,efgtoa@mode
 10330                           
 10331                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 685:     nmode = mode;
 10332   0004E8  C096  F097         	movff	efgtoa@mode,efgtoa@nmode
 10333   0004EC                     
 10334                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 695:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
 10335   0004EC  BE58               	btfsc	(_prec+1)^0,7,c
 10336   0004EE  EF7B  F002         	goto	u8671
 10337   0004F2  EF7D  F002         	goto	u8670
 10338   0004F6                     u8671:
 10339   0004F6  EF83  F002         	goto	l7262
 10340   0004FA                     u8670:
 10341   0004FA  C057  F08F         	movff	_prec,efgtoa@p
 10342   0004FE  C058  F090         	movff	_prec+1,efgtoa@p+1
 10343   000502  EF88  F002         	goto	l7264
 10344   000506                     l7262:
 10345   000506  0E00               	movlw	0
 10346   000508  0100               	movlb	0	; () banked
 10347   00050A  6F90               	movwf	(efgtoa@p+1)& (0+255),b
 10348   00050C  0E06               	movlw	6
 10349   00050E  6F8F               	movwf	efgtoa@p& (0+255),b
 10350   000510                     l7264:
 10351                           
 10352                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 697:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 711:     m = p;
 10353   000510  C08F  F09A         	movff	efgtoa@p,efgtoa@m
 10354   000514  C090  F09B         	movff	efgtoa@p+1,efgtoa@m+1
 10355   000518                     
 10356                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 715:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 716:         ++m;
 10357   000518  0100               	movlb	0	; () banked
 10358   00051A  4B9A               	infsnz	efgtoa@m& (0+255),f,b
 10359   00051C  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
 10360   00051E                     
 10361                           ; BSR set to: 0
 10362                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 717:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 721:     if (nmode == 'f') {
 10363   00051E  0E66               	movlw	102
 10364   000520  1997               	xorwf	efgtoa@nmode& (0+255),w,b
 10365   000522  A4D8               	btfss	status,2,c
 10366   000524  EF96  F002         	goto	u8681
 10367   000528  EF98  F002         	goto	u8680
 10368   00052C                     u8681:
 10369   00052C  EFB8  F002         	goto	l7278
 10370   000530                     u8680:
 10371   000530                     
 10372                           ; BSR set to: 0
 10373                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 722:         if (e < 0) {
 10374   000530  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10375   000532  EF9F  F002         	goto	u8690
 10376   000536  EF9D  F002         	goto	u8691
 10377   00053A                     u8691:
 10378   00053A  EFAB  F002         	goto	l7274
 10379   00053E                     u8690:
 10380   00053E                     
 10381                           ; BSR set to: 0
 10382                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 723:             u.f = 1.0;
 10383   00053E  0E00               	movlw	0
 10384   000540  6FB5               	movwf	efgtoa@u& (0+255),b
 10385   000542  0E00               	movlw	0
 10386   000544  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
 10387   000546  0E80               	movlw	128
 10388   000548  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
 10389   00054A  0E3F               	movlw	63
 10390   00054C  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
 10391                           
 10392                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 724:             e = 0;
 10393   00054E  0E00               	movlw	0
 10394   000550  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
 10395   000552  0E00               	movlw	0
 10396   000554  6F9C               	movwf	efgtoa@e& (0+255),b
 10397   000556                     l7274:
 10398                           
 10399                           ; BSR set to: 0
 10400                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 726:         if (!(mode == 'g')) {
 10401   000556  0E67               	movlw	103
 10402   000558  1996               	xorwf	efgtoa@mode& (0+255),w,b
 10403   00055A  B4D8               	btfsc	status,2,c
 10404   00055C  EFB2  F002         	goto	u8701
 10405   000560  EFB4  F002         	goto	u8700
 10406   000564                     u8701:
 10407   000564  EFB8  F002         	goto	l7278
 10408   000568                     u8700:
 10409   000568                     
 10410                           ; BSR set to: 0
 10411                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 727:             m += e;
 10412   000568  519C               	movf	efgtoa@e& (0+255),w,b
 10413   00056A  279A               	addwf	efgtoa@m& (0+255),f,b
 10414   00056C  519D               	movf	(efgtoa@e+1)& (0+255),w,b
 10415   00056E  239B               	addwfc	(efgtoa@m+1)& (0+255),f,b
 10416   000570                     l7278:
 10417                           
 10418                           ; BSR set to: 0
 10419                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 10420   000570  0E00               	movlw	0
 10421   000572  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10422   000574  0E00               	movlw	0
 10423   000576  6FA4               	movwf	efgtoa@i& (0+255),b
 10424   000578                     
 10425                           ; BSR set to: 0
 10426                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 10427   000578  C0AF  F0A6         	movff	efgtoa@g,efgtoa@h
 10428   00057C  C0B0  F0A7         	movff	efgtoa@g+1,efgtoa@h+1
 10429   000580  C0B1  F0A8         	movff	efgtoa@g+2,efgtoa@h+2
 10430   000584  C0B2  F0A9         	movff	efgtoa@g+3,efgtoa@h+3
 10431   000588                     
 10432                           ; BSR set to: 0
 10433                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 10434   000588  C0B5  F0A0         	movff	efgtoa@u,efgtoa@ou
 10435   00058C  C0B6  F0A1         	movff	efgtoa@u+1,efgtoa@ou+1
 10436   000590  C0B7  F0A2         	movff	efgtoa@u+2,efgtoa@ou+2
 10437   000594  C0B8  F0A3         	movff	efgtoa@u+3,efgtoa@ou+3
 10438                           
 10439                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
 10440   000598  EF49  F003         	goto	l7292
 10441   00059C                     l7284:
 10442                           
 10443                           ; BSR set to: 0
 10444                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 737:         l = floorf(h/u.f);
 10445   00059C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
 10446   0005A0  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
 10447   0005A4  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
 10448   0005A8  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
 10449   0005AC  C0B5  F031         	movff	efgtoa@u,___fldiv@a
 10450   0005B0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
 10451   0005B4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
 10452   0005B8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
 10453   0005BC  EC14  F015         	call	___fldiv	;wreg free
 10454   0005C0  C02D  F046         	movff	?___fldiv,floorf@x
 10455   0005C4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
 10456   0005C8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
 10457   0005CC  C030  F049         	movff	?___fldiv+3,floorf@x+3
 10458   0005D0  EC6E  F019         	call	_floorf	;wreg free
 10459   0005D4  C046  F0AA         	movff	?_floorf,efgtoa@l
 10460   0005D8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
 10461   0005DC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
 10462   0005E0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
 10463                           
 10464                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 738:         d = (int)l;
 10465   0005E4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10466   0005E8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10467   0005EC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10468   0005F0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10469   0005F4  EC80  F021         	call	___fltol	;wreg free
 10470   0005F8  C064  F098         	movff	?___fltol,efgtoa@d
 10471   0005FC  C065  F099         	movff	?___fltol+1,efgtoa@d+1
 10472   000600                     
 10473                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 739:         h -= l*u.f;
 10474   000600  C0A6  F064         	movff	efgtoa@h,___flsub@b
 10475   000604  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
 10476   000608  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
 10477   00060C  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
 10478   000610  C0AA  F018         	movff	efgtoa@l,___flmul@a
 10479   000614  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
 10480   000618  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
 10481   00061C  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
 10482   000620  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10483   000624  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10484   000628  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10485   00062C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10486   000630  EC3A  F00D         	call	___flmul	;wreg free
 10487   000634  C014  F068         	movff	?___flmul,___flsub@a
 10488   000638  C015  F069         	movff	?___flmul+1,___flsub@a+1
 10489   00063C  C016  F06A         	movff	?___flmul+2,___flsub@a+2
 10490   000640  C017  F06B         	movff	?___flmul+3,___flsub@a+3
 10491   000644  EC05  F028         	call	___flsub	;wreg free
 10492   000648  C064  F0A6         	movff	?___flsub,efgtoa@h
 10493   00064C  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
 10494   000650  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
 10495   000654  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
 10496   000658                     
 10497                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 740:         u.f = u.f/10.0;
 10498   000658  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10499   00065C  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10500   000660  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10501   000664  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10502   000668  0E00               	movlw	0
 10503   00066A  6E31               	movwf	___fldiv@a^0,c
 10504   00066C  0E00               	movlw	0
 10505   00066E  6E32               	movwf	(___fldiv@a+1)^0,c
 10506   000670  0E20               	movlw	32
 10507   000672  6E33               	movwf	(___fldiv@a+2)^0,c
 10508   000674  0E41               	movlw	65
 10509   000676  6E34               	movwf	(___fldiv@a+3)^0,c
 10510   000678  EC14  F015         	call	___fldiv	;wreg free
 10511   00067C  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10512   000680  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10513   000684  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10514   000688  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10515   00068C                     
 10516                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 741:         ++i;
 10517   00068C  0100               	movlb	0	; () banked
 10518   00068E  4BA4               	infsnz	efgtoa@i& (0+255),f,b
 10519   000690  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
 10520   000692                     l7292:
 10521                           
 10522                           ; BSR set to: 0
 10523                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
 10524   000692  519A               	movf	efgtoa@m& (0+255),w,b
 10525   000694  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10526   000696  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10527   000698  0A80               	xorlw	128
 10528   00069A  6F8B               	movwf	??_efgtoa& (0+255),b
 10529   00069C  519B               	movf	(efgtoa@m+1)& (0+255),w,b
 10530   00069E  0A80               	xorlw	128
 10531   0006A0  598B               	subwfb	??_efgtoa& (0+255),w,b
 10532   0006A2  A0D8               	btfss	status,0,c
 10533   0006A4  EF56  F003         	goto	u8711
 10534   0006A8  EF58  F003         	goto	u8710
 10535   0006AC                     u8711:
 10536   0006AC  EFCE  F002         	goto	l7284
 10537   0006B0                     u8710:
 10538   0006B0                     
 10539                           ; BSR set to: 0
 10540                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 745:     l = u.f*5.0;
 10541   0006B0  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10542   0006B4  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10543   0006B8  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10544   0006BC  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10545   0006C0  0E00               	movlw	0
 10546   0006C2  6E18               	movwf	___flmul@a^0,c
 10547   0006C4  0E00               	movlw	0
 10548   0006C6  6E19               	movwf	(___flmul@a+1)^0,c
 10549   0006C8  0EA0               	movlw	160
 10550   0006CA  6E1A               	movwf	(___flmul@a+2)^0,c
 10551   0006CC  0E40               	movlw	64
 10552   0006CE  6E1B               	movwf	(___flmul@a+3)^0,c
 10553   0006D0  EC3A  F00D         	call	___flmul	;wreg free
 10554   0006D4  C014  F0AA         	movff	?___flmul,efgtoa@l
 10555   0006D8  C015  F0AB         	movff	?___flmul+1,efgtoa@l+1
 10556   0006DC  C016  F0AC         	movff	?___flmul+2,efgtoa@l+2
 10557   0006E0  C017  F0AD         	movff	?___flmul+3,efgtoa@l+3
 10558   0006E4                     
 10559                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 746:     if (h < l) {
 10560   0006E4  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
 10561   0006E8  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
 10562   0006EC  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
 10563   0006F0  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
 10564   0006F4  C0AA  F031         	movff	efgtoa@l,___flge@ff2
 10565   0006F8  C0AB  F032         	movff	efgtoa@l+1,___flge@ff2+1
 10566   0006FC  C0AC  F033         	movff	efgtoa@l+2,___flge@ff2+2
 10567   000700  C0AD  F034         	movff	efgtoa@l+3,___flge@ff2+3
 10568   000704  EC04  F022         	call	___flge	;wreg free
 10569   000708  B0D8               	btfsc	status,0,c
 10570   00070A  EF89  F003         	goto	u8721
 10571   00070E  EF8B  F003         	goto	u8720
 10572   000712                     u8721:
 10573   000712  EF96  F003         	goto	l7300
 10574   000716                     u8720:
 10575   000716                     
 10576                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 747:         l = 0.0;
 10577   000716  0E00               	movlw	0
 10578   000718  0100               	movlb	0	; () banked
 10579   00071A  6FAA               	movwf	efgtoa@l& (0+255),b
 10580   00071C  0E00               	movlw	0
 10581   00071E  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
 10582   000720  0E00               	movlw	0
 10583   000722  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
 10584   000724  0E00               	movlw	0
 10585   000726  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10586                           
 10587                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 748:     } else {
 10588   000728  EFBF  F003         	goto	l7306
 10589   00072C                     l7300:
 10590                           
 10591                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 750:         if ((h == l) && !(d % 
      +                          2)) {
 10592   00072C  C0A6  F006         	movff	efgtoa@h,___fleq@ff1
 10593   000730  C0A7  F007         	movff	efgtoa@h+1,___fleq@ff1+1
 10594   000734  C0A8  F008         	movff	efgtoa@h+2,___fleq@ff1+2
 10595   000738  C0A9  F009         	movff	efgtoa@h+3,___fleq@ff1+3
 10596   00073C  C0AA  F00A         	movff	efgtoa@l,___fleq@ff2
 10597   000740  C0AB  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
 10598   000744  C0AC  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
 10599   000748  C0AD  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
 10600   00074C  ECB9  F025         	call	___fleq	;wreg free
 10601   000750  A0D8               	btfss	status,0,c
 10602   000752  EFAD  F003         	goto	u8731
 10603   000756  EFAF  F003         	goto	u8730
 10604   00075A                     u8731:
 10605   00075A  EFBF  F003         	goto	l7306
 10606   00075E                     u8730:
 10607   00075E  0100               	movlb	0	; () banked
 10608   000760  B198               	btfsc	efgtoa@d& (0+255),0,b
 10609   000762  EFB5  F003         	goto	u8741
 10610   000766  EFB7  F003         	goto	u8740
 10611   00076A                     u8741:
 10612   00076A  EFBF  F003         	goto	l7306
 10613   00076E                     u8740:
 10614   00076E                     
 10615                           ; BSR set to: 0
 10616                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 751:             l = 0.0;
 10617   00076E  0E00               	movlw	0
 10618   000770  6FAA               	movwf	efgtoa@l& (0+255),b
 10619   000772  0E00               	movlw	0
 10620   000774  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
 10621   000776  0E00               	movlw	0
 10622   000778  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
 10623   00077A  0E00               	movlw	0
 10624   00077C  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10625   00077E                     l7306:
 10626                           
 10627                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 756:     h = g.f + l;
 10628   00077E  C0AF  F046         	movff	efgtoa@g,___fladd@b
 10629   000782  C0B0  F047         	movff	efgtoa@g+1,___fladd@b+1
 10630   000786  C0B1  F048         	movff	efgtoa@g+2,___fladd@b+2
 10631   00078A  C0B2  F049         	movff	efgtoa@g+3,___fladd@b+3
 10632   00078E  C0AA  F04A         	movff	efgtoa@l,___fladd@a
 10633   000792  C0AB  F04B         	movff	efgtoa@l+1,___fladd@a+1
 10634   000796  C0AC  F04C         	movff	efgtoa@l+2,___fladd@a+2
 10635   00079A  C0AD  F04D         	movff	efgtoa@l+3,___fladd@a+3
 10636   00079E  ECD9  F00A         	call	___fladd	;wreg free
 10637   0007A2  C046  F0A6         	movff	?___fladd,efgtoa@h
 10638   0007A6  C047  F0A7         	movff	?___fladd+1,efgtoa@h+1
 10639   0007AA  C048  F0A8         	movff	?___fladd+2,efgtoa@h+2
 10640   0007AE  C049  F0A9         	movff	?___fladd+3,efgtoa@h+3
 10641   0007B2                     
 10642                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 758:  if (h >= (ou.f*10.0)) {
 10643   0007B2  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
 10644   0007B6  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
 10645   0007BA  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
 10646   0007BE  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
 10647   0007C2  0E00               	movlw	0
 10648   0007C4  6E18               	movwf	___flmul@a^0,c
 10649   0007C6  0E00               	movlw	0
 10650   0007C8  6E19               	movwf	(___flmul@a+1)^0,c
 10651   0007CA  0E20               	movlw	32
 10652   0007CC  6E1A               	movwf	(___flmul@a+2)^0,c
 10653   0007CE  0E41               	movlw	65
 10654   0007D0  6E1B               	movwf	(___flmul@a+3)^0,c
 10655   0007D2  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10656   0007D6  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10657   0007DA  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10658   0007DE  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10659   0007E2  EC3A  F00D         	call	___flmul	;wreg free
 10660   0007E6  C014  F031         	movff	?___flmul,___flge@ff2
 10661   0007EA  C015  F032         	movff	?___flmul+1,___flge@ff2+1
 10662   0007EE  C016  F033         	movff	?___flmul+2,___flge@ff2+2
 10663   0007F2  C017  F034         	movff	?___flmul+3,___flge@ff2+3
 10664   0007F6  EC04  F022         	call	___flge	;wreg free
 10665   0007FA  A0D8               	btfss	status,0,c
 10666   0007FC  EF02  F004         	goto	u8751
 10667   000800  EF04  F004         	goto	u8750
 10668   000804                     u8751:
 10669   000804  EF2D  F004         	goto	l7318
 10670   000808                     u8750:
 10671   000808                     
 10672                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 759:   e++;
 10673   000808  0100               	movlb	0	; () banked
 10674   00080A  4B9C               	infsnz	efgtoa@e& (0+255),f,b
 10675   00080C  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
 10676   00080E                     
 10677                           ; BSR set to: 0
 10678                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10.0;
 10679   00080E  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10680   000812  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10681   000816  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10682   00081A  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10683   00081E  0E00               	movlw	0
 10684   000820  6E18               	movwf	___flmul@a^0,c
 10685   000822  0E00               	movlw	0
 10686   000824  6E19               	movwf	(___flmul@a+1)^0,c
 10687   000826  0E20               	movlw	32
 10688   000828  6E1A               	movwf	(___flmul@a+2)^0,c
 10689   00082A  0E41               	movlw	65
 10690   00082C  6E1B               	movwf	(___flmul@a+3)^0,c
 10691   00082E  EC3A  F00D         	call	___flmul	;wreg free
 10692   000832  C014  F0A0         	movff	?___flmul,efgtoa@ou
 10693   000836  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
 10694   00083A  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
 10695   00083E  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
 10696   000842                     
 10697                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 762:   if (nmode == 'f') {
 10698   000842  0E66               	movlw	102
 10699   000844  0100               	movlb	0	; () banked
 10700   000846  1997               	xorwf	efgtoa@nmode& (0+255),w,b
 10701   000848  A4D8               	btfss	status,2,c
 10702   00084A  EF29  F004         	goto	u8761
 10703   00084E  EF2B  F004         	goto	u8760
 10704   000852                     u8761:
 10705   000852  EF2D  F004         	goto	l7318
 10706   000856                     u8760:
 10707   000856                     
 10708                           ; BSR set to: 0
 10709                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 764:    m++;
 10710   000856  4B9A               	infsnz	efgtoa@m& (0+255),f,b
 10711   000858  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
 10712   00085A                     l7318:
 10713                           
 10714                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 10715   00085A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
 10716   00085E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
 10717   000862  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
 10718   000866  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
 10719   00086A                     
 10720                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 10721   00086A  C09C  F08D         	movff	efgtoa@e,efgtoa@ne
 10722   00086E  C09D  F08E         	movff	efgtoa@e+1,efgtoa@ne+1
 10723   000872                     
 10724                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 10725   000872  0E00               	movlw	0
 10726   000874  0100               	movlb	0	; () banked
 10727   000876  6F95               	movwf	efgtoa@pp& (0+255),b
 10728   000878                     
 10729                           ; BSR set to: 0
 10730                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 10731   000878  0E00               	movlw	0
 10732   00087A  6F92               	movwf	(efgtoa@t+1)& (0+255),b
 10733   00087C  0E00               	movlw	0
 10734   00087E  6F91               	movwf	efgtoa@t& (0+255),b
 10735   000880                     
 10736                           ; BSR set to: 0
 10737                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 10738   000880  0E00               	movlw	0
 10739   000882  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10740   000884  0E00               	movlw	0
 10741   000886  6FA4               	movwf	efgtoa@i& (0+255),b
 10742                           
 10743                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10744   000888  EF2B  F005         	goto	l7368
 10745   00088C                     l7328:
 10746                           
 10747                           ; BSR set to: 0
 10748                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 780:         l = floorf(h/u.f);
 10749   00088C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
 10750   000890  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
 10751   000894  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
 10752   000898  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
 10753   00089C  C0B5  F031         	movff	efgtoa@u,___fldiv@a
 10754   0008A0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
 10755   0008A4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
 10756   0008A8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
 10757   0008AC  EC14  F015         	call	___fldiv	;wreg free
 10758   0008B0  C02D  F046         	movff	?___fldiv,floorf@x
 10759   0008B4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
 10760   0008B8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
 10761   0008BC  C030  F049         	movff	?___fldiv+3,floorf@x+3
 10762   0008C0  EC6E  F019         	call	_floorf	;wreg free
 10763   0008C4  C046  F0AA         	movff	?_floorf,efgtoa@l
 10764   0008C8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
 10765   0008CC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
 10766   0008D0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
 10767                           
 10768                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 781:         d = (int)l > 9 ? 9 : (
      +                          int)l;
 10769   0008D4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10770   0008D8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10771   0008DC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10772   0008E0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10773   0008E4  EC80  F021         	call	___fltol	;wreg free
 10774   0008E8  0100               	movlb	0	; () banked
 10775   0008EA  BF65               	btfsc	(?___fltol+1)& (0+255),7,b
 10776   0008EC  EF83  F004         	goto	u8770
 10777   0008F0  5165               	movf	(?___fltol+1)& (0+255),w,b
 10778   0008F2  E107               	bnz	u8771
 10779   0008F4  0E0A               	movlw	10
 10780   0008F6  5D64               	subwf	?___fltol& (0+255),w,b
 10781   0008F8  B0D8               	btfsc	status,0,c
 10782   0008FA  EF81  F004         	goto	u8771
 10783   0008FE  EF83  F004         	goto	u8770
 10784   000902                     u8771:
 10785   000902  EF93  F004         	goto	l7332
 10786   000906                     u8770:
 10787   000906                     
 10788                           ; BSR set to: 0
 10789   000906  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10790   00090A  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10791   00090E  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10792   000912  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10793   000916  EC80  F021         	call	___fltol	;wreg free
 10794   00091A  C064  F098         	movff	?___fltol,efgtoa@d
 10795   00091E  C065  F099         	movff	?___fltol+1,efgtoa@d+1
 10796   000922  EF97  F004         	goto	l1485
 10797   000926                     l7332:
 10798                           
 10799                           ; BSR set to: 0
 10800   000926  0E00               	movlw	0
 10801   000928  6F99               	movwf	(efgtoa@d+1)& (0+255),b
 10802   00092A  0E09               	movlw	9
 10803   00092C  6F98               	movwf	efgtoa@d& (0+255),b
 10804   00092E                     l1485:
 10805                           
 10806                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 792:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 793:             if (!pp && (ne < 0)) {
 10807   00092E  0100               	movlb	0	; () banked
 10808   000930  5195               	movf	efgtoa@pp& (0+255),w,b
 10809   000932  A4D8               	btfss	status,2,c
 10810   000934  EF9E  F004         	goto	u8781
 10811   000938  EFA0  F004         	goto	u8780
 10812   00093C                     u8781:
 10813   00093C  EFC8  F004         	goto	l7352
 10814   000940                     u8780:
 10815   000940                     
 10816                           ; BSR set to: 0
 10817   000940  BF8E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10818   000942  EFA7  F004         	goto	u8790
 10819   000946  EFA5  F004         	goto	u8791
 10820   00094A                     u8791:
 10821   00094A  EFC8  F004         	goto	l7352
 10822   00094E                     u8790:
 10823   00094E                     
 10824                           ; BSR set to: 0
 10825                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 794:                 dbuf[n++] = '.
      +                          ';
 10826   00094E  0E27               	movlw	low _dbuf
 10827   000950  25B3               	addwf	efgtoa@n& (0+255),w,b
 10828   000952  6ED9               	movwf	fsr2l,c
 10829   000954  0E01               	movlw	high _dbuf
 10830   000956  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10831   000958  6EDA               	movwf	fsr2h,c
 10832   00095A  0E2E               	movlw	46
 10833   00095C  6EDF               	movwf	indf2,c
 10834   00095E                     
 10835                           ; BSR set to: 0
 10836   00095E  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10837   000960  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10838   000962                     
 10839                           ; BSR set to: 0
 10840                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 795:                 --w;
 10841   000962  079E               	decf	efgtoa@w& (0+255),f,b
 10842   000964  A0D8               	btfss	status,0,c
 10843   000966  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10844   000968                     
 10845                           ; BSR set to: 0
 10846                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 796:                 pp = 1;
 10847   000968  0E01               	movlw	1
 10848   00096A  6F95               	movwf	efgtoa@pp& (0+255),b
 10849   00096C  EFC8  F004         	goto	l7352
 10850   000970                     l7344:
 10851                           
 10852                           ; BSR set to: 0
 10853                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 799:                 dbuf[n++] = '0
      +                          ';
 10854   000970  0E27               	movlw	low _dbuf
 10855   000972  25B3               	addwf	efgtoa@n& (0+255),w,b
 10856   000974  6ED9               	movwf	fsr2l,c
 10857   000976  0E01               	movlw	high _dbuf
 10858   000978  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10859   00097A  6EDA               	movwf	fsr2h,c
 10860   00097C  0E30               	movlw	48
 10861   00097E  6EDF               	movwf	indf2,c
 10862   000980                     
 10863                           ; BSR set to: 0
 10864   000980  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10865   000982  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10866   000984                     
 10867                           ; BSR set to: 0
 10868                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 800:                 --w;
 10869   000984  079E               	decf	efgtoa@w& (0+255),f,b
 10870   000986  A0D8               	btfss	status,0,c
 10871   000988  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10872   00098A                     
 10873                           ; BSR set to: 0
 10874                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 801:                 --t;
 10875   00098A  0791               	decf	efgtoa@t& (0+255),f,b
 10876   00098C  A0D8               	btfss	status,0,c
 10877   00098E  0792               	decf	(efgtoa@t+1)& (0+255),f,b
 10878   000990                     l7352:
 10879                           
 10880                           ; BSR set to: 0
 10881                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 798:             while (t) {
 10882   000990  5191               	movf	efgtoa@t& (0+255),w,b
 10883   000992  1192               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10884   000994  A4D8               	btfss	status,2,c
 10885   000996  EFCF  F004         	goto	u8801
 10886   00099A  EFD1  F004         	goto	u8800
 10887   00099E                     u8801:
 10888   00099E  EFB8  F004         	goto	l7344
 10889   0009A2                     u8800:
 10890   0009A2                     
 10891                           ; BSR set to: 0
 10892                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 803:             dbuf[n++] = (char)
      +                          ((int)'0' + d);
 10893   0009A2  0E27               	movlw	low _dbuf
 10894   0009A4  25B3               	addwf	efgtoa@n& (0+255),w,b
 10895   0009A6  6ED9               	movwf	fsr2l,c
 10896   0009A8  0E01               	movlw	high _dbuf
 10897   0009AA  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10898   0009AC  6EDA               	movwf	fsr2h,c
 10899   0009AE  5198               	movf	efgtoa@d& (0+255),w,b
 10900   0009B0  0F30               	addlw	48
 10901   0009B2  6EDF               	movwf	indf2,c
 10902   0009B4                     
 10903                           ; BSR set to: 0
 10904   0009B4  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10905   0009B6  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10906   0009B8                     
 10907                           ; BSR set to: 0
 10908                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 804:             --w;
 10909   0009B8  079E               	decf	efgtoa@w& (0+255),f,b
 10910   0009BA  A0D8               	btfss	status,0,c
 10911   0009BC  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10912   0009BE                     
 10913                           ; BSR set to: 0
 10914                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 805:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 806:         h -= l*u.f;
 10915   0009BE  C0A6  F064         	movff	efgtoa@h,___flsub@b
 10916   0009C2  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
 10917   0009C6  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
 10918   0009CA  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
 10919   0009CE  C0AA  F018         	movff	efgtoa@l,___flmul@a
 10920   0009D2  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
 10921   0009D6  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
 10922   0009DA  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
 10923   0009DE  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10924   0009E2  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10925   0009E6  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10926   0009EA  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10927   0009EE  EC3A  F00D         	call	___flmul	;wreg free
 10928   0009F2  C014  F068         	movff	?___flmul,___flsub@a
 10929   0009F6  C015  F069         	movff	?___flmul+1,___flsub@a+1
 10930   0009FA  C016  F06A         	movff	?___flmul+2,___flsub@a+2
 10931   0009FE  C017  F06B         	movff	?___flmul+3,___flsub@a+3
 10932   000A02  EC05  F028         	call	___flsub	;wreg free
 10933   000A06  C064  F0A6         	movff	?___flsub,efgtoa@h
 10934   000A0A  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
 10935   000A0E  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
 10936   000A12  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
 10937   000A16                     
 10938                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 807:         u.f = u.f/10.0;
 10939   000A16  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10940   000A1A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10941   000A1E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10942   000A22  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10943   000A26  0E00               	movlw	0
 10944   000A28  6E31               	movwf	___fldiv@a^0,c
 10945   000A2A  0E00               	movlw	0
 10946   000A2C  6E32               	movwf	(___fldiv@a+1)^0,c
 10947   000A2E  0E20               	movlw	32
 10948   000A30  6E33               	movwf	(___fldiv@a+2)^0,c
 10949   000A32  0E41               	movlw	65
 10950   000A34  6E34               	movwf	(___fldiv@a+3)^0,c
 10951   000A36  EC14  F015         	call	___fldiv	;wreg free
 10952   000A3A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10953   000A3E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10954   000A42  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10955   000A46  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10956   000A4A                     
 10957                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 808:         --ne;
 10958   000A4A  0100               	movlb	0	; () banked
 10959   000A4C  078D               	decf	efgtoa@ne& (0+255),f,b
 10960   000A4E  A0D8               	btfss	status,0,c
 10961   000A50  078E               	decf	(efgtoa@ne+1)& (0+255),f,b
 10962   000A52                     
 10963                           ; BSR set to: 0
 10964                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 809:         ++i;
 10965   000A52  4BA4               	infsnz	efgtoa@i& (0+255),f,b
 10966   000A54  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
 10967   000A56                     l7368:
 10968                           
 10969                           ; BSR set to: 0
 10970                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10971   000A56  519A               	movf	efgtoa@m& (0+255),w,b
 10972   000A58  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10973   000A5A  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10974   000A5C  0A80               	xorlw	128
 10975   000A5E  6F8B               	movwf	??_efgtoa& (0+255),b
 10976   000A60  519B               	movf	(efgtoa@m+1)& (0+255),w,b
 10977   000A62  0A80               	xorlw	128
 10978   000A64  598B               	subwfb	??_efgtoa& (0+255),w,b
 10979   000A66  B0D8               	btfsc	status,0,c
 10980   000A68  EF38  F005         	goto	u8811
 10981   000A6C  EF3A  F005         	goto	u8810
 10982   000A70                     u8811:
 10983   000A70  EF48  F005         	goto	l7372
 10984   000A74                     u8810:
 10985   000A74                     
 10986                           ; BSR set to: 0
 10987   000A74  BFB4               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10988   000A76  EF46  F005         	goto	u8821
 10989   000A7A  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10990   000A7C  E109               	bnz	u8820
 10991   000A7E  0E4B               	movlw	75
 10992   000A80  5DB3               	subwf	efgtoa@n& (0+255),w,b
 10993   000A82  A0D8               	btfss	status,0,c
 10994   000A84  EF46  F005         	goto	u8821
 10995   000A88  EF48  F005         	goto	u8820
 10996   000A8C                     u8821:
 10997   000A8C  EF46  F004         	goto	l7328
 10998   000A90                     u8820:
 10999   000A90                     l7372:
 11000                           
 11001                           ; BSR set to: 0
 11002                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(dbuf) - 1;
 11003   000A90  0E00               	movlw	0
 11004   000A92  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 11005   000A94  0E4F               	movlw	79
 11006   000A96  6FA4               	movwf	efgtoa@i& (0+255),b
 11007   000A98                     
 11008                           ; BSR set to: 0
 11009                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] = '\0';
 11010   000A98  0E27               	movlw	low _dbuf
 11011   000A9A  25A4               	addwf	efgtoa@i& (0+255),w,b
 11012   000A9C  6ED9               	movwf	fsr2l,c
 11013   000A9E  0E01               	movlw	high _dbuf
 11014   000AA0  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
 11015   000AA2  6EDA               	movwf	fsr2h,c
 11016   000AA4  6ADF               	clrf	indf2,c
 11017   000AA6                     
 11018                           ; BSR set to: 0
 11019                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbuf[i-n], &dbuf[0], 
      +                          (size_t)n);
 11020   000AA6  0E27               	movlw	low _dbuf
 11021   000AA8  6F8B               	movwf	??_efgtoa& (0+255),b
 11022   000AAA  0E01               	movlw	high _dbuf
 11023   000AAC  6F8C               	movwf	(??_efgtoa+1)& (0+255),b
 11024   000AAE  51B3               	movf	efgtoa@n& (0+255),w,b
 11025   000AB0  5F8B               	subwf	??_efgtoa& (0+255),f,b
 11026   000AB2  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 11027   000AB4  5B8C               	subwfb	(??_efgtoa+1)& (0+255),f,b
 11028   000AB6  51A4               	movf	efgtoa@i& (0+255),w,b
 11029   000AB8  258B               	addwf	??_efgtoa& (0+255),w,b
 11030   000ABA  6E06               	movwf	memcpy@d1^0,c
 11031   000ABC  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 11032   000ABE  218C               	addwfc	(??_efgtoa+1)& (0+255),w,b
 11033   000AC0  6E07               	movwf	(memcpy@d1+1)^0,c
 11034   000AC2  0E27               	movlw	low _dbuf
 11035   000AC4  6E08               	movwf	memcpy@s1^0,c
 11036   000AC6  0E01               	movlw	high _dbuf
 11037   000AC8  6E09               	movwf	(memcpy@s1+1)^0,c
 11038   000ACA  C0B3  F00A         	movff	efgtoa@n,memcpy@n
 11039   000ACE  C0B4  F00B         	movff	efgtoa@n+1,memcpy@n+1
 11040   000AD2  ECB8  F027         	call	_memcpy	;wreg free
 11041   000AD6                     
 11042                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 11043   000AD6  0100               	movlb	0	; () banked
 11044   000AD8  51B3               	movf	efgtoa@n& (0+255),w,b
 11045   000ADA  5DA4               	subwf	efgtoa@i& (0+255),w,b
 11046   000ADC  6FB3               	movwf	efgtoa@n& (0+255),b
 11047   000ADE  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 11048   000AE0  59A5               	subwfb	(efgtoa@i+1)& (0+255),w,b
 11049   000AE2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
 11050   000AE4                     
 11051                           ; BSR set to: 0
 11052                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 850:  i = sign == 0 ? 0 : 1;
 11053   000AE4  51AE               	movf	efgtoa@sign& (0+255),w,b
 11054   000AE6  A4D8               	btfss	status,2,c
 11055   000AE8  EF78  F005         	goto	u8831
 11056   000AEC  EF7B  F005         	goto	u8830
 11057   000AF0                     u8831:
 11058   000AF0  0E01               	movlw	1
 11059   000AF2  EF7C  F005         	goto	u8840
 11060   000AF6                     u8830:
 11061   000AF6  0E00               	movlw	0
 11062   000AF8                     u8840:
 11063   000AF8  6FA4               	movwf	efgtoa@i& (0+255),b
 11064   000AFA  6BA5               	clrf	(efgtoa@i+1)& (0+255),b
 11065   000AFC                     
 11066                           ; BSR set to: 0
 11067                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 11068   000AFC  51AE               	movf	efgtoa@sign& (0+255),w,b
 11069   000AFE  B4D8               	btfsc	status,2,c
 11070   000B00  EF84  F005         	goto	u8851
 11071   000B04  EF86  F005         	goto	u8850
 11072   000B08                     u8851:
 11073   000B08  EF91  F005         	goto	l7386
 11074   000B0C                     u8850:
 11075   000B0C                     
 11076                           ; BSR set to: 0
 11077                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] = sign;
 11078   000B0C  07B3               	decf	efgtoa@n& (0+255),f,b
 11079   000B0E  A0D8               	btfss	status,0,c
 11080   000B10  07B4               	decf	(efgtoa@n+1)& (0+255),f,b
 11081   000B12  0E27               	movlw	low _dbuf
 11082   000B14  25B3               	addwf	efgtoa@n& (0+255),w,b
 11083   000B16  6ED9               	movwf	fsr2l,c
 11084   000B18  0E01               	movlw	high _dbuf
 11085   000B1A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11086   000B1C  6EDA               	movwf	fsr2h,c
 11087   000B1E  C0AE  FFDF         	movff	efgtoa@sign,indf2
 11088   000B22                     l7386:
 11089                           
 11090                           ; BSR set to: 0
 11091                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 11092   000B22  51A4               	movf	efgtoa@i& (0+255),w,b
 11093   000B24  5F9E               	subwf	efgtoa@w& (0+255),f,b
 11094   000B26  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 11095   000B28  5B9F               	subwfb	(efgtoa@w+1)& (0+255),f,b
 11096   000B2A                     
 11097                           ; BSR set to: 0
 11098                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 867:     return (void) pad(fp, &dbu
      +                          f[n], w);
 11099   000B2A  C084  F017         	movff	efgtoa@fp,pad@fp
 11100   000B2E  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
 11101   000B32  0E27               	movlw	low _dbuf
 11102   000B34  25B3               	addwf	efgtoa@n& (0+255),w,b
 11103   000B36  6E19               	movwf	pad@buf^0,c
 11104   000B38  0E01               	movlw	high _dbuf
 11105   000B3A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11106   000B3C  6E1A               	movwf	(pad@buf+1)^0,c
 11107   000B3E  C09E  F01B         	movff	efgtoa@w,pad@p
 11108   000B42  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
 11109   000B46  EC0E  F026         	call	_pad	;wreg free
 11110   000B4A                     l1452:
 11111   000B4A  0012               	return		;funcret
 11112   000B4C                     __end_of_efgtoa:
 11113                           	callstack 0
 11114                           
 11115 ;; *************** function _strcpy *****************
 11116 ;; Defined at:
 11117 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strcpy.c"
 11118 ;; Parameters:    Size  Location     Type
 11119 ;;  dest            2    5[COMRAM] PTR unsigned char 
 11120 ;;		 -> dbuf(80), 
 11121 ;;  src             2    7[COMRAM] PTR const unsigned char 
 11122 ;;		 -> STR_44(4), STR_41(4), 
 11123 ;; Auto vars:     Size  Location     Type
 11124 ;;  d               2    9[COMRAM] PTR unsigned char 
 11125 ;;		 -> dbuf(80), 
 11126 ;; Return value:  Size  Location     Type
 11127 ;;                  2    5[COMRAM] PTR unsigned char 
 11128 ;; Registers used:
 11129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11130 ;; Tracked objects:
 11131 ;;		On entry : 0/0
 11132 ;;		On exit  : 0/0
 11133 ;;		Unchanged: 0/0
 11134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11135 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11136 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11138 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11139 ;;Total ram usage:        6 bytes
 11140 ;; Hardware stack levels used: 1
 11141 ;; Hardware stack levels required when called: 1
 11142 ;; This function calls:
 11143 ;;		Nothing
 11144 ;; This function is called by:
 11145 ;;		_efgtoa
 11146 ;; This function uses a non-reentrant model
 11147 ;;
 11148                           
 11149                           	psect	text37
 11150   005154                     __ptext37:
 11151                           	callstack 0
 11152   005154                     _strcpy:
 11153                           	callstack 24
 11154   005154  C006  F00A         	movff	strcpy@dest,strcpy@d
 11155   005158  C007  F00B         	movff	strcpy@dest+1,strcpy@d+1
 11156   00515C                     l7076:
 11157   00515C  C008  FFF6         	movff	strcpy@src,tblptrl
 11158   005160  C009  FFF7         	movff	strcpy@src+1,tblptrh
 11159   005164  4A08               	infsnz	strcpy@src^0,f,c
 11160   005166  2A09               	incf	(strcpy@src+1)^0,f,c
 11161   005168                     	if	0	;tblptru may be non-zero
 11162   005168                     	endif
 11163   005168                     	if	0	;tblptru may be non-zero
 11164   005168                     	endif
 11165   005168  C00A  FFD9         	movff	strcpy@d,fsr2l
 11166   00516C  C00B  FFDA         	movff	strcpy@d+1,fsr2h
 11167   005170  4A0A               	infsnz	strcpy@d^0,f,c
 11168   005172  2A0B               	incf	(strcpy@d+1)^0,f,c
 11169   005174  0008               	tblrd		*
 11170   005176  CFF5 FFDF          	movff	tablat,indf2
 11171   00517A  50DF               	movf	indf2,w,c
 11172   00517C  A4D8               	btfss	status,2,c
 11173   00517E  EFC3  F028         	goto	u8321
 11174   005182  EFC5  F028         	goto	u8320
 11175   005186                     u8321:
 11176   005186  EFAE  F028         	goto	l7076
 11177   00518A                     u8320:
 11178   00518A  0012               	return		;funcret
 11179   00518C                     __end_of_strcpy:
 11180                           	callstack 0
 11181                           
 11182 ;; *************** function _memcpy *****************
 11183 ;; Defined at:
 11184 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\memcpy.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;  d1              2    5[COMRAM] PTR void 
 11187 ;;		 -> dbuf(80), 
 11188 ;;  s1              2    7[COMRAM] PTR const void 
 11189 ;;		 -> dbuf(80), 
 11190 ;;  n               2    9[COMRAM] unsigned int 
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;  s               2   14[COMRAM] PTR const unsigned char 
 11193 ;;		 -> dbuf(80), 
 11194 ;;  d               2   12[COMRAM] PTR unsigned char 
 11195 ;;		 -> dbuf(80), 
 11196 ;;  tmp             1   11[COMRAM] unsigned char 
 11197 ;; Return value:  Size  Location     Type
 11198 ;;                  2    5[COMRAM] PTR void 
 11199 ;; Registers used:
 11200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11201 ;; Tracked objects:
 11202 ;;		On entry : 0/0
 11203 ;;		On exit  : 0/0
 11204 ;;		Unchanged: 0/0
 11205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11206 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11207 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11209 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11210 ;;Total ram usage:       11 bytes
 11211 ;; Hardware stack levels used: 1
 11212 ;; Hardware stack levels required when called: 1
 11213 ;; This function calls:
 11214 ;;		Nothing
 11215 ;; This function is called by:
 11216 ;;		_efgtoa
 11217 ;; This function uses a non-reentrant model
 11218 ;;
 11219                           
 11220                           	psect	text38
 11221   004F70                     __ptext38:
 11222                           	callstack 0
 11223   004F70                     _memcpy:
 11224                           	callstack 24
 11225   004F70  C008  F00F         	movff	memcpy@s1,memcpy@s
 11226   004F74  C009  F010         	movff	memcpy@s1+1,memcpy@s+1
 11227   004F78  C006  F00D         	movff	memcpy@d1,memcpy@d
 11228   004F7C  C007  F00E         	movff	memcpy@d1+1,memcpy@d+1
 11229   004F80  EFD2  F027         	goto	l7124
 11230   004F84                     l7116:
 11231   004F84  C00F  FFD9         	movff	memcpy@s,fsr2l
 11232   004F88  C010  FFDA         	movff	memcpy@s+1,fsr2h
 11233   004F8C  50DF               	movf	indf2,w,c
 11234   004F8E  6E0C               	movwf	memcpy@tmp^0,c
 11235   004F90  4A0F               	infsnz	memcpy@s^0,f,c
 11236   004F92  2A10               	incf	(memcpy@s+1)^0,f,c
 11237   004F94  C00D  FFD9         	movff	memcpy@d,fsr2l
 11238   004F98  C00E  FFDA         	movff	memcpy@d+1,fsr2h
 11239   004F9C  C00C  FFDF         	movff	memcpy@tmp,indf2
 11240   004FA0  4A0D               	infsnz	memcpy@d^0,f,c
 11241   004FA2  2A0E               	incf	(memcpy@d+1)^0,f,c
 11242   004FA4                     l7124:
 11243   004FA4  060A               	decf	memcpy@n^0,f,c
 11244   004FA6  A0D8               	btfss	status,0,c
 11245   004FA8  060B               	decf	(memcpy@n+1)^0,f,c
 11246   004FAA  280A               	incf	memcpy@n^0,w,c
 11247   004FAC  E106               	bnz	u8441
 11248   004FAE  280B               	incf	(memcpy@n+1)^0,w,c
 11249   004FB0  A4D8               	btfss	status,2,c
 11250   004FB2  EFDD  F027         	goto	u8441
 11251   004FB6  EFDF  F027         	goto	u8440
 11252   004FBA                     u8441:
 11253   004FBA  EFC2  F027         	goto	l7116
 11254   004FBE                     u8440:
 11255   004FBE  0012               	return		;funcret
 11256   004FC0                     __end_of_memcpy:
 11257                           	callstack 0
 11258                           
 11259 ;; *************** function _labs *****************
 11260 ;; Defined at:
 11261 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\labs.c"
 11262 ;; Parameters:    Size  Location     Type
 11263 ;;  a               4    5[COMRAM] long 
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;		None
 11266 ;; Return value:  Size  Location     Type
 11267 ;;                  4    5[COMRAM] long 
 11268 ;; Registers used:
 11269 ;;		wreg, status,2, status,0
 11270 ;; Tracked objects:
 11271 ;;		On entry : 0/0
 11272 ;;		On exit  : 0/0
 11273 ;;		Unchanged: 0/0
 11274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11277 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11278 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11279 ;;Total ram usage:        8 bytes
 11280 ;; Hardware stack levels used: 1
 11281 ;; Hardware stack levels required when called: 1
 11282 ;; This function calls:
 11283 ;;		Nothing
 11284 ;; This function is called by:
 11285 ;;		_efgtoa
 11286 ;; This function uses a non-reentrant model
 11287 ;;
 11288                           
 11289                           	psect	text39
 11290   004EC6                     __ptext39:
 11291                           	callstack 0
 11292   004EC6                     _labs:
 11293                           	callstack 24
 11294   004EC6  BE09               	btfsc	(labs@a+3)^0,7,c
 11295   004EC8  EF68  F027         	goto	u8331
 11296   004ECC  EF6A  F027         	goto	u8330
 11297   004ED0                     u8331:
 11298   004ED0  EF74  F027         	goto	l7082
 11299   004ED4                     u8330:
 11300   004ED4  C006  F006         	movff	labs@a,?_labs
 11301   004ED8  C007  F007         	movff	labs@a+1,?_labs+1
 11302   004EDC  C008  F008         	movff	labs@a+2,?_labs+2
 11303   004EE0  C009  F009         	movff	labs@a+3,?_labs+3
 11304   004EE4  EF8D  F027         	goto	l1634
 11305   004EE8                     l7082:
 11306   004EE8  C006  F00A         	movff	labs@a,??_labs
 11307   004EEC  C007  F00B         	movff	labs@a+1,??_labs+1
 11308   004EF0  C008  F00C         	movff	labs@a+2,??_labs+2
 11309   004EF4  C009  F00D         	movff	labs@a+3,??_labs+3
 11310   004EF8  1E0A               	comf	??_labs^0,f,c
 11311   004EFA  1E0B               	comf	(??_labs+1)^0,f,c
 11312   004EFC  1E0C               	comf	(??_labs+2)^0,f,c
 11313   004EFE  1E0D               	comf	(??_labs+3)^0,f,c
 11314   004F00  2A0A               	incf	??_labs^0,f,c
 11315   004F02  0E00               	movlw	0
 11316   004F04  220B               	addwfc	(??_labs+1)^0,f,c
 11317   004F06  220C               	addwfc	(??_labs+2)^0,f,c
 11318   004F08  220D               	addwfc	(??_labs+3)^0,f,c
 11319   004F0A  C00A  F006         	movff	??_labs,?_labs
 11320   004F0E  C00B  F007         	movff	??_labs+1,?_labs+1
 11321   004F12  C00C  F008         	movff	??_labs+2,?_labs+2
 11322   004F16  C00D  F009         	movff	??_labs+3,?_labs+3
 11323   004F1A                     l1634:
 11324   004F1A  0012               	return		;funcret
 11325   004F1C                     __end_of_labs:
 11326                           	callstack 0
 11327                           
 11328 ;; *************** function _floorf *****************
 11329 ;; Defined at:
 11330 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\floorf.c"
 11331 ;; Parameters:    Size  Location     Type
 11332 ;;  x               4   69[COMRAM] float 
 11333 ;; Auto vars:     Size  Location     Type
 11334 ;;  u               4    6[BANK0 ] struct .
 11335 ;;  m               4    0[BANK0 ] unsigned long 
 11336 ;;  e               2    4[BANK0 ] int 
 11337 ;; Return value:  Size  Location     Type
 11338 ;;                  4   69[COMRAM] float 
 11339 ;; Registers used:
 11340 ;;		wreg, status,2, status,0
 11341 ;; Tracked objects:
 11342 ;;		On entry : 0/0
 11343 ;;		On exit  : 0/0
 11344 ;;		Unchanged: 0/0
 11345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11347 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11348 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11349 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11350 ;;Total ram usage:       20 bytes
 11351 ;; Hardware stack levels used: 1
 11352 ;; Hardware stack levels required when called: 1
 11353 ;; This function calls:
 11354 ;;		Nothing
 11355 ;; This function is called by:
 11356 ;;		_efgtoa
 11357 ;; This function uses a non-reentrant model
 11358 ;;
 11359                           
 11360                           	psect	text40
 11361   0032DC                     __ptext40:
 11362                           	callstack 0
 11363   0032DC                     _floorf:
 11364                           	callstack 24
 11365   0032DC  C119  F066         	movff	floorf@F521,floorf@u
 11366   0032E0  C11A  F067         	movff	floorf@F521+1,floorf@u+1
 11367   0032E4  C11B  F068         	movff	floorf@F521+2,floorf@u+2
 11368   0032E8  C11C  F069         	movff	floorf@F521+3,floorf@u+3
 11369   0032EC  C046  F066         	movff	floorf@x,floorf@u
 11370   0032F0  C047  F067         	movff	floorf@x+1,floorf@u+1
 11371   0032F4  C048  F068         	movff	floorf@x+2,floorf@u+2
 11372   0032F8  C049  F069         	movff	floorf@x+3,floorf@u+3
 11373   0032FC  0E81               	movlw	129
 11374   0032FE  6E4A               	movwf	??_floorf^0,c
 11375   003300  0EFF               	movlw	255
 11376   003302  6E4B               	movwf	(??_floorf+1)^0,c
 11377   003304  C066  F04C         	movff	floorf@u,??_floorf+2
 11378   003308  C067  F04D         	movff	floorf@u+1,??_floorf+3
 11379   00330C  C068  F04E         	movff	floorf@u+2,??_floorf+4
 11380   003310  C069  F04F         	movff	floorf@u+3,??_floorf+5
 11381   003314  0E18               	movlw	24
 11382   003316  EF92  F019         	goto	u8340
 11383   00331A                     u8345:
 11384   00331A  90D8               	bcf	status,0,c
 11385   00331C  324F               	rrcf	(??_floorf+5)^0,f,c
 11386   00331E  324E               	rrcf	(??_floorf+4)^0,f,c
 11387   003320  324D               	rrcf	(??_floorf+3)^0,f,c
 11388   003322  324C               	rrcf	(??_floorf+2)^0,f,c
 11389   003324                     u8340:
 11390   003324  2EE8               	decfsz	wreg,f,c
 11391   003326  EF8D  F019         	goto	u8345
 11392   00332A  504C               	movf	(??_floorf+2)^0,w,c
 11393   00332C  244A               	addwf	??_floorf^0,w,c
 11394   00332E  0100               	movlb	0	; () banked
 11395   003330  6F64               	movwf	floorf@e& (0+255),b
 11396   003332  0E00               	movlw	0
 11397   003334  204B               	addwfc	(??_floorf+1)^0,w,c
 11398   003336  6F65               	movwf	(floorf@e+1)& (0+255),b
 11399   003338  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 11400   00333A  EFA8  F019         	goto	u8351
 11401   00333E  5165               	movf	(floorf@e+1)& (0+255),w,b
 11402   003340  E109               	bnz	u8350
 11403   003342  0E17               	movlw	23
 11404   003344  5D64               	subwf	floorf@e& (0+255),w,b
 11405   003346  A0D8               	btfss	status,0,c
 11406   003348  EFA8  F019         	goto	u8351
 11407   00334C  EFAA  F019         	goto	u8350
 11408   003350                     u8351:
 11409   003350  EFB4  F019         	goto	l7092
 11410   003354                     u8350:
 11411   003354                     l7090:
 11412                           
 11413                           ; BSR set to: 0
 11414   003354  C046  F046         	movff	floorf@x,?_floorf
 11415   003358  C047  F047         	movff	floorf@x+1,?_floorf+1
 11416   00335C  C048  F048         	movff	floorf@x+2,?_floorf+2
 11417   003360  C049  F049         	movff	floorf@x+3,?_floorf+3
 11418   003364  EF78  F01A         	goto	l1620
 11419   003368                     l7092:
 11420                           
 11421                           ; BSR set to: 0
 11422   003368  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 11423   00336A  EFB9  F019         	goto	u8361
 11424   00336E  EFBB  F019         	goto	u8360
 11425   003372                     u8361:
 11426   003372  EF2C  F01A         	goto	l7102
 11427   003376                     u8360:
 11428   003376                     
 11429                           ; BSR set to: 0
 11430   003376  C064  F04A         	movff	floorf@e,??_floorf
 11431   00337A  0EFF               	movlw	255
 11432   00337C  6E4B               	movwf	(??_floorf+1)^0,c
 11433   00337E  0EFF               	movlw	255
 11434   003380  6E4C               	movwf	(??_floorf+2)^0,c
 11435   003382  0E7F               	movlw	127
 11436   003384  6E4D               	movwf	(??_floorf+3)^0,c
 11437   003386  0E00               	movlw	0
 11438   003388  6E4E               	movwf	(??_floorf+4)^0,c
 11439   00338A                     u8375:
 11440   00338A  664A               	tstfsz	??_floorf^0,c
 11441   00338C  EFCA  F019         	goto	u8376
 11442   003390  EFD2  F019         	goto	u8377
 11443   003394                     u8376:
 11444   003394  344E               	rlcf	(??_floorf+4)^0,w,c
 11445   003396  324E               	rrcf	(??_floorf+4)^0,f,c
 11446   003398  324D               	rrcf	(??_floorf+3)^0,f,c
 11447   00339A  324C               	rrcf	(??_floorf+2)^0,f,c
 11448   00339C  324B               	rrcf	(??_floorf+1)^0,f,c
 11449   00339E  2E4A               	decfsz	??_floorf^0,f,c
 11450   0033A0  EFC5  F019         	goto	u8375
 11451   0033A4                     u8377:
 11452   0033A4  C04B  F060         	movff	??_floorf+1,floorf@m
 11453   0033A8  C04C  F061         	movff	??_floorf+2,floorf@m+1
 11454   0033AC  C04D  F062         	movff	??_floorf+3,floorf@m+2
 11455   0033B0  C04E  F063         	movff	??_floorf+4,floorf@m+3
 11456   0033B4  0100               	movlb	0	; () banked
 11457   0033B6  5160               	movf	floorf@m& (0+255),w,b
 11458   0033B8  1566               	andwf	floorf@u& (0+255),w,b
 11459   0033BA  6E4A               	movwf	??_floorf^0,c
 11460   0033BC  5161               	movf	(floorf@m+1)& (0+255),w,b
 11461   0033BE  1567               	andwf	(floorf@u+1)& (0+255),w,b
 11462   0033C0  6E4B               	movwf	(??_floorf+1)^0,c
 11463   0033C2  5162               	movf	(floorf@m+2)& (0+255),w,b
 11464   0033C4  1568               	andwf	(floorf@u+2)& (0+255),w,b
 11465   0033C6  6E4C               	movwf	(??_floorf+2)^0,c
 11466   0033C8  5163               	movf	(floorf@m+3)& (0+255),w,b
 11467   0033CA  1569               	andwf	(floorf@u+3)& (0+255),w,b
 11468   0033CC  6E4D               	movwf	(??_floorf+3)^0,c
 11469   0033CE  504A               	movf	??_floorf^0,w,c
 11470   0033D0  104B               	iorwf	(??_floorf+1)^0,w,c
 11471   0033D2  104C               	iorwf	(??_floorf+2)^0,w,c
 11472   0033D4  104D               	iorwf	(??_floorf+3)^0,w,c
 11473   0033D6  A4D8               	btfss	status,2,c
 11474   0033D8  EFF0  F019         	goto	u8381
 11475   0033DC  EFF2  F019         	goto	u8380
 11476   0033E0                     u8381:
 11477   0033E0  EFF4  F019         	goto	l7098
 11478   0033E4                     u8380:
 11479   0033E4  EFAA  F019         	goto	l7090
 11480   0033E8                     l7098:
 11481                           
 11482                           ; BSR set to: 0
 11483   0033E8  C066  F04A         	movff	floorf@u,??_floorf
 11484   0033EC  C067  F04B         	movff	floorf@u+1,??_floorf+1
 11485   0033F0  C068  F04C         	movff	floorf@u+2,??_floorf+2
 11486   0033F4  C069  F04D         	movff	floorf@u+3,??_floorf+3
 11487   0033F8  0E20               	movlw	32
 11488   0033FA  EF04  F01A         	goto	u8390
 11489   0033FE                     u8395:
 11490   0033FE  90D8               	bcf	status,0,c
 11491   003400  324D               	rrcf	(??_floorf+3)^0,f,c
 11492   003402  324C               	rrcf	(??_floorf+2)^0,f,c
 11493   003404  324B               	rrcf	(??_floorf+1)^0,f,c
 11494   003406  324A               	rrcf	??_floorf^0,f,c
 11495   003408                     u8390:
 11496   003408  2EE8               	decfsz	wreg,f,c
 11497   00340A  EFFF  F019         	goto	u8395
 11498   00340E  504A               	movf	??_floorf^0,w,c
 11499   003410  104B               	iorwf	(??_floorf+1)^0,w,c
 11500   003412  104C               	iorwf	(??_floorf+2)^0,w,c
 11501   003414  104D               	iorwf	(??_floorf+3)^0,w,c
 11502   003416  B4D8               	btfsc	status,2,c
 11503   003418  EF10  F01A         	goto	u8401
 11504   00341C  EF12  F01A         	goto	u8400
 11505   003420                     u8401:
 11506   003420  EF1A  F01A         	goto	l1623
 11507   003424                     u8400:
 11508   003424                     
 11509                           ; BSR set to: 0
 11510   003424  5160               	movf	floorf@m& (0+255),w,b
 11511   003426  2766               	addwf	floorf@u& (0+255),f,b
 11512   003428  5161               	movf	(floorf@m+1)& (0+255),w,b
 11513   00342A  2367               	addwfc	(floorf@u+1)& (0+255),f,b
 11514   00342C  5162               	movf	(floorf@m+2)& (0+255),w,b
 11515   00342E  2368               	addwfc	(floorf@u+2)& (0+255),f,b
 11516   003430  5163               	movf	(floorf@m+3)& (0+255),w,b
 11517   003432  2369               	addwfc	(floorf@u+3)& (0+255),f,b
 11518   003434                     l1623:
 11519                           
 11520                           ; BSR set to: 0
 11521   003434  1D60               	comf	floorf@m& (0+255),w,b
 11522   003436  6E4A               	movwf	??_floorf^0,c
 11523   003438  1D61               	comf	(floorf@m+1)& (0+255),w,b
 11524   00343A  6E4B               	movwf	(??_floorf+1)^0,c
 11525   00343C  1D62               	comf	(floorf@m+2)& (0+255),w,b
 11526   00343E  6E4C               	movwf	(??_floorf+2)^0,c
 11527   003440  1D63               	comf	(floorf@m+3)& (0+255),w,b
 11528   003442  6E4D               	movwf	(??_floorf+3)^0,c
 11529   003444  504A               	movf	??_floorf^0,w,c
 11530   003446  1766               	andwf	floorf@u& (0+255),f,b
 11531   003448  504B               	movf	(??_floorf+1)^0,w,c
 11532   00344A  1767               	andwf	(floorf@u+1)& (0+255),f,b
 11533   00344C  504C               	movf	(??_floorf+2)^0,w,c
 11534   00344E  1768               	andwf	(floorf@u+2)& (0+255),f,b
 11535   003450  504D               	movf	(??_floorf+3)^0,w,c
 11536   003452  1769               	andwf	(floorf@u+3)& (0+255),f,b
 11537   003454  EF70  F01A         	goto	l7110
 11538   003458                     l7102:
 11539                           
 11540                           ; BSR set to: 0
 11541   003458  C066  F04A         	movff	floorf@u,??_floorf
 11542   00345C  C067  F04B         	movff	floorf@u+1,??_floorf+1
 11543   003460  C068  F04C         	movff	floorf@u+2,??_floorf+2
 11544   003464  C069  F04D         	movff	floorf@u+3,??_floorf+3
 11545   003468  0E20               	movlw	32
 11546   00346A  EF3C  F01A         	goto	u8410
 11547   00346E                     u8415:
 11548   00346E  90D8               	bcf	status,0,c
 11549   003470  324D               	rrcf	(??_floorf+3)^0,f,c
 11550   003472  324C               	rrcf	(??_floorf+2)^0,f,c
 11551   003474  324B               	rrcf	(??_floorf+1)^0,f,c
 11552   003476  324A               	rrcf	??_floorf^0,f,c
 11553   003478                     u8410:
 11554   003478  2EE8               	decfsz	wreg,f,c
 11555   00347A  EF37  F01A         	goto	u8415
 11556   00347E  504A               	movf	??_floorf^0,w,c
 11557   003480  104B               	iorwf	(??_floorf+1)^0,w,c
 11558   003482  104C               	iorwf	(??_floorf+2)^0,w,c
 11559   003484  104D               	iorwf	(??_floorf+3)^0,w,c
 11560   003486  A4D8               	btfss	status,2,c
 11561   003488  EF48  F01A         	goto	u8421
 11562   00348C  EF4A  F01A         	goto	u8420
 11563   003490                     u8421:
 11564   003490  EF54  F01A         	goto	l7106
 11565   003494                     u8420:
 11566   003494                     
 11567                           ; BSR set to: 0
 11568   003494  0E00               	movlw	0
 11569   003496  6F66               	movwf	floorf@u& (0+255),b
 11570   003498  0E00               	movlw	0
 11571   00349A  6F67               	movwf	(floorf@u+1)& (0+255),b
 11572   00349C  0E00               	movlw	0
 11573   00349E  6F68               	movwf	(floorf@u+2)& (0+255),b
 11574   0034A0  0E00               	movlw	0
 11575   0034A2  6F69               	movwf	(floorf@u+3)& (0+255),b
 11576   0034A4  EF70  F01A         	goto	l7110
 11577   0034A8                     l7106:
 11578                           
 11579                           ; BSR set to: 0
 11580   0034A8  90D8               	bcf	status,0,c
 11581   0034AA  3566               	rlcf	floorf@u& (0+255),w,b
 11582   0034AC  6E4A               	movwf	??_floorf^0,c
 11583   0034AE  3567               	rlcf	(floorf@u+1)& (0+255),w,b
 11584   0034B0  6E4B               	movwf	(??_floorf+1)^0,c
 11585   0034B2  3568               	rlcf	(floorf@u+2)& (0+255),w,b
 11586   0034B4  6E4C               	movwf	(??_floorf+2)^0,c
 11587   0034B6  3569               	rlcf	(floorf@u+3)& (0+255),w,b
 11588   0034B8  6E4D               	movwf	(??_floorf+3)^0,c
 11589   0034BA  504A               	movf	??_floorf^0,w,c
 11590   0034BC  104B               	iorwf	(??_floorf+1)^0,w,c
 11591   0034BE  104C               	iorwf	(??_floorf+2)^0,w,c
 11592   0034C0  104D               	iorwf	(??_floorf+3)^0,w,c
 11593   0034C2  B4D8               	btfsc	status,2,c
 11594   0034C4  EF66  F01A         	goto	u8431
 11595   0034C8  EF68  F01A         	goto	u8430
 11596   0034CC                     u8431:
 11597   0034CC  EF70  F01A         	goto	l7110
 11598   0034D0                     u8430:
 11599   0034D0                     
 11600                           ; BSR set to: 0
 11601   0034D0  0E00               	movlw	0
 11602   0034D2  6F66               	movwf	floorf@u& (0+255),b
 11603   0034D4  0E00               	movlw	0
 11604   0034D6  6F67               	movwf	(floorf@u+1)& (0+255),b
 11605   0034D8  0E80               	movlw	128
 11606   0034DA  6F68               	movwf	(floorf@u+2)& (0+255),b
 11607   0034DC  0EBF               	movlw	191
 11608   0034DE  6F69               	movwf	(floorf@u+3)& (0+255),b
 11609   0034E0                     l7110:
 11610                           
 11611                           ; BSR set to: 0
 11612   0034E0  C066  F046         	movff	floorf@u,?_floorf
 11613   0034E4  C067  F047         	movff	floorf@u+1,?_floorf+1
 11614   0034E8  C068  F048         	movff	floorf@u+2,?_floorf+2
 11615   0034EC  C069  F049         	movff	floorf@u+3,?_floorf+3
 11616   0034F0                     l1620:
 11617                           
 11618                           ; BSR set to: 0
 11619   0034F0  0012               	return		;funcret
 11620   0034F2                     __end_of_floorf:
 11621                           	callstack 0
 11622                           
 11623 ;; *************** function ___fpclassifyf *****************
 11624 ;; Defined at:
 11625 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__fpclassifyf.c"
 11626 ;; Parameters:    Size  Location     Type
 11627 ;;  x               4    5[COMRAM] float 
 11628 ;; Auto vars:     Size  Location     Type
 11629 ;;  u               4   15[COMRAM] struct .
 11630 ;;  e               2   13[COMRAM] int 
 11631 ;; Return value:  Size  Location     Type
 11632 ;;                  2    5[COMRAM] int 
 11633 ;; Registers used:
 11634 ;;		wreg, status,2, status,0
 11635 ;; Tracked objects:
 11636 ;;		On entry : 0/0
 11637 ;;		On exit  : 0/0
 11638 ;;		Unchanged: 0/0
 11639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11641 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11642 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11643 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11644 ;;Total ram usage:       14 bytes
 11645 ;; Hardware stack levels used: 1
 11646 ;; Hardware stack levels required when called: 1
 11647 ;; This function calls:
 11648 ;;		Nothing
 11649 ;; This function is called by:
 11650 ;;		_efgtoa
 11651 ;; This function uses a non-reentrant model
 11652 ;;
 11653                           
 11654                           	psect	text41
 11655   00450C                     __ptext41:
 11656                           	callstack 0
 11657   00450C                     ___fpclassifyf:
 11658                           	callstack 24
 11659   00450C  C11D  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
 11660   004510  C11E  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 11661   004514  C11F  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 11662   004518  C120  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 11663   00451C  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 11664   004520  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11665   004524  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11666   004528  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11667   00452C  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11668   004530  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11669   004534  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11670   004538  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11671   00453C  0E18               	movlw	24
 11672   00453E  EFA6  F022         	goto	u8250
 11673   004542                     u8255:
 11674   004542  90D8               	bcf	status,0,c
 11675   004544  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 11676   004546  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 11677   004548  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 11678   00454A  320A               	rrcf	??___fpclassifyf^0,f,c
 11679   00454C                     u8250:
 11680   00454C  2EE8               	decfsz	wreg,f,c
 11681   00454E  EFA1  F022         	goto	u8255
 11682   004552  500A               	movf	??___fpclassifyf^0,w,c
 11683   004554  6E0E               	movwf	___fpclassifyf@e^0,c
 11684   004556  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 11685   004558  500E               	movf	___fpclassifyf@e^0,w,c
 11686   00455A  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11687   00455C  A4D8               	btfss	status,2,c
 11688   00455E  EFB3  F022         	goto	u8261
 11689   004562  EFB5  F022         	goto	u8260
 11690   004566                     u8261:
 11691   004566  EFD5  F022         	goto	l7064
 11692   00456A                     u8260:
 11693   00456A  90D8               	bcf	status,0,c
 11694   00456C  3410               	rlcf	___fpclassifyf@u^0,w,c
 11695   00456E  6E0A               	movwf	??___fpclassifyf^0,c
 11696   004570  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11697   004572  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 11698   004574  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11699   004576  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 11700   004578  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11701   00457A  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 11702   00457C  500A               	movf	??___fpclassifyf^0,w,c
 11703   00457E  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11704   004580  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11705   004582  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11706   004584  A4D8               	btfss	status,2,c
 11707   004586  EFC7  F022         	goto	u8271
 11708   00458A  EFC9  F022         	goto	u8270
 11709   00458E                     u8271:
 11710   00458E  EFCF  F022         	goto	l7060
 11711   004592                     u8270:
 11712   004592  0E00               	movlw	0
 11713   004594  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11714   004596  0E02               	movlw	2
 11715   004598  6E06               	movwf	?___fpclassifyf^0,c
 11716   00459A  EF04  F023         	goto	l1606
 11717   00459E                     l7060:
 11718   00459E  0E00               	movlw	0
 11719   0045A0  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11720   0045A2  0E03               	movlw	3
 11721   0045A4  6E06               	movwf	?___fpclassifyf^0,c
 11722   0045A6  EF04  F023         	goto	l1606
 11723   0045AA                     l7064:
 11724   0045AA  280E               	incf	___fpclassifyf@e^0,w,c
 11725   0045AC  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11726   0045AE  A4D8               	btfss	status,2,c
 11727   0045B0  EFDC  F022         	goto	u8281
 11728   0045B4  EFDE  F022         	goto	u8280
 11729   0045B8                     u8281:
 11730   0045B8  EF00  F023         	goto	l7070
 11731   0045BC                     u8280:
 11732   0045BC  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11733   0045C0  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11734   0045C4  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11735   0045C8  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11736   0045CC  0E09               	movlw	9
 11737   0045CE                     u8295:
 11738   0045CE  90D8               	bcf	status,0,c
 11739   0045D0  360A               	rlcf	??___fpclassifyf^0,f,c
 11740   0045D2  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 11741   0045D4  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 11742   0045D6  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 11743   0045D8  2EE8               	decfsz	wreg,f,c
 11744   0045DA  EFE7  F022         	goto	u8295
 11745   0045DE  500A               	movf	??___fpclassifyf^0,w,c
 11746   0045E0  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11747   0045E2  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11748   0045E4  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11749   0045E6  B4D8               	btfsc	status,2,c
 11750   0045E8  EFF8  F022         	goto	u8301
 11751   0045EC  EFFB  F022         	goto	u8300
 11752   0045F0                     u8301:
 11753   0045F0  0E01               	movlw	1
 11754   0045F2  EFFC  F022         	goto	u8310
 11755   0045F6                     u8300:
 11756   0045F6  0E00               	movlw	0
 11757   0045F8                     u8310:
 11758   0045F8  6E06               	movwf	?___fpclassifyf^0,c
 11759   0045FA  6A07               	clrf	(?___fpclassifyf+1)^0,c
 11760   0045FC  EF04  F023         	goto	l1606
 11761   004600                     l7070:
 11762   004600  0E00               	movlw	0
 11763   004602  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11764   004604  0E04               	movlw	4
 11765   004606  6E06               	movwf	?___fpclassifyf^0,c
 11766   004608                     l1606:
 11767   004608  0012               	return		;funcret
 11768   00460A                     __end_of___fpclassifyf:
 11769                           	callstack 0
 11770                           
 11771 ;; *************** function ___fltol *****************
 11772 ;; Defined at:
 11773 ;;		line 43 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fltol.c"
 11774 ;; Parameters:    Size  Location     Type
 11775 ;;  f1              4    4[BANK0 ] int 
 11776 ;; Auto vars:     Size  Location     Type
 11777 ;;  exp1            1   82[COMRAM] unsigned char 
 11778 ;;  sign1           1   81[COMRAM] unsigned char 
 11779 ;; Return value:  Size  Location     Type
 11780 ;;                  4    4[BANK0 ] long 
 11781 ;; Registers used:
 11782 ;;		wreg, status,2, status,0
 11783 ;; Tracked objects:
 11784 ;;		On entry : 0/0
 11785 ;;		On exit  : 0/0
 11786 ;;		Unchanged: 0/0
 11787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11788 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11790 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11791 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11792 ;;Total ram usage:       10 bytes
 11793 ;; Hardware stack levels used: 1
 11794 ;; Hardware stack levels required when called: 1
 11795 ;; This function calls:
 11796 ;;		Nothing
 11797 ;; This function is called by:
 11798 ;;		_runDAC
 11799 ;;		_efgtoa
 11800 ;;		___rem_pio2f
 11801 ;; This function uses a non-reentrant model
 11802 ;;
 11803                           
 11804                           	psect	text42
 11805   004300                     __ptext42:
 11806                           	callstack 0
 11807   004300                     ___fltol:
 11808                           	callstack 24
 11809   004300  0100               	movlb	0	; () banked
 11810   004302  3566               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11811   004304  3567               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11812   004306  6E53               	movwf	___fltol@exp1^0,c
 11813   004308  5053               	movf	___fltol@exp1^0,w,c
 11814   00430A  A4D8               	btfss	status,2,c
 11815   00430C  EF8A  F021         	goto	u8071
 11816   004310  EF8C  F021         	goto	u8070
 11817   004314                     u8071:
 11818   004314  EF96  F021         	goto	l6956
 11819   004318                     u8070:
 11820   004318                     l6952:
 11821                           
 11822                           ; BSR set to: 0
 11823   004318  0E00               	movlw	0
 11824   00431A  6F64               	movwf	?___fltol& (0+255),b
 11825   00431C  0E00               	movlw	0
 11826   00431E  6F65               	movwf	(?___fltol+1)& (0+255),b
 11827   004320  0E00               	movlw	0
 11828   004322  6F66               	movwf	(?___fltol+2)& (0+255),b
 11829   004324  0E00               	movlw	0
 11830   004326  6F67               	movwf	(?___fltol+3)& (0+255),b
 11831   004328  EF03  F022         	goto	l1007
 11832   00432C                     l6956:
 11833                           
 11834                           ; BSR set to: 0
 11835   00432C  C064  F068         	movff	___fltol@f1,??___fltol
 11836   004330  C065  F069         	movff	___fltol@f1+1,??___fltol+1
 11837   004334  C066  F06A         	movff	___fltol@f1+2,??___fltol+2
 11838   004338  C067  F06B         	movff	___fltol@f1+3,??___fltol+3
 11839   00433C  0E20               	movlw	32
 11840   00433E  EFA6  F021         	goto	u8080
 11841   004342                     u8085:
 11842   004342  90D8               	bcf	status,0,c
 11843   004344  336B               	rrcf	(??___fltol+3)& (0+255),f,b
 11844   004346  336A               	rrcf	(??___fltol+2)& (0+255),f,b
 11845   004348  3369               	rrcf	(??___fltol+1)& (0+255),f,b
 11846   00434A  3368               	rrcf	??___fltol& (0+255),f,b
 11847   00434C                     u8080:
 11848   00434C  2EE8               	decfsz	wreg,f,c
 11849   00434E  EFA1  F021         	goto	u8085
 11850   004352  5168               	movf	??___fltol& (0+255),w,b
 11851   004354  6E52               	movwf	___fltol@sign1^0,c
 11852   004356                     
 11853                           ; BSR set to: 0
 11854   004356  8F66               	bsf	(___fltol@f1+2)& (0+255),7,b
 11855   004358                     
 11856                           ; BSR set to: 0
 11857   004358  0EFF               	movlw	255
 11858   00435A  1764               	andwf	___fltol@f1& (0+255),f,b
 11859   00435C  0EFF               	movlw	255
 11860   00435E  1765               	andwf	(___fltol@f1+1)& (0+255),f,b
 11861   004360  0EFF               	movlw	255
 11862   004362  1766               	andwf	(___fltol@f1+2)& (0+255),f,b
 11863   004364  0E00               	movlw	0
 11864   004366  1767               	andwf	(___fltol@f1+3)& (0+255),f,b
 11865   004368                     
 11866                           ; BSR set to: 0
 11867   004368  0E96               	movlw	150
 11868   00436A  5E53               	subwf	___fltol@exp1^0,f,c
 11869   00436C                     
 11870                           ; BSR set to: 0
 11871   00436C  BE53               	btfsc	___fltol@exp1^0,7,c
 11872   00436E  EFBD  F021         	goto	u8090
 11873   004372  EFBB  F021         	goto	u8091
 11874   004376                     u8091:
 11875   004376  EFD3  F021         	goto	l6976
 11876   00437A                     u8090:
 11877   00437A                     
 11878                           ; BSR set to: 0
 11879   00437A  5053               	movf	___fltol@exp1^0,w,c
 11880   00437C  0A80               	xorlw	128
 11881   00437E  0F97               	addlw	151
 11882   004380  B0D8               	btfsc	status,0,c
 11883   004382  EFC5  F021         	goto	u8101
 11884   004386  EFC7  F021         	goto	u8100
 11885   00438A                     u8101:
 11886   00438A  EFC9  F021         	goto	l6972
 11887   00438E                     u8100:
 11888   00438E  EF8C  F021         	goto	l6952
 11889   004392                     l6972:
 11890                           
 11891                           ; BSR set to: 0
 11892   004392  90D8               	bcf	status,0,c
 11893   004394  3367               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11894   004396  3366               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11895   004398  3365               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11896   00439A  3364               	rrcf	___fltol@f1& (0+255),f,b
 11897   00439C                     
 11898                           ; BSR set to: 0
 11899   00439C  3E53               	incfsz	___fltol@exp1^0,f,c
 11900   00439E  EFC9  F021         	goto	l6972
 11901   0043A2  EFEB  F021         	goto	l6986
 11902   0043A6                     l6976:
 11903                           
 11904                           ; BSR set to: 0
 11905   0043A6  0E1F               	movlw	31
 11906   0043A8  6453               	cpfsgt	___fltol@exp1^0,c
 11907   0043AA  EFD9  F021         	goto	u8111
 11908   0043AE  EFDB  F021         	goto	u8110
 11909   0043B2                     u8111:
 11910   0043B2  EFE3  F021         	goto	l6984
 11911   0043B6                     u8110:
 11912   0043B6  EF8C  F021         	goto	l6952
 11913   0043BA                     l6982:
 11914                           
 11915                           ; BSR set to: 0
 11916   0043BA  90D8               	bcf	status,0,c
 11917   0043BC  3764               	rlcf	___fltol@f1& (0+255),f,b
 11918   0043BE  3765               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11919   0043C0  3766               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11920   0043C2  3767               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11921   0043C4  0653               	decf	___fltol@exp1^0,f,c
 11922   0043C6                     l6984:
 11923                           
 11924                           ; BSR set to: 0
 11925   0043C6  5053               	movf	___fltol@exp1^0,w,c
 11926   0043C8  A4D8               	btfss	status,2,c
 11927   0043CA  EFE9  F021         	goto	u8121
 11928   0043CE  EFEB  F021         	goto	u8120
 11929   0043D2                     u8121:
 11930   0043D2  EFDD  F021         	goto	l6982
 11931   0043D6                     u8120:
 11932   0043D6                     l6986:
 11933                           
 11934                           ; BSR set to: 0
 11935   0043D6  5052               	movf	___fltol@sign1^0,w,c
 11936   0043D8  B4D8               	btfsc	status,2,c
 11937   0043DA  EFF1  F021         	goto	u8131
 11938   0043DE  EFF3  F021         	goto	u8130
 11939   0043E2                     u8131:
 11940   0043E2  EFFB  F021         	goto	l6990
 11941   0043E6                     u8130:
 11942   0043E6                     
 11943                           ; BSR set to: 0
 11944   0043E6  1F67               	comf	(___fltol@f1+3)& (0+255),f,b
 11945   0043E8  1F66               	comf	(___fltol@f1+2)& (0+255),f,b
 11946   0043EA  1F65               	comf	(___fltol@f1+1)& (0+255),f,b
 11947   0043EC  6D64               	negf	___fltol@f1& (0+255),b
 11948   0043EE  0E00               	movlw	0
 11949   0043F0  2365               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11950   0043F2  2366               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11951   0043F4  2367               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11952   0043F6                     l6990:
 11953                           
 11954                           ; BSR set to: 0
 11955   0043F6  C064  F064         	movff	___fltol@f1,?___fltol
 11956   0043FA  C065  F065         	movff	___fltol@f1+1,?___fltol+1
 11957   0043FE  C066  F066         	movff	___fltol@f1+2,?___fltol+2
 11958   004402  C067  F067         	movff	___fltol@f1+3,?___fltol+3
 11959   004406                     l1007:
 11960                           
 11961                           ; BSR set to: 0
 11962   004406  0012               	return		;funcret
 11963   004408                     __end_of___fltol:
 11964                           	callstack 0
 11965                           
 11966 ;; *************** function ___flsub *****************
 11967 ;; Defined at:
 11968 ;;		line 245 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 11969 ;; Parameters:    Size  Location     Type
 11970 ;;  b               4    4[BANK0 ] long 
 11971 ;;  a               4    8[BANK0 ] long 
 11972 ;; Auto vars:     Size  Location     Type
 11973 ;;		None
 11974 ;; Return value:  Size  Location     Type
 11975 ;;                  4    4[BANK0 ] long 
 11976 ;; Registers used:
 11977 ;;		wreg, status,2, status,0, cstack
 11978 ;; Tracked objects:
 11979 ;;		On entry : 0/0
 11980 ;;		On exit  : 0/0
 11981 ;;		Unchanged: 0/0
 11982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11983 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11986 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11987 ;;Total ram usage:        8 bytes
 11988 ;; Hardware stack levels used: 1
 11989 ;; Hardware stack levels required when called: 2
 11990 ;; This function calls:
 11991 ;;		___fladd
 11992 ;; This function is called by:
 11993 ;;		_efgtoa
 11994 ;;		___rem_pio2f
 11995 ;; This function uses a non-reentrant model
 11996 ;;
 11997                           
 11998                           	psect	text43
 11999   00500A                     __ptext43:
 12000                           	callstack 0
 12001   00500A                     ___flsub:
 12002                           	callstack 23
 12003   00500A  0E00               	movlw	0
 12004   00500C  0100               	movlb	0	; () banked
 12005   00500E  1B68               	xorwf	___flsub@a& (0+255),f,b
 12006   005010  0E00               	movlw	0
 12007   005012  1B69               	xorwf	(___flsub@a+1)& (0+255),f,b
 12008   005014  0E00               	movlw	0
 12009   005016  1B6A               	xorwf	(___flsub@a+2)& (0+255),f,b
 12010   005018  0E80               	movlw	128
 12011   00501A  1B6B               	xorwf	(___flsub@a+3)& (0+255),f,b
 12012   00501C                     
 12013                           ; BSR set to: 0
 12014   00501C  C064  F046         	movff	___flsub@b,___fladd@b
 12015   005020  C065  F047         	movff	___flsub@b+1,___fladd@b+1
 12016   005024  C066  F048         	movff	___flsub@b+2,___fladd@b+2
 12017   005028  C067  F049         	movff	___flsub@b+3,___fladd@b+3
 12018   00502C  C068  F04A         	movff	___flsub@a,___fladd@a
 12019   005030  C069  F04B         	movff	___flsub@a+1,___fladd@a+1
 12020   005034  C06A  F04C         	movff	___flsub@a+2,___fladd@a+2
 12021   005038  C06B  F04D         	movff	___flsub@a+3,___fladd@a+3
 12022   00503C  ECD9  F00A         	call	___fladd	;wreg free
 12023   005040  C046  F064         	movff	?___fladd,?___flsub
 12024   005044  C047  F065         	movff	?___fladd+1,?___flsub+1
 12025   005048  C048  F066         	movff	?___fladd+2,?___flsub+2
 12026   00504C  C049  F067         	movff	?___fladd+3,?___flsub+3
 12027   005050  0012               	return		;funcret
 12028   005052                     __end_of___flsub:
 12029                           	callstack 0
 12030                           
 12031 ;; *************** function ___fladd *****************
 12032 ;; Defined at:
 12033 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 12034 ;; Parameters:    Size  Location     Type
 12035 ;;  b               4   69[COMRAM] long 
 12036 ;;  a               4   73[COMRAM] long 
 12037 ;; Auto vars:     Size  Location     Type
 12038 ;;  grs             1    3[BANK0 ] unsigned char 
 12039 ;;  bexp            1    2[BANK0 ] unsigned char 
 12040 ;;  aexp            1    1[BANK0 ] unsigned char 
 12041 ;;  signs           1    0[BANK0 ] unsigned char 
 12042 ;; Return value:  Size  Location     Type
 12043 ;;                  4   69[COMRAM] unsigned char 
 12044 ;; Registers used:
 12045 ;;		wreg, status,2, status,0
 12046 ;; Tracked objects:
 12047 ;;		On entry : 0/0
 12048 ;;		On exit  : 0/0
 12049 ;;		Unchanged: 0/0
 12050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12051 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12052 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12053 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12054 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12055 ;;Total ram usage:       16 bytes
 12056 ;; Hardware stack levels used: 1
 12057 ;; Hardware stack levels required when called: 1
 12058 ;; This function calls:
 12059 ;;		Nothing
 12060 ;; This function is called by:
 12061 ;;		_runDAC
 12062 ;;		___flsub
 12063 ;;		_efgtoa
 12064 ;;		_sinf
 12065 ;;		___cosdf
 12066 ;;		___rem_pio2f
 12067 ;;		___sindf
 12068 ;; This function uses a non-reentrant model
 12069 ;;
 12070                           
 12071                           	psect	text44
 12072   0015B2                     __ptext44:
 12073                           	callstack 0
 12074   0015B2                     ___fladd:
 12075                           	callstack 23
 12076   0015B2  5049               	movf	(___fladd@b+3)^0,w,c
 12077   0015B4  0B80               	andlw	128
 12078   0015B6  0100               	movlb	0	; () banked
 12079   0015B8  6F60               	movwf	___fladd@signs& (0+255),b
 12080   0015BA  5049               	movf	(___fladd@b+3)^0,w,c
 12081   0015BC  2449               	addwf	(___fladd@b+3)^0,w,c
 12082   0015BE  6F62               	movwf	___fladd@bexp& (0+255),b
 12083   0015C0                     
 12084                           ; BSR set to: 0
 12085   0015C0  AE48               	btfss	(___fladd@b+2)^0,7,c
 12086   0015C2  EFE5  F00A         	goto	u7041
 12087   0015C6  EFE7  F00A         	goto	u7040
 12088   0015CA                     u7041:
 12089   0015CA  EFE8  F00A         	goto	l6340
 12090   0015CE                     u7040:
 12091   0015CE                     
 12092                           ; BSR set to: 0
 12093   0015CE  8162               	bsf	___fladd@bexp& (0+255),0,b
 12094   0015D0                     l6340:
 12095                           
 12096                           ; BSR set to: 0
 12097   0015D0  5162               	movf	___fladd@bexp& (0+255),w,b
 12098   0015D2  B4D8               	btfsc	status,2,c
 12099   0015D4  EFEE  F00A         	goto	u7051
 12100   0015D8  EFF0  F00A         	goto	u7050
 12101   0015DC                     u7051:
 12102   0015DC  EF05  F00B         	goto	l6350
 12103   0015E0                     u7050:
 12104   0015E0                     
 12105                           ; BSR set to: 0
 12106   0015E0  2962               	incf	___fladd@bexp& (0+255),w,b
 12107   0015E2  A4D8               	btfss	status,2,c
 12108   0015E4  EFF6  F00A         	goto	u7061
 12109   0015E8  EFF8  F00A         	goto	u7060
 12110   0015EC                     u7061:
 12111   0015EC  EF00  F00B         	goto	l6346
 12112   0015F0                     u7060:
 12113   0015F0                     
 12114                           ; BSR set to: 0
 12115   0015F0  0E00               	movlw	0
 12116   0015F2  6E46               	movwf	___fladd@b^0,c
 12117   0015F4  0E00               	movlw	0
 12118   0015F6  6E47               	movwf	(___fladd@b+1)^0,c
 12119   0015F8  0E00               	movlw	0
 12120   0015FA  6E48               	movwf	(___fladd@b+2)^0,c
 12121   0015FC  0E00               	movlw	0
 12122   0015FE  6E49               	movwf	(___fladd@b+3)^0,c
 12123   001600                     l6346:
 12124                           
 12125                           ; BSR set to: 0
 12126   001600  8E48               	bsf	(___fladd@b+2)^0,7,c
 12127   001602                     
 12128                           ; BSR set to: 0
 12129   001602  0E00               	movlw	0
 12130   001604  6E49               	movwf	(___fladd@b+3)^0,c
 12131   001606  EF0D  F00B         	goto	l6352
 12132   00160A                     l6350:
 12133                           
 12134                           ; BSR set to: 0
 12135   00160A  0E00               	movlw	0
 12136   00160C  6E46               	movwf	___fladd@b^0,c
 12137   00160E  0E00               	movlw	0
 12138   001610  6E47               	movwf	(___fladd@b+1)^0,c
 12139   001612  0E00               	movlw	0
 12140   001614  6E48               	movwf	(___fladd@b+2)^0,c
 12141   001616  0E00               	movlw	0
 12142   001618  6E49               	movwf	(___fladd@b+3)^0,c
 12143   00161A                     l6352:
 12144                           
 12145                           ; BSR set to: 0
 12146   00161A  504D               	movf	(___fladd@a+3)^0,w,c
 12147   00161C  0B80               	andlw	128
 12148   00161E  6F61               	movwf	___fladd@aexp& (0+255),b
 12149   001620                     
 12150                           ; BSR set to: 0
 12151   001620  5160               	movf	___fladd@signs& (0+255),w,b
 12152   001622  1961               	xorwf	___fladd@aexp& (0+255),w,b
 12153   001624  B4D8               	btfsc	status,2,c
 12154   001626  EF17  F00B         	goto	u7071
 12155   00162A  EF19  F00B         	goto	u7070
 12156   00162E                     u7071:
 12157   00162E  EF1A  F00B         	goto	l6358
 12158   001632                     u7070:
 12159   001632                     
 12160                           ; BSR set to: 0
 12161   001632  8D60               	bsf	___fladd@signs& (0+255),6,b
 12162   001634                     l6358:
 12163                           
 12164                           ; BSR set to: 0
 12165   001634  504D               	movf	(___fladd@a+3)^0,w,c
 12166   001636  244D               	addwf	(___fladd@a+3)^0,w,c
 12167   001638  6F61               	movwf	___fladd@aexp& (0+255),b
 12168   00163A                     
 12169                           ; BSR set to: 0
 12170   00163A  AE4C               	btfss	(___fladd@a+2)^0,7,c
 12171   00163C  EF22  F00B         	goto	u7081
 12172   001640  EF24  F00B         	goto	u7080
 12173   001644                     u7081:
 12174   001644  EF25  F00B         	goto	l6364
 12175   001648                     u7080:
 12176   001648                     
 12177                           ; BSR set to: 0
 12178   001648  8161               	bsf	___fladd@aexp& (0+255),0,b
 12179   00164A                     l6364:
 12180                           
 12181                           ; BSR set to: 0
 12182   00164A  5161               	movf	___fladd@aexp& (0+255),w,b
 12183   00164C  B4D8               	btfsc	status,2,c
 12184   00164E  EF2B  F00B         	goto	u7091
 12185   001652  EF2D  F00B         	goto	u7090
 12186   001656                     u7091:
 12187   001656  EF42  F00B         	goto	l6374
 12188   00165A                     u7090:
 12189   00165A                     
 12190                           ; BSR set to: 0
 12191   00165A  2961               	incf	___fladd@aexp& (0+255),w,b
 12192   00165C  A4D8               	btfss	status,2,c
 12193   00165E  EF33  F00B         	goto	u7101
 12194   001662  EF35  F00B         	goto	u7100
 12195   001666                     u7101:
 12196   001666  EF3D  F00B         	goto	l6370
 12197   00166A                     u7100:
 12198   00166A                     
 12199                           ; BSR set to: 0
 12200   00166A  0E00               	movlw	0
 12201   00166C  6E4A               	movwf	___fladd@a^0,c
 12202   00166E  0E00               	movlw	0
 12203   001670  6E4B               	movwf	(___fladd@a+1)^0,c
 12204   001672  0E00               	movlw	0
 12205   001674  6E4C               	movwf	(___fladd@a+2)^0,c
 12206   001676  0E00               	movlw	0
 12207   001678  6E4D               	movwf	(___fladd@a+3)^0,c
 12208   00167A                     l6370:
 12209                           
 12210                           ; BSR set to: 0
 12211   00167A  8E4C               	bsf	(___fladd@a+2)^0,7,c
 12212   00167C                     
 12213                           ; BSR set to: 0
 12214   00167C  0E00               	movlw	0
 12215   00167E  6E4D               	movwf	(___fladd@a+3)^0,c
 12216   001680  EF4A  F00B         	goto	l6376
 12217   001684                     l6374:
 12218                           
 12219                           ; BSR set to: 0
 12220   001684  0E00               	movlw	0
 12221   001686  6E4A               	movwf	___fladd@a^0,c
 12222   001688  0E00               	movlw	0
 12223   00168A  6E4B               	movwf	(___fladd@a+1)^0,c
 12224   00168C  0E00               	movlw	0
 12225   00168E  6E4C               	movwf	(___fladd@a+2)^0,c
 12226   001690  0E00               	movlw	0
 12227   001692  6E4D               	movwf	(___fladd@a+3)^0,c
 12228   001694                     l6376:
 12229                           
 12230                           ; BSR set to: 0
 12231   001694  5162               	movf	___fladd@bexp& (0+255),w,b
 12232   001696  5D61               	subwf	___fladd@aexp& (0+255),w,b
 12233   001698  B0D8               	btfsc	status,0,c
 12234   00169A  EF51  F00B         	goto	u7111
 12235   00169E  EF53  F00B         	goto	u7110
 12236   0016A2                     u7111:
 12237   0016A2  EF7A  F00B         	goto	l6412
 12238   0016A6                     u7110:
 12239   0016A6                     
 12240                           ; BSR set to: 0
 12241   0016A6  AD60               	btfss	___fladd@signs& (0+255),6,b
 12242   0016A8  EF58  F00B         	goto	u7121
 12243   0016AC  EF5A  F00B         	goto	u7120
 12244   0016B0                     u7121:
 12245   0016B0  EF5C  F00B         	goto	l6382
 12246   0016B4                     u7120:
 12247   0016B4                     
 12248                           ; BSR set to: 0
 12249   0016B4  0E80               	movlw	128
 12250   0016B6  1B60               	xorwf	___fladd@signs& (0+255),f,b
 12251   0016B8                     l6382:
 12252                           
 12253                           ; BSR set to: 0
 12254   0016B8  C062  F063         	movff	___fladd@bexp,___fladd@grs
 12255   0016BC                     
 12256                           ; BSR set to: 0
 12257   0016BC  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 12258   0016C0                     
 12259                           ; BSR set to: 0
 12260   0016C0  C063  F061         	movff	___fladd@grs,___fladd@aexp
 12261   0016C4                     
 12262                           ; BSR set to: 0
 12263   0016C4  C046  F063         	movff	___fladd@b,___fladd@grs
 12264   0016C8                     
 12265                           ; BSR set to: 0
 12266   0016C8  C04A  F046         	movff	___fladd@a,___fladd@b
 12267   0016CC                     
 12268                           ; BSR set to: 0
 12269   0016CC  C063  F04A         	movff	___fladd@grs,___fladd@a
 12270   0016D0                     
 12271                           ; BSR set to: 0
 12272   0016D0  C047  F063         	movff	___fladd@b+1,___fladd@grs
 12273   0016D4                     
 12274                           ; BSR set to: 0
 12275   0016D4  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
 12276   0016D8                     
 12277                           ; BSR set to: 0
 12278   0016D8  C063  F04B         	movff	___fladd@grs,___fladd@a+1
 12279   0016DC                     
 12280                           ; BSR set to: 0
 12281   0016DC  C048  F063         	movff	___fladd@b+2,___fladd@grs
 12282   0016E0                     
 12283                           ; BSR set to: 0
 12284   0016E0  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
 12285   0016E4                     
 12286                           ; BSR set to: 0
 12287   0016E4  C063  F04C         	movff	___fladd@grs,___fladd@a+2
 12288   0016E8                     
 12289                           ; BSR set to: 0
 12290   0016E8  C049  F063         	movff	___fladd@b+3,___fladd@grs
 12291   0016EC                     
 12292                           ; BSR set to: 0
 12293   0016EC  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
 12294   0016F0                     
 12295                           ; BSR set to: 0
 12296   0016F0  C063  F04D         	movff	___fladd@grs,___fladd@a+3
 12297   0016F4                     l6412:
 12298                           
 12299                           ; BSR set to: 0
 12300   0016F4  0E00               	movlw	0
 12301   0016F6  6F63               	movwf	___fladd@grs& (0+255),b
 12302   0016F8                     
 12303                           ; BSR set to: 0
 12304   0016F8  5162               	movf	___fladd@bexp& (0+255),w,b
 12305   0016FA  C061  F04E         	movff	___fladd@aexp,??___fladd
 12306   0016FE  6A4F               	clrf	(??___fladd+1)^0,c
 12307   001700  5E4E               	subwf	??___fladd^0,f,c
 12308   001702  0E00               	movlw	0
 12309   001704  5A4F               	subwfb	(??___fladd+1)^0,f,c
 12310   001706  BE4F               	btfsc	(??___fladd+1)^0,7,c
 12311   001708  EF8F  F00B         	goto	u7131
 12312   00170C  504F               	movf	(??___fladd+1)^0,w,c
 12313   00170E  E109               	bnz	u7130
 12314   001710  0E1A               	movlw	26
 12315   001712  5C4E               	subwf	??___fladd^0,w,c
 12316   001714  A0D8               	btfss	status,0,c
 12317   001716  EF8F  F00B         	goto	u7131
 12318   00171A  EF91  F00B         	goto	u7130
 12319   00171E                     u7131:
 12320   00171E  EFC8  F00B         	goto	l1239
 12321   001722                     u7130:
 12322   001722                     
 12323                           ; BSR set to: 0
 12324   001722  5046               	movf	___fladd@b^0,w,c
 12325   001724  1047               	iorwf	(___fladd@b+1)^0,w,c
 12326   001726  1048               	iorwf	(___fladd@b+2)^0,w,c
 12327   001728  1049               	iorwf	(___fladd@b+3)^0,w,c
 12328   00172A  A4D8               	btfss	status,2,c
 12329   00172C  EF9A  F00B         	goto	u7141
 12330   001730  EF9D  F00B         	goto	u7140
 12331   001734                     u7141:
 12332   001734  0E01               	movlw	1
 12333   001736  EF9E  F00B         	goto	u7150
 12334   00173A                     u7140:
 12335   00173A  0E00               	movlw	0
 12336   00173C                     u7150:
 12337   00173C  6F63               	movwf	___fladd@grs& (0+255),b
 12338   00173E                     
 12339                           ; BSR set to: 0
 12340   00173E  0E00               	movlw	0
 12341   001740  6E46               	movwf	___fladd@b^0,c
 12342   001742  0E00               	movlw	0
 12343   001744  6E47               	movwf	(___fladd@b+1)^0,c
 12344   001746  0E00               	movlw	0
 12345   001748  6E48               	movwf	(___fladd@b+2)^0,c
 12346   00174A  0E00               	movlw	0
 12347   00174C  6E49               	movwf	(___fladd@b+3)^0,c
 12348   00174E                     
 12349                           ; BSR set to: 0
 12350   00174E  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 12351   001752  EFD1  F00B         	goto	l1238
 12352   001756                     l1240:
 12353                           
 12354                           ; BSR set to: 0
 12355   001756  A163               	btfss	___fladd@grs& (0+255),0,b
 12356   001758  EFB0  F00B         	goto	u7161
 12357   00175C  EFB2  F00B         	goto	u7160
 12358   001760                     u7161:
 12359   001760  EFB8  F00B         	goto	l6424
 12360   001764                     u7160:
 12361   001764                     
 12362                           ; BSR set to: 0
 12363   001764  90D8               	bcf	status,0,c
 12364   001766  3163               	rrcf	___fladd@grs& (0+255),w,b
 12365   001768  0901               	iorlw	1
 12366   00176A  6F63               	movwf	___fladd@grs& (0+255),b
 12367   00176C  EFBA  F00B         	goto	l6426
 12368   001770                     l6424:
 12369                           
 12370                           ; BSR set to: 0
 12371   001770  90D8               	bcf	status,0,c
 12372   001772  3363               	rrcf	___fladd@grs& (0+255),f,b
 12373   001774                     l6426:
 12374                           
 12375                           ; BSR set to: 0
 12376   001774  A046               	btfss	___fladd@b^0,0,c
 12377   001776  EFBF  F00B         	goto	u7171
 12378   00177A  EFC1  F00B         	goto	u7170
 12379   00177E                     u7171:
 12380   00177E  EFC2  F00B         	goto	l6430
 12381   001782                     u7170:
 12382   001782                     
 12383                           ; BSR set to: 0
 12384   001782  8F63               	bsf	___fladd@grs& (0+255),7,b
 12385   001784                     l6430:
 12386                           
 12387                           ; BSR set to: 0
 12388   001784  3449               	rlcf	(___fladd@b+3)^0,w,c
 12389   001786  3249               	rrcf	(___fladd@b+3)^0,f,c
 12390   001788  3248               	rrcf	(___fladd@b+2)^0,f,c
 12391   00178A  3247               	rrcf	(___fladd@b+1)^0,f,c
 12392   00178C  3246               	rrcf	___fladd@b^0,f,c
 12393   00178E                     
 12394                           ; BSR set to: 0
 12395   00178E  2B62               	incf	___fladd@bexp& (0+255),f,b
 12396   001790                     l1239:
 12397                           
 12398                           ; BSR set to: 0
 12399   001790  5161               	movf	___fladd@aexp& (0+255),w,b
 12400   001792  5D62               	subwf	___fladd@bexp& (0+255),w,b
 12401   001794  A0D8               	btfss	status,0,c
 12402   001796  EFCF  F00B         	goto	u7181
 12403   00179A  EFD1  F00B         	goto	u7180
 12404   00179E                     u7181:
 12405   00179E  EFAB  F00B         	goto	l1240
 12406   0017A2                     u7180:
 12407   0017A2                     l1238:
 12408                           
 12409                           ; BSR set to: 0
 12410   0017A2  BD60               	btfsc	___fladd@signs& (0+255),6,b
 12411   0017A4  EFD6  F00B         	goto	u7191
 12412   0017A8  EFD8  F00B         	goto	u7190
 12413   0017AC                     u7191:
 12414   0017AC  EF18  F00C         	goto	l6458
 12415   0017B0                     u7190:
 12416   0017B0                     
 12417                           ; BSR set to: 0
 12418   0017B0  5162               	movf	___fladd@bexp& (0+255),w,b
 12419   0017B2  A4D8               	btfss	status,2,c
 12420   0017B4  EFDE  F00B         	goto	u7201
 12421   0017B8  EFE0  F00B         	goto	u7200
 12422   0017BC                     u7201:
 12423   0017BC  EFEA  F00B         	goto	l6440
 12424   0017C0                     u7200:
 12425   0017C0                     
 12426                           ; BSR set to: 0
 12427   0017C0  0E00               	movlw	0
 12428   0017C2  6E46               	movwf	?___fladd^0,c
 12429   0017C4  0E00               	movlw	0
 12430   0017C6  6E47               	movwf	(?___fladd+1)^0,c
 12431   0017C8  0E00               	movlw	0
 12432   0017CA  6E48               	movwf	(?___fladd+2)^0,c
 12433   0017CC  0E00               	movlw	0
 12434   0017CE  6E49               	movwf	(?___fladd+3)^0,c
 12435   0017D0  EF39  F00D         	goto	l1247
 12436   0017D4                     l6440:
 12437                           
 12438                           ; BSR set to: 0
 12439   0017D4  504A               	movf	___fladd@a^0,w,c
 12440   0017D6  2646               	addwf	___fladd@b^0,f,c
 12441   0017D8  504B               	movf	(___fladd@a+1)^0,w,c
 12442   0017DA  2247               	addwfc	(___fladd@b+1)^0,f,c
 12443   0017DC  504C               	movf	(___fladd@a+2)^0,w,c
 12444   0017DE  2248               	addwfc	(___fladd@b+2)^0,f,c
 12445   0017E0  504D               	movf	(___fladd@a+3)^0,w,c
 12446   0017E2  2249               	addwfc	(___fladd@b+3)^0,f,c
 12447   0017E4                     
 12448                           ; BSR set to: 0
 12449   0017E4  A049               	btfss	(___fladd@b+3)^0,0,c
 12450   0017E6  EFF7  F00B         	goto	u7211
 12451   0017EA  EFF9  F00B         	goto	u7210
 12452   0017EE                     u7211:
 12453   0017EE  EFA5  F00C         	goto	l6494
 12454   0017F2                     u7210:
 12455   0017F2                     
 12456                           ; BSR set to: 0
 12457   0017F2  A163               	btfss	___fladd@grs& (0+255),0,b
 12458   0017F4  EFFE  F00B         	goto	u7221
 12459   0017F8  EF00  F00C         	goto	u7220
 12460   0017FC                     u7221:
 12461   0017FC  EF06  F00C         	goto	l6448
 12462   001800                     u7220:
 12463   001800                     
 12464                           ; BSR set to: 0
 12465   001800  90D8               	bcf	status,0,c
 12466   001802  3163               	rrcf	___fladd@grs& (0+255),w,b
 12467   001804  0901               	iorlw	1
 12468   001806  6F63               	movwf	___fladd@grs& (0+255),b
 12469   001808  EF08  F00C         	goto	l6450
 12470   00180C                     l6448:
 12471                           
 12472                           ; BSR set to: 0
 12473   00180C  90D8               	bcf	status,0,c
 12474   00180E  3363               	rrcf	___fladd@grs& (0+255),f,b
 12475   001810                     l6450:
 12476                           
 12477                           ; BSR set to: 0
 12478   001810  A046               	btfss	___fladd@b^0,0,c
 12479   001812  EF0D  F00C         	goto	u7231
 12480   001816  EF0F  F00C         	goto	u7230
 12481   00181A                     u7231:
 12482   00181A  EF10  F00C         	goto	l6454
 12483   00181E                     u7230:
 12484   00181E                     
 12485                           ; BSR set to: 0
 12486   00181E  8F63               	bsf	___fladd@grs& (0+255),7,b
 12487   001820                     l6454:
 12488                           
 12489                           ; BSR set to: 0
 12490   001820  3449               	rlcf	(___fladd@b+3)^0,w,c
 12491   001822  3249               	rrcf	(___fladd@b+3)^0,f,c
 12492   001824  3248               	rrcf	(___fladd@b+2)^0,f,c
 12493   001826  3247               	rrcf	(___fladd@b+1)^0,f,c
 12494   001828  3246               	rrcf	___fladd@b^0,f,c
 12495   00182A                     
 12496                           ; BSR set to: 0
 12497   00182A  2B62               	incf	___fladd@bexp& (0+255),f,b
 12498   00182C  EFA5  F00C         	goto	l6494
 12499   001830                     l6458:
 12500                           
 12501                           ; BSR set to: 0
 12502   001830  504A               	movf	___fladd@a^0,w,c
 12503   001832  5C46               	subwf	___fladd@b^0,w,c
 12504   001834  504B               	movf	(___fladd@a+1)^0,w,c
 12505   001836  5847               	subwfb	(___fladd@b+1)^0,w,c
 12506   001838  504C               	movf	(___fladd@a+2)^0,w,c
 12507   00183A  5848               	subwfb	(___fladd@b+2)^0,w,c
 12508   00183C  5049               	movf	(___fladd@b+3)^0,w,c
 12509   00183E  0A80               	xorlw	128
 12510   001840  6E4E               	movwf	??___fladd^0,c
 12511   001842  504D               	movf	(___fladd@a+3)^0,w,c
 12512   001844  0A80               	xorlw	128
 12513   001846  584E               	subwfb	??___fladd^0,w,c
 12514   001848  B0D8               	btfsc	status,0,c
 12515   00184A  EF29  F00C         	goto	u7241
 12516   00184E  EF2B  F00C         	goto	u7240
 12517   001852                     u7241:
 12518   001852  EF56  F00C         	goto	l6468
 12519   001856                     u7240:
 12520   001856                     
 12521                           ; BSR set to: 0
 12522   001856  5046               	movf	___fladd@b^0,w,c
 12523   001858  5C4A               	subwf	___fladd@a^0,w,c
 12524   00185A  6E4E               	movwf	??___fladd^0,c
 12525   00185C  5047               	movf	(___fladd@b+1)^0,w,c
 12526   00185E  584B               	subwfb	(___fladd@a+1)^0,w,c
 12527   001860  6E4F               	movwf	(??___fladd+1)^0,c
 12528   001862  5048               	movf	(___fladd@b+2)^0,w,c
 12529   001864  584C               	subwfb	(___fladd@a+2)^0,w,c
 12530   001866  6E50               	movwf	(??___fladd+2)^0,c
 12531   001868  5049               	movf	(___fladd@b+3)^0,w,c
 12532   00186A  584D               	subwfb	(___fladd@a+3)^0,w,c
 12533   00186C  6E51               	movwf	(??___fladd+3)^0,c
 12534   00186E  0EFF               	movlw	255
 12535   001870  244E               	addwf	??___fladd^0,w,c
 12536   001872  6E46               	movwf	___fladd@b^0,c
 12537   001874  0EFF               	movlw	255
 12538   001876  204F               	addwfc	(??___fladd+1)^0,w,c
 12539   001878  6E47               	movwf	(___fladd@b+1)^0,c
 12540   00187A  0EFF               	movlw	255
 12541   00187C  2050               	addwfc	(??___fladd+2)^0,w,c
 12542   00187E  6E48               	movwf	(___fladd@b+2)^0,c
 12543   001880  0EFF               	movlw	255
 12544   001882  2051               	addwfc	(??___fladd+3)^0,w,c
 12545   001884  6E49               	movwf	(___fladd@b+3)^0,c
 12546   001886  0E80               	movlw	128
 12547   001888  1B60               	xorwf	___fladd@signs& (0+255),f,b
 12548   00188A                     
 12549                           ; BSR set to: 0
 12550   00188A  6D63               	negf	___fladd@grs& (0+255),b
 12551   00188C                     
 12552                           ; BSR set to: 0
 12553   00188C  5163               	movf	___fladd@grs& (0+255),w,b
 12554   00188E  A4D8               	btfss	status,2,c
 12555   001890  EF4C  F00C         	goto	u7251
 12556   001894  EF4E  F00C         	goto	u7250
 12557   001898                     u7251:
 12558   001898  EF5E  F00C         	goto	l1255
 12559   00189C                     u7250:
 12560   00189C                     
 12561                           ; BSR set to: 0
 12562   00189C  0E01               	movlw	1
 12563   00189E  2646               	addwf	___fladd@b^0,f,c
 12564   0018A0  0E00               	movlw	0
 12565   0018A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 12566   0018A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 12567   0018A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 12568   0018A8  EF5E  F00C         	goto	l1255
 12569   0018AC                     l6468:
 12570                           
 12571                           ; BSR set to: 0
 12572   0018AC  504A               	movf	___fladd@a^0,w,c
 12573   0018AE  5E46               	subwf	___fladd@b^0,f,c
 12574   0018B0  504B               	movf	(___fladd@a+1)^0,w,c
 12575   0018B2  5A47               	subwfb	(___fladd@b+1)^0,f,c
 12576   0018B4  504C               	movf	(___fladd@a+2)^0,w,c
 12577   0018B6  5A48               	subwfb	(___fladd@b+2)^0,f,c
 12578   0018B8  504D               	movf	(___fladd@a+3)^0,w,c
 12579   0018BA  5A49               	subwfb	(___fladd@b+3)^0,f,c
 12580   0018BC                     l1255:
 12581                           
 12582                           ; BSR set to: 0
 12583   0018BC  5046               	movf	___fladd@b^0,w,c
 12584   0018BE  1047               	iorwf	(___fladd@b+1)^0,w,c
 12585   0018C0  1048               	iorwf	(___fladd@b+2)^0,w,c
 12586   0018C2  1049               	iorwf	(___fladd@b+3)^0,w,c
 12587   0018C4  A4D8               	btfss	status,2,c
 12588   0018C6  EF67  F00C         	goto	u7261
 12589   0018CA  EF69  F00C         	goto	u7260
 12590   0018CE                     u7261:
 12591   0018CE  EF9E  F00C         	goto	l6492
 12592   0018D2                     u7260:
 12593   0018D2                     
 12594                           ; BSR set to: 0
 12595   0018D2  5163               	movf	___fladd@grs& (0+255),w,b
 12596   0018D4  A4D8               	btfss	status,2,c
 12597   0018D6  EF6F  F00C         	goto	u7271
 12598   0018DA  EF71  F00C         	goto	u7270
 12599   0018DE                     u7271:
 12600   0018DE  EF9E  F00C         	goto	l6492
 12601   0018E2                     u7270:
 12602   0018E2                     
 12603                           ; BSR set to: 0
 12604   0018E2  0E00               	movlw	0
 12605   0018E4  6E46               	movwf	?___fladd^0,c
 12606   0018E6  0E00               	movlw	0
 12607   0018E8  6E47               	movwf	(?___fladd+1)^0,c
 12608   0018EA  0E00               	movlw	0
 12609   0018EC  6E48               	movwf	(?___fladd+2)^0,c
 12610   0018EE  0E00               	movlw	0
 12611   0018F0  6E49               	movwf	(?___fladd+3)^0,c
 12612   0018F2  EF39  F00D         	goto	l1247
 12613   0018F6                     l6476:
 12614                           
 12615                           ; BSR set to: 0
 12616   0018F6  90D8               	bcf	status,0,c
 12617   0018F8  3646               	rlcf	___fladd@b^0,f,c
 12618   0018FA  3647               	rlcf	(___fladd@b+1)^0,f,c
 12619   0018FC  3648               	rlcf	(___fladd@b+2)^0,f,c
 12620   0018FE  3649               	rlcf	(___fladd@b+3)^0,f,c
 12621   001900                     
 12622                           ; BSR set to: 0
 12623   001900  AF63               	btfss	___fladd@grs& (0+255),7,b
 12624   001902  EF85  F00C         	goto	u7281
 12625   001906  EF87  F00C         	goto	u7280
 12626   00190A                     u7281:
 12627   00190A  EF88  F00C         	goto	l6482
 12628   00190E                     u7280:
 12629   00190E                     
 12630                           ; BSR set to: 0
 12631   00190E  8046               	bsf	___fladd@b^0,0,c
 12632   001910                     l6482:
 12633                           
 12634                           ; BSR set to: 0
 12635   001910  A163               	btfss	___fladd@grs& (0+255),0,b
 12636   001912  EF8D  F00C         	goto	u7291
 12637   001916  EF8F  F00C         	goto	u7290
 12638   00191A                     u7291:
 12639   00191A  EF93  F00C         	goto	l6486
 12640   00191E                     u7290:
 12641   00191E                     
 12642                           ; BSR set to: 0
 12643   00191E  80D8               	bsf	status,0,c
 12644   001920  3763               	rlcf	___fladd@grs& (0+255),f,b
 12645   001922  EF95  F00C         	goto	l6488
 12646   001926                     l6486:
 12647                           
 12648                           ; BSR set to: 0
 12649   001926  90D8               	bcf	status,0,c
 12650   001928  3763               	rlcf	___fladd@grs& (0+255),f,b
 12651   00192A                     l6488:
 12652                           
 12653                           ; BSR set to: 0
 12654   00192A  5162               	movf	___fladd@bexp& (0+255),w,b
 12655   00192C  B4D8               	btfsc	status,2,c
 12656   00192E  EF9B  F00C         	goto	u7301
 12657   001932  EF9D  F00C         	goto	u7300
 12658   001936                     u7301:
 12659   001936  EF9E  F00C         	goto	l6492
 12660   00193A                     u7300:
 12661   00193A                     
 12662                           ; BSR set to: 0
 12663   00193A  0762               	decf	___fladd@bexp& (0+255),f,b
 12664   00193C                     l6492:
 12665                           
 12666                           ; BSR set to: 0
 12667   00193C  AE48               	btfss	(___fladd@b+2)^0,7,c
 12668   00193E  EFA3  F00C         	goto	u7311
 12669   001942  EFA5  F00C         	goto	u7310
 12670   001946                     u7311:
 12671   001946  EF7B  F00C         	goto	l6476
 12672   00194A                     u7310:
 12673   00194A                     l6494:
 12674                           
 12675                           ; BSR set to: 0
 12676   00194A  0E00               	movlw	0
 12677   00194C  6F61               	movwf	___fladd@aexp& (0+255),b
 12678   00194E                     
 12679                           ; BSR set to: 0
 12680   00194E  AF63               	btfss	___fladd@grs& (0+255),7,b
 12681   001950  EFAC  F00C         	goto	u7321
 12682   001954  EFAE  F00C         	goto	u7320
 12683   001958                     u7321:
 12684   001958  EFC6  F00C         	goto	l1264
 12685   00195C                     u7320:
 12686   00195C                     
 12687                           ; BSR set to: 0
 12688   00195C  C063  F04E         	movff	___fladd@grs,??___fladd
 12689   001960  0E7F               	movlw	127
 12690   001962  164E               	andwf	??___fladd^0,f,c
 12691   001964  B4D8               	btfsc	status,2,c
 12692   001966  EFB7  F00C         	goto	u7331
 12693   00196A  EFB9  F00C         	goto	u7330
 12694   00196E                     u7331:
 12695   00196E  EFBD  F00C         	goto	l1265
 12696   001972                     u7330:
 12697   001972                     l6500:
 12698                           
 12699                           ; BSR set to: 0
 12700   001972  0E01               	movlw	1
 12701   001974  6F61               	movwf	___fladd@aexp& (0+255),b
 12702   001976  EFC6  F00C         	goto	l1264
 12703   00197A                     l1265:
 12704                           
 12705                           ; BSR set to: 0
 12706   00197A  A046               	btfss	___fladd@b^0,0,c
 12707   00197C  EFC2  F00C         	goto	u7341
 12708   001980  EFC4  F00C         	goto	u7340
 12709   001984                     u7341:
 12710   001984  EFC6  F00C         	goto	l1264
 12711   001988                     u7340:
 12712   001988  EFB9  F00C         	goto	l6500
 12713   00198C                     l1264:
 12714                           
 12715                           ; BSR set to: 0
 12716   00198C  5161               	movf	___fladd@aexp& (0+255),w,b
 12717   00198E  B4D8               	btfsc	status,2,c
 12718   001990  EFCC  F00C         	goto	u7351
 12719   001994  EFCE  F00C         	goto	u7350
 12720   001998                     u7351:
 12721   001998  EFF9  F00C         	goto	l6512
 12722   00199C                     u7350:
 12723   00199C                     
 12724                           ; BSR set to: 0
 12725   00199C  0E01               	movlw	1
 12726   00199E  2646               	addwf	___fladd@b^0,f,c
 12727   0019A0  0E00               	movlw	0
 12728   0019A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 12729   0019A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 12730   0019A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 12731   0019A8                     
 12732                           ; BSR set to: 0
 12733   0019A8  A049               	btfss	(___fladd@b+3)^0,0,c
 12734   0019AA  EFD9  F00C         	goto	u7361
 12735   0019AE  EFDB  F00C         	goto	u7360
 12736   0019B2                     u7361:
 12737   0019B2  EFF9  F00C         	goto	l6512
 12738   0019B6                     u7360:
 12739   0019B6                     
 12740                           ; BSR set to: 0
 12741   0019B6  C046  F04E         	movff	___fladd@b,??___fladd
 12742   0019BA  C047  F04F         	movff	___fladd@b+1,??___fladd+1
 12743   0019BE  C048  F050         	movff	___fladd@b+2,??___fladd+2
 12744   0019C2  C049  F051         	movff	___fladd@b+3,??___fladd+3
 12745   0019C6  3451               	rlcf	(??___fladd+3)^0,w,c
 12746   0019C8  3251               	rrcf	(??___fladd+3)^0,f,c
 12747   0019CA  3250               	rrcf	(??___fladd+2)^0,f,c
 12748   0019CC  324F               	rrcf	(??___fladd+1)^0,f,c
 12749   0019CE  324E               	rrcf	??___fladd^0,f,c
 12750   0019D0  C04E  F046         	movff	??___fladd,___fladd@b
 12751   0019D4  C04F  F047         	movff	??___fladd+1,___fladd@b+1
 12752   0019D8  C050  F048         	movff	??___fladd+2,___fladd@b+2
 12753   0019DC  C051  F049         	movff	??___fladd+3,___fladd@b+3
 12754   0019E0  2962               	incf	___fladd@bexp& (0+255),w,b
 12755   0019E2  B4D8               	btfsc	status,2,c
 12756   0019E4  EFF6  F00C         	goto	u7371
 12757   0019E8  EFF8  F00C         	goto	u7370
 12758   0019EC                     u7371:
 12759   0019EC  EFF9  F00C         	goto	l6512
 12760   0019F0                     u7370:
 12761   0019F0                     
 12762                           ; BSR set to: 0
 12763   0019F0  2B62               	incf	___fladd@bexp& (0+255),f,b
 12764   0019F2                     l6512:
 12765                           
 12766                           ; BSR set to: 0
 12767   0019F2  2962               	incf	___fladd@bexp& (0+255),w,b
 12768   0019F4  B4D8               	btfsc	status,2,c
 12769   0019F6  EFFF  F00C         	goto	u7381
 12770   0019FA  EF01  F00D         	goto	u7380
 12771   0019FE                     u7381:
 12772   0019FE  EF09  F00D         	goto	l6516
 12773   001A02                     u7380:
 12774   001A02                     
 12775                           ; BSR set to: 0
 12776   001A02  5162               	movf	___fladd@bexp& (0+255),w,b
 12777   001A04  A4D8               	btfss	status,2,c
 12778   001A06  EF07  F00D         	goto	u7391
 12779   001A0A  EF09  F00D         	goto	u7390
 12780   001A0E                     u7391:
 12781   001A0E  EF1B  F00D         	goto	l6520
 12782   001A12                     u7390:
 12783   001A12                     l6516:
 12784                           
 12785                           ; BSR set to: 0
 12786   001A12  0E00               	movlw	0
 12787   001A14  6E46               	movwf	___fladd@b^0,c
 12788   001A16  0E00               	movlw	0
 12789   001A18  6E47               	movwf	(___fladd@b+1)^0,c
 12790   001A1A  0E00               	movlw	0
 12791   001A1C  6E48               	movwf	(___fladd@b+2)^0,c
 12792   001A1E  0E00               	movlw	0
 12793   001A20  6E49               	movwf	(___fladd@b+3)^0,c
 12794   001A22  5162               	movf	___fladd@bexp& (0+255),w,b
 12795   001A24  A4D8               	btfss	status,2,c
 12796   001A26  EF17  F00D         	goto	u7401
 12797   001A2A  EF19  F00D         	goto	u7400
 12798   001A2E                     u7401:
 12799   001A2E  EF1B  F00D         	goto	l6520
 12800   001A32                     u7400:
 12801   001A32                     
 12802                           ; BSR set to: 0
 12803   001A32  0E00               	movlw	0
 12804   001A34  6F60               	movwf	___fladd@signs& (0+255),b
 12805   001A36                     l6520:
 12806                           
 12807                           ; BSR set to: 0
 12808   001A36  A162               	btfss	___fladd@bexp& (0+255),0,b
 12809   001A38  EF20  F00D         	goto	u7411
 12810   001A3C  EF22  F00D         	goto	u7410
 12811   001A40                     u7411:
 12812   001A40  EF25  F00D         	goto	l6524
 12813   001A44                     u7410:
 12814   001A44                     
 12815                           ; BSR set to: 0
 12816   001A44  8E48               	bsf	(___fladd@b+2)^0,7,c
 12817   001A46  EF26  F00D         	goto	l6526
 12818   001A4A                     l6524:
 12819                           
 12820                           ; BSR set to: 0
 12821   001A4A  9E48               	bcf	(___fladd@b+2)^0,7,c
 12822   001A4C                     l6526:
 12823                           
 12824                           ; BSR set to: 0
 12825   001A4C  90D8               	bcf	status,0,c
 12826   001A4E  3162               	rrcf	___fladd@bexp& (0+255),w,b
 12827   001A50  6E49               	movwf	(___fladd@b+3)^0,c
 12828   001A52                     
 12829                           ; BSR set to: 0
 12830   001A52  AF60               	btfss	___fladd@signs& (0+255),7,b
 12831   001A54  EF2E  F00D         	goto	u7421
 12832   001A58  EF30  F00D         	goto	u7420
 12833   001A5C                     u7421:
 12834   001A5C  EF31  F00D         	goto	l6532
 12835   001A60                     u7420:
 12836   001A60                     
 12837                           ; BSR set to: 0
 12838   001A60  8E49               	bsf	(___fladd@b+3)^0,7,c
 12839   001A62                     l6532:
 12840                           
 12841                           ; BSR set to: 0
 12842   001A62  C046  F046         	movff	___fladd@b,?___fladd
 12843   001A66  C047  F047         	movff	___fladd@b+1,?___fladd+1
 12844   001A6A  C048  F048         	movff	___fladd@b+2,?___fladd+2
 12845   001A6E  C049  F049         	movff	___fladd@b+3,?___fladd+3
 12846   001A72                     l1247:
 12847                           
 12848                           ; BSR set to: 0
 12849   001A72  0012               	return		;funcret
 12850   001A74                     __end_of___fladd:
 12851                           	callstack 0
 12852                           
 12853 ;; *************** function ___flneg *****************
 12854 ;; Defined at:
 12855 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flneg.c"
 12856 ;; Parameters:    Size  Location     Type
 12857 ;;  f1              4   32[BANK0 ] unsigned char 
 12858 ;; Auto vars:     Size  Location     Type
 12859 ;;		None
 12860 ;; Return value:  Size  Location     Type
 12861 ;;                  4   32[BANK0 ] unsigned char 
 12862 ;; Registers used:
 12863 ;;		wreg, status,2, status,0
 12864 ;; Tracked objects:
 12865 ;;		On entry : 0/0
 12866 ;;		On exit  : 0/0
 12867 ;;		Unchanged: 0/0
 12868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12869 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12872 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12873 ;;Total ram usage:        4 bytes
 12874 ;; Hardware stack levels used: 1
 12875 ;; Hardware stack levels required when called: 1
 12876 ;; This function calls:
 12877 ;;		Nothing
 12878 ;; This function is called by:
 12879 ;;		_efgtoa
 12880 ;;		_sinf
 12881 ;;		___rem_pio2f
 12882 ;; This function uses a non-reentrant model
 12883 ;;
 12884                           
 12885                           	psect	text45
 12886   00511A                     __ptext45:
 12887                           	callstack 0
 12888   00511A                     ___flneg:
 12889                           	callstack 24
 12890   00511A  0100               	movlb	0	; () banked
 12891   00511C  5180               	movf	___flneg@f1& (0+255),w,b
 12892   00511E  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12893   005120  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12894   005122  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12895   005124  B4D8               	btfsc	status,2,c
 12896   005126  EF97  F028         	goto	u8061
 12897   00512A  EF99  F028         	goto	u8060
 12898   00512E                     u8061:
 12899   00512E  EFA1  F028         	goto	l6946
 12900   005132                     u8060:
 12901   005132                     
 12902                           ; BSR set to: 0
 12903   005132  0E00               	movlw	0
 12904   005134  1B80               	xorwf	___flneg@f1& (0+255),f,b
 12905   005136  0E00               	movlw	0
 12906   005138  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12907   00513A  0E00               	movlw	0
 12908   00513C  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12909   00513E  0E80               	movlw	128
 12910   005140  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12911   005142                     l6946:
 12912                           
 12913                           ; BSR set to: 0
 12914   005142  C080  F080         	movff	___flneg@f1,?___flneg
 12915   005146  C081  F081         	movff	___flneg@f1+1,?___flneg+1
 12916   00514A  C082  F082         	movff	___flneg@f1+2,?___flneg+2
 12917   00514E  C083  F083         	movff	___flneg@f1+3,?___flneg+3
 12918   005152                     
 12919                           ; BSR set to: 0
 12920   005152  0012               	return		;funcret
 12921   005154                     __end_of___flneg:
 12922                           	callstack 0
 12923                           
 12924 ;; *************** function ___flmul *****************
 12925 ;; Defined at:
 12926 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcmul.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;  b               4   19[COMRAM] unsigned char 
 12929 ;;  a               4   23[COMRAM] unsigned char 
 12930 ;; Auto vars:     Size  Location     Type
 12931 ;;  prod            4   38[COMRAM] struct .
 12932 ;;  grs             4   33[COMRAM] unsigned long 
 12933 ;;  temp            2   42[COMRAM] struct .
 12934 ;;  bexp            1   37[COMRAM] unsigned char 
 12935 ;;  aexp            1   32[COMRAM] unsigned char 
 12936 ;;  sign            1   31[COMRAM] unsigned char 
 12937 ;; Return value:  Size  Location     Type
 12938 ;;                  4   19[COMRAM] unsigned char 
 12939 ;; Registers used:
 12940 ;;		wreg, status,2, status,0, prodl, prodh
 12941 ;; Tracked objects:
 12942 ;;		On entry : 0/0
 12943 ;;		On exit  : 0/0
 12944 ;;		Unchanged: 0/0
 12945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12946 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12947 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12948 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12949 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12950 ;;Total ram usage:       25 bytes
 12951 ;; Hardware stack levels used: 1
 12952 ;; Hardware stack levels required when called: 1
 12953 ;; This function calls:
 12954 ;;		Nothing
 12955 ;; This function is called by:
 12956 ;;		_runDAC
 12957 ;;		_runADC
 12958 ;;		_efgtoa
 12959 ;;		___cosdf
 12960 ;;		___rem_pio2f
 12961 ;;		___sindf
 12962 ;; This function uses a non-reentrant model
 12963 ;;
 12964                           
 12965                           	psect	text46
 12966   001A74                     __ptext46:
 12967                           	callstack 0
 12968   001A74                     ___flmul:
 12969                           	callstack 24
 12970   001A74  5017               	movf	(___flmul@b+3)^0,w,c
 12971   001A76  0B80               	andlw	128
 12972   001A78  6E20               	movwf	___flmul@sign^0,c
 12973   001A7A  5017               	movf	(___flmul@b+3)^0,w,c
 12974   001A7C  2417               	addwf	(___flmul@b+3)^0,w,c
 12975   001A7E  6E26               	movwf	___flmul@bexp^0,c
 12976   001A80  AE16               	btfss	(___flmul@b+2)^0,7,c
 12977   001A82  EF45  F00D         	goto	u7671
 12978   001A86  EF47  F00D         	goto	u7670
 12979   001A8A                     u7671:
 12980   001A8A  EF48  F00D         	goto	l6694
 12981   001A8E                     u7670:
 12982   001A8E  8026               	bsf	___flmul@bexp^0,0,c
 12983   001A90                     l6694:
 12984   001A90  5026               	movf	___flmul@bexp^0,w,c
 12985   001A92  B4D8               	btfsc	status,2,c
 12986   001A94  EF4E  F00D         	goto	u7681
 12987   001A98  EF50  F00D         	goto	u7680
 12988   001A9C                     u7681:
 12989   001A9C  EF63  F00D         	goto	l6702
 12990   001AA0                     u7680:
 12991   001AA0  2826               	incf	___flmul@bexp^0,w,c
 12992   001AA2  A4D8               	btfss	status,2,c
 12993   001AA4  EF56  F00D         	goto	u7691
 12994   001AA8  EF58  F00D         	goto	u7690
 12995   001AAC                     u7691:
 12996   001AAC  EF60  F00D         	goto	l6700
 12997   001AB0                     u7690:
 12998   001AB0  0E00               	movlw	0
 12999   001AB2  6E14               	movwf	___flmul@b^0,c
 13000   001AB4  0E00               	movlw	0
 13001   001AB6  6E15               	movwf	(___flmul@b+1)^0,c
 13002   001AB8  0E00               	movlw	0
 13003   001ABA  6E16               	movwf	(___flmul@b+2)^0,c
 13004   001ABC  0E00               	movlw	0
 13005   001ABE  6E17               	movwf	(___flmul@b+3)^0,c
 13006   001AC0                     l6700:
 13007   001AC0  8E16               	bsf	(___flmul@b+2)^0,7,c
 13008   001AC2  EF6B  F00D         	goto	l6704
 13009   001AC6                     l6702:
 13010   001AC6  0E00               	movlw	0
 13011   001AC8  6E14               	movwf	___flmul@b^0,c
 13012   001ACA  0E00               	movlw	0
 13013   001ACC  6E15               	movwf	(___flmul@b+1)^0,c
 13014   001ACE  0E00               	movlw	0
 13015   001AD0  6E16               	movwf	(___flmul@b+2)^0,c
 13016   001AD2  0E00               	movlw	0
 13017   001AD4  6E17               	movwf	(___flmul@b+3)^0,c
 13018   001AD6                     l6704:
 13019   001AD6  501B               	movf	(___flmul@a+3)^0,w,c
 13020   001AD8  0B80               	andlw	128
 13021   001ADA  1A20               	xorwf	___flmul@sign^0,f,c
 13022   001ADC  501B               	movf	(___flmul@a+3)^0,w,c
 13023   001ADE  241B               	addwf	(___flmul@a+3)^0,w,c
 13024   001AE0  6E21               	movwf	___flmul@aexp^0,c
 13025   001AE2  AE1A               	btfss	(___flmul@a+2)^0,7,c
 13026   001AE4  EF76  F00D         	goto	u7701
 13027   001AE8  EF78  F00D         	goto	u7700
 13028   001AEC                     u7701:
 13029   001AEC  EF79  F00D         	goto	l6712
 13030   001AF0                     u7700:
 13031   001AF0  8021               	bsf	___flmul@aexp^0,0,c
 13032   001AF2                     l6712:
 13033   001AF2  5021               	movf	___flmul@aexp^0,w,c
 13034   001AF4  B4D8               	btfsc	status,2,c
 13035   001AF6  EF7F  F00D         	goto	u7711
 13036   001AFA  EF81  F00D         	goto	u7710
 13037   001AFE                     u7711:
 13038   001AFE  EF94  F00D         	goto	l6720
 13039   001B02                     u7710:
 13040   001B02  2821               	incf	___flmul@aexp^0,w,c
 13041   001B04  A4D8               	btfss	status,2,c
 13042   001B06  EF87  F00D         	goto	u7721
 13043   001B0A  EF89  F00D         	goto	u7720
 13044   001B0E                     u7721:
 13045   001B0E  EF91  F00D         	goto	l6718
 13046   001B12                     u7720:
 13047   001B12  0E00               	movlw	0
 13048   001B14  6E18               	movwf	___flmul@a^0,c
 13049   001B16  0E00               	movlw	0
 13050   001B18  6E19               	movwf	(___flmul@a+1)^0,c
 13051   001B1A  0E00               	movlw	0
 13052   001B1C  6E1A               	movwf	(___flmul@a+2)^0,c
 13053   001B1E  0E00               	movlw	0
 13054   001B20  6E1B               	movwf	(___flmul@a+3)^0,c
 13055   001B22                     l6718:
 13056   001B22  8E1A               	bsf	(___flmul@a+2)^0,7,c
 13057   001B24  EF9C  F00D         	goto	l1324
 13058   001B28                     l6720:
 13059   001B28  0E00               	movlw	0
 13060   001B2A  6E18               	movwf	___flmul@a^0,c
 13061   001B2C  0E00               	movlw	0
 13062   001B2E  6E19               	movwf	(___flmul@a+1)^0,c
 13063   001B30  0E00               	movlw	0
 13064   001B32  6E1A               	movwf	(___flmul@a+2)^0,c
 13065   001B34  0E00               	movlw	0
 13066   001B36  6E1B               	movwf	(___flmul@a+3)^0,c
 13067   001B38                     l1324:
 13068   001B38  5021               	movf	___flmul@aexp^0,w,c
 13069   001B3A  B4D8               	btfsc	status,2,c
 13070   001B3C  EFA2  F00D         	goto	u7731
 13071   001B40  EFA4  F00D         	goto	u7730
 13072   001B44                     u7731:
 13073   001B44  EFAC  F00D         	goto	l6724
 13074   001B48                     u7730:
 13075   001B48  5026               	movf	___flmul@bexp^0,w,c
 13076   001B4A  A4D8               	btfss	status,2,c
 13077   001B4C  EFAA  F00D         	goto	u7741
 13078   001B50  EFAC  F00D         	goto	u7740
 13079   001B54                     u7741:
 13080   001B54  EFB6  F00D         	goto	l6728
 13081   001B58                     u7740:
 13082   001B58                     l6724:
 13083   001B58  0E00               	movlw	0
 13084   001B5A  6E14               	movwf	?___flmul^0,c
 13085   001B5C  0E00               	movlw	0
 13086   001B5E  6E15               	movwf	(?___flmul+1)^0,c
 13087   001B60  0E00               	movlw	0
 13088   001B62  6E16               	movwf	(?___flmul+2)^0,c
 13089   001B64  0E00               	movlw	0
 13090   001B66  6E17               	movwf	(?___flmul+3)^0,c
 13091   001B68  EF4E  F00F         	goto	l1328
 13092   001B6C                     l6728:
 13093   001B6C  501A               	movf	(___flmul@a+2)^0,w,c
 13094   001B6E  0214               	mulwf	___flmul@b^0,c
 13095   001B70  CFF3 F02B          	movff	prodl,___flmul@temp
 13096   001B74  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13097   001B78  502B               	movf	___flmul@temp^0,w,c
 13098   001B7A  6E22               	movwf	___flmul@grs^0,c
 13099   001B7C  6A23               	clrf	(___flmul@grs+1)^0,c
 13100   001B7E  6A24               	clrf	(___flmul@grs+2)^0,c
 13101   001B80  6A25               	clrf	(___flmul@grs+3)^0,c
 13102   001B82  502C               	movf	(___flmul@temp+1)^0,w,c
 13103   001B84  6E27               	movwf	___flmul@prod^0,c
 13104   001B86  6A28               	clrf	(___flmul@prod+1)^0,c
 13105   001B88  6A29               	clrf	(___flmul@prod+2)^0,c
 13106   001B8A  6A2A               	clrf	(___flmul@prod+3)^0,c
 13107   001B8C  5019               	movf	(___flmul@a+1)^0,w,c
 13108   001B8E  0215               	mulwf	(___flmul@b+1)^0,c
 13109   001B90  CFF3 F02B          	movff	prodl,___flmul@temp
 13110   001B94  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13111   001B98  502B               	movf	___flmul@temp^0,w,c
 13112   001B9A  2622               	addwf	___flmul@grs^0,f,c
 13113   001B9C  0E00               	movlw	0
 13114   001B9E  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13115   001BA0  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13116   001BA2  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13117   001BA4  502C               	movf	(___flmul@temp+1)^0,w,c
 13118   001BA6  2627               	addwf	___flmul@prod^0,f,c
 13119   001BA8  0E00               	movlw	0
 13120   001BAA  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13121   001BAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13122   001BAE  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13123   001BB0  5018               	movf	___flmul@a^0,w,c
 13124   001BB2  0216               	mulwf	(___flmul@b+2)^0,c
 13125   001BB4  CFF3 F02B          	movff	prodl,___flmul@temp
 13126   001BB8  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13127   001BBC  502B               	movf	___flmul@temp^0,w,c
 13128   001BBE  2622               	addwf	___flmul@grs^0,f,c
 13129   001BC0  0E00               	movlw	0
 13130   001BC2  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13131   001BC4  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13132   001BC6  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13133   001BC8  502C               	movf	(___flmul@temp+1)^0,w,c
 13134   001BCA  2627               	addwf	___flmul@prod^0,f,c
 13135   001BCC  0E00               	movlw	0
 13136   001BCE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13137   001BD0  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13138   001BD2  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13139   001BD4  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13140   001BD8  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13141   001BDC  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13142   001BE0  6A22               	clrf	___flmul@grs^0,c
 13143   001BE2  5018               	movf	___flmul@a^0,w,c
 13144   001BE4  0215               	mulwf	(___flmul@b+1)^0,c
 13145   001BE6  CFF3 F02B          	movff	prodl,___flmul@temp
 13146   001BEA  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13147   001BEE  502B               	movf	___flmul@temp^0,w,c
 13148   001BF0  2622               	addwf	___flmul@grs^0,f,c
 13149   001BF2  502C               	movf	(___flmul@temp+1)^0,w,c
 13150   001BF4  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13151   001BF6  0E00               	movlw	0
 13152   001BF8  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13153   001BFA  0E00               	movlw	0
 13154   001BFC  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13155   001BFE  5019               	movf	(___flmul@a+1)^0,w,c
 13156   001C00  0214               	mulwf	___flmul@b^0,c
 13157   001C02  CFF3 F02B          	movff	prodl,___flmul@temp
 13158   001C06  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13159   001C0A  502B               	movf	___flmul@temp^0,w,c
 13160   001C0C  2622               	addwf	___flmul@grs^0,f,c
 13161   001C0E  502C               	movf	(___flmul@temp+1)^0,w,c
 13162   001C10  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13163   001C12  0E00               	movlw	0
 13164   001C14  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13165   001C16  0E00               	movlw	0
 13166   001C18  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13167   001C1A  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13168   001C1E  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13169   001C22  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13170   001C26  6A22               	clrf	___flmul@grs^0,c
 13171   001C28  5018               	movf	___flmul@a^0,w,c
 13172   001C2A  0214               	mulwf	___flmul@b^0,c
 13173   001C2C  CFF3 F02B          	movff	prodl,___flmul@temp
 13174   001C30  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13175   001C34  502B               	movf	___flmul@temp^0,w,c
 13176   001C36  2622               	addwf	___flmul@grs^0,f,c
 13177   001C38  502C               	movf	(___flmul@temp+1)^0,w,c
 13178   001C3A  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13179   001C3C  0E00               	movlw	0
 13180   001C3E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13181   001C40  0E00               	movlw	0
 13182   001C42  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13183   001C44  501A               	movf	(___flmul@a+2)^0,w,c
 13184   001C46  0215               	mulwf	(___flmul@b+1)^0,c
 13185   001C48  CFF3 F02B          	movff	prodl,___flmul@temp
 13186   001C4C  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13187   001C50  502B               	movf	___flmul@temp^0,w,c
 13188   001C52  2627               	addwf	___flmul@prod^0,f,c
 13189   001C54  502C               	movf	(___flmul@temp+1)^0,w,c
 13190   001C56  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13191   001C58  0E00               	movlw	0
 13192   001C5A  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13193   001C5C  0E00               	movlw	0
 13194   001C5E  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13195   001C60  5019               	movf	(___flmul@a+1)^0,w,c
 13196   001C62  0216               	mulwf	(___flmul@b+2)^0,c
 13197   001C64  CFF3 F02B          	movff	prodl,___flmul@temp
 13198   001C68  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13199   001C6C  502B               	movf	___flmul@temp^0,w,c
 13200   001C6E  2627               	addwf	___flmul@prod^0,f,c
 13201   001C70  502C               	movf	(___flmul@temp+1)^0,w,c
 13202   001C72  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13203   001C74  0E00               	movlw	0
 13204   001C76  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13205   001C78  0E00               	movlw	0
 13206   001C7A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13207   001C7C  501A               	movf	(___flmul@a+2)^0,w,c
 13208   001C7E  0216               	mulwf	(___flmul@b+2)^0,c
 13209   001C80  CFF3 F02B          	movff	prodl,___flmul@temp
 13210   001C84  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13211   001C88  502B               	movf	___flmul@temp^0,w,c
 13212   001C8A  6E1C               	movwf	??___flmul^0,c
 13213   001C8C  502C               	movf	(___flmul@temp+1)^0,w,c
 13214   001C8E  6E1D               	movwf	(??___flmul+1)^0,c
 13215   001C90  6A1E               	clrf	(??___flmul+2)^0,c
 13216   001C92  6A1F               	clrf	(??___flmul+3)^0,c
 13217   001C94  C01E  F01F         	movff	??___flmul+2,??___flmul+3
 13218   001C98  C01D  F01E         	movff	??___flmul+1,??___flmul+2
 13219   001C9C  C01C  F01D         	movff	??___flmul,??___flmul+1
 13220   001CA0  6A1C               	clrf	??___flmul^0,c
 13221   001CA2  501C               	movf	??___flmul^0,w,c
 13222   001CA4  2627               	addwf	___flmul@prod^0,f,c
 13223   001CA6  501D               	movf	(??___flmul+1)^0,w,c
 13224   001CA8  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13225   001CAA  501E               	movf	(??___flmul+2)^0,w,c
 13226   001CAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13227   001CAE  501F               	movf	(??___flmul+3)^0,w,c
 13228   001CB0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13229   001CB2  C022  F01C         	movff	___flmul@grs,??___flmul
 13230   001CB6  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
 13231   001CBA  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
 13232   001CBE  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
 13233   001CC2  0E19               	movlw	25
 13234   001CC4  EF69  F00E         	goto	u7750
 13235   001CC8                     u7755:
 13236   001CC8  90D8               	bcf	status,0,c
 13237   001CCA  321F               	rrcf	(??___flmul+3)^0,f,c
 13238   001CCC  321E               	rrcf	(??___flmul+2)^0,f,c
 13239   001CCE  321D               	rrcf	(??___flmul+1)^0,f,c
 13240   001CD0  321C               	rrcf	??___flmul^0,f,c
 13241   001CD2                     u7750:
 13242   001CD2  2EE8               	decfsz	wreg,f,c
 13243   001CD4  EF64  F00E         	goto	u7755
 13244   001CD8  501C               	movf	??___flmul^0,w,c
 13245   001CDA  2627               	addwf	___flmul@prod^0,f,c
 13246   001CDC  501D               	movf	(??___flmul+1)^0,w,c
 13247   001CDE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13248   001CE0  501E               	movf	(??___flmul+2)^0,w,c
 13249   001CE2  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13250   001CE4  501F               	movf	(??___flmul+3)^0,w,c
 13251   001CE6  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13252   001CE8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13253   001CEC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13254   001CF0  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13255   001CF4  6A22               	clrf	___flmul@grs^0,c
 13256   001CF6  5021               	movf	___flmul@aexp^0,w,c
 13257   001CF8  C026  F01C         	movff	___flmul@bexp,??___flmul
 13258   001CFC  6A1D               	clrf	(??___flmul+1)^0,c
 13259   001CFE  261C               	addwf	??___flmul^0,f,c
 13260   001D00  0E00               	movlw	0
 13261   001D02  221D               	addwfc	(??___flmul+1)^0,f,c
 13262   001D04  0E82               	movlw	130
 13263   001D06  241C               	addwf	??___flmul^0,w,c
 13264   001D08  6E2B               	movwf	___flmul@temp^0,c
 13265   001D0A  0EFF               	movlw	255
 13266   001D0C  201D               	addwfc	(??___flmul+1)^0,w,c
 13267   001D0E  6E2C               	movwf	(___flmul@temp+1)^0,c
 13268   001D10  EF9F  F00E         	goto	l6776
 13269   001D14                     l6770:
 13270   001D14  90D8               	bcf	status,0,c
 13271   001D16  3627               	rlcf	___flmul@prod^0,f,c
 13272   001D18  3628               	rlcf	(___flmul@prod+1)^0,f,c
 13273   001D1A  3629               	rlcf	(___flmul@prod+2)^0,f,c
 13274   001D1C  362A               	rlcf	(___flmul@prod+3)^0,f,c
 13275   001D1E  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13276   001D20  EF94  F00E         	goto	u7761
 13277   001D24  EF96  F00E         	goto	u7760
 13278   001D28                     u7761:
 13279   001D28  EF97  F00E         	goto	l1331
 13280   001D2C                     u7760:
 13281   001D2C  8027               	bsf	___flmul@prod^0,0,c
 13282   001D2E                     l1331:
 13283   001D2E  90D8               	bcf	status,0,c
 13284   001D30  3622               	rlcf	___flmul@grs^0,f,c
 13285   001D32  3623               	rlcf	(___flmul@grs+1)^0,f,c
 13286   001D34  3624               	rlcf	(___flmul@grs+2)^0,f,c
 13287   001D36  3625               	rlcf	(___flmul@grs+3)^0,f,c
 13288   001D38  062B               	decf	___flmul@temp^0,f,c
 13289   001D3A  A0D8               	btfss	status,0,c
 13290   001D3C  062C               	decf	(___flmul@temp+1)^0,f,c
 13291   001D3E                     l6776:
 13292   001D3E  AE29               	btfss	(___flmul@prod+2)^0,7,c
 13293   001D40  EFA4  F00E         	goto	u7771
 13294   001D44  EFA6  F00E         	goto	u7770
 13295   001D48                     u7771:
 13296   001D48  EF8A  F00E         	goto	l6770
 13297   001D4C                     u7770:
 13298   001D4C  0E00               	movlw	0
 13299   001D4E  6E21               	movwf	___flmul@aexp^0,c
 13300   001D50  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13301   001D52  EFAD  F00E         	goto	u7781
 13302   001D56  EFAF  F00E         	goto	u7780
 13303   001D5A                     u7781:
 13304   001D5A  EFD3  F00E         	goto	l1333
 13305   001D5E                     u7780:
 13306   001D5E  0EFF               	movlw	255
 13307   001D60  1422               	andwf	___flmul@grs^0,w,c
 13308   001D62  6E1C               	movwf	??___flmul^0,c
 13309   001D64  0EFF               	movlw	255
 13310   001D66  1423               	andwf	(___flmul@grs+1)^0,w,c
 13311   001D68  6E1D               	movwf	(??___flmul+1)^0,c
 13312   001D6A  0EFF               	movlw	255
 13313   001D6C  1424               	andwf	(___flmul@grs+2)^0,w,c
 13314   001D6E  6E1E               	movwf	(??___flmul+2)^0,c
 13315   001D70  0E7F               	movlw	127
 13316   001D72  1425               	andwf	(___flmul@grs+3)^0,w,c
 13317   001D74  6E1F               	movwf	(??___flmul+3)^0,c
 13318   001D76  501C               	movf	??___flmul^0,w,c
 13319   001D78  101D               	iorwf	(??___flmul+1)^0,w,c
 13320   001D7A  101E               	iorwf	(??___flmul+2)^0,w,c
 13321   001D7C  101F               	iorwf	(??___flmul+3)^0,w,c
 13322   001D7E  B4D8               	btfsc	status,2,c
 13323   001D80  EFC4  F00E         	goto	u7791
 13324   001D84  EFC6  F00E         	goto	u7790
 13325   001D88                     u7791:
 13326   001D88  EFCA  F00E         	goto	l1334
 13327   001D8C                     u7790:
 13328   001D8C                     l6784:
 13329   001D8C  0E01               	movlw	1
 13330   001D8E  6E21               	movwf	___flmul@aexp^0,c
 13331   001D90  EFD3  F00E         	goto	l1333
 13332   001D94                     l1334:
 13333   001D94  A027               	btfss	___flmul@prod^0,0,c
 13334   001D96  EFCF  F00E         	goto	u7801
 13335   001D9A  EFD1  F00E         	goto	u7800
 13336   001D9E                     u7801:
 13337   001D9E  EFD3  F00E         	goto	l1333
 13338   001DA2                     u7800:
 13339   001DA2  EFC6  F00E         	goto	l6784
 13340   001DA6                     l1333:
 13341   001DA6  5021               	movf	___flmul@aexp^0,w,c
 13342   001DA8  B4D8               	btfsc	status,2,c
 13343   001DAA  EFD9  F00E         	goto	u7811
 13344   001DAE  EFDB  F00E         	goto	u7810
 13345   001DB2                     u7811:
 13346   001DB2  EFFF  F00E         	goto	l6796
 13347   001DB6                     u7810:
 13348   001DB6  0E01               	movlw	1
 13349   001DB8  2627               	addwf	___flmul@prod^0,f,c
 13350   001DBA  0E00               	movlw	0
 13351   001DBC  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13352   001DBE  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13353   001DC0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13354   001DC2  A02A               	btfss	(___flmul@prod+3)^0,0,c
 13355   001DC4  EFE6  F00E         	goto	u7821
 13356   001DC8  EFE8  F00E         	goto	u7820
 13357   001DCC                     u7821:
 13358   001DCC  EFFF  F00E         	goto	l6796
 13359   001DD0                     u7820:
 13360   001DD0  C027  F01C         	movff	___flmul@prod,??___flmul
 13361   001DD4  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
 13362   001DD8  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
 13363   001DDC  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
 13364   001DE0  341F               	rlcf	(??___flmul+3)^0,w,c
 13365   001DE2  321F               	rrcf	(??___flmul+3)^0,f,c
 13366   001DE4  321E               	rrcf	(??___flmul+2)^0,f,c
 13367   001DE6  321D               	rrcf	(??___flmul+1)^0,f,c
 13368   001DE8  321C               	rrcf	??___flmul^0,f,c
 13369   001DEA  C01C  F027         	movff	??___flmul,___flmul@prod
 13370   001DEE  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
 13371   001DF2  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
 13372   001DF6  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
 13373   001DFA  4A2B               	infsnz	___flmul@temp^0,f,c
 13374   001DFC  2A2C               	incf	(___flmul@temp+1)^0,f,c
 13375   001DFE                     l6796:
 13376   001DFE  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 13377   001E00  EF0A  F00F         	goto	u7831
 13378   001E04  502C               	movf	(___flmul@temp+1)^0,w,c
 13379   001E06  E108               	bnz	u7830
 13380   001E08  282B               	incf	___flmul@temp^0,w,c
 13381   001E0A  A0D8               	btfss	status,0,c
 13382   001E0C  EF0A  F00F         	goto	u7831
 13383   001E10  EF0C  F00F         	goto	u7830
 13384   001E14                     u7831:
 13385   001E14  EF16  F00F         	goto	l6800
 13386   001E18                     u7830:
 13387   001E18  0E00               	movlw	0
 13388   001E1A  6E27               	movwf	___flmul@prod^0,c
 13389   001E1C  0E00               	movlw	0
 13390   001E1E  6E28               	movwf	(___flmul@prod+1)^0,c
 13391   001E20  0E80               	movlw	128
 13392   001E22  6E29               	movwf	(___flmul@prod+2)^0,c
 13393   001E24  0E7F               	movlw	127
 13394   001E26  6E2A               	movwf	(___flmul@prod+3)^0,c
 13395   001E28  EF44  F00F         	goto	l6812
 13396   001E2C                     l6800:
 13397   001E2C  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 13398   001E2E  EF23  F00F         	goto	u7840
 13399   001E32  502C               	movf	(___flmul@temp+1)^0,w,c
 13400   001E34  E106               	bnz	u7841
 13401   001E36  042B               	decf	___flmul@temp^0,w,c
 13402   001E38  B0D8               	btfsc	status,0,c
 13403   001E3A  EF21  F00F         	goto	u7841
 13404   001E3E  EF23  F00F         	goto	u7840
 13405   001E42                     u7841:
 13406   001E42  EF2F  F00F         	goto	l1341
 13407   001E46                     u7840:
 13408   001E46  0E00               	movlw	0
 13409   001E48  6E27               	movwf	___flmul@prod^0,c
 13410   001E4A  0E00               	movlw	0
 13411   001E4C  6E28               	movwf	(___flmul@prod+1)^0,c
 13412   001E4E  0E00               	movlw	0
 13413   001E50  6E29               	movwf	(___flmul@prod+2)^0,c
 13414   001E52  0E00               	movlw	0
 13415   001E54  6E2A               	movwf	(___flmul@prod+3)^0,c
 13416   001E56  0E00               	movlw	0
 13417   001E58  6E20               	movwf	___flmul@sign^0,c
 13418   001E5A  EF44  F00F         	goto	l6812
 13419   001E5E                     l1341:
 13420   001E5E  C02B  F026         	movff	___flmul@temp,___flmul@bexp
 13421   001E62  0EFF               	movlw	255
 13422   001E64  1627               	andwf	___flmul@prod^0,f,c
 13423   001E66  0EFF               	movlw	255
 13424   001E68  1628               	andwf	(___flmul@prod+1)^0,f,c
 13425   001E6A  0E7F               	movlw	127
 13426   001E6C  1629               	andwf	(___flmul@prod+2)^0,f,c
 13427   001E6E  0E00               	movlw	0
 13428   001E70  162A               	andwf	(___flmul@prod+3)^0,f,c
 13429   001E72  A026               	btfss	___flmul@bexp^0,0,c
 13430   001E74  EF3E  F00F         	goto	u7851
 13431   001E78  EF40  F00F         	goto	u7850
 13432   001E7C                     u7851:
 13433   001E7C  EF41  F00F         	goto	l6810
 13434   001E80                     u7850:
 13435   001E80  8E29               	bsf	(___flmul@prod+2)^0,7,c
 13436   001E82                     l6810:
 13437   001E82  90D8               	bcf	status,0,c
 13438   001E84  3026               	rrcf	___flmul@bexp^0,w,c
 13439   001E86  6E2A               	movwf	(___flmul@prod+3)^0,c
 13440   001E88                     l6812:
 13441   001E88  5020               	movf	___flmul@sign^0,w,c
 13442   001E8A  122A               	iorwf	(___flmul@prod+3)^0,f,c
 13443   001E8C  C027  F014         	movff	___flmul@prod,?___flmul
 13444   001E90  C028  F015         	movff	___flmul@prod+1,?___flmul+1
 13445   001E94  C029  F016         	movff	___flmul@prod+2,?___flmul+2
 13446   001E98  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
 13447   001E9C                     l1328:
 13448   001E9C  0012               	return		;funcret
 13449   001E9E                     __end_of___flmul:
 13450                           	callstack 0
 13451                           
 13452 ;; *************** function ___flge *****************
 13453 ;; Defined at:
 13454 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flge.c"
 13455 ;; Parameters:    Size  Location     Type
 13456 ;;  ff1             4   44[COMRAM] unsigned char 
 13457 ;;  ff2             4   48[COMRAM] unsigned char 
 13458 ;; Auto vars:     Size  Location     Type
 13459 ;;		None
 13460 ;; Return value:  Size  Location     Type
 13461 ;;		None               void
 13462 ;; Registers used:
 13463 ;;		wreg, status,2, status,0
 13464 ;; Tracked objects:
 13465 ;;		On entry : 0/0
 13466 ;;		On exit  : 0/0
 13467 ;;		Unchanged: 0/0
 13468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13469 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13471 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13472 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13473 ;;Total ram usage:       12 bytes
 13474 ;; Hardware stack levels used: 1
 13475 ;; Hardware stack levels required when called: 1
 13476 ;; This function calls:
 13477 ;;		Nothing
 13478 ;; This function is called by:
 13479 ;;		_efgtoa
 13480 ;; This function uses a non-reentrant model
 13481 ;;
 13482                           
 13483                           	psect	text47
 13484   004408                     __ptext47:
 13485                           	callstack 0
 13486   004408                     ___flge:
 13487                           	callstack 24
 13488   004408  0E00               	movlw	0
 13489   00440A  142D               	andwf	___flge@ff1^0,w,c
 13490   00440C  6E35               	movwf	??___flge^0,c
 13491   00440E  0E00               	movlw	0
 13492   004410  142E               	andwf	(___flge@ff1+1)^0,w,c
 13493   004412  6E36               	movwf	(??___flge+1)^0,c
 13494   004414  0E80               	movlw	128
 13495   004416  142F               	andwf	(___flge@ff1+2)^0,w,c
 13496   004418  6E37               	movwf	(??___flge+2)^0,c
 13497   00441A  0E7F               	movlw	127
 13498   00441C  1430               	andwf	(___flge@ff1+3)^0,w,c
 13499   00441E  6E38               	movwf	(??___flge+3)^0,c
 13500   004420  5035               	movf	??___flge^0,w,c
 13501   004422  1036               	iorwf	(??___flge+1)^0,w,c
 13502   004424  1037               	iorwf	(??___flge+2)^0,w,c
 13503   004426  1038               	iorwf	(??___flge+3)^0,w,c
 13504   004428  A4D8               	btfss	status,2,c
 13505   00442A  EF19  F022         	goto	u8011
 13506   00442E  EF1B  F022         	goto	u8010
 13507   004432                     u8011:
 13508   004432  EF23  F022         	goto	l6924
 13509   004436                     u8010:
 13510   004436  0E00               	movlw	0
 13511   004438  6E2D               	movwf	___flge@ff1^0,c
 13512   00443A  0E00               	movlw	0
 13513   00443C  6E2E               	movwf	(___flge@ff1+1)^0,c
 13514   00443E  0E00               	movlw	0
 13515   004440  6E2F               	movwf	(___flge@ff1+2)^0,c
 13516   004442  0E00               	movlw	0
 13517   004444  6E30               	movwf	(___flge@ff1+3)^0,c
 13518   004446                     l6924:
 13519   004446  0E00               	movlw	0
 13520   004448  1431               	andwf	___flge@ff2^0,w,c
 13521   00444A  6E35               	movwf	??___flge^0,c
 13522   00444C  0E00               	movlw	0
 13523   00444E  1432               	andwf	(___flge@ff2+1)^0,w,c
 13524   004450  6E36               	movwf	(??___flge+1)^0,c
 13525   004452  0E80               	movlw	128
 13526   004454  1433               	andwf	(___flge@ff2+2)^0,w,c
 13527   004456  6E37               	movwf	(??___flge+2)^0,c
 13528   004458  0E7F               	movlw	127
 13529   00445A  1434               	andwf	(___flge@ff2+3)^0,w,c
 13530   00445C  6E38               	movwf	(??___flge+3)^0,c
 13531   00445E  5035               	movf	??___flge^0,w,c
 13532   004460  1036               	iorwf	(??___flge+1)^0,w,c
 13533   004462  1037               	iorwf	(??___flge+2)^0,w,c
 13534   004464  1038               	iorwf	(??___flge+3)^0,w,c
 13535   004466  A4D8               	btfss	status,2,c
 13536   004468  EF38  F022         	goto	u8021
 13537   00446C  EF3A  F022         	goto	u8020
 13538   004470                     u8021:
 13539   004470  EF42  F022         	goto	l6928
 13540   004474                     u8020:
 13541   004474  0E00               	movlw	0
 13542   004476  6E31               	movwf	___flge@ff2^0,c
 13543   004478  0E00               	movlw	0
 13544   00447A  6E32               	movwf	(___flge@ff2+1)^0,c
 13545   00447C  0E00               	movlw	0
 13546   00447E  6E33               	movwf	(___flge@ff2+2)^0,c
 13547   004480  0E00               	movlw	0
 13548   004482  6E34               	movwf	(___flge@ff2+3)^0,c
 13549   004484                     l6928:
 13550   004484  AE30               	btfss	(___flge@ff1+3)^0,7,c
 13551   004486  EF47  F022         	goto	u8031
 13552   00448A  EF49  F022         	goto	u8030
 13553   00448E                     u8031:
 13554   00448E  EF52  F022         	goto	l6932
 13555   004492                     u8030:
 13556   004492  6C2D               	negf	___flge@ff1^0,c
 13557   004494  1E2E               	comf	(___flge@ff1+1)^0,f,c
 13558   004496  B0D8               	btfsc	status,0,c
 13559   004498  2A2E               	incf	(___flge@ff1+1)^0,f,c
 13560   00449A  1E2F               	comf	(___flge@ff1+2)^0,f,c
 13561   00449C  B0D8               	btfsc	status,0,c
 13562   00449E  2A2F               	incf	(___flge@ff1+2)^0,f,c
 13563   0044A0  0E80               	movlw	128
 13564   0044A2  5630               	subfwb	(___flge@ff1+3)^0,f,c
 13565   0044A4                     l6932:
 13566   0044A4  AE34               	btfss	(___flge@ff2+3)^0,7,c
 13567   0044A6  EF57  F022         	goto	u8041
 13568   0044AA  EF59  F022         	goto	u8040
 13569   0044AE                     u8041:
 13570   0044AE  EF62  F022         	goto	l975
 13571   0044B2                     u8040:
 13572   0044B2  6C31               	negf	___flge@ff2^0,c
 13573   0044B4  1E32               	comf	(___flge@ff2+1)^0,f,c
 13574   0044B6  B0D8               	btfsc	status,0,c
 13575   0044B8  2A32               	incf	(___flge@ff2+1)^0,f,c
 13576   0044BA  1E33               	comf	(___flge@ff2+2)^0,f,c
 13577   0044BC  B0D8               	btfsc	status,0,c
 13578   0044BE  2A33               	incf	(___flge@ff2+2)^0,f,c
 13579   0044C0  0E80               	movlw	128
 13580   0044C2  5634               	subfwb	(___flge@ff2+3)^0,f,c
 13581   0044C4                     l975:
 13582   0044C4  0E00               	movlw	0
 13583   0044C6  1A2D               	xorwf	___flge@ff1^0,f,c
 13584   0044C8  0E00               	movlw	0
 13585   0044CA  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
 13586   0044CC  0E00               	movlw	0
 13587   0044CE  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
 13588   0044D0  0E80               	movlw	128
 13589   0044D2  1A30               	xorwf	(___flge@ff1+3)^0,f,c
 13590   0044D4  0E00               	movlw	0
 13591   0044D6  1A31               	xorwf	___flge@ff2^0,f,c
 13592   0044D8  0E00               	movlw	0
 13593   0044DA  1A32               	xorwf	(___flge@ff2+1)^0,f,c
 13594   0044DC  0E00               	movlw	0
 13595   0044DE  1A33               	xorwf	(___flge@ff2+2)^0,f,c
 13596   0044E0  0E80               	movlw	128
 13597   0044E2  1A34               	xorwf	(___flge@ff2+3)^0,f,c
 13598   0044E4  5031               	movf	___flge@ff2^0,w,c
 13599   0044E6  5C2D               	subwf	___flge@ff1^0,w,c
 13600   0044E8  5032               	movf	(___flge@ff2+1)^0,w,c
 13601   0044EA  582E               	subwfb	(___flge@ff1+1)^0,w,c
 13602   0044EC  5033               	movf	(___flge@ff2+2)^0,w,c
 13603   0044EE  582F               	subwfb	(___flge@ff1+2)^0,w,c
 13604   0044F0  5034               	movf	(___flge@ff2+3)^0,w,c
 13605   0044F2  5830               	subwfb	(___flge@ff1+3)^0,w,c
 13606   0044F4  B0D8               	btfsc	status,0,c
 13607   0044F6  EF7F  F022         	goto	u8051
 13608   0044FA  EF81  F022         	goto	u8050
 13609   0044FE                     u8051:
 13610   0044FE  EF84  F022         	goto	l6938
 13611   004502                     u8050:
 13612   004502  90D8               	bcf	status,0,c
 13613   004504  EF85  F022         	goto	l980
 13614   004508                     l6938:
 13615   004508  80D8               	bsf	status,0,c
 13616   00450A                     l980:
 13617   00450A  0012               	return		;funcret
 13618   00450C                     __end_of___flge:
 13619                           	callstack 0
 13620                           
 13621 ;; *************** function ___fleq *****************
 13622 ;; Defined at:
 13623 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fleq.c"
 13624 ;; Parameters:    Size  Location     Type
 13625 ;;  ff1             4    5[COMRAM] unsigned char 
 13626 ;;  ff2             4    9[COMRAM] unsigned char 
 13627 ;; Auto vars:     Size  Location     Type
 13628 ;;		None
 13629 ;; Return value:  Size  Location     Type
 13630 ;;		None               void
 13631 ;; Registers used:
 13632 ;;		wreg, status,2, status,0
 13633 ;; Tracked objects:
 13634 ;;		On entry : 0/0
 13635 ;;		On exit  : 0/0
 13636 ;;		Unchanged: 0/0
 13637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13638 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13640 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13641 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13642 ;;Total ram usage:       12 bytes
 13643 ;; Hardware stack levels used: 1
 13644 ;; Hardware stack levels required when called: 1
 13645 ;; This function calls:
 13646 ;;		Nothing
 13647 ;; This function is called by:
 13648 ;;		_efgtoa
 13649 ;; This function uses a non-reentrant model
 13650 ;;
 13651                           
 13652                           	psect	text48
 13653   004B72                     __ptext48:
 13654                           	callstack 0
 13655   004B72                     ___fleq:
 13656                           	callstack 24
 13657   004B72  0E00               	movlw	0
 13658   004B74  1406               	andwf	___fleq@ff1^0,w,c
 13659   004B76  6E0E               	movwf	??___fleq^0,c
 13660   004B78  0E00               	movlw	0
 13661   004B7A  1407               	andwf	(___fleq@ff1+1)^0,w,c
 13662   004B7C  6E0F               	movwf	(??___fleq+1)^0,c
 13663   004B7E  0E80               	movlw	128
 13664   004B80  1408               	andwf	(___fleq@ff1+2)^0,w,c
 13665   004B82  6E10               	movwf	(??___fleq+2)^0,c
 13666   004B84  0E7F               	movlw	127
 13667   004B86  1409               	andwf	(___fleq@ff1+3)^0,w,c
 13668   004B88  6E11               	movwf	(??___fleq+3)^0,c
 13669   004B8A  500E               	movf	??___fleq^0,w,c
 13670   004B8C  100F               	iorwf	(??___fleq+1)^0,w,c
 13671   004B8E  1010               	iorwf	(??___fleq+2)^0,w,c
 13672   004B90  1011               	iorwf	(??___fleq+3)^0,w,c
 13673   004B92  A4D8               	btfss	status,2,c
 13674   004B94  EFCE  F025         	goto	u7981
 13675   004B98  EFD0  F025         	goto	u7980
 13676   004B9C                     u7981:
 13677   004B9C  EFD8  F025         	goto	l6908
 13678   004BA0                     u7980:
 13679   004BA0  0E00               	movlw	0
 13680   004BA2  6E06               	movwf	___fleq@ff1^0,c
 13681   004BA4  0E00               	movlw	0
 13682   004BA6  6E07               	movwf	(___fleq@ff1+1)^0,c
 13683   004BA8  0E00               	movlw	0
 13684   004BAA  6E08               	movwf	(___fleq@ff1+2)^0,c
 13685   004BAC  0E00               	movlw	0
 13686   004BAE  6E09               	movwf	(___fleq@ff1+3)^0,c
 13687   004BB0                     l6908:
 13688   004BB0  0E00               	movlw	0
 13689   004BB2  140A               	andwf	___fleq@ff2^0,w,c
 13690   004BB4  6E0E               	movwf	??___fleq^0,c
 13691   004BB6  0E00               	movlw	0
 13692   004BB8  140B               	andwf	(___fleq@ff2+1)^0,w,c
 13693   004BBA  6E0F               	movwf	(??___fleq+1)^0,c
 13694   004BBC  0E80               	movlw	128
 13695   004BBE  140C               	andwf	(___fleq@ff2+2)^0,w,c
 13696   004BC0  6E10               	movwf	(??___fleq+2)^0,c
 13697   004BC2  0E7F               	movlw	127
 13698   004BC4  140D               	andwf	(___fleq@ff2+3)^0,w,c
 13699   004BC6  6E11               	movwf	(??___fleq+3)^0,c
 13700   004BC8  500E               	movf	??___fleq^0,w,c
 13701   004BCA  100F               	iorwf	(??___fleq+1)^0,w,c
 13702   004BCC  1010               	iorwf	(??___fleq+2)^0,w,c
 13703   004BCE  1011               	iorwf	(??___fleq+3)^0,w,c
 13704   004BD0  A4D8               	btfss	status,2,c
 13705   004BD2  EFED  F025         	goto	u7991
 13706   004BD6  EFEF  F025         	goto	u7990
 13707   004BDA                     u7991:
 13708   004BDA  EFF7  F025         	goto	l6912
 13709   004BDE                     u7990:
 13710   004BDE  0E00               	movlw	0
 13711   004BE0  6E0A               	movwf	___fleq@ff2^0,c
 13712   004BE2  0E00               	movlw	0
 13713   004BE4  6E0B               	movwf	(___fleq@ff2+1)^0,c
 13714   004BE6  0E00               	movlw	0
 13715   004BE8  6E0C               	movwf	(___fleq@ff2+2)^0,c
 13716   004BEA  0E00               	movlw	0
 13717   004BEC  6E0D               	movwf	(___fleq@ff2+3)^0,c
 13718   004BEE                     l6912:
 13719   004BEE  500A               	movf	___fleq@ff2^0,w,c
 13720   004BF0  1806               	xorwf	___fleq@ff1^0,w,c
 13721   004BF2  E10F               	bnz	u8000
 13722   004BF4  500B               	movf	(___fleq@ff2+1)^0,w,c
 13723   004BF6  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 13724   004BF8  E10C               	bnz	u8000
 13725   004BFA  500C               	movf	(___fleq@ff2+2)^0,w,c
 13726   004BFC  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 13727   004BFE  E109               	bnz	u8000
 13728   004C00  500D               	movf	(___fleq@ff2+3)^0,w,c
 13729   004C02  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 13730   004C04  B4D8               	btfsc	status,2,c
 13731   004C06  EF07  F026         	goto	u8001
 13732   004C0A  EF09  F026         	goto	u8000
 13733   004C0E                     u8001:
 13734   004C0E  EF0C  F026         	goto	l6916
 13735   004C12                     u8000:
 13736   004C12  90D8               	bcf	status,0,c
 13737   004C14  EF0D  F026         	goto	l969
 13738   004C18                     l6916:
 13739   004C18  80D8               	bsf	status,0,c
 13740   004C1A                     l969:
 13741   004C1A  0012               	return		;funcret
 13742   004C1C                     __end_of___fleq:
 13743                           	callstack 0
 13744                           
 13745 ;; *************** function ___fldiv *****************
 13746 ;; Defined at:
 13747 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcdiv.c"
 13748 ;; Parameters:    Size  Location     Type
 13749 ;;  b               4   44[COMRAM] unsigned char 
 13750 ;;  a               4   48[COMRAM] unsigned char 
 13751 ;; Auto vars:     Size  Location     Type
 13752 ;;  grs             4   63[COMRAM] unsigned long 
 13753 ;;  rem             4   56[COMRAM] unsigned long 
 13754 ;;  new_exp         2   61[COMRAM] short 
 13755 ;;  aexp            1   68[COMRAM] unsigned char 
 13756 ;;  bexp            1   67[COMRAM] unsigned char 
 13757 ;;  sign            1   60[COMRAM] unsigned char 
 13758 ;; Return value:  Size  Location     Type
 13759 ;;                  4   44[COMRAM] unsigned char 
 13760 ;; Registers used:
 13761 ;;		wreg, status,2, status,0
 13762 ;; Tracked objects:
 13763 ;;		On entry : 0/0
 13764 ;;		On exit  : 0/0
 13765 ;;		Unchanged: 0/0
 13766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13767 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13768 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13769 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13770 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13771 ;;Total ram usage:       25 bytes
 13772 ;; Hardware stack levels used: 1
 13773 ;; Hardware stack levels required when called: 1
 13774 ;; This function calls:
 13775 ;;		Nothing
 13776 ;; This function is called by:
 13777 ;;		_runDAC
 13778 ;;		_runADC
 13779 ;;		_efgtoa
 13780 ;; This function uses a non-reentrant model
 13781 ;;
 13782                           
 13783                           	psect	text49
 13784   002A28                     __ptext49:
 13785                           	callstack 0
 13786   002A28                     ___fldiv:
 13787                           	callstack 24
 13788   002A28  5030               	movf	(___fldiv@b+3)^0,w,c
 13789   002A2A  0B80               	andlw	128
 13790   002A2C  6E3D               	movwf	___fldiv@sign^0,c
 13791   002A2E  5030               	movf	(___fldiv@b+3)^0,w,c
 13792   002A30  2430               	addwf	(___fldiv@b+3)^0,w,c
 13793   002A32  6E44               	movwf	___fldiv@bexp^0,c
 13794   002A34  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 13795   002A36  EF1F  F015         	goto	u7441
 13796   002A3A  EF21  F015         	goto	u7440
 13797   002A3E                     u7441:
 13798   002A3E  EF22  F015         	goto	l6556
 13799   002A42                     u7440:
 13800   002A42  8044               	bsf	___fldiv@bexp^0,0,c
 13801   002A44                     l6556:
 13802   002A44  5044               	movf	___fldiv@bexp^0,w,c
 13803   002A46  B4D8               	btfsc	status,2,c
 13804   002A48  EF28  F015         	goto	u7451
 13805   002A4C  EF2A  F015         	goto	u7450
 13806   002A50                     u7451:
 13807   002A50  EF3F  F015         	goto	l6566
 13808   002A54                     u7450:
 13809   002A54  2844               	incf	___fldiv@bexp^0,w,c
 13810   002A56  A4D8               	btfss	status,2,c
 13811   002A58  EF30  F015         	goto	u7461
 13812   002A5C  EF32  F015         	goto	u7460
 13813   002A60                     u7461:
 13814   002A60  EF3A  F015         	goto	l6562
 13815   002A64                     u7460:
 13816   002A64  0E00               	movlw	0
 13817   002A66  6E2D               	movwf	___fldiv@b^0,c
 13818   002A68  0E00               	movlw	0
 13819   002A6A  6E2E               	movwf	(___fldiv@b+1)^0,c
 13820   002A6C  0E00               	movlw	0
 13821   002A6E  6E2F               	movwf	(___fldiv@b+2)^0,c
 13822   002A70  0E00               	movlw	0
 13823   002A72  6E30               	movwf	(___fldiv@b+3)^0,c
 13824   002A74                     l6562:
 13825   002A74  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 13826   002A76  0E00               	movlw	0
 13827   002A78  6E30               	movwf	(___fldiv@b+3)^0,c
 13828   002A7A  EF47  F015         	goto	l6568
 13829   002A7E                     l6566:
 13830   002A7E  0E00               	movlw	0
 13831   002A80  6E2D               	movwf	___fldiv@b^0,c
 13832   002A82  0E00               	movlw	0
 13833   002A84  6E2E               	movwf	(___fldiv@b+1)^0,c
 13834   002A86  0E00               	movlw	0
 13835   002A88  6E2F               	movwf	(___fldiv@b+2)^0,c
 13836   002A8A  0E00               	movlw	0
 13837   002A8C  6E30               	movwf	(___fldiv@b+3)^0,c
 13838   002A8E                     l6568:
 13839   002A8E  5034               	movf	(___fldiv@a+3)^0,w,c
 13840   002A90  0B80               	andlw	128
 13841   002A92  1A3D               	xorwf	___fldiv@sign^0,f,c
 13842   002A94  5034               	movf	(___fldiv@a+3)^0,w,c
 13843   002A96  2434               	addwf	(___fldiv@a+3)^0,w,c
 13844   002A98  6E45               	movwf	___fldiv@aexp^0,c
 13845   002A9A  AE33               	btfss	(___fldiv@a+2)^0,7,c
 13846   002A9C  EF52  F015         	goto	u7471
 13847   002AA0  EF54  F015         	goto	u7470
 13848   002AA4                     u7471:
 13849   002AA4  EF55  F015         	goto	l6576
 13850   002AA8                     u7470:
 13851   002AA8  8045               	bsf	___fldiv@aexp^0,0,c
 13852   002AAA                     l6576:
 13853   002AAA  5045               	movf	___fldiv@aexp^0,w,c
 13854   002AAC  B4D8               	btfsc	status,2,c
 13855   002AAE  EF5B  F015         	goto	u7481
 13856   002AB2  EF5D  F015         	goto	u7480
 13857   002AB6                     u7481:
 13858   002AB6  EF72  F015         	goto	l6586
 13859   002ABA                     u7480:
 13860   002ABA  2845               	incf	___fldiv@aexp^0,w,c
 13861   002ABC  A4D8               	btfss	status,2,c
 13862   002ABE  EF63  F015         	goto	u7491
 13863   002AC2  EF65  F015         	goto	u7490
 13864   002AC6                     u7491:
 13865   002AC6  EF6D  F015         	goto	l6582
 13866   002ACA                     u7490:
 13867   002ACA  0E00               	movlw	0
 13868   002ACC  6E31               	movwf	___fldiv@a^0,c
 13869   002ACE  0E00               	movlw	0
 13870   002AD0  6E32               	movwf	(___fldiv@a+1)^0,c
 13871   002AD2  0E00               	movlw	0
 13872   002AD4  6E33               	movwf	(___fldiv@a+2)^0,c
 13873   002AD6  0E00               	movlw	0
 13874   002AD8  6E34               	movwf	(___fldiv@a+3)^0,c
 13875   002ADA                     l6582:
 13876   002ADA  8E33               	bsf	(___fldiv@a+2)^0,7,c
 13877   002ADC  0E00               	movlw	0
 13878   002ADE  6E34               	movwf	(___fldiv@a+3)^0,c
 13879   002AE0  EF7A  F015         	goto	l6588
 13880   002AE4                     l6586:
 13881   002AE4  0E00               	movlw	0
 13882   002AE6  6E31               	movwf	___fldiv@a^0,c
 13883   002AE8  0E00               	movlw	0
 13884   002AEA  6E32               	movwf	(___fldiv@a+1)^0,c
 13885   002AEC  0E00               	movlw	0
 13886   002AEE  6E33               	movwf	(___fldiv@a+2)^0,c
 13887   002AF0  0E00               	movlw	0
 13888   002AF2  6E34               	movwf	(___fldiv@a+3)^0,c
 13889   002AF4                     l6588:
 13890   002AF4  5031               	movf	___fldiv@a^0,w,c
 13891   002AF6  1032               	iorwf	(___fldiv@a+1)^0,w,c
 13892   002AF8  1033               	iorwf	(___fldiv@a+2)^0,w,c
 13893   002AFA  1034               	iorwf	(___fldiv@a+3)^0,w,c
 13894   002AFC  A4D8               	btfss	status,2,c
 13895   002AFE  EF83  F015         	goto	u7501
 13896   002B02  EF85  F015         	goto	u7500
 13897   002B06                     u7501:
 13898   002B06  EF9D  F015         	goto	l6600
 13899   002B0A                     u7500:
 13900   002B0A  0E00               	movlw	0
 13901   002B0C  6E2D               	movwf	___fldiv@b^0,c
 13902   002B0E  0E00               	movlw	0
 13903   002B10  6E2E               	movwf	(___fldiv@b+1)^0,c
 13904   002B12  0E00               	movlw	0
 13905   002B14  6E2F               	movwf	(___fldiv@b+2)^0,c
 13906   002B16  0E00               	movlw	0
 13907   002B18  6E30               	movwf	(___fldiv@b+3)^0,c
 13908   002B1A  0E80               	movlw	128
 13909   002B1C  122F               	iorwf	(___fldiv@b+2)^0,f,c
 13910   002B1E  0E7F               	movlw	127
 13911   002B20  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13912   002B22                     l6594:
 13913   002B22  503D               	movf	___fldiv@sign^0,w,c
 13914   002B24  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13915   002B26  C02D  F02D         	movff	___fldiv@b,?___fldiv
 13916   002B2A  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
 13917   002B2E  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
 13918   002B32  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
 13919   002B36  EFE0  F016         	goto	l1292
 13920   002B3A                     l6600:
 13921   002B3A  5044               	movf	___fldiv@bexp^0,w,c
 13922   002B3C  A4D8               	btfss	status,2,c
 13923   002B3E  EFA3  F015         	goto	u7511
 13924   002B42  EFA5  F015         	goto	u7510
 13925   002B46                     u7511:
 13926   002B46  EFAF  F015         	goto	l6608
 13927   002B4A                     u7510:
 13928   002B4A  0E00               	movlw	0
 13929   002B4C  6E2D               	movwf	?___fldiv^0,c
 13930   002B4E  0E00               	movlw	0
 13931   002B50  6E2E               	movwf	(?___fldiv+1)^0,c
 13932   002B52  0E00               	movlw	0
 13933   002B54  6E2F               	movwf	(?___fldiv+2)^0,c
 13934   002B56  0E00               	movlw	0
 13935   002B58  6E30               	movwf	(?___fldiv+3)^0,c
 13936   002B5A  EFE0  F016         	goto	l1292
 13937   002B5E                     l6608:
 13938   002B5E  5045               	movf	___fldiv@aexp^0,w,c
 13939   002B60  C044  F035         	movff	___fldiv@bexp,??___fldiv
 13940   002B64  6A36               	clrf	(??___fldiv+1)^0,c
 13941   002B66  5E35               	subwf	??___fldiv^0,f,c
 13942   002B68  0E00               	movlw	0
 13943   002B6A  5A36               	subwfb	(??___fldiv+1)^0,f,c
 13944   002B6C  0E7F               	movlw	127
 13945   002B6E  2435               	addwf	??___fldiv^0,w,c
 13946   002B70  6E3E               	movwf	___fldiv@new_exp^0,c
 13947   002B72  0E00               	movlw	0
 13948   002B74  2036               	addwfc	(??___fldiv+1)^0,w,c
 13949   002B76  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 13950   002B78  C02D  F039         	movff	___fldiv@b,___fldiv@rem
 13951   002B7C  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
 13952   002B80  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
 13953   002B84  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
 13954   002B88  0E00               	movlw	0
 13955   002B8A  6E2D               	movwf	___fldiv@b^0,c
 13956   002B8C  0E00               	movlw	0
 13957   002B8E  6E2E               	movwf	(___fldiv@b+1)^0,c
 13958   002B90  0E00               	movlw	0
 13959   002B92  6E2F               	movwf	(___fldiv@b+2)^0,c
 13960   002B94  0E00               	movlw	0
 13961   002B96  6E30               	movwf	(___fldiv@b+3)^0,c
 13962   002B98  0E00               	movlw	0
 13963   002B9A  6E40               	movwf	___fldiv@grs^0,c
 13964   002B9C  0E00               	movlw	0
 13965   002B9E  6E41               	movwf	(___fldiv@grs+1)^0,c
 13966   002BA0  0E00               	movlw	0
 13967   002BA2  6E42               	movwf	(___fldiv@grs+2)^0,c
 13968   002BA4  0E00               	movlw	0
 13969   002BA6  6E43               	movwf	(___fldiv@grs+3)^0,c
 13970   002BA8  0E00               	movlw	0
 13971   002BAA  6E45               	movwf	___fldiv@aexp^0,c
 13972   002BAC  EF10  F016         	goto	l1294
 13973   002BB0                     l6618:
 13974   002BB0  5045               	movf	___fldiv@aexp^0,w,c
 13975   002BB2  B4D8               	btfsc	status,2,c
 13976   002BB4  EFDE  F015         	goto	u7521
 13977   002BB8  EFE0  F015         	goto	u7520
 13978   002BBC                     u7521:
 13979   002BBC  EFF7  F015         	goto	l6626
 13980   002BC0                     u7520:
 13981   002BC0  90D8               	bcf	status,0,c
 13982   002BC2  3639               	rlcf	___fldiv@rem^0,f,c
 13983   002BC4  363A               	rlcf	(___fldiv@rem+1)^0,f,c
 13984   002BC6  363B               	rlcf	(___fldiv@rem+2)^0,f,c
 13985   002BC8  363C               	rlcf	(___fldiv@rem+3)^0,f,c
 13986   002BCA  90D8               	bcf	status,0,c
 13987   002BCC  362D               	rlcf	___fldiv@b^0,f,c
 13988   002BCE  362E               	rlcf	(___fldiv@b+1)^0,f,c
 13989   002BD0  362F               	rlcf	(___fldiv@b+2)^0,f,c
 13990   002BD2  3630               	rlcf	(___fldiv@b+3)^0,f,c
 13991   002BD4  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13992   002BD6  EFEF  F015         	goto	u7531
 13993   002BDA  EFF1  F015         	goto	u7530
 13994   002BDE                     u7531:
 13995   002BDE  EFF2  F015         	goto	l1297
 13996   002BE2                     u7530:
 13997   002BE2  802D               	bsf	___fldiv@b^0,0,c
 13998   002BE4                     l1297:
 13999   002BE4  90D8               	bcf	status,0,c
 14000   002BE6  3640               	rlcf	___fldiv@grs^0,f,c
 14001   002BE8  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 14002   002BEA  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 14003   002BEC  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 14004   002BEE                     l6626:
 14005   002BEE  5031               	movf	___fldiv@a^0,w,c
 14006   002BF0  5C39               	subwf	___fldiv@rem^0,w,c
 14007   002BF2  5032               	movf	(___fldiv@a+1)^0,w,c
 14008   002BF4  583A               	subwfb	(___fldiv@rem+1)^0,w,c
 14009   002BF6  5033               	movf	(___fldiv@a+2)^0,w,c
 14010   002BF8  583B               	subwfb	(___fldiv@rem+2)^0,w,c
 14011   002BFA  5034               	movf	(___fldiv@a+3)^0,w,c
 14012   002BFC  583C               	subwfb	(___fldiv@rem+3)^0,w,c
 14013   002BFE  A0D8               	btfss	status,0,c
 14014   002C00  EF04  F016         	goto	u7541
 14015   002C04  EF06  F016         	goto	u7540
 14016   002C08                     u7541:
 14017   002C08  EF0F  F016         	goto	l6632
 14018   002C0C                     u7540:
 14019   002C0C  8C43               	bsf	(___fldiv@grs+3)^0,6,c
 14020   002C0E  5031               	movf	___fldiv@a^0,w,c
 14021   002C10  5E39               	subwf	___fldiv@rem^0,f,c
 14022   002C12  5032               	movf	(___fldiv@a+1)^0,w,c
 14023   002C14  5A3A               	subwfb	(___fldiv@rem+1)^0,f,c
 14024   002C16  5033               	movf	(___fldiv@a+2)^0,w,c
 14025   002C18  5A3B               	subwfb	(___fldiv@rem+2)^0,f,c
 14026   002C1A  5034               	movf	(___fldiv@a+3)^0,w,c
 14027   002C1C  5A3C               	subwfb	(___fldiv@rem+3)^0,f,c
 14028   002C1E                     l6632:
 14029   002C1E  2A45               	incf	___fldiv@aexp^0,f,c
 14030   002C20                     l1294:
 14031   002C20  0E19               	movlw	25
 14032   002C22  6445               	cpfsgt	___fldiv@aexp^0,c
 14033   002C24  EF16  F016         	goto	u7551
 14034   002C28  EF18  F016         	goto	u7550
 14035   002C2C                     u7551:
 14036   002C2C  EFD8  F015         	goto	l6618
 14037   002C30                     u7550:
 14038   002C30  5039               	movf	___fldiv@rem^0,w,c
 14039   002C32  103A               	iorwf	(___fldiv@rem+1)^0,w,c
 14040   002C34  103B               	iorwf	(___fldiv@rem+2)^0,w,c
 14041   002C36  103C               	iorwf	(___fldiv@rem+3)^0,w,c
 14042   002C38  B4D8               	btfsc	status,2,c
 14043   002C3A  EF21  F016         	goto	u7561
 14044   002C3E  EF23  F016         	goto	u7560
 14045   002C42                     u7561:
 14046   002C42  EF3B  F016         	goto	l6644
 14047   002C46                     u7560:
 14048   002C46  8040               	bsf	___fldiv@grs^0,0,c
 14049   002C48  EF3B  F016         	goto	l6644
 14050   002C4C                     l6638:
 14051   002C4C  90D8               	bcf	status,0,c
 14052   002C4E  362D               	rlcf	___fldiv@b^0,f,c
 14053   002C50  362E               	rlcf	(___fldiv@b+1)^0,f,c
 14054   002C52  362F               	rlcf	(___fldiv@b+2)^0,f,c
 14055   002C54  3630               	rlcf	(___fldiv@b+3)^0,f,c
 14056   002C56  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 14057   002C58  EF30  F016         	goto	u7571
 14058   002C5C  EF32  F016         	goto	u7570
 14059   002C60                     u7571:
 14060   002C60  EF33  F016         	goto	l1303
 14061   002C64                     u7570:
 14062   002C64  802D               	bsf	___fldiv@b^0,0,c
 14063   002C66                     l1303:
 14064   002C66  90D8               	bcf	status,0,c
 14065   002C68  3640               	rlcf	___fldiv@grs^0,f,c
 14066   002C6A  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 14067   002C6C  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 14068   002C6E  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 14069   002C70  063E               	decf	___fldiv@new_exp^0,f,c
 14070   002C72  A0D8               	btfss	status,0,c
 14071   002C74  063F               	decf	(___fldiv@new_exp+1)^0,f,c
 14072   002C76                     l6644:
 14073   002C76  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 14074   002C78  EF40  F016         	goto	u7581
 14075   002C7C  EF42  F016         	goto	u7580
 14076   002C80                     u7581:
 14077   002C80  EF26  F016         	goto	l6638
 14078   002C84                     u7580:
 14079   002C84  0E00               	movlw	0
 14080   002C86  6E45               	movwf	___fldiv@aexp^0,c
 14081   002C88  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 14082   002C8A  EF49  F016         	goto	u7591
 14083   002C8E  EF4B  F016         	goto	u7590
 14084   002C92                     u7591:
 14085   002C92  EF6F  F016         	goto	l1305
 14086   002C96                     u7590:
 14087   002C96  0EFF               	movlw	255
 14088   002C98  1440               	andwf	___fldiv@grs^0,w,c
 14089   002C9A  6E35               	movwf	??___fldiv^0,c
 14090   002C9C  0EFF               	movlw	255
 14091   002C9E  1441               	andwf	(___fldiv@grs+1)^0,w,c
 14092   002CA0  6E36               	movwf	(??___fldiv+1)^0,c
 14093   002CA2  0EFF               	movlw	255
 14094   002CA4  1442               	andwf	(___fldiv@grs+2)^0,w,c
 14095   002CA6  6E37               	movwf	(??___fldiv+2)^0,c
 14096   002CA8  0E7F               	movlw	127
 14097   002CAA  1443               	andwf	(___fldiv@grs+3)^0,w,c
 14098   002CAC  6E38               	movwf	(??___fldiv+3)^0,c
 14099   002CAE  5035               	movf	??___fldiv^0,w,c
 14100   002CB0  1036               	iorwf	(??___fldiv+1)^0,w,c
 14101   002CB2  1037               	iorwf	(??___fldiv+2)^0,w,c
 14102   002CB4  1038               	iorwf	(??___fldiv+3)^0,w,c
 14103   002CB6  B4D8               	btfsc	status,2,c
 14104   002CB8  EF60  F016         	goto	u7601
 14105   002CBC  EF62  F016         	goto	u7600
 14106   002CC0                     u7601:
 14107   002CC0  EF66  F016         	goto	l1306
 14108   002CC4                     u7600:
 14109   002CC4                     l6652:
 14110   002CC4  0E01               	movlw	1
 14111   002CC6  6E45               	movwf	___fldiv@aexp^0,c
 14112   002CC8  EF6F  F016         	goto	l1305
 14113   002CCC                     l1306:
 14114   002CCC  A02D               	btfss	___fldiv@b^0,0,c
 14115   002CCE  EF6B  F016         	goto	u7611
 14116   002CD2  EF6D  F016         	goto	u7610
 14117   002CD6                     u7611:
 14118   002CD6  EF6F  F016         	goto	l1305
 14119   002CDA                     u7610:
 14120   002CDA  EF62  F016         	goto	l6652
 14121   002CDE                     l1305:
 14122   002CDE  5045               	movf	___fldiv@aexp^0,w,c
 14123   002CE0  B4D8               	btfsc	status,2,c
 14124   002CE2  EF75  F016         	goto	u7621
 14125   002CE6  EF77  F016         	goto	u7620
 14126   002CEA                     u7621:
 14127   002CEA  EF9B  F016         	goto	l6664
 14128   002CEE                     u7620:
 14129   002CEE  0E01               	movlw	1
 14130   002CF0  262D               	addwf	___fldiv@b^0,f,c
 14131   002CF2  0E00               	movlw	0
 14132   002CF4  222E               	addwfc	(___fldiv@b+1)^0,f,c
 14133   002CF6  222F               	addwfc	(___fldiv@b+2)^0,f,c
 14134   002CF8  2230               	addwfc	(___fldiv@b+3)^0,f,c
 14135   002CFA  A030               	btfss	(___fldiv@b+3)^0,0,c
 14136   002CFC  EF82  F016         	goto	u7631
 14137   002D00  EF84  F016         	goto	u7630
 14138   002D04                     u7631:
 14139   002D04  EF9B  F016         	goto	l6664
 14140   002D08                     u7630:
 14141   002D08  C02D  F035         	movff	___fldiv@b,??___fldiv
 14142   002D0C  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
 14143   002D10  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
 14144   002D14  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
 14145   002D18  3438               	rlcf	(??___fldiv+3)^0,w,c
 14146   002D1A  3238               	rrcf	(??___fldiv+3)^0,f,c
 14147   002D1C  3237               	rrcf	(??___fldiv+2)^0,f,c
 14148   002D1E  3236               	rrcf	(??___fldiv+1)^0,f,c
 14149   002D20  3235               	rrcf	??___fldiv^0,f,c
 14150   002D22  C035  F02D         	movff	??___fldiv,___fldiv@b
 14151   002D26  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
 14152   002D2A  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
 14153   002D2E  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
 14154   002D32  4A3E               	infsnz	___fldiv@new_exp^0,f,c
 14155   002D34  2A3F               	incf	(___fldiv@new_exp+1)^0,f,c
 14156   002D36                     l6664:
 14157   002D36  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14158   002D38  EFA6  F016         	goto	u7641
 14159   002D3C  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 14160   002D3E  E108               	bnz	u7640
 14161   002D40  283E               	incf	___fldiv@new_exp^0,w,c
 14162   002D42  A0D8               	btfss	status,0,c
 14163   002D44  EFA6  F016         	goto	u7641
 14164   002D48  EFA8  F016         	goto	u7640
 14165   002D4C                     u7641:
 14166   002D4C  EFB3  F016         	goto	l6668
 14167   002D50                     u7640:
 14168   002D50  0E00               	movlw	0
 14169   002D52  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 14170   002D54  683E               	setf	___fldiv@new_exp^0,c
 14171   002D56  0E00               	movlw	0
 14172   002D58  6E2D               	movwf	___fldiv@b^0,c
 14173   002D5A  0E00               	movlw	0
 14174   002D5C  6E2E               	movwf	(___fldiv@b+1)^0,c
 14175   002D5E  0E00               	movlw	0
 14176   002D60  6E2F               	movwf	(___fldiv@b+2)^0,c
 14177   002D62  0E00               	movlw	0
 14178   002D64  6E30               	movwf	(___fldiv@b+3)^0,c
 14179   002D66                     l6668:
 14180   002D66  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14181   002D68  EFC0  F016         	goto	u7650
 14182   002D6C  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 14183   002D6E  E106               	bnz	u7651
 14184   002D70  043E               	decf	___fldiv@new_exp^0,w,c
 14185   002D72  B0D8               	btfsc	status,0,c
 14186   002D74  EFBE  F016         	goto	u7651
 14187   002D78  EFC0  F016         	goto	u7650
 14188   002D7C                     u7651:
 14189   002D7C  EFCE  F016         	goto	l6672
 14190   002D80                     u7650:
 14191   002D80  0E00               	movlw	0
 14192   002D82  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 14193   002D84  0E00               	movlw	0
 14194   002D86  6E3E               	movwf	___fldiv@new_exp^0,c
 14195   002D88  0E00               	movlw	0
 14196   002D8A  6E2D               	movwf	___fldiv@b^0,c
 14197   002D8C  0E00               	movlw	0
 14198   002D8E  6E2E               	movwf	(___fldiv@b+1)^0,c
 14199   002D90  0E00               	movlw	0
 14200   002D92  6E2F               	movwf	(___fldiv@b+2)^0,c
 14201   002D94  0E00               	movlw	0
 14202   002D96  6E30               	movwf	(___fldiv@b+3)^0,c
 14203   002D98  0E00               	movlw	0
 14204   002D9A  6E3D               	movwf	___fldiv@sign^0,c
 14205   002D9C                     l6672:
 14206   002D9C  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
 14207   002DA0  A044               	btfss	___fldiv@bexp^0,0,c
 14208   002DA2  EFD5  F016         	goto	u7661
 14209   002DA6  EFD7  F016         	goto	u7660
 14210   002DAA                     u7661:
 14211   002DAA  EFDA  F016         	goto	l6678
 14212   002DAE                     u7660:
 14213   002DAE  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 14214   002DB0  EFDB  F016         	goto	l6680
 14215   002DB4                     l6678:
 14216   002DB4  9E2F               	bcf	(___fldiv@b+2)^0,7,c
 14217   002DB6                     l6680:
 14218   002DB6  90D8               	bcf	status,0,c
 14219   002DB8  3044               	rrcf	___fldiv@bexp^0,w,c
 14220   002DBA  6E30               	movwf	(___fldiv@b+3)^0,c
 14221   002DBC  EF91  F015         	goto	l6594
 14222   002DC0                     l1292:
 14223   002DC0  0012               	return		;funcret
 14224   002DC2                     __end_of___fldiv:
 14225                           	callstack 0
 14226                           
 14227 ;; *************** function _dtoa *****************
 14228 ;; Defined at:
 14229 ;;		line 513 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 14230 ;; Parameters:    Size  Location     Type
 14231 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 14232 ;;		 -> NULL(0), sprintf@f(12), 
 14233 ;;  d               2   33[COMRAM] int 
 14234 ;; Auto vars:     Size  Location     Type
 14235 ;;  i               2   42[COMRAM] int 
 14236 ;;  p               2   39[COMRAM] int 
 14237 ;;  w               2   37[COMRAM] int 
 14238 ;;  s               1   41[COMRAM] unsigned char 
 14239 ;; Return value:  Size  Location     Type
 14240 ;;                  1    wreg      void 
 14241 ;; Registers used:
 14242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14243 ;; Tracked objects:
 14244 ;;		On entry : 0/0
 14245 ;;		On exit  : 0/0
 14246 ;;		Unchanged: 0/0
 14247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14249 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14251 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14252 ;;Total ram usage:       13 bytes
 14253 ;; Hardware stack levels used: 1
 14254 ;; Hardware stack levels required when called: 5
 14255 ;; This function calls:
 14256 ;;		___awdiv
 14257 ;;		___awmod
 14258 ;;		_abs
 14259 ;;		_pad
 14260 ;; This function is called by:
 14261 ;;		_vfpfcnvrt
 14262 ;; This function uses a non-reentrant model
 14263 ;;
 14264                           
 14265                           	psect	text50
 14266   003C54                     __ptext50:
 14267                           	callstack 0
 14268   003C54                     _dtoa:
 14269                           	callstack 21
 14270   003C54                     
 14271                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 513: static void dtoa(FILE *fp, vfp
      +                          f_sint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 514: {;D:\MPLABX\Compile
      +                          r\pic\sources\c99\common\doprnt.c: 515:  char s;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 516:     int i, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 518:
      +                            int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 524:     s = d < 0 ? 1 : 0;
 14272   003C54  BE23               	btfsc	(dtoa@d+1)^0,7,c
 14273   003C56  EF2F  F01E         	goto	u8451
 14274   003C5A  EF32  F01E         	goto	u8450
 14275   003C5E                     u8451:
 14276   003C5E  0E01               	movlw	1
 14277   003C60  EF33  F01E         	goto	u8460
 14278   003C64                     u8450:
 14279   003C64  0E00               	movlw	0
 14280   003C66                     u8460:
 14281   003C66  6E2A               	movwf	dtoa@s^0,c
 14282                           
 14283                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 533:     p = (0 <= prec) ? prec : 1
      +                          ;
 14284   003C68  BE58               	btfsc	(_prec+1)^0,7,c
 14285   003C6A  EF3B  F01E         	goto	u8470
 14286   003C6E  EF39  F01E         	goto	u8471
 14287   003C72                     u8471:
 14288   003C72  EF41  F01E         	goto	l1427
 14289   003C76                     u8470:
 14290   003C76  0E00               	movlw	0
 14291   003C78  6E29               	movwf	(dtoa@p+1)^0,c
 14292   003C7A  0E01               	movlw	1
 14293   003C7C  6E28               	movwf	dtoa@p^0,c
 14294   003C7E  EF45  F01E         	goto	l1429
 14295   003C82                     l1427:
 14296   003C82  C057  F028         	movff	_prec,dtoa@p
 14297   003C86  C058  F029         	movff	_prec+1,dtoa@p+1
 14298   003C8A                     l1429:
 14299                           
 14300                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 535:     w = width;
 14301   003C8A  C055  F026         	movff	_width,dtoa@w
 14302   003C8E  C056  F027         	movff	_width+1,dtoa@w+1
 14303   003C92                     
 14304                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 536:     if (s
 14305   003C92  502A               	movf	dtoa@s^0,w,c
 14306   003C94  B4D8               	btfsc	status,2,c
 14307   003C96  EF4F  F01E         	goto	u8481
 14308   003C9A  EF51  F01E         	goto	u8480
 14309   003C9E                     u8481:
 14310   003C9E  EF68  F01E         	goto	l1430
 14311   003CA2                     u8480:
 14312   003CA2                     
 14313                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 540:     ) {;D:\MPLABX\Compiler\pic
      +                          \sources\c99\common\doprnt.c: 541:         --w;
 14314   003CA2  0626               	decf	dtoa@w^0,f,c
 14315   003CA4  A0D8               	btfss	status,0,c
 14316   003CA6  0627               	decf	(dtoa@w+1)^0,f,c
 14317   003CA8                     
 14318                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-' : '+';
 14319   003CA8  502A               	movf	dtoa@s^0,w,c
 14320   003CAA  A4D8               	btfss	status,2,c
 14321   003CAC  EF5A  F01E         	goto	u8491
 14322   003CB0  EF5C  F01E         	goto	u8490
 14323   003CB4                     u8491:
 14324   003CB4  EF62  F01E         	goto	l7138
 14325   003CB8                     u8490:
 14326   003CB8  0E00               	movlw	0
 14327   003CBA  6E25               	movwf	(_dtoa$4044+1)^0,c
 14328   003CBC  0E2B               	movlw	43
 14329   003CBE  6E24               	movwf	_dtoa$4044^0,c
 14330   003CC0  EF66  F01E         	goto	l7140
 14331   003CC4                     l7138:
 14332   003CC4  0E00               	movlw	0
 14333   003CC6  6E25               	movwf	(_dtoa$4044+1)^0,c
 14334   003CC8  0E2D               	movlw	45
 14335   003CCA  6E24               	movwf	_dtoa$4044^0,c
 14336   003CCC                     l7140:
 14337   003CCC  C024  F02A         	movff	_dtoa$4044,dtoa@s
 14338   003CD0                     l1430:
 14339                           
 14340                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 552:     i = sizeof(dbuf) - 1;
 14341   003CD0  0E00               	movlw	0
 14342   003CD2  6E2C               	movwf	(dtoa@i+1)^0,c
 14343   003CD4  0E4F               	movlw	79
 14344   003CD6  6E2B               	movwf	dtoa@i^0,c
 14345   003CD8                     
 14346                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] = '\0';
 14347   003CD8  0E00               	movlw	0
 14348   003CDA  0101               	movlb	1	; () banked
 14349   003CDC  6F76               	movwf	(_dbuf+79)& (0+255),b
 14350                           
 14351                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 14352   003CDE  EFA1  F01E         	goto	l7154
 14353   003CE2                     l7144:
 14354                           
 14355                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 563:     )) {;D:\MPLABX\Compiler\pi
      +                          c\sources\c99\common\doprnt.c: 564:         --i;
 14356   003CE2  062B               	decf	dtoa@i^0,f,c
 14357   003CE4  A0D8               	btfss	status,0,c
 14358   003CE6  062C               	decf	(dtoa@i+1)^0,f,c
 14359   003CE8                     
 14360                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 565:         dbuf[i] = (char)((int)
      +                          '0' + abs(d % 10));
 14361   003CE8  0E27               	movlw	low _dbuf
 14362   003CEA  242B               	addwf	dtoa@i^0,w,c
 14363   003CEC  6ED9               	movwf	fsr2l,c
 14364   003CEE  0E01               	movlw	high _dbuf
 14365   003CF0  202C               	addwfc	(dtoa@i+1)^0,w,c
 14366   003CF2  6EDA               	movwf	fsr2h,c
 14367   003CF4  C022  F006         	movff	dtoa@d,___awmod@dividend
 14368   003CF8  C023  F007         	movff	dtoa@d+1,___awmod@dividend+1
 14369   003CFC  0E00               	movlw	0
 14370   003CFE  6E09               	movwf	(___awmod@divisor+1)^0,c
 14371   003D00  0E0A               	movlw	10
 14372   003D02  6E08               	movwf	___awmod@divisor^0,c
 14373   003D04  EC0A  F025         	call	___awmod	;wreg free
 14374   003D08  C006  F00C         	movff	?___awmod,abs@a
 14375   003D0C  C007  F00D         	movff	?___awmod+1,abs@a+1
 14376   003D10  EC16  F029         	call	_abs	;wreg free
 14377   003D14  500C               	movf	?_abs^0,w,c
 14378   003D16  0F30               	addlw	48
 14379   003D18  6EDF               	movwf	indf2,c
 14380   003D1A                     
 14381                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 567:         --p;
 14382   003D1A  0628               	decf	dtoa@p^0,f,c
 14383   003D1C  A0D8               	btfss	status,0,c
 14384   003D1E  0629               	decf	(dtoa@p+1)^0,f,c
 14385   003D20                     
 14386                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 571:         --w;
 14387   003D20  0626               	decf	dtoa@w^0,f,c
 14388   003D22  A0D8               	btfss	status,0,c
 14389   003D24  0627               	decf	(dtoa@w+1)^0,f,c
 14390   003D26                     
 14391                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 572:         d = d / 10;
 14392   003D26  C022  F018         	movff	dtoa@d,___awdiv@dividend
 14393   003D2A  C023  F019         	movff	dtoa@d+1,___awdiv@dividend+1
 14394   003D2E  0E00               	movlw	0
 14395   003D30  6E1B               	movwf	(___awdiv@divisor+1)^0,c
 14396   003D32  0E0A               	movlw	10
 14397   003D34  6E1A               	movwf	___awdiv@divisor^0,c
 14398   003D36  EC4F  F024         	call	___awdiv	;wreg free
 14399   003D3A  C018  F022         	movff	?___awdiv,dtoa@d
 14400   003D3E  C019  F023         	movff	?___awdiv+1,dtoa@d+1
 14401   003D42                     l7154:
 14402                           
 14403                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 14404   003D42  BE2C               	btfsc	(dtoa@i+1)^0,7,c
 14405   003D44  EFAC  F01E         	goto	u8501
 14406   003D48  502C               	movf	(dtoa@i+1)^0,w,c
 14407   003D4A  E108               	bnz	u8500
 14408   003D4C  042B               	decf	dtoa@i^0,w,c
 14409   003D4E  A0D8               	btfss	status,0,c
 14410   003D50  EFAC  F01E         	goto	u8501
 14411   003D54  EFAE  F01E         	goto	u8500
 14412   003D58                     u8501:
 14413   003D58  EFC4  F01E         	goto	l7160
 14414   003D5C                     u8500:
 14415   003D5C  5022               	movf	dtoa@d^0,w,c
 14416   003D5E  1023               	iorwf	(dtoa@d+1)^0,w,c
 14417   003D60  A4D8               	btfss	status,2,c
 14418   003D62  EFB5  F01E         	goto	u8511
 14419   003D66  EFB7  F01E         	goto	u8510
 14420   003D6A                     u8511:
 14421   003D6A  EF71  F01E         	goto	l7144
 14422   003D6E                     u8510:
 14423   003D6E  BE29               	btfsc	(dtoa@p+1)^0,7,c
 14424   003D70  EFC4  F01E         	goto	u8520
 14425   003D74  5029               	movf	(dtoa@p+1)^0,w,c
 14426   003D76  E106               	bnz	u8521
 14427   003D78  0428               	decf	dtoa@p^0,w,c
 14428   003D7A  B0D8               	btfsc	status,0,c
 14429   003D7C  EFC2  F01E         	goto	u8521
 14430   003D80  EFC4  F01E         	goto	u8520
 14431   003D84                     u8521:
 14432   003D84  EF71  F01E         	goto	l7144
 14433   003D88                     u8520:
 14434   003D88                     l7160:
 14435                           
 14436                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 576:     if (s != 0) {
 14437   003D88  502A               	movf	dtoa@s^0,w,c
 14438   003D8A  B4D8               	btfsc	status,2,c
 14439   003D8C  EFCA  F01E         	goto	u8531
 14440   003D90  EFCC  F01E         	goto	u8530
 14441   003D94                     u8531:
 14442   003D94  EFD7  F01E         	goto	l7166
 14443   003D98                     u8530:
 14444   003D98                     
 14445                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 577:         --i;
 14446   003D98  062B               	decf	dtoa@i^0,f,c
 14447   003D9A  A0D8               	btfss	status,0,c
 14448   003D9C  062C               	decf	(dtoa@i+1)^0,f,c
 14449   003D9E                     
 14450                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 578:         dbuf[i] = s;
 14451   003D9E  0E27               	movlw	low _dbuf
 14452   003DA0  242B               	addwf	dtoa@i^0,w,c
 14453   003DA2  6ED9               	movwf	fsr2l,c
 14454   003DA4  0E01               	movlw	high _dbuf
 14455   003DA6  202C               	addwfc	(dtoa@i+1)^0,w,c
 14456   003DA8  6EDA               	movwf	fsr2h,c
 14457   003DAA  C02A  FFDF         	movff	dtoa@s,indf2
 14458   003DAE                     l7166:
 14459                           
 14460                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 582:     return (void) pad(fp, &dbu
      +                          f[i], w);
 14461   003DAE  C020  F017         	movff	dtoa@fp,pad@fp
 14462   003DB2  C021  F018         	movff	dtoa@fp+1,pad@fp+1
 14463   003DB6  0E27               	movlw	low _dbuf
 14464   003DB8  242B               	addwf	dtoa@i^0,w,c
 14465   003DBA  6E19               	movwf	pad@buf^0,c
 14466   003DBC  0E01               	movlw	high _dbuf
 14467   003DBE  202C               	addwfc	(dtoa@i+1)^0,w,c
 14468   003DC0  6E1A               	movwf	(pad@buf+1)^0,c
 14469   003DC2  C026  F01B         	movff	dtoa@w,pad@p
 14470   003DC6  C027  F01C         	movff	dtoa@w+1,pad@p+1
 14471   003DCA  EC0E  F026         	call	_pad	;wreg free
 14472   003DCE  0012               	return		;funcret
 14473   003DD0                     __end_of_dtoa:
 14474                           	callstack 0
 14475                           
 14476 ;; *************** function _pad *****************
 14477 ;; Defined at:
 14478 ;;		line 193 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 14479 ;; Parameters:    Size  Location     Type
 14480 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 14481 ;;		 -> NULL(0), sprintf@f(12), 
 14482 ;;  buf             2   24[COMRAM] PTR unsigned char 
 14483 ;;		 -> dbuf(80), 
 14484 ;;  p               2   26[COMRAM] int 
 14485 ;; Auto vars:     Size  Location     Type
 14486 ;;  i               2   29[COMRAM] int 
 14487 ;; Return value:  Size  Location     Type
 14488 ;;                  1    wreg      void 
 14489 ;; Registers used:
 14490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14491 ;; Tracked objects:
 14492 ;;		On entry : 0/0
 14493 ;;		On exit  : 0/0
 14494 ;;		Unchanged: 0/0
 14495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14496 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14497 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14499 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14500 ;;Total ram usage:        9 bytes
 14501 ;; Hardware stack levels used: 1
 14502 ;; Hardware stack levels required when called: 4
 14503 ;; This function calls:
 14504 ;;		_fputc
 14505 ;;		_fputs
 14506 ;; This function is called by:
 14507 ;;		_dtoa
 14508 ;;		_efgtoa
 14509 ;;		_utoa
 14510 ;; This function uses a non-reentrant model
 14511 ;;
 14512                           
 14513                           	psect	text51
 14514   004C1C                     __ptext51:
 14515                           	callstack 0
 14516   004C1C                     _pad:
 14517                           	callstack 21
 14518   004C1C                     
 14519                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 193: static void pad(FILE *fp, char
      +                           *buf, int p);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 194: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 195:     int i;;D:\MPLABX\Compiler\pic\sources\c99\
      +                          common\doprnt.c: 199:     if (flags & (1 << 0)) {
 14520   004C1C  A059               	btfss	_flags^0,0,c
 14521   004C1E  EF13  F026         	goto	u8201
 14522   004C22  EF15  F026         	goto	u8200
 14523   004C26                     u8201:
 14524   004C26  EF1F  F026         	goto	l7036
 14525   004C2A                     u8200:
 14526   004C2A                     
 14527                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 200:         fputs((const char *)bu
      +                          f, fp);
 14528   004C2A  C019  F010         	movff	pad@buf,fputs@s
 14529   004C2E  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14530   004C32  C017  F012         	movff	pad@fp,fputs@fp
 14531   004C36  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14532   004C3A  EC4C  F028         	call	_fputs	;wreg free
 14533   004C3E                     l7036:
 14534                           
 14535                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) {
 14536   004C3E  BE1C               	btfsc	(pad@p+1)^0,7,c
 14537   004C40  EF26  F026         	goto	u8210
 14538   004C44  EF24  F026         	goto	u8211
 14539   004C48                     u8211:
 14540   004C48  EF2A  F026         	goto	l1418
 14541   004C4C                     u8210:
 14542   004C4C                     
 14543                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 14544   004C4C  0E00               	movlw	0
 14545   004C4E  6E1C               	movwf	(pad@p+1)^0,c
 14546   004C50  0E00               	movlw	0
 14547   004C52  6E1B               	movwf	pad@p^0,c
 14548   004C54                     l1418:
 14549                           
 14550                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 14551   004C54  0E00               	movlw	0
 14552   004C56  6E1F               	movwf	(pad@i+1)^0,c
 14553   004C58  0E00               	movlw	0
 14554   004C5A  6E1E               	movwf	pad@i^0,c
 14555                           
 14556                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 14557   004C5C  EF3C  F026         	goto	l7044
 14558   004C60                     l7040:
 14559                           
 14560                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 210:         fputc(' ', fp);
 14561   004C60  0E00               	movlw	0
 14562   004C62  6E08               	movwf	(fputc@c+1)^0,c
 14563   004C64  0E20               	movlw	32
 14564   004C66  6E07               	movwf	fputc@c^0,c
 14565   004C68  C017  F009         	movff	pad@fp,fputc@fp
 14566   004C6C  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 14567   004C70  ECEA  F023         	call	_fputc	;wreg free
 14568   004C74                     
 14569                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 211:         ++i;
 14570   004C74  4A1E               	infsnz	pad@i^0,f,c
 14571   004C76  2A1F               	incf	(pad@i+1)^0,f,c
 14572   004C78                     l7044:
 14573                           
 14574                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 14575   004C78  501B               	movf	pad@p^0,w,c
 14576   004C7A  5C1E               	subwf	pad@i^0,w,c
 14577   004C7C  501F               	movf	(pad@i+1)^0,w,c
 14578   004C7E  0A80               	xorlw	128
 14579   004C80  6E1D               	movwf	??_pad^0,c
 14580   004C82  501C               	movf	(pad@p+1)^0,w,c
 14581   004C84  0A80               	xorlw	128
 14582   004C86  581D               	subwfb	??_pad^0,w,c
 14583   004C88  A0D8               	btfss	status,0,c
 14584   004C8A  EF49  F026         	goto	u8221
 14585   004C8E  EF4B  F026         	goto	u8220
 14586   004C92                     u8221:
 14587   004C92  EF30  F026         	goto	l7040
 14588   004C96                     u8220:
 14589   004C96                     
 14590                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 216:     if (!(flags & (1 << 0))) {
 14591   004C96  B059               	btfsc	_flags^0,0,c
 14592   004C98  EF50  F026         	goto	u8231
 14593   004C9C  EF52  F026         	goto	u8230
 14594   004CA0                     u8231:
 14595   004CA0  EF5C  F026         	goto	l1423
 14596   004CA4                     u8230:
 14597   004CA4                     
 14598                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 218:         fputs((const char *)bu
      +                          f, fp);
 14599   004CA4  C019  F010         	movff	pad@buf,fputs@s
 14600   004CA8  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14601   004CAC  C017  F012         	movff	pad@fp,fputs@fp
 14602   004CB0  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14603   004CB4  EC4C  F028         	call	_fputs	;wreg free
 14604   004CB8                     l1423:
 14605   004CB8  0012               	return		;funcret
 14606   004CBA                     __end_of_pad:
 14607                           	callstack 0
 14608                           
 14609 ;; *************** function _fputs *****************
 14610 ;; Defined at:
 14611 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputs.c"
 14612 ;; Parameters:    Size  Location     Type
 14613 ;;  s               2   15[COMRAM] PTR const unsigned char 
 14614 ;;		 -> dbuf(80), 
 14615 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 14616 ;;		 -> NULL(0), sprintf@f(12), 
 14617 ;; Auto vars:     Size  Location     Type
 14618 ;;  i               2   20[COMRAM] int 
 14619 ;;  c               1   19[COMRAM] unsigned char 
 14620 ;; Return value:  Size  Location     Type
 14621 ;;                  2   15[COMRAM] int 
 14622 ;; Registers used:
 14623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14624 ;; Tracked objects:
 14625 ;;		On entry : 0/0
 14626 ;;		On exit  : 0/0
 14627 ;;		Unchanged: 0/0
 14628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14629 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14630 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14632 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14633 ;;Total ram usage:        7 bytes
 14634 ;; Hardware stack levels used: 1
 14635 ;; Hardware stack levels required when called: 3
 14636 ;; This function calls:
 14637 ;;		_fputc
 14638 ;; This function is called by:
 14639 ;;		_pad
 14640 ;; This function uses a non-reentrant model
 14641 ;;
 14642                           
 14643                           	psect	text52
 14644   005098                     __ptext52:
 14645                           	callstack 0
 14646   005098                     _fputs:
 14647                           	callstack 21
 14648   005098  0E00               	movlw	0
 14649   00509A  6E16               	movwf	(fputs@i+1)^0,c
 14650   00509C  0E00               	movlw	0
 14651   00509E  6E15               	movwf	fputs@i^0,c
 14652   0050A0  EF5D  F028         	goto	l6542
 14653   0050A4                     l6538:
 14654   0050A4  C014  F007         	movff	fputs@c,fputc@c
 14655   0050A8  6A08               	clrf	(fputc@c+1)^0,c
 14656   0050AA  C012  F009         	movff	fputs@fp,fputc@fp
 14657   0050AE  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 14658   0050B2  ECEA  F023         	call	_fputc	;wreg free
 14659   0050B6  4A15               	infsnz	fputs@i^0,f,c
 14660   0050B8  2A16               	incf	(fputs@i+1)^0,f,c
 14661   0050BA                     l6542:
 14662   0050BA  5015               	movf	fputs@i^0,w,c
 14663   0050BC  2410               	addwf	fputs@s^0,w,c
 14664   0050BE  6ED9               	movwf	fsr2l,c
 14665   0050C0  5016               	movf	(fputs@i+1)^0,w,c
 14666   0050C2  2011               	addwfc	(fputs@s+1)^0,w,c
 14667   0050C4  6EDA               	movwf	fsr2h,c
 14668   0050C6  50DF               	movf	indf2,w,c
 14669   0050C8  6E14               	movwf	fputs@c^0,c
 14670   0050CA  5014               	movf	fputs@c^0,w,c
 14671   0050CC  A4D8               	btfss	status,2,c
 14672   0050CE  EF6B  F028         	goto	u7431
 14673   0050D2  EF6D  F028         	goto	u7430
 14674   0050D6                     u7431:
 14675   0050D6  EF52  F028         	goto	l6538
 14676   0050DA                     u7430:
 14677   0050DA  0012               	return		;funcret
 14678   0050DC                     __end_of_fputs:
 14679                           	callstack 0
 14680                           
 14681 ;; *************** function _fputc *****************
 14682 ;; Defined at:
 14683 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputc.c"
 14684 ;; Parameters:    Size  Location     Type
 14685 ;;  c               2    6[COMRAM] int 
 14686 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 14687 ;;		 -> NULL(0), sprintf@f(12), 
 14688 ;; Auto vars:     Size  Location     Type
 14689 ;;		None
 14690 ;; Return value:  Size  Location     Type
 14691 ;;                  2    6[COMRAM] int 
 14692 ;; Registers used:
 14693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14694 ;; Tracked objects:
 14695 ;;		On entry : 0/0
 14696 ;;		On exit  : 0/0
 14697 ;;		Unchanged: 0/0
 14698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14699 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14701 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14702 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14703 ;;Total ram usage:        9 bytes
 14704 ;; Hardware stack levels used: 1
 14705 ;; Hardware stack levels required when called: 2
 14706 ;; This function calls:
 14707 ;;		_putch
 14708 ;; This function is called by:
 14709 ;;		_pad
 14710 ;;		_stoa
 14711 ;;		_vfpfcnvrt
 14712 ;;		_fputs
 14713 ;; This function uses a non-reentrant model
 14714 ;;
 14715                           
 14716                           	psect	text53
 14717   0047D4                     __ptext53:
 14718                           	callstack 0
 14719   0047D4                     _fputc:
 14720                           	callstack 21
 14721   0047D4  5009               	movf	fputc@fp^0,w,c
 14722   0047D6  100A               	iorwf	(fputc@fp+1)^0,w,c
 14723   0047D8  B4D8               	btfsc	status,2,c
 14724   0047DA  EFF1  F023         	goto	u7001
 14725   0047DE  EFF3  F023         	goto	u7000
 14726   0047E2                     u7001:
 14727   0047E2  EFFC  F023         	goto	l6324
 14728   0047E6                     u7000:
 14729   0047E6  5009               	movf	fputc@fp^0,w,c
 14730   0047E8  100A               	iorwf	(fputc@fp+1)^0,w,c
 14731   0047EA  A4D8               	btfss	status,2,c
 14732   0047EC  EFFA  F023         	goto	u7011
 14733   0047F0  EFFC  F023         	goto	u7010
 14734   0047F4                     u7011:
 14735   0047F4  EF01  F024         	goto	l6326
 14736   0047F8                     u7010:
 14737   0047F8                     l6324:
 14738   0047F8  5007               	movf	fputc@c^0,w,c
 14739   0047FA  EC7A  F029         	call	_putch
 14740   0047FE  EF4E  F024         	goto	l1652
 14741   004802                     l6326:
 14742   004802  EE20 F00A          	lfsr	2,10
 14743   004806  5009               	movf	fputc@fp^0,w,c
 14744   004808  26D9               	addwf	fsr2l,f,c
 14745   00480A  500A               	movf	(fputc@fp+1)^0,w,c
 14746   00480C  22DA               	addwfc	fsr2h,f,c
 14747   00480E  50DE               	movf	postinc2,w,c
 14748   004810  10DE               	iorwf	postinc2,w,c
 14749   004812  B4D8               	btfsc	status,2,c
 14750   004814  EF0E  F024         	goto	u7021
 14751   004818  EF10  F024         	goto	u7020
 14752   00481C                     u7021:
 14753   00481C  EF2B  F024         	goto	l6330
 14754   004820                     u7020:
 14755   004820  EE20 F00A          	lfsr	2,10
 14756   004824  5009               	movf	fputc@fp^0,w,c
 14757   004826  26D9               	addwf	fsr2l,f,c
 14758   004828  500A               	movf	(fputc@fp+1)^0,w,c
 14759   00482A  22DA               	addwfc	fsr2h,f,c
 14760   00482C  EE10 F003          	lfsr	1,3
 14761   004830  5009               	movf	fputc@fp^0,w,c
 14762   004832  26E1               	addwf	fsr1l,f,c
 14763   004834  500A               	movf	(fputc@fp+1)^0,w,c
 14764   004836  22E2               	addwfc	fsr1h,f,c
 14765   004838  50DE               	movf	postinc2,w,c
 14766   00483A  5CE6               	subwf	postinc1,w,c
 14767   00483C  50E6               	movf	postinc1,w,c
 14768   00483E  0A80               	xorlw	128
 14769   004840  6E0F               	movwf	(??_fputc+4)^0,c
 14770   004842  50DE               	movf	postinc2,w,c
 14771   004844  0A80               	xorlw	128
 14772   004846  580F               	subwfb	(??_fputc+4)^0,w,c
 14773   004848  B0D8               	btfsc	status,0,c
 14774   00484A  EF29  F024         	goto	u7031
 14775   00484E  EF2B  F024         	goto	u7030
 14776   004852                     u7031:
 14777   004852  EF4E  F024         	goto	l1652
 14778   004856                     u7030:
 14779   004856                     l6330:
 14780   004856  EE20 F003          	lfsr	2,3
 14781   00485A  5009               	movf	fputc@fp^0,w,c
 14782   00485C  26D9               	addwf	fsr2l,f,c
 14783   00485E  500A               	movf	(fputc@fp+1)^0,w,c
 14784   004860  22DA               	addwfc	fsr2h,f,c
 14785   004862  CFDE F00B          	movff	postinc2,??_fputc
 14786   004866  CFDD F00C          	movff	postdec2,??_fputc+1
 14787   00486A  C009  FFD9         	movff	fputc@fp,fsr2l
 14788   00486E  C00A  FFDA         	movff	fputc@fp+1,fsr2h
 14789   004872  CFDE F00D          	movff	postinc2,??_fputc+2
 14790   004876  CFDD F00E          	movff	postdec2,??_fputc+3
 14791   00487A  500B               	movf	??_fputc^0,w,c
 14792   00487C  240D               	addwf	(??_fputc+2)^0,w,c
 14793   00487E  6ED9               	movwf	fsr2l,c
 14794   004880  500C               	movf	(??_fputc+1)^0,w,c
 14795   004882  200E               	addwfc	(??_fputc+3)^0,w,c
 14796   004884  6EDA               	movwf	fsr2h,c
 14797   004886  C007  FFDF         	movff	fputc@c,indf2
 14798   00488A  EE20 F003          	lfsr	2,3
 14799   00488E  5009               	movf	fputc@fp^0,w,c
 14800   004890  26D9               	addwf	fsr2l,f,c
 14801   004892  500A               	movf	(fputc@fp+1)^0,w,c
 14802   004894  22DA               	addwfc	fsr2h,f,c
 14803   004896  2ADE               	incf	postinc2,f,c
 14804   004898  0E00               	movlw	0
 14805   00489A  22DD               	addwfc	postdec2,f,c
 14806   00489C                     l1652:
 14807   00489C  0012               	return		;funcret
 14808   00489E                     __end_of_fputc:
 14809                           	callstack 0
 14810                           
 14811 ;; *************** function _putch *****************
 14812 ;; Defined at:
 14813 ;;		line 11 in file "putch.c"
 14814 ;; Parameters:    Size  Location     Type
 14815 ;;  data            1    wreg     unsigned char 
 14816 ;; Auto vars:     Size  Location     Type
 14817 ;;  data            1    5[COMRAM] unsigned char 
 14818 ;; Return value:  Size  Location     Type
 14819 ;;                  1    wreg      void 
 14820 ;; Registers used:
 14821 ;;		wreg
 14822 ;; Tracked objects:
 14823 ;;		On entry : 0/0
 14824 ;;		On exit  : 0/0
 14825 ;;		Unchanged: 0/0
 14826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14831 ;;Total ram usage:        1 bytes
 14832 ;; Hardware stack levels used: 1
 14833 ;; Hardware stack levels required when called: 1
 14834 ;; This function calls:
 14835 ;;		Nothing
 14836 ;; This function is called by:
 14837 ;;		_fputc
 14838 ;; This function uses a non-reentrant model
 14839 ;;
 14840                           
 14841                           	psect	text54
 14842   0052F4                     __ptext54:
 14843                           	callstack 0
 14844   0052F4                     _putch:
 14845                           	callstack 21
 14846                           
 14847                           ;incstack = 0
 14848                           ;putch@data stored from wreg
 14849   0052F4  6E06               	movwf	putch@data^0,c
 14850   0052F6                     l270:
 14851   0052F6  A89E               	btfss	3998,4,c	;volatile
 14852   0052F8  EF80  F029         	goto	u6991
 14853   0052FC  EF82  F029         	goto	u6990
 14854   005300                     u6991:
 14855   005300  EF7B  F029         	goto	l270
 14856   005304                     u6990:
 14857   005304                     
 14858                           ;putch.c: 13:     TXREG1 = data;
 14859   005304  C006  FFAD         	movff	putch@data,4013	;volatile
 14860   005308  0012               	return		;funcret
 14861   00530A                     __end_of_putch:
 14862                           	callstack 0
 14863                           
 14864 ;; *************** function _abs *****************
 14865 ;; Defined at:
 14866 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\abs.c"
 14867 ;; Parameters:    Size  Location     Type
 14868 ;;  a               2   11[COMRAM] int 
 14869 ;; Auto vars:     Size  Location     Type
 14870 ;;		None
 14871 ;; Return value:  Size  Location     Type
 14872 ;;                  2   11[COMRAM] int 
 14873 ;; Registers used:
 14874 ;;		wreg, status,2, status,0
 14875 ;; Tracked objects:
 14876 ;;		On entry : 0/0
 14877 ;;		On exit  : 0/0
 14878 ;;		Unchanged: 0/0
 14879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14882 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14883 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14884 ;;Total ram usage:        4 bytes
 14885 ;; Hardware stack levels used: 1
 14886 ;; Hardware stack levels required when called: 1
 14887 ;; This function calls:
 14888 ;;		Nothing
 14889 ;; This function is called by:
 14890 ;;		_dtoa
 14891 ;; This function uses a non-reentrant model
 14892 ;;
 14893                           
 14894                           	psect	text55
 14895   00522C                     __ptext55:
 14896                           	callstack 0
 14897   00522C                     _abs:
 14898                           	callstack 24
 14899   00522C  BE0D               	btfsc	(abs@a+1)^0,7,c
 14900   00522E  EF1B  F029         	goto	u8241
 14901   005232  EF1D  F029         	goto	u8240
 14902   005236                     u8241:
 14903   005236  EF23  F029         	goto	l1611
 14904   00523A                     u8240:
 14905   00523A  C00C  F00C         	movff	abs@a,?_abs
 14906   00523E  C00D  F00D         	movff	abs@a+1,?_abs+1
 14907   005242  EF2F  F029         	goto	l1614
 14908   005246                     l1611:
 14909   005246  C00C  F00E         	movff	abs@a,??_abs
 14910   00524A  C00D  F00F         	movff	abs@a+1,??_abs+1
 14911   00524E  1E0E               	comf	??_abs^0,f,c
 14912   005250  1E0F               	comf	(??_abs+1)^0,f,c
 14913   005252  4A0E               	infsnz	??_abs^0,f,c
 14914   005254  2A0F               	incf	(??_abs+1)^0,f,c
 14915   005256  C00E  F00C         	movff	??_abs,?_abs
 14916   00525A  C00F  F00D         	movff	??_abs+1,?_abs+1
 14917   00525E                     l1614:
 14918   00525E  0012               	return		;funcret
 14919   005260                     __end_of_abs:
 14920                           	callstack 0
 14921                           
 14922 ;; *************** function ___awmod *****************
 14923 ;; Defined at:
 14924 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awmod.c"
 14925 ;; Parameters:    Size  Location     Type
 14926 ;;  dividend        2    5[COMRAM] int 
 14927 ;;  divisor         2    7[COMRAM] int 
 14928 ;; Auto vars:     Size  Location     Type
 14929 ;;  sign            1   10[COMRAM] unsigned char 
 14930 ;;  counter         1    9[COMRAM] unsigned char 
 14931 ;; Return value:  Size  Location     Type
 14932 ;;                  2    5[COMRAM] int 
 14933 ;; Registers used:
 14934 ;;		wreg, status,2, status,0
 14935 ;; Tracked objects:
 14936 ;;		On entry : 0/0
 14937 ;;		On exit  : 0/0
 14938 ;;		Unchanged: 0/0
 14939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14941 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14943 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14944 ;;Total ram usage:        6 bytes
 14945 ;; Hardware stack levels used: 1
 14946 ;; Hardware stack levels required when called: 1
 14947 ;; This function calls:
 14948 ;;		Nothing
 14949 ;; This function is called by:
 14950 ;;		_dtoa
 14951 ;; This function uses a non-reentrant model
 14952 ;;
 14953                           
 14954                           	psect	text56
 14955   004A14                     __ptext56:
 14956                           	callstack 0
 14957   004A14                     ___awmod:
 14958                           	callstack 24
 14959   004A14  0E00               	movlw	0
 14960   004A16  6E0B               	movwf	___awmod@sign^0,c
 14961   004A18  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 14962   004A1A  EF13  F025         	goto	u7920
 14963   004A1E  EF11  F025         	goto	u7921
 14964   004A22                     u7921:
 14965   004A22  EF19  F025         	goto	l6876
 14966   004A26                     u7920:
 14967   004A26  6C06               	negf	___awmod@dividend^0,c
 14968   004A28  1E07               	comf	(___awmod@dividend+1)^0,f,c
 14969   004A2A  B0D8               	btfsc	status,0,c
 14970   004A2C  2A07               	incf	(___awmod@dividend+1)^0,f,c
 14971   004A2E  0E01               	movlw	1
 14972   004A30  6E0B               	movwf	___awmod@sign^0,c
 14973   004A32                     l6876:
 14974   004A32  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 14975   004A34  EF20  F025         	goto	u7930
 14976   004A38  EF1E  F025         	goto	u7931
 14977   004A3C                     u7931:
 14978   004A3C  EF24  F025         	goto	l6880
 14979   004A40                     u7930:
 14980   004A40  6C08               	negf	___awmod@divisor^0,c
 14981   004A42  1E09               	comf	(___awmod@divisor+1)^0,f,c
 14982   004A44  B0D8               	btfsc	status,0,c
 14983   004A46  2A09               	incf	(___awmod@divisor+1)^0,f,c
 14984   004A48                     l6880:
 14985   004A48  5008               	movf	___awmod@divisor^0,w,c
 14986   004A4A  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 14987   004A4C  B4D8               	btfsc	status,2,c
 14988   004A4E  EF2B  F025         	goto	u7941
 14989   004A52  EF2D  F025         	goto	u7940
 14990   004A56                     u7941:
 14991   004A56  EF51  F025         	goto	l6896
 14992   004A5A                     u7940:
 14993   004A5A  0E01               	movlw	1
 14994   004A5C  6E0A               	movwf	___awmod@counter^0,c
 14995   004A5E  EF35  F025         	goto	l6886
 14996   004A62                     l6884:
 14997   004A62  90D8               	bcf	status,0,c
 14998   004A64  3608               	rlcf	___awmod@divisor^0,f,c
 14999   004A66  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 15000   004A68  2A0A               	incf	___awmod@counter^0,f,c
 15001   004A6A                     l6886:
 15002   004A6A  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 15003   004A6C  EF3A  F025         	goto	u7951
 15004   004A70  EF3C  F025         	goto	u7950
 15005   004A74                     u7951:
 15006   004A74  EF31  F025         	goto	l6884
 15007   004A78                     u7950:
 15008   004A78                     l6888:
 15009   004A78  5008               	movf	___awmod@divisor^0,w,c
 15010   004A7A  5C06               	subwf	___awmod@dividend^0,w,c
 15011   004A7C  5009               	movf	(___awmod@divisor+1)^0,w,c
 15012   004A7E  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 15013   004A80  A0D8               	btfss	status,0,c
 15014   004A82  EF45  F025         	goto	u7961
 15015   004A86  EF47  F025         	goto	u7960
 15016   004A8A                     u7961:
 15017   004A8A  EF4B  F025         	goto	l6892
 15018   004A8E                     u7960:
 15019   004A8E  5008               	movf	___awmod@divisor^0,w,c
 15020   004A90  5E06               	subwf	___awmod@dividend^0,f,c
 15021   004A92  5009               	movf	(___awmod@divisor+1)^0,w,c
 15022   004A94  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 15023   004A96                     l6892:
 15024   004A96  90D8               	bcf	status,0,c
 15025   004A98  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 15026   004A9A  3208               	rrcf	___awmod@divisor^0,f,c
 15027   004A9C  2E0A               	decfsz	___awmod@counter^0,f,c
 15028   004A9E  EF3C  F025         	goto	l6888
 15029   004AA2                     l6896:
 15030   004AA2  500B               	movf	___awmod@sign^0,w,c
 15031   004AA4  B4D8               	btfsc	status,2,c
 15032   004AA6  EF57  F025         	goto	u7971
 15033   004AAA  EF59  F025         	goto	u7970
 15034   004AAE                     u7971:
 15035   004AAE  EF5D  F025         	goto	l6900
 15036   004AB2                     u7970:
 15037   004AB2  6C06               	negf	___awmod@dividend^0,c
 15038   004AB4  1E07               	comf	(___awmod@dividend+1)^0,f,c
 15039   004AB6  B0D8               	btfsc	status,0,c
 15040   004AB8  2A07               	incf	(___awmod@dividend+1)^0,f,c
 15041   004ABA                     l6900:
 15042   004ABA  C006  F006         	movff	___awmod@dividend,?___awmod
 15043   004ABE  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 15044   004AC2  0012               	return		;funcret
 15045   004AC4                     __end_of___awmod:
 15046                           	callstack 0
 15047                           
 15048 ;; *************** function ___awdiv *****************
 15049 ;; Defined at:
 15050 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awdiv.c"
 15051 ;; Parameters:    Size  Location     Type
 15052 ;;  dividend        2   23[COMRAM] int 
 15053 ;;  divisor         2   25[COMRAM] int 
 15054 ;; Auto vars:     Size  Location     Type
 15055 ;;  quotient        2   29[COMRAM] int 
 15056 ;;  sign            1   28[COMRAM] unsigned char 
 15057 ;;  counter         1   27[COMRAM] unsigned char 
 15058 ;; Return value:  Size  Location     Type
 15059 ;;                  2   23[COMRAM] int 
 15060 ;; Registers used:
 15061 ;;		wreg, status,2, status,0
 15062 ;; Tracked objects:
 15063 ;;		On entry : 0/0
 15064 ;;		On exit  : 0/0
 15065 ;;		Unchanged: 0/0
 15066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15067 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15068 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15070 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15071 ;;Total ram usage:        8 bytes
 15072 ;; Hardware stack levels used: 1
 15073 ;; Hardware stack levels required when called: 1
 15074 ;; This function calls:
 15075 ;;		Nothing
 15076 ;; This function is called by:
 15077 ;;		_runPWM
 15078 ;;		_runGAME
 15079 ;;		_dtoa
 15080 ;; This function uses a non-reentrant model
 15081 ;;
 15082                           
 15083                           	psect	text57
 15084   00489E                     __ptext57:
 15085                           	callstack 0
 15086   00489E                     ___awdiv:
 15087                           	callstack 24
 15088   00489E  0E00               	movlw	0
 15089   0048A0  6E1D               	movwf	___awdiv@sign^0,c
 15090   0048A2  BE1B               	btfsc	(___awdiv@divisor+1)^0,7,c
 15091   0048A4  EF58  F024         	goto	u7860
 15092   0048A8  EF56  F024         	goto	u7861
 15093   0048AC                     u7861:
 15094   0048AC  EF5E  F024         	goto	l6832
 15095   0048B0                     u7860:
 15096   0048B0  6C1A               	negf	___awdiv@divisor^0,c
 15097   0048B2  1E1B               	comf	(___awdiv@divisor+1)^0,f,c
 15098   0048B4  B0D8               	btfsc	status,0,c
 15099   0048B6  2A1B               	incf	(___awdiv@divisor+1)^0,f,c
 15100   0048B8  0E01               	movlw	1
 15101   0048BA  6E1D               	movwf	___awdiv@sign^0,c
 15102   0048BC                     l6832:
 15103   0048BC  BE19               	btfsc	(___awdiv@dividend+1)^0,7,c
 15104   0048BE  EF65  F024         	goto	u7870
 15105   0048C2  EF63  F024         	goto	u7871
 15106   0048C6                     u7871:
 15107   0048C6  EF6B  F024         	goto	l6838
 15108   0048CA                     u7870:
 15109   0048CA  6C18               	negf	___awdiv@dividend^0,c
 15110   0048CC  1E19               	comf	(___awdiv@dividend+1)^0,f,c
 15111   0048CE  B0D8               	btfsc	status,0,c
 15112   0048D0  2A19               	incf	(___awdiv@dividend+1)^0,f,c
 15113   0048D2  0E01               	movlw	1
 15114   0048D4  1A1D               	xorwf	___awdiv@sign^0,f,c
 15115   0048D6                     l6838:
 15116   0048D6  0E00               	movlw	0
 15117   0048D8  6E1F               	movwf	(___awdiv@quotient+1)^0,c
 15118   0048DA  0E00               	movlw	0
 15119   0048DC  6E1E               	movwf	___awdiv@quotient^0,c
 15120   0048DE  501A               	movf	___awdiv@divisor^0,w,c
 15121   0048E0  101B               	iorwf	(___awdiv@divisor+1)^0,w,c
 15122   0048E2  B4D8               	btfsc	status,2,c
 15123   0048E4  EF76  F024         	goto	u7881
 15124   0048E8  EF78  F024         	goto	u7880
 15125   0048EC                     u7881:
 15126   0048EC  EFA0  F024         	goto	l6860
 15127   0048F0                     u7880:
 15128   0048F0  0E01               	movlw	1
 15129   0048F2  6E1C               	movwf	___awdiv@counter^0,c
 15130   0048F4  EF80  F024         	goto	l6846
 15131   0048F8                     l6844:
 15132   0048F8  90D8               	bcf	status,0,c
 15133   0048FA  361A               	rlcf	___awdiv@divisor^0,f,c
 15134   0048FC  361B               	rlcf	(___awdiv@divisor+1)^0,f,c
 15135   0048FE  2A1C               	incf	___awdiv@counter^0,f,c
 15136   004900                     l6846:
 15137   004900  AE1B               	btfss	(___awdiv@divisor+1)^0,7,c
 15138   004902  EF85  F024         	goto	u7891
 15139   004906  EF87  F024         	goto	u7890
 15140   00490A                     u7891:
 15141   00490A  EF7C  F024         	goto	l6844
 15142   00490E                     u7890:
 15143   00490E                     l6848:
 15144   00490E  90D8               	bcf	status,0,c
 15145   004910  361E               	rlcf	___awdiv@quotient^0,f,c
 15146   004912  361F               	rlcf	(___awdiv@quotient+1)^0,f,c
 15147   004914  501A               	movf	___awdiv@divisor^0,w,c
 15148   004916  5C18               	subwf	___awdiv@dividend^0,w,c
 15149   004918  501B               	movf	(___awdiv@divisor+1)^0,w,c
 15150   00491A  5819               	subwfb	(___awdiv@dividend+1)^0,w,c
 15151   00491C  A0D8               	btfss	status,0,c
 15152   00491E  EF93  F024         	goto	u7901
 15153   004922  EF95  F024         	goto	u7900
 15154   004926                     u7901:
 15155   004926  EF9A  F024         	goto	l6856
 15156   00492A                     u7900:
 15157   00492A  501A               	movf	___awdiv@divisor^0,w,c
 15158   00492C  5E18               	subwf	___awdiv@dividend^0,f,c
 15159   00492E  501B               	movf	(___awdiv@divisor+1)^0,w,c
 15160   004930  5A19               	subwfb	(___awdiv@dividend+1)^0,f,c
 15161   004932  801E               	bsf	___awdiv@quotient^0,0,c
 15162   004934                     l6856:
 15163   004934  90D8               	bcf	status,0,c
 15164   004936  321B               	rrcf	(___awdiv@divisor+1)^0,f,c
 15165   004938  321A               	rrcf	___awdiv@divisor^0,f,c
 15166   00493A  2E1C               	decfsz	___awdiv@counter^0,f,c
 15167   00493C  EF87  F024         	goto	l6848
 15168   004940                     l6860:
 15169   004940  501D               	movf	___awdiv@sign^0,w,c
 15170   004942  B4D8               	btfsc	status,2,c
 15171   004944  EFA6  F024         	goto	u7911
 15172   004948  EFA8  F024         	goto	u7910
 15173   00494C                     u7911:
 15174   00494C  EFAC  F024         	goto	l6864
 15175   004950                     u7910:
 15176   004950  6C1E               	negf	___awdiv@quotient^0,c
 15177   004952  1E1F               	comf	(___awdiv@quotient+1)^0,f,c
 15178   004954  B0D8               	btfsc	status,0,c
 15179   004956  2A1F               	incf	(___awdiv@quotient+1)^0,f,c
 15180   004958                     l6864:
 15181   004958  C01E  F018         	movff	___awdiv@quotient,?___awdiv
 15182   00495C  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
 15183   004960  0012               	return		;funcret
 15184   004962                     __end_of___awdiv:
 15185                           	callstack 0
 15186                           
 15187 ;; *************** function _LCD_ShowString *****************
 15188 ;; Defined at:
 15189 ;;		line 55 in file "lcd.c"
 15190 ;; Parameters:    Size  Location     Type
 15191 ;;  lineNum         1    wreg     unsigned char 
 15192 ;;  textData        2    6[COMRAM] PTR unsigned char 
 15193 ;;		 -> STR_40(17), runGAME@approxText(25), runGAME@text(17), runADC@text(17), 
 15194 ;;		 -> moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_22(17), STR_21(17), 
 15195 ;;		 -> STR_20(17), STR_19(17), STR_18(17), STR_17(17), 
 15196 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
 15197 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
 15198 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
 15199 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
 15200 ;; Auto vars:     Size  Location     Type
 15201 ;;  lineNum         1   10[COMRAM] unsigned char 
 15202 ;;  i               1   11[COMRAM] unsigned char 
 15203 ;; Return value:  Size  Location     Type
 15204 ;;                  1    wreg      void 
 15205 ;; Registers used:
 15206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15207 ;; Tracked objects:
 15208 ;;		On entry : 0/0
 15209 ;;		On exit  : 0/0
 15210 ;;		Unchanged: 0/0
 15211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15213 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15214 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15215 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15216 ;;Total ram usage:        6 bytes
 15217 ;; Hardware stack levels used: 1
 15218 ;; Hardware stack levels required when called: 2
 15219 ;; This function calls:
 15220 ;;		_LCD_Send
 15221 ;; This function is called by:
 15222 ;;		_main
 15223 ;;		_moveDisplay
 15224 ;;		_runADC
 15225 ;;		_runGAME
 15226 ;; This function uses a non-reentrant model
 15227 ;;
 15228                           
 15229                           	psect	text58
 15230   004962                     __ptext58:
 15231                           	callstack 0
 15232   004962                     _LCD_ShowString:
 15233                           	callstack 27
 15234                           
 15235                           ;incstack = 0
 15236                           ;LCD_ShowString@lineNum stored from wreg
 15237   004962  6E0B               	movwf	LCD_ShowString@lineNum^0,c
 15238   004964                     
 15239                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 15240   004964  806B               	bsf	107,0,c	;volatile
 15241   004966                     l132:
 15242   004966  B06B               	btfsc	107,0,c	;volatile
 15243   004968  EFB8  F024         	goto	u9361
 15244   00496C  EFBA  F024         	goto	u9360
 15245   004970                     u9361:
 15246   004970  EFB3  F024         	goto	l132
 15247   004974                     u9360:
 15248   004974                     
 15249                           ;lcd.c: 62:     SSP2IF = 0;
 15250   004974  9EA4               	bcf	4004,7,c	;volatile
 15251   004976                     
 15252                           ;lcd.c: 64:     LCD_Send(0x7c);
 15253   004976  0E7C               	movlw	124
 15254   004978  EC57  F029         	call	_LCD_Send
 15255                           
 15256                           ;lcd.c: 66:     LCD_Send(0x80);
 15257   00497C  0E80               	movlw	128
 15258   00497E  EC57  F029         	call	_LCD_Send
 15259   004982                     
 15260                           ;lcd.c: 68:     if(lineNum == 1){
 15261   004982  040B               	decf	LCD_ShowString@lineNum^0,w,c
 15262   004984  A4D8               	btfss	status,2,c
 15263   004986  EFC7  F024         	goto	u9371
 15264   00498A  EFC9  F024         	goto	u9370
 15265   00498E                     u9371:
 15266   00498E  EFCE  F024         	goto	l7766
 15267   004992                     u9370:
 15268   004992                     
 15269                           ;lcd.c: 69:         LCD_Send(0x80);
 15270   004992  0E80               	movlw	128
 15271   004994  EC57  F029         	call	_LCD_Send
 15272                           
 15273                           ;lcd.c: 70:     }
 15274   004998  EFDA  F024         	goto	l136
 15275   00499C                     l7766:
 15276   00499C  0E02               	movlw	2
 15277   00499E  180B               	xorwf	LCD_ShowString@lineNum^0,w,c
 15278   0049A0  A4D8               	btfss	status,2,c
 15279   0049A2  EFD5  F024         	goto	u9381
 15280   0049A6  EFD7  F024         	goto	u9380
 15281   0049AA                     u9381:
 15282   0049AA  EFDA  F024         	goto	l136
 15283   0049AE                     u9380:
 15284   0049AE                     
 15285                           ;lcd.c: 72:         LCD_Send(0xC0);
 15286   0049AE  0EC0               	movlw	192
 15287   0049B0  EC57  F029         	call	_LCD_Send
 15288   0049B4                     l136:
 15289                           
 15290                           ;lcd.c: 75:     LCD_Send(0x40);
 15291   0049B4  0E40               	movlw	64
 15292   0049B6  EC57  F029         	call	_LCD_Send
 15293   0049BA                     
 15294                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 15295   0049BA  0E00               	movlw	0
 15296   0049BC  6E0C               	movwf	LCD_ShowString@i^0,c
 15297   0049BE                     l7776:
 15298                           
 15299                           ;lcd.c: 78:         LCD_Send(textData[i]);
 15300   0049BE  500C               	movf	LCD_ShowString@i^0,w,c
 15301   0049C0  2407               	addwf	LCD_ShowString@textData^0,w,c
 15302   0049C2  6E09               	movwf	??_LCD_ShowString^0,c
 15303   0049C4  0E00               	movlw	0
 15304   0049C6  2008               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 15305   0049C8  6E0A               	movwf	(??_LCD_ShowString+1)^0,c
 15306   0049CA  C009  FFF6         	movff	??_LCD_ShowString,tblptrl
 15307   0049CE  C00A  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 15308   0049D2  0E00               	movlw	low (__mediumconst shr (0+16))
 15309   0049D4  6EF8               	movwf	tblptru,c
 15310   0049D6  0E0F               	movlw	(high __ramtop+-1)
 15311   0049D8  64F7               	cpfsgt	tblptrh,c
 15312   0049DA  D003               	bra	u9397
 15313   0049DC  0008               	tblrd		*
 15314   0049DE  50F5               	movf	tablat,w,c
 15315   0049E0  D005               	bra	u9390
 15316   0049E2                     u9397:
 15317   0049E2  CFF6 FFE1          	movff	tblptrl,fsr1l
 15318   0049E6  CFF7 FFE2          	movff	tblptrh,fsr1h
 15319   0049EA  50E7               	movf	indf1,w,c
 15320   0049EC                     u9390:
 15321   0049EC  EC57  F029         	call	_LCD_Send
 15322   0049F0                     
 15323                           ;lcd.c: 79:     }
 15324   0049F0  2A0C               	incf	LCD_ShowString@i^0,f,c
 15325   0049F2  0E0F               	movlw	15
 15326   0049F4  640C               	cpfsgt	LCD_ShowString@i^0,c
 15327   0049F6  EFFF  F024         	goto	u9401
 15328   0049FA  EF01  F025         	goto	u9400
 15329   0049FE                     u9401:
 15330   0049FE  EFDF  F024         	goto	l7776
 15331   004A02                     u9400:
 15332   004A02                     
 15333                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 15334   004A02  846B               	bsf	107,2,c	;volatile
 15335   004A04                     l140:
 15336   004A04  B46B               	btfsc	107,2,c	;volatile
 15337   004A06  EF07  F025         	goto	u9411
 15338   004A0A  EF09  F025         	goto	u9410
 15339   004A0E                     u9411:
 15340   004A0E  EF02  F025         	goto	l140
 15341   004A12                     u9410:
 15342   004A12  0012               	return		;funcret
 15343   004A14                     __end_of_LCD_ShowString:
 15344                           	callstack 0
 15345                           
 15346 ;; *************** function _LCD_Clear *****************
 15347 ;; Defined at:
 15348 ;;		line 94 in file "lcd.c"
 15349 ;; Parameters:    Size  Location     Type
 15350 ;;		None
 15351 ;; Auto vars:     Size  Location     Type
 15352 ;;		None
 15353 ;; Return value:  Size  Location     Type
 15354 ;;                  1    wreg      void 
 15355 ;; Registers used:
 15356 ;;		wreg, cstack
 15357 ;; Tracked objects:
 15358 ;;		On entry : 0/0
 15359 ;;		On exit  : 0/0
 15360 ;;		Unchanged: 0/0
 15361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15366 ;;Total ram usage:        0 bytes
 15367 ;; Hardware stack levels used: 1
 15368 ;; Hardware stack levels required when called: 2
 15369 ;; This function calls:
 15370 ;;		_LCD_Send
 15371 ;; This function is called by:
 15372 ;;		_moveDisplay
 15373 ;; This function uses a non-reentrant model
 15374 ;;
 15375                           
 15376                           	psect	text59
 15377   0051C2                     __ptext59:
 15378                           	callstack 0
 15379   0051C2                     _LCD_Clear:
 15380                           	callstack 27
 15381   0051C2                     
 15382                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
 15383   0051C2  806B               	bsf	107,0,c	;volatile
 15384   0051C4                     l155:
 15385   0051C4  B06B               	btfsc	107,0,c	;volatile
 15386   0051C6  EFE7  F028         	goto	u9421
 15387   0051CA  EFE9  F028         	goto	u9420
 15388   0051CE                     u9421:
 15389   0051CE  EFE2  F028         	goto	l155
 15390   0051D2                     u9420:
 15391   0051D2                     
 15392                           ;lcd.c: 97:     SSP2IF = 0;
 15393   0051D2  9EA4               	bcf	4004,7,c	;volatile
 15394   0051D4                     
 15395                           ;lcd.c: 99:     LCD_Send(0x7C);
 15396   0051D4  0E7C               	movlw	124
 15397   0051D6  EC57  F029         	call	_LCD_Send
 15398                           
 15399                           ;lcd.c: 100:     LCD_Send(0x80);
 15400   0051DA  0E80               	movlw	128
 15401   0051DC  EC57  F029         	call	_LCD_Send
 15402                           
 15403                           ;lcd.c: 101:     LCD_Send(0x01);
 15404   0051E0  0E01               	movlw	1
 15405   0051E2  EC57  F029         	call	_LCD_Send
 15406   0051E6                     
 15407                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
 15408   0051E6  846B               	bsf	107,2,c	;volatile
 15409   0051E8                     l158:
 15410   0051E8  B46B               	btfsc	107,2,c	;volatile
 15411   0051EA  EFF9  F028         	goto	u9431
 15412   0051EE  EFFB  F028         	goto	u9430
 15413   0051F2                     u9431:
 15414   0051F2  EFF4  F028         	goto	l158
 15415   0051F6                     u9430:
 15416   0051F6  0012               	return		;funcret
 15417   0051F8                     __end_of_LCD_Clear:
 15418                           	callstack 0
 15419                           
 15420 ;; *************** function _LCD_Init *****************
 15421 ;; Defined at:
 15422 ;;		line 3 in file "lcd.c"
 15423 ;; Parameters:    Size  Location     Type
 15424 ;;		None
 15425 ;; Auto vars:     Size  Location     Type
 15426 ;;		None
 15427 ;; Return value:  Size  Location     Type
 15428 ;;                  1    wreg      void 
 15429 ;; Registers used:
 15430 ;;		wreg, status,2, cstack
 15431 ;; Tracked objects:
 15432 ;;		On entry : 0/0
 15433 ;;		On exit  : 0/0
 15434 ;;		Unchanged: 0/0
 15435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15438 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15439 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15440 ;;Total ram usage:        1 bytes
 15441 ;; Hardware stack levels used: 1
 15442 ;; Hardware stack levels required when called: 2
 15443 ;; This function calls:
 15444 ;;		_LCD_Send
 15445 ;; This function is called by:
 15446 ;;		_main
 15447 ;; This function uses a non-reentrant model
 15448 ;;
 15449                           
 15450                           	psect	text60
 15451   0046FA                     __ptext60:
 15452                           	callstack 0
 15453   0046FA                     _LCD_Init:
 15454                           	callstack 28
 15455   0046FA                     
 15456                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 15457   0046FA  010F               	movlb	15	; () banked
 15458   0046FC  913B               	bcf	59,0,b	;volatile
 15459                           
 15460                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 15461   0046FE  933B               	bcf	59,1,b	;volatile
 15462                           
 15463                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 15464   004700  8095               	bsf	149,0,c	;volatile
 15465                           
 15466                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 15467   004702  8295               	bsf	149,1,c	;volatile
 15468                           
 15469                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 15470   004704  9092               	bcf	146,0,c	;volatile
 15471                           
 15472                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 15473   004706  8089               	bsf	137,0,c	;volatile
 15474   004708                     
 15475                           ; BSR set to: 15
 15476                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 15477   004708  506C               	movf	108,w,c	;volatile
 15478   00470A  0BF0               	andlw	-16
 15479   00470C  0908               	iorlw	8
 15480   00470E  6E6C               	movwf	108,c	;volatile
 15481                           
 15482                           ;lcd.c: 15:     SSP2ADD = 19;
 15483   004710  0E13               	movlw	19
 15484   004712  6E6E               	movwf	110,c	;volatile
 15485   004714                     
 15486                           ; BSR set to: 15
 15487                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 15488   004714  8A6C               	bsf	108,5,c	;volatile
 15489   004716                     
 15490                           ; BSR set to: 15
 15491                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 15492   004716  0E34               	movlw	52
 15493   004718  6E07               	movwf	??_LCD_Init^0,c
 15494   00471A  0EF2               	movlw	242
 15495   00471C                     u10547:
 15496   00471C  2EE8               	decfsz	wreg,f,c
 15497   00471E  D7FE               	bra	u10547
 15498   004720  2E07               	decfsz	??_LCD_Init^0,f,c
 15499   004722  D7FC               	bra	u10547
 15500   004724                     
 15501                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 15502   004724  806B               	bsf	107,0,c	;volatile
 15503   004726                     l123:
 15504   004726  B06B               	btfsc	107,0,c	;volatile
 15505   004728  EF98  F023         	goto	u9701
 15506   00472C  EF9A  F023         	goto	u9700
 15507   004730                     u9701:
 15508   004730  EF93  F023         	goto	l123
 15509   004734                     u9700:
 15510   004734                     
 15511                           ;lcd.c: 22:     SSP2IF = 0;
 15512   004734  9EA4               	bcf	4004,7,c	;volatile
 15513   004736                     
 15514                           ;lcd.c: 27:     LCD_Send(0x7C);
 15515   004736  0E7C               	movlw	124
 15516   004738  EC57  F029         	call	_LCD_Send
 15517                           
 15518                           ;lcd.c: 28:     LCD_Send(0x80);
 15519   00473C  0E80               	movlw	128
 15520   00473E  EC57  F029         	call	_LCD_Send
 15521                           
 15522                           ;lcd.c: 29:     LCD_Send(0x38);
 15523   004742  0E38               	movlw	56
 15524   004744  EC57  F029         	call	_LCD_Send
 15525                           
 15526                           ;lcd.c: 30:     LCD_Send(0x80);
 15527   004748  0E80               	movlw	128
 15528   00474A  EC57  F029         	call	_LCD_Send
 15529                           
 15530                           ;lcd.c: 31:     LCD_Send(0x39);
 15531   00474E  0E39               	movlw	57
 15532   004750  EC57  F029         	call	_LCD_Send
 15533                           
 15534                           ;lcd.c: 32:     LCD_Send(0x80);
 15535   004754  0E80               	movlw	128
 15536   004756  EC57  F029         	call	_LCD_Send
 15537                           
 15538                           ;lcd.c: 33:     LCD_Send(0x17);
 15539   00475A  0E17               	movlw	23
 15540   00475C  EC57  F029         	call	_LCD_Send
 15541                           
 15542                           ;lcd.c: 34:     LCD_Send(0x80);
 15543   004760  0E80               	movlw	128
 15544   004762  EC57  F029         	call	_LCD_Send
 15545                           
 15546                           ;lcd.c: 35:     LCD_Send(0x7A);
 15547   004766  0E7A               	movlw	122
 15548   004768  EC57  F029         	call	_LCD_Send
 15549                           
 15550                           ;lcd.c: 36:     LCD_Send(0x80);
 15551   00476C  0E80               	movlw	128
 15552   00476E  EC57  F029         	call	_LCD_Send
 15553                           
 15554                           ;lcd.c: 37:     LCD_Send(0x5E);
 15555   004772  0E5E               	movlw	94
 15556   004774  EC57  F029         	call	_LCD_Send
 15557                           
 15558                           ;lcd.c: 38:     LCD_Send(0x80);
 15559   004778  0E80               	movlw	128
 15560   00477A  EC57  F029         	call	_LCD_Send
 15561                           
 15562                           ;lcd.c: 39:     LCD_Send(0x6B);
 15563   00477E  0E6B               	movlw	107
 15564   004780  EC57  F029         	call	_LCD_Send
 15565                           
 15566                           ;lcd.c: 40:     LCD_Send(0x80);
 15567   004784  0E80               	movlw	128
 15568   004786  EC57  F029         	call	_LCD_Send
 15569                           
 15570                           ;lcd.c: 41:     LCD_Send(0x0C);
 15571   00478A  0E0C               	movlw	12
 15572   00478C  EC57  F029         	call	_LCD_Send
 15573                           
 15574                           ;lcd.c: 42:     LCD_Send(0x80);
 15575   004790  0E80               	movlw	128
 15576   004792  EC57  F029         	call	_LCD_Send
 15577                           
 15578                           ;lcd.c: 43:     LCD_Send(0x01);
 15579   004796  0E01               	movlw	1
 15580   004798  EC57  F029         	call	_LCD_Send
 15581                           
 15582                           ;lcd.c: 44:     LCD_Send(0x80);
 15583   00479C  0E80               	movlw	128
 15584   00479E  EC57  F029         	call	_LCD_Send
 15585                           
 15586                           ;lcd.c: 45:     LCD_Send(0x06);
 15587   0047A2  0E06               	movlw	6
 15588   0047A4  EC57  F029         	call	_LCD_Send
 15589                           
 15590                           ;lcd.c: 46:     LCD_Send(0x80);
 15591   0047A8  0E80               	movlw	128
 15592   0047AA  EC57  F029         	call	_LCD_Send
 15593                           
 15594                           ;lcd.c: 47:     LCD_Send(0x02);
 15595   0047AE  0E02               	movlw	2
 15596   0047B0  EC57  F029         	call	_LCD_Send
 15597   0047B4                     
 15598                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 15599   0047B4  846B               	bsf	107,2,c	;volatile
 15600   0047B6                     l126:
 15601   0047B6  B46B               	btfsc	107,2,c	;volatile
 15602   0047B8  EFE0  F023         	goto	u9711
 15603   0047BC  EFE2  F023         	goto	u9710
 15604   0047C0                     u9711:
 15605   0047C0  EFDB  F023         	goto	l126
 15606   0047C4                     u9710:
 15607   0047C4                     
 15608                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 15609   0047C4  0E34               	movlw	52
 15610   0047C6  6E07               	movwf	??_LCD_Init^0,c
 15611   0047C8  0EF2               	movlw	242
 15612   0047CA                     u10557:
 15613   0047CA  2EE8               	decfsz	wreg,f,c
 15614   0047CC  D7FE               	bra	u10557
 15615   0047CE  2E07               	decfsz	??_LCD_Init^0,f,c
 15616   0047D0  D7FC               	bra	u10557
 15617   0047D2  0012               	return		;funcret
 15618   0047D4                     __end_of_LCD_Init:
 15619                           	callstack 0
 15620                           
 15621 ;; *************** function _LCD_Send *****************
 15622 ;; Defined at:
 15623 ;;		line 85 in file "lcd.c"
 15624 ;; Parameters:    Size  Location     Type
 15625 ;;  data            1    wreg     unsigned char 
 15626 ;; Auto vars:     Size  Location     Type
 15627 ;;  data            1    5[COMRAM] unsigned char 
 15628 ;; Return value:  Size  Location     Type
 15629 ;;                  1    wreg      void 
 15630 ;; Registers used:
 15631 ;;		wreg
 15632 ;; Tracked objects:
 15633 ;;		On entry : 0/0
 15634 ;;		On exit  : 0/0
 15635 ;;		Unchanged: 0/0
 15636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15640 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15641 ;;Total ram usage:        1 bytes
 15642 ;; Hardware stack levels used: 1
 15643 ;; Hardware stack levels required when called: 1
 15644 ;; This function calls:
 15645 ;;		Nothing
 15646 ;; This function is called by:
 15647 ;;		_LCD_Init
 15648 ;;		_LCD_ShowString
 15649 ;;		_LCD_Clear
 15650 ;; This function uses a non-reentrant model
 15651 ;;
 15652                           
 15653                           	psect	text61
 15654   0052AE                     __ptext61:
 15655                           	callstack 0
 15656   0052AE                     _LCD_Send:
 15657                           	callstack 27
 15658                           
 15659                           ;incstack = 0
 15660                           ;LCD_Send@data stored from wreg
 15661   0052AE  6E06               	movwf	LCD_Send@data^0,c
 15662   0052B0                     
 15663                           ;lcd.c: 87:     SSP2BUF = data;
 15664   0052B0  C006  FF6F         	movff	LCD_Send@data,3951	;volatile
 15665   0052B4                     l146:
 15666   0052B4  B06D               	btfsc	109,0,c	;volatile
 15667   0052B6  EF5F  F029         	goto	u9261
 15668   0052BA  EF61  F029         	goto	u9260
 15669   0052BE                     u9261:
 15670   0052BE  EF5A  F029         	goto	l146
 15671   0052C2                     u9260:
 15672   0052C2                     l149:
 15673   0052C2  AEA4               	btfss	4004,7,c	;volatile
 15674   0052C4  EF66  F029         	goto	u9271
 15675   0052C8  EF68  F029         	goto	u9270
 15676   0052CC                     u9271:
 15677   0052CC  EF61  F029         	goto	l149
 15678   0052D0                     u9270:
 15679   0052D0                     
 15680                           ;lcd.c: 90:     SSP2IF = 0;
 15681   0052D0  9EA4               	bcf	4004,7,c	;volatile
 15682   0052D2  0012               	return		;funcret
 15683   0052D4                     __end_of_LCD_Send:
 15684                           	callstack 0
 15685                           
 15686 ;; *************** function _ISR *****************
 15687 ;; Defined at:
 15688 ;;		line 11 in file "interrupt.c"
 15689 ;; Parameters:    Size  Location     Type
 15690 ;;		None
 15691 ;; Auto vars:     Size  Location     Type
 15692 ;;  temp            1    4[COMRAM] unsigned char 
 15693 ;; Return value:  Size  Location     Type
 15694 ;;                  1    wreg      void 
 15695 ;; Registers used:
 15696 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15697 ;; Tracked objects:
 15698 ;;		On entry : 0/0
 15699 ;;		On exit  : 0/0
 15700 ;;		Unchanged: 0/0
 15701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15704 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15705 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15706 ;;Total ram usage:        5 bytes
 15707 ;; Hardware stack levels used: 1
 15708 ;; This function calls:
 15709 ;;		Nothing
 15710 ;; This function is called by:
 15711 ;;		Interrupt level 2
 15712 ;; This function uses a non-reentrant model
 15713 ;;
 15714                           
 15715                           	psect	intcode
 15716   000008                     __pintcode:
 15717                           	callstack 0
 15718   000008                     _ISR:
 15719                           	callstack 21
 15720                           
 15721                           ;incstack = 0
 15722   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15723   00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
 15724   00000E  CFDA F004          	movff	fsr2h,??_ISR+3
 15725   000012                     
 15726                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 15727   000012  A09D               	btfss	3997,0,c	;volatile
 15728   000014  EF0E  F000         	goto	i2u686_41
 15729   000018  EF10  F000         	goto	i2u686_40
 15730   00001C                     i2u686_41:
 15731   00001C  EF49  F000         	goto	i2l6284
 15732   000020                     i2u686_40:
 15733   000020  A09E               	btfss	3998,0,c	;volatile
 15734   000022  EF15  F000         	goto	i2u687_41
 15735   000026  EF17  F000         	goto	i2u687_40
 15736   00002A                     i2u687_41:
 15737   00002A  EF49  F000         	goto	i2l6284
 15738   00002E                     i2u687_40:
 15739   00002E  0101               	movlb	1	; () banked
 15740   000030  5126               	movf	_GPIOIE& (0+255),w,b
 15741   000032  B4D8               	btfsc	status,2,c
 15742   000034  EF1E  F000         	goto	i2u688_41
 15743   000038  EF20  F000         	goto	i2u688_40
 15744   00003C                     i2u688_41:
 15745   00003C  EF49  F000         	goto	i2l6284
 15746   000040                     i2u688_40:
 15747   000040                     
 15748                           ; BSR set to: 1
 15749                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 15750   000040  A480               	btfss	128,2,c	;volatile
 15751   000042  EF25  F000         	goto	i2u689_41
 15752   000046  EF27  F000         	goto	i2u689_40
 15753   00004A                     i2u689_41:
 15754   00004A  EF44  F000         	goto	i2l412
 15755   00004E                     i2u689_40:
 15756   00004E                     
 15757                           ; BSR set to: 1
 15758                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 15759   00004E  0E03               	movlw	3
 15760   000050  6E02               	movwf	(??_ISR+1)^0,c
 15761   000052  0E08               	movlw	8
 15762   000054  6E01               	movwf	??_ISR^0,c
 15763   000056  0E77               	movlw	119
 15764   000058                     i2u1056_47:
 15765   000058  2EE8               	decfsz	wreg,f,c
 15766   00005A  D7FE               	bra	i2u1056_47
 15767   00005C  2E01               	decfsz	??_ISR^0,f,c
 15768   00005E  D7FC               	bra	i2u1056_47
 15769   000060  2E02               	decfsz	(??_ISR+1)^0,f,c
 15770   000062  D7FA               	bra	i2u1056_47
 15771   000064  0000               	nop	
 15772   000066                     
 15773                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 15774   000066  A480               	btfss	128,2,c	;volatile
 15775   000068  EF38  F000         	goto	i2u690_41
 15776   00006C  EF3A  F000         	goto	i2u690_40
 15777   000070                     i2u690_41:
 15778   000070  EF44  F000         	goto	i2l412
 15779   000074                     i2u690_40:
 15780   000074                     i2l414:
 15781   000074  B480               	btfsc	128,2,c	;volatile
 15782   000076  EF3F  F000         	goto	i2u691_41
 15783   00007A  EF41  F000         	goto	i2u691_40
 15784   00007E                     i2u691_41:
 15785   00007E  EF3A  F000         	goto	i2l414
 15786   000082                     i2u691_40:
 15787   000082                     
 15788                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 15789   000082  0E00               	movlw	0
 15790   000084  0100               	movlb	0	; () banked
 15791   000086  6FFE               	movwf	_keepStateGPIO& (0+255),b
 15792   000088                     i2l412:
 15793                           
 15794                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 15795   000088  0E9E               	movlw	158
 15796   00008A  6ECF               	movwf	207,c	;volatile
 15797   00008C  0E58               	movlw	88
 15798   00008E  6ECE               	movwf	206,c	;volatile
 15799   000090                     
 15800                           ;interrupt.c: 23:         TMR1IF = 0;
 15801   000090  909E               	bcf	3998,0,c	;volatile
 15802   000092                     i2l6284:
 15803                           
 15804                           ;interrupt.c: 26:     if(TMR1IE && TMR1IF && GAMEIE){
 15805   000092  A09D               	btfss	3997,0,c	;volatile
 15806   000094  EF4E  F000         	goto	i2u692_41
 15807   000098  EF50  F000         	goto	i2u692_40
 15808   00009C                     i2u692_41:
 15809   00009C  EF66  F000         	goto	i2l6296
 15810   0000A0                     i2u692_40:
 15811   0000A0  A09E               	btfss	3998,0,c	;volatile
 15812   0000A2  EF55  F000         	goto	i2u693_41
 15813   0000A6  EF57  F000         	goto	i2u693_40
 15814   0000AA                     i2u693_41:
 15815   0000AA  EF66  F000         	goto	i2l6296
 15816   0000AE                     i2u693_40:
 15817   0000AE  0101               	movlb	1	; () banked
 15818   0000B0  5124               	movf	_GAMEIE& (0+255),w,b
 15819   0000B2  B4D8               	btfsc	status,2,c
 15820   0000B4  EF5E  F000         	goto	i2u694_41
 15821   0000B8  EF60  F000         	goto	i2u694_40
 15822   0000BC                     i2u694_41:
 15823   0000BC  EF66  F000         	goto	i2l6296
 15824   0000C0                     i2u694_40:
 15825   0000C0                     
 15826                           ; BSR set to: 1
 15827                           ;interrupt.c: 27:         GAMEtime += 1;
 15828   0000C0  2B23               	incf	_GAMEtime& (0+255),f,b
 15829   0000C2                     
 15830                           ; BSR set to: 1
 15831                           ;interrupt.c: 29:         TMR1 = 0xFFFF - (62500 - 1);
 15832   0000C2  0E0B               	movlw	11
 15833   0000C4  6ECF               	movwf	207,c	;volatile
 15834   0000C6  0EDC               	movlw	220
 15835   0000C8  6ECE               	movwf	206,c	;volatile
 15836   0000CA                     
 15837                           ; BSR set to: 1
 15838                           ;interrupt.c: 30:         TMR1IF = 0;
 15839   0000CA  909E               	bcf	3998,0,c	;volatile
 15840   0000CC                     i2l6296:
 15841                           
 15842                           ;interrupt.c: 33:     if(RC1IE && RC1IF && UARTIE){
 15843   0000CC  AA9D               	btfss	3997,5,c	;volatile
 15844   0000CE  EF6B  F000         	goto	i2u695_41
 15845   0000D2  EF6D  F000         	goto	i2u695_40
 15846   0000D6                     i2u695_41:
 15847   0000D6  EFA1  F000         	goto	i2l423
 15848   0000DA                     i2u695_40:
 15849   0000DA  AA9E               	btfss	3998,5,c	;volatile
 15850   0000DC  EF72  F000         	goto	i2u696_41
 15851   0000E0  EF74  F000         	goto	i2u696_40
 15852   0000E4                     i2u696_41:
 15853   0000E4  EFA1  F000         	goto	i2l423
 15854   0000E8                     i2u696_40:
 15855   0000E8  0101               	movlb	1	; () banked
 15856   0000EA  5125               	movf	_UARTIE& (0+255),w,b
 15857   0000EC  B4D8               	btfsc	status,2,c
 15858   0000EE  EF7B  F000         	goto	i2u697_41
 15859   0000F2  EF7D  F000         	goto	i2u697_40
 15860   0000F6                     i2u697_41:
 15861   0000F6  EFA1  F000         	goto	i2l423
 15862   0000FA                     i2u697_40:
 15863   0000FA                     
 15864                           ; BSR set to: 1
 15865                           ;interrupt.c: 34:         char temp = RCREG1;
 15866   0000FA  CFAE F005          	movff	4014,ISR@temp	;volatile
 15867   0000FE                     
 15868                           ; BSR set to: 1
 15869                           ;interrupt.c: 35:         static int i = 0;;interrupt.c: 37:         if(temp != '\n'){
 15870   0000FE  0E0A               	movlw	10
 15871   000100  1805               	xorwf	ISR@temp^0,w,c
 15872   000102  B4D8               	btfsc	status,2,c
 15873   000104  EF86  F000         	goto	i2u698_41
 15874   000108  EF88  F000         	goto	i2u698_40
 15875   00010C                     i2u698_41:
 15876   00010C  EF94  F000         	goto	i2l6310
 15877   000110                     i2u698_40:
 15878   000110                     
 15879                           ; BSR set to: 1
 15880                           ;interrupt.c: 38:             gmail.data[i] = temp;
 15881   000110  0E77               	movlw	low _gmail
 15882   000112  2521               	addwf	ISR@i& (0+255),w,b
 15883   000114  6ED9               	movwf	fsr2l,c
 15884   000116  0E01               	movlw	high _gmail
 15885   000118  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15886   00011A  6EDA               	movwf	fsr2h,c
 15887   00011C  C005  FFDF         	movff	ISR@temp,indf2
 15888   000120                     
 15889                           ; BSR set to: 1
 15890                           ;interrupt.c: 39:             i++;
 15891   000120  4B21               	infsnz	ISR@i& (0+255),f,b
 15892   000122  2B22               	incf	(ISR@i+1)& (0+255),f,b
 15893                           
 15894                           ;interrupt.c: 40:         } else {
 15895   000124  EFA1  F000         	goto	i2l423
 15896   000128                     i2l6310:
 15897                           
 15898                           ; BSR set to: 1
 15899                           ;interrupt.c: 41:             gmail.full = 1;
 15900   000128  0E01               	movlw	1
 15901   00012A  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
 15902   00012C                     
 15903                           ; BSR set to: 1
 15904                           ;interrupt.c: 42:             gmail.data[i] = '\0';
 15905   00012C  0E77               	movlw	low _gmail
 15906   00012E  2521               	addwf	ISR@i& (0+255),w,b
 15907   000130  6ED9               	movwf	fsr2l,c
 15908   000132  0E01               	movlw	high _gmail
 15909   000134  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15910   000136  6EDA               	movwf	fsr2h,c
 15911   000138  6ADF               	clrf	indf2,c
 15912   00013A                     
 15913                           ; BSR set to: 1
 15914                           ;interrupt.c: 43:             i = 0;
 15915   00013A  0E00               	movlw	0
 15916   00013C  6F22               	movwf	(ISR@i+1)& (0+255),b
 15917   00013E  0E00               	movlw	0
 15918   000140  6F21               	movwf	ISR@i& (0+255),b
 15919   000142                     i2l423:
 15920   000142  C004  FFDA         	movff	??_ISR+3,fsr2h
 15921   000146  C003  FFD9         	movff	??_ISR+2,fsr2l
 15922   00014A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15923   00014C  0011               	retfie		f
 15924   00014E                     __end_of_ISR:
 15925                           	callstack 0
 15926                           
 15927                           	psect	rparam
 15928   000000                     
 15929                           	psect	temp
 15930   00005A                     btemp:
 15931                           	callstack 0
 15932   00005A                     	ds	1
 15933   000000                     int$flags	set	btemp
 15934   000000                     wtemp8	set	btemp+1
 15935   000000                     ttemp5	set	btemp+1
 15936   000000                     ttemp6	set	btemp+4
 15937   000000                     ttemp7	set	btemp+8
 15938                           
 15939                           	psect	config
 15940                           
 15941                           ; Padding undefined space
 15942   300000                     	org	3145728
 15943   300000  FF                 	db	255
 15944                           
 15945                           ;Config register CONFIG1H @ 0x300001
 15946                           ;	Oscillator Selection bits
 15947                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 15948                           ;	4X PLL Enable
 15949                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15950                           ;	Primary clock enable bit
 15951                           ;	PRICLKEN = 0x1, unprogrammed default
 15952                           ;	Fail-Safe Clock Monitor Enable bit
 15953                           ;	FCMEN = 0x0, unprogrammed default
 15954                           ;	Internal/External Oscillator Switchover bit
 15955                           ;	IESO = 0x0, unprogrammed default
 15956   300001                     	org	3145729
 15957   300001  33                 	db	51
 15958                           
 15959                           ;Config register CONFIG2L @ 0x300002
 15960                           ;	unspecified, using default values
 15961                           ;	Power-up Timer Enable bit
 15962                           ;	PWRTEN = 0x1, unprogrammed default
 15963                           ;	Brown-out Reset Enable bits
 15964                           ;	BOREN = 0x3, unprogrammed default
 15965                           ;	Brown Out Reset Voltage bits
 15966                           ;	BORV = 0x3, unprogrammed default
 15967   300002                     	org	3145730
 15968   300002  1F                 	db	31
 15969                           
 15970                           ;Config register CONFIG2H @ 0x300003
 15971                           ;	Watchdog Timer Enable bits
 15972                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15973                           ;	Watchdog Timer Postscale Select bits
 15974                           ;	WDTPS = 0xF, unprogrammed default
 15975   300003                     	org	3145731
 15976   300003  3C                 	db	60
 15977                           tosu	equ	0xFFF
 15978                           tosh	equ	0xFFE
 15979                           tosl	equ	0xFFD
 15980                           stkptr	equ	0xFFC
 15981                           pclatu	equ	0xFFB
 15982                           pclath	equ	0xFFA
 15983                           pcl	equ	0xFF9
 15984                           tblptru	equ	0xFF8
 15985                           tblptrh	equ	0xFF7
 15986                           tblptrl	equ	0xFF6
 15987                           tablat	equ	0xFF5
 15988                           prodh	equ	0xFF4
 15989                           prodl	equ	0xFF3
 15990                           indf0	equ	0xFEF
 15991                           postinc0	equ	0xFEE
 15992                           postdec0	equ	0xFED
 15993                           preinc0	equ	0xFEC
 15994                           plusw0	equ	0xFEB
 15995                           fsr0h	equ	0xFEA
 15996                           fsr0l	equ	0xFE9
 15997                           wreg	equ	0xFE8
 15998                           indf1	equ	0xFE7
 15999                           postinc1	equ	0xFE6
 16000                           postdec1	equ	0xFE5
 16001                           preinc1	equ	0xFE4
 16002                           plusw1	equ	0xFE3
 16003                           fsr1h	equ	0xFE2
 16004                           fsr1l	equ	0xFE1
 16005                           bsr	equ	0xFE0
 16006                           indf2	equ	0xFDF
 16007                           postinc2	equ	0xFDE
 16008                           postdec2	equ	0xFDD
 16009                           preinc2	equ	0xFDC
 16010                           plusw2	equ	0xFDB
 16011                           fsr2h	equ	0xFDA
 16012                           fsr2l	equ	0xFD9
 16013                           status	equ	0xFD8

Data Sizes:
    Strings     460
    Constant    64
    Data        40
    BSS         203
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    158     159
    BANK1           256     51     246
    BANK2           256      0      42
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 25
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[25]), 
		 -> runGAME@text(BANK1[17]), STR_1(CODE[17]), STR_10(CODE[17]), STR_11(CODE[17]), 
		 -> STR_12(CODE[17]), STR_13(CODE[17]), STR_14(CODE[17]), STR_15(CODE[17]), 
		 -> STR_16(CODE[17]), STR_17(CODE[17]), STR_18(CODE[17]), STR_19(CODE[17]), 
		 -> STR_2(CODE[17]), STR_20(CODE[17]), STR_21(CODE[17]), STR_22(CODE[17]), 
		 -> STR_3(CODE[17]), STR_4(CODE[17]), STR_40(CODE[17]), STR_5(CODE[17]), 
		 -> STR_6(CODE[17]), STR_7(CODE[17]), STR_8(CODE[17]), STR_9(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    moveDisplay$4533	PTR unsigned char  size(2) Largest target is 6
		 -> STR_24(CODE[5]), STR_25(CODE[5]), STR_26(CODE[4]), STR_27(CODE[4]), 
		 -> STR_28(CODE[4]), STR_29(CODE[5]), STR_30(CODE[6]), STR_31(CODE[1]), 

    moveDisplay@F6965	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_24(CODE[5]), STR_25(CODE[5]), STR_26(CODE[4]), STR_27(CODE[4]), 
		 -> STR_28(CODE[4]), STR_29(CODE[5]), STR_30(CODE[6]), STR_31(CODE[1]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_24(CODE[5]), STR_25(CODE[5]), STR_26(CODE[4]), STR_27(CODE[4]), 
		 -> STR_28(CODE[4]), STR_29(CODE[5]), STR_30(CODE[6]), STR_31(CODE[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_23(CODE[5]), STR_35(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6975	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S3934$buffer	PTR unsigned char  size(2) Largest target is 0

    S3934$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_32(CODE[6]), STR_33(CODE[5]), STR_34(CODE[19]), STR_36(CODE[19]), 
		 -> STR_37(CODE[17]), STR_38(CODE[19]), STR_39(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[25]), 
		 -> runGAME@text(BANK1[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_24(CODE[5]), 
		 -> STR_25(CODE[5]), STR_26(CODE[4]), STR_27(CODE[4]), STR_28(CODE[4]), 
		 -> STR_29(CODE[5]), STR_30(CODE[6]), STR_31(CODE[1]), STR_47(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_24(CODE[5]), 
		 -> STR_25(CODE[5]), STR_26(CODE[4]), STR_27(CODE[4]), STR_28(CODE[4]), 
		 -> STR_29(CODE[5]), STR_30(CODE[6]), STR_31(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_41(CODE[4]), STR_44(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_23(CODE[5]), STR_32(CODE[6]), STR_33(CODE[5]), STR_34(CODE[19]), 
		 -> STR_35(CODE[5]), STR_36(CODE[19]), STR_37(CODE[17]), STR_38(CODE[19]), 
		 -> STR_39(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_23(CODE[5]), STR_32(CODE[6]), STR_33(CODE[5]), STR_34(CODE[19]), 
		 -> STR_35(CODE[5]), STR_36(CODE[19]), STR_37(CODE[17]), STR_38(CODE[19]), 
		 -> STR_39(CODE[18]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_23(CODE[5]), STR_32(CODE[6]), STR_33(CODE[5]), STR_34(CODE[19]), 
		 -> STR_35(CODE[5]), STR_36(CODE[19]), STR_37(CODE[17]), STR_38(CODE[19]), 
		 -> STR_39(CODE[18]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runUART->_printf
    _runPWM->___awdiv
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _rand->___lmul
    _runDAC->_printf
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _utoa->_pad
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->___awdiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    ___awdiv->_rand
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_runUART
    _runUART->_printf
    _runGAME->_sprintf
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___flneg
    ___cosdf->___fladd
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  440558
                                            154 BANK0      4     4      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGAME
                            _runGPIO
                           _runMUSIC
                             _runPWM
                            _runUART
 ---------------------------------------------------------------------------------
 (1) _runUART                                             40    40      0   63853
                                            114 BANK0     40    40      0
                             _printf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _runPWM                                               4     4      0    1304
                                             31 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _runMUSIC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             31    31      0     495
                                              6 COMRAM    31    31      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runGAME                                             52    52      0   70078
                                            135 BANK0      2     2      0
                                              0 BANK1     50    50      0
                     _LCD_ShowString
                            ___awdiv
                            ___lbdiv
                               _rand
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     456
                                             17 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     331
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0  153096
                                            114 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   68874
                                             68 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   16012
                                              4 BANK0     32    28      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   27720
                                             36 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   16096
                                              4 BANK0     28    24      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     3      4   63191
                                             83 COMRAM     1     1      0
                                            110 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0     130
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   80317
                                            135 BANK0      2     2      0
                                              0 BANK1     30    30      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         54    53      1   68230
                                            135 BANK0      3     2      1
                                              0 BANK1     51    51      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12   64496
                                            110 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5   62888
                                            103 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   62082
                                             89 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                10     6      4    6310
                                             31 COMRAM    10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     412
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2110
                                             15 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1362
                                             11 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   41068
                                             36 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     463
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             69 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             81 COMRAM     2     2      0
                                              4 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    8147
                                              4 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6862
                                             69 COMRAM    12     4      8
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     875
                                             32 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8273
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    7673
                                             31 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4963
                                             22 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1428
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                             23 COMRAM     8     4      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    2926
                                              6 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      31
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              6 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
               _rand (ARG)
                 ___lmul
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
           _utoa
             ___lwdiv
             ___lwmod
             _pad
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGAME
     _LCD_ShowString
     ___awdiv
     ___lbdiv
     _rand
     _sprintf
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *
   _runMUSIC
   _runPWM
     ___awdiv
   _runUART
     _printf
     _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      2A       9       16.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     33      F6       7       96.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRlllllh     21      0       0      52        0.0%
BITBIGSFRlllllh     10      0       0      51        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRlllllh      C      0       0      53        0.0%
BITBIGSFRhhllhl      A      0       0      44        0.0%
BITBIGSFRhll         7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      45        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRllh         5      0       0      48        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhllhh      1      0       0      43        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     218      54        0.0%
DATA                 0      0     218       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 17 22:08:36 2024

              ___fldiv@aexp 0045                ___fldiv@bexp 0044                ___fldiv@sign 003D  
                        _C0 FE1F                          _C1 FE1B                          _C2 FE17  
                        _C3 FE13                          l61 23C4                          l63 23B6  
                        l56 2372                          l66 2638                          l58 2364  
                        _S1 FDFF                          l68 23F8                          _S2 FDFB  
                        _S3 FDF7                          _S4 FDF3                ___awdiv@sign 001D  
       ___wmul@multiplicand 0008                         l123 4726                         l140 4A04  
                       l132 4966                         l125 4734                         l126 47B6  
                       l134 4974                         l151 52D0                         l143 4A12  
                       l303 42FE                         l231 300C                         l152 52D2  
                       l136 49B4                         l129 47D2                         l161 51F6  
                       l146 52B4                         l250 5114                         l242 30A8  
                       l234 300E                         l155 51C4                         l139 4A02  
                       l251 5118                         l149 52C2                         l157 51D2  
                       l245 50F2                         l158 51E8                         l270 52F6  
                       l350 534E                         l247 5100                         l248 5106  
                       l273 5308                         l353 5340                         l521 40D6  
                       l362 5316                         l522 41D4                         l356 5332  
                       l372 407E                         l365 535C                         l525 418E  
                       l710 52AC                         l462 36EE                         l534 41C2  
                       l526 4150                         l359 5324                         l519 40C8  
                       l472 36DA                         l464 352C                         l721 4DF4  
                       l377 4090                         l722 4E04                         l378 40A6  
                       l538 41EC                         l475 3700                         l467 35CC  
                       l707 535E                         l476 3702                         l581 3ECE  
                       l680 208A                         l664 1F84                         l592 3F28  
                       l593 3F3A                         l682 209A                         l691 2278  
                       l683 20AA                         l579 3F16                         l692 228C  
                       l684 20BA                         l676 2072                         l941 4960  
                       l685 20CA                         l589 3F02                         l686 20DA  
                       l687 20EA                         l689 21B6                         l954 4AC2  
                       l980 450A                         l975 44C4                         l984 5152  
                       l969 4C1A                         _GIE 7F97                         _PR2 0FBB  
                       _ISR 0008                         _abs 522C                         _pad 4C1C  
              ___awmod@sign 000B                         prod 0FF3                         tosl 0FFD  
                       wreg 0FE8                  _TXSTA1bits 0FAC                ___flmul@aexp 0021  
              ___flmul@bexp 0026                ___flmul@sign 0020                ___flmul@temp 002B  
              ___flmul@prod 0027                        ?_ISR 0001                        ISR@i 0121  
              ___fltol@exp1 0053                        l1007 4406                        l1201 4D24  
                      l1211 4E60                        ?_abs 000C                        l1116 4EC4  
                      l1303 2C66                        l1240 1756                        l1208 4D2C  
                      l1305 2CDE                        l1306 2CCC                        l1218 4E68  
                      l1331 1D2E                        l1324 1B38                        l1421 4C96  
                      l1341 1E5E                        l1333 1DA6                        l1501 3B5A  
                      l1430 3CD0                        l1334 1D94                        l1238 17A2  
                      l1423 4CB8                        l1255 18BC                        l1247 1A72  
                      l1239 1790                        l1328 1E9C                        l1264 198C  
                      l1280 5050                        l1441 3DCE                        l1265 197A  
                      l1513 3C52                        l1418 4C54                        l1611 5246  
                      l1427 3C82                        l1292 2DC0                        l1620 34F0  
                      l1452 0B4A                        l1508 3C0A                        l1372 39F0  
                      l1429 3C8A                        l1533 4B70                        l1525 46F8  
                      l1517 4624                        l1365 3958                        l1614 525E  
                      l1294 2C20                        l1606 4608                        l1623 3434  
                      l1455 04E4                        l1519 462C                        l1640 4FBE  
                      l1560 10A6                        l1368 3AB4                        l1297 2BE4  
                      l1457 032A                        l1529 4B68                        l1634 4F1A  
                      l1379 3A4C                        l1652 489C                        l1660 50DA  
                      l1388 5096                        l1485 092E                        l1728 3900  
                      l1744 2888                        l1745 2A26                        l1762 522A  
                      l1667 52F2                        l1675 4D9A                        l1596 5008  
                      l1757 32DA                        l1694 15B0                        l1774 51C0  
                      l1768 518A                        l7000 4CDC                        l7010 4D16  
                      l7002 4CE4                        l7100 3424                        l7012 4D18  
                      l7004 4CF2                        l7020 4E20                        l7110 34E0  
                      l7102 3458                        l7014 4D1E                        l7006 4CF8  
                      l7030 4E5A                        l7022 4E28                        ?_pad 0017  
                      l6320 47D4                        l7040 4C60                        l7032 4C1C  
                      l6400 16DC                        l7104 3494                        l7120 4F94  
                      l7200 0224                        l7008 4D0E                        l7024 4E36  
                      l7016 4E06                        l8000 423C                        l7050 523A  
                      l6330 4856                        l6322 47E6                        l7042 4C74  
                      l7034 4C2A                        l7130 3C92                        l6410 16F0  
                      l6402 16E0                        l7106 34A8                        l7122 4FA0  
                      l7114 4F70                        l7202 022A                        l7026 4E4C  
                      l7018 4E18                        l8002 425C                        l6316 52F6  
                      l6324 47F8                        l7044 4C78                        l7036 4C3E  
                      l7140 3CCC                        l7132 3CA2                        l6500 1972  
                      l6420 174E                        l6404 16E4                        l6412 16F4  
                      l6340 15D0                        l7060 459E                        l7052 450C  
                      l7108 34D0                        l7116 4F84                        l7124 4FA4  
                      l7300 072C                        l7220 02B6                        l7204 0232  
                      l7212 0274                        l7028 4E54                        l8004 42DE  
                      l8020 3F72                        l8012 3F3C                        l8100 3EDC  
                      l6318 5304                        l6326 4802                        l7046 4CA4  
                      l7038 4C4C                        l7150 3D20                        l7142 3CD8  
                      l7134 3CA8                        l7126 3C54                        l6510 19F0  
                      l6430 1784                        l6422 1764                        l6414 16F8  
                      l6406 16E8                        l6342 15E0                        l6350 160A  
                      l6334 15B2                        l7070 4600                        l7054 452C  
                      l7118 4F90                        l7310 0808                        l7302 075E  
                      l7222 02BE                        l7214 029A                        l7230 02DA  
                      l7206 024A                        l8006 42EC                        l8030 3FC0  
                      l8022 3F7A                        l8014 3F66                        l8110 3F34  
                      l8102 3EF4                        l7048 522C                        l6328 4820  
                      l7160 3D88                        l7152 3D26                        l7144 3CE2  
                      l7136 3CB8                        l7128 3C76                        l6600 2B3A  
                      l6520 1A36                        l6504 199C                        l6512 19F2  
                      l6440 17D4                        l6432 178E                        l6424 1770  
                      l6416 1722                        l6408 16EC                        l6360 163A  
                      l6352 161A                        l6344 15F0                        l6336 15C0  
                      l7056 456A                        l7064 45AA                        l7080 4ED4  
                      l7320 086A                        l7312 080E                        l7304 076E  
                      l7240 0374                        l7232 02F4                        l7216 02AC  
                      l7208 0254                        l7400 3AE8                        l8008 42FA  
                      l8040 4026                        l8024 3F84                        l8016 3F6E  
                      l8120 40AA                        l8112 3F36                        l7162 3D98  
                      l7146 3CE8                        l7154 3D42                        l7138 3CC4  
                      l6610 2B78                        l6602 2B4A                        l6530 1A60  
                      l6522 1A44                        l6514 1A02                        l6506 19A8  
                      l6450 1810                        l6442 17E4                        l6434 17B0  
                      l6426 1774                        l6418 173E                        l6370 167A  
                      l6362 1648                        l6354 1620                        l6346 1600  
                      l6338 15CE                        l7066 45BC                        l7058 4592  
                      l7090 3354                        l7082 4EE8                        l7074 5154  
                      l7330 0906                        l7322 0872                        l7314 0842  
                      l7306 077E                        l7250 046A                        l7242 03B2  
                      l7218 02B0                        l7170 0152                        l7410 3B7C  
                      l7402 3B26                        l8202 36E8                        l8210 2DE0  
                      l8042 4042                        l8026 3F8C                        l8018 3F70  
                      l8130 411C                        l8122 40C4                        l8114 3F38  
                      l8106 3F10                        l6540 50B6                        l7164 3D9E  
                      l7156 3D5C                        l7148 3D1A                        l6620 2BC0  
                      l6612 2B88                        l6604 2B4A                        l6700 1AC0  
                      l6532 1A62                        l6524 1A4A                        l6516 1A12  
                      l6508 19B6                        l6460 1856                        l6452 181E  
                      l6444 17F2                        l6436 17C0                        l6428 1782  
                      l6380 16B4                        l6372 167C                        l6364 164A  
                      l6356 1632                        l6348 1602                        l7092 3368  
                      l7076 515C                        l7340 0962                        l7332 0926  
                      l7324 0878                        l7316 0856                        l7308 07B2  
                      l7260 04FA                        l7252 0472                        l7244 03E4  
                      l7236 033A                        l7180 019E                        l7172 0158  
                      l7412 3B90                        l7420 3BF0                        l7404 3B34  
                      l7500 3A3C                        l8220 2DFE                        l8212 2DE2  
                      l8204 2DC2                        l8300 1F0A                        l8044 405A  
                      l8036 3FC8                        l8028 3F9E                        l8140 4170  
                      l8132 412A                        l8124 40C6                        l8108 3F2E  
                      l8060 3DE4                        l8052 3DD0                        l6542 50BA  
                      l7166 3DAE                        l7158 3D6E                        l6630 2C0E  
                      l6622 2BD4                        l6614 2B98                        l6550 2A28  
                      l6710 1AF0                        l6702 1AC6                        l6526 1A4C  
                      l6518 1A32                        l6470 18D2                        l6462 188A  
                      l6454 1820                        l6446 1800                        l6390 16C8  
                      l6382 16B8                        l6366 165A                        l6374 1684  
                      l6358 1634                        l7094 3376                        l7086 32DC  
                      l7078 4EC6                        l7350 098A                        l7342 0968  
                      l7334 0940                        l7326 0880                        l7318 085A  
                      l7270 0530                        l7262 0506                        l7246 0422  
                      l7238 0340                        l7190 01DC                        l7182 01A8  
                      l7174 0168                        l7414 3B94                        l7406 3B52  
                      l7430 460A                        l7510 3A94                        l7502 3A5A  
                      l8230 2E22                        l8222 2E00                        l8214 2DE4  
                      l8206 2DD6                        l8310 1F1E                        l8302 1F0E  
                      l8046 407A                        l8038 4022                        l8150 41B4  
                      l8142 4178                        l8134 4142                        l8126 40F4  
                      l8118 40A8                        l8070 3DFE                        l8062 3DE6  
                      l8054 3DDC                        l6536 5098                        l6640 2C56  
                      l6632 2C1E                        l6624 2BE2                        l6616 2BA8  
                      l6608 2B5E                        l6560 2A64                        l6552 2A34  
                      l6800 1E2C                        l6720 1B28                        l6712 1AF2  
                      l6704 1AD6                        l6528 1A52                        l6480 190E  
                      l6472 18E2                        l6464 188C                        l6456 182A  
                      l6448 180C                        l6392 16CC                        l6384 16BC  
                      l6376 1694                        l6368 166A                        l7088 32FC  
                      l7360 09BE                        l7344 0970                        l7336 094E  
                      l7352 0990                        l7328 088C                        l7280 0578  
                      l7272 053E                        l7264 0510                        l7248 0436  
                      l7256 04B2                        l7192 01E4                        l7184 01B0  
                      l7176 0176                        l6544 5288                        l7424 3C1C  
                      l7416 3BB6                        l7440 464C                        l7432 4618  
                      l7520 0B70                        l7512 3AA2                        l7504 3A5C  
                      l8240 2F56                        l8232 2E32                        l8224 2E02  
                      l8216 2DE6                        l8208 2DDE                        l8320 1F82  
                      l8312 1F44                        l8304 1F12                        l8048 40A0  
                      l8160 41EA                        l8144 4188                        l8128 4100  
                      l8080 3E5E                        l8072 3E10                        l8064 3DEE  
                      l8056 3DE0                        l8400 22AE                        l6538 50A4  
                      l6650 2C96                        l6642 2C64                        l6634 2C30  
                      l6626 2BEE                        l6618 2BB0                        l6570 2A94  
                      l6562 2A74                        l6554 2A42                        l6810 1E82  
                      l6802 1E46                        l6730 1B78                        l6722 1B48  
                      l6714 1B02                        l6706 1ADC                        l6490 193A  
                      l6482 1910                        l6466 189C                        l6458 1830  
                      l6394 16D0                        l6386 16C0                        l6378 16A6  
                      l7098 33E8                        l7370 0A74                        l7362 0A16  
                      l7354 09A2                        l7346 0980                        l7338 095E  
                      l7290 068C                        l7282 0588                        l7274 0556  
                      l7266 0518                        l7258 04EC                        l7186 01C0  
                      l7194 01E8                        l7178 017A                        l6546 52A4  
                      l7426 3C30                        l7418 3BEC                        l7450 46AC  
                      l7442 4672                        l7434 4634                        l7610 0E56  
                      l7602 0E0C                        l7530 0B96                        l7522 0B7C  
                      l7514 3AA4                        l7506 3A60                        l8170 350C  
                      l8250 301C                        l8242 2F7A                        l8234 2E82  
                      l8226 2E04                        l8218 2DF8                        l8330 1FE8  
                      l8322 1F92                        l8314 1F62                        l8306 1F12  
                      l8154 41D0                        l8138 415E                        l8146 418E  
                      l8082 3E74                        l8074 3E24                        l8066 3DF0  
                      l8058 3DE2                        l8410 22BA                        l8402 22B2  
                      l6900 4ABA                        l6660 2D08                        l6652 2CC4  
                      l6636 2C46                        l6644 2C76                        l6628 2C0C  
                      l6580 2ACA                        l6572 2A9A                        l6564 2A76  
                      l6556 2A44                        l6804 1E62                        l6812 1E88  
                      l6740 1BC8                        l6732 1B82                        l6724 1B58  
                      l6716 1B12                        l6708 1AE2                        l6484 191E  
                      l6476 18F6                        l6492 193C                        l6468 18AC  
                      l6396 16D4                        l6388 16C4                        l6820 501C  
                      l7380 0AE4                        l7372 0A90                        l7364 0A4A  
                      l7356 09B4                        l7348 0984                        l7284 059C  
                      l7292 0692                        l7276 0568                        l7268 051E  
                      l7196 020E                        l7188 01D0                        l7460 4ACC  
                      l7428 3C34                        l7452 46BE                        l7444 4678  
                      l7436 463C                        l7612 0E5E                        l7604 0E24  
                      l7540 0BDC                        l7532 0BA6                        l7524 0B88  
                      l7508 3A84                        l8180 3558                        l8172 3518  
                      l8164 34F2                        l8260 3058                        l8252 3030  
                      l8244 2FE2                        l8236 2E94                        l8228 2E06  
                      l8332 1FF0                        l8340 2008                        l8324 1FB0  
                      l8316 1F70                        l8308 1F12                        l8156 41E4  
                      l8148 419C                        l8084 3E7E                        l8076 3E32  
                      l8068 3DF2                        l8500 2506                        l8420 22C4  
                      l8412 22BC                        l8404 22B4                        l6830 48B8  
                      l6670 2D80                        l6662 2D32                        l6646 2C84  
                      l6638 2C4C                        l6590 2B0A                        l6582 2ADA  
                      l6574 2AA8                        l6558 2A54                        l6566 2A7E  
                      l6910 4BDE                        l6814 1E8C                        l6806 1E72  
                      l6750 1C0A                        l6742 1BD4                        l6734 1B98  
                      l6718 1B22                        l6486 1926                        l6478 1900  
                      l6494 194A                        l6398 16D8                        l7382 0AFC  
                      l7374 0A98                        l7366 0A52                        l7358 09B8  
                      l7294 06B0                        l7286 0600                        l7278 0570  
                      l7198 0220                        l7462 4AEE                        l7470 4B42  
                      l7454 46D8                        l7446 467E                        l7438 4646  
                      l7630 0F3C                        l7614 0E80                        l7622 0EF6  
                      l7606 0E28                        l7550 0C38                        l7542 0BF0  
                      l7526 0B8C                        l7518 0B4C                        l8190 3662  
                      l8182 35C2                        l8174 3522                        l8166 34FA  
                      l7710 2666                        l7702 30AA                        l8270 3084  
                      l8262 3066                        l8254 303E                        l8238 2EEE  
                      l8334 1FF8                        l8342 2030                        l8326 1FCE  
                      l8318 1F7A                        l8158 41E8                        l8094 3EA0  
                      l8086 3E90                        l8078 3E5A                        l8510 2598  
                      l8502 253C                        l8430 22D0                        l8422 22C6  
                      l8414 22BE                        l8406 22B6                        l6840 48DE  
                      l6832 48BC                        l6824 489E                        l6680 2DB6  
                      l6672 2D9C                        l6656 2CEE                        l6664 2D36  
                      l6648 2C88                        l6592 2B1A                        l6584 2ADC  
                      l6576 2AAA                        l6568 2A8E                        l6912 4BEE  
                      l6904 4B72                        l6920 4408                        l6808 1E80  
                      l6760 1C6C                        l6752 1C1A                        l6744 1BE2  
                      l6736 1BA4                        l6728 1B6C                        l6496 194E  
                      l6488 192A                        l7384 0B0C                        l7376 0AA6  
                      l7368 0A56                        l7296 06E4                        l7288 0658  
                      l7464 4AFA                        l7392 3AB6                        l7448 469A  
                      l7632 0F4E                        l7640 0F66                        l7624 0F06  
                      l7616 0EB2                        l7608 0E4A                        l7560 0C7E  
                      l7552 0C4C                        l7544 0BFE                        l7536 0BAE  
                      l7528 0B94                        l7480 397E                        l7472 3904  
                      l8192 3698                        l8184 35CA                        l8176 352A  
                      l8168 350A                        l7720 26E0                        l7712 2686  
                      l7800 10D0                        l8264 306C                        l8256 3044  
                      l8248 2FEE                        l8272 3096                        l8360 215C  
                      l8352 2080                        l8344 203E                        l8336 2000  
                      l8328 1FE0                        l8280 1EDE                        l8096 3EAE  
                      l8088 3E96                        l8520 25F0                        l8512 25B2  
                      l8504 2556                        l8440 2310                        l8432 22D6  
                      l8424 22C8                        l8416 22C0                        l8408 22B8  
                      l6850 4914                        l6842 48F0                        l6834 48CA  
                      l6826 48A2                        l6674 2DA0                        l6666 2D50  
                      l6658 2CFA                        l6594 2B22                        l6578 2ABA  
                      l6586 2AE4                        l6914 4C12                        l6906 4BA0  
                      l6930 4492                        l6922 4436                        l6770 1D14  
                      l6762 1C88                        l6754 1C34                        l6746 1BEE  
                      l6738 1BBC                        l6690 1A80                        l6498 195C  
                      l6818 500A                        l7386 0B22                        l7378 0AD6  
                      l7298 0716                        l7466 4B16                        l7458 4AC4  
                      l7394 3AD0                        l7650 0FF4                        l7634 0F56  
                      l7642 0F84                        l7618 0EE4                        l7570 0CE8  
                      l7554 0C5C                        l7546 0C08                        l7538 0BCC  
                      l7490 39D8                        l7474 3914                        l8194 36A6  
                      l8186 35DA                        l8178 353A                        l7706 3704  
                      l7730 283A                        l7722 274C                        l7714 269C  
                      l7802 10EE                        l7810 1140                        l8266 307A  
                      l8258 3052                        l8370 21DE                        l8362 2160  
                      l8354 20FA                        l8346 204C                        l8290 1EF6  
                      l8282 1EEA                        l8274 1E9E                        l8098 3EB2  
                      l8530 264C                        l8506 2564                        l8450 2380  
                      l8442 2320                        l8434 22DA                        l8426 22CA  
                      l8418 22C2                        l6852 492A                        l6844 48F8  
                      l6860 4940                        l6836 48D2                        l6828 48B0  
                      l6676 2DAE                        l6668 2D66                        l6596 2B26  
                      l6588 2AF4                        l6916 4C18                        l6908 4BB0  
                      l6932 44A4                        l6924 4446                        l6780 1D50  
                      l6772 1D1E                        l6764 1CB2                        l6756 1C44  
                      l6748 1BFE                        l6692 1A8E                        l7388 0B2A  
                      l7468 4B36                        l7396 3AD8                        l7660 1056  
                      l7652 100A                        l7644 0FA4                        l7636 0F5E  
                      l7628 0F2E                        l7580 0D50                        l7572 0D04  
                      l7556 0C6E                        l7564 0C86                        l7548 0C2C  
                      l7492 39DA                        l7484 3992                        l7476 3922  
                      l8196 36B4                        l8188 35F8                        l7900 52D8  
                      l7740 2924                        l7732 286C                        l7724 2772  
                      l7716 269E                        l7812 115E                        l7804 1104  
                      l8268 3080                        l8372 21EC                        l8364 2186  
                      l8356 20FE                        l8348 2064                        l8380 221E  
                      l8292 1EF8                        l8284 1EEE                        l8276 1ECC  
                      l8532 265A                        l8516 25BA                        l8508 2572  
                      l8452 2398                        l8444 232E                        l8436 22E8  
                      l8428 22CC                        l6862 4950                        l6854 4932  
                      l6846 4900                        l6838 48D6                        l6870 4A18  
                      l6678 2DB4                        l6934 44B2                        l6926 4474  
                      l6790 1DC2                        l6782 1D5E                        l6774 1D2C  
                      l6766 1CE8                        l6758 1C60                        l6694 1A90  
                      l6942 511A                        l6950 4300                        l7398 3AE4  
                      l7654 1028                        l7646 0FCC                        l7662 106E  
                      l7558 0C76                        l7566 0CAC                        l7910 5070  
                      l7494 39E6                        l7486 399A                        l7478 3968  
                      l8198 36CC                        l7742 294A                        l7726 27CA  
                      l7718 26BC                        l7814 117C                        l7830 1258  
                      l7806 1118                        l8374 21FA                        l8366 21A4  
                      l8358 212C                        l8382 2266                        l8294 1EFE  
                      l8286 1EF2                        l8278 1EDC                        l8518 25D6  
                      l8470 2450                        l8462 240A                        l8526 25F8  
                      l8454 23A6                        l8446 2346                        l8438 22F6  
                      l8390 228E                        l7680 52B0                        l7760 4976  
                      l6864 4958                        l6856 4934                        l6848 490E  
                      l6880 4A48                        l6872 4A26                        l6936 4502  
                      l6928 4484                        l6792 1DD0                        l6784 1D8C  
                      l6776 1D3E                        l6768 1CF6                        l6696 1AA0  
                      l6688 1A74                        l6944 5132                        l6960 4358  
                      l6952 4318                        l7592 0DC0                        l7584 0D68  
                      l7568 0CC8                        l7576 0D20                        l7912 5086  
                      l7904 5052                        l7496 3A22                        l7488 39A6  
                      l7672 51F8                        l7744 29A2                        l7728 282A  
                      l7736 2894                        l7832 1268                        l7816 118C  
                      l7824 11FC                        l7840 1324                        l8384 2288  
                      l8376 2200                        l8368 21B8                        l8296 1F00  
                      l8288 1EF4                        l7920 5328                        l8528 263A  
                      l8480 247C                        l8464 2426                        l8456 23D2  
                      l8448 2354                        l8392 22A6                        l7770 49BA  
                      l7762 4982                        l6858 493A                        l6890 4A8E  
                      l6882 4A5A                        l6874 4A2E                        l6938 4508  
                      l6794 1DFA                        l6778 1D4C                        l6698 1AB0  
                      l6946 5142                        l6962 4368                        l7594 0DD6  
                      l7586 0D88                        l7578 0D36                        l7666 1080  
                      l7906 5060                        l7498 3A2E                        l7674 5218  
                      l7746 29FA                        l7738 28B8                        l7842 1342  
                      l7834 12B4                        l7826 1230                        l7818 11C0  
                      l7690 4DD4                        l7682 4D9C                        l8298 1F08  
                      l7922 531A                        l7930 5198                        l8482 248A  
                      l8474 2458                        l8466 242A                        l8458 23EA  
                      l8394 22A8                        l7780 49F2                        l7764 4992  
                      l7756 4964                        l6892 4A96                        l6884 4A62  
                      l6876 4A32                        l6868 4A14                        l6788 1DB6  
                      l6796 1DFE                        l6972 4392                        l6964 436C  
                      l6956 432C                        l7596 0DF4                        l7588 0DA4  
                      l7692 4FC0                        l7908 5068                        l7676 521A  
                      l7748 2A12                        l7844 1360                        l7860 13E0  
                      l7836 12FC                        l7684 4DAC                        l7940 4D6C  
                      l7916 5344                        l7924 530C                        l8388 535E  
                      l7932 519C                        l8492 24B6                        l8476 2474  
                      l8468 2434                        l8396 22AA                        l7782 51C2  
                      l7766 499C                        l7758 4964                        l6894 4A9C  
                      l6886 4A6A                        l6878 4A40                        l6798 1E18  
                      l6990 43F6                        l6982 43BA                        l6974 439C  
                      l6966 437A                        l6958 4356                        l7694 4FCC  
                      l7790 50EC                        l7862 13F0                        l7846 1370  
                      l7854 13A8                        l7870 1484                        l7950 4E88  
                      l7686 4DBA                        l7926 5352                        l7918 5336  
                      l7934 51B4                        l8494 24D2                        l8486 2492  
                      l8398 22AC                        l7784 51D4                        l7776 49BE  
                      l7768 49AE                        l6888 4A78                        l6896 4AA2  
                      l6984 43C6                        l6976 43A6                        l7696 4FE2  
                      l7792 50EE                        l7880 14E2                        l7872 149A  
                      l7864 1428                        l7960 4EB6                        l7952 4E8C  
                      l7944 4E6C                        l7688 4DCA                        l7928 518C  
                      l8496 24EA                        l8488 24AE                        l7970 46FA  
                      l7786 51E6                        l7778 49F0                        l6898 4AB2  
                      l6986 43D6                        l6994 4CBA                        l7698 4FFE  
                      l7890 1556                        l7882 1506                        l7874 14AA  
                      l7866 145C                        l7794 10A8                        l7962 4EB8  
                      l7954 4E8E                        l7946 4E70                        l7938 4D2E  
                      l8498 24F8                        l7980 4736                        l7972 4708  
                      l6988 43E6                        l6996 4CC2                        l7788 50DE  
                      l7796 10B8                        l7964 4EBC                        l7956 4E9C  
                      l7948 4E80                        l7982 47B4                        l7974 4714  
                      l6998 4CD4                        l7990 420C                        l7886 152E  
                      l7878 14BE                        l7798 10CE                        l7958 4EB2  
                      l7966 4EC2                        l7984 47C4                        l7976 4716  
                      l7992 421E                        l7896 1592                        l7978 4724  
                      l7994 4224                        l7986 41F2                        l7898 52D4  
                      l7996 4236                        l7988 41F6                        STR_1 FEC0  
                      STR_2 FF26                        STR_3 FF15                        STR_4 FE35  
                      STR_5 FEAF                        STR_6 FF8C                        STR_7 FF48  
                      STR_8 FE35                        STR_9 FF7B                        u7000 47E6  
                      u7001 47E2                        u7010 47F8                        u7011 47F4  
                      _PEIE 7F96                        u7020 4820                        u7100 166A  
                      u7021 481C                        u7101 1666                        u7030 4856  
                      u7110 16A6                        u7031 4852                        u7111 16A2  
                      u8000 4C12                        u7200 17C0                        u7120 16B4  
                      u7040 15CE                        u8001 4C0E                        u7201 17BC  
                      u7121 16B0                        u7041 15CA                        u8010 4436  
                      u7210 17F2                        u7130 1722                        u7050 15E0  
                      u8011 4432                        u7211 17EE                        u7131 171E  
                      u7051 15DC                        u8020 4474                        u7300 193A  
                      u7220 1800                        u7140 173A                        u7060 15F0  
                      u8100 438E                        u8021 4470                        u7301 1936  
                      u7221 17FC                        u7141 1734                        u7061 15EC  
                      u8101 438A                        u8030 4492                        u7310 194A  
                      u7230 181E                        u7150 173C                        u7070 1632  
                      u8110 43B6                        u8031 448E                        u7311 1946  
                      u7231 181A                        u7071 162E                        u8111 43B2  
                      u8200 4C2A                        u8040 44B2                        u7400 1A32  
                      u7320 195C                        u7240 1856                        u7160 1764  
                      u7080 1648                        u8120 43D6                        u9000 46D8  
                      u8201 4C26                        u8041 44AE                        u7401 1A2E  
                      u7321 1958                        u7241 1852                        u7161 1760  
                      u7081 1644                        u8121 43D2                        u9001 46D4  
                      u8210 4C4C                        u8050 4502                        u7410 1A44  
                      u7330 1972                        u7250 189C                        u7170 1782  
                      u7090 165A                        u8130 43E6                        u9010 4AEE  
                      u8211 4C48                        u8051 44FE                        u7411 1A40  
                      u7331 196E                        u7251 1898                        u7171 177E  
                      u7091 1656                        u8131 43E2                        u9011 4AEA  
                      u8220 4C96                        u7500 2B0A                        u8060 5132  
                      u7420 1A60                        u7340 1988                        u7260 18D2  
                      u7180 17A2                        u8300 45F6                        u9020 4B68  
                      u8140 4CD4                        u9100 3A5A                        u8221 4C92  
                      u7501 2B06                        u8061 512E                        u7421 1A5C  
                      u7341 1984                        u7261 18CE                        u7181 179E  
                      u8301 45F0                        u9021 4B64                        u8141 4CD0  
                      u9101 3A56                        u7430 50DA                        u8230 4CA4  
                      u7510 2B4A                        u7350 199C                        u7270 18E2  
                      u7190 17B0                        u8070 4318                        u8310 45F8  
                      u8150 4CF2                        u9110 3A94                        u9030 3914  
                      u7431 50D6                        u8231 4CA0                        u7511 2B46  
                      u7351 1998                        u7271 18DE                        u7191 17AC  
                      u8071 4314                        u8151 4CEE                        u9111 3A90  
                      u9031 3910                        u8240 523A                        u7600 2CC4  
                      u7520 2BC0                        u7440 2A42                        u7360 19B6  
                      u7280 190E                        u8080 434C                        u8400 3424  
                      u8320 518A                        u8160 4D0E                        u9200 0E4A  
                      u9120 3AA2                        u9040 3922                        u8241 5236  
                      u7601 2CC0                        u7521 2BBC                        u7441 2A3E  
                      u7361 19B2                        u7281 190A                        u8401 3420  
                      u8321 5186                        u8161 4D0A                        u9201 0E46  
                      u9121 3A9E                        u9041 391E                        u7610 2CDA  
                      u7530 2BE2                        u7450 2A54                        u7370 19F0  
                      u7290 191E                        u8090 437A                        u8250 454C  
                      u8410 3478                        u8330 4ED4                        u8170 4E18  
                      u9210 0E80                        u9130 0B70                        u9050 397E  
                      u7611 2CD6                        u7531 2BDE                        u7451 2A50  
                      u7371 19EC                        u7291 191A                        u8091 4376  
                      u8331 4ED0                        u8171 4E14                        u9211 0E7C  
                      u9131 0B6C                        u9051 397A                        u8500 3D5C  
                      u7620 2CEE                        u7540 2C0C                        u7460 2A64  
                      u7700 1AF0                        u7380 1A02                        u8260 456A  
                      u8420 3494                        u8340 3324                        u8180 4E36  
                      u9220 0EB2                        u9140 0BDC                        u9300 4FFE  
                      u9060 39D4                        u8501 3D58                        u7621 2CEA  
                      u7541 2C08                        u7461 2A60                        u7701 1AEC  
                      u7381 19FE                        u8085 4342                        u8261 4566  
                      u8421 3490                        u8181 4E32                        u9221 0EAE  
                      u9141 0BD8                        u9301 4FFA                        u9061 39D0  
                      u8510 3D6E                        u7630 2D08                        u7550 2C30  
                      u7470 2AA8                        u7710 1B02                        u7390 1A12  
                      u8270 4592                        u8430 34D0                        u8350 3354  
                      u8190 4E4C                        u9230 0EE4                        u9150 0BFE  
                      u9070 3A1E                        u9310 2698                        u8511 3D6A  
                      u7631 2D04                        u7551 2C2C                        u7471 2AA4  
                      u7711 1AFE                        u7391 1A0E                        u8271 458E  
                      u8255 4542                        u8431 34CC                        u8415 346E  
                      u8351 3350                        u8191 4E48                        u9231 0EE0  
                      u9151 0BFA                        u9071 3A1A                        u9311 2692  
                      u9400 4A02                        u8520 3D88                        u7640 2D50  
                      u7560 2C46                        u7480 2ABA                        u7800 1DA2  
                      u7720 1B12                        u8280 45BC                        u8360 3376  
                      u8440 4FBE                        u8600 02AC                        u9240 0F06  
                      u9160 0C2C                        u9080 3A3C                        u9320 269A  
                      u9401 49FE                        u8521 3D84                        u7641 2D4C  
                      u7561 2C42                        u7481 2AB6                        u7801 1D9E  
                      u7721 1B0E                        u8281 45B8                        u8361 3372  
                      u8345 331A                        u8441 4FBA                        u8601 02A8  
                      u9241 0F02                        u9161 0C28                        u9081 3A38  
                      u9410 4A12                        u8530 3D98                        u8450 3C64  
                      u7650 2D80                        u7570 2C64                        u7490 2ACA  
                      u7810 1DB6                        u7730 1B48                        u8610 0326  
                      u9250 0FA0                        u9170 0CC8                        u9090 3A4C  
                      u9330 26BC                        u9411 4A0E                        u8531 3D94  
                      u8451 3C5E                        u7651 2D7C                        u7571 2C60  
                      u7491 2AC6                        u7811 1DB2                        u7731 1B44  
                      u8611 0322                        u9251 0F9C                        u9171 0CC4  
                      u9091 3A48                        u9331 26B8                        u9260 52C2  
                      u9420 51D2                        u7900 492A                        u8460 3C66  
                      u7660 2DAE                        u7580 2C84                        u7820 1DD0  
                      u7740 1B58                        u8380 33E4                        u8700 0568  
                      u8620 03B2                        u8540 0176                        u9180 0CE4  
                      u9340 283A                        u9500 115E                        u9261 52BE  
                      u9421 51CE                        u7901 4926                        u7661 2DAA  
                      u7581 2C80                        u7821 1DCC                        u7741 1B54  
                      u8381 33E0                        u8701 0564                        u8621 03AE  
                      u8541 0172                        u9181 0CE0                        u9341 2836  
                      u9501 115A                        u9270 52D0                        u9430 51F6  
                      u7910 4950                        u8470 3C76                        u7590 2C96  
                      u7830 1E18                        u7750 1CD2                        u7670 1A8E  
                      u8390 3408                        u8710 06B0                        u8630 03E4  
                      u8550 01C0                        u9190 0D84                        u9350 2A22  
                      u9510 117C                        u9271 52CC                        u9431 51F2  
                      u7911 494C                        u8471 3C72                        u7591 2C92  
                      u7831 1E14                        u7671 1A8A                        u8295 45CE  
                      u8375 338A                        u8711 06AC                        u8631 03E0  
                      u8551 01BC                        u9191 0D80                        u9351 2A1E  
                      u9511 1178                        u9360 4974                        u7920 4A26  
                      u8480 3CA2                        u7840 1E46                        u7760 1D2C  
                      u7680 1AA0                        u8376 3394                        u8800 09A2  
                      u8720 0716                        u8640 0422                        u8560 01D0  
                      u9440 5100                        u9520 118C                        u9280 4DBA  
                      u9361 4970                        u7921 4A22                        u8481 3C9E  
                      u7841 1E42                        u7761 1D28                        u7681 1A9C  
                      u8377 33A4                        u8801 099E                        u8721 0712  
                      u8641 041E                        u8561 01CC                        u9441 50FC  
                      u9521 1188                        u9281 4DB6                        u9370 4992  
                      u7930 4A40                        u8490 3CB8                        u7850 1E80  
                      u7770 1D4C                        u7690 1AB0                        u8810 0A74  
                      u8730 075E                        u8650 04AE                        u8570 020E  
                      u9450 5114                        u9530 1268                        u9290 4DF4  
                      u9371 498E                        u7931 4A3C                        u8491 3CB4  
                      u7851 1E7C                        u7771 1D48                        u7755 1CC8  
                      u7691 1AAC                        u8395 33FE                        u8811 0A70  
                      u8731 075A                        u8651 04AA                        u8571 020A  
                      u9451 5110                        u9531 1264                        u9291 4DF0  
                      u9700 4734                        u9380 49AE                        u7860 48B0  
                      u7940 4A5A                        u7780 1D5E                        u8820 0A90  
                      u8740 076E                        u8660 04E4                        u8580 0220  
                      u8900 3B52                        u9540 1342                        u9460 10CA  
                      u9701 4730                        u9381 49AA                        u7861 48AC  
                      u7941 4A56                        u7781 1D5A                        u8821 0A8C  
                      u8741 076A                        u8661 04E0                        u8581 021C  
                      u8901 3B4E                        u9541 133E                        u9461 10C4  
                      u9605 533E                        u9710 47C4                        u9390 49EC  
                      u7870 48CA                        u7950 4A78                        u6990 5304  
                      u7790 1D8C                        u8830 0AF6                        u8750 0808  
                      u8670 04FA                        u8590 029A                        u8910 3B78  
                      u9550 1360                        u9470 10CC                        u9606 5340  
                      u9711 47C0                        u7871 48C6                        u7951 4A74  
                      u6991 5300                        u7791 1D88                        u8831 0AF0  
                      u8751 0804                        u8671 04F6                        u8591 0296  
                      u8911 3B74                        u9551 135C                        u9615 5330  
                      u7880 48F0                        u7960 4A8E                        u8840 0AF8  
                      u8760 0856                        u8680 0530                        u8920 3BB2  
                      u9560 1370                        u9480 10EE                        u9616 5332  
                      u9800 4020                        u7881 48EC                        u7961 4A8A  
                      u8761 0852                        u8681 052C                        u8921 3BAE  
                      u9721 4200                        u9561 136C                        u9481 10EA  
                      u9625 5322                        u7890 490E                        u7970 4AB2  
                      u8850 0B0C                        u8770 0906                        u8690 053E  
                      u8930 3BD8                        u9730 421E                        u9570 13F0  
                      u9490 1104                        u9626 5324                        u9810 4042  
                      u9650 51B4                        u7891 490A                        u7971 4AAE  
                      u8851 0B08                        u8771 0902                        u8691 053A  
                      u9731 421A                        u9571 13EC                        u9491 1100  
                      u9635 5314                        u9811 403E                        u9651 51B0  
                      u7980 4BA0                        u8780 0940                        u8940 3C0A  
                      u8860 3AD0                        u9740 4236                        u9580 149A  
                      u9660 4D8C                        u9636 5316                        u9820 407A  
                      u9900 3F28                        u9397 49E2                        u7981 4B9C  
                      u8781 093C                        u8941 3C06                        u8861 3ACC  
                      u9741 4232                        u9581 1496                        u9645 535A  
                      u9821 4076                        u9901 3F24                        u7990 4BDE  
                      u8790 094E                        u8950 3C18                        u8870 3B16  
                      u9670 4E80                        u9646 535C                        u9830 4090  
                      u9910 40D6                        u7991 4BDA                        u8791 094A  
                      u8951 3C14                        u9671 4E7C                        u9831 408C  
                      u9751 3F96                        u9911 40D2                        u8960 3C52  
                      u8880 3B26                        u9680 4E9C                        u9920 412A  
                      u9840 3E10                        u8961 3C4E                        u8937 3BCE  
                      u8881 3B22                        u9681 4E98                        u9665 4D82  
                      u9761 3FA8                        u9921 4126                        u9841 3E0C  
                      u8890 3B34                        u8970 4618                        u9690 4EB2  
                      u9930 4150                        u9850 3E74                        u8891 3B30  
                      u8971 4614                        u9691 4EAE                        u9595 534C  
                      u9931 414C                        u9851 3E70                        u8980 46AC  
                      u9596 534E                        u9940 415E                        u9860 3ECE  
                      u8877 3B0C                        u8981 46A8                        u9941 415A  
                      u9861 3ECA                        u8990 46BE                        u9790 401E  
                      u9950 4170                        u9870 3EDC                        u8991 46BA  
                      u9791 4018                        u9951 416C                        u9871 3ED8  
                      u9784 4008                        u9960 4188                        u9880 3F02  
                      u9785 4004                        u9961 4184                        u9881 3EFE  
                      _TMR1 0FCE                        u9778 3FDA                        u9970 419C  
                      u9890 3F10                        u9779 4022                        u9971 4198  
                      u9891 3F0C                        u9980 41C2                        u9981 41BE  
                      u9990 41D0                        u9991 41CC                        abs@a 000C  
                      _dbuf 0127                        _half FE0F                        _labs 4EC6  
                      _main 228E                        _dtoa 3C54                        _rand 4D2E  
                      _seed 0197                        _prec 0057                        _sinf 10A8  
                      pad@i 001E                        pad@p 001B                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        _stoa 3AB6  
                      btemp 005A                        _utoa 460A               ___fpclassifyf 450C  
                      prodh 0FF4                        prodl 0FF3                        start 014E  
           ___fldiv@new_exp 003E                ___param_bank 0000                       ??_ISR 0001  
            _LCD_ShowString 4962                       ??_abs 000E                       ??_pad 001D  
          __end_of_LCD_Init 47D4            __end_of_LCD_Send 52D4               ___fltol@sign1 0052  
                     ?_labs 0006             __end_of___fladd 1A74                       ?_main 0001  
                     ?_dtoa 0020             __end_of___fldiv 2DC2                       ?_rand 0012  
           __end_of___awdiv 4962             __end_of___cosdf 3902             __end_of___lbdiv 4EC6  
           __end_of___flneg 5154                       STR_10 FF6A                       STR_11 FF9D  
                     STR_20 FFAE                       STR_12 FF37                       STR_13 FE35  
                     STR_21 FE9E                       STR_22 FF59                       STR_14 FF04  
                     STR_30 FFC6                       STR_23 FFE6                       STR_15 FE8D  
                     STR_31 FFD6                       STR_32 FFCC                       STR_16 FEE2  
                     STR_40 FE7C                       STR_24 FFDC                       STR_33 FFCD  
                     STR_41 FFEB                       STR_17 FEF3                       STR_25 FFE1  
                     STR_18 FED1                       STR_34 FE46                       STR_26 FFFB  
                     STR_19 FE35                       STR_35 FFD2                       STR_27 FFF7  
                     STR_44 FFEF                       STR_36 FE33                       STR_28 FFF3  
           __end_of___awmod 4AC4                       STR_37 FE6B                       STR_29 FFD7  
                     STR_38 FE33                       STR_47 FFBF                       STR_39 FE59  
                     ?_sinf 00A4             __end_of___flmul 1E9E             __end_of___flsub 5052  
           __end_of___fltol 4408                       ?_stoa 0010                       u10000 41E4  
                     u10001 41E0                       u10011 3512                       u10020 353A  
                     u10100 301C                       u10021 3536                       u10101 3018  
                     u10030 35DA                       u10110 303E                       u10031 35D6  
                     u10111 303A                       ?_utoa 0020                       u10040 36B4  
                     u10120 3052                       u10200 2072                       u10041 36B0  
                     u10121 304E                       u10201 206E                       u10050 36DA  
                     u10130 3066                       u10210 2080                       u10051 36D6  
                     u10131 3062                       u10211 207C                       u10060 36E8  
                     u10140 307A                       u10220 212C                       u10300 23C4  
                     u10061 36E4                       u10141 3076                       u10221 2128  
                     u10301 23C0                       u10070 3700                       u10150 30A8  
                     u10230 215C                       u10310 23D2                       u10071 36FC  
                     u10151 30A4                       u10231 2158                       u10311 23CE  
                     u10080 2E32                       u10240 2278                       u10320 23F8  
                     u10081 2E2E                       u10241 2274                       u10161 1EE4  
                     u10321 23F4                       u10090 2E94                       u10330 2406  
                     u10250 232E                       u10091 2E90                       u10171 1F18  
                     u10331 2402                       u10251 232A                       u10180 1F92  
                     u10340 264C                       u10260 2354                       u10181 1F8E  
                     u10341 2648                       u10261 2350                       u10190 204C  
                     u10270 2372                       u10191 2048                       u10407 24DE  
                     u10271 236E                       u10280 2380                       u10417 2512  
                     u10281 237C                       u10290 23A6                       u10507 2058  
                     u10427 2548                       u10291 23A2             ___awdiv@divisor 001A  
                     u10517 220C                       u10437 257E                       u10357 229A  
                     u10527 308C                       u10447 25A4                       u10367 2302  
                     u10537 36C0                       u10457 25E2                       u10377 233A  
                     u10547 471C                       u10467 3EE8                       u10387 238C  
                     u10557 47CA                       u10477 4134                       u10397 23DE  
                     u10487 41A6                       u10497 404C                       _RC1IE 7CED  
                     _RC1IF 7CF5             __end_of___lwdiv 4D2E             __end_of___sindf 32DC  
           __end_of___lwmod 4E6A                       i2l412 0088                       i2l414 0074  
                     i2l423 0142                ___sindf$4540 0074             ___awdiv@counter 001C  
              ___sindf$4541 0078                ___sindf$4539 0070                vfpfcnvrt@fmt 00BB  
                     _TX1IF 7CF4         ___lmul@multiplicand 000A             __end_of_pio2_1t FE07  
                     _fabsf 51F8                       _flags 0059                       _gmail 0177  
       read_prec_or_width@c 000E         read_prec_or_width@n 000F                       _fputc 47D4  
                     _fputs 5098                       labs@a 0006                       pad@fp 0017  
                     _width 0055             __end_of_invpio2 FE0F                       _putch 52F4  
                     dtoa@d 0022                       dtoa@i 002B                       dtoa@p 0028  
                     dtoa@s 002A                       dtoa@w 0026        __end_of_LED1_Control 5350  
           __end_of_runGAME 228E             __end_of_runGPIO 40A8                       pclath 0FFA  
                     tablat 0FF5             __end_of_runUART 3F3C        __end_of_LED2_Control 5342  
                     sinf@n 00B0                       sinf@x 00A4                       sinf@y 00B6  
                     plusw1 0FE3                       plusw2 0FDB                       stoa@l 001C  
                     stoa@p 0016                       stoa@s 0012                       stoa@w 0018  
                     ttemp5 005B                       ttemp6 005E                       ttemp7 0062  
                     utoa@d 0022        __end_of_LED3_Control 5334                       utoa@i 0028  
                     utoa@p 0026                       utoa@w 0024                       status 0FD8  
                     wtemp8 005B             __end_of_sprintf 5098              ?___fpclassifyf 0006  
           ___lbdiv@divisor 0006        __end_of_LED4_Control 5326             ___lbdiv@counter 0008  
      __end_of_LED5_Control 5318             runUART@reversed 00D4        __end_of_LED6_Control 535E  
           __initialization 4F1C      __end_of_LCD_ShowString 4A14                __end_of_half FE13  
              __end_of_labs 4F1C                __end_of_main 2666                __end_of_dtoa 3DD0  
              __end_of_rand 4D9C                __end_of_sinf 15B2                __end_of_stoa 3C54  
              __end_of_utoa 46FA                LCD_Send@data 0006                      ??_labs 000A  
                    ??_main 00FA                      ??_dtoa 0024                      ??_rand 0014  
                    ??_sinf 0054                      ??_stoa 0014                      ??_utoa 0024  
         __end_of_LCD_Clear 51F8               __activetblptr 0002  __end_of_read_prec_or_width 4B72  
              ?_moveDisplay 00E7                      ?_fabsf 0006                      ?_fputc 0007  
                    ?_fputs 0010                      _ADRESH 0FC4                      _ADRESL 0FC3  
                    _CCPR1L 0FBE            ___awdiv@dividend 0018                      _GAMEIE 0124  
                    ?_putch 0001                      _GODONE 7E11                      _GPIOIE 0126  
                    i2l6300 00E8                      i2l6310 0128                      i2l6302 00FA  
                    i2l6312 012C                      i2l6304 00FE                      i2l6314 013A  
                    i2l6306 0110                      i2l6308 0120                      i2l6270 002E  
                    i2l6280 0082                      i2l6272 0040                      i2l6290 00C0  
                    i2l6282 0090                      i2l6274 004E                      i2l6266 0012  
                    i2l6292 00C2                      i2l6276 0066                      i2l6268 0020  
                    i2l6284 0092                      i2l6294 00CA                      i2l6286 00A0  
                    i2l6288 00AE                      i2l6296 00CC                      i2l6298 00DA  
                    _RCREG1 0FAE               ___rem_pio2f@n 00A0               ___rem_pio2f@t 009C  
             ___rem_pio2f@x 0084               ___rem_pio2f@y 0088               vfpfcnvrt@done 00BF  
                    _UARTIE 0125                      _SPBRG1 0FAF                      _TMR1IE 7CE8  
                    _TMR1IF 7CF0                      _TMR2IE 7CE9                      _TMR2IF 7CF1  
                    _TMR1ON 7E68                      _TMR2ON 7DD2                      _SSP1IF 7CF3  
                    _SSP2IF 7D27                      _TXREG1 0FAD            __end_of___xxtofl 3AB6  
              _CCPTMRS0bits 0F49                vfprintf@cfmt 00CC             ?_LCD_ShowString 0007  
                    _s1pio2 FE2F                      _s2pio2 FE2B                      _s3pio2 FE27  
                    _s4pio2 FE23                      ___flge 4408                      ___fleq 4B72  
                    ___lmul 4D9C                   ??___fladd 004E                      ___wmul 5288  
                 ??___fldiv 0035                   ??___awdiv 001C                   ??___cosdf 0052  
                 ??___lbdiv 0007                   ??___flneg 0052                   ??___awmod 000A  
                 ??___flmul 001C                   ??___flsub 0052                   ??___fltol 0068  
          runUART@keepState 00F3                      _efgtoa 0152                   ??___lwdiv 000A  
                 ??___sindf 0052                   ??___lwmod 000A                      _pio2_1 FE07  
                    _floorf 32DC                      fabsf@u 000A                      fabsf@x 0006  
                    _memcpy 4F70        read_prec_or_width@ap 000D                      clear_0 4F42  
                    clear_1 4F4E            ___awdiv@quotient 001E                      _runADC 34F2  
                    _runDAC 2DC2             ___awmod@divisor 0008                      isa$std 0001  
                    _runPWM 40A8        runGAME@keepStateGAME 01C5             ___awmod@counter 000A  
                    _printf 52D4                      pad@buf 0019                      dtoa@fp 0020  
                    _strcpy 5154                      _strlen 518C                      fputc@c 0007  
                    fputs@c 0014                      fputs@i 0015                      fputs@s 0010  
          __end_of_runMUSIC 5360             ___fpclassifyf@e 000E             ___fpclassifyf@u 0010  
           ___fpclassifyf@x 0006                __mediumconst FDF2                   ??_runGAME 00E7  
                    sinf@ux 00BA                   ??_runGPIO 0007                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8           __end_of_SPI_write 511A  
                 ??_runUART 00D2                      stoa@cp 001A                      stoa@fp 0010  
          __end_of_vfprintf 500A                      utoa@fp 0020                   ??_sprintf 0054  
          ___lbdiv@dividend 0007                  ___flge@ff1 002D                  ___flge@ff2 0031  
           ??___fpclassifyf 000A                ___xxtofl@arg 0010                ___xxtofl@exp 000F  
              ___xxtofl@val 0006                  ___fleq@ff1 0006                  ___fleq@ff2 000A  
                __accesstop 0060     __end_of__initialization 4F62                   ?_LCD_Init 0001  
                 ?_LCD_Send 0001                  ___flneg@f1 0080               ___rparam_used 0001  
                ___fltol@f1 0064              __pcstackCOMRAM 0001           LED4_Control@state 0006  
              __pidataBANK1 5260               __end_of_fabsf 522C               __end_of_fputc 489E  
             __end_of_fputs 50DC               __end_of_putch 530A                  __end_of_C0 FE23  
                __end_of_C1 FE1F                  __end_of_C2 FE1B                  __end_of_C3 FE17  
                __end_of_S1 FE03                  __end_of_S2 FDFF                  __end_of_S3 FDFB  
                __end_of_S4 FDF7            ___lbdiv@quotient 0009                     ??_fabsf 000A  
                   ??_fputc 000B                     ??_fputs 0014                     ??_putch 0006  
                __pbssBANK0 00FE                  __pbssBANK1 0100                  __pbssBANK2 0200  
                ??_LCD_Init 0007                  ??_LCD_Send 0006                 runADC@F6967 0100  
              SPI_write@LSB 0007                SPI_write@MSB 0006                     ISR@temp 0005  
                   ?___flge 002D                     ?___fleq 0006                     ?___lmul 0006  
                   ?___wmul 0006                     ?_efgtoa 0084               ??___rem_pio2f 0089  
                   ?_floorf 0046                _LED1_Control 5342                     ?_memcpy 0006  
            ___lmul@product 000E                     ?_runADC 0001                     ?_runDAC 0001  
              _LED2_Control 5334         runGAME@randomNumber 01CB                     ?_runPWM 0001  
                   ?_printf 00CE                     ?_strcpy 0006                     ?_strlen 0006  
              _LED3_Control 5326                _LED4_Control 5318                   ?___xxtofl 0006  
              _LED5_Control 530A              ___rem_pio2f@fn 0098              ___rem_pio2f@ty 008B  
            ___rem_pio2f@ux 0094                _LED6_Control 5350                     _SSP2ADD 0F6E  
                   _SSP1BUF 0FC9                     _SSP2BUF 0F6F                 runGAME@pot1 01C9  
               runGAME@text 019B           runGPIO@LEDControl 0015             LCD_ShowString@i 000C  
                   __Hparam 0000                     __Lparam 0000                   ?_runMUSIC 0001  
                   ___fladd 15B2                     ___fldiv 2A28                     ___awdiv 489E  
                   ___cosdf 3704                     ___lbdiv 4E6A                     ___flneg 511A  
                   ___awmod 4A14                     ___flmul 1A74                     ___flsub 500A  
                   ___fltol 4300                     ___lwdiv 4CBA                     ___sindf 30AA  
                   ___lwmod 4E06                   ?_vfprintf 00C7              main@setUpAgain 00FC  
                   __pcinit 4F1C                     __ramtop 1000                     __ptext0 228E  
                   __ptext1 3DD0                     __ptext2 518C                     __ptext3 40A8  
                   __ptext4 535E                     __ptext5 3F3C                     __ptext6 530A  
                   __ptext7 5318                     __ptext8 5326                     __ptext9 5334  
                   _pio2_1t FE03                   _T1CONbits 0FCD             runPWM@keepState 0022  
     read_prec_or_width@fmt 000C                  ??___xxtofl 000A         __end_of___rem_pio2f 2A28  
          ___awmod@dividend 0006                     _invpio2 FE0B                     _runGAME 1E9E  
                   _runGPIO 3F3C                     efgtoa@c 008A                     efgtoa@d 0098  
                   efgtoa@e 009C                     efgtoa@f 0086                     efgtoa@g 00AF  
                   efgtoa@h 00A6                     efgtoa@i 00A4                     efgtoa@l 00AA  
                   efgtoa@m 009A                     efgtoa@n 00B3                     efgtoa@p 008F  
                   efgtoa@t 0091                     efgtoa@u 00B5                     efgtoa@w 009E  
                   _runUART 3DD0                   _LCD_Clear 51C2                     _sprintf 5052  
          ___rem_pio2f$4538 008F        end_of_initialization 4F62                     floorf@e 0064  
                   floorf@m 0060                     floorf@u 0066                     floorf@x 0046  
                   memcpy@d 000D                     memcpy@n 000A                     memcpy@s 000F  
                   fputc@fp 0009            ___rem_pio2f@F526 0115               __Lmediumconst FDF2  
                   fputs@fp 0012            ??_LCD_ShowString 0009          _read_prec_or_width 4AC4  
                 i2u1056_47 0058           LED1_Control@state 0006       LCD_ShowString@lineNum 000B  
          ___rem_pio2f@sign 0093          runGAME@GAMEdivider 01C8                  ??_runMUSIC 0006  
         __end_of_vfpfcnvrt 10A8                  efgtoa@mode 0096                  efgtoa@sign 00AE  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 000C  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 00C0                  ??_vfprintf 0054                     strcpy@d 000A  
                   strlen@a 0008                     strlen@s 0006                   _PORTAbits 0F80  
                 _PORTCbits 0F82                 ___fladd@grs 0063               ___xxtofl@sign 000E  
                 _TRISAbits 0F92                   _TRISBbits 0F93                   _TRISCbits 0F94  
                 _TRISDbits 0F95                  ?_LCD_Clear 0001        ??_read_prec_or_width 000E  
               ___fldiv@grs 0040                 ___fldiv@rem 0039                   _SPI_write 50DC  
               ___flmul@grs 0022                 _CCP1CONbits 0FBD           LED5_Control@state 0006  
            __end_of_s1pio2 FE33              __end_of_s2pio2 FE2F              __end_of_s3pio2 FE2B  
            __end_of_s4pio2 FE27              __end_of___flge 450C              __end_of___fleq 4C1C  
            __end_of___lmul 4E06                 vfpfcnvrt@ap 00BC                 vfpfcnvrt@cp 00C5  
               ___rem_pio2f 2666                 vfpfcnvrt@fp 00B9              __end_of___wmul 52AE  
            __end_of_efgtoa 0B4C              __end_of_pio2_1 FE0B        moveDisplay@menuItem1 019B  
      moveDisplay@menuItem2 01AC              __end_of_floorf 34F2        moveDisplay@menuItems 01BD  
            __end_of_memcpy 4FC0                  floorf@F521 0119              __end_of_runADC 3704  
            __end_of_runDAC 30AA              __end_of_runPWM 41EE              __end_of_printf 52F4  
            __end_of_strcpy 518C              __end_of_strlen 51C2         start_initialization 4F1C  
               __end_of_ISR 014E                 __end_of_abs 5260                 __end_of_pad 4CBA  
                ?_SPI_write 0001       __end_of___fpclassifyf 460A             runADC@keepState 01B8  
               vfprintf@fmt 00C9                    ??___flge 0035                    ??___fleq 000E  
                  ??___lmul 000E                    ??___wmul 000A                    ??_efgtoa 008B  
               __pdataBANK1 01CE                    ??_floorf 004A                    ??_memcpy 000C  
                  ??_runADC 00E7                    ??_runDAC 00D2                    ??_runPWM 0020  
                  ??_printf 0054                    ??_strcpy 000A                    ??_strlen 0008  
          runGAME@GAMEround 01C7                   ___fladd@a 004A                   ___fladd@b 0046  
                 ___fldiv@a 0031                   ___fldiv@b 002D               runGPIO@states 0009  
                 ___cosdf@r 0068                   ___cosdf@w 0078                   ___cosdf@x 0064  
                 ___cosdf@z 007C                   ___flmul@a 0018                   ___flmul@b 0014  
               __pbssCOMRAM 0055                   ___flsub@a 0068                   ___flsub@b 0064  
             __pcstackBANK0 0060               __pcstackBANK1 019B                 ??_LCD_Clear 0007  
                 ___sindf@r 0068                   ___sindf@s 007C                   ___sindf@w 006C  
                 ___sindf@x 0064                   ___sindf@z 0080       runGPIO@numberOfStates 0021  
               _efgtoa$4075 0093            ___lwdiv@dividend 0006                   _dtoa$4044 0024  
             SPI_write@data 0008                   __pintcode 0008               __pmediumconst FDF2  
                  ?___fladd 0046                    ?___fldiv 002D                    ?___awdiv 0018  
                  ?___cosdf 0064                    ?___lbdiv 0006                    ?___flneg 0080  
                  ?___awmod 0006                    ?___flmul 0014                    ?___flsub 0064  
                  ?___fltol 0064                  runADC@pot1 01B4                  runADC@pot2 01B6  
                  ?___lwdiv 0006                    ?___sindf 0064                    ?___lwmod 0006  
                runADC@text 019B                   fabsf@F465 0111               ??_moveDisplay 00E8  
                  ?_runGAME 0001                    ?_runGPIO 0001                    ?_runUART 0001  
           runDAC@keepState 00DB            ___lwdiv@quotient 000B                    ?_sprintf 00CE  
                 _sinf$4250 00A8                   _sinf$4251 00AC                   _sinf$4534 00B2  
                  _GAMEtime 0123                 ??_SPI_write 0006              runDAC@DACindex 00DD  
                  _LCD_Init 46FA                    _LCD_Send 52AE              ___wmul@product 000A  
                  _LATAbits 0F89                    _LATBbits 0F8A                    _LATCbits 0F8B  
                  _LATDbits 0F8C                runGAME@F6970 0200                runGAME@F6964 0219  
                runUART@len 00F4           LED2_Control@state 0006                    i2u690_40 0074  
                  i2u690_41 0070                    i2u691_40 0082                    i2u691_41 007E  
                  i2u692_40 00A0                    i2u692_41 009C                    i2u693_40 00AE  
                  i2u693_41 00AA                    i2u694_40 00C0                    i2u686_40 0020  
                  i2u694_41 00BC                    i2u686_41 001C                    i2u695_40 00DA  
                  i2u687_40 002E                    i2u695_41 00D6                    i2u687_41 002A  
                  i2u696_40 00E8                    i2u688_40 0040                    i2u696_41 00E4  
                  i2u688_41 003C                    i2u697_40 00FA                    i2u689_40 004E  
                  i2u697_41 00F6                    i2u689_41 004A                    i2u698_40 0110  
                  i2u698_41 010C                   _vfpfcnvrt 0B4C                  _ADCON0bits 0FC2  
                _ADCON2bits 0FC0           ___wmul@multiplier 0006                   main@menuI 00FD  
          moveDisplay@F6965 01CE                  vfpfcnvrt@c 00C4           ___lmul@multiplier 0006  
                 copy_data0 4F30           runGAME@approxText 01AC         __end_of_moveDisplay 4300  
          moveDisplay@menuI 01CD            moveDisplay@where 00E7                runGPIO@F6975 01EA  
              runGPIO@F6993 01DE                runGPIO@GPIOi 0023                    __Hrparam 0000  
                 memcpy@tmp 000C                  vfprintf@ap 00CB                    __Lrparam 0000  
                vfprintf@fp 00C7             runGAME@GAMEpart 01C6           LED6_Control@state 0006  
              ?___rem_pio2f 0084                  ?_vfpfcnvrt 00B9         runDAC@selectModeDAC 00DC  
                _ANSELAbits 0F38                  _ANSELBbits 0F39                  _ANSELCbits 0F3A  
                _ANSELDbits 0F3B                  _ANSELEbits 0F3C          ___fpclassifyf@F465 011D  
                sprintf@fmt 00D0                    ___xxtofl 3902             ___lwdiv@divisor 0008  
           ___lwdiv@counter 000A                    __ptext10 5342                    __ptext11 5350  
                  __ptext20 51F8                    __ptext12 1E9E                    __ptext21 3704  
                  __ptext13 4D2E                    __ptext30 460A                    __ptext22 52D4  
                  __ptext14 4D9C                    __ptext31 4E06                    __ptext23 50DC  
                  __ptext15 4E6A                    __ptext40 32DC                    __ptext32 4CBA  
                  __ptext24 34F2                    __ptext16 2DC2                    __ptext41 450C  
                  __ptext33 3AB6                    __ptext25 3902                    __ptext17 10A8  
                  __ptext50 3C54                    __ptext42 4300                    __ptext34 4AC4  
                  __ptext26 41EE                    __ptext18 30AA                    __ptext51 4C1C  
                  __ptext43 500A                    __ptext35 5288                    __ptext27 5052  
                  __ptext19 2666                    __ptext60 46FA                    __ptext52 5098  
                  __ptext44 15B2                    __ptext36 0152                    __ptext28 4FC0  
                  __ptext61 52AE                    __ptext53 47D4                    __ptext45 511A  
                  __ptext37 5154                    __ptext29 0B4C                    __ptext54 52F4  
                  __ptext46 1A74                    __ptext38 4F70                    __ptext55 522C  
                  __ptext47 4408                    __ptext39 4EC6                    __ptext56 4A14  
                  __ptext48 4B72                    __ptext57 489E                    __ptext49 2A28  
                  __ptext58 4962                    __ptext59 51C2              runADC@voltage1 01AC  
            runADC@voltage2 01B0                _SSP1CON1bits 0FC6                _SSP2CON1bits 0F6C  
              _SSP2CON2bits 0F6B                  strcpy@dest 0006                    efgtoa@fp 0084  
                  efgtoa@ne 008D                    efgtoa@pp 0095                    efgtoa@ou 00A0  
                  _runMUSIC 535E                    isa$xinst 0000                    int$flags 005A  
               _runDAC$4531 00D3                 _runDAC$4532 00D7                    _vfprintf 4FC0  
             ?_LED1_Control 0001                   printf@fmt 00CE                _SSP1STATbits 0FC7  
             ?_LED2_Control 0001                _SSP2STATbits 0F6D               ?_LED3_Control 0001  
             ?_LED4_Control 0001                   putch@data 0006               ?_LED5_Control 0001  
                  memcpy@d1 0006               ?_LED6_Control 0001                    memcpy@s1 0008  
               _moveDisplay 41EE                    intlevel2 0000                   sprintf@ap 00DA  
          ___lwmod@dividend 0006                   strcpy@src 0008                  _RCSTA1bits 0FAB  
                  sinf@sign 00B1                    runGPIO@j 0024                    runUART@i 00F6  
                  runUART@p 00F8                 efgtoa@nmode 0097                    printf@ap 0054  
            ??_LED1_Control 0006              ??_LED2_Control 0006                 ??_vfpfcnvrt 00BD  
    LCD_ShowString@textData 0007              ??_LED3_Control 0006              ??_LED4_Control 0006  
                  sprintf@f 00DB                    sprintf@s 00CE              ??_LED5_Control 0006  
           ___lwmod@divisor 0008              ??_LED6_Control 0006             ___lwmod@counter 000A  
          runPWM@multiplier 0023               ___fladd@signs 0060                ___fladd@aexp 0061  
              ___fladd@bexp 0062                ___cosdf$4535 006C                ___cosdf$4536 0070  
              ___cosdf$4537 0074               _keepStateGPIO 00FE           LED3_Control@state 0006  
