

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Apr 28 01:37:48 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Generated 12/10/2023 GMT
    60                           ; 
    61                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F46K22 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     
    94                           	psect	idataBANK0
    95   004028                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for runGPIO@F6981
    99   004028  20                 	db	32
   100   004029  30                 	db	48
   101   00402A  18                 	db	24
   102   00402B  0C                 	db	12
   103   00402C  06                 	db	6
   104   00402D  03                 	db	3
   105   00402E  01                 	db	1
   106   00402F  03                 	db	3
   107   004030  06                 	db	6
   108   004031  0C                 	db	12
   109   004032  18                 	db	24
   110   004033  30                 	db	48
   111                           
   112                           ;initializer for runGPIO@F6963
   113   004034  B0                 	db	low _LED1_Control
   114   004035  40                 	db	high _LED1_Control
   115   004036  A2                 	db	low _LED2_Control
   116   004037  40                 	db	high _LED2_Control
   117   004038  94                 	db	low _LED3_Control
   118   004039  40                 	db	high _LED3_Control
   119   00403A  86                 	db	low _LED4_Control
   120   00403B  40                 	db	high _LED4_Control
   121   00403C  78                 	db	low _LED5_Control
   122   00403D  40                 	db	high _LED5_Control
   123   00403E  BE                 	db	low _LED6_Control
   124   00403F  40                 	db	high _LED6_Control
   125                           
   126                           ;initializer for moveDisplay@F6950
   127   004040  7B                 	db	low STR_4
   128   004041  80                 	db	low STR_5
   129   004042  92                 	db	low STR_6
   130   004043  8E                 	db	low STR_7
   131   004044  8A                 	db	low STR_8
   132   004045  76                 	db	low STR_9
   133   004046  6A                 	db	low STR_10
   134   004047  89                 	db	low (STR_3+4)
   135                           
   136                           	psect	smallconst
   137   001000                     __psmallconst:
   138                           	callstack 0
   139   001000  00                 	db	0
   140   001001  6C3C               	dw	27708
   141   001003  3636               	dw	13878
   142   001005                     __end_of_S4:
   143                           	callstack 0
   144   001005  07CF               	dw	1999
   145   001007  B950               	dw	47440
   146   001009                     __end_of_S3:
   147                           	callstack 0
   148   001009  8884               	dw	34948
   149   00100B  3C08               	dw	15368
   150   00100D                     __end_of_S2:
   151                           	callstack 0
   152   00100D  AAAB               	dw	43691
   153   00100F  BE2A               	dw	48682
   154   001011                     __end_of_S1:
   155                           	callstack 0
   156   001011  85A3               	dw	34211
   157   001013  3288               	dw	12936
   158   001015                     __end_of_pio2_1t:
   159                           	callstack 0
   160   001015  0FDA               	dw	4058
   161   001017  3FC9               	dw	16329
   162   001019                     __end_of_pio2_1:
   163                           	callstack 0
   164   001019  F983               	dw	63875
   165   00101B  3F22               	dw	16162
   166   00101D                     __end_of_invpio2:
   167                           	callstack 0
   168   00101D  0000               	dw	0
   169   00101F  3F00               	dw	16128
   170   001021                     __end_of_half:
   171                           	callstack 0
   172   001021  9A17               	dw	39447
   173   001023  37CC               	dw	14284
   174   001025                     __end_of_C3:
   175                           	callstack 0
   176   001025  043F               	dw	1087
   177   001027  BAB6               	dw	47798
   178   001029                     __end_of_C2:
   179                           	callstack 0
   180   001029  AA9F               	dw	43679
   181   00102B  3D2A               	dw	15658
   182   00102D                     __end_of_C1:
   183                           	callstack 0
   184   00102D  0000               	dw	0
   185   00102F  BF00               	dw	48896
   186   001031                     __end_of_C0:
   187                           	callstack 0
   188   001031  0FDB               	dw	4059
   189   001033  40C9               	dw	16585
   190   001035                     __end_of_s4pio2:
   191                           	callstack 0
   192   001035  CBE4               	dw	52196
   193   001037  4096               	dw	16534
   194   001039                     __end_of_s3pio2:
   195                           	callstack 0
   196   001039  0FDB               	dw	4059
   197   00103B  4049               	dw	16457
   198   00103D                     __end_of_s2pio2:
   199                           	callstack 0
   200   00103D  0FDB               	dw	4059
   201   00103F  3FC9               	dw	16329
   202   001041                     __end_of_s1pio2:
   203                           	callstack 0
   204   000000                     _LATBbits	set	3978
   205   000000                     _TRISBbits	set	3987
   206   000000                     _SSP2STATbits	set	3949
   207   000000                     _SSP2ADD	set	3950
   208   000000                     _TX1IF	set	31988
   209   000000                     _GODONE	set	32273
   210   000000                     _ANSELBbits	set	3897
   211   000000                     _ANSELDbits	set	3899
   212   000000                     _PORTAbits	set	3968
   213   000000                     _PORTCbits	set	3970
   214   000000                     _LATCbits	set	3979
   215   000000                     _LATDbits	set	3980
   216   000000                     _ANSELAbits	set	3896
   217   000000                     _TRISAbits	set	3986
   218   000000                     _TRISCbits	set	3988
   219   000000                     _TRISDbits	set	3989
   220   000000                     _SSP1IF	set	31987
   221   000000                     _SSP2IF	set	32039
   222   000000                     _LATAbits	set	3977
   223   000000                     _SSP2CON2bits	set	3947
   224   000000                     _SSP2CON1bits	set	3948
   225   000000                     _SSP2BUF	set	3951
   226   000000                     _RCSTA1bits	set	4011
   227   000000                     _SPBRG1	set	4015
   228   000000                     _ADCON2bits	set	4032
   229   000000                     _SSP1CON1bits	set	4038
   230   000000                     _SSP1BUF	set	4041
   231   000000                     _SSP1STATbits	set	4039
   232   000000                     _ADCON0bits	set	4034
   233   000000                     _ADRESH	set	4036
   234   000000                     _TXREG1	set	4013
   235   000000                     _TXSTA1bits	set	4012
   236   001041                     STR_1:
   237   001041  52                 	db	82	;'R'
   238   001042  42                 	db	66	;'B'
   239   001043  30                 	db	48	;'0'
   240   001044  2D                 	db	45
   241   001045  41                 	db	65	;'A'
   242   001046  32                 	db	50	;'2'
   243   001047  2C                 	db	44
   244   001048  20                 	db	32
   245   001049  42                 	db	66	;'B'
   246   00104A  52                 	db	82	;'R'
   247   00104B  3A                 	db	58	;':'
   248   00104C  20                 	db	32
   249   00104D  39                 	db	57	;'9'
   250   00104E  36                 	db	54	;'6'
   251   00104F  30                 	db	48	;'0'
   252   001050  30                 	db	48	;'0'
   253   001051  00                 	db	0
   254   001052                     STR_2:
   255   001052  31                 	db	49	;'1'
   256   001053  3A                 	db	58	;':'
   257   001054  74                 	db	116	;'t'
   258   001055  72                 	db	114	;'r'
   259   001056  2C                 	db	44
   260   001057  32                 	db	50	;'2'
   261   001058  3A                 	db	58	;':'
   262   001059  73                 	db	115	;'s'
   263   00105A  69                 	db	105	;'i'
   264   00105B  6E                 	db	110	;'n'
   265   00105C  2C                 	db	44
   266   00105D  33                 	db	51	;'3'
   267   00105E  3A                 	db	58	;':'
   268   00105F  70                 	db	112	;'p'
   269   001060  69                 	db	105	;'i'
   270   001061  6C                 	db	108	;'l'
   271   001062  00                 	db	0
   272   001063                     STR_14:
   273   001063  28                 	db	40
   274   001064  6E                 	db	110	;'n'
   275   001065  75                 	db	117	;'u'
   276   001066  6C                 	db	108	;'l'
   277   001067  6C                 	db	108	;'l'
   278   001068  29                 	db	41
   279   001069  00                 	db	0
   280   00106A                     STR_10:
   281   00106A  4D                 	db	77	;'M'
   282   00106B  55                 	db	85	;'U'
   283   00106C  53                 	db	83	;'S'
   284   00106D  49                 	db	73	;'I'
   285   00106E  43                 	db	67	;'C'
   286   00106F  00                 	db	0
   287   001070                     STR_12:
   288   001070  3E                 	db	62	;'>'
   289   001071  25                 	db	37
   290   001072  2D                 	db	45
   291   001073  2A                 	db	42
   292   001074  73                 	db	115	;'s'
   293   001075  00                 	db	0
   294   001076                     STR_9:
   295   001076  47                 	db	71	;'G'
   296   001077  41                 	db	65	;'A'
   297   001078  4D                 	db	77	;'M'
   298   001079  45                 	db	69	;'E'
   299   00107A  00                 	db	0
   300   00107B                     STR_4:
   301   00107B  47                 	db	71	;'G'
   302   00107C  50                 	db	80	;'P'
   303   00107D  49                 	db	73	;'I'
   304   00107E  4F                 	db	79	;'O'
   305   00107F  00                 	db	0
   306   001080                     STR_5:
   307   001080  55                 	db	85	;'U'
   308   001081  41                 	db	65	;'A'
   309   001082  52                 	db	82	;'R'
   310   001083  54                 	db	84	;'T'
   311   001084  00                 	db	0
   312   001085                     STR_3:
   313   001085  25                 	db	37
   314   001086  64                 	db	100	;'d'
   315   001087  20                 	db	32
   316   001088  0D                 	db	13
   317   001089  00                 	db	0
   318   00108A                     STR_8:
   319   00108A  44                 	db	68	;'D'
   320   00108B  41                 	db	65	;'A'
   321   00108C  43                 	db	67	;'C'
   322   00108D  00                 	db	0
   323   00108E                     STR_7:
   324   00108E  41                 	db	65	;'A'
   325   00108F  44                 	db	68	;'D'
   326   001090  43                 	db	67	;'C'
   327   001091  00                 	db	0
   328   001092                     STR_6:
   329   001092  50                 	db	80	;'P'
   330   001093  57                 	db	87	;'W'
   331   001094  4D                 	db	77	;'M'
   332   001095  00                 	db	0
   333   001096  00                 	db	0	; dummy byte at the end
   334   000000                     
   335                           ; #config settings
   336                           
   337                           	psect	cinit
   338   003E0C                     __pcinit:
   339                           	callstack 0
   340   003E0C                     start_initialization:
   341                           	callstack 0
   342   003E0C                     __initialization:
   343                           	callstack 0
   344                           
   345                           ; Initialize objects allocated to BANK0 (32 bytes)
   346                           ; load TBLPTR registers with __pidataBANK0
   347   003E0C  0E28               	movlw	low __pidataBANK0
   348   003E0E  6EF6               	movwf	tblptrl,c
   349   003E10  0E40               	movlw	high __pidataBANK0
   350   003E12  6EF7               	movwf	tblptrh,c
   351   003E14  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   352   003E16  6EF8               	movwf	tblptru,c
   353   003E18  EE00  F0C1         	lfsr	0,__pdataBANK0
   354   003E1C  EE10 F020          	lfsr	1,32
   355   003E20                     copy_data0:
   356   003E20  0009               	tblrd		*+
   357   003E22  CFF5 FFEE          	movff	tablat,postinc0
   358   003E26  50E5               	movf	postdec1,w,c
   359   003E28  50E1               	movf	fsr1l,w,c
   360   003E2A  E1FA               	bnz	copy_data0
   361                           
   362                           ; Clear objects allocated to BANK1 (32 bytes)
   363   003E2C  EE01  F000         	lfsr	0,__pbssBANK1
   364   003E30  0E20               	movlw	32
   365   003E32                     clear_0:
   366   003E32  6AEE               	clrf	postinc0,c
   367   003E34  06E8               	decf	wreg,f,c
   368   003E36  E1FD               	bnz	clear_0
   369                           
   370                           ; Clear objects allocated to BANK0 (13 bytes)
   371   003E38  EE00  F0E1         	lfsr	0,__pbssBANK0
   372   003E3C  0E0D               	movlw	13
   373   003E3E                     clear_1:
   374   003E3E  6AEE               	clrf	postinc0,c
   375   003E40  06E8               	decf	wreg,f,c
   376   003E42  E1FD               	bnz	clear_1
   377   003E44                     end_of_initialization:
   378                           	callstack 0
   379   003E44                     __end_of__initialization:
   380                           	callstack 0
   381   003E44  0E00               	movlw	low (__Lmediumconst shr (0+16))
   382   003E46  6EF8               	movwf	tblptru,c
   383   003E48  0100               	movlb	0
   384   003E4A  EF5C  F017         	goto	_main	;jump to C main() function
   385                           
   386                           	psect	bssBANK0
   387   0000E1                     __pbssBANK0:
   388                           	callstack 0
   389   0000E1                     fabsf@F465:
   390                           	callstack 0
   391   0000E1                     	ds	4
   392   0000E5                     ___rem_pio2f@F526:
   393                           	callstack 0
   394   0000E5                     	ds	4
   395   0000E9                     _width:
   396                           	callstack 0
   397   0000E9                     	ds	2
   398   0000EB                     _prec:
   399                           	callstack 0
   400   0000EB                     	ds	2
   401   0000ED                     _flags:
   402                           	callstack 0
   403   0000ED                     	ds	1
   404                           
   405                           	psect	dataBANK0
   406   0000C1                     __pdataBANK0:
   407                           	callstack 0
   408   0000C1                     runGPIO@F6981:
   409                           	callstack 0
   410   0000C1                     	ds	12
   411   0000CD                     runGPIO@F6963:
   412                           	callstack 0
   413   0000CD                     	ds	12
   414   0000D9                     moveDisplay@F6950:
   415                           	callstack 0
   416   0000D9                     	ds	8
   417                           
   418                           	psect	bssBANK1
   419   000100                     __pbssBANK1:
   420                           	callstack 0
   421   000100                     _dbuf:
   422                           	callstack 0
   423   000100                     	ds	32
   424                           
   425                           	psect	cstackBANK0
   426   000060                     __pcstackBANK0:
   427                           	callstack 0
   428   000060                     ___cosdf@r:
   429                           	callstack 0
   430   000060                     ___sindf@r:
   431                           	callstack 0
   432   000060                     moveDisplay@menuItem1:
   433                           	callstack 0
   434                           
   435                           ; 17 bytes @ 0x0
   436   000060                     	ds	4
   437   000064                     ___sindf@w:
   438                           	callstack 0
   439   000064                     ___cosdf$3123:
   440                           	callstack 0
   441                           
   442                           ; 4 bytes @ 0x4
   443   000064                     	ds	4
   444   000068                     ___cosdf$3124:
   445                           	callstack 0
   446   000068                     ___sindf$3127:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0x8
   450   000068                     	ds	4
   451   00006C                     ___cosdf$3125:
   452                           	callstack 0
   453   00006C                     ___sindf$3128:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0xC
   457   00006C                     	ds	4
   458   000070                     ___cosdf@w:
   459                           	callstack 0
   460   000070                     ___sindf$3129:
   461                           	callstack 0
   462                           
   463                           ; 4 bytes @ 0x10
   464   000070                     	ds	1
   465   000071                     moveDisplay@menuItem2:
   466                           	callstack 0
   467                           
   468                           ; 17 bytes @ 0x11
   469   000071                     	ds	3
   470   000074                     ___cosdf@z:
   471                           	callstack 0
   472   000074                     ___sindf@s:
   473                           	callstack 0
   474                           
   475                           ; 4 bytes @ 0x14
   476   000074                     	ds	4
   477   000078                     ?___flneg:
   478                           	callstack 0
   479   000078                     ___flneg@f1:
   480                           	callstack 0
   481   000078                     ___sindf@z:
   482                           	callstack 0
   483                           
   484                           ; 4 bytes @ 0x18
   485   000078                     	ds	4
   486   00007C                     ?___rem_pio2f:
   487                           	callstack 0
   488   00007C                     ___rem_pio2f@x:
   489                           	callstack 0
   490                           
   491                           ; 4 bytes @ 0x1C
   492   00007C                     	ds	4
   493   000080                     ___rem_pio2f@y:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x20
   497   000080                     	ds	1
   498   000081                     ___rem_pio2f@ty:
   499                           	callstack 0
   500                           
   501                           ; 4 bytes @ 0x21
   502   000081                     	ds	1
   503   000082                     moveDisplay@menuItems:
   504                           	callstack 0
   505                           
   506                           ; 8 bytes @ 0x22
   507   000082                     	ds	3
   508   000085                     ___rem_pio2f$3126:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x25
   512   000085                     	ds	4
   513   000089                     ___rem_pio2f@sign:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0x29
   517   000089                     	ds	1
   518   00008A                     moveDisplay@menuI:
   519                           	callstack 0
   520   00008A                     ___rem_pio2f@ux:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0x2A
   524   00008A                     	ds	4
   525   00008E                     ___rem_pio2f@fn:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x2E
   529   00008E                     	ds	4
   530   000092                     ___rem_pio2f@t:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x32
   534   000092                     	ds	4
   535   000096                     ___rem_pio2f@n:
   536                           	callstack 0
   537                           
   538                           ; 4 bytes @ 0x36
   539   000096                     	ds	4
   540   00009A                     ?_sinf:
   541                           	callstack 0
   542   00009A                     sinf@x:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x3A
   546   00009A                     	ds	4
   547   00009E                     _sinf$2857:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x3E
   551   00009E                     	ds	4
   552   0000A2                     _sinf$2858:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x42
   556   0000A2                     	ds	4
   557   0000A6                     sinf@n:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x46
   561   0000A6                     	ds	1
   562   0000A7                     sinf@sign:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x47
   566   0000A7                     	ds	1
   567   0000A8                     _sinf$3122:
   568                           	callstack 0
   569                           
   570                           ; 4 bytes @ 0x48
   571   0000A8                     	ds	4
   572   0000AC                     sinf@y:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x4C
   576   0000AC                     	ds	4
   577   0000B0                     sinf@ux:
   578                           	callstack 0
   579                           
   580                           ; 4 bytes @ 0x50
   581   0000B0                     	ds	4
   582   0000B4                     _runDAC$3119:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0x54
   586   0000B4                     	ds	4
   587   0000B8                     _runDAC$3120:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x58
   591   0000B8                     	ds	4
   592   0000BC                     runDAC@keepState:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x5C
   596   0000BC                     	ds	1
   597   0000BD                     runDAC@selectModeDAC:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x5D
   601   0000BD                     	ds	1
   602   0000BE                     runDAC@DACindex:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x5E
   606   0000BE                     	ds	1
   607   0000BF                     main@setUpAgain:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x5F
   611   0000BF                     	ds	1
   612   0000C0                     main@menuI:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0x60
   616   0000C0                     	ds	1
   617                           
   618                           	psect	cstackCOMRAM
   619   000001                     __pcstackCOMRAM:
   620                           	callstack 0
   621   000001                     ?___wmul:
   622                           	callstack 0
   623   000001                     ?___awdiv:
   624                           	callstack 0
   625   000001                     ?___awmod:
   626                           	callstack 0
   627   000001                     ?_fabsf:
   628                           	callstack 0
   629   000001                     ?___xxtofl:
   630                           	callstack 0
   631   000001                     LCD_Send@data:
   632                           	callstack 0
   633   000001                     SPI_write@MSB:
   634                           	callstack 0
   635   000001                     putch@data:
   636                           	callstack 0
   637   000001                     LED1_Control@state:
   638                           	callstack 0
   639   000001                     LED2_Control@state:
   640                           	callstack 0
   641   000001                     LED3_Control@state:
   642                           	callstack 0
   643   000001                     LED4_Control@state:
   644                           	callstack 0
   645   000001                     LED5_Control@state:
   646                           	callstack 0
   647   000001                     LED6_Control@state:
   648                           	callstack 0
   649   000001                     ___wmul@multiplier:
   650                           	callstack 0
   651   000001                     ___awdiv@dividend:
   652                           	callstack 0
   653   000001                     ___awmod@dividend:
   654                           	callstack 0
   655   000001                     ___xxtofl@val:
   656                           	callstack 0
   657   000001                     fabsf@x:
   658                           	callstack 0
   659                           
   660                           ; 4 bytes @ 0x0
   661   000001                     	ds	1
   662   000002                     ??_LCD_Init:
   663   000002                     ??_runGPIO:
   664   000002                     SPI_write@LSB:
   665                           	callstack 0
   666   000002                     LCD_ShowString@textData:
   667                           	callstack 0
   668   000002                     fputc@c:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x1
   672   000002                     	ds	1
   673   000003                     SPI_write@data:
   674                           	callstack 0
   675   000003                     ___wmul@multiplicand:
   676                           	callstack 0
   677   000003                     ___awdiv@divisor:
   678                           	callstack 0
   679   000003                     ___awmod@divisor:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x2
   683   000003                     	ds	1
   684   000004                     ??_LCD_ShowString:
   685   000004                     fputc@fp:
   686                           	callstack 0
   687   000004                     runGPIO@states:
   688                           	callstack 0
   689                           
   690                           ; 12 bytes @ 0x3
   691   000004                     	ds	1
   692   000005                     ??___xxtofl:
   693   000005                     ___awdiv@counter:
   694                           	callstack 0
   695   000005                     ___awmod@counter:
   696                           	callstack 0
   697   000005                     ___wmul@product:
   698                           	callstack 0
   699   000005                     fabsf@u:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x4
   703   000005                     	ds	1
   704   000006                     ??_fputc:
   705   000006                     LCD_ShowString@lineNum:
   706                           	callstack 0
   707   000006                     ___awdiv@sign:
   708                           	callstack 0
   709   000006                     ___awmod@sign:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x5
   713   000006                     	ds	1
   714   000007                     ?_abs:
   715                           	callstack 0
   716   000007                     ?_read_prec_or_width:
   717                           	callstack 0
   718   000007                     LCD_ShowString@i:
   719                           	callstack 0
   720   000007                     read_prec_or_width@fmt:
   721                           	callstack 0
   722   000007                     ___awdiv@quotient:
   723                           	callstack 0
   724   000007                     abs@a:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x6
   728   000007                     	ds	1
   729   000008                     read_prec_or_width@ap:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x7
   733   000008                     	ds	1
   734   000009                     ??_abs:
   735   000009                     ___xxtofl@sign:
   736                           	callstack 0
   737   000009                     read_prec_or_width@c:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x8
   741   000009                     	ds	1
   742   00000A                     ___xxtofl@exp:
   743                           	callstack 0
   744   00000A                     read_prec_or_width@n:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x9
   748   00000A                     	ds	1
   749   00000B                     stoa@fp:
   750                           	callstack 0
   751   00000B                     fputs@s:
   752                           	callstack 0
   753   00000B                     ___xxtofl@arg:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0xA
   757   00000B                     	ds	2
   758   00000D                     stoa@s:
   759                           	callstack 0
   760   00000D                     fputs@fp:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0xC
   764   00000D                     	ds	2
   765   00000F                     ??_stoa:
   766   00000F                     ?___flmul:
   767                           	callstack 0
   768   00000F                     fputs@c:
   769                           	callstack 0
   770   00000F                     ___flmul@b:
   771                           	callstack 0
   772                           
   773                           ; 4 bytes @ 0xE
   774   00000F                     	ds	1
   775   000010                     fputs@i:
   776                           	callstack 0
   777   000010                     runGPIO@LEDControl:
   778                           	callstack 0
   779                           
   780                           ; 12 bytes @ 0xF
   781   000010                     	ds	1
   782   000011                     stoa@p:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x10
   786   000011                     	ds	1
   787   000012                     pad@fp:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x11
   791   000012                     	ds	1
   792   000013                     stoa@w:
   793                           	callstack 0
   794   000013                     ___flmul@a:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x12
   798   000013                     	ds	1
   799   000014                     pad@buf:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x13
   803   000014                     	ds	1
   804   000015                     stoa@cp:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x14
   808   000015                     	ds	1
   809   000016                     pad@p:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x15
   813   000016                     	ds	1
   814   000017                     ??___flmul:
   815   000017                     stoa@l:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x16
   819   000017                     	ds	1
   820   000018                     ??_pad:
   821                           
   822                           ; 1 bytes @ 0x17
   823   000018                     	ds	1
   824   000019                     pad@i:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x18
   828   000019                     	ds	2
   829   00001B                     ___flmul@sign:
   830                           	callstack 0
   831   00001B                     dtoa@fp:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x1A
   835   00001B                     	ds	1
   836   00001C                     runGPIO@GPIOreverse:
   837                           	callstack 0
   838   00001C                     ___flmul@grs:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x1B
   842   00001C                     	ds	1
   843   00001D                     runGPIO@numStates:
   844                           	callstack 0
   845   00001D                     dtoa@d:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x1C
   849   00001D                     	ds	2
   850   00001F                     runGPIO@keepState:
   851                           	callstack 0
   852   00001F                     _dtoa$2734:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x1E
   856   00001F                     	ds	1
   857   000020                     ___flmul@aexp:
   858                           	callstack 0
   859   000020                     runGPIO@i:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x1F
   863   000020                     	ds	1
   864   000021                     ___flmul@bexp:
   865                           	callstack 0
   866   000021                     dtoa@p:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x20
   870   000021                     	ds	1
   871   000022                     runGPIO@j:
   872                           	callstack 0
   873   000022                     dtoa@w:
   874                           	callstack 0
   875   000022                     ___flmul@prod:
   876                           	callstack 0
   877                           
   878                           ; 4 bytes @ 0x21
   879   000022                     	ds	2
   880   000024                     dtoa@s:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x23
   884   000024                     	ds	1
   885   000025                     dtoa@i:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x24
   889   000025                     	ds	1
   890   000026                     ___flmul@temp:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x25
   894   000026                     	ds	1
   895   000027                     vfpfcnvrt@fp:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x26
   899   000027                     	ds	1
   900   000028                     ?___fldiv:
   901                           	callstack 0
   902   000028                     ___fldiv@b:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x27
   906   000028                     	ds	1
   907   000029                     vfpfcnvrt@fmt:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0x28
   911   000029                     	ds	1
   912   00002A                     vfpfcnvrt@ap:
   913                           	callstack 0
   914                           
   915                           ; 1 bytes @ 0x29
   916   00002A                     	ds	1
   917   00002B                     ??_vfpfcnvrt:
   918                           
   919                           ; 1 bytes @ 0x2A
   920   00002B                     	ds	1
   921   00002C                     ___fldiv@a:
   922                           	callstack 0
   923   00002C                     vfpfcnvrt@convarg:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x2B
   927   00002C                     	ds	4
   928   000030                     ??___fldiv:
   929   000030                     vfpfcnvrt@cp:
   930                           	callstack 0
   931                           
   932                           ; 1 bytes @ 0x2F
   933   000030                     	ds	1
   934   000031                     vfpfcnvrt@done:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x30
   938   000031                     	ds	1
   939   000032                     ?_vfprintf:
   940                           	callstack 0
   941   000032                     vfprintf@fp:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x31
   945   000032                     	ds	2
   946   000034                     vfprintf@fmt:
   947                           	callstack 0
   948   000034                     ___fldiv@rem:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x33
   952   000034                     	ds	1
   953   000035                     vfprintf@ap:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x34
   957   000035                     	ds	1
   958   000036                     vfprintf@cfmt:
   959                           	callstack 0
   960                           
   961                           ; 1 bytes @ 0x35
   962   000036                     	ds	1
   963   000037                     ?_printf:
   964                           	callstack 0
   965   000037                     ?_sprintf:
   966                           	callstack 0
   967   000037                     sprintf@s:
   968                           	callstack 0
   969   000037                     printf@fmt:
   970                           	callstack 0
   971                           
   972                           ; 1 bytes @ 0x36
   973   000037                     	ds	1
   974   000038                     ___fldiv@sign:
   975                           	callstack 0
   976   000038                     sprintf@fmt:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x37
   980   000038                     	ds	1
   981   000039                     ___fldiv@new_exp:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x38
   985   000039                     	ds	1
   986   00003A                     printf@ap:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x39
   990   00003A                     	ds	1
   991   00003B                     ___fldiv@grs:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x3A
   995   00003B                     	ds	2
   996   00003D                     sprintf@ap:
   997                           	callstack 0
   998                           
   999                           ; 1 bytes @ 0x3C
  1000   00003D                     	ds	1
  1001   00003E                     sprintf@f:
  1002                           	callstack 0
  1003                           
  1004                           ; 12 bytes @ 0x3D
  1005   00003E                     	ds	1
  1006   00003F                     ___fldiv@bexp:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x3E
  1010   00003F                     	ds	1
  1011   000040                     ___fldiv@aexp:
  1012                           	callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x3F
  1015   000040                     	ds	1
  1016   000041                     ?___fladd:
  1017                           	callstack 0
  1018   000041                     ___fladd@b:
  1019                           	callstack 0
  1020                           
  1021                           ; 4 bytes @ 0x40
  1022   000041                     	ds	4
  1023   000045                     ___fladd@a:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x44
  1027   000045                     	ds	4
  1028   000049                     ??___fladd:
  1029                           
  1030                           ; 1 bytes @ 0x48
  1031   000049                     	ds	1
  1032   00004A                     moveDisplay@where:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x49
  1036   00004A                     	ds	1
  1037   00004B                     ??_moveDisplay:
  1038                           
  1039                           ; 1 bytes @ 0x4A
  1040   00004B                     	ds	2
  1041   00004D                     ___fladd@signs:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x4C
  1045   00004D                     	ds	1
  1046   00004E                     ___fladd@aexp:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x4D
  1050   00004E                     	ds	1
  1051   00004F                     ___fladd@bexp:
  1052                           	callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x4E
  1055   00004F                     	ds	1
  1056   000050                     ___fladd@grs:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x4F
  1060   000050                     	ds	1
  1061   000051                     ?___flsub:
  1062                           	callstack 0
  1063   000051                     ?___sindf:
  1064                           	callstack 0
  1065   000051                     ?___cosdf:
  1066                           	callstack 0
  1067   000051                     ?___fltol:
  1068                           	callstack 0
  1069   000051                     ___fltol@f1:
  1070                           	callstack 0
  1071   000051                     ___flsub@b:
  1072                           	callstack 0
  1073   000051                     ___cosdf@x:
  1074                           	callstack 0
  1075   000051                     ___sindf@x:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x50
  1079   000051                     	ds	4
  1080   000055                     ??___fltol:
  1081   000055                     ___flsub@a:
  1082                           	callstack 0
  1083                           
  1084                           ; 4 bytes @ 0x54
  1085   000055                     	ds	4
  1086   000059                     ___fltol@sign1:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x58
  1090   000059                     	ds	1
  1091   00005A                     ___fltol@exp1:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x59
  1095   00005A                     	ds	1
  1096   00005B                     ??___rem_pio2f:
  1097                           
  1098                           ; 1 bytes @ 0x5A
  1099   00005B                     	ds	2
  1100   00005D                     ??_runDAC:
  1101   00005D                     
  1102                           ; 1 bytes @ 0x5C
  1103   00005D                     	ds	1
  1104   00005E                     ??_main:
  1105                           
  1106                           ; 1 bytes @ 0x5D
  1107   00005E                     	ds	2
  1108                           
  1109 ;;
  1110 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1111 ;;
  1112 ;; *************** function _main *****************
  1113 ;; Defined at:
  1114 ;;		line 10 in file "main.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;  menuI           1   96[BANK0 ] unsigned char 
  1119 ;;  setUpAgain      1   95[BANK0 ] unsigned char 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;Total ram usage:        4 bytes
  1134 ;; Hardware stack levels required when called: 9
  1135 ;; This function calls:
  1136 ;;		_LCD_Init
  1137 ;;		_LCD_ShowString
  1138 ;;		_moveDisplay
  1139 ;;		_runDAC
  1140 ;;		_runGPIO
  1141 ;; This function is called by:
  1142 ;;		Startup code after reset
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text0
  1147   002EB8                     __ptext0:
  1148                           	callstack 0
  1149   002EB8                     _main:
  1150                           	callstack 22
  1151   002EB8                     
  1152                           ;main.c: 12:     TRISCbits.RC0 = 1;
  1153   002EB8  8094               	bsf	148,0,c	;volatile
  1154                           
  1155                           ;main.c: 13:     TRISAbits.RA4 = 1;
  1156   002EBA  8892               	bsf	146,4,c	;volatile
  1157                           
  1158                           ;main.c: 14:     TRISAbits.RA3 = 1;
  1159   002EBC  8692               	bsf	146,3,c	;volatile
  1160                           
  1161                           ;main.c: 15:     TRISAbits.RA2 = 1;
  1162   002EBE  8492               	bsf	146,2,c	;volatile
  1163                           
  1164                           ;main.c: 16:     ANSELAbits.ANSA3 = 0;
  1165   002EC0  010F               	movlb	15	; () banked
  1166   002EC2  9738               	bcf	56,3,b	;volatile
  1167                           
  1168                           ;main.c: 17:     ANSELAbits.ANSA2 = 0;
  1169   002EC4  9538               	bcf	56,2,b	;volatile
  1170                           
  1171                           ;main.c: 20:     TRISDbits.RD2 = 0;
  1172   002EC6  9495               	bcf	149,2,c	;volatile
  1173                           
  1174                           ;main.c: 21:     TRISDbits.RD3 = 0;
  1175   002EC8  9695               	bcf	149,3,c	;volatile
  1176                           
  1177                           ;main.c: 22:     TRISCbits.RC4 = 0;
  1178   002ECA  9894               	bcf	148,4,c	;volatile
  1179                           
  1180                           ;main.c: 23:     TRISDbits.RD4 = 0;
  1181   002ECC  9895               	bcf	149,4,c	;volatile
  1182                           
  1183                           ;main.c: 24:     TRISDbits.RD5 = 0;
  1184   002ECE  9A95               	bcf	149,5,c	;volatile
  1185                           
  1186                           ;main.c: 25:     TRISDbits.RD6 = 0;
  1187   002ED0  9C95               	bcf	149,6,c	;volatile
  1188                           
  1189                           ;main.c: 26:     LATDbits.LD2 = 1;
  1190   002ED2  848C               	bsf	140,2,c	;volatile
  1191                           
  1192                           ;main.c: 27:     LATDbits.LD3 = 1;
  1193   002ED4  868C               	bsf	140,3,c	;volatile
  1194                           
  1195                           ;main.c: 28:     LATCbits.LC4 = 1;
  1196   002ED6  888B               	bsf	139,4,c	;volatile
  1197                           
  1198                           ;main.c: 29:     LATDbits.LD4 = 1;
  1199   002ED8  888C               	bsf	140,4,c	;volatile
  1200                           
  1201                           ;main.c: 30:     LATDbits.LD5 = 1;
  1202   002EDA  8A8C               	bsf	140,5,c	;volatile
  1203                           
  1204                           ;main.c: 31:     LATDbits.LD6 = 1;
  1205   002EDC  8C8C               	bsf	140,6,c	;volatile
  1206   002EDE                     
  1207                           ; BSR set to: 15
  1208                           ;main.c: 34:     LCD_Init();
  1209   002EDE  EC40  F01C         	call	_LCD_Init	;wreg free
  1210   002EE2                     
  1211                           ;main.c: 35:     uint8_t menuI = 0;
  1212   002EE2  0E00               	movlw	0
  1213   002EE4  0100               	movlb	0	; () banked
  1214   002EE6  6FC0               	movwf	main@menuI& (0+255),b
  1215   002EE8                     
  1216                           ; BSR set to: 0
  1217                           ;main.c: 36:     uint8_t setUpAgain = 0;
  1218   002EE8  0E00               	movlw	0
  1219   002EEA  6FBF               	movwf	main@setUpAgain& (0+255),b
  1220   002EEC                     
  1221                           ; BSR set to: 0
  1222                           ;main.c: 38:     menuI = moveDisplay(menuI,0);
  1223   002EEC  0E00               	movlw	0
  1224   002EEE  6E4A               	movwf	moveDisplay@where^0,c
  1225   002EF0  51C0               	movf	main@menuI& (0+255),w,b
  1226   002EF2  ECCA  F01B         	call	_moveDisplay
  1227   002EF6  0100               	movlb	0	; () banked
  1228   002EF8  6FC0               	movwf	main@menuI& (0+255),b
  1229   002EFA                     l4117:
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;main.c: 41:         if(PORTCbits.RC0){
  1233   002EFA  A082               	btfss	130,0,c	;volatile
  1234   002EFC  EF82  F017         	goto	u4821
  1235   002F00  EF84  F017         	goto	u4820
  1236   002F04                     u4821:
  1237   002F04  EFA6  F017         	goto	l4127
  1238   002F08                     u4820:
  1239   002F08                     
  1240                           ; BSR set to: 0
  1241                           ;main.c: 42:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1242   002F08  0E03               	movlw	3
  1243   002F0A  6E5F               	movwf	(??_main+1)^0,c
  1244   002F0C  0E08               	movlw	8
  1245   002F0E  6E5E               	movwf	??_main^0,c
  1246   002F10  0E77               	movlw	119
  1247   002F12                     u4927:
  1248   002F12  2EE8               	decfsz	wreg,f,c
  1249   002F14  D7FE               	bra	u4927
  1250   002F16  2E5E               	decfsz	??_main^0,f,c
  1251   002F18  D7FC               	bra	u4927
  1252   002F1A  2E5F               	decfsz	(??_main+1)^0,f,c
  1253   002F1C  D7FA               	bra	u4927
  1254   002F1E  0000               	nop	
  1255   002F20                     
  1256                           ;main.c: 43:             if(PORTCbits.RC0){
  1257   002F20  A082               	btfss	130,0,c	;volatile
  1258   002F22  EF95  F017         	goto	u4831
  1259   002F26  EF97  F017         	goto	u4830
  1260   002F2A                     u4831:
  1261   002F2A  EFA6  F017         	goto	l4127
  1262   002F2E                     u4830:
  1263   002F2E                     l36:
  1264   002F2E  B082               	btfsc	130,0,c	;volatile
  1265   002F30  EF9C  F017         	goto	u4841
  1266   002F34  EF9E  F017         	goto	u4840
  1267   002F38                     u4841:
  1268   002F38  EF97  F017         	goto	l36
  1269   002F3C                     u4840:
  1270   002F3C                     
  1271                           ;main.c: 45:                 menuI = moveDisplay(menuI,2);
  1272   002F3C  0E02               	movlw	2
  1273   002F3E  6E4A               	movwf	moveDisplay@where^0,c
  1274   002F40  0100               	movlb	0	; () banked
  1275   002F42  51C0               	movf	main@menuI& (0+255),w,b
  1276   002F44  ECCA  F01B         	call	_moveDisplay
  1277   002F48  0100               	movlb	0	; () banked
  1278   002F4A  6FC0               	movwf	main@menuI& (0+255),b
  1279   002F4C                     l4127:
  1280                           
  1281                           ;main.c: 48:         if(PORTAbits.RA4){
  1282   002F4C  A880               	btfss	128,4,c	;volatile
  1283   002F4E  EFAB  F017         	goto	u4851
  1284   002F52  EFAD  F017         	goto	u4850
  1285   002F56                     u4851:
  1286   002F56  EFCF  F017         	goto	l4137
  1287   002F5A                     u4850:
  1288   002F5A                     
  1289                           ;main.c: 49:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1290   002F5A  0E03               	movlw	3
  1291   002F5C  6E5F               	movwf	(??_main+1)^0,c
  1292   002F5E  0E08               	movlw	8
  1293   002F60  6E5E               	movwf	??_main^0,c
  1294   002F62  0E77               	movlw	119
  1295   002F64                     u4937:
  1296   002F64  2EE8               	decfsz	wreg,f,c
  1297   002F66  D7FE               	bra	u4937
  1298   002F68  2E5E               	decfsz	??_main^0,f,c
  1299   002F6A  D7FC               	bra	u4937
  1300   002F6C  2E5F               	decfsz	(??_main+1)^0,f,c
  1301   002F6E  D7FA               	bra	u4937
  1302   002F70  0000               	nop	
  1303   002F72                     
  1304                           ;main.c: 50:             if(PORTAbits.RA4){
  1305   002F72  A880               	btfss	128,4,c	;volatile
  1306   002F74  EFBE  F017         	goto	u4861
  1307   002F78  EFC0  F017         	goto	u4860
  1308   002F7C                     u4861:
  1309   002F7C  EFCF  F017         	goto	l4137
  1310   002F80                     u4860:
  1311   002F80                     l41:
  1312   002F80  B880               	btfsc	128,4,c	;volatile
  1313   002F82  EFC5  F017         	goto	u4871
  1314   002F86  EFC7  F017         	goto	u4870
  1315   002F8A                     u4871:
  1316   002F8A  EFC0  F017         	goto	l41
  1317   002F8E                     u4870:
  1318   002F8E                     
  1319                           ;main.c: 52:                 menuI = moveDisplay(menuI,1);
  1320   002F8E  0E01               	movlw	1
  1321   002F90  6E4A               	movwf	moveDisplay@where^0,c
  1322   002F92  0100               	movlb	0	; () banked
  1323   002F94  51C0               	movf	main@menuI& (0+255),w,b
  1324   002F96  ECCA  F01B         	call	_moveDisplay
  1325   002F9A  0100               	movlb	0	; () banked
  1326   002F9C  6FC0               	movwf	main@menuI& (0+255),b
  1327   002F9E                     l4137:
  1328                           
  1329                           ;main.c: 55:         if(PORTAbits.RA3){
  1330   002F9E  A680               	btfss	128,3,c	;volatile
  1331   002FA0  EFD4  F017         	goto	u4881
  1332   002FA4  EFD6  F017         	goto	u4880
  1333   002FA8                     u4881:
  1334   002FA8  EF33  F018         	goto	l44
  1335   002FAC                     u4880:
  1336   002FAC                     
  1337                           ;main.c: 56:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1338   002FAC  0E03               	movlw	3
  1339   002FAE  6E5F               	movwf	(??_main+1)^0,c
  1340   002FB0  0E08               	movlw	8
  1341   002FB2  6E5E               	movwf	??_main^0,c
  1342   002FB4  0E77               	movlw	119
  1343   002FB6                     u4947:
  1344   002FB6  2EE8               	decfsz	wreg,f,c
  1345   002FB8  D7FE               	bra	u4947
  1346   002FBA  2E5E               	decfsz	??_main^0,f,c
  1347   002FBC  D7FC               	bra	u4947
  1348   002FBE  2E5F               	decfsz	(??_main+1)^0,f,c
  1349   002FC0  D7FA               	bra	u4947
  1350   002FC2  0000               	nop	
  1351   002FC4                     
  1352                           ;main.c: 57:             if(PORTAbits.RA3){
  1353   002FC4  A680               	btfss	128,3,c	;volatile
  1354   002FC6  EFE7  F017         	goto	u4891
  1355   002FCA  EFE9  F017         	goto	u4890
  1356   002FCE                     u4891:
  1357   002FCE  EF33  F018         	goto	l44
  1358   002FD2                     u4890:
  1359   002FD2                     l46:
  1360   002FD2  B680               	btfsc	128,3,c	;volatile
  1361   002FD4  EFEE  F017         	goto	u4901
  1362   002FD8  EFF0  F017         	goto	u4900
  1363   002FDC                     u4901:
  1364   002FDC  EFE9  F017         	goto	l46
  1365   002FE0                     u4900:
  1366   002FE0  EF0F  F018         	goto	l4155
  1367   002FE4                     l4145:
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;main.c: 61:                         runGPIO();
  1371   002FE4  EC24  F019         	call	_runGPIO	;wreg free
  1372                           
  1373                           ;main.c: 62:                         break;
  1374   002FE8  EF33  F018         	goto	l44
  1375   002FEC                     l4147:
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;main.c: 70:                         LCD_ShowString((char)1, "RB0-A2, BR: 9600");
  1379   002FEC  0E41               	movlw	low STR_1
  1380   002FEE  6E02               	movwf	LCD_ShowString@textData^0,c
  1381   002FF0  5002               	movf	LCD_ShowString@textData^0,w,c
  1382   002FF2  A4D8               	btfss	status,2,c
  1383   002FF4  0E10               	movlw	high __smallconst
  1384   002FF6  6E03               	movwf	(LCD_ShowString@textData+1)^0,c
  1385   002FF8  0E01               	movlw	1
  1386   002FFA  EC6C  F01D         	call	_LCD_ShowString
  1387                           
  1388                           ;main.c: 71:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  1389   002FFE  0E52               	movlw	low STR_2
  1390   003000  6E02               	movwf	LCD_ShowString@textData^0,c
  1391   003002  5002               	movf	LCD_ShowString@textData^0,w,c
  1392   003004  A4D8               	btfss	status,2,c
  1393   003006  0E10               	movlw	high __smallconst
  1394   003008  6E03               	movwf	(LCD_ShowString@textData+1)^0,c
  1395   00300A  0E02               	movlw	2
  1396   00300C  EC6C  F01D         	call	_LCD_ShowString
  1397   003010                     
  1398                           ;main.c: 72:                         runDAC();
  1399   003010  EC21  F014         	call	_runDAC	;wreg free
  1400   003014                     
  1401                           ;main.c: 73:                         setUpAgain = 1;
  1402   003014  0E01               	movlw	1
  1403   003016  0100               	movlb	0	; () banked
  1404   003018  6FBF               	movwf	main@setUpAgain& (0+255),b
  1405                           
  1406                           ;main.c: 74:                         break;
  1407   00301A  EF33  F018         	goto	l44
  1408   00301E                     l4155:
  1409   00301E  0100               	movlb	0	; () banked
  1410   003020  51C0               	movf	main@menuI& (0+255),w,b
  1411                           
  1412                           ; Switch size 1, requested type "simple"
  1413                           ; Number of cases is 8, Range of values is 0 to 7
  1414                           ; switch strategies available:
  1415                           ; Name         Instructions Cycles
  1416                           ; simple_byte           25    13 (average)
  1417                           ;	Chosen strategy is simple_byte
  1418   003022  0A00               	xorlw	0	; case 0
  1419   003024  B4D8               	btfsc	status,2,c
  1420   003026  EFF2  F017         	goto	l4145
  1421   00302A  0A01               	xorlw	1	; case 1
  1422   00302C  B4D8               	btfsc	status,2,c
  1423   00302E  EF33  F018         	goto	l44
  1424   003032  0A03               	xorlw	3	; case 2
  1425   003034  B4D8               	btfsc	status,2,c
  1426   003036  EF33  F018         	goto	l44
  1427   00303A  0A01               	xorlw	1	; case 3
  1428   00303C  B4D8               	btfsc	status,2,c
  1429   00303E  EF33  F018         	goto	l44
  1430   003042  0A07               	xorlw	7	; case 4
  1431   003044  B4D8               	btfsc	status,2,c
  1432   003046  EFF6  F017         	goto	l4147
  1433   00304A  0A01               	xorlw	1	; case 5
  1434   00304C  B4D8               	btfsc	status,2,c
  1435   00304E  EF33  F018         	goto	l44
  1436   003052  0A03               	xorlw	3	; case 6
  1437   003054  B4D8               	btfsc	status,2,c
  1438   003056  EF33  F018         	goto	l44
  1439   00305A  0A01               	xorlw	1	; case 7
  1440   00305C  B4D8               	btfsc	status,2,c
  1441   00305E  EF33  F018         	goto	l44
  1442   003062  EF33  F018         	goto	l44
  1443   003066                     l44:
  1444                           
  1445                           ;main.c: 85:         if(PORTAbits.RA2){
  1446   003066  5080               	movf	128,w,c	;volatile
  1447   003068                     
  1448                           ;main.c: 89:         if(setUpAgain){
  1449   003068  0100               	movlb	0	; () banked
  1450   00306A  51BF               	movf	main@setUpAgain& (0+255),w,b
  1451   00306C  B4D8               	btfsc	status,2,c
  1452   00306E  EF3B  F018         	goto	u4911
  1453   003072  EF3D  F018         	goto	u4910
  1454   003076                     u4911:
  1455   003076  EF7D  F017         	goto	l4117
  1456   00307A                     u4910:
  1457   00307A                     
  1458                           ; BSR set to: 0
  1459                           ;main.c: 90:         menuI = moveDisplay(menuI,0);
  1460   00307A  0E00               	movlw	0
  1461   00307C  6E4A               	movwf	moveDisplay@where^0,c
  1462   00307E  51C0               	movf	main@menuI& (0+255),w,b
  1463   003080  ECCA  F01B         	call	_moveDisplay
  1464   003084  0100               	movlb	0	; () banked
  1465   003086  6FC0               	movwf	main@menuI& (0+255),b
  1466   003088                     
  1467                           ; BSR set to: 0
  1468                           ;main.c: 91:         setUpAgain = 0;
  1469   003088  0E00               	movlw	0
  1470   00308A  6FBF               	movwf	main@setUpAgain& (0+255),b
  1471   00308C  EF7D  F017         	goto	l4117
  1472   003090  EF00  F000         	goto	start
  1473   003094                     __end_of_main:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function _runGPIO *****************
  1477 ;; Defined at:
  1478 ;;		line 31 in file "GPIO.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  j               2   33[COMRAM] int 
  1483 ;;  i               2   31[COMRAM] int 
  1484 ;;  states         12    3[COMRAM] unsigned char [12]
  1485 ;;  numStates       2   28[COMRAM] int 
  1486 ;;  LEDControl     12   15[COMRAM] PTR FTN(unsigned char ,)
  1487 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  1488 ;;		 -> LED2_Control(1), LED1_Control(1), 
  1489 ;;  keepState       1   30[COMRAM] unsigned char 
  1490 ;;  GPIOreverse     1   27[COMRAM] unsigned char 
  1491 ;;  GPIOindex       1    0        unsigned char 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Locals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;Total ram usage:       34 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; Hardware stack levels required when called: 1
  1508 ;; This function calls:
  1509 ;;		_LED1_Control
  1510 ;;		_LED2_Control
  1511 ;;		_LED3_Control
  1512 ;;		_LED4_Control
  1513 ;;		_LED5_Control
  1514 ;;		_LED6_Control
  1515 ;; This function is called by:
  1516 ;;		_main
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text1
  1521   003248                     __ptext1:
  1522                           	callstack 0
  1523   003248                     _runGPIO:
  1524                           	callstack 29
  1525   003248                     
  1526                           ;GPIO.c: 33:     TRISDbits.RD2 = 0;
  1527   003248  9495               	bcf	149,2,c	;volatile
  1528                           
  1529                           ;GPIO.c: 34:     TRISDbits.RD3 = 0;
  1530   00324A  9695               	bcf	149,3,c	;volatile
  1531                           
  1532                           ;GPIO.c: 35:     TRISCbits.RC4 = 0;
  1533   00324C  9894               	bcf	148,4,c	;volatile
  1534                           
  1535                           ;GPIO.c: 36:     TRISDbits.RD4 = 0;
  1536   00324E  9895               	bcf	149,4,c	;volatile
  1537                           
  1538                           ;GPIO.c: 37:     TRISDbits.RD5 = 0;
  1539   003250  9A95               	bcf	149,5,c	;volatile
  1540                           
  1541                           ;GPIO.c: 38:     TRISDbits.RD6 = 0;
  1542   003252  9C95               	bcf	149,6,c	;volatile
  1543                           
  1544                           ;GPIO.c: 39:     LATDbits.LD2 = 1;
  1545   003254  848C               	bsf	140,2,c	;volatile
  1546                           
  1547                           ;GPIO.c: 40:     LATDbits.LD3 = 1;
  1548   003256  868C               	bsf	140,3,c	;volatile
  1549                           
  1550                           ;GPIO.c: 41:     LATCbits.LC4 = 1;
  1551   003258  888B               	bsf	139,4,c	;volatile
  1552                           
  1553                           ;GPIO.c: 42:     LATDbits.LD4 = 1;
  1554   00325A  888C               	bsf	140,4,c	;volatile
  1555                           
  1556                           ;GPIO.c: 43:     LATDbits.LD5 = 1;
  1557   00325C  8A8C               	bsf	140,5,c	;volatile
  1558                           
  1559                           ;GPIO.c: 44:     LATDbits.LD6 = 1;
  1560   00325E  8C8C               	bsf	140,6,c	;volatile
  1561                           
  1562                           ;GPIO.c: 47:     TRISAbits.RA2 = 1;
  1563   003260  8492               	bsf	146,2,c	;volatile
  1564                           
  1565                           ;GPIO.c: 48:     ANSELAbits.ANSA2 = 0;
  1566   003262  010F               	movlb	15	; () banked
  1567   003264  9538               	bcf	56,2,b	;volatile
  1568   003266                     
  1569                           ; BSR set to: 15
  1570                           ;GPIO.c: 51:     uint8_t keepState;;GPIO.c: 52:     keepState = 1;
  1571   003266  0E01               	movlw	1
  1572   003268  6E1F               	movwf	runGPIO@keepState^0,c
  1573                           
  1574                           ;GPIO.c: 55:     uint8_t GPIOreverse;;GPIO.c: 56:     GPIOreverse = 0;
  1575   00326A  0E00               	movlw	0
  1576   00326C  6E1C               	movwf	runGPIO@GPIOreverse^0,c
  1577   00326E                     
  1578                           ; BSR set to: 15
  1579                           ;GPIO.c: 58:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  1580   00326E  EE20  F0CD         	lfsr	2,runGPIO@F6963
  1581   003272  EE10  F010         	lfsr	1,runGPIO@LEDControl
  1582   003276  0E0B               	movlw	11
  1583   003278                     u4171:
  1584   003278  CFDB FFE3          	movff	plusw2,plusw1
  1585   00327C  06E8               	decf	wreg,f,c
  1586   00327E  E2FC               	bc	u4171
  1587                           
  1588                           ;GPIO.c: 60:     while(keepState){
  1589   003280  EFD6  F019         	goto	l273
  1590   003284                     l3681:
  1591                           
  1592                           ;GPIO.c: 62:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  1593   003284  EE20  F0C1         	lfsr	2,runGPIO@F6981
  1594   003288  EE10  F004         	lfsr	1,runGPIO@states
  1595   00328C  0E0B               	movlw	11
  1596   00328E                     u4181:
  1597   00328E  CFDB FFE3          	movff	plusw2,plusw1
  1598   003292  06E8               	decf	wreg,f,c
  1599   003294  E2FC               	bc	u4181
  1600   003296                     
  1601                           ;GPIO.c: 63:     int numStates = sizeof(states) / sizeof(states[0]);
  1602   003296  0E00               	movlw	0
  1603   003298  6E1E               	movwf	(runGPIO@numStates+1)^0,c
  1604   00329A  0E0C               	movlw	12
  1605   00329C  6E1D               	movwf	runGPIO@numStates^0,c
  1606   00329E                     
  1607                           ;GPIO.c: 65:     for(int i = 0; i < numStates; i++) {
  1608   00329E  0E00               	movlw	0
  1609   0032A0  6E21               	movwf	(runGPIO@i+1)^0,c
  1610   0032A2  0E00               	movlw	0
  1611   0032A4  6E20               	movwf	runGPIO@i^0,c
  1612   0032A6  EFA4  F019         	goto	l277
  1613   0032AA                     l3687:
  1614                           
  1615                           ;GPIO.c: 67:         for(int j = 0; j < 6; j++) {
  1616   0032AA  0E00               	movlw	0
  1617   0032AC  6E23               	movwf	(runGPIO@j+1)^0,c
  1618   0032AE  0E00               	movlw	0
  1619   0032B0  6E22               	movwf	runGPIO@j^0,c
  1620   0032B2                     l3693:
  1621                           
  1622                           ;GPIO.c: 68:             (*LEDControl[j])(!((states[i] >> (5 - j)) & 0x1));
  1623   0032B2  5022               	movf	runGPIO@j^0,w,c
  1624   0032B4  0D02               	mullw	2
  1625   0032B6  50F3               	movf	243,w,c
  1626   0032B8  0F10               	addlw	low runGPIO@LEDControl
  1627   0032BA  6ED9               	movwf	fsr2l,c
  1628   0032BC  6ADA               	clrf	fsr2h,c
  1629   0032BE  D802               	call	u4198
  1630   0032C0  EF86  F019         	goto	u4199
  1631   0032C4                     u4198:
  1632   0032C4  0005               	push	
  1633   0032C6  6EFA               	movwf	pclath,c
  1634   0032C8  50DE               	movf	postinc2,w,c
  1635   0032CA  6EFD               	movwf	tosl,c
  1636   0032CC  50DE               	movf	postinc2,w,c
  1637   0032CE  6EFE               	movwf	tosh,c
  1638   0032D0  50F8               	movf	tblptru,w,c
  1639   0032D2  6EFF               	movwf	tosu,c
  1640   0032D4  50FA               	movf	pclath,w,c
  1641   0032D6  5022               	movf	runGPIO@j^0,w,c
  1642   0032D8  0805               	sublw	5
  1643   0032DA  6E02               	movwf	??_runGPIO^0,c
  1644   0032DC  5020               	movf	runGPIO@i^0,w,c
  1645   0032DE  0F04               	addlw	low runGPIO@states
  1646   0032E0  6ED9               	movwf	fsr2l,c
  1647   0032E2  6ADA               	clrf	fsr2h,c
  1648   0032E4  50DF               	movf	indf2,w,c
  1649   0032E6  6E03               	movwf	(??_runGPIO+1)^0,c
  1650   0032E8  2A02               	incf	??_runGPIO^0,f,c
  1651   0032EA  EF79  F019         	goto	u4204
  1652   0032EE                     u4205:
  1653   0032EE  90D8               	bcf	status,0,c
  1654   0032F0  3203               	rrcf	(??_runGPIO+1)^0,f,c
  1655   0032F2                     u4204:
  1656   0032F2  2E02               	decfsz	??_runGPIO^0,f,c
  1657   0032F4  EF77  F019         	goto	u4205
  1658   0032F8  A003               	btfss	(??_runGPIO+1)^0,0,c
  1659   0032FA  EF81  F019         	goto	u4211
  1660   0032FE  EF84  F019         	goto	u4210
  1661   003302                     u4211:
  1662   003302  0E01               	movlw	1
  1663   003304  EF85  F019         	goto	u4220
  1664   003308                     u4210:
  1665   003308  0E00               	movlw	0
  1666   00330A                     u4220:
  1667   00330A  0012               	return		;indir
  1668   00330C                     u4199:
  1669   00330C                     
  1670                           ;GPIO.c: 69:         }
  1671   00330C  4A22               	infsnz	runGPIO@j^0,f,c
  1672   00330E  2A23               	incf	(runGPIO@j+1)^0,f,c
  1673   003310  BE23               	btfsc	(runGPIO@j+1)^0,7,c
  1674   003312  EF94  F019         	goto	u4231
  1675   003316  5023               	movf	(runGPIO@j+1)^0,w,c
  1676   003318  E109               	bnz	u4230
  1677   00331A  0E06               	movlw	6
  1678   00331C  5C22               	subwf	runGPIO@j^0,w,c
  1679   00331E  A0D8               	btfss	status,0,c
  1680   003320  EF94  F019         	goto	u4231
  1681   003324  EF96  F019         	goto	u4230
  1682   003328                     u4231:
  1683   003328  EF59  F019         	goto	l3693
  1684   00332C                     u4230:
  1685   00332C                     
  1686                           ;GPIO.c: 70:         _delay((unsigned long)((500)*(32E6/4000.0)));
  1687   00332C  0E15               	movlw	21
  1688   00332E  6E03               	movwf	(??_runGPIO+1)^0,c
  1689   003330  0E4B               	movlw	75
  1690   003332  6E02               	movwf	??_runGPIO^0,c
  1691   003334  0EBE               	movlw	190
  1692   003336                     u4957:
  1693   003336  2EE8               	decfsz	wreg,f,c
  1694   003338  D7FE               	bra	u4957
  1695   00333A  2E02               	decfsz	??_runGPIO^0,f,c
  1696   00333C  D7FC               	bra	u4957
  1697   00333E  2E03               	decfsz	(??_runGPIO+1)^0,f,c
  1698   003340  D7FA               	bra	u4957
  1699   003342  D000               	nop2	
  1700   003344                     
  1701                           ;GPIO.c: 71:     }
  1702   003344  4A20               	infsnz	runGPIO@i^0,f,c
  1703   003346  2A21               	incf	(runGPIO@i+1)^0,f,c
  1704   003348                     l277:
  1705   003348  501D               	movf	runGPIO@numStates^0,w,c
  1706   00334A  5C20               	subwf	runGPIO@i^0,w,c
  1707   00334C  5021               	movf	(runGPIO@i+1)^0,w,c
  1708   00334E  0A80               	xorlw	128
  1709   003350  6E02               	movwf	??_runGPIO^0,c
  1710   003352  501E               	movf	(runGPIO@numStates+1)^0,w,c
  1711   003354  0A80               	xorlw	128
  1712   003356  5802               	subwfb	??_runGPIO^0,w,c
  1713   003358  A0D8               	btfss	status,0,c
  1714   00335A  EFB1  F019         	goto	u4241
  1715   00335E  EFB3  F019         	goto	u4240
  1716   003362                     u4241:
  1717   003362  EF55  F019         	goto	l3687
  1718   003366                     u4240:
  1719   003366                     
  1720                           ;GPIO.c: 73:         if(PORTAbits.RA2){
  1721   003366  A480               	btfss	128,2,c	;volatile
  1722   003368  EFB8  F019         	goto	u4251
  1723   00336C  EFBA  F019         	goto	u4250
  1724   003370                     u4251:
  1725   003370  EFD6  F019         	goto	l273
  1726   003374                     u4250:
  1727   003374                     
  1728                           ;GPIO.c: 74:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1729   003374  0E03               	movlw	3
  1730   003376  6E03               	movwf	(??_runGPIO+1)^0,c
  1731   003378  0E08               	movlw	8
  1732   00337A  6E02               	movwf	??_runGPIO^0,c
  1733   00337C  0E77               	movlw	119
  1734   00337E                     u4967:
  1735   00337E  2EE8               	decfsz	wreg,f,c
  1736   003380  D7FE               	bra	u4967
  1737   003382  2E02               	decfsz	??_runGPIO^0,f,c
  1738   003384  D7FC               	bra	u4967
  1739   003386  2E03               	decfsz	(??_runGPIO+1)^0,f,c
  1740   003388  D7FA               	bra	u4967
  1741   00338A  0000               	nop	
  1742   00338C                     
  1743                           ;GPIO.c: 75:             if(PORTAbits.RA2){
  1744   00338C  A480               	btfss	128,2,c	;volatile
  1745   00338E  EFCB  F019         	goto	u4261
  1746   003392  EFCD  F019         	goto	u4260
  1747   003396                     u4261:
  1748   003396  EFD6  F019         	goto	l273
  1749   00339A                     u4260:
  1750   00339A                     l284:
  1751   00339A  B480               	btfsc	128,2,c	;volatile
  1752   00339C  EFD2  F019         	goto	u4271
  1753   0033A0  EFD4  F019         	goto	u4270
  1754   0033A4                     u4271:
  1755   0033A4  EFCD  F019         	goto	l284
  1756   0033A8                     u4270:
  1757   0033A8                     
  1758                           ;GPIO.c: 77:                 keepState = 0;
  1759   0033A8  0E00               	movlw	0
  1760   0033AA  6E1F               	movwf	runGPIO@keepState^0,c
  1761   0033AC                     l273:
  1762                           
  1763                           ;GPIO.c: 60:     while(keepState){
  1764   0033AC  501F               	movf	runGPIO@keepState^0,w,c
  1765   0033AE  A4D8               	btfss	status,2,c
  1766   0033B0  EFDC  F019         	goto	u4281
  1767   0033B4  EFDE  F019         	goto	u4280
  1768   0033B8                     u4281:
  1769   0033B8  EF42  F019         	goto	l3681
  1770   0033BC                     u4280:
  1771   0033BC                     
  1772                           ;GPIO.c: 83:     LATDbits.LD2 = 1;
  1773   0033BC  848C               	bsf	140,2,c	;volatile
  1774                           
  1775                           ;GPIO.c: 84:     LATDbits.LD3 = 1;
  1776   0033BE  868C               	bsf	140,3,c	;volatile
  1777                           
  1778                           ;GPIO.c: 85:     LATCbits.LC4 = 1;
  1779   0033C0  888B               	bsf	139,4,c	;volatile
  1780                           
  1781                           ;GPIO.c: 86:     LATDbits.LD4 = 1;
  1782   0033C2  888C               	bsf	140,4,c	;volatile
  1783                           
  1784                           ;GPIO.c: 87:     LATDbits.LD5 = 1;
  1785   0033C4  8A8C               	bsf	140,5,c	;volatile
  1786                           
  1787                           ;GPIO.c: 88:     LATDbits.LD6 = 1;
  1788   0033C6  8C8C               	bsf	140,6,c	;volatile
  1789   0033C8  0012               	return		;funcret
  1790   0033CA                     __end_of_runGPIO:
  1791                           	callstack 0
  1792                           
  1793 ;; *************** function _LED5_Control *****************
  1794 ;; Defined at:
  1795 ;;		line 14 in file "GPIO.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  state           1    wreg     unsigned char 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  state           1    0[COMRAM] unsigned char 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1813 ;;Total ram usage:        1 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; This function calls:
  1816 ;;		Nothing
  1817 ;; This function is called by:
  1818 ;;		_runGPIO
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text2
  1823   004078                     __ptext2:
  1824                           	callstack 0
  1825   004078                     _LED5_Control:
  1826                           	callstack 29
  1827                           
  1828                           ;incstack = 0
  1829                           ;LED5_Control@state stored from wreg
  1830   004078  6E01               	movwf	LED5_Control@state^0,c
  1831   00407A  B001               	btfsc	LED5_Control@state^0,0,c
  1832   00407C  D002               	bra	u3875
  1833   00407E  9A8C               	bcf	140,5,c	;volatile
  1834   004080  D001               	bra	u3876
  1835   004082                     u3875:
  1836   004082  8A8C               	bsf	140,5,c	;volatile
  1837   004084                     u3876:
  1838   004084  0012               	return		;funcret
  1839   004086                     __end_of_LED5_Control:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function _LED4_Control *****************
  1843 ;; Defined at:
  1844 ;;		line 13 in file "GPIO.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  state           1    wreg     unsigned char 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  state           1    0[COMRAM] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;Total ram usage:        1 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_runGPIO
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text3
  1872   004086                     __ptext3:
  1873                           	callstack 0
  1874   004086                     _LED4_Control:
  1875                           	callstack 29
  1876                           
  1877                           ;incstack = 0
  1878                           ;LED4_Control@state stored from wreg
  1879   004086  6E01               	movwf	LED4_Control@state^0,c
  1880   004088  B001               	btfsc	LED4_Control@state^0,0,c
  1881   00408A  D002               	bra	u3865
  1882   00408C  988C               	bcf	140,4,c	;volatile
  1883   00408E  D001               	bra	u3866
  1884   004090                     u3865:
  1885   004090  888C               	bsf	140,4,c	;volatile
  1886   004092                     u3866:
  1887   004092  0012               	return		;funcret
  1888   004094                     __end_of_LED4_Control:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _LED3_Control *****************
  1892 ;; Defined at:
  1893 ;;		line 12 in file "GPIO.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  state           1    wreg     unsigned char 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  state           1    0[COMRAM] unsigned char 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;Total ram usage:        1 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_runGPIO
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text4
  1921   004094                     __ptext4:
  1922                           	callstack 0
  1923   004094                     _LED3_Control:
  1924                           	callstack 29
  1925                           
  1926                           ;incstack = 0
  1927                           ;LED3_Control@state stored from wreg
  1928   004094  6E01               	movwf	LED3_Control@state^0,c
  1929   004096  B001               	btfsc	LED3_Control@state^0,0,c
  1930   004098  D002               	bra	u3855
  1931   00409A  988B               	bcf	139,4,c	;volatile
  1932   00409C  D001               	bra	u3856
  1933   00409E                     u3855:
  1934   00409E  888B               	bsf	139,4,c	;volatile
  1935   0040A0                     u3856:
  1936   0040A0  0012               	return		;funcret
  1937   0040A2                     __end_of_LED3_Control:
  1938                           	callstack 0
  1939                           
  1940 ;; *************** function _LED2_Control *****************
  1941 ;; Defined at:
  1942 ;;		line 11 in file "GPIO.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  state           1    wreg     unsigned char 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  state           1    0[COMRAM] unsigned char 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;Total ram usage:        1 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_runGPIO
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text5
  1970   0040A2                     __ptext5:
  1971                           	callstack 0
  1972   0040A2                     _LED2_Control:
  1973                           	callstack 29
  1974                           
  1975                           ;incstack = 0
  1976                           ;LED2_Control@state stored from wreg
  1977   0040A2  6E01               	movwf	LED2_Control@state^0,c
  1978   0040A4  B001               	btfsc	LED2_Control@state^0,0,c
  1979   0040A6  D002               	bra	u3845
  1980   0040A8  968C               	bcf	140,3,c	;volatile
  1981   0040AA  D001               	bra	u3846
  1982   0040AC                     u3845:
  1983   0040AC  868C               	bsf	140,3,c	;volatile
  1984   0040AE                     u3846:
  1985   0040AE  0012               	return		;funcret
  1986   0040B0                     __end_of_LED2_Control:
  1987                           	callstack 0
  1988                           
  1989 ;; *************** function _LED1_Control *****************
  1990 ;; Defined at:
  1991 ;;		line 10 in file "GPIO.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  state           1    wreg     unsigned char 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  state           1    0[COMRAM] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2009 ;;Total ram usage:        1 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		_runGPIO
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text6
  2019   0040B0                     __ptext6:
  2020                           	callstack 0
  2021   0040B0                     _LED1_Control:
  2022                           	callstack 29
  2023                           
  2024                           ;incstack = 0
  2025                           ;LED1_Control@state stored from wreg
  2026   0040B0  6E01               	movwf	LED1_Control@state^0,c
  2027   0040B2  B001               	btfsc	LED1_Control@state^0,0,c
  2028   0040B4  D002               	bra	u3835
  2029   0040B6  948C               	bcf	140,2,c	;volatile
  2030   0040B8  D001               	bra	u3836
  2031   0040BA                     u3835:
  2032   0040BA  848C               	bsf	140,2,c	;volatile
  2033   0040BC                     u3836:
  2034   0040BC  0012               	return		;funcret
  2035   0040BE                     __end_of_LED1_Control:
  2036                           	callstack 0
  2037                           
  2038 ;; *************** function _LED6_Control *****************
  2039 ;; Defined at:
  2040 ;;		line 15 in file "GPIO.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  state           1    wreg     unsigned char 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  state           1    0[COMRAM] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;Total ram usage:        1 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_runGPIO
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text7
  2068   0040BE                     __ptext7:
  2069                           	callstack 0
  2070   0040BE                     _LED6_Control:
  2071                           	callstack 29
  2072                           
  2073                           ;incstack = 0
  2074                           ;LED6_Control@state stored from wreg
  2075   0040BE  6E01               	movwf	LED6_Control@state^0,c
  2076   0040C0  B001               	btfsc	LED6_Control@state^0,0,c
  2077   0040C2  D002               	bra	u3885
  2078   0040C4  9C8C               	bcf	140,6,c	;volatile
  2079   0040C6  D001               	bra	u3886
  2080   0040C8                     u3885:
  2081   0040C8  8C8C               	bsf	140,6,c	;volatile
  2082   0040CA                     u3886:
  2083   0040CA  0012               	return		;funcret
  2084   0040CC                     __end_of_LED6_Control:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _runDAC *****************
  2088 ;; Defined at:
  2089 ;;		line 10 in file "DAC.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  DACindex        1   94[BANK0 ] unsigned char 
  2094 ;;  selectModeDA    1   93[BANK0 ] unsigned char 
  2095 ;;  keepState       1   92[BANK0 ] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;Total ram usage:       12 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; Hardware stack levels required when called: 8
  2112 ;; This function calls:
  2113 ;;		_SPI_write
  2114 ;;		___fladd
  2115 ;;		___fldiv
  2116 ;;		___flmul
  2117 ;;		___fltol
  2118 ;;		___xxtofl
  2119 ;;		_printf
  2120 ;;		_sinf
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text8
  2127   002842                     __ptext8:
  2128                           	callstack 0
  2129   002842                     _runDAC:
  2130                           	callstack 22
  2131   002842                     
  2132                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  2133   002842  8094               	bsf	148,0,c	;volatile
  2134                           
  2135                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  2136   002844  8892               	bsf	146,4,c	;volatile
  2137                           
  2138                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  2139   002846  8692               	bsf	146,3,c	;volatile
  2140                           
  2141                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  2142   002848  8492               	bsf	146,2,c	;volatile
  2143                           
  2144                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  2145   00284A  010F               	movlb	15	; () banked
  2146   00284C  9738               	bcf	56,3,b	;volatile
  2147                           
  2148                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  2149   00284E  9538               	bcf	56,2,b	;volatile
  2150                           
  2151                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  2152   002850  9693               	bcf	147,3,c	;volatile
  2153                           
  2154                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  2155   002852  9694               	bcf	148,3,c	;volatile
  2156                           
  2157                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  2158   002854  9A94               	bcf	148,5,c	;volatile
  2159   002856                     
  2160                           ; BSR set to: 15
  2161                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  2162   002856  50C6               	movf	198,w,c	;volatile
  2163   002858  0BF0               	andlw	-16
  2164   00285A  0902               	iorlw	2
  2165   00285C  6EC6               	movwf	198,c	;volatile
  2166   00285E                     
  2167                           ; BSR set to: 15
  2168                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  2169   00285E  98C6               	bcf	198,4,c	;volatile
  2170   002860                     
  2171                           ; BSR set to: 15
  2172                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  2173   002860  8CC7               	bsf	199,6,c	;volatile
  2174   002862                     
  2175                           ; BSR set to: 15
  2176                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  2177   002862  8AC6               	bsf	198,5,c	;volatile
  2178   002864                     
  2179                           ; BSR set to: 15
  2180                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  2181   002864  8139               	bsf	57,0,b	;volatile
  2182   002866                     
  2183                           ; BSR set to: 15
  2184                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  2185   002866  9EC0               	bcf	192,7,c	;volatile
  2186                           
  2187                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  2188   002868  50C0               	movf	192,w,c	;volatile
  2189   00286A  0BF8               	andlw	-8
  2190   00286C  0906               	iorlw	6
  2191   00286E  6EC0               	movwf	192,c	;volatile
  2192                           
  2193                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  2194   002870  50C0               	movf	192,w,c	;volatile
  2195   002872  0BC7               	andlw	-57
  2196   002874  0930               	iorlw	48
  2197   002876  6EC0               	movwf	192,c	;volatile
  2198   002878                     
  2199                           ; BSR set to: 15
  2200                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  2201   002878  80C2               	bsf	194,0,c	;volatile
  2202                           
  2203                           ;DAC.c: 38:     SPBRG1 = 51;
  2204   00287A  0E33               	movlw	51
  2205   00287C  6EAF               	movwf	175,c	;volatile
  2206   00287E                     
  2207                           ; BSR set to: 15
  2208                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  2209   00287E  8EAB               	bsf	171,7,c	;volatile
  2210   002880                     
  2211                           ; BSR set to: 15
  2212                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  2213   002880  98AC               	bcf	172,4,c	;volatile
  2214   002882                     
  2215                           ; BSR set to: 15
  2216                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  2217   002882  8AAC               	bsf	172,5,c	;volatile
  2218   002884                     
  2219                           ; BSR set to: 15
  2220                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  2221   002884  88AB               	bsf	171,4,c	;volatile
  2222   002886                     
  2223                           ; BSR set to: 15
  2224                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  2225   002886  868A               	bsf	138,3,c	;volatile
  2226                           
  2227                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  2228   002888  50C2               	movf	194,w,c	;volatile
  2229   00288A  0B83               	andlw	-125
  2230   00288C  0930               	iorlw	48
  2231   00288E  6EC2               	movwf	194,c	;volatile
  2232                           
  2233                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  2234   002890  0E01               	movlw	1
  2235   002892  0100               	movlb	0	; () banked
  2236   002894  6FBD               	movwf	runDAC@selectModeDAC& (0+255),b
  2237                           
  2238                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  2239   002896  0E01               	movlw	1
  2240   002898  6FBC               	movwf	runDAC@keepState& (0+255),b
  2241                           
  2242                           ;DAC.c: 52:     uint8_t DACindex = 0;
  2243   00289A  0E00               	movlw	0
  2244   00289C  6FBE               	movwf	runDAC@DACindex& (0+255),b
  2245                           
  2246                           ;DAC.c: 54:     while(keepState){
  2247   00289E  EF3A  F015         	goto	l4105
  2248   0028A2                     l4063:
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;DAC.c: 57:                 if(DACindex<255/2){
  2252   0028A2  0E7F               	movlw	127
  2253   0028A4  61BE               	cpfslt	runDAC@DACindex& (0+255),b
  2254   0028A6  EF57  F014         	goto	u4741
  2255   0028AA  EF59  F014         	goto	u4740
  2256   0028AE                     u4741:
  2257   0028AE  EF5C  F014         	goto	l4067
  2258   0028B2                     u4740:
  2259   0028B2                     
  2260                           ; BSR set to: 0
  2261                           ;DAC.c: 58:                     SPI_write(DACindex);
  2262   0028B2  51BE               	movf	runDAC@DACindex& (0+255),w,b
  2263   0028B4  EC48  F01F         	call	_SPI_write
  2264   0028B8                     l4067:
  2265                           
  2266                           ;DAC.c: 60:                 if(DACindex>=255/2){
  2267   0028B8  0E7E               	movlw	126
  2268   0028BA  0100               	movlb	0	; () banked
  2269   0028BC  65BE               	cpfsgt	runDAC@DACindex& (0+255),b
  2270   0028BE  EF63  F014         	goto	u4751
  2271   0028C2  EF65  F014         	goto	u4750
  2272   0028C6                     u4751:
  2273   0028C6  EFF9  F014         	goto	l186
  2274   0028CA                     u4750:
  2275   0028CA                     
  2276                           ; BSR set to: 0
  2277                           ;DAC.c: 61:                     SPI_write(255-DACindex);
  2278   0028CA  51BE               	movf	runDAC@DACindex& (0+255),w,b
  2279   0028CC  0AFF               	xorlw	255
  2280   0028CE  EC48  F01F         	call	_SPI_write
  2281   0028D2  EFF9  F014         	goto	l186
  2282   0028D6                     l4071:
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  2286   0028D6  0E00               	movlw	0
  2287   0028D8  6E2C               	movwf	___fldiv@a^0,c
  2288   0028DA  0E00               	movlw	0
  2289   0028DC  6E2D               	movwf	(___fldiv@a+1)^0,c
  2290   0028DE  0E7F               	movlw	127
  2291   0028E0  6E2E               	movwf	(___fldiv@a+2)^0,c
  2292   0028E2  0E43               	movlw	67
  2293   0028E4  6E2F               	movwf	(___fldiv@a+3)^0,c
  2294   0028E6  0EC3               	movlw	195
  2295   0028E8  6E13               	movwf	___flmul@a^0,c
  2296   0028EA  0EF5               	movlw	245
  2297   0028EC  6E14               	movwf	(___flmul@a+1)^0,c
  2298   0028EE  0EC8               	movlw	200
  2299   0028F0  6E15               	movwf	(___flmul@a+2)^0,c
  2300   0028F2  0E40               	movlw	64
  2301   0028F4  6E16               	movwf	(___flmul@a+3)^0,c
  2302   0028F6  51BE               	movf	runDAC@DACindex& (0+255),w,b
  2303   0028F8  6E01               	movwf	___xxtofl@val^0,c
  2304   0028FA  6A02               	clrf	(___xxtofl@val+1)^0,c
  2305   0028FC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2306   0028FE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2307   002900  0E01               	movlw	1
  2308   002902  EC4A  F018         	call	___xxtofl
  2309   002906  C001  F00F         	movff	?___xxtofl,___flmul@b
  2310   00290A  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2311   00290E  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2312   002912  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2313   002916  EC31  F00D         	call	___flmul	;wreg free
  2314   00291A  C00F  F028         	movff	?___flmul,___fldiv@b
  2315   00291E  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  2316   002922  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  2317   002926  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  2318   00292A  EC27  F011         	call	___fldiv	;wreg free
  2319   00292E  C028  F0B4         	movff	?___fldiv,_runDAC$3119
  2320   002932  C029  F0B5         	movff	?___fldiv+1,_runDAC$3119+1
  2321   002936  C02A  F0B6         	movff	?___fldiv+2,_runDAC$3119+2
  2322   00293A  C02B  F0B7         	movff	?___fldiv+3,_runDAC$3119+3
  2323   00293E                     
  2324                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  2325   00293E  C0B4  F09A         	movff	_runDAC$3119,sinf@x
  2326   002942  C0B5  F09B         	movff	_runDAC$3119+1,sinf@x+1
  2327   002946  C0B6  F09C         	movff	_runDAC$3119+2,sinf@x+2
  2328   00294A  C0B7  F09D         	movff	_runDAC$3119+3,sinf@x+3
  2329   00294E  EC4C  F008         	call	_sinf	;wreg free
  2330   002952  C09A  F0B8         	movff	?_sinf,_runDAC$3120
  2331   002956  C09B  F0B9         	movff	?_sinf+1,_runDAC$3120+1
  2332   00295A  C09C  F0BA         	movff	?_sinf+2,_runDAC$3120+2
  2333   00295E  C09D  F0BB         	movff	?_sinf+3,_runDAC$3120+3
  2334   002962                     
  2335                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  2336   002962  0E00               	movlw	0
  2337   002964  6E45               	movwf	___fladd@a^0,c
  2338   002966  0E00               	movlw	0
  2339   002968  6E46               	movwf	(___fladd@a+1)^0,c
  2340   00296A  0EFE               	movlw	254
  2341   00296C  6E47               	movwf	(___fladd@a+2)^0,c
  2342   00296E  0E42               	movlw	66
  2343   002970  6E48               	movwf	(___fladd@a+3)^0,c
  2344   002972  0E00               	movlw	0
  2345   002974  6E13               	movwf	___flmul@a^0,c
  2346   002976  0E00               	movlw	0
  2347   002978  6E14               	movwf	(___flmul@a+1)^0,c
  2348   00297A  0EFE               	movlw	254
  2349   00297C  6E15               	movwf	(___flmul@a+2)^0,c
  2350   00297E  0E42               	movlw	66
  2351   002980  6E16               	movwf	(___flmul@a+3)^0,c
  2352   002982  C0B8  F00F         	movff	_runDAC$3120,___flmul@b
  2353   002986  C0B9  F010         	movff	_runDAC$3120+1,___flmul@b+1
  2354   00298A  C0BA  F011         	movff	_runDAC$3120+2,___flmul@b+2
  2355   00298E  C0BB  F012         	movff	_runDAC$3120+3,___flmul@b+3
  2356   002992  EC31  F00D         	call	___flmul	;wreg free
  2357   002996  C00F  F041         	movff	?___flmul,___fladd@b
  2358   00299A  C010  F042         	movff	?___flmul+1,___fladd@b+1
  2359   00299E  C011  F043         	movff	?___flmul+2,___fladd@b+2
  2360   0029A2  C012  F044         	movff	?___flmul+3,___fladd@b+3
  2361   0029A6  ECD1  F00A         	call	___fladd	;wreg free
  2362   0029AA  C041  F051         	movff	?___fladd,___fltol@f1
  2363   0029AE  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  2364   0029B2  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  2365   0029B6  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  2366   0029BA  EC47  F01B         	call	___fltol	;wreg free
  2367   0029BE  5051               	movf	?___fltol^0,w,c
  2368   0029C0  EC48  F01F         	call	_SPI_write
  2369                           
  2370                           ;DAC.c: 66:                 break;
  2371   0029C4  EFF9  F014         	goto	l186
  2372   0029C8                     l4077:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  2376   0029C8  51BE               	movf	runDAC@DACindex& (0+255),w,b
  2377   0029CA  0AFF               	xorlw	255
  2378   0029CC  EC48  F01F         	call	_SPI_write
  2379                           
  2380                           ;DAC.c: 69:                 break;
  2381   0029D0  EFF9  F014         	goto	l186
  2382   0029D4                     l4081:
  2383                           
  2384                           ; BSR set to: 0
  2385   0029D4  51BD               	movf	runDAC@selectModeDAC& (0+255),w,b
  2386                           
  2387                           ; Switch size 1, requested type "simple"
  2388                           ; Number of cases is 3, Range of values is 1 to 3
  2389                           ; switch strategies available:
  2390                           ; Name         Instructions Cycles
  2391                           ; simple_byte           10     6 (average)
  2392                           ;	Chosen strategy is simple_byte
  2393   0029D6  0A01               	xorlw	1	; case 1
  2394   0029D8  B4D8               	btfsc	status,2,c
  2395   0029DA  EF51  F014         	goto	l4063
  2396   0029DE  0A03               	xorlw	3	; case 2
  2397   0029E0  B4D8               	btfsc	status,2,c
  2398   0029E2  EF6B  F014         	goto	l4071
  2399   0029E6  0A01               	xorlw	1	; case 3
  2400   0029E8  B4D8               	btfsc	status,2,c
  2401   0029EA  EFE4  F014         	goto	l4077
  2402   0029EE  EFF9  F014         	goto	l186
  2403   0029F2                     l186:
  2404                           
  2405                           ;DAC.c: 71:         GODONE = 1;
  2406   0029F2  82C2               	bsf	4034,1,c	;volatile
  2407   0029F4                     l189:
  2408   0029F4  B2C2               	btfsc	4034,1,c	;volatile
  2409   0029F6  EFFF  F014         	goto	u4761
  2410   0029FA  EF01  F015         	goto	u4760
  2411   0029FE                     u4761:
  2412   0029FE  EFFA  F014         	goto	l189
  2413   002A02                     u4760:
  2414   002A02                     
  2415                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  2416   002A02  0E85               	movlw	low STR_3
  2417   002A04  6E37               	movwf	printf@fmt^0,c
  2418   002A06  CFC4 F038          	movff	4036,?_printf+1	;volatile
  2419   002A0A  6A39               	clrf	(?_printf+2)^0,c
  2420   002A0C  EC24  F020         	call	_printf	;wreg free
  2421   002A10                     
  2422                           ;DAC.c: 75:         if(PORTCbits.RC0){
  2423   002A10  A082               	btfss	130,0,c	;volatile
  2424   002A12  EF0D  F015         	goto	u4771
  2425   002A16  EF0F  F015         	goto	u4770
  2426   002A1A                     u4771:
  2427   002A1A  EF12  F015         	goto	l4089
  2428   002A1E                     u4770:
  2429   002A1E                     
  2430                           ;DAC.c: 76:             selectModeDAC = 1;
  2431   002A1E  0E01               	movlw	1
  2432   002A20  0100               	movlb	0	; () banked
  2433   002A22  6FBD               	movwf	runDAC@selectModeDAC& (0+255),b
  2434   002A24                     l4089:
  2435                           
  2436                           ;DAC.c: 78:         if(PORTAbits.RA4){
  2437   002A24  A880               	btfss	128,4,c	;volatile
  2438   002A26  EF17  F015         	goto	u4781
  2439   002A2A  EF19  F015         	goto	u4780
  2440   002A2E                     u4781:
  2441   002A2E  EF1C  F015         	goto	l4093
  2442   002A32                     u4780:
  2443   002A32                     
  2444                           ;DAC.c: 79:             selectModeDAC = 2;
  2445   002A32  0E02               	movlw	2
  2446   002A34  0100               	movlb	0	; () banked
  2447   002A36  6FBD               	movwf	runDAC@selectModeDAC& (0+255),b
  2448   002A38                     l4093:
  2449                           
  2450                           ;DAC.c: 81:         if(PORTAbits.RA3){
  2451   002A38  A680               	btfss	128,3,c	;volatile
  2452   002A3A  EF21  F015         	goto	u4791
  2453   002A3E  EF23  F015         	goto	u4790
  2454   002A42                     u4791:
  2455   002A42  EF26  F015         	goto	l4097
  2456   002A46                     u4790:
  2457   002A46                     
  2458                           ;DAC.c: 82:             selectModeDAC = 3;
  2459   002A46  0E03               	movlw	3
  2460   002A48  0100               	movlb	0	; () banked
  2461   002A4A  6FBD               	movwf	runDAC@selectModeDAC& (0+255),b
  2462   002A4C                     l4097:
  2463                           
  2464                           ;DAC.c: 84:         if(PORTAbits.RA2){
  2465   002A4C  A480               	btfss	128,2,c	;volatile
  2466   002A4E  EF2B  F015         	goto	u4801
  2467   002A52  EF2D  F015         	goto	u4800
  2468   002A56                     u4801:
  2469   002A56  EF30  F015         	goto	l4101
  2470   002A5A                     u4800:
  2471   002A5A                     
  2472                           ;DAC.c: 85:             keepState = 0;
  2473   002A5A  0E00               	movlw	0
  2474   002A5C  0100               	movlb	0	; () banked
  2475   002A5E  6FBC               	movwf	runDAC@keepState& (0+255),b
  2476   002A60                     l4101:
  2477                           
  2478                           ;DAC.c: 87:         DACindex++;
  2479   002A60  0100               	movlb	0	; () banked
  2480   002A62  2BBE               	incf	runDAC@DACindex& (0+255),f,b
  2481   002A64                     
  2482                           ; BSR set to: 0
  2483                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  2484   002A64  0E68               	movlw	104
  2485   002A66  6E5D               	movwf	??_runDAC^0,c
  2486   002A68  0EE4               	movlw	228
  2487   002A6A                     u4977:
  2488   002A6A  2EE8               	decfsz	wreg,f,c
  2489   002A6C  D7FE               	bra	u4977
  2490   002A6E  2E5D               	decfsz	??_runDAC^0,f,c
  2491   002A70  D7FC               	bra	u4977
  2492   002A72  D000               	nop2	
  2493   002A74                     l4105:
  2494                           
  2495                           ;DAC.c: 54:     while(keepState){
  2496   002A74  0100               	movlb	0	; () banked
  2497   002A76  51BC               	movf	runDAC@keepState& (0+255),w,b
  2498   002A78  A4D8               	btfss	status,2,c
  2499   002A7A  EF41  F015         	goto	u4811
  2500   002A7E  EF43  F015         	goto	u4810
  2501   002A82                     u4811:
  2502   002A82  EFEA  F014         	goto	l4081
  2503   002A86                     u4810:
  2504   002A86                     
  2505                           ; BSR set to: 0
  2506   002A86  0012               	return		;funcret
  2507   002A88                     __end_of_runDAC:
  2508                           	callstack 0
  2509                           
  2510 ;; *************** function _sinf *****************
  2511 ;; Defined at:
  2512 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sinf.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  x               4   58[BANK0 ] float 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  ux              4   80[BANK0 ] struct .
  2517 ;;  y               4   76[BANK0 ] struct .
  2518 ;;  sign            1   71[BANK0 ] _Bool 
  2519 ;;  n               1   70[BANK0 ] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  4   58[BANK0 ] float 
  2522 ;; Registers used:
  2523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2529 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;Total ram usage:       26 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 3
  2536 ;; This function calls:
  2537 ;;		___cosdf
  2538 ;;		___fladd
  2539 ;;		___flneg
  2540 ;;		___rem_pio2f
  2541 ;;		___sindf
  2542 ;; This function is called by:
  2543 ;;		_runDAC
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text9
  2548   001098                     __ptext9:
  2549                           	callstack 0
  2550   001098                     _sinf:
  2551                           	callstack 26
  2552   001098  C09A  F0B0         	movff	sinf@x,sinf@ux
  2553   00109C  C09B  F0B1         	movff	sinf@x+1,sinf@ux+1
  2554   0010A0  C09C  F0B2         	movff	sinf@x+2,sinf@ux+2
  2555   0010A4  C09D  F0B3         	movff	sinf@x+3,sinf@ux+3
  2556   0010A8  0100               	movlb	0	; () banked
  2557   0010AA  BFB3               	btfsc	(sinf@ux+3)& (0+255),7,b
  2558   0010AC  EF5A  F008         	goto	u3701
  2559   0010B0  EF5D  F008         	goto	u3700
  2560   0010B4                     u3701:
  2561   0010B4  0E01               	movlw	1
  2562   0010B6  EF5E  F008         	goto	u3710
  2563   0010BA                     u3700:
  2564   0010BA  0E00               	movlw	0
  2565   0010BC                     u3710:
  2566   0010BC  6FA7               	movwf	sinf@sign& (0+255),b
  2567   0010BE                     
  2568                           ; BSR set to: 0
  2569   0010BE  9FB3               	bcf	(sinf@ux+3)& (0+255),7,b
  2570   0010C0                     
  2571                           ; BSR set to: 0
  2572   0010C0  0EDB               	movlw	219
  2573   0010C2  5DB0               	subwf	sinf@ux& (0+255),w,b
  2574   0010C4  0E0F               	movlw	15
  2575   0010C6  59B1               	subwfb	(sinf@ux+1)& (0+255),w,b
  2576   0010C8  0E49               	movlw	73
  2577   0010CA  59B2               	subwfb	(sinf@ux+2)& (0+255),w,b
  2578   0010CC  0E3F               	movlw	63
  2579   0010CE  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2580   0010D0  B0D8               	btfsc	status,0,c
  2581   0010D2  EF6D  F008         	goto	u3721
  2582   0010D6  EF6F  F008         	goto	u3720
  2583   0010DA                     u3721:
  2584   0010DA  EF98  F008         	goto	l3377
  2585   0010DE                     u3720:
  2586   0010DE                     
  2587                           ; BSR set to: 0
  2588   0010DE  0E80               	movlw	128
  2589   0010E0  5DB2               	subwf	(sinf@ux+2)& (0+255),w,b
  2590   0010E2  0E39               	movlw	57
  2591   0010E4  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2592   0010E6  B0D8               	btfsc	status,0,c
  2593   0010E8  EF78  F008         	goto	u3731
  2594   0010EC  EF7A  F008         	goto	u3730
  2595   0010F0                     u3731:
  2596   0010F0  EF84  F008         	goto	l3373
  2597   0010F4                     u3730:
  2598   0010F4                     
  2599                           ; BSR set to: 0
  2600   0010F4  C09A  F09A         	movff	sinf@x,?_sinf
  2601   0010F8  C09B  F09B         	movff	sinf@x+1,?_sinf+1
  2602   0010FC  C09C  F09C         	movff	sinf@x+2,?_sinf+2
  2603   001100  C09D  F09D         	movff	sinf@x+3,?_sinf+3
  2604   001104  EFD0  F00A         	goto	l1113
  2605   001108                     l3373:
  2606                           
  2607                           ; BSR set to: 0
  2608   001108  C09A  F051         	movff	sinf@x,___sindf@x
  2609   00110C  C09B  F052         	movff	sinf@x+1,___sindf@x+1
  2610   001110  C09C  F053         	movff	sinf@x+2,___sindf@x+2
  2611   001114  C09D  F054         	movff	sinf@x+3,___sindf@x+3
  2612   001118  EC44  F015         	call	___sindf	;wreg free
  2613   00111C  C051  F09A         	movff	?___sindf,?_sinf
  2614   001120  C052  F09B         	movff	?___sindf+1,?_sinf+1
  2615   001124  C053  F09C         	movff	?___sindf+2,?_sinf+2
  2616   001128  C054  F09D         	movff	?___sindf+3,?_sinf+3
  2617   00112C  EFD0  F00A         	goto	l1113
  2618   001130                     l3377:
  2619                           
  2620                           ; BSR set to: 0
  2621   001130  0ED2               	movlw	210
  2622   001132  5DB0               	subwf	sinf@ux& (0+255),w,b
  2623   001134  0E53               	movlw	83
  2624   001136  59B1               	subwfb	(sinf@ux+1)& (0+255),w,b
  2625   001138  0E7B               	movlw	123
  2626   00113A  59B2               	subwfb	(sinf@ux+2)& (0+255),w,b
  2627   00113C  0E40               	movlw	64
  2628   00113E  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2629   001140  B0D8               	btfsc	status,0,c
  2630   001142  EFA5  F008         	goto	u3741
  2631   001146  EFA7  F008         	goto	u3740
  2632   00114A                     u3741:
  2633   00114A  EF8A  F009         	goto	l3407
  2634   00114E                     u3740:
  2635   00114E                     
  2636                           ; BSR set to: 0
  2637   00114E  0EE4               	movlw	228
  2638   001150  5DB0               	subwf	sinf@ux& (0+255),w,b
  2639   001152  0ECB               	movlw	203
  2640   001154  59B1               	subwfb	(sinf@ux+1)& (0+255),w,b
  2641   001156  0E16               	movlw	22
  2642   001158  59B2               	subwfb	(sinf@ux+2)& (0+255),w,b
  2643   00115A  0E40               	movlw	64
  2644   00115C  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2645   00115E  B0D8               	btfsc	status,0,c
  2646   001160  EFB4  F008         	goto	u3751
  2647   001164  EFB6  F008         	goto	u3750
  2648   001168                     u3751:
  2649   001168  EF24  F009         	goto	l3397
  2650   00116C                     u3750:
  2651   00116C                     
  2652                           ; BSR set to: 0
  2653   00116C  51A7               	movf	sinf@sign& (0+255),w,b
  2654   00116E  B4D8               	btfsc	status,2,c
  2655   001170  EFBC  F008         	goto	u3761
  2656   001174  EFBE  F008         	goto	u3760
  2657   001178                     u3761:
  2658   001178  EFF6  F008         	goto	l3391
  2659   00117C                     u3760:
  2660   00117C                     
  2661                           ; BSR set to: 0
  2662   00117C  0EDB               	movlw	219
  2663   00117E  6E45               	movwf	___fladd@a^0,c
  2664   001180  0E0F               	movlw	15
  2665   001182  6E46               	movwf	(___fladd@a+1)^0,c
  2666   001184  0EC9               	movlw	201
  2667   001186  6E47               	movwf	(___fladd@a+2)^0,c
  2668   001188  0E3F               	movlw	63
  2669   00118A  6E48               	movwf	(___fladd@a+3)^0,c
  2670   00118C  C09A  F041         	movff	sinf@x,___fladd@b
  2671   001190  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2672   001194  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2673   001198  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2674   00119C  ECD1  F00A         	call	___fladd	;wreg free
  2675   0011A0  C041  F0A8         	movff	?___fladd,_sinf$3122
  2676   0011A4  C042  F0A9         	movff	?___fladd+1,_sinf$3122+1
  2677   0011A8  C043  F0AA         	movff	?___fladd+2,_sinf$3122+2
  2678   0011AC  C044  F0AB         	movff	?___fladd+3,_sinf$3122+3
  2679   0011B0                     l3385:
  2680   0011B0  C0A8  F051         	movff	_sinf$3122,___cosdf@x
  2681   0011B4  C0A9  F052         	movff	_sinf$3122+1,___cosdf@x+1
  2682   0011B8  C0AA  F053         	movff	_sinf$3122+2,___cosdf@x+2
  2683   0011BC  C0AB  F054         	movff	_sinf$3122+3,___cosdf@x+3
  2684   0011C0  EC5D  F016         	call	___cosdf	;wreg free
  2685   0011C4  C051  F078         	movff	?___cosdf,___flneg@f1
  2686   0011C8  C052  F079         	movff	?___cosdf+1,___flneg@f1+1
  2687   0011CC  C053  F07A         	movff	?___cosdf+2,___flneg@f1+2
  2688   0011D0  C054  F07B         	movff	?___cosdf+3,___flneg@f1+3
  2689   0011D4  EC67  F01F         	call	___flneg	;wreg free
  2690   0011D8  C078  F09A         	movff	?___flneg,?_sinf
  2691   0011DC  C079  F09B         	movff	?___flneg+1,?_sinf+1
  2692   0011E0  C07A  F09C         	movff	?___flneg+2,?_sinf+2
  2693   0011E4  C07B  F09D         	movff	?___flneg+3,?_sinf+3
  2694   0011E8  EFD0  F00A         	goto	l1113
  2695   0011EC                     l3391:
  2696                           
  2697                           ; BSR set to: 0
  2698   0011EC  C09A  F041         	movff	sinf@x,___fladd@b
  2699   0011F0  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2700   0011F4  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2701   0011F8  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2702   0011FC  0EDB               	movlw	219
  2703   0011FE  6E45               	movwf	___fladd@a^0,c
  2704   001200  0E0F               	movlw	15
  2705   001202  6E46               	movwf	(___fladd@a+1)^0,c
  2706   001204  0EC9               	movlw	201
  2707   001206  6E47               	movwf	(___fladd@a+2)^0,c
  2708   001208  0EBF               	movlw	191
  2709   00120A  6E48               	movwf	(___fladd@a+3)^0,c
  2710   00120C  ECD1  F00A         	call	___fladd	;wreg free
  2711   001210  C041  F0A8         	movff	?___fladd,_sinf$3122
  2712   001214  C042  F0A9         	movff	?___fladd+1,_sinf$3122+1
  2713   001218  C043  F0AA         	movff	?___fladd+2,_sinf$3122+2
  2714   00121C  C044  F0AB         	movff	?___fladd+3,_sinf$3122+3
  2715   001220                     l3393:
  2716   001220  C0A8  F051         	movff	_sinf$3122,___cosdf@x
  2717   001224  C0A9  F052         	movff	_sinf$3122+1,___cosdf@x+1
  2718   001228  C0AA  F053         	movff	_sinf$3122+2,___cosdf@x+2
  2719   00122C  C0AB  F054         	movff	_sinf$3122+3,___cosdf@x+3
  2720   001230  EC5D  F016         	call	___cosdf	;wreg free
  2721   001234  C051  F09A         	movff	?___cosdf,?_sinf
  2722   001238  C052  F09B         	movff	?___cosdf+1,?_sinf+1
  2723   00123C  C053  F09C         	movff	?___cosdf+2,?_sinf+2
  2724   001240  C054  F09D         	movff	?___cosdf+3,?_sinf+3
  2725   001244  EFD0  F00A         	goto	l1113
  2726   001248                     l3397:
  2727                           
  2728                           ; BSR set to: 0
  2729   001248  51A7               	movf	sinf@sign& (0+255),w,b
  2730   00124A  A4D8               	btfss	status,2,c
  2731   00124C  EF2A  F009         	goto	u3771
  2732   001250  EF2C  F009         	goto	u3770
  2733   001254                     u3771:
  2734   001254  EF52  F009         	goto	l3401
  2735   001258                     u3770:
  2736   001258                     
  2737                           ; BSR set to: 0
  2738   001258  0EDB               	movlw	219
  2739   00125A  6E45               	movwf	___fladd@a^0,c
  2740   00125C  0E0F               	movlw	15
  2741   00125E  6E46               	movwf	(___fladd@a+1)^0,c
  2742   001260  0E49               	movlw	73
  2743   001262  6E47               	movwf	(___fladd@a+2)^0,c
  2744   001264  0EC0               	movlw	192
  2745   001266  6E48               	movwf	(___fladd@a+3)^0,c
  2746   001268  C09A  F041         	movff	sinf@x,___fladd@b
  2747   00126C  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2748   001270  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2749   001274  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2750   001278  ECD1  F00A         	call	___fladd	;wreg free
  2751   00127C  C041  F078         	movff	?___fladd,___flneg@f1
  2752   001280  C042  F079         	movff	?___fladd+1,___flneg@f1+1
  2753   001284  C043  F07A         	movff	?___fladd+2,___flneg@f1+2
  2754   001288  C044  F07B         	movff	?___fladd+3,___flneg@f1+3
  2755   00128C  EC67  F01F         	call	___flneg	;wreg free
  2756   001290  C078  F09E         	movff	?___flneg,_sinf$2857
  2757   001294  C079  F09F         	movff	?___flneg+1,_sinf$2857+1
  2758   001298  C07A  F0A0         	movff	?___flneg+2,_sinf$2857+2
  2759   00129C  C07B  F0A1         	movff	?___flneg+3,_sinf$2857+3
  2760   0012A0  EF76  F009         	goto	l3403
  2761   0012A4                     l3401:
  2762                           
  2763                           ; BSR set to: 0
  2764   0012A4  0EDB               	movlw	219
  2765   0012A6  6E45               	movwf	___fladd@a^0,c
  2766   0012A8  0E0F               	movlw	15
  2767   0012AA  6E46               	movwf	(___fladd@a+1)^0,c
  2768   0012AC  0E49               	movlw	73
  2769   0012AE  6E47               	movwf	(___fladd@a+2)^0,c
  2770   0012B0  0E40               	movlw	64
  2771   0012B2  6E48               	movwf	(___fladd@a+3)^0,c
  2772   0012B4  C09A  F041         	movff	sinf@x,___fladd@b
  2773   0012B8  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2774   0012BC  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2775   0012C0  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2776   0012C4  ECD1  F00A         	call	___fladd	;wreg free
  2777   0012C8  C041  F078         	movff	?___fladd,___flneg@f1
  2778   0012CC  C042  F079         	movff	?___fladd+1,___flneg@f1+1
  2779   0012D0  C043  F07A         	movff	?___fladd+2,___flneg@f1+2
  2780   0012D4  C044  F07B         	movff	?___fladd+3,___flneg@f1+3
  2781   0012D8  EC67  F01F         	call	___flneg	;wreg free
  2782   0012DC  C078  F09E         	movff	?___flneg,_sinf$2857
  2783   0012E0  C079  F09F         	movff	?___flneg+1,_sinf$2857+1
  2784   0012E4  C07A  F0A0         	movff	?___flneg+2,_sinf$2857+2
  2785   0012E8  C07B  F0A1         	movff	?___flneg+3,_sinf$2857+3
  2786   0012EC                     l3403:
  2787   0012EC  C09E  F051         	movff	_sinf$2857,___sindf@x
  2788   0012F0  C09F  F052         	movff	_sinf$2857+1,___sindf@x+1
  2789   0012F4  C0A0  F053         	movff	_sinf$2857+2,___sindf@x+2
  2790   0012F8  C0A1  F054         	movff	_sinf$2857+3,___sindf@x+3
  2791   0012FC  EC44  F015         	call	___sindf	;wreg free
  2792   001300  C051  F09A         	movff	?___sindf,?_sinf
  2793   001304  C052  F09B         	movff	?___sindf+1,?_sinf+1
  2794   001308  C053  F09C         	movff	?___sindf+2,?_sinf+2
  2795   00130C  C054  F09D         	movff	?___sindf+3,?_sinf+3
  2796   001310  EFD0  F00A         	goto	l1113
  2797   001314                     l3407:
  2798                           
  2799                           ; BSR set to: 0
  2800   001314  0ED6               	movlw	214
  2801   001316  5DB0               	subwf	sinf@ux& (0+255),w,b
  2802   001318  0E31               	movlw	49
  2803   00131A  59B1               	subwfb	(sinf@ux+1)& (0+255),w,b
  2804   00131C  0EE2               	movlw	226
  2805   00131E  59B2               	subwfb	(sinf@ux+2)& (0+255),w,b
  2806   001320  0E40               	movlw	64
  2807   001322  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2808   001324  B0D8               	btfsc	status,0,c
  2809   001326  EF97  F009         	goto	u3781
  2810   00132A  EF99  F009         	goto	u3780
  2811   00132E                     u3781:
  2812   00132E  EF3A  F00A         	goto	l3437
  2813   001332                     u3780:
  2814   001332                     
  2815                           ; BSR set to: 0
  2816   001332  0EE0               	movlw	224
  2817   001334  5DB0               	subwf	sinf@ux& (0+255),w,b
  2818   001336  0EED               	movlw	237
  2819   001338  59B1               	subwfb	(sinf@ux+1)& (0+255),w,b
  2820   00133A  0EAF               	movlw	175
  2821   00133C  59B2               	subwfb	(sinf@ux+2)& (0+255),w,b
  2822   00133E  0E40               	movlw	64
  2823   001340  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2824   001342  B0D8               	btfsc	status,0,c
  2825   001344  EFA6  F009         	goto	u3791
  2826   001348  EFA8  F009         	goto	u3790
  2827   00134C                     u3791:
  2828   00134C  EFE8  F009         	goto	l3427
  2829   001350                     u3790:
  2830   001350                     
  2831                           ; BSR set to: 0
  2832   001350  51A7               	movf	sinf@sign& (0+255),w,b
  2833   001352  B4D8               	btfsc	status,2,c
  2834   001354  EFAE  F009         	goto	u3801
  2835   001358  EFB0  F009         	goto	u3800
  2836   00135C                     u3801:
  2837   00135C  EFCC  F009         	goto	l3421
  2838   001360                     u3800:
  2839   001360                     
  2840                           ; BSR set to: 0
  2841   001360  C09A  F041         	movff	sinf@x,___fladd@b
  2842   001364  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2843   001368  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2844   00136C  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2845   001370  0EE4               	movlw	228
  2846   001372  6E45               	movwf	___fladd@a^0,c
  2847   001374  0ECB               	movlw	203
  2848   001376  6E46               	movwf	(___fladd@a+1)^0,c
  2849   001378  0E96               	movlw	150
  2850   00137A  6E47               	movwf	(___fladd@a+2)^0,c
  2851   00137C  0E40               	movlw	64
  2852   00137E  6E48               	movwf	(___fladd@a+3)^0,c
  2853   001380  ECD1  F00A         	call	___fladd	;wreg free
  2854   001384  C041  F0A8         	movff	?___fladd,_sinf$3122
  2855   001388  C042  F0A9         	movff	?___fladd+1,_sinf$3122+1
  2856   00138C  C043  F0AA         	movff	?___fladd+2,_sinf$3122+2
  2857   001390  C044  F0AB         	movff	?___fladd+3,_sinf$3122+3
  2858   001394  EF10  F009         	goto	l3393
  2859   001398                     l3421:
  2860                           
  2861                           ; BSR set to: 0
  2862   001398  0EE4               	movlw	228
  2863   00139A  6E45               	movwf	___fladd@a^0,c
  2864   00139C  0ECB               	movlw	203
  2865   00139E  6E46               	movwf	(___fladd@a+1)^0,c
  2866   0013A0  0E96               	movlw	150
  2867   0013A2  6E47               	movwf	(___fladd@a+2)^0,c
  2868   0013A4  0EC0               	movlw	192
  2869   0013A6  6E48               	movwf	(___fladd@a+3)^0,c
  2870   0013A8  C09A  F041         	movff	sinf@x,___fladd@b
  2871   0013AC  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2872   0013B0  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2873   0013B4  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2874   0013B8  ECD1  F00A         	call	___fladd	;wreg free
  2875   0013BC  C041  F0A8         	movff	?___fladd,_sinf$3122
  2876   0013C0  C042  F0A9         	movff	?___fladd+1,_sinf$3122+1
  2877   0013C4  C043  F0AA         	movff	?___fladd+2,_sinf$3122+2
  2878   0013C8  C044  F0AB         	movff	?___fladd+3,_sinf$3122+3
  2879   0013CC  EFD8  F008         	goto	l3385
  2880   0013D0                     l3427:
  2881                           
  2882                           ; BSR set to: 0
  2883   0013D0  51A7               	movf	sinf@sign& (0+255),w,b
  2884   0013D2  A4D8               	btfss	status,2,c
  2885   0013D4  EFEE  F009         	goto	u3811
  2886   0013D8  EFF0  F009         	goto	u3810
  2887   0013DC                     u3811:
  2888   0013DC  EF0C  F00A         	goto	l3431
  2889   0013E0                     u3810:
  2890   0013E0                     
  2891                           ; BSR set to: 0
  2892   0013E0  C09A  F041         	movff	sinf@x,___fladd@b
  2893   0013E4  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2894   0013E8  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2895   0013EC  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2896   0013F0  0EDB               	movlw	219
  2897   0013F2  6E45               	movwf	___fladd@a^0,c
  2898   0013F4  0E0F               	movlw	15
  2899   0013F6  6E46               	movwf	(___fladd@a+1)^0,c
  2900   0013F8  0EC9               	movlw	201
  2901   0013FA  6E47               	movwf	(___fladd@a+2)^0,c
  2902   0013FC  0EC0               	movlw	192
  2903   0013FE  6E48               	movwf	(___fladd@a+3)^0,c
  2904   001400  ECD1  F00A         	call	___fladd	;wreg free
  2905   001404  C041  F0A2         	movff	?___fladd,_sinf$2858
  2906   001408  C042  F0A3         	movff	?___fladd+1,_sinf$2858+1
  2907   00140C  C043  F0A4         	movff	?___fladd+2,_sinf$2858+2
  2908   001410  C044  F0A5         	movff	?___fladd+3,_sinf$2858+3
  2909   001414  EF26  F00A         	goto	l3433
  2910   001418                     l3431:
  2911                           
  2912                           ; BSR set to: 0
  2913   001418  C09A  F041         	movff	sinf@x,___fladd@b
  2914   00141C  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2915   001420  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2916   001424  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2917   001428  0EDB               	movlw	219
  2918   00142A  6E45               	movwf	___fladd@a^0,c
  2919   00142C  0E0F               	movlw	15
  2920   00142E  6E46               	movwf	(___fladd@a+1)^0,c
  2921   001430  0EC9               	movlw	201
  2922   001432  6E47               	movwf	(___fladd@a+2)^0,c
  2923   001434  0E40               	movlw	64
  2924   001436  6E48               	movwf	(___fladd@a+3)^0,c
  2925   001438  ECD1  F00A         	call	___fladd	;wreg free
  2926   00143C  C041  F0A2         	movff	?___fladd,_sinf$2858
  2927   001440  C042  F0A3         	movff	?___fladd+1,_sinf$2858+1
  2928   001444  C043  F0A4         	movff	?___fladd+2,_sinf$2858+2
  2929   001448  C044  F0A5         	movff	?___fladd+3,_sinf$2858+3
  2930   00144C                     l3433:
  2931   00144C  C0A2  F051         	movff	_sinf$2858,___sindf@x
  2932   001450  C0A3  F052         	movff	_sinf$2858+1,___sindf@x+1
  2933   001454  C0A4  F053         	movff	_sinf$2858+2,___sindf@x+2
  2934   001458  C0A5  F054         	movff	_sinf$2858+3,___sindf@x+3
  2935   00145C  EC44  F015         	call	___sindf	;wreg free
  2936   001460  C051  F09A         	movff	?___sindf,?_sinf
  2937   001464  C052  F09B         	movff	?___sindf+1,?_sinf+1
  2938   001468  C053  F09C         	movff	?___sindf+2,?_sinf+2
  2939   00146C  C054  F09D         	movff	?___sindf+3,?_sinf+3
  2940   001470  EFD0  F00A         	goto	l1113
  2941   001474                     l3437:
  2942                           
  2943                           ; BSR set to: 0
  2944   001474  0E80               	movlw	128
  2945   001476  5DB2               	subwf	(sinf@ux+2)& (0+255),w,b
  2946   001478  0E7F               	movlw	127
  2947   00147A  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2948   00147C  A0D8               	btfss	status,0,c
  2949   00147E  EF43  F00A         	goto	u3821
  2950   001482  EF45  F00A         	goto	u3820
  2951   001486                     u3821:
  2952   001486  EF57  F00A         	goto	l3445
  2953   00148A                     u3820:
  2954   00148A                     
  2955                           ; BSR set to: 0
  2956   00148A  0EFF               	movlw	255
  2957   00148C  13B0               	iorwf	sinf@ux& (0+255),f,b
  2958   00148E  0EFF               	movlw	255
  2959   001490  13B1               	iorwf	(sinf@ux+1)& (0+255),f,b
  2960   001492  0EFF               	movlw	255
  2961   001494  13B2               	iorwf	(sinf@ux+2)& (0+255),f,b
  2962   001496  0E00               	movlw	0
  2963   001498  13B3               	iorwf	(sinf@ux+3)& (0+255),f,b
  2964   00149A                     
  2965                           ; BSR set to: 0
  2966   00149A  C0B0  F09A         	movff	sinf@ux,?_sinf
  2967   00149E  C0B1  F09B         	movff	sinf@ux+1,?_sinf+1
  2968   0014A2  C0B2  F09C         	movff	sinf@ux+2,?_sinf+2
  2969   0014A6  C0B3  F09D         	movff	sinf@ux+3,?_sinf+3
  2970   0014AA  EFD0  F00A         	goto	l1113
  2971   0014AE                     l3445:
  2972                           
  2973                           ; BSR set to: 0
  2974   0014AE  C09A  F07C         	movff	sinf@x,___rem_pio2f@x
  2975   0014B2  C09B  F07D         	movff	sinf@x+1,___rem_pio2f@x+1
  2976   0014B6  C09C  F07E         	movff	sinf@x+2,___rem_pio2f@x+2
  2977   0014BA  C09D  F07F         	movff	sinf@x+3,___rem_pio2f@x+3
  2978   0014BE  0EAC               	movlw	low sinf@y
  2979   0014C0  6F80               	movwf	___rem_pio2f@y& (0+255),b
  2980   0014C2  EC46  F00F         	call	___rem_pio2f	;wreg free
  2981   0014C6  0100               	movlb	0	; () banked
  2982   0014C8  517C               	movf	?___rem_pio2f& (0+255),w,b
  2983   0014CA  0B03               	andlw	3
  2984   0014CC  6FA6               	movwf	sinf@n& (0+255),b
  2985   0014CE  EFC1  F00A         	goto	l3463
  2986   0014D2                     l3447:
  2987                           
  2988                           ; BSR set to: 0
  2989   0014D2  C0AC  F078         	movff	sinf@y,___flneg@f1
  2990   0014D6  C0AD  F079         	movff	sinf@y+1,___flneg@f1+1
  2991   0014DA  C0AE  F07A         	movff	sinf@y+2,___flneg@f1+2
  2992   0014DE  C0AF  F07B         	movff	sinf@y+3,___flneg@f1+3
  2993   0014E2  EC67  F01F         	call	___flneg	;wreg free
  2994   0014E6  C078  F0AC         	movff	?___flneg,sinf@y
  2995   0014EA  C079  F0AD         	movff	?___flneg+1,sinf@y+1
  2996   0014EE  C07A  F0AE         	movff	?___flneg+2,sinf@y+2
  2997   0014F2  C07B  F0AF         	movff	?___flneg+3,sinf@y+3
  2998   0014F6                     l3449:
  2999   0014F6  C0AC  F051         	movff	sinf@y,___sindf@x
  3000   0014FA  C0AD  F052         	movff	sinf@y+1,___sindf@x+1
  3001   0014FE  C0AE  F053         	movff	sinf@y+2,___sindf@x+2
  3002   001502  C0AF  F054         	movff	sinf@y+3,___sindf@x+3
  3003   001506  EC44  F015         	call	___sindf	;wreg free
  3004   00150A  C051  F09A         	movff	?___sindf,?_sinf
  3005   00150E  C052  F09B         	movff	?___sindf+1,?_sinf+1
  3006   001512  C053  F09C         	movff	?___sindf+2,?_sinf+2
  3007   001516  C054  F09D         	movff	?___sindf+3,?_sinf+3
  3008   00151A  EFD0  F00A         	goto	l1113
  3009   00151E                     l3453:
  3010                           
  3011                           ; BSR set to: 0
  3012   00151E  C0AC  F051         	movff	sinf@y,___cosdf@x
  3013   001522  C0AD  F052         	movff	sinf@y+1,___cosdf@x+1
  3014   001526  C0AE  F053         	movff	sinf@y+2,___cosdf@x+2
  3015   00152A  C0AF  F054         	movff	sinf@y+3,___cosdf@x+3
  3016   00152E  EC5D  F016         	call	___cosdf	;wreg free
  3017   001532  C051  F09A         	movff	?___cosdf,?_sinf
  3018   001536  C052  F09B         	movff	?___cosdf+1,?_sinf+1
  3019   00153A  C053  F09C         	movff	?___cosdf+2,?_sinf+2
  3020   00153E  C054  F09D         	movff	?___cosdf+3,?_sinf+3
  3021   001542  EFD0  F00A         	goto	l1113
  3022   001546                     l3457:
  3023                           
  3024                           ; BSR set to: 0
  3025   001546  C0AC  F051         	movff	sinf@y,___cosdf@x
  3026   00154A  C0AD  F052         	movff	sinf@y+1,___cosdf@x+1
  3027   00154E  C0AE  F053         	movff	sinf@y+2,___cosdf@x+2
  3028   001552  C0AF  F054         	movff	sinf@y+3,___cosdf@x+3
  3029   001556  EC5D  F016         	call	___cosdf	;wreg free
  3030   00155A  C051  F078         	movff	?___cosdf,___flneg@f1
  3031   00155E  C052  F079         	movff	?___cosdf+1,___flneg@f1+1
  3032   001562  C053  F07A         	movff	?___cosdf+2,___flneg@f1+2
  3033   001566  C054  F07B         	movff	?___cosdf+3,___flneg@f1+3
  3034   00156A  EC67  F01F         	call	___flneg	;wreg free
  3035   00156E  C078  F09A         	movff	?___flneg,?_sinf
  3036   001572  C079  F09B         	movff	?___flneg+1,?_sinf+1
  3037   001576  C07A  F09C         	movff	?___flneg+2,?_sinf+2
  3038   00157A  C07B  F09D         	movff	?___flneg+3,?_sinf+3
  3039   00157E  EFD0  F00A         	goto	l1113
  3040   001582                     l3463:
  3041                           
  3042                           ; BSR set to: 0
  3043   001582  51A6               	movf	sinf@n& (0+255),w,b
  3044                           
  3045                           ; Switch size 1, requested type "simple"
  3046                           ; Number of cases is 3, Range of values is 0 to 2
  3047                           ; switch strategies available:
  3048                           ; Name         Instructions Cycles
  3049                           ; simple_byte           10     6 (average)
  3050                           ;	Chosen strategy is simple_byte
  3051   001584  0A00               	xorlw	0	; case 0
  3052   001586  B4D8               	btfsc	status,2,c
  3053   001588  EF7B  F00A         	goto	l3449
  3054   00158C  0A01               	xorlw	1	; case 1
  3055   00158E  B4D8               	btfsc	status,2,c
  3056   001590  EF8F  F00A         	goto	l3453
  3057   001594  0A03               	xorlw	3	; case 2
  3058   001596  B4D8               	btfsc	status,2,c
  3059   001598  EF69  F00A         	goto	l3447
  3060   00159C  EFA3  F00A         	goto	l3457
  3061   0015A0                     l1113:
  3062   0015A0  0012               	return		;funcret
  3063   0015A2                     __end_of_sinf:
  3064                           	callstack 0
  3065                           
  3066 ;; *************** function ___sindf *****************
  3067 ;; Defined at:
  3068 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__sindf.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  x               4   80[COMRAM] float 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  z               4   24[BANK0 ] float 
  3073 ;;  s               4   20[BANK0 ] float 
  3074 ;;  w               4    4[BANK0 ] float 
  3075 ;;  r               4    0[BANK0 ] float 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  4   80[COMRAM] float 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Totals:         4      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;Total ram usage:       32 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 1
  3092 ;; This function calls:
  3093 ;;		___fladd
  3094 ;;		___flmul
  3095 ;; This function is called by:
  3096 ;;		_sinf
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text10
  3101   002A88                     __ptext10:
  3102                           	callstack 0
  3103   002A88                     ___sindf:
  3104                           	callstack 27
  3105   002A88  C051  F00F         	movff	___sindf@x,___flmul@b
  3106   002A8C  C052  F010         	movff	___sindf@x+1,___flmul@b+1
  3107   002A90  C053  F011         	movff	___sindf@x+2,___flmul@b+2
  3108   002A94  C054  F012         	movff	___sindf@x+3,___flmul@b+3
  3109   002A98  C051  F013         	movff	___sindf@x,___flmul@a
  3110   002A9C  C052  F014         	movff	___sindf@x+1,___flmul@a+1
  3111   002AA0  C053  F015         	movff	___sindf@x+2,___flmul@a+2
  3112   002AA4  C054  F016         	movff	___sindf@x+3,___flmul@a+3
  3113   002AA8  EC31  F00D         	call	___flmul	;wreg free
  3114   002AAC  C00F  F078         	movff	?___flmul,___sindf@z
  3115   002AB0  C010  F079         	movff	?___flmul+1,___sindf@z+1
  3116   002AB4  C011  F07A         	movff	?___flmul+2,___sindf@z+2
  3117   002AB8  C012  F07B         	movff	?___flmul+3,___sindf@z+3
  3118   002ABC  C078  F00F         	movff	___sindf@z,___flmul@b
  3119   002AC0  C079  F010         	movff	___sindf@z+1,___flmul@b+1
  3120   002AC4  C07A  F011         	movff	___sindf@z+2,___flmul@b+2
  3121   002AC8  C07B  F012         	movff	___sindf@z+3,___flmul@b+3
  3122   002ACC  C078  F013         	movff	___sindf@z,___flmul@a
  3123   002AD0  C079  F014         	movff	___sindf@z+1,___flmul@a+1
  3124   002AD4  C07A  F015         	movff	___sindf@z+2,___flmul@a+2
  3125   002AD8  C07B  F016         	movff	___sindf@z+3,___flmul@a+3
  3126   002ADC  EC31  F00D         	call	___flmul	;wreg free
  3127   002AE0  C00F  F064         	movff	?___flmul,___sindf@w
  3128   002AE4  C010  F065         	movff	?___flmul+1,___sindf@w+1
  3129   002AE8  C011  F066         	movff	?___flmul+2,___sindf@w+2
  3130   002AEC  C012  F067         	movff	?___flmul+3,___sindf@w+3
  3131   002AF0  0E3C               	movlw	60
  3132   002AF2  6E13               	movwf	___flmul@a^0,c
  3133   002AF4  0E6C               	movlw	108
  3134   002AF6  6E14               	movwf	(___flmul@a+1)^0,c
  3135   002AF8  0E36               	movlw	54
  3136   002AFA  6E15               	movwf	(___flmul@a+2)^0,c
  3137   002AFC  0E36               	movlw	54
  3138   002AFE  6E16               	movwf	(___flmul@a+3)^0,c
  3139   002B00  C078  F00F         	movff	___sindf@z,___flmul@b
  3140   002B04  C079  F010         	movff	___sindf@z+1,___flmul@b+1
  3141   002B08  C07A  F011         	movff	___sindf@z+2,___flmul@b+2
  3142   002B0C  C07B  F012         	movff	___sindf@z+3,___flmul@b+3
  3143   002B10  EC31  F00D         	call	___flmul	;wreg free
  3144   002B14  C00F  F041         	movff	?___flmul,___fladd@b
  3145   002B18  C010  F042         	movff	?___flmul+1,___fladd@b+1
  3146   002B1C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  3147   002B20  C012  F044         	movff	?___flmul+3,___fladd@b+3
  3148   002B24  0ECF               	movlw	207
  3149   002B26  6E45               	movwf	___fladd@a^0,c
  3150   002B28  0E07               	movlw	7
  3151   002B2A  6E46               	movwf	(___fladd@a+1)^0,c
  3152   002B2C  0E50               	movlw	80
  3153   002B2E  6E47               	movwf	(___fladd@a+2)^0,c
  3154   002B30  0EB9               	movlw	185
  3155   002B32  6E48               	movwf	(___fladd@a+3)^0,c
  3156   002B34  ECD1  F00A         	call	___fladd	;wreg free
  3157   002B38  C041  F060         	movff	?___fladd,___sindf@r
  3158   002B3C  C042  F061         	movff	?___fladd+1,___sindf@r+1
  3159   002B40  C043  F062         	movff	?___fladd+2,___sindf@r+2
  3160   002B44  C044  F063         	movff	?___fladd+3,___sindf@r+3
  3161   002B48  C078  F00F         	movff	___sindf@z,___flmul@b
  3162   002B4C  C079  F010         	movff	___sindf@z+1,___flmul@b+1
  3163   002B50  C07A  F011         	movff	___sindf@z+2,___flmul@b+2
  3164   002B54  C07B  F012         	movff	___sindf@z+3,___flmul@b+3
  3165   002B58  C051  F013         	movff	___sindf@x,___flmul@a
  3166   002B5C  C052  F014         	movff	___sindf@x+1,___flmul@a+1
  3167   002B60  C053  F015         	movff	___sindf@x+2,___flmul@a+2
  3168   002B64  C054  F016         	movff	___sindf@x+3,___flmul@a+3
  3169   002B68  EC31  F00D         	call	___flmul	;wreg free
  3170   002B6C  C00F  F074         	movff	?___flmul,___sindf@s
  3171   002B70  C010  F075         	movff	?___flmul+1,___sindf@s+1
  3172   002B74  C011  F076         	movff	?___flmul+2,___sindf@s+2
  3173   002B78  C012  F077         	movff	?___flmul+3,___sindf@s+3
  3174   002B7C  0EAB               	movlw	171
  3175   002B7E  6E45               	movwf	___fladd@a^0,c
  3176   002B80  0EAA               	movlw	170
  3177   002B82  6E46               	movwf	(___fladd@a+1)^0,c
  3178   002B84  0E2A               	movlw	42
  3179   002B86  6E47               	movwf	(___fladd@a+2)^0,c
  3180   002B88  0EBE               	movlw	190
  3181   002B8A  6E48               	movwf	(___fladd@a+3)^0,c
  3182   002B8C  0E84               	movlw	132
  3183   002B8E  6E13               	movwf	___flmul@a^0,c
  3184   002B90  0E88               	movlw	136
  3185   002B92  6E14               	movwf	(___flmul@a+1)^0,c
  3186   002B94  0E08               	movlw	8
  3187   002B96  6E15               	movwf	(___flmul@a+2)^0,c
  3188   002B98  0E3C               	movlw	60
  3189   002B9A  6E16               	movwf	(___flmul@a+3)^0,c
  3190   002B9C  C078  F00F         	movff	___sindf@z,___flmul@b
  3191   002BA0  C079  F010         	movff	___sindf@z+1,___flmul@b+1
  3192   002BA4  C07A  F011         	movff	___sindf@z+2,___flmul@b+2
  3193   002BA8  C07B  F012         	movff	___sindf@z+3,___flmul@b+3
  3194   002BAC  EC31  F00D         	call	___flmul	;wreg free
  3195   002BB0  C00F  F041         	movff	?___flmul,___fladd@b
  3196   002BB4  C010  F042         	movff	?___flmul+1,___fladd@b+1
  3197   002BB8  C011  F043         	movff	?___flmul+2,___fladd@b+2
  3198   002BBC  C012  F044         	movff	?___flmul+3,___fladd@b+3
  3199   002BC0  ECD1  F00A         	call	___fladd	;wreg free
  3200   002BC4  C041  F068         	movff	?___fladd,___sindf$3127
  3201   002BC8  C042  F069         	movff	?___fladd+1,___sindf$3127+1
  3202   002BCC  C043  F06A         	movff	?___fladd+2,___sindf$3127+2
  3203   002BD0  C044  F06B         	movff	?___fladd+3,___sindf$3127+3
  3204   002BD4  C064  F013         	movff	___sindf@w,___flmul@a
  3205   002BD8  C065  F014         	movff	___sindf@w+1,___flmul@a+1
  3206   002BDC  C066  F015         	movff	___sindf@w+2,___flmul@a+2
  3207   002BE0  C067  F016         	movff	___sindf@w+3,___flmul@a+3
  3208   002BE4  C074  F00F         	movff	___sindf@s,___flmul@b
  3209   002BE8  C075  F010         	movff	___sindf@s+1,___flmul@b+1
  3210   002BEC  C076  F011         	movff	___sindf@s+2,___flmul@b+2
  3211   002BF0  C077  F012         	movff	___sindf@s+3,___flmul@b+3
  3212   002BF4  EC31  F00D         	call	___flmul	;wreg free
  3213   002BF8  C00F  F06C         	movff	?___flmul,___sindf$3128
  3214   002BFC  C010  F06D         	movff	?___flmul+1,___sindf$3128+1
  3215   002C00  C011  F06E         	movff	?___flmul+2,___sindf$3128+2
  3216   002C04  C012  F06F         	movff	?___flmul+3,___sindf$3128+3
  3217   002C08  C051  F045         	movff	___sindf@x,___fladd@a
  3218   002C0C  C052  F046         	movff	___sindf@x+1,___fladd@a+1
  3219   002C10  C053  F047         	movff	___sindf@x+2,___fladd@a+2
  3220   002C14  C054  F048         	movff	___sindf@x+3,___fladd@a+3
  3221   002C18  C074  F013         	movff	___sindf@s,___flmul@a
  3222   002C1C  C075  F014         	movff	___sindf@s+1,___flmul@a+1
  3223   002C20  C076  F015         	movff	___sindf@s+2,___flmul@a+2
  3224   002C24  C077  F016         	movff	___sindf@s+3,___flmul@a+3
  3225   002C28  C068  F00F         	movff	___sindf$3127,___flmul@b
  3226   002C2C  C069  F010         	movff	___sindf$3127+1,___flmul@b+1
  3227   002C30  C06A  F011         	movff	___sindf$3127+2,___flmul@b+2
  3228   002C34  C06B  F012         	movff	___sindf$3127+3,___flmul@b+3
  3229   002C38  EC31  F00D         	call	___flmul	;wreg free
  3230   002C3C  C00F  F041         	movff	?___flmul,___fladd@b
  3231   002C40  C010  F042         	movff	?___flmul+1,___fladd@b+1
  3232   002C44  C011  F043         	movff	?___flmul+2,___fladd@b+2
  3233   002C48  C012  F044         	movff	?___flmul+3,___fladd@b+3
  3234   002C4C  ECD1  F00A         	call	___fladd	;wreg free
  3235   002C50  C041  F070         	movff	?___fladd,___sindf$3129
  3236   002C54  C042  F071         	movff	?___fladd+1,___sindf$3129+1
  3237   002C58  C043  F072         	movff	?___fladd+2,___sindf$3129+2
  3238   002C5C  C044  F073         	movff	?___fladd+3,___sindf$3129+3
  3239   002C60  C070  F041         	movff	___sindf$3129,___fladd@b
  3240   002C64  C071  F042         	movff	___sindf$3129+1,___fladd@b+1
  3241   002C68  C072  F043         	movff	___sindf$3129+2,___fladd@b+2
  3242   002C6C  C073  F044         	movff	___sindf$3129+3,___fladd@b+3
  3243   002C70  C060  F013         	movff	___sindf@r,___flmul@a
  3244   002C74  C061  F014         	movff	___sindf@r+1,___flmul@a+1
  3245   002C78  C062  F015         	movff	___sindf@r+2,___flmul@a+2
  3246   002C7C  C063  F016         	movff	___sindf@r+3,___flmul@a+3
  3247   002C80  C06C  F00F         	movff	___sindf$3128,___flmul@b
  3248   002C84  C06D  F010         	movff	___sindf$3128+1,___flmul@b+1
  3249   002C88  C06E  F011         	movff	___sindf$3128+2,___flmul@b+2
  3250   002C8C  C06F  F012         	movff	___sindf$3128+3,___flmul@b+3
  3251   002C90  EC31  F00D         	call	___flmul	;wreg free
  3252   002C94  C00F  F045         	movff	?___flmul,___fladd@a
  3253   002C98  C010  F046         	movff	?___flmul+1,___fladd@a+1
  3254   002C9C  C011  F047         	movff	?___flmul+2,___fladd@a+2
  3255   002CA0  C012  F048         	movff	?___flmul+3,___fladd@a+3
  3256   002CA4  ECD1  F00A         	call	___fladd	;wreg free
  3257   002CA8  C041  F051         	movff	?___fladd,?___sindf
  3258   002CAC  C042  F052         	movff	?___fladd+1,?___sindf+1
  3259   002CB0  C043  F053         	movff	?___fladd+2,?___sindf+2
  3260   002CB4  C044  F054         	movff	?___fladd+3,?___sindf+3
  3261   002CB8  0012               	return		;funcret
  3262   002CBA                     __end_of___sindf:
  3263                           	callstack 0
  3264                           
  3265 ;; *************** function ___rem_pio2f *****************
  3266 ;; Defined at:
  3267 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__rem_pio2f.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  x               4   28[BANK0 ] float 
  3270 ;;  y               1   32[BANK0 ] PTR 
  3271 ;;		 -> sinf@y(4), 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  n               4   54[BANK0 ] long 
  3274 ;;  t               4   50[BANK0 ] float 
  3275 ;;  fn              4   46[BANK0 ] float 
  3276 ;;  ux              4   42[BANK0 ] struct .
  3277 ;;  ty              4   33[BANK0 ] [1]
  3278 ;;  sign            1   41[BANK0 ] _Bool 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  2   28[BANK0 ] int 
  3281 ;; Registers used:
  3282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3288 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;Total ram usage:       32 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 2
  3295 ;; This function calls:
  3296 ;;		___fladd
  3297 ;;		___flmul
  3298 ;;		___flneg
  3299 ;;		___flsub
  3300 ;;		___fltol
  3301 ;;		___xxtofl
  3302 ;;		_fabsf
  3303 ;; This function is called by:
  3304 ;;		_sinf
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text11
  3309   001E8C                     __ptext11:
  3310                           	callstack 0
  3311   001E8C                     ___rem_pio2f:
  3312                           	callstack 26
  3313   001E8C  C0E5  F08A         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  3314   001E90  C0E6  F08B         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  3315   001E94  C0E7  F08C         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  3316   001E98  C0E8  F08D         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  3317   001E9C  C07C  F08A         	movff	___rem_pio2f@x,___rem_pio2f@ux
  3318   001EA0  C07D  F08B         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  3319   001EA4  C07E  F08C         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  3320   001EA8  C07F  F08D         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  3321   001EAC  0100               	movlb	0	; () banked
  3322   001EAE  BF8D               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  3323   001EB0  EF5C  F00F         	goto	u3551
  3324   001EB4  EF5F  F00F         	goto	u3550
  3325   001EB8                     u3551:
  3326   001EB8  0E01               	movlw	1
  3327   001EBA  EF60  F00F         	goto	u3560
  3328   001EBE                     u3550:
  3329   001EBE  0E00               	movlw	0
  3330   001EC0                     u3560:
  3331   001EC0  6F89               	movwf	___rem_pio2f@sign& (0+255),b
  3332   001EC2                     
  3333                           ; BSR set to: 0
  3334   001EC2  9F8D               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  3335   001EC4                     
  3336                           ; BSR set to: 0
  3337   001EC4  0EDB               	movlw	219
  3338   001EC6  5D8A               	subwf	___rem_pio2f@ux& (0+255),w,b
  3339   001EC8  0E0F               	movlw	15
  3340   001ECA  598B               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  3341   001ECC  0EC9               	movlw	201
  3342   001ECE  598C               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  3343   001ED0  0E4D               	movlw	77
  3344   001ED2  598D               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  3345   001ED4  B0D8               	btfsc	status,0,c
  3346   001ED6  EF6F  F00F         	goto	u3571
  3347   001EDA  EF71  F00F         	goto	u3570
  3348   001EDE                     u3571:
  3349   001EDE  EF5D  F010         	goto	l3303
  3350   001EE2                     u3570:
  3351   001EE2                     
  3352                           ; BSR set to: 0
  3353   001EE2  C07C  F001         	movff	___rem_pio2f@x,fabsf@x
  3354   001EE6  C07D  F002         	movff	___rem_pio2f@x+1,fabsf@x+1
  3355   001EEA  C07E  F003         	movff	___rem_pio2f@x+2,fabsf@x+2
  3356   001EEE  C07F  F004         	movff	___rem_pio2f@x+3,fabsf@x+3
  3357   001EF2  ECBA  F01F         	call	_fabsf	;wreg free
  3358   001EF6  C001  F092         	movff	?_fabsf,___rem_pio2f@t
  3359   001EFA  C002  F093         	movff	?_fabsf+1,___rem_pio2f@t+1
  3360   001EFE  C003  F094         	movff	?_fabsf+2,___rem_pio2f@t+2
  3361   001F02  C004  F095         	movff	?_fabsf+3,___rem_pio2f@t+3
  3362   001F06  0E00               	movlw	0
  3363   001F08  6E45               	movwf	___fladd@a^0,c
  3364   001F0A  0E00               	movlw	0
  3365   001F0C  6E46               	movwf	(___fladd@a+1)^0,c
  3366   001F0E  0E00               	movlw	0
  3367   001F10  6E47               	movwf	(___fladd@a+2)^0,c
  3368   001F12  0E3F               	movlw	63
  3369   001F14  6E48               	movwf	(___fladd@a+3)^0,c
  3370   001F16  0E83               	movlw	131
  3371   001F18  6E13               	movwf	___flmul@a^0,c
  3372   001F1A  0EF9               	movlw	249
  3373   001F1C  6E14               	movwf	(___flmul@a+1)^0,c
  3374   001F1E  0E22               	movlw	34
  3375   001F20  6E15               	movwf	(___flmul@a+2)^0,c
  3376   001F22  0E3F               	movlw	63
  3377   001F24  6E16               	movwf	(___flmul@a+3)^0,c
  3378   001F26  C092  F00F         	movff	___rem_pio2f@t,___flmul@b
  3379   001F2A  C093  F010         	movff	___rem_pio2f@t+1,___flmul@b+1
  3380   001F2E  C094  F011         	movff	___rem_pio2f@t+2,___flmul@b+2
  3381   001F32  C095  F012         	movff	___rem_pio2f@t+3,___flmul@b+3
  3382   001F36  EC31  F00D         	call	___flmul	;wreg free
  3383   001F3A  C00F  F041         	movff	?___flmul,___fladd@b
  3384   001F3E  C010  F042         	movff	?___flmul+1,___fladd@b+1
  3385   001F42  C011  F043         	movff	?___flmul+2,___fladd@b+2
  3386   001F46  C012  F044         	movff	?___flmul+3,___fladd@b+3
  3387   001F4A  ECD1  F00A         	call	___fladd	;wreg free
  3388   001F4E  C041  F051         	movff	?___fladd,___fltol@f1
  3389   001F52  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  3390   001F56  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  3391   001F5A  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  3392   001F5E  EC47  F01B         	call	___fltol	;wreg free
  3393   001F62  C051  F096         	movff	?___fltol,___rem_pio2f@n
  3394   001F66  C052  F097         	movff	?___fltol+1,___rem_pio2f@n+1
  3395   001F6A  C053  F098         	movff	?___fltol+2,___rem_pio2f@n+2
  3396   001F6E  C054  F099         	movff	?___fltol+3,___rem_pio2f@n+3
  3397   001F72  C096  F001         	movff	___rem_pio2f@n,___xxtofl@val
  3398   001F76  C097  F002         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  3399   001F7A  C098  F003         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  3400   001F7E  C099  F004         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  3401   001F82  0E01               	movlw	1
  3402   001F84  EC4A  F018         	call	___xxtofl
  3403   001F88  C001  F08E         	movff	?___xxtofl,___rem_pio2f@fn
  3404   001F8C  C002  F08F         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  3405   001F90  C003  F090         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  3406   001F94  C004  F091         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  3407   001F98  0EDA               	movlw	218
  3408   001F9A  6E13               	movwf	___flmul@a^0,c
  3409   001F9C  0E0F               	movlw	15
  3410   001F9E  6E14               	movwf	(___flmul@a+1)^0,c
  3411   001FA0  0EC9               	movlw	201
  3412   001FA2  6E15               	movwf	(___flmul@a+2)^0,c
  3413   001FA4  0E3F               	movlw	63
  3414   001FA6  6E16               	movwf	(___flmul@a+3)^0,c
  3415   001FA8  C08E  F00F         	movff	___rem_pio2f@fn,___flmul@b
  3416   001FAC  C08F  F010         	movff	___rem_pio2f@fn+1,___flmul@b+1
  3417   001FB0  C090  F011         	movff	___rem_pio2f@fn+2,___flmul@b+2
  3418   001FB4  C091  F012         	movff	___rem_pio2f@fn+3,___flmul@b+3
  3419   001FB8  EC31  F00D         	call	___flmul	;wreg free
  3420   001FBC  C00F  F055         	movff	?___flmul,___flsub@a
  3421   001FC0  C010  F056         	movff	?___flmul+1,___flsub@a+1
  3422   001FC4  C011  F057         	movff	?___flmul+2,___flsub@a+2
  3423   001FC8  C012  F058         	movff	?___flmul+3,___flsub@a+3
  3424   001FCC  C092  F051         	movff	___rem_pio2f@t,___flsub@b
  3425   001FD0  C093  F052         	movff	___rem_pio2f@t+1,___flsub@b+1
  3426   001FD4  C094  F053         	movff	___rem_pio2f@t+2,___flsub@b+2
  3427   001FD8  C095  F054         	movff	___rem_pio2f@t+3,___flsub@b+3
  3428   001FDC  ECC1  F01E         	call	___flsub	;wreg free
  3429   001FE0  C051  F085         	movff	?___flsub,___rem_pio2f$3126
  3430   001FE4  C052  F086         	movff	?___flsub+1,___rem_pio2f$3126+1
  3431   001FE8  C053  F087         	movff	?___flsub+2,___rem_pio2f$3126+2
  3432   001FEC  C054  F088         	movff	?___flsub+3,___rem_pio2f$3126+3
  3433   001FF0  C085  F051         	movff	___rem_pio2f$3126,___flsub@b
  3434   001FF4  C086  F052         	movff	___rem_pio2f$3126+1,___flsub@b+1
  3435   001FF8  C087  F053         	movff	___rem_pio2f$3126+2,___flsub@b+2
  3436   001FFC  C088  F054         	movff	___rem_pio2f$3126+3,___flsub@b+3
  3437   002000  0EA3               	movlw	163
  3438   002002  6E13               	movwf	___flmul@a^0,c
  3439   002004  0E85               	movlw	133
  3440   002006  6E14               	movwf	(___flmul@a+1)^0,c
  3441   002008  0E88               	movlw	136
  3442   00200A  6E15               	movwf	(___flmul@a+2)^0,c
  3443   00200C  0E32               	movlw	50
  3444   00200E  6E16               	movwf	(___flmul@a+3)^0,c
  3445   002010  C08E  F00F         	movff	___rem_pio2f@fn,___flmul@b
  3446   002014  C08F  F010         	movff	___rem_pio2f@fn+1,___flmul@b+1
  3447   002018  C090  F011         	movff	___rem_pio2f@fn+2,___flmul@b+2
  3448   00201C  C091  F012         	movff	___rem_pio2f@fn+3,___flmul@b+3
  3449   002020  EC31  F00D         	call	___flmul	;wreg free
  3450   002024  C00F  F055         	movff	?___flmul,___flsub@a
  3451   002028  C010  F056         	movff	?___flmul+1,___flsub@a+1
  3452   00202C  C011  F057         	movff	?___flmul+2,___flsub@a+2
  3453   002030  C012  F058         	movff	?___flmul+3,___flsub@a+3
  3454   002034  ECC1  F01E         	call	___flsub	;wreg free
  3455   002038  0100               	movlb	0	; () banked
  3456   00203A  5180               	movf	___rem_pio2f@y& (0+255),w,b
  3457   00203C  6ED9               	movwf	fsr2l,c
  3458   00203E  6ADA               	clrf	fsr2h,c
  3459   002040  C051  FFDE         	movff	?___flsub,postinc2
  3460   002044  C052  FFDE         	movff	?___flsub+1,postinc2
  3461   002048  C053  FFDE         	movff	?___flsub+2,postinc2
  3462   00204C  C054  FFDE         	movff	?___flsub+3,postinc2
  3463   002050                     
  3464                           ; BSR set to: 0
  3465   002050  5189               	movf	___rem_pio2f@sign& (0+255),w,b
  3466   002052  B4D8               	btfsc	status,2,c
  3467   002054  EF2E  F010         	goto	u3581
  3468   002058  EF30  F010         	goto	u3580
  3469   00205C                     u3581:
  3470   00205C  EF57  F010         	goto	l1163
  3471   002060                     u3580:
  3472   002060                     l3297:
  3473                           
  3474                           ; BSR set to: 0
  3475   002060  5180               	movf	___rem_pio2f@y& (0+255),w,b
  3476   002062  6ED9               	movwf	fsr2l,c
  3477   002064  6ADA               	clrf	fsr2h,c
  3478   002066  CFDE F078          	movff	postinc2,___flneg@f1
  3479   00206A  CFDE F079          	movff	postinc2,___flneg@f1+1
  3480   00206E  CFDE F07A          	movff	postinc2,___flneg@f1+2
  3481   002072  CFDE F07B          	movff	postinc2,___flneg@f1+3
  3482   002076  EC67  F01F         	call	___flneg	;wreg free
  3483   00207A  0100               	movlb	0	; () banked
  3484   00207C  5180               	movf	___rem_pio2f@y& (0+255),w,b
  3485   00207E  6ED9               	movwf	fsr2l,c
  3486   002080  6ADA               	clrf	fsr2h,c
  3487   002082  C078  FFDE         	movff	?___flneg,postinc2
  3488   002086  C079  FFDE         	movff	?___flneg+1,postinc2
  3489   00208A  C07A  FFDE         	movff	?___flneg+2,postinc2
  3490   00208E  C07B  FFDE         	movff	?___flneg+3,postinc2
  3491   002092                     
  3492                           ; BSR set to: 0
  3493   002092  C096  F05B         	movff	___rem_pio2f@n,??___rem_pio2f
  3494   002096  C097  F05C         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  3495   00209A  1E5B               	comf	??___rem_pio2f^0,f,c
  3496   00209C  1E5C               	comf	(??___rem_pio2f+1)^0,f,c
  3497   00209E  4A5B               	infsnz	??___rem_pio2f^0,f,c
  3498   0020A0  2A5C               	incf	(??___rem_pio2f+1)^0,f,c
  3499   0020A2  C05B  F07C         	movff	??___rem_pio2f,?___rem_pio2f
  3500   0020A6  C05C  F07D         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  3501   0020AA  EF26  F011         	goto	l1164
  3502   0020AE                     l1163:
  3503                           
  3504                           ; BSR set to: 0
  3505   0020AE  C096  F07C         	movff	___rem_pio2f@n,?___rem_pio2f
  3506   0020B2  C097  F07D         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  3507   0020B6  EF26  F011         	goto	l1164
  3508   0020BA                     l3303:
  3509                           
  3510                           ; BSR set to: 0
  3511   0020BA  C07C  F001         	movff	___rem_pio2f@x,fabsf@x
  3512   0020BE  C07D  F002         	movff	___rem_pio2f@x+1,fabsf@x+1
  3513   0020C2  C07E  F003         	movff	___rem_pio2f@x+2,fabsf@x+2
  3514   0020C6  C07F  F004         	movff	___rem_pio2f@x+3,fabsf@x+3
  3515   0020CA  ECBA  F01F         	call	_fabsf	;wreg free
  3516   0020CE  C001  F092         	movff	?_fabsf,___rem_pio2f@t
  3517   0020D2  C002  F093         	movff	?_fabsf+1,___rem_pio2f@t+1
  3518   0020D6  C003  F094         	movff	?_fabsf+2,___rem_pio2f@t+2
  3519   0020DA  C004  F095         	movff	?_fabsf+3,___rem_pio2f@t+3
  3520   0020DE  0E00               	movlw	0
  3521   0020E0  6E45               	movwf	___fladd@a^0,c
  3522   0020E2  0E00               	movlw	0
  3523   0020E4  6E46               	movwf	(___fladd@a+1)^0,c
  3524   0020E6  0E00               	movlw	0
  3525   0020E8  6E47               	movwf	(___fladd@a+2)^0,c
  3526   0020EA  0E3F               	movlw	63
  3527   0020EC  6E48               	movwf	(___fladd@a+3)^0,c
  3528   0020EE  0E83               	movlw	131
  3529   0020F0  6E13               	movwf	___flmul@a^0,c
  3530   0020F2  0EF9               	movlw	249
  3531   0020F4  6E14               	movwf	(___flmul@a+1)^0,c
  3532   0020F6  0E22               	movlw	34
  3533   0020F8  6E15               	movwf	(___flmul@a+2)^0,c
  3534   0020FA  0E3F               	movlw	63
  3535   0020FC  6E16               	movwf	(___flmul@a+3)^0,c
  3536   0020FE  C092  F00F         	movff	___rem_pio2f@t,___flmul@b
  3537   002102  C093  F010         	movff	___rem_pio2f@t+1,___flmul@b+1
  3538   002106  C094  F011         	movff	___rem_pio2f@t+2,___flmul@b+2
  3539   00210A  C095  F012         	movff	___rem_pio2f@t+3,___flmul@b+3
  3540   00210E  EC31  F00D         	call	___flmul	;wreg free
  3541   002112  C00F  F041         	movff	?___flmul,___fladd@b
  3542   002116  C010  F042         	movff	?___flmul+1,___fladd@b+1
  3543   00211A  C011  F043         	movff	?___flmul+2,___fladd@b+2
  3544   00211E  C012  F044         	movff	?___flmul+3,___fladd@b+3
  3545   002122  ECD1  F00A         	call	___fladd	;wreg free
  3546   002126  C041  F051         	movff	?___fladd,___fltol@f1
  3547   00212A  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  3548   00212E  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  3549   002132  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  3550   002136  EC47  F01B         	call	___fltol	;wreg free
  3551   00213A  C051  F096         	movff	?___fltol,___rem_pio2f@n
  3552   00213E  C052  F097         	movff	?___fltol+1,___rem_pio2f@n+1
  3553   002142  C053  F098         	movff	?___fltol+2,___rem_pio2f@n+2
  3554   002146  C054  F099         	movff	?___fltol+3,___rem_pio2f@n+3
  3555   00214A  C096  F001         	movff	___rem_pio2f@n,___xxtofl@val
  3556   00214E  C097  F002         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  3557   002152  C098  F003         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  3558   002156  C099  F004         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  3559   00215A  0E01               	movlw	1
  3560   00215C  EC4A  F018         	call	___xxtofl
  3561   002160  C001  F08E         	movff	?___xxtofl,___rem_pio2f@fn
  3562   002164  C002  F08F         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  3563   002168  C003  F090         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  3564   00216C  C004  F091         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  3565   002170  0EDA               	movlw	218
  3566   002172  6E13               	movwf	___flmul@a^0,c
  3567   002174  0E0F               	movlw	15
  3568   002176  6E14               	movwf	(___flmul@a+1)^0,c
  3569   002178  0EC9               	movlw	201
  3570   00217A  6E15               	movwf	(___flmul@a+2)^0,c
  3571   00217C  0E3F               	movlw	63
  3572   00217E  6E16               	movwf	(___flmul@a+3)^0,c
  3573   002180  C08E  F00F         	movff	___rem_pio2f@fn,___flmul@b
  3574   002184  C08F  F010         	movff	___rem_pio2f@fn+1,___flmul@b+1
  3575   002188  C090  F011         	movff	___rem_pio2f@fn+2,___flmul@b+2
  3576   00218C  C091  F012         	movff	___rem_pio2f@fn+3,___flmul@b+3
  3577   002190  EC31  F00D         	call	___flmul	;wreg free
  3578   002194  C00F  F055         	movff	?___flmul,___flsub@a
  3579   002198  C010  F056         	movff	?___flmul+1,___flsub@a+1
  3580   00219C  C011  F057         	movff	?___flmul+2,___flsub@a+2
  3581   0021A0  C012  F058         	movff	?___flmul+3,___flsub@a+3
  3582   0021A4  C092  F051         	movff	___rem_pio2f@t,___flsub@b
  3583   0021A8  C093  F052         	movff	___rem_pio2f@t+1,___flsub@b+1
  3584   0021AC  C094  F053         	movff	___rem_pio2f@t+2,___flsub@b+2
  3585   0021B0  C095  F054         	movff	___rem_pio2f@t+3,___flsub@b+3
  3586   0021B4  ECC1  F01E         	call	___flsub	;wreg free
  3587   0021B8  C051  F085         	movff	?___flsub,___rem_pio2f$3126
  3588   0021BC  C052  F086         	movff	?___flsub+1,___rem_pio2f$3126+1
  3589   0021C0  C053  F087         	movff	?___flsub+2,___rem_pio2f$3126+2
  3590   0021C4  C054  F088         	movff	?___flsub+3,___rem_pio2f$3126+3
  3591   0021C8  C085  F051         	movff	___rem_pio2f$3126,___flsub@b
  3592   0021CC  C086  F052         	movff	___rem_pio2f$3126+1,___flsub@b+1
  3593   0021D0  C087  F053         	movff	___rem_pio2f$3126+2,___flsub@b+2
  3594   0021D4  C088  F054         	movff	___rem_pio2f$3126+3,___flsub@b+3
  3595   0021D8  0EA3               	movlw	163
  3596   0021DA  6E13               	movwf	___flmul@a^0,c
  3597   0021DC  0E85               	movlw	133
  3598   0021DE  6E14               	movwf	(___flmul@a+1)^0,c
  3599   0021E0  0E88               	movlw	136
  3600   0021E2  6E15               	movwf	(___flmul@a+2)^0,c
  3601   0021E4  0E32               	movlw	50
  3602   0021E6  6E16               	movwf	(___flmul@a+3)^0,c
  3603   0021E8  C08E  F00F         	movff	___rem_pio2f@fn,___flmul@b
  3604   0021EC  C08F  F010         	movff	___rem_pio2f@fn+1,___flmul@b+1
  3605   0021F0  C090  F011         	movff	___rem_pio2f@fn+2,___flmul@b+2
  3606   0021F4  C091  F012         	movff	___rem_pio2f@fn+3,___flmul@b+3
  3607   0021F8  EC31  F00D         	call	___flmul	;wreg free
  3608   0021FC  C00F  F055         	movff	?___flmul,___flsub@a
  3609   002200  C010  F056         	movff	?___flmul+1,___flsub@a+1
  3610   002204  C011  F057         	movff	?___flmul+2,___flsub@a+2
  3611   002208  C012  F058         	movff	?___flmul+3,___flsub@a+3
  3612   00220C  ECC1  F01E         	call	___flsub	;wreg free
  3613   002210  C051  F081         	movff	?___flsub,___rem_pio2f@ty
  3614   002214  C052  F082         	movff	?___flsub+1,___rem_pio2f@ty+1
  3615   002218  C053  F083         	movff	?___flsub+2,___rem_pio2f@ty+2
  3616   00221C  C054  F084         	movff	?___flsub+3,___rem_pio2f@ty+3
  3617   002220  0100               	movlb	0	; () banked
  3618   002222  5180               	movf	___rem_pio2f@y& (0+255),w,b
  3619   002224  6ED9               	movwf	fsr2l,c
  3620   002226  6ADA               	clrf	fsr2h,c
  3621   002228  C081  FFDE         	movff	___rem_pio2f@ty,postinc2
  3622   00222C  C082  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  3623   002230  C083  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  3624   002234  C084  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  3625   002238                     
  3626                           ; BSR set to: 0
  3627   002238  5189               	movf	___rem_pio2f@sign& (0+255),w,b
  3628   00223A  B4D8               	btfsc	status,2,c
  3629   00223C  EF22  F011         	goto	u3591
  3630   002240  EF24  F011         	goto	u3590
  3631   002244                     u3591:
  3632   002244  EF57  F010         	goto	l1163
  3633   002248                     u3590:
  3634   002248  EF30  F010         	goto	l3297
  3635   00224C                     l1164:
  3636                           
  3637                           ; BSR set to: 0
  3638   00224C  0012               	return		;funcret
  3639   00224E                     __end_of___rem_pio2f:
  3640                           	callstack 0
  3641                           
  3642 ;; *************** function _fabsf *****************
  3643 ;; Defined at:
  3644 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fabsf.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  x               4    0[COMRAM] float 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  u               4    4[COMRAM] struct .
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  4    0[COMRAM] float 
  3651 ;; Registers used:
  3652 ;;		status,2, status,0
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;Total ram usage:        8 bytes
  3663 ;; Hardware stack levels used: 1
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		___rem_pio2f
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text12
  3672   003F74                     __ptext12:
  3673                           	callstack 0
  3674   003F74                     _fabsf:
  3675                           	callstack 27
  3676   003F74  C0E1  F005         	movff	fabsf@F465,fabsf@u
  3677   003F78  C0E2  F006         	movff	fabsf@F465+1,fabsf@u+1
  3678   003F7C  C0E3  F007         	movff	fabsf@F465+2,fabsf@u+2
  3679   003F80  C0E4  F008         	movff	fabsf@F465+3,fabsf@u+3
  3680   003F84  C001  F005         	movff	fabsf@x,fabsf@u
  3681   003F88  C002  F006         	movff	fabsf@x+1,fabsf@u+1
  3682   003F8C  C003  F007         	movff	fabsf@x+2,fabsf@u+2
  3683   003F90  C004  F008         	movff	fabsf@x+3,fabsf@u+3
  3684   003F94  9E08               	bcf	(fabsf@u+3)^0,7,c
  3685   003F96  C005  F001         	movff	fabsf@u,?_fabsf
  3686   003F9A  C006  F002         	movff	fabsf@u+1,?_fabsf+1
  3687   003F9E  C007  F003         	movff	fabsf@u+2,?_fabsf+2
  3688   003FA2  C008  F004         	movff	fabsf@u+3,?_fabsf+3
  3689   003FA6  0012               	return		;funcret
  3690   003FA8                     __end_of_fabsf:
  3691                           	callstack 0
  3692                           
  3693 ;; *************** function ___xxtofl *****************
  3694 ;; Defined at:
  3695 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  sign            1    wreg     unsigned char 
  3698 ;;  val             4    0[COMRAM] long 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  sign            1    8[COMRAM] unsigned char 
  3701 ;;  arg             4   10[COMRAM] unsigned long 
  3702 ;;  exp             1    9[COMRAM] unsigned char 
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  4    0[COMRAM] unsigned char 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3712 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;Total ram usage:       14 bytes
  3717 ;; Hardware stack levels used: 1
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_runDAC
  3722 ;;		___rem_pio2f
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text13
  3727   003094                     __ptext13:
  3728                           	callstack 0
  3729   003094                     ___xxtofl:
  3730                           	callstack 27
  3731                           
  3732                           ;incstack = 0
  3733                           ;___xxtofl@sign stored from wreg
  3734   003094  6E09               	movwf	___xxtofl@sign^0,c
  3735   003096  5009               	movf	___xxtofl@sign^0,w,c
  3736   003098  B4D8               	btfsc	status,2,c
  3737   00309A  EF51  F018         	goto	u3321
  3738   00309E  EF53  F018         	goto	u3320
  3739   0030A2                     u3321:
  3740   0030A2  EF75  F018         	goto	l946
  3741   0030A6                     u3320:
  3742   0030A6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3743   0030A8  EF5A  F018         	goto	u3330
  3744   0030AC  EF58  F018         	goto	u3331
  3745   0030B0                     u3331:
  3746   0030B0  EF75  F018         	goto	l946
  3747   0030B4                     u3330:
  3748   0030B4  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3749   0030B8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3750   0030BC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3751   0030C0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3752   0030C4  1E05               	comf	??___xxtofl^0,f,c
  3753   0030C6  1E06               	comf	(??___xxtofl+1)^0,f,c
  3754   0030C8  1E07               	comf	(??___xxtofl+2)^0,f,c
  3755   0030CA  1E08               	comf	(??___xxtofl+3)^0,f,c
  3756   0030CC  2A05               	incf	??___xxtofl^0,f,c
  3757   0030CE  0E00               	movlw	0
  3758   0030D0  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3759   0030D2  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3760   0030D4  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3761   0030D6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3762   0030DA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3763   0030DE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3764   0030E2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3765   0030E6  EF7D  F018         	goto	l3133
  3766   0030EA                     l946:
  3767   0030EA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3768   0030EE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3769   0030F2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3770   0030F6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3771   0030FA                     l3133:
  3772   0030FA  5001               	movf	___xxtofl@val^0,w,c
  3773   0030FC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3774   0030FE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3775   003100  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3776   003102  A4D8               	btfss	status,2,c
  3777   003104  EF86  F018         	goto	u3341
  3778   003108  EF88  F018         	goto	u3340
  3779   00310C                     u3341:
  3780   00310C  EF92  F018         	goto	l3139
  3781   003110                     u3340:
  3782   003110  0E00               	movlw	0
  3783   003112  6E01               	movwf	?___xxtofl^0,c
  3784   003114  0E00               	movlw	0
  3785   003116  6E02               	movwf	(?___xxtofl+1)^0,c
  3786   003118  0E00               	movlw	0
  3787   00311A  6E03               	movwf	(?___xxtofl+2)^0,c
  3788   00311C  0E00               	movlw	0
  3789   00311E  6E04               	movwf	(?___xxtofl+3)^0,c
  3790   003120  EF23  F019         	goto	l949
  3791   003124                     l3139:
  3792   003124  0E96               	movlw	150
  3793   003126  6E0A               	movwf	___xxtofl@exp^0,c
  3794   003128  EF9C  F018         	goto	l3143
  3795   00312C                     l3141:
  3796   00312C  2A0A               	incf	___xxtofl@exp^0,f,c
  3797   00312E  90D8               	bcf	status,0,c
  3798   003130  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3799   003132  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3800   003134  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3801   003136  320B               	rrcf	___xxtofl@arg^0,f,c
  3802   003138                     l3143:
  3803   003138  0E00               	movlw	0
  3804   00313A  140B               	andwf	___xxtofl@arg^0,w,c
  3805   00313C  6E05               	movwf	??___xxtofl^0,c
  3806   00313E  0E00               	movlw	0
  3807   003140  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3808   003142  6E06               	movwf	(??___xxtofl+1)^0,c
  3809   003144  0E00               	movlw	0
  3810   003146  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3811   003148  6E07               	movwf	(??___xxtofl+2)^0,c
  3812   00314A  0EFE               	movlw	254
  3813   00314C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3814   00314E  6E08               	movwf	(??___xxtofl+3)^0,c
  3815   003150  5005               	movf	??___xxtofl^0,w,c
  3816   003152  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3817   003154  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3818   003156  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3819   003158  A4D8               	btfss	status,2,c
  3820   00315A  EFB1  F018         	goto	u3351
  3821   00315E  EFB3  F018         	goto	u3350
  3822   003162                     u3351:
  3823   003162  EF96  F018         	goto	l3141
  3824   003166                     u3350:
  3825   003166  EFC1  F018         	goto	l953
  3826   00316A                     l3145:
  3827   00316A  2A0A               	incf	___xxtofl@exp^0,f,c
  3828   00316C  0E01               	movlw	1
  3829   00316E  260B               	addwf	___xxtofl@arg^0,f,c
  3830   003170  0E00               	movlw	0
  3831   003172  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3832   003174  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3833   003176  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3834   003178  90D8               	bcf	status,0,c
  3835   00317A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3836   00317C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3837   00317E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3838   003180  320B               	rrcf	___xxtofl@arg^0,f,c
  3839   003182                     l953:
  3840   003182  0E00               	movlw	0
  3841   003184  140B               	andwf	___xxtofl@arg^0,w,c
  3842   003186  6E05               	movwf	??___xxtofl^0,c
  3843   003188  0E00               	movlw	0
  3844   00318A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3845   00318C  6E06               	movwf	(??___xxtofl+1)^0,c
  3846   00318E  0E00               	movlw	0
  3847   003190  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3848   003192  6E07               	movwf	(??___xxtofl+2)^0,c
  3849   003194  0EFF               	movlw	255
  3850   003196  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3851   003198  6E08               	movwf	(??___xxtofl+3)^0,c
  3852   00319A  5005               	movf	??___xxtofl^0,w,c
  3853   00319C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3854   00319E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3855   0031A0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3856   0031A2  A4D8               	btfss	status,2,c
  3857   0031A4  EFD6  F018         	goto	u3361
  3858   0031A8  EFD8  F018         	goto	u3360
  3859   0031AC                     u3361:
  3860   0031AC  EFB5  F018         	goto	l3145
  3861   0031B0                     u3360:
  3862   0031B0  EFE0  F018         	goto	l3153
  3863   0031B4                     l3151:
  3864   0031B4  060A               	decf	___xxtofl@exp^0,f,c
  3865   0031B6  90D8               	bcf	status,0,c
  3866   0031B8  360B               	rlcf	___xxtofl@arg^0,f,c
  3867   0031BA  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3868   0031BC  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3869   0031BE  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3870   0031C0                     l3153:
  3871   0031C0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3872   0031C2  EFE5  F018         	goto	u3371
  3873   0031C6  EFE7  F018         	goto	u3370
  3874   0031CA                     u3371:
  3875   0031CA  EFEF  F018         	goto	l960
  3876   0031CE                     u3370:
  3877   0031CE  0E02               	movlw	2
  3878   0031D0  600A               	cpfslt	___xxtofl@exp^0,c
  3879   0031D2  EFED  F018         	goto	u3381
  3880   0031D6  EFEF  F018         	goto	u3380
  3881   0031DA                     u3381:
  3882   0031DA  EFDA  F018         	goto	l3151
  3883   0031DE                     u3380:
  3884   0031DE                     l960:
  3885   0031DE  B00A               	btfsc	___xxtofl@exp^0,0,c
  3886   0031E0  EFF4  F018         	goto	u3391
  3887   0031E4  EFF6  F018         	goto	u3390
  3888   0031E8                     u3391:
  3889   0031E8  EFF7  F018         	goto	l3159
  3890   0031EC                     u3390:
  3891   0031EC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3892   0031EE                     l3159:
  3893   0031EE  90D8               	bcf	status,0,c
  3894   0031F0  320A               	rrcf	___xxtofl@exp^0,f,c
  3895   0031F2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3896   0031F6  6A06               	clrf	(??___xxtofl+1)^0,c
  3897   0031F8  6A07               	clrf	(??___xxtofl+2)^0,c
  3898   0031FA  6A08               	clrf	(??___xxtofl+3)^0,c
  3899   0031FC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3900   003200  6A07               	clrf	(??___xxtofl+2)^0,c
  3901   003202  6A06               	clrf	(??___xxtofl+1)^0,c
  3902   003204  6A05               	clrf	??___xxtofl^0,c
  3903   003206  5005               	movf	??___xxtofl^0,w,c
  3904   003208  120B               	iorwf	___xxtofl@arg^0,f,c
  3905   00320A  5006               	movf	(??___xxtofl+1)^0,w,c
  3906   00320C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3907   00320E  5007               	movf	(??___xxtofl+2)^0,w,c
  3908   003210  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3909   003212  5008               	movf	(??___xxtofl+3)^0,w,c
  3910   003214  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3911   003216  5009               	movf	___xxtofl@sign^0,w,c
  3912   003218  B4D8               	btfsc	status,2,c
  3913   00321A  EF11  F019         	goto	u3401
  3914   00321E  EF13  F019         	goto	u3400
  3915   003222                     u3401:
  3916   003222  EF1B  F019         	goto	l3169
  3917   003226                     u3400:
  3918   003226  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3919   003228  EF1A  F019         	goto	u3410
  3920   00322C  EF18  F019         	goto	u3411
  3921   003230                     u3411:
  3922   003230  EF1B  F019         	goto	l3169
  3923   003234                     u3410:
  3924   003234  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3925   003236                     l3169:
  3926   003236  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3927   00323A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3928   00323E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3929   003242  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3930   003246                     l949:
  3931   003246  0012               	return		;funcret
  3932   003248                     __end_of___xxtofl:
  3933                           	callstack 0
  3934                           
  3935 ;; *************** function ___fltol *****************
  3936 ;; Defined at:
  3937 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;  f1              4   80[COMRAM] unsigned char 
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;  exp1            1   89[COMRAM] unsigned char 
  3942 ;;  sign1           1   88[COMRAM] unsigned char 
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  4   80[COMRAM] long 
  3945 ;; Registers used:
  3946 ;;		wreg, status,2, status,0
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3952 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;Total ram usage:       10 bytes
  3957 ;; Hardware stack levels used: 1
  3958 ;; This function calls:
  3959 ;;		Nothing
  3960 ;; This function is called by:
  3961 ;;		_runDAC
  3962 ;;		___rem_pio2f
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text14
  3967   00368E                     __ptext14:
  3968                           	callstack 0
  3969   00368E                     ___fltol:
  3970                           	callstack 27
  3971   00368E  3453               	rlcf	(___fltol@f1+2)^0,w,c
  3972   003690  3454               	rlcf	(___fltol@f1+3)^0,w,c
  3973   003692  6E5A               	movwf	___fltol@exp1^0,c
  3974   003694  505A               	movf	___fltol@exp1^0,w,c
  3975   003696  A4D8               	btfss	status,2,c
  3976   003698  EF50  F01B         	goto	u3251
  3977   00369C  EF52  F01B         	goto	u3250
  3978   0036A0                     u3251:
  3979   0036A0  EF5C  F01B         	goto	l3089
  3980   0036A4                     u3250:
  3981   0036A4                     l3085:
  3982   0036A4  0E00               	movlw	0
  3983   0036A6  6E51               	movwf	?___fltol^0,c
  3984   0036A8  0E00               	movlw	0
  3985   0036AA  6E52               	movwf	(?___fltol+1)^0,c
  3986   0036AC  0E00               	movlw	0
  3987   0036AE  6E53               	movwf	(?___fltol+2)^0,c
  3988   0036B0  0E00               	movlw	0
  3989   0036B2  6E54               	movwf	(?___fltol+3)^0,c
  3990   0036B4  EFC9  F01B         	goto	l588
  3991   0036B8                     l3089:
  3992   0036B8  C051  F055         	movff	___fltol@f1,??___fltol
  3993   0036BC  C052  F056         	movff	___fltol@f1+1,??___fltol+1
  3994   0036C0  C053  F057         	movff	___fltol@f1+2,??___fltol+2
  3995   0036C4  C054  F058         	movff	___fltol@f1+3,??___fltol+3
  3996   0036C8  0E20               	movlw	32
  3997   0036CA  EF6C  F01B         	goto	u3260
  3998   0036CE                     u3265:
  3999   0036CE  90D8               	bcf	status,0,c
  4000   0036D0  3258               	rrcf	(??___fltol+3)^0,f,c
  4001   0036D2  3257               	rrcf	(??___fltol+2)^0,f,c
  4002   0036D4  3256               	rrcf	(??___fltol+1)^0,f,c
  4003   0036D6  3255               	rrcf	??___fltol^0,f,c
  4004   0036D8                     u3260:
  4005   0036D8  2EE8               	decfsz	wreg,f,c
  4006   0036DA  EF67  F01B         	goto	u3265
  4007   0036DE  5055               	movf	??___fltol^0,w,c
  4008   0036E0  6E59               	movwf	___fltol@sign1^0,c
  4009   0036E2  8E53               	bsf	(___fltol@f1+2)^0,7,c
  4010   0036E4  0EFF               	movlw	255
  4011   0036E6  1651               	andwf	___fltol@f1^0,f,c
  4012   0036E8  0EFF               	movlw	255
  4013   0036EA  1652               	andwf	(___fltol@f1+1)^0,f,c
  4014   0036EC  0EFF               	movlw	255
  4015   0036EE  1653               	andwf	(___fltol@f1+2)^0,f,c
  4016   0036F0  0E00               	movlw	0
  4017   0036F2  1654               	andwf	(___fltol@f1+3)^0,f,c
  4018   0036F4  0E96               	movlw	150
  4019   0036F6  5E5A               	subwf	___fltol@exp1^0,f,c
  4020   0036F8  BE5A               	btfsc	___fltol@exp1^0,7,c
  4021   0036FA  EF83  F01B         	goto	u3270
  4022   0036FE  EF81  F01B         	goto	u3271
  4023   003702                     u3271:
  4024   003702  EF99  F01B         	goto	l3109
  4025   003706                     u3270:
  4026   003706  505A               	movf	___fltol@exp1^0,w,c
  4027   003708  0A80               	xorlw	128
  4028   00370A  0F97               	addlw	151
  4029   00370C  B0D8               	btfsc	status,0,c
  4030   00370E  EF8B  F01B         	goto	u3281
  4031   003712  EF8D  F01B         	goto	u3280
  4032   003716                     u3281:
  4033   003716  EF8F  F01B         	goto	l3105
  4034   00371A                     u3280:
  4035   00371A  EF52  F01B         	goto	l3085
  4036   00371E                     l3105:
  4037   00371E  90D8               	bcf	status,0,c
  4038   003720  3254               	rrcf	(___fltol@f1+3)^0,f,c
  4039   003722  3253               	rrcf	(___fltol@f1+2)^0,f,c
  4040   003724  3252               	rrcf	(___fltol@f1+1)^0,f,c
  4041   003726  3251               	rrcf	___fltol@f1^0,f,c
  4042   003728  3E5A               	incfsz	___fltol@exp1^0,f,c
  4043   00372A  EF8F  F01B         	goto	l3105
  4044   00372E  EFB1  F01B         	goto	l3119
  4045   003732                     l3109:
  4046   003732  0E1F               	movlw	31
  4047   003734  645A               	cpfsgt	___fltol@exp1^0,c
  4048   003736  EF9F  F01B         	goto	u3291
  4049   00373A  EFA1  F01B         	goto	u3290
  4050   00373E                     u3291:
  4051   00373E  EFA9  F01B         	goto	l3117
  4052   003742                     u3290:
  4053   003742  EF52  F01B         	goto	l3085
  4054   003746                     l3115:
  4055   003746  90D8               	bcf	status,0,c
  4056   003748  3651               	rlcf	___fltol@f1^0,f,c
  4057   00374A  3652               	rlcf	(___fltol@f1+1)^0,f,c
  4058   00374C  3653               	rlcf	(___fltol@f1+2)^0,f,c
  4059   00374E  3654               	rlcf	(___fltol@f1+3)^0,f,c
  4060   003750  065A               	decf	___fltol@exp1^0,f,c
  4061   003752                     l3117:
  4062   003752  505A               	movf	___fltol@exp1^0,w,c
  4063   003754  A4D8               	btfss	status,2,c
  4064   003756  EFAF  F01B         	goto	u3301
  4065   00375A  EFB1  F01B         	goto	u3300
  4066   00375E                     u3301:
  4067   00375E  EFA3  F01B         	goto	l3115
  4068   003762                     u3300:
  4069   003762                     l3119:
  4070   003762  5059               	movf	___fltol@sign1^0,w,c
  4071   003764  B4D8               	btfsc	status,2,c
  4072   003766  EFB7  F01B         	goto	u3311
  4073   00376A  EFB9  F01B         	goto	u3310
  4074   00376E                     u3311:
  4075   00376E  EFC1  F01B         	goto	l3123
  4076   003772                     u3310:
  4077   003772  1E54               	comf	(___fltol@f1+3)^0,f,c
  4078   003774  1E53               	comf	(___fltol@f1+2)^0,f,c
  4079   003776  1E52               	comf	(___fltol@f1+1)^0,f,c
  4080   003778  6C51               	negf	___fltol@f1^0,c
  4081   00377A  0E00               	movlw	0
  4082   00377C  2252               	addwfc	(___fltol@f1+1)^0,f,c
  4083   00377E  2253               	addwfc	(___fltol@f1+2)^0,f,c
  4084   003780  2254               	addwfc	(___fltol@f1+3)^0,f,c
  4085   003782                     l3123:
  4086   003782  C051  F051         	movff	___fltol@f1,?___fltol
  4087   003786  C052  F052         	movff	___fltol@f1+1,?___fltol+1
  4088   00378A  C053  F053         	movff	___fltol@f1+2,?___fltol+2
  4089   00378E  C054  F054         	movff	___fltol@f1+3,?___fltol+3
  4090   003792                     l588:
  4091   003792  0012               	return		;funcret
  4092   003794                     __end_of___fltol:
  4093                           	callstack 0
  4094                           
  4095 ;; *************** function ___flsub *****************
  4096 ;; Defined at:
  4097 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  b               4   80[COMRAM] long 
  4100 ;;  a               4   84[COMRAM] long 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;		None
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  4   80[COMRAM] long 
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4112 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;Total ram usage:        8 bytes
  4117 ;; Hardware stack levels used: 1
  4118 ;; Hardware stack levels required when called: 1
  4119 ;; This function calls:
  4120 ;;		___fladd
  4121 ;; This function is called by:
  4122 ;;		___rem_pio2f
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text15
  4127   003D82                     __ptext15:
  4128                           	callstack 0
  4129   003D82                     ___flsub:
  4130                           	callstack 26
  4131   003D82  0E00               	movlw	0
  4132   003D84  1A55               	xorwf	___flsub@a^0,f,c
  4133   003D86  0E00               	movlw	0
  4134   003D88  1A56               	xorwf	(___flsub@a+1)^0,f,c
  4135   003D8A  0E00               	movlw	0
  4136   003D8C  1A57               	xorwf	(___flsub@a+2)^0,f,c
  4137   003D8E  0E80               	movlw	128
  4138   003D90  1A58               	xorwf	(___flsub@a+3)^0,f,c
  4139   003D92  C051  F041         	movff	___flsub@b,___fladd@b
  4140   003D96  C052  F042         	movff	___flsub@b+1,___fladd@b+1
  4141   003D9A  C053  F043         	movff	___flsub@b+2,___fladd@b+2
  4142   003D9E  C054  F044         	movff	___flsub@b+3,___fladd@b+3
  4143   003DA2  C055  F045         	movff	___flsub@a,___fladd@a
  4144   003DA6  C056  F046         	movff	___flsub@a+1,___fladd@a+1
  4145   003DAA  C057  F047         	movff	___flsub@a+2,___fladd@a+2
  4146   003DAE  C058  F048         	movff	___flsub@a+3,___fladd@a+3
  4147   003DB2  ECD1  F00A         	call	___fladd	;wreg free
  4148   003DB6  C041  F051         	movff	?___fladd,?___flsub
  4149   003DBA  C042  F052         	movff	?___fladd+1,?___flsub+1
  4150   003DBE  C043  F053         	movff	?___fladd+2,?___flsub+2
  4151   003DC2  C044  F054         	movff	?___fladd+3,?___flsub+3
  4152   003DC6  0012               	return		;funcret
  4153   003DC8                     __end_of___flsub:
  4154                           	callstack 0
  4155                           
  4156 ;; *************** function ___flneg *****************
  4157 ;; Defined at:
  4158 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  f1              4   24[BANK0 ] long 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;		None
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  4   24[BANK0 ] long 
  4165 ;; Registers used:
  4166 ;;		wreg, status,2, status,0
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4172 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;Total ram usage:        4 bytes
  4177 ;; Hardware stack levels used: 1
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_sinf
  4182 ;;		___rem_pio2f
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text16
  4187   003ECE                     __ptext16:
  4188                           	callstack 0
  4189   003ECE                     ___flneg:
  4190                           	callstack 27
  4191   003ECE  0100               	movlb	0	; () banked
  4192   003ED0  5178               	movf	___flneg@f1& (0+255),w,b
  4193   003ED2  1179               	iorwf	(___flneg@f1+1)& (0+255),w,b
  4194   003ED4  117A               	iorwf	(___flneg@f1+2)& (0+255),w,b
  4195   003ED6  117B               	iorwf	(___flneg@f1+3)& (0+255),w,b
  4196   003ED8  B4D8               	btfsc	status,2,c
  4197   003EDA  EF71  F01F         	goto	u3241
  4198   003EDE  EF73  F01F         	goto	u3240
  4199   003EE2                     u3241:
  4200   003EE2  EF7B  F01F         	goto	l3079
  4201   003EE6                     u3240:
  4202   003EE6                     
  4203                           ; BSR set to: 0
  4204   003EE6  0E00               	movlw	0
  4205   003EE8  1B78               	xorwf	___flneg@f1& (0+255),f,b
  4206   003EEA  0E00               	movlw	0
  4207   003EEC  1B79               	xorwf	(___flneg@f1+1)& (0+255),f,b
  4208   003EEE  0E00               	movlw	0
  4209   003EF0  1B7A               	xorwf	(___flneg@f1+2)& (0+255),f,b
  4210   003EF2  0E80               	movlw	128
  4211   003EF4  1B7B               	xorwf	(___flneg@f1+3)& (0+255),f,b
  4212   003EF6                     l3079:
  4213                           
  4214                           ; BSR set to: 0
  4215   003EF6  C078  F078         	movff	___flneg@f1,?___flneg
  4216   003EFA  C079  F079         	movff	___flneg@f1+1,?___flneg+1
  4217   003EFE  C07A  F07A         	movff	___flneg@f1+2,?___flneg+2
  4218   003F02  C07B  F07B         	movff	___flneg@f1+3,?___flneg+3
  4219   003F06                     
  4220                           ; BSR set to: 0
  4221   003F06  0012               	return		;funcret
  4222   003F08                     __end_of___flneg:
  4223                           	callstack 0
  4224                           
  4225 ;; *************** function ___cosdf *****************
  4226 ;; Defined at:
  4227 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__cosdf.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  x               4   80[COMRAM] long 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  z               4   20[BANK0 ] long 
  4232 ;;  w               4   16[BANK0 ] long 
  4233 ;;  r               4    0[BANK0 ] long 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  4   80[COMRAM] float 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;Total ram usage:       28 bytes
  4248 ;; Hardware stack levels used: 1
  4249 ;; Hardware stack levels required when called: 1
  4250 ;; This function calls:
  4251 ;;		___fladd
  4252 ;;		___flmul
  4253 ;; This function is called by:
  4254 ;;		_sinf
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text17
  4259   002CBA                     __ptext17:
  4260                           	callstack 0
  4261   002CBA                     ___cosdf:
  4262                           	callstack 27
  4263   002CBA  C051  F00F         	movff	___cosdf@x,___flmul@b
  4264   002CBE  C052  F010         	movff	___cosdf@x+1,___flmul@b+1
  4265   002CC2  C053  F011         	movff	___cosdf@x+2,___flmul@b+2
  4266   002CC6  C054  F012         	movff	___cosdf@x+3,___flmul@b+3
  4267   002CCA  C051  F013         	movff	___cosdf@x,___flmul@a
  4268   002CCE  C052  F014         	movff	___cosdf@x+1,___flmul@a+1
  4269   002CD2  C053  F015         	movff	___cosdf@x+2,___flmul@a+2
  4270   002CD6  C054  F016         	movff	___cosdf@x+3,___flmul@a+3
  4271   002CDA  EC31  F00D         	call	___flmul	;wreg free
  4272   002CDE  C00F  F074         	movff	?___flmul,___cosdf@z
  4273   002CE2  C010  F075         	movff	?___flmul+1,___cosdf@z+1
  4274   002CE6  C011  F076         	movff	?___flmul+2,___cosdf@z+2
  4275   002CEA  C012  F077         	movff	?___flmul+3,___cosdf@z+3
  4276   002CEE  C074  F00F         	movff	___cosdf@z,___flmul@b
  4277   002CF2  C075  F010         	movff	___cosdf@z+1,___flmul@b+1
  4278   002CF6  C076  F011         	movff	___cosdf@z+2,___flmul@b+2
  4279   002CFA  C077  F012         	movff	___cosdf@z+3,___flmul@b+3
  4280   002CFE  C074  F013         	movff	___cosdf@z,___flmul@a
  4281   002D02  C075  F014         	movff	___cosdf@z+1,___flmul@a+1
  4282   002D06  C076  F015         	movff	___cosdf@z+2,___flmul@a+2
  4283   002D0A  C077  F016         	movff	___cosdf@z+3,___flmul@a+3
  4284   002D0E  EC31  F00D         	call	___flmul	;wreg free
  4285   002D12  C00F  F070         	movff	?___flmul,___cosdf@w
  4286   002D16  C010  F071         	movff	?___flmul+1,___cosdf@w+1
  4287   002D1A  C011  F072         	movff	?___flmul+2,___cosdf@w+2
  4288   002D1E  C012  F073         	movff	?___flmul+3,___cosdf@w+3
  4289   002D22  0E17               	movlw	23
  4290   002D24  6E13               	movwf	___flmul@a^0,c
  4291   002D26  0E9A               	movlw	154
  4292   002D28  6E14               	movwf	(___flmul@a+1)^0,c
  4293   002D2A  0ECC               	movlw	204
  4294   002D2C  6E15               	movwf	(___flmul@a+2)^0,c
  4295   002D2E  0E37               	movlw	55
  4296   002D30  6E16               	movwf	(___flmul@a+3)^0,c
  4297   002D32  C074  F00F         	movff	___cosdf@z,___flmul@b
  4298   002D36  C075  F010         	movff	___cosdf@z+1,___flmul@b+1
  4299   002D3A  C076  F011         	movff	___cosdf@z+2,___flmul@b+2
  4300   002D3E  C077  F012         	movff	___cosdf@z+3,___flmul@b+3
  4301   002D42  EC31  F00D         	call	___flmul	;wreg free
  4302   002D46  C00F  F041         	movff	?___flmul,___fladd@b
  4303   002D4A  C010  F042         	movff	?___flmul+1,___fladd@b+1
  4304   002D4E  C011  F043         	movff	?___flmul+2,___fladd@b+2
  4305   002D52  C012  F044         	movff	?___flmul+3,___fladd@b+3
  4306   002D56  0E3F               	movlw	63
  4307   002D58  6E45               	movwf	___fladd@a^0,c
  4308   002D5A  0E04               	movlw	4
  4309   002D5C  6E46               	movwf	(___fladd@a+1)^0,c
  4310   002D5E  0EB6               	movlw	182
  4311   002D60  6E47               	movwf	(___fladd@a+2)^0,c
  4312   002D62  0EBA               	movlw	186
  4313   002D64  6E48               	movwf	(___fladd@a+3)^0,c
  4314   002D66  ECD1  F00A         	call	___fladd	;wreg free
  4315   002D6A  C041  F060         	movff	?___fladd,___cosdf@r
  4316   002D6E  C042  F061         	movff	?___fladd+1,___cosdf@r+1
  4317   002D72  C043  F062         	movff	?___fladd+2,___cosdf@r+2
  4318   002D76  C044  F063         	movff	?___fladd+3,___cosdf@r+3
  4319   002D7A  0E00               	movlw	0
  4320   002D7C  6E45               	movwf	___fladd@a^0,c
  4321   002D7E  0E00               	movlw	0
  4322   002D80  6E46               	movwf	(___fladd@a+1)^0,c
  4323   002D82  0E80               	movlw	128
  4324   002D84  6E47               	movwf	(___fladd@a+2)^0,c
  4325   002D86  0E3F               	movlw	63
  4326   002D88  6E48               	movwf	(___fladd@a+3)^0,c
  4327   002D8A  0E00               	movlw	0
  4328   002D8C  6E13               	movwf	___flmul@a^0,c
  4329   002D8E  0E00               	movlw	0
  4330   002D90  6E14               	movwf	(___flmul@a+1)^0,c
  4331   002D92  0E00               	movlw	0
  4332   002D94  6E15               	movwf	(___flmul@a+2)^0,c
  4333   002D96  0EBF               	movlw	191
  4334   002D98  6E16               	movwf	(___flmul@a+3)^0,c
  4335   002D9A  C074  F00F         	movff	___cosdf@z,___flmul@b
  4336   002D9E  C075  F010         	movff	___cosdf@z+1,___flmul@b+1
  4337   002DA2  C076  F011         	movff	___cosdf@z+2,___flmul@b+2
  4338   002DA6  C077  F012         	movff	___cosdf@z+3,___flmul@b+3
  4339   002DAA  EC31  F00D         	call	___flmul	;wreg free
  4340   002DAE  C00F  F041         	movff	?___flmul,___fladd@b
  4341   002DB2  C010  F042         	movff	?___flmul+1,___fladd@b+1
  4342   002DB6  C011  F043         	movff	?___flmul+2,___fladd@b+2
  4343   002DBA  C012  F044         	movff	?___flmul+3,___fladd@b+3
  4344   002DBE  ECD1  F00A         	call	___fladd	;wreg free
  4345   002DC2  C041  F064         	movff	?___fladd,___cosdf$3123
  4346   002DC6  C042  F065         	movff	?___fladd+1,___cosdf$3123+1
  4347   002DCA  C043  F066         	movff	?___fladd+2,___cosdf$3123+2
  4348   002DCE  C044  F067         	movff	?___fladd+3,___cosdf$3123+3
  4349   002DD2  C074  F013         	movff	___cosdf@z,___flmul@a
  4350   002DD6  C075  F014         	movff	___cosdf@z+1,___flmul@a+1
  4351   002DDA  C076  F015         	movff	___cosdf@z+2,___flmul@a+2
  4352   002DDE  C077  F016         	movff	___cosdf@z+3,___flmul@a+3
  4353   002DE2  C070  F00F         	movff	___cosdf@w,___flmul@b
  4354   002DE6  C071  F010         	movff	___cosdf@w+1,___flmul@b+1
  4355   002DEA  C072  F011         	movff	___cosdf@w+2,___flmul@b+2
  4356   002DEE  C073  F012         	movff	___cosdf@w+3,___flmul@b+3
  4357   002DF2  EC31  F00D         	call	___flmul	;wreg free
  4358   002DF6  C00F  F068         	movff	?___flmul,___cosdf$3124
  4359   002DFA  C010  F069         	movff	?___flmul+1,___cosdf$3124+1
  4360   002DFE  C011  F06A         	movff	?___flmul+2,___cosdf$3124+2
  4361   002E02  C012  F06B         	movff	?___flmul+3,___cosdf$3124+3
  4362   002E06  0E9F               	movlw	159
  4363   002E08  6E13               	movwf	___flmul@a^0,c
  4364   002E0A  0EAA               	movlw	170
  4365   002E0C  6E14               	movwf	(___flmul@a+1)^0,c
  4366   002E0E  0E2A               	movlw	42
  4367   002E10  6E15               	movwf	(___flmul@a+2)^0,c
  4368   002E12  0E3D               	movlw	61
  4369   002E14  6E16               	movwf	(___flmul@a+3)^0,c
  4370   002E16  C070  F00F         	movff	___cosdf@w,___flmul@b
  4371   002E1A  C071  F010         	movff	___cosdf@w+1,___flmul@b+1
  4372   002E1E  C072  F011         	movff	___cosdf@w+2,___flmul@b+2
  4373   002E22  C073  F012         	movff	___cosdf@w+3,___flmul@b+3
  4374   002E26  EC31  F00D         	call	___flmul	;wreg free
  4375   002E2A  C00F  F045         	movff	?___flmul,___fladd@a
  4376   002E2E  C010  F046         	movff	?___flmul+1,___fladd@a+1
  4377   002E32  C011  F047         	movff	?___flmul+2,___fladd@a+2
  4378   002E36  C012  F048         	movff	?___flmul+3,___fladd@a+3
  4379   002E3A  C064  F041         	movff	___cosdf$3123,___fladd@b
  4380   002E3E  C065  F042         	movff	___cosdf$3123+1,___fladd@b+1
  4381   002E42  C066  F043         	movff	___cosdf$3123+2,___fladd@b+2
  4382   002E46  C067  F044         	movff	___cosdf$3123+3,___fladd@b+3
  4383   002E4A  ECD1  F00A         	call	___fladd	;wreg free
  4384   002E4E  C041  F06C         	movff	?___fladd,___cosdf$3125
  4385   002E52  C042  F06D         	movff	?___fladd+1,___cosdf$3125+1
  4386   002E56  C043  F06E         	movff	?___fladd+2,___cosdf$3125+2
  4387   002E5A  C044  F06F         	movff	?___fladd+3,___cosdf$3125+3
  4388   002E5E  C06C  F041         	movff	___cosdf$3125,___fladd@b
  4389   002E62  C06D  F042         	movff	___cosdf$3125+1,___fladd@b+1
  4390   002E66  C06E  F043         	movff	___cosdf$3125+2,___fladd@b+2
  4391   002E6A  C06F  F044         	movff	___cosdf$3125+3,___fladd@b+3
  4392   002E6E  C060  F013         	movff	___cosdf@r,___flmul@a
  4393   002E72  C061  F014         	movff	___cosdf@r+1,___flmul@a+1
  4394   002E76  C062  F015         	movff	___cosdf@r+2,___flmul@a+2
  4395   002E7A  C063  F016         	movff	___cosdf@r+3,___flmul@a+3
  4396   002E7E  C068  F00F         	movff	___cosdf$3124,___flmul@b
  4397   002E82  C069  F010         	movff	___cosdf$3124+1,___flmul@b+1
  4398   002E86  C06A  F011         	movff	___cosdf$3124+2,___flmul@b+2
  4399   002E8A  C06B  F012         	movff	___cosdf$3124+3,___flmul@b+3
  4400   002E8E  EC31  F00D         	call	___flmul	;wreg free
  4401   002E92  C00F  F045         	movff	?___flmul,___fladd@a
  4402   002E96  C010  F046         	movff	?___flmul+1,___fladd@a+1
  4403   002E9A  C011  F047         	movff	?___flmul+2,___fladd@a+2
  4404   002E9E  C012  F048         	movff	?___flmul+3,___fladd@a+3
  4405   002EA2  ECD1  F00A         	call	___fladd	;wreg free
  4406   002EA6  C041  F051         	movff	?___fladd,?___cosdf
  4407   002EAA  C042  F052         	movff	?___fladd+1,?___cosdf+1
  4408   002EAE  C043  F053         	movff	?___fladd+2,?___cosdf+2
  4409   002EB2  C044  F054         	movff	?___fladd+3,?___cosdf+3
  4410   002EB6  0012               	return		;funcret
  4411   002EB8                     __end_of___cosdf:
  4412                           	callstack 0
  4413                           
  4414 ;; *************** function ___flmul *****************
  4415 ;; Defined at:
  4416 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  b               4   14[COMRAM] float 
  4419 ;;  a               4   18[COMRAM] float 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  prod            4   33[COMRAM] struct .
  4422 ;;  grs             4   27[COMRAM] unsigned long 
  4423 ;;  temp            2   37[COMRAM] struct .
  4424 ;;  bexp            1   32[COMRAM] unsigned char 
  4425 ;;  aexp            1   31[COMRAM] unsigned char 
  4426 ;;  sign            1   26[COMRAM] unsigned char 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  4   14[COMRAM] unsigned char 
  4429 ;; Registers used:
  4430 ;;		wreg, status,2, status,0, prodl, prodh
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4436 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;Total ram usage:       25 bytes
  4441 ;; Hardware stack levels used: 1
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_runDAC
  4446 ;;		___cosdf
  4447 ;;		___rem_pio2f
  4448 ;;		___sindf
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text18
  4453   001A62                     __ptext18:
  4454                           	callstack 0
  4455   001A62                     ___flmul:
  4456                           	callstack 27
  4457   001A62  5012               	movf	(___flmul@b+3)^0,w,c
  4458   001A64  0B80               	andlw	128
  4459   001A66  6E1B               	movwf	___flmul@sign^0,c
  4460   001A68  5012               	movf	(___flmul@b+3)^0,w,c
  4461   001A6A  2412               	addwf	(___flmul@b+3)^0,w,c
  4462   001A6C  6E21               	movwf	___flmul@bexp^0,c
  4463   001A6E  AE11               	btfss	(___flmul@b+2)^0,7,c
  4464   001A70  EF3C  F00D         	goto	u3051
  4465   001A74  EF3E  F00D         	goto	u3050
  4466   001A78                     u3051:
  4467   001A78  EF3F  F00D         	goto	l2945
  4468   001A7C                     u3050:
  4469   001A7C  8021               	bsf	___flmul@bexp^0,0,c
  4470   001A7E                     l2945:
  4471   001A7E  5021               	movf	___flmul@bexp^0,w,c
  4472   001A80  B4D8               	btfsc	status,2,c
  4473   001A82  EF45  F00D         	goto	u3061
  4474   001A86  EF47  F00D         	goto	u3060
  4475   001A8A                     u3061:
  4476   001A8A  EF5A  F00D         	goto	l2953
  4477   001A8E                     u3060:
  4478   001A8E  2821               	incf	___flmul@bexp^0,w,c
  4479   001A90  A4D8               	btfss	status,2,c
  4480   001A92  EF4D  F00D         	goto	u3071
  4481   001A96  EF4F  F00D         	goto	u3070
  4482   001A9A                     u3071:
  4483   001A9A  EF57  F00D         	goto	l2951
  4484   001A9E                     u3070:
  4485   001A9E  0E00               	movlw	0
  4486   001AA0  6E0F               	movwf	___flmul@b^0,c
  4487   001AA2  0E00               	movlw	0
  4488   001AA4  6E10               	movwf	(___flmul@b+1)^0,c
  4489   001AA6  0E00               	movlw	0
  4490   001AA8  6E11               	movwf	(___flmul@b+2)^0,c
  4491   001AAA  0E00               	movlw	0
  4492   001AAC  6E12               	movwf	(___flmul@b+3)^0,c
  4493   001AAE                     l2951:
  4494   001AAE  8E11               	bsf	(___flmul@b+2)^0,7,c
  4495   001AB0  EF62  F00D         	goto	l2955
  4496   001AB4                     l2953:
  4497   001AB4  0E00               	movlw	0
  4498   001AB6  6E0F               	movwf	___flmul@b^0,c
  4499   001AB8  0E00               	movlw	0
  4500   001ABA  6E10               	movwf	(___flmul@b+1)^0,c
  4501   001ABC  0E00               	movlw	0
  4502   001ABE  6E11               	movwf	(___flmul@b+2)^0,c
  4503   001AC0  0E00               	movlw	0
  4504   001AC2  6E12               	movwf	(___flmul@b+3)^0,c
  4505   001AC4                     l2955:
  4506   001AC4  5016               	movf	(___flmul@a+3)^0,w,c
  4507   001AC6  0B80               	andlw	128
  4508   001AC8  1A1B               	xorwf	___flmul@sign^0,f,c
  4509   001ACA  5016               	movf	(___flmul@a+3)^0,w,c
  4510   001ACC  2416               	addwf	(___flmul@a+3)^0,w,c
  4511   001ACE  6E20               	movwf	___flmul@aexp^0,c
  4512   001AD0  AE15               	btfss	(___flmul@a+2)^0,7,c
  4513   001AD2  EF6D  F00D         	goto	u3081
  4514   001AD6  EF6F  F00D         	goto	u3080
  4515   001ADA                     u3081:
  4516   001ADA  EF70  F00D         	goto	l2963
  4517   001ADE                     u3080:
  4518   001ADE  8020               	bsf	___flmul@aexp^0,0,c
  4519   001AE0                     l2963:
  4520   001AE0  5020               	movf	___flmul@aexp^0,w,c
  4521   001AE2  B4D8               	btfsc	status,2,c
  4522   001AE4  EF76  F00D         	goto	u3091
  4523   001AE8  EF78  F00D         	goto	u3090
  4524   001AEC                     u3091:
  4525   001AEC  EF8B  F00D         	goto	l2971
  4526   001AF0                     u3090:
  4527   001AF0  2820               	incf	___flmul@aexp^0,w,c
  4528   001AF2  A4D8               	btfss	status,2,c
  4529   001AF4  EF7E  F00D         	goto	u3101
  4530   001AF8  EF80  F00D         	goto	u3100
  4531   001AFC                     u3101:
  4532   001AFC  EF88  F00D         	goto	l2969
  4533   001B00                     u3100:
  4534   001B00  0E00               	movlw	0
  4535   001B02  6E13               	movwf	___flmul@a^0,c
  4536   001B04  0E00               	movlw	0
  4537   001B06  6E14               	movwf	(___flmul@a+1)^0,c
  4538   001B08  0E00               	movlw	0
  4539   001B0A  6E15               	movwf	(___flmul@a+2)^0,c
  4540   001B0C  0E00               	movlw	0
  4541   001B0E  6E16               	movwf	(___flmul@a+3)^0,c
  4542   001B10                     l2969:
  4543   001B10  8E15               	bsf	(___flmul@a+2)^0,7,c
  4544   001B12  EF93  F00D         	goto	l905
  4545   001B16                     l2971:
  4546   001B16  0E00               	movlw	0
  4547   001B18  6E13               	movwf	___flmul@a^0,c
  4548   001B1A  0E00               	movlw	0
  4549   001B1C  6E14               	movwf	(___flmul@a+1)^0,c
  4550   001B1E  0E00               	movlw	0
  4551   001B20  6E15               	movwf	(___flmul@a+2)^0,c
  4552   001B22  0E00               	movlw	0
  4553   001B24  6E16               	movwf	(___flmul@a+3)^0,c
  4554   001B26                     l905:
  4555   001B26  5020               	movf	___flmul@aexp^0,w,c
  4556   001B28  B4D8               	btfsc	status,2,c
  4557   001B2A  EF99  F00D         	goto	u3111
  4558   001B2E  EF9B  F00D         	goto	u3110
  4559   001B32                     u3111:
  4560   001B32  EFA3  F00D         	goto	l2975
  4561   001B36                     u3110:
  4562   001B36  5021               	movf	___flmul@bexp^0,w,c
  4563   001B38  A4D8               	btfss	status,2,c
  4564   001B3A  EFA1  F00D         	goto	u3121
  4565   001B3E  EFA3  F00D         	goto	u3120
  4566   001B42                     u3121:
  4567   001B42  EFAD  F00D         	goto	l2979
  4568   001B46                     u3120:
  4569   001B46                     l2975:
  4570   001B46  0E00               	movlw	0
  4571   001B48  6E0F               	movwf	?___flmul^0,c
  4572   001B4A  0E00               	movlw	0
  4573   001B4C  6E10               	movwf	(?___flmul+1)^0,c
  4574   001B4E  0E00               	movlw	0
  4575   001B50  6E11               	movwf	(?___flmul+2)^0,c
  4576   001B52  0E00               	movlw	0
  4577   001B54  6E12               	movwf	(?___flmul+3)^0,c
  4578   001B56  EF45  F00F         	goto	l909
  4579   001B5A                     l2979:
  4580   001B5A  5015               	movf	(___flmul@a+2)^0,w,c
  4581   001B5C  020F               	mulwf	___flmul@b^0,c
  4582   001B5E  CFF3 F026          	movff	prodl,___flmul@temp
  4583   001B62  CFF4 F027          	movff	prodh,___flmul@temp+1
  4584   001B66  5026               	movf	___flmul@temp^0,w,c
  4585   001B68  6E1C               	movwf	___flmul@grs^0,c
  4586   001B6A  6A1D               	clrf	(___flmul@grs+1)^0,c
  4587   001B6C  6A1E               	clrf	(___flmul@grs+2)^0,c
  4588   001B6E  6A1F               	clrf	(___flmul@grs+3)^0,c
  4589   001B70  5027               	movf	(___flmul@temp+1)^0,w,c
  4590   001B72  6E22               	movwf	___flmul@prod^0,c
  4591   001B74  6A23               	clrf	(___flmul@prod+1)^0,c
  4592   001B76  6A24               	clrf	(___flmul@prod+2)^0,c
  4593   001B78  6A25               	clrf	(___flmul@prod+3)^0,c
  4594   001B7A  5014               	movf	(___flmul@a+1)^0,w,c
  4595   001B7C  0210               	mulwf	(___flmul@b+1)^0,c
  4596   001B7E  CFF3 F026          	movff	prodl,___flmul@temp
  4597   001B82  CFF4 F027          	movff	prodh,___flmul@temp+1
  4598   001B86  5026               	movf	___flmul@temp^0,w,c
  4599   001B88  261C               	addwf	___flmul@grs^0,f,c
  4600   001B8A  0E00               	movlw	0
  4601   001B8C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4602   001B8E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4603   001B90  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4604   001B92  5027               	movf	(___flmul@temp+1)^0,w,c
  4605   001B94  2622               	addwf	___flmul@prod^0,f,c
  4606   001B96  0E00               	movlw	0
  4607   001B98  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4608   001B9A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4609   001B9C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4610   001B9E  5013               	movf	___flmul@a^0,w,c
  4611   001BA0  0211               	mulwf	(___flmul@b+2)^0,c
  4612   001BA2  CFF3 F026          	movff	prodl,___flmul@temp
  4613   001BA6  CFF4 F027          	movff	prodh,___flmul@temp+1
  4614   001BAA  5026               	movf	___flmul@temp^0,w,c
  4615   001BAC  261C               	addwf	___flmul@grs^0,f,c
  4616   001BAE  0E00               	movlw	0
  4617   001BB0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4618   001BB2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4619   001BB4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4620   001BB6  5027               	movf	(___flmul@temp+1)^0,w,c
  4621   001BB8  2622               	addwf	___flmul@prod^0,f,c
  4622   001BBA  0E00               	movlw	0
  4623   001BBC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4624   001BBE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4625   001BC0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4626   001BC2  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4627   001BC6  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4628   001BCA  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4629   001BCE  6A1C               	clrf	___flmul@grs^0,c
  4630   001BD0  5013               	movf	___flmul@a^0,w,c
  4631   001BD2  0210               	mulwf	(___flmul@b+1)^0,c
  4632   001BD4  CFF3 F026          	movff	prodl,___flmul@temp
  4633   001BD8  CFF4 F027          	movff	prodh,___flmul@temp+1
  4634   001BDC  5026               	movf	___flmul@temp^0,w,c
  4635   001BDE  261C               	addwf	___flmul@grs^0,f,c
  4636   001BE0  5027               	movf	(___flmul@temp+1)^0,w,c
  4637   001BE2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4638   001BE4  0E00               	movlw	0
  4639   001BE6  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4640   001BE8  0E00               	movlw	0
  4641   001BEA  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4642   001BEC  5014               	movf	(___flmul@a+1)^0,w,c
  4643   001BEE  020F               	mulwf	___flmul@b^0,c
  4644   001BF0  CFF3 F026          	movff	prodl,___flmul@temp
  4645   001BF4  CFF4 F027          	movff	prodh,___flmul@temp+1
  4646   001BF8  5026               	movf	___flmul@temp^0,w,c
  4647   001BFA  261C               	addwf	___flmul@grs^0,f,c
  4648   001BFC  5027               	movf	(___flmul@temp+1)^0,w,c
  4649   001BFE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4650   001C00  0E00               	movlw	0
  4651   001C02  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4652   001C04  0E00               	movlw	0
  4653   001C06  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4654   001C08  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4655   001C0C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4656   001C10  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4657   001C14  6A1C               	clrf	___flmul@grs^0,c
  4658   001C16  5013               	movf	___flmul@a^0,w,c
  4659   001C18  020F               	mulwf	___flmul@b^0,c
  4660   001C1A  CFF3 F026          	movff	prodl,___flmul@temp
  4661   001C1E  CFF4 F027          	movff	prodh,___flmul@temp+1
  4662   001C22  5026               	movf	___flmul@temp^0,w,c
  4663   001C24  261C               	addwf	___flmul@grs^0,f,c
  4664   001C26  5027               	movf	(___flmul@temp+1)^0,w,c
  4665   001C28  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4666   001C2A  0E00               	movlw	0
  4667   001C2C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4668   001C2E  0E00               	movlw	0
  4669   001C30  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4670   001C32  5015               	movf	(___flmul@a+2)^0,w,c
  4671   001C34  0210               	mulwf	(___flmul@b+1)^0,c
  4672   001C36  CFF3 F026          	movff	prodl,___flmul@temp
  4673   001C3A  CFF4 F027          	movff	prodh,___flmul@temp+1
  4674   001C3E  5026               	movf	___flmul@temp^0,w,c
  4675   001C40  2622               	addwf	___flmul@prod^0,f,c
  4676   001C42  5027               	movf	(___flmul@temp+1)^0,w,c
  4677   001C44  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4678   001C46  0E00               	movlw	0
  4679   001C48  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4680   001C4A  0E00               	movlw	0
  4681   001C4C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4682   001C4E  5014               	movf	(___flmul@a+1)^0,w,c
  4683   001C50  0211               	mulwf	(___flmul@b+2)^0,c
  4684   001C52  CFF3 F026          	movff	prodl,___flmul@temp
  4685   001C56  CFF4 F027          	movff	prodh,___flmul@temp+1
  4686   001C5A  5026               	movf	___flmul@temp^0,w,c
  4687   001C5C  2622               	addwf	___flmul@prod^0,f,c
  4688   001C5E  5027               	movf	(___flmul@temp+1)^0,w,c
  4689   001C60  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4690   001C62  0E00               	movlw	0
  4691   001C64  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4692   001C66  0E00               	movlw	0
  4693   001C68  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4694   001C6A  5015               	movf	(___flmul@a+2)^0,w,c
  4695   001C6C  0211               	mulwf	(___flmul@b+2)^0,c
  4696   001C6E  CFF3 F026          	movff	prodl,___flmul@temp
  4697   001C72  CFF4 F027          	movff	prodh,___flmul@temp+1
  4698   001C76  5026               	movf	___flmul@temp^0,w,c
  4699   001C78  6E17               	movwf	??___flmul^0,c
  4700   001C7A  5027               	movf	(___flmul@temp+1)^0,w,c
  4701   001C7C  6E18               	movwf	(??___flmul+1)^0,c
  4702   001C7E  6A19               	clrf	(??___flmul+2)^0,c
  4703   001C80  6A1A               	clrf	(??___flmul+3)^0,c
  4704   001C82  C019  F01A         	movff	??___flmul+2,??___flmul+3
  4705   001C86  C018  F019         	movff	??___flmul+1,??___flmul+2
  4706   001C8A  C017  F018         	movff	??___flmul,??___flmul+1
  4707   001C8E  6A17               	clrf	??___flmul^0,c
  4708   001C90  5017               	movf	??___flmul^0,w,c
  4709   001C92  2622               	addwf	___flmul@prod^0,f,c
  4710   001C94  5018               	movf	(??___flmul+1)^0,w,c
  4711   001C96  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4712   001C98  5019               	movf	(??___flmul+2)^0,w,c
  4713   001C9A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4714   001C9C  501A               	movf	(??___flmul+3)^0,w,c
  4715   001C9E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4716   001CA0  C01C  F017         	movff	___flmul@grs,??___flmul
  4717   001CA4  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  4718   001CA8  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  4719   001CAC  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  4720   001CB0  0E19               	movlw	25
  4721   001CB2  EF60  F00E         	goto	u3130
  4722   001CB6                     u3135:
  4723   001CB6  90D8               	bcf	status,0,c
  4724   001CB8  321A               	rrcf	(??___flmul+3)^0,f,c
  4725   001CBA  3219               	rrcf	(??___flmul+2)^0,f,c
  4726   001CBC  3218               	rrcf	(??___flmul+1)^0,f,c
  4727   001CBE  3217               	rrcf	??___flmul^0,f,c
  4728   001CC0                     u3130:
  4729   001CC0  2EE8               	decfsz	wreg,f,c
  4730   001CC2  EF5B  F00E         	goto	u3135
  4731   001CC6  5017               	movf	??___flmul^0,w,c
  4732   001CC8  2622               	addwf	___flmul@prod^0,f,c
  4733   001CCA  5018               	movf	(??___flmul+1)^0,w,c
  4734   001CCC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4735   001CCE  5019               	movf	(??___flmul+2)^0,w,c
  4736   001CD0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4737   001CD2  501A               	movf	(??___flmul+3)^0,w,c
  4738   001CD4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4739   001CD6  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4740   001CDA  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4741   001CDE  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4742   001CE2  6A1C               	clrf	___flmul@grs^0,c
  4743   001CE4  5020               	movf	___flmul@aexp^0,w,c
  4744   001CE6  C021  F017         	movff	___flmul@bexp,??___flmul
  4745   001CEA  6A18               	clrf	(??___flmul+1)^0,c
  4746   001CEC  2617               	addwf	??___flmul^0,f,c
  4747   001CEE  0E00               	movlw	0
  4748   001CF0  2218               	addwfc	(??___flmul+1)^0,f,c
  4749   001CF2  0E82               	movlw	130
  4750   001CF4  2417               	addwf	??___flmul^0,w,c
  4751   001CF6  6E26               	movwf	___flmul@temp^0,c
  4752   001CF8  0EFF               	movlw	255
  4753   001CFA  2018               	addwfc	(??___flmul+1)^0,w,c
  4754   001CFC  6E27               	movwf	(___flmul@temp+1)^0,c
  4755   001CFE  EF96  F00E         	goto	l3027
  4756   001D02                     l3021:
  4757   001D02  90D8               	bcf	status,0,c
  4758   001D04  3622               	rlcf	___flmul@prod^0,f,c
  4759   001D06  3623               	rlcf	(___flmul@prod+1)^0,f,c
  4760   001D08  3624               	rlcf	(___flmul@prod+2)^0,f,c
  4761   001D0A  3625               	rlcf	(___flmul@prod+3)^0,f,c
  4762   001D0C  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4763   001D0E  EF8B  F00E         	goto	u3141
  4764   001D12  EF8D  F00E         	goto	u3140
  4765   001D16                     u3141:
  4766   001D16  EF8E  F00E         	goto	l912
  4767   001D1A                     u3140:
  4768   001D1A  8022               	bsf	___flmul@prod^0,0,c
  4769   001D1C                     l912:
  4770   001D1C  90D8               	bcf	status,0,c
  4771   001D1E  361C               	rlcf	___flmul@grs^0,f,c
  4772   001D20  361D               	rlcf	(___flmul@grs+1)^0,f,c
  4773   001D22  361E               	rlcf	(___flmul@grs+2)^0,f,c
  4774   001D24  361F               	rlcf	(___flmul@grs+3)^0,f,c
  4775   001D26  0626               	decf	___flmul@temp^0,f,c
  4776   001D28  A0D8               	btfss	status,0,c
  4777   001D2A  0627               	decf	(___flmul@temp+1)^0,f,c
  4778   001D2C                     l3027:
  4779   001D2C  AE24               	btfss	(___flmul@prod+2)^0,7,c
  4780   001D2E  EF9B  F00E         	goto	u3151
  4781   001D32  EF9D  F00E         	goto	u3150
  4782   001D36                     u3151:
  4783   001D36  EF81  F00E         	goto	l3021
  4784   001D3A                     u3150:
  4785   001D3A  0E00               	movlw	0
  4786   001D3C  6E20               	movwf	___flmul@aexp^0,c
  4787   001D3E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4788   001D40  EFA4  F00E         	goto	u3161
  4789   001D44  EFA6  F00E         	goto	u3160
  4790   001D48                     u3161:
  4791   001D48  EFCA  F00E         	goto	l914
  4792   001D4C                     u3160:
  4793   001D4C  0EFF               	movlw	255
  4794   001D4E  141C               	andwf	___flmul@grs^0,w,c
  4795   001D50  6E17               	movwf	??___flmul^0,c
  4796   001D52  0EFF               	movlw	255
  4797   001D54  141D               	andwf	(___flmul@grs+1)^0,w,c
  4798   001D56  6E18               	movwf	(??___flmul+1)^0,c
  4799   001D58  0EFF               	movlw	255
  4800   001D5A  141E               	andwf	(___flmul@grs+2)^0,w,c
  4801   001D5C  6E19               	movwf	(??___flmul+2)^0,c
  4802   001D5E  0E7F               	movlw	127
  4803   001D60  141F               	andwf	(___flmul@grs+3)^0,w,c
  4804   001D62  6E1A               	movwf	(??___flmul+3)^0,c
  4805   001D64  5017               	movf	??___flmul^0,w,c
  4806   001D66  1018               	iorwf	(??___flmul+1)^0,w,c
  4807   001D68  1019               	iorwf	(??___flmul+2)^0,w,c
  4808   001D6A  101A               	iorwf	(??___flmul+3)^0,w,c
  4809   001D6C  B4D8               	btfsc	status,2,c
  4810   001D6E  EFBB  F00E         	goto	u3171
  4811   001D72  EFBD  F00E         	goto	u3170
  4812   001D76                     u3171:
  4813   001D76  EFC1  F00E         	goto	l915
  4814   001D7A                     u3170:
  4815   001D7A                     l3035:
  4816   001D7A  0E01               	movlw	1
  4817   001D7C  6E20               	movwf	___flmul@aexp^0,c
  4818   001D7E  EFCA  F00E         	goto	l914
  4819   001D82                     l915:
  4820   001D82  A022               	btfss	___flmul@prod^0,0,c
  4821   001D84  EFC6  F00E         	goto	u3181
  4822   001D88  EFC8  F00E         	goto	u3180
  4823   001D8C                     u3181:
  4824   001D8C  EFCA  F00E         	goto	l914
  4825   001D90                     u3180:
  4826   001D90  EFBD  F00E         	goto	l3035
  4827   001D94                     l914:
  4828   001D94  5020               	movf	___flmul@aexp^0,w,c
  4829   001D96  B4D8               	btfsc	status,2,c
  4830   001D98  EFD0  F00E         	goto	u3191
  4831   001D9C  EFD2  F00E         	goto	u3190
  4832   001DA0                     u3191:
  4833   001DA0  EFF6  F00E         	goto	l3047
  4834   001DA4                     u3190:
  4835   001DA4  0E01               	movlw	1
  4836   001DA6  2622               	addwf	___flmul@prod^0,f,c
  4837   001DA8  0E00               	movlw	0
  4838   001DAA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4839   001DAC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4840   001DAE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4841   001DB0  A025               	btfss	(___flmul@prod+3)^0,0,c
  4842   001DB2  EFDD  F00E         	goto	u3201
  4843   001DB6  EFDF  F00E         	goto	u3200
  4844   001DBA                     u3201:
  4845   001DBA  EFF6  F00E         	goto	l3047
  4846   001DBE                     u3200:
  4847   001DBE  C022  F017         	movff	___flmul@prod,??___flmul
  4848   001DC2  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4849   001DC6  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4850   001DCA  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4851   001DCE  341A               	rlcf	(??___flmul+3)^0,w,c
  4852   001DD0  321A               	rrcf	(??___flmul+3)^0,f,c
  4853   001DD2  3219               	rrcf	(??___flmul+2)^0,f,c
  4854   001DD4  3218               	rrcf	(??___flmul+1)^0,f,c
  4855   001DD6  3217               	rrcf	??___flmul^0,f,c
  4856   001DD8  C017  F022         	movff	??___flmul,___flmul@prod
  4857   001DDC  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4858   001DE0  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4859   001DE4  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4860   001DE8  4A26               	infsnz	___flmul@temp^0,f,c
  4861   001DEA  2A27               	incf	(___flmul@temp+1)^0,f,c
  4862   001DEC                     l3047:
  4863   001DEC  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4864   001DEE  EF01  F00F         	goto	u3211
  4865   001DF2  5027               	movf	(___flmul@temp+1)^0,w,c
  4866   001DF4  E108               	bnz	u3210
  4867   001DF6  2826               	incf	___flmul@temp^0,w,c
  4868   001DF8  A0D8               	btfss	status,0,c
  4869   001DFA  EF01  F00F         	goto	u3211
  4870   001DFE  EF03  F00F         	goto	u3210
  4871   001E02                     u3211:
  4872   001E02  EF0D  F00F         	goto	l3051
  4873   001E06                     u3210:
  4874   001E06  0E00               	movlw	0
  4875   001E08  6E22               	movwf	___flmul@prod^0,c
  4876   001E0A  0E00               	movlw	0
  4877   001E0C  6E23               	movwf	(___flmul@prod+1)^0,c
  4878   001E0E  0E80               	movlw	128
  4879   001E10  6E24               	movwf	(___flmul@prod+2)^0,c
  4880   001E12  0E7F               	movlw	127
  4881   001E14  6E25               	movwf	(___flmul@prod+3)^0,c
  4882   001E16  EF3B  F00F         	goto	l3063
  4883   001E1A                     l3051:
  4884   001E1A  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4885   001E1C  EF1A  F00F         	goto	u3220
  4886   001E20  5027               	movf	(___flmul@temp+1)^0,w,c
  4887   001E22  E106               	bnz	u3221
  4888   001E24  0426               	decf	___flmul@temp^0,w,c
  4889   001E26  B0D8               	btfsc	status,0,c
  4890   001E28  EF18  F00F         	goto	u3221
  4891   001E2C  EF1A  F00F         	goto	u3220
  4892   001E30                     u3221:
  4893   001E30  EF26  F00F         	goto	l922
  4894   001E34                     u3220:
  4895   001E34  0E00               	movlw	0
  4896   001E36  6E22               	movwf	___flmul@prod^0,c
  4897   001E38  0E00               	movlw	0
  4898   001E3A  6E23               	movwf	(___flmul@prod+1)^0,c
  4899   001E3C  0E00               	movlw	0
  4900   001E3E  6E24               	movwf	(___flmul@prod+2)^0,c
  4901   001E40  0E00               	movlw	0
  4902   001E42  6E25               	movwf	(___flmul@prod+3)^0,c
  4903   001E44  0E00               	movlw	0
  4904   001E46  6E1B               	movwf	___flmul@sign^0,c
  4905   001E48  EF3B  F00F         	goto	l3063
  4906   001E4C                     l922:
  4907   001E4C  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4908   001E50  0EFF               	movlw	255
  4909   001E52  1622               	andwf	___flmul@prod^0,f,c
  4910   001E54  0EFF               	movlw	255
  4911   001E56  1623               	andwf	(___flmul@prod+1)^0,f,c
  4912   001E58  0E7F               	movlw	127
  4913   001E5A  1624               	andwf	(___flmul@prod+2)^0,f,c
  4914   001E5C  0E00               	movlw	0
  4915   001E5E  1625               	andwf	(___flmul@prod+3)^0,f,c
  4916   001E60  A021               	btfss	___flmul@bexp^0,0,c
  4917   001E62  EF35  F00F         	goto	u3231
  4918   001E66  EF37  F00F         	goto	u3230
  4919   001E6A                     u3231:
  4920   001E6A  EF38  F00F         	goto	l3061
  4921   001E6E                     u3230:
  4922   001E6E  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4923   001E70                     l3061:
  4924   001E70  90D8               	bcf	status,0,c
  4925   001E72  3021               	rrcf	___flmul@bexp^0,w,c
  4926   001E74  6E25               	movwf	(___flmul@prod+3)^0,c
  4927   001E76                     l3063:
  4928   001E76  501B               	movf	___flmul@sign^0,w,c
  4929   001E78  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4930   001E7A  C022  F00F         	movff	___flmul@prod,?___flmul
  4931   001E7E  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4932   001E82  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4933   001E86  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4934   001E8A                     l909:
  4935   001E8A  0012               	return		;funcret
  4936   001E8C                     __end_of___flmul:
  4937                           	callstack 0
  4938                           
  4939 ;; *************** function ___fladd *****************
  4940 ;; Defined at:
  4941 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  b               4   64[COMRAM] unsigned char 
  4944 ;;  a               4   68[COMRAM] unsigned char 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  grs             1   79[COMRAM] unsigned char 
  4947 ;;  bexp            1   78[COMRAM] unsigned char 
  4948 ;;  aexp            1   77[COMRAM] unsigned char 
  4949 ;;  signs           1   76[COMRAM] unsigned char 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  4   64[COMRAM] unsigned char 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4959 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;Total ram usage:       16 bytes
  4964 ;; Hardware stack levels used: 1
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_runDAC
  4969 ;;		___flsub
  4970 ;;		_sinf
  4971 ;;		___cosdf
  4972 ;;		___rem_pio2f
  4973 ;;		___sindf
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           	psect	text19
  4978   0015A2                     __ptext19:
  4979                           	callstack 0
  4980   0015A2                     ___fladd:
  4981                           	callstack 27
  4982   0015A2  5044               	movf	(___fladd@b+3)^0,w,c
  4983   0015A4  0B80               	andlw	128
  4984   0015A6  6E4D               	movwf	___fladd@signs^0,c
  4985   0015A8  5044               	movf	(___fladd@b+3)^0,w,c
  4986   0015AA  2444               	addwf	(___fladd@b+3)^0,w,c
  4987   0015AC  6E4F               	movwf	___fladd@bexp^0,c
  4988   0015AE  AE43               	btfss	(___fladd@b+2)^0,7,c
  4989   0015B0  EFDC  F00A         	goto	u2471
  4990   0015B4  EFDE  F00A         	goto	u2470
  4991   0015B8                     u2471:
  4992   0015B8  EFDF  F00A         	goto	l2651
  4993   0015BC                     u2470:
  4994   0015BC  804F               	bsf	___fladd@bexp^0,0,c
  4995   0015BE                     l2651:
  4996   0015BE  504F               	movf	___fladd@bexp^0,w,c
  4997   0015C0  B4D8               	btfsc	status,2,c
  4998   0015C2  EFE5  F00A         	goto	u2481
  4999   0015C6  EFE7  F00A         	goto	u2480
  5000   0015CA                     u2481:
  5001   0015CA  EFFC  F00A         	goto	l2661
  5002   0015CE                     u2480:
  5003   0015CE  284F               	incf	___fladd@bexp^0,w,c
  5004   0015D0  A4D8               	btfss	status,2,c
  5005   0015D2  EFED  F00A         	goto	u2491
  5006   0015D6  EFEF  F00A         	goto	u2490
  5007   0015DA                     u2491:
  5008   0015DA  EFF7  F00A         	goto	l2657
  5009   0015DE                     u2490:
  5010   0015DE  0E00               	movlw	0
  5011   0015E0  6E41               	movwf	___fladd@b^0,c
  5012   0015E2  0E00               	movlw	0
  5013   0015E4  6E42               	movwf	(___fladd@b+1)^0,c
  5014   0015E6  0E00               	movlw	0
  5015   0015E8  6E43               	movwf	(___fladd@b+2)^0,c
  5016   0015EA  0E00               	movlw	0
  5017   0015EC  6E44               	movwf	(___fladd@b+3)^0,c
  5018   0015EE                     l2657:
  5019   0015EE  8E43               	bsf	(___fladd@b+2)^0,7,c
  5020   0015F0  0E00               	movlw	0
  5021   0015F2  6E44               	movwf	(___fladd@b+3)^0,c
  5022   0015F4  EF04  F00B         	goto	l2663
  5023   0015F8                     l2661:
  5024   0015F8  0E00               	movlw	0
  5025   0015FA  6E41               	movwf	___fladd@b^0,c
  5026   0015FC  0E00               	movlw	0
  5027   0015FE  6E42               	movwf	(___fladd@b+1)^0,c
  5028   001600  0E00               	movlw	0
  5029   001602  6E43               	movwf	(___fladd@b+2)^0,c
  5030   001604  0E00               	movlw	0
  5031   001606  6E44               	movwf	(___fladd@b+3)^0,c
  5032   001608                     l2663:
  5033   001608  5048               	movf	(___fladd@a+3)^0,w,c
  5034   00160A  0B80               	andlw	128
  5035   00160C  6E4E               	movwf	___fladd@aexp^0,c
  5036   00160E  504D               	movf	___fladd@signs^0,w,c
  5037   001610  184E               	xorwf	___fladd@aexp^0,w,c
  5038   001612  B4D8               	btfsc	status,2,c
  5039   001614  EF0E  F00B         	goto	u2501
  5040   001618  EF10  F00B         	goto	u2500
  5041   00161C                     u2501:
  5042   00161C  EF11  F00B         	goto	l2669
  5043   001620                     u2500:
  5044   001620  8C4D               	bsf	___fladd@signs^0,6,c
  5045   001622                     l2669:
  5046   001622  5048               	movf	(___fladd@a+3)^0,w,c
  5047   001624  2448               	addwf	(___fladd@a+3)^0,w,c
  5048   001626  6E4E               	movwf	___fladd@aexp^0,c
  5049   001628  AE47               	btfss	(___fladd@a+2)^0,7,c
  5050   00162A  EF19  F00B         	goto	u2511
  5051   00162E  EF1B  F00B         	goto	u2510
  5052   001632                     u2511:
  5053   001632  EF1C  F00B         	goto	l2675
  5054   001636                     u2510:
  5055   001636  804E               	bsf	___fladd@aexp^0,0,c
  5056   001638                     l2675:
  5057   001638  504E               	movf	___fladd@aexp^0,w,c
  5058   00163A  B4D8               	btfsc	status,2,c
  5059   00163C  EF22  F00B         	goto	u2521
  5060   001640  EF24  F00B         	goto	u2520
  5061   001644                     u2521:
  5062   001644  EF39  F00B         	goto	l2685
  5063   001648                     u2520:
  5064   001648  284E               	incf	___fladd@aexp^0,w,c
  5065   00164A  A4D8               	btfss	status,2,c
  5066   00164C  EF2A  F00B         	goto	u2531
  5067   001650  EF2C  F00B         	goto	u2530
  5068   001654                     u2531:
  5069   001654  EF34  F00B         	goto	l2681
  5070   001658                     u2530:
  5071   001658  0E00               	movlw	0
  5072   00165A  6E45               	movwf	___fladd@a^0,c
  5073   00165C  0E00               	movlw	0
  5074   00165E  6E46               	movwf	(___fladd@a+1)^0,c
  5075   001660  0E00               	movlw	0
  5076   001662  6E47               	movwf	(___fladd@a+2)^0,c
  5077   001664  0E00               	movlw	0
  5078   001666  6E48               	movwf	(___fladd@a+3)^0,c
  5079   001668                     l2681:
  5080   001668  8E47               	bsf	(___fladd@a+2)^0,7,c
  5081   00166A  0E00               	movlw	0
  5082   00166C  6E48               	movwf	(___fladd@a+3)^0,c
  5083   00166E  EF41  F00B         	goto	l2687
  5084   001672                     l2685:
  5085   001672  0E00               	movlw	0
  5086   001674  6E45               	movwf	___fladd@a^0,c
  5087   001676  0E00               	movlw	0
  5088   001678  6E46               	movwf	(___fladd@a+1)^0,c
  5089   00167A  0E00               	movlw	0
  5090   00167C  6E47               	movwf	(___fladd@a+2)^0,c
  5091   00167E  0E00               	movlw	0
  5092   001680  6E48               	movwf	(___fladd@a+3)^0,c
  5093   001682                     l2687:
  5094   001682  504F               	movf	___fladd@bexp^0,w,c
  5095   001684  5C4E               	subwf	___fladd@aexp^0,w,c
  5096   001686  B0D8               	btfsc	status,0,c
  5097   001688  EF48  F00B         	goto	u2541
  5098   00168C  EF4A  F00B         	goto	u2540
  5099   001690                     u2541:
  5100   001690  EF71  F00B         	goto	l2723
  5101   001694                     u2540:
  5102   001694  AC4D               	btfss	___fladd@signs^0,6,c
  5103   001696  EF4F  F00B         	goto	u2551
  5104   00169A  EF51  F00B         	goto	u2550
  5105   00169E                     u2551:
  5106   00169E  EF53  F00B         	goto	l2693
  5107   0016A2                     u2550:
  5108   0016A2  0E80               	movlw	128
  5109   0016A4  1A4D               	xorwf	___fladd@signs^0,f,c
  5110   0016A6                     l2693:
  5111   0016A6  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  5112   0016AA  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  5113   0016AE  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  5114   0016B2  C041  F050         	movff	___fladd@b,___fladd@grs
  5115   0016B6  C045  F041         	movff	___fladd@a,___fladd@b
  5116   0016BA  C050  F045         	movff	___fladd@grs,___fladd@a
  5117   0016BE  C042  F050         	movff	___fladd@b+1,___fladd@grs
  5118   0016C2  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  5119   0016C6  C050  F046         	movff	___fladd@grs,___fladd@a+1
  5120   0016CA  C043  F050         	movff	___fladd@b+2,___fladd@grs
  5121   0016CE  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  5122   0016D2  C050  F047         	movff	___fladd@grs,___fladd@a+2
  5123   0016D6  C044  F050         	movff	___fladd@b+3,___fladd@grs
  5124   0016DA  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  5125   0016DE  C050  F048         	movff	___fladd@grs,___fladd@a+3
  5126   0016E2                     l2723:
  5127   0016E2  0E00               	movlw	0
  5128   0016E4  6E50               	movwf	___fladd@grs^0,c
  5129   0016E6  504F               	movf	___fladd@bexp^0,w,c
  5130   0016E8  C04E  F049         	movff	___fladd@aexp,??___fladd
  5131   0016EC  6A4A               	clrf	(??___fladd+1)^0,c
  5132   0016EE  5E49               	subwf	??___fladd^0,f,c
  5133   0016F0  0E00               	movlw	0
  5134   0016F2  5A4A               	subwfb	(??___fladd+1)^0,f,c
  5135   0016F4  BE4A               	btfsc	(??___fladd+1)^0,7,c
  5136   0016F6  EF86  F00B         	goto	u2561
  5137   0016FA  504A               	movf	(??___fladd+1)^0,w,c
  5138   0016FC  E109               	bnz	u2560
  5139   0016FE  0E1A               	movlw	26
  5140   001700  5C49               	subwf	??___fladd^0,w,c
  5141   001702  A0D8               	btfss	status,0,c
  5142   001704  EF86  F00B         	goto	u2561
  5143   001708  EF88  F00B         	goto	u2560
  5144   00170C                     u2561:
  5145   00170C  EFBF  F00B         	goto	l820
  5146   001710                     u2560:
  5147   001710  5041               	movf	___fladd@b^0,w,c
  5148   001712  1042               	iorwf	(___fladd@b+1)^0,w,c
  5149   001714  1043               	iorwf	(___fladd@b+2)^0,w,c
  5150   001716  1044               	iorwf	(___fladd@b+3)^0,w,c
  5151   001718  A4D8               	btfss	status,2,c
  5152   00171A  EF91  F00B         	goto	u2571
  5153   00171E  EF94  F00B         	goto	u2570
  5154   001722                     u2571:
  5155   001722  0E01               	movlw	1
  5156   001724  EF95  F00B         	goto	u2580
  5157   001728                     u2570:
  5158   001728  0E00               	movlw	0
  5159   00172A                     u2580:
  5160   00172A  6E50               	movwf	___fladd@grs^0,c
  5161   00172C  0E00               	movlw	0
  5162   00172E  6E41               	movwf	___fladd@b^0,c
  5163   001730  0E00               	movlw	0
  5164   001732  6E42               	movwf	(___fladd@b+1)^0,c
  5165   001734  0E00               	movlw	0
  5166   001736  6E43               	movwf	(___fladd@b+2)^0,c
  5167   001738  0E00               	movlw	0
  5168   00173A  6E44               	movwf	(___fladd@b+3)^0,c
  5169   00173C  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  5170   001740  EFC8  F00B         	goto	l819
  5171   001744                     l821:
  5172   001744  A050               	btfss	___fladd@grs^0,0,c
  5173   001746  EFA7  F00B         	goto	u2591
  5174   00174A  EFA9  F00B         	goto	u2590
  5175   00174E                     u2591:
  5176   00174E  EFAF  F00B         	goto	l2735
  5177   001752                     u2590:
  5178   001752  90D8               	bcf	status,0,c
  5179   001754  3050               	rrcf	___fladd@grs^0,w,c
  5180   001756  0901               	iorlw	1
  5181   001758  6E50               	movwf	___fladd@grs^0,c
  5182   00175A  EFB1  F00B         	goto	l2737
  5183   00175E                     l2735:
  5184   00175E  90D8               	bcf	status,0,c
  5185   001760  3250               	rrcf	___fladd@grs^0,f,c
  5186   001762                     l2737:
  5187   001762  A041               	btfss	___fladd@b^0,0,c
  5188   001764  EFB6  F00B         	goto	u2601
  5189   001768  EFB8  F00B         	goto	u2600
  5190   00176C                     u2601:
  5191   00176C  EFB9  F00B         	goto	l2741
  5192   001770                     u2600:
  5193   001770  8E50               	bsf	___fladd@grs^0,7,c
  5194   001772                     l2741:
  5195   001772  3444               	rlcf	(___fladd@b+3)^0,w,c
  5196   001774  3244               	rrcf	(___fladd@b+3)^0,f,c
  5197   001776  3243               	rrcf	(___fladd@b+2)^0,f,c
  5198   001778  3242               	rrcf	(___fladd@b+1)^0,f,c
  5199   00177A  3241               	rrcf	___fladd@b^0,f,c
  5200   00177C  2A4F               	incf	___fladd@bexp^0,f,c
  5201   00177E                     l820:
  5202   00177E  504E               	movf	___fladd@aexp^0,w,c
  5203   001780  5C4F               	subwf	___fladd@bexp^0,w,c
  5204   001782  A0D8               	btfss	status,0,c
  5205   001784  EFC6  F00B         	goto	u2611
  5206   001788  EFC8  F00B         	goto	u2610
  5207   00178C                     u2611:
  5208   00178C  EFA2  F00B         	goto	l821
  5209   001790                     u2610:
  5210   001790                     l819:
  5211   001790  BC4D               	btfsc	___fladd@signs^0,6,c
  5212   001792  EFCD  F00B         	goto	u2621
  5213   001796  EFCF  F00B         	goto	u2620
  5214   00179A                     u2621:
  5215   00179A  EF0F  F00C         	goto	l2769
  5216   00179E                     u2620:
  5217   00179E  504F               	movf	___fladd@bexp^0,w,c
  5218   0017A0  A4D8               	btfss	status,2,c
  5219   0017A2  EFD5  F00B         	goto	u2631
  5220   0017A6  EFD7  F00B         	goto	u2630
  5221   0017AA                     u2631:
  5222   0017AA  EFE1  F00B         	goto	l2751
  5223   0017AE                     u2630:
  5224   0017AE  0E00               	movlw	0
  5225   0017B0  6E41               	movwf	?___fladd^0,c
  5226   0017B2  0E00               	movlw	0
  5227   0017B4  6E42               	movwf	(?___fladd+1)^0,c
  5228   0017B6  0E00               	movlw	0
  5229   0017B8  6E43               	movwf	(?___fladd+2)^0,c
  5230   0017BA  0E00               	movlw	0
  5231   0017BC  6E44               	movwf	(?___fladd+3)^0,c
  5232   0017BE  EF30  F00D         	goto	l828
  5233   0017C2                     l2751:
  5234   0017C2  5045               	movf	___fladd@a^0,w,c
  5235   0017C4  2641               	addwf	___fladd@b^0,f,c
  5236   0017C6  5046               	movf	(___fladd@a+1)^0,w,c
  5237   0017C8  2242               	addwfc	(___fladd@b+1)^0,f,c
  5238   0017CA  5047               	movf	(___fladd@a+2)^0,w,c
  5239   0017CC  2243               	addwfc	(___fladd@b+2)^0,f,c
  5240   0017CE  5048               	movf	(___fladd@a+3)^0,w,c
  5241   0017D0  2244               	addwfc	(___fladd@b+3)^0,f,c
  5242   0017D2  A044               	btfss	(___fladd@b+3)^0,0,c
  5243   0017D4  EFEE  F00B         	goto	u2641
  5244   0017D8  EFF0  F00B         	goto	u2640
  5245   0017DC                     u2641:
  5246   0017DC  EF9C  F00C         	goto	l2805
  5247   0017E0                     u2640:
  5248   0017E0  A050               	btfss	___fladd@grs^0,0,c
  5249   0017E2  EFF5  F00B         	goto	u2651
  5250   0017E6  EFF7  F00B         	goto	u2650
  5251   0017EA                     u2651:
  5252   0017EA  EFFD  F00B         	goto	l2759
  5253   0017EE                     u2650:
  5254   0017EE  90D8               	bcf	status,0,c
  5255   0017F0  3050               	rrcf	___fladd@grs^0,w,c
  5256   0017F2  0901               	iorlw	1
  5257   0017F4  6E50               	movwf	___fladd@grs^0,c
  5258   0017F6  EFFF  F00B         	goto	l2761
  5259   0017FA                     l2759:
  5260   0017FA  90D8               	bcf	status,0,c
  5261   0017FC  3250               	rrcf	___fladd@grs^0,f,c
  5262   0017FE                     l2761:
  5263   0017FE  A041               	btfss	___fladd@b^0,0,c
  5264   001800  EF04  F00C         	goto	u2661
  5265   001804  EF06  F00C         	goto	u2660
  5266   001808                     u2661:
  5267   001808  EF07  F00C         	goto	l2765
  5268   00180C                     u2660:
  5269   00180C  8E50               	bsf	___fladd@grs^0,7,c
  5270   00180E                     l2765:
  5271   00180E  3444               	rlcf	(___fladd@b+3)^0,w,c
  5272   001810  3244               	rrcf	(___fladd@b+3)^0,f,c
  5273   001812  3243               	rrcf	(___fladd@b+2)^0,f,c
  5274   001814  3242               	rrcf	(___fladd@b+1)^0,f,c
  5275   001816  3241               	rrcf	___fladd@b^0,f,c
  5276   001818  2A4F               	incf	___fladd@bexp^0,f,c
  5277   00181A  EF9C  F00C         	goto	l2805
  5278   00181E                     l2769:
  5279   00181E  5045               	movf	___fladd@a^0,w,c
  5280   001820  5C41               	subwf	___fladd@b^0,w,c
  5281   001822  5046               	movf	(___fladd@a+1)^0,w,c
  5282   001824  5842               	subwfb	(___fladd@b+1)^0,w,c
  5283   001826  5047               	movf	(___fladd@a+2)^0,w,c
  5284   001828  5843               	subwfb	(___fladd@b+2)^0,w,c
  5285   00182A  5044               	movf	(___fladd@b+3)^0,w,c
  5286   00182C  0A80               	xorlw	128
  5287   00182E  6E49               	movwf	??___fladd^0,c
  5288   001830  5048               	movf	(___fladd@a+3)^0,w,c
  5289   001832  0A80               	xorlw	128
  5290   001834  5849               	subwfb	??___fladd^0,w,c
  5291   001836  B0D8               	btfsc	status,0,c
  5292   001838  EF20  F00C         	goto	u2671
  5293   00183C  EF22  F00C         	goto	u2670
  5294   001840                     u2671:
  5295   001840  EF4D  F00C         	goto	l2779
  5296   001844                     u2670:
  5297   001844  5041               	movf	___fladd@b^0,w,c
  5298   001846  5C45               	subwf	___fladd@a^0,w,c
  5299   001848  6E49               	movwf	??___fladd^0,c
  5300   00184A  5042               	movf	(___fladd@b+1)^0,w,c
  5301   00184C  5846               	subwfb	(___fladd@a+1)^0,w,c
  5302   00184E  6E4A               	movwf	(??___fladd+1)^0,c
  5303   001850  5043               	movf	(___fladd@b+2)^0,w,c
  5304   001852  5847               	subwfb	(___fladd@a+2)^0,w,c
  5305   001854  6E4B               	movwf	(??___fladd+2)^0,c
  5306   001856  5044               	movf	(___fladd@b+3)^0,w,c
  5307   001858  5848               	subwfb	(___fladd@a+3)^0,w,c
  5308   00185A  6E4C               	movwf	(??___fladd+3)^0,c
  5309   00185C  0EFF               	movlw	255
  5310   00185E  2449               	addwf	??___fladd^0,w,c
  5311   001860  6E41               	movwf	___fladd@b^0,c
  5312   001862  0EFF               	movlw	255
  5313   001864  204A               	addwfc	(??___fladd+1)^0,w,c
  5314   001866  6E42               	movwf	(___fladd@b+1)^0,c
  5315   001868  0EFF               	movlw	255
  5316   00186A  204B               	addwfc	(??___fladd+2)^0,w,c
  5317   00186C  6E43               	movwf	(___fladd@b+2)^0,c
  5318   00186E  0EFF               	movlw	255
  5319   001870  204C               	addwfc	(??___fladd+3)^0,w,c
  5320   001872  6E44               	movwf	(___fladd@b+3)^0,c
  5321   001874  0E80               	movlw	128
  5322   001876  1A4D               	xorwf	___fladd@signs^0,f,c
  5323   001878  6C50               	negf	___fladd@grs^0,c
  5324   00187A  5050               	movf	___fladd@grs^0,w,c
  5325   00187C  A4D8               	btfss	status,2,c
  5326   00187E  EF43  F00C         	goto	u2681
  5327   001882  EF45  F00C         	goto	u2680
  5328   001886                     u2681:
  5329   001886  EF55  F00C         	goto	l836
  5330   00188A                     u2680:
  5331   00188A  0E01               	movlw	1
  5332   00188C  2641               	addwf	___fladd@b^0,f,c
  5333   00188E  0E00               	movlw	0
  5334   001890  2242               	addwfc	(___fladd@b+1)^0,f,c
  5335   001892  2243               	addwfc	(___fladd@b+2)^0,f,c
  5336   001894  2244               	addwfc	(___fladd@b+3)^0,f,c
  5337   001896  EF55  F00C         	goto	l836
  5338   00189A                     l2779:
  5339   00189A  5045               	movf	___fladd@a^0,w,c
  5340   00189C  5E41               	subwf	___fladd@b^0,f,c
  5341   00189E  5046               	movf	(___fladd@a+1)^0,w,c
  5342   0018A0  5A42               	subwfb	(___fladd@b+1)^0,f,c
  5343   0018A2  5047               	movf	(___fladd@a+2)^0,w,c
  5344   0018A4  5A43               	subwfb	(___fladd@b+2)^0,f,c
  5345   0018A6  5048               	movf	(___fladd@a+3)^0,w,c
  5346   0018A8  5A44               	subwfb	(___fladd@b+3)^0,f,c
  5347   0018AA                     l836:
  5348   0018AA  5041               	movf	___fladd@b^0,w,c
  5349   0018AC  1042               	iorwf	(___fladd@b+1)^0,w,c
  5350   0018AE  1043               	iorwf	(___fladd@b+2)^0,w,c
  5351   0018B0  1044               	iorwf	(___fladd@b+3)^0,w,c
  5352   0018B2  A4D8               	btfss	status,2,c
  5353   0018B4  EF5E  F00C         	goto	u2691
  5354   0018B8  EF60  F00C         	goto	u2690
  5355   0018BC                     u2691:
  5356   0018BC  EF95  F00C         	goto	l2803
  5357   0018C0                     u2690:
  5358   0018C0  5050               	movf	___fladd@grs^0,w,c
  5359   0018C2  A4D8               	btfss	status,2,c
  5360   0018C4  EF66  F00C         	goto	u2701
  5361   0018C8  EF68  F00C         	goto	u2700
  5362   0018CC                     u2701:
  5363   0018CC  EF95  F00C         	goto	l2803
  5364   0018D0                     u2700:
  5365   0018D0  0E00               	movlw	0
  5366   0018D2  6E41               	movwf	?___fladd^0,c
  5367   0018D4  0E00               	movlw	0
  5368   0018D6  6E42               	movwf	(?___fladd+1)^0,c
  5369   0018D8  0E00               	movlw	0
  5370   0018DA  6E43               	movwf	(?___fladd+2)^0,c
  5371   0018DC  0E00               	movlw	0
  5372   0018DE  6E44               	movwf	(?___fladd+3)^0,c
  5373   0018E0  EF30  F00D         	goto	l828
  5374   0018E4                     l2787:
  5375   0018E4  90D8               	bcf	status,0,c
  5376   0018E6  3641               	rlcf	___fladd@b^0,f,c
  5377   0018E8  3642               	rlcf	(___fladd@b+1)^0,f,c
  5378   0018EA  3643               	rlcf	(___fladd@b+2)^0,f,c
  5379   0018EC  3644               	rlcf	(___fladd@b+3)^0,f,c
  5380   0018EE  AE50               	btfss	___fladd@grs^0,7,c
  5381   0018F0  EF7C  F00C         	goto	u2711
  5382   0018F4  EF7E  F00C         	goto	u2710
  5383   0018F8                     u2711:
  5384   0018F8  EF7F  F00C         	goto	l2793
  5385   0018FC                     u2710:
  5386   0018FC  8041               	bsf	___fladd@b^0,0,c
  5387   0018FE                     l2793:
  5388   0018FE  A050               	btfss	___fladd@grs^0,0,c
  5389   001900  EF84  F00C         	goto	u2721
  5390   001904  EF86  F00C         	goto	u2720
  5391   001908                     u2721:
  5392   001908  EF8A  F00C         	goto	l2797
  5393   00190C                     u2720:
  5394   00190C  80D8               	bsf	status,0,c
  5395   00190E  3650               	rlcf	___fladd@grs^0,f,c
  5396   001910  EF8C  F00C         	goto	l2799
  5397   001914                     l2797:
  5398   001914  90D8               	bcf	status,0,c
  5399   001916  3650               	rlcf	___fladd@grs^0,f,c
  5400   001918                     l2799:
  5401   001918  504F               	movf	___fladd@bexp^0,w,c
  5402   00191A  B4D8               	btfsc	status,2,c
  5403   00191C  EF92  F00C         	goto	u2731
  5404   001920  EF94  F00C         	goto	u2730
  5405   001924                     u2731:
  5406   001924  EF95  F00C         	goto	l2803
  5407   001928                     u2730:
  5408   001928  064F               	decf	___fladd@bexp^0,f,c
  5409   00192A                     l2803:
  5410   00192A  AE43               	btfss	(___fladd@b+2)^0,7,c
  5411   00192C  EF9A  F00C         	goto	u2741
  5412   001930  EF9C  F00C         	goto	u2740
  5413   001934                     u2741:
  5414   001934  EF72  F00C         	goto	l2787
  5415   001938                     u2740:
  5416   001938                     l2805:
  5417   001938  0E00               	movlw	0
  5418   00193A  6E4E               	movwf	___fladd@aexp^0,c
  5419   00193C  AE50               	btfss	___fladd@grs^0,7,c
  5420   00193E  EFA3  F00C         	goto	u2751
  5421   001942  EFA5  F00C         	goto	u2750
  5422   001946                     u2751:
  5423   001946  EFBD  F00C         	goto	l845
  5424   00194A                     u2750:
  5425   00194A  C050  F049         	movff	___fladd@grs,??___fladd
  5426   00194E  0E7F               	movlw	127
  5427   001950  1649               	andwf	??___fladd^0,f,c
  5428   001952  B4D8               	btfsc	status,2,c
  5429   001954  EFAE  F00C         	goto	u2761
  5430   001958  EFB0  F00C         	goto	u2760
  5431   00195C                     u2761:
  5432   00195C  EFB4  F00C         	goto	l846
  5433   001960                     u2760:
  5434   001960                     l2811:
  5435   001960  0E01               	movlw	1
  5436   001962  6E4E               	movwf	___fladd@aexp^0,c
  5437   001964  EFBD  F00C         	goto	l845
  5438   001968                     l846:
  5439   001968  A041               	btfss	___fladd@b^0,0,c
  5440   00196A  EFB9  F00C         	goto	u2771
  5441   00196E  EFBB  F00C         	goto	u2770
  5442   001972                     u2771:
  5443   001972  EFBD  F00C         	goto	l845
  5444   001976                     u2770:
  5445   001976  EFB0  F00C         	goto	l2811
  5446   00197A                     l845:
  5447   00197A  504E               	movf	___fladd@aexp^0,w,c
  5448   00197C  B4D8               	btfsc	status,2,c
  5449   00197E  EFC3  F00C         	goto	u2781
  5450   001982  EFC5  F00C         	goto	u2780
  5451   001986                     u2781:
  5452   001986  EFF0  F00C         	goto	l2823
  5453   00198A                     u2780:
  5454   00198A  0E01               	movlw	1
  5455   00198C  2641               	addwf	___fladd@b^0,f,c
  5456   00198E  0E00               	movlw	0
  5457   001990  2242               	addwfc	(___fladd@b+1)^0,f,c
  5458   001992  2243               	addwfc	(___fladd@b+2)^0,f,c
  5459   001994  2244               	addwfc	(___fladd@b+3)^0,f,c
  5460   001996  A044               	btfss	(___fladd@b+3)^0,0,c
  5461   001998  EFD0  F00C         	goto	u2791
  5462   00199C  EFD2  F00C         	goto	u2790
  5463   0019A0                     u2791:
  5464   0019A0  EFF0  F00C         	goto	l2823
  5465   0019A4                     u2790:
  5466   0019A4  C041  F049         	movff	___fladd@b,??___fladd
  5467   0019A8  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  5468   0019AC  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  5469   0019B0  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  5470   0019B4  344C               	rlcf	(??___fladd+3)^0,w,c
  5471   0019B6  324C               	rrcf	(??___fladd+3)^0,f,c
  5472   0019B8  324B               	rrcf	(??___fladd+2)^0,f,c
  5473   0019BA  324A               	rrcf	(??___fladd+1)^0,f,c
  5474   0019BC  3249               	rrcf	??___fladd^0,f,c
  5475   0019BE  C049  F041         	movff	??___fladd,___fladd@b
  5476   0019C2  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  5477   0019C6  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  5478   0019CA  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  5479   0019CE  284F               	incf	___fladd@bexp^0,w,c
  5480   0019D0  B4D8               	btfsc	status,2,c
  5481   0019D2  EFED  F00C         	goto	u2801
  5482   0019D6  EFEF  F00C         	goto	u2800
  5483   0019DA                     u2801:
  5484   0019DA  EFF0  F00C         	goto	l2823
  5485   0019DE                     u2800:
  5486   0019DE  2A4F               	incf	___fladd@bexp^0,f,c
  5487   0019E0                     l2823:
  5488   0019E0  284F               	incf	___fladd@bexp^0,w,c
  5489   0019E2  B4D8               	btfsc	status,2,c
  5490   0019E4  EFF6  F00C         	goto	u2811
  5491   0019E8  EFF8  F00C         	goto	u2810
  5492   0019EC                     u2811:
  5493   0019EC  EF00  F00D         	goto	l2827
  5494   0019F0                     u2810:
  5495   0019F0  504F               	movf	___fladd@bexp^0,w,c
  5496   0019F2  A4D8               	btfss	status,2,c
  5497   0019F4  EFFE  F00C         	goto	u2821
  5498   0019F8  EF00  F00D         	goto	u2820
  5499   0019FC                     u2821:
  5500   0019FC  EF12  F00D         	goto	l2831
  5501   001A00                     u2820:
  5502   001A00                     l2827:
  5503   001A00  0E00               	movlw	0
  5504   001A02  6E41               	movwf	___fladd@b^0,c
  5505   001A04  0E00               	movlw	0
  5506   001A06  6E42               	movwf	(___fladd@b+1)^0,c
  5507   001A08  0E00               	movlw	0
  5508   001A0A  6E43               	movwf	(___fladd@b+2)^0,c
  5509   001A0C  0E00               	movlw	0
  5510   001A0E  6E44               	movwf	(___fladd@b+3)^0,c
  5511   001A10  504F               	movf	___fladd@bexp^0,w,c
  5512   001A12  A4D8               	btfss	status,2,c
  5513   001A14  EF0E  F00D         	goto	u2831
  5514   001A18  EF10  F00D         	goto	u2830
  5515   001A1C                     u2831:
  5516   001A1C  EF12  F00D         	goto	l2831
  5517   001A20                     u2830:
  5518   001A20  0E00               	movlw	0
  5519   001A22  6E4D               	movwf	___fladd@signs^0,c
  5520   001A24                     l2831:
  5521   001A24  A04F               	btfss	___fladd@bexp^0,0,c
  5522   001A26  EF17  F00D         	goto	u2841
  5523   001A2A  EF19  F00D         	goto	u2840
  5524   001A2E                     u2841:
  5525   001A2E  EF1C  F00D         	goto	l2835
  5526   001A32                     u2840:
  5527   001A32  8E43               	bsf	(___fladd@b+2)^0,7,c
  5528   001A34  EF1D  F00D         	goto	l2837
  5529   001A38                     l2835:
  5530   001A38  9E43               	bcf	(___fladd@b+2)^0,7,c
  5531   001A3A                     l2837:
  5532   001A3A  90D8               	bcf	status,0,c
  5533   001A3C  304F               	rrcf	___fladd@bexp^0,w,c
  5534   001A3E  6E44               	movwf	(___fladd@b+3)^0,c
  5535   001A40  AE4D               	btfss	___fladd@signs^0,7,c
  5536   001A42  EF25  F00D         	goto	u2851
  5537   001A46  EF27  F00D         	goto	u2850
  5538   001A4A                     u2851:
  5539   001A4A  EF28  F00D         	goto	l2843
  5540   001A4E                     u2850:
  5541   001A4E  8E44               	bsf	(___fladd@b+3)^0,7,c
  5542   001A50                     l2843:
  5543   001A50  C041  F041         	movff	___fladd@b,?___fladd
  5544   001A54  C042  F042         	movff	___fladd@b+1,?___fladd+1
  5545   001A58  C043  F043         	movff	___fladd@b+2,?___fladd+2
  5546   001A5C  C044  F044         	movff	___fladd@b+3,?___fladd+3
  5547   001A60                     l828:
  5548   001A60  0012               	return		;funcret
  5549   001A62                     __end_of___fladd:
  5550                           	callstack 0
  5551                           
  5552 ;; *************** function _printf *****************
  5553 ;; Defined at:
  5554 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;  fmt             1   54[COMRAM] PTR const unsigned char 
  5557 ;;		 -> STR_3(5), 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;  ret             2    0        int 
  5560 ;;  ap              1   57[COMRAM] PTR void [1]
  5561 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  2   54[COMRAM] int 
  5564 ;; Registers used:
  5565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5571 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5572 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5574 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;Total ram usage:        4 bytes
  5576 ;; Hardware stack levels used: 1
  5577 ;; Hardware stack levels required when called: 7
  5578 ;; This function calls:
  5579 ;;		_vfprintf
  5580 ;; This function is called by:
  5581 ;;		_runDAC
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           	psect	text20
  5586   004048                     __ptext20:
  5587                           	callstack 0
  5588   004048                     _printf:
  5589                           	callstack 22
  5590   004048  0E38               	movlw	low (?_printf+1)
  5591   00404A  6E3A               	movwf	printf@ap^0,c
  5592   00404C  0E00               	movlw	0
  5593   00404E  6E32               	movwf	vfprintf@fp^0,c
  5594   004050  0E00               	movlw	0
  5595   004052  6E33               	movwf	(vfprintf@fp+1)^0,c
  5596   004054  C037  F034         	movff	printf@fmt,vfprintf@fmt
  5597   004058  0E3A               	movlw	low printf@ap
  5598   00405A  6E35               	movwf	vfprintf@ap^0,c
  5599   00405C  EC27  F01F         	call	_vfprintf	;wreg free
  5600   004060  0012               	return		;funcret
  5601   004062                     __end_of_printf:
  5602                           	callstack 0
  5603                           
  5604 ;; *************** function ___fldiv *****************
  5605 ;; Defined at:
  5606 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  b               4   39[COMRAM] int 
  5609 ;;  a               4   43[COMRAM] int 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  grs             4   58[COMRAM] unsigned long 
  5612 ;;  rem             4   51[COMRAM] unsigned long 
  5613 ;;  new_exp         2   56[COMRAM] short 
  5614 ;;  aexp            1   63[COMRAM] unsigned char 
  5615 ;;  bexp            1   62[COMRAM] unsigned char 
  5616 ;;  sign            1   55[COMRAM] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  4   39[COMRAM] unsigned char 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2, status,0
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5626 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5630 ;;Total ram usage:       25 bytes
  5631 ;; Hardware stack levels used: 1
  5632 ;; This function calls:
  5633 ;;		Nothing
  5634 ;; This function is called by:
  5635 ;;		_runDAC
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text21
  5640   00224E                     __ptext21:
  5641                           	callstack 0
  5642   00224E                     ___fldiv:
  5643                           	callstack 29
  5644   00224E  502B               	movf	(___fldiv@b+3)^0,w,c
  5645   002250  0B80               	andlw	128
  5646   002252  6E38               	movwf	___fldiv@sign^0,c
  5647   002254  502B               	movf	(___fldiv@b+3)^0,w,c
  5648   002256  242B               	addwf	(___fldiv@b+3)^0,w,c
  5649   002258  6E3F               	movwf	___fldiv@bexp^0,c
  5650   00225A  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  5651   00225C  EF32  F011         	goto	u3891
  5652   002260  EF34  F011         	goto	u3890
  5653   002264                     u3891:
  5654   002264  EF35  F011         	goto	l3501
  5655   002268                     u3890:
  5656   002268  803F               	bsf	___fldiv@bexp^0,0,c
  5657   00226A                     l3501:
  5658   00226A  503F               	movf	___fldiv@bexp^0,w,c
  5659   00226C  B4D8               	btfsc	status,2,c
  5660   00226E  EF3B  F011         	goto	u3901
  5661   002272  EF3D  F011         	goto	u3900
  5662   002276                     u3901:
  5663   002276  EF52  F011         	goto	l3511
  5664   00227A                     u3900:
  5665   00227A  283F               	incf	___fldiv@bexp^0,w,c
  5666   00227C  A4D8               	btfss	status,2,c
  5667   00227E  EF43  F011         	goto	u3911
  5668   002282  EF45  F011         	goto	u3910
  5669   002286                     u3911:
  5670   002286  EF4D  F011         	goto	l3507
  5671   00228A                     u3910:
  5672   00228A  0E00               	movlw	0
  5673   00228C  6E28               	movwf	___fldiv@b^0,c
  5674   00228E  0E00               	movlw	0
  5675   002290  6E29               	movwf	(___fldiv@b+1)^0,c
  5676   002292  0E00               	movlw	0
  5677   002294  6E2A               	movwf	(___fldiv@b+2)^0,c
  5678   002296  0E00               	movlw	0
  5679   002298  6E2B               	movwf	(___fldiv@b+3)^0,c
  5680   00229A                     l3507:
  5681   00229A  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  5682   00229C  0E00               	movlw	0
  5683   00229E  6E2B               	movwf	(___fldiv@b+3)^0,c
  5684   0022A0  EF5A  F011         	goto	l3513
  5685   0022A4                     l3511:
  5686   0022A4  0E00               	movlw	0
  5687   0022A6  6E28               	movwf	___fldiv@b^0,c
  5688   0022A8  0E00               	movlw	0
  5689   0022AA  6E29               	movwf	(___fldiv@b+1)^0,c
  5690   0022AC  0E00               	movlw	0
  5691   0022AE  6E2A               	movwf	(___fldiv@b+2)^0,c
  5692   0022B0  0E00               	movlw	0
  5693   0022B2  6E2B               	movwf	(___fldiv@b+3)^0,c
  5694   0022B4                     l3513:
  5695   0022B4  502F               	movf	(___fldiv@a+3)^0,w,c
  5696   0022B6  0B80               	andlw	128
  5697   0022B8  1A38               	xorwf	___fldiv@sign^0,f,c
  5698   0022BA  502F               	movf	(___fldiv@a+3)^0,w,c
  5699   0022BC  242F               	addwf	(___fldiv@a+3)^0,w,c
  5700   0022BE  6E40               	movwf	___fldiv@aexp^0,c
  5701   0022C0  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  5702   0022C2  EF65  F011         	goto	u3921
  5703   0022C6  EF67  F011         	goto	u3920
  5704   0022CA                     u3921:
  5705   0022CA  EF68  F011         	goto	l3521
  5706   0022CE                     u3920:
  5707   0022CE  8040               	bsf	___fldiv@aexp^0,0,c
  5708   0022D0                     l3521:
  5709   0022D0  5040               	movf	___fldiv@aexp^0,w,c
  5710   0022D2  B4D8               	btfsc	status,2,c
  5711   0022D4  EF6E  F011         	goto	u3931
  5712   0022D8  EF70  F011         	goto	u3930
  5713   0022DC                     u3931:
  5714   0022DC  EF85  F011         	goto	l3531
  5715   0022E0                     u3930:
  5716   0022E0  2840               	incf	___fldiv@aexp^0,w,c
  5717   0022E2  A4D8               	btfss	status,2,c
  5718   0022E4  EF76  F011         	goto	u3941
  5719   0022E8  EF78  F011         	goto	u3940
  5720   0022EC                     u3941:
  5721   0022EC  EF80  F011         	goto	l3527
  5722   0022F0                     u3940:
  5723   0022F0  0E00               	movlw	0
  5724   0022F2  6E2C               	movwf	___fldiv@a^0,c
  5725   0022F4  0E00               	movlw	0
  5726   0022F6  6E2D               	movwf	(___fldiv@a+1)^0,c
  5727   0022F8  0E00               	movlw	0
  5728   0022FA  6E2E               	movwf	(___fldiv@a+2)^0,c
  5729   0022FC  0E00               	movlw	0
  5730   0022FE  6E2F               	movwf	(___fldiv@a+3)^0,c
  5731   002300                     l3527:
  5732   002300  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  5733   002302  0E00               	movlw	0
  5734   002304  6E2F               	movwf	(___fldiv@a+3)^0,c
  5735   002306  EF8D  F011         	goto	l3533
  5736   00230A                     l3531:
  5737   00230A  0E00               	movlw	0
  5738   00230C  6E2C               	movwf	___fldiv@a^0,c
  5739   00230E  0E00               	movlw	0
  5740   002310  6E2D               	movwf	(___fldiv@a+1)^0,c
  5741   002312  0E00               	movlw	0
  5742   002314  6E2E               	movwf	(___fldiv@a+2)^0,c
  5743   002316  0E00               	movlw	0
  5744   002318  6E2F               	movwf	(___fldiv@a+3)^0,c
  5745   00231A                     l3533:
  5746   00231A  502C               	movf	___fldiv@a^0,w,c
  5747   00231C  102D               	iorwf	(___fldiv@a+1)^0,w,c
  5748   00231E  102E               	iorwf	(___fldiv@a+2)^0,w,c
  5749   002320  102F               	iorwf	(___fldiv@a+3)^0,w,c
  5750   002322  A4D8               	btfss	status,2,c
  5751   002324  EF96  F011         	goto	u3951
  5752   002328  EF98  F011         	goto	u3950
  5753   00232C                     u3951:
  5754   00232C  EFB0  F011         	goto	l3545
  5755   002330                     u3950:
  5756   002330  0E00               	movlw	0
  5757   002332  6E28               	movwf	___fldiv@b^0,c
  5758   002334  0E00               	movlw	0
  5759   002336  6E29               	movwf	(___fldiv@b+1)^0,c
  5760   002338  0E00               	movlw	0
  5761   00233A  6E2A               	movwf	(___fldiv@b+2)^0,c
  5762   00233C  0E00               	movlw	0
  5763   00233E  6E2B               	movwf	(___fldiv@b+3)^0,c
  5764   002340  0E80               	movlw	128
  5765   002342  122A               	iorwf	(___fldiv@b+2)^0,f,c
  5766   002344  0E7F               	movlw	127
  5767   002346  122B               	iorwf	(___fldiv@b+3)^0,f,c
  5768   002348                     l3539:
  5769   002348  5038               	movf	___fldiv@sign^0,w,c
  5770   00234A  122B               	iorwf	(___fldiv@b+3)^0,f,c
  5771   00234C  C028  F028         	movff	___fldiv@b,?___fldiv
  5772   002350  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  5773   002354  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  5774   002358  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  5775   00235C  EFF3  F012         	goto	l873
  5776   002360                     l3545:
  5777   002360  503F               	movf	___fldiv@bexp^0,w,c
  5778   002362  A4D8               	btfss	status,2,c
  5779   002364  EFB6  F011         	goto	u3961
  5780   002368  EFB8  F011         	goto	u3960
  5781   00236C                     u3961:
  5782   00236C  EFC2  F011         	goto	l3553
  5783   002370                     u3960:
  5784   002370  0E00               	movlw	0
  5785   002372  6E28               	movwf	?___fldiv^0,c
  5786   002374  0E00               	movlw	0
  5787   002376  6E29               	movwf	(?___fldiv+1)^0,c
  5788   002378  0E00               	movlw	0
  5789   00237A  6E2A               	movwf	(?___fldiv+2)^0,c
  5790   00237C  0E00               	movlw	0
  5791   00237E  6E2B               	movwf	(?___fldiv+3)^0,c
  5792   002380  EFF3  F012         	goto	l873
  5793   002384                     l3553:
  5794   002384  5040               	movf	___fldiv@aexp^0,w,c
  5795   002386  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  5796   00238A  6A31               	clrf	(??___fldiv+1)^0,c
  5797   00238C  5E30               	subwf	??___fldiv^0,f,c
  5798   00238E  0E00               	movlw	0
  5799   002390  5A31               	subwfb	(??___fldiv+1)^0,f,c
  5800   002392  0E7F               	movlw	127
  5801   002394  2430               	addwf	??___fldiv^0,w,c
  5802   002396  6E39               	movwf	___fldiv@new_exp^0,c
  5803   002398  0E00               	movlw	0
  5804   00239A  2031               	addwfc	(??___fldiv+1)^0,w,c
  5805   00239C  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  5806   00239E  C028  F034         	movff	___fldiv@b,___fldiv@rem
  5807   0023A2  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  5808   0023A6  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  5809   0023AA  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  5810   0023AE  0E00               	movlw	0
  5811   0023B0  6E28               	movwf	___fldiv@b^0,c
  5812   0023B2  0E00               	movlw	0
  5813   0023B4  6E29               	movwf	(___fldiv@b+1)^0,c
  5814   0023B6  0E00               	movlw	0
  5815   0023B8  6E2A               	movwf	(___fldiv@b+2)^0,c
  5816   0023BA  0E00               	movlw	0
  5817   0023BC  6E2B               	movwf	(___fldiv@b+3)^0,c
  5818   0023BE  0E00               	movlw	0
  5819   0023C0  6E3B               	movwf	___fldiv@grs^0,c
  5820   0023C2  0E00               	movlw	0
  5821   0023C4  6E3C               	movwf	(___fldiv@grs+1)^0,c
  5822   0023C6  0E00               	movlw	0
  5823   0023C8  6E3D               	movwf	(___fldiv@grs+2)^0,c
  5824   0023CA  0E00               	movlw	0
  5825   0023CC  6E3E               	movwf	(___fldiv@grs+3)^0,c
  5826   0023CE  0E00               	movlw	0
  5827   0023D0  6E40               	movwf	___fldiv@aexp^0,c
  5828   0023D2  EF23  F012         	goto	l875
  5829   0023D6                     l3563:
  5830   0023D6  5040               	movf	___fldiv@aexp^0,w,c
  5831   0023D8  B4D8               	btfsc	status,2,c
  5832   0023DA  EFF1  F011         	goto	u3971
  5833   0023DE  EFF3  F011         	goto	u3970
  5834   0023E2                     u3971:
  5835   0023E2  EF0A  F012         	goto	l3571
  5836   0023E6                     u3970:
  5837   0023E6  90D8               	bcf	status,0,c
  5838   0023E8  3634               	rlcf	___fldiv@rem^0,f,c
  5839   0023EA  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  5840   0023EC  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  5841   0023EE  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  5842   0023F0  90D8               	bcf	status,0,c
  5843   0023F2  3628               	rlcf	___fldiv@b^0,f,c
  5844   0023F4  3629               	rlcf	(___fldiv@b+1)^0,f,c
  5845   0023F6  362A               	rlcf	(___fldiv@b+2)^0,f,c
  5846   0023F8  362B               	rlcf	(___fldiv@b+3)^0,f,c
  5847   0023FA  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  5848   0023FC  EF02  F012         	goto	u3981
  5849   002400  EF04  F012         	goto	u3980
  5850   002404                     u3981:
  5851   002404  EF05  F012         	goto	l878
  5852   002408                     u3980:
  5853   002408  8028               	bsf	___fldiv@b^0,0,c
  5854   00240A                     l878:
  5855   00240A  90D8               	bcf	status,0,c
  5856   00240C  363B               	rlcf	___fldiv@grs^0,f,c
  5857   00240E  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  5858   002410  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  5859   002412  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  5860   002414                     l3571:
  5861   002414  502C               	movf	___fldiv@a^0,w,c
  5862   002416  5C34               	subwf	___fldiv@rem^0,w,c
  5863   002418  502D               	movf	(___fldiv@a+1)^0,w,c
  5864   00241A  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  5865   00241C  502E               	movf	(___fldiv@a+2)^0,w,c
  5866   00241E  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  5867   002420  502F               	movf	(___fldiv@a+3)^0,w,c
  5868   002422  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  5869   002424  A0D8               	btfss	status,0,c
  5870   002426  EF17  F012         	goto	u3991
  5871   00242A  EF19  F012         	goto	u3990
  5872   00242E                     u3991:
  5873   00242E  EF22  F012         	goto	l3577
  5874   002432                     u3990:
  5875   002432  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  5876   002434  502C               	movf	___fldiv@a^0,w,c
  5877   002436  5E34               	subwf	___fldiv@rem^0,f,c
  5878   002438  502D               	movf	(___fldiv@a+1)^0,w,c
  5879   00243A  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  5880   00243C  502E               	movf	(___fldiv@a+2)^0,w,c
  5881   00243E  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  5882   002440  502F               	movf	(___fldiv@a+3)^0,w,c
  5883   002442  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  5884   002444                     l3577:
  5885   002444  2A40               	incf	___fldiv@aexp^0,f,c
  5886   002446                     l875:
  5887   002446  0E19               	movlw	25
  5888   002448  6440               	cpfsgt	___fldiv@aexp^0,c
  5889   00244A  EF29  F012         	goto	u4001
  5890   00244E  EF2B  F012         	goto	u4000
  5891   002452                     u4001:
  5892   002452  EFEB  F011         	goto	l3563
  5893   002456                     u4000:
  5894   002456  5034               	movf	___fldiv@rem^0,w,c
  5895   002458  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  5896   00245A  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  5897   00245C  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  5898   00245E  B4D8               	btfsc	status,2,c
  5899   002460  EF34  F012         	goto	u4011
  5900   002464  EF36  F012         	goto	u4010
  5901   002468                     u4011:
  5902   002468  EF4E  F012         	goto	l3589
  5903   00246C                     u4010:
  5904   00246C  803B               	bsf	___fldiv@grs^0,0,c
  5905   00246E  EF4E  F012         	goto	l3589
  5906   002472                     l3583:
  5907   002472  90D8               	bcf	status,0,c
  5908   002474  3628               	rlcf	___fldiv@b^0,f,c
  5909   002476  3629               	rlcf	(___fldiv@b+1)^0,f,c
  5910   002478  362A               	rlcf	(___fldiv@b+2)^0,f,c
  5911   00247A  362B               	rlcf	(___fldiv@b+3)^0,f,c
  5912   00247C  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  5913   00247E  EF43  F012         	goto	u4021
  5914   002482  EF45  F012         	goto	u4020
  5915   002486                     u4021:
  5916   002486  EF46  F012         	goto	l884
  5917   00248A                     u4020:
  5918   00248A  8028               	bsf	___fldiv@b^0,0,c
  5919   00248C                     l884:
  5920   00248C  90D8               	bcf	status,0,c
  5921   00248E  363B               	rlcf	___fldiv@grs^0,f,c
  5922   002490  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  5923   002492  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  5924   002494  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  5925   002496  0639               	decf	___fldiv@new_exp^0,f,c
  5926   002498  A0D8               	btfss	status,0,c
  5927   00249A  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  5928   00249C                     l3589:
  5929   00249C  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  5930   00249E  EF53  F012         	goto	u4031
  5931   0024A2  EF55  F012         	goto	u4030
  5932   0024A6                     u4031:
  5933   0024A6  EF39  F012         	goto	l3583
  5934   0024AA                     u4030:
  5935   0024AA  0E00               	movlw	0
  5936   0024AC  6E40               	movwf	___fldiv@aexp^0,c
  5937   0024AE  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  5938   0024B0  EF5C  F012         	goto	u4041
  5939   0024B4  EF5E  F012         	goto	u4040
  5940   0024B8                     u4041:
  5941   0024B8  EF82  F012         	goto	l886
  5942   0024BC                     u4040:
  5943   0024BC  0EFF               	movlw	255
  5944   0024BE  143B               	andwf	___fldiv@grs^0,w,c
  5945   0024C0  6E30               	movwf	??___fldiv^0,c
  5946   0024C2  0EFF               	movlw	255
  5947   0024C4  143C               	andwf	(___fldiv@grs+1)^0,w,c
  5948   0024C6  6E31               	movwf	(??___fldiv+1)^0,c
  5949   0024C8  0EFF               	movlw	255
  5950   0024CA  143D               	andwf	(___fldiv@grs+2)^0,w,c
  5951   0024CC  6E32               	movwf	(??___fldiv+2)^0,c
  5952   0024CE  0E7F               	movlw	127
  5953   0024D0  143E               	andwf	(___fldiv@grs+3)^0,w,c
  5954   0024D2  6E33               	movwf	(??___fldiv+3)^0,c
  5955   0024D4  5030               	movf	??___fldiv^0,w,c
  5956   0024D6  1031               	iorwf	(??___fldiv+1)^0,w,c
  5957   0024D8  1032               	iorwf	(??___fldiv+2)^0,w,c
  5958   0024DA  1033               	iorwf	(??___fldiv+3)^0,w,c
  5959   0024DC  B4D8               	btfsc	status,2,c
  5960   0024DE  EF73  F012         	goto	u4051
  5961   0024E2  EF75  F012         	goto	u4050
  5962   0024E6                     u4051:
  5963   0024E6  EF79  F012         	goto	l887
  5964   0024EA                     u4050:
  5965   0024EA                     l3597:
  5966   0024EA  0E01               	movlw	1
  5967   0024EC  6E40               	movwf	___fldiv@aexp^0,c
  5968   0024EE  EF82  F012         	goto	l886
  5969   0024F2                     l887:
  5970   0024F2  A028               	btfss	___fldiv@b^0,0,c
  5971   0024F4  EF7E  F012         	goto	u4061
  5972   0024F8  EF80  F012         	goto	u4060
  5973   0024FC                     u4061:
  5974   0024FC  EF82  F012         	goto	l886
  5975   002500                     u4060:
  5976   002500  EF75  F012         	goto	l3597
  5977   002504                     l886:
  5978   002504  5040               	movf	___fldiv@aexp^0,w,c
  5979   002506  B4D8               	btfsc	status,2,c
  5980   002508  EF88  F012         	goto	u4071
  5981   00250C  EF8A  F012         	goto	u4070
  5982   002510                     u4071:
  5983   002510  EFAE  F012         	goto	l3609
  5984   002514                     u4070:
  5985   002514  0E01               	movlw	1
  5986   002516  2628               	addwf	___fldiv@b^0,f,c
  5987   002518  0E00               	movlw	0
  5988   00251A  2229               	addwfc	(___fldiv@b+1)^0,f,c
  5989   00251C  222A               	addwfc	(___fldiv@b+2)^0,f,c
  5990   00251E  222B               	addwfc	(___fldiv@b+3)^0,f,c
  5991   002520  A02B               	btfss	(___fldiv@b+3)^0,0,c
  5992   002522  EF95  F012         	goto	u4081
  5993   002526  EF97  F012         	goto	u4080
  5994   00252A                     u4081:
  5995   00252A  EFAE  F012         	goto	l3609
  5996   00252E                     u4080:
  5997   00252E  C028  F030         	movff	___fldiv@b,??___fldiv
  5998   002532  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  5999   002536  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6000   00253A  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6001   00253E  3433               	rlcf	(??___fldiv+3)^0,w,c
  6002   002540  3233               	rrcf	(??___fldiv+3)^0,f,c
  6003   002542  3232               	rrcf	(??___fldiv+2)^0,f,c
  6004   002544  3231               	rrcf	(??___fldiv+1)^0,f,c
  6005   002546  3230               	rrcf	??___fldiv^0,f,c
  6006   002548  C030  F028         	movff	??___fldiv,___fldiv@b
  6007   00254C  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6008   002550  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6009   002554  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6010   002558  4A39               	infsnz	___fldiv@new_exp^0,f,c
  6011   00255A  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  6012   00255C                     l3609:
  6013   00255C  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6014   00255E  EFB9  F012         	goto	u4091
  6015   002562  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6016   002564  E108               	bnz	u4090
  6017   002566  2839               	incf	___fldiv@new_exp^0,w,c
  6018   002568  A0D8               	btfss	status,0,c
  6019   00256A  EFB9  F012         	goto	u4091
  6020   00256E  EFBB  F012         	goto	u4090
  6021   002572                     u4091:
  6022   002572  EFC6  F012         	goto	l3613
  6023   002576                     u4090:
  6024   002576  0E00               	movlw	0
  6025   002578  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6026   00257A  6839               	setf	___fldiv@new_exp^0,c
  6027   00257C  0E00               	movlw	0
  6028   00257E  6E28               	movwf	___fldiv@b^0,c
  6029   002580  0E00               	movlw	0
  6030   002582  6E29               	movwf	(___fldiv@b+1)^0,c
  6031   002584  0E00               	movlw	0
  6032   002586  6E2A               	movwf	(___fldiv@b+2)^0,c
  6033   002588  0E00               	movlw	0
  6034   00258A  6E2B               	movwf	(___fldiv@b+3)^0,c
  6035   00258C                     l3613:
  6036   00258C  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6037   00258E  EFD3  F012         	goto	u4100
  6038   002592  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6039   002594  E106               	bnz	u4101
  6040   002596  0439               	decf	___fldiv@new_exp^0,w,c
  6041   002598  B0D8               	btfsc	status,0,c
  6042   00259A  EFD1  F012         	goto	u4101
  6043   00259E  EFD3  F012         	goto	u4100
  6044   0025A2                     u4101:
  6045   0025A2  EFE1  F012         	goto	l3617
  6046   0025A6                     u4100:
  6047   0025A6  0E00               	movlw	0
  6048   0025A8  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6049   0025AA  0E00               	movlw	0
  6050   0025AC  6E39               	movwf	___fldiv@new_exp^0,c
  6051   0025AE  0E00               	movlw	0
  6052   0025B0  6E28               	movwf	___fldiv@b^0,c
  6053   0025B2  0E00               	movlw	0
  6054   0025B4  6E29               	movwf	(___fldiv@b+1)^0,c
  6055   0025B6  0E00               	movlw	0
  6056   0025B8  6E2A               	movwf	(___fldiv@b+2)^0,c
  6057   0025BA  0E00               	movlw	0
  6058   0025BC  6E2B               	movwf	(___fldiv@b+3)^0,c
  6059   0025BE  0E00               	movlw	0
  6060   0025C0  6E38               	movwf	___fldiv@sign^0,c
  6061   0025C2                     l3617:
  6062   0025C2  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  6063   0025C6  A03F               	btfss	___fldiv@bexp^0,0,c
  6064   0025C8  EFE8  F012         	goto	u4111
  6065   0025CC  EFEA  F012         	goto	u4110
  6066   0025D0                     u4111:
  6067   0025D0  EFED  F012         	goto	l3623
  6068   0025D4                     u4110:
  6069   0025D4  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6070   0025D6  EFEE  F012         	goto	l3625
  6071   0025DA                     l3623:
  6072   0025DA  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  6073   0025DC                     l3625:
  6074   0025DC  90D8               	bcf	status,0,c
  6075   0025DE  303F               	rrcf	___fldiv@bexp^0,w,c
  6076   0025E0  6E2B               	movwf	(___fldiv@b+3)^0,c
  6077   0025E2  EFA4  F011         	goto	l3539
  6078   0025E6                     l873:
  6079   0025E6  0012               	return		;funcret
  6080   0025E8                     __end_of___fldiv:
  6081                           	callstack 0
  6082                           
  6083 ;; *************** function _SPI_write *****************
  6084 ;; Defined at:
  6085 ;;		line 93 in file "DAC.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  data            1    wreg     unsigned char 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  data            1    2[COMRAM] unsigned char 
  6090 ;;  LSB             1    1[COMRAM] unsigned char 
  6091 ;;  MSB             1    0[COMRAM] unsigned char 
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1    wreg      void 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2, status,0
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6102 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6105 ;;Total ram usage:        3 bytes
  6106 ;; Hardware stack levels used: 1
  6107 ;; This function calls:
  6108 ;;		Nothing
  6109 ;; This function is called by:
  6110 ;;		_runDAC
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text22
  6115   003E90                     __ptext22:
  6116                           	callstack 0
  6117   003E90                     _SPI_write:
  6118                           	callstack 29
  6119                           
  6120                           ;incstack = 0
  6121                           ;SPI_write@data stored from wreg
  6122   003E90  6E03               	movwf	SPI_write@data^0,c
  6123   003E92                     
  6124                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  6125   003E92  3803               	swapf	SPI_write@data^0,w,c
  6126   003E94  0B0F               	andlw	15
  6127   003E96  0930               	iorlw	48
  6128   003E98  6E01               	movwf	SPI_write@MSB^0,c
  6129                           
  6130                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  6131   003E9A  3803               	swapf	SPI_write@data^0,w,c
  6132   003E9C  0BF0               	andlw	240
  6133   003E9E  6E02               	movwf	SPI_write@LSB^0,c
  6134   003EA0                     
  6135                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  6136   003EA0  968A               	bcf	138,3,c	;volatile
  6137   003EA2                     
  6138                           ;DAC.c: 101:     SSP1BUF = MSB;
  6139   003EA2  C001  FFC9         	movff	SPI_write@MSB,4041	;volatile
  6140   003EA6                     l200:
  6141   003EA6  A69E               	btfss	3998,3,c	;volatile
  6142   003EA8  EF58  F01F         	goto	u3681
  6143   003EAC  EF5A  F01F         	goto	u3680
  6144   003EB0                     u3681:
  6145   003EB0  EF53  F01F         	goto	l200
  6146   003EB4                     u3680:
  6147   003EB4                     
  6148                           ;DAC.c: 103:     SSP1IF = 0;
  6149   003EB4  969E               	bcf	3998,3,c	;volatile
  6150                           
  6151                           ;DAC.c: 105:     SSP1BUF = LSB;
  6152   003EB6  C002  FFC9         	movff	SPI_write@LSB,4041	;volatile
  6153   003EBA                     l203:
  6154   003EBA  A69E               	btfss	3998,3,c	;volatile
  6155   003EBC  EF62  F01F         	goto	u3691
  6156   003EC0  EF64  F01F         	goto	u3690
  6157   003EC4                     u3691:
  6158   003EC4  EF5D  F01F         	goto	l203
  6159   003EC8                     u3690:
  6160   003EC8                     
  6161                           ;DAC.c: 107:     SSP1IF = 0;
  6162   003EC8  969E               	bcf	3998,3,c	;volatile
  6163                           
  6164                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  6165   003ECA  868A               	bsf	138,3,c	;volatile
  6166   003ECC  0012               	return		;funcret
  6167   003ECE                     __end_of_SPI_write:
  6168                           	callstack 0
  6169                           
  6170 ;; *************** function _moveDisplay *****************
  6171 ;; Defined at:
  6172 ;;		line 11 in file "menu.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;  menuI           1    wreg     unsigned char 
  6175 ;;  where           1   73[COMRAM] unsigned char 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;  menuI           1   42[BANK0 ] unsigned char 
  6178 ;;  menuItem2      17   17[BANK0 ] unsigned char [17]
  6179 ;;  menuItem1      17    0[BANK0 ] unsigned char [17]
  6180 ;;  menuItems       8   34[BANK0 ] PTR unsigned char [8]
  6181 ;;		 -> STR_11(1), STR_10(6), STR_9(5), STR_8(4), 
  6182 ;;		 -> STR_7(4), STR_6(4), STR_5(5), STR_4(5), 
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  1    wreg      unsigned char 
  6185 ;; Registers used:
  6186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6192 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;      Locals:         0      43       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6195 ;;      Totals:         3      43       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6196 ;;Total ram usage:       46 bytes
  6197 ;; Hardware stack levels used: 1
  6198 ;; Hardware stack levels required when called: 8
  6199 ;; This function calls:
  6200 ;;		_LCD_Clear
  6201 ;;		_LCD_ShowString
  6202 ;;		_sprintf
  6203 ;; This function is called by:
  6204 ;;		_main
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           	psect	text23
  6209   003794                     __ptext23:
  6210                           	callstack 0
  6211   003794                     _moveDisplay:
  6212                           	callstack 22
  6213                           
  6214                           ;incstack = 0
  6215                           ;moveDisplay@menuI stored from wreg
  6216   003794  0100               	movlb	0	; () banked
  6217   003796  6F8A               	movwf	moveDisplay@menuI& (0+255),b
  6218   003798                     
  6219                           ;menu.c: 12:     LCD_Clear();
  6220   003798  EC9F  F01F         	call	_LCD_Clear	;wreg free
  6221   00379C                     
  6222                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  6223   00379C  EE20  F0D9         	lfsr	2,moveDisplay@F6950
  6224   0037A0  EE10  F082         	lfsr	1,moveDisplay@menuItems
  6225   0037A4  0E07               	movlw	7
  6226   0037A6                     u4711:
  6227   0037A6  CFDB FFE3          	movff	plusw2,plusw1
  6228   0037AA  06E8               	decf	wreg,f,c
  6229   0037AC  E2FC               	bc	u4711
  6230                           
  6231                           ;menu.c: 14:     switch (where){
  6232   0037AE  EFF1  F01B         	goto	l4025
  6233   0037B2                     l4015:
  6234                           
  6235                           ;menu.c: 18:             if(menuI<6){
  6236   0037B2  0E06               	movlw	6
  6237   0037B4  0100               	movlb	0	; () banked
  6238   0037B6  618A               	cpfslt	moveDisplay@menuI& (0+255),b
  6239   0037B8  EFE0  F01B         	goto	u4721
  6240   0037BC  EFE2  F01B         	goto	u4720
  6241   0037C0                     u4721:
  6242   0037C0  EF00  F01C         	goto	l4027
  6243   0037C4                     u4720:
  6244   0037C4                     
  6245                           ; BSR set to: 0
  6246                           ;menu.c: 19:             menuI++;
  6247   0037C4  2B8A               	incf	moveDisplay@menuI& (0+255),f,b
  6248   0037C6  EF00  F01C         	goto	l4027
  6249   0037CA                     l4019:
  6250                           
  6251                           ;menu.c: 23:             if(menuI>0){
  6252   0037CA  0100               	movlb	0	; () banked
  6253   0037CC  518A               	movf	moveDisplay@menuI& (0+255),w,b
  6254   0037CE  B4D8               	btfsc	status,2,c
  6255   0037D0  EFEC  F01B         	goto	u4731
  6256   0037D4  EFEE  F01B         	goto	u4730
  6257   0037D8                     u4731:
  6258   0037D8  EF00  F01C         	goto	l4027
  6259   0037DC                     u4730:
  6260   0037DC                     
  6261                           ; BSR set to: 0
  6262                           ;menu.c: 24:             menuI--;
  6263   0037DC  078A               	decf	moveDisplay@menuI& (0+255),f,b
  6264   0037DE  EF00  F01C         	goto	l4027
  6265   0037E2                     l4025:
  6266   0037E2  504A               	movf	moveDisplay@where^0,w,c
  6267                           
  6268                           ; Switch size 1, requested type "simple"
  6269                           ; Number of cases is 3, Range of values is 0 to 2
  6270                           ; switch strategies available:
  6271                           ; Name         Instructions Cycles
  6272                           ; simple_byte           10     6 (average)
  6273                           ;	Chosen strategy is simple_byte
  6274   0037E4  0A00               	xorlw	0	; case 0
  6275   0037E6  B4D8               	btfsc	status,2,c
  6276   0037E8  EF00  F01C         	goto	l4027
  6277   0037EC  0A01               	xorlw	1	; case 1
  6278   0037EE  B4D8               	btfsc	status,2,c
  6279   0037F0  EFD9  F01B         	goto	l4015
  6280   0037F4  0A03               	xorlw	3	; case 2
  6281   0037F6  B4D8               	btfsc	status,2,c
  6282   0037F8  EFE5  F01B         	goto	l4019
  6283   0037FC  EF00  F01C         	goto	l4027
  6284   003800                     l4027:
  6285                           
  6286                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  6287   003800  0E60               	movlw	low moveDisplay@menuItem1
  6288   003802  6E37               	movwf	sprintf@s^0,c
  6289   003804  0E70               	movlw	low STR_12
  6290   003806  6E38               	movwf	sprintf@fmt^0,c
  6291   003808  0E00               	movlw	0
  6292   00380A  6E3A               	movwf	(?_sprintf+3)^0,c
  6293   00380C  0E0F               	movlw	15
  6294   00380E  6E39               	movwf	(?_sprintf+2)^0,c
  6295   003810  0100               	movlb	0	; () banked
  6296   003812  518A               	movf	moveDisplay@menuI& (0+255),w,b
  6297   003814  0F82               	addlw	low moveDisplay@menuItems
  6298   003816  6ED9               	movwf	fsr2l,c
  6299   003818  6ADA               	clrf	fsr2h,c
  6300   00381A  50DF               	movf	indf2,w,c
  6301   00381C  6E4B               	movwf	??_moveDisplay^0,c
  6302   00381E  C04B  F03B         	movff	??_moveDisplay,?_sprintf+4
  6303   003822  503B               	movf	(?_sprintf+4)^0,w,c
  6304   003824  A4D8               	btfss	status,2,c
  6305   003826  0E10               	movlw	high __smallconst
  6306   003828  6E3C               	movwf	(?_sprintf+5)^0,c
  6307   00382A  EC84  F01F         	call	_sprintf	;wreg free
  6308                           
  6309                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  6310   00382E  0E71               	movlw	low moveDisplay@menuItem2
  6311   003830  6E37               	movwf	sprintf@s^0,c
  6312   003832  0E71               	movlw	low (STR_12+1)
  6313   003834  6E38               	movwf	sprintf@fmt^0,c
  6314   003836  0E00               	movlw	0
  6315   003838  6E3A               	movwf	(?_sprintf+3)^0,c
  6316   00383A  0E10               	movlw	16
  6317   00383C  6E39               	movwf	(?_sprintf+2)^0,c
  6318   00383E  C08A  F04B         	movff	moveDisplay@menuI,??_moveDisplay
  6319   003842  0E01               	movlw	1
  6320   003844  264B               	addwf	??_moveDisplay^0,f,c
  6321   003846  504B               	movf	??_moveDisplay^0,w,c
  6322   003848  0F82               	addlw	low moveDisplay@menuItems
  6323   00384A  6ED9               	movwf	fsr2l,c
  6324   00384C  6ADA               	clrf	fsr2h,c
  6325   00384E  50DF               	movf	indf2,w,c
  6326   003850  6E4C               	movwf	(??_moveDisplay+1)^0,c
  6327   003852  C04C  F03B         	movff	??_moveDisplay+1,?_sprintf+4
  6328   003856  503B               	movf	(?_sprintf+4)^0,w,c
  6329   003858  A4D8               	btfss	status,2,c
  6330   00385A  0E10               	movlw	high __smallconst
  6331   00385C  6E3C               	movwf	(?_sprintf+5)^0,c
  6332   00385E  EC84  F01F         	call	_sprintf	;wreg free
  6333   003862                     
  6334                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  6335   003862  0E60               	movlw	low moveDisplay@menuItem1
  6336   003864  6E02               	movwf	LCD_ShowString@textData^0,c
  6337   003866  6A03               	clrf	(LCD_ShowString@textData+1)^0,c
  6338   003868  0E01               	movlw	1
  6339   00386A  EC6C  F01D         	call	_LCD_ShowString
  6340   00386E                     
  6341                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  6342   00386E  0E71               	movlw	low moveDisplay@menuItem2
  6343   003870  6E02               	movwf	LCD_ShowString@textData^0,c
  6344   003872  6A03               	clrf	(LCD_ShowString@textData+1)^0,c
  6345   003874  0E02               	movlw	2
  6346   003876  EC6C  F01D         	call	_LCD_ShowString
  6347   00387A                     
  6348                           ;menu.c: 35:     return menuI;
  6349   00387A  0100               	movlb	0	; () banked
  6350   00387C  518A               	movf	moveDisplay@menuI& (0+255),w,b
  6351   00387E                     
  6352                           ; BSR set to: 0
  6353   00387E  0012               	return		;funcret
  6354   003880                     __end_of_moveDisplay:
  6355                           	callstack 0
  6356                           
  6357 ;; *************** function _sprintf *****************
  6358 ;; Defined at:
  6359 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  s               1   54[COMRAM] PTR unsigned char 
  6362 ;;		 -> moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), 
  6363 ;;  fmt             1   55[COMRAM] PTR const unsigned char 
  6364 ;;		 -> STR_13(5), STR_12(6), 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;  f              12   61[COMRAM] struct _IO_FILE
  6367 ;;  ret             2    0        int 
  6368 ;;  ap              1   60[COMRAM] PTR void [1]
  6369 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  2   54[COMRAM] int 
  6372 ;; Registers used:
  6373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6379 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6382 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6383 ;;Total ram usage:       19 bytes
  6384 ;; Hardware stack levels used: 1
  6385 ;; Hardware stack levels required when called: 7
  6386 ;; This function calls:
  6387 ;;		_vfprintf
  6388 ;; This function is called by:
  6389 ;;		_moveDisplay
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text24
  6394   003F08                     __ptext24:
  6395                           	callstack 0
  6396   003F08                     _sprintf:
  6397                           	callstack 22
  6398   003F08  0E39               	movlw	low (?_sprintf+2)
  6399   003F0A  6E3D               	movwf	sprintf@ap^0,c
  6400   003F0C  C037  F03E         	movff	sprintf@s,sprintf@f
  6401   003F10  0E00               	movlw	0
  6402   003F12  6E42               	movwf	(sprintf@f+4)^0,c
  6403   003F14  0E00               	movlw	0
  6404   003F16  6E41               	movwf	(sprintf@f+3)^0,c
  6405   003F18  0E00               	movlw	0
  6406   003F1A  6E49               	movwf	(sprintf@f+11)^0,c
  6407   003F1C  0E00               	movlw	0
  6408   003F1E  6E48               	movwf	(sprintf@f+10)^0,c
  6409   003F20  0E3E               	movlw	low sprintf@f
  6410   003F22  6E32               	movwf	vfprintf@fp^0,c
  6411   003F24  6A33               	clrf	(vfprintf@fp+1)^0,c
  6412   003F26  C038  F034         	movff	sprintf@fmt,vfprintf@fmt
  6413   003F2A  0E3D               	movlw	low sprintf@ap
  6414   003F2C  6E35               	movwf	vfprintf@ap^0,c
  6415   003F2E  EC27  F01F         	call	_vfprintf	;wreg free
  6416   003F32  5037               	movf	sprintf@s^0,w,c
  6417   003F34  2441               	addwf	(sprintf@f+3)^0,w,c
  6418   003F36  6ED9               	movwf	fsr2l,c
  6419   003F38  6ADA               	clrf	fsr2h,c
  6420   003F3A  6ADF               	clrf	indf2,c
  6421   003F3C  0012               	return		;funcret
  6422   003F3E                     __end_of_sprintf:
  6423                           	callstack 0
  6424                           
  6425 ;; *************** function _vfprintf *****************
  6426 ;; Defined at:
  6427 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;  fp              2   49[COMRAM] PTR struct _IO_FILE
  6430 ;;		 -> NULL(0), sprintf@f(12), 
  6431 ;;  fmt             1   51[COMRAM] PTR const unsigned char 
  6432 ;;		 -> STR_13(5), STR_12(6), STR_3(5), 
  6433 ;;  ap              1   52[COMRAM] PTR PTR void 
  6434 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  cfmt            1   53[COMRAM] PTR unsigned char 
  6437 ;;		 -> STR_13(5), STR_12(6), STR_3(5), 
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  2   49[COMRAM] int 
  6440 ;; Registers used:
  6441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6447 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;Total ram usage:        5 bytes
  6452 ;; Hardware stack levels used: 1
  6453 ;; Hardware stack levels required when called: 6
  6454 ;; This function calls:
  6455 ;;		_vfpfcnvrt
  6456 ;; This function is called by:
  6457 ;;		_sprintf
  6458 ;;		_printf
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text25
  6463   003E4E                     __ptext25:
  6464                           	callstack 0
  6465   003E4E                     _vfprintf:
  6466                           	callstack 22
  6467   003E4E                     
  6468                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6469   003E4E  C034  F036         	movff	vfprintf@fmt,vfprintf@cfmt
  6470                           
  6471                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6472   003E52  EF35  F01F         	goto	l3987
  6473   003E56                     l3985:
  6474                           
  6475                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6476   003E56  C032  F027         	movff	vfprintf@fp,vfpfcnvrt@fp
  6477   003E5A  C033  F028         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6478   003E5E  0E36               	movlw	low vfprintf@cfmt
  6479   003E60  6E29               	movwf	vfpfcnvrt@fmt^0,c
  6480   003E62  C035  F02A         	movff	vfprintf@ap,vfpfcnvrt@ap
  6481   003E66  ECF4  F012         	call	_vfpfcnvrt	;wreg free
  6482   003E6A                     l3987:
  6483                           
  6484                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6485   003E6A  C036  FFF6         	movff	vfprintf@cfmt,tblptrl
  6486   003E6E                     	if	1	;There is more than 1 active tblptr byte
  6487   003E6E  0E10               	movlw	high __smallconst
  6488   003E70  6EF7               	movwf	tblptrh,c
  6489   003E72                     	endif
  6490   003E72                     	if	0	;tblptru may be non-zero
  6491   003E72                     	endif
  6492   003E72                     	if	0	;tblptru may be non-zero
  6493   003E72                     	endif
  6494   003E72  0008               	tblrd		*
  6495   003E74  50F5               	movf	tablat,w,c
  6496   003E76  0900               	iorlw	0
  6497   003E78  A4D8               	btfss	status,2,c
  6498   003E7A  EF41  F01F         	goto	u4701
  6499   003E7E  EF43  F01F         	goto	u4700
  6500   003E82                     u4701:
  6501   003E82  EF2B  F01F         	goto	l3985
  6502   003E86                     u4700:
  6503   003E86                     
  6504                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6505   003E86  0E00               	movlw	0
  6506   003E88  6E33               	movwf	(?_vfprintf+1)^0,c
  6507   003E8A  0E00               	movlw	0
  6508   003E8C  6E32               	movwf	?_vfprintf^0,c
  6509   003E8E  0012               	return		;funcret
  6510   003E90                     __end_of_vfprintf:
  6511                           	callstack 0
  6512                           
  6513 ;; *************** function _vfpfcnvrt *****************
  6514 ;; Defined at:
  6515 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6516 ;; Parameters:    Size  Location     Type
  6517 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  6518 ;;		 -> NULL(0), sprintf@f(12), 
  6519 ;;  fmt             1   40[COMRAM] PTR PTR unsigned char 
  6520 ;;		 -> vfprintf@cfmt(1), 
  6521 ;;  ap              1   41[COMRAM] PTR PTR void 
  6522 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;  convarg         4   43[COMRAM] struct .
  6525 ;;  done            1   48[COMRAM] _Bool 
  6526 ;;  cp              1   47[COMRAM] PTR unsigned char 
  6527 ;;		 -> STR_13(5), STR_12(6), STR_3(5), 
  6528 ;;  c               1    0        unsigned char 
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  1    wreg      void 
  6531 ;; Registers used:
  6532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6538 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6539 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6540 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6542 ;;Total ram usage:       11 bytes
  6543 ;; Hardware stack levels used: 1
  6544 ;; Hardware stack levels required when called: 5
  6545 ;; This function calls:
  6546 ;;		_dtoa
  6547 ;;		_fputc
  6548 ;;		_read_prec_or_width
  6549 ;;		_stoa
  6550 ;; This function is called by:
  6551 ;;		_vfprintf
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           	psect	text26
  6556   0025E8                     __ptext26:
  6557                           	callstack 0
  6558   0025E8                     _vfpfcnvrt:
  6559                           	callstack 22
  6560   0025E8                     
  6561                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6562   0025E8  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6563   0025EA  6ED9               	movwf	fsr2l,c
  6564   0025EC  6ADA               	clrf	fsr2h,c
  6565   0025EE  CFDF FFF6          	movff	indf2,tblptrl
  6566   0025F2                     	if	1	;There is more than 1 active tblptr byte
  6567   0025F2  0E10               	movlw	high __smallconst
  6568   0025F4  6EF7               	movwf	tblptrh,c
  6569   0025F6                     	endif
  6570   0025F6                     	if	0	;tblptru may be non-zero
  6571   0025F6                     	endif
  6572   0025F6                     	if	0	;tblptru may be non-zero
  6573   0025F6                     	endif
  6574   0025F6  0008               	tblrd		*
  6575   0025F8  50F5               	movf	tablat,w,c
  6576   0025FA  0A25               	xorlw	37
  6577   0025FC  A4D8               	btfss	status,2,c
  6578   0025FE  EF03  F013         	goto	u4601
  6579   002602  EF05  F013         	goto	u4600
  6580   002606                     u4601:
  6581   002606  EF0D  F014         	goto	l3977
  6582   00260A                     u4600:
  6583   00260A                     
  6584                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  6585   00260A  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6586   00260C  6ED9               	movwf	fsr2l,c
  6587   00260E  6ADA               	clrf	fsr2h,c
  6588   002610  2ADF               	incf	indf2,f,c
  6589   002612                     
  6590                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  6591   002612  0E00               	movlw	0
  6592   002614  0100               	movlb	0	; () banked
  6593   002616  6FEA               	movwf	(_width+1)& (0+255),b
  6594   002618  0E00               	movlw	0
  6595   00261A  6FE9               	movwf	_width& (0+255),b
  6596   00261C  C0E9  F0ED         	movff	_width,_flags
  6597   002620                     
  6598                           ; BSR set to: 0
  6599                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  6600   002620  69EB               	setf	_prec& (0+255),b
  6601   002622  69EC               	setf	(_prec+1)& (0+255),b
  6602   002624                     
  6603                           ; BSR set to: 0
  6604                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  6605   002624  0E00               	movlw	0
  6606   002626  6E31               	movwf	vfpfcnvrt@done^0,c
  6607                           
  6608                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  6609   002628  EF31  F013         	goto	l3927
  6610   00262C                     l3917:
  6611                           
  6612                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1214:            
      +                                   flags |= (1 << 0);
  6613   00262C  0100               	movlb	0	; () banked
  6614   00262E  81ED               	bsf	_flags& (0+255),0,b
  6615   002630                     
  6616                           ; BSR set to: 0
  6617                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1215:            
      +                                   ++*fmt;
  6618   002630  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6619   002632  6ED9               	movwf	fsr2l,c
  6620   002634  6ADA               	clrf	fsr2h,c
  6621   002636  2ADF               	incf	indf2,f,c
  6622                           
  6623                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1216:            
      +                                   break;
  6624   002638  EF31  F013         	goto	l3927
  6625   00263C                     l3921:
  6626                           
  6627                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  6628   00263C  0E01               	movlw	1
  6629   00263E  6E31               	movwf	vfpfcnvrt@done^0,c
  6630                           
  6631                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  6632   002640  EF31  F013         	goto	l3927
  6633   002644                     l3925:
  6634   002644  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6635   002646  6ED9               	movwf	fsr2l,c
  6636   002648  6ADA               	clrf	fsr2h,c
  6637   00264A  CFDF FFF6          	movff	indf2,tblptrl
  6638   00264E                     	if	1	;There is more than 1 active tblptr byte
  6639   00264E  0E10               	movlw	high __smallconst
  6640   002650  6EF7               	movwf	tblptrh,c
  6641   002652                     	endif
  6642   002652                     	if	0	;tblptru may be non-zero
  6643   002652                     	endif
  6644   002652                     	if	0	;tblptru may be non-zero
  6645   002652                     	endif
  6646   002652  0008               	tblrd		*
  6647   002654  50F5               	movf	tablat,w,c
  6648                           
  6649                           ; Switch size 1, requested type "simple"
  6650                           ; Number of cases is 1, Range of values is 45 to 45
  6651                           ; switch strategies available:
  6652                           ; Name         Instructions Cycles
  6653                           ; simple_byte            4     3 (average)
  6654                           ;	Chosen strategy is simple_byte
  6655   002656  0A2D               	xorlw	45	; case 45
  6656   002658  B4D8               	btfsc	status,2,c
  6657   00265A  EF16  F013         	goto	l3917
  6658   00265E  EF1E  F013         	goto	l3921
  6659   002662                     l3927:
  6660                           
  6661                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  6662   002662  5031               	movf	vfpfcnvrt@done^0,w,c
  6663   002664  B4D8               	btfsc	status,2,c
  6664   002666  EF37  F013         	goto	u4611
  6665   00266A  EF39  F013         	goto	u4610
  6666   00266E                     u4611:
  6667   00266E  EF22  F013         	goto	l3925
  6668   002672                     u4610:
  6669   002672                     
  6670                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  6671   002672  C029  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6672   002676  C02A  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6673   00267A  EC1D  F01E         	call	_read_prec_or_width	;wreg free
  6674   00267E  C007  F0E9         	movff	?_read_prec_or_width,_width
  6675   002682  C008  F0EA         	movff	?_read_prec_or_width+1,_width+1
  6676   002686                     
  6677                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  6678   002686  0100               	movlb	0	; () banked
  6679   002688  BFEA               	btfsc	(_width+1)& (0+255),7,b
  6680   00268A  EF4B  F013         	goto	u4620
  6681   00268E  EF49  F013         	goto	u4621
  6682   002692                     u4621:
  6683   002692  EF50  F013         	goto	l3935
  6684   002696                     u4620:
  6685   002696                     
  6686                           ; BSR set to: 0
  6687                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  6688   002696  81ED               	bsf	_flags& (0+255),0,b
  6689                           
  6690                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  6691   002698  6DE9               	negf	_width& (0+255),b
  6692   00269A  1FEA               	comf	(_width+1)& (0+255),f,b
  6693   00269C  B0D8               	btfsc	status,0,c
  6694   00269E  2BEA               	incf	(_width+1)& (0+255),f,b
  6695   0026A0                     l3935:
  6696                           
  6697                           ; BSR set to: 0
  6698                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  6699   0026A0  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6700   0026A2  6ED9               	movwf	fsr2l,c
  6701   0026A4  6ADA               	clrf	fsr2h,c
  6702   0026A6  50DF               	movf	indf2,w,c
  6703   0026A8  6E30               	movwf	vfpfcnvrt@cp^0,c
  6704   0026AA                     
  6705                           ; BSR set to: 0
  6706                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6707   0026AA  C030  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6708   0026AE                     	if	1	;There is more than 1 active tblptr byte
  6709   0026AE  0E10               	movlw	high __smallconst
  6710   0026B0  6EF7               	movwf	tblptrh,c
  6711   0026B2                     	endif
  6712   0026B2                     	if	0	;tblptru may be non-zero
  6713   0026B2                     	endif
  6714   0026B2                     	if	0	;tblptru may be non-zero
  6715   0026B2                     	endif
  6716   0026B2  0008               	tblrd		*
  6717   0026B4  50F5               	movf	tablat,w,c
  6718   0026B6  0A64               	xorlw	100
  6719   0026B8  B4D8               	btfsc	status,2,c
  6720   0026BA  EF61  F013         	goto	u4631
  6721   0026BE  EF63  F013         	goto	u4630
  6722   0026C2                     u4631:
  6723   0026C2  EF71  F013         	goto	l3941
  6724   0026C6                     u4630:
  6725   0026C6                     
  6726                           ; BSR set to: 0
  6727   0026C6  C030  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6728   0026CA                     	if	1	;There is more than 1 active tblptr byte
  6729   0026CA  0E10               	movlw	high __smallconst
  6730   0026CC  6EF7               	movwf	tblptrh,c
  6731   0026CE                     	endif
  6732   0026CE                     	if	0	;tblptru may be non-zero
  6733   0026CE                     	endif
  6734   0026CE                     	if	0	;tblptru may be non-zero
  6735   0026CE                     	endif
  6736   0026CE  0008               	tblrd		*
  6737   0026D0  50F5               	movf	tablat,w,c
  6738   0026D2  0A69               	xorlw	105
  6739   0026D4  A4D8               	btfss	status,2,c
  6740   0026D6  EF6F  F013         	goto	u4641
  6741   0026DA  EF71  F013         	goto	u4640
  6742   0026DE                     u4641:
  6743   0026DE  EF8E  F013         	goto	l3949
  6744   0026E2                     u4640:
  6745   0026E2                     l3941:
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6749   0026E2  502A               	movf	vfpfcnvrt@ap^0,w,c
  6750   0026E4  6ED9               	movwf	fsr2l,c
  6751   0026E6  6ADA               	clrf	fsr2h,c
  6752   0026E8  0E02               	movlw	2
  6753   0026EA  26DF               	addwf	indf2,f,c
  6754   0026EC  5CDF               	subwf	indf2,w,c
  6755   0026EE  6ED9               	movwf	fsr2l,c
  6756   0026F0  6ADA               	clrf	fsr2h,c
  6757   0026F2  CFDE F02C          	movff	postinc2,vfpfcnvrt@convarg
  6758   0026F6  CFDE F02D          	movff	postinc2,vfpfcnvrt@convarg+1
  6759   0026FA                     
  6760                           ; BSR set to: 0
  6761                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  6762   0026FA  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6763   0026FC  6ED9               	movwf	fsr2l,c
  6764   0026FE  6ADA               	clrf	fsr2h,c
  6765   002700  2830               	incf	vfpfcnvrt@cp^0,w,c
  6766   002702  6EDF               	movwf	indf2,c
  6767   002704                     
  6768                           ; BSR set to: 0
  6769                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  6770   002704  C027  F01B         	movff	vfpfcnvrt@fp,dtoa@fp
  6771   002708  C028  F01C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6772   00270C  C02C  F01D         	movff	vfpfcnvrt@convarg,dtoa@d
  6773   002710  C02D  F01E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6774   002714  EC9E  F01A         	call	_dtoa	;wreg free
  6775   002718  EF20  F014         	goto	l1050
  6776   00271C                     l3949:
  6777                           
  6778                           ; BSR set to: 0
  6779                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  6780   00271C  0E00               	movlw	0
  6781   00271E  6E31               	movwf	vfpfcnvrt@done^0,c
  6782   002720                     
  6783                           ; BSR set to: 0
  6784                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  6785   002720  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6786   002722  6ED9               	movwf	fsr2l,c
  6787   002724  6ADA               	clrf	fsr2h,c
  6788   002726  CFDF FFF6          	movff	indf2,tblptrl
  6789   00272A                     	if	1	;There is more than 1 active tblptr byte
  6790   00272A  0E10               	movlw	high __smallconst
  6791   00272C  6EF7               	movwf	tblptrh,c
  6792   00272E                     	endif
  6793   00272E                     	if	0	;tblptru may be non-zero
  6794   00272E                     	endif
  6795   00272E                     	if	0	;tblptru may be non-zero
  6796   00272E                     	endif
  6797   00272E  0008               	tblrd		*
  6798   002730  50F5               	movf	tablat,w,c
  6799   002732  0A73               	xorlw	115
  6800   002734  A4D8               	btfss	status,2,c
  6801   002736  EF9F  F013         	goto	u4651
  6802   00273A  EFA1  F013         	goto	u4650
  6803   00273E                     u4651:
  6804   00273E  EFA9  F013         	goto	l3957
  6805   002742                     u4650:
  6806   002742                     
  6807                           ; BSR set to: 0
  6808                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  6809   002742  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6810   002744  6ED9               	movwf	fsr2l,c
  6811   002746  6ADA               	clrf	fsr2h,c
  6812   002748  2ADF               	incf	indf2,f,c
  6813   00274A                     l3955:
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  6817   00274A  0E01               	movlw	1
  6818   00274C  6E31               	movwf	vfpfcnvrt@done^0,c
  6819                           
  6820                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  6821   00274E  EFEB  F013         	goto	l3967
  6822   002752                     l3957:
  6823                           
  6824                           ; BSR set to: 0
  6825   002752  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6826   002754  6ED9               	movwf	fsr2l,c
  6827   002756  6ADA               	clrf	fsr2h,c
  6828   002758  CFDF FFF6          	movff	indf2,tblptrl
  6829   00275C                     	if	1	;There is more than 1 active tblptr byte
  6830   00275C  0E10               	movlw	high __smallconst
  6831   00275E  6EF7               	movwf	tblptrh,c
  6832   002760                     	endif
  6833   002760                     	if	0	;tblptru may be non-zero
  6834   002760                     	endif
  6835   002760                     	if	0	;tblptru may be non-zero
  6836   002760                     	endif
  6837   002760  0008               	tblrd		*
  6838   002762  50F5               	movf	tablat,w,c
  6839   002764  0A6C               	xorlw	108
  6840   002766  A4D8               	btfss	status,2,c
  6841   002768  EFB8  F013         	goto	u4661
  6842   00276C  EFBA  F013         	goto	u4660
  6843   002770                     u4661:
  6844   002770  EFEB  F013         	goto	l3967
  6845   002774                     u4660:
  6846   002774                     
  6847                           ; BSR set to: 0
  6848   002774  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6849   002776  6ED9               	movwf	fsr2l,c
  6850   002778  6ADA               	clrf	fsr2h,c
  6851   00277A  50DF               	movf	indf2,w,c
  6852   00277C  6E2B               	movwf	??_vfpfcnvrt^0,c
  6853   00277E  0E01               	movlw	1
  6854   002780  262B               	addwf	??_vfpfcnvrt^0,f,c
  6855   002782  C02B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6856   002786                     	if	1	;There is more than 1 active tblptr byte
  6857   002786  0E10               	movlw	high __smallconst
  6858   002788  6EF7               	movwf	tblptrh,c
  6859   00278A                     	endif
  6860   00278A                     	if	0	;tblptru may be non-zero
  6861   00278A                     	endif
  6862   00278A                     	if	0	;tblptru may be non-zero
  6863   00278A                     	endif
  6864   00278A  0008               	tblrd		*
  6865   00278C  50F5               	movf	tablat,w,c
  6866   00278E  0A6C               	xorlw	108
  6867   002790  A4D8               	btfss	status,2,c
  6868   002792  EFCD  F013         	goto	u4671
  6869   002796  EFCF  F013         	goto	u4670
  6870   00279A                     u4671:
  6871   00279A  EFEB  F013         	goto	l3967
  6872   00279E                     u4670:
  6873   00279E                     
  6874                           ; BSR set to: 0
  6875   00279E  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6876   0027A0  6ED9               	movwf	fsr2l,c
  6877   0027A2  6ADA               	clrf	fsr2h,c
  6878   0027A4  50DF               	movf	indf2,w,c
  6879   0027A6  6E2B               	movwf	??_vfpfcnvrt^0,c
  6880   0027A8  0E02               	movlw	2
  6881   0027AA  262B               	addwf	??_vfpfcnvrt^0,f,c
  6882   0027AC  C02B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6883   0027B0                     	if	1	;There is more than 1 active tblptr byte
  6884   0027B0  0E10               	movlw	high __smallconst
  6885   0027B2  6EF7               	movwf	tblptrh,c
  6886   0027B4                     	endif
  6887   0027B4                     	if	0	;tblptru may be non-zero
  6888   0027B4                     	endif
  6889   0027B4                     	if	0	;tblptru may be non-zero
  6890   0027B4                     	endif
  6891   0027B4  0008               	tblrd		*
  6892   0027B6  50F5               	movf	tablat,w,c
  6893   0027B8  0A73               	xorlw	115
  6894   0027BA  A4D8               	btfss	status,2,c
  6895   0027BC  EFE2  F013         	goto	u4681
  6896   0027C0  EFE4  F013         	goto	u4680
  6897   0027C4                     u4681:
  6898   0027C4  EFEB  F013         	goto	l3967
  6899   0027C8                     u4680:
  6900   0027C8                     
  6901                           ; BSR set to: 0
  6902                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  6903   0027C8  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6904   0027CA  6ED9               	movwf	fsr2l,c
  6905   0027CC  6ADA               	clrf	fsr2h,c
  6906   0027CE  0E03               	movlw	3
  6907   0027D0  26DF               	addwf	indf2,f,c
  6908   0027D2  EFA5  F013         	goto	l3955
  6909   0027D6                     l3967:
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  6913   0027D6  5031               	movf	vfpfcnvrt@done^0,w,c
  6914   0027D8  B4D8               	btfsc	status,2,c
  6915   0027DA  EFF1  F013         	goto	u4691
  6916   0027DE  EFF3  F013         	goto	u4690
  6917   0027E2                     u4691:
  6918   0027E2  EF07  F014         	goto	l3973
  6919   0027E6                     u4690:
  6920   0027E6                     
  6921                           ; BSR set to: 0
  6922                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
  6923   0027E6  C027  F00B         	movff	vfpfcnvrt@fp,stoa@fp
  6924   0027EA  C028  F00C         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6925   0027EE  502A               	movf	vfpfcnvrt@ap^0,w,c
  6926   0027F0  6ED9               	movwf	fsr2l,c
  6927   0027F2  6ADA               	clrf	fsr2h,c
  6928   0027F4  0E02               	movlw	2
  6929   0027F6  26DF               	addwf	indf2,f,c
  6930   0027F8  5CDF               	subwf	indf2,w,c
  6931   0027FA  6ED9               	movwf	fsr2l,c
  6932   0027FC  6ADA               	clrf	fsr2h,c
  6933   0027FE  CFDE F00D          	movff	postinc2,stoa@s
  6934   002802  CFDE F00E          	movff	postinc2,stoa@s+1
  6935   002806  ECE5  F019         	call	_stoa	;wreg free
  6936   00280A  EF20  F014         	goto	l1050
  6937   00280E                     l3973:
  6938                           
  6939                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6940   00280E  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6941   002810  6ED9               	movwf	fsr2l,c
  6942   002812  6ADA               	clrf	fsr2h,c
  6943   002814  2ADF               	incf	indf2,f,c
  6944   002816  EF20  F014         	goto	l1050
  6945   00281A                     l3977:
  6946                           
  6947                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6948   00281A  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6949   00281C  6ED9               	movwf	fsr2l,c
  6950   00281E  6ADA               	clrf	fsr2h,c
  6951   002820  CFDF FFF6          	movff	indf2,tblptrl
  6952   002824                     	if	1	;There is more than 1 active tblptr byte
  6953   002824  0E10               	movlw	high __smallconst
  6954   002826  6EF7               	movwf	tblptrh,c
  6955   002828                     	endif
  6956   002828                     	if	0	;tblptru may be non-zero
  6957   002828                     	endif
  6958   002828                     	if	0	;tblptru may be non-zero
  6959   002828                     	endif
  6960   002828  0008               	tblrd		*
  6961   00282A  50F5               	movf	tablat,w,c
  6962   00282C  6E02               	movwf	fputc@c^0,c
  6963   00282E  6A03               	clrf	(fputc@c+1)^0,c
  6964   002830  C027  F004         	movff	vfpfcnvrt@fp,fputc@fp
  6965   002834  C028  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6966   002838  EC0F  F01D         	call	_fputc	;wreg free
  6967   00283C  EF07  F014         	goto	l3973
  6968   002840                     l1050:
  6969   002840  0012               	return		;funcret
  6970   002842                     __end_of_vfpfcnvrt:
  6971                           	callstack 0
  6972                           
  6973 ;; *************** function _stoa *****************
  6974 ;; Defined at:
  6975 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  6978 ;;		 -> NULL(0), sprintf@f(12), 
  6979 ;;  s               2   12[COMRAM] PTR unsigned char 
  6980 ;;		 -> ?_printf(2), ?_sprintf(2), STR_11(1), STR_10(6), 
  6981 ;;		 -> STR_9(5), STR_8(4), STR_7(4), STR_6(4), 
  6982 ;;		 -> STR_5(5), STR_4(5), 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  l               2   22[COMRAM] int 
  6985 ;;  cp              2   20[COMRAM] PTR unsigned char 
  6986 ;;		 -> ?_printf(2), STR_14(7), ?_sprintf(2), STR_11(1), 
  6987 ;;		 -> STR_10(6), STR_9(5), STR_8(4), STR_7(4), 
  6988 ;;		 -> STR_6(4), STR_5(5), STR_4(5), 
  6989 ;;  w               2   18[COMRAM] int 
  6990 ;;  p               2   16[COMRAM] int 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7001 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7003 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7004 ;;Total ram usage:       14 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; Hardware stack levels required when called: 2
  7007 ;; This function calls:
  7008 ;;		_fputc
  7009 ;; This function is called by:
  7010 ;;		_vfpfcnvrt
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text27
  7015   0033CA                     __ptext27:
  7016                           	callstack 0
  7017   0033CA                     _stoa:
  7018                           	callstack 24
  7019   0033CA                     
  7020                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
  7021   0033CA  C00D  F015         	movff	stoa@s,stoa@cp
  7022   0033CE  C00E  F016         	movff	stoa@s+1,stoa@cp+1
  7023                           
  7024                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
  7025   0033D2  5015               	movf	stoa@cp^0,w,c
  7026   0033D4  1016               	iorwf	(stoa@cp+1)^0,w,c
  7027   0033D6  A4D8               	btfss	status,2,c
  7028   0033D8  EFF0  F019         	goto	u2941
  7029   0033DC  EFF2  F019         	goto	u2940
  7030   0033E0                     u2941:
  7031   0033E0  EFF8  F019         	goto	l2897
  7032   0033E4                     u2940:
  7033   0033E4                     
  7034                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
  7035   0033E4  0E63               	movlw	low STR_14
  7036   0033E6  6E15               	movwf	stoa@cp^0,c
  7037   0033E8  5015               	movf	stoa@cp^0,w,c
  7038   0033EA  A4D8               	btfss	status,2,c
  7039   0033EC  0E10               	movlw	high __smallconst
  7040   0033EE  6E16               	movwf	(stoa@cp+1)^0,c
  7041   0033F0                     l2897:
  7042                           
  7043                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
  7044   0033F0  0E00               	movlw	0
  7045   0033F2  6E18               	movwf	(stoa@l+1)^0,c
  7046   0033F4  0E00               	movlw	0
  7047   0033F6  6E17               	movwf	stoa@l^0,c
  7048   0033F8  EF00  F01A         	goto	l2901
  7049   0033FC                     l2899:
  7050   0033FC  4A17               	infsnz	stoa@l^0,f,c
  7051   0033FE  2A18               	incf	(stoa@l+1)^0,f,c
  7052   003400                     l2901:
  7053   003400  5017               	movf	stoa@l^0,w,c
  7054   003402  2415               	addwf	stoa@cp^0,w,c
  7055   003404  6E0F               	movwf	??_stoa^0,c
  7056   003406  5018               	movf	(stoa@l+1)^0,w,c
  7057   003408  2016               	addwfc	(stoa@cp+1)^0,w,c
  7058   00340A  6E10               	movwf	(??_stoa+1)^0,c
  7059   00340C  C00F  FFF6         	movff	??_stoa,tblptrl
  7060   003410  C010  FFF7         	movff	??_stoa+1,tblptrh
  7061   003414  0E00               	movlw	low (__smallconst shr (0+16))
  7062   003416  6EF8               	movwf	tblptru,c
  7063   003418  0E0F               	movlw	(high __ramtop+-1)
  7064   00341A  64F7               	cpfsgt	tblptrh,c
  7065   00341C  D003               	bra	u2957
  7066   00341E  0008               	tblrd		*
  7067   003420  50F5               	movf	tablat,w,c
  7068   003422  D005               	bra	u2950
  7069   003424                     u2957:
  7070   003424  CFF6 FFE1          	movff	tblptrl,fsr1l
  7071   003428  CFF7 FFE2          	movff	tblptrh,fsr1h
  7072   00342C  50E7               	movf	indf1,w,c
  7073   00342E                     u2950:
  7074   00342E  0900               	iorlw	0
  7075   003430  A4D8               	btfss	status,2,c
  7076   003432  EF1D  F01A         	goto	u2961
  7077   003436  EF1F  F01A         	goto	u2960
  7078   00343A                     u2961:
  7079   00343A  EFFE  F019         	goto	l2899
  7080   00343E                     u2960:
  7081   00343E                     
  7082                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 965:     p = l;
  7083   00343E  C017  F011         	movff	stoa@l,stoa@p
  7084   003442  C018  F012         	movff	stoa@l+1,stoa@p+1
  7085                           
  7086                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
  7087   003446  C0E9  F013         	movff	_width,stoa@w
  7088   00344A  C0EA  F014         	movff	_width+1,stoa@w+1
  7089                           
  7090                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
  7091   00344E  0100               	movlb	0	; () banked
  7092   003450  B1ED               	btfsc	_flags& (0+255),0,b
  7093   003452  EF2D  F01A         	goto	u2971
  7094   003456  EF2F  F01A         	goto	u2970
  7095   00345A                     u2971:
  7096   00345A  EF6B  F01A         	goto	l2915
  7097   00345E                     u2970:
  7098   00345E  EF3D  F01A         	goto	l2909
  7099   003462                     l2905:
  7100                           
  7101                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
  7102   003462  0E00               	movlw	0
  7103   003464  6E03               	movwf	(fputc@c+1)^0,c
  7104   003466  0E20               	movlw	32
  7105   003468  6E02               	movwf	fputc@c^0,c
  7106   00346A  C00B  F004         	movff	stoa@fp,fputc@fp
  7107   00346E  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  7108   003472  EC0F  F01D         	call	_fputc	;wreg free
  7109   003476                     
  7110                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
  7111   003476  4A17               	infsnz	stoa@l^0,f,c
  7112   003478  2A18               	incf	(stoa@l+1)^0,f,c
  7113   00347A                     l2909:
  7114                           
  7115                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
  7116   00347A  5013               	movf	stoa@w^0,w,c
  7117   00347C  5C17               	subwf	stoa@l^0,w,c
  7118   00347E  5018               	movf	(stoa@l+1)^0,w,c
  7119   003480  0A80               	xorlw	128
  7120   003482  6E0F               	movwf	??_stoa^0,c
  7121   003484  5014               	movf	(stoa@w+1)^0,w,c
  7122   003486  0A80               	xorlw	128
  7123   003488  580F               	subwfb	??_stoa^0,w,c
  7124   00348A  A0D8               	btfss	status,0,c
  7125   00348C  EF4A  F01A         	goto	u2981
  7126   003490  EF4C  F01A         	goto	u2980
  7127   003494                     u2981:
  7128   003494  EF31  F01A         	goto	l2905
  7129   003498                     u2980:
  7130   003498  EF6B  F01A         	goto	l2915
  7131   00349C                     l2911:
  7132                           
  7133                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
  7134   00349C  C015  FFF6         	movff	stoa@cp,tblptrl
  7135   0034A0  C016  FFF7         	movff	stoa@cp+1,tblptrh
  7136   0034A4  0E00               	movlw	low (__smallconst shr (0+16))
  7137   0034A6  6EF8               	movwf	tblptru,c
  7138   0034A8  0E0F               	movlw	(high __ramtop+-1)
  7139   0034AA  64F7               	cpfsgt	tblptrh,c
  7140   0034AC  D003               	bra	u2997
  7141   0034AE  0008               	tblrd		*
  7142   0034B0  50F5               	movf	tablat,w,c
  7143   0034B2  D005               	bra	u2990
  7144   0034B4                     u2997:
  7145   0034B4  CFF6 FFE1          	movff	tblptrl,fsr1l
  7146   0034B8  CFF7 FFE2          	movff	tblptrh,fsr1h
  7147   0034BC  50E7               	movf	indf1,w,c
  7148   0034BE                     u2990:
  7149   0034BE  6E0F               	movwf	??_stoa^0,c
  7150   0034C0  500F               	movf	??_stoa^0,w,c
  7151   0034C2  6E02               	movwf	fputc@c^0,c
  7152   0034C4  6A03               	clrf	(fputc@c+1)^0,c
  7153   0034C6  C00B  F004         	movff	stoa@fp,fputc@fp
  7154   0034CA  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  7155   0034CE  EC0F  F01D         	call	_fputc	;wreg free
  7156   0034D2                     
  7157                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
  7158   0034D2  4A15               	infsnz	stoa@cp^0,f,c
  7159   0034D4  2A16               	incf	(stoa@cp+1)^0,f,c
  7160   0034D6                     l2915:
  7161                           
  7162                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
  7163   0034D6  0611               	decf	stoa@p^0,f,c
  7164   0034D8  A0D8               	btfss	status,0,c
  7165   0034DA  0612               	decf	(stoa@p+1)^0,f,c
  7166   0034DC  2811               	incf	stoa@p^0,w,c
  7167   0034DE  E106               	bnz	u3001
  7168   0034E0  2812               	incf	(stoa@p+1)^0,w,c
  7169   0034E2  A4D8               	btfss	status,2,c
  7170   0034E4  EF76  F01A         	goto	u3001
  7171   0034E8  EF78  F01A         	goto	u3000
  7172   0034EC                     u3001:
  7173   0034EC  EF4E  F01A         	goto	l2911
  7174   0034F0                     u3000:
  7175   0034F0                     
  7176                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
  7177   0034F0  0100               	movlb	0	; () banked
  7178   0034F2  A1ED               	btfss	_flags& (0+255),0,b
  7179   0034F4  EF7E  F01A         	goto	u3011
  7180   0034F8  EF80  F01A         	goto	u3010
  7181   0034FC                     u3011:
  7182   0034FC  EF9D  F01A         	goto	l1027
  7183   003500                     u3010:
  7184   003500  EF8E  F01A         	goto	l2923
  7185   003504                     l2919:
  7186                           
  7187                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
  7188   003504  0E00               	movlw	0
  7189   003506  6E03               	movwf	(fputc@c+1)^0,c
  7190   003508  0E20               	movlw	32
  7191   00350A  6E02               	movwf	fputc@c^0,c
  7192   00350C  C00B  F004         	movff	stoa@fp,fputc@fp
  7193   003510  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  7194   003514  EC0F  F01D         	call	_fputc	;wreg free
  7195   003518                     
  7196                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
  7197   003518  4A17               	infsnz	stoa@l^0,f,c
  7198   00351A  2A18               	incf	(stoa@l+1)^0,f,c
  7199   00351C                     l2923:
  7200                           
  7201                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
  7202   00351C  5013               	movf	stoa@w^0,w,c
  7203   00351E  5C17               	subwf	stoa@l^0,w,c
  7204   003520  5018               	movf	(stoa@l+1)^0,w,c
  7205   003522  0A80               	xorlw	128
  7206   003524  6E0F               	movwf	??_stoa^0,c
  7207   003526  5014               	movf	(stoa@w+1)^0,w,c
  7208   003528  0A80               	xorlw	128
  7209   00352A  580F               	subwfb	??_stoa^0,w,c
  7210   00352C  A0D8               	btfss	status,0,c
  7211   00352E  EF9B  F01A         	goto	u3021
  7212   003532  EF9D  F01A         	goto	u3020
  7213   003536                     u3021:
  7214   003536  EF82  F01A         	goto	l2919
  7215   00353A                     u3020:
  7216   00353A                     l1027:
  7217   00353A  0012               	return		;funcret
  7218   00353C                     __end_of_stoa:
  7219                           	callstack 0
  7220                           
  7221 ;; *************** function _read_prec_or_width *****************
  7222 ;; Defined at:
  7223 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  7226 ;;		 -> vfprintf@cfmt(1), 
  7227 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  7228 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;  c               1    8[COMRAM] unsigned char 
  7231 ;;  n               2    9[COMRAM] int 
  7232 ;; Return value:  Size  Location     Type
  7233 ;;                  2    6[COMRAM] int 
  7234 ;; Registers used:
  7235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7236 ;; Tracked objects:
  7237 ;;		On entry : 0/0
  7238 ;;		On exit  : 0/0
  7239 ;;		Unchanged: 0/0
  7240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7242 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7244 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7245 ;;Total ram usage:        5 bytes
  7246 ;; Hardware stack levels used: 1
  7247 ;; Hardware stack levels required when called: 1
  7248 ;; This function calls:
  7249 ;;		___wmul
  7250 ;; This function is called by:
  7251 ;;		_vfpfcnvrt
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254                           
  7255                           	psect	text28
  7256   003C3A                     __ptext28:
  7257                           	callstack 0
  7258   003C3A                     _read_prec_or_width:
  7259                           	callstack 25
  7260   003C3A                     
  7261                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  7262   003C3A  0E00               	movlw	0
  7263   003C3C  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  7264   003C3E  0E00               	movlw	0
  7265   003C40  6E0A               	movwf	read_prec_or_width@n^0,c
  7266   003C42                     
  7267                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  7268   003C42  5007               	movf	read_prec_or_width@fmt^0,w,c
  7269   003C44  6ED9               	movwf	fsr2l,c
  7270   003C46  6ADA               	clrf	fsr2h,c
  7271   003C48  CFDF FFF6          	movff	indf2,tblptrl
  7272   003C4C                     	if	1	;There is more than 1 active tblptr byte
  7273   003C4C  0E10               	movlw	high __smallconst
  7274   003C4E  6EF7               	movwf	tblptrh,c
  7275   003C50                     	endif
  7276   003C50                     	if	0	;tblptru may be non-zero
  7277   003C50                     	endif
  7278   003C50                     	if	0	;tblptru may be non-zero
  7279   003C50                     	endif
  7280   003C50  0008               	tblrd		*
  7281   003C52  50F5               	movf	tablat,w,c
  7282   003C54  0A2A               	xorlw	42
  7283   003C56  A4D8               	btfss	status,2,c
  7284   003C58  EF30  F01E         	goto	u3031
  7285   003C5C  EF32  F01E         	goto	u3030
  7286   003C60                     u3031:
  7287   003C60  EF58  F01E         	goto	l2937
  7288   003C64                     u3030:
  7289   003C64                     
  7290                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  7291   003C64  5007               	movf	read_prec_or_width@fmt^0,w,c
  7292   003C66  6ED9               	movwf	fsr2l,c
  7293   003C68  6ADA               	clrf	fsr2h,c
  7294   003C6A  2ADF               	incf	indf2,f,c
  7295   003C6C                     
  7296                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  7297   003C6C  5008               	movf	read_prec_or_width@ap^0,w,c
  7298   003C6E  6ED9               	movwf	fsr2l,c
  7299   003C70  6ADA               	clrf	fsr2h,c
  7300   003C72  0E02               	movlw	2
  7301   003C74  26DF               	addwf	indf2,f,c
  7302   003C76  5CDF               	subwf	indf2,w,c
  7303   003C78  6ED9               	movwf	fsr2l,c
  7304   003C7A  6ADA               	clrf	fsr2h,c
  7305   003C7C  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  7306   003C80  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  7307                           
  7308                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  7309   003C84  EF6B  F01E         	goto	l1031
  7310   003C88                     l2933:
  7311                           
  7312                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  7313   003C88  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  7314   003C8C  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  7315   003C90  0E00               	movlw	0
  7316   003C92  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7317   003C94  0E0A               	movlw	10
  7318   003C96  6E03               	movwf	___wmul@multiplicand^0,c
  7319   003C98  ECEE  F01F         	call	___wmul	;wreg free
  7320   003C9C  5009               	movf	read_prec_or_width@c^0,w,c
  7321   003C9E  2401               	addwf	?___wmul^0,w,c
  7322   003CA0  6E0A               	movwf	read_prec_or_width@n^0,c
  7323   003CA2  0E00               	movlw	0
  7324   003CA4  2002               	addwfc	(?___wmul+1)^0,w,c
  7325   003CA6  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  7326   003CA8                     
  7327                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  7328   003CA8  5007               	movf	read_prec_or_width@fmt^0,w,c
  7329   003CAA  6ED9               	movwf	fsr2l,c
  7330   003CAC  6ADA               	clrf	fsr2h,c
  7331   003CAE  2ADF               	incf	indf2,f,c
  7332   003CB0                     l2937:
  7333                           
  7334                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  7335   003CB0  5007               	movf	read_prec_or_width@fmt^0,w,c
  7336   003CB2  6ED9               	movwf	fsr2l,c
  7337   003CB4  6ADA               	clrf	fsr2h,c
  7338   003CB6  CFDF FFF6          	movff	indf2,tblptrl
  7339   003CBA                     	if	1	;There is more than 1 active tblptr byte
  7340   003CBA  0E10               	movlw	high __smallconst
  7341   003CBC  6EF7               	movwf	tblptrh,c
  7342   003CBE                     	endif
  7343   003CBE                     	if	0	;tblptru may be non-zero
  7344   003CBE                     	endif
  7345   003CBE                     	if	0	;tblptru may be non-zero
  7346   003CBE                     	endif
  7347   003CBE  0008               	tblrd		*
  7348   003CC0  50F5               	movf	tablat,w,c
  7349   003CC2  0FD0               	addlw	208
  7350   003CC4  6E09               	movwf	read_prec_or_width@c^0,c
  7351   003CC6  0E09               	movlw	9
  7352   003CC8  6409               	cpfsgt	read_prec_or_width@c^0,c
  7353   003CCA  EF69  F01E         	goto	u3041
  7354   003CCE  EF6B  F01E         	goto	u3040
  7355   003CD2                     u3041:
  7356   003CD2  EF44  F01E         	goto	l2933
  7357   003CD6                     u3040:
  7358   003CD6                     l1031:
  7359                           
  7360                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  7361   003CD6  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  7362   003CDA  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  7363   003CDE  0012               	return		;funcret
  7364   003CE0                     __end_of_read_prec_or_width:
  7365                           	callstack 0
  7366                           
  7367 ;; *************** function ___wmul *****************
  7368 ;; Defined at:
  7369 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;  multiplier      2    0[COMRAM] unsigned int 
  7372 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;  product         2    4[COMRAM] unsigned int 
  7375 ;; Return value:  Size  Location     Type
  7376 ;;                  2    0[COMRAM] unsigned int 
  7377 ;; Registers used:
  7378 ;;		wreg, status,2, status,0, prodl, prodh
  7379 ;; Tracked objects:
  7380 ;;		On entry : 0/0
  7381 ;;		On exit  : 0/0
  7382 ;;		Unchanged: 0/0
  7383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7384 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7387 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7388 ;;Total ram usage:        6 bytes
  7389 ;; Hardware stack levels used: 1
  7390 ;; This function calls:
  7391 ;;		Nothing
  7392 ;; This function is called by:
  7393 ;;		_read_prec_or_width
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397                           	psect	text29
  7398   003FDC                     __ptext29:
  7399                           	callstack 0
  7400   003FDC                     ___wmul:
  7401                           	callstack 25
  7402   003FDC  5001               	movf	___wmul@multiplier^0,w,c
  7403   003FDE  0203               	mulwf	___wmul@multiplicand^0,c
  7404   003FE0  CFF3 F005          	movff	prodl,___wmul@product
  7405   003FE4  CFF4 F006          	movff	prodh,___wmul@product+1
  7406   003FE8  5001               	movf	___wmul@multiplier^0,w,c
  7407   003FEA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7408   003FEC  50F3               	movf	243,w,c
  7409   003FEE  2606               	addwf	(___wmul@product+1)^0,f,c
  7410   003FF0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7411   003FF2  0203               	mulwf	___wmul@multiplicand^0,c
  7412   003FF4  50F3               	movf	243,w,c
  7413   003FF6  2606               	addwf	(___wmul@product+1)^0,f,c
  7414   003FF8  C005  F001         	movff	___wmul@product,?___wmul
  7415   003FFC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7416   004000  0012               	return		;funcret
  7417   004002                     __end_of___wmul:
  7418                           	callstack 0
  7419                           
  7420 ;; *************** function _dtoa *****************
  7421 ;; Defined at:
  7422 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  7425 ;;		 -> NULL(0), sprintf@f(12), 
  7426 ;;  d               2   28[COMRAM] int 
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;  i               2   36[COMRAM] int 
  7429 ;;  w               2   33[COMRAM] int 
  7430 ;;  s               1   35[COMRAM] unsigned char 
  7431 ;;  p               1   32[COMRAM] _Bool 
  7432 ;; Return value:  Size  Location     Type
  7433 ;;                  1    wreg      void 
  7434 ;; Registers used:
  7435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7441 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7442 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7444 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7445 ;;Total ram usage:       12 bytes
  7446 ;; Hardware stack levels used: 1
  7447 ;; Hardware stack levels required when called: 4
  7448 ;; This function calls:
  7449 ;;		___awdiv
  7450 ;;		___awmod
  7451 ;;		_abs
  7452 ;;		_pad
  7453 ;; This function is called by:
  7454 ;;		_vfpfcnvrt
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           	psect	text30
  7459   00353C                     __ptext30:
  7460                           	callstack 0
  7461   00353C                     _dtoa:
  7462                           	callstack 22
  7463   00353C                     
  7464                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  7465   00353C  0E01               	movlw	1
  7466   00353E  6E21               	movwf	dtoa@p^0,c
  7467   003540                     
  7468                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  7469   003540  BE1E               	btfsc	(dtoa@d+1)^0,7,c
  7470   003542  EFA5  F01A         	goto	u4521
  7471   003546  EFA8  F01A         	goto	u4520
  7472   00354A                     u4521:
  7473   00354A  0E01               	movlw	1
  7474   00354C  EFA9  F01A         	goto	u4530
  7475   003550                     u4520:
  7476   003550  0E00               	movlw	0
  7477   003552                     u4530:
  7478   003552  6E24               	movwf	dtoa@s^0,c
  7479   003554                     
  7480                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  7481   003554  C0E9  F022         	movff	_width,dtoa@w
  7482   003558  C0EA  F023         	movff	_width+1,dtoa@w+1
  7483   00355C                     
  7484                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  7485   00355C  5024               	movf	dtoa@s^0,w,c
  7486   00355E  B4D8               	btfsc	status,2,c
  7487   003560  EFB4  F01A         	goto	u4541
  7488   003564  EFB6  F01A         	goto	u4540
  7489   003568                     u4541:
  7490   003568  EFCD  F01A         	goto	l997
  7491   00356C                     u4540:
  7492   00356C                     
  7493                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  7494   00356C  0622               	decf	dtoa@w^0,f,c
  7495   00356E  A0D8               	btfss	status,0,c
  7496   003570  0623               	decf	(dtoa@w+1)^0,f,c
  7497   003572                     
  7498                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  7499   003572  5024               	movf	dtoa@s^0,w,c
  7500   003574  A4D8               	btfss	status,2,c
  7501   003576  EFBF  F01A         	goto	u4551
  7502   00357A  EFC1  F01A         	goto	u4550
  7503   00357E                     u4551:
  7504   00357E  EFC7  F01A         	goto	l3875
  7505   003582                     u4550:
  7506   003582  0E00               	movlw	0
  7507   003584  6E20               	movwf	(_dtoa$2734+1)^0,c
  7508   003586  0E2B               	movlw	43
  7509   003588  6E1F               	movwf	_dtoa$2734^0,c
  7510   00358A  EFCB  F01A         	goto	l3877
  7511   00358E                     l3875:
  7512   00358E  0E00               	movlw	0
  7513   003590  6E20               	movwf	(_dtoa$2734+1)^0,c
  7514   003592  0E2D               	movlw	45
  7515   003594  6E1F               	movwf	_dtoa$2734^0,c
  7516   003596                     l3877:
  7517   003596  C01F  F024         	movff	_dtoa$2734,dtoa@s
  7518   00359A                     l997:
  7519                           
  7520                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  7521   00359A  0E00               	movlw	0
  7522   00359C  6E26               	movwf	(dtoa@i+1)^0,c
  7523   00359E  0E1F               	movlw	31
  7524   0035A0  6E25               	movwf	dtoa@i^0,c
  7525   0035A2                     
  7526                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  7527   0035A2  0E00               	movlw	0
  7528   0035A4  0101               	movlb	1	; () banked
  7529   0035A6  6F1F               	movwf	(_dbuf+31)& (0+255),b
  7530                           
  7531                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7532   0035A8  EF05  F01B         	goto	l3891
  7533   0035AC                     l3881:
  7534                           
  7535                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  7536   0035AC  0625               	decf	dtoa@i^0,f,c
  7537   0035AE  A0D8               	btfss	status,0,c
  7538   0035B0  0626               	decf	(dtoa@i+1)^0,f,c
  7539   0035B2                     
  7540                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  7541   0035B2  0E00               	movlw	low _dbuf
  7542   0035B4  2425               	addwf	dtoa@i^0,w,c
  7543   0035B6  6ED9               	movwf	fsr2l,c
  7544   0035B8  0E01               	movlw	high _dbuf
  7545   0035BA  2026               	addwfc	(dtoa@i+1)^0,w,c
  7546   0035BC  6EDA               	movwf	fsr2h,c
  7547   0035BE  C01D  F001         	movff	dtoa@d,___awmod@dividend
  7548   0035C2  C01E  F002         	movff	dtoa@d+1,___awmod@dividend+1
  7549   0035C6  0E00               	movlw	0
  7550   0035C8  6E04               	movwf	(___awmod@divisor+1)^0,c
  7551   0035CA  0E0A               	movlw	10
  7552   0035CC  6E03               	movwf	___awmod@divisor^0,c
  7553   0035CE  ECC5  F01D         	call	___awmod	;wreg free
  7554   0035D2  C001  F007         	movff	?___awmod,abs@a
  7555   0035D6  C002  F008         	movff	?___awmod+1,abs@a+1
  7556   0035DA  ECD4  F01F         	call	_abs	;wreg free
  7557   0035DE  5007               	movf	?_abs^0,w,c
  7558   0035E0  0F30               	addlw	48
  7559   0035E2  6EDF               	movwf	indf2,c
  7560   0035E4                     
  7561                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  7562   0035E4  0E00               	movlw	0
  7563   0035E6  6E21               	movwf	dtoa@p^0,c
  7564   0035E8                     
  7565                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  7566   0035E8  0622               	decf	dtoa@w^0,f,c
  7567   0035EA  A0D8               	btfss	status,0,c
  7568   0035EC  0623               	decf	(dtoa@w+1)^0,f,c
  7569   0035EE                     
  7570                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  7571   0035EE  C01D  F001         	movff	dtoa@d,___awdiv@dividend
  7572   0035F2  C01E  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  7573   0035F6  0E00               	movlw	0
  7574   0035F8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7575   0035FA  0E0A               	movlw	10
  7576   0035FC  6E03               	movwf	___awdiv@divisor^0,c
  7577   0035FE  ECAD  F01C         	call	___awdiv	;wreg free
  7578   003602  C001  F01D         	movff	?___awdiv,dtoa@d
  7579   003606  C002  F01E         	movff	?___awdiv+1,dtoa@d+1
  7580   00360A                     l3891:
  7581                           
  7582                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7583   00360A  BE26               	btfsc	(dtoa@i+1)^0,7,c
  7584   00360C  EF10  F01B         	goto	u4561
  7585   003610  5026               	movf	(dtoa@i+1)^0,w,c
  7586   003612  E108               	bnz	u4560
  7587   003614  0425               	decf	dtoa@i^0,w,c
  7588   003616  A0D8               	btfss	status,0,c
  7589   003618  EF10  F01B         	goto	u4561
  7590   00361C  EF12  F01B         	goto	u4560
  7591   003620                     u4561:
  7592   003620  EF23  F01B         	goto	l3897
  7593   003624                     u4560:
  7594   003624  501D               	movf	dtoa@d^0,w,c
  7595   003626  101E               	iorwf	(dtoa@d+1)^0,w,c
  7596   003628  A4D8               	btfss	status,2,c
  7597   00362A  EF19  F01B         	goto	u4571
  7598   00362E  EF1B  F01B         	goto	u4570
  7599   003632                     u4571:
  7600   003632  EFD6  F01A         	goto	l3881
  7601   003636                     u4570:
  7602   003636  5021               	movf	dtoa@p^0,w,c
  7603   003638  A4D8               	btfss	status,2,c
  7604   00363A  EF21  F01B         	goto	u4581
  7605   00363E  EF23  F01B         	goto	u4580
  7606   003642                     u4581:
  7607   003642  EFD6  F01A         	goto	l3881
  7608   003646                     u4580:
  7609   003646                     l3897:
  7610                           
  7611                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  7612   003646  5024               	movf	dtoa@s^0,w,c
  7613   003648  B4D8               	btfsc	status,2,c
  7614   00364A  EF29  F01B         	goto	u4591
  7615   00364E  EF2B  F01B         	goto	u4590
  7616   003652                     u4591:
  7617   003652  EF36  F01B         	goto	l3903
  7618   003656                     u4590:
  7619   003656                     
  7620                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  7621   003656  0625               	decf	dtoa@i^0,f,c
  7622   003658  A0D8               	btfss	status,0,c
  7623   00365A  0626               	decf	(dtoa@i+1)^0,f,c
  7624   00365C                     
  7625                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  7626   00365C  0E00               	movlw	low _dbuf
  7627   00365E  2425               	addwf	dtoa@i^0,w,c
  7628   003660  6ED9               	movwf	fsr2l,c
  7629   003662  0E01               	movlw	high _dbuf
  7630   003664  2026               	addwfc	(dtoa@i+1)^0,w,c
  7631   003666  6EDA               	movwf	fsr2h,c
  7632   003668  C024  FFDF         	movff	dtoa@s,indf2
  7633   00366C                     l3903:
  7634                           
  7635                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7636   00366C  C01B  F012         	movff	dtoa@fp,pad@fp
  7637   003670  C01C  F013         	movff	dtoa@fp+1,pad@fp+1
  7638   003674  0E00               	movlw	low _dbuf
  7639   003676  2425               	addwf	dtoa@i^0,w,c
  7640   003678  6E14               	movwf	pad@buf^0,c
  7641   00367A  0E01               	movlw	high _dbuf
  7642   00367C  2026               	addwfc	(dtoa@i+1)^0,w,c
  7643   00367E  6E15               	movwf	(pad@buf+1)^0,c
  7644   003680  C022  F016         	movff	dtoa@w,pad@p
  7645   003684  C023  F017         	movff	dtoa@w+1,pad@p+1
  7646   003688  EC70  F01E         	call	_pad	;wreg free
  7647   00368C  0012               	return		;funcret
  7648   00368E                     __end_of_dtoa:
  7649                           	callstack 0
  7650                           
  7651 ;; *************** function _pad *****************
  7652 ;; Defined at:
  7653 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  7656 ;;		 -> NULL(0), sprintf@f(12), 
  7657 ;;  buf             2   19[COMRAM] PTR unsigned char 
  7658 ;;		 -> dbuf(32), 
  7659 ;;  p               2   21[COMRAM] int 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  i               2   24[COMRAM] int 
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  1    wreg      void 
  7664 ;; Registers used:
  7665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7671 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7674 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;Total ram usage:        9 bytes
  7676 ;; Hardware stack levels used: 1
  7677 ;; Hardware stack levels required when called: 3
  7678 ;; This function calls:
  7679 ;;		_fputc
  7680 ;;		_fputs
  7681 ;; This function is called by:
  7682 ;;		_dtoa
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text31
  7687   003CE0                     __ptext31:
  7688                           	callstack 0
  7689   003CE0                     _pad:
  7690                           	callstack 22
  7691   003CE0                     
  7692                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  7693   003CE0  0100               	movlb	0	; () banked
  7694   003CE2  A1ED               	btfss	_flags& (0+255),0,b
  7695   003CE4  EF76  F01E         	goto	u4481
  7696   003CE8  EF78  F01E         	goto	u4480
  7697   003CEC                     u4481:
  7698   003CEC  EF82  F01E         	goto	l3849
  7699   003CF0                     u4480:
  7700   003CF0                     
  7701                           ; BSR set to: 0
  7702                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  7703   003CF0  C014  F00B         	movff	pad@buf,fputs@s
  7704   003CF4  C015  F00C         	movff	pad@buf+1,fputs@s+1
  7705   003CF8  C012  F00D         	movff	pad@fp,fputs@fp
  7706   003CFC  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  7707   003D00  ECE4  F01E         	call	_fputs	;wreg free
  7708   003D04                     l3849:
  7709                           
  7710                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  7711   003D04  BE17               	btfsc	(pad@p+1)^0,7,c
  7712   003D06  EF89  F01E         	goto	u4490
  7713   003D0A  EF87  F01E         	goto	u4491
  7714   003D0E                     u4491:
  7715   003D0E  EF8D  F01E         	goto	l989
  7716   003D12                     u4490:
  7717   003D12                     
  7718                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  7719   003D12  0E00               	movlw	0
  7720   003D14  6E17               	movwf	(pad@p+1)^0,c
  7721   003D16  0E00               	movlw	0
  7722   003D18  6E16               	movwf	pad@p^0,c
  7723   003D1A                     l989:
  7724                           
  7725                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  7726   003D1A  0E00               	movlw	0
  7727   003D1C  6E1A               	movwf	(pad@i+1)^0,c
  7728   003D1E  0E00               	movlw	0
  7729   003D20  6E19               	movwf	pad@i^0,c
  7730                           
  7731                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7732   003D22  EF9F  F01E         	goto	l3857
  7733   003D26                     l3853:
  7734                           
  7735                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  7736   003D26  0E00               	movlw	0
  7737   003D28  6E03               	movwf	(fputc@c+1)^0,c
  7738   003D2A  0E20               	movlw	32
  7739   003D2C  6E02               	movwf	fputc@c^0,c
  7740   003D2E  C012  F004         	movff	pad@fp,fputc@fp
  7741   003D32  C013  F005         	movff	pad@fp+1,fputc@fp+1
  7742   003D36  EC0F  F01D         	call	_fputc	;wreg free
  7743   003D3A                     
  7744                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  7745   003D3A  4A19               	infsnz	pad@i^0,f,c
  7746   003D3C  2A1A               	incf	(pad@i+1)^0,f,c
  7747   003D3E                     l3857:
  7748                           
  7749                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7750   003D3E  5016               	movf	pad@p^0,w,c
  7751   003D40  5C19               	subwf	pad@i^0,w,c
  7752   003D42  501A               	movf	(pad@i+1)^0,w,c
  7753   003D44  0A80               	xorlw	128
  7754   003D46  6E18               	movwf	??_pad^0,c
  7755   003D48  5017               	movf	(pad@p+1)^0,w,c
  7756   003D4A  0A80               	xorlw	128
  7757   003D4C  5818               	subwfb	??_pad^0,w,c
  7758   003D4E  A0D8               	btfss	status,0,c
  7759   003D50  EFAC  F01E         	goto	u4501
  7760   003D54  EFAE  F01E         	goto	u4500
  7761   003D58                     u4501:
  7762   003D58  EF93  F01E         	goto	l3853
  7763   003D5C                     u4500:
  7764   003D5C                     
  7765                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  7766   003D5C  0100               	movlb	0	; () banked
  7767   003D5E  B1ED               	btfsc	_flags& (0+255),0,b
  7768   003D60  EFB4  F01E         	goto	u4511
  7769   003D64  EFB6  F01E         	goto	u4510
  7770   003D68                     u4511:
  7771   003D68  EFC0  F01E         	goto	l994
  7772   003D6C                     u4510:
  7773   003D6C                     
  7774                           ; BSR set to: 0
  7775                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  7776   003D6C  C014  F00B         	movff	pad@buf,fputs@s
  7777   003D70  C015  F00C         	movff	pad@buf+1,fputs@s+1
  7778   003D74  C012  F00D         	movff	pad@fp,fputs@fp
  7779   003D78  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  7780   003D7C  ECE4  F01E         	call	_fputs	;wreg free
  7781   003D80                     l994:
  7782   003D80  0012               	return		;funcret
  7783   003D82                     __end_of_pad:
  7784                           	callstack 0
  7785                           
  7786 ;; *************** function _fputs *****************
  7787 ;; Defined at:
  7788 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;  s               2   10[COMRAM] PTR const unsigned char 
  7791 ;;		 -> dbuf(32), 
  7792 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  7793 ;;		 -> NULL(0), sprintf@f(12), 
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;  i               2   15[COMRAM] int 
  7796 ;;  c               1   14[COMRAM] unsigned char 
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  2   10[COMRAM] int 
  7799 ;; Registers used:
  7800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7807 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7809 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7810 ;;Total ram usage:        7 bytes
  7811 ;; Hardware stack levels used: 1
  7812 ;; Hardware stack levels required when called: 2
  7813 ;; This function calls:
  7814 ;;		_fputc
  7815 ;; This function is called by:
  7816 ;;		_pad
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text32
  7821   003DC8                     __ptext32:
  7822                           	callstack 0
  7823   003DC8                     _fputs:
  7824                           	callstack 22
  7825   003DC8  0E00               	movlw	0
  7826   003DCA  6E11               	movwf	(fputs@i+1)^0,c
  7827   003DCC  0E00               	movlw	0
  7828   003DCE  6E10               	movwf	fputs@i^0,c
  7829   003DD0  EFF5  F01E         	goto	l3843
  7830   003DD4                     l3839:
  7831   003DD4  C00F  F002         	movff	fputs@c,fputc@c
  7832   003DD8  6A03               	clrf	(fputc@c+1)^0,c
  7833   003DDA  C00D  F004         	movff	fputs@fp,fputc@fp
  7834   003DDE  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  7835   003DE2  EC0F  F01D         	call	_fputc	;wreg free
  7836   003DE6  4A10               	infsnz	fputs@i^0,f,c
  7837   003DE8  2A11               	incf	(fputs@i+1)^0,f,c
  7838   003DEA                     l3843:
  7839   003DEA  5010               	movf	fputs@i^0,w,c
  7840   003DEC  240B               	addwf	fputs@s^0,w,c
  7841   003DEE  6ED9               	movwf	fsr2l,c
  7842   003DF0  5011               	movf	(fputs@i+1)^0,w,c
  7843   003DF2  200C               	addwfc	(fputs@s+1)^0,w,c
  7844   003DF4  6EDA               	movwf	fsr2h,c
  7845   003DF6  50DF               	movf	indf2,w,c
  7846   003DF8  6E0F               	movwf	fputs@c^0,c
  7847   003DFA  500F               	movf	fputs@c^0,w,c
  7848   003DFC  A4D8               	btfss	status,2,c
  7849   003DFE  EF03  F01F         	goto	u4471
  7850   003E02  EF05  F01F         	goto	u4470
  7851   003E06                     u4471:
  7852   003E06  EFEA  F01E         	goto	l3839
  7853   003E0A                     u4470:
  7854   003E0A  0012               	return		;funcret
  7855   003E0C                     __end_of_fputs:
  7856                           	callstack 0
  7857                           
  7858 ;; *************** function _fputc *****************
  7859 ;; Defined at:
  7860 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;  c               2    1[COMRAM] int 
  7863 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  7864 ;;		 -> NULL(0), sprintf@f(12), 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  2    1[COMRAM] int 
  7869 ;; Registers used:
  7870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7876 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7878 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7880 ;;Total ram usage:        9 bytes
  7881 ;; Hardware stack levels used: 1
  7882 ;; Hardware stack levels required when called: 1
  7883 ;; This function calls:
  7884 ;;		_putch
  7885 ;; This function is called by:
  7886 ;;		_pad
  7887 ;;		_stoa
  7888 ;;		_vfpfcnvrt
  7889 ;;		_fputs
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           	psect	text33
  7894   003A1E                     __ptext33:
  7895                           	callstack 0
  7896   003A1E                     _fputc:
  7897                           	callstack 24
  7898   003A1E  5004               	movf	fputc@fp^0,w,c
  7899   003A20  1005               	iorwf	(fputc@fp+1)^0,w,c
  7900   003A22  B4D8               	btfsc	status,2,c
  7901   003A24  EF16  F01D         	goto	u2251
  7902   003A28  EF18  F01D         	goto	u2250
  7903   003A2C                     u2251:
  7904   003A2C  EF21  F01D         	goto	l2521
  7905   003A30                     u2250:
  7906   003A30  5004               	movf	fputc@fp^0,w,c
  7907   003A32  1005               	iorwf	(fputc@fp+1)^0,w,c
  7908   003A34  A4D8               	btfss	status,2,c
  7909   003A36  EF1F  F01D         	goto	u2261
  7910   003A3A  EF21  F01D         	goto	u2260
  7911   003A3E                     u2261:
  7912   003A3E  EF26  F01D         	goto	l2523
  7913   003A42                     u2260:
  7914   003A42                     l2521:
  7915   003A42  5002               	movf	fputc@c^0,w,c
  7916   003A44  EC31  F020         	call	_putch
  7917   003A48  EF6B  F01D         	goto	l1079
  7918   003A4C                     l2523:
  7919   003A4C  EE20 F00A          	lfsr	2,10
  7920   003A50  5004               	movf	fputc@fp^0,w,c
  7921   003A52  26D9               	addwf	fsr2l,f,c
  7922   003A54  5005               	movf	(fputc@fp+1)^0,w,c
  7923   003A56  22DA               	addwfc	fsr2h,f,c
  7924   003A58  50DE               	movf	postinc2,w,c
  7925   003A5A  10DE               	iorwf	postinc2,w,c
  7926   003A5C  B4D8               	btfsc	status,2,c
  7927   003A5E  EF33  F01D         	goto	u2271
  7928   003A62  EF35  F01D         	goto	u2270
  7929   003A66                     u2271:
  7930   003A66  EF50  F01D         	goto	l2527
  7931   003A6A                     u2270:
  7932   003A6A  EE20 F00A          	lfsr	2,10
  7933   003A6E  5004               	movf	fputc@fp^0,w,c
  7934   003A70  26D9               	addwf	fsr2l,f,c
  7935   003A72  5005               	movf	(fputc@fp+1)^0,w,c
  7936   003A74  22DA               	addwfc	fsr2h,f,c
  7937   003A76  EE10 F003          	lfsr	1,3
  7938   003A7A  5004               	movf	fputc@fp^0,w,c
  7939   003A7C  26E1               	addwf	fsr1l,f,c
  7940   003A7E  5005               	movf	(fputc@fp+1)^0,w,c
  7941   003A80  22E2               	addwfc	fsr1h,f,c
  7942   003A82  50DE               	movf	postinc2,w,c
  7943   003A84  5CE6               	subwf	postinc1,w,c
  7944   003A86  50E6               	movf	postinc1,w,c
  7945   003A88  0A80               	xorlw	128
  7946   003A8A  6E0A               	movwf	(??_fputc+4)^0,c
  7947   003A8C  50DE               	movf	postinc2,w,c
  7948   003A8E  0A80               	xorlw	128
  7949   003A90  580A               	subwfb	(??_fputc+4)^0,w,c
  7950   003A92  B0D8               	btfsc	status,0,c
  7951   003A94  EF4E  F01D         	goto	u2281
  7952   003A98  EF50  F01D         	goto	u2280
  7953   003A9C                     u2281:
  7954   003A9C  EF6B  F01D         	goto	l1079
  7955   003AA0                     u2280:
  7956   003AA0                     l2527:
  7957   003AA0  EE20 F003          	lfsr	2,3
  7958   003AA4  5004               	movf	fputc@fp^0,w,c
  7959   003AA6  26D9               	addwf	fsr2l,f,c
  7960   003AA8  5005               	movf	(fputc@fp+1)^0,w,c
  7961   003AAA  22DA               	addwfc	fsr2h,f,c
  7962   003AAC  50DF               	movf	indf2,w,c
  7963   003AAE  6E06               	movwf	??_fputc^0,c
  7964   003AB0  C004  FFD9         	movff	fputc@fp,fsr2l
  7965   003AB4  C005  FFDA         	movff	fputc@fp+1,fsr2h
  7966   003AB8  50DF               	movf	indf2,w,c
  7967   003ABA  2406               	addwf	??_fputc^0,w,c
  7968   003ABC  6ED9               	movwf	fsr2l,c
  7969   003ABE  6ADA               	clrf	fsr2h,c
  7970   003AC0  C002  FFDF         	movff	fputc@c,indf2
  7971   003AC4  EE20 F003          	lfsr	2,3
  7972   003AC8  5004               	movf	fputc@fp^0,w,c
  7973   003ACA  26D9               	addwf	fsr2l,f,c
  7974   003ACC  5005               	movf	(fputc@fp+1)^0,w,c
  7975   003ACE  22DA               	addwfc	fsr2h,f,c
  7976   003AD0  2ADE               	incf	postinc2,f,c
  7977   003AD2  0E00               	movlw	0
  7978   003AD4  22DD               	addwfc	postdec2,f,c
  7979   003AD6                     l1079:
  7980   003AD6  0012               	return		;funcret
  7981   003AD8                     __end_of_fputc:
  7982                           	callstack 0
  7983                           
  7984 ;; *************** function _putch *****************
  7985 ;; Defined at:
  7986 ;;		line 11 in file "putch.c"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;  data            1    wreg     unsigned char 
  7989 ;; Auto vars:     Size  Location     Type
  7990 ;;  data            1    0[COMRAM] unsigned char 
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  1    wreg      void 
  7993 ;; Registers used:
  7994 ;;		wreg
  7995 ;; Tracked objects:
  7996 ;;		On entry : 0/0
  7997 ;;		On exit  : 0/0
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8004 ;;Total ram usage:        1 bytes
  8005 ;; Hardware stack levels used: 1
  8006 ;; This function calls:
  8007 ;;		Nothing
  8008 ;; This function is called by:
  8009 ;;		_fputc
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013                           	psect	text34
  8014   004062                     __ptext34:
  8015                           	callstack 0
  8016   004062                     _putch:
  8017                           	callstack 24
  8018                           
  8019                           ;incstack = 0
  8020                           ;putch@data stored from wreg
  8021   004062  6E01               	movwf	putch@data^0,c
  8022   004064                     l213:
  8023   004064  A89E               	btfss	3998,4,c	;volatile
  8024   004066  EF37  F020         	goto	u2241
  8025   00406A  EF39  F020         	goto	u2240
  8026   00406E                     u2241:
  8027   00406E  EF32  F020         	goto	l213
  8028   004072                     u2240:
  8029   004072                     
  8030                           ;putch.c: 13:     TXREG1 = data;
  8031   004072  C001  FFAD         	movff	putch@data,4013	;volatile
  8032   004076  0012               	return		;funcret
  8033   004078                     __end_of_putch:
  8034                           	callstack 0
  8035                           
  8036 ;; *************** function _abs *****************
  8037 ;; Defined at:
  8038 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  a               2    6[COMRAM] int 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;		None
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  2    6[COMRAM] int 
  8045 ;; Registers used:
  8046 ;;		wreg, status,2, status,0
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8054 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8055 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8056 ;;Total ram usage:        4 bytes
  8057 ;; Hardware stack levels used: 1
  8058 ;; This function calls:
  8059 ;;		Nothing
  8060 ;; This function is called by:
  8061 ;;		_dtoa
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           	psect	text35
  8066   003FA8                     __ptext35:
  8067                           	callstack 0
  8068   003FA8                     _abs:
  8069                           	callstack 25
  8070   003FA8  BE08               	btfsc	(abs@a+1)^0,7,c
  8071   003FAA  EFD9  F01F         	goto	u2461
  8072   003FAE  EFDB  F01F         	goto	u2460
  8073   003FB2                     u2461:
  8074   003FB2  EFE1  F01F         	goto	l1064
  8075   003FB6                     u2460:
  8076   003FB6  C007  F007         	movff	abs@a,?_abs
  8077   003FBA  C008  F008         	movff	abs@a+1,?_abs+1
  8078   003FBE  EFED  F01F         	goto	l1067
  8079   003FC2                     l1064:
  8080   003FC2  C007  F009         	movff	abs@a,??_abs
  8081   003FC6  C008  F00A         	movff	abs@a+1,??_abs+1
  8082   003FCA  1E09               	comf	??_abs^0,f,c
  8083   003FCC  1E0A               	comf	(??_abs+1)^0,f,c
  8084   003FCE  4A09               	infsnz	??_abs^0,f,c
  8085   003FD0  2A0A               	incf	(??_abs+1)^0,f,c
  8086   003FD2  C009  F007         	movff	??_abs,?_abs
  8087   003FD6  C00A  F008         	movff	??_abs+1,?_abs+1
  8088   003FDA                     l1067:
  8089   003FDA  0012               	return		;funcret
  8090   003FDC                     __end_of_abs:
  8091                           	callstack 0
  8092                           
  8093 ;; *************** function ___awmod *****************
  8094 ;; Defined at:
  8095 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;  dividend        2    0[COMRAM] int 
  8098 ;;  divisor         2    2[COMRAM] int 
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;  sign            1    5[COMRAM] unsigned char 
  8101 ;;  counter         1    4[COMRAM] unsigned char 
  8102 ;; Return value:  Size  Location     Type
  8103 ;;                  2    0[COMRAM] int 
  8104 ;; Registers used:
  8105 ;;		wreg, status,2, status,0
  8106 ;; Tracked objects:
  8107 ;;		On entry : 0/0
  8108 ;;		On exit  : 0/0
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8114 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8115 ;;Total ram usage:        6 bytes
  8116 ;; Hardware stack levels used: 1
  8117 ;; This function calls:
  8118 ;;		Nothing
  8119 ;; This function is called by:
  8120 ;;		_dtoa
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           	psect	text36
  8125   003B8A                     __ptext36:
  8126                           	callstack 0
  8127   003B8A                     ___awmod:
  8128                           	callstack 25
  8129   003B8A  0E00               	movlw	0
  8130   003B8C  6E06               	movwf	___awmod@sign^0,c
  8131   003B8E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8132   003B90  EFCE  F01D         	goto	u2360
  8133   003B94  EFCC  F01D         	goto	u2361
  8134   003B98                     u2361:
  8135   003B98  EFD4  F01D         	goto	l2597
  8136   003B9C                     u2360:
  8137   003B9C  6C01               	negf	___awmod@dividend^0,c
  8138   003B9E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8139   003BA0  B0D8               	btfsc	status,0,c
  8140   003BA2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8141   003BA4  0E01               	movlw	1
  8142   003BA6  6E06               	movwf	___awmod@sign^0,c
  8143   003BA8                     l2597:
  8144   003BA8  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8145   003BAA  EFDB  F01D         	goto	u2370
  8146   003BAE  EFD9  F01D         	goto	u2371
  8147   003BB2                     u2371:
  8148   003BB2  EFDF  F01D         	goto	l2601
  8149   003BB6                     u2370:
  8150   003BB6  6C03               	negf	___awmod@divisor^0,c
  8151   003BB8  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8152   003BBA  B0D8               	btfsc	status,0,c
  8153   003BBC  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8154   003BBE                     l2601:
  8155   003BBE  5003               	movf	___awmod@divisor^0,w,c
  8156   003BC0  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8157   003BC2  B4D8               	btfsc	status,2,c
  8158   003BC4  EFE6  F01D         	goto	u2381
  8159   003BC8  EFE8  F01D         	goto	u2380
  8160   003BCC                     u2381:
  8161   003BCC  EF0C  F01E         	goto	l2617
  8162   003BD0                     u2380:
  8163   003BD0  0E01               	movlw	1
  8164   003BD2  6E05               	movwf	___awmod@counter^0,c
  8165   003BD4  EFF0  F01D         	goto	l2607
  8166   003BD8                     l2605:
  8167   003BD8  90D8               	bcf	status,0,c
  8168   003BDA  3603               	rlcf	___awmod@divisor^0,f,c
  8169   003BDC  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  8170   003BDE  2A05               	incf	___awmod@counter^0,f,c
  8171   003BE0                     l2607:
  8172   003BE0  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  8173   003BE2  EFF5  F01D         	goto	u2391
  8174   003BE6  EFF7  F01D         	goto	u2390
  8175   003BEA                     u2391:
  8176   003BEA  EFEC  F01D         	goto	l2605
  8177   003BEE                     u2390:
  8178   003BEE                     l2609:
  8179   003BEE  5003               	movf	___awmod@divisor^0,w,c
  8180   003BF0  5C01               	subwf	___awmod@dividend^0,w,c
  8181   003BF2  5004               	movf	(___awmod@divisor+1)^0,w,c
  8182   003BF4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  8183   003BF6  A0D8               	btfss	status,0,c
  8184   003BF8  EF00  F01E         	goto	u2401
  8185   003BFC  EF02  F01E         	goto	u2400
  8186   003C00                     u2401:
  8187   003C00  EF06  F01E         	goto	l2613
  8188   003C04                     u2400:
  8189   003C04  5003               	movf	___awmod@divisor^0,w,c
  8190   003C06  5E01               	subwf	___awmod@dividend^0,f,c
  8191   003C08  5004               	movf	(___awmod@divisor+1)^0,w,c
  8192   003C0A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  8193   003C0C                     l2613:
  8194   003C0C  90D8               	bcf	status,0,c
  8195   003C0E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  8196   003C10  3203               	rrcf	___awmod@divisor^0,f,c
  8197   003C12  2E05               	decfsz	___awmod@counter^0,f,c
  8198   003C14  EFF7  F01D         	goto	l2609
  8199   003C18                     l2617:
  8200   003C18  5006               	movf	___awmod@sign^0,w,c
  8201   003C1A  B4D8               	btfsc	status,2,c
  8202   003C1C  EF12  F01E         	goto	u2411
  8203   003C20  EF14  F01E         	goto	u2410
  8204   003C24                     u2411:
  8205   003C24  EF18  F01E         	goto	l2621
  8206   003C28                     u2410:
  8207   003C28  6C01               	negf	___awmod@dividend^0,c
  8208   003C2A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8209   003C2C  B0D8               	btfsc	status,0,c
  8210   003C2E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8211   003C30                     l2621:
  8212   003C30  C001  F001         	movff	___awmod@dividend,?___awmod
  8213   003C34  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8214   003C38  0012               	return		;funcret
  8215   003C3A                     __end_of___awmod:
  8216                           	callstack 0
  8217                           
  8218 ;; *************** function ___awdiv *****************
  8219 ;; Defined at:
  8220 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  dividend        2    0[COMRAM] int 
  8223 ;;  divisor         2    2[COMRAM] int 
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;  quotient        2    6[COMRAM] int 
  8226 ;;  sign            1    5[COMRAM] unsigned char 
  8227 ;;  counter         1    4[COMRAM] unsigned char 
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  2    0[COMRAM] int 
  8230 ;; Registers used:
  8231 ;;		wreg, status,2, status,0
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8238 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8240 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8241 ;;Total ram usage:        8 bytes
  8242 ;; Hardware stack levels used: 1
  8243 ;; This function calls:
  8244 ;;		Nothing
  8245 ;; This function is called by:
  8246 ;;		_dtoa
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           	psect	text37
  8251   00395A                     __ptext37:
  8252                           	callstack 0
  8253   00395A                     ___awdiv:
  8254                           	callstack 25
  8255   00395A  0E00               	movlw	0
  8256   00395C  6E06               	movwf	___awdiv@sign^0,c
  8257   00395E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8258   003960  EFB6  F01C         	goto	u2300
  8259   003964  EFB4  F01C         	goto	u2301
  8260   003968                     u2301:
  8261   003968  EFBC  F01C         	goto	l2553
  8262   00396C                     u2300:
  8263   00396C  6C03               	negf	___awdiv@divisor^0,c
  8264   00396E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8265   003970  B0D8               	btfsc	status,0,c
  8266   003972  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8267   003974  0E01               	movlw	1
  8268   003976  6E06               	movwf	___awdiv@sign^0,c
  8269   003978                     l2553:
  8270   003978  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8271   00397A  EFC3  F01C         	goto	u2310
  8272   00397E  EFC1  F01C         	goto	u2311
  8273   003982                     u2311:
  8274   003982  EFC9  F01C         	goto	l2559
  8275   003986                     u2310:
  8276   003986  6C01               	negf	___awdiv@dividend^0,c
  8277   003988  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8278   00398A  B0D8               	btfsc	status,0,c
  8279   00398C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8280   00398E  0E01               	movlw	1
  8281   003990  1A06               	xorwf	___awdiv@sign^0,f,c
  8282   003992                     l2559:
  8283   003992  0E00               	movlw	0
  8284   003994  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8285   003996  0E00               	movlw	0
  8286   003998  6E07               	movwf	___awdiv@quotient^0,c
  8287   00399A  5003               	movf	___awdiv@divisor^0,w,c
  8288   00399C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8289   00399E  B4D8               	btfsc	status,2,c
  8290   0039A0  EFD4  F01C         	goto	u2321
  8291   0039A4  EFD6  F01C         	goto	u2320
  8292   0039A8                     u2321:
  8293   0039A8  EFFE  F01C         	goto	l2581
  8294   0039AC                     u2320:
  8295   0039AC  0E01               	movlw	1
  8296   0039AE  6E05               	movwf	___awdiv@counter^0,c
  8297   0039B0  EFDE  F01C         	goto	l2567
  8298   0039B4                     l2565:
  8299   0039B4  90D8               	bcf	status,0,c
  8300   0039B6  3603               	rlcf	___awdiv@divisor^0,f,c
  8301   0039B8  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8302   0039BA  2A05               	incf	___awdiv@counter^0,f,c
  8303   0039BC                     l2567:
  8304   0039BC  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8305   0039BE  EFE3  F01C         	goto	u2331
  8306   0039C2  EFE5  F01C         	goto	u2330
  8307   0039C6                     u2331:
  8308   0039C6  EFDA  F01C         	goto	l2565
  8309   0039CA                     u2330:
  8310   0039CA                     l2569:
  8311   0039CA  90D8               	bcf	status,0,c
  8312   0039CC  3607               	rlcf	___awdiv@quotient^0,f,c
  8313   0039CE  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8314   0039D0  5003               	movf	___awdiv@divisor^0,w,c
  8315   0039D2  5C01               	subwf	___awdiv@dividend^0,w,c
  8316   0039D4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8317   0039D6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8318   0039D8  A0D8               	btfss	status,0,c
  8319   0039DA  EFF1  F01C         	goto	u2341
  8320   0039DE  EFF3  F01C         	goto	u2340
  8321   0039E2                     u2341:
  8322   0039E2  EFF8  F01C         	goto	l2577
  8323   0039E6                     u2340:
  8324   0039E6  5003               	movf	___awdiv@divisor^0,w,c
  8325   0039E8  5E01               	subwf	___awdiv@dividend^0,f,c
  8326   0039EA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8327   0039EC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8328   0039EE  8007               	bsf	___awdiv@quotient^0,0,c
  8329   0039F0                     l2577:
  8330   0039F0  90D8               	bcf	status,0,c
  8331   0039F2  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8332   0039F4  3203               	rrcf	___awdiv@divisor^0,f,c
  8333   0039F6  2E05               	decfsz	___awdiv@counter^0,f,c
  8334   0039F8  EFE5  F01C         	goto	l2569
  8335   0039FC                     l2581:
  8336   0039FC  5006               	movf	___awdiv@sign^0,w,c
  8337   0039FE  B4D8               	btfsc	status,2,c
  8338   003A00  EF04  F01D         	goto	u2351
  8339   003A04  EF06  F01D         	goto	u2350
  8340   003A08                     u2351:
  8341   003A08  EF0A  F01D         	goto	l2585
  8342   003A0C                     u2350:
  8343   003A0C  6C07               	negf	___awdiv@quotient^0,c
  8344   003A0E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8345   003A10  B0D8               	btfsc	status,0,c
  8346   003A12  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8347   003A14                     l2585:
  8348   003A14  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8349   003A18  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8350   003A1C  0012               	return		;funcret
  8351   003A1E                     __end_of___awdiv:
  8352                           	callstack 0
  8353                           
  8354 ;; *************** function _LCD_ShowString *****************
  8355 ;; Defined at:
  8356 ;;		line 55 in file "lcd.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;  lineNum         1    wreg     unsigned char 
  8359 ;;  textData        2    1[COMRAM] PTR unsigned char 
  8360 ;;		 -> moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_2(17), STR_1(17), 
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;  lineNum         1    5[COMRAM] unsigned char 
  8363 ;;  i               1    6[COMRAM] unsigned char 
  8364 ;; Return value:  Size  Location     Type
  8365 ;;                  1    wreg      void 
  8366 ;; Registers used:
  8367 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8368 ;; Tracked objects:
  8369 ;;		On entry : 0/0
  8370 ;;		On exit  : 0/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8374 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8375 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8377 ;;Total ram usage:        6 bytes
  8378 ;; Hardware stack levels used: 1
  8379 ;; Hardware stack levels required when called: 1
  8380 ;; This function calls:
  8381 ;;		_LCD_Send
  8382 ;; This function is called by:
  8383 ;;		_main
  8384 ;;		_moveDisplay
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           	psect	text38
  8389   003AD8                     __ptext38:
  8390                           	callstack 0
  8391   003AD8                     _LCD_ShowString:
  8392                           	callstack 28
  8393                           
  8394                           ;incstack = 0
  8395                           ;LCD_ShowString@lineNum stored from wreg
  8396   003AD8  6E06               	movwf	LCD_ShowString@lineNum^0,c
  8397   003ADA                     
  8398                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
  8399   003ADA  806B               	bsf	107,0,c	;volatile
  8400   003ADC                     l99:
  8401   003ADC  B06B               	btfsc	107,0,c	;volatile
  8402   003ADE  EF73  F01D         	goto	u3601
  8403   003AE2  EF75  F01D         	goto	u3600
  8404   003AE6                     u3601:
  8405   003AE6  EF6E  F01D         	goto	l99
  8406   003AEA                     u3600:
  8407   003AEA                     
  8408                           ;lcd.c: 62:     SSP2IF = 0;
  8409   003AEA  9EA4               	bcf	4004,7,c	;volatile
  8410   003AEC                     
  8411                           ;lcd.c: 64:     LCD_Send(0x7c);
  8412   003AEC  0E7C               	movlw	124
  8413   003AEE  EC01  F020         	call	_LCD_Send
  8414                           
  8415                           ;lcd.c: 66:     LCD_Send(0x80);
  8416   003AF2  0E80               	movlw	128
  8417   003AF4  EC01  F020         	call	_LCD_Send
  8418   003AF8                     
  8419                           ;lcd.c: 68:     if(lineNum == 1){
  8420   003AF8  0406               	decf	LCD_ShowString@lineNum^0,w,c
  8421   003AFA  A4D8               	btfss	status,2,c
  8422   003AFC  EF82  F01D         	goto	u3611
  8423   003B00  EF84  F01D         	goto	u3610
  8424   003B04                     u3611:
  8425   003B04  EF89  F01D         	goto	l3333
  8426   003B08                     u3610:
  8427   003B08                     
  8428                           ;lcd.c: 69:         LCD_Send(0x80);
  8429   003B08  0E80               	movlw	128
  8430   003B0A  EC01  F020         	call	_LCD_Send
  8431                           
  8432                           ;lcd.c: 70:     }
  8433   003B0E  EF95  F01D         	goto	l103
  8434   003B12                     l3333:
  8435   003B12  0E02               	movlw	2
  8436   003B14  1806               	xorwf	LCD_ShowString@lineNum^0,w,c
  8437   003B16  A4D8               	btfss	status,2,c
  8438   003B18  EF90  F01D         	goto	u3621
  8439   003B1C  EF92  F01D         	goto	u3620
  8440   003B20                     u3621:
  8441   003B20  EF95  F01D         	goto	l103
  8442   003B24                     u3620:
  8443   003B24                     
  8444                           ;lcd.c: 72:         LCD_Send(0xC0);
  8445   003B24  0EC0               	movlw	192
  8446   003B26  EC01  F020         	call	_LCD_Send
  8447   003B2A                     l103:
  8448                           
  8449                           ;lcd.c: 75:     LCD_Send(0x40);
  8450   003B2A  0E40               	movlw	64
  8451   003B2C  EC01  F020         	call	_LCD_Send
  8452   003B30                     
  8453                           ;lcd.c: 77:     for (i = 0; i<16; i++){
  8454   003B30  0E00               	movlw	0
  8455   003B32  6E07               	movwf	LCD_ShowString@i^0,c
  8456   003B34                     l3343:
  8457                           
  8458                           ;lcd.c: 78:         LCD_Send(textData[i]);
  8459   003B34  5007               	movf	LCD_ShowString@i^0,w,c
  8460   003B36  2402               	addwf	LCD_ShowString@textData^0,w,c
  8461   003B38  6E04               	movwf	??_LCD_ShowString^0,c
  8462   003B3A  0E00               	movlw	0
  8463   003B3C  2003               	addwfc	(LCD_ShowString@textData+1)^0,w,c
  8464   003B3E  6E05               	movwf	(??_LCD_ShowString+1)^0,c
  8465   003B40  C004  FFF6         	movff	??_LCD_ShowString,tblptrl
  8466   003B44  C005  FFF7         	movff	??_LCD_ShowString+1,tblptrh
  8467   003B48  0E00               	movlw	low (__smallconst shr (0+16))
  8468   003B4A  6EF8               	movwf	tblptru,c
  8469   003B4C  0E0F               	movlw	(high __ramtop+-1)
  8470   003B4E  64F7               	cpfsgt	tblptrh,c
  8471   003B50  D003               	bra	u3637
  8472   003B52  0008               	tblrd		*
  8473   003B54  50F5               	movf	tablat,w,c
  8474   003B56  D005               	bra	u3630
  8475   003B58                     u3637:
  8476   003B58  CFF6 FFE1          	movff	tblptrl,fsr1l
  8477   003B5C  CFF7 FFE2          	movff	tblptrh,fsr1h
  8478   003B60  50E7               	movf	indf1,w,c
  8479   003B62                     u3630:
  8480   003B62  EC01  F020         	call	_LCD_Send
  8481   003B66                     
  8482                           ;lcd.c: 79:     }
  8483   003B66  2A07               	incf	LCD_ShowString@i^0,f,c
  8484   003B68  0E0F               	movlw	15
  8485   003B6A  6407               	cpfsgt	LCD_ShowString@i^0,c
  8486   003B6C  EFBA  F01D         	goto	u3641
  8487   003B70  EFBC  F01D         	goto	u3640
  8488   003B74                     u3641:
  8489   003B74  EF9A  F01D         	goto	l3343
  8490   003B78                     u3640:
  8491   003B78                     
  8492                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
  8493   003B78  846B               	bsf	107,2,c	;volatile
  8494   003B7A                     l107:
  8495   003B7A  B46B               	btfsc	107,2,c	;volatile
  8496   003B7C  EFC2  F01D         	goto	u3651
  8497   003B80  EFC4  F01D         	goto	u3650
  8498   003B84                     u3651:
  8499   003B84  EFBD  F01D         	goto	l107
  8500   003B88                     u3650:
  8501   003B88  0012               	return		;funcret
  8502   003B8A                     __end_of_LCD_ShowString:
  8503                           	callstack 0
  8504                           
  8505 ;; *************** function _LCD_Clear *****************
  8506 ;; Defined at:
  8507 ;;		line 94 in file "lcd.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;		None
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;		None
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  1    wreg      void 
  8514 ;; Registers used:
  8515 ;;		wreg, cstack
  8516 ;; Tracked objects:
  8517 ;;		On entry : 0/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8525 ;;Total ram usage:        0 bytes
  8526 ;; Hardware stack levels used: 1
  8527 ;; Hardware stack levels required when called: 1
  8528 ;; This function calls:
  8529 ;;		_LCD_Send
  8530 ;; This function is called by:
  8531 ;;		_moveDisplay
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           	psect	text39
  8536   003F3E                     __ptext39:
  8537                           	callstack 0
  8538   003F3E                     _LCD_Clear:
  8539                           	callstack 28
  8540   003F3E                     
  8541                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
  8542   003F3E  806B               	bsf	107,0,c	;volatile
  8543   003F40                     l122:
  8544   003F40  B06B               	btfsc	107,0,c	;volatile
  8545   003F42  EFA5  F01F         	goto	u3661
  8546   003F46  EFA7  F01F         	goto	u3660
  8547   003F4A                     u3661:
  8548   003F4A  EFA0  F01F         	goto	l122
  8549   003F4E                     u3660:
  8550   003F4E                     
  8551                           ;lcd.c: 97:     SSP2IF = 0;
  8552   003F4E  9EA4               	bcf	4004,7,c	;volatile
  8553   003F50                     
  8554                           ;lcd.c: 99:     LCD_Send(0x7C);
  8555   003F50  0E7C               	movlw	124
  8556   003F52  EC01  F020         	call	_LCD_Send
  8557                           
  8558                           ;lcd.c: 100:     LCD_Send(0x80);
  8559   003F56  0E80               	movlw	128
  8560   003F58  EC01  F020         	call	_LCD_Send
  8561                           
  8562                           ;lcd.c: 101:     LCD_Send(0x01);
  8563   003F5C  0E01               	movlw	1
  8564   003F5E  EC01  F020         	call	_LCD_Send
  8565   003F62                     
  8566                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
  8567   003F62  846B               	bsf	107,2,c	;volatile
  8568   003F64                     l125:
  8569   003F64  B46B               	btfsc	107,2,c	;volatile
  8570   003F66  EFB7  F01F         	goto	u3671
  8571   003F6A  EFB9  F01F         	goto	u3670
  8572   003F6E                     u3671:
  8573   003F6E  EFB2  F01F         	goto	l125
  8574   003F72                     u3670:
  8575   003F72  0012               	return		;funcret
  8576   003F74                     __end_of_LCD_Clear:
  8577                           	callstack 0
  8578                           
  8579 ;; *************** function _LCD_Init *****************
  8580 ;; Defined at:
  8581 ;;		line 3 in file "lcd.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;		None
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;		None
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  1    wreg      void 
  8588 ;; Registers used:
  8589 ;;		wreg, status,2, cstack
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8599 ;;Total ram usage:        1 bytes
  8600 ;; Hardware stack levels used: 1
  8601 ;; Hardware stack levels required when called: 1
  8602 ;; This function calls:
  8603 ;;		_LCD_Send
  8604 ;; This function is called by:
  8605 ;;		_main
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609                           	psect	text40
  8610   003880                     __ptext40:
  8611                           	callstack 0
  8612   003880                     _LCD_Init:
  8613                           	callstack 29
  8614   003880                     
  8615                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
  8616   003880  010F               	movlb	15	; () banked
  8617   003882  913B               	bcf	59,0,b	;volatile
  8618                           
  8619                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
  8620   003884  933B               	bcf	59,1,b	;volatile
  8621                           
  8622                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
  8623   003886  8095               	bsf	149,0,c	;volatile
  8624                           
  8625                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
  8626   003888  8295               	bsf	149,1,c	;volatile
  8627                           
  8628                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
  8629   00388A  9092               	bcf	146,0,c	;volatile
  8630                           
  8631                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
  8632   00388C  8089               	bsf	137,0,c	;volatile
  8633   00388E                     
  8634                           ; BSR set to: 15
  8635                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
  8636   00388E  506C               	movf	108,w,c	;volatile
  8637   003890  0BF0               	andlw	-16
  8638   003892  0908               	iorlw	8
  8639   003894  6E6C               	movwf	108,c	;volatile
  8640                           
  8641                           ;lcd.c: 15:     SSP2ADD = 19;
  8642   003896  0E13               	movlw	19
  8643   003898  6E6E               	movwf	110,c	;volatile
  8644   00389A                     
  8645                           ; BSR set to: 15
  8646                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
  8647   00389A  8A6C               	bsf	108,5,c	;volatile
  8648   00389C                     
  8649                           ; BSR set to: 15
  8650                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
  8651   00389C  0E34               	movlw	52
  8652   00389E  6E02               	movwf	??_LCD_Init^0,c
  8653   0038A0  0EF2               	movlw	242
  8654   0038A2                     u4987:
  8655   0038A2  2EE8               	decfsz	wreg,f,c
  8656   0038A4  D7FE               	bra	u4987
  8657   0038A6  2E02               	decfsz	??_LCD_Init^0,f,c
  8658   0038A8  D7FC               	bra	u4987
  8659   0038AA                     
  8660                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
  8661   0038AA  806B               	bsf	107,0,c	;volatile
  8662   0038AC                     l90:
  8663   0038AC  B06B               	btfsc	107,0,c	;volatile
  8664   0038AE  EF5B  F01C         	goto	u4121
  8665   0038B2  EF5D  F01C         	goto	u4120
  8666   0038B6                     u4121:
  8667   0038B6  EF56  F01C         	goto	l90
  8668   0038BA                     u4120:
  8669   0038BA                     
  8670                           ;lcd.c: 22:     SSP2IF = 0;
  8671   0038BA  9EA4               	bcf	4004,7,c	;volatile
  8672   0038BC                     
  8673                           ;lcd.c: 27:     LCD_Send(0x7C);
  8674   0038BC  0E7C               	movlw	124
  8675   0038BE  EC01  F020         	call	_LCD_Send
  8676                           
  8677                           ;lcd.c: 28:     LCD_Send(0x80);
  8678   0038C2  0E80               	movlw	128
  8679   0038C4  EC01  F020         	call	_LCD_Send
  8680                           
  8681                           ;lcd.c: 29:     LCD_Send(0x38);
  8682   0038C8  0E38               	movlw	56
  8683   0038CA  EC01  F020         	call	_LCD_Send
  8684                           
  8685                           ;lcd.c: 30:     LCD_Send(0x80);
  8686   0038CE  0E80               	movlw	128
  8687   0038D0  EC01  F020         	call	_LCD_Send
  8688                           
  8689                           ;lcd.c: 31:     LCD_Send(0x39);
  8690   0038D4  0E39               	movlw	57
  8691   0038D6  EC01  F020         	call	_LCD_Send
  8692                           
  8693                           ;lcd.c: 32:     LCD_Send(0x80);
  8694   0038DA  0E80               	movlw	128
  8695   0038DC  EC01  F020         	call	_LCD_Send
  8696                           
  8697                           ;lcd.c: 33:     LCD_Send(0x17);
  8698   0038E0  0E17               	movlw	23
  8699   0038E2  EC01  F020         	call	_LCD_Send
  8700                           
  8701                           ;lcd.c: 34:     LCD_Send(0x80);
  8702   0038E6  0E80               	movlw	128
  8703   0038E8  EC01  F020         	call	_LCD_Send
  8704                           
  8705                           ;lcd.c: 35:     LCD_Send(0x7A);
  8706   0038EC  0E7A               	movlw	122
  8707   0038EE  EC01  F020         	call	_LCD_Send
  8708                           
  8709                           ;lcd.c: 36:     LCD_Send(0x80);
  8710   0038F2  0E80               	movlw	128
  8711   0038F4  EC01  F020         	call	_LCD_Send
  8712                           
  8713                           ;lcd.c: 37:     LCD_Send(0x5E);
  8714   0038F8  0E5E               	movlw	94
  8715   0038FA  EC01  F020         	call	_LCD_Send
  8716                           
  8717                           ;lcd.c: 38:     LCD_Send(0x80);
  8718   0038FE  0E80               	movlw	128
  8719   003900  EC01  F020         	call	_LCD_Send
  8720                           
  8721                           ;lcd.c: 39:     LCD_Send(0x6B);
  8722   003904  0E6B               	movlw	107
  8723   003906  EC01  F020         	call	_LCD_Send
  8724                           
  8725                           ;lcd.c: 40:     LCD_Send(0x80);
  8726   00390A  0E80               	movlw	128
  8727   00390C  EC01  F020         	call	_LCD_Send
  8728                           
  8729                           ;lcd.c: 41:     LCD_Send(0x0C);
  8730   003910  0E0C               	movlw	12
  8731   003912  EC01  F020         	call	_LCD_Send
  8732                           
  8733                           ;lcd.c: 42:     LCD_Send(0x80);
  8734   003916  0E80               	movlw	128
  8735   003918  EC01  F020         	call	_LCD_Send
  8736                           
  8737                           ;lcd.c: 43:     LCD_Send(0x01);
  8738   00391C  0E01               	movlw	1
  8739   00391E  EC01  F020         	call	_LCD_Send
  8740                           
  8741                           ;lcd.c: 44:     LCD_Send(0x80);
  8742   003922  0E80               	movlw	128
  8743   003924  EC01  F020         	call	_LCD_Send
  8744                           
  8745                           ;lcd.c: 45:     LCD_Send(0x06);
  8746   003928  0E06               	movlw	6
  8747   00392A  EC01  F020         	call	_LCD_Send
  8748                           
  8749                           ;lcd.c: 46:     LCD_Send(0x80);
  8750   00392E  0E80               	movlw	128
  8751   003930  EC01  F020         	call	_LCD_Send
  8752                           
  8753                           ;lcd.c: 47:     LCD_Send(0x02);
  8754   003934  0E02               	movlw	2
  8755   003936  EC01  F020         	call	_LCD_Send
  8756   00393A                     
  8757                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
  8758   00393A  846B               	bsf	107,2,c	;volatile
  8759   00393C                     l93:
  8760   00393C  B46B               	btfsc	107,2,c	;volatile
  8761   00393E  EFA3  F01C         	goto	u4131
  8762   003942  EFA5  F01C         	goto	u4130
  8763   003946                     u4131:
  8764   003946  EF9E  F01C         	goto	l93
  8765   00394A                     u4130:
  8766   00394A                     
  8767                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
  8768   00394A  0E34               	movlw	52
  8769   00394C  6E02               	movwf	??_LCD_Init^0,c
  8770   00394E  0EF2               	movlw	242
  8771   003950                     u4997:
  8772   003950  2EE8               	decfsz	wreg,f,c
  8773   003952  D7FE               	bra	u4997
  8774   003954  2E02               	decfsz	??_LCD_Init^0,f,c
  8775   003956  D7FC               	bra	u4997
  8776   003958  0012               	return		;funcret
  8777   00395A                     __end_of_LCD_Init:
  8778                           	callstack 0
  8779                           
  8780 ;; *************** function _LCD_Send *****************
  8781 ;; Defined at:
  8782 ;;		line 85 in file "lcd.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;  data            1    wreg     unsigned char 
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;  data            1    0[COMRAM] unsigned char 
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      void 
  8789 ;; Registers used:
  8790 ;;		wreg
  8791 ;; Tracked objects:
  8792 ;;		On entry : 0/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8799 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8800 ;;Total ram usage:        1 bytes
  8801 ;; Hardware stack levels used: 1
  8802 ;; This function calls:
  8803 ;;		Nothing
  8804 ;; This function is called by:
  8805 ;;		_LCD_Init
  8806 ;;		_LCD_ShowString
  8807 ;;		_LCD_Clear
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           	psect	text41
  8812   004002                     __ptext41:
  8813                           	callstack 0
  8814   004002                     _LCD_Send:
  8815                           	callstack 28
  8816                           
  8817                           ;incstack = 0
  8818                           ;LCD_Send@data stored from wreg
  8819   004002  6E01               	movwf	LCD_Send@data^0,c
  8820   004004                     
  8821                           ;lcd.c: 87:     SSP2BUF = data;
  8822   004004  C001  FF6F         	movff	LCD_Send@data,3951	;volatile
  8823   004008                     l113:
  8824   004008  B06D               	btfsc	109,0,c	;volatile
  8825   00400A  EF09  F020         	goto	u3521
  8826   00400E  EF0B  F020         	goto	u3520
  8827   004012                     u3521:
  8828   004012  EF04  F020         	goto	l113
  8829   004016                     u3520:
  8830   004016                     l116:
  8831   004016  AEA4               	btfss	4004,7,c	;volatile
  8832   004018  EF10  F020         	goto	u3531
  8833   00401C  EF12  F020         	goto	u3530
  8834   004020                     u3531:
  8835   004020  EF0B  F020         	goto	l116
  8836   004024                     u3530:
  8837   004024                     
  8838                           ;lcd.c: 90:     SSP2IF = 0;
  8839   004024  9EA4               	bcf	4004,7,c	;volatile
  8840   004026  0012               	return		;funcret
  8841   004028                     __end_of_LCD_Send:
  8842                           	callstack 0
  8843                           
  8844                           	psect	rparam
  8845   000000                     
  8846                           	psect	config
  8847                           
  8848                           ; Padding undefined space
  8849   300000                     	org	3145728
  8850   300000  FF                 	db	255
  8851                           
  8852                           ;Config register CONFIG1H @ 0x300001
  8853                           ;	Oscillator Selection bits
  8854                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  8855                           ;	4X PLL Enable
  8856                           ;	PLLCFG = ON, Oscillator multiplied by 4
  8857                           ;	Primary clock enable bit
  8858                           ;	PRICLKEN = 0x1, unprogrammed default
  8859                           ;	Fail-Safe Clock Monitor Enable bit
  8860                           ;	FCMEN = 0x0, unprogrammed default
  8861                           ;	Internal/External Oscillator Switchover bit
  8862                           ;	IESO = 0x0, unprogrammed default
  8863   300001                     	org	3145729
  8864   300001  33                 	db	51
  8865                           
  8866                           ;Config register CONFIG2L @ 0x300002
  8867                           ;	unspecified, using default values
  8868                           ;	Power-up Timer Enable bit
  8869                           ;	PWRTEN = 0x1, unprogrammed default
  8870                           ;	Brown-out Reset Enable bits
  8871                           ;	BOREN = 0x3, unprogrammed default
  8872                           ;	Brown Out Reset Voltage bits
  8873                           ;	BORV = 0x3, unprogrammed default
  8874   300002                     	org	3145730
  8875   300002  1F                 	db	31
  8876                           
  8877                           ;Config register CONFIG2H @ 0x300003
  8878                           ;	Watchdog Timer Enable bits
  8879                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  8880                           ;	Watchdog Timer Postscale Select bits
  8881                           ;	WDTPS = 0xF, unprogrammed default
  8882   300003                     	org	3145731
  8883   300003  3C                 	db	60
  8884                           tosu	equ	0xFFF
  8885                           tosh	equ	0xFFE
  8886                           tosl	equ	0xFFD
  8887                           stkptr	equ	0xFFC
  8888                           pclatu	equ	0xFFB
  8889                           pclath	equ	0xFFA
  8890                           pcl	equ	0xFF9
  8891                           tblptru	equ	0xFF8
  8892                           tblptrh	equ	0xFF7
  8893                           tblptrl	equ	0xFF6
  8894                           tablat	equ	0xFF5
  8895                           prodh	equ	0xFF4
  8896                           prodl	equ	0xFF3
  8897                           indf0	equ	0xFEF
  8898                           postinc0	equ	0xFEE
  8899                           postdec0	equ	0xFED
  8900                           preinc0	equ	0xFEC
  8901                           plusw0	equ	0xFEB
  8902                           fsr0h	equ	0xFEA
  8903                           fsr0l	equ	0xFE9
  8904                           wreg	equ	0xFE8
  8905                           indf1	equ	0xFE7
  8906                           postinc1	equ	0xFE6
  8907                           postdec1	equ	0xFE5
  8908                           preinc1	equ	0xFE4
  8909                           plusw1	equ	0xFE3
  8910                           fsr1h	equ	0xFE2
  8911                           fsr1l	equ	0xFE1
  8912                           bsr	equ	0xFE0
  8913                           indf2	equ	0xFDF
  8914                           postinc2	equ	0xFDE
  8915                           postdec2	equ	0xFDD
  8916                           preinc2	equ	0xFDC
  8917                           plusw2	equ	0xFDB
  8918                           fsr2h	equ	0xFDA
  8919                           fsr2l	equ	0xFD9
  8920                           status	equ	0xFD8

Data Sizes:
    Strings     85
    Constant    64
    Data        32
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     97     142
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK0[17]), moveDisplay@menuItem2(BANK0[17]), STR_1(CODE[17]), STR_2(CODE[17]), 

    moveDisplay$3121	PTR unsigned char  size(1) Largest target is 6
		 -> STR_10(CODE[6]), STR_11(CODE[1]), STR_4(CODE[5]), STR_5(CODE[5]), 
		 -> STR_6(CODE[4]), STR_7(CODE[4]), STR_8(CODE[4]), STR_9(CODE[5]), 

    moveDisplay@F6950	PTR unsigned char [8] size(1) Largest target is 6
		 -> STR_10(CODE[6]), STR_11(CODE[1]), STR_4(CODE[5]), STR_5(CODE[5]), 
		 -> STR_6(CODE[4]), STR_7(CODE[4]), STR_8(CODE[4]), STR_9(CODE[5]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(1) Largest target is 6
		 -> STR_10(CODE[6]), STR_11(CODE[1]), STR_4(CODE[5]), STR_5(CODE[5]), 
		 -> STR_6(CODE[4]), STR_7(CODE[4]), STR_8(CODE[4]), STR_9(CODE[5]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6963	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S2655$buffer	PTR unsigned char  size(2) Largest target is 0

    S2655$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_12(CODE[6]), STR_13(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> moveDisplay@menuItem1(BANK0[17]), moveDisplay@menuItem2(BANK0[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_10(CODE[6]), STR_11(CODE[1]), 
		 -> STR_14(CODE[7]), STR_4(CODE[5]), STR_5(CODE[5]), STR_6(CODE[4]), 
		 -> STR_7(CODE[4]), STR_8(CODE[4]), STR_9(CODE[5]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 6
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_10(CODE[6]), STR_11(CODE[1]), 
		 -> STR_4(CODE[5]), STR_5(CODE[5]), STR_6(CODE[4]), STR_7(CODE[4]), 
		 -> STR_8(CODE[4]), STR_9(CODE[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 6
		 -> STR_12(CODE[6]), STR_13(CODE[5]), STR_3(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 6
		 -> STR_12(CODE[6]), STR_13(CODE[5]), STR_3(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_12(CODE[6]), STR_13(CODE[5]), STR_3(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_runDAC
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf
    ___cosdf->___fladd
    ___flmul->___xxtofl
    ___fladd->___fldiv
    _printf->_vfprintf
    ___fldiv->___flmul
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _main in BANK0

    _main->_runDAC
    _runDAC->_sinf
    _sinf->___rem_pio2f
    ___rem_pio2f->___flneg
    ___flneg->___cosdf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   85336
                                             93 COMRAM     2     2      0
                                             95 BANK0      2     2      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runDAC
                            _runGPIO
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             35    35      0     365
                                              1 COMRAM    34    34      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0   71526
                                             92 COMRAM     1     1      0
                                             84 BANK0     11    11      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   47455
                                             58 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   10901
                                             80 COMRAM     4     0      4
                                              0 BANK0     28    28      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   18851
                                             90 COMRAM     2     2      0
                                             28 BANK0     30    25      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     199
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     457
                                             80 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    5929
                                             80 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     653
                                             24 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   10986
                                             80 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    5088
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    5150
                                             64 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     3      3   10997
                                             54 COMRAM     4     1      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         46    45      1   12752
                                             73 COMRAM     3     2      1
                                              0 BANK0     43    43      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6   11492
                                             54 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   10814
                                             49 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     8      4   10032
                                             38 COMRAM    11     7      4
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    1635
                                             10 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     943
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     611
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12     8      4    5135
                                             26 COMRAM    12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    3347
                                             17 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1660
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1160
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2     461
                                              1 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      22
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      22
                                              1 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
   _runDAC
     _SPI_write
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
         ___fladd
         ___flmul
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
         ___cosdf (ARG)
         ___fladd (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
           ___fladd
           ___flmul (ARG)
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      34        0.0%
BANK14             100      0       0      32        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      8E       5       88.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRhhhh       36      0       0      37        0.0%
BITBIGSFRlllllh     2F      0       0      51        0.0%
BITBIGSFRhhllh      10      0       0      42        0.0%
BITBIGSFRlllllh     10      0       0      50        0.0%
BITBIGSFRhll         8      0       0      46        0.0%
BITBIGSFRhhllll      6      0       0      44        0.0%
BITBIGSFRlllhl       6      0       0      48        0.0%
BITBIGSFRhlh         5      0       0      45        0.0%
BITBIGSFRllh         5      0       0      47        0.0%
BITBIGSFRhhlhhh      1      0       0      39        0.0%
BITBIGSFRhhlllh      1      0       0      43        0.0%
BITBIGSFRhhlhhl      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      38        0.0%
BITBIGSFRllllh       1      0       0      49        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10D      33        0.0%
DATA                 0      0     10D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Apr 28 01:37:48 2024

              ___fldiv@aexp 0040                ___fldiv@bexp 003F                ___fldiv@sign 0038  
                        _C0 102D                          _C1 1029                          _C2 1025  
                        _C3 1021                          l41 2F80                          l44 3066  
                        l36 2F2E                          l46 2FD2                          l90 38AC  
                        _S1 100D                          l92 38BA                          _S2 1009  
                        l93 393C                          _S3 1005                          _S4 1001  
                        l96 3958                          l99 3ADC                ___awdiv@sign 0006  
       ___wmul@multiplicand 0003                         l101 3AEA                         l110 3B88  
                       l103 3B2A                         l200 3EA6                         l113 4008  
                       l122 3F40                         l106 3B78                         l202 3EB4  
                       l107 3B7A                         l203 3EBA                         l116 4016  
                       l124 3F4E                         l125 3F64                         l213 4064  
                       l205 3EC8                         l118 4024                         l206 3ECC  
                       l119 4026                         l128 3F72                         l216 4076  
                       l234 387E                         l253 40BC                         l262 4092  
                       l256 40AE                         l265 4084                         l281 3366  
                       l273 33AC                         l522 3A1C                         l186 29F2  
                       l291 4000                         l259 40A0                         l268 40CA  
                       l284 339A                         l197 2A86                         l189 29F4  
                       l277 3348                         l535 3C38                         l287 33BC  
                       l288 33C8                         l820 177E                         l821 1744  
                       l565 3F06                         l912 1D1C                         l905 1B26  
                       l922 1E4C                         l914 1D94                         l819 1790  
                       l915 1D82                         l836 18AA                         l828 1A60  
                       l588 3792                         l845 197A                         l909 1E8A  
                       l861 3DC6                         l846 1968                         l960 31DE  
                       l873 25E6                         l953 3182                         l946 30EA  
                       l875 2446                         l884 248C                         l949 3246  
                       l886 2504                         l878 240A                         l887 24F2  
                       l992 3D5C                         l969 3F3C                         l994 3D80  
                       l989 3D1A                         l997 359A                         _abs 3FA8  
                       _pad 3CE0                ___awmod@sign 0006                         tosl 0FFD  
                       wreg 0FE8                  _TXSTA1bits 0FAC                ___flmul@aexp 0020  
              ___flmul@bexp 0021                ___flmul@sign 001B                ___flmul@temp 0026  
              ___flmul@prod 0022                ___fltol@exp1 005A                        l1022 34F0  
                      l1031 3CD6                        l1015 343E                        l1008 368C  
                      l1113 15A0                        l1050 2840                        l1035 3CDE  
                      l1027 353A                        ?_abs 0007                        l1060 3E8E  
                      l1064 3FC2                        l3001 1BF8                        l1067 3FDA  
                      l3011 1C5A                        l3003 1C08                        l1147 2EB6  
                      l1163 20AE                        l1164 224C                        l3021 1D02  
                      l3013 1C76                        l3005 1C22                        l1181 3FA6  
                      l1094 4060                        l1079 3AD6                        l1087 3E0A  
                      l3031 1D3E                        l3023 1D0C                        l3015 1CA0  
                      l3007 1C32                        l1176 2CB8                        l4001 3F10  
                      l3041 1DB0                        l3033 1D4C                        l3025 1D1A  
                      l3017 1CD6                        l3009 1C4E                        l3121 3772  
                      l3105 371E                        l4003 3F18                        l4011 3798  
                      l3051 1E1A                        l3043 1DBE                        l3035 1D7A  
                      l3027 1D2C                        l3019 1CE4                        l3123 3782  
                      l3115 3746                        l3107 3728                        l3131 30B4  
                      l4005 3F20                        l4021 37DC                        l4013 379C  
                      l3061 1E70                        l3053 1E34                        l3045 1DE8  
                      l3029 1D3A                        l3117 3752                        l3109 3732  
                      l3141 312C                        l3133 30FA                        l4101 2A60  
                      l4007 3F32                        l4031 386E                        l4015 37B2  
                      l3055 1E50                        l3063 1E76                        l3039 1DA4  
                      l3047 1DEC                        l3071 3D92                        l3119 3762  
                      l3151 31B4                        l3143 3138                        l3135 3110  
                      l3127 3096                        l3311 21C8                        l3303 20BA  
                      l4103 2A64                        l4111 2EE2                        l2601 3BBE  
                      l2513 4064                        l2521 3A42                        l4033 387A  
                      l4017 37C4                        l4025 37E2                        l3065 1E7A  
                      l3057 1E60                        l3049 1E06                        l3161 31F2  
                      l3153 31C0                        l3145 316A                        l3129 30A6  
                      l3313 2220                        l3305 20DE                        l3401 12A4  
                      l4105 2A74                        l4041 285E                        l4121 2F20  
                      l4113 2EE8                        l3331 3B08                        l3323 3ADA  
                      l2611 3C04                        l2603 3BD0                        l2515 4072  
                      l2523 3A4C                        l4019 37CA                        l4027 3800  
                      l3059 1E6E                        l3075 3ECE                        l3091 36E2  
                      l3083 368E                        l3163 3216                        l3155 31CE  
                      l3147 316C                        l3139 3124                        l3251 3F94  
                      l3315 2238                        l3307 214A                        l3411 1350  
                      l3403 12EC                        l4051 2878                        l4043 2860  
                      l4131 2F72                        l4115 2EEC                        l4107 2EB8  
                      l3333 3B12                        l3325 3ADA                        l2621 3C30  
                      l2613 3C0C                        l2605 3BD8                        l2525 3A6A  
                      l2517 3A1E                        l2541 3FF8                        l4029 3862  
                      l3501 226A                        l2701 16B6                        l3077 3EE6  
                      l3069 3D82                        l3093 36E4                        l3085 36A4  
                      l3165 3226                        l3157 31EC                        l3149 3178  
                      l3253 3F96                        l3309 2170                        l3413 1360  
                      l3421 1398                        l4061 2886                        l4053 287E  
                      l4045 2862                        l4037 2842                        l4141 2FC4  
                      l4125 2F3C                        l4117 2EFA                        l4109 2EDE  
                      l3351 3F50                        l3343 3B34                        l3335 3B24  
                      l3327 3AEC                        l2551 3974                        l2615 3C12  
                      l2607 3BE0                        l2527 3AA0                        l2519 3A30  
                      l3503 227A                        l3511 22A4                        l2711 16CA  
                      l2703 16BA                        l3079 3EF6                        l3095 36F4  
                      l3167 3234                        l3159 31EE                        l3431 1418  
                      l3407 1314                        l4071 28D6                        l4063 28A2  
                      l4055 2880                        l4047 2864                        l4039 2856  
                      l4151 3014                        l4135 2F8E                        l4119 2F08  
                      l4127 2F4C                        l3257 4004                        l3353 3F62  
                      l3345 3B66                        l3337 3B30                        l3329 3AF8  
                      l2561 399A                        l2553 3978                        l2545 395A  
                      l2609 3BEE                        l2617 3C18                        l2641 3FA8  
                      l3601 2514                        l3521 22D0                        l3513 22B4  
                      l3505 228A                        l2801 1928                        l2721 16DE  
                      l2713 16CE                        l2705 16BE                        l3273 2CBA  
                      l3097 36F8                        l3089 36B8                        l3169 3236  
                      l3249 3F74                        l3281 1EC2                        l3441 149A  
                      l3433 144C                        l3409 1332                        l3361 1098  
                      l4081 29D4                        l4073 293E                        l4065 28B2  
                      l4057 2882                        l4049 2866                        l4161 3088  
                      l4145 2FE4                        l4129 2F5A                        l4137 2F9E  
                      l3347 3B68                        l2571 39D0                        l2563 39AC  
                      l2555 3986                        l2547 395E                        l2619 3C28  
                      l2643 3FB6                        l2539 3FDC                        l3355 3E92  
                      l3611 2576                        l3603 2520                        l3523 22E0  
                      l3531 230A                        l3515 22BA                        l3507 229A  
                      l2811 1960                        l2803 192A                        l2731 173C  
                      l2715 16D2                        l2707 16C2                        l2723 16E2  
                      l2651 15BE                        l3099 3706                        l3291 1F98  
                      l3283 1EC4                        l3427 13D0                        l3371 10F4  
                      l3363 10A8                        l4091 2A32                        l4083 2A02  
                      l4075 2962                        l4067 28B8                        l4059 2884  
                      l4147 2FEC                        l4155 301E                        l4139 2FAC  
                      l3349 3F3E                        l2573 39E6                        l2565 39B4  
                      l2581 39FC                        l2557 398E                        l2549 396C  
                      l2901 3400                        l3357 3EA0                        l3621 25D4  
                      l3613 258C                        l3605 252E                        l3541 234C  
                      l3533 231A                        l3525 22F0                        l3517 22C0  
                      l3509 229C                        l2821 19DE                        l2805 1938  
                      l2741 1772                        l2733 1752                        l2725 16E6  
                      l2717 16D6                        l2709 16C6                        l2653 15CE  
                      l2661 15F8                        l2645 15A2                        l3293 1FF0  
                      l3285 1EE2                        l3277 1E8C                        l3269 2A88  
                      l3453 151E                        l3445 14AE                        l3429 13E0  
                      l3437 1474                        l3381 116C                        l3373 1108  
                      l3365 10BE                        l4093 2A38                        l4085 2A10  
                      l4077 29C8                        l4069 28CA                        l3701 3344  
                      l4157 3068                        l4149 3010                        l2583 3A0C  
                      l2575 39EE                        l2567 39BC                        l2559 3992  
                      l2591 3B8E                        l2911 349C                        l3359 3EA2  
                      l3623 25DA                        l3615 25A6                        l3607 2558  
                      l3535 2330                        l3527 2300                        l3519 22CE  
                      l2831 1A24                        l2815 198A                        l2823 19E0  
                      l2807 193C                        l2751 17C2                        l2743 177C  
                      l2735 175E                        l2727 1710                        l2719 16DA  
                      l2671 1628                        l2663 1608                        l2655 15DE  
                      l2647 15AE                        l3295 2050                        l3287 1F06  
                      l3279 1EAC                        l3447 14D2                        l3463 1582  
                      l3439 148A                        l3383 117C                        l3391 11EC  
                      l3367 10C0                        l4095 2A46                        l4087 2A1E  
                      l3703 3374                        l4159 307A                        l3641 38AA  
                      l3633 3880                        l2585 3A14                        l2577 39F0  
                      l2569 39CA                        l2593 3B9C                        l2921 3518  
                      l2913 34D2                        l2905 3462                        l3625 25DC  
                      l3617 25C2                        l3609 255C                        l3561 23CE  
                      l3553 2384                        l3537 2340                        l3545 2360  
                      l3529 2302                        l2841 1A4E                        l2833 1A32  
                      l2825 19F0                        l2817 1996                        l2809 194A  
                      l2761 17FE                        l2753 17D2                        l2745 179E  
                      l2737 1762                        l2729 172C                        l2681 1668  
                      l2673 1636                        l2665 160E                        l2657 15EE  
                      l2649 15BC                        l3297 2060                        l3289 1F72  
                      l3457 1546                        l3449 14F6                        l3393 1220  
                      l3385 11B0                        l3369 10DE                        l3377 1130  
                      l4097 2A4C                        l4089 2A24                        l3705 338C  
                      l3643 38BC                        l3635 388E                        l2579 39F6  
                      l2595 3BA4                        l2931 3C6C                        l2923 351C  
                      l2907 3476                        l2915 34D6                        l3619 25C6  
                      l3571 2414                        l3563 23D6                        l3555 239E  
                      l3547 2370                        l3539 2348                        l2843 1A50  
                      l2835 1A38                        l2827 1A00                        l2819 19A4  
                      l2771 1844                        l2763 180C                        l2755 17E0  
                      l2747 17AE                        l2739 1770                        l2691 16A2  
                      l2683 166A                        l2675 1638                        l2667 1620  
                      l2659 15F0                        l3299 2092                        l3379 114E  
                      l4099 2A5A                        l3483 40B2                        l3491 407A  
                      l3645 393A                        l3637 389A                        l2597 3BA8  
                      l2589 3B8A                        l3901 365C                        l2933 3C88  
                      l2925 3C3A                        l2909 347A                        l3581 246C  
                      l3573 2432                        l3565 23E6                        l3557 23AE  
                      l3549 2370                        l2837 1A3A                        l2829 1A20  
                      l2781 18C0                        l2773 1878                        l2765 180E  
                      l2757 17EE                        l2693 16A6                        l2677 1648  
                      l2685 1672                        l2669 1622                        l2941 1A6E  
                      l3397 1248                        l3493 40C0                        l3485 40A4  
                      l3709 33A8                        ?_pad 0012                        l3647 394A  
                      l3639 389C                        l2599 3BB6                        l3903 366C  
                      l2935 3CA8                        l2927 3C42                        l2919 3504  
                      l3911 2612                        l3591 24AA                        l3583 2472  
                      l3575 2434                        l3567 23FA                        l3559 23BE  
                      l3495 224E                        l2839 1A40                        l2791 18FC  
                      l2783 18D0                        l2775 187A                        l2767 1818  
                      l2759 17FA                        l2695 16AA                        l2687 1682  
                      l2679 1658                        l2951 1AAE                        l2943 1A7C  
                      l3399 1258                        l3487 4096                        l3841 3DE6  
                      l2929 3C64                        l2937 3CB0                        l3921 263C  
                      l3913 2620                        l3593 24AE                        l3585 247C  
                      l3577 2444                        l3569 2408                        l3497 225A  
                      l2793 18FE                        l2777 188A                        l2769 181E  
                      l2697 16AE                        l2689 1694                        l2961 1ADE  
                      l2953 1AB4                        l2945 1A7E                        l3489 4088  
                      l3681 3284                        l3843 3DEA                        l3851 3D12  
                      l3931 2686                        l3915 2624                        l3907 25E8  
                      l3595 24BC                        l3587 248A                        l3579 2456  
                      l3499 2268                        l2795 190C                        l2787 18E4  
                      l2779 189A                        l2699 16B2                        l2971 1B16  
                      l2963 1AE0                        l2955 1AC4                        l2947 1A8E  
                      l2939 1A62                        l3683 3296                        l3675 3248  
                      l3837 3DC8                        l3853 3D26                        l3845 3CE0  
                      l3861 353C                        l2893 33CA                        l3941 26E2  
                      l3933 2696                        l3925 2644                        l3917 262C  
                      l3909 260A                        l3597 24EA                        l3589 249C  
                      l2797 1914                        l2789 18EE                        l2981 1B66  
                      l2973 1B36                        l2965 1AF0                        l2957 1ACA  
                      l2949 1A9E                        l3693 32B2                        l3685 329E  
                      l3677 3266                        l3839 3DD4                        l3855 3D3A  
                      l3847 3CF0                        l3871 3572                        l3863 3540  
                      l2895 33E4                        l3951 2720                        l3943 26FA  
                      l3935 26A0                        l3919 2630                        l3927 2662  
                      l2799 1918                        l2991 1BB6                        l2983 1B70  
                      l2975 1B46                        l2967 1B00                        l2959 1AD0  
                      l3695 330C                        l3687 32AA                        l3679 326E  
                      l3857 3D3E                        l3849 3D04                        l3881 35AC  
                      l3873 3582                        l3865 3554                        l2897 33F0  
                      l3961 279E                        l3953 2742                        l3945 2704  
                      l3937 26AA                        l3929 2672                        l2993 1BC2  
                      l2985 1B86                        l2969 1B10                        l3697 3310  
                      l3859 3D6C                        l3883 35B2                        l3891 360A  
                      l3875 358E                        l3867 355C                        l2899 33FC  
                      l3963 27C8                        l3955 274A                        l3939 26C6  
                      l2995 1BD0                        l2987 1B92                        l2979 1B5A  
                      l3699 332C                        l3893 3624                        l3885 35E4  
                      l3877 3596                        l3869 356C                        l3973 280E  
                      l3957 2752                        l3949 271C                        l2997 1BDC  
                      l2989 1BAA                        l3895 3636                        l3887 35E8  
                      l3879 35A2                        l3959 2774                        l3967 27D6  
                      l3983 3E4E                        l2999 1BEC                        l3897 3646  
                      l3889 35EE                        l3969 27E6                        l3977 281A  
                      l3985 3E56                        l3993 4048                        l3899 3656  
                      l3987 3E6A                        l3995 404C                        l3989 3E86  
                      l3999 3F08                        STR_1 1041                        STR_2 1052  
                      STR_3 1085                        STR_4 107B                        STR_5 1080  
                      STR_6 1092                        STR_7 108E                        STR_8 108A  
                      STR_9 1076                        u3000 34F0                        u3001 34EC  
                      u3010 3500                        u3011 34FC                        u2300 396C  
                      u3020 353A                        u3100 1B00                        u2301 3968  
                      u3021 3536                        u3101 1AFC                        u2310 3986  
                      u3030 3C64                        u3110 1B36                        u2311 3982  
                      u3031 3C60                        u3111 1B32                        u2320 39AC  
                      u2400 3C04                        u2240 4072                        u3040 3CD6  
                      u4000 2456                        u3200 1DBE                        u3120 1B46  
                      u2321 39A8                        u2401 3C00                        u2241 406E  
                      u3041 3CD2                        u4001 2452                        u3201 1DBA  
                      u3121 1B42                        u2330 39CA                        u2410 3C28  
                      u2250 3A30                        u4010 246C                        u3210 1E06  
                      u3130 1CC0                        u3050 1A7C                        u2331 39C6  
                      u2411 3C24                        u2251 3A2C                        u4011 2468  
                      u3211 1E02                        u3051 1A78                        u2340 39E6  
                      u2260 3A42                        u4100 25A6                        u4020 248A  
                      u2500 1620                        u3220 1E34                        u3140 1D1A  
                      u3060 1A8E                        u3300 3762                        u2341 39E2  
                      u2261 3A3E                        u4101 25A2                        u4021 2486  
                      u2501 161C                        u3221 1E30                        u3141 1D16  
                      u3061 1A8A                        u3301 375E                        u2350 3A0C  
                      u2270 3A6A                        u4110 25D4                        u4030 24AA  
                      u2510 1636                        u3230 1E6E                        u3150 1D3A  
                      u3070 1A9E                        u3310 3772                        u2351 3A08  
                      u2271 3A66                        u4111 25D0                        u4031 24A6  
                      u2511 1632                        u3231 1E6A                        u3151 1D36  
                      u3135 1CB6                        u3071 1A9A                        u3311 376E  
                      u4120 38BA                        u2360 3B9C                        u2280 3AA0  
                      u4040 24BC                        u2600 1770                        u2520 1648  
                      u3160 1D4C                        u3080 1ADE                        u3240 3EE6  
                      u3400 3226                        u3320 30A6                        u4121 38B6  
                      u2361 3B98                        u2281 3A9C                        u4041 24B8  
                      u2601 176C                        u2521 1644                        u3161 1D48  
                      u3081 1ADA                        u3241 3EE2                        u3401 3222  
                      u3321 30A2                        u4130 394A                        u2370 3BB6  
                      u4050 24EA                        u2610 1790                        u2530 1658  
                      u3170 1D7A                        u3090 1AF0                        u3250 36A4  
                      u3410 3234                        u3330 30B4                        u4210 3308  
                      u4131 3946                        u2371 3BB2                        u4051 24E6  
                      u2611 178C                        u2531 1654                        u3171 1D76  
                      u3091 1AEC                        u3251 36A0                        u3411 3230  
                      u3331 30B0                        u4211 3302                        u2380 3BD0  
                      u2460 3FB6                        u4060 2500                        u2700 18D0  
                      u2620 179E                        u2540 1694                        u3180 1D90  
                      u3260 36D8                        u3340 3110                        u4220 330A  
                      u4204 32F2                        u2381 3BCC                        u2461 3FB2  
                      u4061 24FC                        u2701 18CC                        u2621 179A  
                      u2541 1690                        u3181 1D8C                        u3341 310C  
                      u4205 32EE                        u2390 3BEE                        u4070 2514  
                      u2710 18FC                        u2630 17AE                        u2550 16A2  
                      u2470 15BC                        u3190 1DA4                        u3270 3706  
                      u3350 3166                        u4230 332C                        u2391 3BEA  
                      u4071 2510                        u2711 18F8                        u2631 17AA  
                      u2551 169E                        u2471 15B8                        u3191 1DA0  
                      u3271 3702                        u3351 3162                        u4231 3328  
                      u3520 4016                        u3600 3AEA                        u4080 252E  
                      u2800 19DE                        u2720 190C                        u2640 17E0  
                      u2560 1710                        u2480 15CE                        u3280 371A  
                      u3360 31B0                        u4240 3366                        u3521 4012  
                      u3601 3AE6                        u4081 252A                        u2801 19DA  
                      u2721 1908                        u2641 17DC                        u2561 170C  
                      u2481 15CA                        u3281 3716                        u3265 36CE  
                      u3361 31AC                        u4241 3362                        u3530 4024  
                      u3610 3B08                        u4090 2576                        u2810 19F0  
                      u2730 1928                        u2650 17EE                        u2570 1728  
                      u2490 15DE                        u3290 3742                        u3370 31CE  
                      u4250 3374                        u3531 4020                        u3611 3B04  
                      u4091 2572                        u2811 19EC                        u2731 1924  
                      u2651 17EA                        u2571 1722                        u2491 15DA  
                      u3291 373E                        u3371 31CA                        u4251 3370  
                      u4171 3278                        u3620 3B24                        u4500 3D5C  
                      u2820 1A00                        u2740 1938                        u2660 180C  
                      u2580 172A                        u3380 31DE                        u3700 10BA  
                      u4260 339A                        u3621 3B20                        u4501 3D58  
                      u2821 19FC                        u2741 1934                        u2661 1808  
                      u3381 31DA                        u3701 10B4                        u4261 3396  
                      u4181 328E                        u3630 3B62                        u4510 3D6C  
                      u2830 1A20                        u2750 194A                        u2670 1844  
                      u2590 1752                        u3390 31EC                        u3550 1EBE  
                      u3710 10BC                        u4270 33A8                        u4511 3D68  
                      u2831 1A1C                        u2751 1946                        u2671 1840  
                      u2591 174E                        u3391 31E8                        u3551 1EB8  
                      u4271 33A4                        u3640 3B78                        u4520 3550  
                      u4600 260A                        u2840 1A32                        u2760 1960  
                      u2680 188A                        u3560 1EC0                        u3800 1360  
                      u3720 10DE                        u4280 33BC                        u3641 3B74  
                      u4521 354A                        u4601 2606                        u2841 1A2E  
                      u2761 195C                        u2681 1886                        u3801 135C  
                      u3721 10DA                        u4281 33B8                        u3650 3B88  
                      u4530 3552                        u4610 2672                        u2850 1A4E  
                      u2770 1976                        u2690 18C0                        u3570 1EE2  
                      u3810 13E0                        u3730 10F4                        u3651 3B84  
                      u4611 266E                        u2851 1A4A                        u2771 1972  
                      u2691 18BC                        u3571 1EDE                        u3811 13DC  
                      u3731 10F0                        u3660 3F4E                        u4540 356C  
                      u2940 33E4                        u4620 2696                        u4700 3E86  
                      u3900 227A                        u2780 198A                        u3580 2060  
                      u3820 148A                        u3740 114E                        u3661 3F4A  
                      u3637 3B58                        u4541 3568                        u2941 33E0  
                      u4621 2692                        u4701 3E82                        u3901 2276  
                      u2781 1986                        u3581 205C                        u3821 1486  
                      u3741 114A                        u3670 3F72                        u4470 3E0A  
                      u4550 3582                        u2950 342E                        u4630 26C6  
                      u3910 228A                        u2790 19A4                        u3590 2248  
                      u3750 116C                        u4198 32C4                        u3671 3F6E  
                      u4471 3E06                        u4551 357E                        u4631 26C2  
                      u4711 37A6                        u3911 2286                        u2791 19A0  
                      u3591 2244                        u3751 1168                        u4199 330C  
                      u4480 3CF0                        u4560 3624                        u2960 343E  
                      u4640 26E2                        u4720 37C4                        u3680 3EB4  
                      u3920 22CE                        u3760 117C                        u4800 2A5A  
                      u4481 3CEC                        u4561 3620                        u2961 343A  
                      u4641 26DE                        u4721 37C0                        u3681 3EB0  
                      u3921 22CA                        u3761 1178                        u4801 2A56  
                      u4490 3D12                        u4570 3636                        u2970 345E  
                      u4650 2742                        u4730 37DC                        u3690 3EC8  
                      u3930 22E0                        u3770 1258                        u4810 2A86  
                      u4491 3D0E                        u4571 3632                        u2971 345A  
                      u4651 273E                        u4731 37D8                        u3691 3EC4  
                      u3931 22DC                        u3771 1254                        u4811 2A82  
                      u3835 40BA                        u4580 3646                        u2980 3498  
                      u4660 2774                        u3940 22F0                        u3780 1332  
                      u4740 28B2                        u3836 40BC                        u4900 2FE0  
                      u4820 2F08                        u4581 3642                        u2981 3494  
                      u2957 3424                        u4661 2770                        u3941 22EC  
                      u3781 132E                        u4741 28AE                        u3845 40AC  
                      u4901 2FDC                        u4821 2F04                        u4590 3656  
                      u2990 34BE                        u4670 279E                        u3950 2330  
                      u3790 1350                        u4750 28CA                        u3846 40AE  
                      u4910 307A                        u4830 2F2E                        u4591 3652  
                      u4671 279A                        u3951 232C                        u3791 134C  
                      u4751 28C6                        u3855 409E                        u4911 3076  
                      u4831 2F2A                        u4680 27C8                        u3960 2370  
                      u4760 2A02                        u3856 40A0                        u4840 2F3C  
                      u4681 27C4                        u3961 236C                        u4761 29FE  
                      u3865 4090                        u4841 2F38                        u4690 27E6  
                      u3970 23E6                        u3890 2268                        u4770 2A1E  
                      u3866 4092                        u4850 2F5A                        u4691 27E2  
                      u3971 23E2                        u3891 2264                        u4771 2A1A  
                      u3875 4082                        u4851 2F56                        u3980 2408  
                      u4780 2A32                        u3876 4084                        u4860 2F80  
                      u2997 34B4                        u3981 2404                        u4781 2A2E  
                      u3885 40C8                        u4861 2F7C                        u3990 2432  
                      u4790 2A46                        u3886 40CA                        u4870 2F8E  
                      u3991 242E                        u4791 2A42                        u4871 2F8A  
                      u4927 2F12                        u4880 2FAC                        u4881 2FA8  
                      u4937 2F64                        u4890 2FD2                        u4891 2FCE  
                      u4947 2FB6                        u4957 3336                        u4967 337E  
                      u4977 2A6A                        u4987 38A2                        u4997 3950  
                      abs@a 0007                        _dbuf 0100                        _half 101D  
                      _main 2EB8                        _dtoa 353C                        _prec 00EB  
                      _sinf 1098                        pad@i 0019                        pad@p 0016  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf1 0FE7  
                      indf2 0FDF                        fsr1l 0FE1                        fsr2l 0FD9  
                      _stoa 33CA                        prodh 0FF4                        prodl 0FF3  
                      start 0000             ___fldiv@new_exp 0039                ___param_bank 0000  
            _LCD_ShowString 3AD8                       ??_abs 0009                       ??_pad 0018  
          __end_of_LCD_Init 395A            __end_of_LCD_Send 4028               ___fltol@sign1 0059  
           __end_of___fladd 1A62                       ?_main 0001                       ?_dtoa 001B  
           __end_of___fldiv 25E8             __end_of___awdiv 3A1E             __end_of___cosdf 2EB8  
           __end_of___flneg 3F08                       STR_10 106A                       STR_11 1089  
                     STR_12 1070                       STR_13 1071                       STR_14 1063  
           __end_of___awmod 3C3A                       ?_sinf 009A             __end_of___flmul 1E8C  
           __end_of___flsub 3DC8             __end_of___fltol 3794                       ?_stoa 000B  
           ___awdiv@divisor 0003             __end_of___sindf 2CBA                ___sindf$3127 0068  
              ___sindf$3128 006C                ___sindf$3129 0070             ___awdiv@counter 0005  
              vfpfcnvrt@fmt 0029                       _TX1IF 7CF4             __end_of_pio2_1t 1015  
                     _fabsf 3F74                       _flags 00ED         read_prec_or_width@c 0009  
       read_prec_or_width@n 000A                       _fputc 3A1E                       _fputs 3DC8  
                     pad@fp 0012                       _width 00E9             __end_of_invpio2 101D  
                     _putch 4062                       dtoa@d 001D                       dtoa@i 0025  
                     dtoa@p 0021                       dtoa@s 0024                       dtoa@w 0022  
      __end_of_LED1_Control 40BE             __end_of_runGPIO 33CA                       pclath 0FFA  
                     tablat 0FF5        __end_of_LED2_Control 40B0                       sinf@n 00A6  
                     sinf@x 009A                       sinf@y 00AC                       plusw1 0FE3  
                     plusw2 0FDB                       stoa@l 0017                       stoa@p 0011  
                     stoa@s 000D                       stoa@w 0013        __end_of_LED3_Control 40A2  
                     status 0FD8             __end_of_sprintf 3F3E        __end_of_LED4_Control 4094  
      __end_of_LED5_Control 4086        __end_of_LED6_Control 40CC             __initialization 3E0C  
    __end_of_LCD_ShowString 3B8A                __end_of_half 1021                __end_of_main 3094  
              __end_of_dtoa 368E                __end_of_sinf 15A2                __end_of_stoa 353C  
              LCD_Send@data 0001                      ??_main 005E                      ??_dtoa 001F  
                    ??_sinf 005D                      ??_stoa 000F           __end_of_LCD_Clear 3F74  
             __activetblptr 0002  __end_of_read_prec_or_width 3CE0                ?_moveDisplay 004A  
                    ?_fabsf 0001                      ?_fputc 0002                      ?_fputs 000B  
                    _ADRESH 0FC4            ___awdiv@dividend 0001                      ?_putch 0001  
                    _GODONE 7E11               ___rem_pio2f@n 0096               ___rem_pio2f@t 0092  
             ___rem_pio2f@x 007C               ___rem_pio2f@y 0080               vfpfcnvrt@done 0031  
                    _SPBRG1 0FAF                      _SSP1IF 7CF3                      _SSP2IF 7D27  
                    _TXREG1 0FAD            __end_of___xxtofl 3248                vfprintf@cfmt 0036  
           ?_LCD_ShowString 0002                      _s1pio2 103D                      _s2pio2 1039  
                    _s3pio2 1035                      _s4pio2 1031                   ??___fladd 0049  
                    ___wmul 3FDC                   ??___fldiv 0030                   ??___awdiv 0005  
                 ??___cosdf 0055                   ??___flneg 0055                   ??___awmod 0005  
                 ??___flmul 0017                   ??___flsub 0059                   ??___fltol 0055  
                 ??___sindf 0055                      _pio2_1 1015                      fabsf@u 0005  
                    fabsf@x 0001        read_prec_or_width@ap 0008                      clear_0 3E32  
                    clear_1 3E3E            ___awdiv@quotient 0007                      _runDAC 2842  
           ___awmod@divisor 0003                      isa$std 0001             ___awmod@counter 0005  
                    _printf 4048                      pad@buf 0014                      dtoa@fp 001B  
                    fputc@c 0002                      fputs@c 000F                      fputs@i 0010  
                    fputs@s 000B                __mediumconst 0000                      sinf@ux 00B0  
                 ??_runGPIO 0002                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8           __end_of_SPI_write 3ECE                      stoa@cp 0015  
                    stoa@fp 000B            __end_of_vfprintf 3E90                   ??_sprintf 003D  
              ___xxtofl@arg 000B                ___xxtofl@exp 000A                ___xxtofl@val 0001  
                __accesstop 0060     __end_of__initialization 3E44                   ?_LCD_Init 0001  
                 ?_LCD_Send 0001                  ___flneg@f1 0078               ___rparam_used 0001  
                ___fltol@f1 0051              __pcstackCOMRAM 0001           LED4_Control@state 0001  
              __pidataBANK0 4028               __end_of_fabsf 3FA8               __end_of_fputc 3AD8  
             __end_of_fputs 3E0C               __end_of_putch 4078                  __end_of_C0 1031  
                __end_of_C1 102D                  __end_of_C2 1029                  __end_of_C3 1025  
                __end_of_S1 1011                  __end_of_S2 100D                  __end_of_S3 1009  
                __end_of_S4 1005                     ??_fabsf 0005                     ??_fputc 0006  
                   ??_fputs 000F                     ??_putch 0001                  __pbssBANK0 00E1  
                __pbssBANK1 0100                  ??_LCD_Init 0002                  ??_LCD_Send 0001  
              SPI_write@LSB 0002                SPI_write@MSB 0001                     ?___wmul 0001  
             ??___rem_pio2f 005B                _LED1_Control 40B0                     ?_runDAC 0001  
              _LED2_Control 40A2                     ?_printf 0037                _LED3_Control 4094  
              _LED4_Control 4086                   ?___xxtofl 0001                _LED5_Control 4078  
            ___rem_pio2f@fn 008E              ___rem_pio2f@ty 0081              ___rem_pio2f@ux 008A  
              _LED6_Control 40BE                     _SSP2ADD 0F6E                     _SSP1BUF 0FC9  
                   _SSP2BUF 0F6F           runGPIO@LEDControl 0010             LCD_ShowString@i 0007  
                   __Hparam 0000                     __Lparam 0000                     ___fladd 15A2  
                   ___fldiv 224E                     ___awdiv 395A                     ___cosdf 2CBA  
                   ___flneg 3ECE                     ___awmod 3B8A                     ___flmul 1A62  
                   ___flsub 3D82                     ___fltol 368E                     ___sindf 2A88  
                 ?_vfprintf 0032                __psmallconst 1000              main@setUpAgain 00BF  
                   __pcinit 3E0C                     __ramtop 1000                     __ptext0 2EB8  
                   __ptext1 3248                     __ptext2 4078                     __ptext3 4086  
                   __ptext4 4094                     __ptext5 40A2                     __ptext6 40B0  
                   __ptext7 40BE                     __ptext8 2842                     __ptext9 1098  
                   _pio2_1t 1011       read_prec_or_width@fmt 0007                  ??___xxtofl 0005  
       __end_of___rem_pio2f 224E            ___awmod@dividend 0001                     _invpio2 1019  
                   _runGPIO 3248                   _LCD_Clear 3F3E                     _sprintf 3F08  
          ___rem_pio2f$3126 0085        end_of_initialization 3E44                     fputc@fp 0004  
          ___rem_pio2f@F526 00E5               __Lmediumconst 0000                     fputs@fp 000D  
          ??_LCD_ShowString 0004          _read_prec_or_width 3C3A           LED1_Control@state 0001  
     LCD_ShowString@lineNum 0006            ___rem_pio2f@sign 0089           __end_of_vfpfcnvrt 2842  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 0007  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 002C                  ??_vfprintf 0036                   _PORTAbits 0F80  
                 _PORTCbits 0F82                 ___fladd@grs 0050               ___xxtofl@sign 0009  
                 _TRISAbits 0F92                   _TRISBbits 0F93                   _TRISCbits 0F94  
                 _TRISDbits 0F95                  ?_LCD_Clear 0001        ??_read_prec_or_width 0009  
               ___fldiv@grs 003B                 ___fldiv@rem 0034                   _SPI_write 3E90  
               ___flmul@grs 001C           LED5_Control@state 0001              __end_of_s1pio2 1041  
            __end_of_s2pio2 103D              __end_of_s3pio2 1039              __end_of_s4pio2 1035  
               vfpfcnvrt@ap 002A                 vfpfcnvrt@cp 0030                 ___rem_pio2f 1E8C  
               vfpfcnvrt@fp 0027              __end_of___wmul 4002              __end_of_pio2_1 1019  
      moveDisplay@menuItem1 0060        moveDisplay@menuItem2 0071        moveDisplay@menuItems 0082  
            __end_of_runDAC 2A88              __end_of_printf 4062         start_initialization 3E0C  
               __end_of_abs 3FDC                 __end_of_pad 3D82                  ?_SPI_write 0001  
               vfprintf@fmt 0034                    ??___wmul 0005                 __pdataBANK0 00C1  
                  ??_runDAC 005D                    ??_printf 003A                   ___fladd@a 0045  
                 ___fladd@b 0041                   ___fldiv@a 002C                   ___fldiv@b 0028  
             runGPIO@states 0004                   ___cosdf@r 0060                   ___cosdf@w 0070  
                 ___cosdf@x 0051                   ___cosdf@z 0074                   ___flmul@a 0013  
                 ___flmul@b 000F                   ___flsub@a 0055                   ___flsub@b 0051  
             __pcstackBANK0 0060                 ??_LCD_Clear 0002                   ___sindf@r 0060  
                 ___sindf@s 0074                   ___sindf@w 0064                   ___sindf@x 0051  
                 ___sindf@z 0078                   _dtoa$2734 001F               SPI_write@data 0003  
                  ?___fladd 0041                    ?___fldiv 0028                    ?___awdiv 0001  
                  ?___cosdf 0051                    ?___flneg 0078                    ?___awmod 0001  
                  ?___flmul 000F                    ?___flsub 0051                    ?___fltol 0051  
                  ?___sindf 0051                   fabsf@F465 00E1                 __smallconst 1000  
             ??_moveDisplay 004B                    ?_runGPIO 0001             runDAC@keepState 00BC  
                 _sinf$3122 00A8                    ?_sprintf 0037                   _sinf$2857 009E  
                 _sinf$2858 00A2                 ??_SPI_write 0001              runDAC@DACindex 00BE  
                  _LCD_Init 3880                    _LCD_Send 4002              ___wmul@product 0005  
                  _LATAbits 0F89                    _LATBbits 0F8A                    _LATCbits 0F8B  
                  _LATDbits 0F8C           LED2_Control@state 0001                   _vfpfcnvrt 25E8  
                _ADCON0bits 0FC2                  _ADCON2bits 0FC0           ___wmul@multiplier 0001  
                 main@menuI 00C0            moveDisplay@F6950 00D9                   copy_data0 3E20  
       __end_of_moveDisplay 3880            moveDisplay@menuI 008A                runGPIO@F6963 00CD  
          moveDisplay@where 004A                runGPIO@F6981 00C1                    __Hrparam 0000  
                vfprintf@ap 0035                    __Lrparam 0000                  vfprintf@fp 0032  
        runGPIO@GPIOreverse 001C           LED6_Control@state 0001                ?___rem_pio2f 007C  
                ?_vfpfcnvrt 0027         runDAC@selectModeDAC 00BD                  _ANSELAbits 0F38  
                _ANSELBbits 0F39                  _ANSELDbits 0F3B                  sprintf@fmt 0038  
                  ___xxtofl 3094                    __ptext10 2A88                    __ptext11 1E8C  
                  __ptext20 4048                    __ptext12 3F74                    __ptext21 224E  
                  __ptext13 3094                    __ptext30 353C                    __ptext22 3E90  
                  __ptext14 368E                    __ptext31 3CE0                    __ptext23 3794  
                  __ptext15 3D82                    __ptext40 3880                    __ptext32 3DC8  
                  __ptext24 3F08                    __ptext16 3ECE                    __ptext41 4002  
                  __ptext33 3A1E                    __ptext25 3E4E                    __ptext17 2CBA  
                  __ptext34 4062                    __ptext26 25E8                    __ptext18 1A62  
                  __ptext35 3FA8                    __ptext27 33CA                    __ptext19 15A2  
                  __ptext36 3B8A                    __ptext28 3C3A                    __ptext37 395A  
                  __ptext29 3FDC                    __ptext38 3AD8                    __ptext39 3F3E  
              _SSP1CON1bits 0FC6                _SSP2CON1bits 0F6C                _SSP2CON2bits 0F6B  
                  isa$xinst 0000                 _runDAC$3120 00B8                 _runDAC$3119 00B4  
                  _vfprintf 3E4E               ?_LED1_Control 0001                   printf@fmt 0037  
              _SSP1STATbits 0FC7               ?_LED2_Control 0001                _SSP2STATbits 0F6D  
             ?_LED3_Control 0001               ?_LED4_Control 0001                   putch@data 0001  
             ?_LED5_Control 0001               ?_LED6_Control 0001                 _moveDisplay 3794  
                 sprintf@ap 003D                  _RCSTA1bits 0FAB                    sinf@sign 00A7  
                  runGPIO@i 0020                    runGPIO@j 0022            runGPIO@keepState 001F  
                  printf@ap 003A              ??_LED1_Control 0001              ??_LED2_Control 0001  
               ??_vfpfcnvrt 002B      LCD_ShowString@textData 0002              ??_LED3_Control 0001  
            ??_LED4_Control 0001                    sprintf@f 003E                    sprintf@s 0037  
            ??_LED5_Control 0001              ??_LED6_Control 0001               ___fladd@signs 004D  
              ___fladd@aexp 004E                ___fladd@bexp 004F            runGPIO@numStates 001D  
              ___cosdf$3123 0064                ___cosdf$3124 0068                ___cosdf$3125 006C  
         LED3_Control@state 0001  
