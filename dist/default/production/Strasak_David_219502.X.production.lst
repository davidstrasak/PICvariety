

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Apr 29 15:24:49 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Generated 09/02/2023 GMT
    77                           ; 
    78                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F46K22 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataBANK1
   112   004B60                     __pidataBANK1:
   113                           	callstack 0
   114                           
   115                           ;initializer for moveDisplay@F6948
   116   004B60  D8                 	db	low STR_11
   117   004B61  FF                 	db	high STR_11
   118   004B62  DD                 	db	low STR_12
   119   004B63  FF                 	db	high STR_12
   120   004B64  FB                 	db	low STR_13
   121   004B65  FF                 	db	high STR_13
   122   004B66  F7                 	db	low STR_14
   123   004B67  FF                 	db	high STR_14
   124   004B68  F3                 	db	low STR_15
   125   004B69  FF                 	db	high STR_15
   126   004B6A  D3                 	db	low STR_16
   127   004B6B  FF                 	db	high STR_16
   128   004B6C  C7                 	db	low STR_17
   129   004B6D  FF                 	db	high STR_17
   130   004B6E  3E                 	db	low (STR_22+16)
   131   004B6F  FF                 	db	high (STR_22+16)
   132                           
   133                           ;initializer for runGPIO@F6978
   134   004B70  20                 	db	32
   135   004B71  30                 	db	48
   136   004B72  18                 	db	24
   137   004B73  0C                 	db	12
   138   004B74  06                 	db	6
   139   004B75  03                 	db	3
   140   004B76  01                 	db	1
   141   004B77  03                 	db	3
   142   004B78  06                 	db	6
   143   004B79  0C                 	db	12
   144   004B7A  18                 	db	24
   145   004B7B  30                 	db	48
   146                           
   147                           ;initializer for runGPIO@F6960
   148   004B7C  52                 	db	low _LED1_Control
   149   004B7D  4C                 	db	high _LED1_Control
   150   004B7E  44                 	db	low _LED2_Control
   151   004B7F  4C                 	db	high _LED2_Control
   152   004B80  36                 	db	low _LED3_Control
   153   004B81  4C                 	db	high _LED3_Control
   154   004B82  28                 	db	low _LED4_Control
   155   004B83  4C                 	db	high _LED4_Control
   156   004B84  1A                 	db	low _LED5_Control
   157   004B85  4C                 	db	high _LED5_Control
   158   004B86  60                 	db	low _LED6_Control
   159   004B87  4C                 	db	high _LED6_Control
   160                           
   161                           ;initializer for stoa@F1179
   162   004B88  28                 	db	40
   163   004B89  6E                 	db	110
   164   004B8A  75                 	db	117
   165   004B8B  6C                 	db	108
   166   004B8C  6C                 	db	108
   167   004B8D  29                 	db	41
   168   004B8E  00                 	db	0
   169                           
   170                           	psect	mediumconst
   171   00FED6                     __pmediumconst:
   172                           	callstack 0
   173   00FED6  00                 	db	0
   174   00FED7  6C3C               	dw	27708
   175   00FED9  3636               	dw	13878
   176   00FEDB                     __end_of_S4:
   177                           	callstack 0
   178   00FEDB  07CF               	dw	1999
   179   00FEDD  B950               	dw	47440
   180   00FEDF                     __end_of_S3:
   181                           	callstack 0
   182   00FEDF  8884               	dw	34948
   183   00FEE1  3C08               	dw	15368
   184   00FEE3                     __end_of_S2:
   185                           	callstack 0
   186   00FEE3  AAAB               	dw	43691
   187   00FEE5  BE2A               	dw	48682
   188   00FEE7                     __end_of_S1:
   189                           	callstack 0
   190   00FEE7  85A3               	dw	34211
   191   00FEE9  3288               	dw	12936
   192   00FEEB                     __end_of_pio2_1t:
   193                           	callstack 0
   194   00FEEB  0FDA               	dw	4058
   195   00FEED  3FC9               	dw	16329
   196   00FEEF                     __end_of_pio2_1:
   197                           	callstack 0
   198   00FEEF  F983               	dw	63875
   199   00FEF1  3F22               	dw	16162
   200   00FEF3                     __end_of_invpio2:
   201                           	callstack 0
   202   00FEF3  0000               	dw	0
   203   00FEF5  3F00               	dw	16128
   204   00FEF7                     __end_of_half:
   205                           	callstack 0
   206   00FEF7  0000               	dw	0
   207   00FEF9  4B40               	dw	19264
   208   00FEFB                     __end_of_toint:
   209                           	callstack 0
   210   00FEFB  9A17               	dw	39447
   211   00FEFD  37CC               	dw	14284
   212   00FEFF                     __end_of_C3:
   213                           	callstack 0
   214   00FEFF  043F               	dw	1087
   215   00FF01  BAB6               	dw	47798
   216   00FF03                     __end_of_C2:
   217                           	callstack 0
   218   00FF03  AA9F               	dw	43679
   219   00FF05  3D2A               	dw	15658
   220   00FF07                     __end_of_C1:
   221                           	callstack 0
   222   00FF07  0000               	dw	0
   223   00FF09  BF00               	dw	48896
   224   00FF0B                     __end_of_C0:
   225                           	callstack 0
   226   00FF0B  0FDB               	dw	4059
   227   00FF0D  40C9               	dw	16585
   228   00FF0F                     __end_of_s4pio2:
   229                           	callstack 0
   230   00FF0F  CBE4               	dw	52196
   231   00FF11  4096               	dw	16534
   232   00FF13                     __end_of_s3pio2:
   233                           	callstack 0
   234   00FF13  0FDB               	dw	4059
   235   00FF15  4049               	dw	16457
   236   00FF17                     __end_of_s2pio2:
   237                           	callstack 0
   238   00FF17  0FDB               	dw	4059
   239   00FF19  3FC9               	dw	16329
   240   00FF1B                     __end_of_s1pio2:
   241                           	callstack 0
   242   000000                     _ADRESL	set	4035
   243   000000                     _RCREG1	set	4014
   244   000000                     _ANSELCbits	set	3898
   245   000000                     _TXREG1	set	4013
   246   000000                     _ADRESH	set	4036
   247   000000                     _LATBbits	set	3978
   248   000000                     _TXSTA1bits	set	4012
   249   000000                     _ANSELBbits	set	3897
   250   000000                     _TRISBbits	set	3987
   251   000000                     _SSP2STATbits	set	3949
   252   000000                     _SSP2ADD	set	3950
   253   000000                     _ANSELDbits	set	3899
   254   000000                     _PORTAbits	set	3968
   255   000000                     _PORTCbits	set	3970
   256   000000                     _LATCbits	set	3979
   257   000000                     _LATDbits	set	3980
   258   000000                     _ANSELAbits	set	3896
   259   000000                     _TRISAbits	set	3986
   260   000000                     _TRISCbits	set	3988
   261   000000                     _ANSELC	set	3898
   262   000000                     _TRISD	set	3989
   263   000000                     _TMR2IE	set	31977
   264   000000                     _TMR2IF	set	31985
   265   000000                     _RC1IF	set	31989
   266   000000                     _RC1IE	set	31981
   267   000000                     _TMR1ON	set	32360
   268   000000                     _TMR1IF	set	31984
   269   000000                     _GIE	set	32663
   270   000000                     _TX1IF	set	31988
   271   000000                     _GODONE	set	32273
   272   000000                     _TRISDbits	set	3989
   273   000000                     _TMR1IE	set	31976
   274   000000                     _SSP1IF	set	31987
   275   000000                     _SSP2IF	set	32039
   276   000000                     _LATAbits	set	3977
   277   000000                     _CCPTMRS0bits	set	3913
   278   000000                     _ANSELEbits	set	3900
   279   000000                     _SSP2CON2bits	set	3947
   280   000000                     _SSP2CON1bits	set	3948
   281   000000                     _SSP2BUF	set	3951
   282   000000                     _RCSTA1bits	set	4011
   283   000000                     _SPBRG1	set	4015
   284   000000                     _ADCON2bits	set	4032
   285   000000                     _SSP1CON1bits	set	4038
   286   000000                     _SSP1BUF	set	4041
   287   000000                     _SSP1STATbits	set	4039
   288   000000                     _ADCON0bits	set	4034
   289   000000                     _PR2	set	4027
   290   000000                     _TMR2ON	set	32210
   291   000000                     _T1CONbits	set	4045
   292   000000                     _TMR1	set	4046
   293   000000                     _PEIE	set	32662
   294   000000                     _CCP1CONbits	set	4029
   295   000000                     _CCPR1L	set	4030
   296   00FF1B                     STR_21:
   297   00FF1B  50                 	db	80	;'P'
   298   00FF1C  4F                 	db	79	;'O'
   299   00FF1D  54                 	db	84	;'T'
   300   00FF1E  31                 	db	49	;'1'
   301   00FF1F  3A                 	db	58	;':'
   302   00FF20  25                 	db	37
   303   00FF21  2E                 	db	46
   304   00FF22  31                 	db	49	;'1'
   305   00FF23  66                 	db	102	;'f'
   306   00FF24  50                 	db	80	;'P'
   307   00FF25  4F                 	db	79	;'O'
   308   00FF26  54                 	db	84	;'T'
   309   00FF27  32                 	db	50	;'2'
   310   00FF28  3A                 	db	58	;':'
   311   00FF29  25                 	db	37
   312   00FF2A  2E                 	db	46
   313   00FF2B  31                 	db	49	;'1'
   314   00FF2C  66                 	db	102	;'f'
   315   00FF2D  00                 	db	0
   316   00FF2E                     STR_22:
   317   00FF2E  44                 	db	68	;'D'
   318   00FF2F  6F                 	db	111	;'o'
   319   00FF30  73                 	db	115	;'s'
   320   00FF31  74                 	db	116	;'t'
   321   00FF32  61                 	db	97	;'a'
   322   00FF33  6C                 	db	108	;'l'
   323   00FF34  20                 	db	32
   324   00FF35  6A                 	db	106	;'j'
   325   00FF36  73                 	db	115	;'s'
   326   00FF37  65                 	db	101	;'e'
   327   00FF38  6D                 	db	109	;'m'
   328   00FF39  20                 	db	32
   329   00FF3A  25                 	db	37
   330   00FF3B  73                 	db	115	;'s'
   331   00FF3C  20                 	db	32
   332   00FF3D  0A                 	db	10
   333   00FF3E  00                 	db	0
   334   00FF3F                     STR_2:
   335   00FF3F  20                 	db	32
   336   00FF40  20                 	db	32
   337   00FF41  20                 	db	32
   338   00FF42  20                 	db	32
   339   00FF43  20                 	db	32
   340   00FF44  20                 	db	32
   341   00FF45  20                 	db	32
   342   00FF46  20                 	db	32
   343   00FF47  20                 	db	32
   344   00FF48  20                 	db	32
   345   00FF49  20                 	db	32
   346   00FF4A  20                 	db	32
   347   00FF4B  20                 	db	32
   348   00FF4C  20                 	db	32
   349   00FF4D  20                 	db	32
   350   00FF4E  20                 	db	32
   351   00FF4F  00                 	db	0
   352   00FF50                     STR_3:
   353   00FF50  42                 	db	66	;'B'
   354   00FF51  52                 	db	82	;'R'
   355   00FF52  3A                 	db	58	;':'
   356   00FF53  20                 	db	32
   357   00FF54  31                 	db	49	;'1'
   358   00FF55  39                 	db	57	;'9'
   359   00FF56  32                 	db	50	;'2'
   360   00FF57  30                 	db	48	;'0'
   361   00FF58  30                 	db	48	;'0'
   362   00FF59  20                 	db	32
   363   00FF5A  20                 	db	32
   364   00FF5B  20                 	db	32
   365   00FF5C  20                 	db	32
   366   00FF5D  20                 	db	32
   367   00FF5E  20                 	db	32
   368   00FF5F  20                 	db	32
   369   00FF60  00                 	db	0
   370   00FF61                     STR_1:
   371   00FF61  50                 	db	80	;'P'
   372   00FF62  6F                 	db	111	;'o'
   373   00FF63  7A                 	db	122	;'z'
   374   00FF64  6F                 	db	111	;'o'
   375   00FF65  72                 	db	114	;'r'
   376   00FF66  21                 	db	33
   377   00FF67  20                 	db	32
   378   00FF68  48                 	db	72	;'H'
   379   00FF69  61                 	db	97	;'a'
   380   00FF6A  64                 	db	100	;'d'
   381   00FF6B  21                 	db	33
   382   00FF6C  21                 	db	33
   383   00FF6D  21                 	db	33
   384   00FF6E  20                 	db	32
   385   00FF6F  20                 	db	32
   386   00FF70  20                 	db	32
   387   00FF71  00                 	db	0
   388   00FF72                     STR_5:
   389   00FF72  5A                 	db	90	;'Z'
   390   00FF73  6D                 	db	109	;'m'
   391   00FF74  61                 	db	97	;'a'
   392   00FF75  63                 	db	99	;'c'
   393   00FF76  6B                 	db	107	;'k'
   394   00FF77  6E                 	db	110	;'n'
   395   00FF78  65                 	db	101	;'e'
   396   00FF79  74                 	db	116	;'t'
   397   00FF7A  65                 	db	101	;'e'
   398   00FF7B  20                 	db	32
   399   00FF7C  42                 	db	66	;'B'
   400   00FF7D  54                 	db	84	;'T'
   401   00FF7E  4E                 	db	78	;'N'
   402   00FF7F  32                 	db	50	;'2'
   403   00FF80  20                 	db	32
   404   00FF81  20                 	db	32
   405   00FF82  00                 	db	0
   406   00FF83                     STR_8:
   407   00FF83  52                 	db	82	;'R'
   408   00FF84  42                 	db	66	;'B'
   409   00FF85  30                 	db	48	;'0'
   410   00FF86  2D                 	db	45
   411   00FF87  41                 	db	65	;'A'
   412   00FF88  32                 	db	50	;'2'
   413   00FF89  2C                 	db	44
   414   00FF8A  20                 	db	32
   415   00FF8B  42                 	db	66	;'B'
   416   00FF8C  52                 	db	82	;'R'
   417   00FF8D  3A                 	db	58	;':'
   418   00FF8E  31                 	db	49	;'1'
   419   00FF8F  39                 	db	57	;'9'
   420   00FF90  32                 	db	50	;'2'
   421   00FF91  30                 	db	48	;'0'
   422   00FF92  30                 	db	48	;'0'
   423   00FF93  00                 	db	0
   424   00FF94                     STR_7:
   425   00FF94  56                 	db	86	;'V'
   426   00FF95  6F                 	db	111	;'o'
   427   00FF96  6C                 	db	108	;'l'
   428   00FF97  74                 	db	116	;'t'
   429   00FF98  79                 	db	121	;'y'
   430   00FF99  20                 	db	32
   431   00FF9A  6E                 	db	110	;'n'
   432   00FF9B  61                 	db	97	;'a'
   433   00FF9C  20                 	db	32
   434   00FF9D  50                 	db	80	;'P'
   435   00FF9E  4F                 	db	79	;'O'
   436   00FF9F  54                 	db	84	;'T'
   437   00FFA0  65                 	db	101	;'e'
   438   00FFA1  63                 	db	99	;'c'
   439   00FFA2  68                 	db	104	;'h'
   440   00FFA3  3A                 	db	58	;':'
   441   00FFA4  00                 	db	0
   442   00FFA5                     STR_4:
   443   00FFA5  4B                 	db	75	;'K'
   444   00FFA6  6F                 	db	111	;'o'
   445   00FFA7  6E                 	db	110	;'n'
   446   00FFA8  65                 	db	101	;'e'
   447   00FFA9  63                 	db	99	;'c'
   448   00FFAA  20                 	db	32
   449   00FFAB  2D                 	db	45
   450   00FFAC  20                 	db	32
   451   00FFAD  6E                 	db	110	;'n'
   452   00FFAE  65                 	db	101	;'e'
   453   00FFAF  77                 	db	119	;'w'
   454   00FFB0  20                 	db	32
   455   00FFB1  6C                 	db	108	;'l'
   456   00FFB2  69                 	db	105	;'i'
   457   00FFB3  6E                 	db	110	;'n'
   458   00FFB4  65                 	db	101	;'e'
   459   00FFB5  00                 	db	0
   460   00FFB6                     STR_9:
   461   00FFB6  31                 	db	49	;'1'
   462   00FFB7  3A                 	db	58	;':'
   463   00FFB8  74                 	db	116	;'t'
   464   00FFB9  72                 	db	114	;'r'
   465   00FFBA  2C                 	db	44
   466   00FFBB  32                 	db	50	;'2'
   467   00FFBC  3A                 	db	58	;':'
   468   00FFBD  73                 	db	115	;'s'
   469   00FFBE  69                 	db	105	;'i'
   470   00FFBF  6E                 	db	110	;'n'
   471   00FFC0  2C                 	db	44
   472   00FFC1  33                 	db	51	;'3'
   473   00FFC2  3A                 	db	58	;':'
   474   00FFC3  70                 	db	112	;'p'
   475   00FFC4  69                 	db	105	;'i'
   476   00FFC5  6C                 	db	108	;'l'
   477   00FFC6  00                 	db	0
   478   00FFC7                     STR_17:
   479   00FFC7  4D                 	db	77	;'M'
   480   00FFC8  55                 	db	85	;'U'
   481   00FFC9  53                 	db	83	;'S'
   482   00FFCA  49                 	db	73	;'I'
   483   00FFCB  43                 	db	67	;'C'
   484   00FFCC  00                 	db	0
   485   00FFCD                     STR_19:
   486   00FFCD  3E                 	db	62	;'>'
   487   00FFCE  25                 	db	37
   488   00FFCF  2D                 	db	45
   489   00FFD0  2A                 	db	42
   490   00FFD1  73                 	db	115	;'s'
   491   00FFD2  00                 	db	0
   492   00FFD3                     STR_16:
   493   00FFD3  47                 	db	71	;'G'
   494   00FFD4  41                 	db	65	;'A'
   495   00FFD5  4D                 	db	77	;'M'
   496   00FFD6  45                 	db	69	;'E'
   497   00FFD7  00                 	db	0
   498   00FFD8                     STR_11:
   499   00FFD8  47                 	db	71	;'G'
   500   00FFD9  50                 	db	80	;'P'
   501   00FFDA  49                 	db	73	;'I'
   502   00FFDB  4F                 	db	79	;'O'
   503   00FFDC  00                 	db	0
   504   00FFDD                     STR_12:
   505   00FFDD  55                 	db	85	;'U'
   506   00FFDE  41                 	db	65	;'A'
   507   00FFDF  52                 	db	82	;'R'
   508   00FFE0  54                 	db	84	;'T'
   509   00FFE1  00                 	db	0
   510   00FFE2                     STR_10:
   511   00FFE2  25                 	db	37
   512   00FFE3  64                 	db	100	;'d'
   513   00FFE4  20                 	db	32
   514   00FFE5  0D                 	db	13
   515   00FFE6  00                 	db	0
   516   00FFE7                     STR_23:
   517   00FFE7  69                 	db	105	;'i'
   518   00FFE8  6E                 	db	110	;'n'
   519   00FFE9  66                 	db	102	;'f'
   520   00FFEA  00                 	db	0
   521   00FFEB                     STR_26:
   522   00FFEB  6E                 	db	110	;'n'
   523   00FFEC  61                 	db	97	;'a'
   524   00FFED  6E                 	db	110	;'n'
   525   00FFEE  00                 	db	0
   526   00FFEF                     STR_29:
   527   00FFEF  6C                 	db	108	;'l'
   528   00FFF0  6C                 	db	108	;'l'
   529   00FFF1  73                 	db	115	;'s'
   530   00FFF2  00                 	db	0
   531   00FFF3                     STR_15:
   532   00FFF3  44                 	db	68	;'D'
   533   00FFF4  41                 	db	65	;'A'
   534   00FFF5  43                 	db	67	;'C'
   535   00FFF6  00                 	db	0
   536   00FFF7                     STR_14:
   537   00FFF7  41                 	db	65	;'A'
   538   00FFF8  44                 	db	68	;'D'
   539   00FFF9  43                 	db	67	;'C'
   540   00FFFA  00                 	db	0
   541   00FFFB                     STR_13:
   542   00FFFB  50                 	db	80	;'P'
   543   00FFFC  57                 	db	87	;'W'
   544   00FFFD  4D                 	db	77	;'M'
   545   00FFFE  00                 	db	0
   546   00FFFF  00                 	db	0	; dummy byte at the end
   547   000000                     
   548                           ; #config settings
   549                           
   550                           	psect	cinit
   551   004832                     __pcinit:
   552                           	callstack 0
   553   004832                     start_initialization:
   554                           	callstack 0
   555   004832                     __initialization:
   556                           	callstack 0
   557                           
   558                           ; Initialize objects allocated to BANK1 (47 bytes)
   559                           ; load TBLPTR registers with __pidataBANK1
   560   004832  0E60               	movlw	low __pidataBANK1
   561   004834  6EF6               	movwf	tblptrl,c
   562   004836  0E4B               	movlw	high __pidataBANK1
   563   004838  6EF7               	movwf	tblptrh,c
   564   00483A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   565   00483C  6EF8               	movwf	tblptru,c
   566   00483E  EE01  F0A9         	lfsr	0,__pdataBANK1
   567   004842  EE10 F02F          	lfsr	1,47
   568   004846                     copy_data0:
   569   004846  0009               	tblrd		*+
   570   004848  CFF5 FFEE          	movff	tablat,postinc0
   571   00484C  50E5               	movf	postdec1,w,c
   572   00484E  50E1               	movf	fsr1l,w,c
   573   004850  E1FA               	bnz	copy_data0
   574                           
   575                           ; Clear objects allocated to BANK1 (112 bytes)
   576   004852  EE01  F000         	lfsr	0,__pbssBANK1
   577   004856  0E70               	movlw	112
   578   004858                     clear_0:
   579   004858  6AEE               	clrf	postinc0,c
   580   00485A  06E8               	decf	wreg,f,c
   581   00485C  E1FD               	bnz	clear_0
   582                           
   583                           ; Clear objects allocated to BANK0 (17 bytes)
   584   00485E  EE00  F0EF         	lfsr	0,__pbssBANK0
   585   004862  0E11               	movlw	17
   586   004864                     clear_1:
   587   004864  6AEE               	clrf	postinc0,c
   588   004866  06E8               	decf	wreg,f,c
   589   004868  E1FD               	bnz	clear_1
   590                           
   591                           ; Clear objects allocated to COMRAM (5 bytes)
   592   00486A  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   593   00486C  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   594   00486E  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   595   004870  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   596   004872  6A55               	clrf	__pbssCOMRAM& (0+255),c
   597   004874                     end_of_initialization:
   598                           	callstack 0
   599   004874                     __end_of__initialization:
   600                           	callstack 0
   601   004874  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   602   004876  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   603   004878  0E00               	movlw	low (__Lmediumconst shr (0+16))
   604   00487A  6EF8               	movwf	tblptru,c
   605   00487C  0100               	movlb	0
   606   00487E  EFB4  F014         	goto	_main	;jump to C main() function
   607                           
   608                           	psect	bssCOMRAM
   609   000055                     __pbssCOMRAM:
   610                           	callstack 0
   611   000055                     _width:
   612                           	callstack 0
   613   000055                     	ds	2
   614   000057                     _prec:
   615                           	callstack 0
   616   000057                     	ds	2
   617   000059                     _flags:
   618                           	callstack 0
   619   000059                     	ds	1
   620                           
   621                           	psect	bssBANK0
   622   0000EF                     __pbssBANK0:
   623                           	callstack 0
   624   0000EF                     ___rem_pio2f@F532:
   625                           	callstack 0
   626   0000EF                     	ds	4
   627   0000F3                     floorf@F526:
   628                           	callstack 0
   629   0000F3                     	ds	4
   630   0000F7                     ___fpclassifyf@F465:
   631                           	callstack 0
   632   0000F7                     	ds	4
   633   0000FB                     ISR@i:
   634                           	callstack 0
   635   0000FB                     	ds	2
   636   0000FD                     _UARTIE:
   637                           	callstack 0
   638   0000FD                     	ds	1
   639   0000FE                     _GPIOIE:
   640                           	callstack 0
   641   0000FE                     	ds	1
   642   0000FF                     _keepStateGPIO:
   643                           	callstack 0
   644   0000FF                     	ds	1
   645                           
   646                           	psect	bssBANK1
   647   000100                     __pbssBANK1:
   648                           	callstack 0
   649   000100                     	ds	17
   650   000111                     fabsf@F465:
   651                           	callstack 0
   652   000111                     	ds	4
   653   000115                     _dbuf:
   654                           	callstack 0
   655   000115                     	ds	80
   656   000165                     _gmail:
   657                           	callstack 0
   658   000165                     	ds	11
   659                           
   660                           	psect	dataBANK1
   661   0001A9                     __pdataBANK1:
   662                           	callstack 0
   663   0001A9                     moveDisplay@F6948:
   664                           	callstack 0
   665   0001A9                     	ds	16
   666   0001B9                     runGPIO@F6978:
   667                           	callstack 0
   668   0001B9                     	ds	12
   669   0001C5                     runGPIO@F6960:
   670                           	callstack 0
   671   0001C5                     	ds	12
   672   0001D1                     stoa@F1179:
   673                           	callstack 0
   674   0001D1                     	ds	7
   675                           
   676                           	psect	cstackBANK1
   677   000170                     __pcstackBANK1:
   678                           	callstack 0
   679   000170                     ??_moveDisplay:
   680   000170                     ??_runADC:
   681                           
   682                           ; 1 bytes @ 0x0
   683   000170                     	ds	2
   684   000172                     moveDisplay@menuItem1:
   685                           	callstack 0
   686   000172                     runADC@text:
   687                           	callstack 0
   688                           
   689                           ; 17 bytes @ 0x2
   690   000172                     	ds	17
   691   000183                     runADC@voltage1:
   692                           	callstack 0
   693   000183                     moveDisplay@menuItem2:
   694                           	callstack 0
   695                           
   696                           ; 17 bytes @ 0x13
   697   000183                     	ds	4
   698   000187                     runADC@voltage2:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x17
   702   000187                     	ds	4
   703   00018B                     runADC@pot1:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x1B
   707   00018B                     	ds	2
   708   00018D                     runADC@pot2:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x1D
   712   00018D                     	ds	2
   713   00018F                     runADC@keepState:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x1F
   717   00018F                     	ds	5
   718   000194                     moveDisplay@menuItems:
   719                           	callstack 0
   720                           
   721                           ; 16 bytes @ 0x24
   722   000194                     	ds	16
   723   0001A4                     moveDisplay@menuI:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0x34
   727   0001A4                     	ds	1
   728   0001A5                     ??_main:
   729                           
   730                           ; 1 bytes @ 0x35
   731   0001A5                     	ds	2
   732   0001A7                     main@setUpAgain:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x37
   736   0001A7                     	ds	1
   737   0001A8                     main@menuI:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x38
   741   0001A8                     	ds	1
   742                           
   743                           	psect	cstackBANK0
   744   000060                     __pcstackBANK0:
   745                           	callstack 0
   746   000060                     ___fladd@signs:
   747                           	callstack 0
   748   000060                     floorf@m:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x0
   752   000060                     	ds	1
   753   000061                     ___fladd@aexp:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x1
   757   000061                     	ds	1
   758   000062                     ___fladd@bexp:
   759                           	callstack 0
   760                           
   761                           ; 1 bytes @ 0x2
   762   000062                     	ds	1
   763   000063                     ___fladd@grs:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x3
   767   000063                     	ds	1
   768   000064                     ?___flsub:
   769                           	callstack 0
   770   000064                     ?___cosdf:
   771                           	callstack 0
   772   000064                     ?___fltol:
   773                           	callstack 0
   774   000064                     floorf@e:
   775                           	callstack 0
   776   000064                     ___fltol@f1:
   777                           	callstack 0
   778   000064                     ___flsub@b:
   779                           	callstack 0
   780   000064                     ___cosdf@x:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x4
   784   000064                     	ds	2
   785   000066                     floorf@u:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0x6
   789   000066                     	ds	2
   790   000068                     ??___fltol:
   791   000068                     ___flsub@a:
   792                           	callstack 0
   793   000068                     ___cosdf@r:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x8
   797   000068                     	ds	4
   798   00006C                     ___cosdf$4162:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0xC
   802   00006C                     	ds	4
   803   000070                     ___cosdf$4163:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x10
   807   000070                     	ds	4
   808   000074                     ___cosdf$4164:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x14
   812   000074                     	ds	4
   813   000078                     ___cosdf@w:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x18
   817   000078                     	ds	4
   818   00007C                     ___cosdf@z:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x1C
   822   00007C                     	ds	4
   823   000080                     ?___flneg:
   824                           	callstack 0
   825   000080                     ___flneg@f1:
   826                           	callstack 0
   827                           
   828                           ; 4 bytes @ 0x20
   829   000080                     	ds	4
   830   000084                     ?___rem_pio2f:
   831                           	callstack 0
   832   000084                     ?___sindf:
   833                           	callstack 0
   834   000084                     efgtoa@fp:
   835                           	callstack 0
   836   000084                     ___rem_pio2f@x:
   837                           	callstack 0
   838   000084                     ___sindf@x:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x24
   842   000084                     	ds	2
   843   000086                     efgtoa@f:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0x26
   847   000086                     	ds	2
   848   000088                     ___rem_pio2f@y:
   849                           	callstack 0
   850   000088                     ___sindf@r:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x28
   854   000088                     	ds	2
   855   00008A                     ??___rem_pio2f:
   856   00008A                     efgtoa@c:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x2A
   860   00008A                     	ds	1
   861   00008B                     ??_efgtoa:
   862                           
   863                           ; 1 bytes @ 0x2B
   864   00008B                     	ds	1
   865   00008C                     ___sindf@w:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0x2C
   869   00008C                     	ds	1
   870   00008D                     efgtoa@ne:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x2D
   874   00008D                     	ds	1
   875   00008E                     ___rem_pio2f@ty:
   876                           	callstack 0
   877                           
   878                           ; 4 bytes @ 0x2E
   879   00008E                     	ds	1
   880   00008F                     efgtoa@p:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x2F
   884   00008F                     	ds	1
   885   000090                     ___sindf$4166:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x30
   889   000090                     	ds	1
   890   000091                     efgtoa@t:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x31
   894   000091                     	ds	1
   895   000092                     ___rem_pio2f@ix:
   896                           	callstack 0
   897                           
   898                           ; 4 bytes @ 0x32
   899   000092                     	ds	1
   900   000093                     _efgtoa$3695:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x33
   904   000093                     	ds	1
   905   000094                     ___sindf$4167:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0x34
   909   000094                     	ds	1
   910   000095                     efgtoa@pp:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0x35
   914   000095                     	ds	1
   915   000096                     efgtoa@mode:
   916                           	callstack 0
   917   000096                     ___rem_pio2f@sign:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x36
   921   000096                     	ds	1
   922   000097                     efgtoa@nmode:
   923                           	callstack 0
   924                           
   925                           ; 1 bytes @ 0x37
   926   000097                     	ds	1
   927   000098                     efgtoa@d:
   928                           	callstack 0
   929   000098                     ___rem_pio2f@u:
   930                           	callstack 0
   931   000098                     ___sindf$4168:
   932                           	callstack 0
   933                           
   934                           ; 4 bytes @ 0x38
   935   000098                     	ds	2
   936   00009A                     efgtoa@m:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x3A
   940   00009A                     	ds	2
   941   00009C                     efgtoa@e:
   942                           	callstack 0
   943   00009C                     ___sindf@s:
   944                           	callstack 0
   945   00009C                     ___rem_pio2f$4165:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x3C
   949   00009C                     	ds	2
   950   00009E                     efgtoa@w:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x3E
   954   00009E                     	ds	2
   955   0000A0                     efgtoa@ou:
   956                           	callstack 0
   957   0000A0                     ___rem_pio2f@fn:
   958                           	callstack 0
   959   0000A0                     ___sindf@z:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x40
   963   0000A0                     	ds	4
   964   0000A4                     efgtoa@i:
   965                           	callstack 0
   966   0000A4                     ___rem_pio2f@t:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x44
   970   0000A4                     	ds	2
   971   0000A6                     efgtoa@h:
   972                           	callstack 0
   973                           
   974                           ; 4 bytes @ 0x46
   975   0000A6                     	ds	2
   976   0000A8                     ___rem_pio2f@n:
   977                           	callstack 0
   978                           
   979                           ; 4 bytes @ 0x48
   980   0000A8                     	ds	2
   981   0000AA                     efgtoa@l:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0x4A
   985   0000AA                     	ds	2
   986   0000AC                     ?_sinf:
   987                           	callstack 0
   988   0000AC                     sinf@x:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x4C
   992   0000AC                     	ds	2
   993   0000AE                     efgtoa@sign:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x4E
   997   0000AE                     	ds	1
   998   0000AF                     efgtoa@g:
   999                           	callstack 0
  1000                           
  1001                           ; 4 bytes @ 0x4F
  1002   0000AF                     	ds	1
  1003   0000B0                     ??_sinf:
  1004                           
  1005                           ; 1 bytes @ 0x50
  1006   0000B0                     	ds	3
  1007   0000B3                     efgtoa@n:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x53
  1011   0000B3                     	ds	1
  1012   0000B4                     sinf@n:
  1013                           	callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x54
  1016   0000B4                     	ds	1
  1017   0000B5                     efgtoa@u:
  1018                           	callstack 0
  1019                           
  1020                           ; 4 bytes @ 0x55
  1021   0000B5                     	ds	3
  1022   0000B8                     sinf@__xc8_float_word:
  1023                           	callstack 0
  1024                           
  1025                           ; 4 bytes @ 0x58
  1026   0000B8                     	ds	1
  1027   0000B9                     vfpfcnvrt@fp:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x59
  1031   0000B9                     	ds	2
  1032   0000BB                     vfpfcnvrt@fmt:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x5B
  1036   0000BB                     	ds	1
  1037   0000BC                     _sinf$3872:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x5C
  1041   0000BC                     	ds	1
  1042   0000BD                     vfpfcnvrt@ap:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x5D
  1046   0000BD                     	ds	2
  1047   0000BF                     ??_vfpfcnvrt:
  1048                           
  1049                           ; 1 bytes @ 0x5F
  1050   0000BF                     	ds	1
  1051   0000C0                     _sinf$3873:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x60
  1055   0000C0                     	ds	1
  1056   0000C1                     vfpfcnvrt@done:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x61
  1060   0000C1                     	ds	2
  1061   0000C3                     _vfpfcnvrt$3737:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x63
  1065   0000C3                     	ds	1
  1066   0000C4                     sinf@sign:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x64
  1070   0000C4                     	ds	1
  1071   0000C5                     vfpfcnvrt@convarg:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x65
  1075   0000C5                     	ds	1
  1076   0000C6                     _sinf$4161:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x66
  1080   0000C6                     	ds	3
  1081   0000C9                     vfpfcnvrt@c:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x69
  1085   0000C9                     	ds	1
  1086   0000CA                     vfpfcnvrt@cp:
  1087                           	callstack 0
  1088   0000CA                     sinf@y:
  1089                           	callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x6A
  1092   0000CA                     	ds	2
  1093   0000CC                     ?_vfprintf:
  1094                           	callstack 0
  1095   0000CC                     vfprintf@fp:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x6C
  1099   0000CC                     	ds	2
  1100   0000CE                     vfprintf@fmt:
  1101                           	callstack 0
  1102   0000CE                     sinf@ix:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x6E
  1106   0000CE                     	ds	2
  1107   0000D0                     vfprintf@ap:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x70
  1111   0000D0                     	ds	2
  1112   0000D2                     vfprintf@cfmt:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x72
  1116   0000D2                     	ds	2
  1117   0000D4                     ?_printf:
  1118                           	callstack 0
  1119   0000D4                     ?_sprintf:
  1120                           	callstack 0
  1121   0000D4                     sprintf@s:
  1122                           	callstack 0
  1123   0000D4                     printf@fmt:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x74
  1127   0000D4                     	ds	2
  1128   0000D6                     sprintf@fmt:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x76
  1132   0000D6                     	ds	2
  1133   0000D8                     printf@ap:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x78
  1137   0000D8                     	ds	2
  1138   0000DA                     ??_runUART:
  1139   0000DA                     ??_runDAC:
  1140                           
  1141                           ; 1 bytes @ 0x7A
  1142   0000DA                     	ds	2
  1143   0000DC                     _runDAC$4158:
  1144                           	callstack 0
  1145                           
  1146                           ; 4 bytes @ 0x7C
  1147   0000DC                     	ds	4
  1148   0000E0                     sprintf@ap:
  1149                           	callstack 0
  1150   0000E0                     _runDAC$4159:
  1151                           	callstack 0
  1152                           
  1153                           ; 4 bytes @ 0x80
  1154   0000E0                     	ds	2
  1155   0000E2                     sprintf@f:
  1156                           	callstack 0
  1157                           
  1158                           ; 12 bytes @ 0x82
  1159   0000E2                     	ds	2
  1160   0000E4                     runDAC@keepState:
  1161                           	callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x84
  1164   0000E4                     	ds	1
  1165   0000E5                     runDAC@selectModeDAC:
  1166                           	callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x85
  1169   0000E5                     	ds	1
  1170   0000E6                     runDAC@DACindex:
  1171                           	callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x86
  1174   0000E6                     	ds	8
  1175   0000EE                     moveDisplay@where:
  1176                           	callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x8E
  1179   0000EE                     	ds	1
  1180                           
  1181                           	psect	cstackCOMRAM
  1182   000001                     __pcstackCOMRAM:
  1183                           	callstack 0
  1184   000001                     ??_ISR:
  1185                           
  1186                           ; 1 bytes @ 0x0
  1187   000001                     	ds	4
  1188   000005                     ISR@temp:
  1189                           	callstack 0
  1190                           
  1191                           ; 1 bytes @ 0x4
  1192   000005                     	ds	1
  1193   000006                     ?___fpclassifyf:
  1194                           	callstack 0
  1195   000006                     ?_strlen:
  1196                           	callstack 0
  1197   000006                     ?_strncmp:
  1198                           	callstack 0
  1199   000006                     ?___wmul:
  1200                           	callstack 0
  1201   000006                     ?___awdiv:
  1202                           	callstack 0
  1203   000006                     ?___awmod:
  1204                           	callstack 0
  1205   000006                     ?_labs:
  1206                           	callstack 0
  1207   000006                     ?_fabsf:
  1208                           	callstack 0
  1209   000006                     ?___xxtofl:
  1210                           	callstack 0
  1211   000006                     LCD_Send@data:
  1212                           	callstack 0
  1213   000006                     SPI_write@MSB:
  1214                           	callstack 0
  1215   000006                     putch@data:
  1216                           	callstack 0
  1217   000006                     LED1_Control@state:
  1218                           	callstack 0
  1219   000006                     LED2_Control@state:
  1220                           	callstack 0
  1221   000006                     LED3_Control@state:
  1222                           	callstack 0
  1223   000006                     LED4_Control@state:
  1224                           	callstack 0
  1225   000006                     LED5_Control@state:
  1226                           	callstack 0
  1227   000006                     LED6_Control@state:
  1228                           	callstack 0
  1229   000006                     ___wmul@multiplier:
  1230                           	callstack 0
  1231   000006                     ___awdiv@dividend:
  1232                           	callstack 0
  1233   000006                     ___awmod@dividend:
  1234                           	callstack 0
  1235   000006                     memcpy@d1:
  1236                           	callstack 0
  1237   000006                     strcpy@dest:
  1238                           	callstack 0
  1239   000006                     strlen@s:
  1240                           	callstack 0
  1241   000006                     strncmp@_l:
  1242                           	callstack 0
  1243   000006                     ___fleq@ff1:
  1244                           	callstack 0
  1245   000006                     ___xxtofl@val:
  1246                           	callstack 0
  1247   000006                     ___fpclassifyf@x:
  1248                           	callstack 0
  1249   000006                     labs@a:
  1250                           	callstack 0
  1251   000006                     fabsf@x:
  1252                           	callstack 0
  1253                           
  1254                           ; 4 bytes @ 0x5
  1255   000006                     	ds	1
  1256   000007                     ??_LCD_Init:
  1257   000007                     ??_runGPIO:
  1258   000007                     SPI_write@LSB:
  1259                           	callstack 0
  1260   000007                     LCD_ShowString@textData:
  1261                           	callstack 0
  1262   000007                     fputc@c:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x6
  1266   000007                     	ds	1
  1267   000008                     SPI_write@data:
  1268                           	callstack 0
  1269   000008                     ___wmul@multiplicand:
  1270                           	callstack 0
  1271   000008                     ___awdiv@divisor:
  1272                           	callstack 0
  1273   000008                     ___awmod@divisor:
  1274                           	callstack 0
  1275   000008                     memcpy@s1:
  1276                           	callstack 0
  1277   000008                     strcpy@src:
  1278                           	callstack 0
  1279   000008                     strlen@a:
  1280                           	callstack 0
  1281   000008                     strncmp@_r:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x7
  1285   000008                     	ds	1
  1286   000009                     ??_LCD_ShowString:
  1287   000009                     fputc@fp:
  1288                           	callstack 0
  1289   000009                     runGPIO@states:
  1290                           	callstack 0
  1291                           
  1292                           ; 12 bytes @ 0x8
  1293   000009                     	ds	1
  1294   00000A                     ??___fpclassifyf:
  1295   00000A                     ??_labs:
  1296   00000A                     ??___xxtofl:
  1297   00000A                     ___awdiv@counter:
  1298                           	callstack 0
  1299   00000A                     ___awmod@counter:
  1300                           	callstack 0
  1301   00000A                     ___wmul@product:
  1302                           	callstack 0
  1303   00000A                     memcpy@n:
  1304                           	callstack 0
  1305   00000A                     strcpy@s:
  1306                           	callstack 0
  1307   00000A                     strncmp@n:
  1308                           	callstack 0
  1309   00000A                     ___fleq@ff2:
  1310                           	callstack 0
  1311   00000A                     fabsf@u:
  1312                           	callstack 0
  1313                           
  1314                           ; 4 bytes @ 0x9
  1315   00000A                     	ds	1
  1316   00000B                     ??_fputc:
  1317   00000B                     LCD_ShowString@lineNum:
  1318                           	callstack 0
  1319   00000B                     ___awdiv@sign:
  1320                           	callstack 0
  1321   00000B                     ___awmod@sign:
  1322                           	callstack 0
  1323                           
  1324                           ; 1 bytes @ 0xA
  1325   00000B                     	ds	1
  1326   00000C                     ??_strncmp:
  1327   00000C                     ?_abs:
  1328                           	callstack 0
  1329   00000C                     ?_read_prec_or_width:
  1330                           	callstack 0
  1331   00000C                     LCD_ShowString@i:
  1332                           	callstack 0
  1333   00000C                     memcpy@tmp:
  1334                           	callstack 0
  1335   00000C                     ___awdiv@quotient:
  1336                           	callstack 0
  1337   00000C                     read_prec_or_width@fmt:
  1338                           	callstack 0
  1339   00000C                     abs@a:
  1340                           	callstack 0
  1341   00000C                     strcpy@d:
  1342                           	callstack 0
  1343                           
  1344                           ; 2 bytes @ 0xB
  1345   00000C                     	ds	1
  1346   00000D                     memcpy@d:
  1347                           	callstack 0
  1348   00000D                     strncmp@l:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0xC
  1352   00000D                     	ds	1
  1353   00000E                     ??_runPWM:
  1354   00000E                     ??_abs:
  1355   00000E                     ??___fleq:
  1356   00000E                     ___xxtofl@sign:
  1357                           	callstack 0
  1358   00000E                     read_prec_or_width@ap:
  1359                           	callstack 0
  1360   00000E                     ___fpclassifyf@e:
  1361                           	callstack 0
  1362                           
  1363                           ; 2 bytes @ 0xD
  1364   00000E                     	ds	1
  1365   00000F                     ___xxtofl@exp:
  1366                           	callstack 0
  1367   00000F                     memcpy@s:
  1368                           	callstack 0
  1369   00000F                     strncmp@r:
  1370                           	callstack 0
  1371                           
  1372                           ; 2 bytes @ 0xE
  1373   00000F                     	ds	1
  1374   000010                     ??_read_prec_or_width:
  1375   000010                     runPWM@keepState:
  1376                           	callstack 0
  1377   000010                     stoa@fp:
  1378                           	callstack 0
  1379   000010                     fputs@s:
  1380                           	callstack 0
  1381   000010                     ___xxtofl@arg:
  1382                           	callstack 0
  1383   000010                     ___fpclassifyf@u:
  1384                           	callstack 0
  1385                           
  1386                           ; 4 bytes @ 0xF
  1387   000010                     	ds	1
  1388   000011                     runPWM@multiplier:
  1389                           	callstack 0
  1390                           
  1391                           ; 1 bytes @ 0x10
  1392   000011                     	ds	1
  1393   000012                     read_prec_or_width@c:
  1394                           	callstack 0
  1395   000012                     stoa@s:
  1396                           	callstack 0
  1397   000012                     fputs@fp:
  1398                           	callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x11
  1401   000012                     	ds	1
  1402   000013                     read_prec_or_width@n:
  1403                           	callstack 0
  1404                           
  1405                           ; 2 bytes @ 0x12
  1406   000013                     	ds	1
  1407   000014                     ??_stoa:
  1408   000014                     ?___flmul:
  1409                           	callstack 0
  1410   000014                     fputs@c:
  1411                           	callstack 0
  1412   000014                     ___flmul@b:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x13
  1416   000014                     	ds	1
  1417   000015                     fputs@i:
  1418                           	callstack 0
  1419   000015                     stoa@nuls:
  1420                           	callstack 0
  1421   000015                     runGPIO@LEDControl:
  1422                           	callstack 0
  1423                           
  1424                           ; 12 bytes @ 0x14
  1425   000015                     	ds	2
  1426   000017                     pad@fp:
  1427                           	callstack 0
  1428                           
  1429                           ; 2 bytes @ 0x16
  1430   000017                     	ds	1
  1431   000018                     ___flmul@a:
  1432                           	callstack 0
  1433                           
  1434                           ; 4 bytes @ 0x17
  1435   000018                     	ds	1
  1436   000019                     pad@buf:
  1437                           	callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x18
  1440   000019                     	ds	2
  1441   00001B                     pad@p:
  1442                           	callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x1A
  1445   00001B                     	ds	1
  1446   00001C                     ??___flmul:
  1447   00001C                     stoa@i:
  1448                           	callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x1B
  1451   00001C                     	ds	1
  1452   00001D                     ??_pad:
  1453                           
  1454                           ; 1 bytes @ 0x1C
  1455   00001D                     	ds	1
  1456   00001E                     pad@i:
  1457                           	callstack 0
  1458   00001E                     stoa@w:
  1459                           	callstack 0
  1460                           
  1461                           ; 2 bytes @ 0x1D
  1462   00001E                     	ds	2
  1463   000020                     ___flmul@sign:
  1464                           	callstack 0
  1465   000020                     pad@w:
  1466                           	callstack 0
  1467   000020                     stoa@cp:
  1468                           	callstack 0
  1469                           
  1470                           ; 2 bytes @ 0x1F
  1471   000020                     	ds	1
  1472   000021                     runGPIO@GPIOreverse:
  1473                           	callstack 0
  1474   000021                     ___flmul@aexp:
  1475                           	callstack 0
  1476                           
  1477                           ; 1 bytes @ 0x20
  1478   000021                     	ds	1
  1479   000022                     runGPIO@numberOfStates:
  1480                           	callstack 0
  1481   000022                     dtoa@fp:
  1482                           	callstack 0
  1483   000022                     stoa@p:
  1484                           	callstack 0
  1485   000022                     ___flmul@grs:
  1486                           	callstack 0
  1487                           
  1488                           ; 4 bytes @ 0x21
  1489   000022                     	ds	2
  1490   000024                     runGPIO@GPIOi:
  1491                           	callstack 0
  1492   000024                     dtoa@d:
  1493                           	callstack 0
  1494   000024                     stoa@l:
  1495                           	callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x23
  1498   000024                     	ds	1
  1499   000025                     runGPIO@j:
  1500                           	callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x24
  1503   000025                     	ds	1
  1504   000026                     ___flmul@bexp:
  1505                           	callstack 0
  1506   000026                     _dtoa$3664:
  1507                           	callstack 0
  1508                           
  1509                           ; 2 bytes @ 0x25
  1510   000026                     	ds	1
  1511   000027                     ___flmul@prod:
  1512                           	callstack 0
  1513                           
  1514                           ; 4 bytes @ 0x26
  1515   000027                     	ds	1
  1516   000028                     dtoa@p:
  1517                           	callstack 0
  1518                           
  1519                           ; 2 bytes @ 0x27
  1520   000028                     	ds	2
  1521   00002A                     dtoa@w:
  1522                           	callstack 0
  1523                           
  1524                           ; 2 bytes @ 0x29
  1525   00002A                     	ds	1
  1526   00002B                     ___flmul@temp:
  1527                           	callstack 0
  1528                           
  1529                           ; 2 bytes @ 0x2A
  1530   00002B                     	ds	1
  1531   00002C                     dtoa@s:
  1532                           	callstack 0
  1533                           
  1534                           ; 1 bytes @ 0x2B
  1535   00002C                     	ds	1
  1536   00002D                     ?___fldiv:
  1537                           	callstack 0
  1538   00002D                     dtoa@i:
  1539                           	callstack 0
  1540   00002D                     ___flge@ff1:
  1541                           	callstack 0
  1542   00002D                     ___fldiv@b:
  1543                           	callstack 0
  1544                           
  1545                           ; 4 bytes @ 0x2C
  1546   00002D                     	ds	4
  1547   000031                     ___flge@ff2:
  1548                           	callstack 0
  1549   000031                     ___fldiv@a:
  1550                           	callstack 0
  1551                           
  1552                           ; 4 bytes @ 0x30
  1553   000031                     	ds	4
  1554   000035                     ??___fldiv:
  1555   000035                     ??___flge:
  1556                           
  1557                           ; 1 bytes @ 0x34
  1558   000035                     	ds	4
  1559   000039                     ___fldiv@rem:
  1560                           	callstack 0
  1561                           
  1562                           ; 4 bytes @ 0x38
  1563   000039                     	ds	4
  1564   00003D                     ___fldiv@sign:
  1565                           	callstack 0
  1566                           
  1567                           ; 1 bytes @ 0x3C
  1568   00003D                     	ds	1
  1569   00003E                     ___fldiv@new_exp:
  1570                           	callstack 0
  1571                           
  1572                           ; 2 bytes @ 0x3D
  1573   00003E                     	ds	2
  1574   000040                     ___fldiv@grs:
  1575                           	callstack 0
  1576                           
  1577                           ; 4 bytes @ 0x3F
  1578   000040                     	ds	4
  1579   000044                     ___fldiv@bexp:
  1580                           	callstack 0
  1581                           
  1582                           ; 1 bytes @ 0x43
  1583   000044                     	ds	1
  1584   000045                     ___fldiv@aexp:
  1585                           	callstack 0
  1586                           
  1587                           ; 1 bytes @ 0x44
  1588   000045                     	ds	1
  1589   000046                     ?___fladd:
  1590                           	callstack 0
  1591   000046                     ?_floorf:
  1592                           	callstack 0
  1593   000046                     ___fladd@b:
  1594                           	callstack 0
  1595   000046                     floorf@x:
  1596                           	callstack 0
  1597                           
  1598                           ; 4 bytes @ 0x45
  1599   000046                     	ds	4
  1600   00004A                     ??_floorf:
  1601   00004A                     ___fladd@a:
  1602                           	callstack 0
  1603                           
  1604                           ; 4 bytes @ 0x49
  1605   00004A                     	ds	4
  1606   00004E                     ??___fladd:
  1607                           
  1608                           ; 1 bytes @ 0x4D
  1609   00004E                     	ds	4
  1610   000052                     ___fltol@sign1:
  1611                           	callstack 0
  1612                           
  1613                           ; 1 bytes @ 0x51
  1614   000052                     	ds	1
  1615   000053                     ___fltol@exp1:
  1616                           	callstack 0
  1617                           
  1618                           ; 1 bytes @ 0x52
  1619   000053                     	ds	1
  1620   000054                     runUART@keepState:
  1621                           	callstack 0
  1622                           
  1623                           ; 1 bytes @ 0x53
  1624   000054                     	ds	1
  1625                           
  1626 ;;
  1627 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1628 ;;
  1629 ;; *************** function _main *****************
  1630 ;; Defined at:
  1631 ;;		line 10 in file "main.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  menuI           1   56[BANK1 ] unsigned char 
  1636 ;;  setUpAgain      1   55[BANK1 ] unsigned char 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;Total ram usage:        4 bytes
  1651 ;; Hardware stack levels required when called: 10
  1652 ;; This function calls:
  1653 ;;		_LCD_Init
  1654 ;;		_LCD_ShowString
  1655 ;;		_moveDisplay
  1656 ;;		_runADC
  1657 ;;		_runDAC
  1658 ;;		_runGPIO
  1659 ;;		_runPWM
  1660 ;;		_runUART
  1661 ;; This function is called by:
  1662 ;;		Startup code after reset
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text0
  1667   002968                     __ptext0:
  1668                           	callstack 0
  1669   002968                     _main:
  1670                           	callstack 21
  1671   002968                     
  1672                           ;main.c: 11:     _delay((unsigned long)((100)*(32E6/4000.0)));
  1673   002968  0E05               	movlw	5
  1674   00296A  0101               	movlb	1	; () banked
  1675   00296C  6FA6               	movwf	(??_main+1)& (0+255),b
  1676   00296E  0E0F               	movlw	15
  1677   002970  6FA5               	movwf	??_main& (0+255),b
  1678   002972  0EF1               	movlw	241
  1679   002974                     u9547:
  1680   002974  2EE8               	decfsz	wreg,f,c
  1681   002976  D7FE               	bra	u9547
  1682   002978  2FA5               	decfsz	??_main& (0+255),f,b
  1683   00297A  D7FC               	bra	u9547
  1684   00297C  2FA6               	decfsz	(??_main+1)& (0+255),f,b
  1685   00297E  D7FA               	bra	u9547
  1686   002980                     
  1687                           ;main.c: 13:     TRISCbits.RC0 = 1;
  1688   002980  8094               	bsf	148,0,c	;volatile
  1689   002982                     
  1690                           ;main.c: 14:     TRISAbits.RA4 = 1;
  1691   002982  8892               	bsf	146,4,c	;volatile
  1692   002984                     
  1693                           ;main.c: 15:     TRISAbits.RA3 = 1;
  1694   002984  8692               	bsf	146,3,c	;volatile
  1695   002986                     
  1696                           ;main.c: 16:     TRISAbits.RA2 = 1;
  1697   002986  8492               	bsf	146,2,c	;volatile
  1698   002988                     
  1699                           ;main.c: 17:     ANSELAbits.ANSA3 = 0;
  1700   002988  010F               	movlb	15	; () banked
  1701   00298A  9738               	bcf	56,3,b	;volatile
  1702   00298C                     
  1703                           ; BSR set to: 15
  1704                           ;main.c: 18:     ANSELAbits.ANSA2 = 0;
  1705   00298C  9538               	bcf	56,2,b	;volatile
  1706   00298E                     
  1707                           ; BSR set to: 15
  1708                           ;main.c: 21:     TRISDbits.RD2 = 0;
  1709   00298E  9495               	bcf	149,2,c	;volatile
  1710   002990                     
  1711                           ; BSR set to: 15
  1712                           ;main.c: 22:     TRISDbits.RD3 = 0;
  1713   002990  9695               	bcf	149,3,c	;volatile
  1714   002992                     
  1715                           ; BSR set to: 15
  1716                           ;main.c: 23:     TRISCbits.RC4 = 0;
  1717   002992  9894               	bcf	148,4,c	;volatile
  1718   002994                     
  1719                           ; BSR set to: 15
  1720                           ;main.c: 24:     TRISDbits.RD4 = 0;
  1721   002994  9895               	bcf	149,4,c	;volatile
  1722   002996                     
  1723                           ; BSR set to: 15
  1724                           ;main.c: 25:     TRISDbits.RD5 = 0;
  1725   002996  9A95               	bcf	149,5,c	;volatile
  1726   002998                     
  1727                           ; BSR set to: 15
  1728                           ;main.c: 26:     TRISDbits.RD6 = 0;
  1729   002998  9C95               	bcf	149,6,c	;volatile
  1730   00299A                     
  1731                           ; BSR set to: 15
  1732                           ;main.c: 27:     LATDbits.LD2 = 1;
  1733   00299A  848C               	bsf	140,2,c	;volatile
  1734   00299C                     
  1735                           ; BSR set to: 15
  1736                           ;main.c: 28:     LATDbits.LD3 = 1;
  1737   00299C  868C               	bsf	140,3,c	;volatile
  1738   00299E                     
  1739                           ; BSR set to: 15
  1740                           ;main.c: 29:     LATCbits.LC4 = 1;
  1741   00299E  888B               	bsf	139,4,c	;volatile
  1742   0029A0                     
  1743                           ; BSR set to: 15
  1744                           ;main.c: 30:     LATDbits.LD4 = 1;
  1745   0029A0  888C               	bsf	140,4,c	;volatile
  1746   0029A2                     
  1747                           ; BSR set to: 15
  1748                           ;main.c: 31:     LATDbits.LD5 = 1;
  1749   0029A2  8A8C               	bsf	140,5,c	;volatile
  1750   0029A4                     
  1751                           ; BSR set to: 15
  1752                           ;main.c: 32:     LATDbits.LD6 = 1;
  1753   0029A4  8C8C               	bsf	140,6,c	;volatile
  1754   0029A6                     
  1755                           ; BSR set to: 15
  1756                           ;main.c: 35:     LCD_Init();
  1757   0029A6  EC69  F020         	call	_LCD_Init	;wreg free
  1758   0029AA                     
  1759                           ;main.c: 36:     uint8_t menuI = 0;
  1760   0029AA  0E00               	movlw	0
  1761   0029AC  0101               	movlb	1	; () banked
  1762   0029AE  6FA8               	movwf	main@menuI& (0+255),b
  1763   0029B0                     
  1764                           ; BSR set to: 1
  1765                           ;main.c: 37:     uint8_t setUpAgain = 0;
  1766   0029B0  0E00               	movlw	0
  1767   0029B2  6FA7               	movwf	main@setUpAgain& (0+255),b
  1768   0029B4                     
  1769                           ; BSR set to: 1
  1770                           ;main.c: 44:     menuI = moveDisplay(menuI,0);
  1771   0029B4  0E00               	movlw	0
  1772   0029B6  0100               	movlb	0	; () banked
  1773   0029B8  6FEE               	movwf	moveDisplay@where& (0+255),b
  1774   0029BA  0101               	movlb	1	; () banked
  1775   0029BC  51A8               	movf	main@menuI& (0+255),w,b
  1776   0029BE  ECE4  F01D         	call	_moveDisplay
  1777   0029C2  0101               	movlb	1	; () banked
  1778   0029C4  6FA8               	movwf	main@menuI& (0+255),b
  1779   0029C6                     l8113:
  1780                           
  1781                           ; BSR set to: 1
  1782                           ;main.c: 47:         if(PORTCbits.RC0){
  1783   0029C6  A082               	btfss	130,0,c	;volatile
  1784   0029C8  EFE8  F014         	goto	u9441
  1785   0029CC  EFEA  F014         	goto	u9440
  1786   0029D0                     u9441:
  1787   0029D0  EF0D  F015         	goto	l8123
  1788   0029D4                     u9440:
  1789   0029D4                     
  1790                           ; BSR set to: 1
  1791                           ;main.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1792   0029D4  0E03               	movlw	3
  1793   0029D6  0101               	movlb	1	; () banked
  1794   0029D8  6FA6               	movwf	(??_main+1)& (0+255),b
  1795   0029DA  0E08               	movlw	8
  1796   0029DC  6FA5               	movwf	??_main& (0+255),b
  1797   0029DE  0E77               	movlw	119
  1798   0029E0                     u9557:
  1799   0029E0  2EE8               	decfsz	wreg,f,c
  1800   0029E2  D7FE               	bra	u9557
  1801   0029E4  2FA5               	decfsz	??_main& (0+255),f,b
  1802   0029E6  D7FC               	bra	u9557
  1803   0029E8  2FA6               	decfsz	(??_main+1)& (0+255),f,b
  1804   0029EA  D7FA               	bra	u9557
  1805   0029EC                     
  1806                           ;main.c: 49:             if(PORTCbits.RC0){
  1807   0029EC  A082               	btfss	130,0,c	;volatile
  1808   0029EE  EFFB  F014         	goto	u9451
  1809   0029F2  EFFD  F014         	goto	u9450
  1810   0029F6                     u9451:
  1811   0029F6  EF0D  F015         	goto	l8123
  1812   0029FA                     u9450:
  1813   0029FA                     l50:
  1814   0029FA  B082               	btfsc	130,0,c	;volatile
  1815   0029FC  EF02  F015         	goto	u9461
  1816   002A00  EF04  F015         	goto	u9460
  1817   002A04                     u9461:
  1818   002A04  EFFD  F014         	goto	l50
  1819   002A08                     u9460:
  1820   002A08                     
  1821                           ;main.c: 51:                 menuI = moveDisplay(menuI,2);
  1822   002A08  0E02               	movlw	2
  1823   002A0A  0100               	movlb	0	; () banked
  1824   002A0C  6FEE               	movwf	moveDisplay@where& (0+255),b
  1825   002A0E  0101               	movlb	1	; () banked
  1826   002A10  51A8               	movf	main@menuI& (0+255),w,b
  1827   002A12  ECE4  F01D         	call	_moveDisplay
  1828   002A16  0101               	movlb	1	; () banked
  1829   002A18  6FA8               	movwf	main@menuI& (0+255),b
  1830   002A1A                     l8123:
  1831                           
  1832                           ;main.c: 54:         if(PORTAbits.RA4){
  1833   002A1A  A880               	btfss	128,4,c	;volatile
  1834   002A1C  EF12  F015         	goto	u9471
  1835   002A20  EF14  F015         	goto	u9470
  1836   002A24                     u9471:
  1837   002A24  EF37  F015         	goto	l8133
  1838   002A28                     u9470:
  1839   002A28                     
  1840                           ;main.c: 55:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1841   002A28  0E03               	movlw	3
  1842   002A2A  0101               	movlb	1	; () banked
  1843   002A2C  6FA6               	movwf	(??_main+1)& (0+255),b
  1844   002A2E  0E08               	movlw	8
  1845   002A30  6FA5               	movwf	??_main& (0+255),b
  1846   002A32  0E77               	movlw	119
  1847   002A34                     u9567:
  1848   002A34  2EE8               	decfsz	wreg,f,c
  1849   002A36  D7FE               	bra	u9567
  1850   002A38  2FA5               	decfsz	??_main& (0+255),f,b
  1851   002A3A  D7FC               	bra	u9567
  1852   002A3C  2FA6               	decfsz	(??_main+1)& (0+255),f,b
  1853   002A3E  D7FA               	bra	u9567
  1854   002A40                     
  1855                           ;main.c: 56:             if(PORTAbits.RA4){
  1856   002A40  A880               	btfss	128,4,c	;volatile
  1857   002A42  EF25  F015         	goto	u9481
  1858   002A46  EF27  F015         	goto	u9480
  1859   002A4A                     u9481:
  1860   002A4A  EF37  F015         	goto	l8133
  1861   002A4E                     u9480:
  1862   002A4E                     l55:
  1863   002A4E  B880               	btfsc	128,4,c	;volatile
  1864   002A50  EF2C  F015         	goto	u9491
  1865   002A54  EF2E  F015         	goto	u9490
  1866   002A58                     u9491:
  1867   002A58  EF27  F015         	goto	l55
  1868   002A5C                     u9490:
  1869   002A5C                     
  1870                           ;main.c: 58:                 menuI = moveDisplay(menuI,1);
  1871   002A5C  0E01               	movlw	1
  1872   002A5E  0100               	movlb	0	; () banked
  1873   002A60  6FEE               	movwf	moveDisplay@where& (0+255),b
  1874   002A62  0101               	movlb	1	; () banked
  1875   002A64  51A8               	movf	main@menuI& (0+255),w,b
  1876   002A66  ECE4  F01D         	call	_moveDisplay
  1877   002A6A  0101               	movlb	1	; () banked
  1878   002A6C  6FA8               	movwf	main@menuI& (0+255),b
  1879   002A6E                     l8133:
  1880                           
  1881                           ;main.c: 61:         if(PORTAbits.RA3){
  1882   002A6E  A680               	btfss	128,3,c	;volatile
  1883   002A70  EF3C  F015         	goto	u9501
  1884   002A74  EF3E  F015         	goto	u9500
  1885   002A78                     u9501:
  1886   002A78  EFDA  F015         	goto	l58
  1887   002A7C                     u9500:
  1888   002A7C                     
  1889                           ;main.c: 62:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1890   002A7C  0E03               	movlw	3
  1891   002A7E  0101               	movlb	1	; () banked
  1892   002A80  6FA6               	movwf	(??_main+1)& (0+255),b
  1893   002A82  0E08               	movlw	8
  1894   002A84  6FA5               	movwf	??_main& (0+255),b
  1895   002A86  0E77               	movlw	119
  1896   002A88                     u9577:
  1897   002A88  2EE8               	decfsz	wreg,f,c
  1898   002A8A  D7FE               	bra	u9577
  1899   002A8C  2FA5               	decfsz	??_main& (0+255),f,b
  1900   002A8E  D7FC               	bra	u9577
  1901   002A90  2FA6               	decfsz	(??_main+1)& (0+255),f,b
  1902   002A92  D7FA               	bra	u9577
  1903   002A94                     
  1904                           ;main.c: 63:             if(PORTAbits.RA3){
  1905   002A94  A680               	btfss	128,3,c	;volatile
  1906   002A96  EF4F  F015         	goto	u9511
  1907   002A9A  EF51  F015         	goto	u9510
  1908   002A9E                     u9511:
  1909   002A9E  EFDA  F015         	goto	l58
  1910   002AA2                     u9510:
  1911   002AA2                     l60:
  1912   002AA2  B680               	btfsc	128,3,c	;volatile
  1913   002AA4  EF56  F015         	goto	u9521
  1914   002AA8  EF58  F015         	goto	u9520
  1915   002AAC                     u9521:
  1916   002AAC  EF51  F015         	goto	l60
  1917   002AB0                     u9520:
  1918   002AB0  EFB0  F015         	goto	l8173
  1919   002AB4                     l8141:
  1920                           
  1921                           ; BSR set to: 1
  1922                           ;main.c: 67:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  1923   002AB4  0E61               	movlw	low STR_1
  1924   002AB6  6E07               	movwf	LCD_ShowString@textData^0,c
  1925   002AB8  0EFF               	movlw	high STR_1
  1926   002ABA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1927   002ABC  0E01               	movlw	1
  1928   002ABE  EC62  F022         	call	_LCD_ShowString
  1929                           
  1930                           ;main.c: 68:                         LCD_ShowString((char)2, "                ");
  1931   002AC2  0E3F               	movlw	low STR_2
  1932   002AC4  6E07               	movwf	LCD_ShowString@textData^0,c
  1933   002AC6  0EFF               	movlw	high STR_2
  1934   002AC8  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1935   002ACA  0E02               	movlw	2
  1936   002ACC  EC62  F022         	call	_LCD_ShowString
  1937   002AD0                     
  1938                           ;main.c: 69:                         runGPIO();
  1939   002AD0  EC86  F01C         	call	_runGPIO	;wreg free
  1940   002AD4                     l8145:
  1941                           
  1942                           ;main.c: 70:                         setUpAgain = 1;
  1943   002AD4  0E01               	movlw	1
  1944   002AD6  0101               	movlb	1	; () banked
  1945   002AD8  6FA7               	movwf	main@setUpAgain& (0+255),b
  1946                           
  1947                           ;main.c: 71:                         break;
  1948   002ADA  EFDA  F015         	goto	l58
  1949   002ADE                     l8147:
  1950                           
  1951                           ; BSR set to: 1
  1952                           ;main.c: 73:                         LCD_ShowString((char)1, "BR: 19200       ");
  1953   002ADE  0E50               	movlw	low STR_3
  1954   002AE0  6E07               	movwf	LCD_ShowString@textData^0,c
  1955   002AE2  0EFF               	movlw	high STR_3
  1956   002AE4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1957   002AE6  0E01               	movlw	1
  1958   002AE8  EC62  F022         	call	_LCD_ShowString
  1959                           
  1960                           ;main.c: 74:                         LCD_ShowString((char)2, "Konec - new line");
  1961   002AEC  0EA5               	movlw	low STR_4
  1962   002AEE  6E07               	movwf	LCD_ShowString@textData^0,c
  1963   002AF0  0EFF               	movlw	high STR_4
  1964   002AF2  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1965   002AF4  0E02               	movlw	2
  1966   002AF6  EC62  F022         	call	_LCD_ShowString
  1967   002AFA                     
  1968                           ;main.c: 75:                         runUART();
  1969   002AFA  EC9E  F021         	call	_runUART	;wreg free
  1970   002AFE  EF6A  F015         	goto	l8145
  1971   002B02                     l8153:
  1972                           
  1973                           ; BSR set to: 1
  1974                           ;main.c: 79:                         LCD_ShowString((char)1, "Zmacknete BTN2  ");
  1975   002B02  0E72               	movlw	low STR_5
  1976   002B04  6E07               	movwf	LCD_ShowString@textData^0,c
  1977   002B06  0EFF               	movlw	high STR_5
  1978   002B08  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1979   002B0A  0E01               	movlw	1
  1980   002B0C  EC62  F022         	call	_LCD_ShowString
  1981                           
  1982                           ;main.c: 80:                         LCD_ShowString((char)2, "                ");
  1983   002B10  0E3F               	movlw	low STR_2
  1984   002B12  6E07               	movwf	LCD_ShowString@textData^0,c
  1985   002B14  0EFF               	movlw	high STR_2
  1986   002B16  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1987   002B18  0E02               	movlw	2
  1988   002B1A  EC62  F022         	call	_LCD_ShowString
  1989   002B1E                     
  1990                           ;main.c: 81:                         runPWM();
  1991   002B1E  EC41  F01D         	call	_runPWM	;wreg free
  1992   002B22  EF6A  F015         	goto	l8145
  1993   002B26                     l8159:
  1994                           
  1995                           ; BSR set to: 1
  1996                           ;main.c: 85:                         LCD_ShowString((char)1, "Volty na POTech:");
  1997   002B26  0E94               	movlw	low STR_7
  1998   002B28  6E07               	movwf	LCD_ShowString@textData^0,c
  1999   002B2A  0EFF               	movlw	high STR_7
  2000   002B2C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2001   002B2E  0E01               	movlw	1
  2002   002B30  EC62  F022         	call	_LCD_ShowString
  2003   002B34                     
  2004                           ;main.c: 86:                         runADC();
  2005   002B34  EC17  F018         	call	_runADC	;wreg free
  2006   002B38  EF6A  F015         	goto	l8145
  2007   002B3C                     l8165:
  2008                           
  2009                           ; BSR set to: 1
  2010                           ;main.c: 90:                         LCD_ShowString((char)1, "RB0-A2, BR:19200");
  2011   002B3C  0E83               	movlw	low STR_8
  2012   002B3E  6E07               	movwf	LCD_ShowString@textData^0,c
  2013   002B40  0EFF               	movlw	high STR_8
  2014   002B42  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2015   002B44  0E01               	movlw	1
  2016   002B46  EC62  F022         	call	_LCD_ShowString
  2017                           
  2018                           ;main.c: 91:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  2019   002B4A  0EB6               	movlw	low STR_9
  2020   002B4C  6E07               	movwf	LCD_ShowString@textData^0,c
  2021   002B4E  0EFF               	movlw	high STR_9
  2022   002B50  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2023   002B52  0E02               	movlw	2
  2024   002B54  EC62  F022         	call	_LCD_ShowString
  2025   002B58                     
  2026                           ;main.c: 92:                         runDAC();
  2027   002B58  EC36  F013         	call	_runDAC	;wreg free
  2028   002B5C  EF6A  F015         	goto	l8145
  2029   002B60                     l8173:
  2030   002B60  0101               	movlb	1	; () banked
  2031   002B62  51A8               	movf	main@menuI& (0+255),w,b
  2032   002B64  6FA5               	movwf	??_main& (0+255),b
  2033   002B66  6BA6               	clrf	(??_main+1)& (0+255),b
  2034                           
  2035                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2036                           ; Switch size 1, requested type "simple"
  2037                           ; Number of cases is 1, Range of values is 0 to 0
  2038                           ; switch strategies available:
  2039                           ; Name         Instructions Cycles
  2040                           ; simple_byte            4     3 (average)
  2041                           ;	Chosen strategy is simple_byte
  2042   002B68  51A6               	movf	(??_main+1)& (0+255),w,b
  2043   002B6A  0A00               	xorlw	0	; case 0
  2044   002B6C  B4D8               	btfsc	status,2,c
  2045   002B6E  EFBB  F015         	goto	l8447
  2046   002B72  EFDA  F015         	goto	l58
  2047   002B76                     l8447:
  2048                           
  2049                           ; BSR set to: 1
  2050                           ; Switch size 1, requested type "simple"
  2051                           ; Number of cases is 7, Range of values is 0 to 6
  2052                           ; switch strategies available:
  2053                           ; Name         Instructions Cycles
  2054                           ; simple_byte           22    12 (average)
  2055                           ;	Chosen strategy is simple_byte
  2056   002B76  51A5               	movf	??_main& (0+255),w,b
  2057   002B78  0A00               	xorlw	0	; case 0
  2058   002B7A  B4D8               	btfsc	status,2,c
  2059   002B7C  EF5A  F015         	goto	l8141
  2060   002B80  0A01               	xorlw	1	; case 1
  2061   002B82  B4D8               	btfsc	status,2,c
  2062   002B84  EF6F  F015         	goto	l8147
  2063   002B88  0A03               	xorlw	3	; case 2
  2064   002B8A  B4D8               	btfsc	status,2,c
  2065   002B8C  EF81  F015         	goto	l8153
  2066   002B90  0A01               	xorlw	1	; case 3
  2067   002B92  B4D8               	btfsc	status,2,c
  2068   002B94  EF93  F015         	goto	l8159
  2069   002B98  0A07               	xorlw	7	; case 4
  2070   002B9A  B4D8               	btfsc	status,2,c
  2071   002B9C  EF9E  F015         	goto	l8165
  2072   002BA0  0A01               	xorlw	1	; case 5
  2073   002BA2  B4D8               	btfsc	status,2,c
  2074   002BA4  EFDA  F015         	goto	l58
  2075   002BA8  0A03               	xorlw	3	; case 6
  2076   002BAA  B4D8               	btfsc	status,2,c
  2077   002BAC  EFDA  F015         	goto	l58
  2078   002BB0  EFDA  F015         	goto	l58
  2079   002BB4                     l58:
  2080                           
  2081                           ;main.c: 103:         if(PORTAbits.RA2){
  2082   002BB4  5080               	movf	128,w,c	;volatile
  2083   002BB6                     
  2084                           ;main.c: 107:         if(setUpAgain){
  2085   002BB6  0101               	movlb	1	; () banked
  2086   002BB8  51A7               	movf	main@setUpAgain& (0+255),w,b
  2087   002BBA  B4D8               	btfsc	status,2,c
  2088   002BBC  EFE2  F015         	goto	u9531
  2089   002BC0  EFE4  F015         	goto	u9530
  2090   002BC4                     u9531:
  2091   002BC4  EFE3  F014         	goto	l8113
  2092   002BC8                     u9530:
  2093   002BC8                     
  2094                           ; BSR set to: 1
  2095                           ;main.c: 108:         menuI = moveDisplay(menuI,0);
  2096   002BC8  0E00               	movlw	0
  2097   002BCA  0100               	movlb	0	; () banked
  2098   002BCC  6FEE               	movwf	moveDisplay@where& (0+255),b
  2099   002BCE  0101               	movlb	1	; () banked
  2100   002BD0  51A8               	movf	main@menuI& (0+255),w,b
  2101   002BD2  ECE4  F01D         	call	_moveDisplay
  2102   002BD6  0101               	movlb	1	; () banked
  2103   002BD8  6FA8               	movwf	main@menuI& (0+255),b
  2104   002BDA                     
  2105                           ; BSR set to: 1
  2106                           ;main.c: 109:         setUpAgain = 0;
  2107   002BDA  0E00               	movlw	0
  2108   002BDC  6FA7               	movwf	main@setUpAgain& (0+255),b
  2109   002BDE  EFE3  F014         	goto	l8113
  2110   002BE2  EF86  F000         	goto	start
  2111   002BE6                     __end_of_main:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function _runUART *****************
  2115 ;; Defined at:
  2116 ;;		line 11 in file "UART.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  keepState       1   83[COMRAM] unsigned char 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;Total ram usage:        3 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; Hardware stack levels required when called: 9
  2137 ;; This function calls:
  2138 ;;		_printf
  2139 ;; This function is called by:
  2140 ;;		_main
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           	psect	text1
  2145   00433C                     __ptext1:
  2146                           	callstack 0
  2147   00433C                     _runUART:
  2148                           	callstack 21
  2149   00433C                     
  2150                           ;UART.c: 13:     TRISAbits.RA2 = 1;
  2151   00433C  8492               	bsf	146,2,c	;volatile
  2152   00433E                     
  2153                           ;UART.c: 15:     ANSELC = 0x00;
  2154   00433E  0E00               	movlw	0
  2155   004340  010F               	movlb	15	; () banked
  2156   004342  6F3A               	movwf	58,b	;volatile
  2157                           
  2158                           ;UART.c: 16:     TRISD = 0x00;
  2159   004344  0E00               	movlw	0
  2160   004346  6E95               	movwf	149,c	;volatile
  2161   004348                     
  2162                           ; BSR set to: 15
  2163                           ;UART.c: 17:     TRISCbits.TRISC6 = 1;
  2164   004348  8C94               	bsf	148,6,c	;volatile
  2165   00434A                     
  2166                           ; BSR set to: 15
  2167                           ;UART.c: 18:     TRISCbits.TRISC7 = 1;
  2168   00434A  8E94               	bsf	148,7,c	;volatile
  2169                           
  2170                           ;UART.c: 21:     SPBRG1 = 25;
  2171   00434C  0E19               	movlw	25
  2172   00434E  6EAF               	movwf	175,c	;volatile
  2173   004350                     
  2174                           ; BSR set to: 15
  2175                           ;UART.c: 23:     TXSTA1bits.SYNC = 0;
  2176   004350  98AC               	bcf	172,4,c	;volatile
  2177   004352                     
  2178                           ; BSR set to: 15
  2179                           ;UART.c: 24:     RCSTA1bits.SPEN = 1;
  2180   004352  8EAB               	bsf	171,7,c	;volatile
  2181   004354                     
  2182                           ; BSR set to: 15
  2183                           ;UART.c: 25:     TXSTA1bits.TXEN = 1;
  2184   004354  8AAC               	bsf	172,5,c	;volatile
  2185   004356                     
  2186                           ; BSR set to: 15
  2187                           ;UART.c: 26:     RCSTA1bits.CREN = 1;
  2188   004356  88AB               	bsf	171,4,c	;volatile
  2189   004358                     
  2190                           ; BSR set to: 15
  2191                           ;UART.c: 28:     RC1IE = 1;
  2192   004358  8A9D               	bsf	3997,5,c	;volatile
  2193   00435A                     
  2194                           ; BSR set to: 15
  2195                           ;UART.c: 29:     PEIE = 1;
  2196   00435A  8CF2               	bsf	4082,6,c	;volatile
  2197   00435C                     
  2198                           ; BSR set to: 15
  2199                           ;UART.c: 30:     GIE = 1;
  2200   00435C  8EF2               	bsf	4082,7,c	;volatile
  2201                           
  2202                           ;UART.c: 32:     uint8_t keepState = 1;
  2203   00435E  0E01               	movlw	1
  2204   004360  6E54               	movwf	runUART@keepState^0,c
  2205                           
  2206                           ;UART.c: 34:     while(keepState){
  2207   004362  EFEE  F021         	goto	l536
  2208   004366                     l7879:
  2209                           
  2210                           ;UART.c: 35:         if(gmail.full){
  2211   004366  0101               	movlb	1	; () banked
  2212   004368  516F               	movf	(_gmail+10)& (0+255),w,b	;volatile
  2213   00436A  B4D8               	btfsc	status,2,c
  2214   00436C  EFBA  F021         	goto	u9141
  2215   004370  EFBC  F021         	goto	u9140
  2216   004374                     u9141:
  2217   004374  EFCB  F021         	goto	l7887
  2218   004378                     u9140:
  2219   004378                     
  2220                           ; BSR set to: 1
  2221                           ;UART.c: 36:             LATDbits.LD2 ^= 1;
  2222   004378  748C               	btg	140,2,c	;volatile
  2223   00437A                     
  2224                           ; BSR set to: 1
  2225                           ;UART.c: 37:             printf("Dostal jsem %s \n",gmail.data);
  2226   00437A  0E2E               	movlw	low STR_22
  2227   00437C  0100               	movlb	0	; () banked
  2228   00437E  6FD4               	movwf	printf@fmt& (0+255),b
  2229   004380  0EFF               	movlw	high STR_22
  2230   004382  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  2231   004384  0E65               	movlw	low _gmail
  2232   004386  6FD6               	movwf	(?_printf+2)& (0+255),b
  2233   004388  0E01               	movlw	high _gmail
  2234   00438A  6FD7               	movwf	(?_printf+3)& (0+255),b
  2235   00438C  ECC8  F025         	call	_printf	;wreg free
  2236   004390                     
  2237                           ;UART.c: 38:             gmail.full = 0;
  2238   004390  0E00               	movlw	0
  2239   004392  0101               	movlb	1	; () banked
  2240   004394  6F6F               	movwf	(_gmail+10)& (0+255),b	;volatile
  2241   004396                     l7887:
  2242                           
  2243                           ; BSR set to: 1
  2244                           ;UART.c: 41:         if(PORTAbits.RA2){
  2245   004396  A480               	btfss	128,2,c	;volatile
  2246   004398  EFD0  F021         	goto	u9151
  2247   00439C  EFD2  F021         	goto	u9150
  2248   0043A0                     u9151:
  2249   0043A0  EFEE  F021         	goto	l536
  2250   0043A4                     u9150:
  2251   0043A4                     
  2252                           ; BSR set to: 1
  2253                           ;UART.c: 42:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2254   0043A4  0E03               	movlw	3
  2255   0043A6  0100               	movlb	0	; () banked
  2256   0043A8  6FDB               	movwf	(??_runUART+1)& (0+255),b
  2257   0043AA  0E08               	movlw	8
  2258   0043AC  6FDA               	movwf	??_runUART& (0+255),b
  2259   0043AE  0E77               	movlw	119
  2260   0043B0                     u9587:
  2261   0043B0  2EE8               	decfsz	wreg,f,c
  2262   0043B2  D7FE               	bra	u9587
  2263   0043B4  2FDA               	decfsz	??_runUART& (0+255),f,b
  2264   0043B6  D7FC               	bra	u9587
  2265   0043B8  2FDB               	decfsz	(??_runUART+1)& (0+255),f,b
  2266   0043BA  D7FA               	bra	u9587
  2267   0043BC                     
  2268                           ;UART.c: 43:             if(PORTAbits.RA2){
  2269   0043BC  A480               	btfss	128,2,c	;volatile
  2270   0043BE  EFE3  F021         	goto	u9161
  2271   0043C2  EFE5  F021         	goto	u9160
  2272   0043C6                     u9161:
  2273   0043C6  EFEE  F021         	goto	l536
  2274   0043CA                     u9160:
  2275   0043CA                     l541:
  2276   0043CA  B480               	btfsc	128,2,c	;volatile
  2277   0043CC  EFEA  F021         	goto	u9171
  2278   0043D0  EFEC  F021         	goto	u9170
  2279   0043D4                     u9171:
  2280   0043D4  EFE5  F021         	goto	l541
  2281   0043D8                     u9170:
  2282   0043D8                     
  2283                           ;UART.c: 45:                 keepState = 0;
  2284   0043D8  0E00               	movlw	0
  2285   0043DA  6E54               	movwf	runUART@keepState^0,c
  2286   0043DC                     l536:
  2287                           
  2288                           ;UART.c: 34:     while(keepState){
  2289   0043DC  5054               	movf	runUART@keepState^0,w,c
  2290   0043DE  A4D8               	btfss	status,2,c
  2291   0043E0  EFF4  F021         	goto	u9181
  2292   0043E4  EFF6  F021         	goto	u9180
  2293   0043E8                     u9181:
  2294   0043E8  EFB3  F021         	goto	l7879
  2295   0043EC                     u9180:
  2296   0043EC                     
  2297                           ;UART.c: 52:     RCSTA1bits.SPEN = 0;
  2298   0043EC  9EAB               	bcf	171,7,c	;volatile
  2299                           
  2300                           ;UART.c: 53:     TXSTA1bits.TXEN = 0;
  2301   0043EE  9AAC               	bcf	172,5,c	;volatile
  2302                           
  2303                           ;UART.c: 54:     RCSTA1bits.CREN = 0;
  2304   0043F0  98AB               	bcf	171,4,c	;volatile
  2305   0043F2                     
  2306                           ;UART.c: 55:     UARTIE = 0;
  2307   0043F2  0E00               	movlw	0
  2308   0043F4  0100               	movlb	0	; () banked
  2309   0043F6  6FFD               	movwf	_UARTIE& (0+255),b
  2310   0043F8                     
  2311                           ; BSR set to: 0
  2312                           ;UART.c: 56:     RC1IE = 0;
  2313   0043F8  9A9D               	bcf	3997,5,c	;volatile
  2314   0043FA                     
  2315                           ; BSR set to: 0
  2316                           ;UART.c: 57:     PEIE = 0;
  2317   0043FA  9CF2               	bcf	4082,6,c	;volatile
  2318   0043FC                     
  2319                           ; BSR set to: 0
  2320                           ;UART.c: 58:     GIE = 0;
  2321   0043FC  9EF2               	bcf	4082,7,c	;volatile
  2322   0043FE                     
  2323                           ; BSR set to: 0
  2324   0043FE  0012               	return		;funcret
  2325   004400                     __end_of_runUART:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _runPWM *****************
  2329 ;; Defined at:
  2330 ;;		line 11 in file "PWM.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  multiplier      1   16[COMRAM] unsigned char 
  2335 ;;  keepState       1   15[COMRAM] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;Total ram usage:        4 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 2
  2352 ;; This function calls:
  2353 ;;		___awdiv
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text2
  2360   003A82                     __ptext2:
  2361                           	callstack 0
  2362   003A82                     _runPWM:
  2363                           	callstack 28
  2364   003A82                     
  2365                           ;PWM.c: 13:     TRISCbits.RC2 = 1;
  2366   003A82  8494               	bsf	148,2,c	;volatile
  2367   003A84                     
  2368                           ;PWM.c: 14:     CCPTMRS0bits.C1TSEL = 0b00;
  2369   003A84  0EFC               	movlw	-4
  2370   003A86  010F               	movlb	15	; () banked
  2371   003A88  1749               	andwf	73,f,b	;volatile
  2372                           
  2373                           ;PWM.c: 15:     PR2 = 199;
  2374   003A8A  0EC7               	movlw	199
  2375   003A8C  6EBB               	movwf	187,c	;volatile
  2376                           
  2377                           ;PWM.c: 16:     CCP1CONbits.CCP1M |= 0b1100;
  2378   003A8E  0E0C               	movlw	12
  2379   003A90  12BD               	iorwf	189,f,c	;volatile
  2380                           
  2381                           ;PWM.c: 17:     CCP1CONbits.P1M = 0b10;
  2382   003A92  50BD               	movf	189,w,c	;volatile
  2383   003A94  0B3F               	andlw	-193
  2384   003A96  0980               	iorlw	128
  2385   003A98  6EBD               	movwf	189,c	;volatile
  2386                           
  2387                           ;PWM.c: 18:     CCPR1L = 0;
  2388   003A9A  0E00               	movlw	0
  2389   003A9C  6EBE               	movwf	190,c	;volatile
  2390   003A9E                     
  2391                           ; BSR set to: 15
  2392                           ;PWM.c: 19:     TMR2IF = 0;
  2393   003A9E  929E               	bcf	3998,1,c	;volatile
  2394   003AA0                     
  2395                           ; BSR set to: 15
  2396                           ;PWM.c: 20:     TMR2ON = 1;
  2397   003AA0  84BA               	bsf	4026,2,c	;volatile
  2398   003AA2                     l478:
  2399   003AA2  A29E               	btfss	3998,1,c	;volatile
  2400   003AA4  EF56  F01D         	goto	u9191
  2401   003AA8  EF58  F01D         	goto	u9190
  2402   003AAC                     u9191:
  2403   003AAC  EF51  F01D         	goto	l478
  2404   003AB0                     u9190:
  2405   003AB0                     
  2406                           ;PWM.c: 22:     TRISCbits.RC2 = 1;
  2407   003AB0  8494               	bsf	148,2,c	;volatile
  2408                           
  2409                           ;PWM.c: 25:     TRISAbits.RA4 = 1;
  2410   003AB2  8892               	bsf	146,4,c	;volatile
  2411                           
  2412                           ;PWM.c: 26:     TRISAbits.RA2 = 1;
  2413   003AB4  8492               	bsf	146,2,c	;volatile
  2414                           
  2415                           ;PWM.c: 28:     TRISDbits.RD2 = 0;
  2416   003AB6  9495               	bcf	149,2,c	;volatile
  2417                           
  2418                           ;PWM.c: 29:     TRISDbits.RD3 = 0;
  2419   003AB8  9695               	bcf	149,3,c	;volatile
  2420                           
  2421                           ;PWM.c: 30:     TRISCbits.RC4 = 0;
  2422   003ABA  9894               	bcf	148,4,c	;volatile
  2423                           
  2424                           ;PWM.c: 31:     TRISDbits.RD4 = 0;
  2425   003ABC  9895               	bcf	149,4,c	;volatile
  2426                           
  2427                           ;PWM.c: 32:     TRISDbits.RD5 = 0;
  2428   003ABE  9A95               	bcf	149,5,c	;volatile
  2429                           
  2430                           ;PWM.c: 33:     TRISDbits.RD6 = 0;
  2431   003AC0  9C95               	bcf	149,6,c	;volatile
  2432                           
  2433                           ;PWM.c: 34:     LATDbits.LD2 = 1;
  2434   003AC2  848C               	bsf	140,2,c	;volatile
  2435                           
  2436                           ;PWM.c: 35:     LATDbits.LD3 = 1;
  2437   003AC4  868C               	bsf	140,3,c	;volatile
  2438                           
  2439                           ;PWM.c: 36:     LATCbits.LC4 = 1;
  2440   003AC6  888B               	bsf	139,4,c	;volatile
  2441                           
  2442                           ;PWM.c: 37:     LATDbits.LD4 = 1;
  2443   003AC8  888C               	bsf	140,4,c	;volatile
  2444                           
  2445                           ;PWM.c: 38:     LATDbits.LD5 = 1;
  2446   003ACA  8A8C               	bsf	140,5,c	;volatile
  2447                           
  2448                           ;PWM.c: 39:     LATDbits.LD6 = 1;
  2449   003ACC  8C8C               	bsf	140,6,c	;volatile
  2450   003ACE                     
  2451                           ;PWM.c: 41:     uint8_t keepState;;PWM.c: 42:     keepState = 1;
  2452   003ACE  0E01               	movlw	1
  2453   003AD0  6E10               	movwf	runPWM@keepState^0,c
  2454                           
  2455                           ;PWM.c: 44:     uint8_t multiplier;;PWM.c: 45:     multiplier = 0;
  2456   003AD2  0E00               	movlw	0
  2457   003AD4  6E11               	movwf	runPWM@multiplier^0,c
  2458                           
  2459                           ;PWM.c: 47:     while(keepState){
  2460   003AD6  EFD7  F01D         	goto	l481
  2461   003ADA                     l7917:
  2462                           
  2463                           ;PWM.c: 49:         CCPR1L = multiplier*199/5;
  2464   003ADA  5011               	movf	runPWM@multiplier^0,w,c
  2465   003ADC  0DC7               	mullw	199
  2466   003ADE  CFF3 F006          	movff	prodl,___awdiv@dividend
  2467   003AE2  CFF4 F007          	movff	prodh,___awdiv@dividend+1
  2468   003AE6  0E00               	movlw	0
  2469   003AE8  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2470   003AEA  0E05               	movlw	5
  2471   003AEC  6E08               	movwf	___awdiv@divisor^0,c
  2472   003AEE  EC00  F022         	call	___awdiv	;wreg free
  2473   003AF2  5006               	movf	?___awdiv^0,w,c
  2474   003AF4  6EBE               	movwf	190,c	;volatile
  2475   003AF6                     
  2476                           ;PWM.c: 51:         if(PORTAbits.RA4){
  2477   003AF6  A880               	btfss	128,4,c	;volatile
  2478   003AF8  EF80  F01D         	goto	u9201
  2479   003AFC  EF82  F01D         	goto	u9200
  2480   003B00                     u9201:
  2481   003B00  EFB4  F01D         	goto	l7935
  2482   003B04                     u9200:
  2483   003B04                     
  2484                           ;PWM.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2485   003B04  0E03               	movlw	3
  2486   003B06  6E0F               	movwf	(??_runPWM+1)^0,c
  2487   003B08  0E08               	movlw	8
  2488   003B0A  6E0E               	movwf	??_runPWM^0,c
  2489   003B0C  0E77               	movlw	119
  2490   003B0E                     u9597:
  2491   003B0E  2EE8               	decfsz	wreg,f,c
  2492   003B10  D7FE               	bra	u9597
  2493   003B12  2E0E               	decfsz	??_runPWM^0,f,c
  2494   003B14  D7FC               	bra	u9597
  2495   003B16  2E0F               	decfsz	(??_runPWM+1)^0,f,c
  2496   003B18  D7FA               	bra	u9597
  2497   003B1A  F000               	nop	
  2498   003B1C                     
  2499                           ;PWM.c: 53:             if(PORTAbits.RA4){
  2500   003B1C  A880               	btfss	128,4,c	;volatile
  2501   003B1E  EF93  F01D         	goto	u9211
  2502   003B22  EF95  F01D         	goto	u9210
  2503   003B26                     u9211:
  2504   003B26  EFB4  F01D         	goto	l7935
  2505   003B2A                     u9210:
  2506   003B2A                     l485:
  2507   003B2A  B880               	btfsc	128,4,c	;volatile
  2508   003B2C  EF9A  F01D         	goto	u9221
  2509   003B30  EF9C  F01D         	goto	u9220
  2510   003B34                     u9221:
  2511   003B34  EF95  F01D         	goto	l485
  2512   003B38                     u9220:
  2513   003B38                     
  2514                           ;PWM.c: 55:                 if(multiplier == 5 ){
  2515   003B38  0E05               	movlw	5
  2516   003B3A  1811               	xorwf	runPWM@multiplier^0,w,c
  2517   003B3C  A4D8               	btfss	status,2,c
  2518   003B3E  EFA3  F01D         	goto	u9231
  2519   003B42  EFA5  F01D         	goto	u9230
  2520   003B46                     u9231:
  2521   003B46  EFA9  F01D         	goto	l7931
  2522   003B4A                     u9230:
  2523   003B4A                     
  2524                           ;PWM.c: 56:                     multiplier = 0;
  2525   003B4A  0E00               	movlw	0
  2526   003B4C  6E11               	movwf	runPWM@multiplier^0,c
  2527                           
  2528                           ;PWM.c: 57:                 } else if(multiplier <5){
  2529   003B4E  EFB4  F01D         	goto	l7935
  2530   003B52                     l7931:
  2531   003B52  0E05               	movlw	5
  2532   003B54  6011               	cpfslt	runPWM@multiplier^0,c
  2533   003B56  EFAF  F01D         	goto	u9241
  2534   003B5A  EFB1  F01D         	goto	u9240
  2535   003B5E                     u9241:
  2536   003B5E  EFB4  F01D         	goto	l484
  2537   003B62                     u9240:
  2538   003B62                     
  2539                           ;PWM.c: 58:                     multiplier++;
  2540   003B62  2A11               	incf	runPWM@multiplier^0,f,c
  2541   003B64  EFB4  F01D         	goto	l7935
  2542   003B68                     l484:
  2543   003B68                     l7935:
  2544                           
  2545                           ;PWM.c: 63:         if(PORTAbits.RA2){
  2546   003B68  A480               	btfss	128,2,c	;volatile
  2547   003B6A  EFB9  F01D         	goto	u9251
  2548   003B6E  EFBB  F01D         	goto	u9250
  2549   003B72                     u9251:
  2550   003B72  EFD7  F01D         	goto	l481
  2551   003B76                     u9250:
  2552   003B76                     
  2553                           ;PWM.c: 64:         _delay((unsigned long)((50)*(32E6/4000.0)));
  2554   003B76  0E03               	movlw	3
  2555   003B78  6E0F               	movwf	(??_runPWM+1)^0,c
  2556   003B7A  0E08               	movlw	8
  2557   003B7C  6E0E               	movwf	??_runPWM^0,c
  2558   003B7E  0E77               	movlw	119
  2559   003B80                     u9607:
  2560   003B80  2EE8               	decfsz	wreg,f,c
  2561   003B82  D7FE               	bra	u9607
  2562   003B84  2E0E               	decfsz	??_runPWM^0,f,c
  2563   003B86  D7FC               	bra	u9607
  2564   003B88  2E0F               	decfsz	(??_runPWM+1)^0,f,c
  2565   003B8A  D7FA               	bra	u9607
  2566   003B8C  F000               	nop	
  2567   003B8E                     
  2568                           ;PWM.c: 65:         if(PORTAbits.RA2){
  2569   003B8E  A480               	btfss	128,2,c	;volatile
  2570   003B90  EFCC  F01D         	goto	u9261
  2571   003B94  EFCE  F01D         	goto	u9260
  2572   003B98                     u9261:
  2573   003B98  EFD7  F01D         	goto	l481
  2574   003B9C                     u9260:
  2575   003B9C                     l493:
  2576   003B9C  B480               	btfsc	128,2,c	;volatile
  2577   003B9E  EFD3  F01D         	goto	u9271
  2578   003BA2  EFD5  F01D         	goto	u9270
  2579   003BA6                     u9271:
  2580   003BA6  EFCE  F01D         	goto	l493
  2581   003BAA                     u9270:
  2582   003BAA                     
  2583                           ;PWM.c: 67:             keepState = 0;
  2584   003BAA  0E00               	movlw	0
  2585   003BAC  6E10               	movwf	runPWM@keepState^0,c
  2586   003BAE                     l481:
  2587                           
  2588                           ;PWM.c: 47:     while(keepState){
  2589   003BAE  5010               	movf	runPWM@keepState^0,w,c
  2590   003BB0  A4D8               	btfss	status,2,c
  2591   003BB2  EFDD  F01D         	goto	u9281
  2592   003BB6  EFDF  F01D         	goto	u9280
  2593   003BBA                     u9281:
  2594   003BBA  EF6D  F01D         	goto	l7917
  2595   003BBE                     u9280:
  2596   003BBE                     
  2597                           ;PWM.c: 74:     CCP1CONbits.CCP1M = 0b0000;
  2598   003BBE  0EF0               	movlw	-16
  2599   003BC0  16BD               	andwf	189,f,c	;volatile
  2600   003BC2                     
  2601                           ;PWM.c: 75:     TMR2ON = 0;
  2602   003BC2  94BA               	bcf	4026,2,c	;volatile
  2603   003BC4                     
  2604                           ;PWM.c: 76:     TMR2IE = 0;
  2605   003BC4  929D               	bcf	3997,1,c	;volatile
  2606   003BC6  0012               	return		;funcret
  2607   003BC8                     __end_of_runPWM:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function _runGPIO *****************
  2611 ;; Defined at:
  2612 ;;		line 19 in file "GPIO.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  j               2   36[COMRAM] int 
  2617 ;;  states         12    8[COMRAM] unsigned char [12]
  2618 ;;  LEDControl     12   20[COMRAM] PTR FTN(unsigned char ,)
  2619 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  2620 ;;		 -> LED2_Control(1), LED1_Control(1), 
  2621 ;;  numberOfStat    2   33[COMRAM] int 
  2622 ;;  GPIOi           1   35[COMRAM] unsigned char 
  2623 ;;  GPIOreverse     1   32[COMRAM] unsigned char 
  2624 ;;  GPIOindex       1    0        unsigned char 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Locals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;Total ram usage:       32 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 2
  2641 ;; This function calls:
  2642 ;;		_LED1_Control
  2643 ;;		_LED2_Control
  2644 ;;		_LED3_Control
  2645 ;;		_LED4_Control
  2646 ;;		_LED5_Control
  2647 ;;		_LED6_Control
  2648 ;; This function is called by:
  2649 ;;		_main
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           	psect	text3
  2654   00390C                     __ptext3:
  2655                           	callstack 0
  2656   00390C                     _runGPIO:
  2657                           	callstack 28
  2658   00390C                     
  2659                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  2660   00390C  9495               	bcf	149,2,c	;volatile
  2661                           
  2662                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  2663   00390E  9695               	bcf	149,3,c	;volatile
  2664                           
  2665                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  2666   003910  9894               	bcf	148,4,c	;volatile
  2667                           
  2668                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  2669   003912  9895               	bcf	149,4,c	;volatile
  2670                           
  2671                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  2672   003914  9A95               	bcf	149,5,c	;volatile
  2673                           
  2674                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  2675   003916  9C95               	bcf	149,6,c	;volatile
  2676                           
  2677                           ;GPIO.c: 27:     ANSELDbits.ANSD2 = 0;
  2678   003918  010F               	movlb	15	; () banked
  2679   00391A  953B               	bcf	59,2,b	;volatile
  2680                           
  2681                           ;GPIO.c: 28:     ANSELDbits.ANSD3 = 0;
  2682   00391C  973B               	bcf	59,3,b	;volatile
  2683                           
  2684                           ;GPIO.c: 29:     ANSELCbits.ANSC4 = 0;
  2685   00391E  993A               	bcf	58,4,b	;volatile
  2686                           
  2687                           ;GPIO.c: 30:     ANSELDbits.ANSD4 = 0;
  2688   003920  993B               	bcf	59,4,b	;volatile
  2689                           
  2690                           ;GPIO.c: 31:     ANSELDbits.ANSD5 = 0;
  2691   003922  9B3B               	bcf	59,5,b	;volatile
  2692                           
  2693                           ;GPIO.c: 32:     ANSELDbits.ANSD6 = 0;
  2694   003924  9D3B               	bcf	59,6,b	;volatile
  2695                           
  2696                           ;GPIO.c: 33:     LATDbits.LD2 = 1;
  2697   003926  848C               	bsf	140,2,c	;volatile
  2698                           
  2699                           ;GPIO.c: 34:     LATDbits.LD3 = 1;
  2700   003928  868C               	bsf	140,3,c	;volatile
  2701                           
  2702                           ;GPIO.c: 35:     LATCbits.LC4 = 1;
  2703   00392A  888B               	bsf	139,4,c	;volatile
  2704                           
  2705                           ;GPIO.c: 36:     LATDbits.LD4 = 1;
  2706   00392C  888C               	bsf	140,4,c	;volatile
  2707                           
  2708                           ;GPIO.c: 37:     LATDbits.LD5 = 1;
  2709   00392E  8A8C               	bsf	140,5,c	;volatile
  2710                           
  2711                           ;GPIO.c: 38:     LATDbits.LD6 = 1;
  2712   003930  8C8C               	bsf	140,6,c	;volatile
  2713                           
  2714                           ;GPIO.c: 41:     TRISAbits.RA2 = 1;
  2715   003932  8492               	bsf	146,2,c	;volatile
  2716                           
  2717                           ;GPIO.c: 42:     ANSELAbits.ANSA2 = 0;
  2718   003934  9538               	bcf	56,2,b	;volatile
  2719   003936                     
  2720                           ; BSR set to: 15
  2721                           ;GPIO.c: 47:     T1CONbits.TMR1CS = 0b00;
  2722   003936  0E3F               	movlw	-193
  2723   003938  16CD               	andwf	205,f,c	;volatile
  2724                           
  2725                           ;GPIO.c: 48:     T1CONbits.T1CKPS = 0b11;
  2726   00393A  0E30               	movlw	48
  2727   00393C  12CD               	iorwf	205,f,c	;volatile
  2728   00393E                     
  2729                           ; BSR set to: 15
  2730                           ;GPIO.c: 49:     TMR1IE = 1;
  2731   00393E  809D               	bsf	3997,0,c	;volatile
  2732   003940                     
  2733                           ; BSR set to: 15
  2734                           ;GPIO.c: 50:     PEIE = 1;
  2735   003940  8CF2               	bsf	4082,6,c	;volatile
  2736   003942                     
  2737                           ; BSR set to: 15
  2738                           ;GPIO.c: 51:     GIE = 1;
  2739   003942  8EF2               	bsf	4082,7,c	;volatile
  2740                           
  2741                           ;GPIO.c: 52:     GPIOIE = 1;
  2742   003944  0E01               	movlw	1
  2743   003946  0100               	movlb	0	; () banked
  2744   003948  6FFE               	movwf	_GPIOIE& (0+255),b
  2745   00394A                     
  2746                           ; BSR set to: 0
  2747                           ;GPIO.c: 53:     TMR1IF = 1;
  2748   00394A  809E               	bsf	3998,0,c	;volatile
  2749                           
  2750                           ;GPIO.c: 54:     TMR1 = 0xFFFF - (25000 - 1);
  2751   00394C  0E9E               	movlw	158
  2752   00394E  6ECF               	movwf	207,c	;volatile
  2753   003950  0E58               	movlw	88
  2754   003952  6ECE               	movwf	206,c	;volatile
  2755   003954                     
  2756                           ; BSR set to: 0
  2757                           ;GPIO.c: 55:     TMR1ON = 1;
  2758   003954  80CD               	bsf	4045,0,c	;volatile
  2759                           
  2760                           ;GPIO.c: 58:     keepStateGPIO = 1;
  2761   003956  0E01               	movlw	1
  2762   003958  6FFF               	movwf	_keepStateGPIO& (0+255),b
  2763                           
  2764                           ;GPIO.c: 61:     uint8_t GPIOreverse;;GPIO.c: 62:     GPIOreverse = 0;
  2765   00395A  0E00               	movlw	0
  2766   00395C  6E21               	movwf	runGPIO@GPIOreverse^0,c
  2767   00395E                     
  2768                           ; BSR set to: 0
  2769                           ;GPIO.c: 64:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  2770   00395E  EE21  F0C5         	lfsr	2,runGPIO@F6960
  2771   003962  EE10  F015         	lfsr	1,runGPIO@LEDControl
  2772   003966  0E0B               	movlw	11
  2773   003968                     u9051:
  2774   003968  CFDB FFE3          	movff	plusw2,plusw1
  2775   00396C  06E8               	decf	wreg,f,c
  2776   00396E  E2FC               	bc	u9051
  2777   003970                     
  2778                           ; BSR set to: 0
  2779                           ;GPIO.c: 65:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  2780   003970  EE21  F0B9         	lfsr	2,runGPIO@F6978
  2781   003974  EE10  F009         	lfsr	1,runGPIO@states
  2782   003978  0E0B               	movlw	11
  2783   00397A                     u9061:
  2784   00397A  CFDB FFE3          	movff	plusw2,plusw1
  2785   00397E  06E8               	decf	wreg,f,c
  2786   003980  E2FC               	bc	u9061
  2787                           
  2788                           ;GPIO.c: 66:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  2789   003982  0E00               	movlw	0
  2790   003984  6E23               	movwf	(runGPIO@numberOfStates+1)^0,c
  2791   003986  0E0C               	movlw	12
  2792   003988  6E22               	movwf	runGPIO@numberOfStates^0,c
  2793                           
  2794                           ;GPIO.c: 67:     uint8_t GPIOi;;GPIO.c: 68:     GPIOi = 0;
  2795   00398A  0E00               	movlw	0
  2796   00398C  6E24               	movwf	runGPIO@GPIOi^0,c
  2797                           
  2798                           ;GPIO.c: 70:     while(keepStateGPIO){
  2799   00398E  EF2D  F01D         	goto	l344
  2800   003992                     l7835:
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;GPIO.c: 72:         for(int j = 0; j < 6; j++) {
  2804   003992  0E00               	movlw	0
  2805   003994  6E26               	movwf	(runGPIO@j+1)^0,c
  2806   003996  0E00               	movlw	0
  2807   003998  6E25               	movwf	runGPIO@j^0,c
  2808   00399A                     l7841:
  2809                           
  2810                           ;GPIO.c: 73:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  2811   00399A  90D8               	bcf	status,0,c
  2812   00399C  3425               	rlcf	runGPIO@j^0,w,c
  2813   00399E  6ED9               	movwf	fsr2l,c
  2814   0039A0  3426               	rlcf	(runGPIO@j+1)^0,w,c
  2815   0039A2  6EDA               	movwf	fsr2h,c
  2816   0039A4  0E15               	movlw	low runGPIO@LEDControl
  2817   0039A6  26D9               	addwf	fsr2l,f,c
  2818   0039A8  0E00               	movlw	high runGPIO@LEDControl
  2819   0039AA  22DA               	addwfc	fsr2h,f,c
  2820   0039AC  D802               	call	u9078
  2821   0039AE  EFFF  F01C         	goto	u9079
  2822   0039B2                     u9078:
  2823   0039B2  0005               	push	
  2824   0039B4  6EFA               	movwf	pclath,c
  2825   0039B6  50DE               	movf	postinc2,w,c
  2826   0039B8  6EFD               	movwf	tosl,c
  2827   0039BA  50DE               	movf	postinc2,w,c
  2828   0039BC  6EFE               	movwf	tosh,c
  2829   0039BE  50F8               	movf	tblptru,w,c
  2830   0039C0  6EFF               	movwf	tosu,c
  2831   0039C2  50FA               	movf	pclath,w,c
  2832   0039C4  5025               	movf	runGPIO@j^0,w,c
  2833   0039C6  0805               	sublw	5
  2834   0039C8  6E07               	movwf	??_runGPIO^0,c
  2835   0039CA  0E09               	movlw	low runGPIO@states
  2836   0039CC  2424               	addwf	runGPIO@GPIOi^0,w,c
  2837   0039CE  6ED9               	movwf	fsr2l,c
  2838   0039D0  6ADA               	clrf	fsr2h,c
  2839   0039D2  0E00               	movlw	high runGPIO@states
  2840   0039D4  22DA               	addwfc	fsr2h,f,c
  2841   0039D6  50DF               	movf	indf2,w,c
  2842   0039D8  6E08               	movwf	(??_runGPIO+1)^0,c
  2843   0039DA  2A07               	incf	??_runGPIO^0,f,c
  2844   0039DC  EFF2  F01C         	goto	u9084
  2845   0039E0                     u9085:
  2846   0039E0  90D8               	bcf	status,0,c
  2847   0039E2  3208               	rrcf	(??_runGPIO+1)^0,f,c
  2848   0039E4                     u9084:
  2849   0039E4  2E07               	decfsz	??_runGPIO^0,f,c
  2850   0039E6  EFF0  F01C         	goto	u9085
  2851   0039EA  A008               	btfss	(??_runGPIO+1)^0,0,c
  2852   0039EC  EFFA  F01C         	goto	u9091
  2853   0039F0  EFFD  F01C         	goto	u9090
  2854   0039F4                     u9091:
  2855   0039F4  0E01               	movlw	1
  2856   0039F6  EFFE  F01C         	goto	u9100
  2857   0039FA                     u9090:
  2858   0039FA  0E00               	movlw	0
  2859   0039FC                     u9100:
  2860   0039FC  0012               	return		;indir
  2861   0039FE                     u9079:
  2862   0039FE                     
  2863                           ;GPIO.c: 74:         }
  2864   0039FE  4A25               	infsnz	runGPIO@j^0,f,c
  2865   003A00  2A26               	incf	(runGPIO@j+1)^0,f,c
  2866   003A02  BE26               	btfsc	(runGPIO@j+1)^0,7,c
  2867   003A04  EF0D  F01D         	goto	u9111
  2868   003A08  5026               	movf	(runGPIO@j+1)^0,w,c
  2869   003A0A  E109               	bnz	u9110
  2870   003A0C  0E06               	movlw	6
  2871   003A0E  5C25               	subwf	runGPIO@j^0,w,c
  2872   003A10  A0D8               	btfss	status,0,c
  2873   003A12  EF0D  F01D         	goto	u9111
  2874   003A16  EF0F  F01D         	goto	u9110
  2875   003A1A                     u9111:
  2876   003A1A  EFCD  F01C         	goto	l7841
  2877   003A1E                     u9110:
  2878   003A1E                     
  2879                           ;GPIO.c: 75:         _delay((unsigned long)((400)*(32E6/4000.0)));
  2880   003A1E  0E11               	movlw	17
  2881   003A20  6E08               	movwf	(??_runGPIO+1)^0,c
  2882   003A22  0E3C               	movlw	60
  2883   003A24  6E07               	movwf	??_runGPIO^0,c
  2884   003A26  0ECB               	movlw	203
  2885   003A28                     u9617:
  2886   003A28  2EE8               	decfsz	wreg,f,c
  2887   003A2A  D7FE               	bra	u9617
  2888   003A2C  2E07               	decfsz	??_runGPIO^0,f,c
  2889   003A2E  D7FC               	bra	u9617
  2890   003A30  2E08               	decfsz	(??_runGPIO+1)^0,f,c
  2891   003A32  D7FA               	bra	u9617
  2892   003A34  F000               	nop	
  2893   003A36                     
  2894                           ;GPIO.c: 76:         GPIOi++;
  2895   003A36  2A24               	incf	runGPIO@GPIOi^0,f,c
  2896                           
  2897                           ;GPIO.c: 77:         if(GPIOi == numberOfStates){
  2898   003A38  5024               	movf	runGPIO@GPIOi^0,w,c
  2899   003A3A  6E07               	movwf	??_runGPIO^0,c
  2900   003A3C  6A08               	clrf	(??_runGPIO+1)^0,c
  2901   003A3E  5022               	movf	runGPIO@numberOfStates^0,w,c
  2902   003A40  1807               	xorwf	??_runGPIO^0,w,c
  2903   003A42  E107               	bnz	u9121
  2904   003A44  5023               	movf	(runGPIO@numberOfStates+1)^0,w,c
  2905   003A46  1808               	xorwf	(??_runGPIO+1)^0,w,c
  2906   003A48  A4D8               	btfss	status,2,c
  2907   003A4A  EF29  F01D         	goto	u9121
  2908   003A4E  EF2B  F01D         	goto	u9120
  2909   003A52                     u9121:
  2910   003A52  EF2D  F01D         	goto	l344
  2911   003A56                     u9120:
  2912   003A56                     
  2913                           ;GPIO.c: 78:             GPIOi = 0;
  2914   003A56  0E00               	movlw	0
  2915   003A58  6E24               	movwf	runGPIO@GPIOi^0,c
  2916   003A5A                     l344:
  2917                           
  2918                           ;GPIO.c: 70:     while(keepStateGPIO){
  2919   003A5A  0100               	movlb	0	; () banked
  2920   003A5C  51FF               	movf	_keepStateGPIO& (0+255),w,b
  2921   003A5E  A4D8               	btfss	status,2,c
  2922   003A60  EF34  F01D         	goto	u9131
  2923   003A64  EF36  F01D         	goto	u9130
  2924   003A68                     u9131:
  2925   003A68  EFC9  F01C         	goto	l7835
  2926   003A6C                     u9130:
  2927   003A6C                     
  2928                           ; BSR set to: 0
  2929                           ;GPIO.c: 83:     LATDbits.LD2 = 1;
  2930   003A6C  848C               	bsf	140,2,c	;volatile
  2931                           
  2932                           ;GPIO.c: 84:     LATDbits.LD3 = 1;
  2933   003A6E  868C               	bsf	140,3,c	;volatile
  2934                           
  2935                           ;GPIO.c: 85:     LATCbits.LC4 = 1;
  2936   003A70  888B               	bsf	139,4,c	;volatile
  2937                           
  2938                           ;GPIO.c: 86:     LATDbits.LD4 = 1;
  2939   003A72  888C               	bsf	140,4,c	;volatile
  2940                           
  2941                           ;GPIO.c: 87:     LATDbits.LD5 = 1;
  2942   003A74  8A8C               	bsf	140,5,c	;volatile
  2943                           
  2944                           ;GPIO.c: 88:     LATDbits.LD6 = 1;
  2945   003A76  8C8C               	bsf	140,6,c	;volatile
  2946                           
  2947                           ;GPIO.c: 89:     TMR1ON = 0;
  2948   003A78  90CD               	bcf	4045,0,c	;volatile
  2949                           
  2950                           ;GPIO.c: 90:     TMR1IE = 0;
  2951   003A7A  909D               	bcf	3997,0,c	;volatile
  2952   003A7C                     
  2953                           ; BSR set to: 0
  2954                           ;GPIO.c: 91:     GPIOIE = 0;
  2955   003A7C  0E00               	movlw	0
  2956   003A7E  6FFE               	movwf	_GPIOIE& (0+255),b
  2957   003A80                     
  2958                           ; BSR set to: 0
  2959   003A80  0012               	return		;funcret
  2960   003A82                     __end_of_runGPIO:
  2961                           	callstack 0
  2962                           
  2963 ;; *************** function _LED5_Control *****************
  2964 ;; Defined at:
  2965 ;;		line 14 in file "GPIO.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  state           1    wreg     unsigned char 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  state           1    5[COMRAM] unsigned char 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;Total ram usage:        1 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 1
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_runGPIO
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text4
  2994   004C1A                     __ptext4:
  2995                           	callstack 0
  2996   004C1A                     _LED5_Control:
  2997                           	callstack 28
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;incstack = 0
  3001                           ;LED5_Control@state stored from wreg
  3002   004C1A  6E06               	movwf	LED5_Control@state^0,c
  3003   004C1C  B006               	btfsc	LED5_Control@state^0,0,c
  3004   004C1E  D002               	bra	u8985
  3005   004C20  9A8C               	bcf	140,5,c	;volatile
  3006   004C22  D001               	bra	u8986
  3007   004C24                     u8985:
  3008   004C24  8A8C               	bsf	140,5,c	;volatile
  3009   004C26                     u8986:
  3010   004C26  0012               	return		;funcret
  3011   004C28                     __end_of_LED5_Control:
  3012                           	callstack 0
  3013                           
  3014 ;; *************** function _LED4_Control *****************
  3015 ;; Defined at:
  3016 ;;		line 13 in file "GPIO.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  state           1    wreg     unsigned char 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  state           1    5[COMRAM] unsigned char 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;Total ram usage:        1 bytes
  3035 ;; Hardware stack levels used: 1
  3036 ;; Hardware stack levels required when called: 1
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_runGPIO
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text5
  3045   004C28                     __ptext5:
  3046                           	callstack 0
  3047   004C28                     _LED4_Control:
  3048                           	callstack 28
  3049                           
  3050                           ;incstack = 0
  3051                           ;LED4_Control@state stored from wreg
  3052   004C28  6E06               	movwf	LED4_Control@state^0,c
  3053   004C2A  B006               	btfsc	LED4_Control@state^0,0,c
  3054   004C2C  D002               	bra	u8975
  3055   004C2E  988C               	bcf	140,4,c	;volatile
  3056   004C30  D001               	bra	u8976
  3057   004C32                     u8975:
  3058   004C32  888C               	bsf	140,4,c	;volatile
  3059   004C34                     u8976:
  3060   004C34  0012               	return		;funcret
  3061   004C36                     __end_of_LED4_Control:
  3062                           	callstack 0
  3063                           
  3064 ;; *************** function _LED3_Control *****************
  3065 ;; Defined at:
  3066 ;;		line 12 in file "GPIO.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  state           1    wreg     unsigned char 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  state           1    5[COMRAM] unsigned char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;Total ram usage:        1 bytes
  3085 ;; Hardware stack levels used: 1
  3086 ;; Hardware stack levels required when called: 1
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_runGPIO
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text6
  3095   004C36                     __ptext6:
  3096                           	callstack 0
  3097   004C36                     _LED3_Control:
  3098                           	callstack 28
  3099                           
  3100                           ;incstack = 0
  3101                           ;LED3_Control@state stored from wreg
  3102   004C36  6E06               	movwf	LED3_Control@state^0,c
  3103   004C38  B006               	btfsc	LED3_Control@state^0,0,c
  3104   004C3A  D002               	bra	u8965
  3105   004C3C  988B               	bcf	139,4,c	;volatile
  3106   004C3E  D001               	bra	u8966
  3107   004C40                     u8965:
  3108   004C40  888B               	bsf	139,4,c	;volatile
  3109   004C42                     u8966:
  3110   004C42  0012               	return		;funcret
  3111   004C44                     __end_of_LED3_Control:
  3112                           	callstack 0
  3113                           
  3114 ;; *************** function _LED2_Control *****************
  3115 ;; Defined at:
  3116 ;;		line 11 in file "GPIO.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  state           1    wreg     unsigned char 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  state           1    5[COMRAM] unsigned char 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      void 
  3123 ;; Registers used:
  3124 ;;		wreg
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;Total ram usage:        1 bytes
  3135 ;; Hardware stack levels used: 1
  3136 ;; Hardware stack levels required when called: 1
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_runGPIO
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text7
  3145   004C44                     __ptext7:
  3146                           	callstack 0
  3147   004C44                     _LED2_Control:
  3148                           	callstack 28
  3149                           
  3150                           ;incstack = 0
  3151                           ;LED2_Control@state stored from wreg
  3152   004C44  6E06               	movwf	LED2_Control@state^0,c
  3153   004C46  B006               	btfsc	LED2_Control@state^0,0,c
  3154   004C48  D002               	bra	u8955
  3155   004C4A  968C               	bcf	140,3,c	;volatile
  3156   004C4C  D001               	bra	u8956
  3157   004C4E                     u8955:
  3158   004C4E  868C               	bsf	140,3,c	;volatile
  3159   004C50                     u8956:
  3160   004C50  0012               	return		;funcret
  3161   004C52                     __end_of_LED2_Control:
  3162                           	callstack 0
  3163                           
  3164 ;; *************** function _LED1_Control *****************
  3165 ;; Defined at:
  3166 ;;		line 10 in file "GPIO.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  state           1    wreg     unsigned char 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  state           1    5[COMRAM] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;Total ram usage:        1 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; Hardware stack levels required when called: 1
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_runGPIO
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text8
  3195   004C52                     __ptext8:
  3196                           	callstack 0
  3197   004C52                     _LED1_Control:
  3198                           	callstack 28
  3199                           
  3200                           ;incstack = 0
  3201                           ;LED1_Control@state stored from wreg
  3202   004C52  6E06               	movwf	LED1_Control@state^0,c
  3203   004C54  B006               	btfsc	LED1_Control@state^0,0,c
  3204   004C56  D002               	bra	u8945
  3205   004C58  948C               	bcf	140,2,c	;volatile
  3206   004C5A  D001               	bra	u8946
  3207   004C5C                     u8945:
  3208   004C5C  848C               	bsf	140,2,c	;volatile
  3209   004C5E                     u8946:
  3210   004C5E  0012               	return		;funcret
  3211   004C60                     __end_of_LED1_Control:
  3212                           	callstack 0
  3213                           
  3214 ;; *************** function _LED6_Control *****************
  3215 ;; Defined at:
  3216 ;;		line 15 in file "GPIO.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  state           1    wreg     unsigned char 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  state           1    5[COMRAM] unsigned char 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;Total ram usage:        1 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; Hardware stack levels required when called: 1
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_runGPIO
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text9
  3245   004C60                     __ptext9:
  3246                           	callstack 0
  3247   004C60                     _LED6_Control:
  3248                           	callstack 28
  3249                           
  3250                           ;incstack = 0
  3251                           ;LED6_Control@state stored from wreg
  3252   004C60  6E06               	movwf	LED6_Control@state^0,c
  3253   004C62  B006               	btfsc	LED6_Control@state^0,0,c
  3254   004C64  D002               	bra	u8995
  3255   004C66  9C8C               	bcf	140,6,c	;volatile
  3256   004C68  D001               	bra	u8996
  3257   004C6A                     u8995:
  3258   004C6A  8C8C               	bsf	140,6,c	;volatile
  3259   004C6C                     u8996:
  3260   004C6C  0012               	return		;funcret
  3261   004C6E                     __end_of_LED6_Control:
  3262                           	callstack 0
  3263                           
  3264 ;; *************** function _runDAC *****************
  3265 ;; Defined at:
  3266 ;;		line 10 in file "DAC.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  DACindex        1  134[BANK0 ] unsigned char 
  3271 ;;  selectModeDA    1  133[BANK0 ] unsigned char 
  3272 ;;  keepState       1  132[BANK0 ] unsigned char 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;Total ram usage:       13 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; Hardware stack levels required when called: 9
  3289 ;; This function calls:
  3290 ;;		_SPI_write
  3291 ;;		___fladd
  3292 ;;		___fldiv
  3293 ;;		___flmul
  3294 ;;		___fltol
  3295 ;;		___xxtofl
  3296 ;;		_printf
  3297 ;;		_sinf
  3298 ;; This function is called by:
  3299 ;;		_main
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text10
  3304   00266C                     __ptext10:
  3305                           	callstack 0
  3306   00266C                     _runDAC:
  3307                           	callstack 21
  3308   00266C                     
  3309                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  3310   00266C  8094               	bsf	148,0,c	;volatile
  3311                           
  3312                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  3313   00266E  8892               	bsf	146,4,c	;volatile
  3314                           
  3315                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  3316   002670  8692               	bsf	146,3,c	;volatile
  3317                           
  3318                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  3319   002672  8492               	bsf	146,2,c	;volatile
  3320                           
  3321                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  3322   002674  010F               	movlb	15	; () banked
  3323   002676  9738               	bcf	56,3,b	;volatile
  3324                           
  3325                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  3326   002678  9538               	bcf	56,2,b	;volatile
  3327                           
  3328                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  3329   00267A  9693               	bcf	147,3,c	;volatile
  3330                           
  3331                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  3332   00267C  9694               	bcf	148,3,c	;volatile
  3333                           
  3334                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  3335   00267E  9A94               	bcf	148,5,c	;volatile
  3336   002680                     
  3337                           ; BSR set to: 15
  3338                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  3339   002680  50C6               	movf	198,w,c	;volatile
  3340   002682  0BF0               	andlw	-16
  3341   002684  0902               	iorlw	2
  3342   002686  6EC6               	movwf	198,c	;volatile
  3343   002688                     
  3344                           ; BSR set to: 15
  3345                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  3346   002688  98C6               	bcf	198,4,c	;volatile
  3347   00268A                     
  3348                           ; BSR set to: 15
  3349                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  3350   00268A  8CC7               	bsf	199,6,c	;volatile
  3351   00268C                     
  3352                           ; BSR set to: 15
  3353                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  3354   00268C  8AC6               	bsf	198,5,c	;volatile
  3355   00268E                     
  3356                           ; BSR set to: 15
  3357                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  3358   00268E  8139               	bsf	57,0,b	;volatile
  3359   002690                     
  3360                           ; BSR set to: 15
  3361                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  3362   002690  9EC0               	bcf	192,7,c	;volatile
  3363                           
  3364                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  3365   002692  50C0               	movf	192,w,c	;volatile
  3366   002694  0BF8               	andlw	-8
  3367   002696  0906               	iorlw	6
  3368   002698  6EC0               	movwf	192,c	;volatile
  3369                           
  3370                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  3371   00269A  50C0               	movf	192,w,c	;volatile
  3372   00269C  0BC7               	andlw	-57
  3373   00269E  0930               	iorlw	48
  3374   0026A0  6EC0               	movwf	192,c	;volatile
  3375   0026A2                     
  3376                           ; BSR set to: 15
  3377                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  3378   0026A2  80C2               	bsf	194,0,c	;volatile
  3379                           
  3380                           ;DAC.c: 38:     SPBRG1 = 25;
  3381   0026A4  0E19               	movlw	25
  3382   0026A6  6EAF               	movwf	175,c	;volatile
  3383   0026A8                     
  3384                           ; BSR set to: 15
  3385                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  3386   0026A8  8EAB               	bsf	171,7,c	;volatile
  3387   0026AA                     
  3388                           ; BSR set to: 15
  3389                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  3390   0026AA  98AC               	bcf	172,4,c	;volatile
  3391   0026AC                     
  3392                           ; BSR set to: 15
  3393                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  3394   0026AC  8AAC               	bsf	172,5,c	;volatile
  3395   0026AE                     
  3396                           ; BSR set to: 15
  3397                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  3398   0026AE  88AB               	bsf	171,4,c	;volatile
  3399   0026B0                     
  3400                           ; BSR set to: 15
  3401                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  3402   0026B0  868A               	bsf	138,3,c	;volatile
  3403                           
  3404                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  3405   0026B2  50C2               	movf	194,w,c	;volatile
  3406   0026B4  0B83               	andlw	-125
  3407   0026B6  0930               	iorlw	48
  3408   0026B8  6EC2               	movwf	194,c	;volatile
  3409                           
  3410                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  3411   0026BA  0E01               	movlw	1
  3412   0026BC  0100               	movlb	0	; () banked
  3413   0026BE  6FE5               	movwf	runDAC@selectModeDAC& (0+255),b
  3414                           
  3415                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  3416   0026C0  0E01               	movlw	1
  3417   0026C2  6FE4               	movwf	runDAC@keepState& (0+255),b
  3418                           
  3419                           ;DAC.c: 52:     uint8_t DACindex = 0;
  3420   0026C4  0E00               	movlw	0
  3421   0026C6  6FE6               	movwf	runDAC@DACindex& (0+255),b
  3422                           
  3423                           ;DAC.c: 54:     while(keepState){
  3424   0026C8  EFAA  F014         	goto	l8061
  3425   0026CC                     l8019:
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;DAC.c: 57:                 if(DACindex<255/2){
  3429   0026CC  0E7F               	movlw	127
  3430   0026CE  61E6               	cpfslt	runDAC@DACindex& (0+255),b
  3431   0026D0  EF6C  F013         	goto	u9361
  3432   0026D4  EF6E  F013         	goto	u9360
  3433   0026D8                     u9361:
  3434   0026D8  EF96  F013         	goto	l8023
  3435   0026DC                     u9360:
  3436   0026DC                     
  3437                           ; BSR set to: 0
  3438                           ;DAC.c: 58:                     SPI_write((uint8_t)(1.9*DACindex));
  3439   0026DC  0E33               	movlw	51
  3440   0026DE  6E18               	movwf	___flmul@a^0,c
  3441   0026E0  0E33               	movlw	51
  3442   0026E2  6E19               	movwf	(___flmul@a+1)^0,c
  3443   0026E4  0EF3               	movlw	243
  3444   0026E6  6E1A               	movwf	(___flmul@a+2)^0,c
  3445   0026E8  0E3F               	movlw	63
  3446   0026EA  6E1B               	movwf	(___flmul@a+3)^0,c
  3447   0026EC  51E6               	movf	runDAC@DACindex& (0+255),w,b
  3448   0026EE  6E06               	movwf	___xxtofl@val^0,c
  3449   0026F0  6A07               	clrf	(___xxtofl@val+1)^0,c
  3450   0026F2  6A08               	clrf	(___xxtofl@val+2)^0,c
  3451   0026F4  6A09               	clrf	(___xxtofl@val+3)^0,c
  3452   0026F6  0E01               	movlw	1
  3453   0026F8  EC19  F01A         	call	___xxtofl
  3454   0026FC  C006  F014         	movff	?___xxtofl,___flmul@b
  3455   002700  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3456   002704  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3457   002708  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3458   00270C  EC54  F00F         	call	___flmul	;wreg free
  3459   002710  C014  F064         	movff	?___flmul,___fltol@f1
  3460   002714  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  3461   002718  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  3462   00271C  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  3463   002720  EC75  F01E         	call	___fltol	;wreg free
  3464   002724  0100               	movlb	0	; () banked
  3465   002726  5164               	movf	?___fltol& (0+255),w,b
  3466   002728  EC3F  F025         	call	_SPI_write
  3467   00272C                     l8023:
  3468                           
  3469                           ;DAC.c: 60:                 if(DACindex>=255/2){
  3470   00272C  0E7E               	movlw	126
  3471   00272E  0100               	movlb	0	; () banked
  3472   002730  65E6               	cpfsgt	runDAC@DACindex& (0+255),b
  3473   002732  EF9D  F013         	goto	u9371
  3474   002736  EF9F  F013         	goto	u9370
  3475   00273A                     u9371:
  3476   00273A  EF65  F014         	goto	l215
  3477   00273E                     u9370:
  3478   00273E                     
  3479                           ; BSR set to: 0
  3480                           ;DAC.c: 61:                     SPI_write((uint8_t)(1.9*(255-DACindex)));
  3481   00273E  0E33               	movlw	51
  3482   002740  6E18               	movwf	___flmul@a^0,c
  3483   002742  0E33               	movlw	51
  3484   002744  6E19               	movwf	(___flmul@a+1)^0,c
  3485   002746  0EF3               	movlw	243
  3486   002748  6E1A               	movwf	(___flmul@a+2)^0,c
  3487   00274A  0E3F               	movlw	63
  3488   00274C  6E1B               	movwf	(___flmul@a+3)^0,c
  3489   00274E  51E6               	movf	runDAC@DACindex& (0+255),w,b
  3490   002750  0AFF               	xorlw	255
  3491   002752  6FDA               	movwf	??_runDAC& (0+255),b
  3492   002754  51DA               	movf	??_runDAC& (0+255),w,b
  3493   002756  6E06               	movwf	___xxtofl@val^0,c
  3494   002758  6A07               	clrf	(___xxtofl@val+1)^0,c
  3495   00275A  6A08               	clrf	(___xxtofl@val+2)^0,c
  3496   00275C  6A09               	clrf	(___xxtofl@val+3)^0,c
  3497   00275E  0E01               	movlw	1
  3498   002760  EC19  F01A         	call	___xxtofl
  3499   002764  C006  F014         	movff	?___xxtofl,___flmul@b
  3500   002768  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3501   00276C  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3502   002770  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3503   002774  EC54  F00F         	call	___flmul	;wreg free
  3504   002778  C014  F064         	movff	?___flmul,___fltol@f1
  3505   00277C  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  3506   002780  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  3507   002784  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  3508   002788  EC75  F01E         	call	___fltol	;wreg free
  3509   00278C  0100               	movlb	0	; () banked
  3510   00278E  5164               	movf	?___fltol& (0+255),w,b
  3511   002790  EC3F  F025         	call	_SPI_write
  3512   002794  EF65  F014         	goto	l215
  3513   002798                     l8027:
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3517   002798  0E00               	movlw	0
  3518   00279A  6E31               	movwf	___fldiv@a^0,c
  3519   00279C  0E00               	movlw	0
  3520   00279E  6E32               	movwf	(___fldiv@a+1)^0,c
  3521   0027A0  0E7F               	movlw	127
  3522   0027A2  6E33               	movwf	(___fldiv@a+2)^0,c
  3523   0027A4  0E43               	movlw	67
  3524   0027A6  6E34               	movwf	(___fldiv@a+3)^0,c
  3525   0027A8  0EC3               	movlw	195
  3526   0027AA  6E18               	movwf	___flmul@a^0,c
  3527   0027AC  0EF5               	movlw	245
  3528   0027AE  6E19               	movwf	(___flmul@a+1)^0,c
  3529   0027B0  0EC8               	movlw	200
  3530   0027B2  6E1A               	movwf	(___flmul@a+2)^0,c
  3531   0027B4  0E40               	movlw	64
  3532   0027B6  6E1B               	movwf	(___flmul@a+3)^0,c
  3533   0027B8  51E6               	movf	runDAC@DACindex& (0+255),w,b
  3534   0027BA  6E06               	movwf	___xxtofl@val^0,c
  3535   0027BC  6A07               	clrf	(___xxtofl@val+1)^0,c
  3536   0027BE  6A08               	clrf	(___xxtofl@val+2)^0,c
  3537   0027C0  6A09               	clrf	(___xxtofl@val+3)^0,c
  3538   0027C2  0E01               	movlw	1
  3539   0027C4  EC19  F01A         	call	___xxtofl
  3540   0027C8  C006  F014         	movff	?___xxtofl,___flmul@b
  3541   0027CC  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3542   0027D0  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3543   0027D4  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3544   0027D8  EC54  F00F         	call	___flmul	;wreg free
  3545   0027DC  C014  F02D         	movff	?___flmul,___fldiv@b
  3546   0027E0  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  3547   0027E4  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  3548   0027E8  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  3549   0027EC  EC69  F011         	call	___fldiv	;wreg free
  3550   0027F0  C02D  F0DC         	movff	?___fldiv,_runDAC$4158
  3551   0027F4  C02E  F0DD         	movff	?___fldiv+1,_runDAC$4158+1
  3552   0027F8  C02F  F0DE         	movff	?___fldiv+2,_runDAC$4158+2
  3553   0027FC  C030  F0DF         	movff	?___fldiv+3,_runDAC$4158+3
  3554   002800                     
  3555                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3556   002800  C0DC  F0AC         	movff	_runDAC$4158,sinf@x
  3557   002804  C0DD  F0AD         	movff	_runDAC$4158+1,sinf@x+1
  3558   002808  C0DE  F0AE         	movff	_runDAC$4158+2,sinf@x+2
  3559   00280C  C0DF  F0AF         	movff	_runDAC$4158+3,sinf@x+3
  3560   002810  EC85  F005         	call	_sinf	;wreg free
  3561   002814  C0AC  F0E0         	movff	?_sinf,_runDAC$4159
  3562   002818  C0AD  F0E1         	movff	?_sinf+1,_runDAC$4159+1
  3563   00281C  C0AE  F0E2         	movff	?_sinf+2,_runDAC$4159+2
  3564   002820  C0AF  F0E3         	movff	?_sinf+3,_runDAC$4159+3
  3565   002824                     
  3566                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3567   002824  0E00               	movlw	0
  3568   002826  6E4A               	movwf	___fladd@a^0,c
  3569   002828  0E00               	movlw	0
  3570   00282A  6E4B               	movwf	(___fladd@a+1)^0,c
  3571   00282C  0EFE               	movlw	254
  3572   00282E  6E4C               	movwf	(___fladd@a+2)^0,c
  3573   002830  0E42               	movlw	66
  3574   002832  6E4D               	movwf	(___fladd@a+3)^0,c
  3575   002834  0E00               	movlw	0
  3576   002836  6E18               	movwf	___flmul@a^0,c
  3577   002838  0E00               	movlw	0
  3578   00283A  6E19               	movwf	(___flmul@a+1)^0,c
  3579   00283C  0EFE               	movlw	254
  3580   00283E  6E1A               	movwf	(___flmul@a+2)^0,c
  3581   002840  0E42               	movlw	66
  3582   002842  6E1B               	movwf	(___flmul@a+3)^0,c
  3583   002844  C0E0  F014         	movff	_runDAC$4159,___flmul@b
  3584   002848  C0E1  F015         	movff	_runDAC$4159+1,___flmul@b+1
  3585   00284C  C0E2  F016         	movff	_runDAC$4159+2,___flmul@b+2
  3586   002850  C0E3  F017         	movff	_runDAC$4159+3,___flmul@b+3
  3587   002854  EC54  F00F         	call	___flmul	;wreg free
  3588   002858  C014  F046         	movff	?___flmul,___fladd@b
  3589   00285C  C015  F047         	movff	?___flmul+1,___fladd@b+1
  3590   002860  C016  F048         	movff	?___flmul+2,___fladd@b+2
  3591   002864  C017  F049         	movff	?___flmul+3,___fladd@b+3
  3592   002868  EC62  F008         	call	___fladd	;wreg free
  3593   00286C  C046  F064         	movff	?___fladd,___fltol@f1
  3594   002870  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  3595   002874  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  3596   002878  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  3597   00287C  EC75  F01E         	call	___fltol	;wreg free
  3598   002880  0100               	movlb	0	; () banked
  3599   002882  5164               	movf	?___fltol& (0+255),w,b
  3600   002884  EC3F  F025         	call	_SPI_write
  3601                           
  3602                           ;DAC.c: 66:                 break;
  3603   002888  EF65  F014         	goto	l215
  3604   00288C                     l8033:
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  3608   00288C  51E6               	movf	runDAC@DACindex& (0+255),w,b
  3609   00288E  0AFF               	xorlw	255
  3610   002890  EC3F  F025         	call	_SPI_write
  3611                           
  3612                           ;DAC.c: 69:                 break;
  3613   002894  EF65  F014         	goto	l215
  3614   002898                     l8037:
  3615                           
  3616                           ; BSR set to: 0
  3617   002898  51E5               	movf	runDAC@selectModeDAC& (0+255),w,b
  3618   00289A  6FDA               	movwf	??_runDAC& (0+255),b
  3619   00289C  6BDB               	clrf	(??_runDAC+1)& (0+255),b
  3620                           
  3621                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3622                           ; Switch size 1, requested type "simple"
  3623                           ; Number of cases is 1, Range of values is 0 to 0
  3624                           ; switch strategies available:
  3625                           ; Name         Instructions Cycles
  3626                           ; simple_byte            4     3 (average)
  3627                           ;	Chosen strategy is simple_byte
  3628   00289E  51DB               	movf	(??_runDAC+1)& (0+255),w,b
  3629   0028A0  0A00               	xorlw	0	; case 0
  3630   0028A2  B4D8               	btfsc	status,2,c
  3631   0028A4  EF56  F014         	goto	l8449
  3632   0028A8  EF65  F014         	goto	l215
  3633   0028AC                     l8449:
  3634                           
  3635                           ; BSR set to: 0
  3636                           ; Switch size 1, requested type "simple"
  3637                           ; Number of cases is 3, Range of values is 1 to 3
  3638                           ; switch strategies available:
  3639                           ; Name         Instructions Cycles
  3640                           ; simple_byte           10     6 (average)
  3641                           ;	Chosen strategy is simple_byte
  3642   0028AC  51DA               	movf	??_runDAC& (0+255),w,b
  3643   0028AE  0A01               	xorlw	1	; case 1
  3644   0028B0  B4D8               	btfsc	status,2,c
  3645   0028B2  EF66  F013         	goto	l8019
  3646   0028B6  0A03               	xorlw	3	; case 2
  3647   0028B8  B4D8               	btfsc	status,2,c
  3648   0028BA  EFCC  F013         	goto	l8027
  3649   0028BE  0A01               	xorlw	1	; case 3
  3650   0028C0  B4D8               	btfsc	status,2,c
  3651   0028C2  EF46  F014         	goto	l8033
  3652   0028C6  EF65  F014         	goto	l215
  3653   0028CA                     l215:
  3654                           
  3655                           ;DAC.c: 71:         GODONE = 1;
  3656   0028CA  82C2               	bsf	4034,1,c	;volatile
  3657   0028CC                     l218:
  3658   0028CC  B2C2               	btfsc	4034,1,c	;volatile
  3659   0028CE  EF6B  F014         	goto	u9381
  3660   0028D2  EF6D  F014         	goto	u9380
  3661   0028D6                     u9381:
  3662   0028D6  EF66  F014         	goto	l218
  3663   0028DA                     u9380:
  3664   0028DA                     
  3665                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  3666   0028DA  0EE2               	movlw	low STR_10
  3667   0028DC  0100               	movlb	0	; () banked
  3668   0028DE  6FD4               	movwf	printf@fmt& (0+255),b
  3669   0028E0  0EFF               	movlw	high STR_10
  3670   0028E2  6FD5               	movwf	(printf@fmt+1)& (0+255),b
  3671   0028E4  CFC4 F0D6          	movff	4036,?_printf+2	;volatile
  3672   0028E8  6BD7               	clrf	(?_printf+3)& (0+255),b
  3673   0028EA  ECC8  F025         	call	_printf	;wreg free
  3674   0028EE                     
  3675                           ;DAC.c: 75:         if(PORTCbits.RC0){
  3676   0028EE  A082               	btfss	130,0,c	;volatile
  3677   0028F0  EF7C  F014         	goto	u9391
  3678   0028F4  EF7E  F014         	goto	u9390
  3679   0028F8                     u9391:
  3680   0028F8  EF81  F014         	goto	l8045
  3681   0028FC                     u9390:
  3682   0028FC                     
  3683                           ;DAC.c: 76:             selectModeDAC = 1;
  3684   0028FC  0E01               	movlw	1
  3685   0028FE  0100               	movlb	0	; () banked
  3686   002900  6FE5               	movwf	runDAC@selectModeDAC& (0+255),b
  3687   002902                     l8045:
  3688                           
  3689                           ;DAC.c: 78:         if(PORTAbits.RA4){
  3690   002902  A880               	btfss	128,4,c	;volatile
  3691   002904  EF86  F014         	goto	u9401
  3692   002908  EF88  F014         	goto	u9400
  3693   00290C                     u9401:
  3694   00290C  EF8B  F014         	goto	l8049
  3695   002910                     u9400:
  3696   002910                     
  3697                           ;DAC.c: 79:             selectModeDAC = 2;
  3698   002910  0E02               	movlw	2
  3699   002912  0100               	movlb	0	; () banked
  3700   002914  6FE5               	movwf	runDAC@selectModeDAC& (0+255),b
  3701   002916                     l8049:
  3702                           
  3703                           ;DAC.c: 81:         if(PORTAbits.RA3){
  3704   002916  A680               	btfss	128,3,c	;volatile
  3705   002918  EF90  F014         	goto	u9411
  3706   00291C  EF92  F014         	goto	u9410
  3707   002920                     u9411:
  3708   002920  EF95  F014         	goto	l8053
  3709   002924                     u9410:
  3710   002924                     
  3711                           ;DAC.c: 82:             selectModeDAC = 3;
  3712   002924  0E03               	movlw	3
  3713   002926  0100               	movlb	0	; () banked
  3714   002928  6FE5               	movwf	runDAC@selectModeDAC& (0+255),b
  3715   00292A                     l8053:
  3716                           
  3717                           ;DAC.c: 84:         if(PORTAbits.RA2){
  3718   00292A  A480               	btfss	128,2,c	;volatile
  3719   00292C  EF9A  F014         	goto	u9421
  3720   002930  EF9C  F014         	goto	u9420
  3721   002934                     u9421:
  3722   002934  EF9F  F014         	goto	l8057
  3723   002938                     u9420:
  3724   002938                     
  3725                           ;DAC.c: 85:             keepState = 0;
  3726   002938  0E00               	movlw	0
  3727   00293A  0100               	movlb	0	; () banked
  3728   00293C  6FE4               	movwf	runDAC@keepState& (0+255),b
  3729   00293E                     l8057:
  3730                           
  3731                           ;DAC.c: 87:         DACindex++;
  3732   00293E  0100               	movlb	0	; () banked
  3733   002940  2BE6               	incf	runDAC@DACindex& (0+255),f,b
  3734   002942                     
  3735                           ; BSR set to: 0
  3736                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  3737   002942  0E68               	movlw	104
  3738   002944  0100               	movlb	0	; () banked
  3739   002946  6FDA               	movwf	??_runDAC& (0+255),b
  3740   002948  0EE4               	movlw	228
  3741   00294A                     u9627:
  3742   00294A  2EE8               	decfsz	wreg,f,c
  3743   00294C  D7FE               	bra	u9627
  3744   00294E  2FDA               	decfsz	??_runDAC& (0+255),f,b
  3745   002950  D7FC               	bra	u9627
  3746   002952  F000               	nop	
  3747   002954                     l8061:
  3748                           
  3749                           ;DAC.c: 54:     while(keepState){
  3750   002954  0100               	movlb	0	; () banked
  3751   002956  51E4               	movf	runDAC@keepState& (0+255),w,b
  3752   002958  A4D8               	btfss	status,2,c
  3753   00295A  EFB1  F014         	goto	u9431
  3754   00295E  EFB3  F014         	goto	u9430
  3755   002962                     u9431:
  3756   002962  EF4C  F014         	goto	l8037
  3757   002966                     u9430:
  3758   002966                     
  3759                           ; BSR set to: 0
  3760   002966  0012               	return		;funcret
  3761   002968                     __end_of_runDAC:
  3762                           	callstack 0
  3763                           
  3764 ;; *************** function _sinf *****************
  3765 ;; Defined at:
  3766 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sinf.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  x               4   76[BANK0 ] float 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;  ix              4  110[BANK0 ] unsigned long 
  3771 ;;  y               4  106[BANK0 ] unsigned long 
  3772 ;;  __xc8_float_    4   88[BANK0 ] struct .
  3773 ;;  n               4   84[BANK0 ] long 
  3774 ;;  sign            2  100[BANK0 ] int 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  4   76[BANK0 ] float 
  3777 ;; Registers used:
  3778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3784 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;Total ram usage:       38 bytes
  3789 ;; Hardware stack levels used: 1
  3790 ;; Hardware stack levels required when called: 4
  3791 ;; This function calls:
  3792 ;;		___cosdf
  3793 ;;		___fladd
  3794 ;;		___flneg
  3795 ;;		___flsub
  3796 ;;		___rem_pio2f
  3797 ;;		___sindf
  3798 ;; This function is called by:
  3799 ;;		_runDAC
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text11
  3804   000B0A                     __ptext11:
  3805                           	callstack 0
  3806   000B0A                     _sinf:
  3807                           	callstack 25
  3808   000B0A  C0AC  F0B8         	movff	sinf@x,sinf@__xc8_float_word
  3809   000B0E  C0AD  F0B9         	movff	sinf@x+1,sinf@__xc8_float_word+1
  3810   000B12  C0AE  F0BA         	movff	sinf@x+2,sinf@__xc8_float_word+2
  3811   000B16  C0AF  F0BB         	movff	sinf@x+3,sinf@__xc8_float_word+3
  3812   000B1A  C0B8  F0CE         	movff	sinf@__xc8_float_word,sinf@ix
  3813   000B1E  C0B9  F0CF         	movff	sinf@__xc8_float_word+1,sinf@ix+1
  3814   000B22  C0BA  F0D0         	movff	sinf@__xc8_float_word+2,sinf@ix+2
  3815   000B26  C0BB  F0D1         	movff	sinf@__xc8_float_word+3,sinf@ix+3
  3816   000B2A  C0CE  F0B0         	movff	sinf@ix,??_sinf
  3817   000B2E  C0CF  F0B1         	movff	sinf@ix+1,??_sinf+1
  3818   000B32  C0D0  F0B2         	movff	sinf@ix+2,??_sinf+2
  3819   000B36  C0D1  F0B3         	movff	sinf@ix+3,??_sinf+3
  3820   000B3A  0E20               	movlw	32
  3821   000B3C  EFA6  F005         	goto	u8820
  3822   000B40                     u8825:
  3823   000B40  0100               	movlb	0	; () banked
  3824   000B42  90D8               	bcf	status,0,c
  3825   000B44  33B3               	rrcf	(??_sinf+3)& (0+255),f,b
  3826   000B46  33B2               	rrcf	(??_sinf+2)& (0+255),f,b
  3827   000B48  33B1               	rrcf	(??_sinf+1)& (0+255),f,b
  3828   000B4A  33B0               	rrcf	??_sinf& (0+255),f,b
  3829   000B4C                     u8820:
  3830   000B4C  2EE8               	decfsz	wreg,f,c
  3831   000B4E  EFA0  F005         	goto	u8825
  3832   000B52  C0B0  F0C4         	movff	??_sinf,sinf@sign
  3833   000B56  C0B1  F0C5         	movff	??_sinf+1,sinf@sign+1
  3834   000B5A                     
  3835                           ; BSR set to: 0
  3836   000B5A  9FD1               	bcf	(sinf@ix+3)& (0+255),7,b
  3837   000B5C                     
  3838                           ; BSR set to: 0
  3839   000B5C  0EDB               	movlw	219
  3840   000B5E  5DCE               	subwf	sinf@ix& (0+255),w,b
  3841   000B60  0E0F               	movlw	15
  3842   000B62  59CF               	subwfb	(sinf@ix+1)& (0+255),w,b
  3843   000B64  0E49               	movlw	73
  3844   000B66  59D0               	subwfb	(sinf@ix+2)& (0+255),w,b
  3845   000B68  0E3F               	movlw	63
  3846   000B6A  59D1               	subwfb	(sinf@ix+3)& (0+255),w,b
  3847   000B6C  B0D8               	btfsc	status,0,c
  3848   000B6E  EFBB  F005         	goto	u8831
  3849   000B72  EFBD  F005         	goto	u8830
  3850   000B76                     u8831:
  3851   000B76  EFE6  F005         	goto	l7639
  3852   000B7A                     u8830:
  3853   000B7A                     
  3854                           ; BSR set to: 0
  3855   000B7A  0E80               	movlw	128
  3856   000B7C  5DD0               	subwf	(sinf@ix+2)& (0+255),w,b
  3857   000B7E  0E39               	movlw	57
  3858   000B80  59D1               	subwfb	(sinf@ix+3)& (0+255),w,b
  3859   000B82  B0D8               	btfsc	status,0,c
  3860   000B84  EFC6  F005         	goto	u8841
  3861   000B88  EFC8  F005         	goto	u8840
  3862   000B8C                     u8841:
  3863   000B8C  EFD2  F005         	goto	l7635
  3864   000B90                     u8840:
  3865   000B90                     
  3866                           ; BSR set to: 0
  3867   000B90  C0AC  F0AC         	movff	sinf@x,?_sinf
  3868   000B94  C0AD  F0AD         	movff	sinf@x+1,?_sinf+1
  3869   000B98  C0AE  F0AE         	movff	sinf@x+2,?_sinf+2
  3870   000B9C  C0AF  F0AF         	movff	sinf@x+3,?_sinf+3
  3871   000BA0  EF61  F008         	goto	l1507
  3872   000BA4                     l7635:
  3873                           
  3874                           ; BSR set to: 0
  3875   000BA4  C0AC  F084         	movff	sinf@x,___sindf@x
  3876   000BA8  C0AD  F085         	movff	sinf@x+1,___sindf@x+1
  3877   000BAC  C0AE  F086         	movff	sinf@x+2,___sindf@x+2
  3878   000BB0  C0AF  F087         	movff	sinf@x+3,___sindf@x+3
  3879   000BB4  ECF3  F015         	call	___sindf	;wreg free
  3880   000BB8  C084  F0AC         	movff	?___sindf,?_sinf
  3881   000BBC  C085  F0AD         	movff	?___sindf+1,?_sinf+1
  3882   000BC0  C086  F0AE         	movff	?___sindf+2,?_sinf+2
  3883   000BC4  C087  F0AF         	movff	?___sindf+3,?_sinf+3
  3884   000BC8  EF61  F008         	goto	l1507
  3885   000BCC                     l7639:
  3886                           
  3887                           ; BSR set to: 0
  3888   000BCC  0ED2               	movlw	210
  3889   000BCE  5DCE               	subwf	sinf@ix& (0+255),w,b
  3890   000BD0  0E53               	movlw	83
  3891   000BD2  59CF               	subwfb	(sinf@ix+1)& (0+255),w,b
  3892   000BD4  0E7B               	movlw	123
  3893   000BD6  59D0               	subwfb	(sinf@ix+2)& (0+255),w,b
  3894   000BD8  0E40               	movlw	64
  3895   000BDA  59D1               	subwfb	(sinf@ix+3)& (0+255),w,b
  3896   000BDC  B0D8               	btfsc	status,0,c
  3897   000BDE  EFF3  F005         	goto	u8851
  3898   000BE2  EFF5  F005         	goto	u8850
  3899   000BE6                     u8851:
  3900   000BE6  EFDA  F006         	goto	l7669
  3901   000BEA                     u8850:
  3902   000BEA                     
  3903                           ; BSR set to: 0
  3904   000BEA  0EE4               	movlw	228
  3905   000BEC  5DCE               	subwf	sinf@ix& (0+255),w,b
  3906   000BEE  0ECB               	movlw	203
  3907   000BF0  59CF               	subwfb	(sinf@ix+1)& (0+255),w,b
  3908   000BF2  0E16               	movlw	22
  3909   000BF4  59D0               	subwfb	(sinf@ix+2)& (0+255),w,b
  3910   000BF6  0E40               	movlw	64
  3911   000BF8  59D1               	subwfb	(sinf@ix+3)& (0+255),w,b
  3912   000BFA  B0D8               	btfsc	status,0,c
  3913   000BFC  EF02  F006         	goto	u8861
  3914   000C00  EF04  F006         	goto	u8860
  3915   000C04                     u8861:
  3916   000C04  EF73  F006         	goto	l7659
  3917   000C08                     u8860:
  3918   000C08                     
  3919                           ; BSR set to: 0
  3920   000C08  51C4               	movf	sinf@sign& (0+255),w,b
  3921   000C0A  11C5               	iorwf	(sinf@sign+1)& (0+255),w,b
  3922   000C0C  B4D8               	btfsc	status,2,c
  3923   000C0E  EF0B  F006         	goto	u8871
  3924   000C12  EF0D  F006         	goto	u8870
  3925   000C16                     u8871:
  3926   000C16  EF45  F006         	goto	l7653
  3927   000C1A                     u8870:
  3928   000C1A                     
  3929                           ; BSR set to: 0
  3930   000C1A  0EDB               	movlw	219
  3931   000C1C  6E4A               	movwf	___fladd@a^0,c
  3932   000C1E  0E0F               	movlw	15
  3933   000C20  6E4B               	movwf	(___fladd@a+1)^0,c
  3934   000C22  0EC9               	movlw	201
  3935   000C24  6E4C               	movwf	(___fladd@a+2)^0,c
  3936   000C26  0E3F               	movlw	63
  3937   000C28  6E4D               	movwf	(___fladd@a+3)^0,c
  3938   000C2A  C0AC  F046         	movff	sinf@x,___fladd@b
  3939   000C2E  C0AD  F047         	movff	sinf@x+1,___fladd@b+1
  3940   000C32  C0AE  F048         	movff	sinf@x+2,___fladd@b+2
  3941   000C36  C0AF  F049         	movff	sinf@x+3,___fladd@b+3
  3942   000C3A  EC62  F008         	call	___fladd	;wreg free
  3943   000C3E  C046  F0C6         	movff	?___fladd,_sinf$4161
  3944   000C42  C047  F0C7         	movff	?___fladd+1,_sinf$4161+1
  3945   000C46  C048  F0C8         	movff	?___fladd+2,_sinf$4161+2
  3946   000C4A  C049  F0C9         	movff	?___fladd+3,_sinf$4161+3
  3947   000C4E                     l7647:
  3948   000C4E  C0C6  F064         	movff	_sinf$4161,___cosdf@x
  3949   000C52  C0C7  F065         	movff	_sinf$4161+1,___cosdf@x+1
  3950   000C56  C0C8  F066         	movff	_sinf$4161+2,___cosdf@x+2
  3951   000C5A  C0C9  F067         	movff	_sinf$4161+3,___cosdf@x+3
  3952   000C5E  EC1A  F019         	call	___cosdf	;wreg free
  3953   000C62  C064  F080         	movff	?___cosdf,___flneg@f1
  3954   000C66  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  3955   000C6A  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  3956   000C6E  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  3957   000C72  EC5E  F025         	call	___flneg	;wreg free
  3958   000C76  C080  F0AC         	movff	?___flneg,?_sinf
  3959   000C7A  C081  F0AD         	movff	?___flneg+1,?_sinf+1
  3960   000C7E  C082  F0AE         	movff	?___flneg+2,?_sinf+2
  3961   000C82  C083  F0AF         	movff	?___flneg+3,?_sinf+3
  3962   000C86  EF61  F008         	goto	l1507
  3963   000C8A                     l7653:
  3964                           
  3965                           ; BSR set to: 0
  3966   000C8A  C0AC  F046         	movff	sinf@x,___fladd@b
  3967   000C8E  C0AD  F047         	movff	sinf@x+1,___fladd@b+1
  3968   000C92  C0AE  F048         	movff	sinf@x+2,___fladd@b+2
  3969   000C96  C0AF  F049         	movff	sinf@x+3,___fladd@b+3
  3970   000C9A  0EDB               	movlw	219
  3971   000C9C  6E4A               	movwf	___fladd@a^0,c
  3972   000C9E  0E0F               	movlw	15
  3973   000CA0  6E4B               	movwf	(___fladd@a+1)^0,c
  3974   000CA2  0EC9               	movlw	201
  3975   000CA4  6E4C               	movwf	(___fladd@a+2)^0,c
  3976   000CA6  0EBF               	movlw	191
  3977   000CA8  6E4D               	movwf	(___fladd@a+3)^0,c
  3978   000CAA  EC62  F008         	call	___fladd	;wreg free
  3979   000CAE  C046  F0C6         	movff	?___fladd,_sinf$4161
  3980   000CB2  C047  F0C7         	movff	?___fladd+1,_sinf$4161+1
  3981   000CB6  C048  F0C8         	movff	?___fladd+2,_sinf$4161+2
  3982   000CBA  C049  F0C9         	movff	?___fladd+3,_sinf$4161+3
  3983   000CBE                     l7655:
  3984   000CBE  C0C6  F064         	movff	_sinf$4161,___cosdf@x
  3985   000CC2  C0C7  F065         	movff	_sinf$4161+1,___cosdf@x+1
  3986   000CC6  C0C8  F066         	movff	_sinf$4161+2,___cosdf@x+2
  3987   000CCA  C0C9  F067         	movff	_sinf$4161+3,___cosdf@x+3
  3988   000CCE  EC1A  F019         	call	___cosdf	;wreg free
  3989   000CD2  C064  F0AC         	movff	?___cosdf,?_sinf
  3990   000CD6  C065  F0AD         	movff	?___cosdf+1,?_sinf+1
  3991   000CDA  C066  F0AE         	movff	?___cosdf+2,?_sinf+2
  3992   000CDE  C067  F0AF         	movff	?___cosdf+3,?_sinf+3
  3993   000CE2  EF61  F008         	goto	l1507
  3994   000CE6                     l7659:
  3995                           
  3996                           ; BSR set to: 0
  3997   000CE6  51C4               	movf	sinf@sign& (0+255),w,b
  3998   000CE8  11C5               	iorwf	(sinf@sign+1)& (0+255),w,b
  3999   000CEA  A4D8               	btfss	status,2,c
  4000   000CEC  EF7A  F006         	goto	u8881
  4001   000CF0  EF7C  F006         	goto	u8880
  4002   000CF4                     u8881:
  4003   000CF4  EFA2  F006         	goto	l7663
  4004   000CF8                     u8880:
  4005   000CF8                     
  4006                           ; BSR set to: 0
  4007   000CF8  0EDB               	movlw	219
  4008   000CFA  6E4A               	movwf	___fladd@a^0,c
  4009   000CFC  0E0F               	movlw	15
  4010   000CFE  6E4B               	movwf	(___fladd@a+1)^0,c
  4011   000D00  0E49               	movlw	73
  4012   000D02  6E4C               	movwf	(___fladd@a+2)^0,c
  4013   000D04  0EC0               	movlw	192
  4014   000D06  6E4D               	movwf	(___fladd@a+3)^0,c
  4015   000D08  C0AC  F046         	movff	sinf@x,___fladd@b
  4016   000D0C  C0AD  F047         	movff	sinf@x+1,___fladd@b+1
  4017   000D10  C0AE  F048         	movff	sinf@x+2,___fladd@b+2
  4018   000D14  C0AF  F049         	movff	sinf@x+3,___fladd@b+3
  4019   000D18  EC62  F008         	call	___fladd	;wreg free
  4020   000D1C  C046  F080         	movff	?___fladd,___flneg@f1
  4021   000D20  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  4022   000D24  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  4023   000D28  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  4024   000D2C  EC5E  F025         	call	___flneg	;wreg free
  4025   000D30  C080  F0BC         	movff	?___flneg,_sinf$3872
  4026   000D34  C081  F0BD         	movff	?___flneg+1,_sinf$3872+1
  4027   000D38  C082  F0BE         	movff	?___flneg+2,_sinf$3872+2
  4028   000D3C  C083  F0BF         	movff	?___flneg+3,_sinf$3872+3
  4029   000D40  EFC6  F006         	goto	l7665
  4030   000D44                     l7663:
  4031                           
  4032                           ; BSR set to: 0
  4033   000D44  0EDB               	movlw	219
  4034   000D46  6E4A               	movwf	___fladd@a^0,c
  4035   000D48  0E0F               	movlw	15
  4036   000D4A  6E4B               	movwf	(___fladd@a+1)^0,c
  4037   000D4C  0E49               	movlw	73
  4038   000D4E  6E4C               	movwf	(___fladd@a+2)^0,c
  4039   000D50  0E40               	movlw	64
  4040   000D52  6E4D               	movwf	(___fladd@a+3)^0,c
  4041   000D54  C0AC  F046         	movff	sinf@x,___fladd@b
  4042   000D58  C0AD  F047         	movff	sinf@x+1,___fladd@b+1
  4043   000D5C  C0AE  F048         	movff	sinf@x+2,___fladd@b+2
  4044   000D60  C0AF  F049         	movff	sinf@x+3,___fladd@b+3
  4045   000D64  EC62  F008         	call	___fladd	;wreg free
  4046   000D68  C046  F080         	movff	?___fladd,___flneg@f1
  4047   000D6C  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  4048   000D70  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  4049   000D74  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  4050   000D78  EC5E  F025         	call	___flneg	;wreg free
  4051   000D7C  C080  F0BC         	movff	?___flneg,_sinf$3872
  4052   000D80  C081  F0BD         	movff	?___flneg+1,_sinf$3872+1
  4053   000D84  C082  F0BE         	movff	?___flneg+2,_sinf$3872+2
  4054   000D88  C083  F0BF         	movff	?___flneg+3,_sinf$3872+3
  4055   000D8C                     l7665:
  4056   000D8C  C0BC  F084         	movff	_sinf$3872,___sindf@x
  4057   000D90  C0BD  F085         	movff	_sinf$3872+1,___sindf@x+1
  4058   000D94  C0BE  F086         	movff	_sinf$3872+2,___sindf@x+2
  4059   000D98  C0BF  F087         	movff	_sinf$3872+3,___sindf@x+3
  4060   000D9C  ECF3  F015         	call	___sindf	;wreg free
  4061   000DA0  C084  F0AC         	movff	?___sindf,?_sinf
  4062   000DA4  C085  F0AD         	movff	?___sindf+1,?_sinf+1
  4063   000DA8  C086  F0AE         	movff	?___sindf+2,?_sinf+2
  4064   000DAC  C087  F0AF         	movff	?___sindf+3,?_sinf+3
  4065   000DB0  EF61  F008         	goto	l1507
  4066   000DB4                     l7669:
  4067                           
  4068                           ; BSR set to: 0
  4069   000DB4  0ED6               	movlw	214
  4070   000DB6  5DCE               	subwf	sinf@ix& (0+255),w,b
  4071   000DB8  0E31               	movlw	49
  4072   000DBA  59CF               	subwfb	(sinf@ix+1)& (0+255),w,b
  4073   000DBC  0EE2               	movlw	226
  4074   000DBE  59D0               	subwfb	(sinf@ix+2)& (0+255),w,b
  4075   000DC0  0E40               	movlw	64
  4076   000DC2  59D1               	subwfb	(sinf@ix+3)& (0+255),w,b
  4077   000DC4  B0D8               	btfsc	status,0,c
  4078   000DC6  EFE7  F006         	goto	u8891
  4079   000DCA  EFE9  F006         	goto	u8890
  4080   000DCE                     u8891:
  4081   000DCE  EF8C  F007         	goto	l7699
  4082   000DD2                     u8890:
  4083   000DD2                     
  4084                           ; BSR set to: 0
  4085   000DD2  0EE0               	movlw	224
  4086   000DD4  5DCE               	subwf	sinf@ix& (0+255),w,b
  4087   000DD6  0EED               	movlw	237
  4088   000DD8  59CF               	subwfb	(sinf@ix+1)& (0+255),w,b
  4089   000DDA  0EAF               	movlw	175
  4090   000DDC  59D0               	subwfb	(sinf@ix+2)& (0+255),w,b
  4091   000DDE  0E40               	movlw	64
  4092   000DE0  59D1               	subwfb	(sinf@ix+3)& (0+255),w,b
  4093   000DE2  B0D8               	btfsc	status,0,c
  4094   000DE4  EFF6  F006         	goto	u8901
  4095   000DE8  EFF8  F006         	goto	u8900
  4096   000DEC                     u8901:
  4097   000DEC  EF39  F007         	goto	l7689
  4098   000DF0                     u8900:
  4099   000DF0                     
  4100                           ; BSR set to: 0
  4101   000DF0  51C4               	movf	sinf@sign& (0+255),w,b
  4102   000DF2  11C5               	iorwf	(sinf@sign+1)& (0+255),w,b
  4103   000DF4  B4D8               	btfsc	status,2,c
  4104   000DF6  EFFF  F006         	goto	u8911
  4105   000DFA  EF01  F007         	goto	u8910
  4106   000DFE                     u8911:
  4107   000DFE  EF1D  F007         	goto	l7683
  4108   000E02                     u8910:
  4109   000E02                     
  4110                           ; BSR set to: 0
  4111   000E02  C0AC  F046         	movff	sinf@x,___fladd@b
  4112   000E06  C0AD  F047         	movff	sinf@x+1,___fladd@b+1
  4113   000E0A  C0AE  F048         	movff	sinf@x+2,___fladd@b+2
  4114   000E0E  C0AF  F049         	movff	sinf@x+3,___fladd@b+3
  4115   000E12  0EE4               	movlw	228
  4116   000E14  6E4A               	movwf	___fladd@a^0,c
  4117   000E16  0ECB               	movlw	203
  4118   000E18  6E4B               	movwf	(___fladd@a+1)^0,c
  4119   000E1A  0E96               	movlw	150
  4120   000E1C  6E4C               	movwf	(___fladd@a+2)^0,c
  4121   000E1E  0E40               	movlw	64
  4122   000E20  6E4D               	movwf	(___fladd@a+3)^0,c
  4123   000E22  EC62  F008         	call	___fladd	;wreg free
  4124   000E26  C046  F0C6         	movff	?___fladd,_sinf$4161
  4125   000E2A  C047  F0C7         	movff	?___fladd+1,_sinf$4161+1
  4126   000E2E  C048  F0C8         	movff	?___fladd+2,_sinf$4161+2
  4127   000E32  C049  F0C9         	movff	?___fladd+3,_sinf$4161+3
  4128   000E36  EF5F  F006         	goto	l7655
  4129   000E3A                     l7683:
  4130                           
  4131                           ; BSR set to: 0
  4132   000E3A  0EE4               	movlw	228
  4133   000E3C  6E4A               	movwf	___fladd@a^0,c
  4134   000E3E  0ECB               	movlw	203
  4135   000E40  6E4B               	movwf	(___fladd@a+1)^0,c
  4136   000E42  0E96               	movlw	150
  4137   000E44  6E4C               	movwf	(___fladd@a+2)^0,c
  4138   000E46  0EC0               	movlw	192
  4139   000E48  6E4D               	movwf	(___fladd@a+3)^0,c
  4140   000E4A  C0AC  F046         	movff	sinf@x,___fladd@b
  4141   000E4E  C0AD  F047         	movff	sinf@x+1,___fladd@b+1
  4142   000E52  C0AE  F048         	movff	sinf@x+2,___fladd@b+2
  4143   000E56  C0AF  F049         	movff	sinf@x+3,___fladd@b+3
  4144   000E5A  EC62  F008         	call	___fladd	;wreg free
  4145   000E5E  C046  F0C6         	movff	?___fladd,_sinf$4161
  4146   000E62  C047  F0C7         	movff	?___fladd+1,_sinf$4161+1
  4147   000E66  C048  F0C8         	movff	?___fladd+2,_sinf$4161+2
  4148   000E6A  C049  F0C9         	movff	?___fladd+3,_sinf$4161+3
  4149   000E6E  EF27  F006         	goto	l7647
  4150   000E72                     l7689:
  4151                           
  4152                           ; BSR set to: 0
  4153   000E72  51C4               	movf	sinf@sign& (0+255),w,b
  4154   000E74  11C5               	iorwf	(sinf@sign+1)& (0+255),w,b
  4155   000E76  A4D8               	btfss	status,2,c
  4156   000E78  EF40  F007         	goto	u8921
  4157   000E7C  EF42  F007         	goto	u8920
  4158   000E80                     u8921:
  4159   000E80  EF5E  F007         	goto	l7693
  4160   000E84                     u8920:
  4161   000E84                     
  4162                           ; BSR set to: 0
  4163   000E84  C0AC  F046         	movff	sinf@x,___fladd@b
  4164   000E88  C0AD  F047         	movff	sinf@x+1,___fladd@b+1
  4165   000E8C  C0AE  F048         	movff	sinf@x+2,___fladd@b+2
  4166   000E90  C0AF  F049         	movff	sinf@x+3,___fladd@b+3
  4167   000E94  0EDB               	movlw	219
  4168   000E96  6E4A               	movwf	___fladd@a^0,c
  4169   000E98  0E0F               	movlw	15
  4170   000E9A  6E4B               	movwf	(___fladd@a+1)^0,c
  4171   000E9C  0EC9               	movlw	201
  4172   000E9E  6E4C               	movwf	(___fladd@a+2)^0,c
  4173   000EA0  0EC0               	movlw	192
  4174   000EA2  6E4D               	movwf	(___fladd@a+3)^0,c
  4175   000EA4  EC62  F008         	call	___fladd	;wreg free
  4176   000EA8  C046  F0C0         	movff	?___fladd,_sinf$3873
  4177   000EAC  C047  F0C1         	movff	?___fladd+1,_sinf$3873+1
  4178   000EB0  C048  F0C2         	movff	?___fladd+2,_sinf$3873+2
  4179   000EB4  C049  F0C3         	movff	?___fladd+3,_sinf$3873+3
  4180   000EB8  EF78  F007         	goto	l7695
  4181   000EBC                     l7693:
  4182                           
  4183                           ; BSR set to: 0
  4184   000EBC  C0AC  F046         	movff	sinf@x,___fladd@b
  4185   000EC0  C0AD  F047         	movff	sinf@x+1,___fladd@b+1
  4186   000EC4  C0AE  F048         	movff	sinf@x+2,___fladd@b+2
  4187   000EC8  C0AF  F049         	movff	sinf@x+3,___fladd@b+3
  4188   000ECC  0EDB               	movlw	219
  4189   000ECE  6E4A               	movwf	___fladd@a^0,c
  4190   000ED0  0E0F               	movlw	15
  4191   000ED2  6E4B               	movwf	(___fladd@a+1)^0,c
  4192   000ED4  0EC9               	movlw	201
  4193   000ED6  6E4C               	movwf	(___fladd@a+2)^0,c
  4194   000ED8  0E40               	movlw	64
  4195   000EDA  6E4D               	movwf	(___fladd@a+3)^0,c
  4196   000EDC  EC62  F008         	call	___fladd	;wreg free
  4197   000EE0  C046  F0C0         	movff	?___fladd,_sinf$3873
  4198   000EE4  C047  F0C1         	movff	?___fladd+1,_sinf$3873+1
  4199   000EE8  C048  F0C2         	movff	?___fladd+2,_sinf$3873+2
  4200   000EEC  C049  F0C3         	movff	?___fladd+3,_sinf$3873+3
  4201   000EF0                     l7695:
  4202   000EF0  C0C0  F084         	movff	_sinf$3873,___sindf@x
  4203   000EF4  C0C1  F085         	movff	_sinf$3873+1,___sindf@x+1
  4204   000EF8  C0C2  F086         	movff	_sinf$3873+2,___sindf@x+2
  4205   000EFC  C0C3  F087         	movff	_sinf$3873+3,___sindf@x+3
  4206   000F00  ECF3  F015         	call	___sindf	;wreg free
  4207   000F04  C084  F0AC         	movff	?___sindf,?_sinf
  4208   000F08  C085  F0AD         	movff	?___sindf+1,?_sinf+1
  4209   000F0C  C086  F0AE         	movff	?___sindf+2,?_sinf+2
  4210   000F10  C087  F0AF         	movff	?___sindf+3,?_sinf+3
  4211   000F14  EF61  F008         	goto	l1507
  4212   000F18                     l7699:
  4213                           
  4214                           ; BSR set to: 0
  4215   000F18  0E80               	movlw	128
  4216   000F1A  5DD0               	subwf	(sinf@ix+2)& (0+255),w,b
  4217   000F1C  0E7F               	movlw	127
  4218   000F1E  59D1               	subwfb	(sinf@ix+3)& (0+255),w,b
  4219   000F20  A0D8               	btfss	status,0,c
  4220   000F22  EF95  F007         	goto	u8931
  4221   000F26  EF97  F007         	goto	u8930
  4222   000F2A                     u8931:
  4223   000F2A  EFB3  F007         	goto	l7705
  4224   000F2E                     u8930:
  4225   000F2E                     
  4226                           ; BSR set to: 0
  4227   000F2E  C0AC  F064         	movff	sinf@x,___flsub@b
  4228   000F32  C0AD  F065         	movff	sinf@x+1,___flsub@b+1
  4229   000F36  C0AE  F066         	movff	sinf@x+2,___flsub@b+2
  4230   000F3A  C0AF  F067         	movff	sinf@x+3,___flsub@b+3
  4231   000F3E  C0AC  F068         	movff	sinf@x,___flsub@a
  4232   000F42  C0AD  F069         	movff	sinf@x+1,___flsub@a+1
  4233   000F46  C0AE  F06A         	movff	sinf@x+2,___flsub@a+2
  4234   000F4A  C0AF  F06B         	movff	sinf@x+3,___flsub@a+3
  4235   000F4E  ECB9  F024         	call	___flsub	;wreg free
  4236   000F52  C064  F0AC         	movff	?___flsub,?_sinf
  4237   000F56  C065  F0AD         	movff	?___flsub+1,?_sinf+1
  4238   000F5A  C066  F0AE         	movff	?___flsub+2,?_sinf+2
  4239   000F5E  C067  F0AF         	movff	?___flsub+3,?_sinf+3
  4240   000F62  EF61  F008         	goto	l1507
  4241   000F66                     l7705:
  4242                           
  4243                           ; BSR set to: 0
  4244   000F66  C0AC  F084         	movff	sinf@x,___rem_pio2f@x
  4245   000F6A  C0AD  F085         	movff	sinf@x+1,___rem_pio2f@x+1
  4246   000F6E  C0AE  F086         	movff	sinf@x+2,___rem_pio2f@x+2
  4247   000F72  C0AF  F087         	movff	sinf@x+3,___rem_pio2f@x+3
  4248   000F76  0ECA               	movlw	low sinf@y
  4249   000F78  6F88               	movwf	___rem_pio2f@y& (0+255),b
  4250   000F7A  0E00               	movlw	high sinf@y
  4251   000F7C  6F89               	movwf	(___rem_pio2f@y+1)& (0+255),b
  4252   000F7E  EC0C  F00D         	call	___rem_pio2f	;wreg free
  4253   000F82  0100               	movlb	0	; () banked
  4254   000F84  C084  F0B4         	movff	?___rem_pio2f,sinf@n
  4255   000F88  C085  F0B5         	movff	?___rem_pio2f+1,sinf@n+1
  4256   000F8C  0E00               	movlw	0
  4257   000F8E  BFB5               	btfsc	(sinf@n+1)& (0+255),7,b
  4258   000F90  0EFF               	movlw	-1
  4259   000F92  6FB6               	movwf	(sinf@n+2)& (0+255),b
  4260   000F94  6FB7               	movwf	(sinf@n+3)& (0+255),b
  4261   000F96  EF31  F008         	goto	l7725
  4262   000F9A                     l7707:
  4263                           
  4264                           ; BSR set to: 0
  4265   000F9A  C0CA  F084         	movff	sinf@y,___sindf@x
  4266   000F9E  C0CB  F085         	movff	sinf@y+1,___sindf@x+1
  4267   000FA2  C0CC  F086         	movff	sinf@y+2,___sindf@x+2
  4268   000FA6  C0CD  F087         	movff	sinf@y+3,___sindf@x+3
  4269   000FAA  ECF3  F015         	call	___sindf	;wreg free
  4270   000FAE  C084  F0AC         	movff	?___sindf,?_sinf
  4271   000FB2  C085  F0AD         	movff	?___sindf+1,?_sinf+1
  4272   000FB6  C086  F0AE         	movff	?___sindf+2,?_sinf+2
  4273   000FBA  C087  F0AF         	movff	?___sindf+3,?_sinf+3
  4274   000FBE  EF61  F008         	goto	l1507
  4275   000FC2                     l7711:
  4276                           
  4277                           ; BSR set to: 0
  4278   000FC2  C0CA  F064         	movff	sinf@y,___cosdf@x
  4279   000FC6  C0CB  F065         	movff	sinf@y+1,___cosdf@x+1
  4280   000FCA  C0CC  F066         	movff	sinf@y+2,___cosdf@x+2
  4281   000FCE  C0CD  F067         	movff	sinf@y+3,___cosdf@x+3
  4282   000FD2  EC1A  F019         	call	___cosdf	;wreg free
  4283   000FD6  C064  F0AC         	movff	?___cosdf,?_sinf
  4284   000FDA  C065  F0AD         	movff	?___cosdf+1,?_sinf+1
  4285   000FDE  C066  F0AE         	movff	?___cosdf+2,?_sinf+2
  4286   000FE2  C067  F0AF         	movff	?___cosdf+3,?_sinf+3
  4287   000FE6  EF61  F008         	goto	l1507
  4288   000FEA                     l7715:
  4289                           
  4290                           ; BSR set to: 0
  4291   000FEA  C0CA  F080         	movff	sinf@y,___flneg@f1
  4292   000FEE  C0CB  F081         	movff	sinf@y+1,___flneg@f1+1
  4293   000FF2  C0CC  F082         	movff	sinf@y+2,___flneg@f1+2
  4294   000FF6  C0CD  F083         	movff	sinf@y+3,___flneg@f1+3
  4295   000FFA  EC5E  F025         	call	___flneg	;wreg free
  4296   000FFE  C080  F084         	movff	?___flneg,___sindf@x
  4297   001002  C081  F085         	movff	?___flneg+1,___sindf@x+1
  4298   001006  C082  F086         	movff	?___flneg+2,___sindf@x+2
  4299   00100A  C083  F087         	movff	?___flneg+3,___sindf@x+3
  4300   00100E  ECF3  F015         	call	___sindf	;wreg free
  4301   001012  C084  F0AC         	movff	?___sindf,?_sinf
  4302   001016  C085  F0AD         	movff	?___sindf+1,?_sinf+1
  4303   00101A  C086  F0AE         	movff	?___sindf+2,?_sinf+2
  4304   00101E  C087  F0AF         	movff	?___sindf+3,?_sinf+3
  4305   001022  EF61  F008         	goto	l1507
  4306   001026                     l7719:
  4307                           
  4308                           ; BSR set to: 0
  4309   001026  C0CA  F064         	movff	sinf@y,___cosdf@x
  4310   00102A  C0CB  F065         	movff	sinf@y+1,___cosdf@x+1
  4311   00102E  C0CC  F066         	movff	sinf@y+2,___cosdf@x+2
  4312   001032  C0CD  F067         	movff	sinf@y+3,___cosdf@x+3
  4313   001036  EC1A  F019         	call	___cosdf	;wreg free
  4314   00103A  C064  F080         	movff	?___cosdf,___flneg@f1
  4315   00103E  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  4316   001042  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  4317   001046  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  4318   00104A  EC5E  F025         	call	___flneg	;wreg free
  4319   00104E  C080  F0AC         	movff	?___flneg,?_sinf
  4320   001052  C081  F0AD         	movff	?___flneg+1,?_sinf+1
  4321   001056  C082  F0AE         	movff	?___flneg+2,?_sinf+2
  4322   00105A  C083  F0AF         	movff	?___flneg+3,?_sinf+3
  4323   00105E  EF61  F008         	goto	l1507
  4324   001062                     l7725:
  4325                           
  4326                           ; BSR set to: 0
  4327   001062  0E03               	movlw	3
  4328   001064  15B4               	andwf	sinf@n& (0+255),w,b
  4329   001066  6FB0               	movwf	??_sinf& (0+255),b
  4330   001068  0E00               	movlw	0
  4331   00106A  15B5               	andwf	(sinf@n+1)& (0+255),w,b
  4332   00106C  6FB1               	movwf	(??_sinf+1)& (0+255),b
  4333   00106E  0E00               	movlw	0
  4334   001070  15B6               	andwf	(sinf@n+2)& (0+255),w,b
  4335   001072  6FB2               	movwf	(??_sinf+2)& (0+255),b
  4336   001074  0E00               	movlw	0
  4337   001076  15B7               	andwf	(sinf@n+3)& (0+255),w,b
  4338   001078  6FB3               	movwf	(??_sinf+3)& (0+255),b
  4339                           
  4340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4341                           ; Switch size 1, requested type "simple"
  4342                           ; Number of cases is 1, Range of values is 0 to 0
  4343                           ; switch strategies available:
  4344                           ; Name         Instructions Cycles
  4345                           ; simple_byte            4     3 (average)
  4346                           ;	Chosen strategy is simple_byte
  4347   00107A  51B3               	movf	(??_sinf+3)& (0+255),w,b
  4348   00107C  0A00               	xorlw	0	; case 0
  4349   00107E  B4D8               	btfsc	status,2,c
  4350   001080  EF5A  F008         	goto	l8453
  4351   001084  EF13  F008         	goto	l7719
  4352   001088                     l8451:
  4353                           
  4354                           ; BSR set to: 0
  4355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4356                           ; Switch size 1, requested type "simple"
  4357                           ; Number of cases is 1, Range of values is 0 to 0
  4358                           ; switch strategies available:
  4359                           ; Name         Instructions Cycles
  4360                           ; simple_byte            4     3 (average)
  4361                           ;	Chosen strategy is simple_byte
  4362   001088  51B1               	movf	(??_sinf+1)& (0+255),w,b
  4363   00108A  0A00               	xorlw	0	; case 0
  4364   00108C  B4D8               	btfsc	status,2,c
  4365   00108E  EF4B  F008         	goto	l8455
  4366   001092  EF13  F008         	goto	l7719
  4367   001096                     l8455:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ; Switch size 1, requested type "simple"
  4371                           ; Number of cases is 3, Range of values is 0 to 2
  4372                           ; switch strategies available:
  4373                           ; Name         Instructions Cycles
  4374                           ; simple_byte           10     6 (average)
  4375                           ;	Chosen strategy is simple_byte
  4376   001096  51B0               	movf	??_sinf& (0+255),w,b
  4377   001098  0A00               	xorlw	0	; case 0
  4378   00109A  B4D8               	btfsc	status,2,c
  4379   00109C  EFCD  F007         	goto	l7707
  4380   0010A0  0A01               	xorlw	1	; case 1
  4381   0010A2  B4D8               	btfsc	status,2,c
  4382   0010A4  EFE1  F007         	goto	l7711
  4383   0010A8  0A03               	xorlw	3	; case 2
  4384   0010AA  B4D8               	btfsc	status,2,c
  4385   0010AC  EFF5  F007         	goto	l7715
  4386   0010B0  EF13  F008         	goto	l7719
  4387   0010B4                     l8453:
  4388                           
  4389                           ; BSR set to: 0
  4390                           ; Switch size 1, requested type "simple"
  4391                           ; Number of cases is 1, Range of values is 0 to 0
  4392                           ; switch strategies available:
  4393                           ; Name         Instructions Cycles
  4394                           ; simple_byte            4     3 (average)
  4395                           ;	Chosen strategy is simple_byte
  4396   0010B4  51B2               	movf	(??_sinf+2)& (0+255),w,b
  4397   0010B6  0A00               	xorlw	0	; case 0
  4398   0010B8  B4D8               	btfsc	status,2,c
  4399   0010BA  EF44  F008         	goto	l8451
  4400   0010BE  EF13  F008         	goto	l7719
  4401   0010C2                     l1507:
  4402   0010C2  0012               	return		;funcret
  4403   0010C4                     __end_of_sinf:
  4404                           	callstack 0
  4405                           
  4406 ;; *************** function ___sindf *****************
  4407 ;; Defined at:
  4408 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__sindf.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  x               4   36[BANK0 ] float 
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;  z               4   64[BANK0 ] float 
  4413 ;;  s               4   60[BANK0 ] float 
  4414 ;;  w               4   44[BANK0 ] float 
  4415 ;;  r               4   40[BANK0 ] float 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  4   36[BANK0 ] float 
  4418 ;; Registers used:
  4419 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4425 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;Total ram usage:       32 bytes
  4430 ;; Hardware stack levels used: 1
  4431 ;; Hardware stack levels required when called: 2
  4432 ;; This function calls:
  4433 ;;		___fladd
  4434 ;;		___flmul
  4435 ;; This function is called by:
  4436 ;;		_sinf
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text12
  4441   002BE6                     __ptext12:
  4442                           	callstack 0
  4443   002BE6                     ___sindf:
  4444                           	callstack 26
  4445   002BE6  C084  F014         	movff	___sindf@x,___flmul@b
  4446   002BEA  C085  F015         	movff	___sindf@x+1,___flmul@b+1
  4447   002BEE  C086  F016         	movff	___sindf@x+2,___flmul@b+2
  4448   002BF2  C087  F017         	movff	___sindf@x+3,___flmul@b+3
  4449   002BF6  C084  F018         	movff	___sindf@x,___flmul@a
  4450   002BFA  C085  F019         	movff	___sindf@x+1,___flmul@a+1
  4451   002BFE  C086  F01A         	movff	___sindf@x+2,___flmul@a+2
  4452   002C02  C087  F01B         	movff	___sindf@x+3,___flmul@a+3
  4453   002C06  EC54  F00F         	call	___flmul	;wreg free
  4454   002C0A  C014  F0A0         	movff	?___flmul,___sindf@z
  4455   002C0E  C015  F0A1         	movff	?___flmul+1,___sindf@z+1
  4456   002C12  C016  F0A2         	movff	?___flmul+2,___sindf@z+2
  4457   002C16  C017  F0A3         	movff	?___flmul+3,___sindf@z+3
  4458   002C1A  C0A0  F014         	movff	___sindf@z,___flmul@b
  4459   002C1E  C0A1  F015         	movff	___sindf@z+1,___flmul@b+1
  4460   002C22  C0A2  F016         	movff	___sindf@z+2,___flmul@b+2
  4461   002C26  C0A3  F017         	movff	___sindf@z+3,___flmul@b+3
  4462   002C2A  C0A0  F018         	movff	___sindf@z,___flmul@a
  4463   002C2E  C0A1  F019         	movff	___sindf@z+1,___flmul@a+1
  4464   002C32  C0A2  F01A         	movff	___sindf@z+2,___flmul@a+2
  4465   002C36  C0A3  F01B         	movff	___sindf@z+3,___flmul@a+3
  4466   002C3A  EC54  F00F         	call	___flmul	;wreg free
  4467   002C3E  C014  F08C         	movff	?___flmul,___sindf@w
  4468   002C42  C015  F08D         	movff	?___flmul+1,___sindf@w+1
  4469   002C46  C016  F08E         	movff	?___flmul+2,___sindf@w+2
  4470   002C4A  C017  F08F         	movff	?___flmul+3,___sindf@w+3
  4471   002C4E  0E3C               	movlw	60
  4472   002C50  6E18               	movwf	___flmul@a^0,c
  4473   002C52  0E6C               	movlw	108
  4474   002C54  6E19               	movwf	(___flmul@a+1)^0,c
  4475   002C56  0E36               	movlw	54
  4476   002C58  6E1A               	movwf	(___flmul@a+2)^0,c
  4477   002C5A  0E36               	movlw	54
  4478   002C5C  6E1B               	movwf	(___flmul@a+3)^0,c
  4479   002C5E  C0A0  F014         	movff	___sindf@z,___flmul@b
  4480   002C62  C0A1  F015         	movff	___sindf@z+1,___flmul@b+1
  4481   002C66  C0A2  F016         	movff	___sindf@z+2,___flmul@b+2
  4482   002C6A  C0A3  F017         	movff	___sindf@z+3,___flmul@b+3
  4483   002C6E  EC54  F00F         	call	___flmul	;wreg free
  4484   002C72  C014  F046         	movff	?___flmul,___fladd@b
  4485   002C76  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4486   002C7A  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4487   002C7E  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4488   002C82  0ECF               	movlw	207
  4489   002C84  6E4A               	movwf	___fladd@a^0,c
  4490   002C86  0E07               	movlw	7
  4491   002C88  6E4B               	movwf	(___fladd@a+1)^0,c
  4492   002C8A  0E50               	movlw	80
  4493   002C8C  6E4C               	movwf	(___fladd@a+2)^0,c
  4494   002C8E  0EB9               	movlw	185
  4495   002C90  6E4D               	movwf	(___fladd@a+3)^0,c
  4496   002C92  EC62  F008         	call	___fladd	;wreg free
  4497   002C96  C046  F088         	movff	?___fladd,___sindf@r
  4498   002C9A  C047  F089         	movff	?___fladd+1,___sindf@r+1
  4499   002C9E  C048  F08A         	movff	?___fladd+2,___sindf@r+2
  4500   002CA2  C049  F08B         	movff	?___fladd+3,___sindf@r+3
  4501   002CA6  C0A0  F014         	movff	___sindf@z,___flmul@b
  4502   002CAA  C0A1  F015         	movff	___sindf@z+1,___flmul@b+1
  4503   002CAE  C0A2  F016         	movff	___sindf@z+2,___flmul@b+2
  4504   002CB2  C0A3  F017         	movff	___sindf@z+3,___flmul@b+3
  4505   002CB6  C084  F018         	movff	___sindf@x,___flmul@a
  4506   002CBA  C085  F019         	movff	___sindf@x+1,___flmul@a+1
  4507   002CBE  C086  F01A         	movff	___sindf@x+2,___flmul@a+2
  4508   002CC2  C087  F01B         	movff	___sindf@x+3,___flmul@a+3
  4509   002CC6  EC54  F00F         	call	___flmul	;wreg free
  4510   002CCA  C014  F09C         	movff	?___flmul,___sindf@s
  4511   002CCE  C015  F09D         	movff	?___flmul+1,___sindf@s+1
  4512   002CD2  C016  F09E         	movff	?___flmul+2,___sindf@s+2
  4513   002CD6  C017  F09F         	movff	?___flmul+3,___sindf@s+3
  4514   002CDA  0EAB               	movlw	171
  4515   002CDC  6E4A               	movwf	___fladd@a^0,c
  4516   002CDE  0EAA               	movlw	170
  4517   002CE0  6E4B               	movwf	(___fladd@a+1)^0,c
  4518   002CE2  0E2A               	movlw	42
  4519   002CE4  6E4C               	movwf	(___fladd@a+2)^0,c
  4520   002CE6  0EBE               	movlw	190
  4521   002CE8  6E4D               	movwf	(___fladd@a+3)^0,c
  4522   002CEA  0E84               	movlw	132
  4523   002CEC  6E18               	movwf	___flmul@a^0,c
  4524   002CEE  0E88               	movlw	136
  4525   002CF0  6E19               	movwf	(___flmul@a+1)^0,c
  4526   002CF2  0E08               	movlw	8
  4527   002CF4  6E1A               	movwf	(___flmul@a+2)^0,c
  4528   002CF6  0E3C               	movlw	60
  4529   002CF8  6E1B               	movwf	(___flmul@a+3)^0,c
  4530   002CFA  C0A0  F014         	movff	___sindf@z,___flmul@b
  4531   002CFE  C0A1  F015         	movff	___sindf@z+1,___flmul@b+1
  4532   002D02  C0A2  F016         	movff	___sindf@z+2,___flmul@b+2
  4533   002D06  C0A3  F017         	movff	___sindf@z+3,___flmul@b+3
  4534   002D0A  EC54  F00F         	call	___flmul	;wreg free
  4535   002D0E  C014  F046         	movff	?___flmul,___fladd@b
  4536   002D12  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4537   002D16  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4538   002D1A  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4539   002D1E  EC62  F008         	call	___fladd	;wreg free
  4540   002D22  C046  F090         	movff	?___fladd,___sindf$4166
  4541   002D26  C047  F091         	movff	?___fladd+1,___sindf$4166+1
  4542   002D2A  C048  F092         	movff	?___fladd+2,___sindf$4166+2
  4543   002D2E  C049  F093         	movff	?___fladd+3,___sindf$4166+3
  4544   002D32  C08C  F018         	movff	___sindf@w,___flmul@a
  4545   002D36  C08D  F019         	movff	___sindf@w+1,___flmul@a+1
  4546   002D3A  C08E  F01A         	movff	___sindf@w+2,___flmul@a+2
  4547   002D3E  C08F  F01B         	movff	___sindf@w+3,___flmul@a+3
  4548   002D42  C09C  F014         	movff	___sindf@s,___flmul@b
  4549   002D46  C09D  F015         	movff	___sindf@s+1,___flmul@b+1
  4550   002D4A  C09E  F016         	movff	___sindf@s+2,___flmul@b+2
  4551   002D4E  C09F  F017         	movff	___sindf@s+3,___flmul@b+3
  4552   002D52  EC54  F00F         	call	___flmul	;wreg free
  4553   002D56  C014  F094         	movff	?___flmul,___sindf$4167
  4554   002D5A  C015  F095         	movff	?___flmul+1,___sindf$4167+1
  4555   002D5E  C016  F096         	movff	?___flmul+2,___sindf$4167+2
  4556   002D62  C017  F097         	movff	?___flmul+3,___sindf$4167+3
  4557   002D66  C084  F04A         	movff	___sindf@x,___fladd@a
  4558   002D6A  C085  F04B         	movff	___sindf@x+1,___fladd@a+1
  4559   002D6E  C086  F04C         	movff	___sindf@x+2,___fladd@a+2
  4560   002D72  C087  F04D         	movff	___sindf@x+3,___fladd@a+3
  4561   002D76  C09C  F018         	movff	___sindf@s,___flmul@a
  4562   002D7A  C09D  F019         	movff	___sindf@s+1,___flmul@a+1
  4563   002D7E  C09E  F01A         	movff	___sindf@s+2,___flmul@a+2
  4564   002D82  C09F  F01B         	movff	___sindf@s+3,___flmul@a+3
  4565   002D86  C090  F014         	movff	___sindf$4166,___flmul@b
  4566   002D8A  C091  F015         	movff	___sindf$4166+1,___flmul@b+1
  4567   002D8E  C092  F016         	movff	___sindf$4166+2,___flmul@b+2
  4568   002D92  C093  F017         	movff	___sindf$4166+3,___flmul@b+3
  4569   002D96  EC54  F00F         	call	___flmul	;wreg free
  4570   002D9A  C014  F046         	movff	?___flmul,___fladd@b
  4571   002D9E  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4572   002DA2  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4573   002DA6  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4574   002DAA  EC62  F008         	call	___fladd	;wreg free
  4575   002DAE  C046  F098         	movff	?___fladd,___sindf$4168
  4576   002DB2  C047  F099         	movff	?___fladd+1,___sindf$4168+1
  4577   002DB6  C048  F09A         	movff	?___fladd+2,___sindf$4168+2
  4578   002DBA  C049  F09B         	movff	?___fladd+3,___sindf$4168+3
  4579   002DBE  C098  F046         	movff	___sindf$4168,___fladd@b
  4580   002DC2  C099  F047         	movff	___sindf$4168+1,___fladd@b+1
  4581   002DC6  C09A  F048         	movff	___sindf$4168+2,___fladd@b+2
  4582   002DCA  C09B  F049         	movff	___sindf$4168+3,___fladd@b+3
  4583   002DCE  C088  F018         	movff	___sindf@r,___flmul@a
  4584   002DD2  C089  F019         	movff	___sindf@r+1,___flmul@a+1
  4585   002DD6  C08A  F01A         	movff	___sindf@r+2,___flmul@a+2
  4586   002DDA  C08B  F01B         	movff	___sindf@r+3,___flmul@a+3
  4587   002DDE  C094  F014         	movff	___sindf$4167,___flmul@b
  4588   002DE2  C095  F015         	movff	___sindf$4167+1,___flmul@b+1
  4589   002DE6  C096  F016         	movff	___sindf$4167+2,___flmul@b+2
  4590   002DEA  C097  F017         	movff	___sindf$4167+3,___flmul@b+3
  4591   002DEE  EC54  F00F         	call	___flmul	;wreg free
  4592   002DF2  C014  F04A         	movff	?___flmul,___fladd@a
  4593   002DF6  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  4594   002DFA  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  4595   002DFE  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  4596   002E02  EC62  F008         	call	___fladd	;wreg free
  4597   002E06  C046  F084         	movff	?___fladd,?___sindf
  4598   002E0A  C047  F085         	movff	?___fladd+1,?___sindf+1
  4599   002E0E  C048  F086         	movff	?___fladd+2,?___sindf+2
  4600   002E12  C049  F087         	movff	?___fladd+3,?___sindf+3
  4601   002E16  0012               	return		;funcret
  4602   002E18                     __end_of___sindf:
  4603                           	callstack 0
  4604                           
  4605 ;; *************** function ___rem_pio2f *****************
  4606 ;; Defined at:
  4607 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__rem_pio2f.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  x               4   36[BANK0 ] float 
  4610 ;;  y               2   40[BANK0 ] PTR 
  4611 ;;		 -> sinf@y(4), 
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;  n               4   72[BANK0 ] long 
  4614 ;;  t               4   68[BANK0 ] float 
  4615 ;;  fn              4   64[BANK0 ] float 
  4616 ;;  u               4   56[BANK0 ] struct .
  4617 ;;  ix              4   50[BANK0 ] unsigned long 
  4618 ;;  ty              4   46[BANK0 ] [1]
  4619 ;;  tx              4    0        [1]
  4620 ;;  sign            2   54[BANK0 ] int 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  2   36[BANK0 ] int 
  4623 ;; Registers used:
  4624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4630 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4631 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;Total ram usage:       40 bytes
  4635 ;; Hardware stack levels used: 1
  4636 ;; Hardware stack levels required when called: 3
  4637 ;; This function calls:
  4638 ;;		___fladd
  4639 ;;		___flmul
  4640 ;;		___flneg
  4641 ;;		___flsub
  4642 ;;		___fltol
  4643 ;;		___xxtofl
  4644 ;;		_fabsf
  4645 ;; This function is called by:
  4646 ;;		_sinf
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	text13
  4651   001A18                     __ptext13:
  4652                           	callstack 0
  4653   001A18                     ___rem_pio2f:
  4654                           	callstack 25
  4655   001A18  C0EF  F098         	movff	___rem_pio2f@F532,___rem_pio2f@u
  4656   001A1C  C0F0  F099         	movff	___rem_pio2f@F532+1,___rem_pio2f@u+1
  4657   001A20  C0F1  F09A         	movff	___rem_pio2f@F532+2,___rem_pio2f@u+2
  4658   001A24  C0F2  F09B         	movff	___rem_pio2f@F532+3,___rem_pio2f@u+3
  4659   001A28  C084  F098         	movff	___rem_pio2f@x,___rem_pio2f@u
  4660   001A2C  C085  F099         	movff	___rem_pio2f@x+1,___rem_pio2f@u+1
  4661   001A30  C086  F09A         	movff	___rem_pio2f@x+2,___rem_pio2f@u+2
  4662   001A34  C087  F09B         	movff	___rem_pio2f@x+3,___rem_pio2f@u+3
  4663   001A38  C098  F08A         	movff	___rem_pio2f@u,??___rem_pio2f
  4664   001A3C  C099  F08B         	movff	___rem_pio2f@u+1,??___rem_pio2f+1
  4665   001A40  C09A  F08C         	movff	___rem_pio2f@u+2,??___rem_pio2f+2
  4666   001A44  C09B  F08D         	movff	___rem_pio2f@u+3,??___rem_pio2f+3
  4667   001A48  0E20               	movlw	32
  4668   001A4A  EF2D  F00D         	goto	u8670
  4669   001A4E                     u8675:
  4670   001A4E  0100               	movlb	0	; () banked
  4671   001A50  90D8               	bcf	status,0,c
  4672   001A52  338D               	rrcf	(??___rem_pio2f+3)& (0+255),f,b
  4673   001A54  338C               	rrcf	(??___rem_pio2f+2)& (0+255),f,b
  4674   001A56  338B               	rrcf	(??___rem_pio2f+1)& (0+255),f,b
  4675   001A58  338A               	rrcf	??___rem_pio2f& (0+255),f,b
  4676   001A5A                     u8670:
  4677   001A5A  2EE8               	decfsz	wreg,f,c
  4678   001A5C  EF27  F00D         	goto	u8675
  4679   001A60  C08A  F096         	movff	??___rem_pio2f,___rem_pio2f@sign
  4680   001A64  C08B  F097         	movff	??___rem_pio2f+1,___rem_pio2f@sign+1
  4681   001A68  0EFF               	movlw	255
  4682   001A6A  1598               	andwf	___rem_pio2f@u& (0+255),w,b
  4683   001A6C  6F92               	movwf	___rem_pio2f@ix& (0+255),b
  4684   001A6E  0EFF               	movlw	255
  4685   001A70  1599               	andwf	(___rem_pio2f@u+1)& (0+255),w,b
  4686   001A72  6F93               	movwf	(___rem_pio2f@ix+1)& (0+255),b
  4687   001A74  0EFF               	movlw	255
  4688   001A76  159A               	andwf	(___rem_pio2f@u+2)& (0+255),w,b
  4689   001A78  6F94               	movwf	(___rem_pio2f@ix+2)& (0+255),b
  4690   001A7A  0E7F               	movlw	127
  4691   001A7C  159B               	andwf	(___rem_pio2f@u+3)& (0+255),w,b
  4692   001A7E  6F95               	movwf	(___rem_pio2f@ix+3)& (0+255),b
  4693   001A80  0E80               	movlw	128
  4694   001A82  5D94               	subwf	(___rem_pio2f@ix+2)& (0+255),w,b
  4695   001A84  0E7F               	movlw	127
  4696   001A86  5995               	subwfb	(___rem_pio2f@ix+3)& (0+255),w,b
  4697   001A88  A0D8               	btfss	status,0,c
  4698   001A8A  EF49  F00D         	goto	u8681
  4699   001A8E  EF4B  F00D         	goto	u8680
  4700   001A92                     u8681:
  4701   001A92  EF70  F00D         	goto	l7543
  4702   001A96                     u8680:
  4703   001A96                     
  4704                           ; BSR set to: 0
  4705   001A96  C084  F064         	movff	___rem_pio2f@x,___flsub@b
  4706   001A9A  C085  F065         	movff	___rem_pio2f@x+1,___flsub@b+1
  4707   001A9E  C086  F066         	movff	___rem_pio2f@x+2,___flsub@b+2
  4708   001AA2  C087  F067         	movff	___rem_pio2f@x+3,___flsub@b+3
  4709   001AA6  C084  F068         	movff	___rem_pio2f@x,___flsub@a
  4710   001AAA  C085  F069         	movff	___rem_pio2f@x+1,___flsub@a+1
  4711   001AAE  C086  F06A         	movff	___rem_pio2f@x+2,___flsub@a+2
  4712   001AB2  C087  F06B         	movff	___rem_pio2f@x+3,___flsub@a+3
  4713   001AB6  ECB9  F024         	call	___flsub	;wreg free
  4714   001ABA  C088  FFD9         	movff	___rem_pio2f@y,fsr2l
  4715   001ABE  C089  FFDA         	movff	___rem_pio2f@y+1,fsr2h
  4716   001AC2  0100               	movlb	0	; () banked
  4717   001AC4  C064  FFDE         	movff	?___flsub,postinc2
  4718   001AC8  C065  FFDE         	movff	?___flsub+1,postinc2
  4719   001ACC  C066  FFDE         	movff	?___flsub+2,postinc2
  4720   001AD0  C067  FFDE         	movff	?___flsub+3,postinc2
  4721   001AD4                     
  4722                           ; BSR set to: 0
  4723   001AD4  0E00               	movlw	0
  4724   001AD6  6F85               	movwf	(?___rem_pio2f+1)& (0+255),b
  4725   001AD8  0E00               	movlw	0
  4726   001ADA  6F84               	movwf	?___rem_pio2f& (0+255),b
  4727   001ADC  EF53  F00F         	goto	l1559
  4728   001AE0                     l7543:
  4729                           
  4730                           ; BSR set to: 0
  4731   001AE0  0EDB               	movlw	219
  4732   001AE2  5D92               	subwf	___rem_pio2f@ix& (0+255),w,b
  4733   001AE4  0E0F               	movlw	15
  4734   001AE6  5993               	subwfb	(___rem_pio2f@ix+1)& (0+255),w,b
  4735   001AE8  0EC9               	movlw	201
  4736   001AEA  5994               	subwfb	(___rem_pio2f@ix+2)& (0+255),w,b
  4737   001AEC  0E4D               	movlw	77
  4738   001AEE  5995               	subwfb	(___rem_pio2f@ix+3)& (0+255),w,b
  4739   001AF0  B0D8               	btfsc	status,0,c
  4740   001AF2  EF7D  F00D         	goto	u8691
  4741   001AF6  EF7F  F00D         	goto	u8690
  4742   001AFA                     u8691:
  4743   001AFA  EF6F  F00E         	goto	l7563
  4744   001AFE                     u8690:
  4745   001AFE                     
  4746                           ; BSR set to: 0
  4747   001AFE  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  4748   001B02  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  4749   001B06  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  4750   001B0A  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  4751   001B0E  EC96  F025         	call	_fabsf	;wreg free
  4752   001B12  C006  F0A4         	movff	?_fabsf,___rem_pio2f@t
  4753   001B16  C007  F0A5         	movff	?_fabsf+1,___rem_pio2f@t+1
  4754   001B1A  C008  F0A6         	movff	?_fabsf+2,___rem_pio2f@t+2
  4755   001B1E  C009  F0A7         	movff	?_fabsf+3,___rem_pio2f@t+3
  4756   001B22  0E00               	movlw	0
  4757   001B24  6E4A               	movwf	___fladd@a^0,c
  4758   001B26  0E00               	movlw	0
  4759   001B28  6E4B               	movwf	(___fladd@a+1)^0,c
  4760   001B2A  0E00               	movlw	0
  4761   001B2C  6E4C               	movwf	(___fladd@a+2)^0,c
  4762   001B2E  0E3F               	movlw	63
  4763   001B30  6E4D               	movwf	(___fladd@a+3)^0,c
  4764   001B32  0E83               	movlw	131
  4765   001B34  6E18               	movwf	___flmul@a^0,c
  4766   001B36  0EF9               	movlw	249
  4767   001B38  6E19               	movwf	(___flmul@a+1)^0,c
  4768   001B3A  0E22               	movlw	34
  4769   001B3C  6E1A               	movwf	(___flmul@a+2)^0,c
  4770   001B3E  0E3F               	movlw	63
  4771   001B40  6E1B               	movwf	(___flmul@a+3)^0,c
  4772   001B42  C0A4  F014         	movff	___rem_pio2f@t,___flmul@b
  4773   001B46  C0A5  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  4774   001B4A  C0A6  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  4775   001B4E  C0A7  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  4776   001B52  EC54  F00F         	call	___flmul	;wreg free
  4777   001B56  C014  F046         	movff	?___flmul,___fladd@b
  4778   001B5A  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4779   001B5E  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4780   001B62  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4781   001B66  EC62  F008         	call	___fladd	;wreg free
  4782   001B6A  C046  F064         	movff	?___fladd,___fltol@f1
  4783   001B6E  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  4784   001B72  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  4785   001B76  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  4786   001B7A  EC75  F01E         	call	___fltol	;wreg free
  4787   001B7E  C064  F0A8         	movff	?___fltol,___rem_pio2f@n
  4788   001B82  C065  F0A9         	movff	?___fltol+1,___rem_pio2f@n+1
  4789   001B86  C066  F0AA         	movff	?___fltol+2,___rem_pio2f@n+2
  4790   001B8A  C067  F0AB         	movff	?___fltol+3,___rem_pio2f@n+3
  4791   001B8E  C0A8  F006         	movff	___rem_pio2f@n,___xxtofl@val
  4792   001B92  C0A9  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  4793   001B96  C0AA  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  4794   001B9A  C0AB  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  4795   001B9E  0E01               	movlw	1
  4796   001BA0  EC19  F01A         	call	___xxtofl
  4797   001BA4  C006  F0A0         	movff	?___xxtofl,___rem_pio2f@fn
  4798   001BA8  C007  F0A1         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  4799   001BAC  C008  F0A2         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  4800   001BB0  C009  F0A3         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  4801   001BB4  0EDA               	movlw	218
  4802   001BB6  6E18               	movwf	___flmul@a^0,c
  4803   001BB8  0E0F               	movlw	15
  4804   001BBA  6E19               	movwf	(___flmul@a+1)^0,c
  4805   001BBC  0EC9               	movlw	201
  4806   001BBE  6E1A               	movwf	(___flmul@a+2)^0,c
  4807   001BC0  0E3F               	movlw	63
  4808   001BC2  6E1B               	movwf	(___flmul@a+3)^0,c
  4809   001BC4  C0A0  F014         	movff	___rem_pio2f@fn,___flmul@b
  4810   001BC8  C0A1  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4811   001BCC  C0A2  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4812   001BD0  C0A3  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4813   001BD4  EC54  F00F         	call	___flmul	;wreg free
  4814   001BD8  C014  F068         	movff	?___flmul,___flsub@a
  4815   001BDC  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4816   001BE0  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4817   001BE4  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4818   001BE8  C0A4  F064         	movff	___rem_pio2f@t,___flsub@b
  4819   001BEC  C0A5  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  4820   001BF0  C0A6  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  4821   001BF4  C0A7  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  4822   001BF8  ECB9  F024         	call	___flsub	;wreg free
  4823   001BFC  C064  F09C         	movff	?___flsub,___rem_pio2f$4165
  4824   001C00  C065  F09D         	movff	?___flsub+1,___rem_pio2f$4165+1
  4825   001C04  C066  F09E         	movff	?___flsub+2,___rem_pio2f$4165+2
  4826   001C08  C067  F09F         	movff	?___flsub+3,___rem_pio2f$4165+3
  4827   001C0C  C09C  F064         	movff	___rem_pio2f$4165,___flsub@b
  4828   001C10  C09D  F065         	movff	___rem_pio2f$4165+1,___flsub@b+1
  4829   001C14  C09E  F066         	movff	___rem_pio2f$4165+2,___flsub@b+2
  4830   001C18  C09F  F067         	movff	___rem_pio2f$4165+3,___flsub@b+3
  4831   001C1C  0EA3               	movlw	163
  4832   001C1E  6E18               	movwf	___flmul@a^0,c
  4833   001C20  0E85               	movlw	133
  4834   001C22  6E19               	movwf	(___flmul@a+1)^0,c
  4835   001C24  0E88               	movlw	136
  4836   001C26  6E1A               	movwf	(___flmul@a+2)^0,c
  4837   001C28  0E32               	movlw	50
  4838   001C2A  6E1B               	movwf	(___flmul@a+3)^0,c
  4839   001C2C  C0A0  F014         	movff	___rem_pio2f@fn,___flmul@b
  4840   001C30  C0A1  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4841   001C34  C0A2  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4842   001C38  C0A3  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4843   001C3C  EC54  F00F         	call	___flmul	;wreg free
  4844   001C40  C014  F068         	movff	?___flmul,___flsub@a
  4845   001C44  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4846   001C48  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4847   001C4C  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4848   001C50  ECB9  F024         	call	___flsub	;wreg free
  4849   001C54  C088  FFD9         	movff	___rem_pio2f@y,fsr2l
  4850   001C58  C089  FFDA         	movff	___rem_pio2f@y+1,fsr2h
  4851   001C5C  0100               	movlb	0	; () banked
  4852   001C5E  C064  FFDE         	movff	?___flsub,postinc2
  4853   001C62  C065  FFDE         	movff	?___flsub+1,postinc2
  4854   001C66  C066  FFDE         	movff	?___flsub+2,postinc2
  4855   001C6A  C067  FFDE         	movff	?___flsub+3,postinc2
  4856   001C6E                     
  4857                           ; BSR set to: 0
  4858   001C6E  5196               	movf	___rem_pio2f@sign& (0+255),w,b
  4859   001C70  1197               	iorwf	(___rem_pio2f@sign+1)& (0+255),w,b
  4860   001C72  B4D8               	btfsc	status,2,c
  4861   001C74  EF3E  F00E         	goto	u8701
  4862   001C78  EF40  F00E         	goto	u8700
  4863   001C7C                     u8701:
  4864   001C7C  EF69  F00E         	goto	l1561
  4865   001C80                     u8700:
  4866   001C80                     
  4867                           ; BSR set to: 0
  4868   001C80  C088  FFD9         	movff	___rem_pio2f@y,fsr2l
  4869   001C84  C089  FFDA         	movff	___rem_pio2f@y+1,fsr2h
  4870   001C88  CFDE F080          	movff	postinc2,___flneg@f1
  4871   001C8C  CFDE F081          	movff	postinc2,___flneg@f1+1
  4872   001C90  CFDE F082          	movff	postinc2,___flneg@f1+2
  4873   001C94  CFDE F083          	movff	postinc2,___flneg@f1+3
  4874   001C98  EC5E  F025         	call	___flneg	;wreg free
  4875   001C9C  C088  FFD9         	movff	___rem_pio2f@y,fsr2l
  4876   001CA0  C089  FFDA         	movff	___rem_pio2f@y+1,fsr2h
  4877   001CA4  0100               	movlb	0	; () banked
  4878   001CA6  C080  FFDE         	movff	?___flneg,postinc2
  4879   001CAA  C081  FFDE         	movff	?___flneg+1,postinc2
  4880   001CAE  C082  FFDE         	movff	?___flneg+2,postinc2
  4881   001CB2  C083  FFDE         	movff	?___flneg+3,postinc2
  4882   001CB6                     l7559:
  4883                           
  4884                           ; BSR set to: 0
  4885   001CB6  C0A8  F08A         	movff	___rem_pio2f@n,??___rem_pio2f
  4886   001CBA  C0A9  F08B         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  4887   001CBE  1F8A               	comf	??___rem_pio2f& (0+255),f,b
  4888   001CC0  1F8B               	comf	(??___rem_pio2f+1)& (0+255),f,b
  4889   001CC2  4B8A               	infsnz	??___rem_pio2f& (0+255),f,b
  4890   001CC4  2B8B               	incf	(??___rem_pio2f+1)& (0+255),f,b
  4891   001CC6  C08A  F084         	movff	??___rem_pio2f,?___rem_pio2f
  4892   001CCA  C08B  F085         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  4893   001CCE  EF53  F00F         	goto	l1559
  4894   001CD2                     l1561:
  4895                           
  4896                           ; BSR set to: 0
  4897   001CD2  C0A8  F084         	movff	___rem_pio2f@n,?___rem_pio2f
  4898   001CD6  C0A9  F085         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  4899   001CDA  EF53  F00F         	goto	l1559
  4900   001CDE                     l7563:
  4901                           
  4902                           ; BSR set to: 0
  4903   001CDE  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  4904   001CE2  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  4905   001CE6  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  4906   001CEA  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  4907   001CEE  EC96  F025         	call	_fabsf	;wreg free
  4908   001CF2  C006  F0A4         	movff	?_fabsf,___rem_pio2f@t
  4909   001CF6  C007  F0A5         	movff	?_fabsf+1,___rem_pio2f@t+1
  4910   001CFA  C008  F0A6         	movff	?_fabsf+2,___rem_pio2f@t+2
  4911   001CFE  C009  F0A7         	movff	?_fabsf+3,___rem_pio2f@t+3
  4912   001D02  0E00               	movlw	0
  4913   001D04  6E4A               	movwf	___fladd@a^0,c
  4914   001D06  0E00               	movlw	0
  4915   001D08  6E4B               	movwf	(___fladd@a+1)^0,c
  4916   001D0A  0E00               	movlw	0
  4917   001D0C  6E4C               	movwf	(___fladd@a+2)^0,c
  4918   001D0E  0E3F               	movlw	63
  4919   001D10  6E4D               	movwf	(___fladd@a+3)^0,c
  4920   001D12  0E83               	movlw	131
  4921   001D14  6E18               	movwf	___flmul@a^0,c
  4922   001D16  0EF9               	movlw	249
  4923   001D18  6E19               	movwf	(___flmul@a+1)^0,c
  4924   001D1A  0E22               	movlw	34
  4925   001D1C  6E1A               	movwf	(___flmul@a+2)^0,c
  4926   001D1E  0E3F               	movlw	63
  4927   001D20  6E1B               	movwf	(___flmul@a+3)^0,c
  4928   001D22  C0A4  F014         	movff	___rem_pio2f@t,___flmul@b
  4929   001D26  C0A5  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  4930   001D2A  C0A6  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  4931   001D2E  C0A7  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  4932   001D32  EC54  F00F         	call	___flmul	;wreg free
  4933   001D36  C014  F046         	movff	?___flmul,___fladd@b
  4934   001D3A  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4935   001D3E  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4936   001D42  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4937   001D46  EC62  F008         	call	___fladd	;wreg free
  4938   001D4A  C046  F064         	movff	?___fladd,___fltol@f1
  4939   001D4E  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  4940   001D52  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  4941   001D56  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  4942   001D5A  EC75  F01E         	call	___fltol	;wreg free
  4943   001D5E  C064  F0A8         	movff	?___fltol,___rem_pio2f@n
  4944   001D62  C065  F0A9         	movff	?___fltol+1,___rem_pio2f@n+1
  4945   001D66  C066  F0AA         	movff	?___fltol+2,___rem_pio2f@n+2
  4946   001D6A  C067  F0AB         	movff	?___fltol+3,___rem_pio2f@n+3
  4947   001D6E  C0A8  F006         	movff	___rem_pio2f@n,___xxtofl@val
  4948   001D72  C0A9  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  4949   001D76  C0AA  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  4950   001D7A  C0AB  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  4951   001D7E  0E01               	movlw	1
  4952   001D80  EC19  F01A         	call	___xxtofl
  4953   001D84  C006  F0A0         	movff	?___xxtofl,___rem_pio2f@fn
  4954   001D88  C007  F0A1         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  4955   001D8C  C008  F0A2         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  4956   001D90  C009  F0A3         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  4957   001D94  0EDA               	movlw	218
  4958   001D96  6E18               	movwf	___flmul@a^0,c
  4959   001D98  0E0F               	movlw	15
  4960   001D9A  6E19               	movwf	(___flmul@a+1)^0,c
  4961   001D9C  0EC9               	movlw	201
  4962   001D9E  6E1A               	movwf	(___flmul@a+2)^0,c
  4963   001DA0  0E3F               	movlw	63
  4964   001DA2  6E1B               	movwf	(___flmul@a+3)^0,c
  4965   001DA4  C0A0  F014         	movff	___rem_pio2f@fn,___flmul@b
  4966   001DA8  C0A1  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4967   001DAC  C0A2  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4968   001DB0  C0A3  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4969   001DB4  EC54  F00F         	call	___flmul	;wreg free
  4970   001DB8  C014  F068         	movff	?___flmul,___flsub@a
  4971   001DBC  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4972   001DC0  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4973   001DC4  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4974   001DC8  C0A4  F064         	movff	___rem_pio2f@t,___flsub@b
  4975   001DCC  C0A5  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  4976   001DD0  C0A6  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  4977   001DD4  C0A7  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  4978   001DD8  ECB9  F024         	call	___flsub	;wreg free
  4979   001DDC  C064  F09C         	movff	?___flsub,___rem_pio2f$4165
  4980   001DE0  C065  F09D         	movff	?___flsub+1,___rem_pio2f$4165+1
  4981   001DE4  C066  F09E         	movff	?___flsub+2,___rem_pio2f$4165+2
  4982   001DE8  C067  F09F         	movff	?___flsub+3,___rem_pio2f$4165+3
  4983   001DEC  C09C  F064         	movff	___rem_pio2f$4165,___flsub@b
  4984   001DF0  C09D  F065         	movff	___rem_pio2f$4165+1,___flsub@b+1
  4985   001DF4  C09E  F066         	movff	___rem_pio2f$4165+2,___flsub@b+2
  4986   001DF8  C09F  F067         	movff	___rem_pio2f$4165+3,___flsub@b+3
  4987   001DFC  0EA3               	movlw	163
  4988   001DFE  6E18               	movwf	___flmul@a^0,c
  4989   001E00  0E85               	movlw	133
  4990   001E02  6E19               	movwf	(___flmul@a+1)^0,c
  4991   001E04  0E88               	movlw	136
  4992   001E06  6E1A               	movwf	(___flmul@a+2)^0,c
  4993   001E08  0E32               	movlw	50
  4994   001E0A  6E1B               	movwf	(___flmul@a+3)^0,c
  4995   001E0C  C0A0  F014         	movff	___rem_pio2f@fn,___flmul@b
  4996   001E10  C0A1  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4997   001E14  C0A2  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4998   001E18  C0A3  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4999   001E1C  EC54  F00F         	call	___flmul	;wreg free
  5000   001E20  C014  F068         	movff	?___flmul,___flsub@a
  5001   001E24  C015  F069         	movff	?___flmul+1,___flsub@a+1
  5002   001E28  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  5003   001E2C  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  5004   001E30  ECB9  F024         	call	___flsub	;wreg free
  5005   001E34  C064  F08E         	movff	?___flsub,___rem_pio2f@ty
  5006   001E38  C065  F08F         	movff	?___flsub+1,___rem_pio2f@ty+1
  5007   001E3C  C066  F090         	movff	?___flsub+2,___rem_pio2f@ty+2
  5008   001E40  C067  F091         	movff	?___flsub+3,___rem_pio2f@ty+3
  5009   001E44  0100               	movlb	0	; () banked
  5010   001E46  5196               	movf	___rem_pio2f@sign& (0+255),w,b
  5011   001E48  1197               	iorwf	(___rem_pio2f@sign+1)& (0+255),w,b
  5012   001E4A  B4D8               	btfsc	status,2,c
  5013   001E4C  EF2A  F00F         	goto	u8711
  5014   001E50  EF2C  F00F         	goto	u8710
  5015   001E54                     u8711:
  5016   001E54  EF45  F00F         	goto	l7581
  5017   001E58                     u8710:
  5018   001E58                     
  5019                           ; BSR set to: 0
  5020   001E58  C08E  F080         	movff	___rem_pio2f@ty,___flneg@f1
  5021   001E5C  C08F  F081         	movff	___rem_pio2f@ty+1,___flneg@f1+1
  5022   001E60  C090  F082         	movff	___rem_pio2f@ty+2,___flneg@f1+2
  5023   001E64  C091  F083         	movff	___rem_pio2f@ty+3,___flneg@f1+3
  5024   001E68  EC5E  F025         	call	___flneg	;wreg free
  5025   001E6C  C088  FFD9         	movff	___rem_pio2f@y,fsr2l
  5026   001E70  C089  FFDA         	movff	___rem_pio2f@y+1,fsr2h
  5027   001E74  0100               	movlb	0	; () banked
  5028   001E76  C080  FFDE         	movff	?___flneg,postinc2
  5029   001E7A  C081  FFDE         	movff	?___flneg+1,postinc2
  5030   001E7E  C082  FFDE         	movff	?___flneg+2,postinc2
  5031   001E82  C083  FFDE         	movff	?___flneg+3,postinc2
  5032   001E86  EF5B  F00E         	goto	l7559
  5033   001E8A                     l7581:
  5034                           
  5035                           ; BSR set to: 0
  5036   001E8A  C088  FFD9         	movff	___rem_pio2f@y,fsr2l
  5037   001E8E  C089  FFDA         	movff	___rem_pio2f@y+1,fsr2h
  5038   001E92  C08E  FFDE         	movff	___rem_pio2f@ty,postinc2
  5039   001E96  C08F  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  5040   001E9A  C090  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  5041   001E9E  C091  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  5042   001EA2  EF69  F00E         	goto	l1561
  5043   001EA6                     l1559:
  5044                           
  5045                           ; BSR set to: 0
  5046   001EA6  0012               	return		;funcret
  5047   001EA8                     __end_of___rem_pio2f:
  5048                           	callstack 0
  5049                           
  5050 ;; *************** function _fabsf *****************
  5051 ;; Defined at:
  5052 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fabsf.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;  x               4    5[COMRAM] float 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  u               4    9[COMRAM] struct .
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  4    5[COMRAM] float 
  5059 ;; Registers used:
  5060 ;;		status,2, status,0
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;Total ram usage:        8 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; Hardware stack levels required when called: 1
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		___rem_pio2f
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           	psect	text14
  5081   004B2C                     __ptext14:
  5082                           	callstack 0
  5083   004B2C                     _fabsf:
  5084                           	callstack 26
  5085   004B2C  C111  F00A         	movff	fabsf@F465,fabsf@u
  5086   004B30  C112  F00B         	movff	fabsf@F465+1,fabsf@u+1
  5087   004B34  C113  F00C         	movff	fabsf@F465+2,fabsf@u+2
  5088   004B38  C114  F00D         	movff	fabsf@F465+3,fabsf@u+3
  5089   004B3C  C006  F00A         	movff	fabsf@x,fabsf@u
  5090   004B40  C007  F00B         	movff	fabsf@x+1,fabsf@u+1
  5091   004B44  C008  F00C         	movff	fabsf@x+2,fabsf@u+2
  5092   004B48  C009  F00D         	movff	fabsf@x+3,fabsf@u+3
  5093   004B4C  9E0D               	bcf	(fabsf@u+3)^0,7,c
  5094   004B4E  C00A  F006         	movff	fabsf@u,?_fabsf
  5095   004B52  C00B  F007         	movff	fabsf@u+1,?_fabsf+1
  5096   004B56  C00C  F008         	movff	fabsf@u+2,?_fabsf+2
  5097   004B5A  C00D  F009         	movff	fabsf@u+3,?_fabsf+3
  5098   004B5E  0012               	return		;funcret
  5099   004B60                     __end_of_fabsf:
  5100                           	callstack 0
  5101                           
  5102 ;; *************** function ___cosdf *****************
  5103 ;; Defined at:
  5104 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__cosdf.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  x               4    4[BANK0 ] float 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  z               4   28[BANK0 ] float 
  5109 ;;  w               4   24[BANK0 ] float 
  5110 ;;  r               4    8[BANK0 ] float 
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  4    4[BANK0 ] float 
  5113 ;; Registers used:
  5114 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5120 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5121 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5123 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5124 ;;Total ram usage:       28 bytes
  5125 ;; Hardware stack levels used: 1
  5126 ;; Hardware stack levels required when called: 2
  5127 ;; This function calls:
  5128 ;;		___fladd
  5129 ;;		___flmul
  5130 ;; This function is called by:
  5131 ;;		_sinf
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           	psect	text15
  5136   003234                     __ptext15:
  5137                           	callstack 0
  5138   003234                     ___cosdf:
  5139                           	callstack 26
  5140   003234  C064  F014         	movff	___cosdf@x,___flmul@b
  5141   003238  C065  F015         	movff	___cosdf@x+1,___flmul@b+1
  5142   00323C  C066  F016         	movff	___cosdf@x+2,___flmul@b+2
  5143   003240  C067  F017         	movff	___cosdf@x+3,___flmul@b+3
  5144   003244  C064  F018         	movff	___cosdf@x,___flmul@a
  5145   003248  C065  F019         	movff	___cosdf@x+1,___flmul@a+1
  5146   00324C  C066  F01A         	movff	___cosdf@x+2,___flmul@a+2
  5147   003250  C067  F01B         	movff	___cosdf@x+3,___flmul@a+3
  5148   003254  EC54  F00F         	call	___flmul	;wreg free
  5149   003258  C014  F07C         	movff	?___flmul,___cosdf@z
  5150   00325C  C015  F07D         	movff	?___flmul+1,___cosdf@z+1
  5151   003260  C016  F07E         	movff	?___flmul+2,___cosdf@z+2
  5152   003264  C017  F07F         	movff	?___flmul+3,___cosdf@z+3
  5153   003268  C07C  F014         	movff	___cosdf@z,___flmul@b
  5154   00326C  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  5155   003270  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  5156   003274  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  5157   003278  C07C  F018         	movff	___cosdf@z,___flmul@a
  5158   00327C  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  5159   003280  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  5160   003284  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  5161   003288  EC54  F00F         	call	___flmul	;wreg free
  5162   00328C  C014  F078         	movff	?___flmul,___cosdf@w
  5163   003290  C015  F079         	movff	?___flmul+1,___cosdf@w+1
  5164   003294  C016  F07A         	movff	?___flmul+2,___cosdf@w+2
  5165   003298  C017  F07B         	movff	?___flmul+3,___cosdf@w+3
  5166   00329C  0E17               	movlw	23
  5167   00329E  6E18               	movwf	___flmul@a^0,c
  5168   0032A0  0E9A               	movlw	154
  5169   0032A2  6E19               	movwf	(___flmul@a+1)^0,c
  5170   0032A4  0ECC               	movlw	204
  5171   0032A6  6E1A               	movwf	(___flmul@a+2)^0,c
  5172   0032A8  0E37               	movlw	55
  5173   0032AA  6E1B               	movwf	(___flmul@a+3)^0,c
  5174   0032AC  C07C  F014         	movff	___cosdf@z,___flmul@b
  5175   0032B0  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  5176   0032B4  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  5177   0032B8  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  5178   0032BC  EC54  F00F         	call	___flmul	;wreg free
  5179   0032C0  C014  F046         	movff	?___flmul,___fladd@b
  5180   0032C4  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5181   0032C8  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5182   0032CC  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5183   0032D0  0E3F               	movlw	63
  5184   0032D2  6E4A               	movwf	___fladd@a^0,c
  5185   0032D4  0E04               	movlw	4
  5186   0032D6  6E4B               	movwf	(___fladd@a+1)^0,c
  5187   0032D8  0EB6               	movlw	182
  5188   0032DA  6E4C               	movwf	(___fladd@a+2)^0,c
  5189   0032DC  0EBA               	movlw	186
  5190   0032DE  6E4D               	movwf	(___fladd@a+3)^0,c
  5191   0032E0  EC62  F008         	call	___fladd	;wreg free
  5192   0032E4  C046  F068         	movff	?___fladd,___cosdf@r
  5193   0032E8  C047  F069         	movff	?___fladd+1,___cosdf@r+1
  5194   0032EC  C048  F06A         	movff	?___fladd+2,___cosdf@r+2
  5195   0032F0  C049  F06B         	movff	?___fladd+3,___cosdf@r+3
  5196   0032F4  0E00               	movlw	0
  5197   0032F6  6E4A               	movwf	___fladd@a^0,c
  5198   0032F8  0E00               	movlw	0
  5199   0032FA  6E4B               	movwf	(___fladd@a+1)^0,c
  5200   0032FC  0E80               	movlw	128
  5201   0032FE  6E4C               	movwf	(___fladd@a+2)^0,c
  5202   003300  0E3F               	movlw	63
  5203   003302  6E4D               	movwf	(___fladd@a+3)^0,c
  5204   003304  0E00               	movlw	0
  5205   003306  6E18               	movwf	___flmul@a^0,c
  5206   003308  0E00               	movlw	0
  5207   00330A  6E19               	movwf	(___flmul@a+1)^0,c
  5208   00330C  0E00               	movlw	0
  5209   00330E  6E1A               	movwf	(___flmul@a+2)^0,c
  5210   003310  0EBF               	movlw	191
  5211   003312  6E1B               	movwf	(___flmul@a+3)^0,c
  5212   003314  C07C  F014         	movff	___cosdf@z,___flmul@b
  5213   003318  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  5214   00331C  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  5215   003320  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  5216   003324  EC54  F00F         	call	___flmul	;wreg free
  5217   003328  C014  F046         	movff	?___flmul,___fladd@b
  5218   00332C  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5219   003330  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5220   003334  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5221   003338  EC62  F008         	call	___fladd	;wreg free
  5222   00333C  C046  F06C         	movff	?___fladd,___cosdf$4162
  5223   003340  C047  F06D         	movff	?___fladd+1,___cosdf$4162+1
  5224   003344  C048  F06E         	movff	?___fladd+2,___cosdf$4162+2
  5225   003348  C049  F06F         	movff	?___fladd+3,___cosdf$4162+3
  5226   00334C  C07C  F018         	movff	___cosdf@z,___flmul@a
  5227   003350  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  5228   003354  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  5229   003358  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  5230   00335C  C078  F014         	movff	___cosdf@w,___flmul@b
  5231   003360  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  5232   003364  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  5233   003368  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  5234   00336C  EC54  F00F         	call	___flmul	;wreg free
  5235   003370  C014  F070         	movff	?___flmul,___cosdf$4163
  5236   003374  C015  F071         	movff	?___flmul+1,___cosdf$4163+1
  5237   003378  C016  F072         	movff	?___flmul+2,___cosdf$4163+2
  5238   00337C  C017  F073         	movff	?___flmul+3,___cosdf$4163+3
  5239   003380  0E9F               	movlw	159
  5240   003382  6E18               	movwf	___flmul@a^0,c
  5241   003384  0EAA               	movlw	170
  5242   003386  6E19               	movwf	(___flmul@a+1)^0,c
  5243   003388  0E2A               	movlw	42
  5244   00338A  6E1A               	movwf	(___flmul@a+2)^0,c
  5245   00338C  0E3D               	movlw	61
  5246   00338E  6E1B               	movwf	(___flmul@a+3)^0,c
  5247   003390  C078  F014         	movff	___cosdf@w,___flmul@b
  5248   003394  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  5249   003398  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  5250   00339C  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  5251   0033A0  EC54  F00F         	call	___flmul	;wreg free
  5252   0033A4  C014  F04A         	movff	?___flmul,___fladd@a
  5253   0033A8  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  5254   0033AC  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  5255   0033B0  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  5256   0033B4  C06C  F046         	movff	___cosdf$4162,___fladd@b
  5257   0033B8  C06D  F047         	movff	___cosdf$4162+1,___fladd@b+1
  5258   0033BC  C06E  F048         	movff	___cosdf$4162+2,___fladd@b+2
  5259   0033C0  C06F  F049         	movff	___cosdf$4162+3,___fladd@b+3
  5260   0033C4  EC62  F008         	call	___fladd	;wreg free
  5261   0033C8  C046  F074         	movff	?___fladd,___cosdf$4164
  5262   0033CC  C047  F075         	movff	?___fladd+1,___cosdf$4164+1
  5263   0033D0  C048  F076         	movff	?___fladd+2,___cosdf$4164+2
  5264   0033D4  C049  F077         	movff	?___fladd+3,___cosdf$4164+3
  5265   0033D8  C074  F046         	movff	___cosdf$4164,___fladd@b
  5266   0033DC  C075  F047         	movff	___cosdf$4164+1,___fladd@b+1
  5267   0033E0  C076  F048         	movff	___cosdf$4164+2,___fladd@b+2
  5268   0033E4  C077  F049         	movff	___cosdf$4164+3,___fladd@b+3
  5269   0033E8  C068  F018         	movff	___cosdf@r,___flmul@a
  5270   0033EC  C069  F019         	movff	___cosdf@r+1,___flmul@a+1
  5271   0033F0  C06A  F01A         	movff	___cosdf@r+2,___flmul@a+2
  5272   0033F4  C06B  F01B         	movff	___cosdf@r+3,___flmul@a+3
  5273   0033F8  C070  F014         	movff	___cosdf$4163,___flmul@b
  5274   0033FC  C071  F015         	movff	___cosdf$4163+1,___flmul@b+1
  5275   003400  C072  F016         	movff	___cosdf$4163+2,___flmul@b+2
  5276   003404  C073  F017         	movff	___cosdf$4163+3,___flmul@b+3
  5277   003408  EC54  F00F         	call	___flmul	;wreg free
  5278   00340C  C014  F04A         	movff	?___flmul,___fladd@a
  5279   003410  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  5280   003414  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  5281   003418  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  5282   00341C  EC62  F008         	call	___fladd	;wreg free
  5283   003420  C046  F064         	movff	?___fladd,?___cosdf
  5284   003424  C047  F065         	movff	?___fladd+1,?___cosdf+1
  5285   003428  C048  F066         	movff	?___fladd+2,?___cosdf+2
  5286   00342C  C049  F067         	movff	?___fladd+3,?___cosdf+3
  5287   003430  0012               	return		;funcret
  5288   003432                     __end_of___cosdf:
  5289                           	callstack 0
  5290                           
  5291 ;; *************** function _printf *****************
  5292 ;; Defined at:
  5293 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;  fmt             2  116[BANK0 ] PTR const unsigned char 
  5296 ;;		 -> STR_22(17), STR_10(5), 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  ap              2  120[BANK0 ] PTR void [1]
  5299 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5300 ;;  ret             2    0        int 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  2  116[BANK0 ] int 
  5303 ;; Registers used:
  5304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5310 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5313 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;Total ram usage:        6 bytes
  5315 ;; Hardware stack levels used: 1
  5316 ;; Hardware stack levels required when called: 8
  5317 ;; This function calls:
  5318 ;;		_vfprintf
  5319 ;; This function is called by:
  5320 ;;		_runDAC
  5321 ;;		_runUART
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text16
  5326   004B90                     __ptext16:
  5327                           	callstack 0
  5328   004B90                     _printf:
  5329                           	callstack 21
  5330   004B90  0ED6               	movlw	low (?_printf+2)
  5331   004B92  0100               	movlb	0	; () banked
  5332   004B94  6FD8               	movwf	printf@ap& (0+255),b
  5333   004B96  0E00               	movlw	high (?_printf+2)
  5334   004B98  6FD9               	movwf	(printf@ap+1)& (0+255),b
  5335   004B9A                     
  5336                           ; BSR set to: 0
  5337   004B9A  0E00               	movlw	0
  5338   004B9C  6FCC               	movwf	vfprintf@fp& (0+255),b
  5339   004B9E  0E00               	movlw	0
  5340   004BA0  6FCD               	movwf	(vfprintf@fp+1)& (0+255),b
  5341   004BA2  C0D4  F0CE         	movff	printf@fmt,vfprintf@fmt
  5342   004BA6  C0D5  F0CF         	movff	printf@fmt+1,vfprintf@fmt+1
  5343   004BAA  0ED8               	movlw	low printf@ap
  5344   004BAC  6FD0               	movwf	vfprintf@ap& (0+255),b
  5345   004BAE  0E00               	movlw	high printf@ap
  5346   004BB0  6FD1               	movwf	(vfprintf@ap+1)& (0+255),b
  5347   004BB2  ECF0  F023         	call	_vfprintf	;wreg free
  5348   004BB6  0012               	return		;funcret
  5349   004BB8                     __end_of_printf:
  5350                           	callstack 0
  5351                           
  5352 ;; *************** function _SPI_write *****************
  5353 ;; Defined at:
  5354 ;;		line 93 in file "DAC.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;  data            1    wreg     unsigned char 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  data            1    7[COMRAM] unsigned char 
  5359 ;;  LSB             1    6[COMRAM] unsigned char 
  5360 ;;  MSB             1    5[COMRAM] unsigned char 
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  1    wreg      void 
  5363 ;; Registers used:
  5364 ;;		wreg, status,2, status,0
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5371 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5373 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5374 ;;Total ram usage:        3 bytes
  5375 ;; Hardware stack levels used: 1
  5376 ;; Hardware stack levels required when called: 1
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		_runDAC
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text17
  5385   004A7E                     __ptext17:
  5386                           	callstack 0
  5387   004A7E                     _SPI_write:
  5388                           	callstack 28
  5389                           
  5390                           ;incstack = 0
  5391                           ;SPI_write@data stored from wreg
  5392   004A7E  6E08               	movwf	SPI_write@data^0,c
  5393   004A80                     
  5394                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  5395   004A80  3808               	swapf	SPI_write@data^0,w,c
  5396   004A82  0B0F               	andlw	15
  5397   004A84  0930               	iorlw	48
  5398   004A86  6E06               	movwf	SPI_write@MSB^0,c
  5399                           
  5400                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  5401   004A88  3808               	swapf	SPI_write@data^0,w,c
  5402   004A8A  0BF0               	andlw	240
  5403   004A8C  6E07               	movwf	SPI_write@LSB^0,c
  5404   004A8E                     
  5405                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  5406   004A8E  968A               	bcf	138,3,c	;volatile
  5407   004A90                     
  5408                           ;DAC.c: 101:     SSP1BUF = MSB;
  5409   004A90  C006  FFC9         	movff	SPI_write@MSB,4041	;volatile
  5410   004A94                     l229:
  5411   004A94  A69E               	btfss	3998,3,c	;volatile
  5412   004A96  EF4F  F025         	goto	u8801
  5413   004A9A  EF51  F025         	goto	u8800
  5414   004A9E                     u8801:
  5415   004A9E  EF4A  F025         	goto	l229
  5416   004AA2                     u8800:
  5417   004AA2                     
  5418                           ;DAC.c: 103:     SSP1IF = 0;
  5419   004AA2  969E               	bcf	3998,3,c	;volatile
  5420                           
  5421                           ;DAC.c: 105:     SSP1BUF = LSB;
  5422   004AA4  C007  FFC9         	movff	SPI_write@LSB,4041	;volatile
  5423   004AA8                     l232:
  5424   004AA8  A69E               	btfss	3998,3,c	;volatile
  5425   004AAA  EF59  F025         	goto	u8811
  5426   004AAE  EF5B  F025         	goto	u8810
  5427   004AB2                     u8811:
  5428   004AB2  EF54  F025         	goto	l232
  5429   004AB6                     u8810:
  5430   004AB6                     
  5431                           ;DAC.c: 107:     SSP1IF = 0;
  5432   004AB6  969E               	bcf	3998,3,c	;volatile
  5433                           
  5434                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  5435   004AB8  868A               	bsf	138,3,c	;volatile
  5436   004ABA  0012               	return		;funcret
  5437   004ABC                     __end_of_SPI_write:
  5438                           	callstack 0
  5439                           
  5440 ;; *************** function _runADC *****************
  5441 ;; Defined at:
  5442 ;;		line 13 in file "ADC.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;		None
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;  text           17    2[BANK1 ] unsigned char [17]
  5447 ;;  voltage2        4   23[BANK1 ] float 
  5448 ;;  voltage1        4   19[BANK1 ] float 
  5449 ;;  pot2            2   29[BANK1 ] unsigned short 
  5450 ;;  pot1            2   27[BANK1 ] unsigned short 
  5451 ;;  keepState       1   31[BANK1 ] unsigned char 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  1    wreg      void 
  5454 ;; Registers used:
  5455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;      Totals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5465 ;;Total ram usage:       32 bytes
  5466 ;; Hardware stack levels used: 1
  5467 ;; Hardware stack levels required when called: 9
  5468 ;; This function calls:
  5469 ;;		_LCD_ShowString
  5470 ;;		___fldiv
  5471 ;;		___flmul
  5472 ;;		___xxtofl
  5473 ;;		_sprintf
  5474 ;; This function is called by:
  5475 ;;		_main
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           	psect	text18
  5480   00302E                     __ptext18:
  5481                           	callstack 0
  5482   00302E                     _runADC:
  5483                           	callstack 21
  5484   00302E                     
  5485                           ;ADC.c: 16: ANSELAbits.ANSA5 = 1;
  5486   00302E  010F               	movlb	15	; () banked
  5487   003030  8B38               	bsf	56,5,b	;volatile
  5488                           
  5489                           ;ADC.c: 17: ANSELEbits.ANSE0 = 1;
  5490   003032  813C               	bsf	60,0,b	;volatile
  5491                           
  5492                           ;ADC.c: 19: ADCON2bits.ADFM = 1;
  5493   003034  8EC0               	bsf	192,7,c	;volatile
  5494   003036                     
  5495                           ; BSR set to: 15
  5496                           ;ADC.c: 20: ADCON2bits.ADCS = 0b110;
  5497   003036  50C0               	movf	192,w,c	;volatile
  5498   003038  0BF8               	andlw	-8
  5499   00303A  0906               	iorlw	6
  5500   00303C  6EC0               	movwf	192,c	;volatile
  5501                           
  5502                           ;ADC.c: 21: ADCON2bits.ACQT = 0b110;
  5503   00303E  50C0               	movf	192,w,c	;volatile
  5504   003040  0BC7               	andlw	-57
  5505   003042  0930               	iorlw	48
  5506   003044  6EC0               	movwf	192,c	;volatile
  5507   003046                     
  5508                           ; BSR set to: 15
  5509                           ;ADC.c: 22: ADCON0bits.ADON = 1;
  5510   003046  80C2               	bsf	194,0,c	;volatile
  5511   003048                     
  5512                           ; BSR set to: 15
  5513                           ;ADC.c: 25: uint16_t pot1, pot2;;ADC.c: 26: float voltage1, voltage2;;ADC.c: 27: char te
      +                          xt[17] = "";
  5514   003048  EE21  F072         	lfsr	2,runADC@text
  5515   00304C  0E10               	movlw	16
  5516   00304E                     u9291:
  5517   00304E  6ADE               	clrf	postinc2,c
  5518   003050  06E8               	decf	wreg,f,c
  5519   003052  E2FD               	bc	u9291
  5520   003054                     
  5521                           ; BSR set to: 15
  5522                           ;ADC.c: 28: uint8_t keepState = 1;
  5523   003054  0E01               	movlw	1
  5524   003056  0101               	movlb	1	; () banked
  5525   003058  6F8F               	movwf	runADC@keepState& (0+255),b
  5526                           
  5527                           ;ADC.c: 30: while(keepState){
  5528   00305A  EF0F  F019         	goto	l425
  5529   00305E                     l7963:
  5530                           
  5531                           ; BSR set to: 1
  5532                           ;ADC.c: 32:     ADCON0bits.CHS = 5;
  5533   00305E  50C2               	movf	194,w,c	;volatile
  5534   003060  0B83               	andlw	-125
  5535   003062  0914               	iorlw	20
  5536   003064  6EC2               	movwf	194,c	;volatile
  5537   003066                     
  5538                           ; BSR set to: 1
  5539                           ;ADC.c: 33:     GODONE = 1;
  5540   003066  82C2               	bsf	4034,1,c	;volatile
  5541   003068                     l427:
  5542   003068  B2C2               	btfsc	4034,1,c	;volatile
  5543   00306A  EF39  F018         	goto	u9301
  5544   00306E  EF3B  F018         	goto	u9300
  5545   003072                     u9301:
  5546   003072  EF34  F018         	goto	l427
  5547   003076                     u9300:
  5548   003076                     
  5549                           ;ADC.c: 35:     pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  5550   003076  50C3               	movf	195,w,c	;volatile
  5551   003078  CFC4 F170          	movff	4036,??_runADC	;volatile
  5552   00307C  0101               	movlb	1	; () banked
  5553   00307E  6B71               	clrf	(??_runADC+1)& (0+255),b
  5554   003080  C170  F171         	movff	??_runADC,??_runADC+1
  5555   003084  6B70               	clrf	??_runADC& (0+255),b
  5556   003086  1170               	iorwf	??_runADC& (0+255),w,b
  5557   003088  6F8B               	movwf	runADC@pot1& (0+255),b
  5558   00308A  5171               	movf	(??_runADC+1)& (0+255),w,b
  5559   00308C  6F8C               	movwf	(runADC@pot1+1)& (0+255),b
  5560   00308E                     
  5561                           ; BSR set to: 1
  5562                           ;ADC.c: 36:     voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  5563   00308E  0E00               	movlw	0
  5564   003090  6E31               	movwf	___fldiv@a^0,c
  5565   003092  0EC0               	movlw	192
  5566   003094  6E32               	movwf	(___fldiv@a+1)^0,c
  5567   003096  0E7F               	movlw	127
  5568   003098  6E33               	movwf	(___fldiv@a+2)^0,c
  5569   00309A  0E44               	movlw	68
  5570   00309C  6E34               	movwf	(___fldiv@a+3)^0,c
  5571   00309E  C18B  F006         	movff	runADC@pot1,___xxtofl@val
  5572   0030A2  C18C  F007         	movff	runADC@pot1+1,___xxtofl@val+1
  5573   0030A6  6A08               	clrf	(___xxtofl@val+2)^0,c
  5574   0030A8  6A09               	clrf	(___xxtofl@val+3)^0,c
  5575   0030AA  0E00               	movlw	0
  5576   0030AC  EC19  F01A         	call	___xxtofl
  5577   0030B0  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5578   0030B4  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5579   0030B8  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5580   0030BC  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5581   0030C0  EC69  F011         	call	___fldiv	;wreg free
  5582   0030C4  C02D  F014         	movff	?___fldiv,___flmul@b
  5583   0030C8  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  5584   0030CC  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  5585   0030D0  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  5586   0030D4  0E33               	movlw	51
  5587   0030D6  6E18               	movwf	___flmul@a^0,c
  5588   0030D8  0E33               	movlw	51
  5589   0030DA  6E19               	movwf	(___flmul@a+1)^0,c
  5590   0030DC  0E53               	movlw	83
  5591   0030DE  6E1A               	movwf	(___flmul@a+2)^0,c
  5592   0030E0  0E40               	movlw	64
  5593   0030E2  6E1B               	movwf	(___flmul@a+3)^0,c
  5594   0030E4  EC54  F00F         	call	___flmul	;wreg free
  5595   0030E8  C014  F183         	movff	?___flmul,runADC@voltage1
  5596   0030EC  C015  F184         	movff	?___flmul+1,runADC@voltage1+1
  5597   0030F0  C016  F185         	movff	?___flmul+2,runADC@voltage1+2
  5598   0030F4  C017  F186         	movff	?___flmul+3,runADC@voltage1+3
  5599   0030F8                     
  5600                           ;ADC.c: 39:     ADCON0bits.CHS = 4;
  5601   0030F8  50C2               	movf	194,w,c	;volatile
  5602   0030FA  0B83               	andlw	-125
  5603   0030FC  0910               	iorlw	16
  5604   0030FE  6EC2               	movwf	194,c	;volatile
  5605   003100                     
  5606                           ;ADC.c: 40:     GODONE = 1;
  5607   003100  82C2               	bsf	4034,1,c	;volatile
  5608   003102                     l430:
  5609   003102  B2C2               	btfsc	4034,1,c	;volatile
  5610   003104  EF86  F018         	goto	u9311
  5611   003108  EF88  F018         	goto	u9310
  5612   00310C                     u9311:
  5613   00310C  EF81  F018         	goto	l430
  5614   003110                     u9310:
  5615   003110                     
  5616                           ;ADC.c: 42:     pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  5617   003110  50C3               	movf	195,w,c	;volatile
  5618   003112  CFC4 F170          	movff	4036,??_runADC	;volatile
  5619   003116  0101               	movlb	1	; () banked
  5620   003118  6B71               	clrf	(??_runADC+1)& (0+255),b
  5621   00311A  C170  F171         	movff	??_runADC,??_runADC+1
  5622   00311E  6B70               	clrf	??_runADC& (0+255),b
  5623   003120  1170               	iorwf	??_runADC& (0+255),w,b
  5624   003122  6F8D               	movwf	runADC@pot2& (0+255),b
  5625   003124  5171               	movf	(??_runADC+1)& (0+255),w,b
  5626   003126  6F8E               	movwf	(runADC@pot2+1)& (0+255),b
  5627   003128                     
  5628                           ; BSR set to: 1
  5629                           ;ADC.c: 43:     voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  5630   003128  0E00               	movlw	0
  5631   00312A  6E31               	movwf	___fldiv@a^0,c
  5632   00312C  0EC0               	movlw	192
  5633   00312E  6E32               	movwf	(___fldiv@a+1)^0,c
  5634   003130  0E7F               	movlw	127
  5635   003132  6E33               	movwf	(___fldiv@a+2)^0,c
  5636   003134  0E44               	movlw	68
  5637   003136  6E34               	movwf	(___fldiv@a+3)^0,c
  5638   003138  C18D  F006         	movff	runADC@pot2,___xxtofl@val
  5639   00313C  C18E  F007         	movff	runADC@pot2+1,___xxtofl@val+1
  5640   003140  6A08               	clrf	(___xxtofl@val+2)^0,c
  5641   003142  6A09               	clrf	(___xxtofl@val+3)^0,c
  5642   003144  0E00               	movlw	0
  5643   003146  EC19  F01A         	call	___xxtofl
  5644   00314A  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5645   00314E  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5646   003152  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5647   003156  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5648   00315A  EC69  F011         	call	___fldiv	;wreg free
  5649   00315E  C02D  F014         	movff	?___fldiv,___flmul@b
  5650   003162  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  5651   003166  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  5652   00316A  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  5653   00316E  0E33               	movlw	51
  5654   003170  6E18               	movwf	___flmul@a^0,c
  5655   003172  0E33               	movlw	51
  5656   003174  6E19               	movwf	(___flmul@a+1)^0,c
  5657   003176  0E53               	movlw	83
  5658   003178  6E1A               	movwf	(___flmul@a+2)^0,c
  5659   00317A  0E40               	movlw	64
  5660   00317C  6E1B               	movwf	(___flmul@a+3)^0,c
  5661   00317E  EC54  F00F         	call	___flmul	;wreg free
  5662   003182  C014  F187         	movff	?___flmul,runADC@voltage2
  5663   003186  C015  F188         	movff	?___flmul+1,runADC@voltage2+1
  5664   00318A  C016  F189         	movff	?___flmul+2,runADC@voltage2+2
  5665   00318E  C017  F18A         	movff	?___flmul+3,runADC@voltage2+3
  5666   003192                     
  5667                           ;ADC.c: 45:     sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  5668   003192  0E72               	movlw	low runADC@text
  5669   003194  0100               	movlb	0	; () banked
  5670   003196  6FD4               	movwf	sprintf@s& (0+255),b
  5671   003198  0E01               	movlw	high runADC@text
  5672   00319A  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  5673   00319C  0E1B               	movlw	low STR_21
  5674   00319E  6FD6               	movwf	sprintf@fmt& (0+255),b
  5675   0031A0  0EFF               	movlw	high STR_21
  5676   0031A2  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  5677   0031A4  C183  F0D8         	movff	runADC@voltage1,?_sprintf+4
  5678   0031A8  C184  F0D9         	movff	runADC@voltage1+1,?_sprintf+5
  5679   0031AC  C185  F0DA         	movff	runADC@voltage1+2,?_sprintf+6
  5680   0031B0  C186  F0DB         	movff	runADC@voltage1+3,?_sprintf+7
  5681   0031B4  C187  F0DC         	movff	runADC@voltage2,?_sprintf+8
  5682   0031B8  C188  F0DD         	movff	runADC@voltage2+1,?_sprintf+9
  5683   0031BC  C189  F0DE         	movff	runADC@voltage2+2,?_sprintf+10
  5684   0031C0  C18A  F0DF         	movff	runADC@voltage2+3,?_sprintf+11
  5685   0031C4  EC41  F024         	call	_sprintf	;wreg free
  5686   0031C8                     
  5687                           ;ADC.c: 46:     LCD_ShowString(2, text);
  5688   0031C8  0E72               	movlw	low runADC@text
  5689   0031CA  6E07               	movwf	LCD_ShowString@textData^0,c
  5690   0031CC  0E01               	movlw	high runADC@text
  5691   0031CE  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  5692   0031D0  0E02               	movlw	2
  5693   0031D2  EC62  F022         	call	_LCD_ShowString
  5694   0031D6                     
  5695                           ;ADC.c: 48:     if(PORTAbits.RA2){
  5696   0031D6  A480               	btfss	128,2,c	;volatile
  5697   0031D8  EFF0  F018         	goto	u9321
  5698   0031DC  EFF2  F018         	goto	u9320
  5699   0031E0                     u9321:
  5700   0031E0  EF0F  F019         	goto	l425
  5701   0031E4                     u9320:
  5702   0031E4                     
  5703                           ;ADC.c: 49:         _delay((unsigned long)((50)*(32E6/4000.0)));
  5704   0031E4  0E03               	movlw	3
  5705   0031E6  0101               	movlb	1	; () banked
  5706   0031E8  6F71               	movwf	(??_runADC+1)& (0+255),b
  5707   0031EA  0E08               	movlw	8
  5708   0031EC  6F70               	movwf	??_runADC& (0+255),b
  5709   0031EE  0E77               	movlw	119
  5710   0031F0                     u9637:
  5711   0031F0  2EE8               	decfsz	wreg,f,c
  5712   0031F2  D7FE               	bra	u9637
  5713   0031F4  2F70               	decfsz	??_runADC& (0+255),f,b
  5714   0031F6  D7FC               	bra	u9637
  5715   0031F8  2F71               	decfsz	(??_runADC+1)& (0+255),f,b
  5716   0031FA  D7FA               	bra	u9637
  5717   0031FC                     
  5718                           ;ADC.c: 50:         if(PORTAbits.RA2){
  5719   0031FC  A480               	btfss	128,2,c	;volatile
  5720   0031FE  EF03  F019         	goto	u9331
  5721   003202  EF05  F019         	goto	u9330
  5722   003206                     u9331:
  5723   003206  EF0F  F019         	goto	l425
  5724   00320A                     u9330:
  5725   00320A                     l435:
  5726   00320A  B480               	btfsc	128,2,c	;volatile
  5727   00320C  EF0A  F019         	goto	u9341
  5728   003210  EF0C  F019         	goto	u9340
  5729   003214                     u9341:
  5730   003214  EF05  F019         	goto	l435
  5731   003218                     u9340:
  5732   003218                     
  5733                           ;ADC.c: 52:             keepState = 0;
  5734   003218  0E00               	movlw	0
  5735   00321A  0101               	movlb	1	; () banked
  5736   00321C  6F8F               	movwf	runADC@keepState& (0+255),b
  5737   00321E                     l425:
  5738                           
  5739                           ;ADC.c: 30: while(keepState){
  5740   00321E  0101               	movlb	1	; () banked
  5741   003220  518F               	movf	runADC@keepState& (0+255),w,b
  5742   003222  A4D8               	btfss	status,2,c
  5743   003224  EF16  F019         	goto	u9351
  5744   003228  EF18  F019         	goto	u9350
  5745   00322C                     u9351:
  5746   00322C  EF2F  F018         	goto	l7963
  5747   003230                     u9350:
  5748   003230                     
  5749                           ; BSR set to: 1
  5750                           ;ADC.c: 58: ADCON0bits.ADON = 0;
  5751   003230  90C2               	bcf	194,0,c	;volatile
  5752   003232                     
  5753                           ; BSR set to: 1
  5754   003232  0012               	return		;funcret
  5755   003234                     __end_of_runADC:
  5756                           	callstack 0
  5757                           
  5758 ;; *************** function ___xxtofl *****************
  5759 ;; Defined at:
  5760 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;  sign            1    wreg     unsigned char 
  5763 ;;  val             4    5[COMRAM] long 
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;  sign            1   13[COMRAM] unsigned char 
  5766 ;;  arg             4   15[COMRAM] unsigned long 
  5767 ;;  exp             1   14[COMRAM] unsigned char 
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  4    5[COMRAM] unsigned char 
  5770 ;; Registers used:
  5771 ;;		wreg, status,2, status,0
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5777 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5781 ;;Total ram usage:       14 bytes
  5782 ;; Hardware stack levels used: 1
  5783 ;; Hardware stack levels required when called: 1
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_runDAC
  5788 ;;		_runADC
  5789 ;;		___rem_pio2f
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text19
  5794   003432                     __ptext19:
  5795                           	callstack 0
  5796   003432                     ___xxtofl:
  5797                           	callstack 26
  5798                           
  5799                           ; BSR set to: 1
  5800                           ;incstack = 0
  5801                           ;___xxtofl@sign stored from wreg
  5802   003432  6E0E               	movwf	___xxtofl@sign^0,c
  5803   003434  500E               	movf	___xxtofl@sign^0,w,c
  5804   003436  B4D8               	btfsc	status,2,c
  5805   003438  EF20  F01A         	goto	u8441
  5806   00343C  EF22  F01A         	goto	u8440
  5807   003440                     u8441:
  5808   003440  EF44  F01A         	goto	l1203
  5809   003444                     u8440:
  5810   003444  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  5811   003446  EF29  F01A         	goto	u8450
  5812   00344A  EF27  F01A         	goto	u8451
  5813   00344E                     u8451:
  5814   00344E  EF44  F01A         	goto	l1203
  5815   003452                     u8450:
  5816   003452  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  5817   003456  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  5818   00345A  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  5819   00345E  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  5820   003462  1E0A               	comf	??___xxtofl^0,f,c
  5821   003464  1E0B               	comf	(??___xxtofl+1)^0,f,c
  5822   003466  1E0C               	comf	(??___xxtofl+2)^0,f,c
  5823   003468  1E0D               	comf	(??___xxtofl+3)^0,f,c
  5824   00346A  2A0A               	incf	??___xxtofl^0,f,c
  5825   00346C  0E00               	movlw	0
  5826   00346E  220B               	addwfc	(??___xxtofl+1)^0,f,c
  5827   003470  220C               	addwfc	(??___xxtofl+2)^0,f,c
  5828   003472  220D               	addwfc	(??___xxtofl+3)^0,f,c
  5829   003474  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  5830   003478  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  5831   00347C  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  5832   003480  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  5833   003484  EF4C  F01A         	goto	l7335
  5834   003488                     l1203:
  5835   003488  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  5836   00348C  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5837   003490  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5838   003494  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5839   003498                     l7335:
  5840   003498  5006               	movf	___xxtofl@val^0,w,c
  5841   00349A  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  5842   00349C  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  5843   00349E  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  5844   0034A0  A4D8               	btfss	status,2,c
  5845   0034A2  EF55  F01A         	goto	u8461
  5846   0034A6  EF57  F01A         	goto	u8460
  5847   0034AA                     u8461:
  5848   0034AA  EF61  F01A         	goto	l7341
  5849   0034AE                     u8460:
  5850   0034AE  0E00               	movlw	0
  5851   0034B0  6E06               	movwf	?___xxtofl^0,c
  5852   0034B2  0E00               	movlw	0
  5853   0034B4  6E07               	movwf	(?___xxtofl+1)^0,c
  5854   0034B6  0E00               	movlw	0
  5855   0034B8  6E08               	movwf	(?___xxtofl+2)^0,c
  5856   0034BA  0E00               	movlw	0
  5857   0034BC  6E09               	movwf	(?___xxtofl+3)^0,c
  5858   0034BE  EFF2  F01A         	goto	l1206
  5859   0034C2                     l7341:
  5860   0034C2  0E96               	movlw	150
  5861   0034C4  6E0F               	movwf	___xxtofl@exp^0,c
  5862   0034C6  EF6B  F01A         	goto	l7345
  5863   0034CA                     l7343:
  5864   0034CA  2A0F               	incf	___xxtofl@exp^0,f,c
  5865   0034CC  90D8               	bcf	status,0,c
  5866   0034CE  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5867   0034D0  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5868   0034D2  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5869   0034D4  3210               	rrcf	___xxtofl@arg^0,f,c
  5870   0034D6                     l7345:
  5871   0034D6  0E00               	movlw	0
  5872   0034D8  1410               	andwf	___xxtofl@arg^0,w,c
  5873   0034DA  6E0A               	movwf	??___xxtofl^0,c
  5874   0034DC  0E00               	movlw	0
  5875   0034DE  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5876   0034E0  6E0B               	movwf	(??___xxtofl+1)^0,c
  5877   0034E2  0E00               	movlw	0
  5878   0034E4  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5879   0034E6  6E0C               	movwf	(??___xxtofl+2)^0,c
  5880   0034E8  0EFE               	movlw	254
  5881   0034EA  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5882   0034EC  6E0D               	movwf	(??___xxtofl+3)^0,c
  5883   0034EE  500A               	movf	??___xxtofl^0,w,c
  5884   0034F0  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5885   0034F2  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5886   0034F4  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5887   0034F6  A4D8               	btfss	status,2,c
  5888   0034F8  EF80  F01A         	goto	u8471
  5889   0034FC  EF82  F01A         	goto	u8470
  5890   003500                     u8471:
  5891   003500  EF65  F01A         	goto	l7343
  5892   003504                     u8470:
  5893   003504  EF90  F01A         	goto	l1210
  5894   003508                     l7347:
  5895   003508  2A0F               	incf	___xxtofl@exp^0,f,c
  5896   00350A  0E01               	movlw	1
  5897   00350C  2610               	addwf	___xxtofl@arg^0,f,c
  5898   00350E  0E00               	movlw	0
  5899   003510  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  5900   003512  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  5901   003514  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  5902   003516  90D8               	bcf	status,0,c
  5903   003518  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5904   00351A  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5905   00351C  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5906   00351E  3210               	rrcf	___xxtofl@arg^0,f,c
  5907   003520                     l1210:
  5908   003520  0E00               	movlw	0
  5909   003522  1410               	andwf	___xxtofl@arg^0,w,c
  5910   003524  6E0A               	movwf	??___xxtofl^0,c
  5911   003526  0E00               	movlw	0
  5912   003528  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5913   00352A  6E0B               	movwf	(??___xxtofl+1)^0,c
  5914   00352C  0E00               	movlw	0
  5915   00352E  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5916   003530  6E0C               	movwf	(??___xxtofl+2)^0,c
  5917   003532  0EFF               	movlw	255
  5918   003534  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5919   003536  6E0D               	movwf	(??___xxtofl+3)^0,c
  5920   003538  500A               	movf	??___xxtofl^0,w,c
  5921   00353A  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5922   00353C  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5923   00353E  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5924   003540  A4D8               	btfss	status,2,c
  5925   003542  EFA5  F01A         	goto	u8481
  5926   003546  EFA7  F01A         	goto	u8480
  5927   00354A                     u8481:
  5928   00354A  EF84  F01A         	goto	l7347
  5929   00354E                     u8480:
  5930   00354E  EFAF  F01A         	goto	l7355
  5931   003552                     l7353:
  5932   003552  060F               	decf	___xxtofl@exp^0,f,c
  5933   003554  90D8               	bcf	status,0,c
  5934   003556  3610               	rlcf	___xxtofl@arg^0,f,c
  5935   003558  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  5936   00355A  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  5937   00355C  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  5938   00355E                     l7355:
  5939   00355E  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  5940   003560  EFB4  F01A         	goto	u8491
  5941   003564  EFB6  F01A         	goto	u8490
  5942   003568                     u8491:
  5943   003568  EFBE  F01A         	goto	l1217
  5944   00356C                     u8490:
  5945   00356C  0E02               	movlw	2
  5946   00356E  600F               	cpfslt	___xxtofl@exp^0,c
  5947   003570  EFBC  F01A         	goto	u8501
  5948   003574  EFBE  F01A         	goto	u8500
  5949   003578                     u8501:
  5950   003578  EFA9  F01A         	goto	l7353
  5951   00357C                     u8500:
  5952   00357C                     l1217:
  5953   00357C  B00F               	btfsc	___xxtofl@exp^0,0,c
  5954   00357E  EFC3  F01A         	goto	u8511
  5955   003582  EFC5  F01A         	goto	u8510
  5956   003586                     u8511:
  5957   003586  EFC6  F01A         	goto	l7361
  5958   00358A                     u8510:
  5959   00358A  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  5960   00358C                     l7361:
  5961   00358C  90D8               	bcf	status,0,c
  5962   00358E  320F               	rrcf	___xxtofl@exp^0,f,c
  5963   003590  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  5964   003594  6A0B               	clrf	(??___xxtofl+1)^0,c
  5965   003596  6A0C               	clrf	(??___xxtofl+2)^0,c
  5966   003598  6A0D               	clrf	(??___xxtofl+3)^0,c
  5967   00359A  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  5968   00359E  6A0C               	clrf	(??___xxtofl+2)^0,c
  5969   0035A0  6A0B               	clrf	(??___xxtofl+1)^0,c
  5970   0035A2  6A0A               	clrf	??___xxtofl^0,c
  5971   0035A4  500A               	movf	??___xxtofl^0,w,c
  5972   0035A6  1210               	iorwf	___xxtofl@arg^0,f,c
  5973   0035A8  500B               	movf	(??___xxtofl+1)^0,w,c
  5974   0035AA  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  5975   0035AC  500C               	movf	(??___xxtofl+2)^0,w,c
  5976   0035AE  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  5977   0035B0  500D               	movf	(??___xxtofl+3)^0,w,c
  5978   0035B2  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  5979   0035B4  500E               	movf	___xxtofl@sign^0,w,c
  5980   0035B6  B4D8               	btfsc	status,2,c
  5981   0035B8  EFE0  F01A         	goto	u8521
  5982   0035BC  EFE2  F01A         	goto	u8520
  5983   0035C0                     u8521:
  5984   0035C0  EFEA  F01A         	goto	l7371
  5985   0035C4                     u8520:
  5986   0035C4  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  5987   0035C6  EFE9  F01A         	goto	u8530
  5988   0035CA  EFE7  F01A         	goto	u8531
  5989   0035CE                     u8531:
  5990   0035CE  EFEA  F01A         	goto	l7371
  5991   0035D2                     u8530:
  5992   0035D2  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  5993   0035D4                     l7371:
  5994   0035D4  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  5995   0035D8  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  5996   0035DC  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  5997   0035E0  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  5998   0035E4                     l1206:
  5999   0035E4  0012               	return		;funcret
  6000   0035E6                     __end_of___xxtofl:
  6001                           	callstack 0
  6002                           
  6003 ;; *************** function _moveDisplay *****************
  6004 ;; Defined at:
  6005 ;;		line 11 in file "menu.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;  menuI           1    wreg     unsigned char 
  6008 ;;  where           1  142[BANK0 ] unsigned char 
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;  menuI           1   52[BANK1 ] unsigned char 
  6011 ;;  menuItem2      17   19[BANK1 ] unsigned char [17]
  6012 ;;  menuItem1      17    2[BANK1 ] unsigned char [17]
  6013 ;;  menuItems      16   36[BANK1 ] PTR unsigned char [8]
  6014 ;;		 -> STR_18(1), STR_17(6), STR_16(5), STR_15(4), 
  6015 ;;		 -> STR_14(4), STR_13(4), STR_12(5), STR_11(5), 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  1    wreg      unsigned char 
  6018 ;; Registers used:
  6019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6025 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6026 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6027 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6028 ;;      Totals:         0       1      53       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6029 ;;Total ram usage:       54 bytes
  6030 ;; Hardware stack levels used: 1
  6031 ;; Hardware stack levels required when called: 9
  6032 ;; This function calls:
  6033 ;;		_LCD_Clear
  6034 ;;		_LCD_ShowString
  6035 ;;		_sprintf
  6036 ;; This function is called by:
  6037 ;;		_main
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text20
  6042   003BC8                     __ptext20:
  6043                           	callstack 0
  6044   003BC8                     _moveDisplay:
  6045                           	callstack 21
  6046                           
  6047                           ;incstack = 0
  6048                           ;moveDisplay@menuI stored from wreg
  6049   003BC8  0101               	movlb	1	; () banked
  6050   003BCA  6FA4               	movwf	moveDisplay@menuI& (0+255),b
  6051   003BCC                     
  6052                           ;menu.c: 12:     LCD_Clear();
  6053   003BCC  EC7B  F025         	call	_LCD_Clear	;wreg free
  6054   003BD0                     
  6055                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  6056   003BD0  EE21  F0A9         	lfsr	2,moveDisplay@F6948
  6057   003BD4  EE11  F094         	lfsr	1,moveDisplay@menuItems
  6058   003BD8  0E0F               	movlw	15
  6059   003BDA                     u9021:
  6060   003BDA  CFDB FFE3          	movff	plusw2,plusw1
  6061   003BDE  06E8               	decf	wreg,f,c
  6062   003BE0  E2FC               	bc	u9021
  6063                           
  6064                           ;menu.c: 14:     switch (where){
  6065   003BE2  EF09  F01E         	goto	l7799
  6066   003BE6                     l7789:
  6067                           
  6068                           ; BSR set to: 1
  6069                           ;menu.c: 18:             if(menuI<6){
  6070   003BE6  0E06               	movlw	6
  6071   003BE8  61A4               	cpfslt	moveDisplay@menuI& (0+255),b
  6072   003BEA  EFF9  F01D         	goto	u9031
  6073   003BEE  EFFB  F01D         	goto	u9030
  6074   003BF2                     u9031:
  6075   003BF2  EF24  F01E         	goto	l7801
  6076   003BF6                     u9030:
  6077   003BF6                     
  6078                           ; BSR set to: 1
  6079                           ;menu.c: 19:             menuI++;
  6080   003BF6  2BA4               	incf	moveDisplay@menuI& (0+255),f,b
  6081   003BF8  EF24  F01E         	goto	l7801
  6082   003BFC                     l7793:
  6083                           
  6084                           ; BSR set to: 1
  6085                           ;menu.c: 23:             if(menuI>0){
  6086   003BFC  51A4               	movf	moveDisplay@menuI& (0+255),w,b
  6087   003BFE  B4D8               	btfsc	status,2,c
  6088   003C00  EF04  F01E         	goto	u9041
  6089   003C04  EF06  F01E         	goto	u9040
  6090   003C08                     u9041:
  6091   003C08  EF24  F01E         	goto	l7801
  6092   003C0C                     u9040:
  6093   003C0C                     
  6094                           ; BSR set to: 1
  6095                           ;menu.c: 24:             menuI--;
  6096   003C0C  07A4               	decf	moveDisplay@menuI& (0+255),f,b
  6097   003C0E  EF24  F01E         	goto	l7801
  6098   003C12                     l7799:
  6099   003C12  0100               	movlb	0	; () banked
  6100   003C14  51EE               	movf	moveDisplay@where& (0+255),w,b
  6101   003C16  0101               	movlb	1	; () banked
  6102   003C18  6F70               	movwf	??_moveDisplay& (0+255),b
  6103   003C1A  6B71               	clrf	(??_moveDisplay+1)& (0+255),b
  6104                           
  6105                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6106                           ; Switch size 1, requested type "simple"
  6107                           ; Number of cases is 1, Range of values is 0 to 0
  6108                           ; switch strategies available:
  6109                           ; Name         Instructions Cycles
  6110                           ; simple_byte            4     3 (average)
  6111                           ;	Chosen strategy is simple_byte
  6112   003C1C  5171               	movf	(??_moveDisplay+1)& (0+255),w,b
  6113   003C1E  0A00               	xorlw	0	; case 0
  6114   003C20  B4D8               	btfsc	status,2,c
  6115   003C22  EF15  F01E         	goto	l8457
  6116   003C26  EF24  F01E         	goto	l7801
  6117   003C2A                     l8457:
  6118                           
  6119                           ; BSR set to: 1
  6120                           ; Switch size 1, requested type "simple"
  6121                           ; Number of cases is 3, Range of values is 0 to 2
  6122                           ; switch strategies available:
  6123                           ; Name         Instructions Cycles
  6124                           ; simple_byte           10     6 (average)
  6125                           ;	Chosen strategy is simple_byte
  6126   003C2A  5170               	movf	??_moveDisplay& (0+255),w,b
  6127   003C2C  0A00               	xorlw	0	; case 0
  6128   003C2E  B4D8               	btfsc	status,2,c
  6129   003C30  EF24  F01E         	goto	l7801
  6130   003C34  0A01               	xorlw	1	; case 1
  6131   003C36  B4D8               	btfsc	status,2,c
  6132   003C38  EFF3  F01D         	goto	l7789
  6133   003C3C  0A03               	xorlw	3	; case 2
  6134   003C3E  B4D8               	btfsc	status,2,c
  6135   003C40  EFFE  F01D         	goto	l7793
  6136   003C44  EF24  F01E         	goto	l7801
  6137   003C48                     l7801:
  6138                           
  6139                           ; BSR set to: 1
  6140                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  6141   003C48  0E72               	movlw	low moveDisplay@menuItem1
  6142   003C4A  0100               	movlb	0	; () banked
  6143   003C4C  6FD4               	movwf	sprintf@s& (0+255),b
  6144   003C4E  0E01               	movlw	high moveDisplay@menuItem1
  6145   003C50  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  6146   003C52  0ECD               	movlw	low STR_19
  6147   003C54  6FD6               	movwf	sprintf@fmt& (0+255),b
  6148   003C56  0EFF               	movlw	high STR_19
  6149   003C58  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  6150   003C5A  0E00               	movlw	0
  6151   003C5C  6FD9               	movwf	(?_sprintf+5)& (0+255),b
  6152   003C5E  0E0F               	movlw	15
  6153   003C60  6FD8               	movwf	(?_sprintf+4)& (0+255),b
  6154   003C62  0101               	movlb	1	; () banked
  6155   003C64  51A4               	movf	moveDisplay@menuI& (0+255),w,b
  6156   003C66  0D02               	mullw	2
  6157   003C68  0E94               	movlw	low moveDisplay@menuItems
  6158   003C6A  24F3               	addwf	243,w,c
  6159   003C6C  6ED9               	movwf	fsr2l,c
  6160   003C6E  0E01               	movlw	high moveDisplay@menuItems
  6161   003C70  20F4               	addwfc	prodh,w,c
  6162   003C72  6EDA               	movwf	fsr2h,c
  6163   003C74  CFDE F0DA          	movff	postinc2,?_sprintf+6
  6164   003C78  CFDD F0DB          	movff	postdec2,?_sprintf+7
  6165   003C7C  EC41  F024         	call	_sprintf	;wreg free
  6166                           
  6167                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  6168   003C80  0E83               	movlw	low moveDisplay@menuItem2
  6169   003C82  0100               	movlb	0	; () banked
  6170   003C84  6FD4               	movwf	sprintf@s& (0+255),b
  6171   003C86  0E01               	movlw	high moveDisplay@menuItem2
  6172   003C88  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  6173   003C8A  0ECE               	movlw	low (STR_19+1)
  6174   003C8C  6FD6               	movwf	sprintf@fmt& (0+255),b
  6175   003C8E  0EFF               	movlw	high (STR_19+1)
  6176   003C90  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  6177   003C92  0E00               	movlw	0
  6178   003C94  6FD9               	movwf	(?_sprintf+5)& (0+255),b
  6179   003C96  0E10               	movlw	16
  6180   003C98  6FD8               	movwf	(?_sprintf+4)& (0+255),b
  6181   003C9A  0101               	movlb	1	; () banked
  6182   003C9C  51A4               	movf	moveDisplay@menuI& (0+255),w,b
  6183   003C9E  6F70               	movwf	??_moveDisplay& (0+255),b
  6184   003CA0  6B71               	clrf	(??_moveDisplay+1)& (0+255),b
  6185   003CA2  90D8               	bcf	status,0,c
  6186   003CA4  3770               	rlcf	??_moveDisplay& (0+255),f,b
  6187   003CA6  3771               	rlcf	(??_moveDisplay+1)& (0+255),f,b
  6188   003CA8  0E02               	movlw	2
  6189   003CAA  2770               	addwf	??_moveDisplay& (0+255),f,b
  6190   003CAC  0E00               	movlw	0
  6191   003CAE  2371               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  6192   003CB0  0E94               	movlw	low moveDisplay@menuItems
  6193   003CB2  2570               	addwf	??_moveDisplay& (0+255),w,b
  6194   003CB4  6ED9               	movwf	fsr2l,c
  6195   003CB6  0E01               	movlw	high moveDisplay@menuItems
  6196   003CB8  2171               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  6197   003CBA  6EDA               	movwf	fsr2h,c
  6198   003CBC  CFDE F0DA          	movff	postinc2,?_sprintf+6
  6199   003CC0  CFDD F0DB          	movff	postdec2,?_sprintf+7
  6200   003CC4  EC41  F024         	call	_sprintf	;wreg free
  6201   003CC8                     
  6202                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  6203   003CC8  0E72               	movlw	low moveDisplay@menuItem1
  6204   003CCA  6E07               	movwf	LCD_ShowString@textData^0,c
  6205   003CCC  0E01               	movlw	high moveDisplay@menuItem1
  6206   003CCE  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  6207   003CD0  0E01               	movlw	1
  6208   003CD2  EC62  F022         	call	_LCD_ShowString
  6209   003CD6                     
  6210                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  6211   003CD6  0E83               	movlw	low moveDisplay@menuItem2
  6212   003CD8  6E07               	movwf	LCD_ShowString@textData^0,c
  6213   003CDA  0E01               	movlw	high moveDisplay@menuItem2
  6214   003CDC  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  6215   003CDE  0E02               	movlw	2
  6216   003CE0  EC62  F022         	call	_LCD_ShowString
  6217   003CE4                     
  6218                           ;menu.c: 35:     return menuI;
  6219   003CE4  0101               	movlb	1	; () banked
  6220   003CE6  51A4               	movf	moveDisplay@menuI& (0+255),w,b
  6221   003CE8                     
  6222                           ; BSR set to: 1
  6223   003CE8  0012               	return		;funcret
  6224   003CEA                     __end_of_moveDisplay:
  6225                           	callstack 0
  6226                           
  6227 ;; *************** function _sprintf *****************
  6228 ;; Defined at:
  6229 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;  s               2  116[BANK0 ] PTR unsigned char 
  6232 ;;		 -> runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), 
  6233 ;;  fmt             2  118[BANK0 ] PTR const unsigned char 
  6234 ;;		 -> STR_21(19), STR_20(5), STR_19(6), 
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;  f              12  130[BANK0 ] struct _IO_FILE
  6237 ;;  ap              2  128[BANK0 ] PTR void [1]
  6238 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6239 ;;  ret             2    0        int 
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  2  116[BANK0 ] int 
  6242 ;; Registers used:
  6243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6249 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6250 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6252 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6253 ;;Total ram usage:       26 bytes
  6254 ;; Hardware stack levels used: 1
  6255 ;; Hardware stack levels required when called: 8
  6256 ;; This function calls:
  6257 ;;		_vfprintf
  6258 ;; This function is called by:
  6259 ;;		_moveDisplay
  6260 ;;		_runADC
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           	psect	text21
  6265   004882                     __ptext21:
  6266                           	callstack 0
  6267   004882                     _sprintf:
  6268                           	callstack 21
  6269   004882  0ED8               	movlw	low (?_sprintf+4)
  6270   004884  0100               	movlb	0	; () banked
  6271   004886  6FE0               	movwf	sprintf@ap& (0+255),b
  6272   004888  0E00               	movlw	high (?_sprintf+4)
  6273   00488A  6FE1               	movwf	(sprintf@ap+1)& (0+255),b
  6274   00488C  C0D4  F0E2         	movff	sprintf@s,sprintf@f
  6275   004890  C0D5  F0E3         	movff	sprintf@s+1,sprintf@f+1
  6276   004894                     
  6277                           ; BSR set to: 0
  6278   004894  0E00               	movlw	0
  6279   004896  6FE6               	movwf	(sprintf@f+4)& (0+255),b
  6280   004898  0E00               	movlw	0
  6281   00489A  6FE5               	movwf	(sprintf@f+3)& (0+255),b
  6282   00489C                     
  6283                           ; BSR set to: 0
  6284   00489C  0E00               	movlw	0
  6285   00489E  6FED               	movwf	(sprintf@f+11)& (0+255),b
  6286   0048A0  0E00               	movlw	0
  6287   0048A2  6FEC               	movwf	(sprintf@f+10)& (0+255),b
  6288   0048A4                     
  6289                           ; BSR set to: 0
  6290   0048A4  0EE2               	movlw	low sprintf@f
  6291   0048A6  6FCC               	movwf	vfprintf@fp& (0+255),b
  6292   0048A8  0E00               	movlw	high sprintf@f
  6293   0048AA  6FCD               	movwf	(vfprintf@fp+1)& (0+255),b
  6294   0048AC  C0D6  F0CE         	movff	sprintf@fmt,vfprintf@fmt
  6295   0048B0  C0D7  F0CF         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6296   0048B4  0EE0               	movlw	low sprintf@ap
  6297   0048B6  6FD0               	movwf	vfprintf@ap& (0+255),b
  6298   0048B8  0E00               	movlw	high sprintf@ap
  6299   0048BA  6FD1               	movwf	(vfprintf@ap+1)& (0+255),b
  6300   0048BC  ECF0  F023         	call	_vfprintf	;wreg free
  6301   0048C0  0100               	movlb	0	; () banked
  6302   0048C2  51E5               	movf	(sprintf@f+3)& (0+255),w,b
  6303   0048C4  25D4               	addwf	sprintf@s& (0+255),w,b
  6304   0048C6  6ED9               	movwf	fsr2l,c
  6305   0048C8  51E6               	movf	(sprintf@f+4)& (0+255),w,b
  6306   0048CA  21D5               	addwfc	(sprintf@s+1)& (0+255),w,b
  6307   0048CC  6EDA               	movwf	fsr2h,c
  6308   0048CE  6ADF               	clrf	indf2,c
  6309   0048D0                     
  6310                           ; BSR set to: 0
  6311   0048D0  0012               	return		;funcret
  6312   0048D2                     __end_of_sprintf:
  6313                           	callstack 0
  6314                           
  6315 ;; *************** function _vfprintf *****************
  6316 ;; Defined at:
  6317 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  fp              2  108[BANK0 ] PTR struct _IO_FILE
  6320 ;;		 -> NULL(0), sprintf@f(12), 
  6321 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  6322 ;;		 -> STR_22(17), STR_21(19), STR_20(5), STR_19(6), 
  6323 ;;		 -> STR_10(5), 
  6324 ;;  ap              2  112[BANK0 ] PTR PTR void 
  6325 ;;		 -> printf@ap(2), sprintf@ap(2), 
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;  cfmt            2  114[BANK0 ] PTR unsigned char 
  6328 ;;		 -> STR_22(17), STR_21(19), STR_20(5), STR_19(6), 
  6329 ;;		 -> STR_10(5), 
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  2  108[BANK0 ] int 
  6332 ;; Registers used:
  6333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6339 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;Total ram usage:        8 bytes
  6344 ;; Hardware stack levels used: 1
  6345 ;; Hardware stack levels required when called: 7
  6346 ;; This function calls:
  6347 ;;		_vfpfcnvrt
  6348 ;; This function is called by:
  6349 ;;		_sprintf
  6350 ;;		_printf
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           	psect	text22
  6355   0047E0                     __ptext22:
  6356                           	callstack 0
  6357   0047E0                     _vfprintf:
  6358                           	callstack 21
  6359   0047E0                     
  6360                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  6361   0047E0  C0CE  F0D2         	movff	vfprintf@fmt,vfprintf@cfmt
  6362   0047E4  C0CF  F0D3         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6363                           
  6364                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  6365   0047E8  EF05  F024         	goto	l7519
  6366   0047EC                     l7517:
  6367                           
  6368                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6369   0047EC  C0CC  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  6370   0047F0  C0CD  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6371   0047F4  0ED2               	movlw	low vfprintf@cfmt
  6372   0047F6  0100               	movlb	0	; () banked
  6373   0047F8  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  6374   0047FA  0E00               	movlw	high vfprintf@cfmt
  6375   0047FC  6FBC               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6376   0047FE  C0D0  F0BD         	movff	vfprintf@ap,vfpfcnvrt@ap
  6377   004802  C0D1  F0BE         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6378   004806  ECC3  F00A         	call	_vfpfcnvrt	;wreg free
  6379   00480A                     l7519:
  6380                           
  6381                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  6382   00480A  C0D2  FFF6         	movff	vfprintf@cfmt,tblptrl
  6383   00480E  C0D3  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6384   004812                     	if	0	;tblptru may be non-zero
  6385   004812                     	endif
  6386   004812                     	if	0	;tblptru may be non-zero
  6387   004812                     	endif
  6388   004812  0008               	tblrd		*
  6389   004814  50F5               	movf	tablat,w,c
  6390   004816  0900               	iorlw	0
  6391   004818  A4D8               	btfss	status,2,c
  6392   00481A  EF11  F024         	goto	u8661
  6393   00481E  EF13  F024         	goto	u8660
  6394   004822                     u8661:
  6395   004822  EFF6  F023         	goto	l7517
  6396   004826                     u8660:
  6397   004826                     
  6398                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  6399   004826  0E00               	movlw	0
  6400   004828  0100               	movlb	0	; () banked
  6401   00482A  6FCD               	movwf	(?_vfprintf+1)& (0+255),b
  6402   00482C  0E00               	movlw	0
  6403   00482E  6FCC               	movwf	?_vfprintf& (0+255),b
  6404   004830                     
  6405                           ; BSR set to: 0
  6406   004830  0012               	return		;funcret
  6407   004832                     __end_of_vfprintf:
  6408                           	callstack 0
  6409                           
  6410 ;; *************** function _vfpfcnvrt *****************
  6411 ;; Defined at:
  6412 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  6415 ;;		 -> NULL(0), sprintf@f(12), 
  6416 ;;  fmt             2   91[BANK0 ] PTR PTR unsigned char 
  6417 ;;		 -> vfprintf@cfmt(2), 
  6418 ;;  ap              2   93[BANK0 ] PTR PTR void 
  6419 ;;		 -> printf@ap(2), sprintf@ap(2), 
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;  convarg         4  101[BANK0 ] struct .
  6422 ;;  cp              2  106[BANK0 ] PTR unsigned char 
  6423 ;;		 -> STR_22(17), STR_21(19), STR_20(5), STR_19(6), 
  6424 ;;		 -> STR_10(5), 
  6425 ;;  done            2   97[BANK0 ] int 
  6426 ;;  i               2    0        int 
  6427 ;;  c               1  105[BANK0 ] unsigned char 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      void 
  6430 ;; Registers used:
  6431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6437 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6441 ;;Total ram usage:       19 bytes
  6442 ;; Hardware stack levels used: 1
  6443 ;; Hardware stack levels required when called: 6
  6444 ;; This function calls:
  6445 ;;		_dtoa
  6446 ;;		_efgtoa
  6447 ;;		_fputc
  6448 ;;		_read_prec_or_width
  6449 ;;		_stoa
  6450 ;;		_strncmp
  6451 ;; This function is called by:
  6452 ;;		_vfprintf
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text23
  6457   001586                     __ptext23:
  6458                           	callstack 0
  6459   001586                     _vfpfcnvrt:
  6460                           	callstack 21
  6461   001586                     
  6462                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  6463   001586  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6464   00158A  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6465   00158E  CFDE FFF6          	movff	postinc2,tblptrl
  6466   001592  CFDD FFF7          	movff	postdec2,tblptrh
  6467   001596                     	if	0	;tblptru may be non-zero
  6468   001596                     	endif
  6469   001596                     	if	0	;tblptru may be non-zero
  6470   001596                     	endif
  6471   001596  0008               	tblrd		*
  6472   001598  50F5               	movf	tablat,w,c
  6473   00159A  0A25               	xorlw	37
  6474   00159C  A4D8               	btfss	status,2,c
  6475   00159E  EFD3  F00A         	goto	u8541
  6476   0015A2  EFD5  F00A         	goto	u8540
  6477   0015A6                     u8541:
  6478   0015A6  EFF7  F00C         	goto	l7475
  6479   0015AA                     u8540:
  6480   0015AA                     
  6481                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  6482   0015AA  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6483   0015AE  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6484   0015B2  2ADE               	incf	postinc2,f,c
  6485   0015B4  0E00               	movlw	0
  6486   0015B6  22DD               	addwfc	postdec2,f,c
  6487   0015B8                     
  6488                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  6489   0015B8  0E00               	movlw	0
  6490   0015BA  6E56               	movwf	(_width+1)^0,c
  6491   0015BC  0E00               	movlw	0
  6492   0015BE  6E55               	movwf	_width^0,c
  6493   0015C0  C055  F059         	movff	_width,_flags
  6494   0015C4                     
  6495                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  6496   0015C4  6857               	setf	_prec^0,c
  6497   0015C6  6858               	setf	(_prec+1)^0,c
  6498   0015C8                     
  6499                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  6500   0015C8  0E00               	movlw	0
  6501   0015CA  0100               	movlb	0	; () banked
  6502   0015CC  6FC2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6503   0015CE  0E00               	movlw	0
  6504   0015D0  6FC1               	movwf	vfpfcnvrt@done& (0+255),b
  6505                           
  6506                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  6507   0015D2  EF15  F00B         	goto	l7395
  6508   0015D6                     l7385:
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1075:            
      +                                   flags |= (1 << 0);
  6512   0015D6  8059               	bsf	_flags^0,0,c
  6513   0015D8                     
  6514                           ; BSR set to: 0
  6515                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1076:            
      +                                   ++*fmt;
  6516   0015D8  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6517   0015DC  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6518   0015E0  2ADE               	incf	postinc2,f,c
  6519   0015E2  0E00               	movlw	0
  6520   0015E4  22DD               	addwfc	postdec2,f,c
  6521                           
  6522                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1077:            
      +                                   break;
  6523   0015E6  EF15  F00B         	goto	l7395
  6524   0015EA                     l7389:
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  6528   0015EA  0E00               	movlw	0
  6529   0015EC  6FC2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6530   0015EE  0E01               	movlw	1
  6531   0015F0  6FC1               	movwf	vfpfcnvrt@done& (0+255),b
  6532                           
  6533                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  6534   0015F2  EF15  F00B         	goto	l7395
  6535   0015F6                     l7393:
  6536                           
  6537                           ; BSR set to: 0
  6538   0015F6  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6539   0015FA  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6540   0015FE  CFDE FFF6          	movff	postinc2,tblptrl
  6541   001602  CFDD FFF7          	movff	postdec2,tblptrh
  6542   001606                     	if	0	;tblptru may be non-zero
  6543   001606                     	endif
  6544   001606                     	if	0	;tblptru may be non-zero
  6545   001606                     	endif
  6546   001606  0008               	tblrd		*
  6547   001608  50F5               	movf	tablat,w,c
  6548   00160A  6FBF               	movwf	??_vfpfcnvrt& (0+255),b
  6549   00160C  6BC0               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6550                           
  6551                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6552                           ; Switch size 1, requested type "simple"
  6553                           ; Number of cases is 1, Range of values is 0 to 0
  6554                           ; switch strategies available:
  6555                           ; Name         Instructions Cycles
  6556                           ; simple_byte            4     3 (average)
  6557                           ;	Chosen strategy is simple_byte
  6558   00160E  51C0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6559   001610  0A00               	xorlw	0	; case 0
  6560   001612  B4D8               	btfsc	status,2,c
  6561   001614  EF0E  F00B         	goto	l8459
  6562   001618  EFF5  F00A         	goto	l7389
  6563   00161C                     l8459:
  6564                           
  6565                           ; BSR set to: 0
  6566                           ; Switch size 1, requested type "simple"
  6567                           ; Number of cases is 1, Range of values is 45 to 45
  6568                           ; switch strategies available:
  6569                           ; Name         Instructions Cycles
  6570                           ; simple_byte            4     3 (average)
  6571                           ;	Chosen strategy is simple_byte
  6572   00161C  51BF               	movf	??_vfpfcnvrt& (0+255),w,b
  6573   00161E  0A2D               	xorlw	45	; case 45
  6574   001620  B4D8               	btfsc	status,2,c
  6575   001622  EFEB  F00A         	goto	l7385
  6576   001626  EFF5  F00A         	goto	l7389
  6577   00162A                     l7395:
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  6581   00162A  51C1               	movf	vfpfcnvrt@done& (0+255),w,b
  6582   00162C  11C2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6583   00162E  B4D8               	btfsc	status,2,c
  6584   001630  EF1C  F00B         	goto	u8551
  6585   001634  EF1E  F00B         	goto	u8550
  6586   001638                     u8551:
  6587   001638  EFFB  F00A         	goto	l7393
  6588   00163C                     u8550:
  6589   00163C                     
  6590                           ; BSR set to: 0
  6591                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  6592   00163C  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6593   001640  C0BC  F00D         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  6594   001644  C0BD  F00E         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6595   001648  C0BE  F00F         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  6596   00164C  EC3B  F021         	call	_read_prec_or_width	;wreg free
  6597   001650  C00C  F055         	movff	?_read_prec_or_width,_width
  6598   001654  C00D  F056         	movff	?_read_prec_or_width+1,_width+1
  6599   001658                     
  6600                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  6601   001658  BE56               	btfsc	(_width+1)^0,7,c
  6602   00165A  EF33  F00B         	goto	u8560
  6603   00165E  EF31  F00B         	goto	u8561
  6604   001662                     u8561:
  6605   001662  EF38  F00B         	goto	l7403
  6606   001666                     u8560:
  6607   001666                     
  6608                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  6609   001666  8059               	bsf	_flags^0,0,c
  6610                           
  6611                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  6612   001668  6C55               	negf	_width^0,c
  6613   00166A  1E56               	comf	(_width+1)^0,f,c
  6614   00166C  B0D8               	btfsc	status,0,c
  6615   00166E  2A56               	incf	(_width+1)^0,f,c
  6616   001670                     l7403:
  6617                           
  6618                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  6619   001670  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6620   001674  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6621   001678  CFDE FFF6          	movff	postinc2,tblptrl
  6622   00167C  CFDD FFF7          	movff	postdec2,tblptrh
  6623   001680                     	if	0	;tblptru may be non-zero
  6624   001680                     	endif
  6625   001680                     	if	0	;tblptru may be non-zero
  6626   001680                     	endif
  6627   001680  0008               	tblrd		*
  6628   001682  50F5               	movf	tablat,w,c
  6629   001684  0A2E               	xorlw	46
  6630   001686  A4D8               	btfss	status,2,c
  6631   001688  EF48  F00B         	goto	u8571
  6632   00168C  EF4A  F00B         	goto	u8570
  6633   001690                     u8571:
  6634   001690  EF5F  F00B         	goto	l7409
  6635   001694                     u8570:
  6636   001694                     
  6637                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  6638   001694  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6639   001698  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6640   00169C  2ADE               	incf	postinc2,f,c
  6641   00169E  0E00               	movlw	0
  6642   0016A0  22DD               	addwfc	postdec2,f,c
  6643   0016A2                     
  6644                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  6645   0016A2  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6646   0016A6  C0BC  F00D         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  6647   0016AA  C0BD  F00E         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6648   0016AE  C0BE  F00F         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  6649   0016B2  EC3B  F021         	call	_read_prec_or_width	;wreg free
  6650   0016B6  C00C  F057         	movff	?_read_prec_or_width,_prec
  6651   0016BA  C00D  F058         	movff	?_read_prec_or_width+1,_prec+1
  6652   0016BE                     l7409:
  6653                           
  6654                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  6655   0016BE  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6656   0016C2  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6657   0016C6  CFDE F0CA          	movff	postinc2,vfpfcnvrt@cp
  6658   0016CA  CFDD F0CB          	movff	postdec2,vfpfcnvrt@cp+1
  6659   0016CE                     
  6660                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6661   0016CE  C0CA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6662   0016D2  C0CB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6663   0016D6                     	if	0	;tblptru may be non-zero
  6664   0016D6                     	endif
  6665   0016D6                     	if	0	;tblptru may be non-zero
  6666   0016D6                     	endif
  6667   0016D6  0008               	tblrd		*
  6668   0016D8  50F5               	movf	tablat,w,c
  6669   0016DA  0A64               	xorlw	100
  6670   0016DC  B4D8               	btfsc	status,2,c
  6671   0016DE  EF73  F00B         	goto	u8581
  6672   0016E2  EF75  F00B         	goto	u8580
  6673   0016E6                     u8581:
  6674   0016E6  EF83  F00B         	goto	l7415
  6675   0016EA                     u8580:
  6676   0016EA  C0CA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6677   0016EE  C0CB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6678   0016F2                     	if	0	;tblptru may be non-zero
  6679   0016F2                     	endif
  6680   0016F2                     	if	0	;tblptru may be non-zero
  6681   0016F2                     	endif
  6682   0016F2  0008               	tblrd		*
  6683   0016F4  50F5               	movf	tablat,w,c
  6684   0016F6  0A69               	xorlw	105
  6685   0016F8  A4D8               	btfss	status,2,c
  6686   0016FA  EF81  F00B         	goto	u8591
  6687   0016FE  EF83  F00B         	goto	u8590
  6688   001702                     u8591:
  6689   001702  EFB2  F00B         	goto	l7421
  6690   001706                     u8590:
  6691   001706                     l7415:
  6692                           
  6693                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6694   001706  C0BD  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6695   00170A  C0BE  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6696   00170E  CFDF F0BF          	movff	indf2,??_vfpfcnvrt
  6697   001712  0E02               	movlw	2
  6698   001714  26DE               	addwf	postinc2,f,c
  6699   001716  CFDF F0C0          	movff	indf2,??_vfpfcnvrt+1
  6700   00171A  0E00               	movlw	0
  6701   00171C  22DD               	addwfc	postdec2,f,c
  6702   00171E  C0BF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6703   001722  C0C0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6704   001726  CFDE F0C5          	movff	postinc2,vfpfcnvrt@convarg
  6705   00172A  CFDD F0C6          	movff	postdec2,vfpfcnvrt@convarg+1
  6706                           
  6707                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  6708   00172E  0E01               	movlw	1
  6709   001730  0100               	movlb	0	; () banked
  6710   001732  25CA               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6711   001734  6FBF               	movwf	??_vfpfcnvrt& (0+255),b
  6712   001736  0E00               	movlw	0
  6713   001738  21CB               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6714   00173A  6FC0               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6715   00173C  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6716   001740  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6717   001744  C0BF  FFDE         	movff	??_vfpfcnvrt,postinc2
  6718   001748  C0C0  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6719   00174C                     
  6720                           ; BSR set to: 0
  6721                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  6722   00174C  C0B9  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  6723   001750  C0BA  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6724   001754  C0C5  F024         	movff	vfpfcnvrt@convarg,dtoa@d
  6725   001758  C0C6  F025         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6726   00175C  ECF3  F01A         	call	_dtoa	;wreg free
  6727   001760  EF0B  F00D         	goto	l1386
  6728   001764                     l7421:
  6729                           
  6730                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1409:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  6731   001764  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6732   001768  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6733   00176C  CFDE FFF6          	movff	postinc2,tblptrl
  6734   001770  CFDD FFF7          	movff	postdec2,tblptrh
  6735   001774                     	if	0	;tblptru may be non-zero
  6736   001774                     	endif
  6737   001774                     	if	0	;tblptru may be non-zero
  6738   001774                     	endif
  6739   001774  0008               	tblrd		*
  6740   001776  50F5               	movf	tablat,w,c
  6741   001778  0A73               	xorlw	115
  6742   00177A  B4D8               	btfsc	status,2,c
  6743   00177C  EFC2  F00B         	goto	u8601
  6744   001780  EFC4  F00B         	goto	u8600
  6745   001784                     u8601:
  6746   001784  EFDF  F00B         	goto	l7425
  6747   001788                     u8600:
  6748   001788  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6749   00178C  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6750   001790  CFDE F006          	movff	postinc2,strncmp@_l
  6751   001794  CFDD F007          	movff	postdec2,strncmp@_l+1
  6752   001798  0EEF               	movlw	low STR_29
  6753   00179A  6E08               	movwf	strncmp@_r^0,c
  6754   00179C  0EFF               	movlw	high STR_29
  6755   00179E  6E09               	movwf	(strncmp@_r+1)^0,c
  6756   0017A0  0E00               	movlw	0
  6757   0017A2  6E0B               	movwf	(strncmp@n+1)^0,c
  6758   0017A4  0E03               	movlw	3
  6759   0017A6  6E0A               	movwf	strncmp@n^0,c
  6760   0017A8  ECFA  F01F         	call	_strncmp	;wreg free
  6761   0017AC  5006               	movf	?_strncmp^0,w,c
  6762   0017AE  1007               	iorwf	(?_strncmp+1)^0,w,c
  6763   0017B0  A4D8               	btfss	status,2,c
  6764   0017B2  EFDD  F00B         	goto	u8611
  6765   0017B6  EFDF  F00B         	goto	u8610
  6766   0017BA                     u8611:
  6767   0017BA  EF21  F00C         	goto	l7437
  6768   0017BE                     u8610:
  6769   0017BE                     l7425:
  6770                           
  6771                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1411:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  6772   0017BE  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6773   0017C2  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6774   0017C6  CFDE FFF6          	movff	postinc2,tblptrl
  6775   0017CA  CFDD FFF7          	movff	postdec2,tblptrh
  6776   0017CE                     	if	0	;tblptru may be non-zero
  6777   0017CE                     	endif
  6778   0017CE                     	if	0	;tblptru may be non-zero
  6779   0017CE                     	endif
  6780   0017CE  0008               	tblrd		*
  6781   0017D0  50F5               	movf	tablat,w,c
  6782   0017D2  0A73               	xorlw	115
  6783   0017D4  B4D8               	btfsc	status,2,c
  6784   0017D6  EFEF  F00B         	goto	u8621
  6785   0017DA  EFF1  F00B         	goto	u8620
  6786   0017DE                     u8621:
  6787   0017DE  EFF8  F00B         	goto	l7429
  6788   0017E2                     u8620:
  6789   0017E2  0E00               	movlw	0
  6790   0017E4  0100               	movlb	0	; () banked
  6791   0017E6  6FC4               	movwf	(_vfpfcnvrt$3737+1)& (0+255),b
  6792   0017E8  0E03               	movlw	3
  6793   0017EA  6FC3               	movwf	_vfpfcnvrt$3737& (0+255),b
  6794   0017EC  EFFD  F00B         	goto	l7431
  6795   0017F0                     l7429:
  6796   0017F0  0E00               	movlw	0
  6797   0017F2  0100               	movlb	0	; () banked
  6798   0017F4  6FC4               	movwf	(_vfpfcnvrt$3737+1)& (0+255),b
  6799   0017F6  0E01               	movlw	1
  6800   0017F8  6FC3               	movwf	_vfpfcnvrt$3737& (0+255),b
  6801   0017FA                     l7431:
  6802                           
  6803                           ; BSR set to: 0
  6804   0017FA  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6805   0017FE  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6806   001802  51C3               	movf	_vfpfcnvrt$3737& (0+255),w,b
  6807   001804  26DE               	addwf	postinc2,f,c
  6808   001806  51C4               	movf	(_vfpfcnvrt$3737+1)& (0+255),w,b
  6809   001808  22DD               	addwfc	postdec2,f,c
  6810   00180A                     
  6811                           ; BSR set to: 0
  6812                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1412:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  6813   00180A  C0B9  F010         	movff	vfpfcnvrt@fp,stoa@fp
  6814   00180E  C0BA  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6815   001812  C0BD  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6816   001816  C0BE  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6817   00181A  CFDF F0BF          	movff	indf2,??_vfpfcnvrt
  6818   00181E  0E02               	movlw	2
  6819   001820  26DE               	addwf	postinc2,f,c
  6820   001822  CFDF F0C0          	movff	indf2,??_vfpfcnvrt+1
  6821   001826  0E00               	movlw	0
  6822   001828  22DD               	addwfc	postdec2,f,c
  6823   00182A  C0BF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6824   00182E  C0C0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6825   001832  CFDE F012          	movff	postinc2,stoa@s
  6826   001836  CFDD F013          	movff	postdec2,stoa@s+1
  6827   00183A  ECBD  F01B         	call	_stoa	;wreg free
  6828   00183E  EF0B  F00D         	goto	l1386
  6829   001842                     l7437:
  6830                           
  6831                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  6832   001842  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6833   001846  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6834   00184A  CFDE F0CA          	movff	postinc2,vfpfcnvrt@cp
  6835   00184E  CFDD F0CB          	movff	postdec2,vfpfcnvrt@cp+1
  6836   001852                     
  6837                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  6838   001852  C0CA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6839   001856  C0CB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6840   00185A                     	if	0	;tblptru may be non-zero
  6841   00185A                     	endif
  6842   00185A                     	if	0	;tblptru may be non-zero
  6843   00185A                     	endif
  6844   00185A  0008               	tblrd		*
  6845   00185C  CFF5 F0C9          	movff	tablat,vfpfcnvrt@c
  6846                           
  6847                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  6848   001860  EF3E  F00C         	goto	l7449
  6849   001864                     l7441:
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  6853   001864  4BCA               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  6854   001866  2BCB               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  6855                           
  6856                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  6857   001868  EF58  F00C         	goto	l7451
  6858   00186C                     l7443:
  6859                           
  6860                           ; BSR set to: 0
  6861                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  6862   00186C  0E6C               	movlw	108
  6863   00186E  6FC9               	movwf	vfpfcnvrt@c& (0+255),b
  6864                           
  6865                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  6866   001870  EF58  F00C         	goto	l7451
  6867   001874                     l7445:
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  6871   001874  0E00               	movlw	0
  6872   001876  6FC9               	movwf	vfpfcnvrt@c& (0+255),b
  6873                           
  6874                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  6875   001878  EF58  F00C         	goto	l7451
  6876   00187C                     l7449:
  6877   00187C  0100               	movlb	0	; () banked
  6878   00187E  51C9               	movf	vfpfcnvrt@c& (0+255),w,b
  6879   001880  6FBF               	movwf	??_vfpfcnvrt& (0+255),b
  6880   001882  6BC0               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6881                           
  6882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6883                           ; Switch size 1, requested type "simple"
  6884                           ; Number of cases is 1, Range of values is 0 to 0
  6885                           ; switch strategies available:
  6886                           ; Name         Instructions Cycles
  6887                           ; simple_byte            4     3 (average)
  6888                           ;	Chosen strategy is simple_byte
  6889   001884  51C0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6890   001886  0A00               	xorlw	0	; case 0
  6891   001888  B4D8               	btfsc	status,2,c
  6892   00188A  EF49  F00C         	goto	l8461
  6893   00188E  EF3A  F00C         	goto	l7445
  6894   001892                     l8461:
  6895                           
  6896                           ; BSR set to: 0
  6897                           ; Switch size 1, requested type "simple"
  6898                           ; Number of cases is 3, Range of values is 76 to 108
  6899                           ; switch strategies available:
  6900                           ; Name         Instructions Cycles
  6901                           ; simple_byte           10     6 (average)
  6902                           ;	Chosen strategy is simple_byte
  6903   001892  51BF               	movf	??_vfpfcnvrt& (0+255),w,b
  6904   001894  0A4C               	xorlw	76	; case 76
  6905   001896  B4D8               	btfsc	status,2,c
  6906   001898  EF32  F00C         	goto	l7441
  6907   00189C  0A2A               	xorlw	42	; case 102
  6908   00189E  B4D8               	btfsc	status,2,c
  6909   0018A0  EF36  F00C         	goto	l7443
  6910   0018A4  0A0A               	xorlw	10	; case 108
  6911   0018A6  B4D8               	btfsc	status,2,c
  6912   0018A8  EF32  F00C         	goto	l7441
  6913   0018AC  EF3A  F00C         	goto	l7445
  6914   0018B0                     l7451:
  6915                           
  6916                           ; BSR set to: 0
  6917   0018B0  C0CA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6918   0018B4  C0CB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6919   0018B8                     	if	0	;tblptru may be non-zero
  6920   0018B8                     	endif
  6921   0018B8                     	if	0	;tblptru may be non-zero
  6922   0018B8                     	endif
  6923   0018B8  0008               	tblrd		*
  6924   0018BA  50F5               	movf	tablat,w,c
  6925   0018BC  0A66               	xorlw	102
  6926   0018BE  A4D8               	btfss	status,2,c
  6927   0018C0  EF64  F00C         	goto	u8631
  6928   0018C4  EF66  F00C         	goto	u8630
  6929   0018C8                     u8631:
  6930   0018C8  EFEE  F00C         	goto	l7471
  6931   0018CC                     u8630:
  6932   0018CC  EF9C  F00C         	goto	l7459
  6933   0018D0                     l7453:
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6937   0018D0  C0BD  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6938   0018D4  C0BE  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6939   0018D8  CFDF F0BF          	movff	indf2,??_vfpfcnvrt
  6940   0018DC  0E04               	movlw	4
  6941   0018DE  26DE               	addwf	postinc2,f,c
  6942   0018E0  CFDF F0C0          	movff	indf2,??_vfpfcnvrt+1
  6943   0018E4  0E00               	movlw	0
  6944   0018E6  22DD               	addwfc	postdec2,f,c
  6945   0018E8  C0BF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6946   0018EC  C0C0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6947   0018F0  CFDE F0C5          	movff	postinc2,vfpfcnvrt@convarg
  6948   0018F4  CFDE F0C6          	movff	postinc2,vfpfcnvrt@convarg+1
  6949   0018F8  CFDE F0C7          	movff	postinc2,vfpfcnvrt@convarg+2
  6950   0018FC  CFDE F0C8          	movff	postinc2,vfpfcnvrt@convarg+3
  6951                           
  6952                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  6953   001900  EFB1  F00C         	goto	l7461
  6954   001904                     l7455:
  6955                           
  6956                           ; BSR set to: 0
  6957                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6958   001904  C0BD  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6959   001908  C0BE  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6960   00190C  CFDF F0BF          	movff	indf2,??_vfpfcnvrt
  6961   001910  0E04               	movlw	4
  6962   001912  26DE               	addwf	postinc2,f,c
  6963   001914  CFDF F0C0          	movff	indf2,??_vfpfcnvrt+1
  6964   001918  0E00               	movlw	0
  6965   00191A  22DD               	addwfc	postdec2,f,c
  6966   00191C  C0BF  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6967   001920  C0C0  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6968   001924  CFDE F0C5          	movff	postinc2,vfpfcnvrt@convarg
  6969   001928  CFDE F0C6          	movff	postinc2,vfpfcnvrt@convarg+1
  6970   00192C  CFDE F0C7          	movff	postinc2,vfpfcnvrt@convarg+2
  6971   001930  CFDE F0C8          	movff	postinc2,vfpfcnvrt@convarg+3
  6972                           
  6973                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  6974   001934  EFB1  F00C         	goto	l7461
  6975   001938                     l7459:
  6976                           
  6977                           ; BSR set to: 0
  6978   001938  51C9               	movf	vfpfcnvrt@c& (0+255),w,b
  6979   00193A  6FBF               	movwf	??_vfpfcnvrt& (0+255),b
  6980   00193C  6BC0               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6981                           
  6982                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6983                           ; Switch size 1, requested type "simple"
  6984                           ; Number of cases is 1, Range of values is 0 to 0
  6985                           ; switch strategies available:
  6986                           ; Name         Instructions Cycles
  6987                           ; simple_byte            4     3 (average)
  6988                           ;	Chosen strategy is simple_byte
  6989   00193E  51C0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6990   001940  0A00               	xorlw	0	; case 0
  6991   001942  B4D8               	btfsc	status,2,c
  6992   001944  EFA6  F00C         	goto	l8463
  6993   001948  EFB1  F00C         	goto	l7461
  6994   00194C                     l8463:
  6995                           
  6996                           ; BSR set to: 0
  6997                           ; Switch size 1, requested type "simple"
  6998                           ; Number of cases is 2, Range of values is 76 to 108
  6999                           ; switch strategies available:
  7000                           ; Name         Instructions Cycles
  7001                           ; simple_byte            7     4 (average)
  7002                           ;	Chosen strategy is simple_byte
  7003   00194C  51BF               	movf	??_vfpfcnvrt& (0+255),w,b
  7004   00194E  0A4C               	xorlw	76	; case 76
  7005   001950  B4D8               	btfsc	status,2,c
  7006   001952  EF82  F00C         	goto	l7455
  7007   001956  0A20               	xorlw	32	; case 108
  7008   001958  B4D8               	btfsc	status,2,c
  7009   00195A  EF68  F00C         	goto	l7453
  7010   00195E  EFB1  F00C         	goto	l7461
  7011   001962                     l7461:
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  7015   001962  0E01               	movlw	1
  7016   001964  25CA               	addwf	vfpfcnvrt@cp& (0+255),w,b
  7017   001966  6FBF               	movwf	??_vfpfcnvrt& (0+255),b
  7018   001968  0E00               	movlw	0
  7019   00196A  21CB               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  7020   00196C  6FC0               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7021   00196E  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7022   001972  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7023   001976  C0BF  FFDE         	movff	??_vfpfcnvrt,postinc2
  7024   00197A  C0C0  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  7025                           
  7026                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  7027   00197E  EFD8  F00C         	goto	l7469
  7028   001982                     l7463:
  7029                           
  7030                           ; BSR set to: 0
  7031                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  7032   001982  C0B9  F084         	movff	vfpfcnvrt@fp,efgtoa@fp
  7033   001986  C0BA  F085         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7034   00198A  C0C5  F086         	movff	vfpfcnvrt@convarg,efgtoa@f
  7035   00198E  C0C6  F087         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  7036   001992  C0C7  F088         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  7037   001996  C0C8  F089         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  7038   00199A  C0CA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7039   00199E  C0CB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7040   0019A2                     	if	0	;tblptru may be non-zero
  7041   0019A2                     	endif
  7042   0019A2                     	if	0	;tblptru may be non-zero
  7043   0019A2                     	endif
  7044   0019A2  0008               	tblrd		*
  7045   0019A4  CFF5 F08A          	movff	tablat,efgtoa@c
  7046   0019A8  EC88  F000         	call	_efgtoa	;wreg free
  7047   0019AC  EF0B  F00D         	goto	l1386
  7048   0019B0                     l7469:
  7049                           
  7050                           ; BSR set to: 0
  7051   0019B0  C0CA  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7052   0019B4  C0CB  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7053   0019B8                     	if	0	;tblptru may be non-zero
  7054   0019B8                     	endif
  7055   0019B8                     	if	0	;tblptru may be non-zero
  7056   0019B8                     	endif
  7057   0019B8  0008               	tblrd		*
  7058   0019BA  50F5               	movf	tablat,w,c
  7059   0019BC  6FBF               	movwf	??_vfpfcnvrt& (0+255),b
  7060   0019BE  6BC0               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  7061                           
  7062                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7063                           ; Switch size 1, requested type "simple"
  7064                           ; Number of cases is 1, Range of values is 0 to 0
  7065                           ; switch strategies available:
  7066                           ; Name         Instructions Cycles
  7067                           ; simple_byte            4     3 (average)
  7068                           ;	Chosen strategy is simple_byte
  7069   0019C0  51C0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7070   0019C2  0A00               	xorlw	0	; case 0
  7071   0019C4  B4D8               	btfsc	status,2,c
  7072   0019C6  EFE7  F00C         	goto	l8465
  7073   0019CA  EFEE  F00C         	goto	l7471
  7074   0019CE                     l8465:
  7075                           
  7076                           ; BSR set to: 0
  7077                           ; Switch size 1, requested type "simple"
  7078                           ; Number of cases is 1, Range of values is 102 to 102
  7079                           ; switch strategies available:
  7080                           ; Name         Instructions Cycles
  7081                           ; simple_byte            4     3 (average)
  7082                           ;	Chosen strategy is simple_byte
  7083   0019CE  51BF               	movf	??_vfpfcnvrt& (0+255),w,b
  7084   0019D0  0A66               	xorlw	102	; case 102
  7085   0019D2  B4D8               	btfsc	status,2,c
  7086   0019D4  EFC1  F00C         	goto	l7463
  7087   0019D8  EFEE  F00C         	goto	l7471
  7088   0019DC                     l7471:
  7089                           
  7090                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  7091   0019DC  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7092   0019E0  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7093   0019E4  2ADE               	incf	postinc2,f,c
  7094   0019E6  0E00               	movlw	0
  7095   0019E8  22DD               	addwfc	postdec2,f,c
  7096   0019EA  EF0B  F00D         	goto	l1386
  7097   0019EE                     l7475:
  7098                           
  7099                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  7100   0019EE  C0BB  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7101   0019F2  C0BC  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7102   0019F6  CFDE FFF6          	movff	postinc2,tblptrl
  7103   0019FA  CFDD FFF7          	movff	postdec2,tblptrh
  7104   0019FE                     	if	0	;tblptru may be non-zero
  7105   0019FE                     	endif
  7106   0019FE                     	if	0	;tblptru may be non-zero
  7107   0019FE                     	endif
  7108   0019FE  0008               	tblrd		*
  7109   001A00  50F5               	movf	tablat,w,c
  7110   001A02  6E07               	movwf	fputc@c^0,c
  7111   001A04  6A08               	clrf	(fputc@c+1)^0,c
  7112   001A06  C0B9  F009         	movff	vfpfcnvrt@fp,fputc@fp
  7113   001A0A  C0BA  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7114   001A0E  ECD6  F020         	call	_fputc	;wreg free
  7115   001A12  EFEE  F00C         	goto	l7471
  7116   001A16                     l1386:
  7117   001A16  0012               	return		;funcret
  7118   001A18                     __end_of_vfpfcnvrt:
  7119                           	callstack 0
  7120                           
  7121 ;; *************** function _strncmp *****************
  7122 ;; Defined at:
  7123 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strncmp.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  7126 ;;		 -> STR_22(17), STR_21(19), STR_20(5), STR_19(6), 
  7127 ;;		 -> STR_10(5), 
  7128 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  7129 ;;		 -> STR_31(4), 
  7130 ;;  n               2    9[COMRAM] unsigned int 
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;  r               2   14[COMRAM] PTR const unsigned char 
  7133 ;;		 -> STR_31(4), 
  7134 ;;  l               2   12[COMRAM] PTR const unsigned char 
  7135 ;;		 -> STR_22(17), STR_21(19), STR_20(5), STR_19(6), 
  7136 ;;		 -> STR_10(5), 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  2    5[COMRAM] int 
  7139 ;; Registers used:
  7140 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7146 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7147 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7149 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;Total ram usage:       11 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; Hardware stack levels required when called: 1
  7153 ;; This function calls:
  7154 ;;		Nothing
  7155 ;; This function is called by:
  7156 ;;		_vfpfcnvrt
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           	psect	text24
  7161   003FF4                     __ptext24:
  7162                           	callstack 0
  7163   003FF4                     _strncmp:
  7164                           	callstack 25
  7165   003FF4  C006  F00D         	movff	strncmp@_l,strncmp@l
  7166   003FF8  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  7167   003FFC  C008  F00F         	movff	strncmp@_r,strncmp@r
  7168   004000  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  7169   004004  060A               	decf	strncmp@n^0,f,c
  7170   004006  A0D8               	btfss	status,0,c
  7171   004008  060B               	decf	(strncmp@n+1)^0,f,c
  7172   00400A  280A               	incf	strncmp@n^0,w,c
  7173   00400C  E106               	bnz	u8391
  7174   00400E  280B               	incf	(strncmp@n+1)^0,w,c
  7175   004010  A4D8               	btfss	status,2,c
  7176   004012  EF0D  F020         	goto	u8391
  7177   004016  EF0F  F020         	goto	u8390
  7178   00401A                     u8391:
  7179   00401A  EF1C  F020         	goto	l7317
  7180   00401E                     u8390:
  7181   00401E  0E00               	movlw	0
  7182   004020  6E07               	movwf	(?_strncmp+1)^0,c
  7183   004022  0E00               	movlw	0
  7184   004024  6E06               	movwf	?_strncmp^0,c
  7185   004026  EF68  F020         	goto	l1594
  7186   00402A                     l7315:
  7187   00402A  4A0D               	infsnz	strncmp@l^0,f,c
  7188   00402C  2A0E               	incf	(strncmp@l+1)^0,f,c
  7189   00402E  4A0F               	infsnz	strncmp@r^0,f,c
  7190   004030  2A10               	incf	(strncmp@r+1)^0,f,c
  7191   004032  060A               	decf	strncmp@n^0,f,c
  7192   004034  A0D8               	btfss	status,0,c
  7193   004036  060B               	decf	(strncmp@n+1)^0,f,c
  7194   004038                     l7317:
  7195   004038  C00D  FFF6         	movff	strncmp@l,tblptrl
  7196   00403C  C00E  FFF7         	movff	strncmp@l+1,tblptrh
  7197   004040                     	if	0	;tblptru may be non-zero
  7198   004040                     	endif
  7199   004040                     	if	0	;tblptru may be non-zero
  7200   004040                     	endif
  7201   004040  0008               	tblrd		*
  7202   004042  50F5               	movf	tablat,w,c
  7203   004044  0900               	iorlw	0
  7204   004046  B4D8               	btfsc	status,2,c
  7205   004048  EF28  F020         	goto	u8401
  7206   00404C  EF2A  F020         	goto	u8400
  7207   004050                     u8401:
  7208   004050  EF56  F020         	goto	l7325
  7209   004054                     u8400:
  7210   004054  C00F  FFF6         	movff	strncmp@r,tblptrl
  7211   004058  C010  FFF7         	movff	strncmp@r+1,tblptrh
  7212   00405C                     	if	0	;tblptru may be non-zero
  7213   00405C                     	endif
  7214   00405C                     	if	0	;tblptru may be non-zero
  7215   00405C                     	endif
  7216   00405C  0008               	tblrd		*
  7217   00405E  50F5               	movf	tablat,w,c
  7218   004060  0900               	iorlw	0
  7219   004062  B4D8               	btfsc	status,2,c
  7220   004064  EF36  F020         	goto	u8411
  7221   004068  EF38  F020         	goto	u8410
  7222   00406C                     u8411:
  7223   00406C  EF56  F020         	goto	l7325
  7224   004070                     u8410:
  7225   004070  500A               	movf	strncmp@n^0,w,c
  7226   004072  100B               	iorwf	(strncmp@n+1)^0,w,c
  7227   004074  B4D8               	btfsc	status,2,c
  7228   004076  EF3F  F020         	goto	u8421
  7229   00407A  EF41  F020         	goto	u8420
  7230   00407E                     u8421:
  7231   00407E  EF56  F020         	goto	l7325
  7232   004082                     u8420:
  7233   004082  C00D  FFF6         	movff	strncmp@l,tblptrl
  7234   004086  C00E  FFF7         	movff	strncmp@l+1,tblptrh
  7235   00408A                     	if	0	;tblptru may be non-zero
  7236   00408A                     	endif
  7237   00408A                     	if	0	;tblptru may be non-zero
  7238   00408A                     	endif
  7239   00408A  0008               	tblrd		*
  7240   00408C  CFF5 F00C          	movff	tablat,??_strncmp
  7241   004090  C00F  FFF6         	movff	strncmp@r,tblptrl
  7242   004094  C010  FFF7         	movff	strncmp@r+1,tblptrh
  7243   004098                     	if	0	;tblptru may be non-zero
  7244   004098                     	endif
  7245   004098                     	if	0	;tblptru may be non-zero
  7246   004098                     	endif
  7247   004098  0008               	tblrd		*
  7248   00409A  50F5               	movf	tablat,w,c
  7249   00409C  180C               	xorwf	??_strncmp^0,w,c
  7250   00409E  B4D8               	btfsc	status,2,c
  7251   0040A0  EF54  F020         	goto	u8431
  7252   0040A4  EF56  F020         	goto	u8430
  7253   0040A8                     u8431:
  7254   0040A8  EF15  F020         	goto	l7315
  7255   0040AC                     u8430:
  7256   0040AC                     l7325:
  7257   0040AC  C00D  FFF6         	movff	strncmp@l,tblptrl
  7258   0040B0  C00E  FFF7         	movff	strncmp@l+1,tblptrh
  7259   0040B4                     	if	0	;tblptru may be non-zero
  7260   0040B4                     	endif
  7261   0040B4                     	if	0	;tblptru may be non-zero
  7262   0040B4                     	endif
  7263   0040B4  0008               	tblrd		*
  7264   0040B6  CFF5 F00C          	movff	tablat,??_strncmp
  7265   0040BA  C00F  FFF6         	movff	strncmp@r,tblptrl
  7266   0040BE  C010  FFF7         	movff	strncmp@r+1,tblptrh
  7267   0040C2                     	if	0	;tblptru may be non-zero
  7268   0040C2                     	endif
  7269   0040C2                     	if	0	;tblptru may be non-zero
  7270   0040C2                     	endif
  7271   0040C2  0008               	tblrd		*
  7272   0040C4  50F5               	movf	tablat,w,c
  7273   0040C6  5C0C               	subwf	??_strncmp^0,w,c
  7274   0040C8  6E06               	movwf	?_strncmp^0,c
  7275   0040CA  6A07               	clrf	(?_strncmp+1)^0,c
  7276   0040CC  A0D8               	btfss	status,0,c
  7277   0040CE  0607               	decf	(?_strncmp+1)^0,f,c
  7278   0040D0                     l1594:
  7279   0040D0  0012               	return		;funcret
  7280   0040D2                     __end_of_strncmp:
  7281                           	callstack 0
  7282                           
  7283 ;; *************** function _stoa *****************
  7284 ;; Defined at:
  7285 ;;		line 862 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  7288 ;;		 -> NULL(0), sprintf@f(12), 
  7289 ;;  s               2   17[COMRAM] PTR unsigned char 
  7290 ;;		 -> ?_printf(2), ?_sprintf(2), STR_18(1), STR_17(6), 
  7291 ;;		 -> STR_16(5), STR_15(4), STR_14(4), STR_13(4), 
  7292 ;;		 -> STR_12(5), STR_11(5), gmail(11), 
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;  nuls            7   20[COMRAM] unsigned char [7]
  7295 ;;  l               2   35[COMRAM] int 
  7296 ;;  p               2   33[COMRAM] int 
  7297 ;;  cp              2   31[COMRAM] PTR unsigned char 
  7298 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), STR_18(1), 
  7299 ;;		 -> STR_17(6), STR_16(5), STR_15(4), STR_14(4), 
  7300 ;;		 -> STR_13(4), STR_12(5), STR_11(5), gmail(11), 
  7301 ;;  w               2   29[COMRAM] int 
  7302 ;;  i               2   27[COMRAM] int 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  1    wreg      void 
  7305 ;; Registers used:
  7306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7313 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7314 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;Total ram usage:       22 bytes
  7317 ;; Hardware stack levels used: 1
  7318 ;; Hardware stack levels required when called: 3
  7319 ;; This function calls:
  7320 ;;		_fputc
  7321 ;;		_strlen
  7322 ;; This function is called by:
  7323 ;;		_vfpfcnvrt
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text25
  7328   00377A                     __ptext25:
  7329                           	callstack 0
  7330   00377A                     _stoa:
  7331                           	callstack 23
  7332   00377A                     
  7333                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 862: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 863: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 864: 
      +                              char *cp, nuls[] = "(null)";
  7334   00377A  EE21  F0D1         	lfsr	2,stoa@F1179
  7335   00377E  EE10  F015         	lfsr	1,stoa@nuls
  7336   003782  0E06               	movlw	6
  7337   003784                     u8271:
  7338   003784  CFDB FFE3          	movff	plusw2,plusw1
  7339   003788  06E8               	decf	wreg,f,c
  7340   00378A  E2FC               	bc	u8271
  7341   00378C                     
  7342                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 865:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 868:     c
      +                          p = s;
  7343   00378C  C012  F020         	movff	stoa@s,stoa@cp
  7344   003790  C013  F021         	movff	stoa@s+1,stoa@cp+1
  7345   003794                     
  7346                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 869:     if (!cp)
      +                           {
  7347   003794  5020               	movf	stoa@cp^0,w,c
  7348   003796  1021               	iorwf	(stoa@cp+1)^0,w,c
  7349   003798  A4D8               	btfss	status,2,c
  7350   00379A  EFD1  F01B         	goto	u8281
  7351   00379E  EFD3  F01B         	goto	u8280
  7352   0037A2                     u8281:
  7353   0037A2  EFD7  F01B         	goto	l7263
  7354   0037A6                     u8280:
  7355   0037A6                     
  7356                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 870:         cp =
      +                           nuls;
  7357   0037A6  0E15               	movlw	low stoa@nuls
  7358   0037A8  6E20               	movwf	stoa@cp^0,c
  7359   0037AA  0E00               	movlw	high stoa@nuls
  7360   0037AC  6E21               	movwf	(stoa@cp+1)^0,c
  7361   0037AE                     l7263:
  7362                           
  7363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 874:     l = (int
      +                          )strlen(cp);
  7364   0037AE  C020  F006         	movff	stoa@cp,strlen@s
  7365   0037B2  C021  F007         	movff	stoa@cp+1,strlen@s+1
  7366   0037B6  EC69  F024         	call	_strlen	;wreg free
  7367   0037BA  C006  F024         	movff	?_strlen,stoa@l
  7368   0037BE  C007  F025         	movff	?_strlen+1,stoa@l+1
  7369   0037C2                     
  7370                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 875:     p = prec
      +                          ;
  7371   0037C2  C057  F022         	movff	_prec,stoa@p
  7372   0037C6  C058  F023         	movff	_prec+1,stoa@p+1
  7373   0037CA                     
  7374                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 876:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  7375   0037CA  BE23               	btfsc	(stoa@p+1)^0,7,c
  7376   0037CC  EFEA  F01B         	goto	u8291
  7377   0037D0  EFEC  F01B         	goto	u8290
  7378   0037D4                     u8291:
  7379   0037D4  EF01  F01C         	goto	l1348
  7380   0037D8                     u8290:
  7381   0037D8  5024               	movf	stoa@l^0,w,c
  7382   0037DA  5C22               	subwf	stoa@p^0,w,c
  7383   0037DC  5023               	movf	(stoa@p+1)^0,w,c
  7384   0037DE  0A80               	xorlw	128
  7385   0037E0  6E14               	movwf	??_stoa^0,c
  7386   0037E2  5025               	movf	(stoa@l+1)^0,w,c
  7387   0037E4  0A80               	xorlw	128
  7388   0037E6  5814               	subwfb	??_stoa^0,w,c
  7389   0037E8  A0D8               	btfss	status,0,c
  7390   0037EA  EFF9  F01B         	goto	u8301
  7391   0037EE  EFFB  F01B         	goto	u8300
  7392   0037F2                     u8301:
  7393   0037F2  EFFD  F01B         	goto	l1346
  7394   0037F6                     u8300:
  7395   0037F6  EF01  F01C         	goto	l1348
  7396   0037FA                     l1346:
  7397   0037FA  C022  F024         	movff	stoa@p,stoa@l
  7398   0037FE  C023  F025         	movff	stoa@p+1,stoa@l+1
  7399   003802                     l1348:
  7400                           
  7401                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 877:     p = l;
  7402   003802  C024  F022         	movff	stoa@l,stoa@p
  7403   003806  C025  F023         	movff	stoa@l+1,stoa@p+1
  7404                           
  7405                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 878:     w = widt
      +                          h;
  7406   00380A  C055  F01E         	movff	_width,stoa@w
  7407   00380E  C056  F01F         	movff	_width+1,stoa@w+1
  7408                           
  7409                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 882:     if (!(fl
      +                          ags & (1 << 0))) {
  7410   003812  B059               	btfsc	_flags^0,0,c
  7411   003814  EF0E  F01C         	goto	u8311
  7412   003818  EF10  F01C         	goto	u8310
  7413   00381C                     u8311:
  7414   00381C  EF2D  F01C         	goto	l7279
  7415   003820                     u8310:
  7416   003820  EF1E  F01C         	goto	l7277
  7417   003824                     l7273:
  7418                           
  7419                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 885:             
      +                          fputc(' ', fp);
  7420   003824  0E00               	movlw	0
  7421   003826  6E08               	movwf	(fputc@c+1)^0,c
  7422   003828  0E20               	movlw	32
  7423   00382A  6E07               	movwf	fputc@c^0,c
  7424   00382C  C010  F009         	movff	stoa@fp,fputc@fp
  7425   003830  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7426   003834  ECD6  F020         	call	_fputc	;wreg free
  7427   003838                     
  7428                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 886:             
      +                          ++l;
  7429   003838  4A24               	infsnz	stoa@l^0,f,c
  7430   00383A  2A25               	incf	(stoa@l+1)^0,f,c
  7431   00383C                     l7277:
  7432                           
  7433                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 884:         whil
      +                          e (l < w) {
  7434   00383C  501E               	movf	stoa@w^0,w,c
  7435   00383E  5C24               	subwf	stoa@l^0,w,c
  7436   003840  5025               	movf	(stoa@l+1)^0,w,c
  7437   003842  0A80               	xorlw	128
  7438   003844  6E14               	movwf	??_stoa^0,c
  7439   003846  501F               	movf	(stoa@w+1)^0,w,c
  7440   003848  0A80               	xorlw	128
  7441   00384A  5814               	subwfb	??_stoa^0,w,c
  7442   00384C  A0D8               	btfss	status,0,c
  7443   00384E  EF2B  F01C         	goto	u8321
  7444   003852  EF2D  F01C         	goto	u8320
  7445   003856                     u8321:
  7446   003856  EF12  F01C         	goto	l7273
  7447   00385A                     u8320:
  7448   00385A                     l7279:
  7449                           
  7450                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 893:     i = 0;
  7451   00385A  0E00               	movlw	0
  7452   00385C  6E1D               	movwf	(stoa@i+1)^0,c
  7453   00385E  0E00               	movlw	0
  7454   003860  6E1C               	movwf	stoa@i^0,c
  7455                           
  7456                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 894:     while (i
      +                           < p) {
  7457   003862  EF52  F01C         	goto	l7287
  7458   003866                     l7281:
  7459                           
  7460                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 895:         fput
      +                          c(*cp, fp);
  7461   003866  C020  FFF6         	movff	stoa@cp,tblptrl
  7462   00386A  C021  FFF7         	movff	stoa@cp+1,tblptrh
  7463   00386E  0E00               	movlw	low (__mediumconst shr (0+16))
  7464   003870  6EF8               	movwf	tblptru,c
  7465   003872  0E0F               	movlw	(high __ramtop+-1)
  7466   003874  64F7               	cpfsgt	tblptrh,c
  7467   003876  D003               	bra	u8337
  7468   003878  0008               	tblrd		*
  7469   00387A  50F5               	movf	tablat,w,c
  7470   00387C  D005               	bra	u8330
  7471   00387E                     u8337:
  7472   00387E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7473   003882  CFF7 FFE2          	movff	tblptrh,fsr1h
  7474   003886  50E7               	movf	indf1,w,c
  7475   003888                     u8330:
  7476   003888  6E14               	movwf	??_stoa^0,c
  7477   00388A  5014               	movf	??_stoa^0,w,c
  7478   00388C  6E07               	movwf	fputc@c^0,c
  7479   00388E  6A08               	clrf	(fputc@c+1)^0,c
  7480   003890  C010  F009         	movff	stoa@fp,fputc@fp
  7481   003894  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7482   003898  ECD6  F020         	call	_fputc	;wreg free
  7483   00389C                     
  7484                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 896:         ++cp
      +                          ;
  7485   00389C  4A20               	infsnz	stoa@cp^0,f,c
  7486   00389E  2A21               	incf	(stoa@cp+1)^0,f,c
  7487   0038A0                     
  7488                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 897:         ++i;
  7489   0038A0  4A1C               	infsnz	stoa@i^0,f,c
  7490   0038A2  2A1D               	incf	(stoa@i+1)^0,f,c
  7491   0038A4                     l7287:
  7492                           
  7493                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 894:     while (i
      +                           < p) {
  7494   0038A4  5022               	movf	stoa@p^0,w,c
  7495   0038A6  5C1C               	subwf	stoa@i^0,w,c
  7496   0038A8  501D               	movf	(stoa@i+1)^0,w,c
  7497   0038AA  0A80               	xorlw	128
  7498   0038AC  6E14               	movwf	??_stoa^0,c
  7499   0038AE  5023               	movf	(stoa@p+1)^0,w,c
  7500   0038B0  0A80               	xorlw	128
  7501   0038B2  5814               	subwfb	??_stoa^0,w,c
  7502   0038B4  A0D8               	btfss	status,0,c
  7503   0038B6  EF5F  F01C         	goto	u8341
  7504   0038BA  EF61  F01C         	goto	u8340
  7505   0038BE                     u8341:
  7506   0038BE  EF33  F01C         	goto	l7281
  7507   0038C2                     u8340:
  7508   0038C2                     
  7509                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 902:     if (flag
      +                          s & (1 << 0)) {
  7510   0038C2  A059               	btfss	_flags^0,0,c
  7511   0038C4  EF66  F01C         	goto	u8351
  7512   0038C8  EF68  F01C         	goto	u8350
  7513   0038CC                     u8351:
  7514   0038CC  EF85  F01C         	goto	l1362
  7515   0038D0                     u8350:
  7516   0038D0  EF76  F01C         	goto	l7295
  7517   0038D4                     l7291:
  7518                           
  7519                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 904:             
      +                          fputc(' ', fp);
  7520   0038D4  0E00               	movlw	0
  7521   0038D6  6E08               	movwf	(fputc@c+1)^0,c
  7522   0038D8  0E20               	movlw	32
  7523   0038DA  6E07               	movwf	fputc@c^0,c
  7524   0038DC  C010  F009         	movff	stoa@fp,fputc@fp
  7525   0038E0  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7526   0038E4  ECD6  F020         	call	_fputc	;wreg free
  7527   0038E8                     
  7528                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 905:             
      +                          ++l;
  7529   0038E8  4A24               	infsnz	stoa@l^0,f,c
  7530   0038EA  2A25               	incf	(stoa@l+1)^0,f,c
  7531   0038EC                     l7295:
  7532                           
  7533                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 903:         whil
      +                          e (l < w) {
  7534   0038EC  501E               	movf	stoa@w^0,w,c
  7535   0038EE  5C24               	subwf	stoa@l^0,w,c
  7536   0038F0  5025               	movf	(stoa@l+1)^0,w,c
  7537   0038F2  0A80               	xorlw	128
  7538   0038F4  6E14               	movwf	??_stoa^0,c
  7539   0038F6  501F               	movf	(stoa@w+1)^0,w,c
  7540   0038F8  0A80               	xorlw	128
  7541   0038FA  5814               	subwfb	??_stoa^0,w,c
  7542   0038FC  A0D8               	btfss	status,0,c
  7543   0038FE  EF83  F01C         	goto	u8361
  7544   003902  EF85  F01C         	goto	u8360
  7545   003906                     u8361:
  7546   003906  EF6A  F01C         	goto	l7291
  7547   00390A                     u8360:
  7548   00390A                     l1362:
  7549   00390A  0012               	return		;funcret
  7550   00390C                     __end_of_stoa:
  7551                           	callstack 0
  7552                           
  7553 ;; *************** function _strlen *****************
  7554 ;; Defined at:
  7555 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;  s               2    5[COMRAM] PTR const unsigned char 
  7558 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), STR_18(1), 
  7559 ;;		 -> STR_17(6), STR_16(5), STR_15(4), STR_14(4), 
  7560 ;;		 -> STR_13(4), STR_12(5), STR_11(5), gmail(11), 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;  a               2    7[COMRAM] PTR const unsigned char 
  7563 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), STR_18(1), 
  7564 ;;		 -> STR_17(6), STR_16(5), STR_15(4), STR_14(4), 
  7565 ;;		 -> STR_13(4), STR_12(5), STR_11(5), gmail(11), 
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  2    5[COMRAM] unsigned int 
  7568 ;; Registers used:
  7569 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7578 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7579 ;;Total ram usage:        4 bytes
  7580 ;; Hardware stack levels used: 1
  7581 ;; Hardware stack levels required when called: 1
  7582 ;; This function calls:
  7583 ;;		Nothing
  7584 ;; This function is called by:
  7585 ;;		_stoa
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text26
  7590   0048D2                     __ptext26:
  7591                           	callstack 0
  7592   0048D2                     _strlen:
  7593                           	callstack 24
  7594   0048D2  C006  F008         	movff	strlen@s,strlen@a
  7595   0048D6  C007  F009         	movff	strlen@s+1,strlen@a+1
  7596   0048DA  EF71  F024         	goto	l6977
  7597   0048DE                     l6975:
  7598   0048DE  4A06               	infsnz	strlen@s^0,f,c
  7599   0048E0  2A07               	incf	(strlen@s+1)^0,f,c
  7600   0048E2                     l6977:
  7601   0048E2  C006  FFF6         	movff	strlen@s,tblptrl
  7602   0048E6  C007  FFF7         	movff	strlen@s+1,tblptrh
  7603   0048EA  0E00               	movlw	low (__mediumconst shr (0+16))
  7604   0048EC  6EF8               	movwf	tblptru,c
  7605   0048EE  0E0F               	movlw	(high __ramtop+-1)
  7606   0048F0  64F7               	cpfsgt	tblptrh,c
  7607   0048F2  D003               	bra	u7837
  7608   0048F4  0008               	tblrd		*
  7609   0048F6  50F5               	movf	tablat,w,c
  7610   0048F8  D005               	bra	u7830
  7611   0048FA                     u7837:
  7612   0048FA  CFF6 FFE1          	movff	tblptrl,fsr1l
  7613   0048FE  CFF7 FFE2          	movff	tblptrh,fsr1h
  7614   004902  50E7               	movf	indf1,w,c
  7615   004904                     u7830:
  7616   004904  0900               	iorlw	0
  7617   004906  A4D8               	btfss	status,2,c
  7618   004908  EF88  F024         	goto	u7841
  7619   00490C  EF8A  F024         	goto	u7840
  7620   004910                     u7841:
  7621   004910  EF6F  F024         	goto	l6975
  7622   004914                     u7840:
  7623   004914  5008               	movf	strlen@a^0,w,c
  7624   004916  5C06               	subwf	strlen@s^0,w,c
  7625   004918  6E06               	movwf	?_strlen^0,c
  7626   00491A  5009               	movf	(strlen@a+1)^0,w,c
  7627   00491C  5807               	subwfb	(strlen@s+1)^0,w,c
  7628   00491E  6E07               	movwf	(?_strlen+1)^0,c
  7629   004920  0012               	return		;funcret
  7630   004922                     __end_of_strlen:
  7631                           	callstack 0
  7632                           
  7633 ;; *************** function _read_prec_or_width *****************
  7634 ;; Defined at:
  7635 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;  fmt             2   11[COMRAM] PTR PTR const unsigned c
  7638 ;;		 -> vfprintf@cfmt(2), 
  7639 ;;  ap              2   13[COMRAM] PTR PTR void [1]
  7640 ;;		 -> printf@ap(2), sprintf@ap(2), 
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;  c               1   17[COMRAM] unsigned char 
  7643 ;;  n               2   18[COMRAM] int 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  2   11[COMRAM] int 
  7646 ;; Registers used:
  7647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7654 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7655 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7656 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7657 ;;Total ram usage:        9 bytes
  7658 ;; Hardware stack levels used: 1
  7659 ;; Hardware stack levels required when called: 2
  7660 ;; This function calls:
  7661 ;;		___wmul
  7662 ;; This function is called by:
  7663 ;;		_vfpfcnvrt
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           	psect	text27
  7668   004276                     __ptext27:
  7669                           	callstack 0
  7670   004276                     _read_prec_or_width:
  7671                           	callstack 24
  7672   004276                     
  7673                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  7674   004276  0E00               	movlw	0
  7675   004278  6E14               	movwf	(read_prec_or_width@n+1)^0,c
  7676   00427A  0E00               	movlw	0
  7677   00427C  6E13               	movwf	read_prec_or_width@n^0,c
  7678   00427E                     
  7679                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  7680   00427E  C00C  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  7681   004282  C00D  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  7682   004286  CFDE FFF6          	movff	postinc2,tblptrl
  7683   00428A  CFDD FFF7          	movff	postdec2,tblptrh
  7684   00428E                     	if	0	;tblptru may be non-zero
  7685   00428E                     	endif
  7686   00428E                     	if	0	;tblptru may be non-zero
  7687   00428E                     	endif
  7688   00428E  0008               	tblrd		*
  7689   004290  50F5               	movf	tablat,w,c
  7690   004292  0A2A               	xorlw	42
  7691   004294  A4D8               	btfss	status,2,c
  7692   004296  EF4F  F021         	goto	u8371
  7693   00429A  EF51  F021         	goto	u8370
  7694   00429E                     u8371:
  7695   00429E  EF85  F021         	goto	l7307
  7696   0042A2                     u8370:
  7697   0042A2                     
  7698                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  7699   0042A2  C00C  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  7700   0042A6  C00D  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  7701   0042AA  2ADE               	incf	postinc2,f,c
  7702   0042AC  0E00               	movlw	0
  7703   0042AE  22DD               	addwfc	postdec2,f,c
  7704                           
  7705                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  7706   0042B0  C00E  FFD9         	movff	read_prec_or_width@ap,fsr2l
  7707   0042B4  C00F  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  7708   0042B8  CFDF F010          	movff	indf2,??_read_prec_or_width
  7709   0042BC  0E02               	movlw	2
  7710   0042BE  26DE               	addwf	postinc2,f,c
  7711   0042C0  CFDF F011          	movff	indf2,??_read_prec_or_width+1
  7712   0042C4  0E00               	movlw	0
  7713   0042C6  22DD               	addwfc	postdec2,f,c
  7714   0042C8  C010  FFD9         	movff	??_read_prec_or_width,fsr2l
  7715   0042CC  C011  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  7716   0042D0  CFDE F013          	movff	postinc2,read_prec_or_width@n
  7717   0042D4  CFDD F014          	movff	postdec2,read_prec_or_width@n+1
  7718                           
  7719                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  7720   0042D8  EF99  F021         	goto	l1366
  7721   0042DC                     l7303:
  7722                           
  7723                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  7724   0042DC  C013  F006         	movff	read_prec_or_width@n,___wmul@multiplier
  7725   0042E0  C014  F007         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  7726   0042E4  0E00               	movlw	0
  7727   0042E6  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  7728   0042E8  0E0A               	movlw	10
  7729   0042EA  6E08               	movwf	___wmul@multiplicand^0,c
  7730   0042EC  ECDC  F025         	call	___wmul	;wreg free
  7731   0042F0  5012               	movf	read_prec_or_width@c^0,w,c
  7732   0042F2  2406               	addwf	?___wmul^0,w,c
  7733   0042F4  6E13               	movwf	read_prec_or_width@n^0,c
  7734   0042F6  0E00               	movlw	0
  7735   0042F8  2007               	addwfc	(?___wmul+1)^0,w,c
  7736   0042FA  6E14               	movwf	(read_prec_or_width@n+1)^0,c
  7737   0042FC                     
  7738                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  7739   0042FC  C00C  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  7740   004300  C00D  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  7741   004304  2ADE               	incf	postinc2,f,c
  7742   004306  0E00               	movlw	0
  7743   004308  22DD               	addwfc	postdec2,f,c
  7744   00430A                     l7307:
  7745                           
  7746                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  7747   00430A  C00C  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  7748   00430E  C00D  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  7749   004312  CFDE FFF6          	movff	postinc2,tblptrl
  7750   004316  CFDD FFF7          	movff	postdec2,tblptrh
  7751   00431A                     	if	0	;tblptru may be non-zero
  7752   00431A                     	endif
  7753   00431A                     	if	0	;tblptru may be non-zero
  7754   00431A                     	endif
  7755   00431A  0008               	tblrd		*
  7756   00431C  50F5               	movf	tablat,w,c
  7757   00431E  0FD0               	addlw	208
  7758   004320  6E12               	movwf	read_prec_or_width@c^0,c
  7759   004322  0E09               	movlw	9
  7760   004324  6412               	cpfsgt	read_prec_or_width@c^0,c
  7761   004326  EF97  F021         	goto	u8381
  7762   00432A  EF99  F021         	goto	u8380
  7763   00432E                     u8381:
  7764   00432E  EF6E  F021         	goto	l7303
  7765   004332                     u8380:
  7766   004332                     l1366:
  7767                           
  7768                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  7769   004332  C013  F00C         	movff	read_prec_or_width@n,?_read_prec_or_width
  7770   004336  C014  F00D         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  7771   00433A  0012               	return		;funcret
  7772   00433C                     __end_of_read_prec_or_width:
  7773                           	callstack 0
  7774                           
  7775 ;; *************** function ___wmul *****************
  7776 ;; Defined at:
  7777 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;  multiplier      2    5[COMRAM] unsigned int 
  7780 ;;  multiplicand    2    7[COMRAM] unsigned int 
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;  product         2    9[COMRAM] unsigned int 
  7783 ;; Return value:  Size  Location     Type
  7784 ;;                  2    5[COMRAM] unsigned int 
  7785 ;; Registers used:
  7786 ;;		wreg, status,2, status,0, prodl, prodh
  7787 ;; Tracked objects:
  7788 ;;		On entry : 0/0
  7789 ;;		On exit  : 0/0
  7790 ;;		Unchanged: 0/0
  7791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7792 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7793 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7795 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7796 ;;Total ram usage:        6 bytes
  7797 ;; Hardware stack levels used: 1
  7798 ;; Hardware stack levels required when called: 1
  7799 ;; This function calls:
  7800 ;;		Nothing
  7801 ;; This function is called by:
  7802 ;;		_read_prec_or_width
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806                           	psect	text28
  7807   004BB8                     __ptext28:
  7808                           	callstack 0
  7809   004BB8                     ___wmul:
  7810                           	callstack 24
  7811   004BB8  5006               	movf	___wmul@multiplier^0,w,c
  7812   004BBA  0208               	mulwf	___wmul@multiplicand^0,c
  7813   004BBC  CFF3 F00A          	movff	prodl,___wmul@product
  7814   004BC0  CFF4 F00B          	movff	prodh,___wmul@product+1
  7815   004BC4  5006               	movf	___wmul@multiplier^0,w,c
  7816   004BC6  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  7817   004BC8  50F3               	movf	243,w,c
  7818   004BCA  260B               	addwf	(___wmul@product+1)^0,f,c
  7819   004BCC  5007               	movf	(___wmul@multiplier+1)^0,w,c
  7820   004BCE  0208               	mulwf	___wmul@multiplicand^0,c
  7821   004BD0  50F3               	movf	243,w,c
  7822   004BD2  260B               	addwf	(___wmul@product+1)^0,f,c
  7823   004BD4  C00A  F006         	movff	___wmul@product,?___wmul
  7824   004BD8  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  7825   004BDC  0012               	return		;funcret
  7826   004BDE                     __end_of___wmul:
  7827                           	callstack 0
  7828                           
  7829 ;; *************** function _efgtoa *****************
  7830 ;; Defined at:
  7831 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  7834 ;;		 -> NULL(0), sprintf@f(12), 
  7835 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  7836 ;;  c               1   42[BANK0 ] unsigned char 
  7837 ;; Auto vars:     Size  Location     Type
  7838 ;;  u               4   85[BANK0 ] struct flui
  7839 ;;  g               4   79[BANK0 ] struct flui
  7840 ;;  l               4   74[BANK0 ] struct flui
  7841 ;;  h               4   70[BANK0 ] struct flui
  7842 ;;  ou              4   64[BANK0 ] struct flui
  7843 ;;  n               2   83[BANK0 ] int 
  7844 ;;  i               2   68[BANK0 ] int 
  7845 ;;  w               2   62[BANK0 ] int 
  7846 ;;  e               2   60[BANK0 ] int 
  7847 ;;  m               2   58[BANK0 ] int 
  7848 ;;  d               2   56[BANK0 ] int 
  7849 ;;  t               2   49[BANK0 ] int 
  7850 ;;  p               2   47[BANK0 ] int 
  7851 ;;  ne              2   45[BANK0 ] int 
  7852 ;;  sign            1   78[BANK0 ] unsigned char 
  7853 ;;  nmode           1   55[BANK0 ] unsigned char 
  7854 ;;  mode            1   54[BANK0 ] unsigned char 
  7855 ;;  pp              1   53[BANK0 ] unsigned char 
  7856 ;;  esign           1    0        unsigned char 
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  1    wreg      void 
  7859 ;; Registers used:
  7860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7866 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7867 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7868 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7869 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7870 ;;Total ram usage:       53 bytes
  7871 ;; Hardware stack levels used: 1
  7872 ;; Hardware stack levels required when called: 5
  7873 ;; This function calls:
  7874 ;;		___fladd
  7875 ;;		___fldiv
  7876 ;;		___fleq
  7877 ;;		___flge
  7878 ;;		___flmul
  7879 ;;		___flneg
  7880 ;;		___flsub
  7881 ;;		___fltol
  7882 ;;		___fpclassifyf
  7883 ;;		_floorf
  7884 ;;		_labs
  7885 ;;		_memcpy
  7886 ;;		_pad
  7887 ;;		_strcpy
  7888 ;; This function is called by:
  7889 ;;		_vfpfcnvrt
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           	psect	text29
  7894   000110                     __ptext29:
  7895                           	callstack 0
  7896   000110                     _efgtoa:
  7897                           	callstack 21
  7898   000110                     
  7899                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  7900   000110  0E00               	movlw	0
  7901   000112  0100               	movlb	0	; () banked
  7902   000114  6FAE               	movwf	efgtoa@sign& (0+255),b
  7903   000116                     
  7904                           ; BSR set to: 0
  7905                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  7906   000116  C086  F0AF         	movff	efgtoa@f,efgtoa@g
  7907   00011A  C087  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  7908   00011E  C088  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  7909   000122  C089  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  7910   000126                     
  7911                           ; BSR set to: 0
  7912                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  7913   000126  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7914   000128  EF9A  F000         	goto	u7950
  7915   00012C  EF98  F000         	goto	u7951
  7916   000130                     u7951:
  7917   000130  EFAE  F000         	goto	l7043
  7918   000134                     u7950:
  7919   000134                     
  7920                           ; BSR set to: 0
  7921                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  7922   000134  0E01               	movlw	1
  7923   000136  6FAE               	movwf	efgtoa@sign& (0+255),b
  7924   000138                     
  7925                           ; BSR set to: 0
  7926                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  7927   000138  C0AF  F080         	movff	efgtoa@g,___flneg@f1
  7928   00013C  C0B0  F081         	movff	efgtoa@g+1,___flneg@f1+1
  7929   000140  C0B1  F082         	movff	efgtoa@g+2,___flneg@f1+2
  7930   000144  C0B2  F083         	movff	efgtoa@g+3,___flneg@f1+3
  7931   000148  EC5E  F025         	call	___flneg	;wreg free
  7932   00014C  C080  F0AF         	movff	?___flneg,efgtoa@g
  7933   000150  C081  F0B0         	movff	?___flneg+1,efgtoa@g+1
  7934   000154  C082  F0B1         	movff	?___flneg+2,efgtoa@g+2
  7935   000158  C083  F0B2         	movff	?___flneg+3,efgtoa@g+3
  7936   00015C                     l7043:
  7937                           
  7938                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  7939   00015C  0E00               	movlw	0
  7940   00015E  0100               	movlb	0	; () banked
  7941   000160  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  7942   000162  0E00               	movlw	0
  7943   000164  6FB3               	movwf	efgtoa@n& (0+255),b
  7944   000166                     
  7945                           ; BSR set to: 0
  7946                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  7947   000166  C055  F09E         	movff	_width,efgtoa@w
  7948   00016A  C056  F09F         	movff	_width+1,efgtoa@w+1
  7949   00016E                     
  7950                           ; BSR set to: 0
  7951                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  7952   00016E  51AE               	movf	efgtoa@sign& (0+255),w,b
  7953   000170  B4D8               	btfsc	status,2,c
  7954   000172  EFBD  F000         	goto	u7961
  7955   000176  EFBF  F000         	goto	u7960
  7956   00017A                     u7961:
  7957   00017A  EFD3  F000         	goto	l7057
  7958   00017E                     u7960:
  7959   00017E                     
  7960                           ; BSR set to: 0
  7961                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  7962   00017E  51AE               	movf	efgtoa@sign& (0+255),w,b
  7963   000180  A4D8               	btfss	status,2,c
  7964   000182  EFC5  F000         	goto	u7971
  7965   000186  EFC7  F000         	goto	u7970
  7966   00018A                     u7971:
  7967   00018A  EFCD  F000         	goto	l7053
  7968   00018E                     u7970:
  7969   00018E                     
  7970                           ; BSR set to: 0
  7971   00018E  0E00               	movlw	0
  7972   000190  6F94               	movwf	(_efgtoa$3695+1)& (0+255),b
  7973   000192  0E2B               	movlw	43
  7974   000194  6F93               	movwf	_efgtoa$3695& (0+255),b
  7975   000196  EFD1  F000         	goto	l7055
  7976   00019A                     l7053:
  7977                           
  7978                           ; BSR set to: 0
  7979   00019A  0E00               	movlw	0
  7980   00019C  6F94               	movwf	(_efgtoa$3695+1)& (0+255),b
  7981   00019E  0E2D               	movlw	45
  7982   0001A0  6F93               	movwf	_efgtoa$3695& (0+255),b
  7983   0001A2                     l7055:
  7984                           
  7985                           ; BSR set to: 0
  7986   0001A2  C093  F0AE         	movff	_efgtoa$3695,efgtoa@sign
  7987   0001A6                     l7057:
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  7991   0001A6  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  7992   0001AA  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7993   0001AE  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7994   0001B2  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7995   0001B6  EC7B  F01F         	call	___fpclassifyf	;wreg free
  7996   0001BA  0406               	decf	?___fpclassifyf^0,w,c
  7997   0001BC  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  7998   0001BE  A4D8               	btfss	status,2,c
  7999   0001C0  EFE4  F000         	goto	u7981
  8000   0001C4  EFE6  F000         	goto	u7980
  8001   0001C8                     u7981:
  8002   0001C8  EF19  F001         	goto	l7075
  8003   0001CC                     u7980:
  8004   0001CC                     
  8005                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  8006   0001CC  0100               	movlb	0	; () banked
  8007   0001CE  51AE               	movf	efgtoa@sign& (0+255),w,b
  8008   0001D0  B4D8               	btfsc	status,2,c
  8009   0001D2  EFED  F000         	goto	u7991
  8010   0001D6  EFEF  F000         	goto	u7990
  8011   0001DA                     u7991:
  8012   0001DA  EFF8  F000         	goto	l7067
  8013   0001DE                     u7990:
  8014   0001DE                     
  8015                           ; BSR set to: 0
  8016                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  8017   0001DE  C0AE  F115         	movff	efgtoa@sign,_dbuf
  8018   0001E2                     
  8019                           ; BSR set to: 0
  8020                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  8021   0001E2  079E               	decf	efgtoa@w& (0+255),f,b
  8022   0001E4  A0D8               	btfss	status,0,c
  8023   0001E6  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8024   0001E8                     
  8025                           ; BSR set to: 0
  8026                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  8027   0001E8  0E00               	movlw	0
  8028   0001EA  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  8029   0001EC  0E01               	movlw	1
  8030   0001EE  6FB3               	movwf	efgtoa@n& (0+255),b
  8031   0001F0                     l7067:
  8032                           
  8033                           ; BSR set to: 0
  8034                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  8035   0001F0  0E15               	movlw	low _dbuf
  8036   0001F2  25B3               	addwf	efgtoa@n& (0+255),w,b
  8037   0001F4  6E06               	movwf	strcpy@dest^0,c
  8038   0001F6  0E01               	movlw	high _dbuf
  8039   0001F8  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8040   0001FA  6E07               	movwf	(strcpy@dest+1)^0,c
  8041   0001FC  0EE7               	movlw	low STR_23
  8042   0001FE  6E08               	movwf	strcpy@src^0,c
  8043   000200  0EFF               	movlw	high STR_23
  8044   000202  6E09               	movwf	(strcpy@src+1)^0,c
  8045   000204  ECFF  F024         	call	_strcpy	;wreg free
  8046   000208                     l7069:
  8047                           
  8048                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  8049   000208  0100               	movlb	0	; () banked
  8050   00020A  0EFD               	movlw	253
  8051   00020C  279E               	addwf	efgtoa@w& (0+255),f,b
  8052   00020E  0EFF               	movlw	255
  8053   000210  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8054   000212                     
  8055                           ; BSR set to: 0
  8056                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  8057   000212  C084  F017         	movff	efgtoa@fp,pad@fp
  8058   000216  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  8059   00021A  0E15               	movlw	low _dbuf
  8060   00021C  6E19               	movwf	pad@buf^0,c
  8061   00021E  0E01               	movlw	high _dbuf
  8062   000220  6E1A               	movwf	(pad@buf+1)^0,c
  8063   000222  C09E  F01B         	movff	efgtoa@w,pad@p
  8064   000226  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  8065   00022A  EC68  F023         	call	_pad	;wreg free
  8066   00022E  EF84  F005         	goto	l1298
  8067   000232                     l7075:
  8068                           
  8069                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  8070   000232  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  8071   000236  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8072   00023A  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8073   00023E  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8074   000242  EC7B  F01F         	call	___fpclassifyf	;wreg free
  8075   000246  5006               	movf	?___fpclassifyf^0,w,c
  8076   000248  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  8077   00024A  A4D8               	btfss	status,2,c
  8078   00024C  EF2A  F001         	goto	u8001
  8079   000250  EF2C  F001         	goto	u8000
  8080   000254                     u8001:
  8081   000254  EF4C  F001         	goto	l7093
  8082   000258                     u8000:
  8083   000258                     
  8084                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  8085   000258  0100               	movlb	0	; () banked
  8086   00025A  51AE               	movf	efgtoa@sign& (0+255),w,b
  8087   00025C  B4D8               	btfsc	status,2,c
  8088   00025E  EF33  F001         	goto	u8011
  8089   000262  EF35  F001         	goto	u8010
  8090   000266                     u8011:
  8091   000266  EF3E  F001         	goto	l7085
  8092   00026A                     u8010:
  8093   00026A                     
  8094                           ; BSR set to: 0
  8095                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  8096   00026A  C0AE  F115         	movff	efgtoa@sign,_dbuf
  8097   00026E                     
  8098                           ; BSR set to: 0
  8099                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  8100   00026E  079E               	decf	efgtoa@w& (0+255),f,b
  8101   000270  A0D8               	btfss	status,0,c
  8102   000272  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8103   000274                     
  8104                           ; BSR set to: 0
  8105                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  8106   000274  0E00               	movlw	0
  8107   000276  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  8108   000278  0E01               	movlw	1
  8109   00027A  6FB3               	movwf	efgtoa@n& (0+255),b
  8110   00027C                     l7085:
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  8114   00027C  0E15               	movlw	low _dbuf
  8115   00027E  25B3               	addwf	efgtoa@n& (0+255),w,b
  8116   000280  6E06               	movwf	strcpy@dest^0,c
  8117   000282  0E01               	movlw	high _dbuf
  8118   000284  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8119   000286  6E07               	movwf	(strcpy@dest+1)^0,c
  8120   000288  0EEB               	movlw	low STR_26
  8121   00028A  6E08               	movwf	strcpy@src^0,c
  8122   00028C  0EFF               	movlw	high STR_26
  8123   00028E  6E09               	movwf	(strcpy@src+1)^0,c
  8124   000290  ECFF  F024         	call	_strcpy	;wreg free
  8125   000294  EF04  F001         	goto	l7069
  8126   000298                     l7093:
  8127                           
  8128                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  8129   000298  0E00               	movlw	0
  8130   00029A  0100               	movlb	0	; () banked
  8131   00029C  6FB5               	movwf	efgtoa@u& (0+255),b
  8132   00029E  0E00               	movlw	0
  8133   0002A0  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  8134   0002A2  0E80               	movlw	128
  8135   0002A4  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  8136   0002A6  0E3F               	movlw	63
  8137   0002A8  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  8138                           
  8139                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  8140   0002AA  0E00               	movlw	0
  8141   0002AC  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  8142   0002AE  0E00               	movlw	0
  8143   0002B0  6F9C               	movwf	efgtoa@e& (0+255),b
  8144   0002B2                     
  8145                           ; BSR set to: 0
  8146                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  8147   0002B2  C0AF  F006         	movff	efgtoa@g,___fleq@ff1
  8148   0002B6  C0B0  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  8149   0002BA  C0B1  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  8150   0002BE  C0B2  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  8151   0002C2  0E00               	movlw	0
  8152   0002C4  6E0A               	movwf	___fleq@ff2^0,c
  8153   0002C6  0E00               	movlw	0
  8154   0002C8  6E0B               	movwf	(___fleq@ff2+1)^0,c
  8155   0002CA  0E00               	movlw	0
  8156   0002CC  6E0C               	movwf	(___fleq@ff2+2)^0,c
  8157   0002CE  0E00               	movlw	0
  8158   0002D0  6E0D               	movwf	(___fleq@ff2+3)^0,c
  8159   0002D2  EC13  F023         	call	___fleq	;wreg free
  8160   0002D6  B0D8               	btfsc	status,0,c
  8161   0002D8  EF70  F001         	goto	u8021
  8162   0002DC  EF72  F001         	goto	u8020
  8163   0002E0                     u8021:
  8164   0002E0  EF51  F002         	goto	l1301
  8165   0002E4                     u8020:
  8166   0002E4  EF7F  F001         	goto	l7101
  8167   0002E8                     l1303:
  8168                           
  8169                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  8170   0002E8  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  8171   0002EC  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  8172   0002F0  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  8173   0002F4  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  8174   0002F8                     
  8175                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  8176   0002F8  0100               	movlb	0	; () banked
  8177   0002FA  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  8178   0002FC  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  8179   0002FE                     l7101:
  8180                           
  8181                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  8182   0002FE  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8183   000302  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8184   000306  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8185   00030A  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8186   00030E  0E00               	movlw	0
  8187   000310  6E18               	movwf	___flmul@a^0,c
  8188   000312  0E00               	movlw	0
  8189   000314  6E19               	movwf	(___flmul@a+1)^0,c
  8190   000316  0E20               	movlw	32
  8191   000318  6E1A               	movwf	(___flmul@a+2)^0,c
  8192   00031A  0E41               	movlw	65
  8193   00031C  6E1B               	movwf	(___flmul@a+3)^0,c
  8194   00031E  EC54  F00F         	call	___flmul	;wreg free
  8195   000322  C014  F0A0         	movff	?___flmul,efgtoa@ou
  8196   000326  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
  8197   00032A  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
  8198   00032E  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
  8199   000332  0100               	movlb	0	; () banked
  8200   000334  51A0               	movf	efgtoa@ou& (0+255),w,b
  8201   000336  5DAF               	subwf	efgtoa@g& (0+255),w,b
  8202   000338  6E06               	movwf	labs@a^0,c
  8203   00033A  51A1               	movf	(efgtoa@ou+1)& (0+255),w,b
  8204   00033C  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8205   00033E  6E07               	movwf	(labs@a+1)^0,c
  8206   000340  51A2               	movf	(efgtoa@ou+2)& (0+255),w,b
  8207   000342  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8208   000344  6E08               	movwf	(labs@a+2)^0,c
  8209   000346  51A3               	movf	(efgtoa@ou+3)& (0+255),w,b
  8210   000348  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8211   00034A  6E09               	movwf	(labs@a+3)^0,c
  8212   00034C  ECBD  F023         	call	_labs	;wreg free
  8213   000350  BE09               	btfsc	(?_labs+3)^0,7,c
  8214   000352  EFB6  F001         	goto	u8031
  8215   000356  5009               	movf	(?_labs+3)^0,w,c
  8216   000358  1008               	iorwf	(?_labs+2)^0,w,c
  8217   00035A  1007               	iorwf	(?_labs+1)^0,w,c
  8218   00035C  E109               	bnz	u8030
  8219   00035E  0E02               	movlw	2
  8220   000360  5C06               	subwf	?_labs^0,w,c
  8221   000362  A0D8               	btfss	status,0,c
  8222   000364  EFB6  F001         	goto	u8031
  8223   000368  EFB8  F001         	goto	u8030
  8224   00036C                     u8031:
  8225   00036C  EF74  F001         	goto	l1303
  8226   000370                     u8030:
  8227   000370  C0A0  F02D         	movff	efgtoa@ou,___flge@ff1
  8228   000374  C0A1  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
  8229   000378  C0A2  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
  8230   00037C  C0A3  F030         	movff	efgtoa@ou+3,___flge@ff1+3
  8231   000380  C0AF  F031         	movff	efgtoa@g,___flge@ff2
  8232   000384  C0B0  F032         	movff	efgtoa@g+1,___flge@ff2+1
  8233   000388  C0B1  F033         	movff	efgtoa@g+2,___flge@ff2+2
  8234   00038C  C0B2  F034         	movff	efgtoa@g+3,___flge@ff2+3
  8235   000390  ECF9  F01E         	call	___flge	;wreg free
  8236   000394  A0D8               	btfss	status,0,c
  8237   000396  EFCF  F001         	goto	u8041
  8238   00039A  EFD1  F001         	goto	u8040
  8239   00039E                     u8041:
  8240   00039E  EF74  F001         	goto	l1303
  8241   0003A2                     u8040:
  8242   0003A2                     
  8243                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  8244   0003A2  0100               	movlb	0	; () banked
  8245   0003A4  51B5               	movf	efgtoa@u& (0+255),w,b
  8246   0003A6  5DAF               	subwf	efgtoa@g& (0+255),w,b
  8247   0003A8  6E06               	movwf	labs@a^0,c
  8248   0003AA  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  8249   0003AC  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8250   0003AE  6E07               	movwf	(labs@a+1)^0,c
  8251   0003B0  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  8252   0003B2  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8253   0003B4  6E08               	movwf	(labs@a+2)^0,c
  8254   0003B6  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  8255   0003B8  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8256   0003BA  6E09               	movwf	(labs@a+3)^0,c
  8257   0003BC  ECBD  F023         	call	_labs	;wreg free
  8258   0003C0  BE09               	btfsc	(?_labs+3)^0,7,c
  8259   0003C2  EFF0  F001         	goto	u8050
  8260   0003C6  5009               	movf	(?_labs+3)^0,w,c
  8261   0003C8  1008               	iorwf	(?_labs+2)^0,w,c
  8262   0003CA  1007               	iorwf	(?_labs+1)^0,w,c
  8263   0003CC  E107               	bnz	u8051
  8264   0003CE  0E02               	movlw	2
  8265   0003D0  5C06               	subwf	?_labs^0,w,c
  8266   0003D2  B0D8               	btfsc	status,0,c
  8267   0003D4  EFEE  F001         	goto	u8051
  8268   0003D8  EFF0  F001         	goto	u8050
  8269   0003DC                     u8051:
  8270   0003DC  EF38  F002         	goto	l7119
  8271   0003E0                     u8050:
  8272   0003E0                     l7109:
  8273                           
  8274                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  8275   0003E0  C0B5  F0AF         	movff	efgtoa@u,efgtoa@g
  8276   0003E4  C0B6  F0B0         	movff	efgtoa@u+1,efgtoa@g+1
  8277   0003E8  C0B7  F0B1         	movff	efgtoa@u+2,efgtoa@g+2
  8278   0003EC  C0B8  F0B2         	movff	efgtoa@u+3,efgtoa@g+3
  8279                           
  8280                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  8281   0003F0  EF51  F002         	goto	l1301
  8282   0003F4                     l7111:
  8283                           
  8284                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  8285   0003F4  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  8286   0003F8  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  8287   0003FC  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  8288   000400  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  8289   000404  0E00               	movlw	0
  8290   000406  6E31               	movwf	___fldiv@a^0,c
  8291   000408  0E00               	movlw	0
  8292   00040A  6E32               	movwf	(___fldiv@a+1)^0,c
  8293   00040C  0E20               	movlw	32
  8294   00040E  6E33               	movwf	(___fldiv@a+2)^0,c
  8295   000410  0E41               	movlw	65
  8296   000412  6E34               	movwf	(___fldiv@a+3)^0,c
  8297   000414  EC69  F011         	call	___fldiv	;wreg free
  8298   000418  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  8299   00041C  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  8300   000420  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  8301   000424  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  8302   000428                     
  8303                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  8304   000428  0100               	movlb	0	; () banked
  8305   00042A  079C               	decf	efgtoa@e& (0+255),f,b
  8306   00042C  A0D8               	btfss	status,0,c
  8307   00042E  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  8308   000430                     
  8309                           ; BSR set to: 0
  8310                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  8311   000430  51B5               	movf	efgtoa@u& (0+255),w,b
  8312   000432  5DAF               	subwf	efgtoa@g& (0+255),w,b
  8313   000434  6E06               	movwf	labs@a^0,c
  8314   000436  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  8315   000438  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8316   00043A  6E07               	movwf	(labs@a+1)^0,c
  8317   00043C  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  8318   00043E  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8319   000440  6E08               	movwf	(labs@a+2)^0,c
  8320   000442  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  8321   000444  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8322   000446  6E09               	movwf	(labs@a+3)^0,c
  8323   000448  ECBD  F023         	call	_labs	;wreg free
  8324   00044C  BE09               	btfsc	(?_labs+3)^0,7,c
  8325   00044E  EF36  F002         	goto	u8060
  8326   000452  5009               	movf	(?_labs+3)^0,w,c
  8327   000454  1008               	iorwf	(?_labs+2)^0,w,c
  8328   000456  1007               	iorwf	(?_labs+1)^0,w,c
  8329   000458  E107               	bnz	u8061
  8330   00045A  0E02               	movlw	2
  8331   00045C  5C06               	subwf	?_labs^0,w,c
  8332   00045E  B0D8               	btfsc	status,0,c
  8333   000460  EF34  F002         	goto	u8061
  8334   000464  EF36  F002         	goto	u8060
  8335   000468                     u8061:
  8336   000468  EF38  F002         	goto	l7119
  8337   00046C                     u8060:
  8338   00046C  EFF0  F001         	goto	l7109
  8339   000470                     l7119:
  8340                           
  8341                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  8342   000470  C0AF  F02D         	movff	efgtoa@g,___flge@ff1
  8343   000474  C0B0  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  8344   000478  C0B1  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  8345   00047C  C0B2  F030         	movff	efgtoa@g+3,___flge@ff1+3
  8346   000480  C0B5  F031         	movff	efgtoa@u,___flge@ff2
  8347   000484  C0B6  F032         	movff	efgtoa@u+1,___flge@ff2+1
  8348   000488  C0B7  F033         	movff	efgtoa@u+2,___flge@ff2+2
  8349   00048C  C0B8  F034         	movff	efgtoa@u+3,___flge@ff2+3
  8350   000490  ECF9  F01E         	call	___flge	;wreg free
  8351   000494  A0D8               	btfss	status,0,c
  8352   000496  EF4F  F002         	goto	u8071
  8353   00049A  EF51  F002         	goto	u8070
  8354   00049E                     u8071:
  8355   00049E  EFFA  F001         	goto	l7111
  8356   0004A2                     u8070:
  8357   0004A2                     l1301:
  8358                           
  8359                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  8360   0004A2  C08A  F096         	movff	efgtoa@c,efgtoa@mode
  8361                           
  8362                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  8363   0004A6  C096  F097         	movff	efgtoa@mode,efgtoa@nmode
  8364   0004AA                     
  8365                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  8366   0004AA  BE58               	btfsc	(_prec+1)^0,7,c
  8367   0004AC  EF5A  F002         	goto	u8081
  8368   0004B0  EF5C  F002         	goto	u8080
  8369   0004B4                     u8081:
  8370   0004B4  EF62  F002         	goto	l7125
  8371   0004B8                     u8080:
  8372   0004B8  C057  F08F         	movff	_prec,efgtoa@p
  8373   0004BC  C058  F090         	movff	_prec+1,efgtoa@p+1
  8374   0004C0  EF67  F002         	goto	l7127
  8375   0004C4                     l7125:
  8376   0004C4  0E00               	movlw	0
  8377   0004C6  0100               	movlb	0	; () banked
  8378   0004C8  6F90               	movwf	(efgtoa@p+1)& (0+255),b
  8379   0004CA  0E06               	movlw	6
  8380   0004CC  6F8F               	movwf	efgtoa@p& (0+255),b
  8381   0004CE                     l7127:
  8382                           
  8383                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  8384   0004CE  C08F  F09A         	movff	efgtoa@p,efgtoa@m
  8385   0004D2  C090  F09B         	movff	efgtoa@p+1,efgtoa@m+1
  8386   0004D6                     
  8387                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  8388   0004D6  0100               	movlb	0	; () banked
  8389   0004D8  4B9A               	infsnz	efgtoa@m& (0+255),f,b
  8390   0004DA  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
  8391   0004DC                     
  8392                           ; BSR set to: 0
  8393                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  8394   0004DC  0E66               	movlw	102
  8395   0004DE  1997               	xorwf	efgtoa@nmode& (0+255),w,b
  8396   0004E0  A4D8               	btfss	status,2,c
  8397   0004E2  EF75  F002         	goto	u8091
  8398   0004E6  EF77  F002         	goto	u8090
  8399   0004EA                     u8091:
  8400   0004EA  EF97  F002         	goto	l7141
  8401   0004EE                     u8090:
  8402   0004EE                     
  8403                           ; BSR set to: 0
  8404                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  8405   0004EE  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8406   0004F0  EF7E  F002         	goto	u8100
  8407   0004F4  EF7C  F002         	goto	u8101
  8408   0004F8                     u8101:
  8409   0004F8  EF8A  F002         	goto	l7137
  8410   0004FC                     u8100:
  8411   0004FC                     
  8412                           ; BSR set to: 0
  8413                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  8414   0004FC  0E00               	movlw	0
  8415   0004FE  6FB5               	movwf	efgtoa@u& (0+255),b
  8416   000500  0E00               	movlw	0
  8417   000502  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  8418   000504  0E80               	movlw	128
  8419   000506  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  8420   000508  0E3F               	movlw	63
  8421   00050A  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  8422                           
  8423                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  8424   00050C  0E00               	movlw	0
  8425   00050E  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  8426   000510  0E00               	movlw	0
  8427   000512  6F9C               	movwf	efgtoa@e& (0+255),b
  8428   000514                     l7137:
  8429                           
  8430                           ; BSR set to: 0
  8431                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  8432   000514  0E67               	movlw	103
  8433   000516  1996               	xorwf	efgtoa@mode& (0+255),w,b
  8434   000518  B4D8               	btfsc	status,2,c
  8435   00051A  EF91  F002         	goto	u8111
  8436   00051E  EF93  F002         	goto	u8110
  8437   000522                     u8111:
  8438   000522  EF97  F002         	goto	l7141
  8439   000526                     u8110:
  8440   000526                     
  8441                           ; BSR set to: 0
  8442                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  8443   000526  519C               	movf	efgtoa@e& (0+255),w,b
  8444   000528  279A               	addwf	efgtoa@m& (0+255),f,b
  8445   00052A  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  8446   00052C  239B               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8447   00052E                     l7141:
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  8451   00052E  0E00               	movlw	0
  8452   000530  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  8453   000532  0E00               	movlw	0
  8454   000534  6FA4               	movwf	efgtoa@i& (0+255),b
  8455   000536                     
  8456                           ; BSR set to: 0
  8457                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  8458   000536  C0AF  F0A6         	movff	efgtoa@g,efgtoa@h
  8459   00053A  C0B0  F0A7         	movff	efgtoa@g+1,efgtoa@h+1
  8460   00053E  C0B1  F0A8         	movff	efgtoa@g+2,efgtoa@h+2
  8461   000542  C0B2  F0A9         	movff	efgtoa@g+3,efgtoa@h+3
  8462   000546                     
  8463                           ; BSR set to: 0
  8464                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  8465   000546  C0B5  F0A0         	movff	efgtoa@u,efgtoa@ou
  8466   00054A  C0B6  F0A1         	movff	efgtoa@u+1,efgtoa@ou+1
  8467   00054E  C0B7  F0A2         	movff	efgtoa@u+2,efgtoa@ou+2
  8468   000552  C0B8  F0A3         	movff	efgtoa@u+3,efgtoa@ou+3
  8469                           
  8470                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  8471   000556  EF28  F003         	goto	l7155
  8472   00055A                     l7147:
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  8476   00055A  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
  8477   00055E  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
  8478   000562  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
  8479   000566  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
  8480   00056A  C0B5  F031         	movff	efgtoa@u,___fldiv@a
  8481   00056E  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
  8482   000572  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
  8483   000576  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
  8484   00057A  EC69  F011         	call	___fldiv	;wreg free
  8485   00057E  C02D  F046         	movff	?___fldiv,floorf@x
  8486   000582  C02E  F047         	movff	?___fldiv+1,floorf@x+1
  8487   000586  C02F  F048         	movff	?___fldiv+2,floorf@x+2
  8488   00058A  C030  F049         	movff	?___fldiv+3,floorf@x+3
  8489   00058E  EC0C  F017         	call	_floorf	;wreg free
  8490   000592  C046  F0AA         	movff	?_floorf,efgtoa@l
  8491   000596  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
  8492   00059A  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
  8493   00059E  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
  8494                           
  8495                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  8496   0005A2  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  8497   0005A6  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  8498   0005AA  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  8499   0005AE  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  8500   0005B2  EC75  F01E         	call	___fltol	;wreg free
  8501   0005B6  C064  F098         	movff	?___fltol,efgtoa@d
  8502   0005BA  C065  F099         	movff	?___fltol+1,efgtoa@d+1
  8503   0005BE                     
  8504                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  8505   0005BE  C0A6  F064         	movff	efgtoa@h,___flsub@b
  8506   0005C2  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
  8507   0005C6  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
  8508   0005CA  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
  8509   0005CE  C0AA  F018         	movff	efgtoa@l,___flmul@a
  8510   0005D2  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
  8511   0005D6  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
  8512   0005DA  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
  8513   0005DE  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8514   0005E2  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8515   0005E6  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8516   0005EA  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8517   0005EE  EC54  F00F         	call	___flmul	;wreg free
  8518   0005F2  C014  F068         	movff	?___flmul,___flsub@a
  8519   0005F6  C015  F069         	movff	?___flmul+1,___flsub@a+1
  8520   0005FA  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  8521   0005FE  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  8522   000602  ECB9  F024         	call	___flsub	;wreg free
  8523   000606  C064  F0A6         	movff	?___flsub,efgtoa@h
  8524   00060A  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
  8525   00060E  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
  8526   000612  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
  8527   000616                     
  8528                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  8529   000616  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  8530   00061A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  8531   00061E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  8532   000622  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  8533   000626  0E00               	movlw	0
  8534   000628  6E31               	movwf	___fldiv@a^0,c
  8535   00062A  0E00               	movlw	0
  8536   00062C  6E32               	movwf	(___fldiv@a+1)^0,c
  8537   00062E  0E20               	movlw	32
  8538   000630  6E33               	movwf	(___fldiv@a+2)^0,c
  8539   000632  0E41               	movlw	65
  8540   000634  6E34               	movwf	(___fldiv@a+3)^0,c
  8541   000636  EC69  F011         	call	___fldiv	;wreg free
  8542   00063A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  8543   00063E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  8544   000642  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  8545   000646  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  8546   00064A                     
  8547                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  8548   00064A  0100               	movlb	0	; () banked
  8549   00064C  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  8550   00064E  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  8551   000650                     l7155:
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  8555   000650  519A               	movf	efgtoa@m& (0+255),w,b
  8556   000652  5DA4               	subwf	efgtoa@i& (0+255),w,b
  8557   000654  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8558   000656  0A80               	xorlw	128
  8559   000658  6F8B               	movwf	??_efgtoa& (0+255),b
  8560   00065A  519B               	movf	(efgtoa@m+1)& (0+255),w,b
  8561   00065C  0A80               	xorlw	128
  8562   00065E  598B               	subwfb	??_efgtoa& (0+255),w,b
  8563   000660  A0D8               	btfss	status,0,c
  8564   000662  EF35  F003         	goto	u8121
  8565   000666  EF37  F003         	goto	u8120
  8566   00066A                     u8121:
  8567   00066A  EFAD  F002         	goto	l7147
  8568   00066E                     u8120:
  8569   00066E                     
  8570                           ; BSR set to: 0
  8571                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  8572   00066E  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8573   000672  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8574   000676  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8575   00067A  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8576   00067E  0E00               	movlw	0
  8577   000680  6E18               	movwf	___flmul@a^0,c
  8578   000682  0E00               	movlw	0
  8579   000684  6E19               	movwf	(___flmul@a+1)^0,c
  8580   000686  0EA0               	movlw	160
  8581   000688  6E1A               	movwf	(___flmul@a+2)^0,c
  8582   00068A  0E40               	movlw	64
  8583   00068C  6E1B               	movwf	(___flmul@a+3)^0,c
  8584   00068E  EC54  F00F         	call	___flmul	;wreg free
  8585   000692  C014  F0AA         	movff	?___flmul,efgtoa@l
  8586   000696  C015  F0AB         	movff	?___flmul+1,efgtoa@l+1
  8587   00069A  C016  F0AC         	movff	?___flmul+2,efgtoa@l+2
  8588   00069E  C017  F0AD         	movff	?___flmul+3,efgtoa@l+3
  8589   0006A2                     
  8590                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  8591   0006A2  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
  8592   0006A6  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  8593   0006AA  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  8594   0006AE  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
  8595   0006B2  C0AA  F031         	movff	efgtoa@l,___flge@ff2
  8596   0006B6  C0AB  F032         	movff	efgtoa@l+1,___flge@ff2+1
  8597   0006BA  C0AC  F033         	movff	efgtoa@l+2,___flge@ff2+2
  8598   0006BE  C0AD  F034         	movff	efgtoa@l+3,___flge@ff2+3
  8599   0006C2  ECF9  F01E         	call	___flge	;wreg free
  8600   0006C6  B0D8               	btfsc	status,0,c
  8601   0006C8  EF68  F003         	goto	u8131
  8602   0006CC  EF6A  F003         	goto	u8130
  8603   0006D0                     u8131:
  8604   0006D0  EF75  F003         	goto	l7163
  8605   0006D4                     u8130:
  8606   0006D4                     
  8607                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  8608   0006D4  0E00               	movlw	0
  8609   0006D6  0100               	movlb	0	; () banked
  8610   0006D8  6FAA               	movwf	efgtoa@l& (0+255),b
  8611   0006DA  0E00               	movlw	0
  8612   0006DC  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
  8613   0006DE  0E00               	movlw	0
  8614   0006E0  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
  8615   0006E2  0E00               	movlw	0
  8616   0006E4  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
  8617                           
  8618                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  8619   0006E6  EF9E  F003         	goto	l7169
  8620   0006EA                     l7163:
  8621                           
  8622                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  8623   0006EA  C0A6  F006         	movff	efgtoa@h,___fleq@ff1
  8624   0006EE  C0A7  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  8625   0006F2  C0A8  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  8626   0006F6  C0A9  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  8627   0006FA  C0AA  F00A         	movff	efgtoa@l,___fleq@ff2
  8628   0006FE  C0AB  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  8629   000702  C0AC  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  8630   000706  C0AD  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  8631   00070A  EC13  F023         	call	___fleq	;wreg free
  8632   00070E  A0D8               	btfss	status,0,c
  8633   000710  EF8C  F003         	goto	u8141
  8634   000714  EF8E  F003         	goto	u8140
  8635   000718                     u8141:
  8636   000718  EF9E  F003         	goto	l7169
  8637   00071C                     u8140:
  8638   00071C  0100               	movlb	0	; () banked
  8639   00071E  B198               	btfsc	efgtoa@d& (0+255),0,b
  8640   000720  EF94  F003         	goto	u8151
  8641   000724  EF96  F003         	goto	u8150
  8642   000728                     u8151:
  8643   000728  EF9E  F003         	goto	l7169
  8644   00072C                     u8150:
  8645   00072C                     
  8646                           ; BSR set to: 0
  8647                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  8648   00072C  0E00               	movlw	0
  8649   00072E  6FAA               	movwf	efgtoa@l& (0+255),b
  8650   000730  0E00               	movlw	0
  8651   000732  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
  8652   000734  0E00               	movlw	0
  8653   000736  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
  8654   000738  0E00               	movlw	0
  8655   00073A  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
  8656   00073C                     l7169:
  8657                           
  8658                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  8659   00073C  C0AF  F046         	movff	efgtoa@g,___fladd@b
  8660   000740  C0B0  F047         	movff	efgtoa@g+1,___fladd@b+1
  8661   000744  C0B1  F048         	movff	efgtoa@g+2,___fladd@b+2
  8662   000748  C0B2  F049         	movff	efgtoa@g+3,___fladd@b+3
  8663   00074C  C0AA  F04A         	movff	efgtoa@l,___fladd@a
  8664   000750  C0AB  F04B         	movff	efgtoa@l+1,___fladd@a+1
  8665   000754  C0AC  F04C         	movff	efgtoa@l+2,___fladd@a+2
  8666   000758  C0AD  F04D         	movff	efgtoa@l+3,___fladd@a+3
  8667   00075C  EC62  F008         	call	___fladd	;wreg free
  8668   000760  C046  F0A6         	movff	?___fladd,efgtoa@h
  8669   000764  C047  F0A7         	movff	?___fladd+1,efgtoa@h+1
  8670   000768  C048  F0A8         	movff	?___fladd+2,efgtoa@h+2
  8671   00076C  C049  F0A9         	movff	?___fladd+3,efgtoa@h+3
  8672   000770                     
  8673                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  8674   000770  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
  8675   000774  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  8676   000778  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  8677   00077C  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
  8678   000780  0E00               	movlw	0
  8679   000782  6E18               	movwf	___flmul@a^0,c
  8680   000784  0E00               	movlw	0
  8681   000786  6E19               	movwf	(___flmul@a+1)^0,c
  8682   000788  0E20               	movlw	32
  8683   00078A  6E1A               	movwf	(___flmul@a+2)^0,c
  8684   00078C  0E41               	movlw	65
  8685   00078E  6E1B               	movwf	(___flmul@a+3)^0,c
  8686   000790  C0A0  F014         	movff	efgtoa@ou,___flmul@b
  8687   000794  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
  8688   000798  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
  8689   00079C  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
  8690   0007A0  EC54  F00F         	call	___flmul	;wreg free
  8691   0007A4  C014  F031         	movff	?___flmul,___flge@ff2
  8692   0007A8  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  8693   0007AC  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  8694   0007B0  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  8695   0007B4  ECF9  F01E         	call	___flge	;wreg free
  8696   0007B8  A0D8               	btfss	status,0,c
  8697   0007BA  EFE1  F003         	goto	u8161
  8698   0007BE  EFE3  F003         	goto	u8160
  8699   0007C2                     u8161:
  8700   0007C2  EF0C  F004         	goto	l7181
  8701   0007C6                     u8160:
  8702   0007C6                     
  8703                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  8704   0007C6  0100               	movlb	0	; () banked
  8705   0007C8  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  8706   0007CA  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  8707   0007CC                     
  8708                           ; BSR set to: 0
  8709                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  8710   0007CC  C0A0  F014         	movff	efgtoa@ou,___flmul@b
  8711   0007D0  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
  8712   0007D4  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
  8713   0007D8  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
  8714   0007DC  0E00               	movlw	0
  8715   0007DE  6E18               	movwf	___flmul@a^0,c
  8716   0007E0  0E00               	movlw	0
  8717   0007E2  6E19               	movwf	(___flmul@a+1)^0,c
  8718   0007E4  0E20               	movlw	32
  8719   0007E6  6E1A               	movwf	(___flmul@a+2)^0,c
  8720   0007E8  0E41               	movlw	65
  8721   0007EA  6E1B               	movwf	(___flmul@a+3)^0,c
  8722   0007EC  EC54  F00F         	call	___flmul	;wreg free
  8723   0007F0  C014  F0A0         	movff	?___flmul,efgtoa@ou
  8724   0007F4  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
  8725   0007F8  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
  8726   0007FC  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
  8727   000800                     
  8728                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  8729   000800  0E66               	movlw	102
  8730   000802  0100               	movlb	0	; () banked
  8731   000804  1997               	xorwf	efgtoa@nmode& (0+255),w,b
  8732   000806  A4D8               	btfss	status,2,c
  8733   000808  EF08  F004         	goto	u8171
  8734   00080C  EF0A  F004         	goto	u8170
  8735   000810                     u8171:
  8736   000810  EF0C  F004         	goto	l7181
  8737   000814                     u8170:
  8738   000814                     
  8739                           ; BSR set to: 0
  8740                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  8741   000814  4B9A               	infsnz	efgtoa@m& (0+255),f,b
  8742   000816  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
  8743   000818                     l7181:
  8744                           
  8745                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  8746   000818  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  8747   00081C  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  8748   000820  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  8749   000824  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  8750   000828                     
  8751                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  8752   000828  C09C  F08D         	movff	efgtoa@e,efgtoa@ne
  8753   00082C  C09D  F08E         	movff	efgtoa@e+1,efgtoa@ne+1
  8754   000830                     
  8755                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  8756   000830  0E00               	movlw	0
  8757   000832  0100               	movlb	0	; () banked
  8758   000834  6F95               	movwf	efgtoa@pp& (0+255),b
  8759   000836                     
  8760                           ; BSR set to: 0
  8761                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  8762   000836  0E00               	movlw	0
  8763   000838  6F92               	movwf	(efgtoa@t+1)& (0+255),b
  8764   00083A  0E00               	movlw	0
  8765   00083C  6F91               	movwf	efgtoa@t& (0+255),b
  8766   00083E                     
  8767                           ; BSR set to: 0
  8768                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  8769   00083E  0E00               	movlw	0
  8770   000840  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  8771   000842  0E00               	movlw	0
  8772   000844  6FA4               	movwf	efgtoa@i& (0+255),b
  8773                           
  8774                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8775   000846  EF0A  F005         	goto	l7231
  8776   00084A                     l7191:
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  8780   00084A  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
  8781   00084E  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
  8782   000852  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
  8783   000856  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
  8784   00085A  C0B5  F031         	movff	efgtoa@u,___fldiv@a
  8785   00085E  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
  8786   000862  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
  8787   000866  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
  8788   00086A  EC69  F011         	call	___fldiv	;wreg free
  8789   00086E  C02D  F046         	movff	?___fldiv,floorf@x
  8790   000872  C02E  F047         	movff	?___fldiv+1,floorf@x+1
  8791   000876  C02F  F048         	movff	?___fldiv+2,floorf@x+2
  8792   00087A  C030  F049         	movff	?___fldiv+3,floorf@x+3
  8793   00087E  EC0C  F017         	call	_floorf	;wreg free
  8794   000882  C046  F0AA         	movff	?_floorf,efgtoa@l
  8795   000886  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
  8796   00088A  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
  8797   00088E  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
  8798                           
  8799                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  8800   000892  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  8801   000896  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  8802   00089A  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  8803   00089E  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  8804   0008A2  EC75  F01E         	call	___fltol	;wreg free
  8805   0008A6  0100               	movlb	0	; () banked
  8806   0008A8  BF65               	btfsc	(?___fltol+1)& (0+255),7,b
  8807   0008AA  EF62  F004         	goto	u8180
  8808   0008AE  5165               	movf	(?___fltol+1)& (0+255),w,b
  8809   0008B0  E107               	bnz	u8181
  8810   0008B2  0E0A               	movlw	10
  8811   0008B4  5D64               	subwf	?___fltol& (0+255),w,b
  8812   0008B6  B0D8               	btfsc	status,0,c
  8813   0008B8  EF60  F004         	goto	u8181
  8814   0008BC  EF62  F004         	goto	u8180
  8815   0008C0                     u8181:
  8816   0008C0  EF72  F004         	goto	l7195
  8817   0008C4                     u8180:
  8818   0008C4                     
  8819                           ; BSR set to: 0
  8820   0008C4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  8821   0008C8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  8822   0008CC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  8823   0008D0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  8824   0008D4  EC75  F01E         	call	___fltol	;wreg free
  8825   0008D8  C064  F098         	movff	?___fltol,efgtoa@d
  8826   0008DC  C065  F099         	movff	?___fltol+1,efgtoa@d+1
  8827   0008E0  EF76  F004         	goto	l1331
  8828   0008E4                     l7195:
  8829                           
  8830                           ; BSR set to: 0
  8831   0008E4  0E00               	movlw	0
  8832   0008E6  6F99               	movwf	(efgtoa@d+1)& (0+255),b
  8833   0008E8  0E09               	movlw	9
  8834   0008EA  6F98               	movwf	efgtoa@d& (0+255),b
  8835   0008EC                     l1331:
  8836                           
  8837                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  8838   0008EC  0100               	movlb	0	; () banked
  8839   0008EE  5195               	movf	efgtoa@pp& (0+255),w,b
  8840   0008F0  A4D8               	btfss	status,2,c
  8841   0008F2  EF7D  F004         	goto	u8191
  8842   0008F6  EF7F  F004         	goto	u8190
  8843   0008FA                     u8191:
  8844   0008FA  EFA7  F004         	goto	l7215
  8845   0008FE                     u8190:
  8846   0008FE                     
  8847                           ; BSR set to: 0
  8848   0008FE  BF8E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8849   000900  EF86  F004         	goto	u8200
  8850   000904  EF84  F004         	goto	u8201
  8851   000908                     u8201:
  8852   000908  EFA7  F004         	goto	l7215
  8853   00090C                     u8200:
  8854   00090C                     
  8855                           ; BSR set to: 0
  8856                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  8857   00090C  0E15               	movlw	low _dbuf
  8858   00090E  25B3               	addwf	efgtoa@n& (0+255),w,b
  8859   000910  6ED9               	movwf	fsr2l,c
  8860   000912  0E01               	movlw	high _dbuf
  8861   000914  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8862   000916  6EDA               	movwf	fsr2h,c
  8863   000918  0E2E               	movlw	46
  8864   00091A  6EDF               	movwf	indf2,c
  8865   00091C                     
  8866                           ; BSR set to: 0
  8867   00091C  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  8868   00091E  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  8869   000920                     
  8870                           ; BSR set to: 0
  8871                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  8872   000920  079E               	decf	efgtoa@w& (0+255),f,b
  8873   000922  A0D8               	btfss	status,0,c
  8874   000924  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8875   000926                     
  8876                           ; BSR set to: 0
  8877                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  8878   000926  0E01               	movlw	1
  8879   000928  6F95               	movwf	efgtoa@pp& (0+255),b
  8880   00092A  EFA7  F004         	goto	l7215
  8881   00092E                     l7207:
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  8885   00092E  0E15               	movlw	low _dbuf
  8886   000930  25B3               	addwf	efgtoa@n& (0+255),w,b
  8887   000932  6ED9               	movwf	fsr2l,c
  8888   000934  0E01               	movlw	high _dbuf
  8889   000936  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8890   000938  6EDA               	movwf	fsr2h,c
  8891   00093A  0E30               	movlw	48
  8892   00093C  6EDF               	movwf	indf2,c
  8893   00093E                     
  8894                           ; BSR set to: 0
  8895   00093E  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  8896   000940  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  8897   000942                     
  8898                           ; BSR set to: 0
  8899                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  8900   000942  079E               	decf	efgtoa@w& (0+255),f,b
  8901   000944  A0D8               	btfss	status,0,c
  8902   000946  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8903   000948                     
  8904                           ; BSR set to: 0
  8905                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  8906   000948  0791               	decf	efgtoa@t& (0+255),f,b
  8907   00094A  A0D8               	btfss	status,0,c
  8908   00094C  0792               	decf	(efgtoa@t+1)& (0+255),f,b
  8909   00094E                     l7215:
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  8913   00094E  5191               	movf	efgtoa@t& (0+255),w,b
  8914   000950  1192               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8915   000952  A4D8               	btfss	status,2,c
  8916   000954  EFAE  F004         	goto	u8211
  8917   000958  EFB0  F004         	goto	u8210
  8918   00095C                     u8211:
  8919   00095C  EF97  F004         	goto	l7207
  8920   000960                     u8210:
  8921   000960                     
  8922                           ; BSR set to: 0
  8923                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  8924   000960  0E15               	movlw	low _dbuf
  8925   000962  25B3               	addwf	efgtoa@n& (0+255),w,b
  8926   000964  6ED9               	movwf	fsr2l,c
  8927   000966  0E01               	movlw	high _dbuf
  8928   000968  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8929   00096A  6EDA               	movwf	fsr2h,c
  8930   00096C  5198               	movf	efgtoa@d& (0+255),w,b
  8931   00096E  0F30               	addlw	48
  8932   000970  6EDF               	movwf	indf2,c
  8933   000972                     
  8934                           ; BSR set to: 0
  8935   000972  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  8936   000974  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  8937   000976                     
  8938                           ; BSR set to: 0
  8939                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  8940   000976  079E               	decf	efgtoa@w& (0+255),f,b
  8941   000978  A0D8               	btfss	status,0,c
  8942   00097A  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8943   00097C                     
  8944                           ; BSR set to: 0
  8945                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  8946   00097C  C0A6  F064         	movff	efgtoa@h,___flsub@b
  8947   000980  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
  8948   000984  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
  8949   000988  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
  8950   00098C  C0AA  F018         	movff	efgtoa@l,___flmul@a
  8951   000990  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
  8952   000994  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
  8953   000998  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
  8954   00099C  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8955   0009A0  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8956   0009A4  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8957   0009A8  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8958   0009AC  EC54  F00F         	call	___flmul	;wreg free
  8959   0009B0  C014  F068         	movff	?___flmul,___flsub@a
  8960   0009B4  C015  F069         	movff	?___flmul+1,___flsub@a+1
  8961   0009B8  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  8962   0009BC  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  8963   0009C0  ECB9  F024         	call	___flsub	;wreg free
  8964   0009C4  C064  F0A6         	movff	?___flsub,efgtoa@h
  8965   0009C8  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
  8966   0009CC  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
  8967   0009D0  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
  8968   0009D4                     
  8969                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  8970   0009D4  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  8971   0009D8  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  8972   0009DC  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  8973   0009E0  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  8974   0009E4  0E00               	movlw	0
  8975   0009E6  6E31               	movwf	___fldiv@a^0,c
  8976   0009E8  0E00               	movlw	0
  8977   0009EA  6E32               	movwf	(___fldiv@a+1)^0,c
  8978   0009EC  0E20               	movlw	32
  8979   0009EE  6E33               	movwf	(___fldiv@a+2)^0,c
  8980   0009F0  0E41               	movlw	65
  8981   0009F2  6E34               	movwf	(___fldiv@a+3)^0,c
  8982   0009F4  EC69  F011         	call	___fldiv	;wreg free
  8983   0009F8  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  8984   0009FC  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  8985   000A00  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  8986   000A04  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  8987   000A08                     
  8988                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  8989   000A08  0100               	movlb	0	; () banked
  8990   000A0A  078D               	decf	efgtoa@ne& (0+255),f,b
  8991   000A0C  A0D8               	btfss	status,0,c
  8992   000A0E  078E               	decf	(efgtoa@ne+1)& (0+255),f,b
  8993   000A10                     
  8994                           ; BSR set to: 0
  8995                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  8996   000A10  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  8997   000A12  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  8998   000A14                     l7231:
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9002   000A14  519A               	movf	efgtoa@m& (0+255),w,b
  9003   000A16  5DA4               	subwf	efgtoa@i& (0+255),w,b
  9004   000A18  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  9005   000A1A  0A80               	xorlw	128
  9006   000A1C  6F8B               	movwf	??_efgtoa& (0+255),b
  9007   000A1E  519B               	movf	(efgtoa@m+1)& (0+255),w,b
  9008   000A20  0A80               	xorlw	128
  9009   000A22  598B               	subwfb	??_efgtoa& (0+255),w,b
  9010   000A24  B0D8               	btfsc	status,0,c
  9011   000A26  EF17  F005         	goto	u8221
  9012   000A2A  EF19  F005         	goto	u8220
  9013   000A2E                     u8221:
  9014   000A2E  EF27  F005         	goto	l7235
  9015   000A32                     u8220:
  9016   000A32                     
  9017                           ; BSR set to: 0
  9018   000A32  BFB4               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9019   000A34  EF25  F005         	goto	u8231
  9020   000A38  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  9021   000A3A  E109               	bnz	u8230
  9022   000A3C  0E4B               	movlw	75
  9023   000A3E  5DB3               	subwf	efgtoa@n& (0+255),w,b
  9024   000A40  A0D8               	btfss	status,0,c
  9025   000A42  EF25  F005         	goto	u8231
  9026   000A46  EF27  F005         	goto	u8230
  9027   000A4A                     u8231:
  9028   000A4A  EF25  F004         	goto	l7191
  9029   000A4E                     u8230:
  9030   000A4E                     l7235:
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  9034   000A4E  0E00               	movlw	0
  9035   000A50  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  9036   000A52  0E4F               	movlw	79
  9037   000A54  6FA4               	movwf	efgtoa@i& (0+255),b
  9038   000A56                     
  9039                           ; BSR set to: 0
  9040                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  9041   000A56  0E15               	movlw	low _dbuf
  9042   000A58  25A4               	addwf	efgtoa@i& (0+255),w,b
  9043   000A5A  6ED9               	movwf	fsr2l,c
  9044   000A5C  0E01               	movlw	high _dbuf
  9045   000A5E  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9046   000A60  6EDA               	movwf	fsr2h,c
  9047   000A62  6ADF               	clrf	indf2,c
  9048   000A64                     
  9049                           ; BSR set to: 0
  9050                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  9051   000A64  0E15               	movlw	low _dbuf
  9052   000A66  6F8B               	movwf	??_efgtoa& (0+255),b
  9053   000A68  0E01               	movlw	high _dbuf
  9054   000A6A  6F8C               	movwf	(??_efgtoa+1)& (0+255),b
  9055   000A6C  51B3               	movf	efgtoa@n& (0+255),w,b
  9056   000A6E  5F8B               	subwf	??_efgtoa& (0+255),f,b
  9057   000A70  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  9058   000A72  5B8C               	subwfb	(??_efgtoa+1)& (0+255),f,b
  9059   000A74  51A4               	movf	efgtoa@i& (0+255),w,b
  9060   000A76  258B               	addwf	??_efgtoa& (0+255),w,b
  9061   000A78  6E06               	movwf	memcpy@d1^0,c
  9062   000A7A  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  9063   000A7C  218C               	addwfc	(??_efgtoa+1)& (0+255),w,b
  9064   000A7E  6E07               	movwf	(memcpy@d1+1)^0,c
  9065   000A80  0E15               	movlw	low _dbuf
  9066   000A82  6E08               	movwf	memcpy@s1^0,c
  9067   000A84  0E01               	movlw	high _dbuf
  9068   000A86  6E09               	movwf	(memcpy@s1+1)^0,c
  9069   000A88  C0B3  F00A         	movff	efgtoa@n,memcpy@n
  9070   000A8C  C0B4  F00B         	movff	efgtoa@n+1,memcpy@n+1
  9071   000A90  EC91  F024         	call	_memcpy	;wreg free
  9072   000A94                     
  9073                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  9074   000A94  0100               	movlb	0	; () banked
  9075   000A96  51B3               	movf	efgtoa@n& (0+255),w,b
  9076   000A98  5DA4               	subwf	efgtoa@i& (0+255),w,b
  9077   000A9A  6FB3               	movwf	efgtoa@n& (0+255),b
  9078   000A9C  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  9079   000A9E  59A5               	subwfb	(efgtoa@i+1)& (0+255),w,b
  9080   000AA0  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9081   000AA2                     
  9082                           ; BSR set to: 0
  9083                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  9084   000AA2  51AE               	movf	efgtoa@sign& (0+255),w,b
  9085   000AA4  A4D8               	btfss	status,2,c
  9086   000AA6  EF57  F005         	goto	u8241
  9087   000AAA  EF5A  F005         	goto	u8240
  9088   000AAE                     u8241:
  9089   000AAE  0E01               	movlw	1
  9090   000AB0  EF5B  F005         	goto	u8250
  9091   000AB4                     u8240:
  9092   000AB4  0E00               	movlw	0
  9093   000AB6                     u8250:
  9094   000AB6  6FA4               	movwf	efgtoa@i& (0+255),b
  9095   000AB8  6BA5               	clrf	(efgtoa@i+1)& (0+255),b
  9096   000ABA                     
  9097                           ; BSR set to: 0
  9098                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  9099   000ABA  51AE               	movf	efgtoa@sign& (0+255),w,b
  9100   000ABC  B4D8               	btfsc	status,2,c
  9101   000ABE  EF63  F005         	goto	u8261
  9102   000AC2  EF65  F005         	goto	u8260
  9103   000AC6                     u8261:
  9104   000AC6  EF70  F005         	goto	l7249
  9105   000ACA                     u8260:
  9106   000ACA                     
  9107                           ; BSR set to: 0
  9108                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  9109   000ACA  07B3               	decf	efgtoa@n& (0+255),f,b
  9110   000ACC  A0D8               	btfss	status,0,c
  9111   000ACE  07B4               	decf	(efgtoa@n+1)& (0+255),f,b
  9112   000AD0  0E15               	movlw	low _dbuf
  9113   000AD2  25B3               	addwf	efgtoa@n& (0+255),w,b
  9114   000AD4  6ED9               	movwf	fsr2l,c
  9115   000AD6  0E01               	movlw	high _dbuf
  9116   000AD8  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9117   000ADA  6EDA               	movwf	fsr2h,c
  9118   000ADC  C0AE  FFDF         	movff	efgtoa@sign,indf2
  9119   000AE0                     l7249:
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  9123   000AE0  51A4               	movf	efgtoa@i& (0+255),w,b
  9124   000AE2  5F9E               	subwf	efgtoa@w& (0+255),f,b
  9125   000AE4  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  9126   000AE6  5B9F               	subwfb	(efgtoa@w+1)& (0+255),f,b
  9127   000AE8                     
  9128                           ; BSR set to: 0
  9129                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  9130   000AE8  C084  F017         	movff	efgtoa@fp,pad@fp
  9131   000AEC  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  9132   000AF0  0E15               	movlw	low _dbuf
  9133   000AF2  25B3               	addwf	efgtoa@n& (0+255),w,b
  9134   000AF4  6E19               	movwf	pad@buf^0,c
  9135   000AF6  0E01               	movlw	high _dbuf
  9136   000AF8  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9137   000AFA  6E1A               	movwf	(pad@buf+1)^0,c
  9138   000AFC  C09E  F01B         	movff	efgtoa@w,pad@p
  9139   000B00  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  9140   000B04  EC68  F023         	call	_pad	;wreg free
  9141   000B08                     l1298:
  9142   000B08  0012               	return		;funcret
  9143   000B0A                     __end_of_efgtoa:
  9144                           	callstack 0
  9145                           
  9146 ;; *************** function _strcpy *****************
  9147 ;; Defined at:
  9148 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  9149 ;; Parameters:    Size  Location     Type
  9150 ;;  dest            2    5[COMRAM] PTR unsigned char 
  9151 ;;		 -> dbuf(80), 
  9152 ;;  src             2    7[COMRAM] PTR const unsigned char 
  9153 ;;		 -> STR_26(4), STR_23(4), 
  9154 ;; Auto vars:     Size  Location     Type
  9155 ;;  d               2   11[COMRAM] PTR unsigned char 
  9156 ;;		 -> dbuf(80), 
  9157 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9158 ;;		 -> STR_26(4), STR_23(4), 
  9159 ;; Return value:  Size  Location     Type
  9160 ;;                  2    5[COMRAM] PTR unsigned char 
  9161 ;; Registers used:
  9162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9163 ;; Tracked objects:
  9164 ;;		On entry : 0/0
  9165 ;;		On exit  : 0/0
  9166 ;;		Unchanged: 0/0
  9167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9168 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9169 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9171 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9172 ;;Total ram usage:        8 bytes
  9173 ;; Hardware stack levels used: 1
  9174 ;; Hardware stack levels required when called: 1
  9175 ;; This function calls:
  9176 ;;		Nothing
  9177 ;; This function is called by:
  9178 ;;		_efgtoa
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           
  9182                           	psect	text30
  9183   0049FE                     __ptext30:
  9184                           	callstack 0
  9185   0049FE                     _strcpy:
  9186                           	callstack 24
  9187   0049FE  C008  F00A         	movff	strcpy@src,strcpy@s
  9188   004A02  C009  F00B         	movff	strcpy@src+1,strcpy@s+1
  9189   004A06  C006  F00C         	movff	strcpy@dest,strcpy@d
  9190   004A0A  C007  F00D         	movff	strcpy@dest+1,strcpy@d+1
  9191   004A0E                     l6927:
  9192   004A0E  C00A  FFF6         	movff	strcpy@s,tblptrl
  9193   004A12  C00B  FFF7         	movff	strcpy@s+1,tblptrh
  9194   004A16  4A0A               	infsnz	strcpy@s^0,f,c
  9195   004A18  2A0B               	incf	(strcpy@s+1)^0,f,c
  9196   004A1A                     	if	0	;tblptru may be non-zero
  9197   004A1A                     	endif
  9198   004A1A                     	if	0	;tblptru may be non-zero
  9199   004A1A                     	endif
  9200   004A1A  C00C  FFD9         	movff	strcpy@d,fsr2l
  9201   004A1E  C00D  FFDA         	movff	strcpy@d+1,fsr2h
  9202   004A22  4A0C               	infsnz	strcpy@d^0,f,c
  9203   004A24  2A0D               	incf	(strcpy@d+1)^0,f,c
  9204   004A26  0008               	tblrd		*
  9205   004A28  CFF5 FFDF          	movff	tablat,indf2
  9206   004A2C  50DF               	movf	indf2,w,c
  9207   004A2E  A4D8               	btfss	status,2,c
  9208   004A30  EF1C  F025         	goto	u7701
  9209   004A34  EF1E  F025         	goto	u7700
  9210   004A38                     u7701:
  9211   004A38  EF07  F025         	goto	l6927
  9212   004A3C                     u7700:
  9213   004A3C  0012               	return		;funcret
  9214   004A3E                     __end_of_strcpy:
  9215                           	callstack 0
  9216                           
  9217 ;; *************** function _memcpy *****************
  9218 ;; Defined at:
  9219 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  9220 ;; Parameters:    Size  Location     Type
  9221 ;;  d1              2    5[COMRAM] PTR void 
  9222 ;;		 -> dbuf(80), 
  9223 ;;  s1              2    7[COMRAM] PTR const void 
  9224 ;;		 -> dbuf(80), 
  9225 ;;  n               2    9[COMRAM] unsigned int 
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;  s               2   14[COMRAM] PTR const unsigned char 
  9228 ;;		 -> dbuf(80), 
  9229 ;;  d               2   12[COMRAM] PTR unsigned char 
  9230 ;;		 -> dbuf(80), 
  9231 ;;  tmp             1   11[COMRAM] unsigned char 
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  2    5[COMRAM] PTR void 
  9234 ;; Registers used:
  9235 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/0
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9241 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9242 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9244 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9245 ;;Total ram usage:       11 bytes
  9246 ;; Hardware stack levels used: 1
  9247 ;; Hardware stack levels required when called: 1
  9248 ;; This function calls:
  9249 ;;		Nothing
  9250 ;; This function is called by:
  9251 ;;		_efgtoa
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           	psect	text31
  9256   004922                     __ptext31:
  9257                           	callstack 0
  9258   004922                     _memcpy:
  9259                           	callstack 24
  9260   004922  C008  F00F         	movff	memcpy@s1,memcpy@s
  9261   004926  C009  F010         	movff	memcpy@s1+1,memcpy@s+1
  9262   00492A  C006  F00D         	movff	memcpy@d1,memcpy@d
  9263   00492E  C007  F00E         	movff	memcpy@d1+1,memcpy@d+1
  9264   004932  EFAB  F024         	goto	l6971
  9265   004936                     l6963:
  9266   004936  C00F  FFD9         	movff	memcpy@s,fsr2l
  9267   00493A  C010  FFDA         	movff	memcpy@s+1,fsr2h
  9268   00493E  50DF               	movf	indf2,w,c
  9269   004940  6E0C               	movwf	memcpy@tmp^0,c
  9270   004942  4A0F               	infsnz	memcpy@s^0,f,c
  9271   004944  2A10               	incf	(memcpy@s+1)^0,f,c
  9272   004946  C00D  FFD9         	movff	memcpy@d,fsr2l
  9273   00494A  C00E  FFDA         	movff	memcpy@d+1,fsr2h
  9274   00494E  C00C  FFDF         	movff	memcpy@tmp,indf2
  9275   004952  4A0D               	infsnz	memcpy@d^0,f,c
  9276   004954  2A0E               	incf	(memcpy@d+1)^0,f,c
  9277   004956                     l6971:
  9278   004956  060A               	decf	memcpy@n^0,f,c
  9279   004958  A0D8               	btfss	status,0,c
  9280   00495A  060B               	decf	(memcpy@n+1)^0,f,c
  9281   00495C  280A               	incf	memcpy@n^0,w,c
  9282   00495E  E106               	bnz	u7821
  9283   004960  280B               	incf	(memcpy@n+1)^0,w,c
  9284   004962  A4D8               	btfss	status,2,c
  9285   004964  EFB6  F024         	goto	u7821
  9286   004968  EFB8  F024         	goto	u7820
  9287   00496C                     u7821:
  9288   00496C  EF9B  F024         	goto	l6963
  9289   004970                     u7820:
  9290   004970  0012               	return		;funcret
  9291   004972                     __end_of_memcpy:
  9292                           	callstack 0
  9293                           
  9294 ;; *************** function _labs *****************
  9295 ;; Defined at:
  9296 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;  a               4    5[COMRAM] long 
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  4    5[COMRAM] long 
  9303 ;; Registers used:
  9304 ;;		wreg, status,2, status,0
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9310 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9312 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9313 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9314 ;;Total ram usage:        8 bytes
  9315 ;; Hardware stack levels used: 1
  9316 ;; Hardware stack levels required when called: 1
  9317 ;; This function calls:
  9318 ;;		Nothing
  9319 ;; This function is called by:
  9320 ;;		_efgtoa
  9321 ;; This function uses a non-reentrant model
  9322 ;;
  9323                           
  9324                           	psect	text32
  9325   00477A                     __ptext32:
  9326                           	callstack 0
  9327   00477A                     _labs:
  9328                           	callstack 24
  9329   00477A  BE09               	btfsc	(labs@a+3)^0,7,c
  9330   00477C  EFCC  F023         	goto	u7710
  9331   004780  5009               	movf	(labs@a+3)^0,w,c
  9332   004782  1008               	iorwf	(labs@a+2)^0,w,c
  9333   004784  1007               	iorwf	(labs@a+1)^0,w,c
  9334   004786  E106               	bnz	u7711
  9335   004788  0406               	decf	labs@a^0,w,c
  9336   00478A  B0D8               	btfsc	status,0,c
  9337   00478C  EFCA  F023         	goto	u7711
  9338   004790  EFCC  F023         	goto	u7710
  9339   004794                     u7711:
  9340   004794  EFE7  F023         	goto	l1450
  9341   004798                     u7710:
  9342   004798  C006  F00A         	movff	labs@a,??_labs
  9343   00479C  C007  F00B         	movff	labs@a+1,??_labs+1
  9344   0047A0  C008  F00C         	movff	labs@a+2,??_labs+2
  9345   0047A4  C009  F00D         	movff	labs@a+3,??_labs+3
  9346   0047A8  1E0A               	comf	??_labs^0,f,c
  9347   0047AA  1E0B               	comf	(??_labs+1)^0,f,c
  9348   0047AC  1E0C               	comf	(??_labs+2)^0,f,c
  9349   0047AE  1E0D               	comf	(??_labs+3)^0,f,c
  9350   0047B0  2A0A               	incf	??_labs^0,f,c
  9351   0047B2  0E00               	movlw	0
  9352   0047B4  220B               	addwfc	(??_labs+1)^0,f,c
  9353   0047B6  220C               	addwfc	(??_labs+2)^0,f,c
  9354   0047B8  220D               	addwfc	(??_labs+3)^0,f,c
  9355   0047BA  C00A  F006         	movff	??_labs,?_labs
  9356   0047BE  C00B  F007         	movff	??_labs+1,?_labs+1
  9357   0047C2  C00C  F008         	movff	??_labs+2,?_labs+2
  9358   0047C6  C00D  F009         	movff	??_labs+3,?_labs+3
  9359   0047CA  EFEF  F023         	goto	l1453
  9360   0047CE                     l1450:
  9361   0047CE  C006  F006         	movff	labs@a,?_labs
  9362   0047D2  C007  F007         	movff	labs@a+1,?_labs+1
  9363   0047D6  C008  F008         	movff	labs@a+2,?_labs+2
  9364   0047DA  C009  F009         	movff	labs@a+3,?_labs+3
  9365   0047DE                     l1453:
  9366   0047DE  0012               	return		;funcret
  9367   0047E0                     __end_of_labs:
  9368                           	callstack 0
  9369                           
  9370 ;; *************** function _floorf *****************
  9371 ;; Defined at:
  9372 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  9373 ;; Parameters:    Size  Location     Type
  9374 ;;  x               4   69[COMRAM] float 
  9375 ;; Auto vars:     Size  Location     Type
  9376 ;;  u               4    6[BANK0 ] struct .
  9377 ;;  m               4    0[BANK0 ] unsigned long 
  9378 ;;  e               2    4[BANK0 ] int 
  9379 ;; Return value:  Size  Location     Type
  9380 ;;                  4   69[COMRAM] float 
  9381 ;; Registers used:
  9382 ;;		wreg, status,2, status,0
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9389 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9390 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9391 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9392 ;;Total ram usage:       20 bytes
  9393 ;; Hardware stack levels used: 1
  9394 ;; Hardware stack levels required when called: 1
  9395 ;; This function calls:
  9396 ;;		Nothing
  9397 ;; This function is called by:
  9398 ;;		_efgtoa
  9399 ;; This function uses a non-reentrant model
  9400 ;;
  9401                           
  9402                           	psect	text33
  9403   002E18                     __ptext33:
  9404                           	callstack 0
  9405   002E18                     _floorf:
  9406                           	callstack 24
  9407   002E18  C0F3  F066         	movff	floorf@F526,floorf@u
  9408   002E1C  C0F4  F067         	movff	floorf@F526+1,floorf@u+1
  9409   002E20  C0F5  F068         	movff	floorf@F526+2,floorf@u+2
  9410   002E24  C0F6  F069         	movff	floorf@F526+3,floorf@u+3
  9411   002E28  C046  F066         	movff	floorf@x,floorf@u
  9412   002E2C  C047  F067         	movff	floorf@x+1,floorf@u+1
  9413   002E30  C048  F068         	movff	floorf@x+2,floorf@u+2
  9414   002E34  C049  F069         	movff	floorf@x+3,floorf@u+3
  9415   002E38  0E81               	movlw	129
  9416   002E3A  6E4A               	movwf	??_floorf^0,c
  9417   002E3C  0EFF               	movlw	255
  9418   002E3E  6E4B               	movwf	(??_floorf+1)^0,c
  9419   002E40  C066  F04C         	movff	floorf@u,??_floorf+2
  9420   002E44  C067  F04D         	movff	floorf@u+1,??_floorf+3
  9421   002E48  C068  F04E         	movff	floorf@u+2,??_floorf+4
  9422   002E4C  C069  F04F         	movff	floorf@u+3,??_floorf+5
  9423   002E50  0E18               	movlw	24
  9424   002E52  EF30  F017         	goto	u7720
  9425   002E56                     u7725:
  9426   002E56  90D8               	bcf	status,0,c
  9427   002E58  324F               	rrcf	(??_floorf+5)^0,f,c
  9428   002E5A  324E               	rrcf	(??_floorf+4)^0,f,c
  9429   002E5C  324D               	rrcf	(??_floorf+3)^0,f,c
  9430   002E5E  324C               	rrcf	(??_floorf+2)^0,f,c
  9431   002E60                     u7720:
  9432   002E60  2EE8               	decfsz	wreg,f,c
  9433   002E62  EF2B  F017         	goto	u7725
  9434   002E66  504C               	movf	(??_floorf+2)^0,w,c
  9435   002E68  244A               	addwf	??_floorf^0,w,c
  9436   002E6A  0100               	movlb	0	; () banked
  9437   002E6C  6F64               	movwf	floorf@e& (0+255),b
  9438   002E6E  0E00               	movlw	0
  9439   002E70  204B               	addwfc	(??_floorf+1)^0,w,c
  9440   002E72  6F65               	movwf	(floorf@e+1)& (0+255),b
  9441   002E74  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9442   002E76  EF46  F017         	goto	u7731
  9443   002E7A  5165               	movf	(floorf@e+1)& (0+255),w,b
  9444   002E7C  E109               	bnz	u7730
  9445   002E7E  0E17               	movlw	23
  9446   002E80  5D64               	subwf	floorf@e& (0+255),w,b
  9447   002E82  A0D8               	btfss	status,0,c
  9448   002E84  EF46  F017         	goto	u7731
  9449   002E88  EF48  F017         	goto	u7730
  9450   002E8C                     u7731:
  9451   002E8C  EF52  F017         	goto	l6939
  9452   002E90                     u7730:
  9453   002E90                     l6937:
  9454                           
  9455                           ; BSR set to: 0
  9456   002E90  C046  F046         	movff	floorf@x,?_floorf
  9457   002E94  C047  F047         	movff	floorf@x+1,?_floorf+1
  9458   002E98  C048  F048         	movff	floorf@x+2,?_floorf+2
  9459   002E9C  C049  F049         	movff	floorf@x+3,?_floorf+3
  9460   002EA0  EF16  F018         	goto	l1439
  9461   002EA4                     l6939:
  9462                           
  9463                           ; BSR set to: 0
  9464   002EA4  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9465   002EA6  EF57  F017         	goto	u7741
  9466   002EAA  EF59  F017         	goto	u7740
  9467   002EAE                     u7741:
  9468   002EAE  EFCA  F017         	goto	l6949
  9469   002EB2                     u7740:
  9470   002EB2                     
  9471                           ; BSR set to: 0
  9472   002EB2  C064  F04A         	movff	floorf@e,??_floorf
  9473   002EB6  0EFF               	movlw	255
  9474   002EB8  6E4B               	movwf	(??_floorf+1)^0,c
  9475   002EBA  0EFF               	movlw	255
  9476   002EBC  6E4C               	movwf	(??_floorf+2)^0,c
  9477   002EBE  0E7F               	movlw	127
  9478   002EC0  6E4D               	movwf	(??_floorf+3)^0,c
  9479   002EC2  0E00               	movlw	0
  9480   002EC4  6E4E               	movwf	(??_floorf+4)^0,c
  9481   002EC6                     u7755:
  9482   002EC6  664A               	tstfsz	??_floorf^0,c
  9483   002EC8  EF68  F017         	goto	u7756
  9484   002ECC  EF70  F017         	goto	u7757
  9485   002ED0                     u7756:
  9486   002ED0  344E               	rlcf	(??_floorf+4)^0,w,c
  9487   002ED2  324E               	rrcf	(??_floorf+4)^0,f,c
  9488   002ED4  324D               	rrcf	(??_floorf+3)^0,f,c
  9489   002ED6  324C               	rrcf	(??_floorf+2)^0,f,c
  9490   002ED8  324B               	rrcf	(??_floorf+1)^0,f,c
  9491   002EDA  2E4A               	decfsz	??_floorf^0,f,c
  9492   002EDC  EF63  F017         	goto	u7755
  9493   002EE0                     u7757:
  9494   002EE0  C04B  F060         	movff	??_floorf+1,floorf@m
  9495   002EE4  C04C  F061         	movff	??_floorf+2,floorf@m+1
  9496   002EE8  C04D  F062         	movff	??_floorf+3,floorf@m+2
  9497   002EEC  C04E  F063         	movff	??_floorf+4,floorf@m+3
  9498   002EF0  0100               	movlb	0	; () banked
  9499   002EF2  5160               	movf	floorf@m& (0+255),w,b
  9500   002EF4  1566               	andwf	floorf@u& (0+255),w,b
  9501   002EF6  6E4A               	movwf	??_floorf^0,c
  9502   002EF8  5161               	movf	(floorf@m+1)& (0+255),w,b
  9503   002EFA  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9504   002EFC  6E4B               	movwf	(??_floorf+1)^0,c
  9505   002EFE  5162               	movf	(floorf@m+2)& (0+255),w,b
  9506   002F00  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9507   002F02  6E4C               	movwf	(??_floorf+2)^0,c
  9508   002F04  5163               	movf	(floorf@m+3)& (0+255),w,b
  9509   002F06  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9510   002F08  6E4D               	movwf	(??_floorf+3)^0,c
  9511   002F0A  504A               	movf	??_floorf^0,w,c
  9512   002F0C  104B               	iorwf	(??_floorf+1)^0,w,c
  9513   002F0E  104C               	iorwf	(??_floorf+2)^0,w,c
  9514   002F10  104D               	iorwf	(??_floorf+3)^0,w,c
  9515   002F12  A4D8               	btfss	status,2,c
  9516   002F14  EF8E  F017         	goto	u7761
  9517   002F18  EF90  F017         	goto	u7760
  9518   002F1C                     u7761:
  9519   002F1C  EF92  F017         	goto	l6945
  9520   002F20                     u7760:
  9521   002F20  EF48  F017         	goto	l6937
  9522   002F24                     l6945:
  9523                           
  9524                           ; BSR set to: 0
  9525   002F24  C066  F04A         	movff	floorf@u,??_floorf
  9526   002F28  C067  F04B         	movff	floorf@u+1,??_floorf+1
  9527   002F2C  C068  F04C         	movff	floorf@u+2,??_floorf+2
  9528   002F30  C069  F04D         	movff	floorf@u+3,??_floorf+3
  9529   002F34  0E20               	movlw	32
  9530   002F36  EFA2  F017         	goto	u7770
  9531   002F3A                     u7775:
  9532   002F3A  90D8               	bcf	status,0,c
  9533   002F3C  324D               	rrcf	(??_floorf+3)^0,f,c
  9534   002F3E  324C               	rrcf	(??_floorf+2)^0,f,c
  9535   002F40  324B               	rrcf	(??_floorf+1)^0,f,c
  9536   002F42  324A               	rrcf	??_floorf^0,f,c
  9537   002F44                     u7770:
  9538   002F44  2EE8               	decfsz	wreg,f,c
  9539   002F46  EF9D  F017         	goto	u7775
  9540   002F4A  504A               	movf	??_floorf^0,w,c
  9541   002F4C  104B               	iorwf	(??_floorf+1)^0,w,c
  9542   002F4E  104C               	iorwf	(??_floorf+2)^0,w,c
  9543   002F50  104D               	iorwf	(??_floorf+3)^0,w,c
  9544   002F52  B4D8               	btfsc	status,2,c
  9545   002F54  EFAE  F017         	goto	u7781
  9546   002F58  EFB0  F017         	goto	u7780
  9547   002F5C                     u7781:
  9548   002F5C  EFB8  F017         	goto	l1442
  9549   002F60                     u7780:
  9550   002F60                     
  9551                           ; BSR set to: 0
  9552   002F60  5160               	movf	floorf@m& (0+255),w,b
  9553   002F62  2766               	addwf	floorf@u& (0+255),f,b
  9554   002F64  5161               	movf	(floorf@m+1)& (0+255),w,b
  9555   002F66  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  9556   002F68  5162               	movf	(floorf@m+2)& (0+255),w,b
  9557   002F6A  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  9558   002F6C  5163               	movf	(floorf@m+3)& (0+255),w,b
  9559   002F6E  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  9560   002F70                     l1442:
  9561                           
  9562                           ; BSR set to: 0
  9563   002F70  1D60               	comf	floorf@m& (0+255),w,b
  9564   002F72  6E4A               	movwf	??_floorf^0,c
  9565   002F74  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9566   002F76  6E4B               	movwf	(??_floorf+1)^0,c
  9567   002F78  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9568   002F7A  6E4C               	movwf	(??_floorf+2)^0,c
  9569   002F7C  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9570   002F7E  6E4D               	movwf	(??_floorf+3)^0,c
  9571   002F80  504A               	movf	??_floorf^0,w,c
  9572   002F82  1766               	andwf	floorf@u& (0+255),f,b
  9573   002F84  504B               	movf	(??_floorf+1)^0,w,c
  9574   002F86  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9575   002F88  504C               	movf	(??_floorf+2)^0,w,c
  9576   002F8A  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9577   002F8C  504D               	movf	(??_floorf+3)^0,w,c
  9578   002F8E  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9579   002F90  EF0E  F018         	goto	l6957
  9580   002F94                     l6949:
  9581                           
  9582                           ; BSR set to: 0
  9583   002F94  C066  F04A         	movff	floorf@u,??_floorf
  9584   002F98  C067  F04B         	movff	floorf@u+1,??_floorf+1
  9585   002F9C  C068  F04C         	movff	floorf@u+2,??_floorf+2
  9586   002FA0  C069  F04D         	movff	floorf@u+3,??_floorf+3
  9587   002FA4  0E20               	movlw	32
  9588   002FA6  EFDA  F017         	goto	u7790
  9589   002FAA                     u7795:
  9590   002FAA  90D8               	bcf	status,0,c
  9591   002FAC  324D               	rrcf	(??_floorf+3)^0,f,c
  9592   002FAE  324C               	rrcf	(??_floorf+2)^0,f,c
  9593   002FB0  324B               	rrcf	(??_floorf+1)^0,f,c
  9594   002FB2  324A               	rrcf	??_floorf^0,f,c
  9595   002FB4                     u7790:
  9596   002FB4  2EE8               	decfsz	wreg,f,c
  9597   002FB6  EFD5  F017         	goto	u7795
  9598   002FBA  504A               	movf	??_floorf^0,w,c
  9599   002FBC  104B               	iorwf	(??_floorf+1)^0,w,c
  9600   002FBE  104C               	iorwf	(??_floorf+2)^0,w,c
  9601   002FC0  104D               	iorwf	(??_floorf+3)^0,w,c
  9602   002FC2  A4D8               	btfss	status,2,c
  9603   002FC4  EFE6  F017         	goto	u7801
  9604   002FC8  EFE8  F017         	goto	u7800
  9605   002FCC                     u7801:
  9606   002FCC  EFF2  F017         	goto	l6953
  9607   002FD0                     u7800:
  9608   002FD0                     
  9609                           ; BSR set to: 0
  9610   002FD0  0E00               	movlw	0
  9611   002FD2  6F66               	movwf	floorf@u& (0+255),b
  9612   002FD4  0E00               	movlw	0
  9613   002FD6  6F67               	movwf	(floorf@u+1)& (0+255),b
  9614   002FD8  0E00               	movlw	0
  9615   002FDA  6F68               	movwf	(floorf@u+2)& (0+255),b
  9616   002FDC  0E00               	movlw	0
  9617   002FDE  6F69               	movwf	(floorf@u+3)& (0+255),b
  9618   002FE0  EF0E  F018         	goto	l6957
  9619   002FE4                     l6953:
  9620                           
  9621                           ; BSR set to: 0
  9622   002FE4  90D8               	bcf	status,0,c
  9623   002FE6  3566               	rlcf	floorf@u& (0+255),w,b
  9624   002FE8  6E4A               	movwf	??_floorf^0,c
  9625   002FEA  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  9626   002FEC  6E4B               	movwf	(??_floorf+1)^0,c
  9627   002FEE  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  9628   002FF0  6E4C               	movwf	(??_floorf+2)^0,c
  9629   002FF2  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  9630   002FF4  6E4D               	movwf	(??_floorf+3)^0,c
  9631   002FF6  504A               	movf	??_floorf^0,w,c
  9632   002FF8  104B               	iorwf	(??_floorf+1)^0,w,c
  9633   002FFA  104C               	iorwf	(??_floorf+2)^0,w,c
  9634   002FFC  104D               	iorwf	(??_floorf+3)^0,w,c
  9635   002FFE  B4D8               	btfsc	status,2,c
  9636   003000  EF04  F018         	goto	u7811
  9637   003004  EF06  F018         	goto	u7810
  9638   003008                     u7811:
  9639   003008  EF0E  F018         	goto	l6957
  9640   00300C                     u7810:
  9641   00300C                     
  9642                           ; BSR set to: 0
  9643   00300C  0E00               	movlw	0
  9644   00300E  6F66               	movwf	floorf@u& (0+255),b
  9645   003010  0E00               	movlw	0
  9646   003012  6F67               	movwf	(floorf@u+1)& (0+255),b
  9647   003014  0E80               	movlw	128
  9648   003016  6F68               	movwf	(floorf@u+2)& (0+255),b
  9649   003018  0EBF               	movlw	191
  9650   00301A  6F69               	movwf	(floorf@u+3)& (0+255),b
  9651   00301C                     l6957:
  9652                           
  9653                           ; BSR set to: 0
  9654   00301C  C066  F046         	movff	floorf@u,?_floorf
  9655   003020  C067  F047         	movff	floorf@u+1,?_floorf+1
  9656   003024  C068  F048         	movff	floorf@u+2,?_floorf+2
  9657   003028  C069  F049         	movff	floorf@u+3,?_floorf+3
  9658   00302C                     l1439:
  9659                           
  9660                           ; BSR set to: 0
  9661   00302C  0012               	return		;funcret
  9662   00302E                     __end_of_floorf:
  9663                           	callstack 0
  9664                           
  9665 ;; *************** function ___fpclassifyf *****************
  9666 ;; Defined at:
  9667 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;  x               4    5[COMRAM] float 
  9670 ;; Auto vars:     Size  Location     Type
  9671 ;;  u               4   15[COMRAM] struct .
  9672 ;;  e               2   13[COMRAM] int 
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  2    5[COMRAM] int 
  9675 ;; Registers used:
  9676 ;;		wreg, status,2, status,0
  9677 ;; Tracked objects:
  9678 ;;		On entry : 0/0
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9683 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9684 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;Total ram usage:       14 bytes
  9687 ;; Hardware stack levels used: 1
  9688 ;; Hardware stack levels required when called: 1
  9689 ;; This function calls:
  9690 ;;		Nothing
  9691 ;; This function is called by:
  9692 ;;		_efgtoa
  9693 ;; This function uses a non-reentrant model
  9694 ;;
  9695                           
  9696                           	psect	text34
  9697   003EF6                     __ptext34:
  9698                           	callstack 0
  9699   003EF6                     ___fpclassifyf:
  9700                           	callstack 24
  9701   003EF6  C0F7  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
  9702   003EFA  C0F8  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  9703   003EFE  C0F9  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  9704   003F02  C0FA  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  9705   003F06  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  9706   003F0A  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9707   003F0E  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9708   003F12  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9709   003F16  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  9710   003F1A  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9711   003F1E  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9712   003F22  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9713   003F26  0E18               	movlw	24
  9714   003F28  EF9B  F01F         	goto	u7630
  9715   003F2C                     u7635:
  9716   003F2C  90D8               	bcf	status,0,c
  9717   003F2E  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  9718   003F30  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  9719   003F32  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  9720   003F34  320A               	rrcf	??___fpclassifyf^0,f,c
  9721   003F36                     u7630:
  9722   003F36  2EE8               	decfsz	wreg,f,c
  9723   003F38  EF96  F01F         	goto	u7635
  9724   003F3C  500A               	movf	??___fpclassifyf^0,w,c
  9725   003F3E  6E0E               	movwf	___fpclassifyf@e^0,c
  9726   003F40  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  9727   003F42  500E               	movf	___fpclassifyf@e^0,w,c
  9728   003F44  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9729   003F46  A4D8               	btfss	status,2,c
  9730   003F48  EFA8  F01F         	goto	u7641
  9731   003F4C  EFAA  F01F         	goto	u7640
  9732   003F50                     u7641:
  9733   003F50  EFCA  F01F         	goto	l6915
  9734   003F54                     u7640:
  9735   003F54  90D8               	bcf	status,0,c
  9736   003F56  3410               	rlcf	___fpclassifyf@u^0,w,c
  9737   003F58  6E0A               	movwf	??___fpclassifyf^0,c
  9738   003F5A  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9739   003F5C  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  9740   003F5E  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9741   003F60  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  9742   003F62  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9743   003F64  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  9744   003F66  500A               	movf	??___fpclassifyf^0,w,c
  9745   003F68  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  9746   003F6A  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  9747   003F6C  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  9748   003F6E  A4D8               	btfss	status,2,c
  9749   003F70  EFBC  F01F         	goto	u7651
  9750   003F74  EFBE  F01F         	goto	u7650
  9751   003F78                     u7651:
  9752   003F78  EFC4  F01F         	goto	l6911
  9753   003F7C                     u7650:
  9754   003F7C  0E00               	movlw	0
  9755   003F7E  6E07               	movwf	(?___fpclassifyf+1)^0,c
  9756   003F80  0E02               	movlw	2
  9757   003F82  6E06               	movwf	?___fpclassifyf^0,c
  9758   003F84  EFF9  F01F         	goto	l1425
  9759   003F88                     l6911:
  9760   003F88  0E00               	movlw	0
  9761   003F8A  6E07               	movwf	(?___fpclassifyf+1)^0,c
  9762   003F8C  0E03               	movlw	3
  9763   003F8E  6E06               	movwf	?___fpclassifyf^0,c
  9764   003F90  EFF9  F01F         	goto	l1425
  9765   003F94                     l6915:
  9766   003F94  280E               	incf	___fpclassifyf@e^0,w,c
  9767   003F96  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9768   003F98  A4D8               	btfss	status,2,c
  9769   003F9A  EFD1  F01F         	goto	u7661
  9770   003F9E  EFD3  F01F         	goto	u7660
  9771   003FA2                     u7661:
  9772   003FA2  EFF5  F01F         	goto	l6921
  9773   003FA6                     u7660:
  9774   003FA6  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  9775   003FAA  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9776   003FAE  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9777   003FB2  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9778   003FB6  0E09               	movlw	9
  9779   003FB8                     u7675:
  9780   003FB8  90D8               	bcf	status,0,c
  9781   003FBA  360A               	rlcf	??___fpclassifyf^0,f,c
  9782   003FBC  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  9783   003FBE  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  9784   003FC0  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  9785   003FC2  2EE8               	decfsz	wreg,f,c
  9786   003FC4  EFDC  F01F         	goto	u7675
  9787   003FC8  500A               	movf	??___fpclassifyf^0,w,c
  9788   003FCA  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  9789   003FCC  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  9790   003FCE  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  9791   003FD0  B4D8               	btfsc	status,2,c
  9792   003FD2  EFED  F01F         	goto	u7681
  9793   003FD6  EFF0  F01F         	goto	u7680
  9794   003FDA                     u7681:
  9795   003FDA  0E01               	movlw	1
  9796   003FDC  EFF1  F01F         	goto	u7690
  9797   003FE0                     u7680:
  9798   003FE0  0E00               	movlw	0
  9799   003FE2                     u7690:
  9800   003FE2  6E06               	movwf	?___fpclassifyf^0,c
  9801   003FE4  6A07               	clrf	(?___fpclassifyf+1)^0,c
  9802   003FE6  EFF9  F01F         	goto	l1425
  9803   003FEA                     l6921:
  9804   003FEA  0E00               	movlw	0
  9805   003FEC  6E07               	movwf	(?___fpclassifyf+1)^0,c
  9806   003FEE  0E04               	movlw	4
  9807   003FF0  6E06               	movwf	?___fpclassifyf^0,c
  9808   003FF2                     l1425:
  9809   003FF2  0012               	return		;funcret
  9810   003FF4                     __end_of___fpclassifyf:
  9811                           	callstack 0
  9812                           
  9813 ;; *************** function ___fltol *****************
  9814 ;; Defined at:
  9815 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;  f1              4    4[BANK0 ] int 
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;  exp1            1   82[COMRAM] unsigned char 
  9820 ;;  sign1           1   81[COMRAM] unsigned char 
  9821 ;; Return value:  Size  Location     Type
  9822 ;;                  4    4[BANK0 ] long 
  9823 ;; Registers used:
  9824 ;;		wreg, status,2, status,0
  9825 ;; Tracked objects:
  9826 ;;		On entry : 0/0
  9827 ;;		On exit  : 0/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9830 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9832 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9833 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9834 ;;Total ram usage:       10 bytes
  9835 ;; Hardware stack levels used: 1
  9836 ;; Hardware stack levels required when called: 1
  9837 ;; This function calls:
  9838 ;;		Nothing
  9839 ;; This function is called by:
  9840 ;;		_runDAC
  9841 ;;		_efgtoa
  9842 ;;		___rem_pio2f
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846                           	psect	text35
  9847   003CEA                     __ptext35:
  9848                           	callstack 0
  9849   003CEA                     ___fltol:
  9850                           	callstack 24
  9851   003CEA  0100               	movlb	0	; () banked
  9852   003CEC  3566               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9853   003CEE  3567               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9854   003CF0  6E53               	movwf	___fltol@exp1^0,c
  9855   003CF2  5053               	movf	___fltol@exp1^0,w,c
  9856   003CF4  A4D8               	btfss	status,2,c
  9857   003CF6  EF7F  F01E         	goto	u7511
  9858   003CFA  EF81  F01E         	goto	u7510
  9859   003CFE                     u7511:
  9860   003CFE  EF8B  F01E         	goto	l6843
  9861   003D02                     u7510:
  9862   003D02                     l6839:
  9863                           
  9864                           ; BSR set to: 0
  9865   003D02  0E00               	movlw	0
  9866   003D04  6F64               	movwf	?___fltol& (0+255),b
  9867   003D06  0E00               	movlw	0
  9868   003D08  6F65               	movwf	(?___fltol+1)& (0+255),b
  9869   003D0A  0E00               	movlw	0
  9870   003D0C  6F66               	movwf	(?___fltol+2)& (0+255),b
  9871   003D0E  0E00               	movlw	0
  9872   003D10  6F67               	movwf	(?___fltol+3)& (0+255),b
  9873   003D12  EFF8  F01E         	goto	l845
  9874   003D16                     l6843:
  9875                           
  9876                           ; BSR set to: 0
  9877   003D16  C064  F068         	movff	___fltol@f1,??___fltol
  9878   003D1A  C065  F069         	movff	___fltol@f1+1,??___fltol+1
  9879   003D1E  C066  F06A         	movff	___fltol@f1+2,??___fltol+2
  9880   003D22  C067  F06B         	movff	___fltol@f1+3,??___fltol+3
  9881   003D26  0E20               	movlw	32
  9882   003D28  EF9B  F01E         	goto	u7520
  9883   003D2C                     u7525:
  9884   003D2C  90D8               	bcf	status,0,c
  9885   003D2E  336B               	rrcf	(??___fltol+3)& (0+255),f,b
  9886   003D30  336A               	rrcf	(??___fltol+2)& (0+255),f,b
  9887   003D32  3369               	rrcf	(??___fltol+1)& (0+255),f,b
  9888   003D34  3368               	rrcf	??___fltol& (0+255),f,b
  9889   003D36                     u7520:
  9890   003D36  2EE8               	decfsz	wreg,f,c
  9891   003D38  EF96  F01E         	goto	u7525
  9892   003D3C  5168               	movf	??___fltol& (0+255),w,b
  9893   003D3E  6E52               	movwf	___fltol@sign1^0,c
  9894   003D40                     
  9895                           ; BSR set to: 0
  9896   003D40  8F66               	bsf	(___fltol@f1+2)& (0+255),7,b
  9897   003D42                     
  9898                           ; BSR set to: 0
  9899   003D42  0EFF               	movlw	255
  9900   003D44  1764               	andwf	___fltol@f1& (0+255),f,b
  9901   003D46  0EFF               	movlw	255
  9902   003D48  1765               	andwf	(___fltol@f1+1)& (0+255),f,b
  9903   003D4A  0EFF               	movlw	255
  9904   003D4C  1766               	andwf	(___fltol@f1+2)& (0+255),f,b
  9905   003D4E  0E00               	movlw	0
  9906   003D50  1767               	andwf	(___fltol@f1+3)& (0+255),f,b
  9907   003D52                     
  9908                           ; BSR set to: 0
  9909   003D52  0E96               	movlw	150
  9910   003D54  5E53               	subwf	___fltol@exp1^0,f,c
  9911   003D56                     
  9912                           ; BSR set to: 0
  9913   003D56  BE53               	btfsc	___fltol@exp1^0,7,c
  9914   003D58  EFB2  F01E         	goto	u7530
  9915   003D5C  EFB0  F01E         	goto	u7531
  9916   003D60                     u7531:
  9917   003D60  EFC8  F01E         	goto	l6863
  9918   003D64                     u7530:
  9919   003D64                     
  9920                           ; BSR set to: 0
  9921   003D64  5053               	movf	___fltol@exp1^0,w,c
  9922   003D66  0A80               	xorlw	128
  9923   003D68  0F97               	addlw	151
  9924   003D6A  B0D8               	btfsc	status,0,c
  9925   003D6C  EFBA  F01E         	goto	u7541
  9926   003D70  EFBC  F01E         	goto	u7540
  9927   003D74                     u7541:
  9928   003D74  EFBE  F01E         	goto	l6859
  9929   003D78                     u7540:
  9930   003D78  EF81  F01E         	goto	l6839
  9931   003D7C                     l6859:
  9932                           
  9933                           ; BSR set to: 0
  9934   003D7C  90D8               	bcf	status,0,c
  9935   003D7E  3367               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9936   003D80  3366               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9937   003D82  3365               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9938   003D84  3364               	rrcf	___fltol@f1& (0+255),f,b
  9939   003D86                     
  9940                           ; BSR set to: 0
  9941   003D86  3E53               	incfsz	___fltol@exp1^0,f,c
  9942   003D88  EFBE  F01E         	goto	l6859
  9943   003D8C  EFE0  F01E         	goto	l6873
  9944   003D90                     l6863:
  9945                           
  9946                           ; BSR set to: 0
  9947   003D90  0E1F               	movlw	31
  9948   003D92  6453               	cpfsgt	___fltol@exp1^0,c
  9949   003D94  EFCE  F01E         	goto	u7551
  9950   003D98  EFD0  F01E         	goto	u7550
  9951   003D9C                     u7551:
  9952   003D9C  EFD8  F01E         	goto	l6871
  9953   003DA0                     u7550:
  9954   003DA0  EF81  F01E         	goto	l6839
  9955   003DA4                     l6869:
  9956                           
  9957                           ; BSR set to: 0
  9958   003DA4  90D8               	bcf	status,0,c
  9959   003DA6  3764               	rlcf	___fltol@f1& (0+255),f,b
  9960   003DA8  3765               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9961   003DAA  3766               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9962   003DAC  3767               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9963   003DAE  0653               	decf	___fltol@exp1^0,f,c
  9964   003DB0                     l6871:
  9965                           
  9966                           ; BSR set to: 0
  9967   003DB0  5053               	movf	___fltol@exp1^0,w,c
  9968   003DB2  A4D8               	btfss	status,2,c
  9969   003DB4  EFDE  F01E         	goto	u7561
  9970   003DB8  EFE0  F01E         	goto	u7560
  9971   003DBC                     u7561:
  9972   003DBC  EFD2  F01E         	goto	l6869
  9973   003DC0                     u7560:
  9974   003DC0                     l6873:
  9975                           
  9976                           ; BSR set to: 0
  9977   003DC0  5052               	movf	___fltol@sign1^0,w,c
  9978   003DC2  B4D8               	btfsc	status,2,c
  9979   003DC4  EFE6  F01E         	goto	u7571
  9980   003DC8  EFE8  F01E         	goto	u7570
  9981   003DCC                     u7571:
  9982   003DCC  EFF0  F01E         	goto	l6877
  9983   003DD0                     u7570:
  9984   003DD0                     
  9985                           ; BSR set to: 0
  9986   003DD0  1F67               	comf	(___fltol@f1+3)& (0+255),f,b
  9987   003DD2  1F66               	comf	(___fltol@f1+2)& (0+255),f,b
  9988   003DD4  1F65               	comf	(___fltol@f1+1)& (0+255),f,b
  9989   003DD6  6D64               	negf	___fltol@f1& (0+255),b
  9990   003DD8  0E00               	movlw	0
  9991   003DDA  2365               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9992   003DDC  2366               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9993   003DDE  2367               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9994   003DE0                     l6877:
  9995                           
  9996                           ; BSR set to: 0
  9997   003DE0  C064  F064         	movff	___fltol@f1,?___fltol
  9998   003DE4  C065  F065         	movff	___fltol@f1+1,?___fltol+1
  9999   003DE8  C066  F066         	movff	___fltol@f1+2,?___fltol+2
 10000   003DEC  C067  F067         	movff	___fltol@f1+3,?___fltol+3
 10001   003DF0                     l845:
 10002                           
 10003                           ; BSR set to: 0
 10004   003DF0  0012               	return		;funcret
 10005   003DF2                     __end_of___fltol:
 10006                           	callstack 0
 10007                           
 10008 ;; *************** function ___flsub *****************
 10009 ;; Defined at:
 10010 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;  b               4    4[BANK0 ] long 
 10013 ;;  a               4    8[BANK0 ] long 
 10014 ;; Auto vars:     Size  Location     Type
 10015 ;;		None
 10016 ;; Return value:  Size  Location     Type
 10017 ;;                  4    4[BANK0 ] long 
 10018 ;; Registers used:
 10019 ;;		wreg, status,2, status,0, cstack
 10020 ;; Tracked objects:
 10021 ;;		On entry : 0/0
 10022 ;;		On exit  : 0/0
 10023 ;;		Unchanged: 0/0
 10024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10025 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10028 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10029 ;;Total ram usage:        8 bytes
 10030 ;; Hardware stack levels used: 1
 10031 ;; Hardware stack levels required when called: 2
 10032 ;; This function calls:
 10033 ;;		___fladd
 10034 ;; This function is called by:
 10035 ;;		_efgtoa
 10036 ;;		_sinf
 10037 ;;		___rem_pio2f
 10038 ;; This function uses a non-reentrant model
 10039 ;;
 10040                           
 10041                           	psect	text36
 10042   004972                     __ptext36:
 10043                           	callstack 0
 10044   004972                     ___flsub:
 10045                           	callstack 23
 10046   004972  0E00               	movlw	0
 10047   004974  0100               	movlb	0	; () banked
 10048   004976  1B68               	xorwf	___flsub@a& (0+255),f,b
 10049   004978  0E00               	movlw	0
 10050   00497A  1B69               	xorwf	(___flsub@a+1)& (0+255),f,b
 10051   00497C  0E00               	movlw	0
 10052   00497E  1B6A               	xorwf	(___flsub@a+2)& (0+255),f,b
 10053   004980  0E80               	movlw	128
 10054   004982  1B6B               	xorwf	(___flsub@a+3)& (0+255),f,b
 10055   004984                     
 10056                           ; BSR set to: 0
 10057   004984  C064  F046         	movff	___flsub@b,___fladd@b
 10058   004988  C065  F047         	movff	___flsub@b+1,___fladd@b+1
 10059   00498C  C066  F048         	movff	___flsub@b+2,___fladd@b+2
 10060   004990  C067  F049         	movff	___flsub@b+3,___fladd@b+3
 10061   004994  C068  F04A         	movff	___flsub@a,___fladd@a
 10062   004998  C069  F04B         	movff	___flsub@a+1,___fladd@a+1
 10063   00499C  C06A  F04C         	movff	___flsub@a+2,___fladd@a+2
 10064   0049A0  C06B  F04D         	movff	___flsub@a+3,___fladd@a+3
 10065   0049A4  EC62  F008         	call	___fladd	;wreg free
 10066   0049A8  C046  F064         	movff	?___fladd,?___flsub
 10067   0049AC  C047  F065         	movff	?___fladd+1,?___flsub+1
 10068   0049B0  C048  F066         	movff	?___fladd+2,?___flsub+2
 10069   0049B4  C049  F067         	movff	?___fladd+3,?___flsub+3
 10070   0049B8  0012               	return		;funcret
 10071   0049BA                     __end_of___flsub:
 10072                           	callstack 0
 10073                           
 10074 ;; *************** function ___fladd *****************
 10075 ;; Defined at:
 10076 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
 10077 ;; Parameters:    Size  Location     Type
 10078 ;;  b               4   69[COMRAM] long 
 10079 ;;  a               4   73[COMRAM] long 
 10080 ;; Auto vars:     Size  Location     Type
 10081 ;;  grs             1    3[BANK0 ] unsigned char 
 10082 ;;  bexp            1    2[BANK0 ] unsigned char 
 10083 ;;  aexp            1    1[BANK0 ] unsigned char 
 10084 ;;  signs           1    0[BANK0 ] unsigned char 
 10085 ;; Return value:  Size  Location     Type
 10086 ;;                  4   69[COMRAM] unsigned char 
 10087 ;; Registers used:
 10088 ;;		wreg, status,2, status,0
 10089 ;; Tracked objects:
 10090 ;;		On entry : 0/0
 10091 ;;		On exit  : 0/0
 10092 ;;		Unchanged: 0/0
 10093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10094 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10095 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10096 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10097 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10098 ;;Total ram usage:       16 bytes
 10099 ;; Hardware stack levels used: 1
 10100 ;; Hardware stack levels required when called: 1
 10101 ;; This function calls:
 10102 ;;		Nothing
 10103 ;; This function is called by:
 10104 ;;		_runDAC
 10105 ;;		___flsub
 10106 ;;		_efgtoa
 10107 ;;		_sinf
 10108 ;;		___cosdf
 10109 ;;		___rem_pio2f
 10110 ;;		___sindf
 10111 ;; This function uses a non-reentrant model
 10112 ;;
 10113                           
 10114                           	psect	text37
 10115   0010C4                     __ptext37:
 10116                           	callstack 0
 10117   0010C4                     ___fladd:
 10118                           	callstack 23
 10119   0010C4  5049               	movf	(___fladd@b+3)^0,w,c
 10120   0010C6  0B80               	andlw	128
 10121   0010C8  0100               	movlb	0	; () banked
 10122   0010CA  6F60               	movwf	___fladd@signs& (0+255),b
 10123   0010CC  5049               	movf	(___fladd@b+3)^0,w,c
 10124   0010CE  2449               	addwf	(___fladd@b+3)^0,w,c
 10125   0010D0  6F62               	movwf	___fladd@bexp& (0+255),b
 10126   0010D2                     
 10127                           ; BSR set to: 0
 10128   0010D2  AE48               	btfss	(___fladd@b+2)^0,7,c
 10129   0010D4  EF6E  F008         	goto	u6481
 10130   0010D8  EF70  F008         	goto	u6480
 10131   0010DC                     u6481:
 10132   0010DC  EF71  F008         	goto	l6227
 10133   0010E0                     u6480:
 10134   0010E0                     
 10135                           ; BSR set to: 0
 10136   0010E0  8162               	bsf	___fladd@bexp& (0+255),0,b
 10137   0010E2                     l6227:
 10138                           
 10139                           ; BSR set to: 0
 10140   0010E2  5162               	movf	___fladd@bexp& (0+255),w,b
 10141   0010E4  B4D8               	btfsc	status,2,c
 10142   0010E6  EF77  F008         	goto	u6491
 10143   0010EA  EF79  F008         	goto	u6490
 10144   0010EE                     u6491:
 10145   0010EE  EF8E  F008         	goto	l6237
 10146   0010F2                     u6490:
 10147   0010F2                     
 10148                           ; BSR set to: 0
 10149   0010F2  2962               	incf	___fladd@bexp& (0+255),w,b
 10150   0010F4  A4D8               	btfss	status,2,c
 10151   0010F6  EF7F  F008         	goto	u6501
 10152   0010FA  EF81  F008         	goto	u6500
 10153   0010FE                     u6501:
 10154   0010FE  EF89  F008         	goto	l6233
 10155   001102                     u6500:
 10156   001102                     
 10157                           ; BSR set to: 0
 10158   001102  0E00               	movlw	0
 10159   001104  6E46               	movwf	___fladd@b^0,c
 10160   001106  0E00               	movlw	0
 10161   001108  6E47               	movwf	(___fladd@b+1)^0,c
 10162   00110A  0E00               	movlw	0
 10163   00110C  6E48               	movwf	(___fladd@b+2)^0,c
 10164   00110E  0E00               	movlw	0
 10165   001110  6E49               	movwf	(___fladd@b+3)^0,c
 10166   001112                     l6233:
 10167                           
 10168                           ; BSR set to: 0
 10169   001112  8E48               	bsf	(___fladd@b+2)^0,7,c
 10170   001114                     
 10171                           ; BSR set to: 0
 10172   001114  0E00               	movlw	0
 10173   001116  6E49               	movwf	(___fladd@b+3)^0,c
 10174   001118  EF96  F008         	goto	l6239
 10175   00111C                     l6237:
 10176                           
 10177                           ; BSR set to: 0
 10178   00111C  0E00               	movlw	0
 10179   00111E  6E46               	movwf	___fladd@b^0,c
 10180   001120  0E00               	movlw	0
 10181   001122  6E47               	movwf	(___fladd@b+1)^0,c
 10182   001124  0E00               	movlw	0
 10183   001126  6E48               	movwf	(___fladd@b+2)^0,c
 10184   001128  0E00               	movlw	0
 10185   00112A  6E49               	movwf	(___fladd@b+3)^0,c
 10186   00112C                     l6239:
 10187                           
 10188                           ; BSR set to: 0
 10189   00112C  504D               	movf	(___fladd@a+3)^0,w,c
 10190   00112E  0B80               	andlw	128
 10191   001130  6F61               	movwf	___fladd@aexp& (0+255),b
 10192   001132                     
 10193                           ; BSR set to: 0
 10194   001132  5160               	movf	___fladd@signs& (0+255),w,b
 10195   001134  1961               	xorwf	___fladd@aexp& (0+255),w,b
 10196   001136  B4D8               	btfsc	status,2,c
 10197   001138  EFA0  F008         	goto	u6511
 10198   00113C  EFA2  F008         	goto	u6510
 10199   001140                     u6511:
 10200   001140  EFA3  F008         	goto	l6245
 10201   001144                     u6510:
 10202   001144                     
 10203                           ; BSR set to: 0
 10204   001144  8D60               	bsf	___fladd@signs& (0+255),6,b
 10205   001146                     l6245:
 10206                           
 10207                           ; BSR set to: 0
 10208   001146  504D               	movf	(___fladd@a+3)^0,w,c
 10209   001148  244D               	addwf	(___fladd@a+3)^0,w,c
 10210   00114A  6F61               	movwf	___fladd@aexp& (0+255),b
 10211   00114C                     
 10212                           ; BSR set to: 0
 10213   00114C  AE4C               	btfss	(___fladd@a+2)^0,7,c
 10214   00114E  EFAB  F008         	goto	u6521
 10215   001152  EFAD  F008         	goto	u6520
 10216   001156                     u6521:
 10217   001156  EFAE  F008         	goto	l6251
 10218   00115A                     u6520:
 10219   00115A                     
 10220                           ; BSR set to: 0
 10221   00115A  8161               	bsf	___fladd@aexp& (0+255),0,b
 10222   00115C                     l6251:
 10223                           
 10224                           ; BSR set to: 0
 10225   00115C  5161               	movf	___fladd@aexp& (0+255),w,b
 10226   00115E  B4D8               	btfsc	status,2,c
 10227   001160  EFB4  F008         	goto	u6531
 10228   001164  EFB6  F008         	goto	u6530
 10229   001168                     u6531:
 10230   001168  EFCB  F008         	goto	l6261
 10231   00116C                     u6530:
 10232   00116C                     
 10233                           ; BSR set to: 0
 10234   00116C  2961               	incf	___fladd@aexp& (0+255),w,b
 10235   00116E  A4D8               	btfss	status,2,c
 10236   001170  EFBC  F008         	goto	u6541
 10237   001174  EFBE  F008         	goto	u6540
 10238   001178                     u6541:
 10239   001178  EFC6  F008         	goto	l6257
 10240   00117C                     u6540:
 10241   00117C                     
 10242                           ; BSR set to: 0
 10243   00117C  0E00               	movlw	0
 10244   00117E  6E4A               	movwf	___fladd@a^0,c
 10245   001180  0E00               	movlw	0
 10246   001182  6E4B               	movwf	(___fladd@a+1)^0,c
 10247   001184  0E00               	movlw	0
 10248   001186  6E4C               	movwf	(___fladd@a+2)^0,c
 10249   001188  0E00               	movlw	0
 10250   00118A  6E4D               	movwf	(___fladd@a+3)^0,c
 10251   00118C                     l6257:
 10252                           
 10253                           ; BSR set to: 0
 10254   00118C  8E4C               	bsf	(___fladd@a+2)^0,7,c
 10255   00118E                     
 10256                           ; BSR set to: 0
 10257   00118E  0E00               	movlw	0
 10258   001190  6E4D               	movwf	(___fladd@a+3)^0,c
 10259   001192  EFD3  F008         	goto	l6263
 10260   001196                     l6261:
 10261                           
 10262                           ; BSR set to: 0
 10263   001196  0E00               	movlw	0
 10264   001198  6E4A               	movwf	___fladd@a^0,c
 10265   00119A  0E00               	movlw	0
 10266   00119C  6E4B               	movwf	(___fladd@a+1)^0,c
 10267   00119E  0E00               	movlw	0
 10268   0011A0  6E4C               	movwf	(___fladd@a+2)^0,c
 10269   0011A2  0E00               	movlw	0
 10270   0011A4  6E4D               	movwf	(___fladd@a+3)^0,c
 10271   0011A6                     l6263:
 10272                           
 10273                           ; BSR set to: 0
 10274   0011A6  5162               	movf	___fladd@bexp& (0+255),w,b
 10275   0011A8  5D61               	subwf	___fladd@aexp& (0+255),w,b
 10276   0011AA  B0D8               	btfsc	status,0,c
 10277   0011AC  EFDA  F008         	goto	u6551
 10278   0011B0  EFDC  F008         	goto	u6550
 10279   0011B4                     u6551:
 10280   0011B4  EF03  F009         	goto	l6299
 10281   0011B8                     u6550:
 10282   0011B8                     
 10283                           ; BSR set to: 0
 10284   0011B8  AD60               	btfss	___fladd@signs& (0+255),6,b
 10285   0011BA  EFE1  F008         	goto	u6561
 10286   0011BE  EFE3  F008         	goto	u6560
 10287   0011C2                     u6561:
 10288   0011C2  EFE5  F008         	goto	l6269
 10289   0011C6                     u6560:
 10290   0011C6                     
 10291                           ; BSR set to: 0
 10292   0011C6  0E80               	movlw	128
 10293   0011C8  1B60               	xorwf	___fladd@signs& (0+255),f,b
 10294   0011CA                     l6269:
 10295                           
 10296                           ; BSR set to: 0
 10297   0011CA  C062  F063         	movff	___fladd@bexp,___fladd@grs
 10298   0011CE                     
 10299                           ; BSR set to: 0
 10300   0011CE  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 10301   0011D2                     
 10302                           ; BSR set to: 0
 10303   0011D2  C063  F061         	movff	___fladd@grs,___fladd@aexp
 10304   0011D6                     
 10305                           ; BSR set to: 0
 10306   0011D6  C046  F063         	movff	___fladd@b,___fladd@grs
 10307   0011DA                     
 10308                           ; BSR set to: 0
 10309   0011DA  C04A  F046         	movff	___fladd@a,___fladd@b
 10310   0011DE                     
 10311                           ; BSR set to: 0
 10312   0011DE  C063  F04A         	movff	___fladd@grs,___fladd@a
 10313   0011E2                     
 10314                           ; BSR set to: 0
 10315   0011E2  C047  F063         	movff	___fladd@b+1,___fladd@grs
 10316   0011E6                     
 10317                           ; BSR set to: 0
 10318   0011E6  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
 10319   0011EA                     
 10320                           ; BSR set to: 0
 10321   0011EA  C063  F04B         	movff	___fladd@grs,___fladd@a+1
 10322   0011EE                     
 10323                           ; BSR set to: 0
 10324   0011EE  C048  F063         	movff	___fladd@b+2,___fladd@grs
 10325   0011F2                     
 10326                           ; BSR set to: 0
 10327   0011F2  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
 10328   0011F6                     
 10329                           ; BSR set to: 0
 10330   0011F6  C063  F04C         	movff	___fladd@grs,___fladd@a+2
 10331   0011FA                     
 10332                           ; BSR set to: 0
 10333   0011FA  C049  F063         	movff	___fladd@b+3,___fladd@grs
 10334   0011FE                     
 10335                           ; BSR set to: 0
 10336   0011FE  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
 10337   001202                     
 10338                           ; BSR set to: 0
 10339   001202  C063  F04D         	movff	___fladd@grs,___fladd@a+3
 10340   001206                     l6299:
 10341                           
 10342                           ; BSR set to: 0
 10343   001206  0E00               	movlw	0
 10344   001208  6F63               	movwf	___fladd@grs& (0+255),b
 10345   00120A                     
 10346                           ; BSR set to: 0
 10347   00120A  5162               	movf	___fladd@bexp& (0+255),w,b
 10348   00120C  C061  F04E         	movff	___fladd@aexp,??___fladd
 10349   001210  6A4F               	clrf	(??___fladd+1)^0,c
 10350   001212  5E4E               	subwf	??___fladd^0,f,c
 10351   001214  0E00               	movlw	0
 10352   001216  5A4F               	subwfb	(??___fladd+1)^0,f,c
 10353   001218  BE4F               	btfsc	(??___fladd+1)^0,7,c
 10354   00121A  EF18  F009         	goto	u6571
 10355   00121E  504F               	movf	(??___fladd+1)^0,w,c
 10356   001220  E109               	bnz	u6570
 10357   001222  0E1A               	movlw	26
 10358   001224  5C4E               	subwf	??___fladd^0,w,c
 10359   001226  A0D8               	btfss	status,0,c
 10360   001228  EF18  F009         	goto	u6571
 10361   00122C  EF1A  F009         	goto	u6570
 10362   001230                     u6571:
 10363   001230  EF51  F009         	goto	l1077
 10364   001234                     u6570:
 10365   001234                     
 10366                           ; BSR set to: 0
 10367   001234  5046               	movf	___fladd@b^0,w,c
 10368   001236  1047               	iorwf	(___fladd@b+1)^0,w,c
 10369   001238  1048               	iorwf	(___fladd@b+2)^0,w,c
 10370   00123A  1049               	iorwf	(___fladd@b+3)^0,w,c
 10371   00123C  A4D8               	btfss	status,2,c
 10372   00123E  EF23  F009         	goto	u6581
 10373   001242  EF26  F009         	goto	u6580
 10374   001246                     u6581:
 10375   001246  0E01               	movlw	1
 10376   001248  EF27  F009         	goto	u6590
 10377   00124C                     u6580:
 10378   00124C  0E00               	movlw	0
 10379   00124E                     u6590:
 10380   00124E  6F63               	movwf	___fladd@grs& (0+255),b
 10381   001250                     
 10382                           ; BSR set to: 0
 10383   001250  0E00               	movlw	0
 10384   001252  6E46               	movwf	___fladd@b^0,c
 10385   001254  0E00               	movlw	0
 10386   001256  6E47               	movwf	(___fladd@b+1)^0,c
 10387   001258  0E00               	movlw	0
 10388   00125A  6E48               	movwf	(___fladd@b+2)^0,c
 10389   00125C  0E00               	movlw	0
 10390   00125E  6E49               	movwf	(___fladd@b+3)^0,c
 10391   001260                     
 10392                           ; BSR set to: 0
 10393   001260  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 10394   001264  EF5A  F009         	goto	l1076
 10395   001268                     l1078:
 10396                           
 10397                           ; BSR set to: 0
 10398   001268  A163               	btfss	___fladd@grs& (0+255),0,b
 10399   00126A  EF39  F009         	goto	u6601
 10400   00126E  EF3B  F009         	goto	u6600
 10401   001272                     u6601:
 10402   001272  EF41  F009         	goto	l6311
 10403   001276                     u6600:
 10404   001276                     
 10405                           ; BSR set to: 0
 10406   001276  90D8               	bcf	status,0,c
 10407   001278  3163               	rrcf	___fladd@grs& (0+255),w,b
 10408   00127A  0901               	iorlw	1
 10409   00127C  6F63               	movwf	___fladd@grs& (0+255),b
 10410   00127E  EF43  F009         	goto	l6313
 10411   001282                     l6311:
 10412                           
 10413                           ; BSR set to: 0
 10414   001282  90D8               	bcf	status,0,c
 10415   001284  3363               	rrcf	___fladd@grs& (0+255),f,b
 10416   001286                     l6313:
 10417                           
 10418                           ; BSR set to: 0
 10419   001286  A046               	btfss	___fladd@b^0,0,c
 10420   001288  EF48  F009         	goto	u6611
 10421   00128C  EF4A  F009         	goto	u6610
 10422   001290                     u6611:
 10423   001290  EF4B  F009         	goto	l6317
 10424   001294                     u6610:
 10425   001294                     
 10426                           ; BSR set to: 0
 10427   001294  8F63               	bsf	___fladd@grs& (0+255),7,b
 10428   001296                     l6317:
 10429                           
 10430                           ; BSR set to: 0
 10431   001296  3449               	rlcf	(___fladd@b+3)^0,w,c
 10432   001298  3249               	rrcf	(___fladd@b+3)^0,f,c
 10433   00129A  3248               	rrcf	(___fladd@b+2)^0,f,c
 10434   00129C  3247               	rrcf	(___fladd@b+1)^0,f,c
 10435   00129E  3246               	rrcf	___fladd@b^0,f,c
 10436   0012A0                     
 10437                           ; BSR set to: 0
 10438   0012A0  2B62               	incf	___fladd@bexp& (0+255),f,b
 10439   0012A2                     l1077:
 10440                           
 10441                           ; BSR set to: 0
 10442   0012A2  5161               	movf	___fladd@aexp& (0+255),w,b
 10443   0012A4  5D62               	subwf	___fladd@bexp& (0+255),w,b
 10444   0012A6  A0D8               	btfss	status,0,c
 10445   0012A8  EF58  F009         	goto	u6621
 10446   0012AC  EF5A  F009         	goto	u6620
 10447   0012B0                     u6621:
 10448   0012B0  EF34  F009         	goto	l1078
 10449   0012B4                     u6620:
 10450   0012B4                     l1076:
 10451                           
 10452                           ; BSR set to: 0
 10453   0012B4  BD60               	btfsc	___fladd@signs& (0+255),6,b
 10454   0012B6  EF5F  F009         	goto	u6631
 10455   0012BA  EF61  F009         	goto	u6630
 10456   0012BE                     u6631:
 10457   0012BE  EFA1  F009         	goto	l6345
 10458   0012C2                     u6630:
 10459   0012C2                     
 10460                           ; BSR set to: 0
 10461   0012C2  5162               	movf	___fladd@bexp& (0+255),w,b
 10462   0012C4  A4D8               	btfss	status,2,c
 10463   0012C6  EF67  F009         	goto	u6641
 10464   0012CA  EF69  F009         	goto	u6640
 10465   0012CE                     u6641:
 10466   0012CE  EF73  F009         	goto	l6327
 10467   0012D2                     u6640:
 10468   0012D2                     
 10469                           ; BSR set to: 0
 10470   0012D2  0E00               	movlw	0
 10471   0012D4  6E46               	movwf	?___fladd^0,c
 10472   0012D6  0E00               	movlw	0
 10473   0012D8  6E47               	movwf	(?___fladd+1)^0,c
 10474   0012DA  0E00               	movlw	0
 10475   0012DC  6E48               	movwf	(?___fladd+2)^0,c
 10476   0012DE  0E00               	movlw	0
 10477   0012E0  6E49               	movwf	(?___fladd+3)^0,c
 10478   0012E2  EFC2  F00A         	goto	l1085
 10479   0012E6                     l6327:
 10480                           
 10481                           ; BSR set to: 0
 10482   0012E6  504A               	movf	___fladd@a^0,w,c
 10483   0012E8  2646               	addwf	___fladd@b^0,f,c
 10484   0012EA  504B               	movf	(___fladd@a+1)^0,w,c
 10485   0012EC  2247               	addwfc	(___fladd@b+1)^0,f,c
 10486   0012EE  504C               	movf	(___fladd@a+2)^0,w,c
 10487   0012F0  2248               	addwfc	(___fladd@b+2)^0,f,c
 10488   0012F2  504D               	movf	(___fladd@a+3)^0,w,c
 10489   0012F4  2249               	addwfc	(___fladd@b+3)^0,f,c
 10490   0012F6                     
 10491                           ; BSR set to: 0
 10492   0012F6  A049               	btfss	(___fladd@b+3)^0,0,c
 10493   0012F8  EF80  F009         	goto	u6651
 10494   0012FC  EF82  F009         	goto	u6650
 10495   001300                     u6651:
 10496   001300  EF2E  F00A         	goto	l6381
 10497   001304                     u6650:
 10498   001304                     
 10499                           ; BSR set to: 0
 10500   001304  A163               	btfss	___fladd@grs& (0+255),0,b
 10501   001306  EF87  F009         	goto	u6661
 10502   00130A  EF89  F009         	goto	u6660
 10503   00130E                     u6661:
 10504   00130E  EF8F  F009         	goto	l6335
 10505   001312                     u6660:
 10506   001312                     
 10507                           ; BSR set to: 0
 10508   001312  90D8               	bcf	status,0,c
 10509   001314  3163               	rrcf	___fladd@grs& (0+255),w,b
 10510   001316  0901               	iorlw	1
 10511   001318  6F63               	movwf	___fladd@grs& (0+255),b
 10512   00131A  EF91  F009         	goto	l6337
 10513   00131E                     l6335:
 10514                           
 10515                           ; BSR set to: 0
 10516   00131E  90D8               	bcf	status,0,c
 10517   001320  3363               	rrcf	___fladd@grs& (0+255),f,b
 10518   001322                     l6337:
 10519                           
 10520                           ; BSR set to: 0
 10521   001322  A046               	btfss	___fladd@b^0,0,c
 10522   001324  EF96  F009         	goto	u6671
 10523   001328  EF98  F009         	goto	u6670
 10524   00132C                     u6671:
 10525   00132C  EF99  F009         	goto	l6341
 10526   001330                     u6670:
 10527   001330                     
 10528                           ; BSR set to: 0
 10529   001330  8F63               	bsf	___fladd@grs& (0+255),7,b
 10530   001332                     l6341:
 10531                           
 10532                           ; BSR set to: 0
 10533   001332  3449               	rlcf	(___fladd@b+3)^0,w,c
 10534   001334  3249               	rrcf	(___fladd@b+3)^0,f,c
 10535   001336  3248               	rrcf	(___fladd@b+2)^0,f,c
 10536   001338  3247               	rrcf	(___fladd@b+1)^0,f,c
 10537   00133A  3246               	rrcf	___fladd@b^0,f,c
 10538   00133C                     
 10539                           ; BSR set to: 0
 10540   00133C  2B62               	incf	___fladd@bexp& (0+255),f,b
 10541   00133E  EF2E  F00A         	goto	l6381
 10542   001342                     l6345:
 10543                           
 10544                           ; BSR set to: 0
 10545   001342  504A               	movf	___fladd@a^0,w,c
 10546   001344  5C46               	subwf	___fladd@b^0,w,c
 10547   001346  504B               	movf	(___fladd@a+1)^0,w,c
 10548   001348  5847               	subwfb	(___fladd@b+1)^0,w,c
 10549   00134A  504C               	movf	(___fladd@a+2)^0,w,c
 10550   00134C  5848               	subwfb	(___fladd@b+2)^0,w,c
 10551   00134E  5049               	movf	(___fladd@b+3)^0,w,c
 10552   001350  0A80               	xorlw	128
 10553   001352  6E4E               	movwf	??___fladd^0,c
 10554   001354  504D               	movf	(___fladd@a+3)^0,w,c
 10555   001356  0A80               	xorlw	128
 10556   001358  584E               	subwfb	??___fladd^0,w,c
 10557   00135A  B0D8               	btfsc	status,0,c
 10558   00135C  EFB2  F009         	goto	u6681
 10559   001360  EFB4  F009         	goto	u6680
 10560   001364                     u6681:
 10561   001364  EFDF  F009         	goto	l6355
 10562   001368                     u6680:
 10563   001368                     
 10564                           ; BSR set to: 0
 10565   001368  5046               	movf	___fladd@b^0,w,c
 10566   00136A  5C4A               	subwf	___fladd@a^0,w,c
 10567   00136C  6E4E               	movwf	??___fladd^0,c
 10568   00136E  5047               	movf	(___fladd@b+1)^0,w,c
 10569   001370  584B               	subwfb	(___fladd@a+1)^0,w,c
 10570   001372  6E4F               	movwf	(??___fladd+1)^0,c
 10571   001374  5048               	movf	(___fladd@b+2)^0,w,c
 10572   001376  584C               	subwfb	(___fladd@a+2)^0,w,c
 10573   001378  6E50               	movwf	(??___fladd+2)^0,c
 10574   00137A  5049               	movf	(___fladd@b+3)^0,w,c
 10575   00137C  584D               	subwfb	(___fladd@a+3)^0,w,c
 10576   00137E  6E51               	movwf	(??___fladd+3)^0,c
 10577   001380  0EFF               	movlw	255
 10578   001382  244E               	addwf	??___fladd^0,w,c
 10579   001384  6E46               	movwf	___fladd@b^0,c
 10580   001386  0EFF               	movlw	255
 10581   001388  204F               	addwfc	(??___fladd+1)^0,w,c
 10582   00138A  6E47               	movwf	(___fladd@b+1)^0,c
 10583   00138C  0EFF               	movlw	255
 10584   00138E  2050               	addwfc	(??___fladd+2)^0,w,c
 10585   001390  6E48               	movwf	(___fladd@b+2)^0,c
 10586   001392  0EFF               	movlw	255
 10587   001394  2051               	addwfc	(??___fladd+3)^0,w,c
 10588   001396  6E49               	movwf	(___fladd@b+3)^0,c
 10589   001398  0E80               	movlw	128
 10590   00139A  1B60               	xorwf	___fladd@signs& (0+255),f,b
 10591   00139C                     
 10592                           ; BSR set to: 0
 10593   00139C  6D63               	negf	___fladd@grs& (0+255),b
 10594   00139E                     
 10595                           ; BSR set to: 0
 10596   00139E  5163               	movf	___fladd@grs& (0+255),w,b
 10597   0013A0  A4D8               	btfss	status,2,c
 10598   0013A2  EFD5  F009         	goto	u6691
 10599   0013A6  EFD7  F009         	goto	u6690
 10600   0013AA                     u6691:
 10601   0013AA  EFE7  F009         	goto	l1093
 10602   0013AE                     u6690:
 10603   0013AE                     
 10604                           ; BSR set to: 0
 10605   0013AE  0E01               	movlw	1
 10606   0013B0  2646               	addwf	___fladd@b^0,f,c
 10607   0013B2  0E00               	movlw	0
 10608   0013B4  2247               	addwfc	(___fladd@b+1)^0,f,c
 10609   0013B6  2248               	addwfc	(___fladd@b+2)^0,f,c
 10610   0013B8  2249               	addwfc	(___fladd@b+3)^0,f,c
 10611   0013BA  EFE7  F009         	goto	l1093
 10612   0013BE                     l6355:
 10613                           
 10614                           ; BSR set to: 0
 10615   0013BE  504A               	movf	___fladd@a^0,w,c
 10616   0013C0  5E46               	subwf	___fladd@b^0,f,c
 10617   0013C2  504B               	movf	(___fladd@a+1)^0,w,c
 10618   0013C4  5A47               	subwfb	(___fladd@b+1)^0,f,c
 10619   0013C6  504C               	movf	(___fladd@a+2)^0,w,c
 10620   0013C8  5A48               	subwfb	(___fladd@b+2)^0,f,c
 10621   0013CA  504D               	movf	(___fladd@a+3)^0,w,c
 10622   0013CC  5A49               	subwfb	(___fladd@b+3)^0,f,c
 10623   0013CE                     l1093:
 10624                           
 10625                           ; BSR set to: 0
 10626   0013CE  5046               	movf	___fladd@b^0,w,c
 10627   0013D0  1047               	iorwf	(___fladd@b+1)^0,w,c
 10628   0013D2  1048               	iorwf	(___fladd@b+2)^0,w,c
 10629   0013D4  1049               	iorwf	(___fladd@b+3)^0,w,c
 10630   0013D6  A4D8               	btfss	status,2,c
 10631   0013D8  EFF0  F009         	goto	u6701
 10632   0013DC  EFF2  F009         	goto	u6700
 10633   0013E0                     u6701:
 10634   0013E0  EF27  F00A         	goto	l6379
 10635   0013E4                     u6700:
 10636   0013E4                     
 10637                           ; BSR set to: 0
 10638   0013E4  5163               	movf	___fladd@grs& (0+255),w,b
 10639   0013E6  A4D8               	btfss	status,2,c
 10640   0013E8  EFF8  F009         	goto	u6711
 10641   0013EC  EFFA  F009         	goto	u6710
 10642   0013F0                     u6711:
 10643   0013F0  EF27  F00A         	goto	l6379
 10644   0013F4                     u6710:
 10645   0013F4                     
 10646                           ; BSR set to: 0
 10647   0013F4  0E00               	movlw	0
 10648   0013F6  6E46               	movwf	?___fladd^0,c
 10649   0013F8  0E00               	movlw	0
 10650   0013FA  6E47               	movwf	(?___fladd+1)^0,c
 10651   0013FC  0E00               	movlw	0
 10652   0013FE  6E48               	movwf	(?___fladd+2)^0,c
 10653   001400  0E00               	movlw	0
 10654   001402  6E49               	movwf	(?___fladd+3)^0,c
 10655   001404  EFC2  F00A         	goto	l1085
 10656   001408                     l6363:
 10657                           
 10658                           ; BSR set to: 0
 10659   001408  90D8               	bcf	status,0,c
 10660   00140A  3646               	rlcf	___fladd@b^0,f,c
 10661   00140C  3647               	rlcf	(___fladd@b+1)^0,f,c
 10662   00140E  3648               	rlcf	(___fladd@b+2)^0,f,c
 10663   001410  3649               	rlcf	(___fladd@b+3)^0,f,c
 10664   001412                     
 10665                           ; BSR set to: 0
 10666   001412  AF63               	btfss	___fladd@grs& (0+255),7,b
 10667   001414  EF0E  F00A         	goto	u6721
 10668   001418  EF10  F00A         	goto	u6720
 10669   00141C                     u6721:
 10670   00141C  EF11  F00A         	goto	l6369
 10671   001420                     u6720:
 10672   001420                     
 10673                           ; BSR set to: 0
 10674   001420  8046               	bsf	___fladd@b^0,0,c
 10675   001422                     l6369:
 10676                           
 10677                           ; BSR set to: 0
 10678   001422  A163               	btfss	___fladd@grs& (0+255),0,b
 10679   001424  EF16  F00A         	goto	u6731
 10680   001428  EF18  F00A         	goto	u6730
 10681   00142C                     u6731:
 10682   00142C  EF1C  F00A         	goto	l6373
 10683   001430                     u6730:
 10684   001430                     
 10685                           ; BSR set to: 0
 10686   001430  80D8               	bsf	status,0,c
 10687   001432  3763               	rlcf	___fladd@grs& (0+255),f,b
 10688   001434  EF1E  F00A         	goto	l6375
 10689   001438                     l6373:
 10690                           
 10691                           ; BSR set to: 0
 10692   001438  90D8               	bcf	status,0,c
 10693   00143A  3763               	rlcf	___fladd@grs& (0+255),f,b
 10694   00143C                     l6375:
 10695                           
 10696                           ; BSR set to: 0
 10697   00143C  5162               	movf	___fladd@bexp& (0+255),w,b
 10698   00143E  B4D8               	btfsc	status,2,c
 10699   001440  EF24  F00A         	goto	u6741
 10700   001444  EF26  F00A         	goto	u6740
 10701   001448                     u6741:
 10702   001448  EF27  F00A         	goto	l6379
 10703   00144C                     u6740:
 10704   00144C                     
 10705                           ; BSR set to: 0
 10706   00144C  0762               	decf	___fladd@bexp& (0+255),f,b
 10707   00144E                     l6379:
 10708                           
 10709                           ; BSR set to: 0
 10710   00144E  AE48               	btfss	(___fladd@b+2)^0,7,c
 10711   001450  EF2C  F00A         	goto	u6751
 10712   001454  EF2E  F00A         	goto	u6750
 10713   001458                     u6751:
 10714   001458  EF04  F00A         	goto	l6363
 10715   00145C                     u6750:
 10716   00145C                     l6381:
 10717                           
 10718                           ; BSR set to: 0
 10719   00145C  0E00               	movlw	0
 10720   00145E  6F61               	movwf	___fladd@aexp& (0+255),b
 10721   001460                     
 10722                           ; BSR set to: 0
 10723   001460  AF63               	btfss	___fladd@grs& (0+255),7,b
 10724   001462  EF35  F00A         	goto	u6761
 10725   001466  EF37  F00A         	goto	u6760
 10726   00146A                     u6761:
 10727   00146A  EF4F  F00A         	goto	l1102
 10728   00146E                     u6760:
 10729   00146E                     
 10730                           ; BSR set to: 0
 10731   00146E  C063  F04E         	movff	___fladd@grs,??___fladd
 10732   001472  0E7F               	movlw	127
 10733   001474  164E               	andwf	??___fladd^0,f,c
 10734   001476  B4D8               	btfsc	status,2,c
 10735   001478  EF40  F00A         	goto	u6771
 10736   00147C  EF42  F00A         	goto	u6770
 10737   001480                     u6771:
 10738   001480  EF46  F00A         	goto	l1103
 10739   001484                     u6770:
 10740   001484                     l6387:
 10741                           
 10742                           ; BSR set to: 0
 10743   001484  0E01               	movlw	1
 10744   001486  6F61               	movwf	___fladd@aexp& (0+255),b
 10745   001488  EF4F  F00A         	goto	l1102
 10746   00148C                     l1103:
 10747                           
 10748                           ; BSR set to: 0
 10749   00148C  A046               	btfss	___fladd@b^0,0,c
 10750   00148E  EF4B  F00A         	goto	u6781
 10751   001492  EF4D  F00A         	goto	u6780
 10752   001496                     u6781:
 10753   001496  EF4F  F00A         	goto	l1102
 10754   00149A                     u6780:
 10755   00149A  EF42  F00A         	goto	l6387
 10756   00149E                     l1102:
 10757                           
 10758                           ; BSR set to: 0
 10759   00149E  5161               	movf	___fladd@aexp& (0+255),w,b
 10760   0014A0  B4D8               	btfsc	status,2,c
 10761   0014A2  EF55  F00A         	goto	u6791
 10762   0014A6  EF57  F00A         	goto	u6790
 10763   0014AA                     u6791:
 10764   0014AA  EF82  F00A         	goto	l6399
 10765   0014AE                     u6790:
 10766   0014AE                     
 10767                           ; BSR set to: 0
 10768   0014AE  0E01               	movlw	1
 10769   0014B0  2646               	addwf	___fladd@b^0,f,c
 10770   0014B2  0E00               	movlw	0
 10771   0014B4  2247               	addwfc	(___fladd@b+1)^0,f,c
 10772   0014B6  2248               	addwfc	(___fladd@b+2)^0,f,c
 10773   0014B8  2249               	addwfc	(___fladd@b+3)^0,f,c
 10774   0014BA                     
 10775                           ; BSR set to: 0
 10776   0014BA  A049               	btfss	(___fladd@b+3)^0,0,c
 10777   0014BC  EF62  F00A         	goto	u6801
 10778   0014C0  EF64  F00A         	goto	u6800
 10779   0014C4                     u6801:
 10780   0014C4  EF82  F00A         	goto	l6399
 10781   0014C8                     u6800:
 10782   0014C8                     
 10783                           ; BSR set to: 0
 10784   0014C8  C046  F04E         	movff	___fladd@b,??___fladd
 10785   0014CC  C047  F04F         	movff	___fladd@b+1,??___fladd+1
 10786   0014D0  C048  F050         	movff	___fladd@b+2,??___fladd+2
 10787   0014D4  C049  F051         	movff	___fladd@b+3,??___fladd+3
 10788   0014D8  3451               	rlcf	(??___fladd+3)^0,w,c
 10789   0014DA  3251               	rrcf	(??___fladd+3)^0,f,c
 10790   0014DC  3250               	rrcf	(??___fladd+2)^0,f,c
 10791   0014DE  324F               	rrcf	(??___fladd+1)^0,f,c
 10792   0014E0  324E               	rrcf	??___fladd^0,f,c
 10793   0014E2  C04E  F046         	movff	??___fladd,___fladd@b
 10794   0014E6  C04F  F047         	movff	??___fladd+1,___fladd@b+1
 10795   0014EA  C050  F048         	movff	??___fladd+2,___fladd@b+2
 10796   0014EE  C051  F049         	movff	??___fladd+3,___fladd@b+3
 10797   0014F2  2962               	incf	___fladd@bexp& (0+255),w,b
 10798   0014F4  B4D8               	btfsc	status,2,c
 10799   0014F6  EF7F  F00A         	goto	u6811
 10800   0014FA  EF81  F00A         	goto	u6810
 10801   0014FE                     u6811:
 10802   0014FE  EF82  F00A         	goto	l6399
 10803   001502                     u6810:
 10804   001502                     
 10805                           ; BSR set to: 0
 10806   001502  2B62               	incf	___fladd@bexp& (0+255),f,b
 10807   001504                     l6399:
 10808                           
 10809                           ; BSR set to: 0
 10810   001504  2962               	incf	___fladd@bexp& (0+255),w,b
 10811   001506  B4D8               	btfsc	status,2,c
 10812   001508  EF88  F00A         	goto	u6821
 10813   00150C  EF8A  F00A         	goto	u6820
 10814   001510                     u6821:
 10815   001510  EF92  F00A         	goto	l6403
 10816   001514                     u6820:
 10817   001514                     
 10818                           ; BSR set to: 0
 10819   001514  5162               	movf	___fladd@bexp& (0+255),w,b
 10820   001516  A4D8               	btfss	status,2,c
 10821   001518  EF90  F00A         	goto	u6831
 10822   00151C  EF92  F00A         	goto	u6830
 10823   001520                     u6831:
 10824   001520  EFA4  F00A         	goto	l6407
 10825   001524                     u6830:
 10826   001524                     l6403:
 10827                           
 10828                           ; BSR set to: 0
 10829   001524  0E00               	movlw	0
 10830   001526  6E46               	movwf	___fladd@b^0,c
 10831   001528  0E00               	movlw	0
 10832   00152A  6E47               	movwf	(___fladd@b+1)^0,c
 10833   00152C  0E00               	movlw	0
 10834   00152E  6E48               	movwf	(___fladd@b+2)^0,c
 10835   001530  0E00               	movlw	0
 10836   001532  6E49               	movwf	(___fladd@b+3)^0,c
 10837   001534  5162               	movf	___fladd@bexp& (0+255),w,b
 10838   001536  A4D8               	btfss	status,2,c
 10839   001538  EFA0  F00A         	goto	u6841
 10840   00153C  EFA2  F00A         	goto	u6840
 10841   001540                     u6841:
 10842   001540  EFA4  F00A         	goto	l6407
 10843   001544                     u6840:
 10844   001544                     
 10845                           ; BSR set to: 0
 10846   001544  0E00               	movlw	0
 10847   001546  6F60               	movwf	___fladd@signs& (0+255),b
 10848   001548                     l6407:
 10849                           
 10850                           ; BSR set to: 0
 10851   001548  A162               	btfss	___fladd@bexp& (0+255),0,b
 10852   00154A  EFA9  F00A         	goto	u6851
 10853   00154E  EFAB  F00A         	goto	u6850
 10854   001552                     u6851:
 10855   001552  EFAE  F00A         	goto	l6411
 10856   001556                     u6850:
 10857   001556                     
 10858                           ; BSR set to: 0
 10859   001556  8E48               	bsf	(___fladd@b+2)^0,7,c
 10860   001558  EFAF  F00A         	goto	l6413
 10861   00155C                     l6411:
 10862                           
 10863                           ; BSR set to: 0
 10864   00155C  9E48               	bcf	(___fladd@b+2)^0,7,c
 10865   00155E                     l6413:
 10866                           
 10867                           ; BSR set to: 0
 10868   00155E  90D8               	bcf	status,0,c
 10869   001560  3162               	rrcf	___fladd@bexp& (0+255),w,b
 10870   001562  6E49               	movwf	(___fladd@b+3)^0,c
 10871   001564                     
 10872                           ; BSR set to: 0
 10873   001564  AF60               	btfss	___fladd@signs& (0+255),7,b
 10874   001566  EFB7  F00A         	goto	u6861
 10875   00156A  EFB9  F00A         	goto	u6860
 10876   00156E                     u6861:
 10877   00156E  EFBA  F00A         	goto	l6419
 10878   001572                     u6860:
 10879   001572                     
 10880                           ; BSR set to: 0
 10881   001572  8E49               	bsf	(___fladd@b+3)^0,7,c
 10882   001574                     l6419:
 10883                           
 10884                           ; BSR set to: 0
 10885   001574  C046  F046         	movff	___fladd@b,?___fladd
 10886   001578  C047  F047         	movff	___fladd@b+1,?___fladd+1
 10887   00157C  C048  F048         	movff	___fladd@b+2,?___fladd+2
 10888   001580  C049  F049         	movff	___fladd@b+3,?___fladd+3
 10889   001584                     l1085:
 10890                           
 10891                           ; BSR set to: 0
 10892   001584  0012               	return		;funcret
 10893   001586                     __end_of___fladd:
 10894                           	callstack 0
 10895                           
 10896 ;; *************** function ___flneg *****************
 10897 ;; Defined at:
 10898 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
 10899 ;; Parameters:    Size  Location     Type
 10900 ;;  f1              4   32[BANK0 ] unsigned char 
 10901 ;; Auto vars:     Size  Location     Type
 10902 ;;		None
 10903 ;; Return value:  Size  Location     Type
 10904 ;;                  4   32[BANK0 ] unsigned char 
 10905 ;; Registers used:
 10906 ;;		wreg, status,2, status,0
 10907 ;; Tracked objects:
 10908 ;;		On entry : 0/0
 10909 ;;		On exit  : 0/0
 10910 ;;		Unchanged: 0/0
 10911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10912 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10915 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10916 ;;Total ram usage:        4 bytes
 10917 ;; Hardware stack levels used: 1
 10918 ;; Hardware stack levels required when called: 1
 10919 ;; This function calls:
 10920 ;;		Nothing
 10921 ;; This function is called by:
 10922 ;;		_efgtoa
 10923 ;;		_sinf
 10924 ;;		___rem_pio2f
 10925 ;; This function uses a non-reentrant model
 10926 ;;
 10927                           
 10928                           	psect	text38
 10929   004ABC                     __ptext38:
 10930                           	callstack 0
 10931   004ABC                     ___flneg:
 10932                           	callstack 24
 10933   004ABC  0100               	movlb	0	; () banked
 10934   004ABE  5180               	movf	___flneg@f1& (0+255),w,b
 10935   004AC0  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
 10936   004AC2  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
 10937   004AC4  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
 10938   004AC6  B4D8               	btfsc	status,2,c
 10939   004AC8  EF68  F025         	goto	u7501
 10940   004ACC  EF6A  F025         	goto	u7500
 10941   004AD0                     u7501:
 10942   004AD0  EF72  F025         	goto	l6833
 10943   004AD4                     u7500:
 10944   004AD4                     
 10945                           ; BSR set to: 0
 10946   004AD4  0E00               	movlw	0
 10947   004AD6  1B80               	xorwf	___flneg@f1& (0+255),f,b
 10948   004AD8  0E00               	movlw	0
 10949   004ADA  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
 10950   004ADC  0E00               	movlw	0
 10951   004ADE  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
 10952   004AE0  0E80               	movlw	128
 10953   004AE2  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
 10954   004AE4                     l6833:
 10955                           
 10956                           ; BSR set to: 0
 10957   004AE4  C080  F080         	movff	___flneg@f1,?___flneg
 10958   004AE8  C081  F081         	movff	___flneg@f1+1,?___flneg+1
 10959   004AEC  C082  F082         	movff	___flneg@f1+2,?___flneg+2
 10960   004AF0  C083  F083         	movff	___flneg@f1+3,?___flneg+3
 10961   004AF4                     
 10962                           ; BSR set to: 0
 10963   004AF4  0012               	return		;funcret
 10964   004AF6                     __end_of___flneg:
 10965                           	callstack 0
 10966                           
 10967 ;; *************** function ___flmul *****************
 10968 ;; Defined at:
 10969 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
 10970 ;; Parameters:    Size  Location     Type
 10971 ;;  b               4   19[COMRAM] unsigned char 
 10972 ;;  a               4   23[COMRAM] unsigned char 
 10973 ;; Auto vars:     Size  Location     Type
 10974 ;;  prod            4   38[COMRAM] struct .
 10975 ;;  grs             4   33[COMRAM] unsigned long 
 10976 ;;  temp            2   42[COMRAM] struct .
 10977 ;;  bexp            1   37[COMRAM] unsigned char 
 10978 ;;  aexp            1   32[COMRAM] unsigned char 
 10979 ;;  sign            1   31[COMRAM] unsigned char 
 10980 ;; Return value:  Size  Location     Type
 10981 ;;                  4   19[COMRAM] unsigned char 
 10982 ;; Registers used:
 10983 ;;		wreg, status,2, status,0, prodl, prodh
 10984 ;; Tracked objects:
 10985 ;;		On entry : 0/0
 10986 ;;		On exit  : 0/0
 10987 ;;		Unchanged: 0/0
 10988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10989 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10990 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10991 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10992 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10993 ;;Total ram usage:       25 bytes
 10994 ;; Hardware stack levels used: 1
 10995 ;; Hardware stack levels required when called: 1
 10996 ;; This function calls:
 10997 ;;		Nothing
 10998 ;; This function is called by:
 10999 ;;		_runDAC
 11000 ;;		_runADC
 11001 ;;		_efgtoa
 11002 ;;		___cosdf
 11003 ;;		___rem_pio2f
 11004 ;;		___sindf
 11005 ;; This function uses a non-reentrant model
 11006 ;;
 11007                           
 11008                           	psect	text39
 11009   001EA8                     __ptext39:
 11010                           	callstack 0
 11011   001EA8                     ___flmul:
 11012                           	callstack 24
 11013   001EA8  5017               	movf	(___flmul@b+3)^0,w,c
 11014   001EAA  0B80               	andlw	128
 11015   001EAC  6E20               	movwf	___flmul@sign^0,c
 11016   001EAE  5017               	movf	(___flmul@b+3)^0,w,c
 11017   001EB0  2417               	addwf	(___flmul@b+3)^0,w,c
 11018   001EB2  6E26               	movwf	___flmul@bexp^0,c
 11019   001EB4  AE16               	btfss	(___flmul@b+2)^0,7,c
 11020   001EB6  EF5F  F00F         	goto	u7111
 11021   001EBA  EF61  F00F         	goto	u7110
 11022   001EBE                     u7111:
 11023   001EBE  EF62  F00F         	goto	l6581
 11024   001EC2                     u7110:
 11025   001EC2  8026               	bsf	___flmul@bexp^0,0,c
 11026   001EC4                     l6581:
 11027   001EC4  5026               	movf	___flmul@bexp^0,w,c
 11028   001EC6  B4D8               	btfsc	status,2,c
 11029   001EC8  EF68  F00F         	goto	u7121
 11030   001ECC  EF6A  F00F         	goto	u7120
 11031   001ED0                     u7121:
 11032   001ED0  EF7D  F00F         	goto	l6589
 11033   001ED4                     u7120:
 11034   001ED4  2826               	incf	___flmul@bexp^0,w,c
 11035   001ED6  A4D8               	btfss	status,2,c
 11036   001ED8  EF70  F00F         	goto	u7131
 11037   001EDC  EF72  F00F         	goto	u7130
 11038   001EE0                     u7131:
 11039   001EE0  EF7A  F00F         	goto	l6587
 11040   001EE4                     u7130:
 11041   001EE4  0E00               	movlw	0
 11042   001EE6  6E14               	movwf	___flmul@b^0,c
 11043   001EE8  0E00               	movlw	0
 11044   001EEA  6E15               	movwf	(___flmul@b+1)^0,c
 11045   001EEC  0E00               	movlw	0
 11046   001EEE  6E16               	movwf	(___flmul@b+2)^0,c
 11047   001EF0  0E00               	movlw	0
 11048   001EF2  6E17               	movwf	(___flmul@b+3)^0,c
 11049   001EF4                     l6587:
 11050   001EF4  8E16               	bsf	(___flmul@b+2)^0,7,c
 11051   001EF6  EF85  F00F         	goto	l6591
 11052   001EFA                     l6589:
 11053   001EFA  0E00               	movlw	0
 11054   001EFC  6E14               	movwf	___flmul@b^0,c
 11055   001EFE  0E00               	movlw	0
 11056   001F00  6E15               	movwf	(___flmul@b+1)^0,c
 11057   001F02  0E00               	movlw	0
 11058   001F04  6E16               	movwf	(___flmul@b+2)^0,c
 11059   001F06  0E00               	movlw	0
 11060   001F08  6E17               	movwf	(___flmul@b+3)^0,c
 11061   001F0A                     l6591:
 11062   001F0A  501B               	movf	(___flmul@a+3)^0,w,c
 11063   001F0C  0B80               	andlw	128
 11064   001F0E  1A20               	xorwf	___flmul@sign^0,f,c
 11065   001F10  501B               	movf	(___flmul@a+3)^0,w,c
 11066   001F12  241B               	addwf	(___flmul@a+3)^0,w,c
 11067   001F14  6E21               	movwf	___flmul@aexp^0,c
 11068   001F16  AE1A               	btfss	(___flmul@a+2)^0,7,c
 11069   001F18  EF90  F00F         	goto	u7141
 11070   001F1C  EF92  F00F         	goto	u7140
 11071   001F20                     u7141:
 11072   001F20  EF93  F00F         	goto	l6599
 11073   001F24                     u7140:
 11074   001F24  8021               	bsf	___flmul@aexp^0,0,c
 11075   001F26                     l6599:
 11076   001F26  5021               	movf	___flmul@aexp^0,w,c
 11077   001F28  B4D8               	btfsc	status,2,c
 11078   001F2A  EF99  F00F         	goto	u7151
 11079   001F2E  EF9B  F00F         	goto	u7150
 11080   001F32                     u7151:
 11081   001F32  EFAE  F00F         	goto	l6607
 11082   001F36                     u7150:
 11083   001F36  2821               	incf	___flmul@aexp^0,w,c
 11084   001F38  A4D8               	btfss	status,2,c
 11085   001F3A  EFA1  F00F         	goto	u7161
 11086   001F3E  EFA3  F00F         	goto	u7160
 11087   001F42                     u7161:
 11088   001F42  EFAB  F00F         	goto	l6605
 11089   001F46                     u7160:
 11090   001F46  0E00               	movlw	0
 11091   001F48  6E18               	movwf	___flmul@a^0,c
 11092   001F4A  0E00               	movlw	0
 11093   001F4C  6E19               	movwf	(___flmul@a+1)^0,c
 11094   001F4E  0E00               	movlw	0
 11095   001F50  6E1A               	movwf	(___flmul@a+2)^0,c
 11096   001F52  0E00               	movlw	0
 11097   001F54  6E1B               	movwf	(___flmul@a+3)^0,c
 11098   001F56                     l6605:
 11099   001F56  8E1A               	bsf	(___flmul@a+2)^0,7,c
 11100   001F58  EFB6  F00F         	goto	l1162
 11101   001F5C                     l6607:
 11102   001F5C  0E00               	movlw	0
 11103   001F5E  6E18               	movwf	___flmul@a^0,c
 11104   001F60  0E00               	movlw	0
 11105   001F62  6E19               	movwf	(___flmul@a+1)^0,c
 11106   001F64  0E00               	movlw	0
 11107   001F66  6E1A               	movwf	(___flmul@a+2)^0,c
 11108   001F68  0E00               	movlw	0
 11109   001F6A  6E1B               	movwf	(___flmul@a+3)^0,c
 11110   001F6C                     l1162:
 11111   001F6C  5021               	movf	___flmul@aexp^0,w,c
 11112   001F6E  B4D8               	btfsc	status,2,c
 11113   001F70  EFBC  F00F         	goto	u7171
 11114   001F74  EFBE  F00F         	goto	u7170
 11115   001F78                     u7171:
 11116   001F78  EFC6  F00F         	goto	l6611
 11117   001F7C                     u7170:
 11118   001F7C  5026               	movf	___flmul@bexp^0,w,c
 11119   001F7E  A4D8               	btfss	status,2,c
 11120   001F80  EFC4  F00F         	goto	u7181
 11121   001F84  EFC6  F00F         	goto	u7180
 11122   001F88                     u7181:
 11123   001F88  EFD0  F00F         	goto	l6615
 11124   001F8C                     u7180:
 11125   001F8C                     l6611:
 11126   001F8C  0E00               	movlw	0
 11127   001F8E  6E14               	movwf	?___flmul^0,c
 11128   001F90  0E00               	movlw	0
 11129   001F92  6E15               	movwf	(?___flmul+1)^0,c
 11130   001F94  0E00               	movlw	0
 11131   001F96  6E16               	movwf	(?___flmul+2)^0,c
 11132   001F98  0E00               	movlw	0
 11133   001F9A  6E17               	movwf	(?___flmul+3)^0,c
 11134   001F9C  EF68  F011         	goto	l1166
 11135   001FA0                     l6615:
 11136   001FA0  501A               	movf	(___flmul@a+2)^0,w,c
 11137   001FA2  0214               	mulwf	___flmul@b^0,c
 11138   001FA4  CFF3 F02B          	movff	prodl,___flmul@temp
 11139   001FA8  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11140   001FAC  502B               	movf	___flmul@temp^0,w,c
 11141   001FAE  6E22               	movwf	___flmul@grs^0,c
 11142   001FB0  6A23               	clrf	(___flmul@grs+1)^0,c
 11143   001FB2  6A24               	clrf	(___flmul@grs+2)^0,c
 11144   001FB4  6A25               	clrf	(___flmul@grs+3)^0,c
 11145   001FB6  502C               	movf	(___flmul@temp+1)^0,w,c
 11146   001FB8  6E27               	movwf	___flmul@prod^0,c
 11147   001FBA  6A28               	clrf	(___flmul@prod+1)^0,c
 11148   001FBC  6A29               	clrf	(___flmul@prod+2)^0,c
 11149   001FBE  6A2A               	clrf	(___flmul@prod+3)^0,c
 11150   001FC0  5019               	movf	(___flmul@a+1)^0,w,c
 11151   001FC2  0215               	mulwf	(___flmul@b+1)^0,c
 11152   001FC4  CFF3 F02B          	movff	prodl,___flmul@temp
 11153   001FC8  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11154   001FCC  502B               	movf	___flmul@temp^0,w,c
 11155   001FCE  2622               	addwf	___flmul@grs^0,f,c
 11156   001FD0  0E00               	movlw	0
 11157   001FD2  2223               	addwfc	(___flmul@grs+1)^0,f,c
 11158   001FD4  2224               	addwfc	(___flmul@grs+2)^0,f,c
 11159   001FD6  2225               	addwfc	(___flmul@grs+3)^0,f,c
 11160   001FD8  502C               	movf	(___flmul@temp+1)^0,w,c
 11161   001FDA  2627               	addwf	___flmul@prod^0,f,c
 11162   001FDC  0E00               	movlw	0
 11163   001FDE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11164   001FE0  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11165   001FE2  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11166   001FE4  5018               	movf	___flmul@a^0,w,c
 11167   001FE6  0216               	mulwf	(___flmul@b+2)^0,c
 11168   001FE8  CFF3 F02B          	movff	prodl,___flmul@temp
 11169   001FEC  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11170   001FF0  502B               	movf	___flmul@temp^0,w,c
 11171   001FF2  2622               	addwf	___flmul@grs^0,f,c
 11172   001FF4  0E00               	movlw	0
 11173   001FF6  2223               	addwfc	(___flmul@grs+1)^0,f,c
 11174   001FF8  2224               	addwfc	(___flmul@grs+2)^0,f,c
 11175   001FFA  2225               	addwfc	(___flmul@grs+3)^0,f,c
 11176   001FFC  502C               	movf	(___flmul@temp+1)^0,w,c
 11177   001FFE  2627               	addwf	___flmul@prod^0,f,c
 11178   002000  0E00               	movlw	0
 11179   002002  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11180   002004  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11181   002006  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11182   002008  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 11183   00200C  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 11184   002010  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 11185   002014  6A22               	clrf	___flmul@grs^0,c
 11186   002016  5018               	movf	___flmul@a^0,w,c
 11187   002018  0215               	mulwf	(___flmul@b+1)^0,c
 11188   00201A  CFF3 F02B          	movff	prodl,___flmul@temp
 11189   00201E  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11190   002022  502B               	movf	___flmul@temp^0,w,c
 11191   002024  2622               	addwf	___flmul@grs^0,f,c
 11192   002026  502C               	movf	(___flmul@temp+1)^0,w,c
 11193   002028  2223               	addwfc	(___flmul@grs+1)^0,f,c
 11194   00202A  0E00               	movlw	0
 11195   00202C  2224               	addwfc	(___flmul@grs+2)^0,f,c
 11196   00202E  0E00               	movlw	0
 11197   002030  2225               	addwfc	(___flmul@grs+3)^0,f,c
 11198   002032  5019               	movf	(___flmul@a+1)^0,w,c
 11199   002034  0214               	mulwf	___flmul@b^0,c
 11200   002036  CFF3 F02B          	movff	prodl,___flmul@temp
 11201   00203A  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11202   00203E  502B               	movf	___flmul@temp^0,w,c
 11203   002040  2622               	addwf	___flmul@grs^0,f,c
 11204   002042  502C               	movf	(___flmul@temp+1)^0,w,c
 11205   002044  2223               	addwfc	(___flmul@grs+1)^0,f,c
 11206   002046  0E00               	movlw	0
 11207   002048  2224               	addwfc	(___flmul@grs+2)^0,f,c
 11208   00204A  0E00               	movlw	0
 11209   00204C  2225               	addwfc	(___flmul@grs+3)^0,f,c
 11210   00204E  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 11211   002052  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 11212   002056  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 11213   00205A  6A22               	clrf	___flmul@grs^0,c
 11214   00205C  5018               	movf	___flmul@a^0,w,c
 11215   00205E  0214               	mulwf	___flmul@b^0,c
 11216   002060  CFF3 F02B          	movff	prodl,___flmul@temp
 11217   002064  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11218   002068  502B               	movf	___flmul@temp^0,w,c
 11219   00206A  2622               	addwf	___flmul@grs^0,f,c
 11220   00206C  502C               	movf	(___flmul@temp+1)^0,w,c
 11221   00206E  2223               	addwfc	(___flmul@grs+1)^0,f,c
 11222   002070  0E00               	movlw	0
 11223   002072  2224               	addwfc	(___flmul@grs+2)^0,f,c
 11224   002074  0E00               	movlw	0
 11225   002076  2225               	addwfc	(___flmul@grs+3)^0,f,c
 11226   002078  501A               	movf	(___flmul@a+2)^0,w,c
 11227   00207A  0215               	mulwf	(___flmul@b+1)^0,c
 11228   00207C  CFF3 F02B          	movff	prodl,___flmul@temp
 11229   002080  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11230   002084  502B               	movf	___flmul@temp^0,w,c
 11231   002086  2627               	addwf	___flmul@prod^0,f,c
 11232   002088  502C               	movf	(___flmul@temp+1)^0,w,c
 11233   00208A  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11234   00208C  0E00               	movlw	0
 11235   00208E  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11236   002090  0E00               	movlw	0
 11237   002092  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11238   002094  5019               	movf	(___flmul@a+1)^0,w,c
 11239   002096  0216               	mulwf	(___flmul@b+2)^0,c
 11240   002098  CFF3 F02B          	movff	prodl,___flmul@temp
 11241   00209C  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11242   0020A0  502B               	movf	___flmul@temp^0,w,c
 11243   0020A2  2627               	addwf	___flmul@prod^0,f,c
 11244   0020A4  502C               	movf	(___flmul@temp+1)^0,w,c
 11245   0020A6  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11246   0020A8  0E00               	movlw	0
 11247   0020AA  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11248   0020AC  0E00               	movlw	0
 11249   0020AE  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11250   0020B0  501A               	movf	(___flmul@a+2)^0,w,c
 11251   0020B2  0216               	mulwf	(___flmul@b+2)^0,c
 11252   0020B4  CFF3 F02B          	movff	prodl,___flmul@temp
 11253   0020B8  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11254   0020BC  502B               	movf	___flmul@temp^0,w,c
 11255   0020BE  6E1C               	movwf	??___flmul^0,c
 11256   0020C0  502C               	movf	(___flmul@temp+1)^0,w,c
 11257   0020C2  6E1D               	movwf	(??___flmul+1)^0,c
 11258   0020C4  6A1E               	clrf	(??___flmul+2)^0,c
 11259   0020C6  6A1F               	clrf	(??___flmul+3)^0,c
 11260   0020C8  C01E  F01F         	movff	??___flmul+2,??___flmul+3
 11261   0020CC  C01D  F01E         	movff	??___flmul+1,??___flmul+2
 11262   0020D0  C01C  F01D         	movff	??___flmul,??___flmul+1
 11263   0020D4  6A1C               	clrf	??___flmul^0,c
 11264   0020D6  501C               	movf	??___flmul^0,w,c
 11265   0020D8  2627               	addwf	___flmul@prod^0,f,c
 11266   0020DA  501D               	movf	(??___flmul+1)^0,w,c
 11267   0020DC  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11268   0020DE  501E               	movf	(??___flmul+2)^0,w,c
 11269   0020E0  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11270   0020E2  501F               	movf	(??___flmul+3)^0,w,c
 11271   0020E4  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11272   0020E6  C022  F01C         	movff	___flmul@grs,??___flmul
 11273   0020EA  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
 11274   0020EE  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
 11275   0020F2  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
 11276   0020F6  0E19               	movlw	25
 11277   0020F8  EF83  F010         	goto	u7190
 11278   0020FC                     u7195:
 11279   0020FC  90D8               	bcf	status,0,c
 11280   0020FE  321F               	rrcf	(??___flmul+3)^0,f,c
 11281   002100  321E               	rrcf	(??___flmul+2)^0,f,c
 11282   002102  321D               	rrcf	(??___flmul+1)^0,f,c
 11283   002104  321C               	rrcf	??___flmul^0,f,c
 11284   002106                     u7190:
 11285   002106  2EE8               	decfsz	wreg,f,c
 11286   002108  EF7E  F010         	goto	u7195
 11287   00210C  501C               	movf	??___flmul^0,w,c
 11288   00210E  2627               	addwf	___flmul@prod^0,f,c
 11289   002110  501D               	movf	(??___flmul+1)^0,w,c
 11290   002112  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11291   002114  501E               	movf	(??___flmul+2)^0,w,c
 11292   002116  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11293   002118  501F               	movf	(??___flmul+3)^0,w,c
 11294   00211A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11295   00211C  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 11296   002120  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 11297   002124  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 11298   002128  6A22               	clrf	___flmul@grs^0,c
 11299   00212A  5021               	movf	___flmul@aexp^0,w,c
 11300   00212C  C026  F01C         	movff	___flmul@bexp,??___flmul
 11301   002130  6A1D               	clrf	(??___flmul+1)^0,c
 11302   002132  261C               	addwf	??___flmul^0,f,c
 11303   002134  0E00               	movlw	0
 11304   002136  221D               	addwfc	(??___flmul+1)^0,f,c
 11305   002138  0E82               	movlw	130
 11306   00213A  241C               	addwf	??___flmul^0,w,c
 11307   00213C  6E2B               	movwf	___flmul@temp^0,c
 11308   00213E  0EFF               	movlw	255
 11309   002140  201D               	addwfc	(??___flmul+1)^0,w,c
 11310   002142  6E2C               	movwf	(___flmul@temp+1)^0,c
 11311   002144  EFB9  F010         	goto	l6663
 11312   002148                     l6657:
 11313   002148  90D8               	bcf	status,0,c
 11314   00214A  3627               	rlcf	___flmul@prod^0,f,c
 11315   00214C  3628               	rlcf	(___flmul@prod+1)^0,f,c
 11316   00214E  3629               	rlcf	(___flmul@prod+2)^0,f,c
 11317   002150  362A               	rlcf	(___flmul@prod+3)^0,f,c
 11318   002152  AE25               	btfss	(___flmul@grs+3)^0,7,c
 11319   002154  EFAE  F010         	goto	u7201
 11320   002158  EFB0  F010         	goto	u7200
 11321   00215C                     u7201:
 11322   00215C  EFB1  F010         	goto	l1169
 11323   002160                     u7200:
 11324   002160  8027               	bsf	___flmul@prod^0,0,c
 11325   002162                     l1169:
 11326   002162  90D8               	bcf	status,0,c
 11327   002164  3622               	rlcf	___flmul@grs^0,f,c
 11328   002166  3623               	rlcf	(___flmul@grs+1)^0,f,c
 11329   002168  3624               	rlcf	(___flmul@grs+2)^0,f,c
 11330   00216A  3625               	rlcf	(___flmul@grs+3)^0,f,c
 11331   00216C  062B               	decf	___flmul@temp^0,f,c
 11332   00216E  A0D8               	btfss	status,0,c
 11333   002170  062C               	decf	(___flmul@temp+1)^0,f,c
 11334   002172                     l6663:
 11335   002172  AE29               	btfss	(___flmul@prod+2)^0,7,c
 11336   002174  EFBE  F010         	goto	u7211
 11337   002178  EFC0  F010         	goto	u7210
 11338   00217C                     u7211:
 11339   00217C  EFA4  F010         	goto	l6657
 11340   002180                     u7210:
 11341   002180  0E00               	movlw	0
 11342   002182  6E21               	movwf	___flmul@aexp^0,c
 11343   002184  AE25               	btfss	(___flmul@grs+3)^0,7,c
 11344   002186  EFC7  F010         	goto	u7221
 11345   00218A  EFC9  F010         	goto	u7220
 11346   00218E                     u7221:
 11347   00218E  EFED  F010         	goto	l1171
 11348   002192                     u7220:
 11349   002192  0EFF               	movlw	255
 11350   002194  1422               	andwf	___flmul@grs^0,w,c
 11351   002196  6E1C               	movwf	??___flmul^0,c
 11352   002198  0EFF               	movlw	255
 11353   00219A  1423               	andwf	(___flmul@grs+1)^0,w,c
 11354   00219C  6E1D               	movwf	(??___flmul+1)^0,c
 11355   00219E  0EFF               	movlw	255
 11356   0021A0  1424               	andwf	(___flmul@grs+2)^0,w,c
 11357   0021A2  6E1E               	movwf	(??___flmul+2)^0,c
 11358   0021A4  0E7F               	movlw	127
 11359   0021A6  1425               	andwf	(___flmul@grs+3)^0,w,c
 11360   0021A8  6E1F               	movwf	(??___flmul+3)^0,c
 11361   0021AA  501C               	movf	??___flmul^0,w,c
 11362   0021AC  101D               	iorwf	(??___flmul+1)^0,w,c
 11363   0021AE  101E               	iorwf	(??___flmul+2)^0,w,c
 11364   0021B0  101F               	iorwf	(??___flmul+3)^0,w,c
 11365   0021B2  B4D8               	btfsc	status,2,c
 11366   0021B4  EFDE  F010         	goto	u7231
 11367   0021B8  EFE0  F010         	goto	u7230
 11368   0021BC                     u7231:
 11369   0021BC  EFE4  F010         	goto	l1172
 11370   0021C0                     u7230:
 11371   0021C0                     l6671:
 11372   0021C0  0E01               	movlw	1
 11373   0021C2  6E21               	movwf	___flmul@aexp^0,c
 11374   0021C4  EFED  F010         	goto	l1171
 11375   0021C8                     l1172:
 11376   0021C8  A027               	btfss	___flmul@prod^0,0,c
 11377   0021CA  EFE9  F010         	goto	u7241
 11378   0021CE  EFEB  F010         	goto	u7240
 11379   0021D2                     u7241:
 11380   0021D2  EFED  F010         	goto	l1171
 11381   0021D6                     u7240:
 11382   0021D6  EFE0  F010         	goto	l6671
 11383   0021DA                     l1171:
 11384   0021DA  5021               	movf	___flmul@aexp^0,w,c
 11385   0021DC  B4D8               	btfsc	status,2,c
 11386   0021DE  EFF3  F010         	goto	u7251
 11387   0021E2  EFF5  F010         	goto	u7250
 11388   0021E6                     u7251:
 11389   0021E6  EF19  F011         	goto	l6683
 11390   0021EA                     u7250:
 11391   0021EA  0E01               	movlw	1
 11392   0021EC  2627               	addwf	___flmul@prod^0,f,c
 11393   0021EE  0E00               	movlw	0
 11394   0021F0  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11395   0021F2  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11396   0021F4  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11397   0021F6  A02A               	btfss	(___flmul@prod+3)^0,0,c
 11398   0021F8  EF00  F011         	goto	u7261
 11399   0021FC  EF02  F011         	goto	u7260
 11400   002200                     u7261:
 11401   002200  EF19  F011         	goto	l6683
 11402   002204                     u7260:
 11403   002204  C027  F01C         	movff	___flmul@prod,??___flmul
 11404   002208  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
 11405   00220C  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
 11406   002210  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
 11407   002214  341F               	rlcf	(??___flmul+3)^0,w,c
 11408   002216  321F               	rrcf	(??___flmul+3)^0,f,c
 11409   002218  321E               	rrcf	(??___flmul+2)^0,f,c
 11410   00221A  321D               	rrcf	(??___flmul+1)^0,f,c
 11411   00221C  321C               	rrcf	??___flmul^0,f,c
 11412   00221E  C01C  F027         	movff	??___flmul,___flmul@prod
 11413   002222  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
 11414   002226  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
 11415   00222A  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
 11416   00222E  4A2B               	infsnz	___flmul@temp^0,f,c
 11417   002230  2A2C               	incf	(___flmul@temp+1)^0,f,c
 11418   002232                     l6683:
 11419   002232  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 11420   002234  EF24  F011         	goto	u7271
 11421   002238  502C               	movf	(___flmul@temp+1)^0,w,c
 11422   00223A  E108               	bnz	u7270
 11423   00223C  282B               	incf	___flmul@temp^0,w,c
 11424   00223E  A0D8               	btfss	status,0,c
 11425   002240  EF24  F011         	goto	u7271
 11426   002244  EF26  F011         	goto	u7270
 11427   002248                     u7271:
 11428   002248  EF30  F011         	goto	l6687
 11429   00224C                     u7270:
 11430   00224C  0E00               	movlw	0
 11431   00224E  6E27               	movwf	___flmul@prod^0,c
 11432   002250  0E00               	movlw	0
 11433   002252  6E28               	movwf	(___flmul@prod+1)^0,c
 11434   002254  0E80               	movlw	128
 11435   002256  6E29               	movwf	(___flmul@prod+2)^0,c
 11436   002258  0E7F               	movlw	127
 11437   00225A  6E2A               	movwf	(___flmul@prod+3)^0,c
 11438   00225C  EF5E  F011         	goto	l6699
 11439   002260                     l6687:
 11440   002260  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 11441   002262  EF3D  F011         	goto	u7280
 11442   002266  502C               	movf	(___flmul@temp+1)^0,w,c
 11443   002268  E106               	bnz	u7281
 11444   00226A  042B               	decf	___flmul@temp^0,w,c
 11445   00226C  B0D8               	btfsc	status,0,c
 11446   00226E  EF3B  F011         	goto	u7281
 11447   002272  EF3D  F011         	goto	u7280
 11448   002276                     u7281:
 11449   002276  EF49  F011         	goto	l1179
 11450   00227A                     u7280:
 11451   00227A  0E00               	movlw	0
 11452   00227C  6E27               	movwf	___flmul@prod^0,c
 11453   00227E  0E00               	movlw	0
 11454   002280  6E28               	movwf	(___flmul@prod+1)^0,c
 11455   002282  0E00               	movlw	0
 11456   002284  6E29               	movwf	(___flmul@prod+2)^0,c
 11457   002286  0E00               	movlw	0
 11458   002288  6E2A               	movwf	(___flmul@prod+3)^0,c
 11459   00228A  0E00               	movlw	0
 11460   00228C  6E20               	movwf	___flmul@sign^0,c
 11461   00228E  EF5E  F011         	goto	l6699
 11462   002292                     l1179:
 11463   002292  C02B  F026         	movff	___flmul@temp,___flmul@bexp
 11464   002296  0EFF               	movlw	255
 11465   002298  1627               	andwf	___flmul@prod^0,f,c
 11466   00229A  0EFF               	movlw	255
 11467   00229C  1628               	andwf	(___flmul@prod+1)^0,f,c
 11468   00229E  0E7F               	movlw	127
 11469   0022A0  1629               	andwf	(___flmul@prod+2)^0,f,c
 11470   0022A2  0E00               	movlw	0
 11471   0022A4  162A               	andwf	(___flmul@prod+3)^0,f,c
 11472   0022A6  A026               	btfss	___flmul@bexp^0,0,c
 11473   0022A8  EF58  F011         	goto	u7291
 11474   0022AC  EF5A  F011         	goto	u7290
 11475   0022B0                     u7291:
 11476   0022B0  EF5B  F011         	goto	l6697
 11477   0022B4                     u7290:
 11478   0022B4  8E29               	bsf	(___flmul@prod+2)^0,7,c
 11479   0022B6                     l6697:
 11480   0022B6  90D8               	bcf	status,0,c
 11481   0022B8  3026               	rrcf	___flmul@bexp^0,w,c
 11482   0022BA  6E2A               	movwf	(___flmul@prod+3)^0,c
 11483   0022BC                     l6699:
 11484   0022BC  5020               	movf	___flmul@sign^0,w,c
 11485   0022BE  122A               	iorwf	(___flmul@prod+3)^0,f,c
 11486   0022C0  C027  F014         	movff	___flmul@prod,?___flmul
 11487   0022C4  C028  F015         	movff	___flmul@prod+1,?___flmul+1
 11488   0022C8  C029  F016         	movff	___flmul@prod+2,?___flmul+2
 11489   0022CC  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
 11490   0022D0                     l1166:
 11491   0022D0  0012               	return		;funcret
 11492   0022D2                     __end_of___flmul:
 11493                           	callstack 0
 11494                           
 11495 ;; *************** function ___flge *****************
 11496 ;; Defined at:
 11497 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
 11498 ;; Parameters:    Size  Location     Type
 11499 ;;  ff1             4   44[COMRAM] unsigned char 
 11500 ;;  ff2             4   48[COMRAM] unsigned char 
 11501 ;; Auto vars:     Size  Location     Type
 11502 ;;		None
 11503 ;; Return value:  Size  Location     Type
 11504 ;;		None               void
 11505 ;; Registers used:
 11506 ;;		wreg, status,2, status,0
 11507 ;; Tracked objects:
 11508 ;;		On entry : 0/0
 11509 ;;		On exit  : 0/0
 11510 ;;		Unchanged: 0/0
 11511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11512 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11514 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11515 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11516 ;;Total ram usage:       12 bytes
 11517 ;; Hardware stack levels used: 1
 11518 ;; Hardware stack levels required when called: 1
 11519 ;; This function calls:
 11520 ;;		Nothing
 11521 ;; This function is called by:
 11522 ;;		_efgtoa
 11523 ;; This function uses a non-reentrant model
 11524 ;;
 11525                           
 11526                           	psect	text40
 11527   003DF2                     __ptext40:
 11528                           	callstack 0
 11529   003DF2                     ___flge:
 11530                           	callstack 24
 11531   003DF2  0E00               	movlw	0
 11532   003DF4  142D               	andwf	___flge@ff1^0,w,c
 11533   003DF6  6E35               	movwf	??___flge^0,c
 11534   003DF8  0E00               	movlw	0
 11535   003DFA  142E               	andwf	(___flge@ff1+1)^0,w,c
 11536   003DFC  6E36               	movwf	(??___flge+1)^0,c
 11537   003DFE  0E80               	movlw	128
 11538   003E00  142F               	andwf	(___flge@ff1+2)^0,w,c
 11539   003E02  6E37               	movwf	(??___flge+2)^0,c
 11540   003E04  0E7F               	movlw	127
 11541   003E06  1430               	andwf	(___flge@ff1+3)^0,w,c
 11542   003E08  6E38               	movwf	(??___flge+3)^0,c
 11543   003E0A  5035               	movf	??___flge^0,w,c
 11544   003E0C  1036               	iorwf	(??___flge+1)^0,w,c
 11545   003E0E  1037               	iorwf	(??___flge+2)^0,w,c
 11546   003E10  1038               	iorwf	(??___flge+3)^0,w,c
 11547   003E12  A4D8               	btfss	status,2,c
 11548   003E14  EF0E  F01F         	goto	u7451
 11549   003E18  EF10  F01F         	goto	u7450
 11550   003E1C                     u7451:
 11551   003E1C  EF18  F01F         	goto	l6811
 11552   003E20                     u7450:
 11553   003E20  0E00               	movlw	0
 11554   003E22  6E2D               	movwf	___flge@ff1^0,c
 11555   003E24  0E00               	movlw	0
 11556   003E26  6E2E               	movwf	(___flge@ff1+1)^0,c
 11557   003E28  0E00               	movlw	0
 11558   003E2A  6E2F               	movwf	(___flge@ff1+2)^0,c
 11559   003E2C  0E00               	movlw	0
 11560   003E2E  6E30               	movwf	(___flge@ff1+3)^0,c
 11561   003E30                     l6811:
 11562   003E30  0E00               	movlw	0
 11563   003E32  1431               	andwf	___flge@ff2^0,w,c
 11564   003E34  6E35               	movwf	??___flge^0,c
 11565   003E36  0E00               	movlw	0
 11566   003E38  1432               	andwf	(___flge@ff2+1)^0,w,c
 11567   003E3A  6E36               	movwf	(??___flge+1)^0,c
 11568   003E3C  0E80               	movlw	128
 11569   003E3E  1433               	andwf	(___flge@ff2+2)^0,w,c
 11570   003E40  6E37               	movwf	(??___flge+2)^0,c
 11571   003E42  0E7F               	movlw	127
 11572   003E44  1434               	andwf	(___flge@ff2+3)^0,w,c
 11573   003E46  6E38               	movwf	(??___flge+3)^0,c
 11574   003E48  5035               	movf	??___flge^0,w,c
 11575   003E4A  1036               	iorwf	(??___flge+1)^0,w,c
 11576   003E4C  1037               	iorwf	(??___flge+2)^0,w,c
 11577   003E4E  1038               	iorwf	(??___flge+3)^0,w,c
 11578   003E50  A4D8               	btfss	status,2,c
 11579   003E52  EF2D  F01F         	goto	u7461
 11580   003E56  EF2F  F01F         	goto	u7460
 11581   003E5A                     u7461:
 11582   003E5A  EF37  F01F         	goto	l6815
 11583   003E5E                     u7460:
 11584   003E5E  0E00               	movlw	0
 11585   003E60  6E31               	movwf	___flge@ff2^0,c
 11586   003E62  0E00               	movlw	0
 11587   003E64  6E32               	movwf	(___flge@ff2+1)^0,c
 11588   003E66  0E00               	movlw	0
 11589   003E68  6E33               	movwf	(___flge@ff2+2)^0,c
 11590   003E6A  0E00               	movlw	0
 11591   003E6C  6E34               	movwf	(___flge@ff2+3)^0,c
 11592   003E6E                     l6815:
 11593   003E6E  AE30               	btfss	(___flge@ff1+3)^0,7,c
 11594   003E70  EF3C  F01F         	goto	u7471
 11595   003E74  EF3E  F01F         	goto	u7470
 11596   003E78                     u7471:
 11597   003E78  EF47  F01F         	goto	l6819
 11598   003E7C                     u7470:
 11599   003E7C  6C2D               	negf	___flge@ff1^0,c
 11600   003E7E  1E2E               	comf	(___flge@ff1+1)^0,f,c
 11601   003E80  B0D8               	btfsc	status,0,c
 11602   003E82  2A2E               	incf	(___flge@ff1+1)^0,f,c
 11603   003E84  1E2F               	comf	(___flge@ff1+2)^0,f,c
 11604   003E86  B0D8               	btfsc	status,0,c
 11605   003E88  2A2F               	incf	(___flge@ff1+2)^0,f,c
 11606   003E8A  0E80               	movlw	128
 11607   003E8C  5630               	subfwb	(___flge@ff1+3)^0,f,c
 11608   003E8E                     l6819:
 11609   003E8E  AE34               	btfss	(___flge@ff2+3)^0,7,c
 11610   003E90  EF4C  F01F         	goto	u7481
 11611   003E94  EF4E  F01F         	goto	u7480
 11612   003E98                     u7481:
 11613   003E98  EF57  F01F         	goto	l813
 11614   003E9C                     u7480:
 11615   003E9C  6C31               	negf	___flge@ff2^0,c
 11616   003E9E  1E32               	comf	(___flge@ff2+1)^0,f,c
 11617   003EA0  B0D8               	btfsc	status,0,c
 11618   003EA2  2A32               	incf	(___flge@ff2+1)^0,f,c
 11619   003EA4  1E33               	comf	(___flge@ff2+2)^0,f,c
 11620   003EA6  B0D8               	btfsc	status,0,c
 11621   003EA8  2A33               	incf	(___flge@ff2+2)^0,f,c
 11622   003EAA  0E80               	movlw	128
 11623   003EAC  5634               	subfwb	(___flge@ff2+3)^0,f,c
 11624   003EAE                     l813:
 11625   003EAE  0E00               	movlw	0
 11626   003EB0  1A2D               	xorwf	___flge@ff1^0,f,c
 11627   003EB2  0E00               	movlw	0
 11628   003EB4  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
 11629   003EB6  0E00               	movlw	0
 11630   003EB8  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
 11631   003EBA  0E80               	movlw	128
 11632   003EBC  1A30               	xorwf	(___flge@ff1+3)^0,f,c
 11633   003EBE  0E00               	movlw	0
 11634   003EC0  1A31               	xorwf	___flge@ff2^0,f,c
 11635   003EC2  0E00               	movlw	0
 11636   003EC4  1A32               	xorwf	(___flge@ff2+1)^0,f,c
 11637   003EC6  0E00               	movlw	0
 11638   003EC8  1A33               	xorwf	(___flge@ff2+2)^0,f,c
 11639   003ECA  0E80               	movlw	128
 11640   003ECC  1A34               	xorwf	(___flge@ff2+3)^0,f,c
 11641   003ECE  5031               	movf	___flge@ff2^0,w,c
 11642   003ED0  5C2D               	subwf	___flge@ff1^0,w,c
 11643   003ED2  5032               	movf	(___flge@ff2+1)^0,w,c
 11644   003ED4  582E               	subwfb	(___flge@ff1+1)^0,w,c
 11645   003ED6  5033               	movf	(___flge@ff2+2)^0,w,c
 11646   003ED8  582F               	subwfb	(___flge@ff1+2)^0,w,c
 11647   003EDA  5034               	movf	(___flge@ff2+3)^0,w,c
 11648   003EDC  5830               	subwfb	(___flge@ff1+3)^0,w,c
 11649   003EDE  B0D8               	btfsc	status,0,c
 11650   003EE0  EF74  F01F         	goto	u7491
 11651   003EE4  EF76  F01F         	goto	u7490
 11652   003EE8                     u7491:
 11653   003EE8  EF79  F01F         	goto	l6825
 11654   003EEC                     u7490:
 11655   003EEC  90D8               	bcf	status,0,c
 11656   003EEE  EF7A  F01F         	goto	l818
 11657   003EF2                     l6825:
 11658   003EF2  80D8               	bsf	status,0,c
 11659   003EF4                     l818:
 11660   003EF4  0012               	return		;funcret
 11661   003EF6                     __end_of___flge:
 11662                           	callstack 0
 11663                           
 11664 ;; *************** function ___fleq *****************
 11665 ;; Defined at:
 11666 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
 11667 ;; Parameters:    Size  Location     Type
 11668 ;;  ff1             4    5[COMRAM] unsigned char 
 11669 ;;  ff2             4    9[COMRAM] unsigned char 
 11670 ;; Auto vars:     Size  Location     Type
 11671 ;;		None
 11672 ;; Return value:  Size  Location     Type
 11673 ;;		None               void
 11674 ;; Registers used:
 11675 ;;		wreg, status,2, status,0
 11676 ;; Tracked objects:
 11677 ;;		On entry : 0/0
 11678 ;;		On exit  : 0/0
 11679 ;;		Unchanged: 0/0
 11680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11681 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11684 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11685 ;;Total ram usage:       12 bytes
 11686 ;; Hardware stack levels used: 1
 11687 ;; Hardware stack levels required when called: 1
 11688 ;; This function calls:
 11689 ;;		Nothing
 11690 ;; This function is called by:
 11691 ;;		_efgtoa
 11692 ;; This function uses a non-reentrant model
 11693 ;;
 11694                           
 11695                           	psect	text41
 11696   004626                     __ptext41:
 11697                           	callstack 0
 11698   004626                     ___fleq:
 11699                           	callstack 24
 11700   004626  0E00               	movlw	0
 11701   004628  1406               	andwf	___fleq@ff1^0,w,c
 11702   00462A  6E0E               	movwf	??___fleq^0,c
 11703   00462C  0E00               	movlw	0
 11704   00462E  1407               	andwf	(___fleq@ff1+1)^0,w,c
 11705   004630  6E0F               	movwf	(??___fleq+1)^0,c
 11706   004632  0E80               	movlw	128
 11707   004634  1408               	andwf	(___fleq@ff1+2)^0,w,c
 11708   004636  6E10               	movwf	(??___fleq+2)^0,c
 11709   004638  0E7F               	movlw	127
 11710   00463A  1409               	andwf	(___fleq@ff1+3)^0,w,c
 11711   00463C  6E11               	movwf	(??___fleq+3)^0,c
 11712   00463E  500E               	movf	??___fleq^0,w,c
 11713   004640  100F               	iorwf	(??___fleq+1)^0,w,c
 11714   004642  1010               	iorwf	(??___fleq+2)^0,w,c
 11715   004644  1011               	iorwf	(??___fleq+3)^0,w,c
 11716   004646  A4D8               	btfss	status,2,c
 11717   004648  EF28  F023         	goto	u7421
 11718   00464C  EF2A  F023         	goto	u7420
 11719   004650                     u7421:
 11720   004650  EF32  F023         	goto	l6795
 11721   004654                     u7420:
 11722   004654  0E00               	movlw	0
 11723   004656  6E06               	movwf	___fleq@ff1^0,c
 11724   004658  0E00               	movlw	0
 11725   00465A  6E07               	movwf	(___fleq@ff1+1)^0,c
 11726   00465C  0E00               	movlw	0
 11727   00465E  6E08               	movwf	(___fleq@ff1+2)^0,c
 11728   004660  0E00               	movlw	0
 11729   004662  6E09               	movwf	(___fleq@ff1+3)^0,c
 11730   004664                     l6795:
 11731   004664  0E00               	movlw	0
 11732   004666  140A               	andwf	___fleq@ff2^0,w,c
 11733   004668  6E0E               	movwf	??___fleq^0,c
 11734   00466A  0E00               	movlw	0
 11735   00466C  140B               	andwf	(___fleq@ff2+1)^0,w,c
 11736   00466E  6E0F               	movwf	(??___fleq+1)^0,c
 11737   004670  0E80               	movlw	128
 11738   004672  140C               	andwf	(___fleq@ff2+2)^0,w,c
 11739   004674  6E10               	movwf	(??___fleq+2)^0,c
 11740   004676  0E7F               	movlw	127
 11741   004678  140D               	andwf	(___fleq@ff2+3)^0,w,c
 11742   00467A  6E11               	movwf	(??___fleq+3)^0,c
 11743   00467C  500E               	movf	??___fleq^0,w,c
 11744   00467E  100F               	iorwf	(??___fleq+1)^0,w,c
 11745   004680  1010               	iorwf	(??___fleq+2)^0,w,c
 11746   004682  1011               	iorwf	(??___fleq+3)^0,w,c
 11747   004684  A4D8               	btfss	status,2,c
 11748   004686  EF47  F023         	goto	u7431
 11749   00468A  EF49  F023         	goto	u7430
 11750   00468E                     u7431:
 11751   00468E  EF51  F023         	goto	l6799
 11752   004692                     u7430:
 11753   004692  0E00               	movlw	0
 11754   004694  6E0A               	movwf	___fleq@ff2^0,c
 11755   004696  0E00               	movlw	0
 11756   004698  6E0B               	movwf	(___fleq@ff2+1)^0,c
 11757   00469A  0E00               	movlw	0
 11758   00469C  6E0C               	movwf	(___fleq@ff2+2)^0,c
 11759   00469E  0E00               	movlw	0
 11760   0046A0  6E0D               	movwf	(___fleq@ff2+3)^0,c
 11761   0046A2                     l6799:
 11762   0046A2  500A               	movf	___fleq@ff2^0,w,c
 11763   0046A4  1806               	xorwf	___fleq@ff1^0,w,c
 11764   0046A6  E10F               	bnz	u7440
 11765   0046A8  500B               	movf	(___fleq@ff2+1)^0,w,c
 11766   0046AA  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 11767   0046AC  E10C               	bnz	u7440
 11768   0046AE  500C               	movf	(___fleq@ff2+2)^0,w,c
 11769   0046B0  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 11770   0046B2  E109               	bnz	u7440
 11771   0046B4  500D               	movf	(___fleq@ff2+3)^0,w,c
 11772   0046B6  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 11773   0046B8  B4D8               	btfsc	status,2,c
 11774   0046BA  EF61  F023         	goto	u7441
 11775   0046BE  EF63  F023         	goto	u7440
 11776   0046C2                     u7441:
 11777   0046C2  EF66  F023         	goto	l6803
 11778   0046C6                     u7440:
 11779   0046C6  90D8               	bcf	status,0,c
 11780   0046C8  EF67  F023         	goto	l807
 11781   0046CC                     l6803:
 11782   0046CC  80D8               	bsf	status,0,c
 11783   0046CE                     l807:
 11784   0046CE  0012               	return		;funcret
 11785   0046D0                     __end_of___fleq:
 11786                           	callstack 0
 11787                           
 11788 ;; *************** function ___fldiv *****************
 11789 ;; Defined at:
 11790 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
 11791 ;; Parameters:    Size  Location     Type
 11792 ;;  b               4   44[COMRAM] unsigned char 
 11793 ;;  a               4   48[COMRAM] unsigned char 
 11794 ;; Auto vars:     Size  Location     Type
 11795 ;;  grs             4   63[COMRAM] unsigned long 
 11796 ;;  rem             4   56[COMRAM] unsigned long 
 11797 ;;  new_exp         2   61[COMRAM] short 
 11798 ;;  aexp            1   68[COMRAM] unsigned char 
 11799 ;;  bexp            1   67[COMRAM] unsigned char 
 11800 ;;  sign            1   60[COMRAM] unsigned char 
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  4   44[COMRAM] unsigned char 
 11803 ;; Registers used:
 11804 ;;		wreg, status,2, status,0
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11810 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11811 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11812 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11813 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11814 ;;Total ram usage:       25 bytes
 11815 ;; Hardware stack levels used: 1
 11816 ;; Hardware stack levels required when called: 1
 11817 ;; This function calls:
 11818 ;;		Nothing
 11819 ;; This function is called by:
 11820 ;;		_runDAC
 11821 ;;		_runADC
 11822 ;;		_efgtoa
 11823 ;; This function uses a non-reentrant model
 11824 ;;
 11825                           
 11826                           	psect	text42
 11827   0022D2                     __ptext42:
 11828                           	callstack 0
 11829   0022D2                     ___fldiv:
 11830                           	callstack 24
 11831   0022D2  5030               	movf	(___fldiv@b+3)^0,w,c
 11832   0022D4  0B80               	andlw	128
 11833   0022D6  6E3D               	movwf	___fldiv@sign^0,c
 11834   0022D8  5030               	movf	(___fldiv@b+3)^0,w,c
 11835   0022DA  2430               	addwf	(___fldiv@b+3)^0,w,c
 11836   0022DC  6E44               	movwf	___fldiv@bexp^0,c
 11837   0022DE  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 11838   0022E0  EF74  F011         	goto	u6881
 11839   0022E4  EF76  F011         	goto	u6880
 11840   0022E8                     u6881:
 11841   0022E8  EF77  F011         	goto	l6443
 11842   0022EC                     u6880:
 11843   0022EC  8044               	bsf	___fldiv@bexp^0,0,c
 11844   0022EE                     l6443:
 11845   0022EE  5044               	movf	___fldiv@bexp^0,w,c
 11846   0022F0  B4D8               	btfsc	status,2,c
 11847   0022F2  EF7D  F011         	goto	u6891
 11848   0022F6  EF7F  F011         	goto	u6890
 11849   0022FA                     u6891:
 11850   0022FA  EF94  F011         	goto	l6453
 11851   0022FE                     u6890:
 11852   0022FE  2844               	incf	___fldiv@bexp^0,w,c
 11853   002300  A4D8               	btfss	status,2,c
 11854   002302  EF85  F011         	goto	u6901
 11855   002306  EF87  F011         	goto	u6900
 11856   00230A                     u6901:
 11857   00230A  EF8F  F011         	goto	l6449
 11858   00230E                     u6900:
 11859   00230E  0E00               	movlw	0
 11860   002310  6E2D               	movwf	___fldiv@b^0,c
 11861   002312  0E00               	movlw	0
 11862   002314  6E2E               	movwf	(___fldiv@b+1)^0,c
 11863   002316  0E00               	movlw	0
 11864   002318  6E2F               	movwf	(___fldiv@b+2)^0,c
 11865   00231A  0E00               	movlw	0
 11866   00231C  6E30               	movwf	(___fldiv@b+3)^0,c
 11867   00231E                     l6449:
 11868   00231E  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 11869   002320  0E00               	movlw	0
 11870   002322  6E30               	movwf	(___fldiv@b+3)^0,c
 11871   002324  EF9C  F011         	goto	l6455
 11872   002328                     l6453:
 11873   002328  0E00               	movlw	0
 11874   00232A  6E2D               	movwf	___fldiv@b^0,c
 11875   00232C  0E00               	movlw	0
 11876   00232E  6E2E               	movwf	(___fldiv@b+1)^0,c
 11877   002330  0E00               	movlw	0
 11878   002332  6E2F               	movwf	(___fldiv@b+2)^0,c
 11879   002334  0E00               	movlw	0
 11880   002336  6E30               	movwf	(___fldiv@b+3)^0,c
 11881   002338                     l6455:
 11882   002338  5034               	movf	(___fldiv@a+3)^0,w,c
 11883   00233A  0B80               	andlw	128
 11884   00233C  1A3D               	xorwf	___fldiv@sign^0,f,c
 11885   00233E  5034               	movf	(___fldiv@a+3)^0,w,c
 11886   002340  2434               	addwf	(___fldiv@a+3)^0,w,c
 11887   002342  6E45               	movwf	___fldiv@aexp^0,c
 11888   002344  AE33               	btfss	(___fldiv@a+2)^0,7,c
 11889   002346  EFA7  F011         	goto	u6911
 11890   00234A  EFA9  F011         	goto	u6910
 11891   00234E                     u6911:
 11892   00234E  EFAA  F011         	goto	l6463
 11893   002352                     u6910:
 11894   002352  8045               	bsf	___fldiv@aexp^0,0,c
 11895   002354                     l6463:
 11896   002354  5045               	movf	___fldiv@aexp^0,w,c
 11897   002356  B4D8               	btfsc	status,2,c
 11898   002358  EFB0  F011         	goto	u6921
 11899   00235C  EFB2  F011         	goto	u6920
 11900   002360                     u6921:
 11901   002360  EFC7  F011         	goto	l6473
 11902   002364                     u6920:
 11903   002364  2845               	incf	___fldiv@aexp^0,w,c
 11904   002366  A4D8               	btfss	status,2,c
 11905   002368  EFB8  F011         	goto	u6931
 11906   00236C  EFBA  F011         	goto	u6930
 11907   002370                     u6931:
 11908   002370  EFC2  F011         	goto	l6469
 11909   002374                     u6930:
 11910   002374  0E00               	movlw	0
 11911   002376  6E31               	movwf	___fldiv@a^0,c
 11912   002378  0E00               	movlw	0
 11913   00237A  6E32               	movwf	(___fldiv@a+1)^0,c
 11914   00237C  0E00               	movlw	0
 11915   00237E  6E33               	movwf	(___fldiv@a+2)^0,c
 11916   002380  0E00               	movlw	0
 11917   002382  6E34               	movwf	(___fldiv@a+3)^0,c
 11918   002384                     l6469:
 11919   002384  8E33               	bsf	(___fldiv@a+2)^0,7,c
 11920   002386  0E00               	movlw	0
 11921   002388  6E34               	movwf	(___fldiv@a+3)^0,c
 11922   00238A  EFCF  F011         	goto	l6475
 11923   00238E                     l6473:
 11924   00238E  0E00               	movlw	0
 11925   002390  6E31               	movwf	___fldiv@a^0,c
 11926   002392  0E00               	movlw	0
 11927   002394  6E32               	movwf	(___fldiv@a+1)^0,c
 11928   002396  0E00               	movlw	0
 11929   002398  6E33               	movwf	(___fldiv@a+2)^0,c
 11930   00239A  0E00               	movlw	0
 11931   00239C  6E34               	movwf	(___fldiv@a+3)^0,c
 11932   00239E                     l6475:
 11933   00239E  5031               	movf	___fldiv@a^0,w,c
 11934   0023A0  1032               	iorwf	(___fldiv@a+1)^0,w,c
 11935   0023A2  1033               	iorwf	(___fldiv@a+2)^0,w,c
 11936   0023A4  1034               	iorwf	(___fldiv@a+3)^0,w,c
 11937   0023A6  A4D8               	btfss	status,2,c
 11938   0023A8  EFD8  F011         	goto	u6941
 11939   0023AC  EFDA  F011         	goto	u6940
 11940   0023B0                     u6941:
 11941   0023B0  EFF2  F011         	goto	l6487
 11942   0023B4                     u6940:
 11943   0023B4  0E00               	movlw	0
 11944   0023B6  6E2D               	movwf	___fldiv@b^0,c
 11945   0023B8  0E00               	movlw	0
 11946   0023BA  6E2E               	movwf	(___fldiv@b+1)^0,c
 11947   0023BC  0E00               	movlw	0
 11948   0023BE  6E2F               	movwf	(___fldiv@b+2)^0,c
 11949   0023C0  0E00               	movlw	0
 11950   0023C2  6E30               	movwf	(___fldiv@b+3)^0,c
 11951   0023C4  0E80               	movlw	128
 11952   0023C6  122F               	iorwf	(___fldiv@b+2)^0,f,c
 11953   0023C8  0E7F               	movlw	127
 11954   0023CA  1230               	iorwf	(___fldiv@b+3)^0,f,c
 11955   0023CC                     l6481:
 11956   0023CC  503D               	movf	___fldiv@sign^0,w,c
 11957   0023CE  1230               	iorwf	(___fldiv@b+3)^0,f,c
 11958   0023D0  C02D  F02D         	movff	___fldiv@b,?___fldiv
 11959   0023D4  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
 11960   0023D8  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
 11961   0023DC  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
 11962   0023E0  EF35  F013         	goto	l1130
 11963   0023E4                     l6487:
 11964   0023E4  5044               	movf	___fldiv@bexp^0,w,c
 11965   0023E6  A4D8               	btfss	status,2,c
 11966   0023E8  EFF8  F011         	goto	u6951
 11967   0023EC  EFFA  F011         	goto	u6950
 11968   0023F0                     u6951:
 11969   0023F0  EF04  F012         	goto	l6495
 11970   0023F4                     u6950:
 11971   0023F4  0E00               	movlw	0
 11972   0023F6  6E2D               	movwf	?___fldiv^0,c
 11973   0023F8  0E00               	movlw	0
 11974   0023FA  6E2E               	movwf	(?___fldiv+1)^0,c
 11975   0023FC  0E00               	movlw	0
 11976   0023FE  6E2F               	movwf	(?___fldiv+2)^0,c
 11977   002400  0E00               	movlw	0
 11978   002402  6E30               	movwf	(?___fldiv+3)^0,c
 11979   002404  EF35  F013         	goto	l1130
 11980   002408                     l6495:
 11981   002408  5045               	movf	___fldiv@aexp^0,w,c
 11982   00240A  C044  F035         	movff	___fldiv@bexp,??___fldiv
 11983   00240E  6A36               	clrf	(??___fldiv+1)^0,c
 11984   002410  5E35               	subwf	??___fldiv^0,f,c
 11985   002412  0E00               	movlw	0
 11986   002414  5A36               	subwfb	(??___fldiv+1)^0,f,c
 11987   002416  0E7F               	movlw	127
 11988   002418  2435               	addwf	??___fldiv^0,w,c
 11989   00241A  6E3E               	movwf	___fldiv@new_exp^0,c
 11990   00241C  0E00               	movlw	0
 11991   00241E  2036               	addwfc	(??___fldiv+1)^0,w,c
 11992   002420  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 11993   002422  C02D  F039         	movff	___fldiv@b,___fldiv@rem
 11994   002426  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
 11995   00242A  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
 11996   00242E  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
 11997   002432  0E00               	movlw	0
 11998   002434  6E2D               	movwf	___fldiv@b^0,c
 11999   002436  0E00               	movlw	0
 12000   002438  6E2E               	movwf	(___fldiv@b+1)^0,c
 12001   00243A  0E00               	movlw	0
 12002   00243C  6E2F               	movwf	(___fldiv@b+2)^0,c
 12003   00243E  0E00               	movlw	0
 12004   002440  6E30               	movwf	(___fldiv@b+3)^0,c
 12005   002442  0E00               	movlw	0
 12006   002444  6E40               	movwf	___fldiv@grs^0,c
 12007   002446  0E00               	movlw	0
 12008   002448  6E41               	movwf	(___fldiv@grs+1)^0,c
 12009   00244A  0E00               	movlw	0
 12010   00244C  6E42               	movwf	(___fldiv@grs+2)^0,c
 12011   00244E  0E00               	movlw	0
 12012   002450  6E43               	movwf	(___fldiv@grs+3)^0,c
 12013   002452  0E00               	movlw	0
 12014   002454  6E45               	movwf	___fldiv@aexp^0,c
 12015   002456  EF65  F012         	goto	l1132
 12016   00245A                     l6505:
 12017   00245A  5045               	movf	___fldiv@aexp^0,w,c
 12018   00245C  B4D8               	btfsc	status,2,c
 12019   00245E  EF33  F012         	goto	u6961
 12020   002462  EF35  F012         	goto	u6960
 12021   002466                     u6961:
 12022   002466  EF4C  F012         	goto	l6513
 12023   00246A                     u6960:
 12024   00246A  90D8               	bcf	status,0,c
 12025   00246C  3639               	rlcf	___fldiv@rem^0,f,c
 12026   00246E  363A               	rlcf	(___fldiv@rem+1)^0,f,c
 12027   002470  363B               	rlcf	(___fldiv@rem+2)^0,f,c
 12028   002472  363C               	rlcf	(___fldiv@rem+3)^0,f,c
 12029   002474  90D8               	bcf	status,0,c
 12030   002476  362D               	rlcf	___fldiv@b^0,f,c
 12031   002478  362E               	rlcf	(___fldiv@b+1)^0,f,c
 12032   00247A  362F               	rlcf	(___fldiv@b+2)^0,f,c
 12033   00247C  3630               	rlcf	(___fldiv@b+3)^0,f,c
 12034   00247E  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 12035   002480  EF44  F012         	goto	u6971
 12036   002484  EF46  F012         	goto	u6970
 12037   002488                     u6971:
 12038   002488  EF47  F012         	goto	l1135
 12039   00248C                     u6970:
 12040   00248C  802D               	bsf	___fldiv@b^0,0,c
 12041   00248E                     l1135:
 12042   00248E  90D8               	bcf	status,0,c
 12043   002490  3640               	rlcf	___fldiv@grs^0,f,c
 12044   002492  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 12045   002494  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 12046   002496  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 12047   002498                     l6513:
 12048   002498  5031               	movf	___fldiv@a^0,w,c
 12049   00249A  5C39               	subwf	___fldiv@rem^0,w,c
 12050   00249C  5032               	movf	(___fldiv@a+1)^0,w,c
 12051   00249E  583A               	subwfb	(___fldiv@rem+1)^0,w,c
 12052   0024A0  5033               	movf	(___fldiv@a+2)^0,w,c
 12053   0024A2  583B               	subwfb	(___fldiv@rem+2)^0,w,c
 12054   0024A4  5034               	movf	(___fldiv@a+3)^0,w,c
 12055   0024A6  583C               	subwfb	(___fldiv@rem+3)^0,w,c
 12056   0024A8  A0D8               	btfss	status,0,c
 12057   0024AA  EF59  F012         	goto	u6981
 12058   0024AE  EF5B  F012         	goto	u6980
 12059   0024B2                     u6981:
 12060   0024B2  EF64  F012         	goto	l6519
 12061   0024B6                     u6980:
 12062   0024B6  8C43               	bsf	(___fldiv@grs+3)^0,6,c
 12063   0024B8  5031               	movf	___fldiv@a^0,w,c
 12064   0024BA  5E39               	subwf	___fldiv@rem^0,f,c
 12065   0024BC  5032               	movf	(___fldiv@a+1)^0,w,c
 12066   0024BE  5A3A               	subwfb	(___fldiv@rem+1)^0,f,c
 12067   0024C0  5033               	movf	(___fldiv@a+2)^0,w,c
 12068   0024C2  5A3B               	subwfb	(___fldiv@rem+2)^0,f,c
 12069   0024C4  5034               	movf	(___fldiv@a+3)^0,w,c
 12070   0024C6  5A3C               	subwfb	(___fldiv@rem+3)^0,f,c
 12071   0024C8                     l6519:
 12072   0024C8  2A45               	incf	___fldiv@aexp^0,f,c
 12073   0024CA                     l1132:
 12074   0024CA  0E19               	movlw	25
 12075   0024CC  6445               	cpfsgt	___fldiv@aexp^0,c
 12076   0024CE  EF6B  F012         	goto	u6991
 12077   0024D2  EF6D  F012         	goto	u6990
 12078   0024D6                     u6991:
 12079   0024D6  EF2D  F012         	goto	l6505
 12080   0024DA                     u6990:
 12081   0024DA  5039               	movf	___fldiv@rem^0,w,c
 12082   0024DC  103A               	iorwf	(___fldiv@rem+1)^0,w,c
 12083   0024DE  103B               	iorwf	(___fldiv@rem+2)^0,w,c
 12084   0024E0  103C               	iorwf	(___fldiv@rem+3)^0,w,c
 12085   0024E2  B4D8               	btfsc	status,2,c
 12086   0024E4  EF76  F012         	goto	u7001
 12087   0024E8  EF78  F012         	goto	u7000
 12088   0024EC                     u7001:
 12089   0024EC  EF90  F012         	goto	l6531
 12090   0024F0                     u7000:
 12091   0024F0  8040               	bsf	___fldiv@grs^0,0,c
 12092   0024F2  EF90  F012         	goto	l6531
 12093   0024F6                     l6525:
 12094   0024F6  90D8               	bcf	status,0,c
 12095   0024F8  362D               	rlcf	___fldiv@b^0,f,c
 12096   0024FA  362E               	rlcf	(___fldiv@b+1)^0,f,c
 12097   0024FC  362F               	rlcf	(___fldiv@b+2)^0,f,c
 12098   0024FE  3630               	rlcf	(___fldiv@b+3)^0,f,c
 12099   002500  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 12100   002502  EF85  F012         	goto	u7011
 12101   002506  EF87  F012         	goto	u7010
 12102   00250A                     u7011:
 12103   00250A  EF88  F012         	goto	l1141
 12104   00250E                     u7010:
 12105   00250E  802D               	bsf	___fldiv@b^0,0,c
 12106   002510                     l1141:
 12107   002510  90D8               	bcf	status,0,c
 12108   002512  3640               	rlcf	___fldiv@grs^0,f,c
 12109   002514  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 12110   002516  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 12111   002518  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 12112   00251A  063E               	decf	___fldiv@new_exp^0,f,c
 12113   00251C  A0D8               	btfss	status,0,c
 12114   00251E  063F               	decf	(___fldiv@new_exp+1)^0,f,c
 12115   002520                     l6531:
 12116   002520  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 12117   002522  EF95  F012         	goto	u7021
 12118   002526  EF97  F012         	goto	u7020
 12119   00252A                     u7021:
 12120   00252A  EF7B  F012         	goto	l6525
 12121   00252E                     u7020:
 12122   00252E  0E00               	movlw	0
 12123   002530  6E45               	movwf	___fldiv@aexp^0,c
 12124   002532  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 12125   002534  EF9E  F012         	goto	u7031
 12126   002538  EFA0  F012         	goto	u7030
 12127   00253C                     u7031:
 12128   00253C  EFC4  F012         	goto	l1143
 12129   002540                     u7030:
 12130   002540  0EFF               	movlw	255
 12131   002542  1440               	andwf	___fldiv@grs^0,w,c
 12132   002544  6E35               	movwf	??___fldiv^0,c
 12133   002546  0EFF               	movlw	255
 12134   002548  1441               	andwf	(___fldiv@grs+1)^0,w,c
 12135   00254A  6E36               	movwf	(??___fldiv+1)^0,c
 12136   00254C  0EFF               	movlw	255
 12137   00254E  1442               	andwf	(___fldiv@grs+2)^0,w,c
 12138   002550  6E37               	movwf	(??___fldiv+2)^0,c
 12139   002552  0E7F               	movlw	127
 12140   002554  1443               	andwf	(___fldiv@grs+3)^0,w,c
 12141   002556  6E38               	movwf	(??___fldiv+3)^0,c
 12142   002558  5035               	movf	??___fldiv^0,w,c
 12143   00255A  1036               	iorwf	(??___fldiv+1)^0,w,c
 12144   00255C  1037               	iorwf	(??___fldiv+2)^0,w,c
 12145   00255E  1038               	iorwf	(??___fldiv+3)^0,w,c
 12146   002560  B4D8               	btfsc	status,2,c
 12147   002562  EFB5  F012         	goto	u7041
 12148   002566  EFB7  F012         	goto	u7040
 12149   00256A                     u7041:
 12150   00256A  EFBB  F012         	goto	l1144
 12151   00256E                     u7040:
 12152   00256E                     l6539:
 12153   00256E  0E01               	movlw	1
 12154   002570  6E45               	movwf	___fldiv@aexp^0,c
 12155   002572  EFC4  F012         	goto	l1143
 12156   002576                     l1144:
 12157   002576  A02D               	btfss	___fldiv@b^0,0,c
 12158   002578  EFC0  F012         	goto	u7051
 12159   00257C  EFC2  F012         	goto	u7050
 12160   002580                     u7051:
 12161   002580  EFC4  F012         	goto	l1143
 12162   002584                     u7050:
 12163   002584  EFB7  F012         	goto	l6539
 12164   002588                     l1143:
 12165   002588  5045               	movf	___fldiv@aexp^0,w,c
 12166   00258A  B4D8               	btfsc	status,2,c
 12167   00258C  EFCA  F012         	goto	u7061
 12168   002590  EFCC  F012         	goto	u7060
 12169   002594                     u7061:
 12170   002594  EFF0  F012         	goto	l6551
 12171   002598                     u7060:
 12172   002598  0E01               	movlw	1
 12173   00259A  262D               	addwf	___fldiv@b^0,f,c
 12174   00259C  0E00               	movlw	0
 12175   00259E  222E               	addwfc	(___fldiv@b+1)^0,f,c
 12176   0025A0  222F               	addwfc	(___fldiv@b+2)^0,f,c
 12177   0025A2  2230               	addwfc	(___fldiv@b+3)^0,f,c
 12178   0025A4  A030               	btfss	(___fldiv@b+3)^0,0,c
 12179   0025A6  EFD7  F012         	goto	u7071
 12180   0025AA  EFD9  F012         	goto	u7070
 12181   0025AE                     u7071:
 12182   0025AE  EFF0  F012         	goto	l6551
 12183   0025B2                     u7070:
 12184   0025B2  C02D  F035         	movff	___fldiv@b,??___fldiv
 12185   0025B6  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
 12186   0025BA  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
 12187   0025BE  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
 12188   0025C2  3438               	rlcf	(??___fldiv+3)^0,w,c
 12189   0025C4  3238               	rrcf	(??___fldiv+3)^0,f,c
 12190   0025C6  3237               	rrcf	(??___fldiv+2)^0,f,c
 12191   0025C8  3236               	rrcf	(??___fldiv+1)^0,f,c
 12192   0025CA  3235               	rrcf	??___fldiv^0,f,c
 12193   0025CC  C035  F02D         	movff	??___fldiv,___fldiv@b
 12194   0025D0  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
 12195   0025D4  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
 12196   0025D8  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
 12197   0025DC  4A3E               	infsnz	___fldiv@new_exp^0,f,c
 12198   0025DE  2A3F               	incf	(___fldiv@new_exp+1)^0,f,c
 12199   0025E0                     l6551:
 12200   0025E0  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12201   0025E2  EFFB  F012         	goto	u7081
 12202   0025E6  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 12203   0025E8  E108               	bnz	u7080
 12204   0025EA  283E               	incf	___fldiv@new_exp^0,w,c
 12205   0025EC  A0D8               	btfss	status,0,c
 12206   0025EE  EFFB  F012         	goto	u7081
 12207   0025F2  EFFD  F012         	goto	u7080
 12208   0025F6                     u7081:
 12209   0025F6  EF08  F013         	goto	l6555
 12210   0025FA                     u7080:
 12211   0025FA  0E00               	movlw	0
 12212   0025FC  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 12213   0025FE  683E               	setf	___fldiv@new_exp^0,c
 12214   002600  0E00               	movlw	0
 12215   002602  6E2D               	movwf	___fldiv@b^0,c
 12216   002604  0E00               	movlw	0
 12217   002606  6E2E               	movwf	(___fldiv@b+1)^0,c
 12218   002608  0E00               	movlw	0
 12219   00260A  6E2F               	movwf	(___fldiv@b+2)^0,c
 12220   00260C  0E00               	movlw	0
 12221   00260E  6E30               	movwf	(___fldiv@b+3)^0,c
 12222   002610                     l6555:
 12223   002610  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12224   002612  EF15  F013         	goto	u7090
 12225   002616  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 12226   002618  E106               	bnz	u7091
 12227   00261A  043E               	decf	___fldiv@new_exp^0,w,c
 12228   00261C  B0D8               	btfsc	status,0,c
 12229   00261E  EF13  F013         	goto	u7091
 12230   002622  EF15  F013         	goto	u7090
 12231   002626                     u7091:
 12232   002626  EF23  F013         	goto	l6559
 12233   00262A                     u7090:
 12234   00262A  0E00               	movlw	0
 12235   00262C  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 12236   00262E  0E00               	movlw	0
 12237   002630  6E3E               	movwf	___fldiv@new_exp^0,c
 12238   002632  0E00               	movlw	0
 12239   002634  6E2D               	movwf	___fldiv@b^0,c
 12240   002636  0E00               	movlw	0
 12241   002638  6E2E               	movwf	(___fldiv@b+1)^0,c
 12242   00263A  0E00               	movlw	0
 12243   00263C  6E2F               	movwf	(___fldiv@b+2)^0,c
 12244   00263E  0E00               	movlw	0
 12245   002640  6E30               	movwf	(___fldiv@b+3)^0,c
 12246   002642  0E00               	movlw	0
 12247   002644  6E3D               	movwf	___fldiv@sign^0,c
 12248   002646                     l6559:
 12249   002646  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
 12250   00264A  A044               	btfss	___fldiv@bexp^0,0,c
 12251   00264C  EF2A  F013         	goto	u7101
 12252   002650  EF2C  F013         	goto	u7100
 12253   002654                     u7101:
 12254   002654  EF2F  F013         	goto	l6565
 12255   002658                     u7100:
 12256   002658  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 12257   00265A  EF30  F013         	goto	l6567
 12258   00265E                     l6565:
 12259   00265E  9E2F               	bcf	(___fldiv@b+2)^0,7,c
 12260   002660                     l6567:
 12261   002660  90D8               	bcf	status,0,c
 12262   002662  3044               	rrcf	___fldiv@bexp^0,w,c
 12263   002664  6E30               	movwf	(___fldiv@b+3)^0,c
 12264   002666  EFE6  F011         	goto	l6481
 12265   00266A                     l1130:
 12266   00266A  0012               	return		;funcret
 12267   00266C                     __end_of___fldiv:
 12268                           	callstack 0
 12269                           
 12270 ;; *************** function _dtoa *****************
 12271 ;; Defined at:
 12272 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 12273 ;; Parameters:    Size  Location     Type
 12274 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 12275 ;;		 -> NULL(0), sprintf@f(12), 
 12276 ;;  d               2   35[COMRAM] int 
 12277 ;; Auto vars:     Size  Location     Type
 12278 ;;  i               2   44[COMRAM] int 
 12279 ;;  w               2   41[COMRAM] int 
 12280 ;;  p               2   39[COMRAM] int 
 12281 ;;  s               1   43[COMRAM] unsigned char 
 12282 ;; Return value:  Size  Location     Type
 12283 ;;                  1    wreg      void 
 12284 ;; Registers used:
 12285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12286 ;; Tracked objects:
 12287 ;;		On entry : 0/0
 12288 ;;		On exit  : 0/0
 12289 ;;		Unchanged: 0/0
 12290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12292 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12294 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12295 ;;Total ram usage:       13 bytes
 12296 ;; Hardware stack levels used: 1
 12297 ;; Hardware stack levels required when called: 5
 12298 ;; This function calls:
 12299 ;;		___awdiv
 12300 ;;		___awmod
 12301 ;;		_abs
 12302 ;;		_pad
 12303 ;; This function is called by:
 12304 ;;		_vfpfcnvrt
 12305 ;; This function uses a non-reentrant model
 12306 ;;
 12307                           
 12308                           	psect	text43
 12309   0035E6                     __ptext43:
 12310                           	callstack 0
 12311   0035E6                     _dtoa:
 12312                           	callstack 21
 12313   0035E6                     
 12314                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
 12315   0035E6  BE25               	btfsc	(dtoa@d+1)^0,7,c
 12316   0035E8  EFF8  F01A         	goto	u7851
 12317   0035EC  EFFB  F01A         	goto	u7850
 12318   0035F0                     u7851:
 12319   0035F0  0E01               	movlw	1
 12320   0035F2  EFFC  F01A         	goto	u7860
 12321   0035F6                     u7850:
 12322   0035F6  0E00               	movlw	0
 12323   0035F8                     u7860:
 12324   0035F8  6E2C               	movwf	dtoa@s^0,c
 12325   0035FA                     
 12326                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
 12327   0035FA  502C               	movf	dtoa@s^0,w,c
 12328   0035FC  B4D8               	btfsc	status,2,c
 12329   0035FE  EF03  F01B         	goto	u7871
 12330   003602  EF05  F01B         	goto	u7870
 12331   003606                     u7871:
 12332   003606  EF09  F01B         	goto	l6989
 12333   00360A                     u7870:
 12334   00360A                     
 12335                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
 12336   00360A  6C24               	negf	dtoa@d^0,c
 12337   00360C  1E25               	comf	(dtoa@d+1)^0,f,c
 12338   00360E  B0D8               	btfsc	status,0,c
 12339   003610  2A25               	incf	(dtoa@d+1)^0,f,c
 12340   003612                     l6989:
 12341                           
 12342                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
 12343   003612  BE58               	btfsc	(_prec+1)^0,7,c
 12344   003614  EF10  F01B         	goto	u7880
 12345   003618  EF0E  F01B         	goto	u7881
 12346   00361C                     u7881:
 12347   00361C  EF16  F01B         	goto	l1273
 12348   003620                     u7880:
 12349   003620  0E00               	movlw	0
 12350   003622  6E29               	movwf	(dtoa@p+1)^0,c
 12351   003624  0E01               	movlw	1
 12352   003626  6E28               	movwf	dtoa@p^0,c
 12353   003628  EF1A  F01B         	goto	l1275
 12354   00362C                     l1273:
 12355   00362C  C057  F028         	movff	_prec,dtoa@p
 12356   003630  C058  F029         	movff	_prec+1,dtoa@p+1
 12357   003634                     l1275:
 12358                           
 12359                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
 12360   003634  C055  F02A         	movff	_width,dtoa@w
 12361   003638  C056  F02B         	movff	_width+1,dtoa@w+1
 12362   00363C                     
 12363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
 12364   00363C  502C               	movf	dtoa@s^0,w,c
 12365   00363E  B4D8               	btfsc	status,2,c
 12366   003640  EF24  F01B         	goto	u7891
 12367   003644  EF26  F01B         	goto	u7890
 12368   003648                     u7891:
 12369   003648  EF3D  F01B         	goto	l1276
 12370   00364C                     u7890:
 12371   00364C                     
 12372                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
 12373   00364C  062A               	decf	dtoa@w^0,f,c
 12374   00364E  A0D8               	btfss	status,0,c
 12375   003650  062B               	decf	(dtoa@w+1)^0,f,c
 12376   003652                     
 12377                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
 12378   003652  502C               	movf	dtoa@s^0,w,c
 12379   003654  A4D8               	btfss	status,2,c
 12380   003656  EF2F  F01B         	goto	u7901
 12381   00365A  EF31  F01B         	goto	u7900
 12382   00365E                     u7901:
 12383   00365E  EF37  F01B         	goto	l7001
 12384   003662                     u7900:
 12385   003662  0E00               	movlw	0
 12386   003664  6E27               	movwf	(_dtoa$3664+1)^0,c
 12387   003666  0E2B               	movlw	43
 12388   003668  6E26               	movwf	_dtoa$3664^0,c
 12389   00366A  EF3B  F01B         	goto	l7003
 12390   00366E                     l7001:
 12391   00366E  0E00               	movlw	0
 12392   003670  6E27               	movwf	(_dtoa$3664+1)^0,c
 12393   003672  0E2D               	movlw	45
 12394   003674  6E26               	movwf	_dtoa$3664^0,c
 12395   003676                     l7003:
 12396   003676  C026  F02C         	movff	_dtoa$3664,dtoa@s
 12397   00367A                     l1276:
 12398                           
 12399                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
 12400   00367A  0E00               	movlw	0
 12401   00367C  6E2E               	movwf	(dtoa@i+1)^0,c
 12402   00367E  0E4F               	movlw	79
 12403   003680  6E2D               	movwf	dtoa@i^0,c
 12404   003682                     
 12405                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
 12406   003682  0E00               	movlw	0
 12407   003684  0101               	movlb	1	; () banked
 12408   003686  6F64               	movwf	(_dbuf+79)& (0+255),b
 12409                           
 12410                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
 12411   003688  EF76  F01B         	goto	l7017
 12412   00368C                     l7007:
 12413                           
 12414                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
 12415   00368C  062D               	decf	dtoa@i^0,f,c
 12416   00368E  A0D8               	btfss	status,0,c
 12417   003690  062E               	decf	(dtoa@i+1)^0,f,c
 12418   003692                     
 12419                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 12420   003692  0E15               	movlw	low _dbuf
 12421   003694  242D               	addwf	dtoa@i^0,w,c
 12422   003696  6ED9               	movwf	fsr2l,c
 12423   003698  0E01               	movlw	high _dbuf
 12424   00369A  202E               	addwfc	(dtoa@i+1)^0,w,c
 12425   00369C  6EDA               	movwf	fsr2h,c
 12426   00369E  C024  F006         	movff	dtoa@d,___awmod@dividend
 12427   0036A2  C025  F007         	movff	dtoa@d+1,___awmod@dividend+1
 12428   0036A6  0E00               	movlw	0
 12429   0036A8  6E09               	movwf	(___awmod@divisor+1)^0,c
 12430   0036AA  0E0A               	movlw	10
 12431   0036AC  6E08               	movwf	___awmod@divisor^0,c
 12432   0036AE  ECBB  F022         	call	___awmod	;wreg free
 12433   0036B2  C006  F00C         	movff	?___awmod,abs@a
 12434   0036B6  C007  F00D         	movff	?___awmod+1,abs@a+1
 12435   0036BA  EC1F  F025         	call	_abs	;wreg free
 12436   0036BE  500C               	movf	?_abs^0,w,c
 12437   0036C0  0F30               	addlw	48
 12438   0036C2  6EDF               	movwf	indf2,c
 12439   0036C4                     
 12440                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
 12441   0036C4  0628               	decf	dtoa@p^0,f,c
 12442   0036C6  A0D8               	btfss	status,0,c
 12443   0036C8  0629               	decf	(dtoa@p+1)^0,f,c
 12444   0036CA                     
 12445                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
 12446   0036CA  062A               	decf	dtoa@w^0,f,c
 12447   0036CC  A0D8               	btfss	status,0,c
 12448   0036CE  062B               	decf	(dtoa@w+1)^0,f,c
 12449   0036D0                     
 12450                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
 12451   0036D0  C024  F006         	movff	dtoa@d,___awdiv@dividend
 12452   0036D4  C025  F007         	movff	dtoa@d+1,___awdiv@dividend+1
 12453   0036D8  0E00               	movlw	0
 12454   0036DA  6E09               	movwf	(___awdiv@divisor+1)^0,c
 12455   0036DC  0E0A               	movlw	10
 12456   0036DE  6E08               	movwf	___awdiv@divisor^0,c
 12457   0036E0  EC00  F022         	call	___awdiv	;wreg free
 12458   0036E4  C006  F024         	movff	?___awdiv,dtoa@d
 12459   0036E8  C007  F025         	movff	?___awdiv+1,dtoa@d+1
 12460   0036EC                     l7017:
 12461                           
 12462                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
 12463   0036EC  BE2E               	btfsc	(dtoa@i+1)^0,7,c
 12464   0036EE  EF81  F01B         	goto	u7911
 12465   0036F2  502E               	movf	(dtoa@i+1)^0,w,c
 12466   0036F4  E108               	bnz	u7910
 12467   0036F6  042D               	decf	dtoa@i^0,w,c
 12468   0036F8  A0D8               	btfss	status,0,c
 12469   0036FA  EF81  F01B         	goto	u7911
 12470   0036FE  EF83  F01B         	goto	u7910
 12471   003702                     u7911:
 12472   003702  EF99  F01B         	goto	l7023
 12473   003706                     u7910:
 12474   003706  5024               	movf	dtoa@d^0,w,c
 12475   003708  1025               	iorwf	(dtoa@d+1)^0,w,c
 12476   00370A  A4D8               	btfss	status,2,c
 12477   00370C  EF8A  F01B         	goto	u7921
 12478   003710  EF8C  F01B         	goto	u7920
 12479   003714                     u7921:
 12480   003714  EF46  F01B         	goto	l7007
 12481   003718                     u7920:
 12482   003718  BE29               	btfsc	(dtoa@p+1)^0,7,c
 12483   00371A  EF99  F01B         	goto	u7930
 12484   00371E  5029               	movf	(dtoa@p+1)^0,w,c
 12485   003720  E106               	bnz	u7931
 12486   003722  0428               	decf	dtoa@p^0,w,c
 12487   003724  B0D8               	btfsc	status,0,c
 12488   003726  EF97  F01B         	goto	u7931
 12489   00372A  EF99  F01B         	goto	u7930
 12490   00372E                     u7931:
 12491   00372E  EF46  F01B         	goto	l7007
 12492   003732                     u7930:
 12493   003732                     l7023:
 12494                           
 12495                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
 12496   003732  502C               	movf	dtoa@s^0,w,c
 12497   003734  B4D8               	btfsc	status,2,c
 12498   003736  EF9F  F01B         	goto	u7941
 12499   00373A  EFA1  F01B         	goto	u7940
 12500   00373E                     u7941:
 12501   00373E  EFAC  F01B         	goto	l7029
 12502   003742                     u7940:
 12503   003742                     
 12504                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
 12505   003742  062D               	decf	dtoa@i^0,f,c
 12506   003744  A0D8               	btfss	status,0,c
 12507   003746  062E               	decf	(dtoa@i+1)^0,f,c
 12508   003748                     
 12509                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
 12510   003748  0E15               	movlw	low _dbuf
 12511   00374A  242D               	addwf	dtoa@i^0,w,c
 12512   00374C  6ED9               	movwf	fsr2l,c
 12513   00374E  0E01               	movlw	high _dbuf
 12514   003750  202E               	addwfc	(dtoa@i+1)^0,w,c
 12515   003752  6EDA               	movwf	fsr2h,c
 12516   003754  C02C  FFDF         	movff	dtoa@s,indf2
 12517   003758                     l7029:
 12518                           
 12519                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
 12520   003758  C022  F017         	movff	dtoa@fp,pad@fp
 12521   00375C  C023  F018         	movff	dtoa@fp+1,pad@fp+1
 12522   003760  0E15               	movlw	low _dbuf
 12523   003762  242D               	addwf	dtoa@i^0,w,c
 12524   003764  6E19               	movwf	pad@buf^0,c
 12525   003766  0E01               	movlw	high _dbuf
 12526   003768  202E               	addwfc	(dtoa@i+1)^0,w,c
 12527   00376A  6E1A               	movwf	(pad@buf+1)^0,c
 12528   00376C  C02A  F01B         	movff	dtoa@w,pad@p
 12529   003770  C02B  F01C         	movff	dtoa@w+1,pad@p+1
 12530   003774  EC68  F023         	call	_pad	;wreg free
 12531   003778  0012               	return		;funcret
 12532   00377A                     __end_of_dtoa:
 12533                           	callstack 0
 12534                           
 12535 ;; *************** function _pad *****************
 12536 ;; Defined at:
 12537 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
 12538 ;; Parameters:    Size  Location     Type
 12539 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 12540 ;;		 -> NULL(0), sprintf@f(12), 
 12541 ;;  buf             2   24[COMRAM] PTR unsigned char 
 12542 ;;		 -> dbuf(80), 
 12543 ;;  p               2   26[COMRAM] int 
 12544 ;; Auto vars:     Size  Location     Type
 12545 ;;  w               2   31[COMRAM] int 
 12546 ;;  i               2   29[COMRAM] int 
 12547 ;; Return value:  Size  Location     Type
 12548 ;;                  1    wreg      void 
 12549 ;; Registers used:
 12550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12551 ;; Tracked objects:
 12552 ;;		On entry : 0/0
 12553 ;;		On exit  : 0/0
 12554 ;;		Unchanged: 0/0
 12555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12556 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12557 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12558 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12559 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12560 ;;Total ram usage:       11 bytes
 12561 ;; Hardware stack levels used: 1
 12562 ;; Hardware stack levels required when called: 4
 12563 ;; This function calls:
 12564 ;;		_fputc
 12565 ;;		_fputs
 12566 ;; This function is called by:
 12567 ;;		_dtoa
 12568 ;;		_efgtoa
 12569 ;; This function uses a non-reentrant model
 12570 ;;
 12571                           
 12572                           	psect	text44
 12573   0046D0                     __ptext44:
 12574                           	callstack 0
 12575   0046D0                     _pad:
 12576                           	callstack 21
 12577   0046D0                     
 12578                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
 12579   0046D0  A059               	btfss	_flags^0,0,c
 12580   0046D2  EF6D  F023         	goto	u7581
 12581   0046D6  EF6F  F023         	goto	u7580
 12582   0046DA                     u7581:
 12583   0046DA  EF79  F023         	goto	l6885
 12584   0046DE                     u7580:
 12585   0046DE                     
 12586                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
 12587   0046DE  C019  F010         	movff	pad@buf,fputs@s
 12588   0046E2  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12589   0046E6  C017  F012         	movff	pad@fp,fputs@fp
 12590   0046EA  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12591   0046EE  ECDD  F024         	call	_fputs	;wreg free
 12592   0046F2                     l6885:
 12593                           
 12594                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
 12595   0046F2  BE1C               	btfsc	(pad@p+1)^0,7,c
 12596   0046F4  EF7E  F023         	goto	u7591
 12597   0046F8  EF80  F023         	goto	u7590
 12598   0046FC                     u7591:
 12599   0046FC  EF86  F023         	goto	l6889
 12600   004700                     u7590:
 12601   004700  C01B  F020         	movff	pad@p,pad@w
 12602   004704  C01C  F021         	movff	pad@p+1,pad@w+1
 12603   004708  EF8A  F023         	goto	l1263
 12604   00470C                     l6889:
 12605   00470C  0E00               	movlw	0
 12606   00470E  6E21               	movwf	(pad@w+1)^0,c
 12607   004710  0E00               	movlw	0
 12608   004712  6E20               	movwf	pad@w^0,c
 12609   004714                     l1263:
 12610                           
 12611                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
 12612   004714  0E00               	movlw	0
 12613   004716  6E1F               	movwf	(pad@i+1)^0,c
 12614   004718  0E00               	movlw	0
 12615   00471A  6E1E               	movwf	pad@i^0,c
 12616                           
 12617                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
 12618   00471C  EF9C  F023         	goto	l6895
 12619   004720                     l6891:
 12620                           
 12621                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
 12622   004720  0E00               	movlw	0
 12623   004722  6E08               	movwf	(fputc@c+1)^0,c
 12624   004724  0E20               	movlw	32
 12625   004726  6E07               	movwf	fputc@c^0,c
 12626   004728  C017  F009         	movff	pad@fp,fputc@fp
 12627   00472C  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 12628   004730  ECD6  F020         	call	_fputc	;wreg free
 12629   004734                     
 12630                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
 12631   004734  4A1E               	infsnz	pad@i^0,f,c
 12632   004736  2A1F               	incf	(pad@i+1)^0,f,c
 12633   004738                     l6895:
 12634                           
 12635                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
 12636   004738  5020               	movf	pad@w^0,w,c
 12637   00473A  5C1E               	subwf	pad@i^0,w,c
 12638   00473C  501F               	movf	(pad@i+1)^0,w,c
 12639   00473E  0A80               	xorlw	128
 12640   004740  6E1D               	movwf	??_pad^0,c
 12641   004742  5021               	movf	(pad@w+1)^0,w,c
 12642   004744  0A80               	xorlw	128
 12643   004746  581D               	subwfb	??_pad^0,w,c
 12644   004748  A0D8               	btfss	status,0,c
 12645   00474A  EFA9  F023         	goto	u7601
 12646   00474E  EFAB  F023         	goto	u7600
 12647   004752                     u7601:
 12648   004752  EF90  F023         	goto	l6891
 12649   004756                     u7600:
 12650   004756                     
 12651                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
 12652   004756  B059               	btfsc	_flags^0,0,c
 12653   004758  EFB0  F023         	goto	u7611
 12654   00475C  EFB2  F023         	goto	u7610
 12655   004760                     u7611:
 12656   004760  EFBC  F023         	goto	l1268
 12657   004764                     u7610:
 12658   004764                     
 12659                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
 12660   004764  C019  F010         	movff	pad@buf,fputs@s
 12661   004768  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12662   00476C  C017  F012         	movff	pad@fp,fputs@fp
 12663   004770  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12664   004774  ECDD  F024         	call	_fputs	;wreg free
 12665   004778                     l1268:
 12666   004778  0012               	return		;funcret
 12667   00477A                     __end_of_pad:
 12668                           	callstack 0
 12669                           
 12670 ;; *************** function _fputs *****************
 12671 ;; Defined at:
 12672 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
 12673 ;; Parameters:    Size  Location     Type
 12674 ;;  s               2   15[COMRAM] PTR const unsigned char 
 12675 ;;		 -> dbuf(80), 
 12676 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 12677 ;;		 -> NULL(0), sprintf@f(12), 
 12678 ;; Auto vars:     Size  Location     Type
 12679 ;;  i               2   20[COMRAM] int 
 12680 ;;  c               1   19[COMRAM] unsigned char 
 12681 ;; Return value:  Size  Location     Type
 12682 ;;                  2   15[COMRAM] int 
 12683 ;; Registers used:
 12684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12685 ;; Tracked objects:
 12686 ;;		On entry : 0/0
 12687 ;;		On exit  : 0/0
 12688 ;;		Unchanged: 0/0
 12689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12691 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12693 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12694 ;;Total ram usage:        7 bytes
 12695 ;; Hardware stack levels used: 1
 12696 ;; Hardware stack levels required when called: 3
 12697 ;; This function calls:
 12698 ;;		_fputc
 12699 ;; This function is called by:
 12700 ;;		_pad
 12701 ;; This function uses a non-reentrant model
 12702 ;;
 12703                           
 12704                           	psect	text45
 12705   0049BA                     __ptext45:
 12706                           	callstack 0
 12707   0049BA                     _fputs:
 12708                           	callstack 21
 12709   0049BA  0E00               	movlw	0
 12710   0049BC  6E16               	movwf	(fputs@i+1)^0,c
 12711   0049BE  0E00               	movlw	0
 12712   0049C0  6E15               	movwf	fputs@i^0,c
 12713   0049C2  EFEE  F024         	goto	l6429
 12714   0049C6                     l6425:
 12715   0049C6  C014  F007         	movff	fputs@c,fputc@c
 12716   0049CA  6A08               	clrf	(fputc@c+1)^0,c
 12717   0049CC  C012  F009         	movff	fputs@fp,fputc@fp
 12718   0049D0  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 12719   0049D4  ECD6  F020         	call	_fputc	;wreg free
 12720   0049D8  4A15               	infsnz	fputs@i^0,f,c
 12721   0049DA  2A16               	incf	(fputs@i+1)^0,f,c
 12722   0049DC                     l6429:
 12723   0049DC  5015               	movf	fputs@i^0,w,c
 12724   0049DE  2410               	addwf	fputs@s^0,w,c
 12725   0049E0  6ED9               	movwf	fsr2l,c
 12726   0049E2  5016               	movf	(fputs@i+1)^0,w,c
 12727   0049E4  2011               	addwfc	(fputs@s+1)^0,w,c
 12728   0049E6  6EDA               	movwf	fsr2h,c
 12729   0049E8  50DF               	movf	indf2,w,c
 12730   0049EA  6E14               	movwf	fputs@c^0,c
 12731   0049EC  5014               	movf	fputs@c^0,w,c
 12732   0049EE  A4D8               	btfss	status,2,c
 12733   0049F0  EFFC  F024         	goto	u6871
 12734   0049F4  EFFE  F024         	goto	u6870
 12735   0049F8                     u6871:
 12736   0049F8  EFE3  F024         	goto	l6425
 12737   0049FC                     u6870:
 12738   0049FC  0012               	return		;funcret
 12739   0049FE                     __end_of_fputs:
 12740                           	callstack 0
 12741                           
 12742 ;; *************** function _fputc *****************
 12743 ;; Defined at:
 12744 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
 12745 ;; Parameters:    Size  Location     Type
 12746 ;;  c               2    6[COMRAM] int 
 12747 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 12748 ;;		 -> NULL(0), sprintf@f(12), 
 12749 ;; Auto vars:     Size  Location     Type
 12750 ;;		None
 12751 ;; Return value:  Size  Location     Type
 12752 ;;                  2    6[COMRAM] int 
 12753 ;; Registers used:
 12754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12755 ;; Tracked objects:
 12756 ;;		On entry : 0/0
 12757 ;;		On exit  : 0/0
 12758 ;;		Unchanged: 0/0
 12759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12762 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12763 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12764 ;;Total ram usage:        9 bytes
 12765 ;; Hardware stack levels used: 1
 12766 ;; Hardware stack levels required when called: 2
 12767 ;; This function calls:
 12768 ;;		_putch
 12769 ;; This function is called by:
 12770 ;;		_pad
 12771 ;;		_stoa
 12772 ;;		_vfpfcnvrt
 12773 ;;		_fputs
 12774 ;; This function uses a non-reentrant model
 12775 ;;
 12776                           
 12777                           	psect	text46
 12778   0041AC                     __ptext46:
 12779                           	callstack 0
 12780   0041AC                     _fputc:
 12781                           	callstack 23
 12782   0041AC  5009               	movf	fputc@fp^0,w,c
 12783   0041AE  100A               	iorwf	(fputc@fp+1)^0,w,c
 12784   0041B0  B4D8               	btfsc	status,2,c
 12785   0041B2  EFDD  F020         	goto	u6441
 12786   0041B6  EFDF  F020         	goto	u6440
 12787   0041BA                     u6441:
 12788   0041BA  EFE8  F020         	goto	l6211
 12789   0041BE                     u6440:
 12790   0041BE  5009               	movf	fputc@fp^0,w,c
 12791   0041C0  100A               	iorwf	(fputc@fp+1)^0,w,c
 12792   0041C2  A4D8               	btfss	status,2,c
 12793   0041C4  EFE6  F020         	goto	u6451
 12794   0041C8  EFE8  F020         	goto	u6450
 12795   0041CC                     u6451:
 12796   0041CC  EFED  F020         	goto	l6213
 12797   0041D0                     u6450:
 12798   0041D0                     l6211:
 12799   0041D0  5007               	movf	fputc@c^0,w,c
 12800   0041D2  EC02  F026         	call	_putch
 12801   0041D6  EF3A  F021         	goto	l1471
 12802   0041DA                     l6213:
 12803   0041DA  EE20 F00A          	lfsr	2,10
 12804   0041DE  5009               	movf	fputc@fp^0,w,c
 12805   0041E0  26D9               	addwf	fsr2l,f,c
 12806   0041E2  500A               	movf	(fputc@fp+1)^0,w,c
 12807   0041E4  22DA               	addwfc	fsr2h,f,c
 12808   0041E6  50DE               	movf	postinc2,w,c
 12809   0041E8  10DE               	iorwf	postinc2,w,c
 12810   0041EA  B4D8               	btfsc	status,2,c
 12811   0041EC  EFFA  F020         	goto	u6461
 12812   0041F0  EFFC  F020         	goto	u6460
 12813   0041F4                     u6461:
 12814   0041F4  EF17  F021         	goto	l6217
 12815   0041F8                     u6460:
 12816   0041F8  EE20 F00A          	lfsr	2,10
 12817   0041FC  5009               	movf	fputc@fp^0,w,c
 12818   0041FE  26D9               	addwf	fsr2l,f,c
 12819   004200  500A               	movf	(fputc@fp+1)^0,w,c
 12820   004202  22DA               	addwfc	fsr2h,f,c
 12821   004204  EE10 F003          	lfsr	1,3
 12822   004208  5009               	movf	fputc@fp^0,w,c
 12823   00420A  26E1               	addwf	fsr1l,f,c
 12824   00420C  500A               	movf	(fputc@fp+1)^0,w,c
 12825   00420E  22E2               	addwfc	fsr1h,f,c
 12826   004210  50DE               	movf	postinc2,w,c
 12827   004212  5CE6               	subwf	postinc1,w,c
 12828   004214  50E6               	movf	postinc1,w,c
 12829   004216  0A80               	xorlw	128
 12830   004218  6E0F               	movwf	(??_fputc+4)^0,c
 12831   00421A  50DE               	movf	postinc2,w,c
 12832   00421C  0A80               	xorlw	128
 12833   00421E  580F               	subwfb	(??_fputc+4)^0,w,c
 12834   004220  B0D8               	btfsc	status,0,c
 12835   004222  EF15  F021         	goto	u6471
 12836   004226  EF17  F021         	goto	u6470
 12837   00422A                     u6471:
 12838   00422A  EF3A  F021         	goto	l1471
 12839   00422E                     u6470:
 12840   00422E                     l6217:
 12841   00422E  EE20 F003          	lfsr	2,3
 12842   004232  5009               	movf	fputc@fp^0,w,c
 12843   004234  26D9               	addwf	fsr2l,f,c
 12844   004236  500A               	movf	(fputc@fp+1)^0,w,c
 12845   004238  22DA               	addwfc	fsr2h,f,c
 12846   00423A  CFDE F00B          	movff	postinc2,??_fputc
 12847   00423E  CFDD F00C          	movff	postdec2,??_fputc+1
 12848   004242  C009  FFD9         	movff	fputc@fp,fsr2l
 12849   004246  C00A  FFDA         	movff	fputc@fp+1,fsr2h
 12850   00424A  CFDE F00D          	movff	postinc2,??_fputc+2
 12851   00424E  CFDD F00E          	movff	postdec2,??_fputc+3
 12852   004252  500B               	movf	??_fputc^0,w,c
 12853   004254  240D               	addwf	(??_fputc+2)^0,w,c
 12854   004256  6ED9               	movwf	fsr2l,c
 12855   004258  500C               	movf	(??_fputc+1)^0,w,c
 12856   00425A  200E               	addwfc	(??_fputc+3)^0,w,c
 12857   00425C  6EDA               	movwf	fsr2h,c
 12858   00425E  C007  FFDF         	movff	fputc@c,indf2
 12859   004262  EE20 F003          	lfsr	2,3
 12860   004266  5009               	movf	fputc@fp^0,w,c
 12861   004268  26D9               	addwf	fsr2l,f,c
 12862   00426A  500A               	movf	(fputc@fp+1)^0,w,c
 12863   00426C  22DA               	addwfc	fsr2h,f,c
 12864   00426E  2ADE               	incf	postinc2,f,c
 12865   004270  0E00               	movlw	0
 12866   004272  22DD               	addwfc	postdec2,f,c
 12867   004274                     l1471:
 12868   004274  0012               	return		;funcret
 12869   004276                     __end_of_fputc:
 12870                           	callstack 0
 12871                           
 12872 ;; *************** function _putch *****************
 12873 ;; Defined at:
 12874 ;;		line 11 in file "putch.c"
 12875 ;; Parameters:    Size  Location     Type
 12876 ;;  data            1    wreg     unsigned char 
 12877 ;; Auto vars:     Size  Location     Type
 12878 ;;  data            1    5[COMRAM] unsigned char 
 12879 ;; Return value:  Size  Location     Type
 12880 ;;                  1    wreg      void 
 12881 ;; Registers used:
 12882 ;;		wreg
 12883 ;; Tracked objects:
 12884 ;;		On entry : 0/0
 12885 ;;		On exit  : 0/0
 12886 ;;		Unchanged: 0/0
 12887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12891 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12892 ;;Total ram usage:        1 bytes
 12893 ;; Hardware stack levels used: 1
 12894 ;; Hardware stack levels required when called: 1
 12895 ;; This function calls:
 12896 ;;		Nothing
 12897 ;; This function is called by:
 12898 ;;		_fputc
 12899 ;; This function uses a non-reentrant model
 12900 ;;
 12901                           
 12902                           	psect	text47
 12903   004C04                     __ptext47:
 12904                           	callstack 0
 12905   004C04                     _putch:
 12906                           	callstack 23
 12907                           
 12908                           ;incstack = 0
 12909                           ;putch@data stored from wreg
 12910   004C04  6E06               	movwf	putch@data^0,c
 12911   004C06                     l250:
 12912   004C06  A89E               	btfss	3998,4,c	;volatile
 12913   004C08  EF08  F026         	goto	u6431
 12914   004C0C  EF0A  F026         	goto	u6430
 12915   004C10                     u6431:
 12916   004C10  EF03  F026         	goto	l250
 12917   004C14                     u6430:
 12918   004C14                     
 12919                           ;putch.c: 13:     TXREG1 = data;
 12920   004C14  C006  FFAD         	movff	putch@data,4013	;volatile
 12921   004C18  0012               	return		;funcret
 12922   004C1A                     __end_of_putch:
 12923                           	callstack 0
 12924                           
 12925 ;; *************** function _abs *****************
 12926 ;; Defined at:
 12927 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
 12928 ;; Parameters:    Size  Location     Type
 12929 ;;  a               2   11[COMRAM] int 
 12930 ;; Auto vars:     Size  Location     Type
 12931 ;;		None
 12932 ;; Return value:  Size  Location     Type
 12933 ;;                  2   11[COMRAM] int 
 12934 ;; Registers used:
 12935 ;;		wreg, status,2, status,0
 12936 ;; Tracked objects:
 12937 ;;		On entry : 0/0
 12938 ;;		On exit  : 0/0
 12939 ;;		Unchanged: 0/0
 12940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12943 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12944 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12945 ;;Total ram usage:        4 bytes
 12946 ;; Hardware stack levels used: 1
 12947 ;; Hardware stack levels required when called: 1
 12948 ;; This function calls:
 12949 ;;		Nothing
 12950 ;; This function is called by:
 12951 ;;		_dtoa
 12952 ;; This function uses a non-reentrant model
 12953 ;;
 12954                           
 12955                           	psect	text48
 12956   004A3E                     __ptext48:
 12957                           	callstack 0
 12958   004A3E                     _abs:
 12959                           	callstack 24
 12960   004A3E  BE0D               	btfsc	(abs@a+1)^0,7,c
 12961   004A40  EF2C  F025         	goto	u7620
 12962   004A44  500D               	movf	(abs@a+1)^0,w,c
 12963   004A46  E106               	bnz	u7621
 12964   004A48  040C               	decf	abs@a^0,w,c
 12965   004A4A  B0D8               	btfsc	status,0,c
 12966   004A4C  EF2A  F025         	goto	u7621
 12967   004A50  EF2C  F025         	goto	u7620
 12968   004A54                     u7621:
 12969   004A54  EF3A  F025         	goto	l1430
 12970   004A58                     u7620:
 12971   004A58  C00C  F00E         	movff	abs@a,??_abs
 12972   004A5C  C00D  F00F         	movff	abs@a+1,??_abs+1
 12973   004A60  1E0E               	comf	??_abs^0,f,c
 12974   004A62  1E0F               	comf	(??_abs+1)^0,f,c
 12975   004A64  4A0E               	infsnz	??_abs^0,f,c
 12976   004A66  2A0F               	incf	(??_abs+1)^0,f,c
 12977   004A68  C00E  F00C         	movff	??_abs,?_abs
 12978   004A6C  C00F  F00D         	movff	??_abs+1,?_abs+1
 12979   004A70  EF3E  F025         	goto	l1433
 12980   004A74                     l1430:
 12981   004A74  C00C  F00C         	movff	abs@a,?_abs
 12982   004A78  C00D  F00D         	movff	abs@a+1,?_abs+1
 12983   004A7C                     l1433:
 12984   004A7C  0012               	return		;funcret
 12985   004A7E                     __end_of_abs:
 12986                           	callstack 0
 12987                           
 12988 ;; *************** function ___awmod *****************
 12989 ;; Defined at:
 12990 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
 12991 ;; Parameters:    Size  Location     Type
 12992 ;;  dividend        2    5[COMRAM] int 
 12993 ;;  divisor         2    7[COMRAM] int 
 12994 ;; Auto vars:     Size  Location     Type
 12995 ;;  sign            1   10[COMRAM] unsigned char 
 12996 ;;  counter         1    9[COMRAM] unsigned char 
 12997 ;; Return value:  Size  Location     Type
 12998 ;;                  2    5[COMRAM] int 
 12999 ;; Registers used:
 13000 ;;		wreg, status,2, status,0
 13001 ;; Tracked objects:
 13002 ;;		On entry : 0/0
 13003 ;;		On exit  : 0/0
 13004 ;;		Unchanged: 0/0
 13005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13006 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13007 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13009 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13010 ;;Total ram usage:        6 bytes
 13011 ;; Hardware stack levels used: 1
 13012 ;; Hardware stack levels required when called: 1
 13013 ;; This function calls:
 13014 ;;		Nothing
 13015 ;; This function is called by:
 13016 ;;		_dtoa
 13017 ;; This function uses a non-reentrant model
 13018 ;;
 13019                           
 13020                           	psect	text49
 13021   004576                     __ptext49:
 13022                           	callstack 0
 13023   004576                     ___awmod:
 13024                           	callstack 24
 13025   004576  0E00               	movlw	0
 13026   004578  6E0B               	movwf	___awmod@sign^0,c
 13027   00457A  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 13028   00457C  EFC4  F022         	goto	u7360
 13029   004580  EFC2  F022         	goto	u7361
 13030   004584                     u7361:
 13031   004584  EFCA  F022         	goto	l6763
 13032   004588                     u7360:
 13033   004588  6C06               	negf	___awmod@dividend^0,c
 13034   00458A  1E07               	comf	(___awmod@dividend+1)^0,f,c
 13035   00458C  B0D8               	btfsc	status,0,c
 13036   00458E  2A07               	incf	(___awmod@dividend+1)^0,f,c
 13037   004590  0E01               	movlw	1
 13038   004592  6E0B               	movwf	___awmod@sign^0,c
 13039   004594                     l6763:
 13040   004594  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 13041   004596  EFD1  F022         	goto	u7370
 13042   00459A  EFCF  F022         	goto	u7371
 13043   00459E                     u7371:
 13044   00459E  EFD5  F022         	goto	l6767
 13045   0045A2                     u7370:
 13046   0045A2  6C08               	negf	___awmod@divisor^0,c
 13047   0045A4  1E09               	comf	(___awmod@divisor+1)^0,f,c
 13048   0045A6  B0D8               	btfsc	status,0,c
 13049   0045A8  2A09               	incf	(___awmod@divisor+1)^0,f,c
 13050   0045AA                     l6767:
 13051   0045AA  5008               	movf	___awmod@divisor^0,w,c
 13052   0045AC  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 13053   0045AE  B4D8               	btfsc	status,2,c
 13054   0045B0  EFDC  F022         	goto	u7381
 13055   0045B4  EFDE  F022         	goto	u7380
 13056   0045B8                     u7381:
 13057   0045B8  EF02  F023         	goto	l6783
 13058   0045BC                     u7380:
 13059   0045BC  0E01               	movlw	1
 13060   0045BE  6E0A               	movwf	___awmod@counter^0,c
 13061   0045C0  EFE6  F022         	goto	l6773
 13062   0045C4                     l6771:
 13063   0045C4  90D8               	bcf	status,0,c
 13064   0045C6  3608               	rlcf	___awmod@divisor^0,f,c
 13065   0045C8  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 13066   0045CA  2A0A               	incf	___awmod@counter^0,f,c
 13067   0045CC                     l6773:
 13068   0045CC  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 13069   0045CE  EFEB  F022         	goto	u7391
 13070   0045D2  EFED  F022         	goto	u7390
 13071   0045D6                     u7391:
 13072   0045D6  EFE2  F022         	goto	l6771
 13073   0045DA                     u7390:
 13074   0045DA                     l6775:
 13075   0045DA  5008               	movf	___awmod@divisor^0,w,c
 13076   0045DC  5C06               	subwf	___awmod@dividend^0,w,c
 13077   0045DE  5009               	movf	(___awmod@divisor+1)^0,w,c
 13078   0045E0  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 13079   0045E2  A0D8               	btfss	status,0,c
 13080   0045E4  EFF6  F022         	goto	u7401
 13081   0045E8  EFF8  F022         	goto	u7400
 13082   0045EC                     u7401:
 13083   0045EC  EFFC  F022         	goto	l6779
 13084   0045F0                     u7400:
 13085   0045F0  5008               	movf	___awmod@divisor^0,w,c
 13086   0045F2  5E06               	subwf	___awmod@dividend^0,f,c
 13087   0045F4  5009               	movf	(___awmod@divisor+1)^0,w,c
 13088   0045F6  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 13089   0045F8                     l6779:
 13090   0045F8  90D8               	bcf	status,0,c
 13091   0045FA  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 13092   0045FC  3208               	rrcf	___awmod@divisor^0,f,c
 13093   0045FE  2E0A               	decfsz	___awmod@counter^0,f,c
 13094   004600  EFED  F022         	goto	l6775
 13095   004604                     l6783:
 13096   004604  500B               	movf	___awmod@sign^0,w,c
 13097   004606  B4D8               	btfsc	status,2,c
 13098   004608  EF08  F023         	goto	u7411
 13099   00460C  EF0A  F023         	goto	u7410
 13100   004610                     u7411:
 13101   004610  EF0E  F023         	goto	l6787
 13102   004614                     u7410:
 13103   004614  6C06               	negf	___awmod@dividend^0,c
 13104   004616  1E07               	comf	(___awmod@dividend+1)^0,f,c
 13105   004618  B0D8               	btfsc	status,0,c
 13106   00461A  2A07               	incf	(___awmod@dividend+1)^0,f,c
 13107   00461C                     l6787:
 13108   00461C  C006  F006         	movff	___awmod@dividend,?___awmod
 13109   004620  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 13110   004624  0012               	return		;funcret
 13111   004626                     __end_of___awmod:
 13112                           	callstack 0
 13113                           
 13114 ;; *************** function ___awdiv *****************
 13115 ;; Defined at:
 13116 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
 13117 ;; Parameters:    Size  Location     Type
 13118 ;;  dividend        2    5[COMRAM] int 
 13119 ;;  divisor         2    7[COMRAM] int 
 13120 ;; Auto vars:     Size  Location     Type
 13121 ;;  quotient        2   11[COMRAM] int 
 13122 ;;  sign            1   10[COMRAM] unsigned char 
 13123 ;;  counter         1    9[COMRAM] unsigned char 
 13124 ;; Return value:  Size  Location     Type
 13125 ;;                  2    5[COMRAM] int 
 13126 ;; Registers used:
 13127 ;;		wreg, status,2, status,0
 13128 ;; Tracked objects:
 13129 ;;		On entry : 0/0
 13130 ;;		On exit  : 0/0
 13131 ;;		Unchanged: 0/0
 13132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13134 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13136 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13137 ;;Total ram usage:        8 bytes
 13138 ;; Hardware stack levels used: 1
 13139 ;; Hardware stack levels required when called: 1
 13140 ;; This function calls:
 13141 ;;		Nothing
 13142 ;; This function is called by:
 13143 ;;		_runPWM
 13144 ;;		_dtoa
 13145 ;; This function uses a non-reentrant model
 13146 ;;
 13147                           
 13148                           	psect	text50
 13149   004400                     __ptext50:
 13150                           	callstack 0
 13151   004400                     ___awdiv:
 13152                           	callstack 24
 13153   004400  0E00               	movlw	0
 13154   004402  6E0B               	movwf	___awdiv@sign^0,c
 13155   004404  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
 13156   004406  EF09  F022         	goto	u7300
 13157   00440A  EF07  F022         	goto	u7301
 13158   00440E                     u7301:
 13159   00440E  EF0F  F022         	goto	l6719
 13160   004412                     u7300:
 13161   004412  6C08               	negf	___awdiv@divisor^0,c
 13162   004414  1E09               	comf	(___awdiv@divisor+1)^0,f,c
 13163   004416  B0D8               	btfsc	status,0,c
 13164   004418  2A09               	incf	(___awdiv@divisor+1)^0,f,c
 13165   00441A  0E01               	movlw	1
 13166   00441C  6E0B               	movwf	___awdiv@sign^0,c
 13167   00441E                     l6719:
 13168   00441E  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
 13169   004420  EF16  F022         	goto	u7310
 13170   004424  EF14  F022         	goto	u7311
 13171   004428                     u7311:
 13172   004428  EF1C  F022         	goto	l6725
 13173   00442C                     u7310:
 13174   00442C  6C06               	negf	___awdiv@dividend^0,c
 13175   00442E  1E07               	comf	(___awdiv@dividend+1)^0,f,c
 13176   004430  B0D8               	btfsc	status,0,c
 13177   004432  2A07               	incf	(___awdiv@dividend+1)^0,f,c
 13178   004434  0E01               	movlw	1
 13179   004436  1A0B               	xorwf	___awdiv@sign^0,f,c
 13180   004438                     l6725:
 13181   004438  0E00               	movlw	0
 13182   00443A  6E0D               	movwf	(___awdiv@quotient+1)^0,c
 13183   00443C  0E00               	movlw	0
 13184   00443E  6E0C               	movwf	___awdiv@quotient^0,c
 13185   004440  5008               	movf	___awdiv@divisor^0,w,c
 13186   004442  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
 13187   004444  B4D8               	btfsc	status,2,c
 13188   004446  EF27  F022         	goto	u7321
 13189   00444A  EF29  F022         	goto	u7320
 13190   00444E                     u7321:
 13191   00444E  EF51  F022         	goto	l6747
 13192   004452                     u7320:
 13193   004452  0E01               	movlw	1
 13194   004454  6E0A               	movwf	___awdiv@counter^0,c
 13195   004456  EF31  F022         	goto	l6733
 13196   00445A                     l6731:
 13197   00445A  90D8               	bcf	status,0,c
 13198   00445C  3608               	rlcf	___awdiv@divisor^0,f,c
 13199   00445E  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
 13200   004460  2A0A               	incf	___awdiv@counter^0,f,c
 13201   004462                     l6733:
 13202   004462  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
 13203   004464  EF36  F022         	goto	u7331
 13204   004468  EF38  F022         	goto	u7330
 13205   00446C                     u7331:
 13206   00446C  EF2D  F022         	goto	l6731
 13207   004470                     u7330:
 13208   004470                     l6735:
 13209   004470  90D8               	bcf	status,0,c
 13210   004472  360C               	rlcf	___awdiv@quotient^0,f,c
 13211   004474  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
 13212   004476  5008               	movf	___awdiv@divisor^0,w,c
 13213   004478  5C06               	subwf	___awdiv@dividend^0,w,c
 13214   00447A  5009               	movf	(___awdiv@divisor+1)^0,w,c
 13215   00447C  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
 13216   00447E  A0D8               	btfss	status,0,c
 13217   004480  EF44  F022         	goto	u7341
 13218   004484  EF46  F022         	goto	u7340
 13219   004488                     u7341:
 13220   004488  EF4B  F022         	goto	l6743
 13221   00448C                     u7340:
 13222   00448C  5008               	movf	___awdiv@divisor^0,w,c
 13223   00448E  5E06               	subwf	___awdiv@dividend^0,f,c
 13224   004490  5009               	movf	(___awdiv@divisor+1)^0,w,c
 13225   004492  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
 13226   004494  800C               	bsf	___awdiv@quotient^0,0,c
 13227   004496                     l6743:
 13228   004496  90D8               	bcf	status,0,c
 13229   004498  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
 13230   00449A  3208               	rrcf	___awdiv@divisor^0,f,c
 13231   00449C  2E0A               	decfsz	___awdiv@counter^0,f,c
 13232   00449E  EF38  F022         	goto	l6735
 13233   0044A2                     l6747:
 13234   0044A2  500B               	movf	___awdiv@sign^0,w,c
 13235   0044A4  B4D8               	btfsc	status,2,c
 13236   0044A6  EF57  F022         	goto	u7351
 13237   0044AA  EF59  F022         	goto	u7350
 13238   0044AE                     u7351:
 13239   0044AE  EF5D  F022         	goto	l6751
 13240   0044B2                     u7350:
 13241   0044B2  6C0C               	negf	___awdiv@quotient^0,c
 13242   0044B4  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
 13243   0044B6  B0D8               	btfsc	status,0,c
 13244   0044B8  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
 13245   0044BA                     l6751:
 13246   0044BA  C00C  F006         	movff	___awdiv@quotient,?___awdiv
 13247   0044BE  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
 13248   0044C2  0012               	return		;funcret
 13249   0044C4                     __end_of___awdiv:
 13250                           	callstack 0
 13251                           
 13252 ;; *************** function _LCD_ShowString *****************
 13253 ;; Defined at:
 13254 ;;		line 55 in file "lcd.c"
 13255 ;; Parameters:    Size  Location     Type
 13256 ;;  lineNum         1    wreg     unsigned char 
 13257 ;;  textData        2    6[COMRAM] PTR unsigned char 
 13258 ;;		 -> runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_9(17), 
 13259 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
 13260 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
 13261 ;; Auto vars:     Size  Location     Type
 13262 ;;  lineNum         1   10[COMRAM] unsigned char 
 13263 ;;  i               1   11[COMRAM] unsigned char 
 13264 ;; Return value:  Size  Location     Type
 13265 ;;                  1    wreg      void 
 13266 ;; Registers used:
 13267 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13268 ;; Tracked objects:
 13269 ;;		On entry : 0/0
 13270 ;;		On exit  : 0/0
 13271 ;;		Unchanged: 0/0
 13272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13276 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13277 ;;Total ram usage:        6 bytes
 13278 ;; Hardware stack levels used: 1
 13279 ;; Hardware stack levels required when called: 2
 13280 ;; This function calls:
 13281 ;;		_LCD_Send
 13282 ;; This function is called by:
 13283 ;;		_main
 13284 ;;		_moveDisplay
 13285 ;;		_runADC
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           	psect	text51
 13290   0044C4                     __ptext51:
 13291                           	callstack 0
 13292   0044C4                     _LCD_ShowString:
 13293                           	callstack 27
 13294                           
 13295                           ;incstack = 0
 13296                           ;LCD_ShowString@lineNum stored from wreg
 13297   0044C4  6E0B               	movwf	LCD_ShowString@lineNum^0,c
 13298   0044C6                     
 13299                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 13300   0044C6  806B               	bsf	107,0,c	;volatile
 13301   0044C8                     l120:
 13302   0044C8  B06B               	btfsc	107,0,c	;volatile
 13303   0044CA  EF69  F022         	goto	u8721
 13304   0044CE  EF6B  F022         	goto	u8720
 13305   0044D2                     u8721:
 13306   0044D2  EF64  F022         	goto	l120
 13307   0044D6                     u8720:
 13308   0044D6                     
 13309                           ;lcd.c: 62:     SSP2IF = 0;
 13310   0044D6  9EA4               	bcf	4004,7,c	;volatile
 13311   0044D8                     
 13312                           ;lcd.c: 64:     LCD_Send(0x7c);
 13313   0044D8  0E7C               	movlw	124
 13314   0044DA  ECEF  F025         	call	_LCD_Send
 13315                           
 13316                           ;lcd.c: 66:     LCD_Send(0x80);
 13317   0044DE  0E80               	movlw	128
 13318   0044E0  ECEF  F025         	call	_LCD_Send
 13319   0044E4                     
 13320                           ;lcd.c: 68:     if(lineNum == 1){
 13321   0044E4  040B               	decf	LCD_ShowString@lineNum^0,w,c
 13322   0044E6  A4D8               	btfss	status,2,c
 13323   0044E8  EF78  F022         	goto	u8731
 13324   0044EC  EF7A  F022         	goto	u8730
 13325   0044F0                     u8731:
 13326   0044F0  EF7F  F022         	goto	l7597
 13327   0044F4                     u8730:
 13328   0044F4                     
 13329                           ;lcd.c: 69:         LCD_Send(0x80);
 13330   0044F4  0E80               	movlw	128
 13331   0044F6  ECEF  F025         	call	_LCD_Send
 13332                           
 13333                           ;lcd.c: 70:     }
 13334   0044FA  EF8B  F022         	goto	l124
 13335   0044FE                     l7597:
 13336   0044FE  0E02               	movlw	2
 13337   004500  180B               	xorwf	LCD_ShowString@lineNum^0,w,c
 13338   004502  A4D8               	btfss	status,2,c
 13339   004504  EF86  F022         	goto	u8741
 13340   004508  EF88  F022         	goto	u8740
 13341   00450C                     u8741:
 13342   00450C  EF8B  F022         	goto	l124
 13343   004510                     u8740:
 13344   004510                     
 13345                           ;lcd.c: 72:         LCD_Send(0xC0);
 13346   004510  0EC0               	movlw	192
 13347   004512  ECEF  F025         	call	_LCD_Send
 13348   004516                     l124:
 13349                           
 13350                           ;lcd.c: 75:     LCD_Send(0x40);
 13351   004516  0E40               	movlw	64
 13352   004518  ECEF  F025         	call	_LCD_Send
 13353   00451C                     
 13354                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 13355   00451C  0E00               	movlw	0
 13356   00451E  6E0C               	movwf	LCD_ShowString@i^0,c
 13357   004520                     l7607:
 13358                           
 13359                           ;lcd.c: 78:         LCD_Send(textData[i]);
 13360   004520  500C               	movf	LCD_ShowString@i^0,w,c
 13361   004522  2407               	addwf	LCD_ShowString@textData^0,w,c
 13362   004524  6E09               	movwf	??_LCD_ShowString^0,c
 13363   004526  0E00               	movlw	0
 13364   004528  2008               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 13365   00452A  6E0A               	movwf	(??_LCD_ShowString+1)^0,c
 13366   00452C  C009  FFF6         	movff	??_LCD_ShowString,tblptrl
 13367   004530  C00A  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 13368   004534  0E00               	movlw	low (__mediumconst shr (0+16))
 13369   004536  6EF8               	movwf	tblptru,c
 13370   004538  0E0F               	movlw	(high __ramtop+-1)
 13371   00453A  64F7               	cpfsgt	tblptrh,c
 13372   00453C  D003               	bra	u8757
 13373   00453E  0008               	tblrd		*
 13374   004540  50F5               	movf	tablat,w,c
 13375   004542  D005               	bra	u8750
 13376   004544                     u8757:
 13377   004544  CFF6 FFE1          	movff	tblptrl,fsr1l
 13378   004548  CFF7 FFE2          	movff	tblptrh,fsr1h
 13379   00454C  50E7               	movf	indf1,w,c
 13380   00454E                     u8750:
 13381   00454E  ECEF  F025         	call	_LCD_Send
 13382   004552                     
 13383                           ;lcd.c: 79:     }
 13384   004552  2A0C               	incf	LCD_ShowString@i^0,f,c
 13385   004554  0E0F               	movlw	15
 13386   004556  640C               	cpfsgt	LCD_ShowString@i^0,c
 13387   004558  EFB0  F022         	goto	u8761
 13388   00455C  EFB2  F022         	goto	u8760
 13389   004560                     u8761:
 13390   004560  EF90  F022         	goto	l7607
 13391   004564                     u8760:
 13392   004564                     
 13393                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 13394   004564  846B               	bsf	107,2,c	;volatile
 13395   004566                     l128:
 13396   004566  B46B               	btfsc	107,2,c	;volatile
 13397   004568  EFB8  F022         	goto	u8771
 13398   00456C  EFBA  F022         	goto	u8770
 13399   004570                     u8771:
 13400   004570  EFB3  F022         	goto	l128
 13401   004574                     u8770:
 13402   004574  0012               	return		;funcret
 13403   004576                     __end_of_LCD_ShowString:
 13404                           	callstack 0
 13405                           
 13406 ;; *************** function _LCD_Clear *****************
 13407 ;; Defined at:
 13408 ;;		line 94 in file "lcd.c"
 13409 ;; Parameters:    Size  Location     Type
 13410 ;;		None
 13411 ;; Auto vars:     Size  Location     Type
 13412 ;;		None
 13413 ;; Return value:  Size  Location     Type
 13414 ;;                  1    wreg      void 
 13415 ;; Registers used:
 13416 ;;		wreg, cstack
 13417 ;; Tracked objects:
 13418 ;;		On entry : 0/0
 13419 ;;		On exit  : 0/0
 13420 ;;		Unchanged: 0/0
 13421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13426 ;;Total ram usage:        0 bytes
 13427 ;; Hardware stack levels used: 1
 13428 ;; Hardware stack levels required when called: 2
 13429 ;; This function calls:
 13430 ;;		_LCD_Send
 13431 ;; This function is called by:
 13432 ;;		_moveDisplay
 13433 ;; This function uses a non-reentrant model
 13434 ;;
 13435                           
 13436                           	psect	text52
 13437   004AF6                     __ptext52:
 13438                           	callstack 0
 13439   004AF6                     _LCD_Clear:
 13440                           	callstack 27
 13441   004AF6                     
 13442                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
 13443   004AF6  806B               	bsf	107,0,c	;volatile
 13444   004AF8                     l143:
 13445   004AF8  B06B               	btfsc	107,0,c	;volatile
 13446   004AFA  EF81  F025         	goto	u8781
 13447   004AFE  EF83  F025         	goto	u8780
 13448   004B02                     u8781:
 13449   004B02  EF7C  F025         	goto	l143
 13450   004B06                     u8780:
 13451   004B06                     
 13452                           ;lcd.c: 97:     SSP2IF = 0;
 13453   004B06  9EA4               	bcf	4004,7,c	;volatile
 13454   004B08                     
 13455                           ;lcd.c: 99:     LCD_Send(0x7C);
 13456   004B08  0E7C               	movlw	124
 13457   004B0A  ECEF  F025         	call	_LCD_Send
 13458                           
 13459                           ;lcd.c: 100:     LCD_Send(0x80);
 13460   004B0E  0E80               	movlw	128
 13461   004B10  ECEF  F025         	call	_LCD_Send
 13462                           
 13463                           ;lcd.c: 101:     LCD_Send(0x01);
 13464   004B14  0E01               	movlw	1
 13465   004B16  ECEF  F025         	call	_LCD_Send
 13466   004B1A                     
 13467                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
 13468   004B1A  846B               	bsf	107,2,c	;volatile
 13469   004B1C                     l146:
 13470   004B1C  B46B               	btfsc	107,2,c	;volatile
 13471   004B1E  EF93  F025         	goto	u8791
 13472   004B22  EF95  F025         	goto	u8790
 13473   004B26                     u8791:
 13474   004B26  EF8E  F025         	goto	l146
 13475   004B2A                     u8790:
 13476   004B2A  0012               	return		;funcret
 13477   004B2C                     __end_of_LCD_Clear:
 13478                           	callstack 0
 13479                           
 13480 ;; *************** function _LCD_Init *****************
 13481 ;; Defined at:
 13482 ;;		line 3 in file "lcd.c"
 13483 ;; Parameters:    Size  Location     Type
 13484 ;;		None
 13485 ;; Auto vars:     Size  Location     Type
 13486 ;;		None
 13487 ;; Return value:  Size  Location     Type
 13488 ;;                  1    wreg      void 
 13489 ;; Registers used:
 13490 ;;		wreg, status,2, cstack
 13491 ;; Tracked objects:
 13492 ;;		On entry : 0/0
 13493 ;;		On exit  : 0/0
 13494 ;;		Unchanged: 0/0
 13495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13500 ;;Total ram usage:        1 bytes
 13501 ;; Hardware stack levels used: 1
 13502 ;; Hardware stack levels required when called: 2
 13503 ;; This function calls:
 13504 ;;		_LCD_Send
 13505 ;; This function is called by:
 13506 ;;		_main
 13507 ;; This function uses a non-reentrant model
 13508 ;;
 13509                           
 13510                           	psect	text53
 13511   0040D2                     __ptext53:
 13512                           	callstack 0
 13513   0040D2                     _LCD_Init:
 13514                           	callstack 28
 13515   0040D2                     
 13516                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 13517   0040D2  010F               	movlb	15	; () banked
 13518   0040D4  913B               	bcf	59,0,b	;volatile
 13519                           
 13520                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 13521   0040D6  933B               	bcf	59,1,b	;volatile
 13522                           
 13523                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 13524   0040D8  8095               	bsf	149,0,c	;volatile
 13525                           
 13526                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 13527   0040DA  8295               	bsf	149,1,c	;volatile
 13528                           
 13529                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 13530   0040DC  9092               	bcf	146,0,c	;volatile
 13531                           
 13532                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 13533   0040DE  8089               	bsf	137,0,c	;volatile
 13534   0040E0                     
 13535                           ; BSR set to: 15
 13536                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 13537   0040E0  506C               	movf	108,w,c	;volatile
 13538   0040E2  0BF0               	andlw	-16
 13539   0040E4  0908               	iorlw	8
 13540   0040E6  6E6C               	movwf	108,c	;volatile
 13541                           
 13542                           ;lcd.c: 15:     SSP2ADD = 19;
 13543   0040E8  0E13               	movlw	19
 13544   0040EA  6E6E               	movwf	110,c	;volatile
 13545   0040EC                     
 13546                           ; BSR set to: 15
 13547                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 13548   0040EC  8A6C               	bsf	108,5,c	;volatile
 13549   0040EE                     
 13550                           ; BSR set to: 15
 13551                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 13552   0040EE  0E34               	movlw	52
 13553   0040F0  6E07               	movwf	??_LCD_Init^0,c
 13554   0040F2  0EF2               	movlw	242
 13555   0040F4                     u9647:
 13556   0040F4  2EE8               	decfsz	wreg,f,c
 13557   0040F6  D7FE               	bra	u9647
 13558   0040F8  2E07               	decfsz	??_LCD_Init^0,f,c
 13559   0040FA  D7FC               	bra	u9647
 13560   0040FC                     
 13561                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 13562   0040FC  806B               	bsf	107,0,c	;volatile
 13563   0040FE                     l111:
 13564   0040FE  B06B               	btfsc	107,0,c	;volatile
 13565   004100  EF84  F020         	goto	u9001
 13566   004104  EF86  F020         	goto	u9000
 13567   004108                     u9001:
 13568   004108  EF7F  F020         	goto	l111
 13569   00410C                     u9000:
 13570   00410C                     
 13571                           ;lcd.c: 22:     SSP2IF = 0;
 13572   00410C  9EA4               	bcf	4004,7,c	;volatile
 13573   00410E                     
 13574                           ;lcd.c: 27:     LCD_Send(0x7C);
 13575   00410E  0E7C               	movlw	124
 13576   004110  ECEF  F025         	call	_LCD_Send
 13577                           
 13578                           ;lcd.c: 28:     LCD_Send(0x80);
 13579   004114  0E80               	movlw	128
 13580   004116  ECEF  F025         	call	_LCD_Send
 13581                           
 13582                           ;lcd.c: 29:     LCD_Send(0x38);
 13583   00411A  0E38               	movlw	56
 13584   00411C  ECEF  F025         	call	_LCD_Send
 13585                           
 13586                           ;lcd.c: 30:     LCD_Send(0x80);
 13587   004120  0E80               	movlw	128
 13588   004122  ECEF  F025         	call	_LCD_Send
 13589                           
 13590                           ;lcd.c: 31:     LCD_Send(0x39);
 13591   004126  0E39               	movlw	57
 13592   004128  ECEF  F025         	call	_LCD_Send
 13593                           
 13594                           ;lcd.c: 32:     LCD_Send(0x80);
 13595   00412C  0E80               	movlw	128
 13596   00412E  ECEF  F025         	call	_LCD_Send
 13597                           
 13598                           ;lcd.c: 33:     LCD_Send(0x17);
 13599   004132  0E17               	movlw	23
 13600   004134  ECEF  F025         	call	_LCD_Send
 13601                           
 13602                           ;lcd.c: 34:     LCD_Send(0x80);
 13603   004138  0E80               	movlw	128
 13604   00413A  ECEF  F025         	call	_LCD_Send
 13605                           
 13606                           ;lcd.c: 35:     LCD_Send(0x7A);
 13607   00413E  0E7A               	movlw	122
 13608   004140  ECEF  F025         	call	_LCD_Send
 13609                           
 13610                           ;lcd.c: 36:     LCD_Send(0x80);
 13611   004144  0E80               	movlw	128
 13612   004146  ECEF  F025         	call	_LCD_Send
 13613                           
 13614                           ;lcd.c: 37:     LCD_Send(0x5E);
 13615   00414A  0E5E               	movlw	94
 13616   00414C  ECEF  F025         	call	_LCD_Send
 13617                           
 13618                           ;lcd.c: 38:     LCD_Send(0x80);
 13619   004150  0E80               	movlw	128
 13620   004152  ECEF  F025         	call	_LCD_Send
 13621                           
 13622                           ;lcd.c: 39:     LCD_Send(0x6B);
 13623   004156  0E6B               	movlw	107
 13624   004158  ECEF  F025         	call	_LCD_Send
 13625                           
 13626                           ;lcd.c: 40:     LCD_Send(0x80);
 13627   00415C  0E80               	movlw	128
 13628   00415E  ECEF  F025         	call	_LCD_Send
 13629                           
 13630                           ;lcd.c: 41:     LCD_Send(0x0C);
 13631   004162  0E0C               	movlw	12
 13632   004164  ECEF  F025         	call	_LCD_Send
 13633                           
 13634                           ;lcd.c: 42:     LCD_Send(0x80);
 13635   004168  0E80               	movlw	128
 13636   00416A  ECEF  F025         	call	_LCD_Send
 13637                           
 13638                           ;lcd.c: 43:     LCD_Send(0x01);
 13639   00416E  0E01               	movlw	1
 13640   004170  ECEF  F025         	call	_LCD_Send
 13641                           
 13642                           ;lcd.c: 44:     LCD_Send(0x80);
 13643   004174  0E80               	movlw	128
 13644   004176  ECEF  F025         	call	_LCD_Send
 13645                           
 13646                           ;lcd.c: 45:     LCD_Send(0x06);
 13647   00417A  0E06               	movlw	6
 13648   00417C  ECEF  F025         	call	_LCD_Send
 13649                           
 13650                           ;lcd.c: 46:     LCD_Send(0x80);
 13651   004180  0E80               	movlw	128
 13652   004182  ECEF  F025         	call	_LCD_Send
 13653                           
 13654                           ;lcd.c: 47:     LCD_Send(0x02);
 13655   004186  0E02               	movlw	2
 13656   004188  ECEF  F025         	call	_LCD_Send
 13657   00418C                     
 13658                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 13659   00418C  846B               	bsf	107,2,c	;volatile
 13660   00418E                     l114:
 13661   00418E  B46B               	btfsc	107,2,c	;volatile
 13662   004190  EFCC  F020         	goto	u9011
 13663   004194  EFCE  F020         	goto	u9010
 13664   004198                     u9011:
 13665   004198  EFC7  F020         	goto	l114
 13666   00419C                     u9010:
 13667   00419C                     
 13668                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 13669   00419C  0E34               	movlw	52
 13670   00419E  6E07               	movwf	??_LCD_Init^0,c
 13671   0041A0  0EF2               	movlw	242
 13672   0041A2                     u9657:
 13673   0041A2  2EE8               	decfsz	wreg,f,c
 13674   0041A4  D7FE               	bra	u9657
 13675   0041A6  2E07               	decfsz	??_LCD_Init^0,f,c
 13676   0041A8  D7FC               	bra	u9657
 13677   0041AA  0012               	return		;funcret
 13678   0041AC                     __end_of_LCD_Init:
 13679                           	callstack 0
 13680                           
 13681 ;; *************** function _LCD_Send *****************
 13682 ;; Defined at:
 13683 ;;		line 85 in file "lcd.c"
 13684 ;; Parameters:    Size  Location     Type
 13685 ;;  data            1    wreg     unsigned char 
 13686 ;; Auto vars:     Size  Location     Type
 13687 ;;  data            1    5[COMRAM] unsigned char 
 13688 ;; Return value:  Size  Location     Type
 13689 ;;                  1    wreg      void 
 13690 ;; Registers used:
 13691 ;;		wreg
 13692 ;; Tracked objects:
 13693 ;;		On entry : 0/0
 13694 ;;		On exit  : 0/0
 13695 ;;		Unchanged: 0/0
 13696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13700 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13701 ;;Total ram usage:        1 bytes
 13702 ;; Hardware stack levels used: 1
 13703 ;; Hardware stack levels required when called: 1
 13704 ;; This function calls:
 13705 ;;		Nothing
 13706 ;; This function is called by:
 13707 ;;		_LCD_Init
 13708 ;;		_LCD_ShowString
 13709 ;;		_LCD_Clear
 13710 ;; This function uses a non-reentrant model
 13711 ;;
 13712                           
 13713                           	psect	text54
 13714   004BDE                     __ptext54:
 13715                           	callstack 0
 13716   004BDE                     _LCD_Send:
 13717                           	callstack 27
 13718                           
 13719                           ;incstack = 0
 13720                           ;LCD_Send@data stored from wreg
 13721   004BDE  6E06               	movwf	LCD_Send@data^0,c
 13722   004BE0                     
 13723                           ;lcd.c: 87:     SSP2BUF = data;
 13724   004BE0  C006  FF6F         	movff	LCD_Send@data,3951	;volatile
 13725   004BE4                     l134:
 13726   004BE4  B06D               	btfsc	109,0,c	;volatile
 13727   004BE6  EFF7  F025         	goto	u8641
 13728   004BEA  EFF9  F025         	goto	u8640
 13729   004BEE                     u8641:
 13730   004BEE  EFF2  F025         	goto	l134
 13731   004BF2                     u8640:
 13732   004BF2                     l137:
 13733   004BF2  AEA4               	btfss	4004,7,c	;volatile
 13734   004BF4  EFFE  F025         	goto	u8651
 13735   004BF8  EF00  F026         	goto	u8650
 13736   004BFC                     u8651:
 13737   004BFC  EFF9  F025         	goto	l137
 13738   004C00                     u8650:
 13739   004C00                     
 13740                           ;lcd.c: 90:     SSP2IF = 0;
 13741   004C00  9EA4               	bcf	4004,7,c	;volatile
 13742   004C02  0012               	return		;funcret
 13743   004C04                     __end_of_LCD_Send:
 13744                           	callstack 0
 13745                           
 13746 ;; *************** function _ISR *****************
 13747 ;; Defined at:
 13748 ;;		line 11 in file "interrupt.c"
 13749 ;; Parameters:    Size  Location     Type
 13750 ;;		None
 13751 ;; Auto vars:     Size  Location     Type
 13752 ;;  temp            1    4[COMRAM] unsigned char 
 13753 ;; Return value:  Size  Location     Type
 13754 ;;                  1    wreg      void 
 13755 ;; Registers used:
 13756 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13757 ;; Tracked objects:
 13758 ;;		On entry : 0/0
 13759 ;;		On exit  : 0/0
 13760 ;;		Unchanged: 0/0
 13761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13764 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13765 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13766 ;;Total ram usage:        5 bytes
 13767 ;; Hardware stack levels used: 1
 13768 ;; This function calls:
 13769 ;;		Nothing
 13770 ;; This function is called by:
 13771 ;;		Interrupt level 2
 13772 ;; This function uses a non-reentrant model
 13773 ;;
 13774                           
 13775                           	psect	intcode
 13776   000008                     __pintcode:
 13777                           	callstack 0
 13778   000008                     _ISR:
 13779                           	callstack 21
 13780                           
 13781                           ;incstack = 0
 13782   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13783   00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
 13784   00000E  CFDA F004          	movff	fsr2h,??_ISR+3
 13785   000012                     
 13786                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 13787   000012  A09D               	btfss	3997,0,c	;volatile
 13788   000014  EF0E  F000         	goto	i2u633_41
 13789   000018  EF10  F000         	goto	i2u633_40
 13790   00001C                     i2u633_41:
 13791   00001C  EF49  F000         	goto	i2l5925
 13792   000020                     i2u633_40:
 13793   000020  A09E               	btfss	3998,0,c	;volatile
 13794   000022  EF15  F000         	goto	i2u634_41
 13795   000026  EF17  F000         	goto	i2u634_40
 13796   00002A                     i2u634_41:
 13797   00002A  EF49  F000         	goto	i2l5925
 13798   00002E                     i2u634_40:
 13799   00002E  0100               	movlb	0	; () banked
 13800   000030  51FE               	movf	_GPIOIE& (0+255),w,b
 13801   000032  B4D8               	btfsc	status,2,c
 13802   000034  EF1E  F000         	goto	i2u635_41
 13803   000038  EF20  F000         	goto	i2u635_40
 13804   00003C                     i2u635_41:
 13805   00003C  EF49  F000         	goto	i2l5925
 13806   000040                     i2u635_40:
 13807   000040                     
 13808                           ; BSR set to: 0
 13809                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 13810   000040  A480               	btfss	128,2,c	;volatile
 13811   000042  EF25  F000         	goto	i2u636_41
 13812   000046  EF27  F000         	goto	i2u636_40
 13813   00004A                     i2u636_41:
 13814   00004A  EF44  F000         	goto	i2l380
 13815   00004E                     i2u636_40:
 13816   00004E                     
 13817                           ; BSR set to: 0
 13818                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 13819   00004E  0E03               	movlw	3
 13820   000050  6E02               	movwf	(??_ISR+1)^0,c
 13821   000052  0E08               	movlw	8
 13822   000054  6E01               	movwf	??_ISR^0,c
 13823   000056  0E77               	movlw	119
 13824   000058                     i2u966_47:
 13825   000058  2EE8               	decfsz	wreg,f,c
 13826   00005A  D7FE               	bra	i2u966_47
 13827   00005C  2E01               	decfsz	??_ISR^0,f,c
 13828   00005E  D7FC               	bra	i2u966_47
 13829   000060  2E02               	decfsz	(??_ISR+1)^0,f,c
 13830   000062  D7FA               	bra	i2u966_47
 13831   000064  F000               	nop	
 13832   000066                     
 13833                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 13834   000066  A480               	btfss	128,2,c	;volatile
 13835   000068  EF38  F000         	goto	i2u637_41
 13836   00006C  EF3A  F000         	goto	i2u637_40
 13837   000070                     i2u637_41:
 13838   000070  EF44  F000         	goto	i2l380
 13839   000074                     i2u637_40:
 13840   000074                     i2l382:
 13841   000074  B480               	btfsc	128,2,c	;volatile
 13842   000076  EF3F  F000         	goto	i2u638_41
 13843   00007A  EF41  F000         	goto	i2u638_40
 13844   00007E                     i2u638_41:
 13845   00007E  EF3A  F000         	goto	i2l382
 13846   000082                     i2u638_40:
 13847   000082                     
 13848                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 13849   000082  0E00               	movlw	0
 13850   000084  0100               	movlb	0	; () banked
 13851   000086  6FFF               	movwf	_keepStateGPIO& (0+255),b
 13852   000088                     i2l380:
 13853                           
 13854                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 13855   000088  0E9E               	movlw	158
 13856   00008A  6ECF               	movwf	207,c	;volatile
 13857   00008C  0E58               	movlw	88
 13858   00008E  6ECE               	movwf	206,c	;volatile
 13859   000090                     
 13860                           ;interrupt.c: 23:         TMR1IF = 0;
 13861   000090  909E               	bcf	3998,0,c	;volatile
 13862   000092                     i2l5925:
 13863                           
 13864                           ;interrupt.c: 26:     if(RC1IE && RC1IF && UARTIE){
 13865   000092  AA9D               	btfss	3997,5,c	;volatile
 13866   000094  EF4E  F000         	goto	i2u639_41
 13867   000098  EF50  F000         	goto	i2u639_40
 13868   00009C                     i2u639_41:
 13869   00009C  EF80  F000         	goto	i2l390
 13870   0000A0                     i2u639_40:
 13871   0000A0  AA9E               	btfss	3998,5,c	;volatile
 13872   0000A2  EF55  F000         	goto	i2u640_41
 13873   0000A6  EF57  F000         	goto	i2u640_40
 13874   0000AA                     i2u640_41:
 13875   0000AA  EF80  F000         	goto	i2l390
 13876   0000AE                     i2u640_40:
 13877   0000AE  0100               	movlb	0	; () banked
 13878   0000B0  51FD               	movf	_UARTIE& (0+255),w,b
 13879   0000B2  B4D8               	btfsc	status,2,c
 13880   0000B4  EF5E  F000         	goto	i2u641_41
 13881   0000B8  EF60  F000         	goto	i2u641_40
 13882   0000BC                     i2u641_41:
 13883   0000BC  EF80  F000         	goto	i2l390
 13884   0000C0                     i2u641_40:
 13885   0000C0                     
 13886                           ; BSR set to: 0
 13887                           ;interrupt.c: 27:         char temp = RCREG1;
 13888   0000C0  CFAE F005          	movff	4014,ISR@temp	;volatile
 13889   0000C4                     
 13890                           ; BSR set to: 0
 13891                           ;interrupt.c: 28:         static int i = 0;;interrupt.c: 30:         if(temp != '\n'){
 13892   0000C4  0E0A               	movlw	10
 13893   0000C6  1805               	xorwf	ISR@temp^0,w,c
 13894   0000C8  B4D8               	btfsc	status,2,c
 13895   0000CA  EF69  F000         	goto	i2u642_41
 13896   0000CE  EF6B  F000         	goto	i2u642_40
 13897   0000D2                     i2u642_41:
 13898   0000D2  EF77  F000         	goto	i2l5939
 13899   0000D6                     i2u642_40:
 13900   0000D6                     
 13901                           ; BSR set to: 0
 13902                           ;interrupt.c: 31:             gmail.data[i] = temp;
 13903   0000D6  0E65               	movlw	low _gmail
 13904   0000D8  25FB               	addwf	ISR@i& (0+255),w,b
 13905   0000DA  6ED9               	movwf	fsr2l,c
 13906   0000DC  0E01               	movlw	high _gmail
 13907   0000DE  21FC               	addwfc	(ISR@i+1)& (0+255),w,b
 13908   0000E0  6EDA               	movwf	fsr2h,c
 13909   0000E2  C005  FFDF         	movff	ISR@temp,indf2
 13910   0000E6                     
 13911                           ; BSR set to: 0
 13912                           ;interrupt.c: 32:             i++;
 13913   0000E6  4BFB               	infsnz	ISR@i& (0+255),f,b
 13914   0000E8  2BFC               	incf	(ISR@i+1)& (0+255),f,b
 13915                           
 13916                           ;interrupt.c: 33:         } else {
 13917   0000EA  EF7F  F000         	goto	i2l5941
 13918   0000EE                     i2l5939:
 13919                           
 13920                           ; BSR set to: 0
 13921                           ;interrupt.c: 34:             gmail.full = 1;
 13922   0000EE  0E01               	movlw	1
 13923   0000F0  0101               	movlb	1	; () banked
 13924   0000F2  6F6F               	movwf	(_gmail+10)& (0+255),b	;volatile
 13925                           
 13926                           ;interrupt.c: 35:             i = 0;
 13927   0000F4  0E00               	movlw	0
 13928   0000F6  0100               	movlb	0	; () banked
 13929   0000F8  6FFC               	movwf	(ISR@i+1)& (0+255),b
 13930   0000FA  0E00               	movlw	0
 13931   0000FC  6FFB               	movwf	ISR@i& (0+255),b
 13932   0000FE                     i2l5941:
 13933                           
 13934                           ; BSR set to: 0
 13935                           ;interrupt.c: 37:         RC1IF = 0;
 13936   0000FE  9A9E               	bcf	3998,5,c	;volatile
 13937   000100                     i2l390:
 13938   000100  C004  FFDA         	movff	??_ISR+3,fsr2h
 13939   000104  C003  FFD9         	movff	??_ISR+2,fsr2l
 13940   000108  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13941   00010A  0011               	retfie		f
 13942   00010C                     __end_of_ISR:
 13943                           	callstack 0
 13944   00010C                     
 13945                           	psect	rparam
 13946   000000                     
 13947                           	psect	temp
 13948   00005A                     btemp:
 13949                           	callstack 0
 13950   00005A                     	ds	1
 13951   000000                     int$flags	set	btemp
 13952   000000                     wtemp8	set	btemp+1
 13953   000000                     ttemp5	set	btemp+1
 13954   000000                     ttemp6	set	btemp+4
 13955   000000                     ttemp7	set	btemp+8
 13956                           
 13957                           	psect	config
 13958                           
 13959                           ; Padding undefined space
 13960   300000                     	org	3145728
 13961   300000  FF                 	db	255
 13962                           
 13963                           ;Config register CONFIG1H @ 0x300001
 13964                           ;	Oscillator Selection bits
 13965                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 13966                           ;	4X PLL Enable
 13967                           ;	PLLCFG = ON, Oscillator multiplied by 4
 13968                           ;	Primary clock enable bit
 13969                           ;	PRICLKEN = 0x1, unprogrammed default
 13970                           ;	Fail-Safe Clock Monitor Enable bit
 13971                           ;	FCMEN = 0x0, unprogrammed default
 13972                           ;	Internal/External Oscillator Switchover bit
 13973                           ;	IESO = 0x0, unprogrammed default
 13974   300001                     	org	3145729
 13975   300001  33                 	db	51
 13976                           
 13977                           ;Config register CONFIG2L @ 0x300002
 13978                           ;	unspecified, using default values
 13979                           ;	Power-up Timer Enable bit
 13980                           ;	PWRTEN = 0x1, unprogrammed default
 13981                           ;	Brown-out Reset Enable bits
 13982                           ;	BOREN = 0x3, unprogrammed default
 13983                           ;	Brown Out Reset Voltage bits
 13984                           ;	BORV = 0x3, unprogrammed default
 13985   300002                     	org	3145730
 13986   300002  1F                 	db	31
 13987                           
 13988                           ;Config register CONFIG2H @ 0x300003
 13989                           ;	Watchdog Timer Enable bits
 13990                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 13991                           ;	Watchdog Timer Postscale Select bits
 13992                           ;	WDTPS = 0xF, unprogrammed default
 13993   300003                     	org	3145731
 13994   300003  3C                 	db	60
 13995                           tosu	equ	0xFFF
 13996                           tosh	equ	0xFFE
 13997                           tosl	equ	0xFFD
 13998                           stkptr	equ	0xFFC
 13999                           pclatu	equ	0xFFB
 14000                           pclath	equ	0xFFA
 14001                           pcl	equ	0xFF9
 14002                           tblptru	equ	0xFF8
 14003                           tblptrh	equ	0xFF7
 14004                           tblptrl	equ	0xFF6
 14005                           tablat	equ	0xFF5
 14006                           prodh	equ	0xFF4
 14007                           prodl	equ	0xFF3
 14008                           indf0	equ	0xFEF
 14009                           postinc0	equ	0xFEE
 14010                           postdec0	equ	0xFED
 14011                           preinc0	equ	0xFEC
 14012                           plusw0	equ	0xFEB
 14013                           fsr0h	equ	0xFEA
 14014                           fsr0l	equ	0xFE9
 14015                           wreg	equ	0xFE8
 14016                           indf1	equ	0xFE7
 14017                           postinc1	equ	0xFE6
 14018                           postdec1	equ	0xFE5
 14019                           preinc1	equ	0xFE4
 14020                           plusw1	equ	0xFE3
 14021                           fsr1h	equ	0xFE2
 14022                           fsr1l	equ	0xFE1
 14023                           bsr	equ	0xFE0
 14024                           indf2	equ	0xFDF
 14025                           postinc2	equ	0xFDE
 14026                           postdec2	equ	0xFDD
 14027                           preinc2	equ	0xFDC
 14028                           plusw2	equ	0xFDB
 14029                           fsr2h	equ	0xFDA
 14030                           fsr2l	equ	0xFD9
 14031                           status	equ	0xFD8

Data Sizes:
    Strings     228
    Constant    68
    Data        47
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    143     160
    BANK1           256     57     216
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    moveDisplay$4160	PTR unsigned char  size(2) Largest target is 6
		 -> STR_18(CODE[1]), STR_17(CODE[6]), STR_16(CODE[5]), STR_15(CODE[4]), 
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[5]), STR_11(CODE[5]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_31(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_31(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_22(CODE[17]), STR_21(CODE[19]), STR_20(CODE[5]), STR_19(CODE[6]), 
		 -> STR_10(CODE[5]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_22(CODE[17]), STR_21(CODE[19]), STR_20(CODE[5]), STR_19(CODE[6]), 
		 -> STR_10(CODE[5]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), STR_18(CODE[1]), 
		 -> STR_17(CODE[6]), STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[5]), STR_11(CODE[5]), gmail(BANK1[11]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), STR_18(CODE[1]), 
		 -> STR_17(CODE[6]), STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[5]), STR_11(CODE[5]), gmail(BANK1[11]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[4]), STR_23(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[4]), STR_23(CODE[4]), 

    __rem_pio2f@y	PTR  size(2) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_22(CODE[17]), STR_10(CODE[5]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(BANK0[12]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_22(CODE[17]), STR_21(CODE[19]), STR_20(CODE[5]), STR_19(CODE[6]), 
		 -> STR_10(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_22(CODE[17]), STR_21(CODE[19]), STR_20(CODE[5]), STR_19(CODE[6]), 
		 -> STR_10(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_22(CODE[17]), STR_21(CODE[19]), STR_20(CODE[5]), STR_19(CODE[6]), 
		 -> STR_10(CODE[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S3635$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(BANK0[12]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_18(CODE[1]), STR_17(CODE[6]), 
		 -> STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> STR_12(CODE[5]), STR_11(CODE[5]), gmail(BANK1[11]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ?_sprintf(BANK0[2]), STR_18(CODE[1]), 
		 -> STR_17(CODE[6]), STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[5]), STR_11(CODE[5]), gmail(BANK1[11]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(BANK0[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(BANK0[12]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> NULL(NULL[0]), sprintf@f(BANK0[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_21(CODE[19]), STR_20(CODE[5]), STR_19(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> runADC@text(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), moveDisplay@menuItem1(BANK1[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    S3540$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S3540$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED6_Control(), LED5_Control(), LED4_Control(), LED3_Control(), 
		 -> LED2_Control(), LED1_Control(), 

    runGPIO@F6960	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED6_Control(), LED5_Control(), LED4_Control(), LED3_Control(), 
		 -> LED2_Control(), LED1_Control(), 

    moveDisplay@menuItems	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_18(CODE[1]), STR_17(CODE[6]), STR_16(CODE[5]), STR_15(CODE[4]), 
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[5]), STR_11(CODE[5]), 

    moveDisplay@F6948	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_18(CODE[1]), STR_17(CODE[6]), STR_16(CODE[5]), STR_15(CODE[4]), 
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[5]), STR_11(CODE[5]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> runADC@text(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), moveDisplay@menuItem1(BANK1[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_runUART
    _runPWM->___awdiv
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _runDAC->___fltol
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_moveDisplay
    _runUART->_printf
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___sindf->___flneg
    ___rem_pio2f->___flneg
    ___cosdf->___fladd
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  347737
                                             53 BANK1      4     4      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGPIO
                             _runPWM
                            _runUART
 ---------------------------------------------------------------------------------
 (1) _runUART                                              3     3      0   57070
                                             83 COMRAM     1     1      0
                                            122 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _runPWM                                               4     4      0     944
                                             13 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             33    33      0     501
                                              6 COMRAM    32    32      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              13    13      0  156112
                                            122 BANK0     13    13      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                38    34      4   78048
                                             76 BANK0     38    34      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                            ___flsub
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   16102
                                             36 BANK0     32    28      4
                            ___fladd
                            ___flmul
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         44    38      6   28235
                                             36 BANK0     40    34      6
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   16096
                                              4 BANK0     28    24      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     4      4   57033
                                            116 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0     130
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   71819
                                              0 BANK1     32    32      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         54    53      1   59732
                                            142 BANK0      1     0      1
                                              0 BANK1     53    53      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             28    16     12   57618
                                            116 BANK0     26    14     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   56748
                                            108 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           21    15      6   55957
                                             89 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2462
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     5      4    1462
                                             11 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     842
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   41226
                                             36 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     4      4     497
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             69 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             81 COMRAM     2     2      0
                                              4 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    8507
                                              4 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6862
                                             69 COMRAM    12     4      8
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     875
                                             32 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8273
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    7142
                                             33 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4727
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1428
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     805
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    1306
                                              6 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      31
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              6 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
             _strlen
           _strncmp
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
         ___flneg (ARG)
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *
   _runPWM
     ___awdiv
   _runUART
     _printf

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     39      D8       7       84.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8F      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRlllllh     21      0       0      52        0.0%
BITBIGSFRlllllh     10      0       0      51        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRlllllh      C      0       0      53        0.0%
BITBIGSFRhhllhl      A      0       0      44        0.0%
BITBIGSFRhll         7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      45        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRllh         5      0       0      48        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhllhh      1      0       0      43        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D1      54        0.0%
DATA                 0      0     1D1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Apr 29 15:24:49 2024

              ___fldiv@aexp 0045                ___fldiv@bexp 0044                ___fldiv@sign 003D  
                        _C0 FF07                          _C1 FF03                          _C2 FEFF  
                        _C3 FEFB                          l50 29FA                          l60 2AA2  
                        l55 2A4E                          l58 2BB4                          _S1 FEE3  
                        _S2 FEDF                          _S3 FEDB                          _S4 FED7  
              ___awdiv@sign 000B         ___wmul@multiplicand 0008                         l111 40FE  
                       l120 44C8                         l113 410C                         l114 418E  
                       l122 44D6                         l131 4574                         l140 4C02  
                       l124 4516                         l117 41AA                         l134 4BE4  
                       l143 4AF8                         l127 4564                         l231 4AA2  
                       l215 28CA                         l128 4566                         l232 4AA8  
                       l137 4BF2                         l145 4B06                         l146 4B1C  
                       l250 4C06                         l234 4AB6                         l226 2966  
                       l218 28CC                         l322 4C5E                         l139 4C00  
                       l235 4ABA                         l331 4C34                         l149 4B2A  
                       l253 4C18                         l229 4A94                         l325 4C50  
                       l430 3102                         l334 4C26                         l350 3A80  
                       l328 4C42                         l344 3A5A                         l425 321E  
                       l337 4C6C                         l435 320A                         l427 3068  
                       l349 3A6C                         l541 43CA                         l438 3230  
                       l279 3CE8                         l439 3232                         l480 3AB0  
                       l544 43EC                         l536 43DC                         l481 3BAE  
                       l545 43FE                         l548 4BDC                         l484 3B68  
                       l813 3EAE                         l493 3B9C                         l485 3B2A  
                       l822 4AF4                         l478 3AA2                         l807 46CE  
                       l497 3BC6                         l818 3EF4                         l845 3DF0  
                       l792 4624                         l779 44C2                         _GIE 7F97  
                       _PR2 0FBB                         _ISR 0008                         _abs 4A3E  
                       _pad 46D0                ___awmod@sign 000B                         prod 0FF3  
                       tosl 0FFD                         wreg 0FE8                  _TXSTA1bits 0FAC  
              ___flmul@aexp 0021                ___flmul@bexp 0026                ___flmul@sign 0020  
              ___flmul@temp 002B                ___flmul@prod 0027                        ?_ISR 0001  
                      ISR@i 00FB                ___fltol@exp1 0053                        l1102 149E  
                      l1103 148C                        l1130 266A                        l1210 3520  
                      l1203 3488                        ?_abs 000C                        l1132 24CA  
                      l1141 2510                        l1301 04A2                        l1118 49B8  
                      l1206 35E4                        l1143 2588                        l1135 248E  
                      l1303 02E8                        l1144 2576                        l1217 357C  
                      l1162 1F6C                        l1226 48D0                        l1171 21DA  
                      l1331 08EC                        l1172 21C8                        l1076 12B4  
                      l1093 13CE                        l1085 1584                        l1077 12A2  
                      l1430 4A74                        l1166 22D0                        l1078 1268  
                      l1263 4714                        l1415 4830                        l1503 0B0A  
                      l1433 4A7C                        l1273 362C                        l1169 2162  
                      l1425 3FF2                        l1266 4756                        l1442 2F70  
                      l1450 47CE                        l1370 433A                        l1362 390A  
                      l1346 37FA                        l1275 3634                        l1179 2292  
                      l1507 10C2                        l1268 4778                        l1276 367A  
                      l1348 3802                        l1453 47DE                        l1357 38C2  
                      l1541 3430                        l1366 4332                        l1471 4274  
                      l1287 3778                        l1439 302C                        l1561 1CD2  
                      l1298 0B08                        l1386 1A16                        l1459 4970  
                      l1573 2E16                        l1590 4920                        l1486 4BB6  
                      l1479 49FC                        l1559 1EA6                        l1584 4A3C  
                      l1594 40D0                        l1578 4B5E                        l7001 366E  
                      l6203 4C06                        l6211 41D0                        l7011 36C4  
                      l7003 3676                        l6205 4C14                        l6213 41DA  
                      l7021 3718                        l7013 36CA                        l7005 3682  
                      l6301 120A                        l6221 10C4                        l7101 02FE  
                      ?_pad 0017                        l6215 41F8                        l6207 41AC  
                      l7023 3732                        l7015 36D0                        l7007 368C  
                      l6311 1282                        l6303 1234                        l6231 1102  
                      l6223 10D2                        l7111 03F4                        l7103 0332  
                      l6217 422E                        l6209 41BE                        l7025 3742  
                      l7009 3692                        l7017 36EC                        l6401 1514  
                      l6321 12C2                        l6313 1286                        l6305 1250  
                      l6241 1132                        l6233 1112                        l6225 10E0  
                      l7201 091C                        l7121 04AA                        l7113 0428  
                      l7105 0370                        l7041 0138                        l7033 0110  
                      l8001 268C                        l7027 3748                        l7019 3706  
                      l6411 155C                        l6403 1524                        l6331 1304  
                      l6323 12D2                        l6315 1294                        l6307 1260  
                      l6251 115C                        l6243 1144                        l6235 1114  
                      l6227 10E2                        l7211 0942                        l7203 0920  
                      l7131 04DC                        l7123 04B8                        l7115 0430  
                      l7107 03A2                        l7051 018E                        l7043 015C  
                      l7035 0116                        l8011 26AA                        l8003 268E  
                      l7029 3758                        l6501 2442                        l6413 155E  
                      l6405 1544                        l6341 1332                        l6333 1312  
                      l6317 1296                        l6309 1276                        l6253 116C  
                      l6261 1196                        l6245 1146                        l6229 10F2  
                      l6237 111C                        l7221 0976                        l7213 0948  
                      l7205 0926                        l7133 04EE                        l7141 052E  
                      l7125 04C4                        l7109 03E0                        l7061 01DE  
                      l7053 019A                        l7045 0166                        l7037 0126  
                      l7301 42A2                        l8021 26DC                        l8013 26AC  
                      l8005 2690                        l8101 29A2                        l6423 49BA  
                      l6511 248C                        l6503 2452                        l6415 1564  
                      l6407 1548                        l6351 139E                        l6343 133C  
                      l6335 131E                        l6327 12E6                        l6319 12A0  
                      l6271 11CE                        l6263 11A6                        l6255 117C  
                      l6247 114C                        l6239 112C                        l7223 097C  
                      l7207 092E                        l7215 094E                        l7231 0A14  
                      l7151 0616                        l7143 0536                        l7135 04FC  
                      l7127 04CE                        l7119 0470                        l7071 0212  
                      l7063 01E2                        l7055 01A2                        l7047 016E  
                      l7039 0134                        l6431 4BB8                        l7303 42DC  
                      l7311 401E                        l8031 2824                        l8023 272C  
                      l8015 26AE                        l8007 26A2                        l8111 29B4  
                      l8103 29A4                        l6425 49C6                        l6521 24DA  
                      l6513 2498                        l6505 245A                        l6441 22EC  
                      l6601 1F36                        l6417 1572                        l6409 1556  
                      l6353 13AE                        l6337 1322                        l6329 12F6  
                      l6345 1342                        l6281 11E2                        l6273 11D2  
                      l6265 11B8                        l6257 118C                        l6249 115A  
                      l7241 0A94                        l7233 0A32                        l7225 09D4  
                      l7217 0960                        l7209 093E                        l7161 06D4  
                      l7153 064A                        l7145 0546                        l7137 0514  
                      l7129 04D6                        l7081 026E                        l7065 01E8  
                      l7049 017E                        l7057 01A6                        l6433 4BD4  
                      l7305 42FC                        l7321 4070                        l7401 1666  
                      l8041 28EE                        l8033 288C                        l8025 273E  
                      l8017 26B0                        l8009 26A8                        l8121 2A08  
                      l8113 29C6                        l8105 29A6                        l6427 49D8  
                      l6523 24F0                        l6531 2520                        l6515 24B6  
                      l6507 246A                        l6451 2320                        l6443 22EE  
                      l6611 1F8C                        l6603 1F46                        l6419 1574  
                      l6371 1430                        l6363 1408                        l6347 1368  
                      l6355 13BE                        l6339 1330                        l6291 11F6  
                      l6283 11E6                        l6275 11D6                        l6267 11C6  
                      l6259 118E                        l7251 0AE8                        l7243 0AA2  
                      l7235 0A4E                        l7227 0A08                        l7219 0972  
                      l7171 0770                        l7163 06EA                        l7147 055A  
                      l7155 0650                        l7139 0526                        l7083 0274  
                      l7067 01F0                        l7059 01CC                        l7075 0232  
                      l7307 430A                        l7323 4082                        l7315 402A  
                      l7411 16CE                        l7403 1670                        l7331 3444  
                      l8051 2924                        l8043 28FC                        l8027 2798  
                      l8019 26CC                        l8131 2A5C                        l8115 29D4  
                      l8123 2A1A                        l8107 29AA                        l6429 49DC  
                      l6533 252E                        l6525 24F6                        l6517 24B8  
                      l6509 247E                        l6461 2352                        l6445 22FE  
                      l6453 2328                        l6437 22D2                        l6701 22C0  
                      l6621 1FCC                        l6605 1F56                        l6373 1438  
                      l6365 1412                        l6357 13E4                        l6349 139C  
                      l6381 145C                        l6293 11FA                        l6285 11EA  
                      l6277 11DA                        l6269 11CA                        l7245 0ABA  
                      l7237 0A56                        l7229 0A10                        l7173 07C6  
                      l7181 0818                        l7165 071C                        l7157 066E  
                      l7149 05BE                        l7085 027C                        l7077 0258  
                      l7093 0298                        l7069 0208                        l7261 37A6  
                      l7325 40AC                        l7317 4038                        l7309 3FF4  
                      l7421 1764                        l7413 16EA                        l7405 1694  
                      l7341 34C2                        l7333 3452                        l8053 292A  
                      l8045 2902                        l8037 2898                        l8029 2800  
                      l8061 2954                        l8141 2AB4                        l8125 2A28  
                      l8133 2A6E                        l8117 29EC                        l8109 29B0  
                      l6711 4400                        l6543 2598                        l6551 25E0  
                      l6535 2532                        l6527 2500                        l6519 24C8  
                      l6471 2386                        l6463 2354                        l6455 2338  
                      l6447 230E                        l6439 22DE                        l6631 2016  
                      l6623 1FD8                        l6615 1FA0                        l6607 1F5C  
                      l6391 14AE                        l6383 1460                        l6375 143C  
                      l6367 1420                        l6359 13F4                        l6295 11FE  
                      l6287 11EE                        l6279 11DE                        l7247 0ACA  
                      l7239 0A64                        l7191 084A                        l7183 0828  
                      l7175 07CC                        l7167 072C                        l7159 06A2  
                      l7095 02B2                        l7079 026A                        l7263 37AE  
                      l7255 377A                        l7319 4054                        l7431 17FA  
                      l7423 1788                        l7415 1706                        l7407 16A2  
                      l7351 3516                        l7343 34CA                        l7335 3498  
                      l8055 2938                        l8047 2910                        l8039 28DA  
                      l8143 2AD0                        l8135 2A7C                        l8127 2A40  
                      l8071 2982                        l7513 4BE0                        l7601 451C  
                      l6721 442C                        l6713 4404                        l6561 264A  
                      l6553 25FA                        l6545 25A4                        l6537 2540  
                      l6529 250E                        l6481 23CC                        l6465 2364  
                      l6473 238E                        l6457 233E                        l6449 231E  
                      l6801 46C6                        l6641 2068                        l6633 2022  
                      l6625 1FF0                        l6617 1FAC                        l6609 1F7C  
                      l6393 14BA                        l6385 146E                        l6377 144C  
                      l6369 1422                        l6297 1202                        l6289 11F2  
                      l6705 4972                        l7249 0AE0                        l7193 08C4  
                      l7185 0830                        l7177 0800                        l7169 073C  
                      l7281 3866                        l7273 3824                        l7265 37C2  
                      l7257 378C                        l7441 1864                        l7433 180A  
                      l7425 17BE                        l7417 174C                        l7409 16BE  
                      l7521 4826                        l7361 358C                        l7353 3552  
                      l7345 34D6                        l7337 34AE                        l7329 3434  
                      l7505 4B2C                        l8057 293E                        l8049 2916  
                      l8161 2B34                        l8153 2B02                        l8145 2AD4  
                      l8137 2A94                        l8081 298E                        l8073 2984  
                      l7611 4554                        l6731 445A                        l6723 4434  
                      l6715 4412                        l6563 2658                        l6555 2610  
                      l6547 25B2                        l6539 256E                        l6491 23F4  
                      l6483 23D0                        l6475 239E                        l6467 2374  
                      l6459 2344                        l6803 46CC                        l6811 3E30  
                      l6651 20E6                        l6643 2078                        l6635 2032  
                      l6627 1FFC                        l6619 1FB6                        l6395 14C8  
                      l6387 1484                        l6379 144E                        l6299 1206  
                      l6707 4984                        l7195 08E4                        l7187 0836  
                      l7179 0814                        l7099 02F8                        l7291 38D4  
                      l7283 389C                        l7275 3838                        l7267 37CA  
                      l7259 3794                        l7443 186C                        l7451 18B0  
                      l7427 17E2                        l7515 47E0                        l7371 35D4  
                      l7363 3590                        l7355 355E                        l7347 3508  
                      l7507 4B4C                        l8059 2942                        l8155 2B1E  
                      l8147 2ADE                        l8091 2998                        l8083 2990  
                      l8075 2986                        l8067 2968                        l7613 4AF6  
                      l6741 4494                        l6733 4462                        l6725 4438  
                      l6717 441A                        l6901 4A58                        l6565 265E  
                      l6557 262A                        l6549 25DC                        l6477 23B4  
                      l6469 2384                        l6821 3E9C                        l6813 3E5E  
                      l6661 2160                        l6653 211C                        l6645 2094  
                      l6637 203E                        l6629 2008                        l6581 1EC4  
                      l6397 1502                        l7197 08FE                        l7189 083E  
                      l7293 38E8                        l7285 38A0                        l7277 383C  
                      l7269 37D8                        l7461 1962                        l7453 18D0  
                      l7445 1874                        l7429 17F0                        l7437 1842  
                      l7381 15C4                        l7517 47EC                        l7365 35B4  
                      l7357 356C                        l7349 350A                        l7621 4A8E  
                      l7509 4B4E                        l7533 1A18                        l7525 2BE6  
                      l7701 0F2E                        l8165 2B3C                        l8149 2AFA  
                      l8173 2B60                        l8093 299A                        l8085 2992  
                      l8077 2988                        l8069 2980                        l7615 4B08  
                      l7607 4520                        l6751 44BA                        l6743 4496  
                      l6735 4470                        l6727 4440                        l6719 441E  
                      l6567 2660                        l6559 2646                        l6495 2408  
                      l6479 23C4                        l6487 23E4                        l6823 3EEC  
                      l6815 3E6E                        l6807 3DF2                        l6671 21C0  
                      l6663 2172                        l6655 212A                        l6647 20A0  
                      l6639 204E                        l6591 1F0A                        l6583 1ED4  
                      l6575 1EA8                        l6831 4AD4                        l6399 1504  
                      l6911 3F88                        l6903 3EF6                        l7199 090C  
                      l7295 38EC                        l7287 38A4                        l7279 385A  
                      l7463 1982                        l7455 1904                        l7471 19DC  
                      l7439 1852                        l7383 15C8                        l7375 1586  
                      l7519 480A                        l7367 35C4                        l7359 358A  
                      l7623 4A90                        l7551 1BB4                        l7543 1AE0  
                      l7535 1A38                        l7711 0FC2                        l7631 0B7A  
                      l8175 2BB6                        l8167 2B58                        l8159 2B26  
                      l8095 299C                        l8087 2994                        l8079 298C  
                      l7617 4B1A                        l7609 4552                        l6745 449C  
                      l6737 4476                        l6729 4452                        l6761 4590  
                      l6497 2422                        l6489 23F4                        l6825 3EF2  
                      l6817 3E7C                        l6809 3E20                        l6681 222E  
                      l6665 2180                        l6657 2148                        l6649 20BC  
                      l6593 1F10                        l6585 1EE4                        l6577 1EB4  
                      l6833 4AE4                        l6921 3FEA                        l6905 3F16  
                      l7297 4276                        l7449 187C                        l7393 15F6  
                      l7385 15D6                        l7377 15AA                        l7801 3C48  
                      l7369 35D2                        l7529 3234                        l7553 1C0C  
                      l7545 1AFE                        l7537 1A96                        l7705 0F66  
                      l7641 0BEA                        l7633 0B90                        l7625 0B2A  
                      l8177 2BC8                        l8097 299E                        l8089 2996  
                      l6739 448C                        l6747 44A2                        l6771 45C4  
                      l6763 4594                        l6755 4576                        l6499 2432  
                      l6819 3E8E                        l6691 2296                        l6675 21EA  
                      l6683 2232                        l6667 2184                        l6659 2152  
                      l6595 1F16                        l6587 1EF4                        l6579 1EC2  
                      l6851 3D56                        l6843 3D16                        l6907 3F54  
                      l6915 3F94                        l6931 4798                        l7299 427E  
                      l7459 1938                        l7387 15D8                        l7395 162A  
                      l7379 15B8                        l7475 19EE                        l7803 3CC8  
                      l7619 4A80                        l7571 1DEC                        l7555 1C6E  
                      l7547 1B22                        l7563 1CDE                        l7539 1AD4  
                      l8451 1088                        l7715 0FEA                        l7707 0F9A  
                      l7643 0C08                        l7635 0BA4                        l7627 0B5A  
                      l8179 2BDA                        l8099 29A0                        l6749 44B2  
                      l6781 45FE                        l6773 45CC                        l6765 45A2  
                      l6757 457A                        l6693 22A6                        l6685 224C  
                      l6677 21F6                        l6669 2192                        l6597 1F24  
                      l6589 1EFA                        l6829 4ABC                        l6861 3D86  
                      l6853 3D64                        l6845 3D40                        l6837 3CEA  
                      l6917 3FA6                        l6909 3F7C                        l6941 2EB2  
                      l6933 2E18                        l6925 49FE                        l7469 19B0  
                      l8461 1892                        l7397 163C                        l7389 15EA  
                      l7805 3CD6                        l7741 4B9A                        l7581 1E8A  
                      l7573 1E44                        l7565 1D02                        l7557 1C80  
                      l7549 1B8E                        l8453 10B4                        l7725 1062  
                      l7661 0CF8                        l7645 0C1A                        l7653 0C8A  
                      l7629 0B5C                        l7821 393E                        l7901 43FA  
                      l7591 44D8                        l6775 45DA                        l6783 4604  
                      l6767 45AA                        l6759 4588                        l6791 4626  
                      l6695 22B4                        l6687 2260                        l6679 2204  
                      l6599 1F26                        l6871 3DB0                        l6863 3D90  
                      l6847 3D42                        l6839 3D02                        l6951 2FD0  
                      l6935 2E38                        l6927 4A0E                        l8463 194C  
                      l7399 1658                        l7751 48A4                        l7807 3CE4  
                      l7575 1E58                        l7567 1D6E                        l7559 1CB6  
                      l8455 1096                        l7719 1026                        l7671 0DD2  
                      l7663 0D44                        l7655 0CBE                        l7647 0C4E  
                      l7639 0BCC                        l7831 395E                        l7823 3940  
                      l7911 3A9E                        l7903 43FC                        l8447 2B76  
                      l7593 44E4                        l6785 4614                        l6777 45F0  
                      l6769 45BC                        l6881 46D0                        l6793 4654  
                      l6697 22B6                        l6689 227A                        l6873 3DC0  
                      l6849 3D52                        l6953 2FE4                        l6945 2F24  
                      l6937 2E90                        l6929 477A                        l6961 4922  
                      l8465 19CE                        l7753 48C0                        l7745 4882  
                      l8457 3C2A                        l7569 1D94                        l7673 0DF0  
                      l7665 0D8C                        l8449 28AC                        l7761 4C38  
                      l7841 399A                        l7833 3970                        l7825 3942  
                      l7817 390C                        l7921 3B04                        l7913 3AA0  
                      l7771 40E0                        l7595 44F4                        l7587 44C6  
                      l6787 461C                        l6779 45F8                        l6891 4720  
                      l6883 46DE                        l6795 4664                        l6699 22BC  
                      l6875 3DD0                        l6859 3D7C                        l6955 300C  
                      l6947 2F60                        l6939 2EA4                        l6963 4936  
                      l6971 4956                        l8459 161C                        l7747 4894  
                      l7739 4B90                        l7691 0E84                        l7675 0E02  
                      l7683 0E3A                        l7659 0CE6                        l7763 4C2A  
                      l7851 3A56                        l7843 39FE                        l7835 3992  
                      l7827 394A                        l7819 3936                        l7931 3B52  
                      l7923 3B1C                        l7915 3ACE                        l7907 3A82  
                      l7781 418C                        l7773 40EC                        l7597 44FE  
                      l7589 44C6                        l6893 4734                        l6885 46F2  
                      l6797 4692                        l6877 3DE0                        l6869 3DA4  
                      l6957 301C                        l6949 2F94                        l6965 4942  
                      l6973 48D2                        l7749 489C                        l7693 0EBC  
                      l7669 0DB4                        l7757 4C54                        l7765 4C1C  
                      l7853 3A7C                        l7845 3A02                        l7829 3954  
                      l7933 3B62                        l7917 3ADA                        l7909 3A84  
                      l7861 4348                        l7783 419C                        l7775 40EE  
                      l7599 4510                        l6895 4738                        l6887 4700  
                      l6991 3620                        l6983 35E6                        l6799 46A2  
                      l6967 4946                        l6975 48DE                        l7791 3BF6  
                      l7695 0EF0                        l7767 4C62                        l7759 4C46  
                      l7847 3A1E                        l7943 3BAA                        l7927 3B38  
                      l7935 3B68                        l7919 3AF6                        l7871 4356  
                      l7863 434A                        l7777 40FC                        l7769 40D2  
                      l6897 4764                        l6889 470C                        l6993 363C  
                      l6985 35FA                        l6969 4952                        l6977 48E2  
                      l7793 3BFC                        l7785 3BCC                        l7961 3054  
                      l7953 302E                        l7689 0E72                        l7849 3A36  
                      l7945 3BBE                        l7937 3B76                        l7929 3B4A  
                      l7881 4378                        l7873 4358                        l7865 4350  
                      l7857 433C                        l7779 410E                        l6899 4A3E  
                      l6995 364C                        l6987 360A                        l6979 4914  
                      l7795 3C0C                        l7787 3BD0                        l7971 30F8  
                      l7963 305E                        l7955 3036                        l7699 0F18  
                      l7947 3BC2                        l7939 3B8E                        l7891 43BC  
                      l7883 437A                        l7875 435A                        l7867 4352  
                      l7859 433E                        l6997 3652                        l6989 3612  
                      l7789 3BE6                        l7981 31C8                        l7973 3100  
                      l7965 3066                        l7957 3046                        l7949 3BC4  
                      l7885 4390                        l7877 435C                        l7869 4354  
                      l6999 3662                        l7799 3C12                        l7991 3218  
                      l7983 31D6                        l7975 3110                        l7967 3076  
                      l7959 3048                        l7895 43D8                        l7887 4396  
                      l7879 4366                        l7985 31E4                        l7977 3128  
                      l7969 308E                        l7993 266C                        l7897 43F2  
                      l7889 43A4                        l7987 31FC                        l7979 3192  
                      l7995 2680                        l7899 43F8                        l7997 2688  
                      l7999 268A                        STR_1 FF61                        STR_2 FF3F  
                      STR_3 FF50                        STR_4 FFA5                        STR_5 FF72  
                      STR_6 FF3F                        STR_7 FF94                        STR_8 FF83  
                      STR_9 FFB6                        u7000 24F0                        u7001 24EC  
                      u7010 250E                        u7011 250A                        _PEIE 7F96  
                      u7100 2658                        u7020 252E                        u7101 2654  
                      u7021 252A                        u7030 2540                        u7110 1EC2  
                      u7031 253C                        u7111 1EBE                        u7040 256E  
                      u7200 2160                        u7120 1ED4                        u8000 0258  
                      u7041 256A                        u7201 215C                        u7121 1ED0  
                      u8001 0254                        u7050 2584                        u7210 2180  
                      u7130 1EE4                        u8010 026A                        u7051 2580  
                      u7211 217C                        u7131 1EE0                        u8011 0266  
                      u7300 4412                        u7060 2598                        u7220 2192  
                      u7140 1F24                        u6500 1102                        u8100 04FC  
                      u8020 02E4                        u7301 440E                        u7061 2594  
                      u7221 218E                        u7141 1F20                        u6501 10FE  
                      u8101 04F8                        u8021 02E0                        u7310 442C  
                      u6430 4C14                        u7070 25B2                        u7230 21C0  
                      u7150 1F36                        u6510 1144                        u8110 0526  
                      u8030 0370                        u7311 4428                        u6431 4C10  
                      u7071 25AE                        u7231 21BC                        u7151 1F32  
                      u6511 1140                        u8111 0522                        u8031 036C  
                      u9000 410C                        u7320 4452                        u7400 45F0  
                      u6440 41BE                        u7080 25FA                        u7240 21D6  
                      u7160 1F46                        u6600 1276                        u6520 115A  
                      u8200 090C                        u8120 066E                        u8040 03A2  
                      u9001 4108                        u7321 444E                        u7401 45EC  
                      u6441 41BA                        u7081 25F6                        u7241 21D2  
                      u7161 1F42                        u6601 1272                        u6521 1156  
                      u8201 0908                        u8121 066A                        u8041 039E  
                      u9010 419C                        u7330 4470                        u7410 4614  
                      u6450 41D0                        u7090 262A                        u7250 21EA  
                      u7170 1F7C                        u6610 1294                        u6530 116C  
                      u8210 0960                        u8130 06D4                        u8050 03E0  
                      u9011 4198                        u7331 446C                        u7411 4610  
                      u6451 41CC                        u7091 2626                        u7251 21E6  
                      u7171 1F78                        u6611 1290                        u6531 1168  
                      u8211 095C                        u8131 06D0                        u8051 03DC  
                      u7340 448C                        u6460 41F8                        u7420 4654  
                      u7260 2204                        u7180 1F8C                        u7500 4AD4  
                      u6700 13E4                        u6620 12B4                        u6540 117C  
                      u8220 0A32                        u8140 071C                        u8060 046C  
                      u8300 37F6                        u9100 39FC                        u7341 4488  
                      u6461 41F4                        u7421 4650                        u7261 2200  
                      u7181 1F88                        u7501 4AD0                        u6701 13E0  
                      u6621 12B0                        u6541 1178                        u8221 0A2E  
                      u8141 0718                        u8061 0468                        u8301 37F2  
                      u9021 3BDA                        u7350 44B2                        u6470 422E  
                      u7430 4692                        u7270 224C                        u7190 2106  
                      u6710 13F4                        u6630 12C2                        u6550 11B8  
                      u7510 3D02                        u8230 0A4E                        u8150 072C  
                      u8070 04A2                        u8310 3820                        u9030 3BF6  
                      u9110 3A1E                        u7351 44AE                        u6471 422A  
                      u7431 468E                        u7271 2248                        u6711 13F0  
                      u6631 12BE                        u6551 11B4                        u7511 3CFE  
                      u8231 0A4A                        u8151 0728                        u8071 049E  
                      u8311 381C                        u9031 3BF2                        u9111 3A1A  
                      u7360 4588                        u7600 4756                        u7440 46C6  
                      u7280 227A                        u6800 14C8                        u6720 1420  
                      u6640 12D2                        u6560 11C6                        u6480 10E0  
                      u7520 3D36                        u8240 0AB4                        u8160 07C6  
                      u8080 04B8                        u8320 385A                        u8400 4054  
                      u9040 3C0C                        u9120 3A56                        u9200 3B04  
                      u7361 4584                        u7601 4752                        u7441 46C2  
                      u7281 2276                        u6801 14C4                        u6721 141C  
                      u6641 12CE                        u6561 11C2                        u6481 10DC  
                      u8241 0AAE                        u8161 07C2                        u8081 04B4  
                      u8321 3856                        u8401 4050                        u9041 3C08  
                      u9121 3A52                        u9201 3B00                        u7370 45A2  
                      u7610 4764                        u7450 3E20                        u7290 22B4  
                      u6810 1502                        u6730 1430                        u6650 1304  
                      u6570 1234                        u6490 10F2                        u7530 3D64  
                      u8250 0AB6                        u8170 0814                        u8090 04EE  
                      u8330 3888                        u8410 4070                        u9130 3A6C  
                      u9210 3B2A                        u7371 459E                        u7611 4760  
                      u7451 3E1C                        u7291 22B0                        u7195 20FC  
                      u6811 14FE                        u6731 142C                        u6651 1300  
                      u6571 1230                        u6491 10EE                        u7531 3D60  
                      u8171 0810                        u8091 04EA                        u8411 406C  
                      u9131 3A68                        u9051 3968                        u9211 3B26  
                      u7380 45BC                        u7620 4A58                        u6900 230E  
                      u7460 3E5E                        u6820 1514                        u6740 144C  
                      u6660 1312                        u6580 124C                        u7540 3D78  
                      u7700 4A3C                        u8260 0ACA                        u8180 08C4  
                      u8340 38C2                        u8420 4082                        u8500 357C  
                      u9300 3076                        u9220 3B38                        u9140 4378  
                      u7381 45B8                        u7621 4A54                        u6901 230A  
                      u7461 3E5A                        u6821 1510                        u6741 1448  
                      u6661 130E                        u6581 1246                        u7541 3D74  
                      u7525 3D2C                        u7701 4A38                        u8261 0AC6  
                      u8181 08C0                        u8341 38BE                        u8421 407E  
                      u8501 3578                        u9301 3072                        u9061 397A  
                      u9221 3B34                        u9141 4374                        u7390 45DA  
                      u6910 2352                        u7470 3E7C                        u6830 1524  
                      u6750 145C                        u6670 1330                        u6590 124E  
                      u7550 3DA0                        u7630 3F36                        u7710 4798  
                      u8190 08FE                        u8350 38D0                        u8430 40AC  
                      u8510 358A                        u9310 3110                        u9230 3B4A  
                      u9150 43A4                        u7391 45D6                        u6911 234E  
                      u7471 3E78                        u6831 1520                        u6751 1458  
                      u6671 132C                        u7551 3D9C                        u7711 4794  
                      u8191 08FA                        u8351 38CC                        u8271 3784  
                      u8431 40A8                        u8511 3586                        u9311 310C  
                      u9231 3B46                        u9151 43A0                        u6920 2364  
                      u7480 3E9C                        u6840 1544                        u6760 146E  
                      u6680 1368                        u7560 3DC0                        u7640 3F54  
                      u7800 2FD0                        u7720 2E60                        u8360 390A  
                      u8280 37A6                        u8600 1788                        u8520 35C4  
                      u8440 3444                        u9320 31E4                        u9400 2910  
                      u9240 3B62                        u9160 43CA                        u6921 2360  
                      u7481 3E98                        u6841 1540                        u6761 146A  
                      u6681 1364                        u7561 3DBC                        u7641 3F50  
                      u7801 2FCC                        u8361 3906                        u8337 387E  
                      u8281 37A2                        u8601 1784                        u8521 35C0  
                      u8441 3440                        u9321 31E0                        u9401 290C  
                      u9241 3B5E                        u9161 43C6                        u6930 2374  
                      u7490 3EEC                        u6850 1556                        u6770 1484  
                      u6690 13AE                        u7570 3DD0                        u7650 3F7C  
                      u7810 300C                        u7730 2E90                        u8370 42A2  
                      u8290 37D8                        u8610 17BE                        u8530 35D2  
                      u8450 3452                        u9330 320A                        u9410 2924  
                      u9090 39FA                        u9250 3B76                        u9170 43D8  
                      u6931 2370                        u7491 3EE8                        u6851 1552  
                      u6771 1480                        u6691 13AA                        u7571 3DCC  
                      u7651 3F78                        u7635 3F2C                        u7811 3008  
                      u7731 2E8C                        u8371 429E                        u8291 37D4  
                      u8611 17BA                        u8531 35CE                        u8451 344E  
                      u9331 3206                        u9411 2920                        u9091 39F4  
                      u9251 3B72                        u9171 43D4                        u7580 46DE  
                      u7900 3662                        u6940 23B4                        u6860 1572  
                      u6780 149A                        u7660 3FA6                        u7740 2EB2  
                      u7820 4970                        u8380 4332                        u8620 17E2  
                      u8540 15AA                        u8460 34AE                        u9340 3218  
                      u8700 1C80                        u9420 2938                        u9084 39E4  
                      u9260 3B9C                        u9180 43EC                        u9500 2A7C  
                      u7581 46DA                        u7901 365E                        u6941 23B0  
                      u6861 156E                        u6781 1496                        u7661 3FA2  
                      u7741 2EAE                        u7725 2E56                        u7821 496C  
                      u8381 432E                        u8621 17DE                        u8541 15A6  
                      u8461 34AA                        u9341 3214                        u8701 1C7C  
                      u9421 2934                        u9085 39E0                        u9261 3B98  
                      u9181 43E8                        u9501 2A78                        u6870 49FC  
                      u7590 4700                        u7910 3706                        u6950 23F4  
                      u6790 14AE                        u7830 4904                        u8390 401E  
                      u8630 18CC                        u8550 163C                        u8470 3504  
                      u9350 3230                        u8710 1E58                        u9430 2966  
                      u9078 39B2                        u9270 3BAA                        u9190 3AB0  
                      u9510 2AA2                        u6871 49F8                        u7591 46FC  
                      u7911 3702                        u6951 23F0                        u6791 14AA  
                      u8391 401A                        u8631 18C8                        u8551 1638  
                      u8471 3500                        u9351 322C                        u8711 1E54  
                      u9431 2962                        u9079 39FE                        u9271 3BA6  
                      u9191 3AAC                        u9511 2A9E                        u8640 4BF2  
                      u8720 44D6                        u7920 3718                        u6960 246A  
                      u6880 22EC                        u7680 3FE0                        u7760 2F20  
                      u7840 4914                        u8560 1666                        u8480 354E  
                      u8800 4AA2                        u9360 26DC                        u9280 3BBE  
                      u9520 2AB0                        u9440 29D4                        u8641 4BEE  
                      u8721 44D2                        u7921 3714                        u6961 2466  
                      u6881 22E8                        u7681 3FDA                        u7761 2F1C  
                      u7841 4910                        u8561 1662                        u8481 354A  
                      u8801 4A9E                        u9361 26D8                        u9281 3BBA  
                      u9521 2AAC                        u9441 29D0                        u8650 4C00  
                      u8730 44F4                        u7930 3732                        u7850 35F6  
                      u6970 248C                        u6890 22FE                        u7690 3FE2  
                      u7770 2F44                        u8570 1694                        u8490 356C  
                      u8810 4AB6                        u9370 273E                        u9530 2BC8  
                      u9450 29FA                        u8651 4BFC                        u8731 44F0  
                      u7931 372E                        u7851 35F0                        u6971 2488  
                      u6891 22FA                        u7675 3FB8                        u7755 2EC6  
                      u8571 1690                        u8491 3568                        u9291 304E  
                      u8811 4AB2                        u9371 273A                        u9531 2BC4  
                      u9451 29F6                        u8740 4510                        u7940 3742  
                      u7860 35F8                        u6980 24B6                        u7780 2F60  
                      u7756 2ED0                        u8580 16EA                        u8660 4826  
                      u8900 0DF0                        u8820 0B4C                        u9380 28DA  
                      u9460 2A08                        u8741 450C                        u7941 373E  
                      u6981 24B2                        u7781 2F5C                        u7757 2EE0  
                      u7837 48FA                        u8581 16E6                        u8661 4822  
                      u8901 0DEC                        u9381 28D6                        u9461 2A04  
                      u8750 454E                        u7870 360A                        u6990 24DA  
                      u7790 2FB4                        u7950 0134                        u8590 1706  
                      u8670 1A5A                        u8910 0E02                        u8830 0B7A  
                      u9390 28FC                        u9470 2A28                        u7871 3606  
                      u6991 24D6                        u7775 2F3A                        u7951 0130  
                      u8591 1702                        u8911 0DFE                        u8831 0B76  
                      u9391 28F8                        u9607 3B80                        u9471 2A24  
                      u8760 4564                        u7880 3620                        u7960 017E  
                      u8680 1A96                        u8920 0E84                        u8840 0B90  
                      u9480 2A4E                        u8761 4560                        u7881 361C  
                      u7961 017A                        u8681 1A92                        u8921 0E80  
                      u8841 0B8C                        u8825 0B40                        u9617 3A28  
                      u9481 2A4A                        u8770 4574                        u7890 364C  
                      u7970 018E                        u8690 1AFE                        u8930 0F2E  
                      u8850 0BEA                        u9490 2A5C                        u8771 4570  
                      u7891 3648                        u7795 2FAA                        u7971 018A  
                      u8691 1AFA                        u8675 1A4E                        u8931 0F2A  
                      u8851 0BE6                        u9627 294A                        u9491 2A58  
                      u9547 2974                        u8780 4B06                        u7980 01CC  
                      u8860 0C08                        u8781 4B02                        u8757 4544  
                      u7981 01C8                        u9637 31F0                        u8861 0C04  
                      u9557 29E0                        u8790 4B2A                        u7990 01DE  
                      u8870 0C1A                        u9647 40F4                        u8791 4B26  
                      u7991 01DA                        u8871 0C16                        u9567 2A34  
                      u8880 0CF8                        u9657 41A2                        u8881 0CF4  
                      u8945 4C5C                        u9577 2A88                        u8890 0DD2  
                      u8946 4C5E                        u8891 0DCE                        u8955 4C4E  
                      u9587 43B0                        u8956 4C50                        u8965 4C40  
                      u9597 3B0E                        u8966 4C42                        u8975 4C32  
                      u8976 4C34                        u8985 4C24                        _TMR1 0FCE  
                      u8986 4C26                        u8995 4C6A                        u8996 4C6C  
                      abs@a 000C                        _dbuf 0115                        _half FEF3  
                      _labs 477A                        _main 2968                        _dtoa 35E6  
                      _prec 0057                        _sinf 0B0A                        pad@i 001E  
                      pad@p 001B                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf1 0FE7                        indf2 0FDF                        fsr1l 0FE1  
                      pad@w 0020                        fsr2l 0FD9                        _stoa 377A  
                      btemp 005A               ___fpclassifyf 3EF6                        prodh 0FF4  
                      prodl 0FF3                        start 010C             ___fldiv@new_exp 003E  
              ___param_bank 0000                       ??_ISR 0001              _LCD_ShowString 44C4  
                     ??_abs 000E                       ??_pad 001D            __end_of_LCD_Init 41AC  
          __end_of_LCD_Send 4C04               ___fltol@sign1 0052                       ?_labs 0006  
           __end_of___fladd 1586                       ?_main 0001                       ?_dtoa 0022  
           __end_of___fldiv 266C             __end_of___awdiv 44C4             __end_of___cosdf 3432  
           __end_of___flneg 4AF6                       STR_10 FFE2                       STR_11 FFD8  
                     STR_20 FFCE                       STR_12 FFDD                       STR_21 FF1B  
                     STR_13 FFFB                       STR_22 FF2E                       STR_14 FFF7  
                     STR_31 FFEF                       STR_23 FFE7                       STR_15 FFF3  
                     STR_16 FFD3                       STR_17 FFC7                       STR_26 FFEB  
                     STR_18 FF3E                       STR_19 FFCD             __end_of___awmod 4626  
                     STR_29 FFEF                       ?_sinf 00AC             __end_of___flmul 22D2  
           __end_of___flsub 49BA             __end_of___fltol 3DF2                       ?_stoa 0010  
           ___awdiv@divisor 0008                       _RC1IE 7CED                       _RC1IF 7CF5  
           __end_of___sindf 2E18                       i2l380 0088                       i2l390 0100  
                     i2l382 0074                ___sindf$4166 0090                ___sindf$4167 0094  
              ___sindf$4168 0098             ___awdiv@counter 000A                vfpfcnvrt@fmt 00BB  
                     _TX1IF 7CF4                       _TRISD 0F95             __end_of_pio2_1t FEEB  
                     _fabsf 4B2C                       _flags 0059                       _gmail 0165  
       read_prec_or_width@c 0012         read_prec_or_width@n 0013                       _fputc 41AC  
                     _fputs 49BA                       labs@a 0006                       pad@fp 0017  
                     _width 0055             __end_of_invpio2 FEF3                       _putch 4C04  
                     _toint FEF7                       dtoa@d 0024                       dtoa@i 002D  
                     dtoa@p 0028                       dtoa@s 002C                       dtoa@w 002A  
      __end_of_LED1_Control 4C60             __end_of_runGPIO 3A82                       pclath 0FFA  
                     tablat 0FF5             __end_of_runUART 4400        __end_of_LED2_Control 4C52  
                     sinf@n 00B4                       sinf@x 00AC                       sinf@y 00CA  
                     plusw1 0FE3                       plusw2 0FDB                       stoa@i 001C  
                     stoa@l 0024                       stoa@p 0022                       stoa@s 0012  
                     stoa@w 001E                       ttemp5 005B                       ttemp6 005E  
                     ttemp7 0062        __end_of_LED3_Control 4C44                       status 0FD8  
                     wtemp8 005B             __end_of_sprintf 48D2              ?___fpclassifyf 0006  
           __end_of_strncmp 40D2        __end_of_LED4_Control 4C36        __end_of_LED5_Control 4C28  
      __end_of_LED6_Control 4C6E             __initialization 4832      __end_of_LCD_ShowString 4576  
              __end_of_half FEF7                __end_of_labs 47E0                __end_of_main 2BE6  
              __end_of_dtoa 377A                __end_of_sinf 10C4                __end_of_stoa 390C  
              LCD_Send@data 0006                      ??_labs 000A                      ??_main 01A5  
                    ??_dtoa 0026                      ??_sinf 00B0                      ??_stoa 0014  
         __end_of_LCD_Clear 4B2C               __activetblptr 0002  __end_of_read_prec_or_width 433C  
              ?_moveDisplay 00EE                      ?_fabsf 0006                      ?_fputc 0007  
                    ?_fputs 0010                      _ADRESH 0FC4                      _ADRESL 0FC3  
                    _CCPR1L 0FBE            ___awdiv@dividend 0006                      ?_putch 0001  
                    _ANSELC 0F3A                      _GODONE 7E11                      _GPIOIE 00FE  
                    i2l5911 002E                      i2l5921 0082                      i2l5913 0040  
                    i2l5931 00C0                      i2l5923 0090                      i2l5915 004E  
                    i2l5907 0012                      i2l5941 00FE                      i2l5933 00C4  
                    i2l5917 0066                      i2l5909 0020                      i2l5925 0092  
                    i2l5935 00D6                      i2l5927 00A0                      i2l5937 00E6  
                    i2l5929 00AE                      i2l5939 00EE                      _RCREG1 0FAE  
             ___rem_pio2f@n 00A8               ___rem_pio2f@t 00A4               ___rem_pio2f@u 0098  
             ___rem_pio2f@x 0084               ___rem_pio2f@y 0088               vfpfcnvrt@done 00C1  
                    _UARTIE 00FD                      _SPBRG1 0FAF                      _TMR1IE 7CE8  
                    _TMR1IF 7CF0                      _TMR2IE 7CE9                      _TMR2IF 7CF1  
                    _TMR1ON 7E68                      _TMR2ON 7DD2                      _SSP1IF 7CF3  
                    _SSP2IF 7D27                      _TXREG1 0FAD            __end_of___xxtofl 35E6  
              _CCPTMRS0bits 0F49                vfprintf@cfmt 00D2             ?_LCD_ShowString 0007  
                    _s1pio2 FF17                      _s2pio2 FF13                      _s3pio2 FF0F  
                    _s4pio2 FF0B                      ___flge 3DF2                      ___fleq 4626  
                 ??___fladd 004E                      ___wmul 4BB8                   ??___fldiv 0035  
                 ??___awdiv 000A                   ??___cosdf 0052                   ??___flneg 0052  
                 ??___awmod 000A                   ??___flmul 001C                   ??___flsub 0052  
                 ??___fltol 0068            runUART@keepState 0054                      _efgtoa 0110  
                 ??___sindf 0052                      _pio2_1 FEEB                      _floorf 2E18  
                    fabsf@u 000A                      fabsf@x 0006                      _memcpy 4922  
      read_prec_or_width@ap 000E                      clear_0 4858                      clear_1 4864  
          ___awdiv@quotient 000C                      _runADC 302E                      _runDAC 266C  
           ___awmod@divisor 0008                      isa$std 0001                      _runPWM 3A82  
           ___awmod@counter 000A                      _printf 4B90                      pad@buf 0019  
                    dtoa@fp 0022                      _strcpy 49FE                      _strlen 48D2  
                    fputc@c 0007                      fputs@c 0014                      fputs@i 0015  
                    fputs@s 0010             ___fpclassifyf@e 000E             ___fpclassifyf@u 0010  
           ___fpclassifyf@x 0006                __mediumconst FED6                      sinf@ix 00CE  
                 ??_runGPIO 0007                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8           __end_of_SPI_write 4ABC                   ??_runUART 00DA  
                    stoa@cp 0020                      stoa@fp 0010            __end_of_vfprintf 4832  
                 ??_sprintf 0054                   ??_strncmp 000C                  ___flge@ff1 002D  
                ___flge@ff2 0031             ??___fpclassifyf 000A                ___xxtofl@arg 0010  
              ___xxtofl@exp 000F                ___xxtofl@val 0006                  ___fleq@ff1 0006  
                ___fleq@ff2 000A                  __accesstop 0060     __end_of__initialization 4874  
                 ?_LCD_Init 0001                   ?_LCD_Send 0001                  ___flneg@f1 0080  
             ___rparam_used 0001                  ___fltol@f1 0064              __pcstackCOMRAM 0001  
         LED4_Control@state 0006                __pidataBANK1 4B60               __end_of_fabsf 4B60  
             __end_of_fputc 4276               __end_of_fputs 49FE               __end_of_putch 4C1A  
             __end_of_toint FEFB                  __end_of_C0 FF0B                  __end_of_C1 FF07  
                __end_of_C2 FF03                  __end_of_C3 FEFF                  __end_of_S1 FEE7  
                __end_of_S2 FEE3                  __end_of_S3 FEDF                  __end_of_S4 FEDB  
                   ??_fabsf 000A                     ??_fputc 000B                     ??_fputs 0014  
                   ??_putch 0006                  __pbssBANK0 00EF                  __pbssBANK1 0100  
                ??_LCD_Init 0007                  ??_LCD_Send 0006                 runADC@F6950 0100  
              SPI_write@LSB 0007                SPI_write@MSB 0006                     ISR@temp 0005  
                   ?___flge 002D                     ?___fleq 0006                     ?___wmul 0006  
                   ?_efgtoa 0084               ??___rem_pio2f 008A                     ?_floorf 0046  
              _LED1_Control 4C52                     ?_memcpy 0006                     ?_runADC 0001  
                   ?_runDAC 0001                _LED2_Control 4C44                     ?_runPWM 0001  
                   ?_printf 00D4                     ?_strcpy 0006                     ?_strlen 0006  
              _LED3_Control 4C36                _LED4_Control 4C28                   ?___xxtofl 0006  
              _LED5_Control 4C1A              ___rem_pio2f@fn 00A0              ___rem_pio2f@ix 0092  
            ___rem_pio2f@ty 008E                _LED6_Control 4C60                     _SSP2ADD 0F6E  
                   _SSP1BUF 0FC9                     _SSP2BUF 0F6F           runGPIO@LEDControl 0015  
           LCD_ShowString@i 000C                     __Hparam 0000                     __Lparam 0000  
                   ___fladd 10C4                     ___fldiv 22D2                     ___awdiv 4400  
                   ___cosdf 3234                     ___flneg 4ABC                     ___awmod 4576  
                   ___flmul 1EA8                     ___flsub 4972                     ___fltol 3CEA  
                   ___sindf 2BE6                   ?_vfprintf 00CC              main@setUpAgain 01A7  
                   __pcinit 4832                     __ramtop 1000                     __ptext0 2968  
                   __ptext1 433C                     __ptext2 3A82                     __ptext3 390C  
                   __ptext4 4C1A                     __ptext5 4C28                     __ptext6 4C36  
                   __ptext7 4C44                     __ptext8 4C52                     __ptext9 4C60  
                   _pio2_1t FEE7                   _T1CONbits 0FCD             runPWM@keepState 0010  
     read_prec_or_width@fmt 000C                  ??___xxtofl 000A         __end_of___rem_pio2f 1EA8  
          ___awmod@dividend 0006                     _invpio2 FEEF                     _runGPIO 390C  
                   efgtoa@c 008A                     efgtoa@d 0098                     efgtoa@e 009C  
                   efgtoa@f 0086                     efgtoa@g 00AF                     efgtoa@h 00A6  
                   efgtoa@i 00A4                     efgtoa@l 00AA                     efgtoa@m 009A  
                   efgtoa@n 00B3                     efgtoa@p 008F                     efgtoa@t 0091  
                   efgtoa@u 00B5                     efgtoa@w 009E                     _runUART 433C  
                 _LCD_Clear 4AF6                     _sprintf 4882                     _strncmp 3FF4  
          ___rem_pio2f$4165 009C        end_of_initialization 4874                     floorf@e 0064  
                   floorf@m 0060                     floorf@u 0066                     floorf@x 0046  
                   memcpy@d 000D                     memcpy@n 000A                     memcpy@s 000F  
                   fputc@fp 0009            ___rem_pio2f@F532 00EF               __Lmediumconst FED6  
                   fputs@fp 0012            ??_LCD_ShowString 0009          _read_prec_or_width 4276  
         LED1_Control@state 0006       LCD_ShowString@lineNum 000B            ___rem_pio2f@sign 0096  
         __end_of_vfpfcnvrt 1A18                  efgtoa@mode 0096                  efgtoa@sign 00AE  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 000C  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 00C5                  ??_vfprintf 0054                     strcpy@d 000C  
                   strlen@a 0008                     strcpy@s 000A                     strlen@s 0006  
                 _PORTAbits 0F80                   _PORTCbits 0F82                 ___fladd@grs 0063  
             ___xxtofl@sign 000E                   _TRISAbits 0F92                   _TRISBbits 0F93  
                 _TRISCbits 0F94                   _TRISDbits 0F95                  ?_LCD_Clear 0001  
      ??_read_prec_or_width 0010                 ___fldiv@grs 0040                 ___fldiv@rem 0039  
                 _SPI_write 4A7E                 ___flmul@grs 0022                 _CCP1CONbits 0FBD  
         LED5_Control@state 0006              __end_of_s1pio2 FF1B              __end_of_s2pio2 FF17  
            __end_of_s3pio2 FF13              __end_of_s4pio2 FF0F              __end_of___flge 3EF6  
            __end_of___fleq 46D0                 vfpfcnvrt@ap 00BD                 vfpfcnvrt@cp 00CA  
               ___rem_pio2f 1A18                 vfpfcnvrt@fp 00B9              __end_of___wmul 4BDE  
            __end_of_efgtoa 0B0A              __end_of_pio2_1 FEEF        moveDisplay@menuItem1 0172  
      moveDisplay@menuItem2 0183              __end_of_floorf 302E        moveDisplay@menuItems 0194  
            __end_of_memcpy 4972                  floorf@F526 00F3              __end_of_runADC 3234  
            __end_of_runDAC 2968              __end_of_runPWM 3BC8              __end_of_printf 4BB8  
            __end_of_strcpy 4A3E              __end_of_strlen 4922         start_initialization 4832  
               __end_of_ISR 010C                 __end_of_abs 4A7E                 __end_of_pad 477A  
                ?_SPI_write 0001       __end_of___fpclassifyf 3FF4             runADC@keepState 018F  
               vfprintf@fmt 00CE                    ??___flge 0035                    ??___fleq 000E  
                  ??___wmul 000A                    ??_efgtoa 008B                 __pdataBANK1 01A9  
                  ??_floorf 004A                    ??_memcpy 000C                    ??_runADC 0170  
                  ??_runDAC 00DA                    ??_runPWM 000E                    ??_printf 0054  
                  ??_strcpy 000A                    ??_strlen 0008                   ___fladd@a 004A  
                 ___fladd@b 0046                   ___fldiv@a 0031                   ___fldiv@b 002D  
             runGPIO@states 0009                   ___cosdf@r 0068                   ___cosdf@w 0078  
                 ___cosdf@x 0064                   ___cosdf@z 007C                   ___flmul@a 0018  
                 ___flmul@b 0014                 __pbssCOMRAM 0055                   ___flsub@a 0068  
                 ___flsub@b 0064               __pcstackBANK0 0060               __pcstackBANK1 0170  
               ??_LCD_Clear 0007                   ___sindf@r 0088                   ___sindf@s 009C  
                 ___sindf@w 008C                   ___sindf@x 0084                   ___sindf@z 00A0  
     runGPIO@numberOfStates 0022                 _efgtoa$3695 0093                   _dtoa$3664 0026  
             SPI_write@data 0008                   __pintcode 0008               __pmediumconst FED6  
                  ?___fladd 0046                    ?___fldiv 002D                    ?___awdiv 0006  
                  ?___cosdf 0064                    ?___flneg 0080                    ?___awmod 0006  
                  ?___flmul 0014                    ?___flsub 0064                    ?___fltol 0064  
                runADC@pot1 018B                  runADC@pot2 018D                    ?___sindf 0084  
                runADC@text 0172                   fabsf@F465 0111               ??_moveDisplay 0170  
                  ?_runGPIO 0001                    ?_runUART 0001             runDAC@keepState 00E4  
                  ?_sprintf 00D4                   _sinf$4161 00C6                   _sinf$3872 00BC  
                 _sinf$3873 00C0                    ?_strncmp 0006                 ??_SPI_write 0006  
            runDAC@DACindex 00E6                    _LCD_Init 40D2                    _LCD_Send 4BDE  
            ___wmul@product 000A                    _LATAbits 0F89                    _LATBbits 0F8A  
                  _LATCbits 0F8B                    _LATDbits 0F8C           LED2_Control@state 0006  
                  i2u640_40 00AE                    i2u640_41 00AA                    i2u641_40 00C0  
                  i2u633_40 0020                    i2u641_41 00BC                    i2u633_41 001C  
                  i2u642_40 00D6                    i2u634_40 002E                    i2u642_41 00D2  
                  i2u634_41 002A                    i2u635_40 0040                    i2u635_41 003C  
                  i2u636_40 004E                    i2u636_41 004A                    i2u637_40 0074  
                  i2u637_41 0070                    i2u638_40 0082                    i2u638_41 007E  
                  i2u639_40 00A0                    i2u639_41 009C                    i2u966_47 0058  
                 _vfpfcnvrt 1586                  _ADCON0bits 0FC2                  _ADCON2bits 0FC0  
         ___wmul@multiplier 0006                   main@menuI 01A8            moveDisplay@F6948 01A9  
                vfpfcnvrt@c 00C9                   copy_data0 4846         __end_of_moveDisplay 3CEA  
          moveDisplay@menuI 01A4                runGPIO@F6960 01C5            moveDisplay@where 00EE  
              runGPIO@F6978 01B9                runGPIO@GPIOi 0024                    __Hrparam 0000  
           fp__LED1_Control 010C                   memcpy@tmp 000C                  vfprintf@ap 00D0  
                  __Lrparam 0000                  vfprintf@fp 00CC             fp__LED2_Control 010C  
           fp__LED3_Control 010C          runGPIO@GPIOreverse 0021             fp__LED4_Control 010C  
         LED6_Control@state 0006                ?___rem_pio2f 0084             fp__LED5_Control 010C  
                ?_vfpfcnvrt 00B9             fp__LED6_Control 010C         runDAC@selectModeDAC 00E5  
                _ANSELAbits 0F38                  _ANSELBbits 0F39                  _ANSELCbits 0F3A  
                _ANSELDbits 0F3B                  _ANSELEbits 0F3C          ___fpclassifyf@F465 00F7  
                sprintf@fmt 00D6                    ___xxtofl 3432                    __ptext10 266C  
                  __ptext11 0B0A                    __ptext20 3BC8                    __ptext12 2BE6  
                  __ptext21 4882                    __ptext13 1A18                    __ptext30 49FE  
                  __ptext22 47E0                    __ptext14 4B2C                    __ptext31 4922  
                  __ptext23 1586                    __ptext15 3234                    __ptext40 3DF2  
                  __ptext32 477A                    __ptext24 3FF4                    __ptext16 4B90  
                  __ptext41 4626                    __ptext33 2E18                    __ptext25 377A  
                  __ptext17 4A7E                    __ptext50 4400                    __ptext42 22D2  
                  __ptext34 3EF6                    __ptext26 48D2                    __ptext18 302E  
                  __ptext51 44C4                    __ptext43 35E6                    __ptext35 3CEA  
                  __ptext27 4276                    __ptext19 3432                    __ptext52 4AF6  
                  __ptext44 46D0                    __ptext36 4972                    __ptext28 4BB8  
                  __ptext53 40D2                    __ptext45 49BA                    __ptext37 10C4  
                  __ptext29 0110                    __ptext54 4BDE                    __ptext46 41AC  
                  __ptext38 4ABC                    __ptext47 4C04                    __ptext39 1EA8  
                  __ptext48 4A3E                    __ptext49 4576              runADC@voltage1 0183  
            runADC@voltage2 0187                _SSP1CON1bits 0FC6                _SSP2CON1bits 0F6C  
              _SSP2CON2bits 0F6B                  strcpy@dest 0006        sinf@__xc8_float_word 00B8  
                  efgtoa@fp 0084                    efgtoa@ne 008D                    efgtoa@pp 0095  
                  efgtoa@ou 00A0                   stoa@F1179 01D1                    isa$xinst 0000  
                  int$flags 005A                 _runDAC$4158 00DC                 _runDAC$4159 00E0  
                  _vfprintf 47E0               ?_LED1_Control 0001                   printf@fmt 00D4  
              _SSP1STATbits 0FC7               ?_LED2_Control 0001                _SSP2STATbits 0F6D  
             ?_LED3_Control 0001               ?_LED4_Control 0001                   putch@data 0006  
            _vfpfcnvrt$3737 00C3               ?_LED5_Control 0001                    memcpy@d1 0006  
             ?_LED6_Control 0001                    memcpy@s1 0008                 _moveDisplay 3BC8  
                  intlevel2 0000                   sprintf@ap 00E0                   strcpy@src 0008  
                _RCSTA1bits 0FAB                    sinf@sign 00C4                    runGPIO@j 0025  
                 strncmp@_l 0006                   strncmp@_r 0008                 efgtoa@nmode 0097  
                  printf@ap 00D8              ??_LED1_Control 0006              ??_LED2_Control 0006  
               ??_vfpfcnvrt 00BF                    stoa@nuls 0015      LCD_ShowString@textData 0007  
            ??_LED3_Control 0006              ??_LED4_Control 0006                    sprintf@f 00E2  
                  sprintf@s 00D4              ??_LED5_Control 0006              ??_LED6_Control 0006  
                  strncmp@l 000D                    strncmp@n 000A                    strncmp@r 000F  
          runPWM@multiplier 0011               ___fladd@signs 0060                ___fladd@aexp 0061  
              ___fladd@bexp 0062                ___cosdf$4162 006C                ___cosdf$4163 0070  
              ___cosdf$4164 0074               _keepStateGPIO 00FF           LED3_Control@state 0006  
