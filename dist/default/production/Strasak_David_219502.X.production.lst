

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 17 14:39:48 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Generated 12/10/2023 GMT
    78                           ; 
    79                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F46K22 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111   000000                     
   112                           	psect	idataBANK1
   113   0048BA                     __pidataBANK1:
   114                           	callstack 0
   115                           
   116                           ;initializer for moveDisplay@F6963
   117   0048BA  DB                 	db	low STR_15
   118   0048BB  FF                 	db	high STR_15
   119   0048BC  E0                 	db	low STR_16
   120   0048BD  FF                 	db	high STR_16
   121   0048BE  FA                 	db	low STR_17
   122   0048BF  FF                 	db	high STR_17
   123   0048C0  F6                 	db	low STR_18
   124   0048C1  FF                 	db	high STR_18
   125   0048C2  F2                 	db	low STR_19
   126   0048C3  FF                 	db	high STR_19
   127   0048C4  D6                 	db	low STR_20
   128   0048C5  FF                 	db	high STR_20
   129   0048C6  C5                 	db	low STR_21
   130   0048C7  FF                 	db	high STR_21
   131   0048C8  D5                 	db	low (STR_26+4)
   132   0048C9  FF                 	db	high (STR_26+4)
   133                           
   134                           ;initializer for runGPIO@F6993
   135   0048CA  20                 	db	32
   136   0048CB  30                 	db	48
   137   0048CC  18                 	db	24
   138   0048CD  0C                 	db	12
   139   0048CE  06                 	db	6
   140   0048CF  03                 	db	3
   141   0048D0  01                 	db	1
   142   0048D1  03                 	db	3
   143   0048D2  06                 	db	6
   144   0048D3  0C                 	db	12
   145   0048D4  18                 	db	24
   146   0048D5  30                 	db	48
   147                           
   148                           ;initializer for runGPIO@F6975
   149   0048D6  9C                 	db	low _LED1_Control
   150   0048D7  49                 	db	high _LED1_Control
   151   0048D8  8E                 	db	low _LED2_Control
   152   0048D9  49                 	db	high _LED2_Control
   153   0048DA  80                 	db	low _LED3_Control
   154   0048DB  49                 	db	high _LED3_Control
   155   0048DC  72                 	db	low _LED4_Control
   156   0048DD  49                 	db	high _LED4_Control
   157   0048DE  64                 	db	low _LED5_Control
   158   0048DF  49                 	db	high _LED5_Control
   159   0048E0  AA                 	db	low _LED6_Control
   160   0048E1  49                 	db	high _LED6_Control
   161                           
   162                           	psect	mediumconst
   163   00FEE2                     __pmediumconst:
   164                           	callstack 0
   165   00FEE2  00                 	db	0
   166   00FEE3  6C3C               	dw	27708
   167   00FEE5  3636               	dw	13878
   168   00FEE7                     __end_of_S4:
   169                           	callstack 0
   170   00FEE7  07CF               	dw	1999
   171   00FEE9  B950               	dw	47440
   172   00FEEB                     __end_of_S3:
   173                           	callstack 0
   174   00FEEB  8884               	dw	34948
   175   00FEED  3C08               	dw	15368
   176   00FEEF                     __end_of_S2:
   177                           	callstack 0
   178   00FEEF  AAAB               	dw	43691
   179   00FEF1  BE2A               	dw	48682
   180   00FEF3                     __end_of_S1:
   181                           	callstack 0
   182   00FEF3  85A3               	dw	34211
   183   00FEF5  3288               	dw	12936
   184   00FEF7                     __end_of_pio2_1t:
   185                           	callstack 0
   186   00FEF7  0FDA               	dw	4058
   187   00FEF9  3FC9               	dw	16329
   188   00FEFB                     __end_of_pio2_1:
   189                           	callstack 0
   190   00FEFB  F983               	dw	63875
   191   00FEFD  3F22               	dw	16162
   192   00FEFF                     __end_of_invpio2:
   193                           	callstack 0
   194   00FEFF  0000               	dw	0
   195   00FF01  3F00               	dw	16128
   196   00FF03                     __end_of_half:
   197                           	callstack 0
   198   00FF03  9A17               	dw	39447
   199   00FF05  37CC               	dw	14284
   200   00FF07                     __end_of_C3:
   201                           	callstack 0
   202   00FF07  043F               	dw	1087
   203   00FF09  BAB6               	dw	47798
   204   00FF0B                     __end_of_C2:
   205                           	callstack 0
   206   00FF0B  AA9F               	dw	43679
   207   00FF0D  3D2A               	dw	15658
   208   00FF0F                     __end_of_C1:
   209                           	callstack 0
   210   00FF0F  0000               	dw	0
   211   00FF11  BF00               	dw	48896
   212   00FF13                     __end_of_C0:
   213                           	callstack 0
   214   00FF13  0FDB               	dw	4059
   215   00FF15  40C9               	dw	16585
   216   00FF17                     __end_of_s4pio2:
   217                           	callstack 0
   218   00FF17  CBE4               	dw	52196
   219   00FF19  4096               	dw	16534
   220   00FF1B                     __end_of_s3pio2:
   221                           	callstack 0
   222   00FF1B  0FDB               	dw	4059
   223   00FF1D  4049               	dw	16457
   224   00FF1F                     __end_of_s2pio2:
   225                           	callstack 0
   226   00FF1F  0FDB               	dw	4059
   227   00FF21  3FC9               	dw	16329
   228   00FF23                     __end_of_s1pio2:
   229                           	callstack 0
   230   000000                     _ADRESL	set	4035
   231   000000                     _RCREG1	set	4014
   232   000000                     _ANSELCbits	set	3898
   233   000000                     _TXREG1	set	4013
   234   000000                     _ADRESH	set	4036
   235   000000                     _LATBbits	set	3978
   236   000000                     _TXSTA1bits	set	4012
   237   000000                     _ANSELBbits	set	3897
   238   000000                     _TRISBbits	set	3987
   239   000000                     _SSP2STATbits	set	3949
   240   000000                     _SSP2ADD	set	3950
   241   000000                     _ANSELDbits	set	3899
   242   000000                     _PORTAbits	set	3968
   243   000000                     _PORTCbits	set	3970
   244   000000                     _LATCbits	set	3979
   245   000000                     _LATDbits	set	3980
   246   000000                     _ANSELAbits	set	3896
   247   000000                     _TRISAbits	set	3986
   248   000000                     _TRISCbits	set	3988
   249   000000                     _TMR2IE	set	31977
   250   000000                     _TMR2IF	set	31985
   251   000000                     _RC1IF	set	31989
   252   000000                     _RC1IE	set	31981
   253   000000                     _TMR1ON	set	32360
   254   000000                     _TMR1IF	set	31984
   255   000000                     _GIE	set	32663
   256   000000                     _TX1IF	set	31988
   257   000000                     _GODONE	set	32273
   258   000000                     _TRISDbits	set	3989
   259   000000                     _TMR1IE	set	31976
   260   000000                     _SSP1IF	set	31987
   261   000000                     _SSP2IF	set	32039
   262   000000                     _LATAbits	set	3977
   263   000000                     _CCPTMRS0bits	set	3913
   264   000000                     _ANSELEbits	set	3900
   265   000000                     _SSP2CON2bits	set	3947
   266   000000                     _SSP2CON1bits	set	3948
   267   000000                     _SSP2BUF	set	3951
   268   000000                     _RCSTA1bits	set	4011
   269   000000                     _SPBRG1	set	4015
   270   000000                     _ADCON2bits	set	4032
   271   000000                     _SSP1CON1bits	set	4038
   272   000000                     _SSP1BUF	set	4041
   273   000000                     _SSP1STATbits	set	4039
   274   000000                     _ADCON0bits	set	4034
   275   000000                     _PR2	set	4027
   276   000000                     _TMR2ON	set	32210
   277   000000                     _T1CONbits	set	4045
   278   000000                     _TMR1	set	4046
   279   000000                     _PEIE	set	32662
   280   000000                     _CCP1CONbits	set	4029
   281   000000                     _CCPR1L	set	4030
   282   00FF23                     STR_25:
   283   00FF23  50                 	db	80	;'P'
   284   00FF24  4F                 	db	79	;'O'
   285   00FF25  54                 	db	84	;'T'
   286   00FF26  31                 	db	49	;'1'
   287   00FF27  3A                 	db	58	;':'
   288   00FF28  25                 	db	37
   289   00FF29  2E                 	db	46
   290   00FF2A  31                 	db	49	;'1'
   291   00FF2B  66                 	db	102	;'f'
   292   00FF2C  50                 	db	80	;'P'
   293   00FF2D  4F                 	db	79	;'O'
   294   00FF2E  54                 	db	84	;'T'
   295   00FF2F  32                 	db	50	;'2'
   296   00FF30  3A                 	db	58	;':'
   297   00FF31  25                 	db	37
   298   00FF32  2E                 	db	46
   299   00FF33  31                 	db	49	;'1'
   300   00FF34  66                 	db	102	;'f'
   301   00FF35  00                 	db	0
   302   00FF36                     STR_2:
   303   00FF36  20                 	db	32
   304   00FF37  20                 	db	32
   305   00FF38  20                 	db	32
   306   00FF39  20                 	db	32
   307   00FF3A  20                 	db	32
   308   00FF3B  20                 	db	32
   309   00FF3C  20                 	db	32
   310   00FF3D  20                 	db	32
   311   00FF3E  20                 	db	32
   312   00FF3F  20                 	db	32
   313   00FF40  20                 	db	32
   314   00FF41  20                 	db	32
   315   00FF42  20                 	db	32
   316   00FF43  20                 	db	32
   317   00FF44  20                 	db	32
   318   00FF45  20                 	db	32
   319   00FF46  00                 	db	0
   320   00FF47                     STR_3:
   321   00FF47  42                 	db	66	;'B'
   322   00FF48  52                 	db	82	;'R'
   323   00FF49  3A                 	db	58	;':'
   324   00FF4A  20                 	db	32
   325   00FF4B  31                 	db	49	;'1'
   326   00FF4C  39                 	db	57	;'9'
   327   00FF4D  32                 	db	50	;'2'
   328   00FF4E  30                 	db	48	;'0'
   329   00FF4F  30                 	db	48	;'0'
   330   00FF50  20                 	db	32
   331   00FF51  20                 	db	32
   332   00FF52  20                 	db	32
   333   00FF53  20                 	db	32
   334   00FF54  20                 	db	32
   335   00FF55  20                 	db	32
   336   00FF56  20                 	db	32
   337   00FF57  00                 	db	0
   338   00FF58                     STR_1:
   339   00FF58  50                 	db	80	;'P'
   340   00FF59  6F                 	db	111	;'o'
   341   00FF5A  7A                 	db	122	;'z'
   342   00FF5B  6F                 	db	111	;'o'
   343   00FF5C  72                 	db	114	;'r'
   344   00FF5D  21                 	db	33
   345   00FF5E  20                 	db	32
   346   00FF5F  48                 	db	72	;'H'
   347   00FF60  61                 	db	97	;'a'
   348   00FF61  64                 	db	100	;'d'
   349   00FF62  21                 	db	33
   350   00FF63  21                 	db	33
   351   00FF64  21                 	db	33
   352   00FF65  20                 	db	32
   353   00FF66  20                 	db	32
   354   00FF67  20                 	db	32
   355   00FF68  00                 	db	0
   356   00FF69                     STR_5:
   357   00FF69  5A                 	db	90	;'Z'
   358   00FF6A  6D                 	db	109	;'m'
   359   00FF6B  61                 	db	97	;'a'
   360   00FF6C  63                 	db	99	;'c'
   361   00FF6D  6B                 	db	107	;'k'
   362   00FF6E  6E                 	db	110	;'n'
   363   00FF6F  65                 	db	101	;'e'
   364   00FF70  74                 	db	116	;'t'
   365   00FF71  65                 	db	101	;'e'
   366   00FF72  20                 	db	32
   367   00FF73  42                 	db	66	;'B'
   368   00FF74  54                 	db	84	;'T'
   369   00FF75  4E                 	db	78	;'N'
   370   00FF76  32                 	db	50	;'2'
   371   00FF77  20                 	db	32
   372   00FF78  20                 	db	32
   373   00FF79  00                 	db	0
   374   00FF7A                     STR_8:
   375   00FF7A  52                 	db	82	;'R'
   376   00FF7B  42                 	db	66	;'B'
   377   00FF7C  30                 	db	48	;'0'
   378   00FF7D  2D                 	db	45
   379   00FF7E  41                 	db	65	;'A'
   380   00FF7F  32                 	db	50	;'2'
   381   00FF80  2C                 	db	44
   382   00FF81  20                 	db	32
   383   00FF82  42                 	db	66	;'B'
   384   00FF83  52                 	db	82	;'R'
   385   00FF84  3A                 	db	58	;':'
   386   00FF85  31                 	db	49	;'1'
   387   00FF86  39                 	db	57	;'9'
   388   00FF87  32                 	db	50	;'2'
   389   00FF88  30                 	db	48	;'0'
   390   00FF89  30                 	db	48	;'0'
   391   00FF8A  00                 	db	0
   392   00FF8B                     STR_7:
   393   00FF8B  56                 	db	86	;'V'
   394   00FF8C  6F                 	db	111	;'o'
   395   00FF8D  6C                 	db	108	;'l'
   396   00FF8E  74                 	db	116	;'t'
   397   00FF8F  79                 	db	121	;'y'
   398   00FF90  20                 	db	32
   399   00FF91  6E                 	db	110	;'n'
   400   00FF92  61                 	db	97	;'a'
   401   00FF93  20                 	db	32
   402   00FF94  50                 	db	80	;'P'
   403   00FF95  4F                 	db	79	;'O'
   404   00FF96  54                 	db	84	;'T'
   405   00FF97  65                 	db	101	;'e'
   406   00FF98  63                 	db	99	;'c'
   407   00FF99  68                 	db	104	;'h'
   408   00FF9A  3A                 	db	58	;':'
   409   00FF9B  00                 	db	0
   410   00FF9C                     STR_4:
   411   00FF9C  4B                 	db	75	;'K'
   412   00FF9D  6F                 	db	111	;'o'
   413   00FF9E  6E                 	db	110	;'n'
   414   00FF9F  65                 	db	101	;'e'
   415   00FFA0  63                 	db	99	;'c'
   416   00FFA1  20                 	db	32
   417   00FFA2  2D                 	db	45
   418   00FFA3  20                 	db	32
   419   00FFA4  6E                 	db	110	;'n'
   420   00FFA5  65                 	db	101	;'e'
   421   00FFA6  77                 	db	119	;'w'
   422   00FFA7  20                 	db	32
   423   00FFA8  6C                 	db	108	;'l'
   424   00FFA9  69                 	db	105	;'i'
   425   00FFAA  6E                 	db	110	;'n'
   426   00FFAB  65                 	db	101	;'e'
   427   00FFAC  00                 	db	0
   428   00FFAD                     STR_9:
   429   00FFAD  31                 	db	49	;'1'
   430   00FFAE  3A                 	db	58	;':'
   431   00FFAF  74                 	db	116	;'t'
   432   00FFB0  72                 	db	114	;'r'
   433   00FFB1  2C                 	db	44
   434   00FFB2  32                 	db	50	;'2'
   435   00FFB3  3A                 	db	58	;':'
   436   00FFB4  73                 	db	115	;'s'
   437   00FFB5  69                 	db	105	;'i'
   438   00FFB6  6E                 	db	110	;'n'
   439   00FFB7  2C                 	db	44
   440   00FFB8  33                 	db	51	;'3'
   441   00FFB9  3A                 	db	58	;':'
   442   00FFBA  70                 	db	112	;'p'
   443   00FFBB  69                 	db	105	;'i'
   444   00FFBC  6C                 	db	108	;'l'
   445   00FFBD  00                 	db	0
   446   00FFBE                     STR_33:
   447   00FFBE  28                 	db	40
   448   00FFBF  6E                 	db	110	;'n'
   449   00FFC0  75                 	db	117	;'u'
   450   00FFC1  6C                 	db	108	;'l'
   451   00FFC2  6C                 	db	108	;'l'
   452   00FFC3  29                 	db	41
   453   00FFC4  00                 	db	0
   454   00FFC5                     STR_21:
   455   00FFC5  4D                 	db	77	;'M'
   456   00FFC6  55                 	db	85	;'U'
   457   00FFC7  53                 	db	83	;'S'
   458   00FFC8  49                 	db	73	;'I'
   459   00FFC9  43                 	db	67	;'C'
   460   00FFCA  00                 	db	0
   461   00FFCB                     STR_23:
   462   00FFCB  3E                 	db	62	;'>'
   463   00FFCC  25                 	db	37
   464   00FFCD  2D                 	db	45
   465   00FFCE  2A                 	db	42
   466   00FFCF  73                 	db	115	;'s'
   467   00FFD0  00                 	db	0
   468   00FFD1                     STR_26:
   469   00FFD1  25                 	db	37
   470   00FFD2  73                 	db	115	;'s'
   471   00FFD3  20                 	db	32
   472   00FFD4  0A                 	db	10
   473   00FFD5  00                 	db	0
   474   00FFD6                     STR_20:
   475   00FFD6  47                 	db	71	;'G'
   476   00FFD7  41                 	db	65	;'A'
   477   00FFD8  4D                 	db	77	;'M'
   478   00FFD9  45                 	db	69	;'E'
   479   00FFDA  00                 	db	0
   480   00FFDB                     STR_15:
   481   00FFDB  47                 	db	71	;'G'
   482   00FFDC  50                 	db	80	;'P'
   483   00FFDD  49                 	db	73	;'I'
   484   00FFDE  4F                 	db	79	;'O'
   485   00FFDF  00                 	db	0
   486   00FFE0                     STR_16:
   487   00FFE0  55                 	db	85	;'U'
   488   00FFE1  41                 	db	65	;'A'
   489   00FFE2  52                 	db	82	;'R'
   490   00FFE3  54                 	db	84	;'T'
   491   00FFE4  00                 	db	0
   492   00FFE5                     STR_14:
   493   00FFE5  25                 	db	37
   494   00FFE6  64                 	db	100	;'d'
   495   00FFE7  20                 	db	32
   496   00FFE8  0D                 	db	13
   497   00FFE9  00                 	db	0
   498   00FFEA                     STR_27:
   499   00FFEA  69                 	db	105	;'i'
   500   00FFEB  6E                 	db	110	;'n'
   501   00FFEC  66                 	db	102	;'f'
   502   00FFED  00                 	db	0
   503   00FFEE                     STR_30:
   504   00FFEE  6E                 	db	110	;'n'
   505   00FFEF  61                 	db	97	;'a'
   506   00FFF0  6E                 	db	110	;'n'
   507   00FFF1  00                 	db	0
   508   00FFF2                     STR_19:
   509   00FFF2  44                 	db	68	;'D'
   510   00FFF3  41                 	db	65	;'A'
   511   00FFF4  43                 	db	67	;'C'
   512   00FFF5  00                 	db	0
   513   00FFF6                     STR_18:
   514   00FFF6  41                 	db	65	;'A'
   515   00FFF7  44                 	db	68	;'D'
   516   00FFF8  43                 	db	67	;'C'
   517   00FFF9  00                 	db	0
   518   00FFFA                     STR_17:
   519   00FFFA  50                 	db	80	;'P'
   520   00FFFB  57                 	db	87	;'W'
   521   00FFFC  4D                 	db	77	;'M'
   522   00FFFD  00                 	db	0
   523   00FFFE  00                 	db	0	; dummy byte at the end
   524   000000                     
   525                           ; #config settings
   526                           
   527                           	psect	cinit
   528   00461C                     __pcinit:
   529                           	callstack 0
   530   00461C                     start_initialization:
   531                           	callstack 0
   532   00461C                     __initialization:
   533                           	callstack 0
   534                           
   535                           ; Initialize objects allocated to BANK1 (40 bytes)
   536                           ; load TBLPTR registers with __pidataBANK1
   537   00461C  0EBA               	movlw	low __pidataBANK1
   538   00461E  6EF6               	movwf	tblptrl,c
   539   004620  0E48               	movlw	high __pidataBANK1
   540   004622  6EF7               	movwf	tblptrh,c
   541   004624  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   542   004626  6EF8               	movwf	tblptru,c
   543   004628  EE01  F0C8         	lfsr	0,__pdataBANK1
   544   00462C  EE10 F028          	lfsr	1,40
   545   004630                     copy_data0:
   546   004630  0009               	tblrd		*+
   547   004632  CFF5 FFEE          	movff	tablat,postinc0
   548   004636  50E5               	movf	postdec1,w,c
   549   004638  50E1               	movf	fsr1l,w,c
   550   00463A  E1FA               	bnz	copy_data0
   551                           
   552                           ; Clear objects allocated to BANK1 (149 bytes)
   553   00463C  EE01  F000         	lfsr	0,__pbssBANK1
   554   004640  0E95               	movlw	149
   555   004642                     clear_0:
   556   004642  6AEE               	clrf	postinc0,c
   557   004644  06E8               	decf	wreg,f,c
   558   004646  E1FD               	bnz	clear_0
   559                           
   560                           ; Clear objects allocated to BANK0 (1 bytes)
   561   004648  0100               	movlb	0
   562   00464A  6BFE               	clrf	__pbssBANK0& (0+255),b
   563                           
   564                           ; Clear objects allocated to COMRAM (5 bytes)
   565   00464C  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   566   00464E  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   567   004650  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   568   004652  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   569   004654  6A55               	clrf	__pbssCOMRAM& (0+255),c
   570   004656                     end_of_initialization:
   571                           	callstack 0
   572   004656                     __end_of__initialization:
   573                           	callstack 0
   574   004656  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   575   004658  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   576   00465A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   577   00465C  6EF8               	movwf	tblptru,c
   578   00465E  0100               	movlb	0
   579   004660  EFB1  F013         	goto	_main	;jump to C main() function
   580                           
   581                           	psect	bssCOMRAM
   582   000055                     __pbssCOMRAM:
   583                           	callstack 0
   584   000055                     _width:
   585                           	callstack 0
   586   000055                     	ds	2
   587   000057                     _prec:
   588                           	callstack 0
   589   000057                     	ds	2
   590   000059                     _flags:
   591                           	callstack 0
   592   000059                     	ds	1
   593                           
   594                           	psect	bssBANK0
   595   0000FE                     __pbssBANK0:
   596                           	callstack 0
   597   0000FE                     _keepStateGPIO:
   598                           	callstack 0
   599   0000FE                     	ds	1
   600                           
   601                           	psect	bssBANK1
   602   000100                     __pbssBANK1:
   603                           	callstack 0
   604   000100                     	ds	17
   605   000111                     fabsf@F465:
   606                           	callstack 0
   607   000111                     	ds	4
   608   000115                     ___rem_pio2f@F526:
   609                           	callstack 0
   610   000115                     	ds	4
   611   000119                     floorf@F521:
   612                           	callstack 0
   613   000119                     	ds	4
   614   00011D                     ___fpclassifyf@F465:
   615                           	callstack 0
   616   00011D                     	ds	4
   617   000121                     ISR@i:
   618                           	callstack 0
   619   000121                     	ds	2
   620   000123                     _UARTIE:
   621                           	callstack 0
   622   000123                     	ds	1
   623   000124                     _GPIOIE:
   624                           	callstack 0
   625   000124                     	ds	1
   626   000125                     _dbuf:
   627                           	callstack 0
   628   000125                     	ds	80
   629   000175                     _gmail:
   630                           	callstack 0
   631   000175                     	ds	32
   632                           
   633                           	psect	dataBANK1
   634   0001C8                     __pdataBANK1:
   635                           	callstack 0
   636   0001C8                     moveDisplay@F6963:
   637                           	callstack 0
   638   0001C8                     	ds	16
   639   0001D8                     runGPIO@F6993:
   640                           	callstack 0
   641   0001D8                     	ds	12
   642   0001E4                     runGPIO@F6975:
   643                           	callstack 0
   644   0001E4                     	ds	12
   645                           
   646                           	psect	cstackBANK1
   647   000195                     __pcstackBANK1:
   648                           	callstack 0
   649   000195                     moveDisplay@menuItem1:
   650                           	callstack 0
   651   000195                     runADC@text:
   652                           	callstack 0
   653                           
   654                           ; 17 bytes @ 0x0
   655   000195                     	ds	17
   656   0001A6                     runADC@voltage1:
   657                           	callstack 0
   658   0001A6                     moveDisplay@menuItem2:
   659                           	callstack 0
   660                           
   661                           ; 17 bytes @ 0x11
   662   0001A6                     	ds	4
   663   0001AA                     runADC@voltage2:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x15
   667   0001AA                     	ds	4
   668   0001AE                     runADC@pot1:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x19
   672   0001AE                     	ds	2
   673   0001B0                     runADC@pot2:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x1B
   677   0001B0                     	ds	2
   678   0001B2                     runADC@keepState:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x1D
   682   0001B2                     	ds	5
   683   0001B7                     moveDisplay@menuItems:
   684                           	callstack 0
   685                           
   686                           ; 16 bytes @ 0x22
   687   0001B7                     	ds	16
   688   0001C7                     moveDisplay@menuI:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x32
   692   0001C7                     	ds	1
   693                           
   694                           	psect	cstackBANK0
   695   000060                     __pcstackBANK0:
   696                           	callstack 0
   697   000060                     ___fladd@signs:
   698                           	callstack 0
   699   000060                     floorf@m:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x0
   703   000060                     	ds	1
   704   000061                     ___fladd@aexp:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x1
   708   000061                     	ds	1
   709   000062                     ___fladd@bexp:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x2
   713   000062                     	ds	1
   714   000063                     ___fladd@grs:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x3
   718   000063                     	ds	1
   719   000064                     ?___flsub:
   720                           	callstack 0
   721   000064                     ?___sindf:
   722                           	callstack 0
   723   000064                     ?___cosdf:
   724                           	callstack 0
   725   000064                     ?___fltol:
   726                           	callstack 0
   727   000064                     floorf@e:
   728                           	callstack 0
   729   000064                     ___fltol@f1:
   730                           	callstack 0
   731   000064                     ___flsub@b:
   732                           	callstack 0
   733   000064                     ___cosdf@x:
   734                           	callstack 0
   735   000064                     ___sindf@x:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x4
   739   000064                     	ds	2
   740   000066                     floorf@u:
   741                           	callstack 0
   742                           
   743                           ; 4 bytes @ 0x6
   744   000066                     	ds	2
   745   000068                     ??___fltol:
   746   000068                     ___flsub@a:
   747                           	callstack 0
   748   000068                     ___cosdf@r:
   749                           	callstack 0
   750   000068                     ___sindf@r:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x8
   754   000068                     	ds	4
   755   00006C                     ___sindf@w:
   756                           	callstack 0
   757   00006C                     ___cosdf$4149:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0xC
   761   00006C                     	ds	4
   762   000070                     ___cosdf$4150:
   763                           	callstack 0
   764   000070                     ___sindf$4153:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x10
   768   000070                     	ds	4
   769   000074                     ___cosdf$4151:
   770                           	callstack 0
   771   000074                     ___sindf$4154:
   772                           	callstack 0
   773                           
   774                           ; 4 bytes @ 0x14
   775   000074                     	ds	4
   776   000078                     ___cosdf@w:
   777                           	callstack 0
   778   000078                     ___sindf$4155:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x18
   782   000078                     	ds	4
   783   00007C                     ___cosdf@z:
   784                           	callstack 0
   785   00007C                     ___sindf@s:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0x1C
   789   00007C                     	ds	4
   790   000080                     ?___flneg:
   791                           	callstack 0
   792   000080                     ___flneg@f1:
   793                           	callstack 0
   794   000080                     ___sindf@z:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x20
   798   000080                     	ds	4
   799   000084                     ?___rem_pio2f:
   800                           	callstack 0
   801   000084                     efgtoa@fp:
   802                           	callstack 0
   803   000084                     ___rem_pio2f@x:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x24
   807   000084                     	ds	2
   808   000086                     efgtoa@f:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x26
   812   000086                     	ds	2
   813   000088                     ___rem_pio2f@y:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0x28
   817   000088                     	ds	1
   818   000089                     ??___rem_pio2f:
   819                           
   820                           ; 1 bytes @ 0x29
   821   000089                     	ds	1
   822   00008A                     efgtoa@c:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x2A
   826   00008A                     	ds	1
   827   00008B                     ??_efgtoa:
   828   00008B                     ___rem_pio2f@ty:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0x2B
   832   00008B                     	ds	2
   833   00008D                     efgtoa@ne:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x2D
   837   00008D                     	ds	2
   838   00008F                     efgtoa@p:
   839                           	callstack 0
   840   00008F                     ___rem_pio2f$4152:
   841                           	callstack 0
   842                           
   843                           ; 4 bytes @ 0x2F
   844   00008F                     	ds	2
   845   000091                     efgtoa@t:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x31
   849   000091                     	ds	2
   850   000093                     ___rem_pio2f@sign:
   851                           	callstack 0
   852   000093                     _efgtoa$3705:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x33
   856   000093                     	ds	1
   857   000094                     ___rem_pio2f@ux:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x34
   861   000094                     	ds	1
   862   000095                     efgtoa@pp:
   863                           	callstack 0
   864                           
   865                           ; 1 bytes @ 0x35
   866   000095                     	ds	1
   867   000096                     efgtoa@mode:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x36
   871   000096                     	ds	1
   872   000097                     efgtoa@nmode:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x37
   876   000097                     	ds	1
   877   000098                     efgtoa@d:
   878                           	callstack 0
   879   000098                     ___rem_pio2f@fn:
   880                           	callstack 0
   881                           
   882                           ; 4 bytes @ 0x38
   883   000098                     	ds	2
   884   00009A                     efgtoa@m:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x3A
   888   00009A                     	ds	2
   889   00009C                     efgtoa@e:
   890                           	callstack 0
   891   00009C                     ___rem_pio2f@t:
   892                           	callstack 0
   893                           
   894                           ; 4 bytes @ 0x3C
   895   00009C                     	ds	2
   896   00009E                     efgtoa@w:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x3E
   900   00009E                     	ds	2
   901   0000A0                     efgtoa@ou:
   902                           	callstack 0
   903   0000A0                     ___rem_pio2f@n:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x40
   907   0000A0                     	ds	4
   908   0000A4                     ?_sinf:
   909                           	callstack 0
   910   0000A4                     efgtoa@i:
   911                           	callstack 0
   912   0000A4                     sinf@x:
   913                           	callstack 0
   914                           
   915                           ; 4 bytes @ 0x44
   916   0000A4                     	ds	2
   917   0000A6                     efgtoa@h:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x46
   921   0000A6                     	ds	2
   922   0000A8                     _sinf$3869:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0x48
   926   0000A8                     	ds	2
   927   0000AA                     efgtoa@l:
   928                           	callstack 0
   929                           
   930                           ; 4 bytes @ 0x4A
   931   0000AA                     	ds	2
   932   0000AC                     _sinf$3870:
   933                           	callstack 0
   934                           
   935                           ; 4 bytes @ 0x4C
   936   0000AC                     	ds	2
   937   0000AE                     efgtoa@sign:
   938                           	callstack 0
   939                           
   940                           ; 1 bytes @ 0x4E
   941   0000AE                     	ds	1
   942   0000AF                     efgtoa@g:
   943                           	callstack 0
   944                           
   945                           ; 4 bytes @ 0x4F
   946   0000AF                     	ds	1
   947   0000B0                     sinf@n:
   948                           	callstack 0
   949                           
   950                           ; 1 bytes @ 0x50
   951   0000B0                     	ds	1
   952   0000B1                     sinf@sign:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x51
   956   0000B1                     	ds	1
   957   0000B2                     _sinf$4148:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x52
   961   0000B2                     	ds	1
   962   0000B3                     efgtoa@n:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x53
   966   0000B3                     	ds	2
   967   0000B5                     efgtoa@u:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0x55
   971   0000B5                     	ds	1
   972   0000B6                     sinf@y:
   973                           	callstack 0
   974                           
   975                           ; 4 bytes @ 0x56
   976   0000B6                     	ds	3
   977   0000B9                     vfpfcnvrt@fp:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x59
   981   0000B9                     	ds	1
   982   0000BA                     sinf@ux:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x5A
   986   0000BA                     	ds	1
   987   0000BB                     vfpfcnvrt@fmt:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x5B
   991   0000BB                     	ds	1
   992   0000BC                     vfpfcnvrt@ap:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x5C
   996   0000BC                     	ds	1
   997   0000BD                     ??_vfpfcnvrt:
   998                           
   999                           ; 1 bytes @ 0x5D
  1000   0000BD                     	ds	2
  1001   0000BF                     vfpfcnvrt@convarg:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x5F
  1005   0000BF                     	ds	4
  1006   0000C3                     vfpfcnvrt@c:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x63
  1010   0000C3                     	ds	1
  1011   0000C4                     vfpfcnvrt@done:
  1012                           	callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x64
  1015   0000C4                     	ds	1
  1016   0000C5                     vfpfcnvrt@cp:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x65
  1020   0000C5                     	ds	2
  1021   0000C7                     ?_vfprintf:
  1022                           	callstack 0
  1023   0000C7                     vfprintf@fp:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x67
  1027   0000C7                     	ds	2
  1028   0000C9                     vfprintf@fmt:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x69
  1032   0000C9                     	ds	2
  1033   0000CB                     vfprintf@ap:
  1034                           	callstack 0
  1035                           
  1036                           ; 1 bytes @ 0x6B
  1037   0000CB                     	ds	1
  1038   0000CC                     vfprintf@cfmt:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x6C
  1042   0000CC                     	ds	2
  1043   0000CE                     ?_printf:
  1044                           	callstack 0
  1045   0000CE                     ?_sprintf:
  1046                           	callstack 0
  1047   0000CE                     sprintf@s:
  1048                           	callstack 0
  1049   0000CE                     printf@fmt:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x6E
  1053   0000CE                     	ds	2
  1054   0000D0                     sprintf@fmt:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x70
  1058   0000D0                     	ds	2
  1059   0000D2                     ??_runUART:
  1060   0000D2                     ??_runDAC:
  1061                           
  1062                           ; 1 bytes @ 0x72
  1063   0000D2                     	ds	1
  1064   0000D3                     _runDAC$4145:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x73
  1068   0000D3                     	ds	1
  1069   0000D4                     runUART@reversed:
  1070                           	callstack 0
  1071                           
  1072                           ; 31 bytes @ 0x74
  1073   0000D4                     	ds	3
  1074   0000D7                     _runDAC$4146:
  1075                           	callstack 0
  1076                           
  1077                           ; 4 bytes @ 0x77
  1078   0000D7                     	ds	3
  1079   0000DA                     sprintf@ap:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x7A
  1083   0000DA                     	ds	1
  1084   0000DB                     runDAC@keepState:
  1085                           	callstack 0
  1086   0000DB                     sprintf@f:
  1087                           	callstack 0
  1088                           
  1089                           ; 12 bytes @ 0x7B
  1090   0000DB                     	ds	1
  1091   0000DC                     runDAC@selectModeDAC:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x7C
  1095   0000DC                     	ds	1
  1096   0000DD                     runDAC@DACindex:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0x7D
  1100   0000DD                     	ds	10
  1101   0000E7                     ??_runADC:
  1102   0000E7                     moveDisplay@where:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x87
  1106   0000E7                     	ds	1
  1107   0000E8                     ??_moveDisplay:
  1108                           
  1109                           ; 1 bytes @ 0x88
  1110   0000E8                     	ds	11
  1111   0000F3                     runUART@keepState:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x93
  1115   0000F3                     	ds	1
  1116   0000F4                     runUART@len:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x94
  1120   0000F4                     	ds	2
  1121   0000F6                     runUART@i:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x96
  1125   0000F6                     	ds	2
  1126   0000F8                     runUART@p:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x98
  1130   0000F8                     	ds	2
  1131   0000FA                     ??_main:
  1132                           
  1133                           ; 1 bytes @ 0x9A
  1134   0000FA                     	ds	2
  1135   0000FC                     main@setUpAgain:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x9C
  1139   0000FC                     	ds	1
  1140   0000FD                     main@menuI:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x9D
  1144   0000FD                     	ds	1
  1145                           
  1146                           	psect	cstackCOMRAM
  1147   000001                     __pcstackCOMRAM:
  1148                           	callstack 0
  1149   000001                     ??_ISR:
  1150                           
  1151                           ; 1 bytes @ 0x0
  1152   000001                     	ds	4
  1153   000005                     ISR@temp:
  1154                           	callstack 0
  1155                           
  1156                           ; 1 bytes @ 0x4
  1157   000005                     	ds	1
  1158   000006                     ?_strlen:
  1159                           	callstack 0
  1160   000006                     ?___fpclassifyf:
  1161                           	callstack 0
  1162   000006                     ?___wmul:
  1163                           	callstack 0
  1164   000006                     ?___awdiv:
  1165                           	callstack 0
  1166   000006                     ?___awmod:
  1167                           	callstack 0
  1168   000006                     ?_labs:
  1169                           	callstack 0
  1170   000006                     ?_fabsf:
  1171                           	callstack 0
  1172   000006                     ?___xxtofl:
  1173                           	callstack 0
  1174   000006                     LCD_Send@data:
  1175                           	callstack 0
  1176   000006                     SPI_write@MSB:
  1177                           	callstack 0
  1178   000006                     putch@data:
  1179                           	callstack 0
  1180   000006                     LED1_Control@state:
  1181                           	callstack 0
  1182   000006                     LED2_Control@state:
  1183                           	callstack 0
  1184   000006                     LED3_Control@state:
  1185                           	callstack 0
  1186   000006                     LED4_Control@state:
  1187                           	callstack 0
  1188   000006                     LED5_Control@state:
  1189                           	callstack 0
  1190   000006                     LED6_Control@state:
  1191                           	callstack 0
  1192   000006                     ___wmul@multiplier:
  1193                           	callstack 0
  1194   000006                     ___awdiv@dividend:
  1195                           	callstack 0
  1196   000006                     ___awmod@dividend:
  1197                           	callstack 0
  1198   000006                     memcpy@d1:
  1199                           	callstack 0
  1200   000006                     strcpy@dest:
  1201                           	callstack 0
  1202   000006                     strlen@s:
  1203                           	callstack 0
  1204   000006                     ___fleq@ff1:
  1205                           	callstack 0
  1206   000006                     ___xxtofl@val:
  1207                           	callstack 0
  1208   000006                     ___fpclassifyf@x:
  1209                           	callstack 0
  1210   000006                     labs@a:
  1211                           	callstack 0
  1212   000006                     fabsf@x:
  1213                           	callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x5
  1216   000006                     	ds	1
  1217   000007                     ??_LCD_Init:
  1218   000007                     ??_runGPIO:
  1219   000007                     SPI_write@LSB:
  1220                           	callstack 0
  1221   000007                     LCD_ShowString@textData:
  1222                           	callstack 0
  1223   000007                     fputc@c:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x6
  1227   000007                     	ds	1
  1228   000008                     SPI_write@data:
  1229                           	callstack 0
  1230   000008                     ___wmul@multiplicand:
  1231                           	callstack 0
  1232   000008                     ___awdiv@divisor:
  1233                           	callstack 0
  1234   000008                     ___awmod@divisor:
  1235                           	callstack 0
  1236   000008                     memcpy@s1:
  1237                           	callstack 0
  1238   000008                     strcpy@src:
  1239                           	callstack 0
  1240   000008                     strlen@a:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x7
  1244   000008                     	ds	1
  1245   000009                     ??_LCD_ShowString:
  1246   000009                     fputc@fp:
  1247                           	callstack 0
  1248   000009                     runGPIO@states:
  1249                           	callstack 0
  1250                           
  1251                           ; 12 bytes @ 0x8
  1252   000009                     	ds	1
  1253   00000A                     ??___fpclassifyf:
  1254   00000A                     ??_labs:
  1255   00000A                     ??___xxtofl:
  1256   00000A                     ___awdiv@counter:
  1257                           	callstack 0
  1258   00000A                     ___awmod@counter:
  1259                           	callstack 0
  1260   00000A                     ___wmul@product:
  1261                           	callstack 0
  1262   00000A                     memcpy@n:
  1263                           	callstack 0
  1264   00000A                     strcpy@d:
  1265                           	callstack 0
  1266   00000A                     ___fleq@ff2:
  1267                           	callstack 0
  1268   00000A                     fabsf@u:
  1269                           	callstack 0
  1270                           
  1271                           ; 4 bytes @ 0x9
  1272   00000A                     	ds	1
  1273   00000B                     ??_fputc:
  1274   00000B                     LCD_ShowString@lineNum:
  1275                           	callstack 0
  1276   00000B                     ___awdiv@sign:
  1277                           	callstack 0
  1278   00000B                     ___awmod@sign:
  1279                           	callstack 0
  1280                           
  1281                           ; 1 bytes @ 0xA
  1282   00000B                     	ds	1
  1283   00000C                     ?_abs:
  1284                           	callstack 0
  1285   00000C                     ?_read_prec_or_width:
  1286                           	callstack 0
  1287   00000C                     LCD_ShowString@i:
  1288                           	callstack 0
  1289   00000C                     read_prec_or_width@fmt:
  1290                           	callstack 0
  1291   00000C                     memcpy@tmp:
  1292                           	callstack 0
  1293   00000C                     ___awdiv@quotient:
  1294                           	callstack 0
  1295   00000C                     abs@a:
  1296                           	callstack 0
  1297                           
  1298                           ; 2 bytes @ 0xB
  1299   00000C                     	ds	1
  1300   00000D                     read_prec_or_width@ap:
  1301                           	callstack 0
  1302   00000D                     memcpy@d:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0xC
  1306   00000D                     	ds	1
  1307   00000E                     ??_runPWM:
  1308   00000E                     ??_abs:
  1309   00000E                     ??___fleq:
  1310   00000E                     ___xxtofl@sign:
  1311                           	callstack 0
  1312   00000E                     read_prec_or_width@c:
  1313                           	callstack 0
  1314   00000E                     ___fpclassifyf@e:
  1315                           	callstack 0
  1316                           
  1317                           ; 2 bytes @ 0xD
  1318   00000E                     	ds	1
  1319   00000F                     ___xxtofl@exp:
  1320                           	callstack 0
  1321   00000F                     read_prec_or_width@n:
  1322                           	callstack 0
  1323   00000F                     memcpy@s:
  1324                           	callstack 0
  1325                           
  1326                           ; 2 bytes @ 0xE
  1327   00000F                     	ds	1
  1328   000010                     runPWM@keepState:
  1329                           	callstack 0
  1330   000010                     stoa@fp:
  1331                           	callstack 0
  1332   000010                     fputs@s:
  1333                           	callstack 0
  1334   000010                     ___xxtofl@arg:
  1335                           	callstack 0
  1336   000010                     ___fpclassifyf@u:
  1337                           	callstack 0
  1338                           
  1339                           ; 4 bytes @ 0xF
  1340   000010                     	ds	1
  1341   000011                     runPWM@multiplier:
  1342                           	callstack 0
  1343                           
  1344                           ; 1 bytes @ 0x10
  1345   000011                     	ds	1
  1346   000012                     stoa@s:
  1347                           	callstack 0
  1348   000012                     fputs@fp:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x11
  1352   000012                     	ds	2
  1353   000014                     ??_stoa:
  1354   000014                     ?___flmul:
  1355                           	callstack 0
  1356   000014                     fputs@c:
  1357                           	callstack 0
  1358   000014                     ___flmul@b:
  1359                           	callstack 0
  1360                           
  1361                           ; 4 bytes @ 0x13
  1362   000014                     	ds	1
  1363   000015                     fputs@i:
  1364                           	callstack 0
  1365   000015                     runGPIO@LEDControl:
  1366                           	callstack 0
  1367                           
  1368                           ; 12 bytes @ 0x14
  1369   000015                     	ds	1
  1370   000016                     stoa@p:
  1371                           	callstack 0
  1372                           
  1373                           ; 2 bytes @ 0x15
  1374   000016                     	ds	1
  1375   000017                     pad@fp:
  1376                           	callstack 0
  1377                           
  1378                           ; 2 bytes @ 0x16
  1379   000017                     	ds	1
  1380   000018                     stoa@w:
  1381                           	callstack 0
  1382   000018                     ___flmul@a:
  1383                           	callstack 0
  1384                           
  1385                           ; 4 bytes @ 0x17
  1386   000018                     	ds	1
  1387   000019                     pad@buf:
  1388                           	callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x18
  1391   000019                     	ds	1
  1392   00001A                     stoa@cp:
  1393                           	callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x19
  1396   00001A                     	ds	1
  1397   00001B                     pad@p:
  1398                           	callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x1A
  1401   00001B                     	ds	1
  1402   00001C                     ??___flmul:
  1403   00001C                     stoa@l:
  1404                           	callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x1B
  1407   00001C                     	ds	1
  1408   00001D                     ??_pad:
  1409                           
  1410                           ; 1 bytes @ 0x1C
  1411   00001D                     	ds	1
  1412   00001E                     pad@i:
  1413                           	callstack 0
  1414                           
  1415                           ; 2 bytes @ 0x1D
  1416   00001E                     	ds	2
  1417   000020                     ___flmul@sign:
  1418                           	callstack 0
  1419   000020                     dtoa@fp:
  1420                           	callstack 0
  1421                           
  1422                           ; 2 bytes @ 0x1F
  1423   000020                     	ds	1
  1424   000021                     runGPIO@GPIOreverse:
  1425                           	callstack 0
  1426   000021                     ___flmul@aexp:
  1427                           	callstack 0
  1428                           
  1429                           ; 1 bytes @ 0x20
  1430   000021                     	ds	1
  1431   000022                     runGPIO@numberOfStates:
  1432                           	callstack 0
  1433   000022                     dtoa@d:
  1434                           	callstack 0
  1435   000022                     ___flmul@grs:
  1436                           	callstack 0
  1437                           
  1438                           ; 4 bytes @ 0x21
  1439   000022                     	ds	2
  1440   000024                     runGPIO@GPIOi:
  1441                           	callstack 0
  1442   000024                     _dtoa$3674:
  1443                           	callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x23
  1446   000024                     	ds	1
  1447   000025                     runGPIO@j:
  1448                           	callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x24
  1451   000025                     	ds	1
  1452   000026                     ___flmul@bexp:
  1453                           	callstack 0
  1454   000026                     dtoa@w:
  1455                           	callstack 0
  1456                           
  1457                           ; 2 bytes @ 0x25
  1458   000026                     	ds	1
  1459   000027                     ___flmul@prod:
  1460                           	callstack 0
  1461                           
  1462                           ; 4 bytes @ 0x26
  1463   000027                     	ds	1
  1464   000028                     dtoa@p:
  1465                           	callstack 0
  1466                           
  1467                           ; 2 bytes @ 0x27
  1468   000028                     	ds	2
  1469   00002A                     dtoa@s:
  1470                           	callstack 0
  1471                           
  1472                           ; 1 bytes @ 0x29
  1473   00002A                     	ds	1
  1474   00002B                     ___flmul@temp:
  1475                           	callstack 0
  1476   00002B                     dtoa@i:
  1477                           	callstack 0
  1478                           
  1479                           ; 2 bytes @ 0x2A
  1480   00002B                     	ds	2
  1481   00002D                     ?___fldiv:
  1482                           	callstack 0
  1483   00002D                     ___flge@ff1:
  1484                           	callstack 0
  1485   00002D                     ___fldiv@b:
  1486                           	callstack 0
  1487                           
  1488                           ; 4 bytes @ 0x2C
  1489   00002D                     	ds	4
  1490   000031                     ___flge@ff2:
  1491                           	callstack 0
  1492   000031                     ___fldiv@a:
  1493                           	callstack 0
  1494                           
  1495                           ; 4 bytes @ 0x30
  1496   000031                     	ds	4
  1497   000035                     ??___fldiv:
  1498   000035                     ??___flge:
  1499                           
  1500                           ; 1 bytes @ 0x34
  1501   000035                     	ds	4
  1502   000039                     ___fldiv@rem:
  1503                           	callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x38
  1506   000039                     	ds	4
  1507   00003D                     ___fldiv@sign:
  1508                           	callstack 0
  1509                           
  1510                           ; 1 bytes @ 0x3C
  1511   00003D                     	ds	1
  1512   00003E                     ___fldiv@new_exp:
  1513                           	callstack 0
  1514                           
  1515                           ; 2 bytes @ 0x3D
  1516   00003E                     	ds	2
  1517   000040                     ___fldiv@grs:
  1518                           	callstack 0
  1519                           
  1520                           ; 4 bytes @ 0x3F
  1521   000040                     	ds	4
  1522   000044                     ___fldiv@bexp:
  1523                           	callstack 0
  1524                           
  1525                           ; 1 bytes @ 0x43
  1526   000044                     	ds	1
  1527   000045                     ___fldiv@aexp:
  1528                           	callstack 0
  1529                           
  1530                           ; 1 bytes @ 0x44
  1531   000045                     	ds	1
  1532   000046                     ?___fladd:
  1533                           	callstack 0
  1534   000046                     ?_floorf:
  1535                           	callstack 0
  1536   000046                     ___fladd@b:
  1537                           	callstack 0
  1538   000046                     floorf@x:
  1539                           	callstack 0
  1540                           
  1541                           ; 4 bytes @ 0x45
  1542   000046                     	ds	4
  1543   00004A                     ??_floorf:
  1544   00004A                     ___fladd@a:
  1545                           	callstack 0
  1546                           
  1547                           ; 4 bytes @ 0x49
  1548   00004A                     	ds	4
  1549   00004E                     ??___fladd:
  1550                           
  1551                           ; 1 bytes @ 0x4D
  1552   00004E                     	ds	4
  1553   000052                     ___fltol@sign1:
  1554                           	callstack 0
  1555                           
  1556                           ; 1 bytes @ 0x51
  1557   000052                     	ds	1
  1558   000053                     ___fltol@exp1:
  1559                           	callstack 0
  1560                           
  1561                           ; 1 bytes @ 0x52
  1562   000053                     	ds	1
  1563   000054                     printf@ap:
  1564                           	callstack 0
  1565                           
  1566                           ; 1 bytes @ 0x53
  1567   000054                     	ds	1
  1568                           
  1569 ;;
  1570 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1571 ;;
  1572 ;; *************** function _main *****************
  1573 ;; Defined at:
  1574 ;;		line 10 in file "main.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  menuI           1  157[BANK0 ] unsigned char 
  1579 ;;  setUpAgain      1  156[BANK0 ] unsigned char 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;Total ram usage:        4 bytes
  1594 ;; Hardware stack levels required when called: 10
  1595 ;; This function calls:
  1596 ;;		_LCD_Init
  1597 ;;		_LCD_ShowString
  1598 ;;		_moveDisplay
  1599 ;;		_runADC
  1600 ;;		_runDAC
  1601 ;;		_runGAME
  1602 ;;		_runGPIO
  1603 ;;		_runMUSIC
  1604 ;;		_runPWM
  1605 ;;		_runUART
  1606 ;; This function is called by:
  1607 ;;		Startup code after reset
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text0
  1612   002762                     __ptext0:
  1613                           	callstack 0
  1614   002762                     _main:
  1615                           	callstack 21
  1616   002762                     
  1617                           ;main.c: 11:     _delay((unsigned long)((100)*(32E6/4000.0)));
  1618   002762  0E05               	movlw	5
  1619   002764  0100               	movlb	0	; () banked
  1620   002766  6FFB               	movwf	(??_main+1)& (0+255),b
  1621   002768  0E0F               	movlw	15
  1622   00276A  6FFA               	movwf	??_main& (0+255),b
  1623   00276C  0EF1               	movlw	241
  1624   00276E                     u9517:
  1625   00276E  2EE8               	decfsz	wreg,f,c
  1626   002770  D7FE               	bra	u9517
  1627   002772  2FFA               	decfsz	??_main& (0+255),f,b
  1628   002774  D7FC               	bra	u9517
  1629   002776  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1630   002778  D7FA               	bra	u9517
  1631   00277A                     
  1632                           ;main.c: 13:     TRISCbits.RC0 = 1;
  1633   00277A  8094               	bsf	148,0,c	;volatile
  1634   00277C                     
  1635                           ;main.c: 14:     TRISAbits.RA4 = 1;
  1636   00277C  8892               	bsf	146,4,c	;volatile
  1637   00277E                     
  1638                           ;main.c: 15:     TRISAbits.RA3 = 1;
  1639   00277E  8692               	bsf	146,3,c	;volatile
  1640   002780                     
  1641                           ;main.c: 16:     TRISAbits.RA2 = 1;
  1642   002780  8492               	bsf	146,2,c	;volatile
  1643   002782                     
  1644                           ;main.c: 17:     ANSELAbits.ANSA3 = 0;
  1645   002782  010F               	movlb	15	; () banked
  1646   002784  9738               	bcf	56,3,b	;volatile
  1647   002786                     
  1648                           ; BSR set to: 15
  1649                           ;main.c: 18:     ANSELAbits.ANSA2 = 0;
  1650   002786  9538               	bcf	56,2,b	;volatile
  1651   002788                     
  1652                           ; BSR set to: 15
  1653                           ;main.c: 21:     TRISDbits.RD2 = 0;
  1654   002788  9495               	bcf	149,2,c	;volatile
  1655   00278A                     
  1656                           ; BSR set to: 15
  1657                           ;main.c: 22:     TRISDbits.RD3 = 0;
  1658   00278A  9695               	bcf	149,3,c	;volatile
  1659   00278C                     
  1660                           ; BSR set to: 15
  1661                           ;main.c: 23:     TRISCbits.RC4 = 0;
  1662   00278C  9894               	bcf	148,4,c	;volatile
  1663   00278E                     
  1664                           ; BSR set to: 15
  1665                           ;main.c: 24:     TRISDbits.RD4 = 0;
  1666   00278E  9895               	bcf	149,4,c	;volatile
  1667   002790                     
  1668                           ; BSR set to: 15
  1669                           ;main.c: 25:     TRISDbits.RD5 = 0;
  1670   002790  9A95               	bcf	149,5,c	;volatile
  1671   002792                     
  1672                           ; BSR set to: 15
  1673                           ;main.c: 26:     TRISDbits.RD6 = 0;
  1674   002792  9C95               	bcf	149,6,c	;volatile
  1675   002794                     
  1676                           ; BSR set to: 15
  1677                           ;main.c: 27:     LATDbits.LD2 = 1;
  1678   002794  848C               	bsf	140,2,c	;volatile
  1679   002796                     
  1680                           ; BSR set to: 15
  1681                           ;main.c: 28:     LATDbits.LD3 = 1;
  1682   002796  868C               	bsf	140,3,c	;volatile
  1683   002798                     
  1684                           ; BSR set to: 15
  1685                           ;main.c: 29:     LATCbits.LC4 = 1;
  1686   002798  888B               	bsf	139,4,c	;volatile
  1687   00279A                     
  1688                           ; BSR set to: 15
  1689                           ;main.c: 30:     LATDbits.LD4 = 1;
  1690   00279A  888C               	bsf	140,4,c	;volatile
  1691   00279C                     
  1692                           ; BSR set to: 15
  1693                           ;main.c: 31:     LATDbits.LD5 = 1;
  1694   00279C  8A8C               	bsf	140,5,c	;volatile
  1695   00279E                     
  1696                           ; BSR set to: 15
  1697                           ;main.c: 32:     LATDbits.LD6 = 1;
  1698   00279E  8C8C               	bsf	140,6,c	;volatile
  1699   0027A0                     
  1700                           ; BSR set to: 15
  1701                           ;main.c: 35:     LCD_Init();
  1702   0027A0  ECB6  F01F         	call	_LCD_Init	;wreg free
  1703   0027A4                     
  1704                           ;main.c: 36:     uint8_t menuI = 0;
  1705   0027A4  0E00               	movlw	0
  1706   0027A6  0100               	movlb	0	; () banked
  1707   0027A8  6FFD               	movwf	main@menuI& (0+255),b
  1708   0027AA                     
  1709                           ; BSR set to: 0
  1710                           ;main.c: 37:     uint8_t setUpAgain = 0;
  1711   0027AA  0E00               	movlw	0
  1712   0027AC  6FFC               	movwf	main@setUpAgain& (0+255),b
  1713   0027AE                     
  1714                           ; BSR set to: 0
  1715                           ;main.c: 44:     menuI = moveDisplay(menuI,0);
  1716   0027AE  0E00               	movlw	0
  1717   0027B0  6FE7               	movwf	moveDisplay@where& (0+255),b
  1718   0027B2  51FD               	movf	main@menuI& (0+255),w,b
  1719   0027B4  ECA8  F01D         	call	_moveDisplay
  1720   0027B8  0100               	movlb	0	; () banked
  1721   0027BA  6FFD               	movwf	main@menuI& (0+255),b
  1722   0027BC                     l7400:
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;main.c: 47:         if(PORTCbits.RC0){
  1726   0027BC  A082               	btfss	130,0,c	;volatile
  1727   0027BE  EFE3  F013         	goto	u9411
  1728   0027C2  EFE5  F013         	goto	u9410
  1729   0027C6                     u9411:
  1730   0027C6  EF07  F014         	goto	l52
  1731   0027CA                     u9410:
  1732   0027CA                     
  1733                           ; BSR set to: 0
  1734                           ;main.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1735   0027CA  0E03               	movlw	3
  1736   0027CC  0100               	movlb	0	; () banked
  1737   0027CE  6FFB               	movwf	(??_main+1)& (0+255),b
  1738   0027D0  0E08               	movlw	8
  1739   0027D2  6FFA               	movwf	??_main& (0+255),b
  1740   0027D4  0E77               	movlw	119
  1741   0027D6                     u9527:
  1742   0027D6  2EE8               	decfsz	wreg,f,c
  1743   0027D8  D7FE               	bra	u9527
  1744   0027DA  2FFA               	decfsz	??_main& (0+255),f,b
  1745   0027DC  D7FC               	bra	u9527
  1746   0027DE  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1747   0027E0  D7FA               	bra	u9527
  1748   0027E2                     
  1749                           ;main.c: 49:             if(PORTCbits.RC0){
  1750   0027E2  A082               	btfss	130,0,c	;volatile
  1751   0027E4  EFF6  F013         	goto	u9421
  1752   0027E8  EFF8  F013         	goto	u9420
  1753   0027EC                     u9421:
  1754   0027EC  EF07  F014         	goto	l52
  1755   0027F0                     u9420:
  1756   0027F0                     
  1757                           ;main.c: 50:                 menuI = moveDisplay(menuI,2);
  1758   0027F0  0E02               	movlw	2
  1759   0027F2  0100               	movlb	0	; () banked
  1760   0027F4  6FE7               	movwf	moveDisplay@where& (0+255),b
  1761   0027F6  51FD               	movf	main@menuI& (0+255),w,b
  1762   0027F8  ECA8  F01D         	call	_moveDisplay
  1763   0027FC  0100               	movlb	0	; () banked
  1764   0027FE  6FFD               	movwf	main@menuI& (0+255),b
  1765   002800                     l54:
  1766   002800  B082               	btfsc	130,0,c	;volatile
  1767   002802  EF05  F014         	goto	u9431
  1768   002806  EF07  F014         	goto	u9430
  1769   00280A                     u9431:
  1770   00280A  EF00  F014         	goto	l54
  1771   00280E                     u9430:
  1772   00280E                     l52:
  1773                           
  1774                           ;main.c: 54:         if(PORTAbits.RA4){
  1775   00280E  A880               	btfss	128,4,c	;volatile
  1776   002810  EF0C  F014         	goto	u9441
  1777   002814  EF0E  F014         	goto	u9440
  1778   002818                     u9441:
  1779   002818  EF30  F014         	goto	l57
  1780   00281C                     u9440:
  1781   00281C                     
  1782                           ;main.c: 55:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1783   00281C  0E03               	movlw	3
  1784   00281E  0100               	movlb	0	; () banked
  1785   002820  6FFB               	movwf	(??_main+1)& (0+255),b
  1786   002822  0E08               	movlw	8
  1787   002824  6FFA               	movwf	??_main& (0+255),b
  1788   002826  0E77               	movlw	119
  1789   002828                     u9537:
  1790   002828  2EE8               	decfsz	wreg,f,c
  1791   00282A  D7FE               	bra	u9537
  1792   00282C  2FFA               	decfsz	??_main& (0+255),f,b
  1793   00282E  D7FC               	bra	u9537
  1794   002830  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1795   002832  D7FA               	bra	u9537
  1796   002834                     
  1797                           ;main.c: 56:             if(PORTAbits.RA4){
  1798   002834  A880               	btfss	128,4,c	;volatile
  1799   002836  EF1F  F014         	goto	u9451
  1800   00283A  EF21  F014         	goto	u9450
  1801   00283E                     u9451:
  1802   00283E  EF30  F014         	goto	l57
  1803   002842                     u9450:
  1804   002842                     
  1805                           ;main.c: 57:                 menuI = moveDisplay(menuI,1);
  1806   002842  0E01               	movlw	1
  1807   002844  0100               	movlb	0	; () banked
  1808   002846  6FE7               	movwf	moveDisplay@where& (0+255),b
  1809   002848  51FD               	movf	main@menuI& (0+255),w,b
  1810   00284A  ECA8  F01D         	call	_moveDisplay
  1811   00284E  0100               	movlb	0	; () banked
  1812   002850  6FFD               	movwf	main@menuI& (0+255),b
  1813   002852                     l59:
  1814   002852  B880               	btfsc	128,4,c	;volatile
  1815   002854  EF2E  F014         	goto	u9461
  1816   002858  EF30  F014         	goto	u9460
  1817   00285C                     u9461:
  1818   00285C  EF29  F014         	goto	l59
  1819   002860                     u9460:
  1820   002860                     l57:
  1821                           
  1822                           ;main.c: 61:         if(PORTAbits.RA3){
  1823   002860  A680               	btfss	128,3,c	;volatile
  1824   002862  EF35  F014         	goto	u9471
  1825   002866  EF37  F014         	goto	u9470
  1826   00286A                     u9471:
  1827   00286A  EFED  F014         	goto	l62
  1828   00286E                     u9470:
  1829   00286E                     
  1830                           ;main.c: 62:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1831   00286E  0E03               	movlw	3
  1832   002870  0100               	movlb	0	; () banked
  1833   002872  6FFB               	movwf	(??_main+1)& (0+255),b
  1834   002874  0E08               	movlw	8
  1835   002876  6FFA               	movwf	??_main& (0+255),b
  1836   002878  0E77               	movlw	119
  1837   00287A                     u9547:
  1838   00287A  2EE8               	decfsz	wreg,f,c
  1839   00287C  D7FE               	bra	u9547
  1840   00287E  2FFA               	decfsz	??_main& (0+255),f,b
  1841   002880  D7FC               	bra	u9547
  1842   002882  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1843   002884  D7FA               	bra	u9547
  1844   002886                     
  1845                           ;main.c: 63:             if(PORTAbits.RA3){
  1846   002886  A680               	btfss	128,3,c	;volatile
  1847   002888  EF48  F014         	goto	u9481
  1848   00288C  EF4A  F014         	goto	u9480
  1849   002890                     u9481:
  1850   002890  EFED  F014         	goto	l62
  1851   002894                     u9480:
  1852   002894                     l64:
  1853   002894  B680               	btfsc	128,3,c	;volatile
  1854   002896  EF4F  F014         	goto	u9491
  1855   00289A  EF51  F014         	goto	u9490
  1856   00289E                     u9491:
  1857   00289E  EF4A  F014         	goto	l64
  1858   0028A2                     u9490:
  1859   0028A2  EFCD  F014         	goto	l7464
  1860   0028A6                     l7420:
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;main.c: 67:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  1864   0028A6  0E58               	movlw	low STR_1
  1865   0028A8  6E07               	movwf	LCD_ShowString@textData^0,c
  1866   0028AA  0EFF               	movlw	high STR_1
  1867   0028AC  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1868   0028AE  0E01               	movlw	1
  1869   0028B0  ECEA  F020         	call	_LCD_ShowString
  1870                           
  1871                           ;main.c: 68:                         LCD_ShowString((char)2, "                ");
  1872   0028B4  0E36               	movlw	low STR_2
  1873   0028B6  6E07               	movwf	LCD_ShowString@textData^0,c
  1874   0028B8  0EFF               	movlw	high STR_2
  1875   0028BA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1876   0028BC  0E02               	movlw	2
  1877   0028BE  ECEA  F020         	call	_LCD_ShowString
  1878   0028C2                     
  1879                           ;main.c: 69:                         runGPIO();
  1880   0028C2  EC97  F01B         	call	_runGPIO	;wreg free
  1881   0028C6                     l7424:
  1882                           
  1883                           ;main.c: 70:                         setUpAgain = 1;
  1884   0028C6  0E01               	movlw	1
  1885   0028C8  0100               	movlb	0	; () banked
  1886   0028CA  6FFC               	movwf	main@setUpAgain& (0+255),b
  1887                           
  1888                           ;main.c: 71:                         break;
  1889   0028CC  EFED  F014         	goto	l62
  1890   0028D0                     l7426:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;main.c: 73:                         LCD_ShowString((char)1, "BR: 19200       ");
  1894   0028D0  0E47               	movlw	low STR_3
  1895   0028D2  6E07               	movwf	LCD_ShowString@textData^0,c
  1896   0028D4  0EFF               	movlw	high STR_3
  1897   0028D6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1898   0028D8  0E01               	movlw	1
  1899   0028DA  ECEA  F020         	call	_LCD_ShowString
  1900                           
  1901                           ;main.c: 74:                         LCD_ShowString((char)2, "Konec - new line");
  1902   0028DE  0E9C               	movlw	low STR_4
  1903   0028E0  6E07               	movwf	LCD_ShowString@textData^0,c
  1904   0028E2  0EFF               	movlw	high STR_4
  1905   0028E4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1906   0028E6  0E02               	movlw	2
  1907   0028E8  ECEA  F020         	call	_LCD_ShowString
  1908   0028EC                     
  1909                           ;main.c: 75:                         runUART();
  1910   0028EC  EC4F  F01C         	call	_runUART	;wreg free
  1911   0028F0  EF63  F014         	goto	l7424
  1912   0028F4                     l7432:
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;main.c: 79:                         LCD_ShowString((char)1, "Zmacknete BTN2  ");
  1916   0028F4  0E69               	movlw	low STR_5
  1917   0028F6  6E07               	movwf	LCD_ShowString@textData^0,c
  1918   0028F8  0EFF               	movlw	high STR_5
  1919   0028FA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1920   0028FC  0E01               	movlw	1
  1921   0028FE  ECEA  F020         	call	_LCD_ShowString
  1922                           
  1923                           ;main.c: 80:                         LCD_ShowString((char)2, "                ");
  1924   002902  0E36               	movlw	low STR_2
  1925   002904  6E07               	movwf	LCD_ShowString@textData^0,c
  1926   002906  0EFF               	movlw	high STR_2
  1927   002908  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1928   00290A  0E02               	movlw	2
  1929   00290C  ECEA  F020         	call	_LCD_ShowString
  1930   002910                     
  1931                           ;main.c: 81:                         runPWM();
  1932   002910  EC05  F01D         	call	_runPWM	;wreg free
  1933   002914  EF63  F014         	goto	l7424
  1934   002918                     l7438:
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;main.c: 85:                         LCD_ShowString((char)1, "Volty na POTech:");
  1938   002918  0E8B               	movlw	low STR_7
  1939   00291A  6E07               	movwf	LCD_ShowString@textData^0,c
  1940   00291C  0EFF               	movlw	high STR_7
  1941   00291E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1942   002920  0E01               	movlw	1
  1943   002922  ECEA  F020         	call	_LCD_ShowString
  1944   002926                     
  1945                           ;main.c: 86:                         runADC();
  1946   002926  EC28  F017         	call	_runADC	;wreg free
  1947   00292A  EF63  F014         	goto	l7424
  1948   00292E                     l7444:
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;main.c: 90:                         LCD_ShowString((char)1, "RB0-A2, BR:19200");
  1952   00292E  0E7A               	movlw	low STR_8
  1953   002930  6E07               	movwf	LCD_ShowString@textData^0,c
  1954   002932  0EFF               	movlw	high STR_8
  1955   002934  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1956   002936  0E01               	movlw	1
  1957   002938  ECEA  F020         	call	_LCD_ShowString
  1958                           
  1959                           ;main.c: 91:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  1960   00293C  0EAD               	movlw	low STR_9
  1961   00293E  6E07               	movwf	LCD_ShowString@textData^0,c
  1962   002940  0EFF               	movlw	high STR_9
  1963   002942  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1964   002944  0E02               	movlw	2
  1965   002946  ECEA  F020         	call	_LCD_ShowString
  1966   00294A                     
  1967                           ;main.c: 92:                         runDAC();
  1968   00294A  EC3D  F012         	call	_runDAC	;wreg free
  1969   00294E  EF63  F014         	goto	l7424
  1970   002952                     l7450:
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;main.c: 96:                         LCD_ShowString((char)1, "                ");
  1974   002952  0E36               	movlw	low STR_2
  1975   002954  6E07               	movwf	LCD_ShowString@textData^0,c
  1976   002956  0EFF               	movlw	high STR_2
  1977   002958  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1978   00295A  0E01               	movlw	1
  1979   00295C  ECEA  F020         	call	_LCD_ShowString
  1980                           
  1981                           ;main.c: 97:                         LCD_ShowString((char)2, "                ");
  1982   002960  0E36               	movlw	low STR_2
  1983   002962  6E07               	movwf	LCD_ShowString@textData^0,c
  1984   002964  0EFF               	movlw	high STR_2
  1985   002966  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1986   002968  0E02               	movlw	2
  1987   00296A  ECEA  F020         	call	_LCD_ShowString
  1988   00296E                     
  1989                           ;main.c: 98:                         runGAME();
  1990   00296E  ECDD  F024         	call	_runGAME	;wreg free
  1991   002972  EF63  F014         	goto	l7424
  1992   002976                     l7456:
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;main.c: 102:                         LCD_ShowString((char)1, "                ");
  1996   002976  0E36               	movlw	low STR_2
  1997   002978  6E07               	movwf	LCD_ShowString@textData^0,c
  1998   00297A  0EFF               	movlw	high STR_2
  1999   00297C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2000   00297E  0E01               	movlw	1
  2001   002980  ECEA  F020         	call	_LCD_ShowString
  2002                           
  2003                           ;main.c: 103:                         LCD_ShowString((char)2, "                ");
  2004   002984  0E36               	movlw	low STR_2
  2005   002986  6E07               	movwf	LCD_ShowString@textData^0,c
  2006   002988  0EFF               	movlw	high STR_2
  2007   00298A  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2008   00298C  0E02               	movlw	2
  2009   00298E  ECEA  F020         	call	_LCD_ShowString
  2010   002992                     
  2011                           ;main.c: 104:                         runMUSIC();
  2012   002992  ECDC  F024         	call	_runMUSIC	;wreg free
  2013   002996  EF63  F014         	goto	l7424
  2014   00299A                     l7464:
  2015   00299A  0100               	movlb	0	; () banked
  2016   00299C  51FD               	movf	main@menuI& (0+255),w,b
  2017                           
  2018                           ; Switch size 1, requested type "simple"
  2019                           ; Number of cases is 7, Range of values is 0 to 6
  2020                           ; switch strategies available:
  2021                           ; Name         Instructions Cycles
  2022                           ; simple_byte           22    12 (average)
  2023                           ;	Chosen strategy is simple_byte
  2024   00299E  0A00               	xorlw	0	; case 0
  2025   0029A0  B4D8               	btfsc	status,2,c
  2026   0029A2  EF53  F014         	goto	l7420
  2027   0029A6  0A01               	xorlw	1	; case 1
  2028   0029A8  B4D8               	btfsc	status,2,c
  2029   0029AA  EF68  F014         	goto	l7426
  2030   0029AE  0A03               	xorlw	3	; case 2
  2031   0029B0  B4D8               	btfsc	status,2,c
  2032   0029B2  EF7A  F014         	goto	l7432
  2033   0029B6  0A01               	xorlw	1	; case 3
  2034   0029B8  B4D8               	btfsc	status,2,c
  2035   0029BA  EF8C  F014         	goto	l7438
  2036   0029BE  0A07               	xorlw	7	; case 4
  2037   0029C0  B4D8               	btfsc	status,2,c
  2038   0029C2  EF97  F014         	goto	l7444
  2039   0029C6  0A01               	xorlw	1	; case 5
  2040   0029C8  B4D8               	btfsc	status,2,c
  2041   0029CA  EFA9  F014         	goto	l7450
  2042   0029CE  0A03               	xorlw	3	; case 6
  2043   0029D0  B4D8               	btfsc	status,2,c
  2044   0029D2  EFBB  F014         	goto	l7456
  2045   0029D6  EFED  F014         	goto	l62
  2046   0029DA                     l62:
  2047                           
  2048                           ;main.c: 111:         if(PORTAbits.RA2){
  2049   0029DA  5080               	movf	128,w,c	;volatile
  2050   0029DC                     
  2051                           ;main.c: 115:         if(setUpAgain){
  2052   0029DC  0100               	movlb	0	; () banked
  2053   0029DE  51FC               	movf	main@setUpAgain& (0+255),w,b
  2054   0029E0  B4D8               	btfsc	status,2,c
  2055   0029E2  EFF5  F014         	goto	u9501
  2056   0029E6  EFF7  F014         	goto	u9500
  2057   0029EA                     u9501:
  2058   0029EA  EFDE  F013         	goto	l7400
  2059   0029EE                     u9500:
  2060   0029EE                     
  2061                           ; BSR set to: 0
  2062                           ;main.c: 116:         menuI = moveDisplay(menuI,0);
  2063   0029EE  0E00               	movlw	0
  2064   0029F0  6FE7               	movwf	moveDisplay@where& (0+255),b
  2065   0029F2  51FD               	movf	main@menuI& (0+255),w,b
  2066   0029F4  ECA8  F01D         	call	_moveDisplay
  2067   0029F8  0100               	movlb	0	; () banked
  2068   0029FA  6FFD               	movwf	main@menuI& (0+255),b
  2069   0029FC                     
  2070                           ; BSR set to: 0
  2071                           ;main.c: 117:         setUpAgain = 0;
  2072   0029FC  0E00               	movlw	0
  2073   0029FE  6FFC               	movwf	main@setUpAgain& (0+255),b
  2074   002A00  EFDE  F013         	goto	l7400
  2075   002A04  EF8A  F000         	goto	start
  2076   002A08                     __end_of_main:
  2077                           	callstack 0
  2078                           
  2079 ;; *************** function _runUART *****************
  2080 ;; Defined at:
  2081 ;;		line 4 in file "UART.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  p               2  152[BANK0 ] int 
  2086 ;;  i               2  150[BANK0 ] unsigned int 
  2087 ;;  reversed       31  116[BANK0 ] unsigned char [31]
  2088 ;;  len             2  148[BANK0 ] unsigned int 
  2089 ;;  keepState       1  147[BANK0 ] unsigned char 
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;Total ram usage:       40 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; Hardware stack levels required when called: 9
  2106 ;; This function calls:
  2107 ;;		_printf
  2108 ;;		_strlen
  2109 ;; This function is called by:
  2110 ;;		_main
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text1
  2115   00389E                     __ptext1:
  2116                           	callstack 0
  2117   00389E                     _runUART:
  2118                           	callstack 21
  2119   00389E                     
  2120                           ;UART.c: 6:     TRISAbits.RA2 = 1;
  2121   00389E  8492               	bsf	146,2,c	;volatile
  2122                           
  2123                           ;UART.c: 8:     ANSELCbits.ANSC6 = 0;
  2124   0038A0  010F               	movlb	15	; () banked
  2125   0038A2  9D3A               	bcf	58,6,b	;volatile
  2126                           
  2127                           ;UART.c: 9:     ANSELCbits.ANSC7 = 0;
  2128   0038A4  9F3A               	bcf	58,7,b	;volatile
  2129                           
  2130                           ;UART.c: 10:     TRISCbits.TRISC6 = 1;
  2131   0038A6  8C94               	bsf	148,6,c	;volatile
  2132                           
  2133                           ;UART.c: 11:     TRISCbits.TRISC7 = 1;
  2134   0038A8  8E94               	bsf	148,7,c	;volatile
  2135   0038AA                     
  2136                           ; BSR set to: 15
  2137                           ;UART.c: 14:     SPBRG1 = 25;
  2138   0038AA  0E19               	movlw	25
  2139   0038AC  6EAF               	movwf	175,c	;volatile
  2140   0038AE                     
  2141                           ; BSR set to: 15
  2142                           ;UART.c: 16:     TXSTA1bits.SYNC = 0;
  2143   0038AE  98AC               	bcf	172,4,c	;volatile
  2144   0038B0                     
  2145                           ; BSR set to: 15
  2146                           ;UART.c: 17:     RCSTA1bits.SPEN = 1;
  2147   0038B0  8EAB               	bsf	171,7,c	;volatile
  2148   0038B2                     
  2149                           ; BSR set to: 15
  2150                           ;UART.c: 18:     TXSTA1bits.TXEN = 1;
  2151   0038B2  8AAC               	bsf	172,5,c	;volatile
  2152   0038B4                     
  2153                           ; BSR set to: 15
  2154                           ;UART.c: 19:     RCSTA1bits.CREN = 1;
  2155   0038B4  88AB               	bsf	171,4,c	;volatile
  2156                           
  2157                           ;UART.c: 21:     UARTIE = 1;
  2158   0038B6  0E01               	movlw	1
  2159   0038B8  0101               	movlb	1	; () banked
  2160   0038BA  6F23               	movwf	_UARTIE& (0+255),b
  2161   0038BC                     
  2162                           ; BSR set to: 1
  2163                           ;UART.c: 22:     RC1IE = 1;
  2164   0038BC  8A9D               	bsf	3997,5,c	;volatile
  2165   0038BE                     
  2166                           ; BSR set to: 1
  2167                           ;UART.c: 23:     PEIE = 1;
  2168   0038BE  8CF2               	bsf	4082,6,c	;volatile
  2169   0038C0                     
  2170                           ; BSR set to: 1
  2171                           ;UART.c: 24:     GIE = 1;
  2172   0038C0  8EF2               	bsf	4082,7,c	;volatile
  2173                           
  2174                           ;UART.c: 26:     uint8_t keepState = 1;
  2175   0038C2  0E01               	movlw	1
  2176   0038C4  0100               	movlb	0	; () banked
  2177   0038C6  6FF3               	movwf	runUART@keepState& (0+255),b
  2178                           
  2179                           ;UART.c: 28:     while(keepState){
  2180   0038C8  EFF2  F01C         	goto	l538
  2181   0038CC                     l7150:
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;UART.c: 29:         if(gmail.full){
  2185   0038CC  0101               	movlb	1	; () banked
  2186   0038CE  5194               	movf	(_gmail+31)& (0+255),w,b	;volatile
  2187   0038D0  B4D8               	btfsc	status,2,c
  2188   0038D2  EF6D  F01C         	goto	u9091
  2189   0038D6  EF6F  F01C         	goto	u9090
  2190   0038DA                     u9091:
  2191   0038DA  EFCE  F01C         	goto	l540
  2192   0038DE                     u9090:
  2193   0038DE                     
  2194                           ; BSR set to: 1
  2195                           ;UART.c: 30:             char reversed[31];;UART.c: 31:             size_t len = strlen(
      +                          (const char*)gmail.data);
  2196   0038DE  0E75               	movlw	low _gmail
  2197   0038E0  6E06               	movwf	strlen@s^0,c
  2198   0038E2  0E01               	movlw	high _gmail
  2199   0038E4  6E07               	movwf	(strlen@s+1)^0,c
  2200   0038E6  ECF3  F023         	call	_strlen	;wreg free
  2201   0038EA  C006  F0F4         	movff	?_strlen,runUART@len
  2202   0038EE  C007  F0F5         	movff	?_strlen+1,runUART@len+1
  2203   0038F2                     
  2204                           ;UART.c: 33:             for(size_t i = 0; i < len; i++) {
  2205   0038F2  0E00               	movlw	0
  2206   0038F4  0100               	movlb	0	; () banked
  2207   0038F6  6FF7               	movwf	(runUART@i+1)& (0+255),b
  2208   0038F8  0E00               	movlw	0
  2209   0038FA  6FF6               	movwf	runUART@i& (0+255),b
  2210   0038FC  EF96  F01C         	goto	l7160
  2211   003900                     l7156:
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;UART.c: 34:                 reversed[i] = gmail.data[len - 1 - i];
  2215   003900  0E74               	movlw	low (_gmail+65535)
  2216   003902  6FD2               	movwf	??_runUART& (0+255),b
  2217   003904  0E01               	movlw	high (_gmail+65535)
  2218   003906  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2219   003908  51F6               	movf	runUART@i& (0+255),w,b
  2220   00390A  5FD2               	subwf	??_runUART& (0+255),f,b
  2221   00390C  51F7               	movf	(runUART@i+1)& (0+255),w,b
  2222   00390E  5BD3               	subwfb	(??_runUART+1)& (0+255),f,b
  2223   003910  51F4               	movf	runUART@len& (0+255),w,b
  2224   003912  25D2               	addwf	??_runUART& (0+255),w,b
  2225   003914  6ED9               	movwf	fsr2l,c
  2226   003916  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2227   003918  21D3               	addwfc	(??_runUART+1)& (0+255),w,b
  2228   00391A  6EDA               	movwf	fsr2h,c
  2229   00391C  51F6               	movf	runUART@i& (0+255),w,b
  2230   00391E  0FD4               	addlw	low runUART@reversed
  2231   003920  6EE1               	movwf	fsr1l,c
  2232   003922  6AE2               	clrf	fsr1h,c
  2233   003924  CFDF FFE7          	movff	indf2,indf1
  2234   003928                     
  2235                           ; BSR set to: 0
  2236                           ;UART.c: 35:             }
  2237   003928  4BF6               	infsnz	runUART@i& (0+255),f,b
  2238   00392A  2BF7               	incf	(runUART@i+1)& (0+255),f,b
  2239   00392C                     l7160:
  2240                           
  2241                           ; BSR set to: 0
  2242   00392C  51F4               	movf	runUART@len& (0+255),w,b
  2243   00392E  5DF6               	subwf	runUART@i& (0+255),w,b
  2244   003930  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2245   003932  59F7               	subwfb	(runUART@i+1)& (0+255),w,b
  2246   003934  A0D8               	btfss	status,0,c
  2247   003936  EF9F  F01C         	goto	u9101
  2248   00393A  EFA1  F01C         	goto	u9100
  2249   00393E                     u9101:
  2250   00393E  EF80  F01C         	goto	l7156
  2251   003942                     u9100:
  2252   003942                     
  2253                           ; BSR set to: 0
  2254                           ;UART.c: 36:             reversed[len] = '\0';
  2255   003942  51F4               	movf	runUART@len& (0+255),w,b
  2256   003944  0FD4               	addlw	low runUART@reversed
  2257   003946  6ED9               	movwf	fsr2l,c
  2258   003948  6ADA               	clrf	fsr2h,c
  2259   00394A  6ADF               	clrf	indf2,c
  2260   00394C                     
  2261                           ; BSR set to: 0
  2262                           ;UART.c: 37:             printf("%s \n", reversed);
  2263   00394C  0ED1               	movlw	low STR_26
  2264   00394E  6FCE               	movwf	printf@fmt& (0+255),b
  2265   003950  0EFF               	movlw	high STR_26
  2266   003952  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  2267   003954  0ED4               	movlw	low runUART@reversed
  2268   003956  6FD0               	movwf	(?_printf+2)& (0+255),b
  2269   003958  6BD1               	clrf	(?_printf+3)& (0+255),b
  2270   00395A  EC97  F024         	call	_printf	;wreg free
  2271   00395E                     
  2272                           ;UART.c: 39:             gmail.full = 0;
  2273   00395E  0E00               	movlw	0
  2274   003960  0101               	movlb	1	; () banked
  2275   003962  6F94               	movwf	(_gmail+31)& (0+255),b	;volatile
  2276   003964                     
  2277                           ; BSR set to: 1
  2278                           ;UART.c: 41:             for(int p = 0; p < 31; p++) {
  2279   003964  0E00               	movlw	0
  2280   003966  0100               	movlb	0	; () banked
  2281   003968  6FF9               	movwf	(runUART@p+1)& (0+255),b
  2282   00396A  0E00               	movlw	0
  2283   00396C  6FF8               	movwf	runUART@p& (0+255),b
  2284   00396E                     l7174:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;UART.c: 42:                 gmail.data[p] = '\0';
  2288   00396E  0E75               	movlw	low _gmail
  2289   003970  25F8               	addwf	runUART@p& (0+255),w,b
  2290   003972  6ED9               	movwf	fsr2l,c
  2291   003974  0E01               	movlw	high _gmail
  2292   003976  21F9               	addwfc	(runUART@p+1)& (0+255),w,b
  2293   003978  6EDA               	movwf	fsr2h,c
  2294   00397A  6ADF               	clrf	indf2,c
  2295   00397C                     
  2296                           ; BSR set to: 0
  2297                           ;UART.c: 43:             }
  2298   00397C  4BF8               	infsnz	runUART@p& (0+255),f,b
  2299   00397E  2BF9               	incf	(runUART@p+1)& (0+255),f,b
  2300   003980                     
  2301                           ; BSR set to: 0
  2302   003980  BFF9               	btfsc	(runUART@p+1)& (0+255),7,b
  2303   003982  EFCC  F01C         	goto	u9111
  2304   003986  51F9               	movf	(runUART@p+1)& (0+255),w,b
  2305   003988  E109               	bnz	u9110
  2306   00398A  0E1F               	movlw	31
  2307   00398C  5DF8               	subwf	runUART@p& (0+255),w,b
  2308   00398E  A0D8               	btfss	status,0,c
  2309   003990  EFCC  F01C         	goto	u9111
  2310   003994  EFCE  F01C         	goto	u9110
  2311   003998                     u9111:
  2312   003998  EFB7  F01C         	goto	l7174
  2313   00399C                     u9110:
  2314   00399C                     l540:
  2315                           
  2316                           ;UART.c: 47:         if(PORTAbits.RA2){
  2317   00399C  A480               	btfss	128,2,c	;volatile
  2318   00399E  EFD3  F01C         	goto	u9121
  2319   0039A2  EFD5  F01C         	goto	u9120
  2320   0039A6                     u9121:
  2321   0039A6  EFF2  F01C         	goto	l538
  2322   0039AA                     u9120:
  2323   0039AA                     
  2324                           ;UART.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2325   0039AA  0E03               	movlw	3
  2326   0039AC  0100               	movlb	0	; () banked
  2327   0039AE  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2328   0039B0  0E08               	movlw	8
  2329   0039B2  6FD2               	movwf	??_runUART& (0+255),b
  2330   0039B4  0E77               	movlw	119
  2331   0039B6                     u9557:
  2332   0039B6  2EE8               	decfsz	wreg,f,c
  2333   0039B8  D7FE               	bra	u9557
  2334   0039BA  2FD2               	decfsz	??_runUART& (0+255),f,b
  2335   0039BC  D7FC               	bra	u9557
  2336   0039BE  2FD3               	decfsz	(??_runUART+1)& (0+255),f,b
  2337   0039C0  D7FA               	bra	u9557
  2338   0039C2                     
  2339                           ;UART.c: 49:             if(PORTAbits.RA2){
  2340   0039C2  A480               	btfss	128,2,c	;volatile
  2341   0039C4  EFE6  F01C         	goto	u9131
  2342   0039C8  EFE8  F01C         	goto	u9130
  2343   0039CC                     u9131:
  2344   0039CC  EFF2  F01C         	goto	l538
  2345   0039D0                     u9130:
  2346   0039D0                     l548:
  2347   0039D0  B480               	btfsc	128,2,c	;volatile
  2348   0039D2  EFED  F01C         	goto	u9141
  2349   0039D6  EFEF  F01C         	goto	u9140
  2350   0039DA                     u9141:
  2351   0039DA  EFE8  F01C         	goto	l548
  2352   0039DE                     u9140:
  2353   0039DE                     
  2354                           ;UART.c: 51:                 keepState = 0;
  2355   0039DE  0E00               	movlw	0
  2356   0039E0  0100               	movlb	0	; () banked
  2357   0039E2  6FF3               	movwf	runUART@keepState& (0+255),b
  2358   0039E4                     l538:
  2359                           
  2360                           ;UART.c: 28:     while(keepState){
  2361   0039E4  0100               	movlb	0	; () banked
  2362   0039E6  51F3               	movf	runUART@keepState& (0+255),w,b
  2363   0039E8  A4D8               	btfss	status,2,c
  2364   0039EA  EFF9  F01C         	goto	u9151
  2365   0039EE  EFFB  F01C         	goto	u9150
  2366   0039F2                     u9151:
  2367   0039F2  EF66  F01C         	goto	l7150
  2368   0039F6                     u9150:
  2369   0039F6                     
  2370                           ; BSR set to: 0
  2371                           ;UART.c: 58:     RCSTA1bits.SPEN = 0;
  2372   0039F6  9EAB               	bcf	171,7,c	;volatile
  2373                           
  2374                           ;UART.c: 59:     TXSTA1bits.TXEN = 0;
  2375   0039F8  9AAC               	bcf	172,5,c	;volatile
  2376                           
  2377                           ;UART.c: 60:     RCSTA1bits.CREN = 0;
  2378   0039FA  98AB               	bcf	171,4,c	;volatile
  2379   0039FC                     
  2380                           ; BSR set to: 0
  2381                           ;UART.c: 61:     UARTIE = 0;
  2382   0039FC  0E00               	movlw	0
  2383   0039FE  0101               	movlb	1	; () banked
  2384   003A00  6F23               	movwf	_UARTIE& (0+255),b
  2385   003A02                     
  2386                           ; BSR set to: 1
  2387                           ;UART.c: 62:     RC1IE = 0;
  2388   003A02  9A9D               	bcf	3997,5,c	;volatile
  2389   003A04                     
  2390                           ; BSR set to: 1
  2391                           ;UART.c: 63:     PEIE = 0;
  2392   003A04  9CF2               	bcf	4082,6,c	;volatile
  2393   003A06                     
  2394                           ; BSR set to: 1
  2395                           ;UART.c: 64:     GIE = 0;
  2396   003A06  9EF2               	bcf	4082,7,c	;volatile
  2397   003A08                     
  2398                           ; BSR set to: 1
  2399   003A08  0012               	return		;funcret
  2400   003A0A                     __end_of_runUART:
  2401                           	callstack 0
  2402                           
  2403 ;; *************** function _strlen *****************
  2404 ;; Defined at:
  2405 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strlen.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  s               2    5[COMRAM] PTR const unsigned char 
  2408 ;;		 -> gmail$data(31), gmail(32), 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  a               2    7[COMRAM] PTR const unsigned char 
  2411 ;;		 -> gmail$data(31), gmail(32), 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  2    5[COMRAM] unsigned int 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;Total ram usage:        4 bytes
  2426 ;; Hardware stack levels used: 1
  2427 ;; Hardware stack levels required when called: 1
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_runUART
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text2
  2436   0047E6                     __ptext2:
  2437                           	callstack 0
  2438   0047E6                     _strlen:
  2439                           	callstack 28
  2440   0047E6  C006  F008         	movff	strlen@s,strlen@a
  2441   0047EA  C007  F009         	movff	strlen@s+1,strlen@a+1
  2442   0047EE  EFFB  F023         	goto	l7044
  2443   0047F2                     l7042:
  2444   0047F2  4A06               	infsnz	strlen@s^0,f,c
  2445   0047F4  2A07               	incf	(strlen@s+1)^0,f,c
  2446   0047F6                     l7044:
  2447   0047F6  C006  FFD9         	movff	strlen@s,fsr2l
  2448   0047FA  C007  FFDA         	movff	strlen@s+1,fsr2h
  2449   0047FE  50DF               	movf	indf2,w,c
  2450   004800  A4D8               	btfss	status,2,c
  2451   004802  EF05  F024         	goto	u8941
  2452   004806  EF07  F024         	goto	u8940
  2453   00480A                     u8941:
  2454   00480A  EFF9  F023         	goto	l7042
  2455   00480E                     u8940:
  2456   00480E  5008               	movf	strlen@a^0,w,c
  2457   004810  5C06               	subwf	strlen@s^0,w,c
  2458   004812  6E06               	movwf	?_strlen^0,c
  2459   004814  5009               	movf	(strlen@a+1)^0,w,c
  2460   004816  5807               	subwfb	(strlen@s+1)^0,w,c
  2461   004818  6E07               	movwf	(?_strlen+1)^0,c
  2462   00481A  0012               	return		;funcret
  2463   00481C                     __end_of_strlen:
  2464                           	callstack 0
  2465                           
  2466 ;; *************** function _runPWM *****************
  2467 ;; Defined at:
  2468 ;;		line 11 in file "PWM.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  multiplier      1   16[COMRAM] unsigned char 
  2473 ;;  keepState       1   15[COMRAM] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;Total ram usage:        4 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; Hardware stack levels required when called: 2
  2490 ;; This function calls:
  2491 ;;		___awdiv
  2492 ;; This function is called by:
  2493 ;;		_main
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text3
  2498   003A0A                     __ptext3:
  2499                           	callstack 0
  2500   003A0A                     _runPWM:
  2501                           	callstack 28
  2502   003A0A                     
  2503                           ;PWM.c: 13:     TRISCbits.RC2 = 1;
  2504   003A0A  8494               	bsf	148,2,c	;volatile
  2505   003A0C                     
  2506                           ;PWM.c: 14:     CCPTMRS0bits.C1TSEL = 0b00;
  2507   003A0C  0EFC               	movlw	-4
  2508   003A0E  010F               	movlb	15	; () banked
  2509   003A10  1749               	andwf	73,f,b	;volatile
  2510                           
  2511                           ;PWM.c: 15:     PR2 = 199;
  2512   003A12  0EC7               	movlw	199
  2513   003A14  6EBB               	movwf	187,c	;volatile
  2514                           
  2515                           ;PWM.c: 16:     CCP1CONbits.CCP1M |= 0b1100;
  2516   003A16  0E0C               	movlw	12
  2517   003A18  12BD               	iorwf	189,f,c	;volatile
  2518                           
  2519                           ;PWM.c: 17:     CCP1CONbits.P1M = 0b10;
  2520   003A1A  50BD               	movf	189,w,c	;volatile
  2521   003A1C  0B3F               	andlw	-193
  2522   003A1E  0980               	iorlw	128
  2523   003A20  6EBD               	movwf	189,c	;volatile
  2524                           
  2525                           ;PWM.c: 18:     CCPR1L = 0;
  2526   003A22  0E00               	movlw	0
  2527   003A24  6EBE               	movwf	190,c	;volatile
  2528   003A26                     
  2529                           ; BSR set to: 15
  2530                           ;PWM.c: 19:     TMR2IF = 0;
  2531   003A26  929E               	bcf	3998,1,c	;volatile
  2532   003A28                     
  2533                           ; BSR set to: 15
  2534                           ;PWM.c: 20:     TMR2ON = 1;
  2535   003A28  84BA               	bsf	4026,2,c	;volatile
  2536   003A2A                     l482:
  2537   003A2A  A29E               	btfss	3998,1,c	;volatile
  2538   003A2C  EF1A  F01D         	goto	u9161
  2539   003A30  EF1C  F01D         	goto	u9160
  2540   003A34                     u9161:
  2541   003A34  EF15  F01D         	goto	l482
  2542   003A38                     u9160:
  2543   003A38                     
  2544                           ;PWM.c: 22:     TRISCbits.RC2 = 1;
  2545   003A38  8494               	bsf	148,2,c	;volatile
  2546                           
  2547                           ;PWM.c: 25:     TRISAbits.RA4 = 1;
  2548   003A3A  8892               	bsf	146,4,c	;volatile
  2549                           
  2550                           ;PWM.c: 26:     TRISAbits.RA2 = 1;
  2551   003A3C  8492               	bsf	146,2,c	;volatile
  2552                           
  2553                           ;PWM.c: 28:     TRISDbits.RD2 = 0;
  2554   003A3E  9495               	bcf	149,2,c	;volatile
  2555                           
  2556                           ;PWM.c: 29:     TRISDbits.RD3 = 0;
  2557   003A40  9695               	bcf	149,3,c	;volatile
  2558                           
  2559                           ;PWM.c: 30:     TRISCbits.RC4 = 0;
  2560   003A42  9894               	bcf	148,4,c	;volatile
  2561                           
  2562                           ;PWM.c: 31:     TRISDbits.RD4 = 0;
  2563   003A44  9895               	bcf	149,4,c	;volatile
  2564                           
  2565                           ;PWM.c: 32:     TRISDbits.RD5 = 0;
  2566   003A46  9A95               	bcf	149,5,c	;volatile
  2567                           
  2568                           ;PWM.c: 33:     TRISDbits.RD6 = 0;
  2569   003A48  9C95               	bcf	149,6,c	;volatile
  2570                           
  2571                           ;PWM.c: 34:     LATDbits.LD2 = 1;
  2572   003A4A  848C               	bsf	140,2,c	;volatile
  2573                           
  2574                           ;PWM.c: 35:     LATDbits.LD3 = 1;
  2575   003A4C  868C               	bsf	140,3,c	;volatile
  2576                           
  2577                           ;PWM.c: 36:     LATCbits.LC4 = 1;
  2578   003A4E  888B               	bsf	139,4,c	;volatile
  2579                           
  2580                           ;PWM.c: 37:     LATDbits.LD4 = 1;
  2581   003A50  888C               	bsf	140,4,c	;volatile
  2582                           
  2583                           ;PWM.c: 38:     LATDbits.LD5 = 1;
  2584   003A52  8A8C               	bsf	140,5,c	;volatile
  2585                           
  2586                           ;PWM.c: 39:     LATDbits.LD6 = 1;
  2587   003A54  8C8C               	bsf	140,6,c	;volatile
  2588   003A56                     
  2589                           ;PWM.c: 41:     uint8_t keepState;;PWM.c: 42:     keepState = 1;
  2590   003A56  0E01               	movlw	1
  2591   003A58  6E10               	movwf	runPWM@keepState^0,c
  2592                           
  2593                           ;PWM.c: 44:     uint8_t multiplier;;PWM.c: 45:     multiplier = 0;
  2594   003A5A  0E00               	movlw	0
  2595   003A5C  6E11               	movwf	runPWM@multiplier^0,c
  2596                           
  2597                           ;PWM.c: 47:     while(keepState){
  2598   003A5E  EF9B  F01D         	goto	l485
  2599   003A62                     l7208:
  2600                           
  2601                           ;PWM.c: 49:         CCPR1L = multiplier*199/5;
  2602   003A62  5011               	movf	runPWM@multiplier^0,w,c
  2603   003A64  0DC7               	mullw	199
  2604   003A66  CFF3 F006          	movff	prodl,___awdiv@dividend
  2605   003A6A  CFF4 F007          	movff	prodh,___awdiv@dividend+1
  2606   003A6E  0E00               	movlw	0
  2607   003A70  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2608   003A72  0E05               	movlw	5
  2609   003A74  6E08               	movwf	___awdiv@divisor^0,c
  2610   003A76  EC88  F020         	call	___awdiv	;wreg free
  2611   003A7A  5006               	movf	?___awdiv^0,w,c
  2612   003A7C  6EBE               	movwf	190,c	;volatile
  2613   003A7E                     
  2614                           ;PWM.c: 51:         if(PORTAbits.RA4){
  2615   003A7E  A880               	btfss	128,4,c	;volatile
  2616   003A80  EF44  F01D         	goto	u9171
  2617   003A84  EF46  F01D         	goto	u9170
  2618   003A88                     u9171:
  2619   003A88  EF78  F01D         	goto	l7226
  2620   003A8C                     u9170:
  2621   003A8C                     
  2622                           ;PWM.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2623   003A8C  0E03               	movlw	3
  2624   003A8E  6E0F               	movwf	(??_runPWM+1)^0,c
  2625   003A90  0E08               	movlw	8
  2626   003A92  6E0E               	movwf	??_runPWM^0,c
  2627   003A94  0E77               	movlw	119
  2628   003A96                     u9567:
  2629   003A96  2EE8               	decfsz	wreg,f,c
  2630   003A98  D7FE               	bra	u9567
  2631   003A9A  2E0E               	decfsz	??_runPWM^0,f,c
  2632   003A9C  D7FC               	bra	u9567
  2633   003A9E  2E0F               	decfsz	(??_runPWM+1)^0,f,c
  2634   003AA0  D7FA               	bra	u9567
  2635   003AA2  0000               	nop	
  2636   003AA4                     
  2637                           ;PWM.c: 53:             if(PORTAbits.RA4){
  2638   003AA4  A880               	btfss	128,4,c	;volatile
  2639   003AA6  EF57  F01D         	goto	u9181
  2640   003AAA  EF59  F01D         	goto	u9180
  2641   003AAE                     u9181:
  2642   003AAE  EF78  F01D         	goto	l7226
  2643   003AB2                     u9180:
  2644   003AB2                     l489:
  2645   003AB2  B880               	btfsc	128,4,c	;volatile
  2646   003AB4  EF5E  F01D         	goto	u9191
  2647   003AB8  EF60  F01D         	goto	u9190
  2648   003ABC                     u9191:
  2649   003ABC  EF59  F01D         	goto	l489
  2650   003AC0                     u9190:
  2651   003AC0                     
  2652                           ;PWM.c: 55:                 if(multiplier == 5 ){
  2653   003AC0  0E05               	movlw	5
  2654   003AC2  1811               	xorwf	runPWM@multiplier^0,w,c
  2655   003AC4  A4D8               	btfss	status,2,c
  2656   003AC6  EF67  F01D         	goto	u9201
  2657   003ACA  EF69  F01D         	goto	u9200
  2658   003ACE                     u9201:
  2659   003ACE  EF6D  F01D         	goto	l7222
  2660   003AD2                     u9200:
  2661   003AD2                     
  2662                           ;PWM.c: 56:                     multiplier = 0;
  2663   003AD2  0E00               	movlw	0
  2664   003AD4  6E11               	movwf	runPWM@multiplier^0,c
  2665                           
  2666                           ;PWM.c: 57:                 } else if(multiplier <5){
  2667   003AD6  EF78  F01D         	goto	l7226
  2668   003ADA                     l7222:
  2669   003ADA  0E05               	movlw	5
  2670   003ADC  6011               	cpfslt	runPWM@multiplier^0,c
  2671   003ADE  EF73  F01D         	goto	u9211
  2672   003AE2  EF75  F01D         	goto	u9210
  2673   003AE6                     u9211:
  2674   003AE6  EF78  F01D         	goto	l488
  2675   003AEA                     u9210:
  2676   003AEA                     
  2677                           ;PWM.c: 58:                     multiplier++;
  2678   003AEA  2A11               	incf	runPWM@multiplier^0,f,c
  2679   003AEC  EF78  F01D         	goto	l7226
  2680   003AF0                     l488:
  2681   003AF0                     l7226:
  2682                           
  2683                           ;PWM.c: 63:         if(PORTAbits.RA2){
  2684   003AF0  A480               	btfss	128,2,c	;volatile
  2685   003AF2  EF7D  F01D         	goto	u9221
  2686   003AF6  EF7F  F01D         	goto	u9220
  2687   003AFA                     u9221:
  2688   003AFA  EF9B  F01D         	goto	l485
  2689   003AFE                     u9220:
  2690   003AFE                     
  2691                           ;PWM.c: 64:         _delay((unsigned long)((50)*(32E6/4000.0)));
  2692   003AFE  0E03               	movlw	3
  2693   003B00  6E0F               	movwf	(??_runPWM+1)^0,c
  2694   003B02  0E08               	movlw	8
  2695   003B04  6E0E               	movwf	??_runPWM^0,c
  2696   003B06  0E77               	movlw	119
  2697   003B08                     u9577:
  2698   003B08  2EE8               	decfsz	wreg,f,c
  2699   003B0A  D7FE               	bra	u9577
  2700   003B0C  2E0E               	decfsz	??_runPWM^0,f,c
  2701   003B0E  D7FC               	bra	u9577
  2702   003B10  2E0F               	decfsz	(??_runPWM+1)^0,f,c
  2703   003B12  D7FA               	bra	u9577
  2704   003B14  0000               	nop	
  2705   003B16                     
  2706                           ;PWM.c: 65:         if(PORTAbits.RA2){
  2707   003B16  A480               	btfss	128,2,c	;volatile
  2708   003B18  EF90  F01D         	goto	u9231
  2709   003B1C  EF92  F01D         	goto	u9230
  2710   003B20                     u9231:
  2711   003B20  EF9B  F01D         	goto	l485
  2712   003B24                     u9230:
  2713   003B24                     l497:
  2714   003B24  B480               	btfsc	128,2,c	;volatile
  2715   003B26  EF97  F01D         	goto	u9241
  2716   003B2A  EF99  F01D         	goto	u9240
  2717   003B2E                     u9241:
  2718   003B2E  EF92  F01D         	goto	l497
  2719   003B32                     u9240:
  2720   003B32                     
  2721                           ;PWM.c: 67:             keepState = 0;
  2722   003B32  0E00               	movlw	0
  2723   003B34  6E10               	movwf	runPWM@keepState^0,c
  2724   003B36                     l485:
  2725                           
  2726                           ;PWM.c: 47:     while(keepState){
  2727   003B36  5010               	movf	runPWM@keepState^0,w,c
  2728   003B38  A4D8               	btfss	status,2,c
  2729   003B3A  EFA1  F01D         	goto	u9251
  2730   003B3E  EFA3  F01D         	goto	u9250
  2731   003B42                     u9251:
  2732   003B42  EF31  F01D         	goto	l7208
  2733   003B46                     u9250:
  2734   003B46                     
  2735                           ;PWM.c: 74:     CCP1CONbits.CCP1M = 0b0000;
  2736   003B46  0EF0               	movlw	-16
  2737   003B48  16BD               	andwf	189,f,c	;volatile
  2738   003B4A                     
  2739                           ;PWM.c: 75:     TMR2ON = 0;
  2740   003B4A  94BA               	bcf	4026,2,c	;volatile
  2741   003B4C                     
  2742                           ;PWM.c: 76:     TMR2IE = 0;
  2743   003B4C  929D               	bcf	3997,1,c	;volatile
  2744   003B4E  0012               	return		;funcret
  2745   003B50                     __end_of_runPWM:
  2746                           	callstack 0
  2747                           
  2748 ;; *************** function _runMUSIC *****************
  2749 ;; Defined at:
  2750 ;;		line 10 in file "MUSIC.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		None
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;Total ram usage:        0 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 1
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		_main
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text4
  2779   0049B8                     __ptext4:
  2780                           	callstack 0
  2781   0049B8                     _runMUSIC:
  2782                           	callstack 29
  2783   0049B8  0012               	return		;funcret
  2784   0049BA                     __end_of_runMUSIC:
  2785                           	callstack 0
  2786                           
  2787 ;; *************** function _runGPIO *****************
  2788 ;; Defined at:
  2789 ;;		line 19 in file "GPIO.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;		None
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  j               2   36[COMRAM] int 
  2794 ;;  states         12    8[COMRAM] unsigned char [12]
  2795 ;;  LEDControl     12   20[COMRAM] PTR FTN(unsigned char ,)
  2796 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  2797 ;;		 -> LED2_Control(1), LED1_Control(1), 
  2798 ;;  numberOfStat    2   33[COMRAM] int 
  2799 ;;  GPIOi           1   35[COMRAM] unsigned char 
  2800 ;;  GPIOreverse     1   32[COMRAM] unsigned char 
  2801 ;;  GPIOindex       1    0        unsigned char 
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;      Locals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;Total ram usage:       32 bytes
  2816 ;; Hardware stack levels used: 1
  2817 ;; Hardware stack levels required when called: 2
  2818 ;; This function calls:
  2819 ;;		_LED1_Control
  2820 ;;		_LED2_Control
  2821 ;;		_LED3_Control
  2822 ;;		_LED4_Control
  2823 ;;		_LED5_Control
  2824 ;;		_LED6_Control
  2825 ;; This function is called by:
  2826 ;;		_main
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text5
  2831   00372E                     __ptext5:
  2832                           	callstack 0
  2833   00372E                     _runGPIO:
  2834                           	callstack 28
  2835   00372E                     
  2836                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  2837   00372E  9495               	bcf	149,2,c	;volatile
  2838                           
  2839                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  2840   003730  9695               	bcf	149,3,c	;volatile
  2841                           
  2842                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  2843   003732  9894               	bcf	148,4,c	;volatile
  2844                           
  2845                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  2846   003734  9895               	bcf	149,4,c	;volatile
  2847                           
  2848                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  2849   003736  9A95               	bcf	149,5,c	;volatile
  2850                           
  2851                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  2852   003738  9C95               	bcf	149,6,c	;volatile
  2853                           
  2854                           ;GPIO.c: 27:     ANSELDbits.ANSD2 = 0;
  2855   00373A  010F               	movlb	15	; () banked
  2856   00373C  953B               	bcf	59,2,b	;volatile
  2857                           
  2858                           ;GPIO.c: 28:     ANSELDbits.ANSD3 = 0;
  2859   00373E  973B               	bcf	59,3,b	;volatile
  2860                           
  2861                           ;GPIO.c: 29:     ANSELCbits.ANSC4 = 0;
  2862   003740  993A               	bcf	58,4,b	;volatile
  2863                           
  2864                           ;GPIO.c: 30:     ANSELDbits.ANSD4 = 0;
  2865   003742  993B               	bcf	59,4,b	;volatile
  2866                           
  2867                           ;GPIO.c: 31:     ANSELDbits.ANSD5 = 0;
  2868   003744  9B3B               	bcf	59,5,b	;volatile
  2869                           
  2870                           ;GPIO.c: 32:     ANSELDbits.ANSD6 = 0;
  2871   003746  9D3B               	bcf	59,6,b	;volatile
  2872                           
  2873                           ;GPIO.c: 33:     LATDbits.LD2 = 1;
  2874   003748  848C               	bsf	140,2,c	;volatile
  2875                           
  2876                           ;GPIO.c: 34:     LATDbits.LD3 = 1;
  2877   00374A  868C               	bsf	140,3,c	;volatile
  2878                           
  2879                           ;GPIO.c: 35:     LATCbits.LC4 = 1;
  2880   00374C  888B               	bsf	139,4,c	;volatile
  2881                           
  2882                           ;GPIO.c: 36:     LATDbits.LD4 = 1;
  2883   00374E  888C               	bsf	140,4,c	;volatile
  2884                           
  2885                           ;GPIO.c: 37:     LATDbits.LD5 = 1;
  2886   003750  8A8C               	bsf	140,5,c	;volatile
  2887                           
  2888                           ;GPIO.c: 38:     LATDbits.LD6 = 1;
  2889   003752  8C8C               	bsf	140,6,c	;volatile
  2890                           
  2891                           ;GPIO.c: 41:     TRISAbits.RA2 = 1;
  2892   003754  8492               	bsf	146,2,c	;volatile
  2893                           
  2894                           ;GPIO.c: 42:     ANSELAbits.ANSA2 = 0;
  2895   003756  9538               	bcf	56,2,b	;volatile
  2896   003758                     
  2897                           ; BSR set to: 15
  2898                           ;GPIO.c: 47:     T1CONbits.TMR1CS = 0b00;
  2899   003758  0E3F               	movlw	-193
  2900   00375A  16CD               	andwf	205,f,c	;volatile
  2901                           
  2902                           ;GPIO.c: 48:     T1CONbits.T1CKPS = 0b11;
  2903   00375C  0E30               	movlw	48
  2904   00375E  12CD               	iorwf	205,f,c	;volatile
  2905   003760                     
  2906                           ; BSR set to: 15
  2907                           ;GPIO.c: 49:     TMR1IE = 1;
  2908   003760  809D               	bsf	3997,0,c	;volatile
  2909   003762                     
  2910                           ; BSR set to: 15
  2911                           ;GPIO.c: 50:     PEIE = 1;
  2912   003762  8CF2               	bsf	4082,6,c	;volatile
  2913   003764                     
  2914                           ; BSR set to: 15
  2915                           ;GPIO.c: 51:     GIE = 1;
  2916   003764  8EF2               	bsf	4082,7,c	;volatile
  2917                           
  2918                           ;GPIO.c: 52:     GPIOIE = 1;
  2919   003766  0E01               	movlw	1
  2920   003768  0101               	movlb	1	; () banked
  2921   00376A  6F24               	movwf	_GPIOIE& (0+255),b
  2922   00376C                     
  2923                           ; BSR set to: 1
  2924                           ;GPIO.c: 53:     TMR1IF = 1;
  2925   00376C  809E               	bsf	3998,0,c	;volatile
  2926                           
  2927                           ;GPIO.c: 54:     TMR1 = 0xFFFF - (25000 - 1);
  2928   00376E  0E9E               	movlw	158
  2929   003770  6ECF               	movwf	207,c	;volatile
  2930   003772  0E58               	movlw	88
  2931   003774  6ECE               	movwf	206,c	;volatile
  2932   003776                     
  2933                           ; BSR set to: 1
  2934                           ;GPIO.c: 55:     TMR1ON = 1;
  2935   003776  80CD               	bsf	4045,0,c	;volatile
  2936                           
  2937                           ;GPIO.c: 58:     keepStateGPIO = 1;
  2938   003778  0E01               	movlw	1
  2939   00377A  0100               	movlb	0	; () banked
  2940   00377C  6FFE               	movwf	_keepStateGPIO& (0+255),b
  2941                           
  2942                           ;GPIO.c: 61:     uint8_t GPIOreverse;;GPIO.c: 62:     GPIOreverse = 0;
  2943   00377E  0E00               	movlw	0
  2944   003780  6E21               	movwf	runGPIO@GPIOreverse^0,c
  2945   003782                     
  2946                           ; BSR set to: 0
  2947                           ;GPIO.c: 64:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  2948   003782  EE21  F0E4         	lfsr	2,runGPIO@F6975
  2949   003786  EE10  F015         	lfsr	1,runGPIO@LEDControl
  2950   00378A  0E0B               	movlw	11
  2951   00378C                     u9001:
  2952   00378C  CFDB FFE3          	movff	plusw2,plusw1
  2953   003790  06E8               	decf	wreg,f,c
  2954   003792  E2FC               	bc	u9001
  2955   003794                     
  2956                           ; BSR set to: 0
  2957                           ;GPIO.c: 65:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  2958   003794  EE21  F0D8         	lfsr	2,runGPIO@F6993
  2959   003798  EE10  F009         	lfsr	1,runGPIO@states
  2960   00379C  0E0B               	movlw	11
  2961   00379E                     u9011:
  2962   00379E  CFDB FFE3          	movff	plusw2,plusw1
  2963   0037A2  06E8               	decf	wreg,f,c
  2964   0037A4  E2FC               	bc	u9011
  2965                           
  2966                           ;GPIO.c: 66:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  2967   0037A6  0E00               	movlw	0
  2968   0037A8  6E23               	movwf	(runGPIO@numberOfStates+1)^0,c
  2969   0037AA  0E0C               	movlw	12
  2970   0037AC  6E22               	movwf	runGPIO@numberOfStates^0,c
  2971                           
  2972                           ;GPIO.c: 67:     uint8_t GPIOi;;GPIO.c: 68:     GPIOi = 0;
  2973   0037AE  0E00               	movlw	0
  2974   0037B0  6E24               	movwf	runGPIO@GPIOi^0,c
  2975                           
  2976                           ;GPIO.c: 70:     while(keepStateGPIO){
  2977   0037B2  EF3A  F01C         	goto	l348
  2978   0037B6                     l7110:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;GPIO.c: 72:         for(int j = 0; j < 6; j++) {
  2982   0037B6  0E00               	movlw	0
  2983   0037B8  6E26               	movwf	(runGPIO@j+1)^0,c
  2984   0037BA  0E00               	movlw	0
  2985   0037BC  6E25               	movwf	runGPIO@j^0,c
  2986   0037BE                     l7116:
  2987                           
  2988                           ;GPIO.c: 73:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  2989   0037BE  5025               	movf	runGPIO@j^0,w,c
  2990   0037C0  0D02               	mullw	2
  2991   0037C2  50F3               	movf	243,w,c
  2992   0037C4  0F15               	addlw	low runGPIO@LEDControl
  2993   0037C6  6ED9               	movwf	fsr2l,c
  2994   0037C8  6ADA               	clrf	fsr2h,c
  2995   0037CA  D802               	call	u9028
  2996   0037CC  EF0C  F01C         	goto	u9029
  2997   0037D0                     u9028:
  2998   0037D0  0005               	push	
  2999   0037D2  6EFA               	movwf	pclath,c
  3000   0037D4  50DE               	movf	postinc2,w,c
  3001   0037D6  6EFD               	movwf	tosl,c
  3002   0037D8  50DE               	movf	postinc2,w,c
  3003   0037DA  6EFE               	movwf	tosh,c
  3004   0037DC  50F8               	movf	tblptru,w,c
  3005   0037DE  6EFF               	movwf	tosu,c
  3006   0037E0  50FA               	movf	pclath,w,c
  3007   0037E2  5025               	movf	runGPIO@j^0,w,c
  3008   0037E4  0805               	sublw	5
  3009   0037E6  6E07               	movwf	??_runGPIO^0,c
  3010   0037E8  5024               	movf	runGPIO@GPIOi^0,w,c
  3011   0037EA  0F09               	addlw	low runGPIO@states
  3012   0037EC  6ED9               	movwf	fsr2l,c
  3013   0037EE  6ADA               	clrf	fsr2h,c
  3014   0037F0  50DF               	movf	indf2,w,c
  3015   0037F2  6E08               	movwf	(??_runGPIO+1)^0,c
  3016   0037F4  2A07               	incf	??_runGPIO^0,f,c
  3017   0037F6  EFFF  F01B         	goto	u9034
  3018   0037FA                     u9035:
  3019   0037FA  90D8               	bcf	status,0,c
  3020   0037FC  3208               	rrcf	(??_runGPIO+1)^0,f,c
  3021   0037FE                     u9034:
  3022   0037FE  2E07               	decfsz	??_runGPIO^0,f,c
  3023   003800  EFFD  F01B         	goto	u9035
  3024   003804  A008               	btfss	(??_runGPIO+1)^0,0,c
  3025   003806  EF07  F01C         	goto	u9041
  3026   00380A  EF0A  F01C         	goto	u9040
  3027   00380E                     u9041:
  3028   00380E  0E01               	movlw	1
  3029   003810  EF0B  F01C         	goto	u9050
  3030   003814                     u9040:
  3031   003814  0E00               	movlw	0
  3032   003816                     u9050:
  3033   003816  0012               	return		;indir
  3034   003818                     u9029:
  3035   003818                     
  3036                           ;GPIO.c: 74:         }
  3037   003818  4A25               	infsnz	runGPIO@j^0,f,c
  3038   00381A  2A26               	incf	(runGPIO@j+1)^0,f,c
  3039   00381C  BE26               	btfsc	(runGPIO@j+1)^0,7,c
  3040   00381E  EF1A  F01C         	goto	u9061
  3041   003822  5026               	movf	(runGPIO@j+1)^0,w,c
  3042   003824  E109               	bnz	u9060
  3043   003826  0E06               	movlw	6
  3044   003828  5C25               	subwf	runGPIO@j^0,w,c
  3045   00382A  A0D8               	btfss	status,0,c
  3046   00382C  EF1A  F01C         	goto	u9061
  3047   003830  EF1C  F01C         	goto	u9060
  3048   003834                     u9061:
  3049   003834  EFDF  F01B         	goto	l7116
  3050   003838                     u9060:
  3051   003838                     
  3052                           ;GPIO.c: 75:         _delay((unsigned long)((400)*(32E6/4000.0)));
  3053   003838  0E11               	movlw	17
  3054   00383A  6E08               	movwf	(??_runGPIO+1)^0,c
  3055   00383C  0E3C               	movlw	60
  3056   00383E  6E07               	movwf	??_runGPIO^0,c
  3057   003840  0ECB               	movlw	203
  3058   003842                     u9587:
  3059   003842  2EE8               	decfsz	wreg,f,c
  3060   003844  D7FE               	bra	u9587
  3061   003846  2E07               	decfsz	??_runGPIO^0,f,c
  3062   003848  D7FC               	bra	u9587
  3063   00384A  2E08               	decfsz	(??_runGPIO+1)^0,f,c
  3064   00384C  D7FA               	bra	u9587
  3065   00384E  0000               	nop	
  3066   003850                     
  3067                           ;GPIO.c: 76:         GPIOi++;
  3068   003850  2A24               	incf	runGPIO@GPIOi^0,f,c
  3069                           
  3070                           ;GPIO.c: 77:         if(GPIOi == numberOfStates){
  3071   003852  5024               	movf	runGPIO@GPIOi^0,w,c
  3072   003854  6E07               	movwf	??_runGPIO^0,c
  3073   003856  6A08               	clrf	(??_runGPIO+1)^0,c
  3074   003858  5022               	movf	runGPIO@numberOfStates^0,w,c
  3075   00385A  1807               	xorwf	??_runGPIO^0,w,c
  3076   00385C  E107               	bnz	u9071
  3077   00385E  5023               	movf	(runGPIO@numberOfStates+1)^0,w,c
  3078   003860  1808               	xorwf	(??_runGPIO+1)^0,w,c
  3079   003862  A4D8               	btfss	status,2,c
  3080   003864  EF36  F01C         	goto	u9071
  3081   003868  EF38  F01C         	goto	u9070
  3082   00386C                     u9071:
  3083   00386C  EF3A  F01C         	goto	l348
  3084   003870                     u9070:
  3085   003870                     
  3086                           ;GPIO.c: 78:             GPIOi = 0;
  3087   003870  0E00               	movlw	0
  3088   003872  6E24               	movwf	runGPIO@GPIOi^0,c
  3089   003874                     l348:
  3090                           
  3091                           ;GPIO.c: 70:     while(keepStateGPIO){
  3092   003874  0100               	movlb	0	; () banked
  3093   003876  51FE               	movf	_keepStateGPIO& (0+255),w,b
  3094   003878  A4D8               	btfss	status,2,c
  3095   00387A  EF41  F01C         	goto	u9081
  3096   00387E  EF43  F01C         	goto	u9080
  3097   003882                     u9081:
  3098   003882  EFDB  F01B         	goto	l7110
  3099   003886                     u9080:
  3100   003886                     
  3101                           ; BSR set to: 0
  3102                           ;GPIO.c: 83:     LATDbits.LD2 = 1;
  3103   003886  848C               	bsf	140,2,c	;volatile
  3104                           
  3105                           ;GPIO.c: 84:     LATDbits.LD3 = 1;
  3106   003888  868C               	bsf	140,3,c	;volatile
  3107                           
  3108                           ;GPIO.c: 85:     LATCbits.LC4 = 1;
  3109   00388A  888B               	bsf	139,4,c	;volatile
  3110                           
  3111                           ;GPIO.c: 86:     LATDbits.LD4 = 1;
  3112   00388C  888C               	bsf	140,4,c	;volatile
  3113                           
  3114                           ;GPIO.c: 87:     LATDbits.LD5 = 1;
  3115   00388E  8A8C               	bsf	140,5,c	;volatile
  3116                           
  3117                           ;GPIO.c: 88:     LATDbits.LD6 = 1;
  3118   003890  8C8C               	bsf	140,6,c	;volatile
  3119                           
  3120                           ;GPIO.c: 89:     TMR1ON = 0;
  3121   003892  90CD               	bcf	4045,0,c	;volatile
  3122                           
  3123                           ;GPIO.c: 90:     TMR1IE = 0;
  3124   003894  909D               	bcf	3997,0,c	;volatile
  3125   003896                     
  3126                           ; BSR set to: 0
  3127                           ;GPIO.c: 91:     GPIOIE = 0;
  3128   003896  0E00               	movlw	0
  3129   003898  0101               	movlb	1	; () banked
  3130   00389A  6F24               	movwf	_GPIOIE& (0+255),b
  3131   00389C                     
  3132                           ; BSR set to: 1
  3133   00389C  0012               	return		;funcret
  3134   00389E                     __end_of_runGPIO:
  3135                           	callstack 0
  3136                           
  3137 ;; *************** function _LED5_Control *****************
  3138 ;; Defined at:
  3139 ;;		line 14 in file "GPIO.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  state           1    wreg     unsigned char 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  state           1    5[COMRAM] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;Total ram usage:        1 bytes
  3158 ;; Hardware stack levels used: 1
  3159 ;; Hardware stack levels required when called: 1
  3160 ;; This function calls:
  3161 ;;		Nothing
  3162 ;; This function is called by:
  3163 ;;		_runGPIO
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text6
  3168   004964                     __ptext6:
  3169                           	callstack 0
  3170   004964                     _LED5_Control:
  3171                           	callstack 28
  3172                           
  3173                           ; BSR set to: 1
  3174                           ;incstack = 0
  3175                           ;LED5_Control@state stored from wreg
  3176   004964  6E06               	movwf	LED5_Control@state^0,c
  3177   004966  B006               	btfsc	LED5_Control@state^0,0,c
  3178   004968  D002               	bra	u8925
  3179   00496A  9A8C               	bcf	140,5,c	;volatile
  3180   00496C  D001               	bra	u8926
  3181   00496E                     u8925:
  3182   00496E  8A8C               	bsf	140,5,c	;volatile
  3183   004970                     u8926:
  3184   004970  0012               	return		;funcret
  3185   004972                     __end_of_LED5_Control:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function _LED4_Control *****************
  3189 ;; Defined at:
  3190 ;;		line 13 in file "GPIO.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  state           1    wreg     unsigned char 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  state           1    5[COMRAM] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;Total ram usage:        1 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; Hardware stack levels required when called: 1
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_runGPIO
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text7
  3219   004972                     __ptext7:
  3220                           	callstack 0
  3221   004972                     _LED4_Control:
  3222                           	callstack 28
  3223                           
  3224                           ;incstack = 0
  3225                           ;LED4_Control@state stored from wreg
  3226   004972  6E06               	movwf	LED4_Control@state^0,c
  3227   004974  B006               	btfsc	LED4_Control@state^0,0,c
  3228   004976  D002               	bra	u8915
  3229   004978  988C               	bcf	140,4,c	;volatile
  3230   00497A  D001               	bra	u8916
  3231   00497C                     u8915:
  3232   00497C  888C               	bsf	140,4,c	;volatile
  3233   00497E                     u8916:
  3234   00497E  0012               	return		;funcret
  3235   004980                     __end_of_LED4_Control:
  3236                           	callstack 0
  3237                           
  3238 ;; *************** function _LED3_Control *****************
  3239 ;; Defined at:
  3240 ;;		line 12 in file "GPIO.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  state           1    wreg     unsigned char 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  state           1    5[COMRAM] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;Total ram usage:        1 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; Hardware stack levels required when called: 1
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_runGPIO
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           	psect	text8
  3269   004980                     __ptext8:
  3270                           	callstack 0
  3271   004980                     _LED3_Control:
  3272                           	callstack 28
  3273                           
  3274                           ;incstack = 0
  3275                           ;LED3_Control@state stored from wreg
  3276   004980  6E06               	movwf	LED3_Control@state^0,c
  3277   004982  B006               	btfsc	LED3_Control@state^0,0,c
  3278   004984  D002               	bra	u8905
  3279   004986  988B               	bcf	139,4,c	;volatile
  3280   004988  D001               	bra	u8906
  3281   00498A                     u8905:
  3282   00498A  888B               	bsf	139,4,c	;volatile
  3283   00498C                     u8906:
  3284   00498C  0012               	return		;funcret
  3285   00498E                     __end_of_LED3_Control:
  3286                           	callstack 0
  3287                           
  3288 ;; *************** function _LED2_Control *****************
  3289 ;; Defined at:
  3290 ;;		line 11 in file "GPIO.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  state           1    wreg     unsigned char 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  state           1    5[COMRAM] unsigned char 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;Total ram usage:        1 bytes
  3309 ;; Hardware stack levels used: 1
  3310 ;; Hardware stack levels required when called: 1
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_runGPIO
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text9
  3319   00498E                     __ptext9:
  3320                           	callstack 0
  3321   00498E                     _LED2_Control:
  3322                           	callstack 28
  3323                           
  3324                           ;incstack = 0
  3325                           ;LED2_Control@state stored from wreg
  3326   00498E  6E06               	movwf	LED2_Control@state^0,c
  3327   004990  B006               	btfsc	LED2_Control@state^0,0,c
  3328   004992  D002               	bra	u8895
  3329   004994  968C               	bcf	140,3,c	;volatile
  3330   004996  D001               	bra	u8896
  3331   004998                     u8895:
  3332   004998  868C               	bsf	140,3,c	;volatile
  3333   00499A                     u8896:
  3334   00499A  0012               	return		;funcret
  3335   00499C                     __end_of_LED2_Control:
  3336                           	callstack 0
  3337                           
  3338 ;; *************** function _LED1_Control *****************
  3339 ;; Defined at:
  3340 ;;		line 10 in file "GPIO.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  state           1    wreg     unsigned char 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  state           1    5[COMRAM] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;Total ram usage:        1 bytes
  3359 ;; Hardware stack levels used: 1
  3360 ;; Hardware stack levels required when called: 1
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_runGPIO
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text10
  3369   00499C                     __ptext10:
  3370                           	callstack 0
  3371   00499C                     _LED1_Control:
  3372                           	callstack 28
  3373                           
  3374                           ;incstack = 0
  3375                           ;LED1_Control@state stored from wreg
  3376   00499C  6E06               	movwf	LED1_Control@state^0,c
  3377   00499E  B006               	btfsc	LED1_Control@state^0,0,c
  3378   0049A0  D002               	bra	u8885
  3379   0049A2  948C               	bcf	140,2,c	;volatile
  3380   0049A4  D001               	bra	u8886
  3381   0049A6                     u8885:
  3382   0049A6  848C               	bsf	140,2,c	;volatile
  3383   0049A8                     u8886:
  3384   0049A8  0012               	return		;funcret
  3385   0049AA                     __end_of_LED1_Control:
  3386                           	callstack 0
  3387                           
  3388 ;; *************** function _LED6_Control *****************
  3389 ;; Defined at:
  3390 ;;		line 15 in file "GPIO.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  state           1    wreg     unsigned char 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  state           1    5[COMRAM] unsigned char 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      void 
  3397 ;; Registers used:
  3398 ;;		wreg
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;Total ram usage:        1 bytes
  3409 ;; Hardware stack levels used: 1
  3410 ;; Hardware stack levels required when called: 1
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_runGPIO
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text11
  3419   0049AA                     __ptext11:
  3420                           	callstack 0
  3421   0049AA                     _LED6_Control:
  3422                           	callstack 28
  3423                           
  3424                           ;incstack = 0
  3425                           ;LED6_Control@state stored from wreg
  3426   0049AA  6E06               	movwf	LED6_Control@state^0,c
  3427   0049AC  B006               	btfsc	LED6_Control@state^0,0,c
  3428   0049AE  D002               	bra	u8935
  3429   0049B0  9C8C               	bcf	140,6,c	;volatile
  3430   0049B2  D001               	bra	u8936
  3431   0049B4                     u8935:
  3432   0049B4  8C8C               	bsf	140,6,c	;volatile
  3433   0049B6                     u8936:
  3434   0049B6  0012               	return		;funcret
  3435   0049B8                     __end_of_LED6_Control:
  3436                           	callstack 0
  3437                           
  3438 ;; *************** function _runGAME *****************
  3439 ;; Defined at:
  3440 ;;		line 10 in file "GAME.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		None
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 1
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_main
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text12
  3469   0049BA                     __ptext12:
  3470                           	callstack 0
  3471   0049BA                     _runGAME:
  3472                           	callstack 29
  3473   0049BA  0012               	return		;funcret
  3474   0049BC                     __end_of_runGAME:
  3475                           	callstack 0
  3476                           
  3477 ;; *************** function _runDAC *****************
  3478 ;; Defined at:
  3479 ;;		line 10 in file "DAC.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  DACindex        1  125[BANK0 ] unsigned char 
  3484 ;;  selectModeDA    1  124[BANK0 ] unsigned char 
  3485 ;;  keepState       1  123[BANK0 ] unsigned char 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      void 
  3488 ;; Registers used:
  3489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3499 ;;Total ram usage:       12 bytes
  3500 ;; Hardware stack levels used: 1
  3501 ;; Hardware stack levels required when called: 9
  3502 ;; This function calls:
  3503 ;;		_SPI_write
  3504 ;;		___fladd
  3505 ;;		___fldiv
  3506 ;;		___flmul
  3507 ;;		___fltol
  3508 ;;		___xxtofl
  3509 ;;		_printf
  3510 ;;		_sinf
  3511 ;; This function is called by:
  3512 ;;		_main
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text13
  3517   00247A                     __ptext13:
  3518                           	callstack 0
  3519   00247A                     _runDAC:
  3520                           	callstack 21
  3521   00247A                     
  3522                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  3523   00247A  8094               	bsf	148,0,c	;volatile
  3524                           
  3525                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  3526   00247C  8892               	bsf	146,4,c	;volatile
  3527                           
  3528                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  3529   00247E  8692               	bsf	146,3,c	;volatile
  3530                           
  3531                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  3532   002480  8492               	bsf	146,2,c	;volatile
  3533                           
  3534                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  3535   002482  010F               	movlb	15	; () banked
  3536   002484  9738               	bcf	56,3,b	;volatile
  3537                           
  3538                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  3539   002486  9538               	bcf	56,2,b	;volatile
  3540                           
  3541                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  3542   002488  9693               	bcf	147,3,c	;volatile
  3543                           
  3544                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  3545   00248A  9694               	bcf	148,3,c	;volatile
  3546                           
  3547                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  3548   00248C  9A94               	bcf	148,5,c	;volatile
  3549   00248E                     
  3550                           ; BSR set to: 15
  3551                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  3552   00248E  50C6               	movf	198,w,c	;volatile
  3553   002490  0BF0               	andlw	-16
  3554   002492  0902               	iorlw	2
  3555   002494  6EC6               	movwf	198,c	;volatile
  3556   002496                     
  3557                           ; BSR set to: 15
  3558                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  3559   002496  98C6               	bcf	198,4,c	;volatile
  3560   002498                     
  3561                           ; BSR set to: 15
  3562                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  3563   002498  8CC7               	bsf	199,6,c	;volatile
  3564   00249A                     
  3565                           ; BSR set to: 15
  3566                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  3567   00249A  8AC6               	bsf	198,5,c	;volatile
  3568   00249C                     
  3569                           ; BSR set to: 15
  3570                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  3571   00249C  8139               	bsf	57,0,b	;volatile
  3572   00249E                     
  3573                           ; BSR set to: 15
  3574                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  3575   00249E  9EC0               	bcf	192,7,c	;volatile
  3576                           
  3577                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  3578   0024A0  50C0               	movf	192,w,c	;volatile
  3579   0024A2  0BF8               	andlw	-8
  3580   0024A4  0906               	iorlw	6
  3581   0024A6  6EC0               	movwf	192,c	;volatile
  3582                           
  3583                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  3584   0024A8  50C0               	movf	192,w,c	;volatile
  3585   0024AA  0BC7               	andlw	-57
  3586   0024AC  0930               	iorlw	48
  3587   0024AE  6EC0               	movwf	192,c	;volatile
  3588   0024B0                     
  3589                           ; BSR set to: 15
  3590                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  3591   0024B0  80C2               	bsf	194,0,c	;volatile
  3592                           
  3593                           ;DAC.c: 38:     SPBRG1 = 25;
  3594   0024B2  0E19               	movlw	25
  3595   0024B4  6EAF               	movwf	175,c	;volatile
  3596   0024B6                     
  3597                           ; BSR set to: 15
  3598                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  3599   0024B6  8EAB               	bsf	171,7,c	;volatile
  3600   0024B8                     
  3601                           ; BSR set to: 15
  3602                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  3603   0024B8  98AC               	bcf	172,4,c	;volatile
  3604   0024BA                     
  3605                           ; BSR set to: 15
  3606                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  3607   0024BA  8AAC               	bsf	172,5,c	;volatile
  3608   0024BC                     
  3609                           ; BSR set to: 15
  3610                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  3611   0024BC  88AB               	bsf	171,4,c	;volatile
  3612   0024BE                     
  3613                           ; BSR set to: 15
  3614                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  3615   0024BE  868A               	bsf	138,3,c	;volatile
  3616                           
  3617                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  3618   0024C0  50C2               	movf	194,w,c	;volatile
  3619   0024C2  0B83               	andlw	-125
  3620   0024C4  0930               	iorlw	48
  3621   0024C6  6EC2               	movwf	194,c	;volatile
  3622                           
  3623                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  3624   0024C8  0E01               	movlw	1
  3625   0024CA  0100               	movlb	0	; () banked
  3626   0024CC  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3627                           
  3628                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  3629   0024CE  0E01               	movlw	1
  3630   0024D0  6FDB               	movwf	runDAC@keepState& (0+255),b
  3631                           
  3632                           ;DAC.c: 52:     uint8_t DACindex = 0;
  3633   0024D2  0E00               	movlw	0
  3634   0024D4  6FDD               	movwf	runDAC@DACindex& (0+255),b
  3635                           
  3636                           ;DAC.c: 54:     while(keepState){
  3637   0024D6  EFA7  F013         	goto	l7352
  3638   0024DA                     l7310:
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;DAC.c: 57:                 if(DACindex<255/2){
  3642   0024DA  0E7F               	movlw	127
  3643   0024DC  61DD               	cpfslt	runDAC@DACindex& (0+255),b
  3644   0024DE  EF73  F012         	goto	u9331
  3645   0024E2  EF75  F012         	goto	u9330
  3646   0024E6                     u9331:
  3647   0024E6  EF9D  F012         	goto	l7314
  3648   0024EA                     u9330:
  3649   0024EA                     
  3650                           ; BSR set to: 0
  3651                           ;DAC.c: 58:                     SPI_write((uint8_t)(1.9*DACindex));
  3652   0024EA  0E33               	movlw	51
  3653   0024EC  6E18               	movwf	___flmul@a^0,c
  3654   0024EE  0E33               	movlw	51
  3655   0024F0  6E19               	movwf	(___flmul@a+1)^0,c
  3656   0024F2  0EF3               	movlw	243
  3657   0024F4  6E1A               	movwf	(___flmul@a+2)^0,c
  3658   0024F6  0E3F               	movlw	63
  3659   0024F8  6E1B               	movwf	(___flmul@a+3)^0,c
  3660   0024FA  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3661   0024FC  6E06               	movwf	___xxtofl@val^0,c
  3662   0024FE  6A07               	clrf	(___xxtofl@val+1)^0,c
  3663   002500  6A08               	clrf	(___xxtofl@val+2)^0,c
  3664   002502  6A09               	clrf	(___xxtofl@val+3)^0,c
  3665   002504  0E01               	movlw	1
  3666   002506  EC30  F019         	call	___xxtofl
  3667   00250A  C006  F014         	movff	?___xxtofl,___flmul@b
  3668   00250E  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3669   002512  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3670   002516  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3671   00251A  EC6F  F00A         	call	___flmul	;wreg free
  3672   00251E  C014  F064         	movff	?___flmul,___fltol@f1
  3673   002522  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  3674   002526  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  3675   00252A  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  3676   00252E  EC31  F01E         	call	___fltol	;wreg free
  3677   002532  0100               	movlb	0	; () banked
  3678   002534  5164               	movf	?___fltol& (0+255),w,b
  3679   002536  EC9B  F023         	call	_SPI_write
  3680   00253A                     l7314:
  3681                           
  3682                           ;DAC.c: 60:                 if(DACindex>=255/2){
  3683   00253A  0E7E               	movlw	126
  3684   00253C  0100               	movlb	0	; () banked
  3685   00253E  65DD               	cpfsgt	runDAC@DACindex& (0+255),b
  3686   002540  EFA4  F012         	goto	u9341
  3687   002544  EFA6  F012         	goto	u9340
  3688   002548                     u9341:
  3689   002548  EF62  F013         	goto	l219
  3690   00254C                     u9340:
  3691   00254C                     
  3692                           ; BSR set to: 0
  3693                           ;DAC.c: 61:                     SPI_write((uint8_t)(1.9*(255-DACindex)));
  3694   00254C  0E33               	movlw	51
  3695   00254E  6E18               	movwf	___flmul@a^0,c
  3696   002550  0E33               	movlw	51
  3697   002552  6E19               	movwf	(___flmul@a+1)^0,c
  3698   002554  0EF3               	movlw	243
  3699   002556  6E1A               	movwf	(___flmul@a+2)^0,c
  3700   002558  0E3F               	movlw	63
  3701   00255A  6E1B               	movwf	(___flmul@a+3)^0,c
  3702   00255C  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3703   00255E  0AFF               	xorlw	255
  3704   002560  6FD2               	movwf	??_runDAC& (0+255),b
  3705   002562  51D2               	movf	??_runDAC& (0+255),w,b
  3706   002564  6E06               	movwf	___xxtofl@val^0,c
  3707   002566  6A07               	clrf	(___xxtofl@val+1)^0,c
  3708   002568  6A08               	clrf	(___xxtofl@val+2)^0,c
  3709   00256A  6A09               	clrf	(___xxtofl@val+3)^0,c
  3710   00256C  0E01               	movlw	1
  3711   00256E  EC30  F019         	call	___xxtofl
  3712   002572  C006  F014         	movff	?___xxtofl,___flmul@b
  3713   002576  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3714   00257A  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3715   00257E  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3716   002582  EC6F  F00A         	call	___flmul	;wreg free
  3717   002586  C014  F064         	movff	?___flmul,___fltol@f1
  3718   00258A  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  3719   00258E  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  3720   002592  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  3721   002596  EC31  F01E         	call	___fltol	;wreg free
  3722   00259A  0100               	movlb	0	; () banked
  3723   00259C  5164               	movf	?___fltol& (0+255),w,b
  3724   00259E  EC9B  F023         	call	_SPI_write
  3725   0025A2  EF62  F013         	goto	l219
  3726   0025A6                     l7318:
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3730   0025A6  0E00               	movlw	0
  3731   0025A8  6E31               	movwf	___fldiv@a^0,c
  3732   0025AA  0E00               	movlw	0
  3733   0025AC  6E32               	movwf	(___fldiv@a+1)^0,c
  3734   0025AE  0E7F               	movlw	127
  3735   0025B0  6E33               	movwf	(___fldiv@a+2)^0,c
  3736   0025B2  0E43               	movlw	67
  3737   0025B4  6E34               	movwf	(___fldiv@a+3)^0,c
  3738   0025B6  0EC3               	movlw	195
  3739   0025B8  6E18               	movwf	___flmul@a^0,c
  3740   0025BA  0EF5               	movlw	245
  3741   0025BC  6E19               	movwf	(___flmul@a+1)^0,c
  3742   0025BE  0EC8               	movlw	200
  3743   0025C0  6E1A               	movwf	(___flmul@a+2)^0,c
  3744   0025C2  0E40               	movlw	64
  3745   0025C4  6E1B               	movwf	(___flmul@a+3)^0,c
  3746   0025C6  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3747   0025C8  6E06               	movwf	___xxtofl@val^0,c
  3748   0025CA  6A07               	clrf	(___xxtofl@val+1)^0,c
  3749   0025CC  6A08               	clrf	(___xxtofl@val+2)^0,c
  3750   0025CE  6A09               	clrf	(___xxtofl@val+3)^0,c
  3751   0025D0  0E01               	movlw	1
  3752   0025D2  EC30  F019         	call	___xxtofl
  3753   0025D6  C006  F014         	movff	?___xxtofl,___flmul@b
  3754   0025DA  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3755   0025DE  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3756   0025E2  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3757   0025E6  EC6F  F00A         	call	___flmul	;wreg free
  3758   0025EA  C014  F02D         	movff	?___flmul,___fldiv@b
  3759   0025EE  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  3760   0025F2  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  3761   0025F6  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  3762   0025FA  EC70  F010         	call	___fldiv	;wreg free
  3763   0025FE  C02D  F0D3         	movff	?___fldiv,_runDAC$4145
  3764   002602  C02E  F0D4         	movff	?___fldiv+1,_runDAC$4145+1
  3765   002606  C02F  F0D5         	movff	?___fldiv+2,_runDAC$4145+2
  3766   00260A  C030  F0D6         	movff	?___fldiv+3,_runDAC$4145+3
  3767   00260E                     
  3768                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3769   00260E  C0D3  F0A4         	movff	_runDAC$4145,sinf@x
  3770   002612  C0D4  F0A5         	movff	_runDAC$4145+1,sinf@x+1
  3771   002616  C0D5  F0A6         	movff	_runDAC$4145+2,sinf@x+2
  3772   00261A  C0D6  F0A7         	movff	_runDAC$4145+3,sinf@x+3
  3773   00261E  EC89  F005         	call	_sinf	;wreg free
  3774   002622  C0A4  F0D7         	movff	?_sinf,_runDAC$4146
  3775   002626  C0A5  F0D8         	movff	?_sinf+1,_runDAC$4146+1
  3776   00262A  C0A6  F0D9         	movff	?_sinf+2,_runDAC$4146+2
  3777   00262E  C0A7  F0DA         	movff	?_sinf+3,_runDAC$4146+3
  3778   002632                     
  3779                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3780   002632  0E00               	movlw	0
  3781   002634  6E4A               	movwf	___fladd@a^0,c
  3782   002636  0E00               	movlw	0
  3783   002638  6E4B               	movwf	(___fladd@a+1)^0,c
  3784   00263A  0EFE               	movlw	254
  3785   00263C  6E4C               	movwf	(___fladd@a+2)^0,c
  3786   00263E  0E42               	movlw	66
  3787   002640  6E4D               	movwf	(___fladd@a+3)^0,c
  3788   002642  0E00               	movlw	0
  3789   002644  6E18               	movwf	___flmul@a^0,c
  3790   002646  0E00               	movlw	0
  3791   002648  6E19               	movwf	(___flmul@a+1)^0,c
  3792   00264A  0EFE               	movlw	254
  3793   00264C  6E1A               	movwf	(___flmul@a+2)^0,c
  3794   00264E  0E42               	movlw	66
  3795   002650  6E1B               	movwf	(___flmul@a+3)^0,c
  3796   002652  C0D7  F014         	movff	_runDAC$4146,___flmul@b
  3797   002656  C0D8  F015         	movff	_runDAC$4146+1,___flmul@b+1
  3798   00265A  C0D9  F016         	movff	_runDAC$4146+2,___flmul@b+2
  3799   00265E  C0DA  F017         	movff	_runDAC$4146+3,___flmul@b+3
  3800   002662  EC6F  F00A         	call	___flmul	;wreg free
  3801   002666  C014  F046         	movff	?___flmul,___fladd@b
  3802   00266A  C015  F047         	movff	?___flmul+1,___fladd@b+1
  3803   00266E  C016  F048         	movff	?___flmul+2,___fladd@b+2
  3804   002672  C017  F049         	movff	?___flmul+3,___fladd@b+3
  3805   002676  EC0E  F008         	call	___fladd	;wreg free
  3806   00267A  C046  F064         	movff	?___fladd,___fltol@f1
  3807   00267E  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  3808   002682  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  3809   002686  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  3810   00268A  EC31  F01E         	call	___fltol	;wreg free
  3811   00268E  0100               	movlb	0	; () banked
  3812   002690  5164               	movf	?___fltol& (0+255),w,b
  3813   002692  EC9B  F023         	call	_SPI_write
  3814                           
  3815                           ;DAC.c: 66:                 break;
  3816   002696  EF62  F013         	goto	l219
  3817   00269A                     l7324:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  3821   00269A  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3822   00269C  0AFF               	xorlw	255
  3823   00269E  EC9B  F023         	call	_SPI_write
  3824                           
  3825                           ;DAC.c: 69:                 break;
  3826   0026A2  EF62  F013         	goto	l219
  3827   0026A6                     l7328:
  3828                           
  3829                           ; BSR set to: 0
  3830   0026A6  51DC               	movf	runDAC@selectModeDAC& (0+255),w,b
  3831                           
  3832                           ; Switch size 1, requested type "simple"
  3833                           ; Number of cases is 3, Range of values is 1 to 3
  3834                           ; switch strategies available:
  3835                           ; Name         Instructions Cycles
  3836                           ; simple_byte           10     6 (average)
  3837                           ;	Chosen strategy is simple_byte
  3838   0026A8  0A01               	xorlw	1	; case 1
  3839   0026AA  B4D8               	btfsc	status,2,c
  3840   0026AC  EF6D  F012         	goto	l7310
  3841   0026B0  0A03               	xorlw	3	; case 2
  3842   0026B2  B4D8               	btfsc	status,2,c
  3843   0026B4  EFD3  F012         	goto	l7318
  3844   0026B8  0A01               	xorlw	1	; case 3
  3845   0026BA  B4D8               	btfsc	status,2,c
  3846   0026BC  EF4D  F013         	goto	l7324
  3847   0026C0  EF62  F013         	goto	l219
  3848   0026C4                     l219:
  3849                           
  3850                           ;DAC.c: 71:         GODONE = 1;
  3851   0026C4  82C2               	bsf	4034,1,c	;volatile
  3852   0026C6                     l222:
  3853   0026C6  B2C2               	btfsc	4034,1,c	;volatile
  3854   0026C8  EF68  F013         	goto	u9351
  3855   0026CC  EF6A  F013         	goto	u9350
  3856   0026D0                     u9351:
  3857   0026D0  EF63  F013         	goto	l222
  3858   0026D4                     u9350:
  3859   0026D4                     
  3860                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  3861   0026D4  0EE5               	movlw	low STR_14
  3862   0026D6  0100               	movlb	0	; () banked
  3863   0026D8  6FCE               	movwf	printf@fmt& (0+255),b
  3864   0026DA  0EFF               	movlw	high STR_14
  3865   0026DC  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  3866   0026DE  CFC4 F0D0          	movff	4036,?_printf+2	;volatile
  3867   0026E2  6BD1               	clrf	(?_printf+3)& (0+255),b
  3868   0026E4  EC97  F024         	call	_printf	;wreg free
  3869   0026E8                     
  3870                           ;DAC.c: 75:         if(PORTCbits.RC0){
  3871   0026E8  A082               	btfss	130,0,c	;volatile
  3872   0026EA  EF79  F013         	goto	u9361
  3873   0026EE  EF7B  F013         	goto	u9360
  3874   0026F2                     u9361:
  3875   0026F2  EF7E  F013         	goto	l7336
  3876   0026F6                     u9360:
  3877   0026F6                     
  3878                           ;DAC.c: 76:             selectModeDAC = 1;
  3879   0026F6  0E01               	movlw	1
  3880   0026F8  0100               	movlb	0	; () banked
  3881   0026FA  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3882   0026FC                     l7336:
  3883                           
  3884                           ;DAC.c: 78:         if(PORTAbits.RA4){
  3885   0026FC  A880               	btfss	128,4,c	;volatile
  3886   0026FE  EF83  F013         	goto	u9371
  3887   002702  EF85  F013         	goto	u9370
  3888   002706                     u9371:
  3889   002706  EF88  F013         	goto	l7340
  3890   00270A                     u9370:
  3891   00270A                     
  3892                           ;DAC.c: 79:             selectModeDAC = 2;
  3893   00270A  0E02               	movlw	2
  3894   00270C  0100               	movlb	0	; () banked
  3895   00270E  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3896   002710                     l7340:
  3897                           
  3898                           ;DAC.c: 81:         if(PORTAbits.RA3){
  3899   002710  A680               	btfss	128,3,c	;volatile
  3900   002712  EF8D  F013         	goto	u9381
  3901   002716  EF8F  F013         	goto	u9380
  3902   00271A                     u9381:
  3903   00271A  EF92  F013         	goto	l7344
  3904   00271E                     u9380:
  3905   00271E                     
  3906                           ;DAC.c: 82:             selectModeDAC = 3;
  3907   00271E  0E03               	movlw	3
  3908   002720  0100               	movlb	0	; () banked
  3909   002722  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3910   002724                     l7344:
  3911                           
  3912                           ;DAC.c: 84:         if(PORTAbits.RA2){
  3913   002724  A480               	btfss	128,2,c	;volatile
  3914   002726  EF97  F013         	goto	u9391
  3915   00272A  EF99  F013         	goto	u9390
  3916   00272E                     u9391:
  3917   00272E  EF9C  F013         	goto	l7348
  3918   002732                     u9390:
  3919   002732                     
  3920                           ;DAC.c: 85:             keepState = 0;
  3921   002732  0E00               	movlw	0
  3922   002734  0100               	movlb	0	; () banked
  3923   002736  6FDB               	movwf	runDAC@keepState& (0+255),b
  3924   002738                     l7348:
  3925                           
  3926                           ;DAC.c: 87:         DACindex++;
  3927   002738  0100               	movlb	0	; () banked
  3928   00273A  2BDD               	incf	runDAC@DACindex& (0+255),f,b
  3929   00273C                     
  3930                           ; BSR set to: 0
  3931                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  3932   00273C  0E68               	movlw	104
  3933   00273E  0100               	movlb	0	; () banked
  3934   002740  6FD2               	movwf	??_runDAC& (0+255),b
  3935   002742  0EE4               	movlw	228
  3936   002744                     u9597:
  3937   002744  2EE8               	decfsz	wreg,f,c
  3938   002746  D7FE               	bra	u9597
  3939   002748  2FD2               	decfsz	??_runDAC& (0+255),f,b
  3940   00274A  D7FC               	bra	u9597
  3941   00274C  0000               	nop	
  3942   00274E                     l7352:
  3943                           
  3944                           ;DAC.c: 54:     while(keepState){
  3945   00274E  0100               	movlb	0	; () banked
  3946   002750  51DB               	movf	runDAC@keepState& (0+255),w,b
  3947   002752  A4D8               	btfss	status,2,c
  3948   002754  EFAE  F013         	goto	u9401
  3949   002758  EFB0  F013         	goto	u9400
  3950   00275C                     u9401:
  3951   00275C  EF53  F013         	goto	l7328
  3952   002760                     u9400:
  3953   002760                     
  3954                           ; BSR set to: 0
  3955   002760  0012               	return		;funcret
  3956   002762                     __end_of_runDAC:
  3957                           	callstack 0
  3958                           
  3959 ;; *************** function _sinf *****************
  3960 ;; Defined at:
  3961 ;;		line 27 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sinf.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  x               4   68[BANK0 ] float 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  ux              4   90[BANK0 ] struct .
  3966 ;;  y               4   86[BANK0 ] struct .
  3967 ;;  sign            1   81[BANK0 ] _Bool 
  3968 ;;  n               1   80[BANK0 ] unsigned char 
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  4   68[BANK0 ] float 
  3971 ;; Registers used:
  3972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3978 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;Total ram usage:       26 bytes
  3983 ;; Hardware stack levels used: 1
  3984 ;; Hardware stack levels required when called: 4
  3985 ;; This function calls:
  3986 ;;		___cosdf
  3987 ;;		___fladd
  3988 ;;		___flneg
  3989 ;;		___rem_pio2f
  3990 ;;		___sindf
  3991 ;; This function is called by:
  3992 ;;		_runDAC
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text14
  3997   000B12                     __ptext14:
  3998                           	callstack 0
  3999   000B12                     _sinf:
  4000                           	callstack 25
  4001   000B12  C0A4  F0BA         	movff	sinf@x,sinf@ux
  4002   000B16  C0A5  F0BB         	movff	sinf@x+1,sinf@ux+1
  4003   000B1A  C0A6  F0BC         	movff	sinf@x+2,sinf@ux+2
  4004   000B1E  C0A7  F0BD         	movff	sinf@x+3,sinf@ux+3
  4005   000B22  0100               	movlb	0	; () banked
  4006   000B24  BFBD               	btfsc	(sinf@ux+3)& (0+255),7,b
  4007   000B26  EF97  F005         	goto	u8751
  4008   000B2A  EF9A  F005         	goto	u8750
  4009   000B2E                     u8751:
  4010   000B2E  0E01               	movlw	1
  4011   000B30  EF9B  F005         	goto	u8760
  4012   000B34                     u8750:
  4013   000B34  0E00               	movlw	0
  4014   000B36                     u8760:
  4015   000B36  6FB1               	movwf	sinf@sign& (0+255),b
  4016   000B38                     
  4017                           ; BSR set to: 0
  4018   000B38  9FBD               	bcf	(sinf@ux+3)& (0+255),7,b
  4019   000B3A                     
  4020                           ; BSR set to: 0
  4021   000B3A  0EDB               	movlw	219
  4022   000B3C  5DBA               	subwf	sinf@ux& (0+255),w,b
  4023   000B3E  0E0F               	movlw	15
  4024   000B40  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  4025   000B42  0E49               	movlw	73
  4026   000B44  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  4027   000B46  0E3F               	movlw	63
  4028   000B48  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4029   000B4A  B0D8               	btfsc	status,0,c
  4030   000B4C  EFAA  F005         	goto	u8771
  4031   000B50  EFAC  F005         	goto	u8770
  4032   000B54                     u8771:
  4033   000B54  EFD5  F005         	goto	l6922
  4034   000B58                     u8770:
  4035   000B58                     
  4036                           ; BSR set to: 0
  4037   000B58  0E80               	movlw	128
  4038   000B5A  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  4039   000B5C  0E39               	movlw	57
  4040   000B5E  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4041   000B60  B0D8               	btfsc	status,0,c
  4042   000B62  EFB5  F005         	goto	u8781
  4043   000B66  EFB7  F005         	goto	u8780
  4044   000B6A                     u8781:
  4045   000B6A  EFC1  F005         	goto	l6918
  4046   000B6E                     u8780:
  4047   000B6E                     
  4048                           ; BSR set to: 0
  4049   000B6E  C0A4  F0A4         	movff	sinf@x,?_sinf
  4050   000B72  C0A5  F0A5         	movff	sinf@x+1,?_sinf+1
  4051   000B76  C0A6  F0A6         	movff	sinf@x+2,?_sinf+2
  4052   000B7A  C0A7  F0A7         	movff	sinf@x+3,?_sinf+3
  4053   000B7E  EF0D  F008         	goto	l1520
  4054   000B82                     l6918:
  4055                           
  4056                           ; BSR set to: 0
  4057   000B82  C0A4  F064         	movff	sinf@x,___sindf@x
  4058   000B86  C0A5  F065         	movff	sinf@x+1,___sindf@x+1
  4059   000B8A  C0A6  F066         	movff	sinf@x+2,___sindf@x+2
  4060   000B8E  C0A7  F067         	movff	sinf@x+3,___sindf@x+3
  4061   000B92  EC04  F015         	call	___sindf	;wreg free
  4062   000B96  C064  F0A4         	movff	?___sindf,?_sinf
  4063   000B9A  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  4064   000B9E  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  4065   000BA2  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  4066   000BA6  EF0D  F008         	goto	l1520
  4067   000BAA                     l6922:
  4068                           
  4069                           ; BSR set to: 0
  4070   000BAA  0ED2               	movlw	210
  4071   000BAC  5DBA               	subwf	sinf@ux& (0+255),w,b
  4072   000BAE  0E53               	movlw	83
  4073   000BB0  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  4074   000BB2  0E7B               	movlw	123
  4075   000BB4  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  4076   000BB6  0E40               	movlw	64
  4077   000BB8  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4078   000BBA  B0D8               	btfsc	status,0,c
  4079   000BBC  EFE2  F005         	goto	u8791
  4080   000BC0  EFE4  F005         	goto	u8790
  4081   000BC4                     u8791:
  4082   000BC4  EFC7  F006         	goto	l6952
  4083   000BC8                     u8790:
  4084   000BC8                     
  4085                           ; BSR set to: 0
  4086   000BC8  0EE4               	movlw	228
  4087   000BCA  5DBA               	subwf	sinf@ux& (0+255),w,b
  4088   000BCC  0ECB               	movlw	203
  4089   000BCE  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  4090   000BD0  0E16               	movlw	22
  4091   000BD2  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  4092   000BD4  0E40               	movlw	64
  4093   000BD6  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4094   000BD8  B0D8               	btfsc	status,0,c
  4095   000BDA  EFF1  F005         	goto	u8801
  4096   000BDE  EFF3  F005         	goto	u8800
  4097   000BE2                     u8801:
  4098   000BE2  EF61  F006         	goto	l6942
  4099   000BE6                     u8800:
  4100   000BE6                     
  4101                           ; BSR set to: 0
  4102   000BE6  51B1               	movf	sinf@sign& (0+255),w,b
  4103   000BE8  B4D8               	btfsc	status,2,c
  4104   000BEA  EFF9  F005         	goto	u8811
  4105   000BEE  EFFB  F005         	goto	u8810
  4106   000BF2                     u8811:
  4107   000BF2  EF33  F006         	goto	l6936
  4108   000BF6                     u8810:
  4109   000BF6                     
  4110                           ; BSR set to: 0
  4111   000BF6  0EDB               	movlw	219
  4112   000BF8  6E4A               	movwf	___fladd@a^0,c
  4113   000BFA  0E0F               	movlw	15
  4114   000BFC  6E4B               	movwf	(___fladd@a+1)^0,c
  4115   000BFE  0EC9               	movlw	201
  4116   000C00  6E4C               	movwf	(___fladd@a+2)^0,c
  4117   000C02  0E3F               	movlw	63
  4118   000C04  6E4D               	movwf	(___fladd@a+3)^0,c
  4119   000C06  C0A4  F046         	movff	sinf@x,___fladd@b
  4120   000C0A  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4121   000C0E  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4122   000C12  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4123   000C16  EC0E  F008         	call	___fladd	;wreg free
  4124   000C1A  C046  F0B2         	movff	?___fladd,_sinf$4148
  4125   000C1E  C047  F0B3         	movff	?___fladd+1,_sinf$4148+1
  4126   000C22  C048  F0B4         	movff	?___fladd+2,_sinf$4148+2
  4127   000C26  C049  F0B5         	movff	?___fladd+3,_sinf$4148+3
  4128   000C2A                     l6930:
  4129   000C2A  C0B2  F064         	movff	_sinf$4148,___cosdf@x
  4130   000C2E  C0B3  F065         	movff	_sinf$4148+1,___cosdf@x+1
  4131   000C32  C0B4  F066         	movff	_sinf$4148+2,___cosdf@x+2
  4132   000C36  C0B5  F067         	movff	_sinf$4148+3,___cosdf@x+3
  4133   000C3A  EC31  F018         	call	___cosdf	;wreg free
  4134   000C3E  C064  F080         	movff	?___cosdf,___flneg@f1
  4135   000C42  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  4136   000C46  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  4137   000C4A  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  4138   000C4E  ECBA  F023         	call	___flneg	;wreg free
  4139   000C52  C080  F0A4         	movff	?___flneg,?_sinf
  4140   000C56  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  4141   000C5A  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  4142   000C5E  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  4143   000C62  EF0D  F008         	goto	l1520
  4144   000C66                     l6936:
  4145                           
  4146                           ; BSR set to: 0
  4147   000C66  C0A4  F046         	movff	sinf@x,___fladd@b
  4148   000C6A  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4149   000C6E  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4150   000C72  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4151   000C76  0EDB               	movlw	219
  4152   000C78  6E4A               	movwf	___fladd@a^0,c
  4153   000C7A  0E0F               	movlw	15
  4154   000C7C  6E4B               	movwf	(___fladd@a+1)^0,c
  4155   000C7E  0EC9               	movlw	201
  4156   000C80  6E4C               	movwf	(___fladd@a+2)^0,c
  4157   000C82  0EBF               	movlw	191
  4158   000C84  6E4D               	movwf	(___fladd@a+3)^0,c
  4159   000C86  EC0E  F008         	call	___fladd	;wreg free
  4160   000C8A  C046  F0B2         	movff	?___fladd,_sinf$4148
  4161   000C8E  C047  F0B3         	movff	?___fladd+1,_sinf$4148+1
  4162   000C92  C048  F0B4         	movff	?___fladd+2,_sinf$4148+2
  4163   000C96  C049  F0B5         	movff	?___fladd+3,_sinf$4148+3
  4164   000C9A                     l6938:
  4165   000C9A  C0B2  F064         	movff	_sinf$4148,___cosdf@x
  4166   000C9E  C0B3  F065         	movff	_sinf$4148+1,___cosdf@x+1
  4167   000CA2  C0B4  F066         	movff	_sinf$4148+2,___cosdf@x+2
  4168   000CA6  C0B5  F067         	movff	_sinf$4148+3,___cosdf@x+3
  4169   000CAA  EC31  F018         	call	___cosdf	;wreg free
  4170   000CAE  C064  F0A4         	movff	?___cosdf,?_sinf
  4171   000CB2  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  4172   000CB6  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  4173   000CBA  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  4174   000CBE  EF0D  F008         	goto	l1520
  4175   000CC2                     l6942:
  4176                           
  4177                           ; BSR set to: 0
  4178   000CC2  51B1               	movf	sinf@sign& (0+255),w,b
  4179   000CC4  A4D8               	btfss	status,2,c
  4180   000CC6  EF67  F006         	goto	u8821
  4181   000CCA  EF69  F006         	goto	u8820
  4182   000CCE                     u8821:
  4183   000CCE  EF8F  F006         	goto	l6946
  4184   000CD2                     u8820:
  4185   000CD2                     
  4186                           ; BSR set to: 0
  4187   000CD2  0EDB               	movlw	219
  4188   000CD4  6E4A               	movwf	___fladd@a^0,c
  4189   000CD6  0E0F               	movlw	15
  4190   000CD8  6E4B               	movwf	(___fladd@a+1)^0,c
  4191   000CDA  0E49               	movlw	73
  4192   000CDC  6E4C               	movwf	(___fladd@a+2)^0,c
  4193   000CDE  0EC0               	movlw	192
  4194   000CE0  6E4D               	movwf	(___fladd@a+3)^0,c
  4195   000CE2  C0A4  F046         	movff	sinf@x,___fladd@b
  4196   000CE6  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4197   000CEA  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4198   000CEE  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4199   000CF2  EC0E  F008         	call	___fladd	;wreg free
  4200   000CF6  C046  F080         	movff	?___fladd,___flneg@f1
  4201   000CFA  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  4202   000CFE  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  4203   000D02  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  4204   000D06  ECBA  F023         	call	___flneg	;wreg free
  4205   000D0A  C080  F0A8         	movff	?___flneg,_sinf$3869
  4206   000D0E  C081  F0A9         	movff	?___flneg+1,_sinf$3869+1
  4207   000D12  C082  F0AA         	movff	?___flneg+2,_sinf$3869+2
  4208   000D16  C083  F0AB         	movff	?___flneg+3,_sinf$3869+3
  4209   000D1A  EFB3  F006         	goto	l6948
  4210   000D1E                     l6946:
  4211                           
  4212                           ; BSR set to: 0
  4213   000D1E  0EDB               	movlw	219
  4214   000D20  6E4A               	movwf	___fladd@a^0,c
  4215   000D22  0E0F               	movlw	15
  4216   000D24  6E4B               	movwf	(___fladd@a+1)^0,c
  4217   000D26  0E49               	movlw	73
  4218   000D28  6E4C               	movwf	(___fladd@a+2)^0,c
  4219   000D2A  0E40               	movlw	64
  4220   000D2C  6E4D               	movwf	(___fladd@a+3)^0,c
  4221   000D2E  C0A4  F046         	movff	sinf@x,___fladd@b
  4222   000D32  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4223   000D36  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4224   000D3A  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4225   000D3E  EC0E  F008         	call	___fladd	;wreg free
  4226   000D42  C046  F080         	movff	?___fladd,___flneg@f1
  4227   000D46  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  4228   000D4A  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  4229   000D4E  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  4230   000D52  ECBA  F023         	call	___flneg	;wreg free
  4231   000D56  C080  F0A8         	movff	?___flneg,_sinf$3869
  4232   000D5A  C081  F0A9         	movff	?___flneg+1,_sinf$3869+1
  4233   000D5E  C082  F0AA         	movff	?___flneg+2,_sinf$3869+2
  4234   000D62  C083  F0AB         	movff	?___flneg+3,_sinf$3869+3
  4235   000D66                     l6948:
  4236   000D66  C0A8  F064         	movff	_sinf$3869,___sindf@x
  4237   000D6A  C0A9  F065         	movff	_sinf$3869+1,___sindf@x+1
  4238   000D6E  C0AA  F066         	movff	_sinf$3869+2,___sindf@x+2
  4239   000D72  C0AB  F067         	movff	_sinf$3869+3,___sindf@x+3
  4240   000D76  EC04  F015         	call	___sindf	;wreg free
  4241   000D7A  C064  F0A4         	movff	?___sindf,?_sinf
  4242   000D7E  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  4243   000D82  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  4244   000D86  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  4245   000D8A  EF0D  F008         	goto	l1520
  4246   000D8E                     l6952:
  4247                           
  4248                           ; BSR set to: 0
  4249   000D8E  0ED6               	movlw	214
  4250   000D90  5DBA               	subwf	sinf@ux& (0+255),w,b
  4251   000D92  0E31               	movlw	49
  4252   000D94  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  4253   000D96  0EE2               	movlw	226
  4254   000D98  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  4255   000D9A  0E40               	movlw	64
  4256   000D9C  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4257   000D9E  B0D8               	btfsc	status,0,c
  4258   000DA0  EFD4  F006         	goto	u8831
  4259   000DA4  EFD6  F006         	goto	u8830
  4260   000DA8                     u8831:
  4261   000DA8  EF77  F007         	goto	l6982
  4262   000DAC                     u8830:
  4263   000DAC                     
  4264                           ; BSR set to: 0
  4265   000DAC  0EE0               	movlw	224
  4266   000DAE  5DBA               	subwf	sinf@ux& (0+255),w,b
  4267   000DB0  0EED               	movlw	237
  4268   000DB2  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  4269   000DB4  0EAF               	movlw	175
  4270   000DB6  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  4271   000DB8  0E40               	movlw	64
  4272   000DBA  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4273   000DBC  B0D8               	btfsc	status,0,c
  4274   000DBE  EFE3  F006         	goto	u8841
  4275   000DC2  EFE5  F006         	goto	u8840
  4276   000DC6                     u8841:
  4277   000DC6  EF25  F007         	goto	l6972
  4278   000DCA                     u8840:
  4279   000DCA                     
  4280                           ; BSR set to: 0
  4281   000DCA  51B1               	movf	sinf@sign& (0+255),w,b
  4282   000DCC  B4D8               	btfsc	status,2,c
  4283   000DCE  EFEB  F006         	goto	u8851
  4284   000DD2  EFED  F006         	goto	u8850
  4285   000DD6                     u8851:
  4286   000DD6  EF09  F007         	goto	l6966
  4287   000DDA                     u8850:
  4288   000DDA                     
  4289                           ; BSR set to: 0
  4290   000DDA  C0A4  F046         	movff	sinf@x,___fladd@b
  4291   000DDE  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4292   000DE2  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4293   000DE6  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4294   000DEA  0EE4               	movlw	228
  4295   000DEC  6E4A               	movwf	___fladd@a^0,c
  4296   000DEE  0ECB               	movlw	203
  4297   000DF0  6E4B               	movwf	(___fladd@a+1)^0,c
  4298   000DF2  0E96               	movlw	150
  4299   000DF4  6E4C               	movwf	(___fladd@a+2)^0,c
  4300   000DF6  0E40               	movlw	64
  4301   000DF8  6E4D               	movwf	(___fladd@a+3)^0,c
  4302   000DFA  EC0E  F008         	call	___fladd	;wreg free
  4303   000DFE  C046  F0B2         	movff	?___fladd,_sinf$4148
  4304   000E02  C047  F0B3         	movff	?___fladd+1,_sinf$4148+1
  4305   000E06  C048  F0B4         	movff	?___fladd+2,_sinf$4148+2
  4306   000E0A  C049  F0B5         	movff	?___fladd+3,_sinf$4148+3
  4307   000E0E  EF4D  F006         	goto	l6938
  4308   000E12                     l6966:
  4309                           
  4310                           ; BSR set to: 0
  4311   000E12  0EE4               	movlw	228
  4312   000E14  6E4A               	movwf	___fladd@a^0,c
  4313   000E16  0ECB               	movlw	203
  4314   000E18  6E4B               	movwf	(___fladd@a+1)^0,c
  4315   000E1A  0E96               	movlw	150
  4316   000E1C  6E4C               	movwf	(___fladd@a+2)^0,c
  4317   000E1E  0EC0               	movlw	192
  4318   000E20  6E4D               	movwf	(___fladd@a+3)^0,c
  4319   000E22  C0A4  F046         	movff	sinf@x,___fladd@b
  4320   000E26  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4321   000E2A  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4322   000E2E  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4323   000E32  EC0E  F008         	call	___fladd	;wreg free
  4324   000E36  C046  F0B2         	movff	?___fladd,_sinf$4148
  4325   000E3A  C047  F0B3         	movff	?___fladd+1,_sinf$4148+1
  4326   000E3E  C048  F0B4         	movff	?___fladd+2,_sinf$4148+2
  4327   000E42  C049  F0B5         	movff	?___fladd+3,_sinf$4148+3
  4328   000E46  EF15  F006         	goto	l6930
  4329   000E4A                     l6972:
  4330                           
  4331                           ; BSR set to: 0
  4332   000E4A  51B1               	movf	sinf@sign& (0+255),w,b
  4333   000E4C  A4D8               	btfss	status,2,c
  4334   000E4E  EF2B  F007         	goto	u8861
  4335   000E52  EF2D  F007         	goto	u8860
  4336   000E56                     u8861:
  4337   000E56  EF49  F007         	goto	l6976
  4338   000E5A                     u8860:
  4339   000E5A                     
  4340                           ; BSR set to: 0
  4341   000E5A  C0A4  F046         	movff	sinf@x,___fladd@b
  4342   000E5E  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4343   000E62  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4344   000E66  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4345   000E6A  0EDB               	movlw	219
  4346   000E6C  6E4A               	movwf	___fladd@a^0,c
  4347   000E6E  0E0F               	movlw	15
  4348   000E70  6E4B               	movwf	(___fladd@a+1)^0,c
  4349   000E72  0EC9               	movlw	201
  4350   000E74  6E4C               	movwf	(___fladd@a+2)^0,c
  4351   000E76  0EC0               	movlw	192
  4352   000E78  6E4D               	movwf	(___fladd@a+3)^0,c
  4353   000E7A  EC0E  F008         	call	___fladd	;wreg free
  4354   000E7E  C046  F0AC         	movff	?___fladd,_sinf$3870
  4355   000E82  C047  F0AD         	movff	?___fladd+1,_sinf$3870+1
  4356   000E86  C048  F0AE         	movff	?___fladd+2,_sinf$3870+2
  4357   000E8A  C049  F0AF         	movff	?___fladd+3,_sinf$3870+3
  4358   000E8E  EF63  F007         	goto	l6978
  4359   000E92                     l6976:
  4360                           
  4361                           ; BSR set to: 0
  4362   000E92  C0A4  F046         	movff	sinf@x,___fladd@b
  4363   000E96  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4364   000E9A  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4365   000E9E  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4366   000EA2  0EDB               	movlw	219
  4367   000EA4  6E4A               	movwf	___fladd@a^0,c
  4368   000EA6  0E0F               	movlw	15
  4369   000EA8  6E4B               	movwf	(___fladd@a+1)^0,c
  4370   000EAA  0EC9               	movlw	201
  4371   000EAC  6E4C               	movwf	(___fladd@a+2)^0,c
  4372   000EAE  0E40               	movlw	64
  4373   000EB0  6E4D               	movwf	(___fladd@a+3)^0,c
  4374   000EB2  EC0E  F008         	call	___fladd	;wreg free
  4375   000EB6  C046  F0AC         	movff	?___fladd,_sinf$3870
  4376   000EBA  C047  F0AD         	movff	?___fladd+1,_sinf$3870+1
  4377   000EBE  C048  F0AE         	movff	?___fladd+2,_sinf$3870+2
  4378   000EC2  C049  F0AF         	movff	?___fladd+3,_sinf$3870+3
  4379   000EC6                     l6978:
  4380   000EC6  C0AC  F064         	movff	_sinf$3870,___sindf@x
  4381   000ECA  C0AD  F065         	movff	_sinf$3870+1,___sindf@x+1
  4382   000ECE  C0AE  F066         	movff	_sinf$3870+2,___sindf@x+2
  4383   000ED2  C0AF  F067         	movff	_sinf$3870+3,___sindf@x+3
  4384   000ED6  EC04  F015         	call	___sindf	;wreg free
  4385   000EDA  C064  F0A4         	movff	?___sindf,?_sinf
  4386   000EDE  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  4387   000EE2  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  4388   000EE6  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  4389   000EEA  EF0D  F008         	goto	l1520
  4390   000EEE                     l6982:
  4391                           
  4392                           ; BSR set to: 0
  4393   000EEE  0E80               	movlw	128
  4394   000EF0  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  4395   000EF2  0E7F               	movlw	127
  4396   000EF4  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4397   000EF6  A0D8               	btfss	status,0,c
  4398   000EF8  EF80  F007         	goto	u8871
  4399   000EFC  EF82  F007         	goto	u8870
  4400   000F00                     u8871:
  4401   000F00  EF94  F007         	goto	l6990
  4402   000F04                     u8870:
  4403   000F04                     
  4404                           ; BSR set to: 0
  4405   000F04  0EFF               	movlw	255
  4406   000F06  13BA               	iorwf	sinf@ux& (0+255),f,b
  4407   000F08  0EFF               	movlw	255
  4408   000F0A  13BB               	iorwf	(sinf@ux+1)& (0+255),f,b
  4409   000F0C  0EFF               	movlw	255
  4410   000F0E  13BC               	iorwf	(sinf@ux+2)& (0+255),f,b
  4411   000F10  0E00               	movlw	0
  4412   000F12  13BD               	iorwf	(sinf@ux+3)& (0+255),f,b
  4413   000F14                     
  4414                           ; BSR set to: 0
  4415   000F14  C0BA  F0A4         	movff	sinf@ux,?_sinf
  4416   000F18  C0BB  F0A5         	movff	sinf@ux+1,?_sinf+1
  4417   000F1C  C0BC  F0A6         	movff	sinf@ux+2,?_sinf+2
  4418   000F20  C0BD  F0A7         	movff	sinf@ux+3,?_sinf+3
  4419   000F24  EF0D  F008         	goto	l1520
  4420   000F28                     l6990:
  4421                           
  4422                           ; BSR set to: 0
  4423   000F28  C0A4  F084         	movff	sinf@x,___rem_pio2f@x
  4424   000F2C  C0A5  F085         	movff	sinf@x+1,___rem_pio2f@x+1
  4425   000F30  C0A6  F086         	movff	sinf@x+2,___rem_pio2f@x+2
  4426   000F34  C0A7  F087         	movff	sinf@x+3,___rem_pio2f@x+3
  4427   000F38  0EB6               	movlw	low sinf@y
  4428   000F3A  6F88               	movwf	___rem_pio2f@y& (0+255),b
  4429   000F3C  EC8F  F00E         	call	___rem_pio2f	;wreg free
  4430   000F40  0100               	movlb	0	; () banked
  4431   000F42  5184               	movf	?___rem_pio2f& (0+255),w,b
  4432   000F44  0B03               	andlw	3
  4433   000F46  6FB0               	movwf	sinf@n& (0+255),b
  4434   000F48  EFFE  F007         	goto	l7008
  4435   000F4C                     l6992:
  4436                           
  4437                           ; BSR set to: 0
  4438   000F4C  C0B6  F080         	movff	sinf@y,___flneg@f1
  4439   000F50  C0B7  F081         	movff	sinf@y+1,___flneg@f1+1
  4440   000F54  C0B8  F082         	movff	sinf@y+2,___flneg@f1+2
  4441   000F58  C0B9  F083         	movff	sinf@y+3,___flneg@f1+3
  4442   000F5C  ECBA  F023         	call	___flneg	;wreg free
  4443   000F60  C080  F0B6         	movff	?___flneg,sinf@y
  4444   000F64  C081  F0B7         	movff	?___flneg+1,sinf@y+1
  4445   000F68  C082  F0B8         	movff	?___flneg+2,sinf@y+2
  4446   000F6C  C083  F0B9         	movff	?___flneg+3,sinf@y+3
  4447   000F70                     l6994:
  4448   000F70  C0B6  F064         	movff	sinf@y,___sindf@x
  4449   000F74  C0B7  F065         	movff	sinf@y+1,___sindf@x+1
  4450   000F78  C0B8  F066         	movff	sinf@y+2,___sindf@x+2
  4451   000F7C  C0B9  F067         	movff	sinf@y+3,___sindf@x+3
  4452   000F80  EC04  F015         	call	___sindf	;wreg free
  4453   000F84  C064  F0A4         	movff	?___sindf,?_sinf
  4454   000F88  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  4455   000F8C  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  4456   000F90  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  4457   000F94  EF0D  F008         	goto	l1520
  4458   000F98                     l6998:
  4459                           
  4460                           ; BSR set to: 0
  4461   000F98  C0B6  F064         	movff	sinf@y,___cosdf@x
  4462   000F9C  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  4463   000FA0  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  4464   000FA4  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  4465   000FA8  EC31  F018         	call	___cosdf	;wreg free
  4466   000FAC  C064  F0A4         	movff	?___cosdf,?_sinf
  4467   000FB0  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  4468   000FB4  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  4469   000FB8  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  4470   000FBC  EF0D  F008         	goto	l1520
  4471   000FC0                     l7002:
  4472                           
  4473                           ; BSR set to: 0
  4474   000FC0  C0B6  F064         	movff	sinf@y,___cosdf@x
  4475   000FC4  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  4476   000FC8  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  4477   000FCC  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  4478   000FD0  EC31  F018         	call	___cosdf	;wreg free
  4479   000FD4  C064  F080         	movff	?___cosdf,___flneg@f1
  4480   000FD8  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  4481   000FDC  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  4482   000FE0  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  4483   000FE4  ECBA  F023         	call	___flneg	;wreg free
  4484   000FE8  C080  F0A4         	movff	?___flneg,?_sinf
  4485   000FEC  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  4486   000FF0  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  4487   000FF4  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  4488   000FF8  EF0D  F008         	goto	l1520
  4489   000FFC                     l7008:
  4490                           
  4491                           ; BSR set to: 0
  4492   000FFC  51B0               	movf	sinf@n& (0+255),w,b
  4493                           
  4494                           ; Switch size 1, requested type "simple"
  4495                           ; Number of cases is 3, Range of values is 0 to 2
  4496                           ; switch strategies available:
  4497                           ; Name         Instructions Cycles
  4498                           ; simple_byte           10     6 (average)
  4499                           ;	Chosen strategy is simple_byte
  4500   000FFE  0A00               	xorlw	0	; case 0
  4501   001000  B4D8               	btfsc	status,2,c
  4502   001002  EFB8  F007         	goto	l6994
  4503   001006  0A01               	xorlw	1	; case 1
  4504   001008  B4D8               	btfsc	status,2,c
  4505   00100A  EFCC  F007         	goto	l6998
  4506   00100E  0A03               	xorlw	3	; case 2
  4507   001010  B4D8               	btfsc	status,2,c
  4508   001012  EFA6  F007         	goto	l6992
  4509   001016  EFE0  F007         	goto	l7002
  4510   00101A                     l1520:
  4511   00101A  0012               	return		;funcret
  4512   00101C                     __end_of_sinf:
  4513                           	callstack 0
  4514                           
  4515 ;; *************** function ___sindf *****************
  4516 ;; Defined at:
  4517 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__sindf.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  x               4    4[BANK0 ] float 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  z               4   32[BANK0 ] float 
  4522 ;;  s               4   28[BANK0 ] float 
  4523 ;;  w               4   12[BANK0 ] float 
  4524 ;;  r               4    8[BANK0 ] float 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  4    4[BANK0 ] float 
  4527 ;; Registers used:
  4528 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4534 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;Total ram usage:       32 bytes
  4539 ;; Hardware stack levels used: 1
  4540 ;; Hardware stack levels required when called: 2
  4541 ;; This function calls:
  4542 ;;		___fladd
  4543 ;;		___flmul
  4544 ;; This function is called by:
  4545 ;;		_sinf
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text15
  4550   002A08                     __ptext15:
  4551                           	callstack 0
  4552   002A08                     ___sindf:
  4553                           	callstack 26
  4554   002A08  C064  F014         	movff	___sindf@x,___flmul@b
  4555   002A0C  C065  F015         	movff	___sindf@x+1,___flmul@b+1
  4556   002A10  C066  F016         	movff	___sindf@x+2,___flmul@b+2
  4557   002A14  C067  F017         	movff	___sindf@x+3,___flmul@b+3
  4558   002A18  C064  F018         	movff	___sindf@x,___flmul@a
  4559   002A1C  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  4560   002A20  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  4561   002A24  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  4562   002A28  EC6F  F00A         	call	___flmul	;wreg free
  4563   002A2C  C014  F080         	movff	?___flmul,___sindf@z
  4564   002A30  C015  F081         	movff	?___flmul+1,___sindf@z+1
  4565   002A34  C016  F082         	movff	?___flmul+2,___sindf@z+2
  4566   002A38  C017  F083         	movff	?___flmul+3,___sindf@z+3
  4567   002A3C  C080  F014         	movff	___sindf@z,___flmul@b
  4568   002A40  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4569   002A44  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4570   002A48  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4571   002A4C  C080  F018         	movff	___sindf@z,___flmul@a
  4572   002A50  C081  F019         	movff	___sindf@z+1,___flmul@a+1
  4573   002A54  C082  F01A         	movff	___sindf@z+2,___flmul@a+2
  4574   002A58  C083  F01B         	movff	___sindf@z+3,___flmul@a+3
  4575   002A5C  EC6F  F00A         	call	___flmul	;wreg free
  4576   002A60  C014  F06C         	movff	?___flmul,___sindf@w
  4577   002A64  C015  F06D         	movff	?___flmul+1,___sindf@w+1
  4578   002A68  C016  F06E         	movff	?___flmul+2,___sindf@w+2
  4579   002A6C  C017  F06F         	movff	?___flmul+3,___sindf@w+3
  4580   002A70  0E3C               	movlw	60
  4581   002A72  6E18               	movwf	___flmul@a^0,c
  4582   002A74  0E6C               	movlw	108
  4583   002A76  6E19               	movwf	(___flmul@a+1)^0,c
  4584   002A78  0E36               	movlw	54
  4585   002A7A  6E1A               	movwf	(___flmul@a+2)^0,c
  4586   002A7C  0E36               	movlw	54
  4587   002A7E  6E1B               	movwf	(___flmul@a+3)^0,c
  4588   002A80  C080  F014         	movff	___sindf@z,___flmul@b
  4589   002A84  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4590   002A88  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4591   002A8C  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4592   002A90  EC6F  F00A         	call	___flmul	;wreg free
  4593   002A94  C014  F046         	movff	?___flmul,___fladd@b
  4594   002A98  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4595   002A9C  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4596   002AA0  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4597   002AA4  0ECF               	movlw	207
  4598   002AA6  6E4A               	movwf	___fladd@a^0,c
  4599   002AA8  0E07               	movlw	7
  4600   002AAA  6E4B               	movwf	(___fladd@a+1)^0,c
  4601   002AAC  0E50               	movlw	80
  4602   002AAE  6E4C               	movwf	(___fladd@a+2)^0,c
  4603   002AB0  0EB9               	movlw	185
  4604   002AB2  6E4D               	movwf	(___fladd@a+3)^0,c
  4605   002AB4  EC0E  F008         	call	___fladd	;wreg free
  4606   002AB8  C046  F068         	movff	?___fladd,___sindf@r
  4607   002ABC  C047  F069         	movff	?___fladd+1,___sindf@r+1
  4608   002AC0  C048  F06A         	movff	?___fladd+2,___sindf@r+2
  4609   002AC4  C049  F06B         	movff	?___fladd+3,___sindf@r+3
  4610   002AC8  C080  F014         	movff	___sindf@z,___flmul@b
  4611   002ACC  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4612   002AD0  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4613   002AD4  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4614   002AD8  C064  F018         	movff	___sindf@x,___flmul@a
  4615   002ADC  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  4616   002AE0  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  4617   002AE4  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  4618   002AE8  EC6F  F00A         	call	___flmul	;wreg free
  4619   002AEC  C014  F07C         	movff	?___flmul,___sindf@s
  4620   002AF0  C015  F07D         	movff	?___flmul+1,___sindf@s+1
  4621   002AF4  C016  F07E         	movff	?___flmul+2,___sindf@s+2
  4622   002AF8  C017  F07F         	movff	?___flmul+3,___sindf@s+3
  4623   002AFC  0EAB               	movlw	171
  4624   002AFE  6E4A               	movwf	___fladd@a^0,c
  4625   002B00  0EAA               	movlw	170
  4626   002B02  6E4B               	movwf	(___fladd@a+1)^0,c
  4627   002B04  0E2A               	movlw	42
  4628   002B06  6E4C               	movwf	(___fladd@a+2)^0,c
  4629   002B08  0EBE               	movlw	190
  4630   002B0A  6E4D               	movwf	(___fladd@a+3)^0,c
  4631   002B0C  0E84               	movlw	132
  4632   002B0E  6E18               	movwf	___flmul@a^0,c
  4633   002B10  0E88               	movlw	136
  4634   002B12  6E19               	movwf	(___flmul@a+1)^0,c
  4635   002B14  0E08               	movlw	8
  4636   002B16  6E1A               	movwf	(___flmul@a+2)^0,c
  4637   002B18  0E3C               	movlw	60
  4638   002B1A  6E1B               	movwf	(___flmul@a+3)^0,c
  4639   002B1C  C080  F014         	movff	___sindf@z,___flmul@b
  4640   002B20  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4641   002B24  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4642   002B28  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4643   002B2C  EC6F  F00A         	call	___flmul	;wreg free
  4644   002B30  C014  F046         	movff	?___flmul,___fladd@b
  4645   002B34  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4646   002B38  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4647   002B3C  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4648   002B40  EC0E  F008         	call	___fladd	;wreg free
  4649   002B44  C046  F070         	movff	?___fladd,___sindf$4153
  4650   002B48  C047  F071         	movff	?___fladd+1,___sindf$4153+1
  4651   002B4C  C048  F072         	movff	?___fladd+2,___sindf$4153+2
  4652   002B50  C049  F073         	movff	?___fladd+3,___sindf$4153+3
  4653   002B54  C06C  F018         	movff	___sindf@w,___flmul@a
  4654   002B58  C06D  F019         	movff	___sindf@w+1,___flmul@a+1
  4655   002B5C  C06E  F01A         	movff	___sindf@w+2,___flmul@a+2
  4656   002B60  C06F  F01B         	movff	___sindf@w+3,___flmul@a+3
  4657   002B64  C07C  F014         	movff	___sindf@s,___flmul@b
  4658   002B68  C07D  F015         	movff	___sindf@s+1,___flmul@b+1
  4659   002B6C  C07E  F016         	movff	___sindf@s+2,___flmul@b+2
  4660   002B70  C07F  F017         	movff	___sindf@s+3,___flmul@b+3
  4661   002B74  EC6F  F00A         	call	___flmul	;wreg free
  4662   002B78  C014  F074         	movff	?___flmul,___sindf$4154
  4663   002B7C  C015  F075         	movff	?___flmul+1,___sindf$4154+1
  4664   002B80  C016  F076         	movff	?___flmul+2,___sindf$4154+2
  4665   002B84  C017  F077         	movff	?___flmul+3,___sindf$4154+3
  4666   002B88  C064  F04A         	movff	___sindf@x,___fladd@a
  4667   002B8C  C065  F04B         	movff	___sindf@x+1,___fladd@a+1
  4668   002B90  C066  F04C         	movff	___sindf@x+2,___fladd@a+2
  4669   002B94  C067  F04D         	movff	___sindf@x+3,___fladd@a+3
  4670   002B98  C07C  F018         	movff	___sindf@s,___flmul@a
  4671   002B9C  C07D  F019         	movff	___sindf@s+1,___flmul@a+1
  4672   002BA0  C07E  F01A         	movff	___sindf@s+2,___flmul@a+2
  4673   002BA4  C07F  F01B         	movff	___sindf@s+3,___flmul@a+3
  4674   002BA8  C070  F014         	movff	___sindf$4153,___flmul@b
  4675   002BAC  C071  F015         	movff	___sindf$4153+1,___flmul@b+1
  4676   002BB0  C072  F016         	movff	___sindf$4153+2,___flmul@b+2
  4677   002BB4  C073  F017         	movff	___sindf$4153+3,___flmul@b+3
  4678   002BB8  EC6F  F00A         	call	___flmul	;wreg free
  4679   002BBC  C014  F046         	movff	?___flmul,___fladd@b
  4680   002BC0  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4681   002BC4  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4682   002BC8  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4683   002BCC  EC0E  F008         	call	___fladd	;wreg free
  4684   002BD0  C046  F078         	movff	?___fladd,___sindf$4155
  4685   002BD4  C047  F079         	movff	?___fladd+1,___sindf$4155+1
  4686   002BD8  C048  F07A         	movff	?___fladd+2,___sindf$4155+2
  4687   002BDC  C049  F07B         	movff	?___fladd+3,___sindf$4155+3
  4688   002BE0  C078  F046         	movff	___sindf$4155,___fladd@b
  4689   002BE4  C079  F047         	movff	___sindf$4155+1,___fladd@b+1
  4690   002BE8  C07A  F048         	movff	___sindf$4155+2,___fladd@b+2
  4691   002BEC  C07B  F049         	movff	___sindf$4155+3,___fladd@b+3
  4692   002BF0  C068  F018         	movff	___sindf@r,___flmul@a
  4693   002BF4  C069  F019         	movff	___sindf@r+1,___flmul@a+1
  4694   002BF8  C06A  F01A         	movff	___sindf@r+2,___flmul@a+2
  4695   002BFC  C06B  F01B         	movff	___sindf@r+3,___flmul@a+3
  4696   002C00  C074  F014         	movff	___sindf$4154,___flmul@b
  4697   002C04  C075  F015         	movff	___sindf$4154+1,___flmul@b+1
  4698   002C08  C076  F016         	movff	___sindf$4154+2,___flmul@b+2
  4699   002C0C  C077  F017         	movff	___sindf$4154+3,___flmul@b+3
  4700   002C10  EC6F  F00A         	call	___flmul	;wreg free
  4701   002C14  C014  F04A         	movff	?___flmul,___fladd@a
  4702   002C18  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  4703   002C1C  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  4704   002C20  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  4705   002C24  EC0E  F008         	call	___fladd	;wreg free
  4706   002C28  C046  F064         	movff	?___fladd,?___sindf
  4707   002C2C  C047  F065         	movff	?___fladd+1,?___sindf+1
  4708   002C30  C048  F066         	movff	?___fladd+2,?___sindf+2
  4709   002C34  C049  F067         	movff	?___fladd+3,?___sindf+3
  4710   002C38  0012               	return		;funcret
  4711   002C3A                     __end_of___sindf:
  4712                           	callstack 0
  4713                           
  4714 ;; *************** function ___rem_pio2f *****************
  4715 ;; Defined at:
  4716 ;;		line 44 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__rem_pio2f.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;  x               4   36[BANK0 ] float 
  4719 ;;  y               1   40[BANK0 ] PTR 
  4720 ;;		 -> sinf@y(4), 
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;  n               4   64[BANK0 ] long 
  4723 ;;  t               4   60[BANK0 ] float 
  4724 ;;  fn              4   56[BANK0 ] float 
  4725 ;;  ux              4   52[BANK0 ] struct .
  4726 ;;  ty              4   43[BANK0 ] [1]
  4727 ;;  sign            1   51[BANK0 ] _Bool 
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  2   36[BANK0 ] int 
  4730 ;; Registers used:
  4731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4737 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4739 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4740 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4741 ;;Total ram usage:       32 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; Hardware stack levels required when called: 3
  4744 ;; This function calls:
  4745 ;;		___fladd
  4746 ;;		___flmul
  4747 ;;		___flneg
  4748 ;;		___flsub
  4749 ;;		___fltol
  4750 ;;		___xxtofl
  4751 ;;		_fabsf
  4752 ;; This function is called by:
  4753 ;;		_sinf
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text16
  4758   001D1E                     __ptext16:
  4759                           	callstack 0
  4760   001D1E                     ___rem_pio2f:
  4761                           	callstack 25
  4762   001D1E  C115  F094         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  4763   001D22  C116  F095         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  4764   001D26  C117  F096         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  4765   001D2A  C118  F097         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  4766   001D2E  C084  F094         	movff	___rem_pio2f@x,___rem_pio2f@ux
  4767   001D32  C085  F095         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  4768   001D36  C086  F096         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  4769   001D3A  C087  F097         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  4770   001D3E  0100               	movlb	0	; () banked
  4771   001D40  BF97               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  4772   001D42  EFA5  F00E         	goto	u8601
  4773   001D46  EFA8  F00E         	goto	u8600
  4774   001D4A                     u8601:
  4775   001D4A  0E01               	movlw	1
  4776   001D4C  EFA9  F00E         	goto	u8610
  4777   001D50                     u8600:
  4778   001D50  0E00               	movlw	0
  4779   001D52                     u8610:
  4780   001D52  6F93               	movwf	___rem_pio2f@sign& (0+255),b
  4781   001D54                     
  4782                           ; BSR set to: 0
  4783   001D54  9F97               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  4784   001D56                     
  4785                           ; BSR set to: 0
  4786   001D56  0EDB               	movlw	219
  4787   001D58  5D94               	subwf	___rem_pio2f@ux& (0+255),w,b
  4788   001D5A  0E0F               	movlw	15
  4789   001D5C  5995               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  4790   001D5E  0EC9               	movlw	201
  4791   001D60  5996               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  4792   001D62  0E4D               	movlw	77
  4793   001D64  5997               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  4794   001D66  B0D8               	btfsc	status,0,c
  4795   001D68  EFB8  F00E         	goto	u8621
  4796   001D6C  EFBA  F00E         	goto	u8620
  4797   001D70                     u8621:
  4798   001D70  EFA6  F00F         	goto	l6848
  4799   001D74                     u8620:
  4800   001D74                     
  4801                           ; BSR set to: 0
  4802   001D74  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  4803   001D78  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  4804   001D7C  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  4805   001D80  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  4806   001D84  EC29  F024         	call	_fabsf	;wreg free
  4807   001D88  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  4808   001D8C  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  4809   001D90  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  4810   001D94  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  4811   001D98  0E00               	movlw	0
  4812   001D9A  6E4A               	movwf	___fladd@a^0,c
  4813   001D9C  0E00               	movlw	0
  4814   001D9E  6E4B               	movwf	(___fladd@a+1)^0,c
  4815   001DA0  0E00               	movlw	0
  4816   001DA2  6E4C               	movwf	(___fladd@a+2)^0,c
  4817   001DA4  0E3F               	movlw	63
  4818   001DA6  6E4D               	movwf	(___fladd@a+3)^0,c
  4819   001DA8  0E83               	movlw	131
  4820   001DAA  6E18               	movwf	___flmul@a^0,c
  4821   001DAC  0EF9               	movlw	249
  4822   001DAE  6E19               	movwf	(___flmul@a+1)^0,c
  4823   001DB0  0E22               	movlw	34
  4824   001DB2  6E1A               	movwf	(___flmul@a+2)^0,c
  4825   001DB4  0E3F               	movlw	63
  4826   001DB6  6E1B               	movwf	(___flmul@a+3)^0,c
  4827   001DB8  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  4828   001DBC  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  4829   001DC0  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  4830   001DC4  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  4831   001DC8  EC6F  F00A         	call	___flmul	;wreg free
  4832   001DCC  C014  F046         	movff	?___flmul,___fladd@b
  4833   001DD0  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4834   001DD4  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4835   001DD8  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4836   001DDC  EC0E  F008         	call	___fladd	;wreg free
  4837   001DE0  C046  F064         	movff	?___fladd,___fltol@f1
  4838   001DE4  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  4839   001DE8  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  4840   001DEC  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  4841   001DF0  EC31  F01E         	call	___fltol	;wreg free
  4842   001DF4  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  4843   001DF8  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  4844   001DFC  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  4845   001E00  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  4846   001E04  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  4847   001E08  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  4848   001E0C  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  4849   001E10  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  4850   001E14  0E01               	movlw	1
  4851   001E16  EC30  F019         	call	___xxtofl
  4852   001E1A  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  4853   001E1E  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  4854   001E22  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  4855   001E26  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  4856   001E2A  0EDA               	movlw	218
  4857   001E2C  6E18               	movwf	___flmul@a^0,c
  4858   001E2E  0E0F               	movlw	15
  4859   001E30  6E19               	movwf	(___flmul@a+1)^0,c
  4860   001E32  0EC9               	movlw	201
  4861   001E34  6E1A               	movwf	(___flmul@a+2)^0,c
  4862   001E36  0E3F               	movlw	63
  4863   001E38  6E1B               	movwf	(___flmul@a+3)^0,c
  4864   001E3A  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  4865   001E3E  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4866   001E42  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4867   001E46  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4868   001E4A  EC6F  F00A         	call	___flmul	;wreg free
  4869   001E4E  C014  F068         	movff	?___flmul,___flsub@a
  4870   001E52  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4871   001E56  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4872   001E5A  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4873   001E5E  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  4874   001E62  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  4875   001E66  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  4876   001E6A  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  4877   001E6E  EC32  F023         	call	___flsub	;wreg free
  4878   001E72  C064  F08F         	movff	?___flsub,___rem_pio2f$4152
  4879   001E76  C065  F090         	movff	?___flsub+1,___rem_pio2f$4152+1
  4880   001E7A  C066  F091         	movff	?___flsub+2,___rem_pio2f$4152+2
  4881   001E7E  C067  F092         	movff	?___flsub+3,___rem_pio2f$4152+3
  4882   001E82  C08F  F064         	movff	___rem_pio2f$4152,___flsub@b
  4883   001E86  C090  F065         	movff	___rem_pio2f$4152+1,___flsub@b+1
  4884   001E8A  C091  F066         	movff	___rem_pio2f$4152+2,___flsub@b+2
  4885   001E8E  C092  F067         	movff	___rem_pio2f$4152+3,___flsub@b+3
  4886   001E92  0EA3               	movlw	163
  4887   001E94  6E18               	movwf	___flmul@a^0,c
  4888   001E96  0E85               	movlw	133
  4889   001E98  6E19               	movwf	(___flmul@a+1)^0,c
  4890   001E9A  0E88               	movlw	136
  4891   001E9C  6E1A               	movwf	(___flmul@a+2)^0,c
  4892   001E9E  0E32               	movlw	50
  4893   001EA0  6E1B               	movwf	(___flmul@a+3)^0,c
  4894   001EA2  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  4895   001EA6  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4896   001EAA  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4897   001EAE  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4898   001EB2  EC6F  F00A         	call	___flmul	;wreg free
  4899   001EB6  C014  F068         	movff	?___flmul,___flsub@a
  4900   001EBA  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4901   001EBE  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4902   001EC2  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4903   001EC6  EC32  F023         	call	___flsub	;wreg free
  4904   001ECA  0100               	movlb	0	; () banked
  4905   001ECC  5188               	movf	___rem_pio2f@y& (0+255),w,b
  4906   001ECE  6ED9               	movwf	fsr2l,c
  4907   001ED0  6ADA               	clrf	fsr2h,c
  4908   001ED2  C064  FFDE         	movff	?___flsub,postinc2
  4909   001ED6  C065  FFDE         	movff	?___flsub+1,postinc2
  4910   001EDA  C066  FFDE         	movff	?___flsub+2,postinc2
  4911   001EDE  C067  FFDE         	movff	?___flsub+3,postinc2
  4912   001EE2                     
  4913                           ; BSR set to: 0
  4914   001EE2  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  4915   001EE4  B4D8               	btfsc	status,2,c
  4916   001EE6  EF77  F00F         	goto	u8631
  4917   001EEA  EF79  F00F         	goto	u8630
  4918   001EEE                     u8631:
  4919   001EEE  EFA0  F00F         	goto	l1570
  4920   001EF2                     u8630:
  4921   001EF2                     l6842:
  4922                           
  4923                           ; BSR set to: 0
  4924   001EF2  5188               	movf	___rem_pio2f@y& (0+255),w,b
  4925   001EF4  6ED9               	movwf	fsr2l,c
  4926   001EF6  6ADA               	clrf	fsr2h,c
  4927   001EF8  CFDE F080          	movff	postinc2,___flneg@f1
  4928   001EFC  CFDE F081          	movff	postinc2,___flneg@f1+1
  4929   001F00  CFDE F082          	movff	postinc2,___flneg@f1+2
  4930   001F04  CFDE F083          	movff	postinc2,___flneg@f1+3
  4931   001F08  ECBA  F023         	call	___flneg	;wreg free
  4932   001F0C  0100               	movlb	0	; () banked
  4933   001F0E  5188               	movf	___rem_pio2f@y& (0+255),w,b
  4934   001F10  6ED9               	movwf	fsr2l,c
  4935   001F12  6ADA               	clrf	fsr2h,c
  4936   001F14  C080  FFDE         	movff	?___flneg,postinc2
  4937   001F18  C081  FFDE         	movff	?___flneg+1,postinc2
  4938   001F1C  C082  FFDE         	movff	?___flneg+2,postinc2
  4939   001F20  C083  FFDE         	movff	?___flneg+3,postinc2
  4940   001F24                     
  4941                           ; BSR set to: 0
  4942   001F24  C0A0  F089         	movff	___rem_pio2f@n,??___rem_pio2f
  4943   001F28  C0A1  F08A         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  4944   001F2C  1F89               	comf	??___rem_pio2f& (0+255),f,b
  4945   001F2E  1F8A               	comf	(??___rem_pio2f+1)& (0+255),f,b
  4946   001F30  4B89               	infsnz	??___rem_pio2f& (0+255),f,b
  4947   001F32  2B8A               	incf	(??___rem_pio2f+1)& (0+255),f,b
  4948   001F34  C089  F084         	movff	??___rem_pio2f,?___rem_pio2f
  4949   001F38  C08A  F085         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  4950   001F3C  EF6F  F010         	goto	l1571
  4951   001F40                     l1570:
  4952                           
  4953                           ; BSR set to: 0
  4954   001F40  C0A0  F084         	movff	___rem_pio2f@n,?___rem_pio2f
  4955   001F44  C0A1  F085         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  4956   001F48  EF6F  F010         	goto	l1571
  4957   001F4C                     l6848:
  4958                           
  4959                           ; BSR set to: 0
  4960   001F4C  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  4961   001F50  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  4962   001F54  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  4963   001F58  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  4964   001F5C  EC29  F024         	call	_fabsf	;wreg free
  4965   001F60  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  4966   001F64  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  4967   001F68  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  4968   001F6C  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  4969   001F70  0E00               	movlw	0
  4970   001F72  6E4A               	movwf	___fladd@a^0,c
  4971   001F74  0E00               	movlw	0
  4972   001F76  6E4B               	movwf	(___fladd@a+1)^0,c
  4973   001F78  0E00               	movlw	0
  4974   001F7A  6E4C               	movwf	(___fladd@a+2)^0,c
  4975   001F7C  0E3F               	movlw	63
  4976   001F7E  6E4D               	movwf	(___fladd@a+3)^0,c
  4977   001F80  0E83               	movlw	131
  4978   001F82  6E18               	movwf	___flmul@a^0,c
  4979   001F84  0EF9               	movlw	249
  4980   001F86  6E19               	movwf	(___flmul@a+1)^0,c
  4981   001F88  0E22               	movlw	34
  4982   001F8A  6E1A               	movwf	(___flmul@a+2)^0,c
  4983   001F8C  0E3F               	movlw	63
  4984   001F8E  6E1B               	movwf	(___flmul@a+3)^0,c
  4985   001F90  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  4986   001F94  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  4987   001F98  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  4988   001F9C  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  4989   001FA0  EC6F  F00A         	call	___flmul	;wreg free
  4990   001FA4  C014  F046         	movff	?___flmul,___fladd@b
  4991   001FA8  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4992   001FAC  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4993   001FB0  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4994   001FB4  EC0E  F008         	call	___fladd	;wreg free
  4995   001FB8  C046  F064         	movff	?___fladd,___fltol@f1
  4996   001FBC  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  4997   001FC0  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  4998   001FC4  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  4999   001FC8  EC31  F01E         	call	___fltol	;wreg free
  5000   001FCC  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  5001   001FD0  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  5002   001FD4  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  5003   001FD8  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  5004   001FDC  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  5005   001FE0  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  5006   001FE4  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  5007   001FE8  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  5008   001FEC  0E01               	movlw	1
  5009   001FEE  EC30  F019         	call	___xxtofl
  5010   001FF2  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  5011   001FF6  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  5012   001FFA  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  5013   001FFE  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  5014   002002  0EDA               	movlw	218
  5015   002004  6E18               	movwf	___flmul@a^0,c
  5016   002006  0E0F               	movlw	15
  5017   002008  6E19               	movwf	(___flmul@a+1)^0,c
  5018   00200A  0EC9               	movlw	201
  5019   00200C  6E1A               	movwf	(___flmul@a+2)^0,c
  5020   00200E  0E3F               	movlw	63
  5021   002010  6E1B               	movwf	(___flmul@a+3)^0,c
  5022   002012  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  5023   002016  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  5024   00201A  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  5025   00201E  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  5026   002022  EC6F  F00A         	call	___flmul	;wreg free
  5027   002026  C014  F068         	movff	?___flmul,___flsub@a
  5028   00202A  C015  F069         	movff	?___flmul+1,___flsub@a+1
  5029   00202E  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  5030   002032  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  5031   002036  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  5032   00203A  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  5033   00203E  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  5034   002042  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  5035   002046  EC32  F023         	call	___flsub	;wreg free
  5036   00204A  C064  F08F         	movff	?___flsub,___rem_pio2f$4152
  5037   00204E  C065  F090         	movff	?___flsub+1,___rem_pio2f$4152+1
  5038   002052  C066  F091         	movff	?___flsub+2,___rem_pio2f$4152+2
  5039   002056  C067  F092         	movff	?___flsub+3,___rem_pio2f$4152+3
  5040   00205A  C08F  F064         	movff	___rem_pio2f$4152,___flsub@b
  5041   00205E  C090  F065         	movff	___rem_pio2f$4152+1,___flsub@b+1
  5042   002062  C091  F066         	movff	___rem_pio2f$4152+2,___flsub@b+2
  5043   002066  C092  F067         	movff	___rem_pio2f$4152+3,___flsub@b+3
  5044   00206A  0EA3               	movlw	163
  5045   00206C  6E18               	movwf	___flmul@a^0,c
  5046   00206E  0E85               	movlw	133
  5047   002070  6E19               	movwf	(___flmul@a+1)^0,c
  5048   002072  0E88               	movlw	136
  5049   002074  6E1A               	movwf	(___flmul@a+2)^0,c
  5050   002076  0E32               	movlw	50
  5051   002078  6E1B               	movwf	(___flmul@a+3)^0,c
  5052   00207A  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  5053   00207E  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  5054   002082  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  5055   002086  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  5056   00208A  EC6F  F00A         	call	___flmul	;wreg free
  5057   00208E  C014  F068         	movff	?___flmul,___flsub@a
  5058   002092  C015  F069         	movff	?___flmul+1,___flsub@a+1
  5059   002096  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  5060   00209A  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  5061   00209E  EC32  F023         	call	___flsub	;wreg free
  5062   0020A2  C064  F08B         	movff	?___flsub,___rem_pio2f@ty
  5063   0020A6  C065  F08C         	movff	?___flsub+1,___rem_pio2f@ty+1
  5064   0020AA  C066  F08D         	movff	?___flsub+2,___rem_pio2f@ty+2
  5065   0020AE  C067  F08E         	movff	?___flsub+3,___rem_pio2f@ty+3
  5066   0020B2  0100               	movlb	0	; () banked
  5067   0020B4  5188               	movf	___rem_pio2f@y& (0+255),w,b
  5068   0020B6  6ED9               	movwf	fsr2l,c
  5069   0020B8  6ADA               	clrf	fsr2h,c
  5070   0020BA  C08B  FFDE         	movff	___rem_pio2f@ty,postinc2
  5071   0020BE  C08C  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  5072   0020C2  C08D  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  5073   0020C6  C08E  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  5074   0020CA                     
  5075                           ; BSR set to: 0
  5076   0020CA  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  5077   0020CC  B4D8               	btfsc	status,2,c
  5078   0020CE  EF6B  F010         	goto	u8641
  5079   0020D2  EF6D  F010         	goto	u8640
  5080   0020D6                     u8641:
  5081   0020D6  EFA0  F00F         	goto	l1570
  5082   0020DA                     u8640:
  5083   0020DA  EF79  F00F         	goto	l6842
  5084   0020DE                     l1571:
  5085                           
  5086                           ; BSR set to: 0
  5087   0020DE  0012               	return		;funcret
  5088   0020E0                     __end_of___rem_pio2f:
  5089                           	callstack 0
  5090                           
  5091 ;; *************** function _fabsf *****************
  5092 ;; Defined at:
  5093 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fabsf.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  x               4    5[COMRAM] float 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  u               4    9[COMRAM] struct .
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  4    5[COMRAM] float 
  5100 ;; Registers used:
  5101 ;;		status,2, status,0
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;Total ram usage:        8 bytes
  5112 ;; Hardware stack levels used: 1
  5113 ;; Hardware stack levels required when called: 1
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		___rem_pio2f
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text17
  5122   004852                     __ptext17:
  5123                           	callstack 0
  5124   004852                     _fabsf:
  5125                           	callstack 26
  5126   004852  C111  F00A         	movff	fabsf@F465,fabsf@u
  5127   004856  C112  F00B         	movff	fabsf@F465+1,fabsf@u+1
  5128   00485A  C113  F00C         	movff	fabsf@F465+2,fabsf@u+2
  5129   00485E  C114  F00D         	movff	fabsf@F465+3,fabsf@u+3
  5130   004862  C006  F00A         	movff	fabsf@x,fabsf@u
  5131   004866  C007  F00B         	movff	fabsf@x+1,fabsf@u+1
  5132   00486A  C008  F00C         	movff	fabsf@x+2,fabsf@u+2
  5133   00486E  C009  F00D         	movff	fabsf@x+3,fabsf@u+3
  5134   004872  9E0D               	bcf	(fabsf@u+3)^0,7,c
  5135   004874  C00A  F006         	movff	fabsf@u,?_fabsf
  5136   004878  C00B  F007         	movff	fabsf@u+1,?_fabsf+1
  5137   00487C  C00C  F008         	movff	fabsf@u+2,?_fabsf+2
  5138   004880  C00D  F009         	movff	fabsf@u+3,?_fabsf+3
  5139   004884  0012               	return		;funcret
  5140   004886                     __end_of_fabsf:
  5141                           	callstack 0
  5142                           
  5143 ;; *************** function ___cosdf *****************
  5144 ;; Defined at:
  5145 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__cosdf.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;  x               4    4[BANK0 ] float 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  z               4   28[BANK0 ] float 
  5150 ;;  w               4   24[BANK0 ] float 
  5151 ;;  r               4    8[BANK0 ] float 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  4    4[BANK0 ] float 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5161 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;Total ram usage:       28 bytes
  5166 ;; Hardware stack levels used: 1
  5167 ;; Hardware stack levels required when called: 2
  5168 ;; This function calls:
  5169 ;;		___fladd
  5170 ;;		___flmul
  5171 ;; This function is called by:
  5172 ;;		_sinf
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text18
  5177   003062                     __ptext18:
  5178                           	callstack 0
  5179   003062                     ___cosdf:
  5180                           	callstack 26
  5181   003062  C064  F014         	movff	___cosdf@x,___flmul@b
  5182   003066  C065  F015         	movff	___cosdf@x+1,___flmul@b+1
  5183   00306A  C066  F016         	movff	___cosdf@x+2,___flmul@b+2
  5184   00306E  C067  F017         	movff	___cosdf@x+3,___flmul@b+3
  5185   003072  C064  F018         	movff	___cosdf@x,___flmul@a
  5186   003076  C065  F019         	movff	___cosdf@x+1,___flmul@a+1
  5187   00307A  C066  F01A         	movff	___cosdf@x+2,___flmul@a+2
  5188   00307E  C067  F01B         	movff	___cosdf@x+3,___flmul@a+3
  5189   003082  EC6F  F00A         	call	___flmul	;wreg free
  5190   003086  C014  F07C         	movff	?___flmul,___cosdf@z
  5191   00308A  C015  F07D         	movff	?___flmul+1,___cosdf@z+1
  5192   00308E  C016  F07E         	movff	?___flmul+2,___cosdf@z+2
  5193   003092  C017  F07F         	movff	?___flmul+3,___cosdf@z+3
  5194   003096  C07C  F014         	movff	___cosdf@z,___flmul@b
  5195   00309A  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  5196   00309E  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  5197   0030A2  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  5198   0030A6  C07C  F018         	movff	___cosdf@z,___flmul@a
  5199   0030AA  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  5200   0030AE  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  5201   0030B2  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  5202   0030B6  EC6F  F00A         	call	___flmul	;wreg free
  5203   0030BA  C014  F078         	movff	?___flmul,___cosdf@w
  5204   0030BE  C015  F079         	movff	?___flmul+1,___cosdf@w+1
  5205   0030C2  C016  F07A         	movff	?___flmul+2,___cosdf@w+2
  5206   0030C6  C017  F07B         	movff	?___flmul+3,___cosdf@w+3
  5207   0030CA  0E17               	movlw	23
  5208   0030CC  6E18               	movwf	___flmul@a^0,c
  5209   0030CE  0E9A               	movlw	154
  5210   0030D0  6E19               	movwf	(___flmul@a+1)^0,c
  5211   0030D2  0ECC               	movlw	204
  5212   0030D4  6E1A               	movwf	(___flmul@a+2)^0,c
  5213   0030D6  0E37               	movlw	55
  5214   0030D8  6E1B               	movwf	(___flmul@a+3)^0,c
  5215   0030DA  C07C  F014         	movff	___cosdf@z,___flmul@b
  5216   0030DE  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  5217   0030E2  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  5218   0030E6  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  5219   0030EA  EC6F  F00A         	call	___flmul	;wreg free
  5220   0030EE  C014  F046         	movff	?___flmul,___fladd@b
  5221   0030F2  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5222   0030F6  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5223   0030FA  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5224   0030FE  0E3F               	movlw	63
  5225   003100  6E4A               	movwf	___fladd@a^0,c
  5226   003102  0E04               	movlw	4
  5227   003104  6E4B               	movwf	(___fladd@a+1)^0,c
  5228   003106  0EB6               	movlw	182
  5229   003108  6E4C               	movwf	(___fladd@a+2)^0,c
  5230   00310A  0EBA               	movlw	186
  5231   00310C  6E4D               	movwf	(___fladd@a+3)^0,c
  5232   00310E  EC0E  F008         	call	___fladd	;wreg free
  5233   003112  C046  F068         	movff	?___fladd,___cosdf@r
  5234   003116  C047  F069         	movff	?___fladd+1,___cosdf@r+1
  5235   00311A  C048  F06A         	movff	?___fladd+2,___cosdf@r+2
  5236   00311E  C049  F06B         	movff	?___fladd+3,___cosdf@r+3
  5237   003122  0E00               	movlw	0
  5238   003124  6E4A               	movwf	___fladd@a^0,c
  5239   003126  0E00               	movlw	0
  5240   003128  6E4B               	movwf	(___fladd@a+1)^0,c
  5241   00312A  0E80               	movlw	128
  5242   00312C  6E4C               	movwf	(___fladd@a+2)^0,c
  5243   00312E  0E3F               	movlw	63
  5244   003130  6E4D               	movwf	(___fladd@a+3)^0,c
  5245   003132  0E00               	movlw	0
  5246   003134  6E18               	movwf	___flmul@a^0,c
  5247   003136  0E00               	movlw	0
  5248   003138  6E19               	movwf	(___flmul@a+1)^0,c
  5249   00313A  0E00               	movlw	0
  5250   00313C  6E1A               	movwf	(___flmul@a+2)^0,c
  5251   00313E  0EBF               	movlw	191
  5252   003140  6E1B               	movwf	(___flmul@a+3)^0,c
  5253   003142  C07C  F014         	movff	___cosdf@z,___flmul@b
  5254   003146  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  5255   00314A  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  5256   00314E  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  5257   003152  EC6F  F00A         	call	___flmul	;wreg free
  5258   003156  C014  F046         	movff	?___flmul,___fladd@b
  5259   00315A  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5260   00315E  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5261   003162  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5262   003166  EC0E  F008         	call	___fladd	;wreg free
  5263   00316A  C046  F06C         	movff	?___fladd,___cosdf$4149
  5264   00316E  C047  F06D         	movff	?___fladd+1,___cosdf$4149+1
  5265   003172  C048  F06E         	movff	?___fladd+2,___cosdf$4149+2
  5266   003176  C049  F06F         	movff	?___fladd+3,___cosdf$4149+3
  5267   00317A  C07C  F018         	movff	___cosdf@z,___flmul@a
  5268   00317E  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  5269   003182  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  5270   003186  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  5271   00318A  C078  F014         	movff	___cosdf@w,___flmul@b
  5272   00318E  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  5273   003192  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  5274   003196  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  5275   00319A  EC6F  F00A         	call	___flmul	;wreg free
  5276   00319E  C014  F070         	movff	?___flmul,___cosdf$4150
  5277   0031A2  C015  F071         	movff	?___flmul+1,___cosdf$4150+1
  5278   0031A6  C016  F072         	movff	?___flmul+2,___cosdf$4150+2
  5279   0031AA  C017  F073         	movff	?___flmul+3,___cosdf$4150+3
  5280   0031AE  0E9F               	movlw	159
  5281   0031B0  6E18               	movwf	___flmul@a^0,c
  5282   0031B2  0EAA               	movlw	170
  5283   0031B4  6E19               	movwf	(___flmul@a+1)^0,c
  5284   0031B6  0E2A               	movlw	42
  5285   0031B8  6E1A               	movwf	(___flmul@a+2)^0,c
  5286   0031BA  0E3D               	movlw	61
  5287   0031BC  6E1B               	movwf	(___flmul@a+3)^0,c
  5288   0031BE  C078  F014         	movff	___cosdf@w,___flmul@b
  5289   0031C2  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  5290   0031C6  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  5291   0031CA  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  5292   0031CE  EC6F  F00A         	call	___flmul	;wreg free
  5293   0031D2  C014  F04A         	movff	?___flmul,___fladd@a
  5294   0031D6  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  5295   0031DA  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  5296   0031DE  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  5297   0031E2  C06C  F046         	movff	___cosdf$4149,___fladd@b
  5298   0031E6  C06D  F047         	movff	___cosdf$4149+1,___fladd@b+1
  5299   0031EA  C06E  F048         	movff	___cosdf$4149+2,___fladd@b+2
  5300   0031EE  C06F  F049         	movff	___cosdf$4149+3,___fladd@b+3
  5301   0031F2  EC0E  F008         	call	___fladd	;wreg free
  5302   0031F6  C046  F074         	movff	?___fladd,___cosdf$4151
  5303   0031FA  C047  F075         	movff	?___fladd+1,___cosdf$4151+1
  5304   0031FE  C048  F076         	movff	?___fladd+2,___cosdf$4151+2
  5305   003202  C049  F077         	movff	?___fladd+3,___cosdf$4151+3
  5306   003206  C074  F046         	movff	___cosdf$4151,___fladd@b
  5307   00320A  C075  F047         	movff	___cosdf$4151+1,___fladd@b+1
  5308   00320E  C076  F048         	movff	___cosdf$4151+2,___fladd@b+2
  5309   003212  C077  F049         	movff	___cosdf$4151+3,___fladd@b+3
  5310   003216  C068  F018         	movff	___cosdf@r,___flmul@a
  5311   00321A  C069  F019         	movff	___cosdf@r+1,___flmul@a+1
  5312   00321E  C06A  F01A         	movff	___cosdf@r+2,___flmul@a+2
  5313   003222  C06B  F01B         	movff	___cosdf@r+3,___flmul@a+3
  5314   003226  C070  F014         	movff	___cosdf$4150,___flmul@b
  5315   00322A  C071  F015         	movff	___cosdf$4150+1,___flmul@b+1
  5316   00322E  C072  F016         	movff	___cosdf$4150+2,___flmul@b+2
  5317   003232  C073  F017         	movff	___cosdf$4150+3,___flmul@b+3
  5318   003236  EC6F  F00A         	call	___flmul	;wreg free
  5319   00323A  C014  F04A         	movff	?___flmul,___fladd@a
  5320   00323E  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  5321   003242  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  5322   003246  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  5323   00324A  EC0E  F008         	call	___fladd	;wreg free
  5324   00324E  C046  F064         	movff	?___fladd,?___cosdf
  5325   003252  C047  F065         	movff	?___fladd+1,?___cosdf+1
  5326   003256  C048  F066         	movff	?___fladd+2,?___cosdf+2
  5327   00325A  C049  F067         	movff	?___fladd+3,?___cosdf+3
  5328   00325E  0012               	return		;funcret
  5329   003260                     __end_of___cosdf:
  5330                           	callstack 0
  5331                           
  5332 ;; *************** function _printf *****************
  5333 ;; Defined at:
  5334 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\printf.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  5337 ;;		 -> STR_26(5), STR_14(5), 
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  ret             2    0        int 
  5340 ;;  ap              1   83[COMRAM] PTR void [1]
  5341 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  2  110[BANK0 ] int 
  5344 ;; Registers used:
  5345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5351 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;Total ram usage:        5 bytes
  5356 ;; Hardware stack levels used: 1
  5357 ;; Hardware stack levels required when called: 8
  5358 ;; This function calls:
  5359 ;;		_vfprintf
  5360 ;; This function is called by:
  5361 ;;		_runDAC
  5362 ;;		_runUART
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text19
  5367   00492E                     __ptext19:
  5368                           	callstack 0
  5369   00492E                     _printf:
  5370                           	callstack 21
  5371   00492E  0ED0               	movlw	low (?_printf+2)
  5372   004930  6E54               	movwf	printf@ap^0,c
  5373   004932  0E00               	movlw	0
  5374   004934  0100               	movlb	0	; () banked
  5375   004936  6FC7               	movwf	vfprintf@fp& (0+255),b
  5376   004938  0E00               	movlw	0
  5377   00493A  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  5378   00493C  C0CE  F0C9         	movff	printf@fmt,vfprintf@fmt
  5379   004940  C0CF  F0CA         	movff	printf@fmt+1,vfprintf@fmt+1
  5380   004944  0E54               	movlw	low printf@ap
  5381   004946  6FCB               	movwf	vfprintf@ap& (0+255),b
  5382   004948  ECE9  F022         	call	_vfprintf	;wreg free
  5383   00494C  0012               	return		;funcret
  5384   00494E                     __end_of_printf:
  5385                           	callstack 0
  5386                           
  5387 ;; *************** function _SPI_write *****************
  5388 ;; Defined at:
  5389 ;;		line 93 in file "DAC.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  data            1    wreg     unsigned char 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  data            1    7[COMRAM] unsigned char 
  5394 ;;  LSB             1    6[COMRAM] unsigned char 
  5395 ;;  MSB             1    5[COMRAM] unsigned char 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg, status,2, status,0
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5406 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5408 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5409 ;;Total ram usage:        3 bytes
  5410 ;; Hardware stack levels used: 1
  5411 ;; Hardware stack levels required when called: 1
  5412 ;; This function calls:
  5413 ;;		Nothing
  5414 ;; This function is called by:
  5415 ;;		_runDAC
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text20
  5420   004736                     __ptext20:
  5421                           	callstack 0
  5422   004736                     _SPI_write:
  5423                           	callstack 28
  5424                           
  5425                           ;incstack = 0
  5426                           ;SPI_write@data stored from wreg
  5427   004736  6E08               	movwf	SPI_write@data^0,c
  5428   004738                     
  5429                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  5430   004738  3808               	swapf	SPI_write@data^0,w,c
  5431   00473A  0B0F               	andlw	15
  5432   00473C  0930               	iorlw	48
  5433   00473E  6E06               	movwf	SPI_write@MSB^0,c
  5434                           
  5435                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  5436   004740  3808               	swapf	SPI_write@data^0,w,c
  5437   004742  0BF0               	andlw	240
  5438   004744  6E07               	movwf	SPI_write@LSB^0,c
  5439   004746                     
  5440                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  5441   004746  968A               	bcf	138,3,c	;volatile
  5442   004748                     
  5443                           ;DAC.c: 101:     SSP1BUF = MSB;
  5444   004748  C006  FFC9         	movff	SPI_write@MSB,4041	;volatile
  5445   00474C                     l233:
  5446   00474C  A69E               	btfss	3998,3,c	;volatile
  5447   00474E  EFAB  F023         	goto	u8731
  5448   004752  EFAD  F023         	goto	u8730
  5449   004756                     u8731:
  5450   004756  EFA6  F023         	goto	l233
  5451   00475A                     u8730:
  5452   00475A                     
  5453                           ;DAC.c: 103:     SSP1IF = 0;
  5454   00475A  969E               	bcf	3998,3,c	;volatile
  5455                           
  5456                           ;DAC.c: 105:     SSP1BUF = LSB;
  5457   00475C  C007  FFC9         	movff	SPI_write@LSB,4041	;volatile
  5458   004760                     l236:
  5459   004760  A69E               	btfss	3998,3,c	;volatile
  5460   004762  EFB5  F023         	goto	u8741
  5461   004766  EFB7  F023         	goto	u8740
  5462   00476A                     u8741:
  5463   00476A  EFB0  F023         	goto	l236
  5464   00476E                     u8740:
  5465   00476E                     
  5466                           ;DAC.c: 107:     SSP1IF = 0;
  5467   00476E  969E               	bcf	3998,3,c	;volatile
  5468                           
  5469                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  5470   004770  868A               	bsf	138,3,c	;volatile
  5471   004772  0012               	return		;funcret
  5472   004774                     __end_of_SPI_write:
  5473                           	callstack 0
  5474                           
  5475 ;; *************** function _runADC *****************
  5476 ;; Defined at:
  5477 ;;		line 13 in file "ADC.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;		None
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  text           17    0[BANK1 ] unsigned char [17]
  5482 ;;  voltage2        4   21[BANK1 ] float 
  5483 ;;  voltage1        4   17[BANK1 ] float 
  5484 ;;  pot2            2   27[BANK1 ] unsigned short 
  5485 ;;  pot1            2   25[BANK1 ] unsigned short 
  5486 ;;  keepState       1   29[BANK1 ] unsigned char 
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  1    wreg      void 
  5489 ;; Registers used:
  5490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5499 ;;      Totals:         0       2      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5500 ;;Total ram usage:       32 bytes
  5501 ;; Hardware stack levels used: 1
  5502 ;; Hardware stack levels required when called: 9
  5503 ;; This function calls:
  5504 ;;		_LCD_ShowString
  5505 ;;		___fldiv
  5506 ;;		___flmul
  5507 ;;		___xxtofl
  5508 ;;		_sprintf
  5509 ;; This function is called by:
  5510 ;;		_main
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text21
  5515   002E50                     __ptext21:
  5516                           	callstack 0
  5517   002E50                     _runADC:
  5518                           	callstack 21
  5519   002E50                     
  5520                           ;ADC.c: 16: ANSELAbits.ANSA5 = 1;
  5521   002E50  010F               	movlb	15	; () banked
  5522   002E52  8B38               	bsf	56,5,b	;volatile
  5523                           
  5524                           ;ADC.c: 17: ANSELEbits.ANSE0 = 1;
  5525   002E54  813C               	bsf	60,0,b	;volatile
  5526                           
  5527                           ;ADC.c: 19: ADCON2bits.ADFM = 1;
  5528   002E56  8EC0               	bsf	192,7,c	;volatile
  5529   002E58                     
  5530                           ; BSR set to: 15
  5531                           ;ADC.c: 20: ADCON2bits.ADCS = 0b110;
  5532   002E58  50C0               	movf	192,w,c	;volatile
  5533   002E5A  0BF8               	andlw	-8
  5534   002E5C  0906               	iorlw	6
  5535   002E5E  6EC0               	movwf	192,c	;volatile
  5536                           
  5537                           ;ADC.c: 21: ADCON2bits.ACQT = 0b110;
  5538   002E60  50C0               	movf	192,w,c	;volatile
  5539   002E62  0BC7               	andlw	-57
  5540   002E64  0930               	iorlw	48
  5541   002E66  6EC0               	movwf	192,c	;volatile
  5542   002E68                     
  5543                           ; BSR set to: 15
  5544                           ;ADC.c: 22: ADCON0bits.ADON = 1;
  5545   002E68  80C2               	bsf	194,0,c	;volatile
  5546   002E6A                     
  5547                           ; BSR set to: 15
  5548                           ;ADC.c: 25: uint16_t pot1, pot2;;ADC.c: 26: float voltage1, voltage2;;ADC.c: 27: char te
      +                          xt[17] = "";
  5549   002E6A  EE21  F095         	lfsr	2,runADC@text
  5550   002E6E  0E10               	movlw	16
  5551   002E70                     u9261:
  5552   002E70  6ADE               	clrf	postinc2,c
  5553   002E72  06E8               	decf	wreg,f,c
  5554   002E74  E2FD               	bc	u9261
  5555   002E76                     
  5556                           ; BSR set to: 15
  5557                           ;ADC.c: 28: uint8_t keepState = 1;
  5558   002E76  0E01               	movlw	1
  5559   002E78  0101               	movlb	1	; () banked
  5560   002E7A  6FB2               	movwf	runADC@keepState& (0+255),b
  5561                           
  5562                           ;ADC.c: 30: while(keepState){
  5563   002E7C  EF26  F018         	goto	l429
  5564   002E80                     l7254:
  5565                           
  5566                           ; BSR set to: 1
  5567                           ;ADC.c: 32:     ADCON0bits.CHS = 5;
  5568   002E80  50C2               	movf	194,w,c	;volatile
  5569   002E82  0B83               	andlw	-125
  5570   002E84  0914               	iorlw	20
  5571   002E86  6EC2               	movwf	194,c	;volatile
  5572   002E88                     
  5573                           ; BSR set to: 1
  5574                           ;ADC.c: 33:     GODONE = 1;
  5575   002E88  82C2               	bsf	4034,1,c	;volatile
  5576   002E8A                     l431:
  5577   002E8A  B2C2               	btfsc	4034,1,c	;volatile
  5578   002E8C  EF4A  F017         	goto	u9271
  5579   002E90  EF4C  F017         	goto	u9270
  5580   002E94                     u9271:
  5581   002E94  EF45  F017         	goto	l431
  5582   002E98                     u9270:
  5583   002E98                     
  5584                           ;ADC.c: 35:     pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  5585   002E98  50C3               	movf	195,w,c	;volatile
  5586   002E9A  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  5587   002E9E  0100               	movlb	0	; () banked
  5588   002EA0  6BE8               	clrf	(??_runADC+1)& (0+255),b
  5589   002EA2  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  5590   002EA6  6BE7               	clrf	??_runADC& (0+255),b
  5591   002EA8  11E7               	iorwf	??_runADC& (0+255),w,b
  5592   002EAA  0101               	movlb	1	; () banked
  5593   002EAC  6FAE               	movwf	runADC@pot1& (0+255),b
  5594   002EAE  0100               	movlb	0	; () banked
  5595   002EB0  51E8               	movf	(??_runADC+1)& (0+255),w,b
  5596   002EB2  0101               	movlb	1	; () banked
  5597   002EB4  6FAF               	movwf	(runADC@pot1+1)& (0+255),b
  5598   002EB6                     
  5599                           ; BSR set to: 1
  5600                           ;ADC.c: 36:     voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  5601   002EB6  0E00               	movlw	0
  5602   002EB8  6E31               	movwf	___fldiv@a^0,c
  5603   002EBA  0EC0               	movlw	192
  5604   002EBC  6E32               	movwf	(___fldiv@a+1)^0,c
  5605   002EBE  0E7F               	movlw	127
  5606   002EC0  6E33               	movwf	(___fldiv@a+2)^0,c
  5607   002EC2  0E44               	movlw	68
  5608   002EC4  6E34               	movwf	(___fldiv@a+3)^0,c
  5609   002EC6  C1AE  F006         	movff	runADC@pot1,___xxtofl@val
  5610   002ECA  C1AF  F007         	movff	runADC@pot1+1,___xxtofl@val+1
  5611   002ECE  6A08               	clrf	(___xxtofl@val+2)^0,c
  5612   002ED0  6A09               	clrf	(___xxtofl@val+3)^0,c
  5613   002ED2  0E00               	movlw	0
  5614   002ED4  EC30  F019         	call	___xxtofl
  5615   002ED8  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5616   002EDC  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5617   002EE0  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5618   002EE4  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5619   002EE8  EC70  F010         	call	___fldiv	;wreg free
  5620   002EEC  C02D  F014         	movff	?___fldiv,___flmul@b
  5621   002EF0  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  5622   002EF4  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  5623   002EF8  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  5624   002EFC  0E33               	movlw	51
  5625   002EFE  6E18               	movwf	___flmul@a^0,c
  5626   002F00  0E33               	movlw	51
  5627   002F02  6E19               	movwf	(___flmul@a+1)^0,c
  5628   002F04  0E53               	movlw	83
  5629   002F06  6E1A               	movwf	(___flmul@a+2)^0,c
  5630   002F08  0E40               	movlw	64
  5631   002F0A  6E1B               	movwf	(___flmul@a+3)^0,c
  5632   002F0C  EC6F  F00A         	call	___flmul	;wreg free
  5633   002F10  C014  F1A6         	movff	?___flmul,runADC@voltage1
  5634   002F14  C015  F1A7         	movff	?___flmul+1,runADC@voltage1+1
  5635   002F18  C016  F1A8         	movff	?___flmul+2,runADC@voltage1+2
  5636   002F1C  C017  F1A9         	movff	?___flmul+3,runADC@voltage1+3
  5637   002F20                     
  5638                           ;ADC.c: 39:     ADCON0bits.CHS = 4;
  5639   002F20  50C2               	movf	194,w,c	;volatile
  5640   002F22  0B83               	andlw	-125
  5641   002F24  0910               	iorlw	16
  5642   002F26  6EC2               	movwf	194,c	;volatile
  5643   002F28                     
  5644                           ;ADC.c: 40:     GODONE = 1;
  5645   002F28  82C2               	bsf	4034,1,c	;volatile
  5646   002F2A                     l434:
  5647   002F2A  B2C2               	btfsc	4034,1,c	;volatile
  5648   002F2C  EF9A  F017         	goto	u9281
  5649   002F30  EF9C  F017         	goto	u9280
  5650   002F34                     u9281:
  5651   002F34  EF95  F017         	goto	l434
  5652   002F38                     u9280:
  5653   002F38                     
  5654                           ;ADC.c: 42:     pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  5655   002F38  50C3               	movf	195,w,c	;volatile
  5656   002F3A  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  5657   002F3E  0100               	movlb	0	; () banked
  5658   002F40  6BE8               	clrf	(??_runADC+1)& (0+255),b
  5659   002F42  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  5660   002F46  6BE7               	clrf	??_runADC& (0+255),b
  5661   002F48  11E7               	iorwf	??_runADC& (0+255),w,b
  5662   002F4A  0101               	movlb	1	; () banked
  5663   002F4C  6FB0               	movwf	runADC@pot2& (0+255),b
  5664   002F4E  0100               	movlb	0	; () banked
  5665   002F50  51E8               	movf	(??_runADC+1)& (0+255),w,b
  5666   002F52  0101               	movlb	1	; () banked
  5667   002F54  6FB1               	movwf	(runADC@pot2+1)& (0+255),b
  5668   002F56                     
  5669                           ; BSR set to: 1
  5670                           ;ADC.c: 43:     voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  5671   002F56  0E00               	movlw	0
  5672   002F58  6E31               	movwf	___fldiv@a^0,c
  5673   002F5A  0EC0               	movlw	192
  5674   002F5C  6E32               	movwf	(___fldiv@a+1)^0,c
  5675   002F5E  0E7F               	movlw	127
  5676   002F60  6E33               	movwf	(___fldiv@a+2)^0,c
  5677   002F62  0E44               	movlw	68
  5678   002F64  6E34               	movwf	(___fldiv@a+3)^0,c
  5679   002F66  C1B0  F006         	movff	runADC@pot2,___xxtofl@val
  5680   002F6A  C1B1  F007         	movff	runADC@pot2+1,___xxtofl@val+1
  5681   002F6E  6A08               	clrf	(___xxtofl@val+2)^0,c
  5682   002F70  6A09               	clrf	(___xxtofl@val+3)^0,c
  5683   002F72  0E00               	movlw	0
  5684   002F74  EC30  F019         	call	___xxtofl
  5685   002F78  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5686   002F7C  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5687   002F80  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5688   002F84  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5689   002F88  EC70  F010         	call	___fldiv	;wreg free
  5690   002F8C  C02D  F014         	movff	?___fldiv,___flmul@b
  5691   002F90  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  5692   002F94  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  5693   002F98  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  5694   002F9C  0E33               	movlw	51
  5695   002F9E  6E18               	movwf	___flmul@a^0,c
  5696   002FA0  0E33               	movlw	51
  5697   002FA2  6E19               	movwf	(___flmul@a+1)^0,c
  5698   002FA4  0E53               	movlw	83
  5699   002FA6  6E1A               	movwf	(___flmul@a+2)^0,c
  5700   002FA8  0E40               	movlw	64
  5701   002FAA  6E1B               	movwf	(___flmul@a+3)^0,c
  5702   002FAC  EC6F  F00A         	call	___flmul	;wreg free
  5703   002FB0  C014  F1AA         	movff	?___flmul,runADC@voltage2
  5704   002FB4  C015  F1AB         	movff	?___flmul+1,runADC@voltage2+1
  5705   002FB8  C016  F1AC         	movff	?___flmul+2,runADC@voltage2+2
  5706   002FBC  C017  F1AD         	movff	?___flmul+3,runADC@voltage2+3
  5707   002FC0                     
  5708                           ;ADC.c: 45:     sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  5709   002FC0  0E95               	movlw	low runADC@text
  5710   002FC2  0100               	movlb	0	; () banked
  5711   002FC4  6FCE               	movwf	sprintf@s& (0+255),b
  5712   002FC6  0E01               	movlw	high runADC@text
  5713   002FC8  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  5714   002FCA  0E23               	movlw	low STR_25
  5715   002FCC  6FD0               	movwf	sprintf@fmt& (0+255),b
  5716   002FCE  0EFF               	movlw	high STR_25
  5717   002FD0  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  5718   002FD2  C1A6  F0D2         	movff	runADC@voltage1,?_sprintf+4
  5719   002FD6  C1A7  F0D3         	movff	runADC@voltage1+1,?_sprintf+5
  5720   002FDA  C1A8  F0D4         	movff	runADC@voltage1+2,?_sprintf+6
  5721   002FDE  C1A9  F0D5         	movff	runADC@voltage1+3,?_sprintf+7
  5722   002FE2  C1AA  F0D6         	movff	runADC@voltage2,?_sprintf+8
  5723   002FE6  C1AB  F0D7         	movff	runADC@voltage2+1,?_sprintf+9
  5724   002FEA  C1AC  F0D8         	movff	runADC@voltage2+2,?_sprintf+10
  5725   002FEE  C1AD  F0D9         	movff	runADC@voltage2+3,?_sprintf+11
  5726   002FF2  EC56  F023         	call	_sprintf	;wreg free
  5727   002FF6                     
  5728                           ;ADC.c: 46:     LCD_ShowString(2, text);
  5729   002FF6  0E95               	movlw	low runADC@text
  5730   002FF8  6E07               	movwf	LCD_ShowString@textData^0,c
  5731   002FFA  0E01               	movlw	high runADC@text
  5732   002FFC  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  5733   002FFE  0E02               	movlw	2
  5734   003000  ECEA  F020         	call	_LCD_ShowString
  5735   003004                     
  5736                           ;ADC.c: 48:     if(PORTAbits.RA2){
  5737   003004  A480               	btfss	128,2,c	;volatile
  5738   003006  EF07  F018         	goto	u9291
  5739   00300A  EF09  F018         	goto	u9290
  5740   00300E                     u9291:
  5741   00300E  EF26  F018         	goto	l429
  5742   003012                     u9290:
  5743   003012                     
  5744                           ;ADC.c: 49:         _delay((unsigned long)((50)*(32E6/4000.0)));
  5745   003012  0E03               	movlw	3
  5746   003014  0100               	movlb	0	; () banked
  5747   003016  6FE8               	movwf	(??_runADC+1)& (0+255),b
  5748   003018  0E08               	movlw	8
  5749   00301A  6FE7               	movwf	??_runADC& (0+255),b
  5750   00301C  0E77               	movlw	119
  5751   00301E                     u9607:
  5752   00301E  2EE8               	decfsz	wreg,f,c
  5753   003020  D7FE               	bra	u9607
  5754   003022  2FE7               	decfsz	??_runADC& (0+255),f,b
  5755   003024  D7FC               	bra	u9607
  5756   003026  2FE8               	decfsz	(??_runADC+1)& (0+255),f,b
  5757   003028  D7FA               	bra	u9607
  5758   00302A                     
  5759                           ;ADC.c: 50:         if(PORTAbits.RA2){
  5760   00302A  A480               	btfss	128,2,c	;volatile
  5761   00302C  EF1A  F018         	goto	u9301
  5762   003030  EF1C  F018         	goto	u9300
  5763   003034                     u9301:
  5764   003034  EF26  F018         	goto	l429
  5765   003038                     u9300:
  5766   003038                     l439:
  5767   003038  B480               	btfsc	128,2,c	;volatile
  5768   00303A  EF21  F018         	goto	u9311
  5769   00303E  EF23  F018         	goto	u9310
  5770   003042                     u9311:
  5771   003042  EF1C  F018         	goto	l439
  5772   003046                     u9310:
  5773   003046                     
  5774                           ;ADC.c: 52:             keepState = 0;
  5775   003046  0E00               	movlw	0
  5776   003048  0101               	movlb	1	; () banked
  5777   00304A  6FB2               	movwf	runADC@keepState& (0+255),b
  5778   00304C                     l429:
  5779                           
  5780                           ;ADC.c: 30: while(keepState){
  5781   00304C  0101               	movlb	1	; () banked
  5782   00304E  51B2               	movf	runADC@keepState& (0+255),w,b
  5783   003050  A4D8               	btfss	status,2,c
  5784   003052  EF2D  F018         	goto	u9321
  5785   003056  EF2F  F018         	goto	u9320
  5786   00305A                     u9321:
  5787   00305A  EF40  F017         	goto	l7254
  5788   00305E                     u9320:
  5789   00305E                     
  5790                           ; BSR set to: 1
  5791                           ;ADC.c: 58: ADCON0bits.ADON = 0;
  5792   00305E  90C2               	bcf	194,0,c	;volatile
  5793   003060                     
  5794                           ; BSR set to: 1
  5795   003060  0012               	return		;funcret
  5796   003062                     __end_of_runADC:
  5797                           	callstack 0
  5798                           
  5799 ;; *************** function ___xxtofl *****************
  5800 ;; Defined at:
  5801 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\xxtofl.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;  sign            1    wreg     unsigned char 
  5804 ;;  val             4    5[COMRAM] long 
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;  sign            1   13[COMRAM] unsigned char 
  5807 ;;  arg             4   15[COMRAM] unsigned long 
  5808 ;;  exp             1   14[COMRAM] unsigned char 
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  4    5[COMRAM] unsigned char 
  5811 ;; Registers used:
  5812 ;;		wreg, status,2, status,0
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5819 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;Total ram usage:       14 bytes
  5823 ;; Hardware stack levels used: 1
  5824 ;; Hardware stack levels required when called: 1
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_runDAC
  5829 ;;		_runADC
  5830 ;;		___rem_pio2f
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text22
  5835   003260                     __ptext22:
  5836                           	callstack 0
  5837   003260                     ___xxtofl:
  5838                           	callstack 26
  5839                           
  5840                           ; BSR set to: 1
  5841                           ;incstack = 0
  5842                           ;___xxtofl@sign stored from wreg
  5843   003260  6E0E               	movwf	___xxtofl@sign^0,c
  5844   003262  500E               	movf	___xxtofl@sign^0,w,c
  5845   003264  B4D8               	btfsc	status,2,c
  5846   003266  EF37  F019         	goto	u8351
  5847   00326A  EF39  F019         	goto	u8350
  5848   00326E                     u8351:
  5849   00326E  EF5B  F019         	goto	l1232
  5850   003272                     u8350:
  5851   003272  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  5852   003274  EF40  F019         	goto	u8360
  5853   003278  EF3E  F019         	goto	u8361
  5854   00327C                     u8361:
  5855   00327C  EF5B  F019         	goto	l1232
  5856   003280                     u8360:
  5857   003280  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  5858   003284  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  5859   003288  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  5860   00328C  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  5861   003290  1E0A               	comf	??___xxtofl^0,f,c
  5862   003292  1E0B               	comf	(??___xxtofl+1)^0,f,c
  5863   003294  1E0C               	comf	(??___xxtofl+2)^0,f,c
  5864   003296  1E0D               	comf	(??___xxtofl+3)^0,f,c
  5865   003298  2A0A               	incf	??___xxtofl^0,f,c
  5866   00329A  0E00               	movlw	0
  5867   00329C  220B               	addwfc	(??___xxtofl+1)^0,f,c
  5868   00329E  220C               	addwfc	(??___xxtofl+2)^0,f,c
  5869   0032A0  220D               	addwfc	(??___xxtofl+3)^0,f,c
  5870   0032A2  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  5871   0032A6  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  5872   0032AA  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  5873   0032AE  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  5874   0032B2  EF63  F019         	goto	l6638
  5875   0032B6                     l1232:
  5876   0032B6  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  5877   0032BA  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5878   0032BE  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5879   0032C2  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5880   0032C6                     l6638:
  5881   0032C6  5006               	movf	___xxtofl@val^0,w,c
  5882   0032C8  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  5883   0032CA  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  5884   0032CC  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  5885   0032CE  A4D8               	btfss	status,2,c
  5886   0032D0  EF6C  F019         	goto	u8371
  5887   0032D4  EF6E  F019         	goto	u8370
  5888   0032D8                     u8371:
  5889   0032D8  EF78  F019         	goto	l6644
  5890   0032DC                     u8370:
  5891   0032DC  0E00               	movlw	0
  5892   0032DE  6E06               	movwf	?___xxtofl^0,c
  5893   0032E0  0E00               	movlw	0
  5894   0032E2  6E07               	movwf	(?___xxtofl+1)^0,c
  5895   0032E4  0E00               	movlw	0
  5896   0032E6  6E08               	movwf	(?___xxtofl+2)^0,c
  5897   0032E8  0E00               	movlw	0
  5898   0032EA  6E09               	movwf	(?___xxtofl+3)^0,c
  5899   0032EC  EF09  F01A         	goto	l1235
  5900   0032F0                     l6644:
  5901   0032F0  0E96               	movlw	150
  5902   0032F2  6E0F               	movwf	___xxtofl@exp^0,c
  5903   0032F4  EF82  F019         	goto	l6648
  5904   0032F8                     l6646:
  5905   0032F8  2A0F               	incf	___xxtofl@exp^0,f,c
  5906   0032FA  90D8               	bcf	status,0,c
  5907   0032FC  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5908   0032FE  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5909   003300  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5910   003302  3210               	rrcf	___xxtofl@arg^0,f,c
  5911   003304                     l6648:
  5912   003304  0E00               	movlw	0
  5913   003306  1410               	andwf	___xxtofl@arg^0,w,c
  5914   003308  6E0A               	movwf	??___xxtofl^0,c
  5915   00330A  0E00               	movlw	0
  5916   00330C  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5917   00330E  6E0B               	movwf	(??___xxtofl+1)^0,c
  5918   003310  0E00               	movlw	0
  5919   003312  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5920   003314  6E0C               	movwf	(??___xxtofl+2)^0,c
  5921   003316  0EFE               	movlw	254
  5922   003318  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5923   00331A  6E0D               	movwf	(??___xxtofl+3)^0,c
  5924   00331C  500A               	movf	??___xxtofl^0,w,c
  5925   00331E  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5926   003320  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5927   003322  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5928   003324  A4D8               	btfss	status,2,c
  5929   003326  EF97  F019         	goto	u8381
  5930   00332A  EF99  F019         	goto	u8380
  5931   00332E                     u8381:
  5932   00332E  EF7C  F019         	goto	l6646
  5933   003332                     u8380:
  5934   003332  EFA7  F019         	goto	l1239
  5935   003336                     l6650:
  5936   003336  2A0F               	incf	___xxtofl@exp^0,f,c
  5937   003338  0E01               	movlw	1
  5938   00333A  2610               	addwf	___xxtofl@arg^0,f,c
  5939   00333C  0E00               	movlw	0
  5940   00333E  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  5941   003340  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  5942   003342  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  5943   003344  90D8               	bcf	status,0,c
  5944   003346  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5945   003348  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5946   00334A  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5947   00334C  3210               	rrcf	___xxtofl@arg^0,f,c
  5948   00334E                     l1239:
  5949   00334E  0E00               	movlw	0
  5950   003350  1410               	andwf	___xxtofl@arg^0,w,c
  5951   003352  6E0A               	movwf	??___xxtofl^0,c
  5952   003354  0E00               	movlw	0
  5953   003356  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5954   003358  6E0B               	movwf	(??___xxtofl+1)^0,c
  5955   00335A  0E00               	movlw	0
  5956   00335C  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5957   00335E  6E0C               	movwf	(??___xxtofl+2)^0,c
  5958   003360  0EFF               	movlw	255
  5959   003362  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5960   003364  6E0D               	movwf	(??___xxtofl+3)^0,c
  5961   003366  500A               	movf	??___xxtofl^0,w,c
  5962   003368  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5963   00336A  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5964   00336C  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5965   00336E  A4D8               	btfss	status,2,c
  5966   003370  EFBC  F019         	goto	u8391
  5967   003374  EFBE  F019         	goto	u8390
  5968   003378                     u8391:
  5969   003378  EF9B  F019         	goto	l6650
  5970   00337C                     u8390:
  5971   00337C  EFC6  F019         	goto	l6658
  5972   003380                     l6656:
  5973   003380  060F               	decf	___xxtofl@exp^0,f,c
  5974   003382  90D8               	bcf	status,0,c
  5975   003384  3610               	rlcf	___xxtofl@arg^0,f,c
  5976   003386  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  5977   003388  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  5978   00338A  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  5979   00338C                     l6658:
  5980   00338C  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  5981   00338E  EFCB  F019         	goto	u8401
  5982   003392  EFCD  F019         	goto	u8400
  5983   003396                     u8401:
  5984   003396  EFD5  F019         	goto	l1246
  5985   00339A                     u8400:
  5986   00339A  0E02               	movlw	2
  5987   00339C  600F               	cpfslt	___xxtofl@exp^0,c
  5988   00339E  EFD3  F019         	goto	u8411
  5989   0033A2  EFD5  F019         	goto	u8410
  5990   0033A6                     u8411:
  5991   0033A6  EFC0  F019         	goto	l6656
  5992   0033AA                     u8410:
  5993   0033AA                     l1246:
  5994   0033AA  B00F               	btfsc	___xxtofl@exp^0,0,c
  5995   0033AC  EFDA  F019         	goto	u8421
  5996   0033B0  EFDC  F019         	goto	u8420
  5997   0033B4                     u8421:
  5998   0033B4  EFDD  F019         	goto	l6664
  5999   0033B8                     u8420:
  6000   0033B8  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  6001   0033BA                     l6664:
  6002   0033BA  90D8               	bcf	status,0,c
  6003   0033BC  320F               	rrcf	___xxtofl@exp^0,f,c
  6004   0033BE  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  6005   0033C2  6A0B               	clrf	(??___xxtofl+1)^0,c
  6006   0033C4  6A0C               	clrf	(??___xxtofl+2)^0,c
  6007   0033C6  6A0D               	clrf	(??___xxtofl+3)^0,c
  6008   0033C8  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  6009   0033CC  6A0C               	clrf	(??___xxtofl+2)^0,c
  6010   0033CE  6A0B               	clrf	(??___xxtofl+1)^0,c
  6011   0033D0  6A0A               	clrf	??___xxtofl^0,c
  6012   0033D2  500A               	movf	??___xxtofl^0,w,c
  6013   0033D4  1210               	iorwf	___xxtofl@arg^0,f,c
  6014   0033D6  500B               	movf	(??___xxtofl+1)^0,w,c
  6015   0033D8  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  6016   0033DA  500C               	movf	(??___xxtofl+2)^0,w,c
  6017   0033DC  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  6018   0033DE  500D               	movf	(??___xxtofl+3)^0,w,c
  6019   0033E0  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  6020   0033E2  500E               	movf	___xxtofl@sign^0,w,c
  6021   0033E4  B4D8               	btfsc	status,2,c
  6022   0033E6  EFF7  F019         	goto	u8431
  6023   0033EA  EFF9  F019         	goto	u8430
  6024   0033EE                     u8431:
  6025   0033EE  EF01  F01A         	goto	l6674
  6026   0033F2                     u8430:
  6027   0033F2  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  6028   0033F4  EF00  F01A         	goto	u8440
  6029   0033F8  EFFE  F019         	goto	u8441
  6030   0033FC                     u8441:
  6031   0033FC  EF01  F01A         	goto	l6674
  6032   003400                     u8440:
  6033   003400  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  6034   003402                     l6674:
  6035   003402  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  6036   003406  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  6037   00340A  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  6038   00340E  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  6039   003412                     l1235:
  6040   003412  0012               	return		;funcret
  6041   003414                     __end_of___xxtofl:
  6042                           	callstack 0
  6043                           
  6044 ;; *************** function _moveDisplay *****************
  6045 ;; Defined at:
  6046 ;;		line 11 in file "menu.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  menuI           1    wreg     unsigned char 
  6049 ;;  where           1  135[BANK0 ] unsigned char 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  menuI           1   50[BANK1 ] unsigned char 
  6052 ;;  menuItem2      17   17[BANK1 ] unsigned char [17]
  6053 ;;  menuItem1      17    0[BANK1 ] unsigned char [17]
  6054 ;;  menuItems      16   34[BANK1 ] PTR unsigned char [8]
  6055 ;;		 -> STR_22(1), STR_21(6), STR_20(5), STR_19(4), 
  6056 ;;		 -> STR_18(4), STR_17(4), STR_16(5), STR_15(5), 
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      unsigned char 
  6059 ;; Registers used:
  6060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6066 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6067 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6068 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6069 ;;      Totals:         0       3      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;Total ram usage:       54 bytes
  6071 ;; Hardware stack levels used: 1
  6072 ;; Hardware stack levels required when called: 9
  6073 ;; This function calls:
  6074 ;;		_LCD_Clear
  6075 ;;		_LCD_ShowString
  6076 ;;		_sprintf
  6077 ;; This function is called by:
  6078 ;;		_main
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           	psect	text23
  6083   003B50                     __ptext23:
  6084                           	callstack 0
  6085   003B50                     _moveDisplay:
  6086                           	callstack 21
  6087                           
  6088                           ;incstack = 0
  6089                           ;moveDisplay@menuI stored from wreg
  6090   003B50  0101               	movlb	1	; () banked
  6091   003B52  6FC7               	movwf	moveDisplay@menuI& (0+255),b
  6092   003B54                     
  6093                           ;menu.c: 12:     LCD_Clear();
  6094   003B54  EC0E  F024         	call	_LCD_Clear	;wreg free
  6095   003B58                     
  6096                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  6097   003B58  EE21  F0C8         	lfsr	2,moveDisplay@F6963
  6098   003B5C  EE11  F0B7         	lfsr	1,moveDisplay@menuItems
  6099   003B60  0E0F               	movlw	15
  6100   003B62                     u8971:
  6101   003B62  CFDB FFE3          	movff	plusw2,plusw1
  6102   003B66  06E8               	decf	wreg,f,c
  6103   003B68  E2FC               	bc	u8971
  6104                           
  6105                           ;menu.c: 14:     switch (where){
  6106   003B6A  EFCF  F01D         	goto	l7080
  6107   003B6E                     l7070:
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;menu.c: 18:             if(menuI<6){
  6111   003B6E  0E06               	movlw	6
  6112   003B70  0101               	movlb	1	; () banked
  6113   003B72  61C7               	cpfslt	moveDisplay@menuI& (0+255),b
  6114   003B74  EFBE  F01D         	goto	u8981
  6115   003B78  EFC0  F01D         	goto	u8980
  6116   003B7C                     u8981:
  6117   003B7C  EFDF  F01D         	goto	l7082
  6118   003B80                     u8980:
  6119   003B80                     
  6120                           ; BSR set to: 1
  6121                           ;menu.c: 19:             menuI++;
  6122   003B80  2BC7               	incf	moveDisplay@menuI& (0+255),f,b
  6123   003B82  EFDF  F01D         	goto	l7082
  6124   003B86                     l7074:
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;menu.c: 23:             if(menuI>0){
  6128   003B86  0101               	movlb	1	; () banked
  6129   003B88  51C7               	movf	moveDisplay@menuI& (0+255),w,b
  6130   003B8A  B4D8               	btfsc	status,2,c
  6131   003B8C  EFCA  F01D         	goto	u8991
  6132   003B90  EFCC  F01D         	goto	u8990
  6133   003B94                     u8991:
  6134   003B94  EFDF  F01D         	goto	l7082
  6135   003B98                     u8990:
  6136   003B98                     
  6137                           ; BSR set to: 1
  6138                           ;menu.c: 24:             menuI--;
  6139   003B98  07C7               	decf	moveDisplay@menuI& (0+255),f,b
  6140   003B9A  EFDF  F01D         	goto	l7082
  6141   003B9E                     l7080:
  6142   003B9E  0100               	movlb	0	; () banked
  6143   003BA0  51E7               	movf	moveDisplay@where& (0+255),w,b
  6144                           
  6145                           ; Switch size 1, requested type "simple"
  6146                           ; Number of cases is 3, Range of values is 0 to 2
  6147                           ; switch strategies available:
  6148                           ; Name         Instructions Cycles
  6149                           ; simple_byte           10     6 (average)
  6150                           ;	Chosen strategy is simple_byte
  6151   003BA2  0A00               	xorlw	0	; case 0
  6152   003BA4  B4D8               	btfsc	status,2,c
  6153   003BA6  EFDF  F01D         	goto	l7082
  6154   003BAA  0A01               	xorlw	1	; case 1
  6155   003BAC  B4D8               	btfsc	status,2,c
  6156   003BAE  EFB7  F01D         	goto	l7070
  6157   003BB2  0A03               	xorlw	3	; case 2
  6158   003BB4  B4D8               	btfsc	status,2,c
  6159   003BB6  EFC3  F01D         	goto	l7074
  6160   003BBA  EFDF  F01D         	goto	l7082
  6161   003BBE                     l7082:
  6162                           
  6163                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  6164   003BBE  0E95               	movlw	low moveDisplay@menuItem1
  6165   003BC0  0100               	movlb	0	; () banked
  6166   003BC2  6FCE               	movwf	sprintf@s& (0+255),b
  6167   003BC4  0E01               	movlw	high moveDisplay@menuItem1
  6168   003BC6  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  6169   003BC8  0ECB               	movlw	low STR_23
  6170   003BCA  6FD0               	movwf	sprintf@fmt& (0+255),b
  6171   003BCC  0EFF               	movlw	high STR_23
  6172   003BCE  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  6173   003BD0  0E00               	movlw	0
  6174   003BD2  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  6175   003BD4  0E0F               	movlw	15
  6176   003BD6  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  6177   003BD8  0101               	movlb	1	; () banked
  6178   003BDA  51C7               	movf	moveDisplay@menuI& (0+255),w,b
  6179   003BDC  0D02               	mullw	2
  6180   003BDE  0EB7               	movlw	low moveDisplay@menuItems
  6181   003BE0  24F3               	addwf	243,w,c
  6182   003BE2  6ED9               	movwf	fsr2l,c
  6183   003BE4  0E01               	movlw	high moveDisplay@menuItems
  6184   003BE6  20F4               	addwfc	prodh,w,c
  6185   003BE8  6EDA               	movwf	fsr2h,c
  6186   003BEA  CFDE F0D4          	movff	postinc2,?_sprintf+6
  6187   003BEE  CFDD F0D5          	movff	postdec2,?_sprintf+7
  6188   003BF2  EC56  F023         	call	_sprintf	;wreg free
  6189                           
  6190                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  6191   003BF6  0EA6               	movlw	low moveDisplay@menuItem2
  6192   003BF8  0100               	movlb	0	; () banked
  6193   003BFA  6FCE               	movwf	sprintf@s& (0+255),b
  6194   003BFC  0E01               	movlw	high moveDisplay@menuItem2
  6195   003BFE  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  6196   003C00  0ECC               	movlw	low (STR_23+1)
  6197   003C02  6FD0               	movwf	sprintf@fmt& (0+255),b
  6198   003C04  0EFF               	movlw	high (STR_23+1)
  6199   003C06  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  6200   003C08  0E00               	movlw	0
  6201   003C0A  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  6202   003C0C  0E10               	movlw	16
  6203   003C0E  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  6204   003C10  0101               	movlb	1	; () banked
  6205   003C12  51C7               	movf	moveDisplay@menuI& (0+255),w,b
  6206   003C14  0100               	movlb	0	; () banked
  6207   003C16  6FE8               	movwf	??_moveDisplay& (0+255),b
  6208   003C18  6BE9               	clrf	(??_moveDisplay+1)& (0+255),b
  6209   003C1A  90D8               	bcf	status,0,c
  6210   003C1C  37E8               	rlcf	??_moveDisplay& (0+255),f,b
  6211   003C1E  37E9               	rlcf	(??_moveDisplay+1)& (0+255),f,b
  6212   003C20  0E02               	movlw	2
  6213   003C22  27E8               	addwf	??_moveDisplay& (0+255),f,b
  6214   003C24  0E00               	movlw	0
  6215   003C26  23E9               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  6216   003C28  0EB7               	movlw	low moveDisplay@menuItems
  6217   003C2A  25E8               	addwf	??_moveDisplay& (0+255),w,b
  6218   003C2C  6ED9               	movwf	fsr2l,c
  6219   003C2E  0E01               	movlw	high moveDisplay@menuItems
  6220   003C30  21E9               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  6221   003C32  6EDA               	movwf	fsr2h,c
  6222   003C34  CFDE F0D4          	movff	postinc2,?_sprintf+6
  6223   003C38  CFDD F0D5          	movff	postdec2,?_sprintf+7
  6224   003C3C  EC56  F023         	call	_sprintf	;wreg free
  6225   003C40                     
  6226                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  6227   003C40  0E95               	movlw	low moveDisplay@menuItem1
  6228   003C42  6E07               	movwf	LCD_ShowString@textData^0,c
  6229   003C44  0E01               	movlw	high moveDisplay@menuItem1
  6230   003C46  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  6231   003C48  0E01               	movlw	1
  6232   003C4A  ECEA  F020         	call	_LCD_ShowString
  6233   003C4E                     
  6234                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  6235   003C4E  0EA6               	movlw	low moveDisplay@menuItem2
  6236   003C50  6E07               	movwf	LCD_ShowString@textData^0,c
  6237   003C52  0E01               	movlw	high moveDisplay@menuItem2
  6238   003C54  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  6239   003C56  0E02               	movlw	2
  6240   003C58  ECEA  F020         	call	_LCD_ShowString
  6241   003C5C                     
  6242                           ;menu.c: 35:     return menuI;
  6243   003C5C  0101               	movlb	1	; () banked
  6244   003C5E  51C7               	movf	moveDisplay@menuI& (0+255),w,b
  6245   003C60                     
  6246                           ; BSR set to: 1
  6247   003C60  0012               	return		;funcret
  6248   003C62                     __end_of_moveDisplay:
  6249                           	callstack 0
  6250                           
  6251 ;; *************** function _sprintf *****************
  6252 ;; Defined at:
  6253 ;;		line 9 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_sprintf.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  s               2  110[BANK0 ] PTR unsigned char 
  6256 ;;		 -> runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), 
  6257 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  6258 ;;		 -> STR_25(19), STR_24(5), STR_23(6), 
  6259 ;; Auto vars:     Size  Location     Type
  6260 ;;  f              12  123[BANK0 ] struct _IO_FILE
  6261 ;;  ret             2    0        int 
  6262 ;;  ap              1  122[BANK0 ] PTR void [1]
  6263 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  2  110[BANK0 ] int 
  6266 ;; Registers used:
  6267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6273 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6274 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6276 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6277 ;;Total ram usage:       25 bytes
  6278 ;; Hardware stack levels used: 1
  6279 ;; Hardware stack levels required when called: 8
  6280 ;; This function calls:
  6281 ;;		_vfprintf
  6282 ;; This function is called by:
  6283 ;;		_moveDisplay
  6284 ;;		_runADC
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text24
  6289   0046AC                     __ptext24:
  6290                           	callstack 0
  6291   0046AC                     _sprintf:
  6292                           	callstack 21
  6293   0046AC  0ED2               	movlw	low (?_sprintf+4)
  6294   0046AE  0100               	movlb	0	; () banked
  6295   0046B0  6FDA               	movwf	sprintf@ap& (0+255),b
  6296   0046B2  C0CE  F0DB         	movff	sprintf@s,sprintf@f
  6297   0046B6  C0CF  F0DC         	movff	sprintf@s+1,sprintf@f+1
  6298   0046BA                     
  6299                           ; BSR set to: 0
  6300   0046BA  0E00               	movlw	0
  6301   0046BC  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  6302   0046BE  0E00               	movlw	0
  6303   0046C0  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  6304   0046C2                     
  6305                           ; BSR set to: 0
  6306   0046C2  0E00               	movlw	0
  6307   0046C4  6FE6               	movwf	(sprintf@f+11)& (0+255),b
  6308   0046C6  0E00               	movlw	0
  6309   0046C8  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  6310   0046CA                     
  6311                           ; BSR set to: 0
  6312   0046CA  0EDB               	movlw	low sprintf@f
  6313   0046CC  6FC7               	movwf	vfprintf@fp& (0+255),b
  6314   0046CE  6BC8               	clrf	(vfprintf@fp+1)& (0+255),b
  6315   0046D0  C0D0  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  6316   0046D4  C0D1  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6317   0046D8  0EDA               	movlw	low sprintf@ap
  6318   0046DA  6FCB               	movwf	vfprintf@ap& (0+255),b
  6319   0046DC  ECE9  F022         	call	_vfprintf	;wreg free
  6320   0046E0  0100               	movlb	0	; () banked
  6321   0046E2  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  6322   0046E4  25CE               	addwf	sprintf@s& (0+255),w,b
  6323   0046E6  6ED9               	movwf	fsr2l,c
  6324   0046E8  51DF               	movf	(sprintf@f+4)& (0+255),w,b
  6325   0046EA  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  6326   0046EC  6EDA               	movwf	fsr2h,c
  6327   0046EE  6ADF               	clrf	indf2,c
  6328   0046F0                     
  6329                           ; BSR set to: 0
  6330   0046F0  0012               	return		;funcret
  6331   0046F2                     __end_of_sprintf:
  6332                           	callstack 0
  6333                           
  6334 ;; *************** function _vfprintf *****************
  6335 ;; Defined at:
  6336 ;;		line 1817 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  6339 ;;		 -> NULL(0), sprintf@f(12), 
  6340 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  6341 ;;		 -> STR_26(5), STR_25(19), STR_24(5), STR_23(6), 
  6342 ;;		 -> STR_14(5), 
  6343 ;;  ap              1  107[BANK0 ] PTR PTR void 
  6344 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  6347 ;;		 -> STR_26(5), STR_25(19), STR_24(5), STR_23(6), 
  6348 ;;		 -> STR_14(5), 
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  2  103[BANK0 ] int 
  6351 ;; Registers used:
  6352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6358 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6361 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;Total ram usage:        7 bytes
  6363 ;; Hardware stack levels used: 1
  6364 ;; Hardware stack levels required when called: 7
  6365 ;; This function calls:
  6366 ;;		_vfpfcnvrt
  6367 ;; This function is called by:
  6368 ;;		_sprintf
  6369 ;;		_printf
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text25
  6374   0045D2                     __ptext25:
  6375                           	callstack 0
  6376   0045D2                     _vfprintf:
  6377                           	callstack 21
  6378   0045D2                     
  6379                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE *fp, const 
      +                          char *fmt, va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1818: {;D:\MP
      +                          LABX\Compiler\pic\sources\c99\common\doprnt.c: 1820:     char *cfmt;;D:\MPLABX\Compiler\
      +                          pic\sources\c99\common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6380   0045D2  C0C9  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  6381   0045D6  C0CA  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6382                           
  6383                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  6384   0045DA  EFFA  F022         	goto	l6808
  6385   0045DE                     l6806:
  6386                           
  6387                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt, ap);
  6388   0045DE  C0C7  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  6389   0045E2  C0C8  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6390   0045E6  0ECC               	movlw	low vfprintf@cfmt
  6391   0045E8  0100               	movlb	0	; () banked
  6392   0045EA  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  6393   0045EC  C0CB  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  6394   0045F0  EC84  F00C         	call	_vfpfcnvrt	;wreg free
  6395   0045F4                     l6808:
  6396                           
  6397                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  6398   0045F4  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  6399   0045F8  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6400   0045FC                     	if	0	;tblptru may be non-zero
  6401   0045FC                     	endif
  6402   0045FC                     	if	0	;tblptru may be non-zero
  6403   0045FC                     	endif
  6404   0045FC  0008               	tblrd		*
  6405   0045FE  50F5               	movf	tablat,w,c
  6406   004600  0900               	iorlw	0
  6407   004602  A4D8               	btfss	status,2,c
  6408   004604  EF06  F023         	goto	u8591
  6409   004608  EF08  F023         	goto	u8590
  6410   00460C                     u8591:
  6411   00460C  EFEF  F022         	goto	l6806
  6412   004610                     u8590:
  6413   004610                     
  6414                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6415   004610  0E00               	movlw	0
  6416   004612  0100               	movlb	0	; () banked
  6417   004614  6FC8               	movwf	(?_vfprintf+1)& (0+255),b
  6418   004616  0E00               	movlw	0
  6419   004618  6FC7               	movwf	?_vfprintf& (0+255),b
  6420   00461A                     
  6421                           ; BSR set to: 0
  6422   00461A  0012               	return		;funcret
  6423   00461C                     __end_of_vfprintf:
  6424                           	callstack 0
  6425                           
  6426 ;; *************** function _vfpfcnvrt *****************
  6427 ;; Defined at:
  6428 ;;		line 1177 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  6431 ;;		 -> NULL(0), sprintf@f(12), 
  6432 ;;  fmt             1   91[BANK0 ] PTR PTR unsigned char 
  6433 ;;		 -> vfprintf@cfmt(2), 
  6434 ;;  ap              1   92[BANK0 ] PTR PTR void 
  6435 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;  convarg         4   95[BANK0 ] struct .
  6438 ;;  cp              2  101[BANK0 ] PTR unsigned char 
  6439 ;;		 -> STR_26(5), STR_25(19), STR_24(5), STR_23(6), 
  6440 ;;		 -> STR_14(5), 
  6441 ;;  done            1  100[BANK0 ] _Bool 
  6442 ;;  c               1   99[BANK0 ] unsigned char 
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  1    wreg      void 
  6445 ;; Registers used:
  6446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6452 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6454 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6455 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;Total ram usage:       14 bytes
  6457 ;; Hardware stack levels used: 1
  6458 ;; Hardware stack levels required when called: 6
  6459 ;; This function calls:
  6460 ;;		_dtoa
  6461 ;;		_efgtoa
  6462 ;;		_fputc
  6463 ;;		_read_prec_or_width
  6464 ;;		_stoa
  6465 ;; This function is called by:
  6466 ;;		_vfprintf
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470                           	psect	text26
  6471   001908                     __ptext26:
  6472                           	callstack 0
  6473   001908                     _vfpfcnvrt:
  6474                           	callstack 21
  6475   001908                     
  6476                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1178: {;D:\MPLABX\Co
      +                          mpiler\pic\sources\c99\common\doprnt.c: 1179:     char c, *cp;;D:\MPLABX\Compiler\pic\so
      +                          urces\c99\common\doprnt.c: 1180:     _Bool done;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1188:  } convarg;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1201:
      +                               if ((*fmt)[0] == '%') {
  6477   001908  0100               	movlb	0	; () banked
  6478   00190A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6479   00190C  6ED9               	movwf	fsr2l,c
  6480   00190E  6ADA               	clrf	fsr2h,c
  6481   001910  CFDE FFF6          	movff	postinc2,tblptrl
  6482   001914  CFDD FFF7          	movff	postdec2,tblptrh
  6483   001918                     	if	0	;tblptru may be non-zero
  6484   001918                     	endif
  6485   001918                     	if	0	;tblptru may be non-zero
  6486   001918                     	endif
  6487   001918  0008               	tblrd		*
  6488   00191A  50F5               	movf	tablat,w,c
  6489   00191C  0A25               	xorlw	37
  6490   00191E  A4D8               	btfss	status,2,c
  6491   001920  EF94  F00C         	goto	u8451
  6492   001924  EF96  F00C         	goto	u8450
  6493   001928                     u8451:
  6494   001928  EF7B  F00E         	goto	l6788
  6495   00192C                     u8450:
  6496   00192C                     
  6497                           ; BSR set to: 0
  6498                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  6499   00192C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6500   00192E  6ED9               	movwf	fsr2l,c
  6501   001930  6ADA               	clrf	fsr2h,c
  6502   001932  2ADE               	incf	postinc2,f,c
  6503   001934  0E00               	movlw	0
  6504   001936  22DD               	addwfc	postdec2,f,c
  6505   001938                     
  6506                           ; BSR set to: 0
  6507                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1204:         flags = width = 0;
  6508   001938  0E00               	movlw	0
  6509   00193A  6E56               	movwf	(_width+1)^0,c
  6510   00193C  0E00               	movlw	0
  6511   00193E  6E55               	movwf	_width^0,c
  6512   001940  C055  F059         	movff	_width,_flags
  6513   001944                     
  6514                           ; BSR set to: 0
  6515                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1205:         prec = -1;
  6516   001944  6857               	setf	_prec^0,c
  6517   001946  6858               	setf	(_prec+1)^0,c
  6518   001948                     
  6519                           ; BSR set to: 0
  6520                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1209:         done = 0;
  6521   001948  0E00               	movlw	0
  6522   00194A  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6523                           
  6524                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  6525   00194C  EFC4  F00C         	goto	l6698
  6526   001950                     l6688:
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1214:                     flags |= 
      +                          (1 << 0);
  6530   001950  8059               	bsf	_flags^0,0,c
  6531   001952                     
  6532                           ; BSR set to: 0
  6533                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1215:                     ++*fmt;
  6534   001952  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6535   001954  6ED9               	movwf	fsr2l,c
  6536   001956  6ADA               	clrf	fsr2h,c
  6537   001958  2ADE               	incf	postinc2,f,c
  6538   00195A  0E00               	movlw	0
  6539   00195C  22DD               	addwfc	postdec2,f,c
  6540                           
  6541                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1216:                     break;
  6542   00195E  EFC4  F00C         	goto	l6698
  6543   001962                     l6692:
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1243:                     done = 1;
  6547   001962  0E01               	movlw	1
  6548   001964  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6549                           
  6550                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1244:                     break;
  6551   001966  EFC4  F00C         	goto	l6698
  6552   00196A                     l6696:
  6553                           
  6554                           ; BSR set to: 0
  6555   00196A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6556   00196C  6ED9               	movwf	fsr2l,c
  6557   00196E  6ADA               	clrf	fsr2h,c
  6558   001970  CFDE FFF6          	movff	postinc2,tblptrl
  6559   001974  CFDD FFF7          	movff	postdec2,tblptrh
  6560   001978                     	if	0	;tblptru may be non-zero
  6561   001978                     	endif
  6562   001978                     	if	0	;tblptru may be non-zero
  6563   001978                     	endif
  6564   001978  0008               	tblrd		*
  6565   00197A  50F5               	movf	tablat,w,c
  6566                           
  6567                           ; Switch size 1, requested type "simple"
  6568                           ; Number of cases is 1, Range of values is 45 to 45
  6569                           ; switch strategies available:
  6570                           ; Name         Instructions Cycles
  6571                           ; simple_byte            4     3 (average)
  6572                           ;	Chosen strategy is simple_byte
  6573   00197C  0A2D               	xorlw	45	; case 45
  6574   00197E  B4D8               	btfsc	status,2,c
  6575   001980  EFA8  F00C         	goto	l6688
  6576   001984  EFB1  F00C         	goto	l6692
  6577   001988                     l6698:
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  6581   001988  51C4               	movf	vfpfcnvrt@done& (0+255),w,b
  6582   00198A  B4D8               	btfsc	status,2,c
  6583   00198C  EFCA  F00C         	goto	u8461
  6584   001990  EFCC  F00C         	goto	u8460
  6585   001994                     u8461:
  6586   001994  EFB5  F00C         	goto	l6696
  6587   001998                     u8460:
  6588   001998                     
  6589                           ; BSR set to: 0
  6590                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1256:   width = read_prec_or_width(
      +                          fmt, ap);
  6591   001998  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6592   00199C  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6593   0019A0  EC9B  F021         	call	_read_prec_or_width	;wreg free
  6594   0019A4  C00C  F055         	movff	?_read_prec_or_width,_width
  6595   0019A8  C00D  F056         	movff	?_read_prec_or_width+1,_width+1
  6596   0019AC                     
  6597                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1257:   if (width < 0) {
  6598   0019AC  BE56               	btfsc	(_width+1)^0,7,c
  6599   0019AE  EFDD  F00C         	goto	u8470
  6600   0019B2  EFDB  F00C         	goto	u8471
  6601   0019B6                     u8471:
  6602   0019B6  EFE2  F00C         	goto	l6706
  6603   0019BA                     u8470:
  6604   0019BA                     
  6605                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1258:    flags |= (1 << 0);
  6606   0019BA  8059               	bsf	_flags^0,0,c
  6607                           
  6608                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1259:    width = -width;
  6609   0019BC  6C55               	negf	_width^0,c
  6610   0019BE  1E56               	comf	(_width+1)^0,f,c
  6611   0019C0  B0D8               	btfsc	status,0,c
  6612   0019C2  2A56               	incf	(_width+1)^0,f,c
  6613   0019C4                     l6706:
  6614                           
  6615                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1265:         if ((*fmt)[0] == '.')
      +                           {
  6616   0019C4  0100               	movlb	0	; () banked
  6617   0019C6  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6618   0019C8  6ED9               	movwf	fsr2l,c
  6619   0019CA  6ADA               	clrf	fsr2h,c
  6620   0019CC  CFDE FFF6          	movff	postinc2,tblptrl
  6621   0019D0  CFDD FFF7          	movff	postdec2,tblptrh
  6622   0019D4                     	if	0	;tblptru may be non-zero
  6623   0019D4                     	endif
  6624   0019D4                     	if	0	;tblptru may be non-zero
  6625   0019D4                     	endif
  6626   0019D4  0008               	tblrd		*
  6627   0019D6  50F5               	movf	tablat,w,c
  6628   0019D8  0A2E               	xorlw	46
  6629   0019DA  A4D8               	btfss	status,2,c
  6630   0019DC  EFF2  F00C         	goto	u8481
  6631   0019E0  EFF4  F00C         	goto	u8480
  6632   0019E4                     u8481:
  6633   0019E4  EF04  F00D         	goto	l6712
  6634   0019E8                     u8480:
  6635   0019E8                     
  6636                           ; BSR set to: 0
  6637                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1266:             ++*fmt;
  6638   0019E8  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6639   0019EA  6ED9               	movwf	fsr2l,c
  6640   0019EC  6ADA               	clrf	fsr2h,c
  6641   0019EE  2ADE               	incf	postinc2,f,c
  6642   0019F0  0E00               	movlw	0
  6643   0019F2  22DD               	addwfc	postdec2,f,c
  6644   0019F4                     
  6645                           ; BSR set to: 0
  6646                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1267:    prec = read_prec_or_width(
      +                          fmt, ap);
  6647   0019F4  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6648   0019F8  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6649   0019FC  EC9B  F021         	call	_read_prec_or_width	;wreg free
  6650   001A00  C00C  F057         	movff	?_read_prec_or_width,_prec
  6651   001A04  C00D  F058         	movff	?_read_prec_or_width+1,_prec+1
  6652   001A08                     l6712:
  6653                           
  6654                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt;
  6655   001A08  0100               	movlb	0	; () banked
  6656   001A0A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6657   001A0C  6ED9               	movwf	fsr2l,c
  6658   001A0E  6ADA               	clrf	fsr2h,c
  6659   001A10  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  6660   001A14  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  6661   001A18                     
  6662                           ; BSR set to: 0
  6663                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1361:   if (*cp == 'd' || *cp == 'i
      +                          ') {
  6664   001A18  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6665   001A1C  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6666   001A20                     	if	0	;tblptru may be non-zero
  6667   001A20                     	endif
  6668   001A20                     	if	0	;tblptru may be non-zero
  6669   001A20                     	endif
  6670   001A20  0008               	tblrd		*
  6671   001A22  50F5               	movf	tablat,w,c
  6672   001A24  0A64               	xorlw	100
  6673   001A26  B4D8               	btfsc	status,2,c
  6674   001A28  EF18  F00D         	goto	u8491
  6675   001A2C  EF1A  F00D         	goto	u8490
  6676   001A30                     u8491:
  6677   001A30  EF28  F00D         	goto	l6718
  6678   001A34                     u8490:
  6679   001A34                     
  6680                           ; BSR set to: 0
  6681   001A34  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6682   001A38  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6683   001A3C                     	if	0	;tblptru may be non-zero
  6684   001A3C                     	endif
  6685   001A3C                     	if	0	;tblptru may be non-zero
  6686   001A3C                     	endif
  6687   001A3C  0008               	tblrd		*
  6688   001A3E  50F5               	movf	tablat,w,c
  6689   001A40  0A69               	xorlw	105
  6690   001A42  A4D8               	btfss	status,2,c
  6691   001A44  EF26  F00D         	goto	u8501
  6692   001A48  EF28  F00D         	goto	u8500
  6693   001A4C                     u8501:
  6694   001A4C  EF4D  F00D         	goto	l6726
  6695   001A50                     u8500:
  6696   001A50                     l6718:
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1404:    convarg.sint = (vfpf_sint_
      +                          t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6700   001A50  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  6701   001A52  6ED9               	movwf	fsr2l,c
  6702   001A54  6ADA               	clrf	fsr2h,c
  6703   001A56  0E02               	movlw	2
  6704   001A58  26DF               	addwf	indf2,f,c
  6705   001A5A  5CDF               	subwf	indf2,w,c
  6706   001A5C  6ED9               	movwf	fsr2l,c
  6707   001A5E  6ADA               	clrf	fsr2h,c
  6708   001A60  CFDE F0BF          	movff	postinc2,vfpfcnvrt@convarg
  6709   001A64  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg+1
  6710   001A68                     
  6711                           ; BSR set to: 0
  6712                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1406:    *fmt = cp+1;
  6713   001A68  0E01               	movlw	1
  6714   001A6A  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6715   001A6C  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  6716   001A6E  0E00               	movlw	0
  6717   001A70  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6718   001A72  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6719   001A74  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6720   001A76  6ED9               	movwf	fsr2l,c
  6721   001A78  6ADA               	clrf	fsr2h,c
  6722   001A7A  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  6723   001A7E  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6724   001A82                     
  6725                           ; BSR set to: 0
  6726                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1432:    return (void) dtoa(fp, con
      +                          varg.sint);;	Return value of _vfpfcnvrt is never used
  6727   001A82  C0B9  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  6728   001A86  C0BA  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6729   001A8A  C0BF  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  6730   001A8E  C0C0  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6731   001A92  ECD9  F01A         	call	_dtoa	;wreg free
  6732   001A96  EF8E  F00E         	goto	l1404
  6733   001A9A                     l6726:
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  6737   001A9A  0E00               	movlw	0
  6738   001A9C  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6739   001A9E                     
  6740                           ; BSR set to: 0
  6741                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt)[0] == 's') {
  6742   001A9E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6743   001AA0  6ED9               	movwf	fsr2l,c
  6744   001AA2  6ADA               	clrf	fsr2h,c
  6745   001AA4  CFDE FFF6          	movff	postinc2,tblptrl
  6746   001AA8  CFDD FFF7          	movff	postdec2,tblptrh
  6747   001AAC                     	if	0	;tblptru may be non-zero
  6748   001AAC                     	endif
  6749   001AAC                     	if	0	;tblptru may be non-zero
  6750   001AAC                     	endif
  6751   001AAC  0008               	tblrd		*
  6752   001AAE  50F5               	movf	tablat,w,c
  6753   001AB0  0A73               	xorlw	115
  6754   001AB2  A4D8               	btfss	status,2,c
  6755   001AB4  EF5E  F00D         	goto	u8511
  6756   001AB8  EF60  F00D         	goto	u8510
  6757   001ABC                     u8511:
  6758   001ABC  EF6A  F00D         	goto	l6734
  6759   001AC0                     u8510:
  6760   001AC0                     
  6761                           ; BSR set to: 0
  6762                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  6763   001AC0  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6764   001AC2  6ED9               	movwf	fsr2l,c
  6765   001AC4  6ADA               	clrf	fsr2h,c
  6766   001AC6  2ADE               	incf	postinc2,f,c
  6767   001AC8  0E00               	movlw	0
  6768   001ACA  22DD               	addwfc	postdec2,f,c
  6769   001ACC                     l6732:
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1659:    done = 1;
  6773   001ACC  0E01               	movlw	1
  6774   001ACE  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6775                           
  6776                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1660:   }
  6777   001AD0  EFB6  F00D         	goto	l6744
  6778   001AD4                     l6734:
  6779                           
  6780                           ; BSR set to: 0
  6781   001AD4  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6782   001AD6  6ED9               	movwf	fsr2l,c
  6783   001AD8  6ADA               	clrf	fsr2h,c
  6784   001ADA  CFDE FFF6          	movff	postinc2,tblptrl
  6785   001ADE  CFDD FFF7          	movff	postdec2,tblptrh
  6786   001AE2                     	if	0	;tblptru may be non-zero
  6787   001AE2                     	endif
  6788   001AE2                     	if	0	;tblptru may be non-zero
  6789   001AE2                     	endif
  6790   001AE2  0008               	tblrd		*
  6791   001AE4  50F5               	movf	tablat,w,c
  6792   001AE6  0A6C               	xorlw	108
  6793   001AE8  A4D8               	btfss	status,2,c
  6794   001AEA  EF79  F00D         	goto	u8521
  6795   001AEE  EF7B  F00D         	goto	u8520
  6796   001AF2                     u8521:
  6797   001AF2  EFB6  F00D         	goto	l6744
  6798   001AF6                     u8520:
  6799   001AF6                     
  6800                           ; BSR set to: 0
  6801   001AF6  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6802   001AF8  6ED9               	movwf	fsr2l,c
  6803   001AFA  6ADA               	clrf	fsr2h,c
  6804   001AFC  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  6805   001B00  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  6806   001B04  0E01               	movlw	1
  6807   001B06  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6808   001B08  0E00               	movlw	0
  6809   001B0A  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6810   001B0C  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6811   001B10  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6812   001B14                     	if	0	;tblptru may be non-zero
  6813   001B14                     	endif
  6814   001B14                     	if	0	;tblptru may be non-zero
  6815   001B14                     	endif
  6816   001B14  0008               	tblrd		*
  6817   001B16  50F5               	movf	tablat,w,c
  6818   001B18  0A6C               	xorlw	108
  6819   001B1A  A4D8               	btfss	status,2,c
  6820   001B1C  EF92  F00D         	goto	u8531
  6821   001B20  EF94  F00D         	goto	u8530
  6822   001B24                     u8531:
  6823   001B24  EFB6  F00D         	goto	l6744
  6824   001B28                     u8530:
  6825   001B28                     
  6826                           ; BSR set to: 0
  6827   001B28  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6828   001B2A  6ED9               	movwf	fsr2l,c
  6829   001B2C  6ADA               	clrf	fsr2h,c
  6830   001B2E  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  6831   001B32  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  6832   001B36  0E02               	movlw	2
  6833   001B38  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6834   001B3A  0E00               	movlw	0
  6835   001B3C  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6836   001B3E  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6837   001B42  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6838   001B46                     	if	0	;tblptru may be non-zero
  6839   001B46                     	endif
  6840   001B46                     	if	0	;tblptru may be non-zero
  6841   001B46                     	endif
  6842   001B46  0008               	tblrd		*
  6843   001B48  50F5               	movf	tablat,w,c
  6844   001B4A  0A73               	xorlw	115
  6845   001B4C  A4D8               	btfss	status,2,c
  6846   001B4E  EFAB  F00D         	goto	u8541
  6847   001B52  EFAD  F00D         	goto	u8540
  6848   001B56                     u8541:
  6849   001B56  EFB6  F00D         	goto	l6744
  6850   001B5A                     u8540:
  6851   001B5A                     
  6852                           ; BSR set to: 0
  6853                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 3;
  6854   001B5A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6855   001B5C  6ED9               	movwf	fsr2l,c
  6856   001B5E  6ADA               	clrf	fsr2h,c
  6857   001B60  0E03               	movlw	3
  6858   001B62  26DE               	addwf	postinc2,f,c
  6859   001B64  0E00               	movlw	0
  6860   001B66  22DD               	addwfc	postdec2,f,c
  6861   001B68  EF66  F00D         	goto	l6732
  6862   001B6C                     l6744:
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1665:   if (done) {
  6866   001B6C  51C4               	movf	vfpfcnvrt@done& (0+255),w,b
  6867   001B6E  B4D8               	btfsc	status,2,c
  6868   001B70  EFBC  F00D         	goto	u8551
  6869   001B74  EFBE  F00D         	goto	u8550
  6870   001B78                     u8551:
  6871   001B78  EFD2  F00D         	goto	l6750
  6872   001B7C                     u8550:
  6873   001B7C                     
  6874                           ; BSR set to: 0
  6875                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1682:    return (void) stoa(fp, (*(
      +                          char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpfcnvrt is never use
      +                          d
  6876   001B7C  C0B9  F010         	movff	vfpfcnvrt@fp,stoa@fp
  6877   001B80  C0BA  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6878   001B84  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  6879   001B86  6ED9               	movwf	fsr2l,c
  6880   001B88  6ADA               	clrf	fsr2h,c
  6881   001B8A  0E02               	movlw	2
  6882   001B8C  26DF               	addwf	indf2,f,c
  6883   001B8E  5CDF               	subwf	indf2,w,c
  6884   001B90  6ED9               	movwf	fsr2l,c
  6885   001B92  6ADA               	clrf	fsr2h,c
  6886   001B94  CFDE F012          	movff	postinc2,stoa@s
  6887   001B98  CFDE F013          	movff	postinc2,stoa@s+1
  6888   001B9C  EC0A  F01A         	call	_stoa	;wreg free
  6889   001BA0  EF8E  F00E         	goto	l1404
  6890   001BA4                     l6750:
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt;
  6894   001BA4  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6895   001BA6  6ED9               	movwf	fsr2l,c
  6896   001BA8  6ADA               	clrf	fsr2h,c
  6897   001BAA  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  6898   001BAE  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  6899   001BB2                     
  6900                           ; BSR set to: 0
  6901                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  6902   001BB2  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6903   001BB6  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6904   001BBA                     	if	0	;tblptru may be non-zero
  6905   001BBA                     	endif
  6906   001BBA                     	if	0	;tblptru may be non-zero
  6907   001BBA                     	endif
  6908   001BBA  0008               	tblrd		*
  6909   001BBC  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  6910                           
  6911                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1691:   switch(c) {
  6912   001BC0  EFEE  F00D         	goto	l6762
  6913   001BC4                     l6754:
  6914                           
  6915                           ; BSR set to: 0
  6916                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  6917   001BC4  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  6918   001BC6  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  6919                           
  6920                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1696:     break;
  6921   001BC8  EFFD  F00D         	goto	l6764
  6922   001BCC                     l6756:
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1721:     c = 'l';
  6926   001BCC  0E6C               	movlw	108
  6927   001BCE  6FC3               	movwf	vfpfcnvrt@c& (0+255),b
  6928                           
  6929                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1722:     break;
  6930   001BD0  EFFD  F00D         	goto	l6764
  6931   001BD4                     l6758:
  6932                           
  6933                           ; BSR set to: 0
  6934                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  6935   001BD4  0E00               	movlw	0
  6936   001BD6  6FC3               	movwf	vfpfcnvrt@c& (0+255),b
  6937                           
  6938                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1725:     break;
  6939   001BD8  EFFD  F00D         	goto	l6764
  6940   001BDC                     l6762:
  6941                           
  6942                           ; BSR set to: 0
  6943   001BDC  51C3               	movf	vfpfcnvrt@c& (0+255),w,b
  6944                           
  6945                           ; Switch size 1, requested type "simple"
  6946                           ; Number of cases is 3, Range of values is 76 to 108
  6947                           ; switch strategies available:
  6948                           ; Name         Instructions Cycles
  6949                           ; simple_byte           10     6 (average)
  6950                           ;	Chosen strategy is simple_byte
  6951   001BDE  0A4C               	xorlw	76	; case 76
  6952   001BE0  B4D8               	btfsc	status,2,c
  6953   001BE2  EFE2  F00D         	goto	l6754
  6954   001BE6  0A2A               	xorlw	42	; case 102
  6955   001BE8  B4D8               	btfsc	status,2,c
  6956   001BEA  EFE6  F00D         	goto	l6756
  6957   001BEE  0A0A               	xorlw	10	; case 108
  6958   001BF0  B4D8               	btfsc	status,2,c
  6959   001BF2  EFE2  F00D         	goto	l6754
  6960   001BF6  EFEA  F00D         	goto	l6758
  6961   001BFA                     l6764:
  6962                           
  6963                           ; BSR set to: 0
  6964   001BFA  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6965   001BFE  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6966   001C02                     	if	0	;tblptru may be non-zero
  6967   001C02                     	endif
  6968   001C02                     	if	0	;tblptru may be non-zero
  6969   001C02                     	endif
  6970   001C02  0008               	tblrd		*
  6971   001C04  50F5               	movf	tablat,w,c
  6972   001C06  0A66               	xorlw	102
  6973   001C08  A4D8               	btfss	status,2,c
  6974   001C0A  EF09  F00E         	goto	u8561
  6975   001C0E  EF0B  F00E         	goto	u8560
  6976   001C12                     u8561:
  6977   001C12  EF72  F00E         	goto	l6784
  6978   001C16                     u8560:
  6979   001C16  EF35  F00E         	goto	l6772
  6980   001C1A                     l6766:
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1756:      convarg.f = (long double
      +                          )(*(double *)__va_arg(*(double **)ap, (double)0));
  6984   001C1A  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  6985   001C1C  6ED9               	movwf	fsr2l,c
  6986   001C1E  6ADA               	clrf	fsr2h,c
  6987   001C20  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  6988   001C24  0E04               	movlw	4
  6989   001C26  26DF               	addwf	indf2,f,c
  6990   001C28  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  6991   001C2A  6ED9               	movwf	fsr2l,c
  6992   001C2C  6ADA               	clrf	fsr2h,c
  6993   001C2E  CFDE F0BF          	movff	postinc2,vfpfcnvrt@convarg
  6994   001C32  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg+1
  6995   001C36  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+2
  6996   001C3A  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+3
  6997                           
  6998                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1757:      break;
  6999   001C3E  EF40  F00E         	goto	l6774
  7000   001C42                     l6768:
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1759:      convarg.f = (long double
      +                          )(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7004   001C42  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  7005   001C44  6ED9               	movwf	fsr2l,c
  7006   001C46  6ADA               	clrf	fsr2h,c
  7007   001C48  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  7008   001C4C  0E04               	movlw	4
  7009   001C4E  26DF               	addwf	indf2,f,c
  7010   001C50  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  7011   001C52  6ED9               	movwf	fsr2l,c
  7012   001C54  6ADA               	clrf	fsr2h,c
  7013   001C56  CFDE F0BF          	movff	postinc2,vfpfcnvrt@convarg
  7014   001C5A  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg+1
  7015   001C5E  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+2
  7016   001C62  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+3
  7017                           
  7018                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1760:      break;
  7019   001C66  EF40  F00E         	goto	l6774
  7020   001C6A                     l6772:
  7021                           
  7022                           ; BSR set to: 0
  7023   001C6A  51C3               	movf	vfpfcnvrt@c& (0+255),w,b
  7024                           
  7025                           ; Switch size 1, requested type "simple"
  7026                           ; Number of cases is 2, Range of values is 76 to 108
  7027                           ; switch strategies available:
  7028                           ; Name         Instructions Cycles
  7029                           ; simple_byte            7     4 (average)
  7030                           ;	Chosen strategy is simple_byte
  7031   001C6C  0A4C               	xorlw	76	; case 76
  7032   001C6E  B4D8               	btfsc	status,2,c
  7033   001C70  EF21  F00E         	goto	l6768
  7034   001C74  0A20               	xorlw	32	; case 108
  7035   001C76  B4D8               	btfsc	status,2,c
  7036   001C78  EF0D  F00E         	goto	l6766
  7037   001C7C  EF40  F00E         	goto	l6774
  7038   001C80                     l6774:
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1762:    *fmt = cp+1;
  7042   001C80  0E01               	movlw	1
  7043   001C82  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  7044   001C84  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  7045   001C86  0E00               	movlw	0
  7046   001C88  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  7047   001C8A  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7048   001C8C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7049   001C8E  6ED9               	movwf	fsr2l,c
  7050   001C90  6ADA               	clrf	fsr2h,c
  7051   001C92  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  7052   001C96  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  7053                           
  7054                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1763:    switch (*cp) {
  7055   001C9A  EF66  F00E         	goto	l6782
  7056   001C9E                     l6776:
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1790:      return (void) efgtoa(fp,
      +                           convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  7060   001C9E  C0B9  F084         	movff	vfpfcnvrt@fp,efgtoa@fp
  7061   001CA2  C0BA  F085         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7062   001CA6  C0BF  F086         	movff	vfpfcnvrt@convarg,efgtoa@f
  7063   001CAA  C0C0  F087         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  7064   001CAE  C0C1  F088         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  7065   001CB2  C0C2  F089         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  7066   001CB6  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7067   001CBA  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7068   001CBE                     	if	0	;tblptru may be non-zero
  7069   001CBE                     	endif
  7070   001CBE                     	if	0	;tblptru may be non-zero
  7071   001CBE                     	endif
  7072   001CBE  0008               	tblrd		*
  7073   001CC0  CFF5 F08A          	movff	tablat,efgtoa@c
  7074   001CC4  EC8C  F000         	call	_efgtoa	;wreg free
  7075   001CC8  EF8E  F00E         	goto	l1404
  7076   001CCC                     l6782:
  7077                           
  7078                           ; BSR set to: 0
  7079   001CCC  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7080   001CD0  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7081   001CD4                     	if	0	;tblptru may be non-zero
  7082   001CD4                     	endif
  7083   001CD4                     	if	0	;tblptru may be non-zero
  7084   001CD4                     	endif
  7085   001CD4  0008               	tblrd		*
  7086   001CD6  50F5               	movf	tablat,w,c
  7087                           
  7088                           ; Switch size 1, requested type "simple"
  7089                           ; Number of cases is 1, Range of values is 102 to 102
  7090                           ; switch strategies available:
  7091                           ; Name         Instructions Cycles
  7092                           ; simple_byte            4     3 (average)
  7093                           ;	Chosen strategy is simple_byte
  7094   001CD8  0A66               	xorlw	102	; case 102
  7095   001CDA  B4D8               	btfsc	status,2,c
  7096   001CDC  EF4F  F00E         	goto	l6776
  7097   001CE0  EF72  F00E         	goto	l6784
  7098   001CE4                     l6784:
  7099                           
  7100                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  7101   001CE4  0100               	movlb	0	; () banked
  7102   001CE6  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7103   001CE8  6ED9               	movwf	fsr2l,c
  7104   001CEA  6ADA               	clrf	fsr2h,c
  7105   001CEC  2ADE               	incf	postinc2,f,c
  7106   001CEE  0E00               	movlw	0
  7107   001CF0  22DD               	addwfc	postdec2,f,c
  7108   001CF2  EF8E  F00E         	goto	l1404
  7109   001CF6                     l6788:
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*fmt)[0], fp)
      +                          ;
  7113   001CF6  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7114   001CF8  6ED9               	movwf	fsr2l,c
  7115   001CFA  6ADA               	clrf	fsr2h,c
  7116   001CFC  CFDE FFF6          	movff	postinc2,tblptrl
  7117   001D00  CFDD FFF7          	movff	postdec2,tblptrh
  7118   001D04                     	if	0	;tblptru may be non-zero
  7119   001D04                     	endif
  7120   001D04                     	if	0	;tblptru may be non-zero
  7121   001D04                     	endif
  7122   001D04  0008               	tblrd		*
  7123   001D06  50F5               	movf	tablat,w,c
  7124   001D08  6E07               	movwf	fputc@c^0,c
  7125   001D0A  6A08               	clrf	(fputc@c+1)^0,c
  7126   001D0C  C0B9  F009         	movff	vfpfcnvrt@fp,fputc@fp
  7127   001D10  C0BA  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7128   001D14  EC23  F020         	call	_fputc	;wreg free
  7129   001D18  EF72  F00E         	goto	l6784
  7130   001D1C                     l1404:
  7131   001D1C  0012               	return		;funcret
  7132   001D1E                     __end_of_vfpfcnvrt:
  7133                           	callstack 0
  7134                           
  7135 ;; *************** function _stoa *****************
  7136 ;; Defined at:
  7137 ;;		line 942 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  7140 ;;		 -> NULL(0), sprintf@f(12), 
  7141 ;;  s               2   17[COMRAM] PTR unsigned char 
  7142 ;;		 -> ?_printf(2), ?_sprintf(2), runUART@reversed(31), STR_22(1), 
  7143 ;;		 -> STR_21(6), STR_20(5), STR_19(4), STR_18(4), 
  7144 ;;		 -> STR_17(4), STR_16(5), STR_15(5), 
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;  l               2   27[COMRAM] int 
  7147 ;;  cp              2   25[COMRAM] PTR unsigned char 
  7148 ;;		 -> ?_printf(2), STR_33(7), ?_sprintf(2), runUART@reversed(31), 
  7149 ;;		 -> STR_22(1), STR_21(6), STR_20(5), STR_19(4), 
  7150 ;;		 -> STR_18(4), STR_17(4), STR_16(5), STR_15(5), 
  7151 ;;  w               2   23[COMRAM] int 
  7152 ;;  p               2   21[COMRAM] int 
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  1    wreg      void 
  7155 ;; Registers used:
  7156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7162 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7163 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7165 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7166 ;;Total ram usage:       14 bytes
  7167 ;; Hardware stack levels used: 1
  7168 ;; Hardware stack levels required when called: 3
  7169 ;; This function calls:
  7170 ;;		_fputc
  7171 ;; This function is called by:
  7172 ;;		_vfpfcnvrt
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           	psect	text27
  7177   003414                     __ptext27:
  7178                           	callstack 0
  7179   003414                     _stoa:
  7180                           	callstack 23
  7181   003414                     
  7182                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 942: static void stoa(FILE *fp, cha
      +                          r *s);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 943: {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 944:     char *cp;;D:\MPLABX\Compiler\pic\sources\c99\commo
      +                          n\doprnt.c: 945:     int l, p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 947: 
      +                           int w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 951:     cp = s;
  7183   003414  C012  F01A         	movff	stoa@s,stoa@cp
  7184   003418  C013  F01B         	movff	stoa@s+1,stoa@cp+1
  7185                           
  7186                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 952:     if (!cp) {
  7187   00341C  501A               	movf	stoa@cp^0,w,c
  7188   00341E  101B               	iorwf	(stoa@cp+1)^0,w,c
  7189   003420  A4D8               	btfss	status,2,c
  7190   003422  EF15  F01A         	goto	u8221
  7191   003426  EF17  F01A         	goto	u8220
  7192   00342A                     u8221:
  7193   00342A  EF1B  F01A         	goto	l6584
  7194   00342E                     u8220:
  7195   00342E                     
  7196                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 953:         cp = "(null)";
  7197   00342E  0EBE               	movlw	low STR_33
  7198   003430  6E1A               	movwf	stoa@cp^0,c
  7199   003432  0EFF               	movlw	high STR_33
  7200   003434  6E1B               	movwf	(stoa@cp+1)^0,c
  7201   003436                     l6584:
  7202                           
  7203                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 957:  for (l = 0; cp[l] != '\0'; l+
      +                          +) {
  7204   003436  0E00               	movlw	0
  7205   003438  6E1D               	movwf	(stoa@l+1)^0,c
  7206   00343A  0E00               	movlw	0
  7207   00343C  6E1C               	movwf	stoa@l^0,c
  7208   00343E  EF23  F01A         	goto	l6588
  7209   003442                     l6586:
  7210   003442  4A1C               	infsnz	stoa@l^0,f,c
  7211   003444  2A1D               	incf	(stoa@l+1)^0,f,c
  7212   003446                     l6588:
  7213   003446  501C               	movf	stoa@l^0,w,c
  7214   003448  241A               	addwf	stoa@cp^0,w,c
  7215   00344A  6E14               	movwf	??_stoa^0,c
  7216   00344C  501D               	movf	(stoa@l+1)^0,w,c
  7217   00344E  201B               	addwfc	(stoa@cp+1)^0,w,c
  7218   003450  6E15               	movwf	(??_stoa+1)^0,c
  7219   003452  C014  FFF6         	movff	??_stoa,tblptrl
  7220   003456  C015  FFF7         	movff	??_stoa+1,tblptrh
  7221   00345A  0E00               	movlw	low (__mediumconst shr (0+16))
  7222   00345C  6EF8               	movwf	tblptru,c
  7223   00345E  0E0F               	movlw	(high __ramtop+-1)
  7224   003460  64F7               	cpfsgt	tblptrh,c
  7225   003462  D003               	bra	u8237
  7226   003464  0008               	tblrd		*
  7227   003466  50F5               	movf	tablat,w,c
  7228   003468  D005               	bra	u8230
  7229   00346A                     u8237:
  7230   00346A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7231   00346E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7232   003472  50E7               	movf	indf1,w,c
  7233   003474                     u8230:
  7234   003474  0900               	iorlw	0
  7235   003476  A4D8               	btfss	status,2,c
  7236   003478  EF40  F01A         	goto	u8241
  7237   00347C  EF42  F01A         	goto	u8240
  7238   003480                     u8241:
  7239   003480  EF21  F01A         	goto	l6586
  7240   003484                     u8240:
  7241   003484                     
  7242                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 961:  if (!(prec < 0) && (prec < l)
      +                          ) {
  7243   003484  BE58               	btfsc	(_prec+1)^0,7,c
  7244   003486  EF47  F01A         	goto	u8251
  7245   00348A  EF49  F01A         	goto	u8250
  7246   00348E                     u8251:
  7247   00348E  EF5C  F01A         	goto	l1368
  7248   003492                     u8250:
  7249   003492  501C               	movf	stoa@l^0,w,c
  7250   003494  5C57               	subwf	_prec^0,w,c
  7251   003496  5058               	movf	(_prec+1)^0,w,c
  7252   003498  0A80               	xorlw	128
  7253   00349A  6E14               	movwf	??_stoa^0,c
  7254   00349C  501D               	movf	(stoa@l+1)^0,w,c
  7255   00349E  0A80               	xorlw	128
  7256   0034A0  5814               	subwfb	??_stoa^0,w,c
  7257   0034A2  B0D8               	btfsc	status,0,c
  7258   0034A4  EF56  F01A         	goto	u8261
  7259   0034A8  EF58  F01A         	goto	u8260
  7260   0034AC                     u8261:
  7261   0034AC  EF5C  F01A         	goto	l1368
  7262   0034B0                     u8260:
  7263   0034B0                     
  7264                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 962:   l = prec;
  7265   0034B0  C057  F01C         	movff	_prec,stoa@l
  7266   0034B4  C058  F01D         	movff	_prec+1,stoa@l+1
  7267   0034B8                     l1368:
  7268                           
  7269                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 965:     p = l;
  7270   0034B8  C01C  F016         	movff	stoa@l,stoa@p
  7271   0034BC  C01D  F017         	movff	stoa@l+1,stoa@p+1
  7272                           
  7273                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 969:     w = width;
  7274   0034C0  C055  F018         	movff	_width,stoa@w
  7275   0034C4  C056  F019         	movff	_width+1,stoa@w+1
  7276                           
  7277                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 970:     if (!(flags & (1 << 0))) {
  7278   0034C8  B059               	btfsc	_flags^0,0,c
  7279   0034CA  EF69  F01A         	goto	u8271
  7280   0034CE  EF6B  F01A         	goto	u8270
  7281   0034D2                     u8271:
  7282   0034D2  EFA7  F01A         	goto	l6608
  7283   0034D6                     u8270:
  7284   0034D6  EF79  F01A         	goto	l6602
  7285   0034DA                     l6598:
  7286                           
  7287                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 972:             fputc(' ', fp);
  7288   0034DA  0E00               	movlw	0
  7289   0034DC  6E08               	movwf	(fputc@c+1)^0,c
  7290   0034DE  0E20               	movlw	32
  7291   0034E0  6E07               	movwf	fputc@c^0,c
  7292   0034E2  C010  F009         	movff	stoa@fp,fputc@fp
  7293   0034E6  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7294   0034EA  EC23  F020         	call	_fputc	;wreg free
  7295   0034EE                     
  7296                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 973:             ++l;
  7297   0034EE  4A1C               	infsnz	stoa@l^0,f,c
  7298   0034F0  2A1D               	incf	(stoa@l+1)^0,f,c
  7299   0034F2                     l6602:
  7300                           
  7301                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 971:         while (l < w) {
  7302   0034F2  5018               	movf	stoa@w^0,w,c
  7303   0034F4  5C1C               	subwf	stoa@l^0,w,c
  7304   0034F6  501D               	movf	(stoa@l+1)^0,w,c
  7305   0034F8  0A80               	xorlw	128
  7306   0034FA  6E14               	movwf	??_stoa^0,c
  7307   0034FC  5019               	movf	(stoa@w+1)^0,w,c
  7308   0034FE  0A80               	xorlw	128
  7309   003500  5814               	subwfb	??_stoa^0,w,c
  7310   003502  A0D8               	btfss	status,0,c
  7311   003504  EF86  F01A         	goto	u8281
  7312   003508  EF88  F01A         	goto	u8280
  7313   00350C                     u8281:
  7314   00350C  EF6D  F01A         	goto	l6598
  7315   003510                     u8280:
  7316   003510  EFA7  F01A         	goto	l6608
  7317   003514                     l6604:
  7318                           
  7319                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 980:         fputc(*cp, fp);
  7320   003514  C01A  FFF6         	movff	stoa@cp,tblptrl
  7321   003518  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  7322   00351C  0E00               	movlw	low (__mediumconst shr (0+16))
  7323   00351E  6EF8               	movwf	tblptru,c
  7324   003520  0E0F               	movlw	(high __ramtop+-1)
  7325   003522  64F7               	cpfsgt	tblptrh,c
  7326   003524  D003               	bra	u8297
  7327   003526  0008               	tblrd		*
  7328   003528  50F5               	movf	tablat,w,c
  7329   00352A  D005               	bra	u8290
  7330   00352C                     u8297:
  7331   00352C  CFF6 FFE1          	movff	tblptrl,fsr1l
  7332   003530  CFF7 FFE2          	movff	tblptrh,fsr1h
  7333   003534  50E7               	movf	indf1,w,c
  7334   003536                     u8290:
  7335   003536  6E14               	movwf	??_stoa^0,c
  7336   003538  5014               	movf	??_stoa^0,w,c
  7337   00353A  6E07               	movwf	fputc@c^0,c
  7338   00353C  6A08               	clrf	(fputc@c+1)^0,c
  7339   00353E  C010  F009         	movff	stoa@fp,fputc@fp
  7340   003542  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7341   003546  EC23  F020         	call	_fputc	;wreg free
  7342   00354A                     
  7343                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 981:         ++cp;
  7344   00354A  4A1A               	infsnz	stoa@cp^0,f,c
  7345   00354C  2A1B               	incf	(stoa@cp+1)^0,f,c
  7346   00354E                     l6608:
  7347                           
  7348                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 979:     while (p--) {
  7349   00354E  0616               	decf	stoa@p^0,f,c
  7350   003550  A0D8               	btfss	status,0,c
  7351   003552  0617               	decf	(stoa@p+1)^0,f,c
  7352   003554  2816               	incf	stoa@p^0,w,c
  7353   003556  E106               	bnz	u8301
  7354   003558  2817               	incf	(stoa@p+1)^0,w,c
  7355   00355A  A4D8               	btfss	status,2,c
  7356   00355C  EFB2  F01A         	goto	u8301
  7357   003560  EFB4  F01A         	goto	u8300
  7358   003564                     u8301:
  7359   003564  EF8A  F01A         	goto	l6604
  7360   003568                     u8300:
  7361   003568                     
  7362                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 986:     if (flags & (1 << 0)) {
  7363   003568  A059               	btfss	_flags^0,0,c
  7364   00356A  EFB9  F01A         	goto	u8311
  7365   00356E  EFBB  F01A         	goto	u8310
  7366   003572                     u8311:
  7367   003572  EFD8  F01A         	goto	l1380
  7368   003576                     u8310:
  7369   003576  EFC9  F01A         	goto	l6616
  7370   00357A                     l6612:
  7371                           
  7372                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 988:             fputc(' ', fp);
  7373   00357A  0E00               	movlw	0
  7374   00357C  6E08               	movwf	(fputc@c+1)^0,c
  7375   00357E  0E20               	movlw	32
  7376   003580  6E07               	movwf	fputc@c^0,c
  7377   003582  C010  F009         	movff	stoa@fp,fputc@fp
  7378   003586  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7379   00358A  EC23  F020         	call	_fputc	;wreg free
  7380   00358E                     
  7381                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 989:             ++l;
  7382   00358E  4A1C               	infsnz	stoa@l^0,f,c
  7383   003590  2A1D               	incf	(stoa@l+1)^0,f,c
  7384   003592                     l6616:
  7385                           
  7386                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 987:         while (l < w) {
  7387   003592  5018               	movf	stoa@w^0,w,c
  7388   003594  5C1C               	subwf	stoa@l^0,w,c
  7389   003596  501D               	movf	(stoa@l+1)^0,w,c
  7390   003598  0A80               	xorlw	128
  7391   00359A  6E14               	movwf	??_stoa^0,c
  7392   00359C  5019               	movf	(stoa@w+1)^0,w,c
  7393   00359E  0A80               	xorlw	128
  7394   0035A0  5814               	subwfb	??_stoa^0,w,c
  7395   0035A2  A0D8               	btfss	status,0,c
  7396   0035A4  EFD6  F01A         	goto	u8321
  7397   0035A8  EFD8  F01A         	goto	u8320
  7398   0035AC                     u8321:
  7399   0035AC  EFBD  F01A         	goto	l6612
  7400   0035B0                     u8320:
  7401   0035B0                     l1380:
  7402   0035B0  0012               	return		;funcret
  7403   0035B2                     __end_of_stoa:
  7404                           	callstack 0
  7405                           
  7406 ;; *************** function _read_prec_or_width *****************
  7407 ;; Defined at:
  7408 ;;		line 1158 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;  fmt             1   11[COMRAM] PTR PTR const unsigned c
  7411 ;;		 -> vfprintf@cfmt(2), 
  7412 ;;  ap              1   12[COMRAM] PTR PTR void [1]
  7413 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;  c               1   13[COMRAM] unsigned char 
  7416 ;;  n               2   14[COMRAM] int 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  2   11[COMRAM] int 
  7419 ;; Registers used:
  7420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7429 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;Total ram usage:        5 bytes
  7431 ;; Hardware stack levels used: 1
  7432 ;; Hardware stack levels required when called: 2
  7433 ;; This function calls:
  7434 ;;		___wmul
  7435 ;; This function is called by:
  7436 ;;		_vfpfcnvrt
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           	psect	text28
  7441   004336                     __ptext28:
  7442                           	callstack 0
  7443   004336                     _read_prec_or_width:
  7444                           	callstack 24
  7445   004336                     
  7446                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1159:     int n = 0;
  7447   004336  0E00               	movlw	0
  7448   004338  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  7449   00433A  0E00               	movlw	0
  7450   00433C  6E0F               	movwf	read_prec_or_width@n^0,c
  7451   00433E                     
  7452                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1160:     if ((*fmt)[0] == '*') {
  7453   00433E  500C               	movf	read_prec_or_width@fmt^0,w,c
  7454   004340  6ED9               	movwf	fsr2l,c
  7455   004342  6ADA               	clrf	fsr2h,c
  7456   004344  CFDE FFF6          	movff	postinc2,tblptrl
  7457   004348  CFDD FFF7          	movff	postdec2,tblptrh
  7458   00434C                     	if	0	;tblptru may be non-zero
  7459   00434C                     	endif
  7460   00434C                     	if	0	;tblptru may be non-zero
  7461   00434C                     	endif
  7462   00434C  0008               	tblrd		*
  7463   00434E  50F5               	movf	tablat,w,c
  7464   004350  0A2A               	xorlw	42
  7465   004352  A4D8               	btfss	status,2,c
  7466   004354  EFAE  F021         	goto	u8331
  7467   004358  EFB0  F021         	goto	u8330
  7468   00435C                     u8331:
  7469   00435C  EFDA  F021         	goto	l6630
  7470   004360                     u8330:
  7471   004360                     
  7472                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1161:         ++*fmt;
  7473   004360  500C               	movf	read_prec_or_width@fmt^0,w,c
  7474   004362  6ED9               	movwf	fsr2l,c
  7475   004364  6ADA               	clrf	fsr2h,c
  7476   004366  2ADE               	incf	postinc2,f,c
  7477   004368  0E00               	movlw	0
  7478   00436A  22DD               	addwfc	postdec2,f,c
  7479   00436C                     
  7480                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1162:         n = (*(int *)__va_arg
      +                          (*(int **)*ap, (int)0));
  7481   00436C  500D               	movf	read_prec_or_width@ap^0,w,c
  7482   00436E  6ED9               	movwf	fsr2l,c
  7483   004370  6ADA               	clrf	fsr2h,c
  7484   004372  0E02               	movlw	2
  7485   004374  26DF               	addwf	indf2,f,c
  7486   004376  5CDF               	subwf	indf2,w,c
  7487   004378  6ED9               	movwf	fsr2l,c
  7488   00437A  6ADA               	clrf	fsr2h,c
  7489   00437C  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  7490   004380  CFDE F010          	movff	postinc2,read_prec_or_width@n+1
  7491                           
  7492                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1163:     } else {
  7493   004384  EFED  F021         	goto	l1384
  7494   004388                     l6626:
  7495                           
  7496                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1166:             n = n * 10 + c;
  7497   004388  C00F  F006         	movff	read_prec_or_width@n,___wmul@multiplier
  7498   00438C  C010  F007         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  7499   004390  0E00               	movlw	0
  7500   004392  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  7501   004394  0E0A               	movlw	10
  7502   004396  6E08               	movwf	___wmul@multiplicand^0,c
  7503   004398  EC71  F024         	call	___wmul	;wreg free
  7504   00439C  500E               	movf	read_prec_or_width@c^0,w,c
  7505   00439E  2406               	addwf	?___wmul^0,w,c
  7506   0043A0  6E0F               	movwf	read_prec_or_width@n^0,c
  7507   0043A2  0E00               	movlw	0
  7508   0043A4  2007               	addwfc	(?___wmul+1)^0,w,c
  7509   0043A6  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  7510   0043A8                     
  7511                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1167:             ++*fmt;
  7512   0043A8  500C               	movf	read_prec_or_width@fmt^0,w,c
  7513   0043AA  6ED9               	movwf	fsr2l,c
  7514   0043AC  6ADA               	clrf	fsr2h,c
  7515   0043AE  2ADE               	incf	postinc2,f,c
  7516   0043B0  0E00               	movlw	0
  7517   0043B2  22DD               	addwfc	postdec2,f,c
  7518   0043B4                     l6630:
  7519                           
  7520                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1165:         while ((c = ((unsigne
      +                          d)(*fmt)[0]) - '0') < 10) {
  7521   0043B4  500C               	movf	read_prec_or_width@fmt^0,w,c
  7522   0043B6  6ED9               	movwf	fsr2l,c
  7523   0043B8  6ADA               	clrf	fsr2h,c
  7524   0043BA  CFDE FFF6          	movff	postinc2,tblptrl
  7525   0043BE  CFDD FFF7          	movff	postdec2,tblptrh
  7526   0043C2                     	if	0	;tblptru may be non-zero
  7527   0043C2                     	endif
  7528   0043C2                     	if	0	;tblptru may be non-zero
  7529   0043C2                     	endif
  7530   0043C2  0008               	tblrd		*
  7531   0043C4  50F5               	movf	tablat,w,c
  7532   0043C6  0FD0               	addlw	208
  7533   0043C8  6E0E               	movwf	read_prec_or_width@c^0,c
  7534   0043CA  0E09               	movlw	9
  7535   0043CC  640E               	cpfsgt	read_prec_or_width@c^0,c
  7536   0043CE  EFEB  F021         	goto	u8341
  7537   0043D2  EFED  F021         	goto	u8340
  7538   0043D6                     u8341:
  7539   0043D6  EFC4  F021         	goto	l6626
  7540   0043DA                     u8340:
  7541   0043DA                     l1384:
  7542                           
  7543                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1170:     return n;
  7544   0043DA  C00F  F00C         	movff	read_prec_or_width@n,?_read_prec_or_width
  7545   0043DE  C010  F00D         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  7546   0043E2  0012               	return		;funcret
  7547   0043E4                     __end_of_read_prec_or_width:
  7548                           	callstack 0
  7549                           
  7550 ;; *************** function ___wmul *****************
  7551 ;; Defined at:
  7552 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul16.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  multiplier      2    5[COMRAM] unsigned int 
  7555 ;;  multiplicand    2    7[COMRAM] unsigned int 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;  product         2    9[COMRAM] unsigned int 
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  2    5[COMRAM] unsigned int 
  7560 ;; Registers used:
  7561 ;;		wreg, status,2, status,0, prodl, prodh
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7568 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;Total ram usage:        6 bytes
  7572 ;; Hardware stack levels used: 1
  7573 ;; Hardware stack levels required when called: 1
  7574 ;; This function calls:
  7575 ;;		Nothing
  7576 ;; This function is called by:
  7577 ;;		_read_prec_or_width
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           	psect	text29
  7582   0048E2                     __ptext29:
  7583                           	callstack 0
  7584   0048E2                     ___wmul:
  7585                           	callstack 24
  7586   0048E2  5006               	movf	___wmul@multiplier^0,w,c
  7587   0048E4  0208               	mulwf	___wmul@multiplicand^0,c
  7588   0048E6  CFF3 F00A          	movff	prodl,___wmul@product
  7589   0048EA  CFF4 F00B          	movff	prodh,___wmul@product+1
  7590   0048EE  5006               	movf	___wmul@multiplier^0,w,c
  7591   0048F0  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  7592   0048F2  50F3               	movf	243,w,c
  7593   0048F4  260B               	addwf	(___wmul@product+1)^0,f,c
  7594   0048F6  5007               	movf	(___wmul@multiplier+1)^0,w,c
  7595   0048F8  0208               	mulwf	___wmul@multiplicand^0,c
  7596   0048FA  50F3               	movf	243,w,c
  7597   0048FC  260B               	addwf	(___wmul@product+1)^0,f,c
  7598   0048FE  C00A  F006         	movff	___wmul@product,?___wmul
  7599   004902  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  7600   004906  0012               	return		;funcret
  7601   004908                     __end_of___wmul:
  7602                           	callstack 0
  7603                           
  7604 ;; *************** function _efgtoa *****************
  7605 ;; Defined at:
  7606 ;;		line 587 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  7609 ;;		 -> NULL(0), sprintf@f(12), 
  7610 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  7611 ;;  c               1   42[BANK0 ] unsigned char 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  u               4   85[BANK0 ] struct flui
  7614 ;;  g               4   79[BANK0 ] struct flui
  7615 ;;  l               4   74[BANK0 ] struct flui
  7616 ;;  h               4   70[BANK0 ] struct flui
  7617 ;;  ou              4   64[BANK0 ] struct flui
  7618 ;;  n               2   83[BANK0 ] int 
  7619 ;;  i               2   68[BANK0 ] int 
  7620 ;;  w               2   62[BANK0 ] int 
  7621 ;;  e               2   60[BANK0 ] int 
  7622 ;;  m               2   58[BANK0 ] int 
  7623 ;;  d               2   56[BANK0 ] int 
  7624 ;;  t               2   49[BANK0 ] int 
  7625 ;;  p               2   47[BANK0 ] int 
  7626 ;;  ne              2   45[BANK0 ] int 
  7627 ;;  sign            1   78[BANK0 ] unsigned char 
  7628 ;;  nmode           1   55[BANK0 ] unsigned char 
  7629 ;;  mode            1   54[BANK0 ] unsigned char 
  7630 ;;  pp              1   53[BANK0 ] unsigned char 
  7631 ;;  esign           1    0        unsigned char 
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      void 
  7634 ;; Registers used:
  7635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7641 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7642 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7643 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7644 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;Total ram usage:       53 bytes
  7646 ;; Hardware stack levels used: 1
  7647 ;; Hardware stack levels required when called: 5
  7648 ;; This function calls:
  7649 ;;		___fladd
  7650 ;;		___fldiv
  7651 ;;		___fleq
  7652 ;;		___flge
  7653 ;;		___flmul
  7654 ;;		___flneg
  7655 ;;		___flsub
  7656 ;;		___fltol
  7657 ;;		___fpclassifyf
  7658 ;;		_floorf
  7659 ;;		_labs
  7660 ;;		_memcpy
  7661 ;;		_pad
  7662 ;;		_strcpy
  7663 ;; This function is called by:
  7664 ;;		_vfpfcnvrt
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           	psect	text30
  7669   000118                     __ptext30:
  7670                           	callstack 0
  7671   000118                     _efgtoa:
  7672                           	callstack 21
  7673   000118                     
  7674                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 587: static void efgtoa(FILE *fp, l
      +                          ong double f, char c);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 588: {;D:\MPLA
      +                          BX\Compiler\pic\sources\c99\common\doprnt.c: 589:     char mode, nmode, pp, sign, esign;
      +                          ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, 
      +                          t, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 591:     long double h, l;;D:\
      +                          MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 592:  union flui g, u, ou;
  7675   000118  0E00               	movlw	0
  7676   00011A  0100               	movlb	0	; () banked
  7677   00011C  6FAE               	movwf	efgtoa@sign& (0+255),b
  7678   00011E                     
  7679                           ; BSR set to: 0
  7680                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  7681   00011E  C086  F0AF         	movff	efgtoa@f,efgtoa@g
  7682   000122  C087  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  7683   000126  C088  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  7684   00012A  C089  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  7685   00012E                     
  7686                           ; BSR set to: 0
  7687                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 597:     if (g.f < 0.0) {
  7688   00012E  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7689   000130  EF9E  F000         	goto	u7900
  7690   000134  EF9C  F000         	goto	u7901
  7691   000138                     u7901:
  7692   000138  EFB2  F000         	goto	l6368
  7693   00013C                     u7900:
  7694   00013C                     
  7695                           ; BSR set to: 0
  7696                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 598:         sign = 1;
  7697   00013C  0E01               	movlw	1
  7698   00013E  6FAE               	movwf	efgtoa@sign& (0+255),b
  7699   000140                     
  7700                           ; BSR set to: 0
  7701                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 599:         g.f = -g.f;
  7702   000140  C0AF  F080         	movff	efgtoa@g,___flneg@f1
  7703   000144  C0B0  F081         	movff	efgtoa@g+1,___flneg@f1+1
  7704   000148  C0B1  F082         	movff	efgtoa@g+2,___flneg@f1+2
  7705   00014C  C0B2  F083         	movff	efgtoa@g+3,___flneg@f1+3
  7706   000150  ECBA  F023         	call	___flneg	;wreg free
  7707   000154  C080  F0AF         	movff	?___flneg,efgtoa@g
  7708   000158  C081  F0B0         	movff	?___flneg+1,efgtoa@g+1
  7709   00015C  C082  F0B1         	movff	?___flneg+2,efgtoa@g+2
  7710   000160  C083  F0B2         	movff	?___flneg+3,efgtoa@g+3
  7711   000164                     l6368:
  7712                           
  7713                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  7714   000164  0E00               	movlw	0
  7715   000166  0100               	movlb	0	; () banked
  7716   000168  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  7717   00016A  0E00               	movlw	0
  7718   00016C  6FB3               	movwf	efgtoa@n& (0+255),b
  7719   00016E                     
  7720                           ; BSR set to: 0
  7721                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 604:     w = width;
  7722   00016E  C055  F09E         	movff	_width,efgtoa@w
  7723   000172  C056  F09F         	movff	_width+1,efgtoa@w+1
  7724   000176                     
  7725                           ; BSR set to: 0
  7726                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 605:     if (sign
  7727   000176  51AE               	movf	efgtoa@sign& (0+255),w,b
  7728   000178  B4D8               	btfsc	status,2,c
  7729   00017A  EFC1  F000         	goto	u7911
  7730   00017E  EFC3  F000         	goto	u7910
  7731   000182                     u7911:
  7732   000182  EFD7  F000         	goto	l6382
  7733   000186                     u7910:
  7734   000186                     
  7735                           ; BSR set to: 0
  7736                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 609:    ) {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 610:   sign = sign ? '-' : '+';
  7737   000186  51AE               	movf	efgtoa@sign& (0+255),w,b
  7738   000188  A4D8               	btfss	status,2,c
  7739   00018A  EFC9  F000         	goto	u7921
  7740   00018E  EFCB  F000         	goto	u7920
  7741   000192                     u7921:
  7742   000192  EFD1  F000         	goto	l6378
  7743   000196                     u7920:
  7744   000196                     
  7745                           ; BSR set to: 0
  7746   000196  0E00               	movlw	0
  7747   000198  6F94               	movwf	(_efgtoa$3705+1)& (0+255),b
  7748   00019A  0E2B               	movlw	43
  7749   00019C  6F93               	movwf	_efgtoa$3705& (0+255),b
  7750   00019E  EFD5  F000         	goto	l6380
  7751   0001A2                     l6378:
  7752                           
  7753                           ; BSR set to: 0
  7754   0001A2  0E00               	movlw	0
  7755   0001A4  6F94               	movwf	(_efgtoa$3705+1)& (0+255),b
  7756   0001A6  0E2D               	movlw	45
  7757   0001A8  6F93               	movwf	_efgtoa$3705& (0+255),b
  7758   0001AA                     l6380:
  7759                           
  7760                           ; BSR set to: 0
  7761   0001AA  C093  F0AE         	movff	_efgtoa$3705,efgtoa@sign
  7762   0001AE                     l6382:
  7763                           
  7764                           ; BSR set to: 0
  7765                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 619:     if (( __fpclassifyf(g.f) =
      +                          = 1 )) {
  7766   0001AE  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  7767   0001B2  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7768   0001B6  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7769   0001BA  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7770   0001BE  EC37  F01F         	call	___fpclassifyf	;wreg free
  7771   0001C2  0406               	decf	?___fpclassifyf^0,w,c
  7772   0001C4  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  7773   0001C6  A4D8               	btfss	status,2,c
  7774   0001C8  EFE8  F000         	goto	u7931
  7775   0001CC  EFEA  F000         	goto	u7930
  7776   0001D0                     u7931:
  7777   0001D0  EF1D  F001         	goto	l6400
  7778   0001D4                     u7930:
  7779   0001D4                     
  7780                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 620:   if (sign) {
  7781   0001D4  0100               	movlb	0	; () banked
  7782   0001D6  51AE               	movf	efgtoa@sign& (0+255),w,b
  7783   0001D8  B4D8               	btfsc	status,2,c
  7784   0001DA  EFF1  F000         	goto	u7941
  7785   0001DE  EFF3  F000         	goto	u7940
  7786   0001E2                     u7941:
  7787   0001E2  EFFC  F000         	goto	l6392
  7788   0001E6                     u7940:
  7789   0001E6                     
  7790                           ; BSR set to: 0
  7791                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] = sign;
  7792   0001E6  C0AE  F125         	movff	efgtoa@sign,_dbuf
  7793   0001EA                     
  7794                           ; BSR set to: 0
  7795                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 622:    w--;
  7796   0001EA  079E               	decf	efgtoa@w& (0+255),f,b
  7797   0001EC  A0D8               	btfss	status,0,c
  7798   0001EE  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  7799   0001F0                     
  7800                           ; BSR set to: 0
  7801                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  7802   0001F0  0E00               	movlw	0
  7803   0001F2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  7804   0001F4  0E01               	movlw	1
  7805   0001F6  6FB3               	movwf	efgtoa@n& (0+255),b
  7806   0001F8                     l6392:
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 631:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 632:             strcpy(&dbuf[n], "inf");
  7810   0001F8  0E25               	movlw	low _dbuf
  7811   0001FA  25B3               	addwf	efgtoa@n& (0+255),w,b
  7812   0001FC  6E06               	movwf	strcpy@dest^0,c
  7813   0001FE  0E01               	movlw	high _dbuf
  7814   000200  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7815   000202  6E07               	movwf	(strcpy@dest+1)^0,c
  7816   000204  0EEA               	movlw	low STR_27
  7817   000206  6E08               	movwf	strcpy@src^0,c
  7818   000208  0EFF               	movlw	high STR_27
  7819   00020A  6E09               	movwf	(strcpy@src+1)^0,c
  7820   00020C  ECD7  F023         	call	_strcpy	;wreg free
  7821   000210                     l6394:
  7822                           
  7823                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 633:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  7824   000210  0100               	movlb	0	; () banked
  7825   000212  0EFD               	movlw	253
  7826   000214  279E               	addwf	efgtoa@w& (0+255),f,b
  7827   000216  0EFF               	movlw	255
  7828   000218  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7829   00021A                     
  7830                           ; BSR set to: 0
  7831                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 635:         return (void) pad(fp, 
      +                          &dbuf[0], w);
  7832   00021A  C084  F017         	movff	efgtoa@fp,pad@fp
  7833   00021E  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  7834   000222  0E25               	movlw	low _dbuf
  7835   000224  6E19               	movwf	pad@buf^0,c
  7836   000226  0E01               	movlw	high _dbuf
  7837   000228  6E1A               	movwf	(pad@buf+1)^0,c
  7838   00022A  C09E  F01B         	movff	efgtoa@w,pad@p
  7839   00022E  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  7840   000232  EC47  F022         	call	_pad	;wreg free
  7841   000236  EF88  F005         	goto	l1319
  7842   00023A                     l6400:
  7843                           
  7844                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 637:     if (( __fpclassifyf(g.f) =
      +                          = 0 )) {
  7845   00023A  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  7846   00023E  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7847   000242  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7848   000246  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7849   00024A  EC37  F01F         	call	___fpclassifyf	;wreg free
  7850   00024E  5006               	movf	?___fpclassifyf^0,w,c
  7851   000250  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  7852   000252  A4D8               	btfss	status,2,c
  7853   000254  EF2E  F001         	goto	u7951
  7854   000258  EF30  F001         	goto	u7950
  7855   00025C                     u7951:
  7856   00025C  EF50  F001         	goto	l6418
  7857   000260                     u7950:
  7858   000260                     
  7859                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 638:   if (sign) {
  7860   000260  0100               	movlb	0	; () banked
  7861   000262  51AE               	movf	efgtoa@sign& (0+255),w,b
  7862   000264  B4D8               	btfsc	status,2,c
  7863   000266  EF37  F001         	goto	u7961
  7864   00026A  EF39  F001         	goto	u7960
  7865   00026E                     u7961:
  7866   00026E  EF42  F001         	goto	l6410
  7867   000272                     u7960:
  7868   000272                     
  7869                           ; BSR set to: 0
  7870                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] = sign;
  7871   000272  C0AE  F125         	movff	efgtoa@sign,_dbuf
  7872   000276                     
  7873                           ; BSR set to: 0
  7874                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 640:    w--;
  7875   000276  079E               	decf	efgtoa@w& (0+255),f,b
  7876   000278  A0D8               	btfss	status,0,c
  7877   00027A  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  7878   00027C                     
  7879                           ; BSR set to: 0
  7880                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  7881   00027C  0E00               	movlw	0
  7882   00027E  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  7883   000280  0E01               	movlw	1
  7884   000282  6FB3               	movwf	efgtoa@n& (0+255),b
  7885   000284                     l6410:
  7886                           
  7887                           ; BSR set to: 0
  7888                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 649:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 650:             strcpy(&dbuf[n], "nan");
  7889   000284  0E25               	movlw	low _dbuf
  7890   000286  25B3               	addwf	efgtoa@n& (0+255),w,b
  7891   000288  6E06               	movwf	strcpy@dest^0,c
  7892   00028A  0E01               	movlw	high _dbuf
  7893   00028C  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7894   00028E  6E07               	movwf	(strcpy@dest+1)^0,c
  7895   000290  0EEE               	movlw	low STR_30
  7896   000292  6E08               	movwf	strcpy@src^0,c
  7897   000294  0EFF               	movlw	high STR_30
  7898   000296  6E09               	movwf	(strcpy@src+1)^0,c
  7899   000298  ECD7  F023         	call	_strcpy	;wreg free
  7900   00029C  EF08  F001         	goto	l6394
  7901   0002A0                     l6418:
  7902                           
  7903                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.0;
  7904   0002A0  0E00               	movlw	0
  7905   0002A2  0100               	movlb	0	; () banked
  7906   0002A4  6FB5               	movwf	efgtoa@u& (0+255),b
  7907   0002A6  0E00               	movlw	0
  7908   0002A8  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  7909   0002AA  0E80               	movlw	128
  7910   0002AC  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  7911   0002AE  0E3F               	movlw	63
  7912   0002B0  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  7913                           
  7914                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  7915   0002B2  0E00               	movlw	0
  7916   0002B4  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  7917   0002B6  0E00               	movlw	0
  7918   0002B8  6F9C               	movwf	efgtoa@e& (0+255),b
  7919   0002BA                     
  7920                           ; BSR set to: 0
  7921                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f == 0.0)) {
  7922   0002BA  C0AF  F006         	movff	efgtoa@g,___fleq@ff1
  7923   0002BE  C0B0  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  7924   0002C2  C0B1  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  7925   0002C6  C0B2  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  7926   0002CA  0E00               	movlw	0
  7927   0002CC  6E0A               	movwf	___fleq@ff2^0,c
  7928   0002CE  0E00               	movlw	0
  7929   0002D0  6E0B               	movwf	(___fleq@ff2+1)^0,c
  7930   0002D2  0E00               	movlw	0
  7931   0002D4  6E0C               	movwf	(___fleq@ff2+2)^0,c
  7932   0002D6  0E00               	movlw	0
  7933   0002D8  6E0D               	movwf	(___fleq@ff2+3)^0,c
  7934   0002DA  ECF2  F021         	call	___fleq	;wreg free
  7935   0002DE  B0D8               	btfsc	status,0,c
  7936   0002E0  EF74  F001         	goto	u7971
  7937   0002E4  EF76  F001         	goto	u7970
  7938   0002E8                     u7971:
  7939   0002E8  EF55  F002         	goto	l1322
  7940   0002EC                     u7970:
  7941   0002EC  EF83  F001         	goto	l6426
  7942   0002F0                     l1324:
  7943                           
  7944                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  7945   0002F0  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  7946   0002F4  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  7947   0002F8  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  7948   0002FC  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  7949   000300                     
  7950                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 662:    ++e;
  7951   000300  0100               	movlb	0	; () banked
  7952   000302  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  7953   000304  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  7954   000306                     l6426:
  7955                           
  7956                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 660:   while ((labs((g).u-((ou.f = 
      +                          u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  7957   000306  C0B5  F014         	movff	efgtoa@u,___flmul@b
  7958   00030A  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  7959   00030E  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  7960   000312  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  7961   000316  0E00               	movlw	0
  7962   000318  6E18               	movwf	___flmul@a^0,c
  7963   00031A  0E00               	movlw	0
  7964   00031C  6E19               	movwf	(___flmul@a+1)^0,c
  7965   00031E  0E20               	movlw	32
  7966   000320  6E1A               	movwf	(___flmul@a+2)^0,c
  7967   000322  0E41               	movlw	65
  7968   000324  6E1B               	movwf	(___flmul@a+3)^0,c
  7969   000326  EC6F  F00A         	call	___flmul	;wreg free
  7970   00032A  C014  F0A0         	movff	?___flmul,efgtoa@ou
  7971   00032E  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
  7972   000332  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
  7973   000336  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
  7974   00033A  0100               	movlb	0	; () banked
  7975   00033C  51A0               	movf	efgtoa@ou& (0+255),w,b
  7976   00033E  5DAF               	subwf	efgtoa@g& (0+255),w,b
  7977   000340  6E06               	movwf	labs@a^0,c
  7978   000342  51A1               	movf	(efgtoa@ou+1)& (0+255),w,b
  7979   000344  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7980   000346  6E07               	movwf	(labs@a+1)^0,c
  7981   000348  51A2               	movf	(efgtoa@ou+2)& (0+255),w,b
  7982   00034A  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7983   00034C  6E08               	movwf	(labs@a+2)^0,c
  7984   00034E  51A3               	movf	(efgtoa@ou+3)& (0+255),w,b
  7985   000350  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7986   000352  6E09               	movwf	(labs@a+3)^0,c
  7987   000354  EC96  F022         	call	_labs	;wreg free
  7988   000358  BE09               	btfsc	(?_labs+3)^0,7,c
  7989   00035A  EFBA  F001         	goto	u7981
  7990   00035E  5009               	movf	(?_labs+3)^0,w,c
  7991   000360  1008               	iorwf	(?_labs+2)^0,w,c
  7992   000362  1007               	iorwf	(?_labs+1)^0,w,c
  7993   000364  E109               	bnz	u7980
  7994   000366  0E02               	movlw	2
  7995   000368  5C06               	subwf	?_labs^0,w,c
  7996   00036A  A0D8               	btfss	status,0,c
  7997   00036C  EFBA  F001         	goto	u7981
  7998   000370  EFBC  F001         	goto	u7980
  7999   000374                     u7981:
  8000   000374  EF78  F001         	goto	l1324
  8001   000378                     u7980:
  8002   000378  C0A0  F02D         	movff	efgtoa@ou,___flge@ff1
  8003   00037C  C0A1  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
  8004   000380  C0A2  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
  8005   000384  C0A3  F030         	movff	efgtoa@ou+3,___flge@ff1+3
  8006   000388  C0AF  F031         	movff	efgtoa@g,___flge@ff2
  8007   00038C  C0B0  F032         	movff	efgtoa@g+1,___flge@ff2+1
  8008   000390  C0B1  F033         	movff	efgtoa@g+2,___flge@ff2+2
  8009   000394  C0B2  F034         	movff	efgtoa@g+3,___flge@ff2+3
  8010   000398  ECB5  F01E         	call	___flge	;wreg free
  8011   00039C  A0D8               	btfss	status,0,c
  8012   00039E  EFD3  F001         	goto	u7991
  8013   0003A2  EFD5  F001         	goto	u7990
  8014   0003A6                     u7991:
  8015   0003A6  EF78  F001         	goto	l1324
  8016   0003AA                     u7990:
  8017   0003AA                     
  8018                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 664:   if ((labs((g).u-(u).u) <= 1)
      +                          ) {
  8019   0003AA  0100               	movlb	0	; () banked
  8020   0003AC  51B5               	movf	efgtoa@u& (0+255),w,b
  8021   0003AE  5DAF               	subwf	efgtoa@g& (0+255),w,b
  8022   0003B0  6E06               	movwf	labs@a^0,c
  8023   0003B2  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  8024   0003B4  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8025   0003B6  6E07               	movwf	(labs@a+1)^0,c
  8026   0003B8  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  8027   0003BA  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8028   0003BC  6E08               	movwf	(labs@a+2)^0,c
  8029   0003BE  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  8030   0003C0  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8031   0003C2  6E09               	movwf	(labs@a+3)^0,c
  8032   0003C4  EC96  F022         	call	_labs	;wreg free
  8033   0003C8  BE09               	btfsc	(?_labs+3)^0,7,c
  8034   0003CA  EFF4  F001         	goto	u8000
  8035   0003CE  5009               	movf	(?_labs+3)^0,w,c
  8036   0003D0  1008               	iorwf	(?_labs+2)^0,w,c
  8037   0003D2  1007               	iorwf	(?_labs+1)^0,w,c
  8038   0003D4  E107               	bnz	u8001
  8039   0003D6  0E02               	movlw	2
  8040   0003D8  5C06               	subwf	?_labs^0,w,c
  8041   0003DA  B0D8               	btfsc	status,0,c
  8042   0003DC  EFF2  F001         	goto	u8001
  8043   0003E0  EFF4  F001         	goto	u8000
  8044   0003E4                     u8001:
  8045   0003E4  EF3C  F002         	goto	l6444
  8046   0003E8                     u8000:
  8047   0003E8                     l6434:
  8048                           
  8049                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 665:    g = u;
  8050   0003E8  C0B5  F0AF         	movff	efgtoa@u,efgtoa@g
  8051   0003EC  C0B6  F0B0         	movff	efgtoa@u+1,efgtoa@g+1
  8052   0003F0  C0B7  F0B1         	movff	efgtoa@u+2,efgtoa@g+2
  8053   0003F4  C0B8  F0B2         	movff	efgtoa@u+3,efgtoa@g+3
  8054                           
  8055                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 666:   }
  8056   0003F8  EF55  F002         	goto	l1322
  8057   0003FC                     l6436:
  8058                           
  8059                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 669:     u.f = u.f/10.0;
  8060   0003FC  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  8061   000400  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  8062   000404  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  8063   000408  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  8064   00040C  0E00               	movlw	0
  8065   00040E  6E31               	movwf	___fldiv@a^0,c
  8066   000410  0E00               	movlw	0
  8067   000412  6E32               	movwf	(___fldiv@a+1)^0,c
  8068   000414  0E20               	movlw	32
  8069   000416  6E33               	movwf	(___fldiv@a+2)^0,c
  8070   000418  0E41               	movlw	65
  8071   00041A  6E34               	movwf	(___fldiv@a+3)^0,c
  8072   00041C  EC70  F010         	call	___fldiv	;wreg free
  8073   000420  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  8074   000424  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  8075   000428  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  8076   00042C  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  8077   000430                     
  8078                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 670:     --e;
  8079   000430  0100               	movlb	0	; () banked
  8080   000432  079C               	decf	efgtoa@e& (0+255),f,b
  8081   000434  A0D8               	btfss	status,0,c
  8082   000436  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  8083   000438                     
  8084                           ; BSR set to: 0
  8085                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 671:     if ((labs((g).u-(u).u) <= 
      +                          1)) {
  8086   000438  51B5               	movf	efgtoa@u& (0+255),w,b
  8087   00043A  5DAF               	subwf	efgtoa@g& (0+255),w,b
  8088   00043C  6E06               	movwf	labs@a^0,c
  8089   00043E  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  8090   000440  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8091   000442  6E07               	movwf	(labs@a+1)^0,c
  8092   000444  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  8093   000446  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8094   000448  6E08               	movwf	(labs@a+2)^0,c
  8095   00044A  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  8096   00044C  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8097   00044E  6E09               	movwf	(labs@a+3)^0,c
  8098   000450  EC96  F022         	call	_labs	;wreg free
  8099   000454  BE09               	btfsc	(?_labs+3)^0,7,c
  8100   000456  EF3A  F002         	goto	u8010
  8101   00045A  5009               	movf	(?_labs+3)^0,w,c
  8102   00045C  1008               	iorwf	(?_labs+2)^0,w,c
  8103   00045E  1007               	iorwf	(?_labs+1)^0,w,c
  8104   000460  E107               	bnz	u8011
  8105   000462  0E02               	movlw	2
  8106   000464  5C06               	subwf	?_labs^0,w,c
  8107   000466  B0D8               	btfsc	status,0,c
  8108   000468  EF38  F002         	goto	u8011
  8109   00046C  EF3A  F002         	goto	u8010
  8110   000470                     u8011:
  8111   000470  EF3C  F002         	goto	l6444
  8112   000474                     u8010:
  8113   000474  EFF4  F001         	goto	l6434
  8114   000478                     l6444:
  8115                           
  8116                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 668:    while (g.f < u.f) {
  8117   000478  C0AF  F02D         	movff	efgtoa@g,___flge@ff1
  8118   00047C  C0B0  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  8119   000480  C0B1  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  8120   000484  C0B2  F030         	movff	efgtoa@g+3,___flge@ff1+3
  8121   000488  C0B5  F031         	movff	efgtoa@u,___flge@ff2
  8122   00048C  C0B6  F032         	movff	efgtoa@u+1,___flge@ff2+1
  8123   000490  C0B7  F033         	movff	efgtoa@u+2,___flge@ff2+2
  8124   000494  C0B8  F034         	movff	efgtoa@u+3,___flge@ff2+3
  8125   000498  ECB5  F01E         	call	___flge	;wreg free
  8126   00049C  A0D8               	btfss	status,0,c
  8127   00049E  EF53  F002         	goto	u8021
  8128   0004A2  EF55  F002         	goto	u8020
  8129   0004A6                     u8021:
  8130   0004A6  EFFE  F001         	goto	l6436
  8131   0004AA                     u8020:
  8132   0004AA                     l1322:
  8133                           
  8134                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  8135   0004AA  C08A  F096         	movff	efgtoa@c,efgtoa@mode
  8136                           
  8137                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 685:     nmode = mode;
  8138   0004AE  C096  F097         	movff	efgtoa@mode,efgtoa@nmode
  8139   0004B2                     
  8140                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 695:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
  8141   0004B2  BE58               	btfsc	(_prec+1)^0,7,c
  8142   0004B4  EF5E  F002         	goto	u8031
  8143   0004B8  EF60  F002         	goto	u8030
  8144   0004BC                     u8031:
  8145   0004BC  EF66  F002         	goto	l6450
  8146   0004C0                     u8030:
  8147   0004C0  C057  F08F         	movff	_prec,efgtoa@p
  8148   0004C4  C058  F090         	movff	_prec+1,efgtoa@p+1
  8149   0004C8  EF6B  F002         	goto	l6452
  8150   0004CC                     l6450:
  8151   0004CC  0E00               	movlw	0
  8152   0004CE  0100               	movlb	0	; () banked
  8153   0004D0  6F90               	movwf	(efgtoa@p+1)& (0+255),b
  8154   0004D2  0E06               	movlw	6
  8155   0004D4  6F8F               	movwf	efgtoa@p& (0+255),b
  8156   0004D6                     l6452:
  8157                           
  8158                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 697:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 711:     m = p;
  8159   0004D6  C08F  F09A         	movff	efgtoa@p,efgtoa@m
  8160   0004DA  C090  F09B         	movff	efgtoa@p+1,efgtoa@m+1
  8161   0004DE                     
  8162                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 715:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 716:         ++m;
  8163   0004DE  0100               	movlb	0	; () banked
  8164   0004E0  4B9A               	infsnz	efgtoa@m& (0+255),f,b
  8165   0004E2  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
  8166   0004E4                     
  8167                           ; BSR set to: 0
  8168                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 717:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 721:     if (nmode == 'f') {
  8169   0004E4  0E66               	movlw	102
  8170   0004E6  1997               	xorwf	efgtoa@nmode& (0+255),w,b
  8171   0004E8  A4D8               	btfss	status,2,c
  8172   0004EA  EF79  F002         	goto	u8041
  8173   0004EE  EF7B  F002         	goto	u8040
  8174   0004F2                     u8041:
  8175   0004F2  EF9B  F002         	goto	l6466
  8176   0004F6                     u8040:
  8177   0004F6                     
  8178                           ; BSR set to: 0
  8179                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 722:         if (e < 0) {
  8180   0004F6  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8181   0004F8  EF82  F002         	goto	u8050
  8182   0004FC  EF80  F002         	goto	u8051
  8183   000500                     u8051:
  8184   000500  EF8E  F002         	goto	l6462
  8185   000504                     u8050:
  8186   000504                     
  8187                           ; BSR set to: 0
  8188                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 723:             u.f = 1.0;
  8189   000504  0E00               	movlw	0
  8190   000506  6FB5               	movwf	efgtoa@u& (0+255),b
  8191   000508  0E00               	movlw	0
  8192   00050A  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  8193   00050C  0E80               	movlw	128
  8194   00050E  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  8195   000510  0E3F               	movlw	63
  8196   000512  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  8197                           
  8198                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 724:             e = 0;
  8199   000514  0E00               	movlw	0
  8200   000516  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  8201   000518  0E00               	movlw	0
  8202   00051A  6F9C               	movwf	efgtoa@e& (0+255),b
  8203   00051C                     l6462:
  8204                           
  8205                           ; BSR set to: 0
  8206                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 726:         if (!(mode == 'g')) {
  8207   00051C  0E67               	movlw	103
  8208   00051E  1996               	xorwf	efgtoa@mode& (0+255),w,b
  8209   000520  B4D8               	btfsc	status,2,c
  8210   000522  EF95  F002         	goto	u8061
  8211   000526  EF97  F002         	goto	u8060
  8212   00052A                     u8061:
  8213   00052A  EF9B  F002         	goto	l6466
  8214   00052E                     u8060:
  8215   00052E                     
  8216                           ; BSR set to: 0
  8217                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 727:             m += e;
  8218   00052E  519C               	movf	efgtoa@e& (0+255),w,b
  8219   000530  279A               	addwf	efgtoa@m& (0+255),f,b
  8220   000532  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  8221   000534  239B               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8222   000536                     l6466:
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  8226   000536  0E00               	movlw	0
  8227   000538  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  8228   00053A  0E00               	movlw	0
  8229   00053C  6FA4               	movwf	efgtoa@i& (0+255),b
  8230   00053E                     
  8231                           ; BSR set to: 0
  8232                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  8233   00053E  C0AF  F0A6         	movff	efgtoa@g,efgtoa@h
  8234   000542  C0B0  F0A7         	movff	efgtoa@g+1,efgtoa@h+1
  8235   000546  C0B1  F0A8         	movff	efgtoa@g+2,efgtoa@h+2
  8236   00054A  C0B2  F0A9         	movff	efgtoa@g+3,efgtoa@h+3
  8237   00054E                     
  8238                           ; BSR set to: 0
  8239                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  8240   00054E  C0B5  F0A0         	movff	efgtoa@u,efgtoa@ou
  8241   000552  C0B6  F0A1         	movff	efgtoa@u+1,efgtoa@ou+1
  8242   000556  C0B7  F0A2         	movff	efgtoa@u+2,efgtoa@ou+2
  8243   00055A  C0B8  F0A3         	movff	efgtoa@u+3,efgtoa@ou+3
  8244                           
  8245                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
  8246   00055E  EF2C  F003         	goto	l6480
  8247   000562                     l6472:
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 737:         l = floorf(h/u.f);
  8251   000562  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
  8252   000566  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
  8253   00056A  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
  8254   00056E  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
  8255   000572  C0B5  F031         	movff	efgtoa@u,___fldiv@a
  8256   000576  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
  8257   00057A  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
  8258   00057E  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
  8259   000582  EC70  F010         	call	___fldiv	;wreg free
  8260   000586  C02D  F046         	movff	?___fldiv,floorf@x
  8261   00058A  C02E  F047         	movff	?___fldiv+1,floorf@x+1
  8262   00058E  C02F  F048         	movff	?___fldiv+2,floorf@x+2
  8263   000592  C030  F049         	movff	?___fldiv+3,floorf@x+3
  8264   000596  EC1D  F016         	call	_floorf	;wreg free
  8265   00059A  C046  F0AA         	movff	?_floorf,efgtoa@l
  8266   00059E  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
  8267   0005A2  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
  8268   0005A6  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
  8269                           
  8270                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 738:         d = (int)l;
  8271   0005AA  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  8272   0005AE  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  8273   0005B2  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  8274   0005B6  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  8275   0005BA  EC31  F01E         	call	___fltol	;wreg free
  8276   0005BE  C064  F098         	movff	?___fltol,efgtoa@d
  8277   0005C2  C065  F099         	movff	?___fltol+1,efgtoa@d+1
  8278   0005C6                     
  8279                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 739:         h -= l*u.f;
  8280   0005C6  C0A6  F064         	movff	efgtoa@h,___flsub@b
  8281   0005CA  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
  8282   0005CE  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
  8283   0005D2  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
  8284   0005D6  C0AA  F018         	movff	efgtoa@l,___flmul@a
  8285   0005DA  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
  8286   0005DE  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
  8287   0005E2  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
  8288   0005E6  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8289   0005EA  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8290   0005EE  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8291   0005F2  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8292   0005F6  EC6F  F00A         	call	___flmul	;wreg free
  8293   0005FA  C014  F068         	movff	?___flmul,___flsub@a
  8294   0005FE  C015  F069         	movff	?___flmul+1,___flsub@a+1
  8295   000602  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  8296   000606  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  8297   00060A  EC32  F023         	call	___flsub	;wreg free
  8298   00060E  C064  F0A6         	movff	?___flsub,efgtoa@h
  8299   000612  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
  8300   000616  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
  8301   00061A  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
  8302   00061E                     
  8303                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 740:         u.f = u.f/10.0;
  8304   00061E  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  8305   000622  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  8306   000626  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  8307   00062A  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  8308   00062E  0E00               	movlw	0
  8309   000630  6E31               	movwf	___fldiv@a^0,c
  8310   000632  0E00               	movlw	0
  8311   000634  6E32               	movwf	(___fldiv@a+1)^0,c
  8312   000636  0E20               	movlw	32
  8313   000638  6E33               	movwf	(___fldiv@a+2)^0,c
  8314   00063A  0E41               	movlw	65
  8315   00063C  6E34               	movwf	(___fldiv@a+3)^0,c
  8316   00063E  EC70  F010         	call	___fldiv	;wreg free
  8317   000642  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  8318   000646  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  8319   00064A  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  8320   00064E  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  8321   000652                     
  8322                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 741:         ++i;
  8323   000652  0100               	movlb	0	; () banked
  8324   000654  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  8325   000656  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  8326   000658                     l6480:
  8327                           
  8328                           ; BSR set to: 0
  8329                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
  8330   000658  519A               	movf	efgtoa@m& (0+255),w,b
  8331   00065A  5DA4               	subwf	efgtoa@i& (0+255),w,b
  8332   00065C  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8333   00065E  0A80               	xorlw	128
  8334   000660  6F8B               	movwf	??_efgtoa& (0+255),b
  8335   000662  519B               	movf	(efgtoa@m+1)& (0+255),w,b
  8336   000664  0A80               	xorlw	128
  8337   000666  598B               	subwfb	??_efgtoa& (0+255),w,b
  8338   000668  A0D8               	btfss	status,0,c
  8339   00066A  EF39  F003         	goto	u8071
  8340   00066E  EF3B  F003         	goto	u8070
  8341   000672                     u8071:
  8342   000672  EFB1  F002         	goto	l6472
  8343   000676                     u8070:
  8344   000676                     
  8345                           ; BSR set to: 0
  8346                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 745:     l = u.f*5.0;
  8347   000676  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8348   00067A  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8349   00067E  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8350   000682  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8351   000686  0E00               	movlw	0
  8352   000688  6E18               	movwf	___flmul@a^0,c
  8353   00068A  0E00               	movlw	0
  8354   00068C  6E19               	movwf	(___flmul@a+1)^0,c
  8355   00068E  0EA0               	movlw	160
  8356   000690  6E1A               	movwf	(___flmul@a+2)^0,c
  8357   000692  0E40               	movlw	64
  8358   000694  6E1B               	movwf	(___flmul@a+3)^0,c
  8359   000696  EC6F  F00A         	call	___flmul	;wreg free
  8360   00069A  C014  F0AA         	movff	?___flmul,efgtoa@l
  8361   00069E  C015  F0AB         	movff	?___flmul+1,efgtoa@l+1
  8362   0006A2  C016  F0AC         	movff	?___flmul+2,efgtoa@l+2
  8363   0006A6  C017  F0AD         	movff	?___flmul+3,efgtoa@l+3
  8364   0006AA                     
  8365                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 746:     if (h < l) {
  8366   0006AA  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
  8367   0006AE  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  8368   0006B2  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  8369   0006B6  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
  8370   0006BA  C0AA  F031         	movff	efgtoa@l,___flge@ff2
  8371   0006BE  C0AB  F032         	movff	efgtoa@l+1,___flge@ff2+1
  8372   0006C2  C0AC  F033         	movff	efgtoa@l+2,___flge@ff2+2
  8373   0006C6  C0AD  F034         	movff	efgtoa@l+3,___flge@ff2+3
  8374   0006CA  ECB5  F01E         	call	___flge	;wreg free
  8375   0006CE  B0D8               	btfsc	status,0,c
  8376   0006D0  EF6C  F003         	goto	u8081
  8377   0006D4  EF6E  F003         	goto	u8080
  8378   0006D8                     u8081:
  8379   0006D8  EF79  F003         	goto	l6488
  8380   0006DC                     u8080:
  8381   0006DC                     
  8382                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 747:         l = 0.0;
  8383   0006DC  0E00               	movlw	0
  8384   0006DE  0100               	movlb	0	; () banked
  8385   0006E0  6FAA               	movwf	efgtoa@l& (0+255),b
  8386   0006E2  0E00               	movlw	0
  8387   0006E4  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
  8388   0006E6  0E00               	movlw	0
  8389   0006E8  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
  8390   0006EA  0E00               	movlw	0
  8391   0006EC  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
  8392                           
  8393                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 748:     } else {
  8394   0006EE  EFA2  F003         	goto	l6494
  8395   0006F2                     l6488:
  8396                           
  8397                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 750:         if ((h == l) && !(d % 
      +                          2)) {
  8398   0006F2  C0A6  F006         	movff	efgtoa@h,___fleq@ff1
  8399   0006F6  C0A7  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  8400   0006FA  C0A8  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  8401   0006FE  C0A9  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  8402   000702  C0AA  F00A         	movff	efgtoa@l,___fleq@ff2
  8403   000706  C0AB  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  8404   00070A  C0AC  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  8405   00070E  C0AD  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  8406   000712  ECF2  F021         	call	___fleq	;wreg free
  8407   000716  A0D8               	btfss	status,0,c
  8408   000718  EF90  F003         	goto	u8091
  8409   00071C  EF92  F003         	goto	u8090
  8410   000720                     u8091:
  8411   000720  EFA2  F003         	goto	l6494
  8412   000724                     u8090:
  8413   000724  0100               	movlb	0	; () banked
  8414   000726  B198               	btfsc	efgtoa@d& (0+255),0,b
  8415   000728  EF98  F003         	goto	u8101
  8416   00072C  EF9A  F003         	goto	u8100
  8417   000730                     u8101:
  8418   000730  EFA2  F003         	goto	l6494
  8419   000734                     u8100:
  8420   000734                     
  8421                           ; BSR set to: 0
  8422                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 751:             l = 0.0;
  8423   000734  0E00               	movlw	0
  8424   000736  6FAA               	movwf	efgtoa@l& (0+255),b
  8425   000738  0E00               	movlw	0
  8426   00073A  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
  8427   00073C  0E00               	movlw	0
  8428   00073E  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
  8429   000740  0E00               	movlw	0
  8430   000742  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
  8431   000744                     l6494:
  8432                           
  8433                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 756:     h = g.f + l;
  8434   000744  C0AF  F046         	movff	efgtoa@g,___fladd@b
  8435   000748  C0B0  F047         	movff	efgtoa@g+1,___fladd@b+1
  8436   00074C  C0B1  F048         	movff	efgtoa@g+2,___fladd@b+2
  8437   000750  C0B2  F049         	movff	efgtoa@g+3,___fladd@b+3
  8438   000754  C0AA  F04A         	movff	efgtoa@l,___fladd@a
  8439   000758  C0AB  F04B         	movff	efgtoa@l+1,___fladd@a+1
  8440   00075C  C0AC  F04C         	movff	efgtoa@l+2,___fladd@a+2
  8441   000760  C0AD  F04D         	movff	efgtoa@l+3,___fladd@a+3
  8442   000764  EC0E  F008         	call	___fladd	;wreg free
  8443   000768  C046  F0A6         	movff	?___fladd,efgtoa@h
  8444   00076C  C047  F0A7         	movff	?___fladd+1,efgtoa@h+1
  8445   000770  C048  F0A8         	movff	?___fladd+2,efgtoa@h+2
  8446   000774  C049  F0A9         	movff	?___fladd+3,efgtoa@h+3
  8447   000778                     
  8448                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 758:  if (h >= (ou.f*10.0)) {
  8449   000778  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
  8450   00077C  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  8451   000780  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  8452   000784  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
  8453   000788  0E00               	movlw	0
  8454   00078A  6E18               	movwf	___flmul@a^0,c
  8455   00078C  0E00               	movlw	0
  8456   00078E  6E19               	movwf	(___flmul@a+1)^0,c
  8457   000790  0E20               	movlw	32
  8458   000792  6E1A               	movwf	(___flmul@a+2)^0,c
  8459   000794  0E41               	movlw	65
  8460   000796  6E1B               	movwf	(___flmul@a+3)^0,c
  8461   000798  C0A0  F014         	movff	efgtoa@ou,___flmul@b
  8462   00079C  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
  8463   0007A0  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
  8464   0007A4  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
  8465   0007A8  EC6F  F00A         	call	___flmul	;wreg free
  8466   0007AC  C014  F031         	movff	?___flmul,___flge@ff2
  8467   0007B0  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  8468   0007B4  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  8469   0007B8  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  8470   0007BC  ECB5  F01E         	call	___flge	;wreg free
  8471   0007C0  A0D8               	btfss	status,0,c
  8472   0007C2  EFE5  F003         	goto	u8111
  8473   0007C6  EFE7  F003         	goto	u8110
  8474   0007CA                     u8111:
  8475   0007CA  EF10  F004         	goto	l6506
  8476   0007CE                     u8110:
  8477   0007CE                     
  8478                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 759:   e++;
  8479   0007CE  0100               	movlb	0	; () banked
  8480   0007D0  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  8481   0007D2  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  8482   0007D4                     
  8483                           ; BSR set to: 0
  8484                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10.0;
  8485   0007D4  C0A0  F014         	movff	efgtoa@ou,___flmul@b
  8486   0007D8  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
  8487   0007DC  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
  8488   0007E0  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
  8489   0007E4  0E00               	movlw	0
  8490   0007E6  6E18               	movwf	___flmul@a^0,c
  8491   0007E8  0E00               	movlw	0
  8492   0007EA  6E19               	movwf	(___flmul@a+1)^0,c
  8493   0007EC  0E20               	movlw	32
  8494   0007EE  6E1A               	movwf	(___flmul@a+2)^0,c
  8495   0007F0  0E41               	movlw	65
  8496   0007F2  6E1B               	movwf	(___flmul@a+3)^0,c
  8497   0007F4  EC6F  F00A         	call	___flmul	;wreg free
  8498   0007F8  C014  F0A0         	movff	?___flmul,efgtoa@ou
  8499   0007FC  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
  8500   000800  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
  8501   000804  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
  8502   000808                     
  8503                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 762:   if (nmode == 'f') {
  8504   000808  0E66               	movlw	102
  8505   00080A  0100               	movlb	0	; () banked
  8506   00080C  1997               	xorwf	efgtoa@nmode& (0+255),w,b
  8507   00080E  A4D8               	btfss	status,2,c
  8508   000810  EF0C  F004         	goto	u8121
  8509   000814  EF0E  F004         	goto	u8120
  8510   000818                     u8121:
  8511   000818  EF10  F004         	goto	l6506
  8512   00081C                     u8120:
  8513   00081C                     
  8514                           ; BSR set to: 0
  8515                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 764:    m++;
  8516   00081C  4B9A               	infsnz	efgtoa@m& (0+255),f,b
  8517   00081E  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
  8518   000820                     l6506:
  8519                           
  8520                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  8521   000820  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  8522   000824  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  8523   000828  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  8524   00082C  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  8525   000830                     
  8526                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  8527   000830  C09C  F08D         	movff	efgtoa@e,efgtoa@ne
  8528   000834  C09D  F08E         	movff	efgtoa@e+1,efgtoa@ne+1
  8529   000838                     
  8530                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  8531   000838  0E00               	movlw	0
  8532   00083A  0100               	movlb	0	; () banked
  8533   00083C  6F95               	movwf	efgtoa@pp& (0+255),b
  8534   00083E                     
  8535                           ; BSR set to: 0
  8536                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  8537   00083E  0E00               	movlw	0
  8538   000840  6F92               	movwf	(efgtoa@t+1)& (0+255),b
  8539   000842  0E00               	movlw	0
  8540   000844  6F91               	movwf	efgtoa@t& (0+255),b
  8541   000846                     
  8542                           ; BSR set to: 0
  8543                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  8544   000846  0E00               	movlw	0
  8545   000848  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  8546   00084A  0E00               	movlw	0
  8547   00084C  6FA4               	movwf	efgtoa@i& (0+255),b
  8548                           
  8549                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
  8550   00084E  EF0E  F005         	goto	l6556
  8551   000852                     l6516:
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 780:         l = floorf(h/u.f);
  8555   000852  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
  8556   000856  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
  8557   00085A  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
  8558   00085E  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
  8559   000862  C0B5  F031         	movff	efgtoa@u,___fldiv@a
  8560   000866  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
  8561   00086A  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
  8562   00086E  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
  8563   000872  EC70  F010         	call	___fldiv	;wreg free
  8564   000876  C02D  F046         	movff	?___fldiv,floorf@x
  8565   00087A  C02E  F047         	movff	?___fldiv+1,floorf@x+1
  8566   00087E  C02F  F048         	movff	?___fldiv+2,floorf@x+2
  8567   000882  C030  F049         	movff	?___fldiv+3,floorf@x+3
  8568   000886  EC1D  F016         	call	_floorf	;wreg free
  8569   00088A  C046  F0AA         	movff	?_floorf,efgtoa@l
  8570   00088E  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
  8571   000892  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
  8572   000896  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
  8573                           
  8574                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 781:         d = (int)l > 9 ? 9 : (
      +                          int)l;
  8575   00089A  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  8576   00089E  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  8577   0008A2  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  8578   0008A6  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  8579   0008AA  EC31  F01E         	call	___fltol	;wreg free
  8580   0008AE  0100               	movlb	0	; () banked
  8581   0008B0  BF65               	btfsc	(?___fltol+1)& (0+255),7,b
  8582   0008B2  EF66  F004         	goto	u8130
  8583   0008B6  5165               	movf	(?___fltol+1)& (0+255),w,b
  8584   0008B8  E107               	bnz	u8131
  8585   0008BA  0E0A               	movlw	10
  8586   0008BC  5D64               	subwf	?___fltol& (0+255),w,b
  8587   0008BE  B0D8               	btfsc	status,0,c
  8588   0008C0  EF64  F004         	goto	u8131
  8589   0008C4  EF66  F004         	goto	u8130
  8590   0008C8                     u8131:
  8591   0008C8  EF76  F004         	goto	l6520
  8592   0008CC                     u8130:
  8593   0008CC                     
  8594                           ; BSR set to: 0
  8595   0008CC  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  8596   0008D0  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  8597   0008D4  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  8598   0008D8  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  8599   0008DC  EC31  F01E         	call	___fltol	;wreg free
  8600   0008E0  C064  F098         	movff	?___fltol,efgtoa@d
  8601   0008E4  C065  F099         	movff	?___fltol+1,efgtoa@d+1
  8602   0008E8  EF7A  F004         	goto	l1352
  8603   0008EC                     l6520:
  8604                           
  8605                           ; BSR set to: 0
  8606   0008EC  0E00               	movlw	0
  8607   0008EE  6F99               	movwf	(efgtoa@d+1)& (0+255),b
  8608   0008F0  0E09               	movlw	9
  8609   0008F2  6F98               	movwf	efgtoa@d& (0+255),b
  8610   0008F4                     l1352:
  8611                           
  8612                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 792:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 793:             if (!pp && (ne < 0)) {
  8613   0008F4  0100               	movlb	0	; () banked
  8614   0008F6  5195               	movf	efgtoa@pp& (0+255),w,b
  8615   0008F8  A4D8               	btfss	status,2,c
  8616   0008FA  EF81  F004         	goto	u8141
  8617   0008FE  EF83  F004         	goto	u8140
  8618   000902                     u8141:
  8619   000902  EFAB  F004         	goto	l6540
  8620   000906                     u8140:
  8621   000906                     
  8622                           ; BSR set to: 0
  8623   000906  BF8E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8624   000908  EF8A  F004         	goto	u8150
  8625   00090C  EF88  F004         	goto	u8151
  8626   000910                     u8151:
  8627   000910  EFAB  F004         	goto	l6540
  8628   000914                     u8150:
  8629   000914                     
  8630                           ; BSR set to: 0
  8631                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 794:                 dbuf[n++] = '.
      +                          ';
  8632   000914  0E25               	movlw	low _dbuf
  8633   000916  25B3               	addwf	efgtoa@n& (0+255),w,b
  8634   000918  6ED9               	movwf	fsr2l,c
  8635   00091A  0E01               	movlw	high _dbuf
  8636   00091C  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8637   00091E  6EDA               	movwf	fsr2h,c
  8638   000920  0E2E               	movlw	46
  8639   000922  6EDF               	movwf	indf2,c
  8640   000924                     
  8641                           ; BSR set to: 0
  8642   000924  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  8643   000926  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  8644   000928                     
  8645                           ; BSR set to: 0
  8646                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 795:                 --w;
  8647   000928  079E               	decf	efgtoa@w& (0+255),f,b
  8648   00092A  A0D8               	btfss	status,0,c
  8649   00092C  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8650   00092E                     
  8651                           ; BSR set to: 0
  8652                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 796:                 pp = 1;
  8653   00092E  0E01               	movlw	1
  8654   000930  6F95               	movwf	efgtoa@pp& (0+255),b
  8655   000932  EFAB  F004         	goto	l6540
  8656   000936                     l6532:
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 799:                 dbuf[n++] = '0
      +                          ';
  8660   000936  0E25               	movlw	low _dbuf
  8661   000938  25B3               	addwf	efgtoa@n& (0+255),w,b
  8662   00093A  6ED9               	movwf	fsr2l,c
  8663   00093C  0E01               	movlw	high _dbuf
  8664   00093E  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8665   000940  6EDA               	movwf	fsr2h,c
  8666   000942  0E30               	movlw	48
  8667   000944  6EDF               	movwf	indf2,c
  8668   000946                     
  8669                           ; BSR set to: 0
  8670   000946  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  8671   000948  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  8672   00094A                     
  8673                           ; BSR set to: 0
  8674                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 800:                 --w;
  8675   00094A  079E               	decf	efgtoa@w& (0+255),f,b
  8676   00094C  A0D8               	btfss	status,0,c
  8677   00094E  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8678   000950                     
  8679                           ; BSR set to: 0
  8680                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 801:                 --t;
  8681   000950  0791               	decf	efgtoa@t& (0+255),f,b
  8682   000952  A0D8               	btfss	status,0,c
  8683   000954  0792               	decf	(efgtoa@t+1)& (0+255),f,b
  8684   000956                     l6540:
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 798:             while (t) {
  8688   000956  5191               	movf	efgtoa@t& (0+255),w,b
  8689   000958  1192               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8690   00095A  A4D8               	btfss	status,2,c
  8691   00095C  EFB2  F004         	goto	u8161
  8692   000960  EFB4  F004         	goto	u8160
  8693   000964                     u8161:
  8694   000964  EF9B  F004         	goto	l6532
  8695   000968                     u8160:
  8696   000968                     
  8697                           ; BSR set to: 0
  8698                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 803:             dbuf[n++] = (char)
      +                          ((int)'0' + d);
  8699   000968  0E25               	movlw	low _dbuf
  8700   00096A  25B3               	addwf	efgtoa@n& (0+255),w,b
  8701   00096C  6ED9               	movwf	fsr2l,c
  8702   00096E  0E01               	movlw	high _dbuf
  8703   000970  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8704   000972  6EDA               	movwf	fsr2h,c
  8705   000974  5198               	movf	efgtoa@d& (0+255),w,b
  8706   000976  0F30               	addlw	48
  8707   000978  6EDF               	movwf	indf2,c
  8708   00097A                     
  8709                           ; BSR set to: 0
  8710   00097A  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  8711   00097C  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  8712   00097E                     
  8713                           ; BSR set to: 0
  8714                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 804:             --w;
  8715   00097E  079E               	decf	efgtoa@w& (0+255),f,b
  8716   000980  A0D8               	btfss	status,0,c
  8717   000982  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8718   000984                     
  8719                           ; BSR set to: 0
  8720                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 805:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 806:         h -= l*u.f;
  8721   000984  C0A6  F064         	movff	efgtoa@h,___flsub@b
  8722   000988  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
  8723   00098C  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
  8724   000990  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
  8725   000994  C0AA  F018         	movff	efgtoa@l,___flmul@a
  8726   000998  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
  8727   00099C  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
  8728   0009A0  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
  8729   0009A4  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8730   0009A8  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8731   0009AC  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8732   0009B0  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8733   0009B4  EC6F  F00A         	call	___flmul	;wreg free
  8734   0009B8  C014  F068         	movff	?___flmul,___flsub@a
  8735   0009BC  C015  F069         	movff	?___flmul+1,___flsub@a+1
  8736   0009C0  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  8737   0009C4  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  8738   0009C8  EC32  F023         	call	___flsub	;wreg free
  8739   0009CC  C064  F0A6         	movff	?___flsub,efgtoa@h
  8740   0009D0  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
  8741   0009D4  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
  8742   0009D8  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
  8743   0009DC                     
  8744                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 807:         u.f = u.f/10.0;
  8745   0009DC  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  8746   0009E0  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  8747   0009E4  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  8748   0009E8  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  8749   0009EC  0E00               	movlw	0
  8750   0009EE  6E31               	movwf	___fldiv@a^0,c
  8751   0009F0  0E00               	movlw	0
  8752   0009F2  6E32               	movwf	(___fldiv@a+1)^0,c
  8753   0009F4  0E20               	movlw	32
  8754   0009F6  6E33               	movwf	(___fldiv@a+2)^0,c
  8755   0009F8  0E41               	movlw	65
  8756   0009FA  6E34               	movwf	(___fldiv@a+3)^0,c
  8757   0009FC  EC70  F010         	call	___fldiv	;wreg free
  8758   000A00  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  8759   000A04  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  8760   000A08  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  8761   000A0C  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  8762   000A10                     
  8763                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 808:         --ne;
  8764   000A10  0100               	movlb	0	; () banked
  8765   000A12  078D               	decf	efgtoa@ne& (0+255),f,b
  8766   000A14  A0D8               	btfss	status,0,c
  8767   000A16  078E               	decf	(efgtoa@ne+1)& (0+255),f,b
  8768   000A18                     
  8769                           ; BSR set to: 0
  8770                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 809:         ++i;
  8771   000A18  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  8772   000A1A  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  8773   000A1C                     l6556:
  8774                           
  8775                           ; BSR set to: 0
  8776                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
  8777   000A1C  519A               	movf	efgtoa@m& (0+255),w,b
  8778   000A1E  5DA4               	subwf	efgtoa@i& (0+255),w,b
  8779   000A20  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8780   000A22  0A80               	xorlw	128
  8781   000A24  6F8B               	movwf	??_efgtoa& (0+255),b
  8782   000A26  519B               	movf	(efgtoa@m+1)& (0+255),w,b
  8783   000A28  0A80               	xorlw	128
  8784   000A2A  598B               	subwfb	??_efgtoa& (0+255),w,b
  8785   000A2C  B0D8               	btfsc	status,0,c
  8786   000A2E  EF1B  F005         	goto	u8171
  8787   000A32  EF1D  F005         	goto	u8170
  8788   000A36                     u8171:
  8789   000A36  EF2B  F005         	goto	l6560
  8790   000A3A                     u8170:
  8791   000A3A                     
  8792                           ; BSR set to: 0
  8793   000A3A  BFB4               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8794   000A3C  EF29  F005         	goto	u8181
  8795   000A40  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  8796   000A42  E109               	bnz	u8180
  8797   000A44  0E4B               	movlw	75
  8798   000A46  5DB3               	subwf	efgtoa@n& (0+255),w,b
  8799   000A48  A0D8               	btfss	status,0,c
  8800   000A4A  EF29  F005         	goto	u8181
  8801   000A4E  EF2B  F005         	goto	u8180
  8802   000A52                     u8181:
  8803   000A52  EF29  F004         	goto	l6516
  8804   000A56                     u8180:
  8805   000A56                     l6560:
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(dbuf) - 1;
  8809   000A56  0E00               	movlw	0
  8810   000A58  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  8811   000A5A  0E4F               	movlw	79
  8812   000A5C  6FA4               	movwf	efgtoa@i& (0+255),b
  8813   000A5E                     
  8814                           ; BSR set to: 0
  8815                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] = '\0';
  8816   000A5E  0E25               	movlw	low _dbuf
  8817   000A60  25A4               	addwf	efgtoa@i& (0+255),w,b
  8818   000A62  6ED9               	movwf	fsr2l,c
  8819   000A64  0E01               	movlw	high _dbuf
  8820   000A66  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8821   000A68  6EDA               	movwf	fsr2h,c
  8822   000A6A  6ADF               	clrf	indf2,c
  8823   000A6C                     
  8824                           ; BSR set to: 0
  8825                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbuf[i-n], &dbuf[0], 
      +                          (size_t)n);
  8826   000A6C  0E25               	movlw	low _dbuf
  8827   000A6E  6F8B               	movwf	??_efgtoa& (0+255),b
  8828   000A70  0E01               	movlw	high _dbuf
  8829   000A72  6F8C               	movwf	(??_efgtoa+1)& (0+255),b
  8830   000A74  51B3               	movf	efgtoa@n& (0+255),w,b
  8831   000A76  5F8B               	subwf	??_efgtoa& (0+255),f,b
  8832   000A78  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  8833   000A7A  5B8C               	subwfb	(??_efgtoa+1)& (0+255),f,b
  8834   000A7C  51A4               	movf	efgtoa@i& (0+255),w,b
  8835   000A7E  258B               	addwf	??_efgtoa& (0+255),w,b
  8836   000A80  6E06               	movwf	memcpy@d1^0,c
  8837   000A82  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8838   000A84  218C               	addwfc	(??_efgtoa+1)& (0+255),w,b
  8839   000A86  6E07               	movwf	(memcpy@d1+1)^0,c
  8840   000A88  0E25               	movlw	low _dbuf
  8841   000A8A  6E08               	movwf	memcpy@s1^0,c
  8842   000A8C  0E01               	movlw	high _dbuf
  8843   000A8E  6E09               	movwf	(memcpy@s1+1)^0,c
  8844   000A90  C0B3  F00A         	movff	efgtoa@n,memcpy@n
  8845   000A94  C0B4  F00B         	movff	efgtoa@n+1,memcpy@n+1
  8846   000A98  ECC1  F022         	call	_memcpy	;wreg free
  8847   000A9C                     
  8848                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  8849   000A9C  0100               	movlb	0	; () banked
  8850   000A9E  51B3               	movf	efgtoa@n& (0+255),w,b
  8851   000AA0  5DA4               	subwf	efgtoa@i& (0+255),w,b
  8852   000AA2  6FB3               	movwf	efgtoa@n& (0+255),b
  8853   000AA4  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  8854   000AA6  59A5               	subwfb	(efgtoa@i+1)& (0+255),w,b
  8855   000AA8  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  8856   000AAA                     
  8857                           ; BSR set to: 0
  8858                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 850:  i = sign == 0 ? 0 : 1;
  8859   000AAA  51AE               	movf	efgtoa@sign& (0+255),w,b
  8860   000AAC  A4D8               	btfss	status,2,c
  8861   000AAE  EF5B  F005         	goto	u8191
  8862   000AB2  EF5E  F005         	goto	u8190
  8863   000AB6                     u8191:
  8864   000AB6  0E01               	movlw	1
  8865   000AB8  EF5F  F005         	goto	u8200
  8866   000ABC                     u8190:
  8867   000ABC  0E00               	movlw	0
  8868   000ABE                     u8200:
  8869   000ABE  6FA4               	movwf	efgtoa@i& (0+255),b
  8870   000AC0  6BA5               	clrf	(efgtoa@i+1)& (0+255),b
  8871   000AC2                     
  8872                           ; BSR set to: 0
  8873                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  8874   000AC2  51AE               	movf	efgtoa@sign& (0+255),w,b
  8875   000AC4  B4D8               	btfsc	status,2,c
  8876   000AC6  EF67  F005         	goto	u8211
  8877   000ACA  EF69  F005         	goto	u8210
  8878   000ACE                     u8211:
  8879   000ACE  EF74  F005         	goto	l6574
  8880   000AD2                     u8210:
  8881   000AD2                     
  8882                           ; BSR set to: 0
  8883                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] = sign;
  8884   000AD2  07B3               	decf	efgtoa@n& (0+255),f,b
  8885   000AD4  A0D8               	btfss	status,0,c
  8886   000AD6  07B4               	decf	(efgtoa@n+1)& (0+255),f,b
  8887   000AD8  0E25               	movlw	low _dbuf
  8888   000ADA  25B3               	addwf	efgtoa@n& (0+255),w,b
  8889   000ADC  6ED9               	movwf	fsr2l,c
  8890   000ADE  0E01               	movlw	high _dbuf
  8891   000AE0  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8892   000AE2  6EDA               	movwf	fsr2h,c
  8893   000AE4  C0AE  FFDF         	movff	efgtoa@sign,indf2
  8894   000AE8                     l6574:
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  8898   000AE8  51A4               	movf	efgtoa@i& (0+255),w,b
  8899   000AEA  5F9E               	subwf	efgtoa@w& (0+255),f,b
  8900   000AEC  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8901   000AEE  5B9F               	subwfb	(efgtoa@w+1)& (0+255),f,b
  8902   000AF0                     
  8903                           ; BSR set to: 0
  8904                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 867:     return (void) pad(fp, &dbu
      +                          f[n], w);
  8905   000AF0  C084  F017         	movff	efgtoa@fp,pad@fp
  8906   000AF4  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  8907   000AF8  0E25               	movlw	low _dbuf
  8908   000AFA  25B3               	addwf	efgtoa@n& (0+255),w,b
  8909   000AFC  6E19               	movwf	pad@buf^0,c
  8910   000AFE  0E01               	movlw	high _dbuf
  8911   000B00  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8912   000B02  6E1A               	movwf	(pad@buf+1)^0,c
  8913   000B04  C09E  F01B         	movff	efgtoa@w,pad@p
  8914   000B08  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  8915   000B0C  EC47  F022         	call	_pad	;wreg free
  8916   000B10                     l1319:
  8917   000B10  0012               	return		;funcret
  8918   000B12                     __end_of_efgtoa:
  8919                           	callstack 0
  8920                           
  8921 ;; *************** function _strcpy *****************
  8922 ;; Defined at:
  8923 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strcpy.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;  dest            2    5[COMRAM] PTR unsigned char 
  8926 ;;		 -> dbuf(80), 
  8927 ;;  src             2    7[COMRAM] PTR const unsigned char 
  8928 ;;		 -> STR_30(4), STR_27(4), 
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;  d               2    9[COMRAM] PTR unsigned char 
  8931 ;;		 -> dbuf(80), 
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  2    5[COMRAM] PTR unsigned char 
  8934 ;; Registers used:
  8935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8941 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8942 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8944 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8945 ;;Total ram usage:        6 bytes
  8946 ;; Hardware stack levels used: 1
  8947 ;; Hardware stack levels required when called: 1
  8948 ;; This function calls:
  8949 ;;		Nothing
  8950 ;; This function is called by:
  8951 ;;		_efgtoa
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           	psect	text31
  8956   0047AE                     __ptext31:
  8957                           	callstack 0
  8958   0047AE                     _strcpy:
  8959                           	callstack 24
  8960   0047AE  C006  F00A         	movff	strcpy@dest,strcpy@d
  8961   0047B2  C007  F00B         	movff	strcpy@dest+1,strcpy@d+1
  8962   0047B6                     l6264:
  8963   0047B6  C008  FFF6         	movff	strcpy@src,tblptrl
  8964   0047BA  C009  FFF7         	movff	strcpy@src+1,tblptrh
  8965   0047BE  4A08               	infsnz	strcpy@src^0,f,c
  8966   0047C0  2A09               	incf	(strcpy@src+1)^0,f,c
  8967   0047C2                     	if	0	;tblptru may be non-zero
  8968   0047C2                     	endif
  8969   0047C2                     	if	0	;tblptru may be non-zero
  8970   0047C2                     	endif
  8971   0047C2  C00A  FFD9         	movff	strcpy@d,fsr2l
  8972   0047C6  C00B  FFDA         	movff	strcpy@d+1,fsr2h
  8973   0047CA  4A0A               	infsnz	strcpy@d^0,f,c
  8974   0047CC  2A0B               	incf	(strcpy@d+1)^0,f,c
  8975   0047CE  0008               	tblrd		*
  8976   0047D0  CFF5 FFDF          	movff	tablat,indf2
  8977   0047D4  50DF               	movf	indf2,w,c
  8978   0047D6  A4D8               	btfss	status,2,c
  8979   0047D8  EFF0  F023         	goto	u7681
  8980   0047DC  EFF2  F023         	goto	u7680
  8981   0047E0                     u7681:
  8982   0047E0  EFDB  F023         	goto	l6264
  8983   0047E4                     u7680:
  8984   0047E4  0012               	return		;funcret
  8985   0047E6                     __end_of_strcpy:
  8986                           	callstack 0
  8987                           
  8988 ;; *************** function _memcpy *****************
  8989 ;; Defined at:
  8990 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\memcpy.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  d1              2    5[COMRAM] PTR void 
  8993 ;;		 -> dbuf(80), 
  8994 ;;  s1              2    7[COMRAM] PTR const void 
  8995 ;;		 -> dbuf(80), 
  8996 ;;  n               2    9[COMRAM] unsigned int 
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;  s               2   14[COMRAM] PTR const unsigned char 
  8999 ;;		 -> dbuf(80), 
  9000 ;;  d               2   12[COMRAM] PTR unsigned char 
  9001 ;;		 -> dbuf(80), 
  9002 ;;  tmp             1   11[COMRAM] unsigned char 
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  2    5[COMRAM] PTR void 
  9005 ;; Registers used:
  9006 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9012 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9013 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9015 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9016 ;;Total ram usage:       11 bytes
  9017 ;; Hardware stack levels used: 1
  9018 ;; Hardware stack levels required when called: 1
  9019 ;; This function calls:
  9020 ;;		Nothing
  9021 ;; This function is called by:
  9022 ;;		_efgtoa
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           	psect	text32
  9027   004582                     __ptext32:
  9028                           	callstack 0
  9029   004582                     _memcpy:
  9030                           	callstack 24
  9031   004582  C008  F00F         	movff	memcpy@s1,memcpy@s
  9032   004586  C009  F010         	movff	memcpy@s1+1,memcpy@s+1
  9033   00458A  C006  F00D         	movff	memcpy@d1,memcpy@d
  9034   00458E  C007  F00E         	movff	memcpy@d1+1,memcpy@d+1
  9035   004592  EFDB  F022         	goto	l6312
  9036   004596                     l6304:
  9037   004596  C00F  FFD9         	movff	memcpy@s,fsr2l
  9038   00459A  C010  FFDA         	movff	memcpy@s+1,fsr2h
  9039   00459E  50DF               	movf	indf2,w,c
  9040   0045A0  6E0C               	movwf	memcpy@tmp^0,c
  9041   0045A2  4A0F               	infsnz	memcpy@s^0,f,c
  9042   0045A4  2A10               	incf	(memcpy@s+1)^0,f,c
  9043   0045A6  C00D  FFD9         	movff	memcpy@d,fsr2l
  9044   0045AA  C00E  FFDA         	movff	memcpy@d+1,fsr2h
  9045   0045AE  C00C  FFDF         	movff	memcpy@tmp,indf2
  9046   0045B2  4A0D               	infsnz	memcpy@d^0,f,c
  9047   0045B4  2A0E               	incf	(memcpy@d+1)^0,f,c
  9048   0045B6                     l6312:
  9049   0045B6  060A               	decf	memcpy@n^0,f,c
  9050   0045B8  A0D8               	btfss	status,0,c
  9051   0045BA  060B               	decf	(memcpy@n+1)^0,f,c
  9052   0045BC  280A               	incf	memcpy@n^0,w,c
  9053   0045BE  E106               	bnz	u7801
  9054   0045C0  280B               	incf	(memcpy@n+1)^0,w,c
  9055   0045C2  A4D8               	btfss	status,2,c
  9056   0045C4  EFE6  F022         	goto	u7801
  9057   0045C8  EFE8  F022         	goto	u7800
  9058   0045CC                     u7801:
  9059   0045CC  EFCB  F022         	goto	l6304
  9060   0045D0                     u7800:
  9061   0045D0  0012               	return		;funcret
  9062   0045D2                     __end_of_memcpy:
  9063                           	callstack 0
  9064                           
  9065 ;; *************** function _labs *****************
  9066 ;; Defined at:
  9067 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\labs.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;  a               4    5[COMRAM] long 
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  4    5[COMRAM] long 
  9074 ;; Registers used:
  9075 ;;		wreg, status,2, status,0
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9081 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9083 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9084 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9085 ;;Total ram usage:        8 bytes
  9086 ;; Hardware stack levels used: 1
  9087 ;; Hardware stack levels required when called: 1
  9088 ;; This function calls:
  9089 ;;		Nothing
  9090 ;; This function is called by:
  9091 ;;		_efgtoa
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095                           	psect	text33
  9096   00452C                     __ptext33:
  9097                           	callstack 0
  9098   00452C                     _labs:
  9099                           	callstack 24
  9100   00452C  BE09               	btfsc	(labs@a+3)^0,7,c
  9101   00452E  EF9B  F022         	goto	u7691
  9102   004532  EF9D  F022         	goto	u7690
  9103   004536                     u7691:
  9104   004536  EFA7  F022         	goto	l6270
  9105   00453A                     u7690:
  9106   00453A  C006  F006         	movff	labs@a,?_labs
  9107   00453E  C007  F007         	movff	labs@a+1,?_labs+1
  9108   004542  C008  F008         	movff	labs@a+2,?_labs+2
  9109   004546  C009  F009         	movff	labs@a+3,?_labs+3
  9110   00454A  EFC0  F022         	goto	l1468
  9111   00454E                     l6270:
  9112   00454E  C006  F00A         	movff	labs@a,??_labs
  9113   004552  C007  F00B         	movff	labs@a+1,??_labs+1
  9114   004556  C008  F00C         	movff	labs@a+2,??_labs+2
  9115   00455A  C009  F00D         	movff	labs@a+3,??_labs+3
  9116   00455E  1E0A               	comf	??_labs^0,f,c
  9117   004560  1E0B               	comf	(??_labs+1)^0,f,c
  9118   004562  1E0C               	comf	(??_labs+2)^0,f,c
  9119   004564  1E0D               	comf	(??_labs+3)^0,f,c
  9120   004566  2A0A               	incf	??_labs^0,f,c
  9121   004568  0E00               	movlw	0
  9122   00456A  220B               	addwfc	(??_labs+1)^0,f,c
  9123   00456C  220C               	addwfc	(??_labs+2)^0,f,c
  9124   00456E  220D               	addwfc	(??_labs+3)^0,f,c
  9125   004570  C00A  F006         	movff	??_labs,?_labs
  9126   004574  C00B  F007         	movff	??_labs+1,?_labs+1
  9127   004578  C00C  F008         	movff	??_labs+2,?_labs+2
  9128   00457C  C00D  F009         	movff	??_labs+3,?_labs+3
  9129   004580                     l1468:
  9130   004580  0012               	return		;funcret
  9131   004582                     __end_of_labs:
  9132                           	callstack 0
  9133                           
  9134 ;; *************** function _floorf *****************
  9135 ;; Defined at:
  9136 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\floorf.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;  x               4   69[COMRAM] float 
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;  u               4    6[BANK0 ] struct .
  9141 ;;  m               4    0[BANK0 ] unsigned long 
  9142 ;;  e               2    4[BANK0 ] int 
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  4   69[COMRAM] float 
  9145 ;; Registers used:
  9146 ;;		wreg, status,2, status,0
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9153 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9154 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9155 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9156 ;;Total ram usage:       20 bytes
  9157 ;; Hardware stack levels used: 1
  9158 ;; Hardware stack levels required when called: 1
  9159 ;; This function calls:
  9160 ;;		Nothing
  9161 ;; This function is called by:
  9162 ;;		_efgtoa
  9163 ;; This function uses a non-reentrant model
  9164 ;;
  9165                           
  9166                           	psect	text34
  9167   002C3A                     __ptext34:
  9168                           	callstack 0
  9169   002C3A                     _floorf:
  9170                           	callstack 24
  9171   002C3A  C119  F066         	movff	floorf@F521,floorf@u
  9172   002C3E  C11A  F067         	movff	floorf@F521+1,floorf@u+1
  9173   002C42  C11B  F068         	movff	floorf@F521+2,floorf@u+2
  9174   002C46  C11C  F069         	movff	floorf@F521+3,floorf@u+3
  9175   002C4A  C046  F066         	movff	floorf@x,floorf@u
  9176   002C4E  C047  F067         	movff	floorf@x+1,floorf@u+1
  9177   002C52  C048  F068         	movff	floorf@x+2,floorf@u+2
  9178   002C56  C049  F069         	movff	floorf@x+3,floorf@u+3
  9179   002C5A  0E81               	movlw	129
  9180   002C5C  6E4A               	movwf	??_floorf^0,c
  9181   002C5E  0EFF               	movlw	255
  9182   002C60  6E4B               	movwf	(??_floorf+1)^0,c
  9183   002C62  C066  F04C         	movff	floorf@u,??_floorf+2
  9184   002C66  C067  F04D         	movff	floorf@u+1,??_floorf+3
  9185   002C6A  C068  F04E         	movff	floorf@u+2,??_floorf+4
  9186   002C6E  C069  F04F         	movff	floorf@u+3,??_floorf+5
  9187   002C72  0E18               	movlw	24
  9188   002C74  EF41  F016         	goto	u7700
  9189   002C78                     u7705:
  9190   002C78  90D8               	bcf	status,0,c
  9191   002C7A  324F               	rrcf	(??_floorf+5)^0,f,c
  9192   002C7C  324E               	rrcf	(??_floorf+4)^0,f,c
  9193   002C7E  324D               	rrcf	(??_floorf+3)^0,f,c
  9194   002C80  324C               	rrcf	(??_floorf+2)^0,f,c
  9195   002C82                     u7700:
  9196   002C82  2EE8               	decfsz	wreg,f,c
  9197   002C84  EF3C  F016         	goto	u7705
  9198   002C88  504C               	movf	(??_floorf+2)^0,w,c
  9199   002C8A  244A               	addwf	??_floorf^0,w,c
  9200   002C8C  0100               	movlb	0	; () banked
  9201   002C8E  6F64               	movwf	floorf@e& (0+255),b
  9202   002C90  0E00               	movlw	0
  9203   002C92  204B               	addwfc	(??_floorf+1)^0,w,c
  9204   002C94  6F65               	movwf	(floorf@e+1)& (0+255),b
  9205   002C96  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9206   002C98  EF57  F016         	goto	u7711
  9207   002C9C  5165               	movf	(floorf@e+1)& (0+255),w,b
  9208   002C9E  E109               	bnz	u7710
  9209   002CA0  0E17               	movlw	23
  9210   002CA2  5D64               	subwf	floorf@e& (0+255),w,b
  9211   002CA4  A0D8               	btfss	status,0,c
  9212   002CA6  EF57  F016         	goto	u7711
  9213   002CAA  EF59  F016         	goto	u7710
  9214   002CAE                     u7711:
  9215   002CAE  EF63  F016         	goto	l6280
  9216   002CB2                     u7710:
  9217   002CB2                     l6278:
  9218                           
  9219                           ; BSR set to: 0
  9220   002CB2  C046  F046         	movff	floorf@x,?_floorf
  9221   002CB6  C047  F047         	movff	floorf@x+1,?_floorf+1
  9222   002CBA  C048  F048         	movff	floorf@x+2,?_floorf+2
  9223   002CBE  C049  F049         	movff	floorf@x+3,?_floorf+3
  9224   002CC2  EF27  F017         	goto	l1454
  9225   002CC6                     l6280:
  9226                           
  9227                           ; BSR set to: 0
  9228   002CC6  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9229   002CC8  EF68  F016         	goto	u7721
  9230   002CCC  EF6A  F016         	goto	u7720
  9231   002CD0                     u7721:
  9232   002CD0  EFDB  F016         	goto	l6290
  9233   002CD4                     u7720:
  9234   002CD4                     
  9235                           ; BSR set to: 0
  9236   002CD4  C064  F04A         	movff	floorf@e,??_floorf
  9237   002CD8  0EFF               	movlw	255
  9238   002CDA  6E4B               	movwf	(??_floorf+1)^0,c
  9239   002CDC  0EFF               	movlw	255
  9240   002CDE  6E4C               	movwf	(??_floorf+2)^0,c
  9241   002CE0  0E7F               	movlw	127
  9242   002CE2  6E4D               	movwf	(??_floorf+3)^0,c
  9243   002CE4  0E00               	movlw	0
  9244   002CE6  6E4E               	movwf	(??_floorf+4)^0,c
  9245   002CE8                     u7735:
  9246   002CE8  664A               	tstfsz	??_floorf^0,c
  9247   002CEA  EF79  F016         	goto	u7736
  9248   002CEE  EF81  F016         	goto	u7737
  9249   002CF2                     u7736:
  9250   002CF2  344E               	rlcf	(??_floorf+4)^0,w,c
  9251   002CF4  324E               	rrcf	(??_floorf+4)^0,f,c
  9252   002CF6  324D               	rrcf	(??_floorf+3)^0,f,c
  9253   002CF8  324C               	rrcf	(??_floorf+2)^0,f,c
  9254   002CFA  324B               	rrcf	(??_floorf+1)^0,f,c
  9255   002CFC  2E4A               	decfsz	??_floorf^0,f,c
  9256   002CFE  EF74  F016         	goto	u7735
  9257   002D02                     u7737:
  9258   002D02  C04B  F060         	movff	??_floorf+1,floorf@m
  9259   002D06  C04C  F061         	movff	??_floorf+2,floorf@m+1
  9260   002D0A  C04D  F062         	movff	??_floorf+3,floorf@m+2
  9261   002D0E  C04E  F063         	movff	??_floorf+4,floorf@m+3
  9262   002D12  0100               	movlb	0	; () banked
  9263   002D14  5160               	movf	floorf@m& (0+255),w,b
  9264   002D16  1566               	andwf	floorf@u& (0+255),w,b
  9265   002D18  6E4A               	movwf	??_floorf^0,c
  9266   002D1A  5161               	movf	(floorf@m+1)& (0+255),w,b
  9267   002D1C  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9268   002D1E  6E4B               	movwf	(??_floorf+1)^0,c
  9269   002D20  5162               	movf	(floorf@m+2)& (0+255),w,b
  9270   002D22  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9271   002D24  6E4C               	movwf	(??_floorf+2)^0,c
  9272   002D26  5163               	movf	(floorf@m+3)& (0+255),w,b
  9273   002D28  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9274   002D2A  6E4D               	movwf	(??_floorf+3)^0,c
  9275   002D2C  504A               	movf	??_floorf^0,w,c
  9276   002D2E  104B               	iorwf	(??_floorf+1)^0,w,c
  9277   002D30  104C               	iorwf	(??_floorf+2)^0,w,c
  9278   002D32  104D               	iorwf	(??_floorf+3)^0,w,c
  9279   002D34  A4D8               	btfss	status,2,c
  9280   002D36  EF9F  F016         	goto	u7741
  9281   002D3A  EFA1  F016         	goto	u7740
  9282   002D3E                     u7741:
  9283   002D3E  EFA3  F016         	goto	l6286
  9284   002D42                     u7740:
  9285   002D42  EF59  F016         	goto	l6278
  9286   002D46                     l6286:
  9287                           
  9288                           ; BSR set to: 0
  9289   002D46  C066  F04A         	movff	floorf@u,??_floorf
  9290   002D4A  C067  F04B         	movff	floorf@u+1,??_floorf+1
  9291   002D4E  C068  F04C         	movff	floorf@u+2,??_floorf+2
  9292   002D52  C069  F04D         	movff	floorf@u+3,??_floorf+3
  9293   002D56  0E20               	movlw	32
  9294   002D58  EFB3  F016         	goto	u7750
  9295   002D5C                     u7755:
  9296   002D5C  90D8               	bcf	status,0,c
  9297   002D5E  324D               	rrcf	(??_floorf+3)^0,f,c
  9298   002D60  324C               	rrcf	(??_floorf+2)^0,f,c
  9299   002D62  324B               	rrcf	(??_floorf+1)^0,f,c
  9300   002D64  324A               	rrcf	??_floorf^0,f,c
  9301   002D66                     u7750:
  9302   002D66  2EE8               	decfsz	wreg,f,c
  9303   002D68  EFAE  F016         	goto	u7755
  9304   002D6C  504A               	movf	??_floorf^0,w,c
  9305   002D6E  104B               	iorwf	(??_floorf+1)^0,w,c
  9306   002D70  104C               	iorwf	(??_floorf+2)^0,w,c
  9307   002D72  104D               	iorwf	(??_floorf+3)^0,w,c
  9308   002D74  B4D8               	btfsc	status,2,c
  9309   002D76  EFBF  F016         	goto	u7761
  9310   002D7A  EFC1  F016         	goto	u7760
  9311   002D7E                     u7761:
  9312   002D7E  EFC9  F016         	goto	l1457
  9313   002D82                     u7760:
  9314   002D82                     
  9315                           ; BSR set to: 0
  9316   002D82  5160               	movf	floorf@m& (0+255),w,b
  9317   002D84  2766               	addwf	floorf@u& (0+255),f,b
  9318   002D86  5161               	movf	(floorf@m+1)& (0+255),w,b
  9319   002D88  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  9320   002D8A  5162               	movf	(floorf@m+2)& (0+255),w,b
  9321   002D8C  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  9322   002D8E  5163               	movf	(floorf@m+3)& (0+255),w,b
  9323   002D90  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  9324   002D92                     l1457:
  9325                           
  9326                           ; BSR set to: 0
  9327   002D92  1D60               	comf	floorf@m& (0+255),w,b
  9328   002D94  6E4A               	movwf	??_floorf^0,c
  9329   002D96  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9330   002D98  6E4B               	movwf	(??_floorf+1)^0,c
  9331   002D9A  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9332   002D9C  6E4C               	movwf	(??_floorf+2)^0,c
  9333   002D9E  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9334   002DA0  6E4D               	movwf	(??_floorf+3)^0,c
  9335   002DA2  504A               	movf	??_floorf^0,w,c
  9336   002DA4  1766               	andwf	floorf@u& (0+255),f,b
  9337   002DA6  504B               	movf	(??_floorf+1)^0,w,c
  9338   002DA8  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9339   002DAA  504C               	movf	(??_floorf+2)^0,w,c
  9340   002DAC  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9341   002DAE  504D               	movf	(??_floorf+3)^0,w,c
  9342   002DB0  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9343   002DB2  EF1F  F017         	goto	l6298
  9344   002DB6                     l6290:
  9345                           
  9346                           ; BSR set to: 0
  9347   002DB6  C066  F04A         	movff	floorf@u,??_floorf
  9348   002DBA  C067  F04B         	movff	floorf@u+1,??_floorf+1
  9349   002DBE  C068  F04C         	movff	floorf@u+2,??_floorf+2
  9350   002DC2  C069  F04D         	movff	floorf@u+3,??_floorf+3
  9351   002DC6  0E20               	movlw	32
  9352   002DC8  EFEB  F016         	goto	u7770
  9353   002DCC                     u7775:
  9354   002DCC  90D8               	bcf	status,0,c
  9355   002DCE  324D               	rrcf	(??_floorf+3)^0,f,c
  9356   002DD0  324C               	rrcf	(??_floorf+2)^0,f,c
  9357   002DD2  324B               	rrcf	(??_floorf+1)^0,f,c
  9358   002DD4  324A               	rrcf	??_floorf^0,f,c
  9359   002DD6                     u7770:
  9360   002DD6  2EE8               	decfsz	wreg,f,c
  9361   002DD8  EFE6  F016         	goto	u7775
  9362   002DDC  504A               	movf	??_floorf^0,w,c
  9363   002DDE  104B               	iorwf	(??_floorf+1)^0,w,c
  9364   002DE0  104C               	iorwf	(??_floorf+2)^0,w,c
  9365   002DE2  104D               	iorwf	(??_floorf+3)^0,w,c
  9366   002DE4  A4D8               	btfss	status,2,c
  9367   002DE6  EFF7  F016         	goto	u7781
  9368   002DEA  EFF9  F016         	goto	u7780
  9369   002DEE                     u7781:
  9370   002DEE  EF03  F017         	goto	l6294
  9371   002DF2                     u7780:
  9372   002DF2                     
  9373                           ; BSR set to: 0
  9374   002DF2  0E00               	movlw	0
  9375   002DF4  6F66               	movwf	floorf@u& (0+255),b
  9376   002DF6  0E00               	movlw	0
  9377   002DF8  6F67               	movwf	(floorf@u+1)& (0+255),b
  9378   002DFA  0E00               	movlw	0
  9379   002DFC  6F68               	movwf	(floorf@u+2)& (0+255),b
  9380   002DFE  0E00               	movlw	0
  9381   002E00  6F69               	movwf	(floorf@u+3)& (0+255),b
  9382   002E02  EF1F  F017         	goto	l6298
  9383   002E06                     l6294:
  9384                           
  9385                           ; BSR set to: 0
  9386   002E06  90D8               	bcf	status,0,c
  9387   002E08  3566               	rlcf	floorf@u& (0+255),w,b
  9388   002E0A  6E4A               	movwf	??_floorf^0,c
  9389   002E0C  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  9390   002E0E  6E4B               	movwf	(??_floorf+1)^0,c
  9391   002E10  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  9392   002E12  6E4C               	movwf	(??_floorf+2)^0,c
  9393   002E14  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  9394   002E16  6E4D               	movwf	(??_floorf+3)^0,c
  9395   002E18  504A               	movf	??_floorf^0,w,c
  9396   002E1A  104B               	iorwf	(??_floorf+1)^0,w,c
  9397   002E1C  104C               	iorwf	(??_floorf+2)^0,w,c
  9398   002E1E  104D               	iorwf	(??_floorf+3)^0,w,c
  9399   002E20  B4D8               	btfsc	status,2,c
  9400   002E22  EF15  F017         	goto	u7791
  9401   002E26  EF17  F017         	goto	u7790
  9402   002E2A                     u7791:
  9403   002E2A  EF1F  F017         	goto	l6298
  9404   002E2E                     u7790:
  9405   002E2E                     
  9406                           ; BSR set to: 0
  9407   002E2E  0E00               	movlw	0
  9408   002E30  6F66               	movwf	floorf@u& (0+255),b
  9409   002E32  0E00               	movlw	0
  9410   002E34  6F67               	movwf	(floorf@u+1)& (0+255),b
  9411   002E36  0E80               	movlw	128
  9412   002E38  6F68               	movwf	(floorf@u+2)& (0+255),b
  9413   002E3A  0EBF               	movlw	191
  9414   002E3C  6F69               	movwf	(floorf@u+3)& (0+255),b
  9415   002E3E                     l6298:
  9416                           
  9417                           ; BSR set to: 0
  9418   002E3E  C066  F046         	movff	floorf@u,?_floorf
  9419   002E42  C067  F047         	movff	floorf@u+1,?_floorf+1
  9420   002E46  C068  F048         	movff	floorf@u+2,?_floorf+2
  9421   002E4A  C069  F049         	movff	floorf@u+3,?_floorf+3
  9422   002E4E                     l1454:
  9423                           
  9424                           ; BSR set to: 0
  9425   002E4E  0012               	return		;funcret
  9426   002E50                     __end_of_floorf:
  9427                           	callstack 0
  9428                           
  9429 ;; *************** function ___fpclassifyf *****************
  9430 ;; Defined at:
  9431 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__fpclassifyf.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;  x               4    5[COMRAM] float 
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;  u               4   15[COMRAM] struct .
  9436 ;;  e               2   13[COMRAM] int 
  9437 ;; Return value:  Size  Location     Type
  9438 ;;                  2    5[COMRAM] int 
  9439 ;; Registers used:
  9440 ;;		wreg, status,2, status,0
  9441 ;; Tracked objects:
  9442 ;;		On entry : 0/0
  9443 ;;		On exit  : 0/0
  9444 ;;		Unchanged: 0/0
  9445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9447 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9448 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9449 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9450 ;;Total ram usage:       14 bytes
  9451 ;; Hardware stack levels used: 1
  9452 ;; Hardware stack levels required when called: 1
  9453 ;; This function calls:
  9454 ;;		Nothing
  9455 ;; This function is called by:
  9456 ;;		_efgtoa
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460                           	psect	text35
  9461   003E6E                     __ptext35:
  9462                           	callstack 0
  9463   003E6E                     ___fpclassifyf:
  9464                           	callstack 24
  9465   003E6E  C11D  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
  9466   003E72  C11E  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  9467   003E76  C11F  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  9468   003E7A  C120  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  9469   003E7E  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  9470   003E82  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9471   003E86  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9472   003E8A  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9473   003E8E  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  9474   003E92  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9475   003E96  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9476   003E9A  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9477   003E9E  0E18               	movlw	24
  9478   003EA0  EF57  F01F         	goto	u7610
  9479   003EA4                     u7615:
  9480   003EA4  90D8               	bcf	status,0,c
  9481   003EA6  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  9482   003EA8  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  9483   003EAA  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  9484   003EAC  320A               	rrcf	??___fpclassifyf^0,f,c
  9485   003EAE                     u7610:
  9486   003EAE  2EE8               	decfsz	wreg,f,c
  9487   003EB0  EF52  F01F         	goto	u7615
  9488   003EB4  500A               	movf	??___fpclassifyf^0,w,c
  9489   003EB6  6E0E               	movwf	___fpclassifyf@e^0,c
  9490   003EB8  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  9491   003EBA  500E               	movf	___fpclassifyf@e^0,w,c
  9492   003EBC  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9493   003EBE  A4D8               	btfss	status,2,c
  9494   003EC0  EF64  F01F         	goto	u7621
  9495   003EC4  EF66  F01F         	goto	u7620
  9496   003EC8                     u7621:
  9497   003EC8  EF86  F01F         	goto	l6252
  9498   003ECC                     u7620:
  9499   003ECC  90D8               	bcf	status,0,c
  9500   003ECE  3410               	rlcf	___fpclassifyf@u^0,w,c
  9501   003ED0  6E0A               	movwf	??___fpclassifyf^0,c
  9502   003ED2  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9503   003ED4  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  9504   003ED6  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9505   003ED8  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  9506   003EDA  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9507   003EDC  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  9508   003EDE  500A               	movf	??___fpclassifyf^0,w,c
  9509   003EE0  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  9510   003EE2  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  9511   003EE4  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  9512   003EE6  A4D8               	btfss	status,2,c
  9513   003EE8  EF78  F01F         	goto	u7631
  9514   003EEC  EF7A  F01F         	goto	u7630
  9515   003EF0                     u7631:
  9516   003EF0  EF80  F01F         	goto	l6248
  9517   003EF4                     u7630:
  9518   003EF4  0E00               	movlw	0
  9519   003EF6  6E07               	movwf	(?___fpclassifyf+1)^0,c
  9520   003EF8  0E02               	movlw	2
  9521   003EFA  6E06               	movwf	?___fpclassifyf^0,c
  9522   003EFC  EFB5  F01F         	goto	l1440
  9523   003F00                     l6248:
  9524   003F00  0E00               	movlw	0
  9525   003F02  6E07               	movwf	(?___fpclassifyf+1)^0,c
  9526   003F04  0E03               	movlw	3
  9527   003F06  6E06               	movwf	?___fpclassifyf^0,c
  9528   003F08  EFB5  F01F         	goto	l1440
  9529   003F0C                     l6252:
  9530   003F0C  280E               	incf	___fpclassifyf@e^0,w,c
  9531   003F0E  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9532   003F10  A4D8               	btfss	status,2,c
  9533   003F12  EF8D  F01F         	goto	u7641
  9534   003F16  EF8F  F01F         	goto	u7640
  9535   003F1A                     u7641:
  9536   003F1A  EFB1  F01F         	goto	l6258
  9537   003F1E                     u7640:
  9538   003F1E  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  9539   003F22  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9540   003F26  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9541   003F2A  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9542   003F2E  0E09               	movlw	9
  9543   003F30                     u7655:
  9544   003F30  90D8               	bcf	status,0,c
  9545   003F32  360A               	rlcf	??___fpclassifyf^0,f,c
  9546   003F34  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  9547   003F36  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  9548   003F38  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  9549   003F3A  2EE8               	decfsz	wreg,f,c
  9550   003F3C  EF98  F01F         	goto	u7655
  9551   003F40  500A               	movf	??___fpclassifyf^0,w,c
  9552   003F42  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  9553   003F44  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  9554   003F46  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  9555   003F48  B4D8               	btfsc	status,2,c
  9556   003F4A  EFA9  F01F         	goto	u7661
  9557   003F4E  EFAC  F01F         	goto	u7660
  9558   003F52                     u7661:
  9559   003F52  0E01               	movlw	1
  9560   003F54  EFAD  F01F         	goto	u7670
  9561   003F58                     u7660:
  9562   003F58  0E00               	movlw	0
  9563   003F5A                     u7670:
  9564   003F5A  6E06               	movwf	?___fpclassifyf^0,c
  9565   003F5C  6A07               	clrf	(?___fpclassifyf+1)^0,c
  9566   003F5E  EFB5  F01F         	goto	l1440
  9567   003F62                     l6258:
  9568   003F62  0E00               	movlw	0
  9569   003F64  6E07               	movwf	(?___fpclassifyf+1)^0,c
  9570   003F66  0E04               	movlw	4
  9571   003F68  6E06               	movwf	?___fpclassifyf^0,c
  9572   003F6A                     l1440:
  9573   003F6A  0012               	return		;funcret
  9574   003F6C                     __end_of___fpclassifyf:
  9575                           	callstack 0
  9576                           
  9577 ;; *************** function ___fltol *****************
  9578 ;; Defined at:
  9579 ;;		line 43 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fltol.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;  f1              4    4[BANK0 ] int 
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;  exp1            1   82[COMRAM] unsigned char 
  9584 ;;  sign1           1   81[COMRAM] unsigned char 
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  4    4[BANK0 ] long 
  9587 ;; Registers used:
  9588 ;;		wreg, status,2, status,0
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9594 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9595 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9596 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9597 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9598 ;;Total ram usage:       10 bytes
  9599 ;; Hardware stack levels used: 1
  9600 ;; Hardware stack levels required when called: 1
  9601 ;; This function calls:
  9602 ;;		Nothing
  9603 ;; This function is called by:
  9604 ;;		_runDAC
  9605 ;;		_efgtoa
  9606 ;;		___rem_pio2f
  9607 ;; This function uses a non-reentrant model
  9608 ;;
  9609                           
  9610                           	psect	text36
  9611   003C62                     __ptext36:
  9612                           	callstack 0
  9613   003C62                     ___fltol:
  9614                           	callstack 24
  9615   003C62  0100               	movlb	0	; () banked
  9616   003C64  3566               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9617   003C66  3567               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9618   003C68  6E53               	movwf	___fltol@exp1^0,c
  9619   003C6A  5053               	movf	___fltol@exp1^0,w,c
  9620   003C6C  A4D8               	btfss	status,2,c
  9621   003C6E  EF3B  F01E         	goto	u7491
  9622   003C72  EF3D  F01E         	goto	u7490
  9623   003C76                     u7491:
  9624   003C76  EF47  F01E         	goto	l6182
  9625   003C7A                     u7490:
  9626   003C7A                     l6178:
  9627                           
  9628                           ; BSR set to: 0
  9629   003C7A  0E00               	movlw	0
  9630   003C7C  6F64               	movwf	?___fltol& (0+255),b
  9631   003C7E  0E00               	movlw	0
  9632   003C80  6F65               	movwf	(?___fltol+1)& (0+255),b
  9633   003C82  0E00               	movlw	0
  9634   003C84  6F66               	movwf	(?___fltol+2)& (0+255),b
  9635   003C86  0E00               	movlw	0
  9636   003C88  6F67               	movwf	(?___fltol+3)& (0+255),b
  9637   003C8A  EFB4  F01E         	goto	l874
  9638   003C8E                     l6182:
  9639                           
  9640                           ; BSR set to: 0
  9641   003C8E  C064  F068         	movff	___fltol@f1,??___fltol
  9642   003C92  C065  F069         	movff	___fltol@f1+1,??___fltol+1
  9643   003C96  C066  F06A         	movff	___fltol@f1+2,??___fltol+2
  9644   003C9A  C067  F06B         	movff	___fltol@f1+3,??___fltol+3
  9645   003C9E  0E20               	movlw	32
  9646   003CA0  EF57  F01E         	goto	u7500
  9647   003CA4                     u7505:
  9648   003CA4  90D8               	bcf	status,0,c
  9649   003CA6  336B               	rrcf	(??___fltol+3)& (0+255),f,b
  9650   003CA8  336A               	rrcf	(??___fltol+2)& (0+255),f,b
  9651   003CAA  3369               	rrcf	(??___fltol+1)& (0+255),f,b
  9652   003CAC  3368               	rrcf	??___fltol& (0+255),f,b
  9653   003CAE                     u7500:
  9654   003CAE  2EE8               	decfsz	wreg,f,c
  9655   003CB0  EF52  F01E         	goto	u7505
  9656   003CB4  5168               	movf	??___fltol& (0+255),w,b
  9657   003CB6  6E52               	movwf	___fltol@sign1^0,c
  9658   003CB8                     
  9659                           ; BSR set to: 0
  9660   003CB8  8F66               	bsf	(___fltol@f1+2)& (0+255),7,b
  9661   003CBA                     
  9662                           ; BSR set to: 0
  9663   003CBA  0EFF               	movlw	255
  9664   003CBC  1764               	andwf	___fltol@f1& (0+255),f,b
  9665   003CBE  0EFF               	movlw	255
  9666   003CC0  1765               	andwf	(___fltol@f1+1)& (0+255),f,b
  9667   003CC2  0EFF               	movlw	255
  9668   003CC4  1766               	andwf	(___fltol@f1+2)& (0+255),f,b
  9669   003CC6  0E00               	movlw	0
  9670   003CC8  1767               	andwf	(___fltol@f1+3)& (0+255),f,b
  9671   003CCA                     
  9672                           ; BSR set to: 0
  9673   003CCA  0E96               	movlw	150
  9674   003CCC  5E53               	subwf	___fltol@exp1^0,f,c
  9675   003CCE                     
  9676                           ; BSR set to: 0
  9677   003CCE  BE53               	btfsc	___fltol@exp1^0,7,c
  9678   003CD0  EF6E  F01E         	goto	u7510
  9679   003CD4  EF6C  F01E         	goto	u7511
  9680   003CD8                     u7511:
  9681   003CD8  EF84  F01E         	goto	l6202
  9682   003CDC                     u7510:
  9683   003CDC                     
  9684                           ; BSR set to: 0
  9685   003CDC  5053               	movf	___fltol@exp1^0,w,c
  9686   003CDE  0A80               	xorlw	128
  9687   003CE0  0F97               	addlw	151
  9688   003CE2  B0D8               	btfsc	status,0,c
  9689   003CE4  EF76  F01E         	goto	u7521
  9690   003CE8  EF78  F01E         	goto	u7520
  9691   003CEC                     u7521:
  9692   003CEC  EF7A  F01E         	goto	l6198
  9693   003CF0                     u7520:
  9694   003CF0  EF3D  F01E         	goto	l6178
  9695   003CF4                     l6198:
  9696                           
  9697                           ; BSR set to: 0
  9698   003CF4  90D8               	bcf	status,0,c
  9699   003CF6  3367               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9700   003CF8  3366               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9701   003CFA  3365               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9702   003CFC  3364               	rrcf	___fltol@f1& (0+255),f,b
  9703   003CFE                     
  9704                           ; BSR set to: 0
  9705   003CFE  3E53               	incfsz	___fltol@exp1^0,f,c
  9706   003D00  EF7A  F01E         	goto	l6198
  9707   003D04  EF9C  F01E         	goto	l6212
  9708   003D08                     l6202:
  9709                           
  9710                           ; BSR set to: 0
  9711   003D08  0E1F               	movlw	31
  9712   003D0A  6453               	cpfsgt	___fltol@exp1^0,c
  9713   003D0C  EF8A  F01E         	goto	u7531
  9714   003D10  EF8C  F01E         	goto	u7530
  9715   003D14                     u7531:
  9716   003D14  EF94  F01E         	goto	l6210
  9717   003D18                     u7530:
  9718   003D18  EF3D  F01E         	goto	l6178
  9719   003D1C                     l6208:
  9720                           
  9721                           ; BSR set to: 0
  9722   003D1C  90D8               	bcf	status,0,c
  9723   003D1E  3764               	rlcf	___fltol@f1& (0+255),f,b
  9724   003D20  3765               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9725   003D22  3766               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9726   003D24  3767               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9727   003D26  0653               	decf	___fltol@exp1^0,f,c
  9728   003D28                     l6210:
  9729                           
  9730                           ; BSR set to: 0
  9731   003D28  5053               	movf	___fltol@exp1^0,w,c
  9732   003D2A  A4D8               	btfss	status,2,c
  9733   003D2C  EF9A  F01E         	goto	u7541
  9734   003D30  EF9C  F01E         	goto	u7540
  9735   003D34                     u7541:
  9736   003D34  EF8E  F01E         	goto	l6208
  9737   003D38                     u7540:
  9738   003D38                     l6212:
  9739                           
  9740                           ; BSR set to: 0
  9741   003D38  5052               	movf	___fltol@sign1^0,w,c
  9742   003D3A  B4D8               	btfsc	status,2,c
  9743   003D3C  EFA2  F01E         	goto	u7551
  9744   003D40  EFA4  F01E         	goto	u7550
  9745   003D44                     u7551:
  9746   003D44  EFAC  F01E         	goto	l6216
  9747   003D48                     u7550:
  9748   003D48                     
  9749                           ; BSR set to: 0
  9750   003D48  1F67               	comf	(___fltol@f1+3)& (0+255),f,b
  9751   003D4A  1F66               	comf	(___fltol@f1+2)& (0+255),f,b
  9752   003D4C  1F65               	comf	(___fltol@f1+1)& (0+255),f,b
  9753   003D4E  6D64               	negf	___fltol@f1& (0+255),b
  9754   003D50  0E00               	movlw	0
  9755   003D52  2365               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9756   003D54  2366               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9757   003D56  2367               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9758   003D58                     l6216:
  9759                           
  9760                           ; BSR set to: 0
  9761   003D58  C064  F064         	movff	___fltol@f1,?___fltol
  9762   003D5C  C065  F065         	movff	___fltol@f1+1,?___fltol+1
  9763   003D60  C066  F066         	movff	___fltol@f1+2,?___fltol+2
  9764   003D64  C067  F067         	movff	___fltol@f1+3,?___fltol+3
  9765   003D68                     l874:
  9766                           
  9767                           ; BSR set to: 0
  9768   003D68  0012               	return		;funcret
  9769   003D6A                     __end_of___fltol:
  9770                           	callstack 0
  9771                           
  9772 ;; *************** function ___flsub *****************
  9773 ;; Defined at:
  9774 ;;		line 245 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  b               4    4[BANK0 ] long 
  9777 ;;  a               4    8[BANK0 ] long 
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;		None
  9780 ;; Return value:  Size  Location     Type
  9781 ;;                  4    4[BANK0 ] long 
  9782 ;; Registers used:
  9783 ;;		wreg, status,2, status,0, cstack
  9784 ;; Tracked objects:
  9785 ;;		On entry : 0/0
  9786 ;;		On exit  : 0/0
  9787 ;;		Unchanged: 0/0
  9788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9789 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9792 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9793 ;;Total ram usage:        8 bytes
  9794 ;; Hardware stack levels used: 1
  9795 ;; Hardware stack levels required when called: 2
  9796 ;; This function calls:
  9797 ;;		___fladd
  9798 ;; This function is called by:
  9799 ;;		_efgtoa
  9800 ;;		___rem_pio2f
  9801 ;; This function uses a non-reentrant model
  9802 ;;
  9803                           
  9804                           	psect	text37
  9805   004664                     __ptext37:
  9806                           	callstack 0
  9807   004664                     ___flsub:
  9808                           	callstack 23
  9809   004664  0E00               	movlw	0
  9810   004666  0100               	movlb	0	; () banked
  9811   004668  1B68               	xorwf	___flsub@a& (0+255),f,b
  9812   00466A  0E00               	movlw	0
  9813   00466C  1B69               	xorwf	(___flsub@a+1)& (0+255),f,b
  9814   00466E  0E00               	movlw	0
  9815   004670  1B6A               	xorwf	(___flsub@a+2)& (0+255),f,b
  9816   004672  0E80               	movlw	128
  9817   004674  1B6B               	xorwf	(___flsub@a+3)& (0+255),f,b
  9818   004676                     
  9819                           ; BSR set to: 0
  9820   004676  C064  F046         	movff	___flsub@b,___fladd@b
  9821   00467A  C065  F047         	movff	___flsub@b+1,___fladd@b+1
  9822   00467E  C066  F048         	movff	___flsub@b+2,___fladd@b+2
  9823   004682  C067  F049         	movff	___flsub@b+3,___fladd@b+3
  9824   004686  C068  F04A         	movff	___flsub@a,___fladd@a
  9825   00468A  C069  F04B         	movff	___flsub@a+1,___fladd@a+1
  9826   00468E  C06A  F04C         	movff	___flsub@a+2,___fladd@a+2
  9827   004692  C06B  F04D         	movff	___flsub@a+3,___fladd@a+3
  9828   004696  EC0E  F008         	call	___fladd	;wreg free
  9829   00469A  C046  F064         	movff	?___fladd,?___flsub
  9830   00469E  C047  F065         	movff	?___fladd+1,?___flsub+1
  9831   0046A2  C048  F066         	movff	?___fladd+2,?___flsub+2
  9832   0046A6  C049  F067         	movff	?___fladd+3,?___flsub+3
  9833   0046AA  0012               	return		;funcret
  9834   0046AC                     __end_of___flsub:
  9835                           	callstack 0
  9836                           
  9837 ;; *************** function ___fladd *****************
  9838 ;; Defined at:
  9839 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;  b               4   69[COMRAM] long 
  9842 ;;  a               4   73[COMRAM] long 
  9843 ;; Auto vars:     Size  Location     Type
  9844 ;;  grs             1    3[BANK0 ] unsigned char 
  9845 ;;  bexp            1    2[BANK0 ] unsigned char 
  9846 ;;  aexp            1    1[BANK0 ] unsigned char 
  9847 ;;  signs           1    0[BANK0 ] unsigned char 
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  4   69[COMRAM] unsigned char 
  9850 ;; Registers used:
  9851 ;;		wreg, status,2, status,0
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9857 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9858 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9859 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9860 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9861 ;;Total ram usage:       16 bytes
  9862 ;; Hardware stack levels used: 1
  9863 ;; Hardware stack levels required when called: 1
  9864 ;; This function calls:
  9865 ;;		Nothing
  9866 ;; This function is called by:
  9867 ;;		_runDAC
  9868 ;;		___flsub
  9869 ;;		_efgtoa
  9870 ;;		_sinf
  9871 ;;		___cosdf
  9872 ;;		___rem_pio2f
  9873 ;;		___sindf
  9874 ;; This function uses a non-reentrant model
  9875 ;;
  9876                           
  9877                           	psect	text38
  9878   00101C                     __ptext38:
  9879                           	callstack 0
  9880   00101C                     ___fladd:
  9881                           	callstack 23
  9882   00101C  5049               	movf	(___fladd@b+3)^0,w,c
  9883   00101E  0B80               	andlw	128
  9884   001020  0100               	movlb	0	; () banked
  9885   001022  6F60               	movwf	___fladd@signs& (0+255),b
  9886   001024  5049               	movf	(___fladd@b+3)^0,w,c
  9887   001026  2449               	addwf	(___fladd@b+3)^0,w,c
  9888   001028  6F62               	movwf	___fladd@bexp& (0+255),b
  9889   00102A                     
  9890                           ; BSR set to: 0
  9891   00102A  AE48               	btfss	(___fladd@b+2)^0,7,c
  9892   00102C  EF1A  F008         	goto	u6461
  9893   001030  EF1C  F008         	goto	u6460
  9894   001034                     u6461:
  9895   001034  EF1D  F008         	goto	l5566
  9896   001038                     u6460:
  9897   001038                     
  9898                           ; BSR set to: 0
  9899   001038  8162               	bsf	___fladd@bexp& (0+255),0,b
  9900   00103A                     l5566:
  9901                           
  9902                           ; BSR set to: 0
  9903   00103A  5162               	movf	___fladd@bexp& (0+255),w,b
  9904   00103C  B4D8               	btfsc	status,2,c
  9905   00103E  EF23  F008         	goto	u6471
  9906   001042  EF25  F008         	goto	u6470
  9907   001046                     u6471:
  9908   001046  EF3A  F008         	goto	l5576
  9909   00104A                     u6470:
  9910   00104A                     
  9911                           ; BSR set to: 0
  9912   00104A  2962               	incf	___fladd@bexp& (0+255),w,b
  9913   00104C  A4D8               	btfss	status,2,c
  9914   00104E  EF2B  F008         	goto	u6481
  9915   001052  EF2D  F008         	goto	u6480
  9916   001056                     u6481:
  9917   001056  EF35  F008         	goto	l5572
  9918   00105A                     u6480:
  9919   00105A                     
  9920                           ; BSR set to: 0
  9921   00105A  0E00               	movlw	0
  9922   00105C  6E46               	movwf	___fladd@b^0,c
  9923   00105E  0E00               	movlw	0
  9924   001060  6E47               	movwf	(___fladd@b+1)^0,c
  9925   001062  0E00               	movlw	0
  9926   001064  6E48               	movwf	(___fladd@b+2)^0,c
  9927   001066  0E00               	movlw	0
  9928   001068  6E49               	movwf	(___fladd@b+3)^0,c
  9929   00106A                     l5572:
  9930                           
  9931                           ; BSR set to: 0
  9932   00106A  8E48               	bsf	(___fladd@b+2)^0,7,c
  9933   00106C                     
  9934                           ; BSR set to: 0
  9935   00106C  0E00               	movlw	0
  9936   00106E  6E49               	movwf	(___fladd@b+3)^0,c
  9937   001070  EF42  F008         	goto	l5578
  9938   001074                     l5576:
  9939                           
  9940                           ; BSR set to: 0
  9941   001074  0E00               	movlw	0
  9942   001076  6E46               	movwf	___fladd@b^0,c
  9943   001078  0E00               	movlw	0
  9944   00107A  6E47               	movwf	(___fladd@b+1)^0,c
  9945   00107C  0E00               	movlw	0
  9946   00107E  6E48               	movwf	(___fladd@b+2)^0,c
  9947   001080  0E00               	movlw	0
  9948   001082  6E49               	movwf	(___fladd@b+3)^0,c
  9949   001084                     l5578:
  9950                           
  9951                           ; BSR set to: 0
  9952   001084  504D               	movf	(___fladd@a+3)^0,w,c
  9953   001086  0B80               	andlw	128
  9954   001088  6F61               	movwf	___fladd@aexp& (0+255),b
  9955   00108A                     
  9956                           ; BSR set to: 0
  9957   00108A  5160               	movf	___fladd@signs& (0+255),w,b
  9958   00108C  1961               	xorwf	___fladd@aexp& (0+255),w,b
  9959   00108E  B4D8               	btfsc	status,2,c
  9960   001090  EF4C  F008         	goto	u6491
  9961   001094  EF4E  F008         	goto	u6490
  9962   001098                     u6491:
  9963   001098  EF4F  F008         	goto	l5584
  9964   00109C                     u6490:
  9965   00109C                     
  9966                           ; BSR set to: 0
  9967   00109C  8D60               	bsf	___fladd@signs& (0+255),6,b
  9968   00109E                     l5584:
  9969                           
  9970                           ; BSR set to: 0
  9971   00109E  504D               	movf	(___fladd@a+3)^0,w,c
  9972   0010A0  244D               	addwf	(___fladd@a+3)^0,w,c
  9973   0010A2  6F61               	movwf	___fladd@aexp& (0+255),b
  9974   0010A4                     
  9975                           ; BSR set to: 0
  9976   0010A4  AE4C               	btfss	(___fladd@a+2)^0,7,c
  9977   0010A6  EF57  F008         	goto	u6501
  9978   0010AA  EF59  F008         	goto	u6500
  9979   0010AE                     u6501:
  9980   0010AE  EF5A  F008         	goto	l5590
  9981   0010B2                     u6500:
  9982   0010B2                     
  9983                           ; BSR set to: 0
  9984   0010B2  8161               	bsf	___fladd@aexp& (0+255),0,b
  9985   0010B4                     l5590:
  9986                           
  9987                           ; BSR set to: 0
  9988   0010B4  5161               	movf	___fladd@aexp& (0+255),w,b
  9989   0010B6  B4D8               	btfsc	status,2,c
  9990   0010B8  EF60  F008         	goto	u6511
  9991   0010BC  EF62  F008         	goto	u6510
  9992   0010C0                     u6511:
  9993   0010C0  EF77  F008         	goto	l5600
  9994   0010C4                     u6510:
  9995   0010C4                     
  9996                           ; BSR set to: 0
  9997   0010C4  2961               	incf	___fladd@aexp& (0+255),w,b
  9998   0010C6  A4D8               	btfss	status,2,c
  9999   0010C8  EF68  F008         	goto	u6521
 10000   0010CC  EF6A  F008         	goto	u6520
 10001   0010D0                     u6521:
 10002   0010D0  EF72  F008         	goto	l5596
 10003   0010D4                     u6520:
 10004   0010D4                     
 10005                           ; BSR set to: 0
 10006   0010D4  0E00               	movlw	0
 10007   0010D6  6E4A               	movwf	___fladd@a^0,c
 10008   0010D8  0E00               	movlw	0
 10009   0010DA  6E4B               	movwf	(___fladd@a+1)^0,c
 10010   0010DC  0E00               	movlw	0
 10011   0010DE  6E4C               	movwf	(___fladd@a+2)^0,c
 10012   0010E0  0E00               	movlw	0
 10013   0010E2  6E4D               	movwf	(___fladd@a+3)^0,c
 10014   0010E4                     l5596:
 10015                           
 10016                           ; BSR set to: 0
 10017   0010E4  8E4C               	bsf	(___fladd@a+2)^0,7,c
 10018   0010E6                     
 10019                           ; BSR set to: 0
 10020   0010E6  0E00               	movlw	0
 10021   0010E8  6E4D               	movwf	(___fladd@a+3)^0,c
 10022   0010EA  EF7F  F008         	goto	l5602
 10023   0010EE                     l5600:
 10024                           
 10025                           ; BSR set to: 0
 10026   0010EE  0E00               	movlw	0
 10027   0010F0  6E4A               	movwf	___fladd@a^0,c
 10028   0010F2  0E00               	movlw	0
 10029   0010F4  6E4B               	movwf	(___fladd@a+1)^0,c
 10030   0010F6  0E00               	movlw	0
 10031   0010F8  6E4C               	movwf	(___fladd@a+2)^0,c
 10032   0010FA  0E00               	movlw	0
 10033   0010FC  6E4D               	movwf	(___fladd@a+3)^0,c
 10034   0010FE                     l5602:
 10035                           
 10036                           ; BSR set to: 0
 10037   0010FE  5162               	movf	___fladd@bexp& (0+255),w,b
 10038   001100  5D61               	subwf	___fladd@aexp& (0+255),w,b
 10039   001102  B0D8               	btfsc	status,0,c
 10040   001104  EF86  F008         	goto	u6531
 10041   001108  EF88  F008         	goto	u6530
 10042   00110C                     u6531:
 10043   00110C  EFAF  F008         	goto	l5638
 10044   001110                     u6530:
 10045   001110                     
 10046                           ; BSR set to: 0
 10047   001110  AD60               	btfss	___fladd@signs& (0+255),6,b
 10048   001112  EF8D  F008         	goto	u6541
 10049   001116  EF8F  F008         	goto	u6540
 10050   00111A                     u6541:
 10051   00111A  EF91  F008         	goto	l5608
 10052   00111E                     u6540:
 10053   00111E                     
 10054                           ; BSR set to: 0
 10055   00111E  0E80               	movlw	128
 10056   001120  1B60               	xorwf	___fladd@signs& (0+255),f,b
 10057   001122                     l5608:
 10058                           
 10059                           ; BSR set to: 0
 10060   001122  C062  F063         	movff	___fladd@bexp,___fladd@grs
 10061   001126                     
 10062                           ; BSR set to: 0
 10063   001126  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 10064   00112A                     
 10065                           ; BSR set to: 0
 10066   00112A  C063  F061         	movff	___fladd@grs,___fladd@aexp
 10067   00112E                     
 10068                           ; BSR set to: 0
 10069   00112E  C046  F063         	movff	___fladd@b,___fladd@grs
 10070   001132                     
 10071                           ; BSR set to: 0
 10072   001132  C04A  F046         	movff	___fladd@a,___fladd@b
 10073   001136                     
 10074                           ; BSR set to: 0
 10075   001136  C063  F04A         	movff	___fladd@grs,___fladd@a
 10076   00113A                     
 10077                           ; BSR set to: 0
 10078   00113A  C047  F063         	movff	___fladd@b+1,___fladd@grs
 10079   00113E                     
 10080                           ; BSR set to: 0
 10081   00113E  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
 10082   001142                     
 10083                           ; BSR set to: 0
 10084   001142  C063  F04B         	movff	___fladd@grs,___fladd@a+1
 10085   001146                     
 10086                           ; BSR set to: 0
 10087   001146  C048  F063         	movff	___fladd@b+2,___fladd@grs
 10088   00114A                     
 10089                           ; BSR set to: 0
 10090   00114A  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
 10091   00114E                     
 10092                           ; BSR set to: 0
 10093   00114E  C063  F04C         	movff	___fladd@grs,___fladd@a+2
 10094   001152                     
 10095                           ; BSR set to: 0
 10096   001152  C049  F063         	movff	___fladd@b+3,___fladd@grs
 10097   001156                     
 10098                           ; BSR set to: 0
 10099   001156  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
 10100   00115A                     
 10101                           ; BSR set to: 0
 10102   00115A  C063  F04D         	movff	___fladd@grs,___fladd@a+3
 10103   00115E                     l5638:
 10104                           
 10105                           ; BSR set to: 0
 10106   00115E  0E00               	movlw	0
 10107   001160  6F63               	movwf	___fladd@grs& (0+255),b
 10108   001162                     
 10109                           ; BSR set to: 0
 10110   001162  5162               	movf	___fladd@bexp& (0+255),w,b
 10111   001164  C061  F04E         	movff	___fladd@aexp,??___fladd
 10112   001168  6A4F               	clrf	(??___fladd+1)^0,c
 10113   00116A  5E4E               	subwf	??___fladd^0,f,c
 10114   00116C  0E00               	movlw	0
 10115   00116E  5A4F               	subwfb	(??___fladd+1)^0,f,c
 10116   001170  BE4F               	btfsc	(??___fladd+1)^0,7,c
 10117   001172  EFC4  F008         	goto	u6551
 10118   001176  504F               	movf	(??___fladd+1)^0,w,c
 10119   001178  E109               	bnz	u6550
 10120   00117A  0E1A               	movlw	26
 10121   00117C  5C4E               	subwf	??___fladd^0,w,c
 10122   00117E  A0D8               	btfss	status,0,c
 10123   001180  EFC4  F008         	goto	u6551
 10124   001184  EFC6  F008         	goto	u6550
 10125   001188                     u6551:
 10126   001188  EFFD  F008         	goto	l1106
 10127   00118C                     u6550:
 10128   00118C                     
 10129                           ; BSR set to: 0
 10130   00118C  5046               	movf	___fladd@b^0,w,c
 10131   00118E  1047               	iorwf	(___fladd@b+1)^0,w,c
 10132   001190  1048               	iorwf	(___fladd@b+2)^0,w,c
 10133   001192  1049               	iorwf	(___fladd@b+3)^0,w,c
 10134   001194  A4D8               	btfss	status,2,c
 10135   001196  EFCF  F008         	goto	u6561
 10136   00119A  EFD2  F008         	goto	u6560
 10137   00119E                     u6561:
 10138   00119E  0E01               	movlw	1
 10139   0011A0  EFD3  F008         	goto	u6570
 10140   0011A4                     u6560:
 10141   0011A4  0E00               	movlw	0
 10142   0011A6                     u6570:
 10143   0011A6  6F63               	movwf	___fladd@grs& (0+255),b
 10144   0011A8                     
 10145                           ; BSR set to: 0
 10146   0011A8  0E00               	movlw	0
 10147   0011AA  6E46               	movwf	___fladd@b^0,c
 10148   0011AC  0E00               	movlw	0
 10149   0011AE  6E47               	movwf	(___fladd@b+1)^0,c
 10150   0011B0  0E00               	movlw	0
 10151   0011B2  6E48               	movwf	(___fladd@b+2)^0,c
 10152   0011B4  0E00               	movlw	0
 10153   0011B6  6E49               	movwf	(___fladd@b+3)^0,c
 10154   0011B8                     
 10155                           ; BSR set to: 0
 10156   0011B8  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 10157   0011BC  EF06  F009         	goto	l1105
 10158   0011C0                     l1107:
 10159                           
 10160                           ; BSR set to: 0
 10161   0011C0  A163               	btfss	___fladd@grs& (0+255),0,b
 10162   0011C2  EFE5  F008         	goto	u6581
 10163   0011C6  EFE7  F008         	goto	u6580
 10164   0011CA                     u6581:
 10165   0011CA  EFED  F008         	goto	l5650
 10166   0011CE                     u6580:
 10167   0011CE                     
 10168                           ; BSR set to: 0
 10169   0011CE  90D8               	bcf	status,0,c
 10170   0011D0  3163               	rrcf	___fladd@grs& (0+255),w,b
 10171   0011D2  0901               	iorlw	1
 10172   0011D4  6F63               	movwf	___fladd@grs& (0+255),b
 10173   0011D6  EFEF  F008         	goto	l5652
 10174   0011DA                     l5650:
 10175                           
 10176                           ; BSR set to: 0
 10177   0011DA  90D8               	bcf	status,0,c
 10178   0011DC  3363               	rrcf	___fladd@grs& (0+255),f,b
 10179   0011DE                     l5652:
 10180                           
 10181                           ; BSR set to: 0
 10182   0011DE  A046               	btfss	___fladd@b^0,0,c
 10183   0011E0  EFF4  F008         	goto	u6591
 10184   0011E4  EFF6  F008         	goto	u6590
 10185   0011E8                     u6591:
 10186   0011E8  EFF7  F008         	goto	l5656
 10187   0011EC                     u6590:
 10188   0011EC                     
 10189                           ; BSR set to: 0
 10190   0011EC  8F63               	bsf	___fladd@grs& (0+255),7,b
 10191   0011EE                     l5656:
 10192                           
 10193                           ; BSR set to: 0
 10194   0011EE  3449               	rlcf	(___fladd@b+3)^0,w,c
 10195   0011F0  3249               	rrcf	(___fladd@b+3)^0,f,c
 10196   0011F2  3248               	rrcf	(___fladd@b+2)^0,f,c
 10197   0011F4  3247               	rrcf	(___fladd@b+1)^0,f,c
 10198   0011F6  3246               	rrcf	___fladd@b^0,f,c
 10199   0011F8                     
 10200                           ; BSR set to: 0
 10201   0011F8  2B62               	incf	___fladd@bexp& (0+255),f,b
 10202   0011FA                     l1106:
 10203                           
 10204                           ; BSR set to: 0
 10205   0011FA  5161               	movf	___fladd@aexp& (0+255),w,b
 10206   0011FC  5D62               	subwf	___fladd@bexp& (0+255),w,b
 10207   0011FE  A0D8               	btfss	status,0,c
 10208   001200  EF04  F009         	goto	u6601
 10209   001204  EF06  F009         	goto	u6600
 10210   001208                     u6601:
 10211   001208  EFE0  F008         	goto	l1107
 10212   00120C                     u6600:
 10213   00120C                     l1105:
 10214                           
 10215                           ; BSR set to: 0
 10216   00120C  BD60               	btfsc	___fladd@signs& (0+255),6,b
 10217   00120E  EF0B  F009         	goto	u6611
 10218   001212  EF0D  F009         	goto	u6610
 10219   001216                     u6611:
 10220   001216  EF4D  F009         	goto	l5684
 10221   00121A                     u6610:
 10222   00121A                     
 10223                           ; BSR set to: 0
 10224   00121A  5162               	movf	___fladd@bexp& (0+255),w,b
 10225   00121C  A4D8               	btfss	status,2,c
 10226   00121E  EF13  F009         	goto	u6621
 10227   001222  EF15  F009         	goto	u6620
 10228   001226                     u6621:
 10229   001226  EF1F  F009         	goto	l5666
 10230   00122A                     u6620:
 10231   00122A                     
 10232                           ; BSR set to: 0
 10233   00122A  0E00               	movlw	0
 10234   00122C  6E46               	movwf	?___fladd^0,c
 10235   00122E  0E00               	movlw	0
 10236   001230  6E47               	movwf	(?___fladd+1)^0,c
 10237   001232  0E00               	movlw	0
 10238   001234  6E48               	movwf	(?___fladd+2)^0,c
 10239   001236  0E00               	movlw	0
 10240   001238  6E49               	movwf	(?___fladd+3)^0,c
 10241   00123A  EF6E  F00A         	goto	l1114
 10242   00123E                     l5666:
 10243                           
 10244                           ; BSR set to: 0
 10245   00123E  504A               	movf	___fladd@a^0,w,c
 10246   001240  2646               	addwf	___fladd@b^0,f,c
 10247   001242  504B               	movf	(___fladd@a+1)^0,w,c
 10248   001244  2247               	addwfc	(___fladd@b+1)^0,f,c
 10249   001246  504C               	movf	(___fladd@a+2)^0,w,c
 10250   001248  2248               	addwfc	(___fladd@b+2)^0,f,c
 10251   00124A  504D               	movf	(___fladd@a+3)^0,w,c
 10252   00124C  2249               	addwfc	(___fladd@b+3)^0,f,c
 10253   00124E                     
 10254                           ; BSR set to: 0
 10255   00124E  A049               	btfss	(___fladd@b+3)^0,0,c
 10256   001250  EF2C  F009         	goto	u6631
 10257   001254  EF2E  F009         	goto	u6630
 10258   001258                     u6631:
 10259   001258  EFDA  F009         	goto	l5720
 10260   00125C                     u6630:
 10261   00125C                     
 10262                           ; BSR set to: 0
 10263   00125C  A163               	btfss	___fladd@grs& (0+255),0,b
 10264   00125E  EF33  F009         	goto	u6641
 10265   001262  EF35  F009         	goto	u6640
 10266   001266                     u6641:
 10267   001266  EF3B  F009         	goto	l5674
 10268   00126A                     u6640:
 10269   00126A                     
 10270                           ; BSR set to: 0
 10271   00126A  90D8               	bcf	status,0,c
 10272   00126C  3163               	rrcf	___fladd@grs& (0+255),w,b
 10273   00126E  0901               	iorlw	1
 10274   001270  6F63               	movwf	___fladd@grs& (0+255),b
 10275   001272  EF3D  F009         	goto	l5676
 10276   001276                     l5674:
 10277                           
 10278                           ; BSR set to: 0
 10279   001276  90D8               	bcf	status,0,c
 10280   001278  3363               	rrcf	___fladd@grs& (0+255),f,b
 10281   00127A                     l5676:
 10282                           
 10283                           ; BSR set to: 0
 10284   00127A  A046               	btfss	___fladd@b^0,0,c
 10285   00127C  EF42  F009         	goto	u6651
 10286   001280  EF44  F009         	goto	u6650
 10287   001284                     u6651:
 10288   001284  EF45  F009         	goto	l5680
 10289   001288                     u6650:
 10290   001288                     
 10291                           ; BSR set to: 0
 10292   001288  8F63               	bsf	___fladd@grs& (0+255),7,b
 10293   00128A                     l5680:
 10294                           
 10295                           ; BSR set to: 0
 10296   00128A  3449               	rlcf	(___fladd@b+3)^0,w,c
 10297   00128C  3249               	rrcf	(___fladd@b+3)^0,f,c
 10298   00128E  3248               	rrcf	(___fladd@b+2)^0,f,c
 10299   001290  3247               	rrcf	(___fladd@b+1)^0,f,c
 10300   001292  3246               	rrcf	___fladd@b^0,f,c
 10301   001294                     
 10302                           ; BSR set to: 0
 10303   001294  2B62               	incf	___fladd@bexp& (0+255),f,b
 10304   001296  EFDA  F009         	goto	l5720
 10305   00129A                     l5684:
 10306                           
 10307                           ; BSR set to: 0
 10308   00129A  504A               	movf	___fladd@a^0,w,c
 10309   00129C  5C46               	subwf	___fladd@b^0,w,c
 10310   00129E  504B               	movf	(___fladd@a+1)^0,w,c
 10311   0012A0  5847               	subwfb	(___fladd@b+1)^0,w,c
 10312   0012A2  504C               	movf	(___fladd@a+2)^0,w,c
 10313   0012A4  5848               	subwfb	(___fladd@b+2)^0,w,c
 10314   0012A6  5049               	movf	(___fladd@b+3)^0,w,c
 10315   0012A8  0A80               	xorlw	128
 10316   0012AA  6E4E               	movwf	??___fladd^0,c
 10317   0012AC  504D               	movf	(___fladd@a+3)^0,w,c
 10318   0012AE  0A80               	xorlw	128
 10319   0012B0  584E               	subwfb	??___fladd^0,w,c
 10320   0012B2  B0D8               	btfsc	status,0,c
 10321   0012B4  EF5E  F009         	goto	u6661
 10322   0012B8  EF60  F009         	goto	u6660
 10323   0012BC                     u6661:
 10324   0012BC  EF8B  F009         	goto	l5694
 10325   0012C0                     u6660:
 10326   0012C0                     
 10327                           ; BSR set to: 0
 10328   0012C0  5046               	movf	___fladd@b^0,w,c
 10329   0012C2  5C4A               	subwf	___fladd@a^0,w,c
 10330   0012C4  6E4E               	movwf	??___fladd^0,c
 10331   0012C6  5047               	movf	(___fladd@b+1)^0,w,c
 10332   0012C8  584B               	subwfb	(___fladd@a+1)^0,w,c
 10333   0012CA  6E4F               	movwf	(??___fladd+1)^0,c
 10334   0012CC  5048               	movf	(___fladd@b+2)^0,w,c
 10335   0012CE  584C               	subwfb	(___fladd@a+2)^0,w,c
 10336   0012D0  6E50               	movwf	(??___fladd+2)^0,c
 10337   0012D2  5049               	movf	(___fladd@b+3)^0,w,c
 10338   0012D4  584D               	subwfb	(___fladd@a+3)^0,w,c
 10339   0012D6  6E51               	movwf	(??___fladd+3)^0,c
 10340   0012D8  0EFF               	movlw	255
 10341   0012DA  244E               	addwf	??___fladd^0,w,c
 10342   0012DC  6E46               	movwf	___fladd@b^0,c
 10343   0012DE  0EFF               	movlw	255
 10344   0012E0  204F               	addwfc	(??___fladd+1)^0,w,c
 10345   0012E2  6E47               	movwf	(___fladd@b+1)^0,c
 10346   0012E4  0EFF               	movlw	255
 10347   0012E6  2050               	addwfc	(??___fladd+2)^0,w,c
 10348   0012E8  6E48               	movwf	(___fladd@b+2)^0,c
 10349   0012EA  0EFF               	movlw	255
 10350   0012EC  2051               	addwfc	(??___fladd+3)^0,w,c
 10351   0012EE  6E49               	movwf	(___fladd@b+3)^0,c
 10352   0012F0  0E80               	movlw	128
 10353   0012F2  1B60               	xorwf	___fladd@signs& (0+255),f,b
 10354   0012F4                     
 10355                           ; BSR set to: 0
 10356   0012F4  6D63               	negf	___fladd@grs& (0+255),b
 10357   0012F6                     
 10358                           ; BSR set to: 0
 10359   0012F6  5163               	movf	___fladd@grs& (0+255),w,b
 10360   0012F8  A4D8               	btfss	status,2,c
 10361   0012FA  EF81  F009         	goto	u6671
 10362   0012FE  EF83  F009         	goto	u6670
 10363   001302                     u6671:
 10364   001302  EF93  F009         	goto	l1122
 10365   001306                     u6670:
 10366   001306                     
 10367                           ; BSR set to: 0
 10368   001306  0E01               	movlw	1
 10369   001308  2646               	addwf	___fladd@b^0,f,c
 10370   00130A  0E00               	movlw	0
 10371   00130C  2247               	addwfc	(___fladd@b+1)^0,f,c
 10372   00130E  2248               	addwfc	(___fladd@b+2)^0,f,c
 10373   001310  2249               	addwfc	(___fladd@b+3)^0,f,c
 10374   001312  EF93  F009         	goto	l1122
 10375   001316                     l5694:
 10376                           
 10377                           ; BSR set to: 0
 10378   001316  504A               	movf	___fladd@a^0,w,c
 10379   001318  5E46               	subwf	___fladd@b^0,f,c
 10380   00131A  504B               	movf	(___fladd@a+1)^0,w,c
 10381   00131C  5A47               	subwfb	(___fladd@b+1)^0,f,c
 10382   00131E  504C               	movf	(___fladd@a+2)^0,w,c
 10383   001320  5A48               	subwfb	(___fladd@b+2)^0,f,c
 10384   001322  504D               	movf	(___fladd@a+3)^0,w,c
 10385   001324  5A49               	subwfb	(___fladd@b+3)^0,f,c
 10386   001326                     l1122:
 10387                           
 10388                           ; BSR set to: 0
 10389   001326  5046               	movf	___fladd@b^0,w,c
 10390   001328  1047               	iorwf	(___fladd@b+1)^0,w,c
 10391   00132A  1048               	iorwf	(___fladd@b+2)^0,w,c
 10392   00132C  1049               	iorwf	(___fladd@b+3)^0,w,c
 10393   00132E  A4D8               	btfss	status,2,c
 10394   001330  EF9C  F009         	goto	u6681
 10395   001334  EF9E  F009         	goto	u6680
 10396   001338                     u6681:
 10397   001338  EFD3  F009         	goto	l5718
 10398   00133C                     u6680:
 10399   00133C                     
 10400                           ; BSR set to: 0
 10401   00133C  5163               	movf	___fladd@grs& (0+255),w,b
 10402   00133E  A4D8               	btfss	status,2,c
 10403   001340  EFA4  F009         	goto	u6691
 10404   001344  EFA6  F009         	goto	u6690
 10405   001348                     u6691:
 10406   001348  EFD3  F009         	goto	l5718
 10407   00134C                     u6690:
 10408   00134C                     
 10409                           ; BSR set to: 0
 10410   00134C  0E00               	movlw	0
 10411   00134E  6E46               	movwf	?___fladd^0,c
 10412   001350  0E00               	movlw	0
 10413   001352  6E47               	movwf	(?___fladd+1)^0,c
 10414   001354  0E00               	movlw	0
 10415   001356  6E48               	movwf	(?___fladd+2)^0,c
 10416   001358  0E00               	movlw	0
 10417   00135A  6E49               	movwf	(?___fladd+3)^0,c
 10418   00135C  EF6E  F00A         	goto	l1114
 10419   001360                     l5702:
 10420                           
 10421                           ; BSR set to: 0
 10422   001360  90D8               	bcf	status,0,c
 10423   001362  3646               	rlcf	___fladd@b^0,f,c
 10424   001364  3647               	rlcf	(___fladd@b+1)^0,f,c
 10425   001366  3648               	rlcf	(___fladd@b+2)^0,f,c
 10426   001368  3649               	rlcf	(___fladd@b+3)^0,f,c
 10427   00136A                     
 10428                           ; BSR set to: 0
 10429   00136A  AF63               	btfss	___fladd@grs& (0+255),7,b
 10430   00136C  EFBA  F009         	goto	u6701
 10431   001370  EFBC  F009         	goto	u6700
 10432   001374                     u6701:
 10433   001374  EFBD  F009         	goto	l5708
 10434   001378                     u6700:
 10435   001378                     
 10436                           ; BSR set to: 0
 10437   001378  8046               	bsf	___fladd@b^0,0,c
 10438   00137A                     l5708:
 10439                           
 10440                           ; BSR set to: 0
 10441   00137A  A163               	btfss	___fladd@grs& (0+255),0,b
 10442   00137C  EFC2  F009         	goto	u6711
 10443   001380  EFC4  F009         	goto	u6710
 10444   001384                     u6711:
 10445   001384  EFC8  F009         	goto	l5712
 10446   001388                     u6710:
 10447   001388                     
 10448                           ; BSR set to: 0
 10449   001388  80D8               	bsf	status,0,c
 10450   00138A  3763               	rlcf	___fladd@grs& (0+255),f,b
 10451   00138C  EFCA  F009         	goto	l5714
 10452   001390                     l5712:
 10453                           
 10454                           ; BSR set to: 0
 10455   001390  90D8               	bcf	status,0,c
 10456   001392  3763               	rlcf	___fladd@grs& (0+255),f,b
 10457   001394                     l5714:
 10458                           
 10459                           ; BSR set to: 0
 10460   001394  5162               	movf	___fladd@bexp& (0+255),w,b
 10461   001396  B4D8               	btfsc	status,2,c
 10462   001398  EFD0  F009         	goto	u6721
 10463   00139C  EFD2  F009         	goto	u6720
 10464   0013A0                     u6721:
 10465   0013A0  EFD3  F009         	goto	l5718
 10466   0013A4                     u6720:
 10467   0013A4                     
 10468                           ; BSR set to: 0
 10469   0013A4  0762               	decf	___fladd@bexp& (0+255),f,b
 10470   0013A6                     l5718:
 10471                           
 10472                           ; BSR set to: 0
 10473   0013A6  AE48               	btfss	(___fladd@b+2)^0,7,c
 10474   0013A8  EFD8  F009         	goto	u6731
 10475   0013AC  EFDA  F009         	goto	u6730
 10476   0013B0                     u6731:
 10477   0013B0  EFB0  F009         	goto	l5702
 10478   0013B4                     u6730:
 10479   0013B4                     l5720:
 10480                           
 10481                           ; BSR set to: 0
 10482   0013B4  0E00               	movlw	0
 10483   0013B6  6F61               	movwf	___fladd@aexp& (0+255),b
 10484   0013B8                     
 10485                           ; BSR set to: 0
 10486   0013B8  AF63               	btfss	___fladd@grs& (0+255),7,b
 10487   0013BA  EFE1  F009         	goto	u6741
 10488   0013BE  EFE3  F009         	goto	u6740
 10489   0013C2                     u6741:
 10490   0013C2  EFFB  F009         	goto	l1131
 10491   0013C6                     u6740:
 10492   0013C6                     
 10493                           ; BSR set to: 0
 10494   0013C6  C063  F04E         	movff	___fladd@grs,??___fladd
 10495   0013CA  0E7F               	movlw	127
 10496   0013CC  164E               	andwf	??___fladd^0,f,c
 10497   0013CE  B4D8               	btfsc	status,2,c
 10498   0013D0  EFEC  F009         	goto	u6751
 10499   0013D4  EFEE  F009         	goto	u6750
 10500   0013D8                     u6751:
 10501   0013D8  EFF2  F009         	goto	l1132
 10502   0013DC                     u6750:
 10503   0013DC                     l5726:
 10504                           
 10505                           ; BSR set to: 0
 10506   0013DC  0E01               	movlw	1
 10507   0013DE  6F61               	movwf	___fladd@aexp& (0+255),b
 10508   0013E0  EFFB  F009         	goto	l1131
 10509   0013E4                     l1132:
 10510                           
 10511                           ; BSR set to: 0
 10512   0013E4  A046               	btfss	___fladd@b^0,0,c
 10513   0013E6  EFF7  F009         	goto	u6761
 10514   0013EA  EFF9  F009         	goto	u6760
 10515   0013EE                     u6761:
 10516   0013EE  EFFB  F009         	goto	l1131
 10517   0013F2                     u6760:
 10518   0013F2  EFEE  F009         	goto	l5726
 10519   0013F6                     l1131:
 10520                           
 10521                           ; BSR set to: 0
 10522   0013F6  5161               	movf	___fladd@aexp& (0+255),w,b
 10523   0013F8  B4D8               	btfsc	status,2,c
 10524   0013FA  EF01  F00A         	goto	u6771
 10525   0013FE  EF03  F00A         	goto	u6770
 10526   001402                     u6771:
 10527   001402  EF2E  F00A         	goto	l5738
 10528   001406                     u6770:
 10529   001406                     
 10530                           ; BSR set to: 0
 10531   001406  0E01               	movlw	1
 10532   001408  2646               	addwf	___fladd@b^0,f,c
 10533   00140A  0E00               	movlw	0
 10534   00140C  2247               	addwfc	(___fladd@b+1)^0,f,c
 10535   00140E  2248               	addwfc	(___fladd@b+2)^0,f,c
 10536   001410  2249               	addwfc	(___fladd@b+3)^0,f,c
 10537   001412                     
 10538                           ; BSR set to: 0
 10539   001412  A049               	btfss	(___fladd@b+3)^0,0,c
 10540   001414  EF0E  F00A         	goto	u6781
 10541   001418  EF10  F00A         	goto	u6780
 10542   00141C                     u6781:
 10543   00141C  EF2E  F00A         	goto	l5738
 10544   001420                     u6780:
 10545   001420                     
 10546                           ; BSR set to: 0
 10547   001420  C046  F04E         	movff	___fladd@b,??___fladd
 10548   001424  C047  F04F         	movff	___fladd@b+1,??___fladd+1
 10549   001428  C048  F050         	movff	___fladd@b+2,??___fladd+2
 10550   00142C  C049  F051         	movff	___fladd@b+3,??___fladd+3
 10551   001430  3451               	rlcf	(??___fladd+3)^0,w,c
 10552   001432  3251               	rrcf	(??___fladd+3)^0,f,c
 10553   001434  3250               	rrcf	(??___fladd+2)^0,f,c
 10554   001436  324F               	rrcf	(??___fladd+1)^0,f,c
 10555   001438  324E               	rrcf	??___fladd^0,f,c
 10556   00143A  C04E  F046         	movff	??___fladd,___fladd@b
 10557   00143E  C04F  F047         	movff	??___fladd+1,___fladd@b+1
 10558   001442  C050  F048         	movff	??___fladd+2,___fladd@b+2
 10559   001446  C051  F049         	movff	??___fladd+3,___fladd@b+3
 10560   00144A  2962               	incf	___fladd@bexp& (0+255),w,b
 10561   00144C  B4D8               	btfsc	status,2,c
 10562   00144E  EF2B  F00A         	goto	u6791
 10563   001452  EF2D  F00A         	goto	u6790
 10564   001456                     u6791:
 10565   001456  EF2E  F00A         	goto	l5738
 10566   00145A                     u6790:
 10567   00145A                     
 10568                           ; BSR set to: 0
 10569   00145A  2B62               	incf	___fladd@bexp& (0+255),f,b
 10570   00145C                     l5738:
 10571                           
 10572                           ; BSR set to: 0
 10573   00145C  2962               	incf	___fladd@bexp& (0+255),w,b
 10574   00145E  B4D8               	btfsc	status,2,c
 10575   001460  EF34  F00A         	goto	u6801
 10576   001464  EF36  F00A         	goto	u6800
 10577   001468                     u6801:
 10578   001468  EF3E  F00A         	goto	l5742
 10579   00146C                     u6800:
 10580   00146C                     
 10581                           ; BSR set to: 0
 10582   00146C  5162               	movf	___fladd@bexp& (0+255),w,b
 10583   00146E  A4D8               	btfss	status,2,c
 10584   001470  EF3C  F00A         	goto	u6811
 10585   001474  EF3E  F00A         	goto	u6810
 10586   001478                     u6811:
 10587   001478  EF50  F00A         	goto	l5746
 10588   00147C                     u6810:
 10589   00147C                     l5742:
 10590                           
 10591                           ; BSR set to: 0
 10592   00147C  0E00               	movlw	0
 10593   00147E  6E46               	movwf	___fladd@b^0,c
 10594   001480  0E00               	movlw	0
 10595   001482  6E47               	movwf	(___fladd@b+1)^0,c
 10596   001484  0E00               	movlw	0
 10597   001486  6E48               	movwf	(___fladd@b+2)^0,c
 10598   001488  0E00               	movlw	0
 10599   00148A  6E49               	movwf	(___fladd@b+3)^0,c
 10600   00148C  5162               	movf	___fladd@bexp& (0+255),w,b
 10601   00148E  A4D8               	btfss	status,2,c
 10602   001490  EF4C  F00A         	goto	u6821
 10603   001494  EF4E  F00A         	goto	u6820
 10604   001498                     u6821:
 10605   001498  EF50  F00A         	goto	l5746
 10606   00149C                     u6820:
 10607   00149C                     
 10608                           ; BSR set to: 0
 10609   00149C  0E00               	movlw	0
 10610   00149E  6F60               	movwf	___fladd@signs& (0+255),b
 10611   0014A0                     l5746:
 10612                           
 10613                           ; BSR set to: 0
 10614   0014A0  A162               	btfss	___fladd@bexp& (0+255),0,b
 10615   0014A2  EF55  F00A         	goto	u6831
 10616   0014A6  EF57  F00A         	goto	u6830
 10617   0014AA                     u6831:
 10618   0014AA  EF5A  F00A         	goto	l5750
 10619   0014AE                     u6830:
 10620   0014AE                     
 10621                           ; BSR set to: 0
 10622   0014AE  8E48               	bsf	(___fladd@b+2)^0,7,c
 10623   0014B0  EF5B  F00A         	goto	l5752
 10624   0014B4                     l5750:
 10625                           
 10626                           ; BSR set to: 0
 10627   0014B4  9E48               	bcf	(___fladd@b+2)^0,7,c
 10628   0014B6                     l5752:
 10629                           
 10630                           ; BSR set to: 0
 10631   0014B6  90D8               	bcf	status,0,c
 10632   0014B8  3162               	rrcf	___fladd@bexp& (0+255),w,b
 10633   0014BA  6E49               	movwf	(___fladd@b+3)^0,c
 10634   0014BC                     
 10635                           ; BSR set to: 0
 10636   0014BC  AF60               	btfss	___fladd@signs& (0+255),7,b
 10637   0014BE  EF63  F00A         	goto	u6841
 10638   0014C2  EF65  F00A         	goto	u6840
 10639   0014C6                     u6841:
 10640   0014C6  EF66  F00A         	goto	l5758
 10641   0014CA                     u6840:
 10642   0014CA                     
 10643                           ; BSR set to: 0
 10644   0014CA  8E49               	bsf	(___fladd@b+3)^0,7,c
 10645   0014CC                     l5758:
 10646                           
 10647                           ; BSR set to: 0
 10648   0014CC  C046  F046         	movff	___fladd@b,?___fladd
 10649   0014D0  C047  F047         	movff	___fladd@b+1,?___fladd+1
 10650   0014D4  C048  F048         	movff	___fladd@b+2,?___fladd+2
 10651   0014D8  C049  F049         	movff	___fladd@b+3,?___fladd+3
 10652   0014DC                     l1114:
 10653                           
 10654                           ; BSR set to: 0
 10655   0014DC  0012               	return		;funcret
 10656   0014DE                     __end_of___fladd:
 10657                           	callstack 0
 10658                           
 10659 ;; *************** function ___flneg *****************
 10660 ;; Defined at:
 10661 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flneg.c"
 10662 ;; Parameters:    Size  Location     Type
 10663 ;;  f1              4   32[BANK0 ] unsigned char 
 10664 ;; Auto vars:     Size  Location     Type
 10665 ;;		None
 10666 ;; Return value:  Size  Location     Type
 10667 ;;                  4   32[BANK0 ] unsigned char 
 10668 ;; Registers used:
 10669 ;;		wreg, status,2, status,0
 10670 ;; Tracked objects:
 10671 ;;		On entry : 0/0
 10672 ;;		On exit  : 0/0
 10673 ;;		Unchanged: 0/0
 10674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10675 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10678 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10679 ;;Total ram usage:        4 bytes
 10680 ;; Hardware stack levels used: 1
 10681 ;; Hardware stack levels required when called: 1
 10682 ;; This function calls:
 10683 ;;		Nothing
 10684 ;; This function is called by:
 10685 ;;		_efgtoa
 10686 ;;		_sinf
 10687 ;;		___rem_pio2f
 10688 ;; This function uses a non-reentrant model
 10689 ;;
 10690                           
 10691                           	psect	text39
 10692   004774                     __ptext39:
 10693                           	callstack 0
 10694   004774                     ___flneg:
 10695                           	callstack 24
 10696   004774  0100               	movlb	0	; () banked
 10697   004776  5180               	movf	___flneg@f1& (0+255),w,b
 10698   004778  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
 10699   00477A  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
 10700   00477C  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
 10701   00477E  B4D8               	btfsc	status,2,c
 10702   004780  EFC4  F023         	goto	u7481
 10703   004784  EFC6  F023         	goto	u7480
 10704   004788                     u7481:
 10705   004788  EFCE  F023         	goto	l6172
 10706   00478C                     u7480:
 10707   00478C                     
 10708                           ; BSR set to: 0
 10709   00478C  0E00               	movlw	0
 10710   00478E  1B80               	xorwf	___flneg@f1& (0+255),f,b
 10711   004790  0E00               	movlw	0
 10712   004792  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
 10713   004794  0E00               	movlw	0
 10714   004796  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
 10715   004798  0E80               	movlw	128
 10716   00479A  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
 10717   00479C                     l6172:
 10718                           
 10719                           ; BSR set to: 0
 10720   00479C  C080  F080         	movff	___flneg@f1,?___flneg
 10721   0047A0  C081  F081         	movff	___flneg@f1+1,?___flneg+1
 10722   0047A4  C082  F082         	movff	___flneg@f1+2,?___flneg+2
 10723   0047A8  C083  F083         	movff	___flneg@f1+3,?___flneg+3
 10724   0047AC                     
 10725                           ; BSR set to: 0
 10726   0047AC  0012               	return		;funcret
 10727   0047AE                     __end_of___flneg:
 10728                           	callstack 0
 10729                           
 10730 ;; *************** function ___flmul *****************
 10731 ;; Defined at:
 10732 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcmul.c"
 10733 ;; Parameters:    Size  Location     Type
 10734 ;;  b               4   19[COMRAM] unsigned char 
 10735 ;;  a               4   23[COMRAM] unsigned char 
 10736 ;; Auto vars:     Size  Location     Type
 10737 ;;  prod            4   38[COMRAM] struct .
 10738 ;;  grs             4   33[COMRAM] unsigned long 
 10739 ;;  temp            2   42[COMRAM] struct .
 10740 ;;  bexp            1   37[COMRAM] unsigned char 
 10741 ;;  aexp            1   32[COMRAM] unsigned char 
 10742 ;;  sign            1   31[COMRAM] unsigned char 
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  4   19[COMRAM] unsigned char 
 10745 ;; Registers used:
 10746 ;;		wreg, status,2, status,0, prodl, prodh
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/0
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10752 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10753 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10754 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10755 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10756 ;;Total ram usage:       25 bytes
 10757 ;; Hardware stack levels used: 1
 10758 ;; Hardware stack levels required when called: 1
 10759 ;; This function calls:
 10760 ;;		Nothing
 10761 ;; This function is called by:
 10762 ;;		_runDAC
 10763 ;;		_runADC
 10764 ;;		_efgtoa
 10765 ;;		___cosdf
 10766 ;;		___rem_pio2f
 10767 ;;		___sindf
 10768 ;; This function uses a non-reentrant model
 10769 ;;
 10770                           
 10771                           	psect	text40
 10772   0014DE                     __ptext40:
 10773                           	callstack 0
 10774   0014DE                     ___flmul:
 10775                           	callstack 24
 10776   0014DE  5017               	movf	(___flmul@b+3)^0,w,c
 10777   0014E0  0B80               	andlw	128
 10778   0014E2  6E20               	movwf	___flmul@sign^0,c
 10779   0014E4  5017               	movf	(___flmul@b+3)^0,w,c
 10780   0014E6  2417               	addwf	(___flmul@b+3)^0,w,c
 10781   0014E8  6E26               	movwf	___flmul@bexp^0,c
 10782   0014EA  AE16               	btfss	(___flmul@b+2)^0,7,c
 10783   0014EC  EF7A  F00A         	goto	u7091
 10784   0014F0  EF7C  F00A         	goto	u7090
 10785   0014F4                     u7091:
 10786   0014F4  EF7D  F00A         	goto	l5920
 10787   0014F8                     u7090:
 10788   0014F8  8026               	bsf	___flmul@bexp^0,0,c
 10789   0014FA                     l5920:
 10790   0014FA  5026               	movf	___flmul@bexp^0,w,c
 10791   0014FC  B4D8               	btfsc	status,2,c
 10792   0014FE  EF83  F00A         	goto	u7101
 10793   001502  EF85  F00A         	goto	u7100
 10794   001506                     u7101:
 10795   001506  EF98  F00A         	goto	l5928
 10796   00150A                     u7100:
 10797   00150A  2826               	incf	___flmul@bexp^0,w,c
 10798   00150C  A4D8               	btfss	status,2,c
 10799   00150E  EF8B  F00A         	goto	u7111
 10800   001512  EF8D  F00A         	goto	u7110
 10801   001516                     u7111:
 10802   001516  EF95  F00A         	goto	l5926
 10803   00151A                     u7110:
 10804   00151A  0E00               	movlw	0
 10805   00151C  6E14               	movwf	___flmul@b^0,c
 10806   00151E  0E00               	movlw	0
 10807   001520  6E15               	movwf	(___flmul@b+1)^0,c
 10808   001522  0E00               	movlw	0
 10809   001524  6E16               	movwf	(___flmul@b+2)^0,c
 10810   001526  0E00               	movlw	0
 10811   001528  6E17               	movwf	(___flmul@b+3)^0,c
 10812   00152A                     l5926:
 10813   00152A  8E16               	bsf	(___flmul@b+2)^0,7,c
 10814   00152C  EFA0  F00A         	goto	l5930
 10815   001530                     l5928:
 10816   001530  0E00               	movlw	0
 10817   001532  6E14               	movwf	___flmul@b^0,c
 10818   001534  0E00               	movlw	0
 10819   001536  6E15               	movwf	(___flmul@b+1)^0,c
 10820   001538  0E00               	movlw	0
 10821   00153A  6E16               	movwf	(___flmul@b+2)^0,c
 10822   00153C  0E00               	movlw	0
 10823   00153E  6E17               	movwf	(___flmul@b+3)^0,c
 10824   001540                     l5930:
 10825   001540  501B               	movf	(___flmul@a+3)^0,w,c
 10826   001542  0B80               	andlw	128
 10827   001544  1A20               	xorwf	___flmul@sign^0,f,c
 10828   001546  501B               	movf	(___flmul@a+3)^0,w,c
 10829   001548  241B               	addwf	(___flmul@a+3)^0,w,c
 10830   00154A  6E21               	movwf	___flmul@aexp^0,c
 10831   00154C  AE1A               	btfss	(___flmul@a+2)^0,7,c
 10832   00154E  EFAB  F00A         	goto	u7121
 10833   001552  EFAD  F00A         	goto	u7120
 10834   001556                     u7121:
 10835   001556  EFAE  F00A         	goto	l5938
 10836   00155A                     u7120:
 10837   00155A  8021               	bsf	___flmul@aexp^0,0,c
 10838   00155C                     l5938:
 10839   00155C  5021               	movf	___flmul@aexp^0,w,c
 10840   00155E  B4D8               	btfsc	status,2,c
 10841   001560  EFB4  F00A         	goto	u7131
 10842   001564  EFB6  F00A         	goto	u7130
 10843   001568                     u7131:
 10844   001568  EFC9  F00A         	goto	l5946
 10845   00156C                     u7130:
 10846   00156C  2821               	incf	___flmul@aexp^0,w,c
 10847   00156E  A4D8               	btfss	status,2,c
 10848   001570  EFBC  F00A         	goto	u7141
 10849   001574  EFBE  F00A         	goto	u7140
 10850   001578                     u7141:
 10851   001578  EFC6  F00A         	goto	l5944
 10852   00157C                     u7140:
 10853   00157C  0E00               	movlw	0
 10854   00157E  6E18               	movwf	___flmul@a^0,c
 10855   001580  0E00               	movlw	0
 10856   001582  6E19               	movwf	(___flmul@a+1)^0,c
 10857   001584  0E00               	movlw	0
 10858   001586  6E1A               	movwf	(___flmul@a+2)^0,c
 10859   001588  0E00               	movlw	0
 10860   00158A  6E1B               	movwf	(___flmul@a+3)^0,c
 10861   00158C                     l5944:
 10862   00158C  8E1A               	bsf	(___flmul@a+2)^0,7,c
 10863   00158E  EFD1  F00A         	goto	l1191
 10864   001592                     l5946:
 10865   001592  0E00               	movlw	0
 10866   001594  6E18               	movwf	___flmul@a^0,c
 10867   001596  0E00               	movlw	0
 10868   001598  6E19               	movwf	(___flmul@a+1)^0,c
 10869   00159A  0E00               	movlw	0
 10870   00159C  6E1A               	movwf	(___flmul@a+2)^0,c
 10871   00159E  0E00               	movlw	0
 10872   0015A0  6E1B               	movwf	(___flmul@a+3)^0,c
 10873   0015A2                     l1191:
 10874   0015A2  5021               	movf	___flmul@aexp^0,w,c
 10875   0015A4  B4D8               	btfsc	status,2,c
 10876   0015A6  EFD7  F00A         	goto	u7151
 10877   0015AA  EFD9  F00A         	goto	u7150
 10878   0015AE                     u7151:
 10879   0015AE  EFE1  F00A         	goto	l5950
 10880   0015B2                     u7150:
 10881   0015B2  5026               	movf	___flmul@bexp^0,w,c
 10882   0015B4  A4D8               	btfss	status,2,c
 10883   0015B6  EFDF  F00A         	goto	u7161
 10884   0015BA  EFE1  F00A         	goto	u7160
 10885   0015BE                     u7161:
 10886   0015BE  EFEB  F00A         	goto	l5954
 10887   0015C2                     u7160:
 10888   0015C2                     l5950:
 10889   0015C2  0E00               	movlw	0
 10890   0015C4  6E14               	movwf	?___flmul^0,c
 10891   0015C6  0E00               	movlw	0
 10892   0015C8  6E15               	movwf	(?___flmul+1)^0,c
 10893   0015CA  0E00               	movlw	0
 10894   0015CC  6E16               	movwf	(?___flmul+2)^0,c
 10895   0015CE  0E00               	movlw	0
 10896   0015D0  6E17               	movwf	(?___flmul+3)^0,c
 10897   0015D2  EF83  F00C         	goto	l1195
 10898   0015D6                     l5954:
 10899   0015D6  501A               	movf	(___flmul@a+2)^0,w,c
 10900   0015D8  0214               	mulwf	___flmul@b^0,c
 10901   0015DA  CFF3 F02B          	movff	prodl,___flmul@temp
 10902   0015DE  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10903   0015E2  502B               	movf	___flmul@temp^0,w,c
 10904   0015E4  6E22               	movwf	___flmul@grs^0,c
 10905   0015E6  6A23               	clrf	(___flmul@grs+1)^0,c
 10906   0015E8  6A24               	clrf	(___flmul@grs+2)^0,c
 10907   0015EA  6A25               	clrf	(___flmul@grs+3)^0,c
 10908   0015EC  502C               	movf	(___flmul@temp+1)^0,w,c
 10909   0015EE  6E27               	movwf	___flmul@prod^0,c
 10910   0015F0  6A28               	clrf	(___flmul@prod+1)^0,c
 10911   0015F2  6A29               	clrf	(___flmul@prod+2)^0,c
 10912   0015F4  6A2A               	clrf	(___flmul@prod+3)^0,c
 10913   0015F6  5019               	movf	(___flmul@a+1)^0,w,c
 10914   0015F8  0215               	mulwf	(___flmul@b+1)^0,c
 10915   0015FA  CFF3 F02B          	movff	prodl,___flmul@temp
 10916   0015FE  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10917   001602  502B               	movf	___flmul@temp^0,w,c
 10918   001604  2622               	addwf	___flmul@grs^0,f,c
 10919   001606  0E00               	movlw	0
 10920   001608  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10921   00160A  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10922   00160C  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10923   00160E  502C               	movf	(___flmul@temp+1)^0,w,c
 10924   001610  2627               	addwf	___flmul@prod^0,f,c
 10925   001612  0E00               	movlw	0
 10926   001614  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10927   001616  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10928   001618  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10929   00161A  5018               	movf	___flmul@a^0,w,c
 10930   00161C  0216               	mulwf	(___flmul@b+2)^0,c
 10931   00161E  CFF3 F02B          	movff	prodl,___flmul@temp
 10932   001622  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10933   001626  502B               	movf	___flmul@temp^0,w,c
 10934   001628  2622               	addwf	___flmul@grs^0,f,c
 10935   00162A  0E00               	movlw	0
 10936   00162C  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10937   00162E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10938   001630  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10939   001632  502C               	movf	(___flmul@temp+1)^0,w,c
 10940   001634  2627               	addwf	___flmul@prod^0,f,c
 10941   001636  0E00               	movlw	0
 10942   001638  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10943   00163A  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10944   00163C  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10945   00163E  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 10946   001642  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 10947   001646  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 10948   00164A  6A22               	clrf	___flmul@grs^0,c
 10949   00164C  5018               	movf	___flmul@a^0,w,c
 10950   00164E  0215               	mulwf	(___flmul@b+1)^0,c
 10951   001650  CFF3 F02B          	movff	prodl,___flmul@temp
 10952   001654  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10953   001658  502B               	movf	___flmul@temp^0,w,c
 10954   00165A  2622               	addwf	___flmul@grs^0,f,c
 10955   00165C  502C               	movf	(___flmul@temp+1)^0,w,c
 10956   00165E  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10957   001660  0E00               	movlw	0
 10958   001662  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10959   001664  0E00               	movlw	0
 10960   001666  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10961   001668  5019               	movf	(___flmul@a+1)^0,w,c
 10962   00166A  0214               	mulwf	___flmul@b^0,c
 10963   00166C  CFF3 F02B          	movff	prodl,___flmul@temp
 10964   001670  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10965   001674  502B               	movf	___flmul@temp^0,w,c
 10966   001676  2622               	addwf	___flmul@grs^0,f,c
 10967   001678  502C               	movf	(___flmul@temp+1)^0,w,c
 10968   00167A  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10969   00167C  0E00               	movlw	0
 10970   00167E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10971   001680  0E00               	movlw	0
 10972   001682  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10973   001684  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 10974   001688  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 10975   00168C  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 10976   001690  6A22               	clrf	___flmul@grs^0,c
 10977   001692  5018               	movf	___flmul@a^0,w,c
 10978   001694  0214               	mulwf	___flmul@b^0,c
 10979   001696  CFF3 F02B          	movff	prodl,___flmul@temp
 10980   00169A  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10981   00169E  502B               	movf	___flmul@temp^0,w,c
 10982   0016A0  2622               	addwf	___flmul@grs^0,f,c
 10983   0016A2  502C               	movf	(___flmul@temp+1)^0,w,c
 10984   0016A4  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10985   0016A6  0E00               	movlw	0
 10986   0016A8  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10987   0016AA  0E00               	movlw	0
 10988   0016AC  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10989   0016AE  501A               	movf	(___flmul@a+2)^0,w,c
 10990   0016B0  0215               	mulwf	(___flmul@b+1)^0,c
 10991   0016B2  CFF3 F02B          	movff	prodl,___flmul@temp
 10992   0016B6  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10993   0016BA  502B               	movf	___flmul@temp^0,w,c
 10994   0016BC  2627               	addwf	___flmul@prod^0,f,c
 10995   0016BE  502C               	movf	(___flmul@temp+1)^0,w,c
 10996   0016C0  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10997   0016C2  0E00               	movlw	0
 10998   0016C4  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10999   0016C6  0E00               	movlw	0
 11000   0016C8  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11001   0016CA  5019               	movf	(___flmul@a+1)^0,w,c
 11002   0016CC  0216               	mulwf	(___flmul@b+2)^0,c
 11003   0016CE  CFF3 F02B          	movff	prodl,___flmul@temp
 11004   0016D2  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11005   0016D6  502B               	movf	___flmul@temp^0,w,c
 11006   0016D8  2627               	addwf	___flmul@prod^0,f,c
 11007   0016DA  502C               	movf	(___flmul@temp+1)^0,w,c
 11008   0016DC  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11009   0016DE  0E00               	movlw	0
 11010   0016E0  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11011   0016E2  0E00               	movlw	0
 11012   0016E4  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11013   0016E6  501A               	movf	(___flmul@a+2)^0,w,c
 11014   0016E8  0216               	mulwf	(___flmul@b+2)^0,c
 11015   0016EA  CFF3 F02B          	movff	prodl,___flmul@temp
 11016   0016EE  CFF4 F02C          	movff	prodh,___flmul@temp+1
 11017   0016F2  502B               	movf	___flmul@temp^0,w,c
 11018   0016F4  6E1C               	movwf	??___flmul^0,c
 11019   0016F6  502C               	movf	(___flmul@temp+1)^0,w,c
 11020   0016F8  6E1D               	movwf	(??___flmul+1)^0,c
 11021   0016FA  6A1E               	clrf	(??___flmul+2)^0,c
 11022   0016FC  6A1F               	clrf	(??___flmul+3)^0,c
 11023   0016FE  C01E  F01F         	movff	??___flmul+2,??___flmul+3
 11024   001702  C01D  F01E         	movff	??___flmul+1,??___flmul+2
 11025   001706  C01C  F01D         	movff	??___flmul,??___flmul+1
 11026   00170A  6A1C               	clrf	??___flmul^0,c
 11027   00170C  501C               	movf	??___flmul^0,w,c
 11028   00170E  2627               	addwf	___flmul@prod^0,f,c
 11029   001710  501D               	movf	(??___flmul+1)^0,w,c
 11030   001712  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11031   001714  501E               	movf	(??___flmul+2)^0,w,c
 11032   001716  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11033   001718  501F               	movf	(??___flmul+3)^0,w,c
 11034   00171A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11035   00171C  C022  F01C         	movff	___flmul@grs,??___flmul
 11036   001720  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
 11037   001724  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
 11038   001728  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
 11039   00172C  0E19               	movlw	25
 11040   00172E  EF9E  F00B         	goto	u7170
 11041   001732                     u7175:
 11042   001732  90D8               	bcf	status,0,c
 11043   001734  321F               	rrcf	(??___flmul+3)^0,f,c
 11044   001736  321E               	rrcf	(??___flmul+2)^0,f,c
 11045   001738  321D               	rrcf	(??___flmul+1)^0,f,c
 11046   00173A  321C               	rrcf	??___flmul^0,f,c
 11047   00173C                     u7170:
 11048   00173C  2EE8               	decfsz	wreg,f,c
 11049   00173E  EF99  F00B         	goto	u7175
 11050   001742  501C               	movf	??___flmul^0,w,c
 11051   001744  2627               	addwf	___flmul@prod^0,f,c
 11052   001746  501D               	movf	(??___flmul+1)^0,w,c
 11053   001748  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11054   00174A  501E               	movf	(??___flmul+2)^0,w,c
 11055   00174C  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11056   00174E  501F               	movf	(??___flmul+3)^0,w,c
 11057   001750  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11058   001752  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 11059   001756  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 11060   00175A  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 11061   00175E  6A22               	clrf	___flmul@grs^0,c
 11062   001760  5021               	movf	___flmul@aexp^0,w,c
 11063   001762  C026  F01C         	movff	___flmul@bexp,??___flmul
 11064   001766  6A1D               	clrf	(??___flmul+1)^0,c
 11065   001768  261C               	addwf	??___flmul^0,f,c
 11066   00176A  0E00               	movlw	0
 11067   00176C  221D               	addwfc	(??___flmul+1)^0,f,c
 11068   00176E  0E82               	movlw	130
 11069   001770  241C               	addwf	??___flmul^0,w,c
 11070   001772  6E2B               	movwf	___flmul@temp^0,c
 11071   001774  0EFF               	movlw	255
 11072   001776  201D               	addwfc	(??___flmul+1)^0,w,c
 11073   001778  6E2C               	movwf	(___flmul@temp+1)^0,c
 11074   00177A  EFD4  F00B         	goto	l6002
 11075   00177E                     l5996:
 11076   00177E  90D8               	bcf	status,0,c
 11077   001780  3627               	rlcf	___flmul@prod^0,f,c
 11078   001782  3628               	rlcf	(___flmul@prod+1)^0,f,c
 11079   001784  3629               	rlcf	(___flmul@prod+2)^0,f,c
 11080   001786  362A               	rlcf	(___flmul@prod+3)^0,f,c
 11081   001788  AE25               	btfss	(___flmul@grs+3)^0,7,c
 11082   00178A  EFC9  F00B         	goto	u7181
 11083   00178E  EFCB  F00B         	goto	u7180
 11084   001792                     u7181:
 11085   001792  EFCC  F00B         	goto	l1198
 11086   001796                     u7180:
 11087   001796  8027               	bsf	___flmul@prod^0,0,c
 11088   001798                     l1198:
 11089   001798  90D8               	bcf	status,0,c
 11090   00179A  3622               	rlcf	___flmul@grs^0,f,c
 11091   00179C  3623               	rlcf	(___flmul@grs+1)^0,f,c
 11092   00179E  3624               	rlcf	(___flmul@grs+2)^0,f,c
 11093   0017A0  3625               	rlcf	(___flmul@grs+3)^0,f,c
 11094   0017A2  062B               	decf	___flmul@temp^0,f,c
 11095   0017A4  A0D8               	btfss	status,0,c
 11096   0017A6  062C               	decf	(___flmul@temp+1)^0,f,c
 11097   0017A8                     l6002:
 11098   0017A8  AE29               	btfss	(___flmul@prod+2)^0,7,c
 11099   0017AA  EFD9  F00B         	goto	u7191
 11100   0017AE  EFDB  F00B         	goto	u7190
 11101   0017B2                     u7191:
 11102   0017B2  EFBF  F00B         	goto	l5996
 11103   0017B6                     u7190:
 11104   0017B6  0E00               	movlw	0
 11105   0017B8  6E21               	movwf	___flmul@aexp^0,c
 11106   0017BA  AE25               	btfss	(___flmul@grs+3)^0,7,c
 11107   0017BC  EFE2  F00B         	goto	u7201
 11108   0017C0  EFE4  F00B         	goto	u7200
 11109   0017C4                     u7201:
 11110   0017C4  EF08  F00C         	goto	l1200
 11111   0017C8                     u7200:
 11112   0017C8  0EFF               	movlw	255
 11113   0017CA  1422               	andwf	___flmul@grs^0,w,c
 11114   0017CC  6E1C               	movwf	??___flmul^0,c
 11115   0017CE  0EFF               	movlw	255
 11116   0017D0  1423               	andwf	(___flmul@grs+1)^0,w,c
 11117   0017D2  6E1D               	movwf	(??___flmul+1)^0,c
 11118   0017D4  0EFF               	movlw	255
 11119   0017D6  1424               	andwf	(___flmul@grs+2)^0,w,c
 11120   0017D8  6E1E               	movwf	(??___flmul+2)^0,c
 11121   0017DA  0E7F               	movlw	127
 11122   0017DC  1425               	andwf	(___flmul@grs+3)^0,w,c
 11123   0017DE  6E1F               	movwf	(??___flmul+3)^0,c
 11124   0017E0  501C               	movf	??___flmul^0,w,c
 11125   0017E2  101D               	iorwf	(??___flmul+1)^0,w,c
 11126   0017E4  101E               	iorwf	(??___flmul+2)^0,w,c
 11127   0017E6  101F               	iorwf	(??___flmul+3)^0,w,c
 11128   0017E8  B4D8               	btfsc	status,2,c
 11129   0017EA  EFF9  F00B         	goto	u7211
 11130   0017EE  EFFB  F00B         	goto	u7210
 11131   0017F2                     u7211:
 11132   0017F2  EFFF  F00B         	goto	l1201
 11133   0017F6                     u7210:
 11134   0017F6                     l6010:
 11135   0017F6  0E01               	movlw	1
 11136   0017F8  6E21               	movwf	___flmul@aexp^0,c
 11137   0017FA  EF08  F00C         	goto	l1200
 11138   0017FE                     l1201:
 11139   0017FE  A027               	btfss	___flmul@prod^0,0,c
 11140   001800  EF04  F00C         	goto	u7221
 11141   001804  EF06  F00C         	goto	u7220
 11142   001808                     u7221:
 11143   001808  EF08  F00C         	goto	l1200
 11144   00180C                     u7220:
 11145   00180C  EFFB  F00B         	goto	l6010
 11146   001810                     l1200:
 11147   001810  5021               	movf	___flmul@aexp^0,w,c
 11148   001812  B4D8               	btfsc	status,2,c
 11149   001814  EF0E  F00C         	goto	u7231
 11150   001818  EF10  F00C         	goto	u7230
 11151   00181C                     u7231:
 11152   00181C  EF34  F00C         	goto	l6022
 11153   001820                     u7230:
 11154   001820  0E01               	movlw	1
 11155   001822  2627               	addwf	___flmul@prod^0,f,c
 11156   001824  0E00               	movlw	0
 11157   001826  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11158   001828  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11159   00182A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11160   00182C  A02A               	btfss	(___flmul@prod+3)^0,0,c
 11161   00182E  EF1B  F00C         	goto	u7241
 11162   001832  EF1D  F00C         	goto	u7240
 11163   001836                     u7241:
 11164   001836  EF34  F00C         	goto	l6022
 11165   00183A                     u7240:
 11166   00183A  C027  F01C         	movff	___flmul@prod,??___flmul
 11167   00183E  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
 11168   001842  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
 11169   001846  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
 11170   00184A  341F               	rlcf	(??___flmul+3)^0,w,c
 11171   00184C  321F               	rrcf	(??___flmul+3)^0,f,c
 11172   00184E  321E               	rrcf	(??___flmul+2)^0,f,c
 11173   001850  321D               	rrcf	(??___flmul+1)^0,f,c
 11174   001852  321C               	rrcf	??___flmul^0,f,c
 11175   001854  C01C  F027         	movff	??___flmul,___flmul@prod
 11176   001858  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
 11177   00185C  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
 11178   001860  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
 11179   001864  4A2B               	infsnz	___flmul@temp^0,f,c
 11180   001866  2A2C               	incf	(___flmul@temp+1)^0,f,c
 11181   001868                     l6022:
 11182   001868  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 11183   00186A  EF3F  F00C         	goto	u7251
 11184   00186E  502C               	movf	(___flmul@temp+1)^0,w,c
 11185   001870  E108               	bnz	u7250
 11186   001872  282B               	incf	___flmul@temp^0,w,c
 11187   001874  A0D8               	btfss	status,0,c
 11188   001876  EF3F  F00C         	goto	u7251
 11189   00187A  EF41  F00C         	goto	u7250
 11190   00187E                     u7251:
 11191   00187E  EF4B  F00C         	goto	l6026
 11192   001882                     u7250:
 11193   001882  0E00               	movlw	0
 11194   001884  6E27               	movwf	___flmul@prod^0,c
 11195   001886  0E00               	movlw	0
 11196   001888  6E28               	movwf	(___flmul@prod+1)^0,c
 11197   00188A  0E80               	movlw	128
 11198   00188C  6E29               	movwf	(___flmul@prod+2)^0,c
 11199   00188E  0E7F               	movlw	127
 11200   001890  6E2A               	movwf	(___flmul@prod+3)^0,c
 11201   001892  EF79  F00C         	goto	l6038
 11202   001896                     l6026:
 11203   001896  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 11204   001898  EF58  F00C         	goto	u7260
 11205   00189C  502C               	movf	(___flmul@temp+1)^0,w,c
 11206   00189E  E106               	bnz	u7261
 11207   0018A0  042B               	decf	___flmul@temp^0,w,c
 11208   0018A2  B0D8               	btfsc	status,0,c
 11209   0018A4  EF56  F00C         	goto	u7261
 11210   0018A8  EF58  F00C         	goto	u7260
 11211   0018AC                     u7261:
 11212   0018AC  EF64  F00C         	goto	l1208
 11213   0018B0                     u7260:
 11214   0018B0  0E00               	movlw	0
 11215   0018B2  6E27               	movwf	___flmul@prod^0,c
 11216   0018B4  0E00               	movlw	0
 11217   0018B6  6E28               	movwf	(___flmul@prod+1)^0,c
 11218   0018B8  0E00               	movlw	0
 11219   0018BA  6E29               	movwf	(___flmul@prod+2)^0,c
 11220   0018BC  0E00               	movlw	0
 11221   0018BE  6E2A               	movwf	(___flmul@prod+3)^0,c
 11222   0018C0  0E00               	movlw	0
 11223   0018C2  6E20               	movwf	___flmul@sign^0,c
 11224   0018C4  EF79  F00C         	goto	l6038
 11225   0018C8                     l1208:
 11226   0018C8  C02B  F026         	movff	___flmul@temp,___flmul@bexp
 11227   0018CC  0EFF               	movlw	255
 11228   0018CE  1627               	andwf	___flmul@prod^0,f,c
 11229   0018D0  0EFF               	movlw	255
 11230   0018D2  1628               	andwf	(___flmul@prod+1)^0,f,c
 11231   0018D4  0E7F               	movlw	127
 11232   0018D6  1629               	andwf	(___flmul@prod+2)^0,f,c
 11233   0018D8  0E00               	movlw	0
 11234   0018DA  162A               	andwf	(___flmul@prod+3)^0,f,c
 11235   0018DC  A026               	btfss	___flmul@bexp^0,0,c
 11236   0018DE  EF73  F00C         	goto	u7271
 11237   0018E2  EF75  F00C         	goto	u7270
 11238   0018E6                     u7271:
 11239   0018E6  EF76  F00C         	goto	l6036
 11240   0018EA                     u7270:
 11241   0018EA  8E29               	bsf	(___flmul@prod+2)^0,7,c
 11242   0018EC                     l6036:
 11243   0018EC  90D8               	bcf	status,0,c
 11244   0018EE  3026               	rrcf	___flmul@bexp^0,w,c
 11245   0018F0  6E2A               	movwf	(___flmul@prod+3)^0,c
 11246   0018F2                     l6038:
 11247   0018F2  5020               	movf	___flmul@sign^0,w,c
 11248   0018F4  122A               	iorwf	(___flmul@prod+3)^0,f,c
 11249   0018F6  C027  F014         	movff	___flmul@prod,?___flmul
 11250   0018FA  C028  F015         	movff	___flmul@prod+1,?___flmul+1
 11251   0018FE  C029  F016         	movff	___flmul@prod+2,?___flmul+2
 11252   001902  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
 11253   001906                     l1195:
 11254   001906  0012               	return		;funcret
 11255   001908                     __end_of___flmul:
 11256                           	callstack 0
 11257                           
 11258 ;; *************** function ___flge *****************
 11259 ;; Defined at:
 11260 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flge.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;  ff1             4   44[COMRAM] unsigned char 
 11263 ;;  ff2             4   48[COMRAM] unsigned char 
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;		None
 11266 ;; Return value:  Size  Location     Type
 11267 ;;		None               void
 11268 ;; Registers used:
 11269 ;;		wreg, status,2, status,0
 11270 ;; Tracked objects:
 11271 ;;		On entry : 0/0
 11272 ;;		On exit  : 0/0
 11273 ;;		Unchanged: 0/0
 11274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11275 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11277 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11278 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11279 ;;Total ram usage:       12 bytes
 11280 ;; Hardware stack levels used: 1
 11281 ;; Hardware stack levels required when called: 1
 11282 ;; This function calls:
 11283 ;;		Nothing
 11284 ;; This function is called by:
 11285 ;;		_efgtoa
 11286 ;; This function uses a non-reentrant model
 11287 ;;
 11288                           
 11289                           	psect	text41
 11290   003D6A                     __ptext41:
 11291                           	callstack 0
 11292   003D6A                     ___flge:
 11293                           	callstack 24
 11294   003D6A  0E00               	movlw	0
 11295   003D6C  142D               	andwf	___flge@ff1^0,w,c
 11296   003D6E  6E35               	movwf	??___flge^0,c
 11297   003D70  0E00               	movlw	0
 11298   003D72  142E               	andwf	(___flge@ff1+1)^0,w,c
 11299   003D74  6E36               	movwf	(??___flge+1)^0,c
 11300   003D76  0E80               	movlw	128
 11301   003D78  142F               	andwf	(___flge@ff1+2)^0,w,c
 11302   003D7A  6E37               	movwf	(??___flge+2)^0,c
 11303   003D7C  0E7F               	movlw	127
 11304   003D7E  1430               	andwf	(___flge@ff1+3)^0,w,c
 11305   003D80  6E38               	movwf	(??___flge+3)^0,c
 11306   003D82  5035               	movf	??___flge^0,w,c
 11307   003D84  1036               	iorwf	(??___flge+1)^0,w,c
 11308   003D86  1037               	iorwf	(??___flge+2)^0,w,c
 11309   003D88  1038               	iorwf	(??___flge+3)^0,w,c
 11310   003D8A  A4D8               	btfss	status,2,c
 11311   003D8C  EFCA  F01E         	goto	u7431
 11312   003D90  EFCC  F01E         	goto	u7430
 11313   003D94                     u7431:
 11314   003D94  EFD4  F01E         	goto	l6150
 11315   003D98                     u7430:
 11316   003D98  0E00               	movlw	0
 11317   003D9A  6E2D               	movwf	___flge@ff1^0,c
 11318   003D9C  0E00               	movlw	0
 11319   003D9E  6E2E               	movwf	(___flge@ff1+1)^0,c
 11320   003DA0  0E00               	movlw	0
 11321   003DA2  6E2F               	movwf	(___flge@ff1+2)^0,c
 11322   003DA4  0E00               	movlw	0
 11323   003DA6  6E30               	movwf	(___flge@ff1+3)^0,c
 11324   003DA8                     l6150:
 11325   003DA8  0E00               	movlw	0
 11326   003DAA  1431               	andwf	___flge@ff2^0,w,c
 11327   003DAC  6E35               	movwf	??___flge^0,c
 11328   003DAE  0E00               	movlw	0
 11329   003DB0  1432               	andwf	(___flge@ff2+1)^0,w,c
 11330   003DB2  6E36               	movwf	(??___flge+1)^0,c
 11331   003DB4  0E80               	movlw	128
 11332   003DB6  1433               	andwf	(___flge@ff2+2)^0,w,c
 11333   003DB8  6E37               	movwf	(??___flge+2)^0,c
 11334   003DBA  0E7F               	movlw	127
 11335   003DBC  1434               	andwf	(___flge@ff2+3)^0,w,c
 11336   003DBE  6E38               	movwf	(??___flge+3)^0,c
 11337   003DC0  5035               	movf	??___flge^0,w,c
 11338   003DC2  1036               	iorwf	(??___flge+1)^0,w,c
 11339   003DC4  1037               	iorwf	(??___flge+2)^0,w,c
 11340   003DC6  1038               	iorwf	(??___flge+3)^0,w,c
 11341   003DC8  A4D8               	btfss	status,2,c
 11342   003DCA  EFE9  F01E         	goto	u7441
 11343   003DCE  EFEB  F01E         	goto	u7440
 11344   003DD2                     u7441:
 11345   003DD2  EFF3  F01E         	goto	l6154
 11346   003DD6                     u7440:
 11347   003DD6  0E00               	movlw	0
 11348   003DD8  6E31               	movwf	___flge@ff2^0,c
 11349   003DDA  0E00               	movlw	0
 11350   003DDC  6E32               	movwf	(___flge@ff2+1)^0,c
 11351   003DDE  0E00               	movlw	0
 11352   003DE0  6E33               	movwf	(___flge@ff2+2)^0,c
 11353   003DE2  0E00               	movlw	0
 11354   003DE4  6E34               	movwf	(___flge@ff2+3)^0,c
 11355   003DE6                     l6154:
 11356   003DE6  AE30               	btfss	(___flge@ff1+3)^0,7,c
 11357   003DE8  EFF8  F01E         	goto	u7451
 11358   003DEC  EFFA  F01E         	goto	u7450
 11359   003DF0                     u7451:
 11360   003DF0  EF03  F01F         	goto	l6158
 11361   003DF4                     u7450:
 11362   003DF4  6C2D               	negf	___flge@ff1^0,c
 11363   003DF6  1E2E               	comf	(___flge@ff1+1)^0,f,c
 11364   003DF8  B0D8               	btfsc	status,0,c
 11365   003DFA  2A2E               	incf	(___flge@ff1+1)^0,f,c
 11366   003DFC  1E2F               	comf	(___flge@ff1+2)^0,f,c
 11367   003DFE  B0D8               	btfsc	status,0,c
 11368   003E00  2A2F               	incf	(___flge@ff1+2)^0,f,c
 11369   003E02  0E80               	movlw	128
 11370   003E04  5630               	subfwb	(___flge@ff1+3)^0,f,c
 11371   003E06                     l6158:
 11372   003E06  AE34               	btfss	(___flge@ff2+3)^0,7,c
 11373   003E08  EF08  F01F         	goto	u7461
 11374   003E0C  EF0A  F01F         	goto	u7460
 11375   003E10                     u7461:
 11376   003E10  EF13  F01F         	goto	l842
 11377   003E14                     u7460:
 11378   003E14  6C31               	negf	___flge@ff2^0,c
 11379   003E16  1E32               	comf	(___flge@ff2+1)^0,f,c
 11380   003E18  B0D8               	btfsc	status,0,c
 11381   003E1A  2A32               	incf	(___flge@ff2+1)^0,f,c
 11382   003E1C  1E33               	comf	(___flge@ff2+2)^0,f,c
 11383   003E1E  B0D8               	btfsc	status,0,c
 11384   003E20  2A33               	incf	(___flge@ff2+2)^0,f,c
 11385   003E22  0E80               	movlw	128
 11386   003E24  5634               	subfwb	(___flge@ff2+3)^0,f,c
 11387   003E26                     l842:
 11388   003E26  0E00               	movlw	0
 11389   003E28  1A2D               	xorwf	___flge@ff1^0,f,c
 11390   003E2A  0E00               	movlw	0
 11391   003E2C  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
 11392   003E2E  0E00               	movlw	0
 11393   003E30  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
 11394   003E32  0E80               	movlw	128
 11395   003E34  1A30               	xorwf	(___flge@ff1+3)^0,f,c
 11396   003E36  0E00               	movlw	0
 11397   003E38  1A31               	xorwf	___flge@ff2^0,f,c
 11398   003E3A  0E00               	movlw	0
 11399   003E3C  1A32               	xorwf	(___flge@ff2+1)^0,f,c
 11400   003E3E  0E00               	movlw	0
 11401   003E40  1A33               	xorwf	(___flge@ff2+2)^0,f,c
 11402   003E42  0E80               	movlw	128
 11403   003E44  1A34               	xorwf	(___flge@ff2+3)^0,f,c
 11404   003E46  5031               	movf	___flge@ff2^0,w,c
 11405   003E48  5C2D               	subwf	___flge@ff1^0,w,c
 11406   003E4A  5032               	movf	(___flge@ff2+1)^0,w,c
 11407   003E4C  582E               	subwfb	(___flge@ff1+1)^0,w,c
 11408   003E4E  5033               	movf	(___flge@ff2+2)^0,w,c
 11409   003E50  582F               	subwfb	(___flge@ff1+2)^0,w,c
 11410   003E52  5034               	movf	(___flge@ff2+3)^0,w,c
 11411   003E54  5830               	subwfb	(___flge@ff1+3)^0,w,c
 11412   003E56  B0D8               	btfsc	status,0,c
 11413   003E58  EF30  F01F         	goto	u7471
 11414   003E5C  EF32  F01F         	goto	u7470
 11415   003E60                     u7471:
 11416   003E60  EF35  F01F         	goto	l6164
 11417   003E64                     u7470:
 11418   003E64  90D8               	bcf	status,0,c
 11419   003E66  EF36  F01F         	goto	l847
 11420   003E6A                     l6164:
 11421   003E6A  80D8               	bsf	status,0,c
 11422   003E6C                     l847:
 11423   003E6C  0012               	return		;funcret
 11424   003E6E                     __end_of___flge:
 11425                           	callstack 0
 11426                           
 11427 ;; *************** function ___fleq *****************
 11428 ;; Defined at:
 11429 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fleq.c"
 11430 ;; Parameters:    Size  Location     Type
 11431 ;;  ff1             4    5[COMRAM] unsigned char 
 11432 ;;  ff2             4    9[COMRAM] unsigned char 
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;		None
 11435 ;; Return value:  Size  Location     Type
 11436 ;;		None               void
 11437 ;; Registers used:
 11438 ;;		wreg, status,2, status,0
 11439 ;; Tracked objects:
 11440 ;;		On entry : 0/0
 11441 ;;		On exit  : 0/0
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11444 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11446 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11447 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11448 ;;Total ram usage:       12 bytes
 11449 ;; Hardware stack levels used: 1
 11450 ;; Hardware stack levels required when called: 1
 11451 ;; This function calls:
 11452 ;;		Nothing
 11453 ;; This function is called by:
 11454 ;;		_efgtoa
 11455 ;; This function uses a non-reentrant model
 11456 ;;
 11457                           
 11458                           	psect	text42
 11459   0043E4                     __ptext42:
 11460                           	callstack 0
 11461   0043E4                     ___fleq:
 11462                           	callstack 24
 11463   0043E4  0E00               	movlw	0
 11464   0043E6  1406               	andwf	___fleq@ff1^0,w,c
 11465   0043E8  6E0E               	movwf	??___fleq^0,c
 11466   0043EA  0E00               	movlw	0
 11467   0043EC  1407               	andwf	(___fleq@ff1+1)^0,w,c
 11468   0043EE  6E0F               	movwf	(??___fleq+1)^0,c
 11469   0043F0  0E80               	movlw	128
 11470   0043F2  1408               	andwf	(___fleq@ff1+2)^0,w,c
 11471   0043F4  6E10               	movwf	(??___fleq+2)^0,c
 11472   0043F6  0E7F               	movlw	127
 11473   0043F8  1409               	andwf	(___fleq@ff1+3)^0,w,c
 11474   0043FA  6E11               	movwf	(??___fleq+3)^0,c
 11475   0043FC  500E               	movf	??___fleq^0,w,c
 11476   0043FE  100F               	iorwf	(??___fleq+1)^0,w,c
 11477   004400  1010               	iorwf	(??___fleq+2)^0,w,c
 11478   004402  1011               	iorwf	(??___fleq+3)^0,w,c
 11479   004404  A4D8               	btfss	status,2,c
 11480   004406  EF07  F022         	goto	u7401
 11481   00440A  EF09  F022         	goto	u7400
 11482   00440E                     u7401:
 11483   00440E  EF11  F022         	goto	l6134
 11484   004412                     u7400:
 11485   004412  0E00               	movlw	0
 11486   004414  6E06               	movwf	___fleq@ff1^0,c
 11487   004416  0E00               	movlw	0
 11488   004418  6E07               	movwf	(___fleq@ff1+1)^0,c
 11489   00441A  0E00               	movlw	0
 11490   00441C  6E08               	movwf	(___fleq@ff1+2)^0,c
 11491   00441E  0E00               	movlw	0
 11492   004420  6E09               	movwf	(___fleq@ff1+3)^0,c
 11493   004422                     l6134:
 11494   004422  0E00               	movlw	0
 11495   004424  140A               	andwf	___fleq@ff2^0,w,c
 11496   004426  6E0E               	movwf	??___fleq^0,c
 11497   004428  0E00               	movlw	0
 11498   00442A  140B               	andwf	(___fleq@ff2+1)^0,w,c
 11499   00442C  6E0F               	movwf	(??___fleq+1)^0,c
 11500   00442E  0E80               	movlw	128
 11501   004430  140C               	andwf	(___fleq@ff2+2)^0,w,c
 11502   004432  6E10               	movwf	(??___fleq+2)^0,c
 11503   004434  0E7F               	movlw	127
 11504   004436  140D               	andwf	(___fleq@ff2+3)^0,w,c
 11505   004438  6E11               	movwf	(??___fleq+3)^0,c
 11506   00443A  500E               	movf	??___fleq^0,w,c
 11507   00443C  100F               	iorwf	(??___fleq+1)^0,w,c
 11508   00443E  1010               	iorwf	(??___fleq+2)^0,w,c
 11509   004440  1011               	iorwf	(??___fleq+3)^0,w,c
 11510   004442  A4D8               	btfss	status,2,c
 11511   004444  EF26  F022         	goto	u7411
 11512   004448  EF28  F022         	goto	u7410
 11513   00444C                     u7411:
 11514   00444C  EF30  F022         	goto	l6138
 11515   004450                     u7410:
 11516   004450  0E00               	movlw	0
 11517   004452  6E0A               	movwf	___fleq@ff2^0,c
 11518   004454  0E00               	movlw	0
 11519   004456  6E0B               	movwf	(___fleq@ff2+1)^0,c
 11520   004458  0E00               	movlw	0
 11521   00445A  6E0C               	movwf	(___fleq@ff2+2)^0,c
 11522   00445C  0E00               	movlw	0
 11523   00445E  6E0D               	movwf	(___fleq@ff2+3)^0,c
 11524   004460                     l6138:
 11525   004460  500A               	movf	___fleq@ff2^0,w,c
 11526   004462  1806               	xorwf	___fleq@ff1^0,w,c
 11527   004464  E10F               	bnz	u7420
 11528   004466  500B               	movf	(___fleq@ff2+1)^0,w,c
 11529   004468  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 11530   00446A  E10C               	bnz	u7420
 11531   00446C  500C               	movf	(___fleq@ff2+2)^0,w,c
 11532   00446E  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 11533   004470  E109               	bnz	u7420
 11534   004472  500D               	movf	(___fleq@ff2+3)^0,w,c
 11535   004474  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 11536   004476  B4D8               	btfsc	status,2,c
 11537   004478  EF40  F022         	goto	u7421
 11538   00447C  EF42  F022         	goto	u7420
 11539   004480                     u7421:
 11540   004480  EF45  F022         	goto	l6142
 11541   004484                     u7420:
 11542   004484  90D8               	bcf	status,0,c
 11543   004486  EF46  F022         	goto	l836
 11544   00448A                     l6142:
 11545   00448A  80D8               	bsf	status,0,c
 11546   00448C                     l836:
 11547   00448C  0012               	return		;funcret
 11548   00448E                     __end_of___fleq:
 11549                           	callstack 0
 11550                           
 11551 ;; *************** function ___fldiv *****************
 11552 ;; Defined at:
 11553 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcdiv.c"
 11554 ;; Parameters:    Size  Location     Type
 11555 ;;  b               4   44[COMRAM] unsigned char 
 11556 ;;  a               4   48[COMRAM] unsigned char 
 11557 ;; Auto vars:     Size  Location     Type
 11558 ;;  grs             4   63[COMRAM] unsigned long 
 11559 ;;  rem             4   56[COMRAM] unsigned long 
 11560 ;;  new_exp         2   61[COMRAM] short 
 11561 ;;  aexp            1   68[COMRAM] unsigned char 
 11562 ;;  bexp            1   67[COMRAM] unsigned char 
 11563 ;;  sign            1   60[COMRAM] unsigned char 
 11564 ;; Return value:  Size  Location     Type
 11565 ;;                  4   44[COMRAM] unsigned char 
 11566 ;; Registers used:
 11567 ;;		wreg, status,2, status,0
 11568 ;; Tracked objects:
 11569 ;;		On entry : 0/0
 11570 ;;		On exit  : 0/0
 11571 ;;		Unchanged: 0/0
 11572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11573 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11574 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11575 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11576 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11577 ;;Total ram usage:       25 bytes
 11578 ;; Hardware stack levels used: 1
 11579 ;; Hardware stack levels required when called: 1
 11580 ;; This function calls:
 11581 ;;		Nothing
 11582 ;; This function is called by:
 11583 ;;		_runDAC
 11584 ;;		_runADC
 11585 ;;		_efgtoa
 11586 ;; This function uses a non-reentrant model
 11587 ;;
 11588                           
 11589                           	psect	text43
 11590   0020E0                     __ptext43:
 11591                           	callstack 0
 11592   0020E0                     ___fldiv:
 11593                           	callstack 24
 11594   0020E0  5030               	movf	(___fldiv@b+3)^0,w,c
 11595   0020E2  0B80               	andlw	128
 11596   0020E4  6E3D               	movwf	___fldiv@sign^0,c
 11597   0020E6  5030               	movf	(___fldiv@b+3)^0,w,c
 11598   0020E8  2430               	addwf	(___fldiv@b+3)^0,w,c
 11599   0020EA  6E44               	movwf	___fldiv@bexp^0,c
 11600   0020EC  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 11601   0020EE  EF7B  F010         	goto	u6861
 11602   0020F2  EF7D  F010         	goto	u6860
 11603   0020F6                     u6861:
 11604   0020F6  EF7E  F010         	goto	l5782
 11605   0020FA                     u6860:
 11606   0020FA  8044               	bsf	___fldiv@bexp^0,0,c
 11607   0020FC                     l5782:
 11608   0020FC  5044               	movf	___fldiv@bexp^0,w,c
 11609   0020FE  B4D8               	btfsc	status,2,c
 11610   002100  EF84  F010         	goto	u6871
 11611   002104  EF86  F010         	goto	u6870
 11612   002108                     u6871:
 11613   002108  EF9B  F010         	goto	l5792
 11614   00210C                     u6870:
 11615   00210C  2844               	incf	___fldiv@bexp^0,w,c
 11616   00210E  A4D8               	btfss	status,2,c
 11617   002110  EF8C  F010         	goto	u6881
 11618   002114  EF8E  F010         	goto	u6880
 11619   002118                     u6881:
 11620   002118  EF96  F010         	goto	l5788
 11621   00211C                     u6880:
 11622   00211C  0E00               	movlw	0
 11623   00211E  6E2D               	movwf	___fldiv@b^0,c
 11624   002120  0E00               	movlw	0
 11625   002122  6E2E               	movwf	(___fldiv@b+1)^0,c
 11626   002124  0E00               	movlw	0
 11627   002126  6E2F               	movwf	(___fldiv@b+2)^0,c
 11628   002128  0E00               	movlw	0
 11629   00212A  6E30               	movwf	(___fldiv@b+3)^0,c
 11630   00212C                     l5788:
 11631   00212C  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 11632   00212E  0E00               	movlw	0
 11633   002130  6E30               	movwf	(___fldiv@b+3)^0,c
 11634   002132  EFA3  F010         	goto	l5794
 11635   002136                     l5792:
 11636   002136  0E00               	movlw	0
 11637   002138  6E2D               	movwf	___fldiv@b^0,c
 11638   00213A  0E00               	movlw	0
 11639   00213C  6E2E               	movwf	(___fldiv@b+1)^0,c
 11640   00213E  0E00               	movlw	0
 11641   002140  6E2F               	movwf	(___fldiv@b+2)^0,c
 11642   002142  0E00               	movlw	0
 11643   002144  6E30               	movwf	(___fldiv@b+3)^0,c
 11644   002146                     l5794:
 11645   002146  5034               	movf	(___fldiv@a+3)^0,w,c
 11646   002148  0B80               	andlw	128
 11647   00214A  1A3D               	xorwf	___fldiv@sign^0,f,c
 11648   00214C  5034               	movf	(___fldiv@a+3)^0,w,c
 11649   00214E  2434               	addwf	(___fldiv@a+3)^0,w,c
 11650   002150  6E45               	movwf	___fldiv@aexp^0,c
 11651   002152  AE33               	btfss	(___fldiv@a+2)^0,7,c
 11652   002154  EFAE  F010         	goto	u6891
 11653   002158  EFB0  F010         	goto	u6890
 11654   00215C                     u6891:
 11655   00215C  EFB1  F010         	goto	l5802
 11656   002160                     u6890:
 11657   002160  8045               	bsf	___fldiv@aexp^0,0,c
 11658   002162                     l5802:
 11659   002162  5045               	movf	___fldiv@aexp^0,w,c
 11660   002164  B4D8               	btfsc	status,2,c
 11661   002166  EFB7  F010         	goto	u6901
 11662   00216A  EFB9  F010         	goto	u6900
 11663   00216E                     u6901:
 11664   00216E  EFCE  F010         	goto	l5812
 11665   002172                     u6900:
 11666   002172  2845               	incf	___fldiv@aexp^0,w,c
 11667   002174  A4D8               	btfss	status,2,c
 11668   002176  EFBF  F010         	goto	u6911
 11669   00217A  EFC1  F010         	goto	u6910
 11670   00217E                     u6911:
 11671   00217E  EFC9  F010         	goto	l5808
 11672   002182                     u6910:
 11673   002182  0E00               	movlw	0
 11674   002184  6E31               	movwf	___fldiv@a^0,c
 11675   002186  0E00               	movlw	0
 11676   002188  6E32               	movwf	(___fldiv@a+1)^0,c
 11677   00218A  0E00               	movlw	0
 11678   00218C  6E33               	movwf	(___fldiv@a+2)^0,c
 11679   00218E  0E00               	movlw	0
 11680   002190  6E34               	movwf	(___fldiv@a+3)^0,c
 11681   002192                     l5808:
 11682   002192  8E33               	bsf	(___fldiv@a+2)^0,7,c
 11683   002194  0E00               	movlw	0
 11684   002196  6E34               	movwf	(___fldiv@a+3)^0,c
 11685   002198  EFD6  F010         	goto	l5814
 11686   00219C                     l5812:
 11687   00219C  0E00               	movlw	0
 11688   00219E  6E31               	movwf	___fldiv@a^0,c
 11689   0021A0  0E00               	movlw	0
 11690   0021A2  6E32               	movwf	(___fldiv@a+1)^0,c
 11691   0021A4  0E00               	movlw	0
 11692   0021A6  6E33               	movwf	(___fldiv@a+2)^0,c
 11693   0021A8  0E00               	movlw	0
 11694   0021AA  6E34               	movwf	(___fldiv@a+3)^0,c
 11695   0021AC                     l5814:
 11696   0021AC  5031               	movf	___fldiv@a^0,w,c
 11697   0021AE  1032               	iorwf	(___fldiv@a+1)^0,w,c
 11698   0021B0  1033               	iorwf	(___fldiv@a+2)^0,w,c
 11699   0021B2  1034               	iorwf	(___fldiv@a+3)^0,w,c
 11700   0021B4  A4D8               	btfss	status,2,c
 11701   0021B6  EFDF  F010         	goto	u6921
 11702   0021BA  EFE1  F010         	goto	u6920
 11703   0021BE                     u6921:
 11704   0021BE  EFF9  F010         	goto	l5826
 11705   0021C2                     u6920:
 11706   0021C2  0E00               	movlw	0
 11707   0021C4  6E2D               	movwf	___fldiv@b^0,c
 11708   0021C6  0E00               	movlw	0
 11709   0021C8  6E2E               	movwf	(___fldiv@b+1)^0,c
 11710   0021CA  0E00               	movlw	0
 11711   0021CC  6E2F               	movwf	(___fldiv@b+2)^0,c
 11712   0021CE  0E00               	movlw	0
 11713   0021D0  6E30               	movwf	(___fldiv@b+3)^0,c
 11714   0021D2  0E80               	movlw	128
 11715   0021D4  122F               	iorwf	(___fldiv@b+2)^0,f,c
 11716   0021D6  0E7F               	movlw	127
 11717   0021D8  1230               	iorwf	(___fldiv@b+3)^0,f,c
 11718   0021DA                     l5820:
 11719   0021DA  503D               	movf	___fldiv@sign^0,w,c
 11720   0021DC  1230               	iorwf	(___fldiv@b+3)^0,f,c
 11721   0021DE  C02D  F02D         	movff	___fldiv@b,?___fldiv
 11722   0021E2  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
 11723   0021E6  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
 11724   0021EA  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
 11725   0021EE  EF3C  F012         	goto	l1159
 11726   0021F2                     l5826:
 11727   0021F2  5044               	movf	___fldiv@bexp^0,w,c
 11728   0021F4  A4D8               	btfss	status,2,c
 11729   0021F6  EFFF  F010         	goto	u6931
 11730   0021FA  EF01  F011         	goto	u6930
 11731   0021FE                     u6931:
 11732   0021FE  EF0B  F011         	goto	l5834
 11733   002202                     u6930:
 11734   002202  0E00               	movlw	0
 11735   002204  6E2D               	movwf	?___fldiv^0,c
 11736   002206  0E00               	movlw	0
 11737   002208  6E2E               	movwf	(?___fldiv+1)^0,c
 11738   00220A  0E00               	movlw	0
 11739   00220C  6E2F               	movwf	(?___fldiv+2)^0,c
 11740   00220E  0E00               	movlw	0
 11741   002210  6E30               	movwf	(?___fldiv+3)^0,c
 11742   002212  EF3C  F012         	goto	l1159
 11743   002216                     l5834:
 11744   002216  5045               	movf	___fldiv@aexp^0,w,c
 11745   002218  C044  F035         	movff	___fldiv@bexp,??___fldiv
 11746   00221C  6A36               	clrf	(??___fldiv+1)^0,c
 11747   00221E  5E35               	subwf	??___fldiv^0,f,c
 11748   002220  0E00               	movlw	0
 11749   002222  5A36               	subwfb	(??___fldiv+1)^0,f,c
 11750   002224  0E7F               	movlw	127
 11751   002226  2435               	addwf	??___fldiv^0,w,c
 11752   002228  6E3E               	movwf	___fldiv@new_exp^0,c
 11753   00222A  0E00               	movlw	0
 11754   00222C  2036               	addwfc	(??___fldiv+1)^0,w,c
 11755   00222E  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 11756   002230  C02D  F039         	movff	___fldiv@b,___fldiv@rem
 11757   002234  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
 11758   002238  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
 11759   00223C  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
 11760   002240  0E00               	movlw	0
 11761   002242  6E2D               	movwf	___fldiv@b^0,c
 11762   002244  0E00               	movlw	0
 11763   002246  6E2E               	movwf	(___fldiv@b+1)^0,c
 11764   002248  0E00               	movlw	0
 11765   00224A  6E2F               	movwf	(___fldiv@b+2)^0,c
 11766   00224C  0E00               	movlw	0
 11767   00224E  6E30               	movwf	(___fldiv@b+3)^0,c
 11768   002250  0E00               	movlw	0
 11769   002252  6E40               	movwf	___fldiv@grs^0,c
 11770   002254  0E00               	movlw	0
 11771   002256  6E41               	movwf	(___fldiv@grs+1)^0,c
 11772   002258  0E00               	movlw	0
 11773   00225A  6E42               	movwf	(___fldiv@grs+2)^0,c
 11774   00225C  0E00               	movlw	0
 11775   00225E  6E43               	movwf	(___fldiv@grs+3)^0,c
 11776   002260  0E00               	movlw	0
 11777   002262  6E45               	movwf	___fldiv@aexp^0,c
 11778   002264  EF6C  F011         	goto	l1161
 11779   002268                     l5844:
 11780   002268  5045               	movf	___fldiv@aexp^0,w,c
 11781   00226A  B4D8               	btfsc	status,2,c
 11782   00226C  EF3A  F011         	goto	u6941
 11783   002270  EF3C  F011         	goto	u6940
 11784   002274                     u6941:
 11785   002274  EF53  F011         	goto	l5852
 11786   002278                     u6940:
 11787   002278  90D8               	bcf	status,0,c
 11788   00227A  3639               	rlcf	___fldiv@rem^0,f,c
 11789   00227C  363A               	rlcf	(___fldiv@rem+1)^0,f,c
 11790   00227E  363B               	rlcf	(___fldiv@rem+2)^0,f,c
 11791   002280  363C               	rlcf	(___fldiv@rem+3)^0,f,c
 11792   002282  90D8               	bcf	status,0,c
 11793   002284  362D               	rlcf	___fldiv@b^0,f,c
 11794   002286  362E               	rlcf	(___fldiv@b+1)^0,f,c
 11795   002288  362F               	rlcf	(___fldiv@b+2)^0,f,c
 11796   00228A  3630               	rlcf	(___fldiv@b+3)^0,f,c
 11797   00228C  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 11798   00228E  EF4B  F011         	goto	u6951
 11799   002292  EF4D  F011         	goto	u6950
 11800   002296                     u6951:
 11801   002296  EF4E  F011         	goto	l1164
 11802   00229A                     u6950:
 11803   00229A  802D               	bsf	___fldiv@b^0,0,c
 11804   00229C                     l1164:
 11805   00229C  90D8               	bcf	status,0,c
 11806   00229E  3640               	rlcf	___fldiv@grs^0,f,c
 11807   0022A0  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 11808   0022A2  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 11809   0022A4  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 11810   0022A6                     l5852:
 11811   0022A6  5031               	movf	___fldiv@a^0,w,c
 11812   0022A8  5C39               	subwf	___fldiv@rem^0,w,c
 11813   0022AA  5032               	movf	(___fldiv@a+1)^0,w,c
 11814   0022AC  583A               	subwfb	(___fldiv@rem+1)^0,w,c
 11815   0022AE  5033               	movf	(___fldiv@a+2)^0,w,c
 11816   0022B0  583B               	subwfb	(___fldiv@rem+2)^0,w,c
 11817   0022B2  5034               	movf	(___fldiv@a+3)^0,w,c
 11818   0022B4  583C               	subwfb	(___fldiv@rem+3)^0,w,c
 11819   0022B6  A0D8               	btfss	status,0,c
 11820   0022B8  EF60  F011         	goto	u6961
 11821   0022BC  EF62  F011         	goto	u6960
 11822   0022C0                     u6961:
 11823   0022C0  EF6B  F011         	goto	l5858
 11824   0022C4                     u6960:
 11825   0022C4  8C43               	bsf	(___fldiv@grs+3)^0,6,c
 11826   0022C6  5031               	movf	___fldiv@a^0,w,c
 11827   0022C8  5E39               	subwf	___fldiv@rem^0,f,c
 11828   0022CA  5032               	movf	(___fldiv@a+1)^0,w,c
 11829   0022CC  5A3A               	subwfb	(___fldiv@rem+1)^0,f,c
 11830   0022CE  5033               	movf	(___fldiv@a+2)^0,w,c
 11831   0022D0  5A3B               	subwfb	(___fldiv@rem+2)^0,f,c
 11832   0022D2  5034               	movf	(___fldiv@a+3)^0,w,c
 11833   0022D4  5A3C               	subwfb	(___fldiv@rem+3)^0,f,c
 11834   0022D6                     l5858:
 11835   0022D6  2A45               	incf	___fldiv@aexp^0,f,c
 11836   0022D8                     l1161:
 11837   0022D8  0E19               	movlw	25
 11838   0022DA  6445               	cpfsgt	___fldiv@aexp^0,c
 11839   0022DC  EF72  F011         	goto	u6971
 11840   0022E0  EF74  F011         	goto	u6970
 11841   0022E4                     u6971:
 11842   0022E4  EF34  F011         	goto	l5844
 11843   0022E8                     u6970:
 11844   0022E8  5039               	movf	___fldiv@rem^0,w,c
 11845   0022EA  103A               	iorwf	(___fldiv@rem+1)^0,w,c
 11846   0022EC  103B               	iorwf	(___fldiv@rem+2)^0,w,c
 11847   0022EE  103C               	iorwf	(___fldiv@rem+3)^0,w,c
 11848   0022F0  B4D8               	btfsc	status,2,c
 11849   0022F2  EF7D  F011         	goto	u6981
 11850   0022F6  EF7F  F011         	goto	u6980
 11851   0022FA                     u6981:
 11852   0022FA  EF97  F011         	goto	l5870
 11853   0022FE                     u6980:
 11854   0022FE  8040               	bsf	___fldiv@grs^0,0,c
 11855   002300  EF97  F011         	goto	l5870
 11856   002304                     l5864:
 11857   002304  90D8               	bcf	status,0,c
 11858   002306  362D               	rlcf	___fldiv@b^0,f,c
 11859   002308  362E               	rlcf	(___fldiv@b+1)^0,f,c
 11860   00230A  362F               	rlcf	(___fldiv@b+2)^0,f,c
 11861   00230C  3630               	rlcf	(___fldiv@b+3)^0,f,c
 11862   00230E  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 11863   002310  EF8C  F011         	goto	u6991
 11864   002314  EF8E  F011         	goto	u6990
 11865   002318                     u6991:
 11866   002318  EF8F  F011         	goto	l1170
 11867   00231C                     u6990:
 11868   00231C  802D               	bsf	___fldiv@b^0,0,c
 11869   00231E                     l1170:
 11870   00231E  90D8               	bcf	status,0,c
 11871   002320  3640               	rlcf	___fldiv@grs^0,f,c
 11872   002322  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 11873   002324  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 11874   002326  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 11875   002328  063E               	decf	___fldiv@new_exp^0,f,c
 11876   00232A  A0D8               	btfss	status,0,c
 11877   00232C  063F               	decf	(___fldiv@new_exp+1)^0,f,c
 11878   00232E                     l5870:
 11879   00232E  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 11880   002330  EF9C  F011         	goto	u7001
 11881   002334  EF9E  F011         	goto	u7000
 11882   002338                     u7001:
 11883   002338  EF82  F011         	goto	l5864
 11884   00233C                     u7000:
 11885   00233C  0E00               	movlw	0
 11886   00233E  6E45               	movwf	___fldiv@aexp^0,c
 11887   002340  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 11888   002342  EFA5  F011         	goto	u7011
 11889   002346  EFA7  F011         	goto	u7010
 11890   00234A                     u7011:
 11891   00234A  EFCB  F011         	goto	l1172
 11892   00234E                     u7010:
 11893   00234E  0EFF               	movlw	255
 11894   002350  1440               	andwf	___fldiv@grs^0,w,c
 11895   002352  6E35               	movwf	??___fldiv^0,c
 11896   002354  0EFF               	movlw	255
 11897   002356  1441               	andwf	(___fldiv@grs+1)^0,w,c
 11898   002358  6E36               	movwf	(??___fldiv+1)^0,c
 11899   00235A  0EFF               	movlw	255
 11900   00235C  1442               	andwf	(___fldiv@grs+2)^0,w,c
 11901   00235E  6E37               	movwf	(??___fldiv+2)^0,c
 11902   002360  0E7F               	movlw	127
 11903   002362  1443               	andwf	(___fldiv@grs+3)^0,w,c
 11904   002364  6E38               	movwf	(??___fldiv+3)^0,c
 11905   002366  5035               	movf	??___fldiv^0,w,c
 11906   002368  1036               	iorwf	(??___fldiv+1)^0,w,c
 11907   00236A  1037               	iorwf	(??___fldiv+2)^0,w,c
 11908   00236C  1038               	iorwf	(??___fldiv+3)^0,w,c
 11909   00236E  B4D8               	btfsc	status,2,c
 11910   002370  EFBC  F011         	goto	u7021
 11911   002374  EFBE  F011         	goto	u7020
 11912   002378                     u7021:
 11913   002378  EFC2  F011         	goto	l1173
 11914   00237C                     u7020:
 11915   00237C                     l5878:
 11916   00237C  0E01               	movlw	1
 11917   00237E  6E45               	movwf	___fldiv@aexp^0,c
 11918   002380  EFCB  F011         	goto	l1172
 11919   002384                     l1173:
 11920   002384  A02D               	btfss	___fldiv@b^0,0,c
 11921   002386  EFC7  F011         	goto	u7031
 11922   00238A  EFC9  F011         	goto	u7030
 11923   00238E                     u7031:
 11924   00238E  EFCB  F011         	goto	l1172
 11925   002392                     u7030:
 11926   002392  EFBE  F011         	goto	l5878
 11927   002396                     l1172:
 11928   002396  5045               	movf	___fldiv@aexp^0,w,c
 11929   002398  B4D8               	btfsc	status,2,c
 11930   00239A  EFD1  F011         	goto	u7041
 11931   00239E  EFD3  F011         	goto	u7040
 11932   0023A2                     u7041:
 11933   0023A2  EFF7  F011         	goto	l5890
 11934   0023A6                     u7040:
 11935   0023A6  0E01               	movlw	1
 11936   0023A8  262D               	addwf	___fldiv@b^0,f,c
 11937   0023AA  0E00               	movlw	0
 11938   0023AC  222E               	addwfc	(___fldiv@b+1)^0,f,c
 11939   0023AE  222F               	addwfc	(___fldiv@b+2)^0,f,c
 11940   0023B0  2230               	addwfc	(___fldiv@b+3)^0,f,c
 11941   0023B2  A030               	btfss	(___fldiv@b+3)^0,0,c
 11942   0023B4  EFDE  F011         	goto	u7051
 11943   0023B8  EFE0  F011         	goto	u7050
 11944   0023BC                     u7051:
 11945   0023BC  EFF7  F011         	goto	l5890
 11946   0023C0                     u7050:
 11947   0023C0  C02D  F035         	movff	___fldiv@b,??___fldiv
 11948   0023C4  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
 11949   0023C8  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
 11950   0023CC  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
 11951   0023D0  3438               	rlcf	(??___fldiv+3)^0,w,c
 11952   0023D2  3238               	rrcf	(??___fldiv+3)^0,f,c
 11953   0023D4  3237               	rrcf	(??___fldiv+2)^0,f,c
 11954   0023D6  3236               	rrcf	(??___fldiv+1)^0,f,c
 11955   0023D8  3235               	rrcf	??___fldiv^0,f,c
 11956   0023DA  C035  F02D         	movff	??___fldiv,___fldiv@b
 11957   0023DE  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
 11958   0023E2  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
 11959   0023E6  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
 11960   0023EA  4A3E               	infsnz	___fldiv@new_exp^0,f,c
 11961   0023EC  2A3F               	incf	(___fldiv@new_exp+1)^0,f,c
 11962   0023EE                     l5890:
 11963   0023EE  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11964   0023F0  EF02  F012         	goto	u7061
 11965   0023F4  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 11966   0023F6  E108               	bnz	u7060
 11967   0023F8  283E               	incf	___fldiv@new_exp^0,w,c
 11968   0023FA  A0D8               	btfss	status,0,c
 11969   0023FC  EF02  F012         	goto	u7061
 11970   002400  EF04  F012         	goto	u7060
 11971   002404                     u7061:
 11972   002404  EF0F  F012         	goto	l5894
 11973   002408                     u7060:
 11974   002408  0E00               	movlw	0
 11975   00240A  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 11976   00240C  683E               	setf	___fldiv@new_exp^0,c
 11977   00240E  0E00               	movlw	0
 11978   002410  6E2D               	movwf	___fldiv@b^0,c
 11979   002412  0E00               	movlw	0
 11980   002414  6E2E               	movwf	(___fldiv@b+1)^0,c
 11981   002416  0E00               	movlw	0
 11982   002418  6E2F               	movwf	(___fldiv@b+2)^0,c
 11983   00241A  0E00               	movlw	0
 11984   00241C  6E30               	movwf	(___fldiv@b+3)^0,c
 11985   00241E                     l5894:
 11986   00241E  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11987   002420  EF1C  F012         	goto	u7070
 11988   002424  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 11989   002426  E106               	bnz	u7071
 11990   002428  043E               	decf	___fldiv@new_exp^0,w,c
 11991   00242A  B0D8               	btfsc	status,0,c
 11992   00242C  EF1A  F012         	goto	u7071
 11993   002430  EF1C  F012         	goto	u7070
 11994   002434                     u7071:
 11995   002434  EF2A  F012         	goto	l5898
 11996   002438                     u7070:
 11997   002438  0E00               	movlw	0
 11998   00243A  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 11999   00243C  0E00               	movlw	0
 12000   00243E  6E3E               	movwf	___fldiv@new_exp^0,c
 12001   002440  0E00               	movlw	0
 12002   002442  6E2D               	movwf	___fldiv@b^0,c
 12003   002444  0E00               	movlw	0
 12004   002446  6E2E               	movwf	(___fldiv@b+1)^0,c
 12005   002448  0E00               	movlw	0
 12006   00244A  6E2F               	movwf	(___fldiv@b+2)^0,c
 12007   00244C  0E00               	movlw	0
 12008   00244E  6E30               	movwf	(___fldiv@b+3)^0,c
 12009   002450  0E00               	movlw	0
 12010   002452  6E3D               	movwf	___fldiv@sign^0,c
 12011   002454                     l5898:
 12012   002454  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
 12013   002458  A044               	btfss	___fldiv@bexp^0,0,c
 12014   00245A  EF31  F012         	goto	u7081
 12015   00245E  EF33  F012         	goto	u7080
 12016   002462                     u7081:
 12017   002462  EF36  F012         	goto	l5904
 12018   002466                     u7080:
 12019   002466  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 12020   002468  EF37  F012         	goto	l5906
 12021   00246C                     l5904:
 12022   00246C  9E2F               	bcf	(___fldiv@b+2)^0,7,c
 12023   00246E                     l5906:
 12024   00246E  90D8               	bcf	status,0,c
 12025   002470  3044               	rrcf	___fldiv@bexp^0,w,c
 12026   002472  6E30               	movwf	(___fldiv@b+3)^0,c
 12027   002474  EFED  F010         	goto	l5820
 12028   002478                     l1159:
 12029   002478  0012               	return		;funcret
 12030   00247A                     __end_of___fldiv:
 12031                           	callstack 0
 12032                           
 12033 ;; *************** function _dtoa *****************
 12034 ;; Defined at:
 12035 ;;		line 513 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 12036 ;; Parameters:    Size  Location     Type
 12037 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 12038 ;;		 -> NULL(0), sprintf@f(12), 
 12039 ;;  d               2   33[COMRAM] int 
 12040 ;; Auto vars:     Size  Location     Type
 12041 ;;  i               2   42[COMRAM] int 
 12042 ;;  p               2   39[COMRAM] int 
 12043 ;;  w               2   37[COMRAM] int 
 12044 ;;  s               1   41[COMRAM] unsigned char 
 12045 ;; Return value:  Size  Location     Type
 12046 ;;                  1    wreg      void 
 12047 ;; Registers used:
 12048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12049 ;; Tracked objects:
 12050 ;;		On entry : 0/0
 12051 ;;		On exit  : 0/0
 12052 ;;		Unchanged: 0/0
 12053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12055 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12057 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12058 ;;Total ram usage:       13 bytes
 12059 ;; Hardware stack levels used: 1
 12060 ;; Hardware stack levels required when called: 5
 12061 ;; This function calls:
 12062 ;;		___awdiv
 12063 ;;		___awmod
 12064 ;;		_abs
 12065 ;;		_pad
 12066 ;; This function is called by:
 12067 ;;		_vfpfcnvrt
 12068 ;; This function uses a non-reentrant model
 12069 ;;
 12070                           
 12071                           	psect	text44
 12072   0035B2                     __ptext44:
 12073                           	callstack 0
 12074   0035B2                     _dtoa:
 12075                           	callstack 21
 12076   0035B2                     
 12077                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 513: static void dtoa(FILE *fp, vfp
      +                          f_sint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 514: {;D:\MPLABX\Compile
      +                          r\pic\sources\c99\common\doprnt.c: 515:  char s;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 516:     int i, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 518:
      +                            int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 524:     s = d < 0 ? 1 : 0;
 12078   0035B2  BE23               	btfsc	(dtoa@d+1)^0,7,c
 12079   0035B4  EFDE  F01A         	goto	u7811
 12080   0035B8  EFE1  F01A         	goto	u7810
 12081   0035BC                     u7811:
 12082   0035BC  0E01               	movlw	1
 12083   0035BE  EFE2  F01A         	goto	u7820
 12084   0035C2                     u7810:
 12085   0035C2  0E00               	movlw	0
 12086   0035C4                     u7820:
 12087   0035C4  6E2A               	movwf	dtoa@s^0,c
 12088                           
 12089                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 533:     p = (0 <= prec) ? prec : 1
      +                          ;
 12090   0035C6  BE58               	btfsc	(_prec+1)^0,7,c
 12091   0035C8  EFEA  F01A         	goto	u7830
 12092   0035CC  EFE8  F01A         	goto	u7831
 12093   0035D0                     u7831:
 12094   0035D0  EFF0  F01A         	goto	l1294
 12095   0035D4                     u7830:
 12096   0035D4  0E00               	movlw	0
 12097   0035D6  6E29               	movwf	(dtoa@p+1)^0,c
 12098   0035D8  0E01               	movlw	1
 12099   0035DA  6E28               	movwf	dtoa@p^0,c
 12100   0035DC  EFF4  F01A         	goto	l1296
 12101   0035E0                     l1294:
 12102   0035E0  C057  F028         	movff	_prec,dtoa@p
 12103   0035E4  C058  F029         	movff	_prec+1,dtoa@p+1
 12104   0035E8                     l1296:
 12105                           
 12106                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 535:     w = width;
 12107   0035E8  C055  F026         	movff	_width,dtoa@w
 12108   0035EC  C056  F027         	movff	_width+1,dtoa@w+1
 12109   0035F0                     
 12110                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 536:     if (s
 12111   0035F0  502A               	movf	dtoa@s^0,w,c
 12112   0035F2  B4D8               	btfsc	status,2,c
 12113   0035F4  EFFE  F01A         	goto	u7841
 12114   0035F8  EF00  F01B         	goto	u7840
 12115   0035FC                     u7841:
 12116   0035FC  EF17  F01B         	goto	l1297
 12117   003600                     u7840:
 12118   003600                     
 12119                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 540:     ) {;D:\MPLABX\Compiler\pic
      +                          \sources\c99\common\doprnt.c: 541:         --w;
 12120   003600  0626               	decf	dtoa@w^0,f,c
 12121   003602  A0D8               	btfss	status,0,c
 12122   003604  0627               	decf	(dtoa@w+1)^0,f,c
 12123   003606                     
 12124                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-' : '+';
 12125   003606  502A               	movf	dtoa@s^0,w,c
 12126   003608  A4D8               	btfss	status,2,c
 12127   00360A  EF09  F01B         	goto	u7851
 12128   00360E  EF0B  F01B         	goto	u7850
 12129   003612                     u7851:
 12130   003612  EF11  F01B         	goto	l6326
 12131   003616                     u7850:
 12132   003616  0E00               	movlw	0
 12133   003618  6E25               	movwf	(_dtoa$3674+1)^0,c
 12134   00361A  0E2B               	movlw	43
 12135   00361C  6E24               	movwf	_dtoa$3674^0,c
 12136   00361E  EF15  F01B         	goto	l6328
 12137   003622                     l6326:
 12138   003622  0E00               	movlw	0
 12139   003624  6E25               	movwf	(_dtoa$3674+1)^0,c
 12140   003626  0E2D               	movlw	45
 12141   003628  6E24               	movwf	_dtoa$3674^0,c
 12142   00362A                     l6328:
 12143   00362A  C024  F02A         	movff	_dtoa$3674,dtoa@s
 12144   00362E                     l1297:
 12145                           
 12146                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 552:     i = sizeof(dbuf) - 1;
 12147   00362E  0E00               	movlw	0
 12148   003630  6E2C               	movwf	(dtoa@i+1)^0,c
 12149   003632  0E4F               	movlw	79
 12150   003634  6E2B               	movwf	dtoa@i^0,c
 12151   003636                     
 12152                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] = '\0';
 12153   003636  0E00               	movlw	0
 12154   003638  0101               	movlb	1	; () banked
 12155   00363A  6F74               	movwf	(_dbuf+79)& (0+255),b
 12156                           
 12157                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 12158   00363C  EF50  F01B         	goto	l6342
 12159   003640                     l6332:
 12160                           
 12161                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 563:     )) {;D:\MPLABX\Compiler\pi
      +                          c\sources\c99\common\doprnt.c: 564:         --i;
 12162   003640  062B               	decf	dtoa@i^0,f,c
 12163   003642  A0D8               	btfss	status,0,c
 12164   003644  062C               	decf	(dtoa@i+1)^0,f,c
 12165   003646                     
 12166                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 565:         dbuf[i] = (char)((int)
      +                          '0' + abs(d % 10));
 12167   003646  0E25               	movlw	low _dbuf
 12168   003648  242B               	addwf	dtoa@i^0,w,c
 12169   00364A  6ED9               	movwf	fsr2l,c
 12170   00364C  0E01               	movlw	high _dbuf
 12171   00364E  202C               	addwfc	(dtoa@i+1)^0,w,c
 12172   003650  6EDA               	movwf	fsr2h,c
 12173   003652  C022  F006         	movff	dtoa@d,___awmod@dividend
 12174   003656  C023  F007         	movff	dtoa@d+1,___awmod@dividend+1
 12175   00365A  0E00               	movlw	0
 12176   00365C  6E09               	movwf	(___awmod@divisor+1)^0,c
 12177   00365E  0E0A               	movlw	10
 12178   003660  6E08               	movwf	___awmod@divisor^0,c
 12179   003662  EC43  F021         	call	___awmod	;wreg free
 12180   003666  C006  F00C         	movff	?___awmod,abs@a
 12181   00366A  C007  F00D         	movff	?___awmod+1,abs@a+1
 12182   00366E  EC43  F024         	call	_abs	;wreg free
 12183   003672  500C               	movf	?_abs^0,w,c
 12184   003674  0F30               	addlw	48
 12185   003676  6EDF               	movwf	indf2,c
 12186   003678                     
 12187                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 567:         --p;
 12188   003678  0628               	decf	dtoa@p^0,f,c
 12189   00367A  A0D8               	btfss	status,0,c
 12190   00367C  0629               	decf	(dtoa@p+1)^0,f,c
 12191   00367E                     
 12192                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 571:         --w;
 12193   00367E  0626               	decf	dtoa@w^0,f,c
 12194   003680  A0D8               	btfss	status,0,c
 12195   003682  0627               	decf	(dtoa@w+1)^0,f,c
 12196   003684                     
 12197                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 572:         d = d / 10;
 12198   003684  C022  F006         	movff	dtoa@d,___awdiv@dividend
 12199   003688  C023  F007         	movff	dtoa@d+1,___awdiv@dividend+1
 12200   00368C  0E00               	movlw	0
 12201   00368E  6E09               	movwf	(___awdiv@divisor+1)^0,c
 12202   003690  0E0A               	movlw	10
 12203   003692  6E08               	movwf	___awdiv@divisor^0,c
 12204   003694  EC88  F020         	call	___awdiv	;wreg free
 12205   003698  C006  F022         	movff	?___awdiv,dtoa@d
 12206   00369C  C007  F023         	movff	?___awdiv+1,dtoa@d+1
 12207   0036A0                     l6342:
 12208                           
 12209                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 12210   0036A0  BE2C               	btfsc	(dtoa@i+1)^0,7,c
 12211   0036A2  EF5B  F01B         	goto	u7861
 12212   0036A6  502C               	movf	(dtoa@i+1)^0,w,c
 12213   0036A8  E108               	bnz	u7860
 12214   0036AA  042B               	decf	dtoa@i^0,w,c
 12215   0036AC  A0D8               	btfss	status,0,c
 12216   0036AE  EF5B  F01B         	goto	u7861
 12217   0036B2  EF5D  F01B         	goto	u7860
 12218   0036B6                     u7861:
 12219   0036B6  EF73  F01B         	goto	l6348
 12220   0036BA                     u7860:
 12221   0036BA  5022               	movf	dtoa@d^0,w,c
 12222   0036BC  1023               	iorwf	(dtoa@d+1)^0,w,c
 12223   0036BE  A4D8               	btfss	status,2,c
 12224   0036C0  EF64  F01B         	goto	u7871
 12225   0036C4  EF66  F01B         	goto	u7870
 12226   0036C8                     u7871:
 12227   0036C8  EF20  F01B         	goto	l6332
 12228   0036CC                     u7870:
 12229   0036CC  BE29               	btfsc	(dtoa@p+1)^0,7,c
 12230   0036CE  EF73  F01B         	goto	u7880
 12231   0036D2  5029               	movf	(dtoa@p+1)^0,w,c
 12232   0036D4  E106               	bnz	u7881
 12233   0036D6  0428               	decf	dtoa@p^0,w,c
 12234   0036D8  B0D8               	btfsc	status,0,c
 12235   0036DA  EF71  F01B         	goto	u7881
 12236   0036DE  EF73  F01B         	goto	u7880
 12237   0036E2                     u7881:
 12238   0036E2  EF20  F01B         	goto	l6332
 12239   0036E6                     u7880:
 12240   0036E6                     l6348:
 12241                           
 12242                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 576:     if (s != 0) {
 12243   0036E6  502A               	movf	dtoa@s^0,w,c
 12244   0036E8  B4D8               	btfsc	status,2,c
 12245   0036EA  EF79  F01B         	goto	u7891
 12246   0036EE  EF7B  F01B         	goto	u7890
 12247   0036F2                     u7891:
 12248   0036F2  EF86  F01B         	goto	l6354
 12249   0036F6                     u7890:
 12250   0036F6                     
 12251                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 577:         --i;
 12252   0036F6  062B               	decf	dtoa@i^0,f,c
 12253   0036F8  A0D8               	btfss	status,0,c
 12254   0036FA  062C               	decf	(dtoa@i+1)^0,f,c
 12255   0036FC                     
 12256                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 578:         dbuf[i] = s;
 12257   0036FC  0E25               	movlw	low _dbuf
 12258   0036FE  242B               	addwf	dtoa@i^0,w,c
 12259   003700  6ED9               	movwf	fsr2l,c
 12260   003702  0E01               	movlw	high _dbuf
 12261   003704  202C               	addwfc	(dtoa@i+1)^0,w,c
 12262   003706  6EDA               	movwf	fsr2h,c
 12263   003708  C02A  FFDF         	movff	dtoa@s,indf2
 12264   00370C                     l6354:
 12265                           
 12266                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 582:     return (void) pad(fp, &dbu
      +                          f[i], w);
 12267   00370C  C020  F017         	movff	dtoa@fp,pad@fp
 12268   003710  C021  F018         	movff	dtoa@fp+1,pad@fp+1
 12269   003714  0E25               	movlw	low _dbuf
 12270   003716  242B               	addwf	dtoa@i^0,w,c
 12271   003718  6E19               	movwf	pad@buf^0,c
 12272   00371A  0E01               	movlw	high _dbuf
 12273   00371C  202C               	addwfc	(dtoa@i+1)^0,w,c
 12274   00371E  6E1A               	movwf	(pad@buf+1)^0,c
 12275   003720  C026  F01B         	movff	dtoa@w,pad@p
 12276   003724  C027  F01C         	movff	dtoa@w+1,pad@p+1
 12277   003728  EC47  F022         	call	_pad	;wreg free
 12278   00372C  0012               	return		;funcret
 12279   00372E                     __end_of_dtoa:
 12280                           	callstack 0
 12281                           
 12282 ;; *************** function _pad *****************
 12283 ;; Defined at:
 12284 ;;		line 193 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 12285 ;; Parameters:    Size  Location     Type
 12286 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 12287 ;;		 -> NULL(0), sprintf@f(12), 
 12288 ;;  buf             2   24[COMRAM] PTR unsigned char 
 12289 ;;		 -> dbuf(80), 
 12290 ;;  p               2   26[COMRAM] int 
 12291 ;; Auto vars:     Size  Location     Type
 12292 ;;  i               2   29[COMRAM] int 
 12293 ;; Return value:  Size  Location     Type
 12294 ;;                  1    wreg      void 
 12295 ;; Registers used:
 12296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12297 ;; Tracked objects:
 12298 ;;		On entry : 0/0
 12299 ;;		On exit  : 0/0
 12300 ;;		Unchanged: 0/0
 12301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12302 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12304 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12305 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12306 ;;Total ram usage:        9 bytes
 12307 ;; Hardware stack levels used: 1
 12308 ;; Hardware stack levels required when called: 4
 12309 ;; This function calls:
 12310 ;;		_fputc
 12311 ;;		_fputs
 12312 ;; This function is called by:
 12313 ;;		_dtoa
 12314 ;;		_efgtoa
 12315 ;; This function uses a non-reentrant model
 12316 ;;
 12317                           
 12318                           	psect	text45
 12319   00448E                     __ptext45:
 12320                           	callstack 0
 12321   00448E                     _pad:
 12322                           	callstack 21
 12323   00448E                     
 12324                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 193: static void pad(FILE *fp, char
      +                           *buf, int p);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 194: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 195:     int i;;D:\MPLABX\Compiler\pic\sources\c99\
      +                          common\doprnt.c: 199:     if (flags & (1 << 0)) {
 12325   00448E  A059               	btfss	_flags^0,0,c
 12326   004490  EF4C  F022         	goto	u7561
 12327   004494  EF4E  F022         	goto	u7560
 12328   004498                     u7561:
 12329   004498  EF58  F022         	goto	l6224
 12330   00449C                     u7560:
 12331   00449C                     
 12332                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 200:         fputs((const char *)bu
      +                          f, fp);
 12333   00449C  C019  F010         	movff	pad@buf,fputs@s
 12334   0044A0  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12335   0044A4  C017  F012         	movff	pad@fp,fputs@fp
 12336   0044A8  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12337   0044AC  EC79  F023         	call	_fputs	;wreg free
 12338   0044B0                     l6224:
 12339                           
 12340                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) {
 12341   0044B0  BE1C               	btfsc	(pad@p+1)^0,7,c
 12342   0044B2  EF5F  F022         	goto	u7570
 12343   0044B6  EF5D  F022         	goto	u7571
 12344   0044BA                     u7571:
 12345   0044BA  EF63  F022         	goto	l1285
 12346   0044BE                     u7570:
 12347   0044BE                     
 12348                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 12349   0044BE  0E00               	movlw	0
 12350   0044C0  6E1C               	movwf	(pad@p+1)^0,c
 12351   0044C2  0E00               	movlw	0
 12352   0044C4  6E1B               	movwf	pad@p^0,c
 12353   0044C6                     l1285:
 12354                           
 12355                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 12356   0044C6  0E00               	movlw	0
 12357   0044C8  6E1F               	movwf	(pad@i+1)^0,c
 12358   0044CA  0E00               	movlw	0
 12359   0044CC  6E1E               	movwf	pad@i^0,c
 12360                           
 12361                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 12362   0044CE  EF75  F022         	goto	l6232
 12363   0044D2                     l6228:
 12364                           
 12365                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 210:         fputc(' ', fp);
 12366   0044D2  0E00               	movlw	0
 12367   0044D4  6E08               	movwf	(fputc@c+1)^0,c
 12368   0044D6  0E20               	movlw	32
 12369   0044D8  6E07               	movwf	fputc@c^0,c
 12370   0044DA  C017  F009         	movff	pad@fp,fputc@fp
 12371   0044DE  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 12372   0044E2  EC23  F020         	call	_fputc	;wreg free
 12373   0044E6                     
 12374                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 211:         ++i;
 12375   0044E6  4A1E               	infsnz	pad@i^0,f,c
 12376   0044E8  2A1F               	incf	(pad@i+1)^0,f,c
 12377   0044EA                     l6232:
 12378                           
 12379                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 12380   0044EA  501B               	movf	pad@p^0,w,c
 12381   0044EC  5C1E               	subwf	pad@i^0,w,c
 12382   0044EE  501F               	movf	(pad@i+1)^0,w,c
 12383   0044F0  0A80               	xorlw	128
 12384   0044F2  6E1D               	movwf	??_pad^0,c
 12385   0044F4  501C               	movf	(pad@p+1)^0,w,c
 12386   0044F6  0A80               	xorlw	128
 12387   0044F8  581D               	subwfb	??_pad^0,w,c
 12388   0044FA  A0D8               	btfss	status,0,c
 12389   0044FC  EF82  F022         	goto	u7581
 12390   004500  EF84  F022         	goto	u7580
 12391   004504                     u7581:
 12392   004504  EF69  F022         	goto	l6228
 12393   004508                     u7580:
 12394   004508                     
 12395                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 216:     if (!(flags & (1 << 0))) {
 12396   004508  B059               	btfsc	_flags^0,0,c
 12397   00450A  EF89  F022         	goto	u7591
 12398   00450E  EF8B  F022         	goto	u7590
 12399   004512                     u7591:
 12400   004512  EF95  F022         	goto	l1290
 12401   004516                     u7590:
 12402   004516                     
 12403                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 218:         fputs((const char *)bu
      +                          f, fp);
 12404   004516  C019  F010         	movff	pad@buf,fputs@s
 12405   00451A  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12406   00451E  C017  F012         	movff	pad@fp,fputs@fp
 12407   004522  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12408   004526  EC79  F023         	call	_fputs	;wreg free
 12409   00452A                     l1290:
 12410   00452A  0012               	return		;funcret
 12411   00452C                     __end_of_pad:
 12412                           	callstack 0
 12413                           
 12414 ;; *************** function _fputs *****************
 12415 ;; Defined at:
 12416 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputs.c"
 12417 ;; Parameters:    Size  Location     Type
 12418 ;;  s               2   15[COMRAM] PTR const unsigned char 
 12419 ;;		 -> dbuf(80), 
 12420 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 12421 ;;		 -> NULL(0), sprintf@f(12), 
 12422 ;; Auto vars:     Size  Location     Type
 12423 ;;  i               2   20[COMRAM] int 
 12424 ;;  c               1   19[COMRAM] unsigned char 
 12425 ;; Return value:  Size  Location     Type
 12426 ;;                  2   15[COMRAM] int 
 12427 ;; Registers used:
 12428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12429 ;; Tracked objects:
 12430 ;;		On entry : 0/0
 12431 ;;		On exit  : 0/0
 12432 ;;		Unchanged: 0/0
 12433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12435 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12437 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12438 ;;Total ram usage:        7 bytes
 12439 ;; Hardware stack levels used: 1
 12440 ;; Hardware stack levels required when called: 3
 12441 ;; This function calls:
 12442 ;;		_fputc
 12443 ;; This function is called by:
 12444 ;;		_pad
 12445 ;; This function uses a non-reentrant model
 12446 ;;
 12447                           
 12448                           	psect	text46
 12449   0046F2                     __ptext46:
 12450                           	callstack 0
 12451   0046F2                     _fputs:
 12452                           	callstack 21
 12453   0046F2  0E00               	movlw	0
 12454   0046F4  6E16               	movwf	(fputs@i+1)^0,c
 12455   0046F6  0E00               	movlw	0
 12456   0046F8  6E15               	movwf	fputs@i^0,c
 12457   0046FA  EF8A  F023         	goto	l5768
 12458   0046FE                     l5764:
 12459   0046FE  C014  F007         	movff	fputs@c,fputc@c
 12460   004702  6A08               	clrf	(fputc@c+1)^0,c
 12461   004704  C012  F009         	movff	fputs@fp,fputc@fp
 12462   004708  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 12463   00470C  EC23  F020         	call	_fputc	;wreg free
 12464   004710  4A15               	infsnz	fputs@i^0,f,c
 12465   004712  2A16               	incf	(fputs@i+1)^0,f,c
 12466   004714                     l5768:
 12467   004714  5015               	movf	fputs@i^0,w,c
 12468   004716  2410               	addwf	fputs@s^0,w,c
 12469   004718  6ED9               	movwf	fsr2l,c
 12470   00471A  5016               	movf	(fputs@i+1)^0,w,c
 12471   00471C  2011               	addwfc	(fputs@s+1)^0,w,c
 12472   00471E  6EDA               	movwf	fsr2h,c
 12473   004720  50DF               	movf	indf2,w,c
 12474   004722  6E14               	movwf	fputs@c^0,c
 12475   004724  5014               	movf	fputs@c^0,w,c
 12476   004726  A4D8               	btfss	status,2,c
 12477   004728  EF98  F023         	goto	u6851
 12478   00472C  EF9A  F023         	goto	u6850
 12479   004730                     u6851:
 12480   004730  EF7F  F023         	goto	l5764
 12481   004734                     u6850:
 12482   004734  0012               	return		;funcret
 12483   004736                     __end_of_fputs:
 12484                           	callstack 0
 12485                           
 12486 ;; *************** function _fputc *****************
 12487 ;; Defined at:
 12488 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputc.c"
 12489 ;; Parameters:    Size  Location     Type
 12490 ;;  c               2    6[COMRAM] int 
 12491 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 12492 ;;		 -> NULL(0), sprintf@f(12), 
 12493 ;; Auto vars:     Size  Location     Type
 12494 ;;		None
 12495 ;; Return value:  Size  Location     Type
 12496 ;;                  2    6[COMRAM] int 
 12497 ;; Registers used:
 12498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12499 ;; Tracked objects:
 12500 ;;		On entry : 0/0
 12501 ;;		On exit  : 0/0
 12502 ;;		Unchanged: 0/0
 12503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12506 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12507 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12508 ;;Total ram usage:        9 bytes
 12509 ;; Hardware stack levels used: 1
 12510 ;; Hardware stack levels required when called: 2
 12511 ;; This function calls:
 12512 ;;		_putch
 12513 ;; This function is called by:
 12514 ;;		_pad
 12515 ;;		_stoa
 12516 ;;		_vfpfcnvrt
 12517 ;;		_fputs
 12518 ;; This function uses a non-reentrant model
 12519 ;;
 12520                           
 12521                           	psect	text47
 12522   004046                     __ptext47:
 12523                           	callstack 0
 12524   004046                     _fputc:
 12525                           	callstack 23
 12526   004046  5009               	movf	fputc@fp^0,w,c
 12527   004048  100A               	iorwf	(fputc@fp+1)^0,w,c
 12528   00404A  B4D8               	btfsc	status,2,c
 12529   00404C  EF2A  F020         	goto	u6421
 12530   004050  EF2C  F020         	goto	u6420
 12531   004054                     u6421:
 12532   004054  EF35  F020         	goto	l5550
 12533   004058                     u6420:
 12534   004058  5009               	movf	fputc@fp^0,w,c
 12535   00405A  100A               	iorwf	(fputc@fp+1)^0,w,c
 12536   00405C  A4D8               	btfss	status,2,c
 12537   00405E  EF33  F020         	goto	u6431
 12538   004062  EF35  F020         	goto	u6430
 12539   004066                     u6431:
 12540   004066  EF3A  F020         	goto	l5552
 12541   00406A                     u6430:
 12542   00406A                     l5550:
 12543   00406A  5007               	movf	fputc@c^0,w,c
 12544   00406C  ECA7  F024         	call	_putch
 12545   004070  EF87  F020         	goto	l1486
 12546   004074                     l5552:
 12547   004074  EE20 F00A          	lfsr	2,10
 12548   004078  5009               	movf	fputc@fp^0,w,c
 12549   00407A  26D9               	addwf	fsr2l,f,c
 12550   00407C  500A               	movf	(fputc@fp+1)^0,w,c
 12551   00407E  22DA               	addwfc	fsr2h,f,c
 12552   004080  50DE               	movf	postinc2,w,c
 12553   004082  10DE               	iorwf	postinc2,w,c
 12554   004084  B4D8               	btfsc	status,2,c
 12555   004086  EF47  F020         	goto	u6441
 12556   00408A  EF49  F020         	goto	u6440
 12557   00408E                     u6441:
 12558   00408E  EF64  F020         	goto	l5556
 12559   004092                     u6440:
 12560   004092  EE20 F00A          	lfsr	2,10
 12561   004096  5009               	movf	fputc@fp^0,w,c
 12562   004098  26D9               	addwf	fsr2l,f,c
 12563   00409A  500A               	movf	(fputc@fp+1)^0,w,c
 12564   00409C  22DA               	addwfc	fsr2h,f,c
 12565   00409E  EE10 F003          	lfsr	1,3
 12566   0040A2  5009               	movf	fputc@fp^0,w,c
 12567   0040A4  26E1               	addwf	fsr1l,f,c
 12568   0040A6  500A               	movf	(fputc@fp+1)^0,w,c
 12569   0040A8  22E2               	addwfc	fsr1h,f,c
 12570   0040AA  50DE               	movf	postinc2,w,c
 12571   0040AC  5CE6               	subwf	postinc1,w,c
 12572   0040AE  50E6               	movf	postinc1,w,c
 12573   0040B0  0A80               	xorlw	128
 12574   0040B2  6E0F               	movwf	(??_fputc+4)^0,c
 12575   0040B4  50DE               	movf	postinc2,w,c
 12576   0040B6  0A80               	xorlw	128
 12577   0040B8  580F               	subwfb	(??_fputc+4)^0,w,c
 12578   0040BA  B0D8               	btfsc	status,0,c
 12579   0040BC  EF62  F020         	goto	u6451
 12580   0040C0  EF64  F020         	goto	u6450
 12581   0040C4                     u6451:
 12582   0040C4  EF87  F020         	goto	l1486
 12583   0040C8                     u6450:
 12584   0040C8                     l5556:
 12585   0040C8  EE20 F003          	lfsr	2,3
 12586   0040CC  5009               	movf	fputc@fp^0,w,c
 12587   0040CE  26D9               	addwf	fsr2l,f,c
 12588   0040D0  500A               	movf	(fputc@fp+1)^0,w,c
 12589   0040D2  22DA               	addwfc	fsr2h,f,c
 12590   0040D4  CFDE F00B          	movff	postinc2,??_fputc
 12591   0040D8  CFDD F00C          	movff	postdec2,??_fputc+1
 12592   0040DC  C009  FFD9         	movff	fputc@fp,fsr2l
 12593   0040E0  C00A  FFDA         	movff	fputc@fp+1,fsr2h
 12594   0040E4  CFDE F00D          	movff	postinc2,??_fputc+2
 12595   0040E8  CFDD F00E          	movff	postdec2,??_fputc+3
 12596   0040EC  500B               	movf	??_fputc^0,w,c
 12597   0040EE  240D               	addwf	(??_fputc+2)^0,w,c
 12598   0040F0  6ED9               	movwf	fsr2l,c
 12599   0040F2  500C               	movf	(??_fputc+1)^0,w,c
 12600   0040F4  200E               	addwfc	(??_fputc+3)^0,w,c
 12601   0040F6  6EDA               	movwf	fsr2h,c
 12602   0040F8  C007  FFDF         	movff	fputc@c,indf2
 12603   0040FC  EE20 F003          	lfsr	2,3
 12604   004100  5009               	movf	fputc@fp^0,w,c
 12605   004102  26D9               	addwf	fsr2l,f,c
 12606   004104  500A               	movf	(fputc@fp+1)^0,w,c
 12607   004106  22DA               	addwfc	fsr2h,f,c
 12608   004108  2ADE               	incf	postinc2,f,c
 12609   00410A  0E00               	movlw	0
 12610   00410C  22DD               	addwfc	postdec2,f,c
 12611   00410E                     l1486:
 12612   00410E  0012               	return		;funcret
 12613   004110                     __end_of_fputc:
 12614                           	callstack 0
 12615                           
 12616 ;; *************** function _putch *****************
 12617 ;; Defined at:
 12618 ;;		line 11 in file "putch.c"
 12619 ;; Parameters:    Size  Location     Type
 12620 ;;  data            1    wreg     unsigned char 
 12621 ;; Auto vars:     Size  Location     Type
 12622 ;;  data            1    5[COMRAM] unsigned char 
 12623 ;; Return value:  Size  Location     Type
 12624 ;;                  1    wreg      void 
 12625 ;; Registers used:
 12626 ;;		wreg
 12627 ;; Tracked objects:
 12628 ;;		On entry : 0/0
 12629 ;;		On exit  : 0/0
 12630 ;;		Unchanged: 0/0
 12631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12636 ;;Total ram usage:        1 bytes
 12637 ;; Hardware stack levels used: 1
 12638 ;; Hardware stack levels required when called: 1
 12639 ;; This function calls:
 12640 ;;		Nothing
 12641 ;; This function is called by:
 12642 ;;		_fputc
 12643 ;; This function uses a non-reentrant model
 12644 ;;
 12645                           
 12646                           	psect	text48
 12647   00494E                     __ptext48:
 12648                           	callstack 0
 12649   00494E                     _putch:
 12650                           	callstack 23
 12651                           
 12652                           ;incstack = 0
 12653                           ;putch@data stored from wreg
 12654   00494E  6E06               	movwf	putch@data^0,c
 12655   004950                     l254:
 12656   004950  A89E               	btfss	3998,4,c	;volatile
 12657   004952  EFAD  F024         	goto	u6411
 12658   004956  EFAF  F024         	goto	u6410
 12659   00495A                     u6411:
 12660   00495A  EFA8  F024         	goto	l254
 12661   00495E                     u6410:
 12662   00495E                     
 12663                           ;putch.c: 13:     TXREG1 = data;
 12664   00495E  C006  FFAD         	movff	putch@data,4013	;volatile
 12665   004962  0012               	return		;funcret
 12666   004964                     __end_of_putch:
 12667                           	callstack 0
 12668                           
 12669 ;; *************** function _abs *****************
 12670 ;; Defined at:
 12671 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\abs.c"
 12672 ;; Parameters:    Size  Location     Type
 12673 ;;  a               2   11[COMRAM] int 
 12674 ;; Auto vars:     Size  Location     Type
 12675 ;;		None
 12676 ;; Return value:  Size  Location     Type
 12677 ;;                  2   11[COMRAM] int 
 12678 ;; Registers used:
 12679 ;;		wreg, status,2, status,0
 12680 ;; Tracked objects:
 12681 ;;		On entry : 0/0
 12682 ;;		On exit  : 0/0
 12683 ;;		Unchanged: 0/0
 12684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12687 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12688 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12689 ;;Total ram usage:        4 bytes
 12690 ;; Hardware stack levels used: 1
 12691 ;; Hardware stack levels required when called: 1
 12692 ;; This function calls:
 12693 ;;		Nothing
 12694 ;; This function is called by:
 12695 ;;		_dtoa
 12696 ;; This function uses a non-reentrant model
 12697 ;;
 12698                           
 12699                           	psect	text49
 12700   004886                     __ptext49:
 12701                           	callstack 0
 12702   004886                     _abs:
 12703                           	callstack 24
 12704   004886  BE0D               	btfsc	(abs@a+1)^0,7,c
 12705   004888  EF48  F024         	goto	u7601
 12706   00488C  EF4A  F024         	goto	u7600
 12707   004890                     u7601:
 12708   004890  EF50  F024         	goto	l1445
 12709   004894                     u7600:
 12710   004894  C00C  F00C         	movff	abs@a,?_abs
 12711   004898  C00D  F00D         	movff	abs@a+1,?_abs+1
 12712   00489C  EF5C  F024         	goto	l1448
 12713   0048A0                     l1445:
 12714   0048A0  C00C  F00E         	movff	abs@a,??_abs
 12715   0048A4  C00D  F00F         	movff	abs@a+1,??_abs+1
 12716   0048A8  1E0E               	comf	??_abs^0,f,c
 12717   0048AA  1E0F               	comf	(??_abs+1)^0,f,c
 12718   0048AC  4A0E               	infsnz	??_abs^0,f,c
 12719   0048AE  2A0F               	incf	(??_abs+1)^0,f,c
 12720   0048B0  C00E  F00C         	movff	??_abs,?_abs
 12721   0048B4  C00F  F00D         	movff	??_abs+1,?_abs+1
 12722   0048B8                     l1448:
 12723   0048B8  0012               	return		;funcret
 12724   0048BA                     __end_of_abs:
 12725                           	callstack 0
 12726                           
 12727 ;; *************** function ___awmod *****************
 12728 ;; Defined at:
 12729 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awmod.c"
 12730 ;; Parameters:    Size  Location     Type
 12731 ;;  dividend        2    5[COMRAM] int 
 12732 ;;  divisor         2    7[COMRAM] int 
 12733 ;; Auto vars:     Size  Location     Type
 12734 ;;  sign            1   10[COMRAM] unsigned char 
 12735 ;;  counter         1    9[COMRAM] unsigned char 
 12736 ;; Return value:  Size  Location     Type
 12737 ;;                  2    5[COMRAM] int 
 12738 ;; Registers used:
 12739 ;;		wreg, status,2, status,0
 12740 ;; Tracked objects:
 12741 ;;		On entry : 0/0
 12742 ;;		On exit  : 0/0
 12743 ;;		Unchanged: 0/0
 12744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12745 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12746 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12748 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12749 ;;Total ram usage:        6 bytes
 12750 ;; Hardware stack levels used: 1
 12751 ;; Hardware stack levels required when called: 1
 12752 ;; This function calls:
 12753 ;;		Nothing
 12754 ;; This function is called by:
 12755 ;;		_dtoa
 12756 ;; This function uses a non-reentrant model
 12757 ;;
 12758                           
 12759                           	psect	text50
 12760   004286                     __ptext50:
 12761                           	callstack 0
 12762   004286                     ___awmod:
 12763                           	callstack 24
 12764   004286  0E00               	movlw	0
 12765   004288  6E0B               	movwf	___awmod@sign^0,c
 12766   00428A  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 12767   00428C  EF4C  F021         	goto	u7340
 12768   004290  EF4A  F021         	goto	u7341
 12769   004294                     u7341:
 12770   004294  EF52  F021         	goto	l6102
 12771   004298                     u7340:
 12772   004298  6C06               	negf	___awmod@dividend^0,c
 12773   00429A  1E07               	comf	(___awmod@dividend+1)^0,f,c
 12774   00429C  B0D8               	btfsc	status,0,c
 12775   00429E  2A07               	incf	(___awmod@dividend+1)^0,f,c
 12776   0042A0  0E01               	movlw	1
 12777   0042A2  6E0B               	movwf	___awmod@sign^0,c
 12778   0042A4                     l6102:
 12779   0042A4  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 12780   0042A6  EF59  F021         	goto	u7350
 12781   0042AA  EF57  F021         	goto	u7351
 12782   0042AE                     u7351:
 12783   0042AE  EF5D  F021         	goto	l6106
 12784   0042B2                     u7350:
 12785   0042B2  6C08               	negf	___awmod@divisor^0,c
 12786   0042B4  1E09               	comf	(___awmod@divisor+1)^0,f,c
 12787   0042B6  B0D8               	btfsc	status,0,c
 12788   0042B8  2A09               	incf	(___awmod@divisor+1)^0,f,c
 12789   0042BA                     l6106:
 12790   0042BA  5008               	movf	___awmod@divisor^0,w,c
 12791   0042BC  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 12792   0042BE  B4D8               	btfsc	status,2,c
 12793   0042C0  EF64  F021         	goto	u7361
 12794   0042C4  EF66  F021         	goto	u7360
 12795   0042C8                     u7361:
 12796   0042C8  EF8A  F021         	goto	l6122
 12797   0042CC                     u7360:
 12798   0042CC  0E01               	movlw	1
 12799   0042CE  6E0A               	movwf	___awmod@counter^0,c
 12800   0042D0  EF6E  F021         	goto	l6112
 12801   0042D4                     l6110:
 12802   0042D4  90D8               	bcf	status,0,c
 12803   0042D6  3608               	rlcf	___awmod@divisor^0,f,c
 12804   0042D8  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 12805   0042DA  2A0A               	incf	___awmod@counter^0,f,c
 12806   0042DC                     l6112:
 12807   0042DC  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 12808   0042DE  EF73  F021         	goto	u7371
 12809   0042E2  EF75  F021         	goto	u7370
 12810   0042E6                     u7371:
 12811   0042E6  EF6A  F021         	goto	l6110
 12812   0042EA                     u7370:
 12813   0042EA                     l6114:
 12814   0042EA  5008               	movf	___awmod@divisor^0,w,c
 12815   0042EC  5C06               	subwf	___awmod@dividend^0,w,c
 12816   0042EE  5009               	movf	(___awmod@divisor+1)^0,w,c
 12817   0042F0  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 12818   0042F2  A0D8               	btfss	status,0,c
 12819   0042F4  EF7E  F021         	goto	u7381
 12820   0042F8  EF80  F021         	goto	u7380
 12821   0042FC                     u7381:
 12822   0042FC  EF84  F021         	goto	l6118
 12823   004300                     u7380:
 12824   004300  5008               	movf	___awmod@divisor^0,w,c
 12825   004302  5E06               	subwf	___awmod@dividend^0,f,c
 12826   004304  5009               	movf	(___awmod@divisor+1)^0,w,c
 12827   004306  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 12828   004308                     l6118:
 12829   004308  90D8               	bcf	status,0,c
 12830   00430A  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 12831   00430C  3208               	rrcf	___awmod@divisor^0,f,c
 12832   00430E  2E0A               	decfsz	___awmod@counter^0,f,c
 12833   004310  EF75  F021         	goto	l6114
 12834   004314                     l6122:
 12835   004314  500B               	movf	___awmod@sign^0,w,c
 12836   004316  B4D8               	btfsc	status,2,c
 12837   004318  EF90  F021         	goto	u7391
 12838   00431C  EF92  F021         	goto	u7390
 12839   004320                     u7391:
 12840   004320  EF96  F021         	goto	l6126
 12841   004324                     u7390:
 12842   004324  6C06               	negf	___awmod@dividend^0,c
 12843   004326  1E07               	comf	(___awmod@dividend+1)^0,f,c
 12844   004328  B0D8               	btfsc	status,0,c
 12845   00432A  2A07               	incf	(___awmod@dividend+1)^0,f,c
 12846   00432C                     l6126:
 12847   00432C  C006  F006         	movff	___awmod@dividend,?___awmod
 12848   004330  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 12849   004334  0012               	return		;funcret
 12850   004336                     __end_of___awmod:
 12851                           	callstack 0
 12852                           
 12853 ;; *************** function ___awdiv *****************
 12854 ;; Defined at:
 12855 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awdiv.c"
 12856 ;; Parameters:    Size  Location     Type
 12857 ;;  dividend        2    5[COMRAM] int 
 12858 ;;  divisor         2    7[COMRAM] int 
 12859 ;; Auto vars:     Size  Location     Type
 12860 ;;  quotient        2   11[COMRAM] int 
 12861 ;;  sign            1   10[COMRAM] unsigned char 
 12862 ;;  counter         1    9[COMRAM] unsigned char 
 12863 ;; Return value:  Size  Location     Type
 12864 ;;                  2    5[COMRAM] int 
 12865 ;; Registers used:
 12866 ;;		wreg, status,2, status,0
 12867 ;; Tracked objects:
 12868 ;;		On entry : 0/0
 12869 ;;		On exit  : 0/0
 12870 ;;		Unchanged: 0/0
 12871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12873 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12875 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12876 ;;Total ram usage:        8 bytes
 12877 ;; Hardware stack levels used: 1
 12878 ;; Hardware stack levels required when called: 1
 12879 ;; This function calls:
 12880 ;;		Nothing
 12881 ;; This function is called by:
 12882 ;;		_runPWM
 12883 ;;		_dtoa
 12884 ;; This function uses a non-reentrant model
 12885 ;;
 12886                           
 12887                           	psect	text51
 12888   004110                     __ptext51:
 12889                           	callstack 0
 12890   004110                     ___awdiv:
 12891                           	callstack 24
 12892   004110  0E00               	movlw	0
 12893   004112  6E0B               	movwf	___awdiv@sign^0,c
 12894   004114  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
 12895   004116  EF91  F020         	goto	u7280
 12896   00411A  EF8F  F020         	goto	u7281
 12897   00411E                     u7281:
 12898   00411E  EF97  F020         	goto	l6058
 12899   004122                     u7280:
 12900   004122  6C08               	negf	___awdiv@divisor^0,c
 12901   004124  1E09               	comf	(___awdiv@divisor+1)^0,f,c
 12902   004126  B0D8               	btfsc	status,0,c
 12903   004128  2A09               	incf	(___awdiv@divisor+1)^0,f,c
 12904   00412A  0E01               	movlw	1
 12905   00412C  6E0B               	movwf	___awdiv@sign^0,c
 12906   00412E                     l6058:
 12907   00412E  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
 12908   004130  EF9E  F020         	goto	u7290
 12909   004134  EF9C  F020         	goto	u7291
 12910   004138                     u7291:
 12911   004138  EFA4  F020         	goto	l6064
 12912   00413C                     u7290:
 12913   00413C  6C06               	negf	___awdiv@dividend^0,c
 12914   00413E  1E07               	comf	(___awdiv@dividend+1)^0,f,c
 12915   004140  B0D8               	btfsc	status,0,c
 12916   004142  2A07               	incf	(___awdiv@dividend+1)^0,f,c
 12917   004144  0E01               	movlw	1
 12918   004146  1A0B               	xorwf	___awdiv@sign^0,f,c
 12919   004148                     l6064:
 12920   004148  0E00               	movlw	0
 12921   00414A  6E0D               	movwf	(___awdiv@quotient+1)^0,c
 12922   00414C  0E00               	movlw	0
 12923   00414E  6E0C               	movwf	___awdiv@quotient^0,c
 12924   004150  5008               	movf	___awdiv@divisor^0,w,c
 12925   004152  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
 12926   004154  B4D8               	btfsc	status,2,c
 12927   004156  EFAF  F020         	goto	u7301
 12928   00415A  EFB1  F020         	goto	u7300
 12929   00415E                     u7301:
 12930   00415E  EFD9  F020         	goto	l6086
 12931   004162                     u7300:
 12932   004162  0E01               	movlw	1
 12933   004164  6E0A               	movwf	___awdiv@counter^0,c
 12934   004166  EFB9  F020         	goto	l6072
 12935   00416A                     l6070:
 12936   00416A  90D8               	bcf	status,0,c
 12937   00416C  3608               	rlcf	___awdiv@divisor^0,f,c
 12938   00416E  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
 12939   004170  2A0A               	incf	___awdiv@counter^0,f,c
 12940   004172                     l6072:
 12941   004172  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
 12942   004174  EFBE  F020         	goto	u7311
 12943   004178  EFC0  F020         	goto	u7310
 12944   00417C                     u7311:
 12945   00417C  EFB5  F020         	goto	l6070
 12946   004180                     u7310:
 12947   004180                     l6074:
 12948   004180  90D8               	bcf	status,0,c
 12949   004182  360C               	rlcf	___awdiv@quotient^0,f,c
 12950   004184  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
 12951   004186  5008               	movf	___awdiv@divisor^0,w,c
 12952   004188  5C06               	subwf	___awdiv@dividend^0,w,c
 12953   00418A  5009               	movf	(___awdiv@divisor+1)^0,w,c
 12954   00418C  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
 12955   00418E  A0D8               	btfss	status,0,c
 12956   004190  EFCC  F020         	goto	u7321
 12957   004194  EFCE  F020         	goto	u7320
 12958   004198                     u7321:
 12959   004198  EFD3  F020         	goto	l6082
 12960   00419C                     u7320:
 12961   00419C  5008               	movf	___awdiv@divisor^0,w,c
 12962   00419E  5E06               	subwf	___awdiv@dividend^0,f,c
 12963   0041A0  5009               	movf	(___awdiv@divisor+1)^0,w,c
 12964   0041A2  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
 12965   0041A4  800C               	bsf	___awdiv@quotient^0,0,c
 12966   0041A6                     l6082:
 12967   0041A6  90D8               	bcf	status,0,c
 12968   0041A8  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
 12969   0041AA  3208               	rrcf	___awdiv@divisor^0,f,c
 12970   0041AC  2E0A               	decfsz	___awdiv@counter^0,f,c
 12971   0041AE  EFC0  F020         	goto	l6074
 12972   0041B2                     l6086:
 12973   0041B2  500B               	movf	___awdiv@sign^0,w,c
 12974   0041B4  B4D8               	btfsc	status,2,c
 12975   0041B6  EFDF  F020         	goto	u7331
 12976   0041BA  EFE1  F020         	goto	u7330
 12977   0041BE                     u7331:
 12978   0041BE  EFE5  F020         	goto	l6090
 12979   0041C2                     u7330:
 12980   0041C2  6C0C               	negf	___awdiv@quotient^0,c
 12981   0041C4  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
 12982   0041C6  B0D8               	btfsc	status,0,c
 12983   0041C8  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
 12984   0041CA                     l6090:
 12985   0041CA  C00C  F006         	movff	___awdiv@quotient,?___awdiv
 12986   0041CE  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
 12987   0041D2  0012               	return		;funcret
 12988   0041D4                     __end_of___awdiv:
 12989                           	callstack 0
 12990                           
 12991 ;; *************** function _LCD_ShowString *****************
 12992 ;; Defined at:
 12993 ;;		line 55 in file "lcd.c"
 12994 ;; Parameters:    Size  Location     Type
 12995 ;;  lineNum         1    wreg     unsigned char 
 12996 ;;  textData        2    6[COMRAM] PTR unsigned char 
 12997 ;;		 -> runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_13(17), 
 12998 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
 12999 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
 13000 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
 13001 ;; Auto vars:     Size  Location     Type
 13002 ;;  lineNum         1   10[COMRAM] unsigned char 
 13003 ;;  i               1   11[COMRAM] unsigned char 
 13004 ;; Return value:  Size  Location     Type
 13005 ;;                  1    wreg      void 
 13006 ;; Registers used:
 13007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13008 ;; Tracked objects:
 13009 ;;		On entry : 0/0
 13010 ;;		On exit  : 0/0
 13011 ;;		Unchanged: 0/0
 13012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13014 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13015 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13016 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13017 ;;Total ram usage:        6 bytes
 13018 ;; Hardware stack levels used: 1
 13019 ;; Hardware stack levels required when called: 2
 13020 ;; This function calls:
 13021 ;;		_LCD_Send
 13022 ;; This function is called by:
 13023 ;;		_main
 13024 ;;		_moveDisplay
 13025 ;;		_runADC
 13026 ;; This function uses a non-reentrant model
 13027 ;;
 13028                           
 13029                           	psect	text52
 13030   0041D4                     __ptext52:
 13031                           	callstack 0
 13032   0041D4                     _LCD_ShowString:
 13033                           	callstack 27
 13034                           
 13035                           ;incstack = 0
 13036                           ;LCD_ShowString@lineNum stored from wreg
 13037   0041D4  6E0B               	movwf	LCD_ShowString@lineNum^0,c
 13038   0041D6                     
 13039                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 13040   0041D6  806B               	bsf	107,0,c	;volatile
 13041   0041D8                     l124:
 13042   0041D8  B06B               	btfsc	107,0,c	;volatile
 13043   0041DA  EFF1  F020         	goto	u8651
 13044   0041DE  EFF3  F020         	goto	u8650
 13045   0041E2                     u8651:
 13046   0041E2  EFEC  F020         	goto	l124
 13047   0041E6                     u8650:
 13048   0041E6                     
 13049                           ;lcd.c: 62:     SSP2IF = 0;
 13050   0041E6  9EA4               	bcf	4004,7,c	;volatile
 13051   0041E8                     
 13052                           ;lcd.c: 64:     LCD_Send(0x7c);
 13053   0041E8  0E7C               	movlw	124
 13054   0041EA  EC84  F024         	call	_LCD_Send
 13055                           
 13056                           ;lcd.c: 66:     LCD_Send(0x80);
 13057   0041EE  0E80               	movlw	128
 13058   0041F0  EC84  F024         	call	_LCD_Send
 13059   0041F4                     
 13060                           ;lcd.c: 68:     if(lineNum == 1){
 13061   0041F4  040B               	decf	LCD_ShowString@lineNum^0,w,c
 13062   0041F6  A4D8               	btfss	status,2,c
 13063   0041F8  EF00  F021         	goto	u8661
 13064   0041FC  EF02  F021         	goto	u8660
 13065   004200                     u8661:
 13066   004200  EF07  F021         	goto	l6878
 13067   004204                     u8660:
 13068   004204                     
 13069                           ;lcd.c: 69:         LCD_Send(0x80);
 13070   004204  0E80               	movlw	128
 13071   004206  EC84  F024         	call	_LCD_Send
 13072                           
 13073                           ;lcd.c: 70:     }
 13074   00420A  EF13  F021         	goto	l128
 13075   00420E                     l6878:
 13076   00420E  0E02               	movlw	2
 13077   004210  180B               	xorwf	LCD_ShowString@lineNum^0,w,c
 13078   004212  A4D8               	btfss	status,2,c
 13079   004214  EF0E  F021         	goto	u8671
 13080   004218  EF10  F021         	goto	u8670
 13081   00421C                     u8671:
 13082   00421C  EF13  F021         	goto	l128
 13083   004220                     u8670:
 13084   004220                     
 13085                           ;lcd.c: 72:         LCD_Send(0xC0);
 13086   004220  0EC0               	movlw	192
 13087   004222  EC84  F024         	call	_LCD_Send
 13088   004226                     l128:
 13089                           
 13090                           ;lcd.c: 75:     LCD_Send(0x40);
 13091   004226  0E40               	movlw	64
 13092   004228  EC84  F024         	call	_LCD_Send
 13093   00422C                     
 13094                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 13095   00422C  0E00               	movlw	0
 13096   00422E  6E0C               	movwf	LCD_ShowString@i^0,c
 13097   004230                     l6888:
 13098                           
 13099                           ;lcd.c: 78:         LCD_Send(textData[i]);
 13100   004230  500C               	movf	LCD_ShowString@i^0,w,c
 13101   004232  2407               	addwf	LCD_ShowString@textData^0,w,c
 13102   004234  6E09               	movwf	??_LCD_ShowString^0,c
 13103   004236  0E00               	movlw	0
 13104   004238  2008               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 13105   00423A  6E0A               	movwf	(??_LCD_ShowString+1)^0,c
 13106   00423C  C009  FFF6         	movff	??_LCD_ShowString,tblptrl
 13107   004240  C00A  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 13108   004244  0E00               	movlw	low (__mediumconst shr (0+16))
 13109   004246  6EF8               	movwf	tblptru,c
 13110   004248  0E0F               	movlw	(high __ramtop+-1)
 13111   00424A  64F7               	cpfsgt	tblptrh,c
 13112   00424C  D003               	bra	u8687
 13113   00424E  0008               	tblrd		*
 13114   004250  50F5               	movf	tablat,w,c
 13115   004252  D005               	bra	u8680
 13116   004254                     u8687:
 13117   004254  CFF6 FFE1          	movff	tblptrl,fsr1l
 13118   004258  CFF7 FFE2          	movff	tblptrh,fsr1h
 13119   00425C  50E7               	movf	indf1,w,c
 13120   00425E                     u8680:
 13121   00425E  EC84  F024         	call	_LCD_Send
 13122   004262                     
 13123                           ;lcd.c: 79:     }
 13124   004262  2A0C               	incf	LCD_ShowString@i^0,f,c
 13125   004264  0E0F               	movlw	15
 13126   004266  640C               	cpfsgt	LCD_ShowString@i^0,c
 13127   004268  EF38  F021         	goto	u8691
 13128   00426C  EF3A  F021         	goto	u8690
 13129   004270                     u8691:
 13130   004270  EF18  F021         	goto	l6888
 13131   004274                     u8690:
 13132   004274                     
 13133                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 13134   004274  846B               	bsf	107,2,c	;volatile
 13135   004276                     l132:
 13136   004276  B46B               	btfsc	107,2,c	;volatile
 13137   004278  EF40  F021         	goto	u8701
 13138   00427C  EF42  F021         	goto	u8700
 13139   004280                     u8701:
 13140   004280  EF3B  F021         	goto	l132
 13141   004284                     u8700:
 13142   004284  0012               	return		;funcret
 13143   004286                     __end_of_LCD_ShowString:
 13144                           	callstack 0
 13145                           
 13146 ;; *************** function _LCD_Clear *****************
 13147 ;; Defined at:
 13148 ;;		line 94 in file "lcd.c"
 13149 ;; Parameters:    Size  Location     Type
 13150 ;;		None
 13151 ;; Auto vars:     Size  Location     Type
 13152 ;;		None
 13153 ;; Return value:  Size  Location     Type
 13154 ;;                  1    wreg      void 
 13155 ;; Registers used:
 13156 ;;		wreg, cstack
 13157 ;; Tracked objects:
 13158 ;;		On entry : 0/0
 13159 ;;		On exit  : 0/0
 13160 ;;		Unchanged: 0/0
 13161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13166 ;;Total ram usage:        0 bytes
 13167 ;; Hardware stack levels used: 1
 13168 ;; Hardware stack levels required when called: 2
 13169 ;; This function calls:
 13170 ;;		_LCD_Send
 13171 ;; This function is called by:
 13172 ;;		_moveDisplay
 13173 ;; This function uses a non-reentrant model
 13174 ;;
 13175                           
 13176                           	psect	text53
 13177   00481C                     __ptext53:
 13178                           	callstack 0
 13179   00481C                     _LCD_Clear:
 13180                           	callstack 27
 13181   00481C                     
 13182                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
 13183   00481C  806B               	bsf	107,0,c	;volatile
 13184   00481E                     l147:
 13185   00481E  B06B               	btfsc	107,0,c	;volatile
 13186   004820  EF14  F024         	goto	u8711
 13187   004824  EF16  F024         	goto	u8710
 13188   004828                     u8711:
 13189   004828  EF0F  F024         	goto	l147
 13190   00482C                     u8710:
 13191   00482C                     
 13192                           ;lcd.c: 97:     SSP2IF = 0;
 13193   00482C  9EA4               	bcf	4004,7,c	;volatile
 13194   00482E                     
 13195                           ;lcd.c: 99:     LCD_Send(0x7C);
 13196   00482E  0E7C               	movlw	124
 13197   004830  EC84  F024         	call	_LCD_Send
 13198                           
 13199                           ;lcd.c: 100:     LCD_Send(0x80);
 13200   004834  0E80               	movlw	128
 13201   004836  EC84  F024         	call	_LCD_Send
 13202                           
 13203                           ;lcd.c: 101:     LCD_Send(0x01);
 13204   00483A  0E01               	movlw	1
 13205   00483C  EC84  F024         	call	_LCD_Send
 13206   004840                     
 13207                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
 13208   004840  846B               	bsf	107,2,c	;volatile
 13209   004842                     l150:
 13210   004842  B46B               	btfsc	107,2,c	;volatile
 13211   004844  EF26  F024         	goto	u8721
 13212   004848  EF28  F024         	goto	u8720
 13213   00484C                     u8721:
 13214   00484C  EF21  F024         	goto	l150
 13215   004850                     u8720:
 13216   004850  0012               	return		;funcret
 13217   004852                     __end_of_LCD_Clear:
 13218                           	callstack 0
 13219                           
 13220 ;; *************** function _LCD_Init *****************
 13221 ;; Defined at:
 13222 ;;		line 3 in file "lcd.c"
 13223 ;; Parameters:    Size  Location     Type
 13224 ;;		None
 13225 ;; Auto vars:     Size  Location     Type
 13226 ;;		None
 13227 ;; Return value:  Size  Location     Type
 13228 ;;                  1    wreg      void 
 13229 ;; Registers used:
 13230 ;;		wreg, status,2, cstack
 13231 ;; Tracked objects:
 13232 ;;		On entry : 0/0
 13233 ;;		On exit  : 0/0
 13234 ;;		Unchanged: 0/0
 13235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13239 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13240 ;;Total ram usage:        1 bytes
 13241 ;; Hardware stack levels used: 1
 13242 ;; Hardware stack levels required when called: 2
 13243 ;; This function calls:
 13244 ;;		_LCD_Send
 13245 ;; This function is called by:
 13246 ;;		_main
 13247 ;; This function uses a non-reentrant model
 13248 ;;
 13249                           
 13250                           	psect	text54
 13251   003F6C                     __ptext54:
 13252                           	callstack 0
 13253   003F6C                     _LCD_Init:
 13254                           	callstack 28
 13255   003F6C                     
 13256                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 13257   003F6C  010F               	movlb	15	; () banked
 13258   003F6E  913B               	bcf	59,0,b	;volatile
 13259                           
 13260                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 13261   003F70  933B               	bcf	59,1,b	;volatile
 13262                           
 13263                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 13264   003F72  8095               	bsf	149,0,c	;volatile
 13265                           
 13266                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 13267   003F74  8295               	bsf	149,1,c	;volatile
 13268                           
 13269                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 13270   003F76  9092               	bcf	146,0,c	;volatile
 13271                           
 13272                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 13273   003F78  8089               	bsf	137,0,c	;volatile
 13274   003F7A                     
 13275                           ; BSR set to: 15
 13276                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 13277   003F7A  506C               	movf	108,w,c	;volatile
 13278   003F7C  0BF0               	andlw	-16
 13279   003F7E  0908               	iorlw	8
 13280   003F80  6E6C               	movwf	108,c	;volatile
 13281                           
 13282                           ;lcd.c: 15:     SSP2ADD = 19;
 13283   003F82  0E13               	movlw	19
 13284   003F84  6E6E               	movwf	110,c	;volatile
 13285   003F86                     
 13286                           ; BSR set to: 15
 13287                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 13288   003F86  8A6C               	bsf	108,5,c	;volatile
 13289   003F88                     
 13290                           ; BSR set to: 15
 13291                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 13292   003F88  0E34               	movlw	52
 13293   003F8A  6E07               	movwf	??_LCD_Init^0,c
 13294   003F8C  0EF2               	movlw	242
 13295   003F8E                     u9617:
 13296   003F8E  2EE8               	decfsz	wreg,f,c
 13297   003F90  D7FE               	bra	u9617
 13298   003F92  2E07               	decfsz	??_LCD_Init^0,f,c
 13299   003F94  D7FC               	bra	u9617
 13300   003F96                     
 13301                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 13302   003F96  806B               	bsf	107,0,c	;volatile
 13303   003F98                     l115:
 13304   003F98  B06B               	btfsc	107,0,c	;volatile
 13305   003F9A  EFD1  F01F         	goto	u8951
 13306   003F9E  EFD3  F01F         	goto	u8950
 13307   003FA2                     u8951:
 13308   003FA2  EFCC  F01F         	goto	l115
 13309   003FA6                     u8950:
 13310   003FA6                     
 13311                           ;lcd.c: 22:     SSP2IF = 0;
 13312   003FA6  9EA4               	bcf	4004,7,c	;volatile
 13313   003FA8                     
 13314                           ;lcd.c: 27:     LCD_Send(0x7C);
 13315   003FA8  0E7C               	movlw	124
 13316   003FAA  EC84  F024         	call	_LCD_Send
 13317                           
 13318                           ;lcd.c: 28:     LCD_Send(0x80);
 13319   003FAE  0E80               	movlw	128
 13320   003FB0  EC84  F024         	call	_LCD_Send
 13321                           
 13322                           ;lcd.c: 29:     LCD_Send(0x38);
 13323   003FB4  0E38               	movlw	56
 13324   003FB6  EC84  F024         	call	_LCD_Send
 13325                           
 13326                           ;lcd.c: 30:     LCD_Send(0x80);
 13327   003FBA  0E80               	movlw	128
 13328   003FBC  EC84  F024         	call	_LCD_Send
 13329                           
 13330                           ;lcd.c: 31:     LCD_Send(0x39);
 13331   003FC0  0E39               	movlw	57
 13332   003FC2  EC84  F024         	call	_LCD_Send
 13333                           
 13334                           ;lcd.c: 32:     LCD_Send(0x80);
 13335   003FC6  0E80               	movlw	128
 13336   003FC8  EC84  F024         	call	_LCD_Send
 13337                           
 13338                           ;lcd.c: 33:     LCD_Send(0x17);
 13339   003FCC  0E17               	movlw	23
 13340   003FCE  EC84  F024         	call	_LCD_Send
 13341                           
 13342                           ;lcd.c: 34:     LCD_Send(0x80);
 13343   003FD2  0E80               	movlw	128
 13344   003FD4  EC84  F024         	call	_LCD_Send
 13345                           
 13346                           ;lcd.c: 35:     LCD_Send(0x7A);
 13347   003FD8  0E7A               	movlw	122
 13348   003FDA  EC84  F024         	call	_LCD_Send
 13349                           
 13350                           ;lcd.c: 36:     LCD_Send(0x80);
 13351   003FDE  0E80               	movlw	128
 13352   003FE0  EC84  F024         	call	_LCD_Send
 13353                           
 13354                           ;lcd.c: 37:     LCD_Send(0x5E);
 13355   003FE4  0E5E               	movlw	94
 13356   003FE6  EC84  F024         	call	_LCD_Send
 13357                           
 13358                           ;lcd.c: 38:     LCD_Send(0x80);
 13359   003FEA  0E80               	movlw	128
 13360   003FEC  EC84  F024         	call	_LCD_Send
 13361                           
 13362                           ;lcd.c: 39:     LCD_Send(0x6B);
 13363   003FF0  0E6B               	movlw	107
 13364   003FF2  EC84  F024         	call	_LCD_Send
 13365                           
 13366                           ;lcd.c: 40:     LCD_Send(0x80);
 13367   003FF6  0E80               	movlw	128
 13368   003FF8  EC84  F024         	call	_LCD_Send
 13369                           
 13370                           ;lcd.c: 41:     LCD_Send(0x0C);
 13371   003FFC  0E0C               	movlw	12
 13372   003FFE  EC84  F024         	call	_LCD_Send
 13373                           
 13374                           ;lcd.c: 42:     LCD_Send(0x80);
 13375   004002  0E80               	movlw	128
 13376   004004  EC84  F024         	call	_LCD_Send
 13377                           
 13378                           ;lcd.c: 43:     LCD_Send(0x01);
 13379   004008  0E01               	movlw	1
 13380   00400A  EC84  F024         	call	_LCD_Send
 13381                           
 13382                           ;lcd.c: 44:     LCD_Send(0x80);
 13383   00400E  0E80               	movlw	128
 13384   004010  EC84  F024         	call	_LCD_Send
 13385                           
 13386                           ;lcd.c: 45:     LCD_Send(0x06);
 13387   004014  0E06               	movlw	6
 13388   004016  EC84  F024         	call	_LCD_Send
 13389                           
 13390                           ;lcd.c: 46:     LCD_Send(0x80);
 13391   00401A  0E80               	movlw	128
 13392   00401C  EC84  F024         	call	_LCD_Send
 13393                           
 13394                           ;lcd.c: 47:     LCD_Send(0x02);
 13395   004020  0E02               	movlw	2
 13396   004022  EC84  F024         	call	_LCD_Send
 13397   004026                     
 13398                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 13399   004026  846B               	bsf	107,2,c	;volatile
 13400   004028                     l118:
 13401   004028  B46B               	btfsc	107,2,c	;volatile
 13402   00402A  EF19  F020         	goto	u8961
 13403   00402E  EF1B  F020         	goto	u8960
 13404   004032                     u8961:
 13405   004032  EF14  F020         	goto	l118
 13406   004036                     u8960:
 13407   004036                     
 13408                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 13409   004036  0E34               	movlw	52
 13410   004038  6E07               	movwf	??_LCD_Init^0,c
 13411   00403A  0EF2               	movlw	242
 13412   00403C                     u9627:
 13413   00403C  2EE8               	decfsz	wreg,f,c
 13414   00403E  D7FE               	bra	u9627
 13415   004040  2E07               	decfsz	??_LCD_Init^0,f,c
 13416   004042  D7FC               	bra	u9627
 13417   004044  0012               	return		;funcret
 13418   004046                     __end_of_LCD_Init:
 13419                           	callstack 0
 13420                           
 13421 ;; *************** function _LCD_Send *****************
 13422 ;; Defined at:
 13423 ;;		line 85 in file "lcd.c"
 13424 ;; Parameters:    Size  Location     Type
 13425 ;;  data            1    wreg     unsigned char 
 13426 ;; Auto vars:     Size  Location     Type
 13427 ;;  data            1    5[COMRAM] unsigned char 
 13428 ;; Return value:  Size  Location     Type
 13429 ;;                  1    wreg      void 
 13430 ;; Registers used:
 13431 ;;		wreg
 13432 ;; Tracked objects:
 13433 ;;		On entry : 0/0
 13434 ;;		On exit  : 0/0
 13435 ;;		Unchanged: 0/0
 13436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13440 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13441 ;;Total ram usage:        1 bytes
 13442 ;; Hardware stack levels used: 1
 13443 ;; Hardware stack levels required when called: 1
 13444 ;; This function calls:
 13445 ;;		Nothing
 13446 ;; This function is called by:
 13447 ;;		_LCD_Init
 13448 ;;		_LCD_ShowString
 13449 ;;		_LCD_Clear
 13450 ;; This function uses a non-reentrant model
 13451 ;;
 13452                           
 13453                           	psect	text55
 13454   004908                     __ptext55:
 13455                           	callstack 0
 13456   004908                     _LCD_Send:
 13457                           	callstack 27
 13458                           
 13459                           ;incstack = 0
 13460                           ;LCD_Send@data stored from wreg
 13461   004908  6E06               	movwf	LCD_Send@data^0,c
 13462   00490A                     
 13463                           ;lcd.c: 87:     SSP2BUF = data;
 13464   00490A  C006  FF6F         	movff	LCD_Send@data,3951	;volatile
 13465   00490E                     l138:
 13466   00490E  B06D               	btfsc	109,0,c	;volatile
 13467   004910  EF8C  F024         	goto	u8571
 13468   004914  EF8E  F024         	goto	u8570
 13469   004918                     u8571:
 13470   004918  EF87  F024         	goto	l138
 13471   00491C                     u8570:
 13472   00491C                     l141:
 13473   00491C  AEA4               	btfss	4004,7,c	;volatile
 13474   00491E  EF93  F024         	goto	u8581
 13475   004922  EF95  F024         	goto	u8580
 13476   004926                     u8581:
 13477   004926  EF8E  F024         	goto	l141
 13478   00492A                     u8580:
 13479   00492A                     
 13480                           ;lcd.c: 90:     SSP2IF = 0;
 13481   00492A  9EA4               	bcf	4004,7,c	;volatile
 13482   00492C  0012               	return		;funcret
 13483   00492E                     __end_of_LCD_Send:
 13484                           	callstack 0
 13485                           
 13486 ;; *************** function _ISR *****************
 13487 ;; Defined at:
 13488 ;;		line 11 in file "interrupt.c"
 13489 ;; Parameters:    Size  Location     Type
 13490 ;;		None
 13491 ;; Auto vars:     Size  Location     Type
 13492 ;;  temp            1    4[COMRAM] unsigned char 
 13493 ;; Return value:  Size  Location     Type
 13494 ;;                  1    wreg      void 
 13495 ;; Registers used:
 13496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13497 ;; Tracked objects:
 13498 ;;		On entry : 0/0
 13499 ;;		On exit  : 0/0
 13500 ;;		Unchanged: 0/0
 13501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13503 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13504 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13505 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13506 ;;Total ram usage:        5 bytes
 13507 ;; Hardware stack levels used: 1
 13508 ;; This function calls:
 13509 ;;		Nothing
 13510 ;; This function is called by:
 13511 ;;		Interrupt level 2
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514                           
 13515                           	psect	intcode
 13516   000008                     __pintcode:
 13517                           	callstack 0
 13518   000008                     _ISR:
 13519                           	callstack 21
 13520                           
 13521                           ;incstack = 0
 13522   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13523   00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
 13524   00000E  CFDA F004          	movff	fsr2h,??_ISR+3
 13525   000012                     
 13526                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 13527   000012  A09D               	btfss	3997,0,c	;volatile
 13528   000014  EF0E  F000         	goto	i2u631_41
 13529   000018  EF10  F000         	goto	i2u631_40
 13530   00001C                     i2u631_41:
 13531   00001C  EF49  F000         	goto	i2l5522
 13532   000020                     i2u631_40:
 13533   000020  A09E               	btfss	3998,0,c	;volatile
 13534   000022  EF15  F000         	goto	i2u632_41
 13535   000026  EF17  F000         	goto	i2u632_40
 13536   00002A                     i2u632_41:
 13537   00002A  EF49  F000         	goto	i2l5522
 13538   00002E                     i2u632_40:
 13539   00002E  0101               	movlb	1	; () banked
 13540   000030  5124               	movf	_GPIOIE& (0+255),w,b
 13541   000032  B4D8               	btfsc	status,2,c
 13542   000034  EF1E  F000         	goto	i2u633_41
 13543   000038  EF20  F000         	goto	i2u633_40
 13544   00003C                     i2u633_41:
 13545   00003C  EF49  F000         	goto	i2l5522
 13546   000040                     i2u633_40:
 13547   000040                     
 13548                           ; BSR set to: 1
 13549                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 13550   000040  A480               	btfss	128,2,c	;volatile
 13551   000042  EF25  F000         	goto	i2u634_41
 13552   000046  EF27  F000         	goto	i2u634_40
 13553   00004A                     i2u634_41:
 13554   00004A  EF44  F000         	goto	i2l384
 13555   00004E                     i2u634_40:
 13556   00004E                     
 13557                           ; BSR set to: 1
 13558                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 13559   00004E  0E03               	movlw	3
 13560   000050  6E02               	movwf	(??_ISR+1)^0,c
 13561   000052  0E08               	movlw	8
 13562   000054  6E01               	movwf	??_ISR^0,c
 13563   000056  0E77               	movlw	119
 13564   000058                     i2u963_47:
 13565   000058  2EE8               	decfsz	wreg,f,c
 13566   00005A  D7FE               	bra	i2u963_47
 13567   00005C  2E01               	decfsz	??_ISR^0,f,c
 13568   00005E  D7FC               	bra	i2u963_47
 13569   000060  2E02               	decfsz	(??_ISR+1)^0,f,c
 13570   000062  D7FA               	bra	i2u963_47
 13571   000064  0000               	nop	
 13572   000066                     
 13573                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 13574   000066  A480               	btfss	128,2,c	;volatile
 13575   000068  EF38  F000         	goto	i2u635_41
 13576   00006C  EF3A  F000         	goto	i2u635_40
 13577   000070                     i2u635_41:
 13578   000070  EF44  F000         	goto	i2l384
 13579   000074                     i2u635_40:
 13580   000074                     i2l386:
 13581   000074  B480               	btfsc	128,2,c	;volatile
 13582   000076  EF3F  F000         	goto	i2u636_41
 13583   00007A  EF41  F000         	goto	i2u636_40
 13584   00007E                     i2u636_41:
 13585   00007E  EF3A  F000         	goto	i2l386
 13586   000082                     i2u636_40:
 13587   000082                     
 13588                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 13589   000082  0E00               	movlw	0
 13590   000084  0100               	movlb	0	; () banked
 13591   000086  6FFE               	movwf	_keepStateGPIO& (0+255),b
 13592   000088                     i2l384:
 13593                           
 13594                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 13595   000088  0E9E               	movlw	158
 13596   00008A  6ECF               	movwf	207,c	;volatile
 13597   00008C  0E58               	movlw	88
 13598   00008E  6ECE               	movwf	206,c	;volatile
 13599   000090                     
 13600                           ;interrupt.c: 23:         TMR1IF = 0;
 13601   000090  909E               	bcf	3998,0,c	;volatile
 13602   000092                     i2l5522:
 13603                           
 13604                           ;interrupt.c: 26:     if(RC1IE && RC1IF && UARTIE){
 13605   000092  AA9D               	btfss	3997,5,c	;volatile
 13606   000094  EF4E  F000         	goto	i2u637_41
 13607   000098  EF50  F000         	goto	i2u637_40
 13608   00009C                     i2u637_41:
 13609   00009C  EF84  F000         	goto	i2l394
 13610   0000A0                     i2u637_40:
 13611   0000A0  AA9E               	btfss	3998,5,c	;volatile
 13612   0000A2  EF55  F000         	goto	i2u638_41
 13613   0000A6  EF57  F000         	goto	i2u638_40
 13614   0000AA                     i2u638_41:
 13615   0000AA  EF84  F000         	goto	i2l394
 13616   0000AE                     i2u638_40:
 13617   0000AE  0101               	movlb	1	; () banked
 13618   0000B0  5123               	movf	_UARTIE& (0+255),w,b
 13619   0000B2  B4D8               	btfsc	status,2,c
 13620   0000B4  EF5E  F000         	goto	i2u639_41
 13621   0000B8  EF60  F000         	goto	i2u639_40
 13622   0000BC                     i2u639_41:
 13623   0000BC  EF84  F000         	goto	i2l394
 13624   0000C0                     i2u639_40:
 13625   0000C0                     
 13626                           ; BSR set to: 1
 13627                           ;interrupt.c: 27:         char temp = RCREG1;
 13628   0000C0  CFAE F005          	movff	4014,ISR@temp	;volatile
 13629   0000C4                     
 13630                           ; BSR set to: 1
 13631                           ;interrupt.c: 28:         static int i = 0;;interrupt.c: 30:         if(temp != '\n'){
 13632   0000C4  0E0A               	movlw	10
 13633   0000C6  1805               	xorwf	ISR@temp^0,w,c
 13634   0000C8  B4D8               	btfsc	status,2,c
 13635   0000CA  EF69  F000         	goto	i2u640_41
 13636   0000CE  EF6B  F000         	goto	i2u640_40
 13637   0000D2                     i2u640_41:
 13638   0000D2  EF77  F000         	goto	i2l5536
 13639   0000D6                     i2u640_40:
 13640   0000D6                     
 13641                           ; BSR set to: 1
 13642                           ;interrupt.c: 31:             gmail.data[i] = temp;
 13643   0000D6  0E75               	movlw	low _gmail
 13644   0000D8  2521               	addwf	ISR@i& (0+255),w,b
 13645   0000DA  6ED9               	movwf	fsr2l,c
 13646   0000DC  0E01               	movlw	high _gmail
 13647   0000DE  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 13648   0000E0  6EDA               	movwf	fsr2h,c
 13649   0000E2  C005  FFDF         	movff	ISR@temp,indf2
 13650   0000E6                     
 13651                           ; BSR set to: 1
 13652                           ;interrupt.c: 32:             i++;
 13653   0000E6  4B21               	infsnz	ISR@i& (0+255),f,b
 13654   0000E8  2B22               	incf	(ISR@i+1)& (0+255),f,b
 13655                           
 13656                           ;interrupt.c: 33:         } else {
 13657   0000EA  EF84  F000         	goto	i2l394
 13658   0000EE                     i2l5536:
 13659                           
 13660                           ; BSR set to: 1
 13661                           ;interrupt.c: 34:             gmail.full = 1;
 13662   0000EE  0E01               	movlw	1
 13663   0000F0  6F94               	movwf	(_gmail+31)& (0+255),b	;volatile
 13664   0000F2                     
 13665                           ; BSR set to: 1
 13666                           ;interrupt.c: 35:             gmail.data[i] = '\0';
 13667   0000F2  0E75               	movlw	low _gmail
 13668   0000F4  2521               	addwf	ISR@i& (0+255),w,b
 13669   0000F6  6ED9               	movwf	fsr2l,c
 13670   0000F8  0E01               	movlw	high _gmail
 13671   0000FA  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 13672   0000FC  6EDA               	movwf	fsr2h,c
 13673   0000FE  6ADF               	clrf	indf2,c
 13674   000100                     
 13675                           ; BSR set to: 1
 13676                           ;interrupt.c: 36:             i = 0;
 13677   000100  0E00               	movlw	0
 13678   000102  6F22               	movwf	(ISR@i+1)& (0+255),b
 13679   000104  0E00               	movlw	0
 13680   000106  6F21               	movwf	ISR@i& (0+255),b
 13681   000108                     i2l394:
 13682   000108  C004  FFDA         	movff	??_ISR+3,fsr2h
 13683   00010C  C003  FFD9         	movff	??_ISR+2,fsr2l
 13684   000110  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13685   000112  0011               	retfie		f
 13686   000114                     __end_of_ISR:
 13687                           	callstack 0
 13688                           
 13689                           	psect	rparam
 13690   000000                     
 13691                           	psect	temp
 13692   00005A                     btemp:
 13693                           	callstack 0
 13694   00005A                     	ds	1
 13695   000000                     int$flags	set	btemp
 13696   000000                     wtemp8	set	btemp+1
 13697   000000                     ttemp5	set	btemp+1
 13698   000000                     ttemp6	set	btemp+4
 13699   000000                     ttemp7	set	btemp+8
 13700                           
 13701                           	psect	config
 13702                           
 13703                           ; Padding undefined space
 13704   300000                     	org	3145728
 13705   300000  FF                 	db	255
 13706                           
 13707                           ;Config register CONFIG1H @ 0x300001
 13708                           ;	Oscillator Selection bits
 13709                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 13710                           ;	4X PLL Enable
 13711                           ;	PLLCFG = ON, Oscillator multiplied by 4
 13712                           ;	Primary clock enable bit
 13713                           ;	PRICLKEN = 0x1, unprogrammed default
 13714                           ;	Fail-Safe Clock Monitor Enable bit
 13715                           ;	FCMEN = 0x0, unprogrammed default
 13716                           ;	Internal/External Oscillator Switchover bit
 13717                           ;	IESO = 0x0, unprogrammed default
 13718   300001                     	org	3145729
 13719   300001  33                 	db	51
 13720                           
 13721                           ;Config register CONFIG2L @ 0x300002
 13722                           ;	unspecified, using default values
 13723                           ;	Power-up Timer Enable bit
 13724                           ;	PWRTEN = 0x1, unprogrammed default
 13725                           ;	Brown-out Reset Enable bits
 13726                           ;	BOREN = 0x3, unprogrammed default
 13727                           ;	Brown Out Reset Voltage bits
 13728                           ;	BORV = 0x3, unprogrammed default
 13729   300002                     	org	3145730
 13730   300002  1F                 	db	31
 13731                           
 13732                           ;Config register CONFIG2H @ 0x300003
 13733                           ;	Watchdog Timer Enable bits
 13734                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 13735                           ;	Watchdog Timer Postscale Select bits
 13736                           ;	WDTPS = 0xF, unprogrammed default
 13737   300003                     	org	3145731
 13738   300003  3C                 	db	60
 13739                           tosu	equ	0xFFF
 13740                           tosh	equ	0xFFE
 13741                           tosl	equ	0xFFD
 13742                           stkptr	equ	0xFFC
 13743                           pclatu	equ	0xFFB
 13744                           pclath	equ	0xFFA
 13745                           pcl	equ	0xFF9
 13746                           tblptru	equ	0xFF8
 13747                           tblptrh	equ	0xFF7
 13748                           tblptrl	equ	0xFF6
 13749                           tablat	equ	0xFF5
 13750                           prodh	equ	0xFF4
 13751                           prodl	equ	0xFF3
 13752                           indf0	equ	0xFEF
 13753                           postinc0	equ	0xFEE
 13754                           postdec0	equ	0xFED
 13755                           preinc0	equ	0xFEC
 13756                           plusw0	equ	0xFEB
 13757                           fsr0h	equ	0xFEA
 13758                           fsr0l	equ	0xFE9
 13759                           wreg	equ	0xFE8
 13760                           indf1	equ	0xFE7
 13761                           postinc1	equ	0xFE6
 13762                           postdec1	equ	0xFE5
 13763                           preinc1	equ	0xFE4
 13764                           plusw1	equ	0xFE3
 13765                           fsr1h	equ	0xFE2
 13766                           fsr1l	equ	0xFE1
 13767                           bsr	equ	0xFE0
 13768                           indf2	equ	0xFDF
 13769                           postinc2	equ	0xFDE
 13770                           postdec2	equ	0xFDD
 13771                           preinc2	equ	0xFDC
 13772                           plusw2	equ	0xFDB
 13773                           fsr2h	equ	0xFDA
 13774                           fsr2l	equ	0xFD9
 13775                           status	equ	0xFD8

Data Sizes:
    Strings     219
    Constant    64
    Data        40
    BSS         155
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    158     159
    BANK1           256     51     240
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), STR_1(CODE[17]), 
		 -> STR_10(CODE[17]), STR_11(CODE[17]), STR_12(CODE[17]), STR_13(CODE[17]), 
		 -> STR_2(CODE[17]), STR_3(CODE[17]), STR_4(CODE[17]), STR_5(CODE[17]), 
		 -> STR_6(CODE[17]), STR_7(CODE[17]), STR_8(CODE[17]), STR_9(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    moveDisplay$4147	PTR unsigned char  size(2) Largest target is 6
		 -> STR_15(CODE[5]), STR_16(CODE[5]), STR_17(CODE[4]), STR_18(CODE[4]), 
		 -> STR_19(CODE[4]), STR_20(CODE[5]), STR_21(CODE[6]), STR_22(CODE[1]), 

    moveDisplay@F6963	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_15(CODE[5]), STR_16(CODE[5]), STR_17(CODE[4]), STR_18(CODE[4]), 
		 -> STR_19(CODE[4]), STR_20(CODE[5]), STR_21(CODE[6]), STR_22(CODE[1]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_15(CODE[5]), STR_16(CODE[5]), STR_17(CODE[4]), STR_18(CODE[4]), 
		 -> STR_19(CODE[4]), STR_20(CODE[5]), STR_21(CODE[6]), STR_22(CODE[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_14(CODE[5]), STR_26(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6975	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S3564$buffer	PTR unsigned char  size(2) Largest target is 0

    S3564$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_23(CODE[6]), STR_24(CODE[5]), STR_25(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_15(CODE[5]), 
		 -> STR_16(CODE[5]), STR_17(CODE[4]), STR_18(CODE[4]), STR_19(CODE[4]), 
		 -> STR_20(CODE[5]), STR_21(CODE[6]), STR_22(CODE[1]), STR_33(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_15(CODE[5]), 
		 -> STR_16(CODE[5]), STR_17(CODE[4]), STR_18(CODE[4]), STR_19(CODE[4]), 
		 -> STR_20(CODE[5]), STR_21(CODE[6]), STR_22(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_27(CODE[4]), STR_30(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_14(CODE[5]), STR_23(CODE[6]), STR_24(CODE[5]), STR_25(CODE[19]), 
		 -> STR_26(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_14(CODE[5]), STR_23(CODE[6]), STR_24(CODE[5]), STR_25(CODE[19]), 
		 -> STR_26(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_14(CODE[5]), STR_23(CODE[6]), STR_24(CODE[5]), STR_25(CODE[19]), 
		 -> STR_26(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runUART->_printf
    _runPWM->___awdiv
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _runDAC->_printf
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_runUART
    _runUART->_printf
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___flneg
    ___cosdf->___fladd
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  334274
                                            154 BANK0      4     4      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGAME
                            _runGPIO
                           _runMUSIC
                             _runPWM
                            _runUART
 ---------------------------------------------------------------------------------
 (1) _runUART                                             40    40      0   56195
                                            114 BANK0     40    40      0
                             _printf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _runPWM                                               4     4      0     944
                                             13 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _runMUSIC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             33    33      0     501
                                              6 COMRAM    32    32      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runGAME                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0  145438
                                            114 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   68874
                                             68 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   16012
                                              4 BANK0     32    28      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   27720
                                             36 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   16096
                                              4 BANK0     28    24      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     3      4   55533
                                             83 COMRAM     1     1      0
                                            110 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0     130
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   70679
                                            135 BANK0      2     2      0
                                              0 BANK1     30    30      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         54    53      1   58592
                                            135 BANK0      3     2      1
                                              0 BANK1     51    51      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12   56118
                                            110 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5   55248
                                            103 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   54448
                                             89 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2110
                                             15 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1362
                                             11 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   40798
                                             36 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     463
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             69 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             81 COMRAM     2     2      0
                                              4 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    8147
                                              4 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6862
                                             69 COMRAM    12     4      8
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     875
                                             32 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8273
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    7043
                                             31 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4693
                                             22 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1428
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     805
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    1666
                                              6 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      31
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              6 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGAME
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *
   _runMUSIC
   _runPWM
     ___awdiv
   _runUART
     _printf
     _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     33      F0       7       93.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRlllllh     21      0       0      52        0.0%
BITBIGSFRlllllh     10      0       0      51        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRlllllh      C      0       0      53        0.0%
BITBIGSFRhhllhl      A      0       0      44        0.0%
BITBIGSFRhll         7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      45        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRllh         5      0       0      48        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhllhh      1      0       0      43        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E8      54        0.0%
DATA                 0      0     1E8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 17 14:39:48 2024

              ___fldiv@aexp 0045                ___fldiv@bexp 0044                ___fldiv@sign 003D  
                        _C0 FF0F                          _C1 FF0B                          _C2 FF07  
                        _C3 FF03                          l52 280E                          l62 29DA  
                        l54 2800                          l64 2894                          l57 2860  
                        l59 2852                          _S1 FEEF                          _S2 FEEB  
                        _S3 FEE7                          _S4 FEE3                ___awdiv@sign 000B  
       ___wmul@multiplicand 0008                         l121 4044                         l115 3F98  
                       l131 4274                         l132 4276                         l124 41D8  
                       l141 491C                         l117 3FA6                         l118 4028  
                       l150 4842                         l126 41E6                         l230 2760  
                       l222 26C6                         l143 492A                         l135 4284  
                       l144 492C                         l128 4226                         l153 4850  
                       l233 474C                         l138 490E                         l147 481E  
                       l235 475A                         l219 26C4                         l236 4760  
                       l332 498C                         l149 482C                         l341 49B6  
                       l501 3B4E                         l254 4950                         l238 476E  
                       l326 49A8                         l431 2E8A                         l239 4772  
                       l335 497E                         l257 4962                         l329 499A  
                       l353 3886                         l442 305E                         l434 2F2A  
                       l338 4970                         l354 389C                         l283 3C60  
                       l443 3060                         l348 3874                         l540 399C  
                       l429 304C                         l439 3038                         l551 39F6  
                       l552 3A08                         l482 3A2A                         l538 39E4  
                       l563 49BA                         l484 3A38                         l548 39D0  
                       l821 4334                         l485 3B36                         l574 49B8  
                       l808 41D2                         l488 3AF0                         l577 4906  
                       l497 3B24                         l489 3AB2                         l842 3E26  
                       l851 47AC                         l836 448C                         l847 3E6C  
                       l874 3D68                         _GIE 7F97                         _PR2 0FBB  
                       _ISR 0008                         _abs 4886                         _pad 448E  
              ___awmod@sign 000B                         prod 0FF3                         tosl 0FFD  
                       wreg 0FE8                  _TXSTA1bits 0FAC                ___flmul@aexp 0021  
              ___flmul@bexp 0026                ___flmul@sign 0020                ___flmul@temp 002B  
              ___flmul@prod 0027                        ?_ISR 0001                        ISR@i 0121  
              ___fltol@exp1 0053                        l1200 1810                        l1201 17FE  
                      l1105 120C                        l1122 1326                        l1114 14DC  
                      l1106 11FA                        l1131 13F6                        l1107 11C0  
                      ?_abs 000C                        l1132 13E4                        l1208 18C8  
                      l1232 32B6                        l1161 22D8                        l1170 231E  
                      l1322 04AA                        l1147 46AA                        l1235 3412  
                      l1308 372C                        l1172 2396                        l1164 229C  
                      l1324 02F0                        l1404 1D1C                        l1173 2384  
                      l1501 494C                        l1430 461A                        l1246 33AA  
                      l1159 2478                        l1191 15A2                        l1319 0B10  
                      l1255 46F0                        l1239 334E                        l1440 3F6A  
                      l1352 08F4                        l1520 101A                        l1600 481A  
                      l1290 452A                        l1195 1906                        l1380 35B0  
                      l1445 48A0                        l1285 44C6                        l1294 35E0  
                      l1198 1798                        l1454 2E4E                        l1375 3568  
                      l1448 48B8                        l1288 4508                        l1296 35E8  
                      l1384 43DA                        l1368 34B8                        l1297 362E  
                      l1457 2D92                        l1474 45D0                        l1554 325E  
                      l1570 1F40                        l1571 20DE                        l1468 4580  
                      l1388 43E2                        l1486 410E                        l1494 4734  
                      l1583 2C38                        l6000 1796                        l6010 17F6  
                      l6002 17A8                        l1594 47E4                        l6100 42A0  
                      l6020 1864                        l6004 17B6                        l1588 4884  
                      l6110 42D4                        l6102 42A4                        l6030 18CC  
                      l6014 1820                        l6022 1868                        l6006 17BA  
                      l6120 430E                        l6112 42DC                        l6104 42B2  
                      l6040 18F6                        l6032 18DC                        l6024 1882  
                      l6016 182C                        l6008 17C8                        l6200 3CFE  
                      l6050 4110                        l6114 42EA                        l6122 4314  
                      l6106 42BA                        l6130 43E4                        l6034 18EA  
                      l6026 1896                        l6018 183A                        l6210 3D28  
                      l6202 3D08                        l7010 492E                        l7002 0FC0  
                      l6060 413C                        l6052 4114                        l6124 4324  
                      l6116 4300                        l6108 42CC                        l6220 448E  
                      l6140 4484                        l6132 4412                        l6036 18EC  
                      l6028 18B0                        l6044 4664                        l6212 3D38  
                      l7020 46C2                        l7012 4932                        l7100 3764  
                      l6070 416A                        l6062 4144                        l6054 4122  
                      l6126 432C                        l6118 4308                        l6230 44E6  
                      l6222 449C                        l6142 448A                        l6134 4422  
                      l6150 3DA8                        l6038 18F2                        l6046 4676  
                      l6214 3D48                        l6310 45B2                        l6302 4582  
                      l7022 46CA                        l7030 4990                        l7110 37B6  
                      l7102 376C                        ?_pad 0017                        l6080 41A4  
                      l6072 4172                        l6064 4148                        l6056 412A  
                      l6232 44EA                        l6224 44B0                        l6320 3600  
                      l6136 4450                        l6160 3E14                        l6152 3DD6  
                      l5600 10EE                        l6216 3D58                        l6208 3D1C  
                      l6240 3E6E                        l6304 4596                        l6312 45B6  
                      l6400 023A                        l7024 46E0                        l7016 46AC  
                      l7008 0FFC                        l7032 4982                        l7120 381C  
                      l7104 3776                        l7200 3A0C                        l7040 47E6  
                      l7050 3F6C                        l6090 41CA                        l6082 41A6  
                      l6074 4180                        l6066 4150                        l6058 412E  
                      l6234 4516                        l6226 44BE                        l6330 3636  
                      l6322 3606                        l6314 35B2                        l6138 4460  
                      l6162 3E64                        l6154 3DE6                        l6146 3D6A  
                      l6170 478C                        l5610 1126                        l5602 10FE  
                      l6242 3E8E                        l6306 45A2                        l6410 0284  
                      l6402 0260                        l7018 46BA                        l7034 4974  
                      l7122 3838                        l7106 3782                        l7210 3A7E  
                      l7202 3A26                        l7042 47F2                        l7060 3FA8  
                      l7052 3F7A                        l6084 41AC                        l6076 4186  
                      l6068 4162                        l6236 4886                        l6228 44D2  
                      l6340 3684                        l6332 3640                        l6324 3616  
                      l6316 35D4                        l6164 3E6A                        l6156 3DF4  
                      l6148 3D98                        l6172 479C                        l5620 113A  
                      l5612 112A                        l5604 1110                        l6244 3ECC  
                      l6252 3F0C                        l6308 45A6                        l6500 07D4  
                      l6420 02BA                        l6404 0272                        l7300 24B6  
                      l7028 499E                        l7036 4966                        l7124 3850  
                      l7116 37BE                        l7108 3794                        l7220 3AD2  
                      l7212 3A8C                        l7204 3A28                        l7044 47F6  
                      l7140 38B2                        l7132 389E                        l7062 4026  
                      l7054 3F86                        l6078 419C                        l6086 41B2  
                      l6094 4286                        l6238 4894                        l5542 4950  
                      l5550 406A                        l6350 36F6                        l6334 3646  
                      l6342 36A0                        l6326 3622                        l6318 35F0  
                      l6158 3E06                        l5710 1388                        l5702 1360  
                      l5630 114E                        l5622 113E                        l5614 112E  
                      l5606 111E                        l6190 3CCE                        l6182 3C8E  
                      l6254 3F1E                        l6246 3EF4                        l6270 454E  
                      l6262 47AE                        l6510 0838                        l6502 0808  
                      l6430 0378                        l6406 0276                        l7070 3B6E  
                      l7310 24DA                        l7302 24B8                        l7038 49AC  
                      l7126 3870                        l7118 3818                        l7230 3B16  
                      l7222 3ADA                        l7214 3AA4                        l7206 3A56  
                      l7046 480E                        l7150 38CC                        l7142 38B4  
                      l7134 38AA                        l7064 4036                        l7056 3F88  
                      l6088 41C2                        l6096 428A                        l5544 495E  
                      l5552 4074                        l6352 36FC                        l6344 36BA  
                      l6336 3678                        l6328 362A                        l5800 2160  
                      l6168 4774                        l5712 1390                        l5704 136A  
                      l5720 13B4                        l5640 1162                        l5632 1152  
                      l5624 1142                        l5616 1132                        l5608 1122  
                      l5560 101C                        l6192 3CDC                        l6184 3CB8  
                      l6176 3C62                        l6248 3F00                        l6280 2CC6  
                      l6264 47B6                        l6520 08EC                        l6512 083E  
                      l6504 081C                        l6440 0438                        l6432 03AA  
                      l6424 0300                        l6408 027C                        l6360 011E  
                      l6600 34EE                        l7072 3B80                        l7080 3B9E  
                      l7320 260E                        l7312 24EA                        l7304 24BA  
                      l7128 3896                        l7240 3B4C                        l7224 3AEA  
                      l7208 3A62                        l7160 392C                        l7152 38DE  
                      l7144 38BC                        l7136 38AE                        l7400 27BC  
                      l7058 3F96                        l6098 4298                        l5554 4092  
                      l5546 4046                        l6354 370C                        l6346 36CC  
                      l6338 367E                        l5810 2194                        l5802 2162  
                      l5730 1406                        l5722 13B8                        l5714 1394  
                      l5706 1378                        l5650 11DA                        l5642 118C  
                      l5634 1156                        l5626 1146                        l5618 1136  
                      l5570 105A                        l5562 102A                        l6186 3CBA  
                      l6178 3C7A                        l6258 3F62                        l6282 2CD4  
                      l6290 2DB6                        l6274 2C3A                        l6266 452C  
                      l6530 092E                        l6522 0906                        l6514 0846  
                      l6506 0820                        l6450 04CC                        l6434 03E8  
                      l6426 0306                        l6418 02A0                        l6370 016E  
                      l6362 012E                        l6602 34F2                        l7074 3B86  
                      l7082 3BBE                        l7066 3B54                        l7250 2E6A  
                      l7330 26D4                        l7322 2632                        l7314 253A  
                      l7306 24BC                        l7234 3B32                        l7218 3AC0  
                      l7226 3AF0                        l7162 3942                        l7154 38F2  
                      l7146 38BE                        l7138 38B0                        l7410 2834  
                      l7402 27CA                        l5556 40C8                        l5548 4058  
                      l6348 36E6                        l5900 2458                        l5820 21DA  
                      l5804 2172                        l5812 219C                        l5740 146C  
                      l5732 1412                        l5724 13C6                        l5716 13A4  
                      l5708 137A                        l5660 121A                        l5652 11DE  
                      l5644 11A8                        l5636 115A                        l5628 114A  
                      l5580 108A                        l5572 106A                        l5564 1038  
                      l6188 3CCA                        l6292 2DF2                        l6276 2C5A  
                      l6268 453A                        l6532 0936                        l6524 0914  
                      l6540 0956                        l6516 0852                        l6508 0830  
                      l6460 0504                        l6452 04D6                        l6436 03FC  
                      l6444 0478                        l6428 033A                        l6380 01AA  
                      l6372 0176                        l6364 013C                        l6620 433E  
                      l6612 357A                        l6604 3514                        l6700 1998  
                      l7084 3C40                        l7076 3B98                        l7068 3B58  
                      l7260 2EB6                        l7252 2E76                        l7244 2E50  
                      l7340 2710                        l7332 26E8                        l7324 269A  
                      l7316 254C                        l7308 24BE                        l7092 372E  
                      l7236 3B46                        l7228 3AFE                        l7180 39AA  
                      l7164 394C                        l7156 3900                        l7148 38C0  
                      l7420 28A6                        l7412 2842                        l7404 27E2  
                      l5902 2466                        l5830 2202                        l5822 21DE  
                      l5814 21AC                        l5806 2182                        l5750 14B4  
                      l5742 147C                        l5734 1420                        l5726 13DC  
                      l5718 13A6                        l5670 125C                        l5662 122A  
                      l5654 11EC                        l5646 11B8                        l5638 115E  
                      l5590 10B4                        l5582 109C                        l5574 106C  
                      l5566 103A                        l6198 3CF4                        l6294 2E06  
                      l6286 2D46                        l6278 2CB2                        l6550 09DC  
                      l6542 0968                        l6534 0946                        l6526 0924  
                      l6518 08CC                        l6470 054E                        l6462 051C  
                      l6454 04DE                        l6446 04B2                        l6438 0430  
                      l6390 01F0                        l6374 0186                        l6382 01AE  
                      l6366 0140                        l6358 0118                        l6622 4360  
                      l6630 43B4                        l6614 358E                        l6606 354A  
                      l6710 19F4                        l6702 19AC                        l7086 3C4E  
                      l7270 2FC0                        l7262 2F20                        l7254 2E80  
                      l7246 2E58                        l7350 273C                        l7342 271E  
                      l7334 26F6                        l7318 25A6                        l7094 3758  
                      l7238 3B4A                        l7190 3A02                        l7182 39C2  
                      l7174 396E                        l7166 395E                        l7158 3928  
                      l7422 28C2                        l7414 286E                        l7406 27F0  
                      l5904 246C                        l5840 2250                        l5816 21C2  
                      l5808 2192                        l5920 14FA                        l5752 14B6  
                      l5744 149C                        l5736 145A                        l5680 128A  
                      l5672 126A                        l5656 11EE                        l5648 11CE  
                      l5592 10C4                        l5584 109E                        l5568 104A  
                      l5576 1074                        l6296 2E2E                        l6288 2D82  
                      l6560 0A56                        l6552 0A10                        l6544 097A  
                      l6536 094A                        l6528 0928                        l6472 0562  
                      l6480 0658                        l6464 052E                        l6456 04E4  
                      l6448 04C0                        l6392 01F8                        l6384 01D4  
                      l6376 0196                        l6368 0164                        l6624 436C  
                      l6616 3592                        l6608 354E                        l6720 1A68  
                      l6712 1A08                        l6704 19BA                        l7088 3C5C  
                      l6640 32DC                        l6632 3262                        l7272 2FF6  
                      l7264 2F28                        l7256 2E88                        l7248 2E68  
                      l7344 2724                        l7336 26FC                        l7328 26A6  
                      l7352 274E                        l7096 3760                        l7192 3A04  
                      l7176 397C                        l7168 3964                        l7440 2926  
                      l7432 28F4                        l7424 28C6                        l7416 2886  
                      l7408 281C                        l7360 277E                        l6802 490A  
                      l5762 46F2                        l5906 246E                        l5850 229A  
                      l5842 2260                        l5834 2216                        l5818 21D2  
                      l5826 21F2                        l5930 1540                        l5922 150A  
                      l5914 14DE                        l5754 14BC                        l5746 14A0  
                      l5738 145C                        l5690 12F6                        l5682 1294  
                      l5674 1276                        l5666 123E                        l5658 11F8  
                      l5594 10D4                        l5586 10A4                        l5578 1084  
                      l6298 2E3E                        l6570 0AC2                        l6562 0A5E  
                      l6554 0A18                        l6546 097E                        l6538 0950  
                      l6490 0724                        l6482 0676                        l6474 05C6  
                      l6458 04F6                        l6466 0536                        l6394 0210  
                      l6386 01E6                        l6378 01A2                        l5770 48E2  
                      l6626 4388                        l6618 4336                        l6730 1AC0  
                      l6722 1A82                        l6714 1A18                        l6706 19C4  
                      l6810 4610                        l6650 3336                        l6634 3272  
                      l7282 3046                        l7274 3004                        l7266 2F38  
                      l7258 2E98                        l7346 2732                        l7338 270A  
                      l7290 2498                        l7098 3762                        l7194 3A06  
                      l7186 39DE                        l7178 3980                        l7450 2952  
                      l7434 2910                        l7426 28D0                        l7370 278A  
                      l7362 2780                        l7354 2762                        l5764 46FE  
                      l5860 22E8                        l5852 22A6                        l5844 2268  
                      l5836 2230                        l5828 2202                        l5780 20FA  
                      l5940 156C                        l5932 1546                        l5924 151A  
                      l5916 14EA                        l5756 14CA                        l5748 14AE  
                      l5692 1306                        l5676 127A                        l5668 124E  
                      l5684 129A                        l5596 10E4                        l5588 10B2  
                      l6572 0AD2                        l6564 0A6C                        l6548 0984  
                      l6556 0A1C                        l6492 0734                        l6484 06AA  
                      l6476 061E                        l6468 053E                        l6396 021A  
                      l6388 01EA                        l5772 48FE                        l6628 43A8  
                      l6580 3414                        l6740 1B5A                        l6732 1ACC  
                      l6716 1A34                        l6708 19E8                        l6804 45D2  
                      l6660 339A                        l6652 3338                        l6644 32F0  
                      l6636 3280                        l7276 3012                        l7268 2F56  
                      l6900 4738                        l7348 2738                        l7292 249A  
                      l7284 247A                        l7188 39FC                        l7452 296E  
                      l7444 292E                        l7428 28EC                        l7380 2794  
                      l7372 278C                        l7364 2782                        l7356 277A  
                      l5766 4710                        l5862 22FE                        l5870 232E  
                      l5854 22C4                        l5846 2278                        l5838 2240  
                      l5790 212E                        l5782 20FC                        l5950 15C2  
                      l5942 157C                        l5934 154C                        l5926 152A  
                      l5918 14F8                        l5758 14CC                        l5686 12C0  
                      l5694 1316                        l5678 1288                        l5598 10E6  
                      l6574 0AE8                        l6566 0A9C                        l6558 0A3A  
                      l6494 0744                        l6486 06DC                        l6478 0652  
                      l6590 3484                        l6582 342E                        l6750 1BA4  
                      l6734 1AD4                        l6726 1A9A                        l6718 1A50  
                      l6806 45DE                        l6670 33F2                        l6662 33B8  
                      l6654 3344                        l6646 32F8                        l6638 32C6  
                      l7278 302A                        l6902 4746                        l6830 1D74  
                      l6822 1D1E                        l6814 2A08                        l6910 0B38  
                      l7294 249C                        l7286 248E                        l7198 3A0A  
                      l7470 29FC                        l7446 294A                        l7438 2918  
                      l7390 279E                        l7382 2796                        l7374 278E  
                      l7366 2786                        l7358 277C                        l5768 4714  
                      l5872 233C                        l5864 2304                        l5856 22C6  
                      l5848 228C                        l5784 210C                        l5792 2136  
                      l5776 20E0                        l5960 1602                        l5944 158C  
                      l5936 155A                        l5928 1530                        l5696 133C  
                      l5688 12F4                        l6576 0AF0                        l6568 0AAA  
                      l6496 0778                        l6488 06F2                        l6592 3492  
                      l6584 3436                        l6752 1BB2                        l6736 1AF6  
                      l6744 1B6C                        l6728 1A9E                        l6680 192C  
                      l6808 45F4                        l6672 3400                        l6664 33BA  
                      l6656 3380                        l6648 3304                        l6904 4748  
                      l6840 1EE2                        l6832 1D98                        l6824 1D3E  
                      l6912 0B3A                        l7296 249E                        l7288 2496  
                      l7456 2976                        l7464 299A                        l7392 27A0  
                      l7384 2798                        l7376 2790                        l7368 2788  
                      l5882 23A6                        l5890 23EE                        l5874 2340  
                      l5866 230E                        l5858 22D6                        l5794 2146  
                      l5786 211C                        l5778 20EC                        l5970 164C  
                      l5962 160E                        l5954 15D6                        l5946 1592  
                      l5938 155C                        l5698 134C                        l6498 07CE  
                      l6594 34B0                        l6586 3442                        l6754 1BC4  
                      l6762 1BDC                        l6746 1B7C                        l6738 1B28  
                      l6690 1952                        l6682 1938                        l6674 3402  
                      l6666 33BE                        l6658 338C                        l6818 3062  
                      l6850 1F70                        l6842 1EF2                        l6834 1E04  
                      l6826 1D54                        l6930 0C2A                        l6914 0B58  
                      l6922 0BAA                        l6906 0B12                        l7298 24B0  
                      l7466 29DC                        l7458 2992                        l7394 27A4  
                      l7386 279A                        l7378 2792                        l5892 2408  
                      l5884 23B2                        l5876 234E                        l5868 231C  
                      l5796 214C                        l5788 212C                        l5980 169E  
                      l5972 1658                        l5964 1626                        l5956 15E2  
                      l5948 15B2                        l6588 3446                        l6772 1C6A  
                      l6756 1BCC                        l6764 1BFA                        l6692 1962  
                      l6684 1944                        l6668 33E2                        l6860 20CA  
                      l6852 1FDC                        l6844 1F24                        l6836 1E2A  
                      l6828 1D56                        l6924 0BC8                        l6916 0B6E  
                      l6908 0B22                        l7468 29EE                        l7396 27AA  
                      l7388 279C                        l6870 41D6                        l5894 241E  
                      l5886 23C0                        l5878 237C                        l5798 2152  
                      l5990 171C                        l5982 16AE                        l5974 1668  
                      l5966 1632                        l5958 15EC                        l6598 34DA  
                      l6782 1CCC                        l6774 1C80                        l6766 1C1A  
                      l6758 1BD4                        l6686 1948                        l6678 1908  
                      l6854 2002                        l6838 1E82                        l6926 0BE6  
                      l6942 0CC2                        l6918 0B82                        l7398 27AE  
                      l6880 4220                        l6872 41E8                        l5896 2438  
                      l5888 23EA                        l5992 1752                        l5984 16CA  
                      l5976 1674                        l5968 163E                        l6776 1C9E  
                      l6768 1C42                        l6784 1CE4                        l6696 196A  
                      l6688 1950                        l6856 205A                        l6848 1F4C  
                      l6944 0CD2                        l6928 0BF6                        l6936 0C66  
                      l6952 0D8E                        l6890 4262                        l6882 422C  
                      l6874 41F4                        l5898 2454                        l5994 1760  
                      l5986 16D6                        l5978 1684                        l6698 1988  
                      l6794 4852                        l6858 20B2                        l6954 0DAC  
                      l6946 0D1E                        l6938 0C9A                        l6892 4264  
                      l6876 4204                        l6868 41D6                        l5996 177E  
                      l5988 16F2                        l6788 1CF6                        l6796 4872  
                      l6956 0DCA                        l6972 0E4A                        l6948 0D66  
                      l6894 481C                        l6878 420E                        l5998 1788  
                      l6798 4874                        l6990 0F28                        l6974 0E5A  
                      l6958 0DDA                        l6966 0E12                        l6982 0EEE  
                      l6896 482E                        l6888 4230                        l6992 0F4C  
                      l6984 0F04                        l6976 0E92                        l6898 4840  
                      l6994 0F70                        l6986 0F14                        l6978 0EC6  
                      l6998 0F98                        STR_1 FF58                        STR_2 FF36  
                      STR_3 FF47                        STR_4 FF9C                        STR_5 FF69  
                      STR_6 FF36                        STR_7 FF8B                        STR_8 FF7A  
                      STR_9 FFAD                        u7000 233C                        u7001 2338  
                      u7010 234E                        u7011 234A                        _PEIE 7F96  
                      u7020 237C                        u7100 150A                        u7021 2378  
                      u7101 1506                        u7030 2392                        u7110 151A  
                      u7031 238E                        u7111 1516                        u7040 23A6  
                      u7200 17C8                        u7120 155A                        u8000 03E8  
                      u7041 23A2                        u7201 17C4                        u7121 1556  
                      u8001 03E4                        u6410 495E                        u7050 23C0  
                      u7210 17F6                        u7130 156C                        u8010 0474  
                      u6411 495A                        u7051 23BC                        u7211 17F2  
                      u7131 1568                        u8011 0470                        u7300 4162  
                      u6420 4058                        u7060 2408                        u7220 180C  
                      u7140 157C                        u6500 10B2                        u8100 0734  
                      u8020 04AA                        u7301 415E                        u6421 4054  
                      u7061 2404                        u7221 1808                        u7141 1578  
                      u6501 10AE                        u8101 0730                        u8021 04A6  
                      u7310 4180                        u6430 406A                        u7070 2438  
                      u7230 1820                        u7150 15B2                        u6510 10C4  
                      u8110 07CE                        u8030 04C0                        u7311 417C  
                      u6431 4066                        u7071 2434                        u7231 181C  
                      u7151 15AE                        u6511 10C0                        u8111 07CA  
                      u8031 04BC                        u7320 419C                        u6440 4092  
                      u7080 2466                        u7400 4412                        u7240 183A  
                      u7160 15C2                        u6600 120C                        u6520 10D4  
                      u8200 0ABE                        u8120 081C                        u8040 04F6  
                      u7321 4198                        u6441 408E                        u7081 2462  
                      u7401 440E                        u7241 1836                        u7161 15BE  
                      u6601 1208                        u6521 10D0                        u8121 0818  
                      u8041 04F2                        u9001 378C                        u7330 41C2  
                      u6450 40C8                        u7410 4450                        u7250 1882  
                      u7170 173C                        u7090 14F8                        u6610 121A  
                      u6530 1110                        u8210 0AD2                        u8130 08CC  
                      u8050 0504                        u7331 41BE                        u6451 40C4  
                      u7411 444C                        u7251 187E                        u7091 14F4  
                      u6611 1216                        u6531 110C                        u8211 0ACE  
                      u8131 08C8                        u8051 0500                        u9011 379E  
                      u7340 4298                        u7420 4484                        u7260 18B0  
                      u7180 1796                        u6700 1378                        u6620 122A  
                      u6540 111E                        u6460 1038                        u7500 3CAE  
                      u8140 0906                        u8060 052E                        u8300 3568  
                      u8220 342E                        u9100 3942                        u7341 4294  
                      u7421 4480                        u7261 18AC                        u7181 1792  
                      u6701 1374                        u6621 1226                        u6541 111A  
                      u6461 1034                        u8141 0902                        u8061 052A  
                      u8301 3564                        u8221 342A                        u9101 393E  
                      u7350 42B2                        u7430 3D98                        u7270 18EA  
                      u7190 17B6                        u6710 1388                        u6630 125C  
                      u6550 118C                        u6470 104A                        u7510 3CDC  
                      u8150 0914                        u8070 0676                        u8310 3576  
                      u8230 3474                        u9110 399C                        u7351 42AE  
                      u7431 3D94                        u7271 18E6                        u7191 17B2  
                      u7175 1732                        u6711 1384                        u6631 1258  
                      u6551 1188                        u6471 1046                        u7511 3CD8  
                      u8151 0910                        u8071 0672                        u8311 3572  
                      u9111 3998                        u7280 4122                        u7360 42CC  
                      u7600 4894                        u7440 3DD6                        u6800 146C  
                      u6720 13A4                        u6640 126A                        u6560 11A4  
                      u6480 105A                        u7520 3CF0                        u8160 0968  
                      u8080 06DC                        u8320 35B0                        u8240 3484  
                      u8400 339A                        u9040 3814                        u9200 3AD2  
                      u9120 39AA                        u7281 411E                        u7361 42C8  
                      u7601 4890                        u7441 3DD2                        u6801 1468  
                      u6721 13A0                        u6641 1266                        u6561 119E  
                      u6481 1056                        u7521 3CEC                        u7505 3CA4  
                      u8161 0964                        u8081 06D8                        u8321 35AC  
                      u8241 3480                        u8401 3396                        u9041 380E  
                      u9201 3ACE                        u9121 39A6                        u7290 413C  
                      u7370 42EA                        u7450 3DF4                        u6810 147C  
                      u6730 13B4                        u6650 1288                        u6570 11A6  
                      u6490 109C                        u7530 3D18                        u7610 3EAE  
                      u8170 0A3A                        u8090 0724                        u8330 4360  
                      u8250 3492                        u8410 33AA                        u9050 3816  
                      u9034 37FE                        u9210 3AEA                        u9130 39D0  
                      u7291 4138                        u7371 42E6                        u7451 3DF0  
                      u6811 1478                        u6731 13B0                        u6651 1284  
                      u6491 1098                        u7531 3D14                        u8171 0A36  
                      u8091 0720                        u8331 435C                        u8251 348E  
                      u8411 33A6                        u9035 37FA                        u9211 3AE6  
                      u9131 39CC                        u7380 4300                        u6900 2172  
                      u7460 3E14                        u6820 149C                        u6740 13C6  
                      u6660 12C0                        u6580 11CE                        u7540 3D38  
                      u7620 3ECC                        u7700 2C82                        u8180 0A56  
                      u8340 43DA                        u8260 34B0                        u8500 1A50  
                      u8420 33B8                        u9300 3038                        u9060 3838  
                      u9028 37D0                        u9220 3AFE                        u9140 39DE  
                      u7381 42FC                        u6901 216E                        u7461 3E10  
                      u6821 1498                        u6741 13C2                        u6661 12BC  
                      u6581 11CA                        u7541 3D34                        u7621 3EC8  
                      u8181 0A52                        u8341 43D6                        u8261 34AC  
                      u8237 346A                        u8501 1A4C                        u8421 33B4  
                      u9301 3034                        u9061 3834                        u9029 3818  
                      u9221 3AFA                        u9141 39DA                        u7390 4324  
                      u6910 2182                        u7470 3E64                        u6830 14AE  
                      u6750 13DC                        u6670 1306                        u6590 11EC  
                      u7550 3D48                        u7630 3EF4                        u7710 2CB2  
                      u8190 0ABC                        u8270 34D6                        u8510 1AC0  
                      u8430 33F2                        u8350 3272                        u9310 3046  
                      u9070 3870                        u9230 3B24                        u9150 39F6  
                      u7391 4320                        u6911 217E                        u7471 3E60  
                      u6831 14AA                        u6751 13D8                        u6671 1302  
                      u6591 11E8                        u7551 3D44                        u7631 3EF0  
                      u7615 3EA4                        u7711 2CAE                        u8191 0AB6  
                      u8271 34D2                        u8511 1ABC                        u8431 33EE  
                      u8351 326E                        u9311 3042                        u9071 386C  
                      u9231 3B20                        u9151 39F2                        u7560 449C  
                      u6920 21C2                        u7480 478C                        u6840 14CA  
                      u6760 13F2                        u6680 133C                        u7640 3F1E  
                      u7720 2CD4                        u7800 45D0                        u8280 3510  
                      u8520 1AF6                        u8440 3400                        u8360 3280  
                      u9320 305E                        u8600 1D50                        u9400 2760  
                      u9080 3886                        u9240 3B32                        u9160 3A38  
                      u7561 4498                        u6921 21BE                        u7481 4788  
                      u6841 14C6                        u6761 13EE                        u6681 1338  
                      u7641 3F1A                        u7721 2CD0                        u7705 2C78  
                      u7801 45CC                        u8281 350C                        u8521 1AF2  
                      u8441 33FC                        u8361 327C                        u9321 305A  
                      u8601 1D4A                        u9401 275C                        u9081 3882  
                      u9241 3B2E                        u9161 3A34                        u6850 4734  
                      u7570 44BE                        u7810 35C2                        u6930 2202  
                      u6770 1406                        u6690 134C                        u7490 3C7A  
                      u8290 3536                        u8530 1B28                        u8450 192C  
                      u8370 32DC                        u8610 1D52                        u9330 24EA  
                      u9250 3B46                        u9170 3A8C                        u9090 38DE  
                      u9410 27CA                        u6851 4730                        u7571 44BA  
                      u7811 35BC                        u6931 21FE                        u6771 1402  
                      u6691 1348                        u7491 3C76                        u8531 1B24  
                      u8451 1928                        u8371 32D8                        u9331 24E6  
                      u9251 3B42                        u9171 3A88                        u9091 38DA  
                      u9411 27C6                        u8700 4284                        u7580 4508  
                      u7820 35C4                        u6940 2278                        u6860 20FA  
                      u6780 1420                        u7660 3F58                        u7740 2D42  
                      u7900 013C                        u8540 1B5A                        u8460 1998  
                      u8380 3332                        u8620 1D74                        u9340 254C  
                      u9180 3AB2                        u9500 29EE                        u9420 27F0  
                      u8701 4280                        u7581 4504                        u6941 2274  
                      u6861 20F6                        u6781 141C                        u7661 3F52  
                      u7741 2D3E                        u7901 0138                        u8541 1B56  
                      u8461 1994                        u8381 332E                        u9261 2E70  
                      u8621 1D70                        u9341 2548                        u9181 3AAE  
                      u9501 29EA                        u9421 27EC                        u8710 482C  
                      u7590 4516                        u7830 35D4                        u6950 229A  
                      u6870 210C                        u6790 145A                        u7670 3F5A  
                      u7750 2D66                        u7910 0186                        u8550 1B7C  
                      u8470 19BA                        u8390 337C                        u9270 2E98  
                      u8630 1EF2                        u9350 26D4                        u9190 3AC0  
                      u9430 280E                        u8711 4828                        u7591 4512  
                      u7831 35D0                        u6951 2296                        u6871 2108  
                      u6791 1456                        u7655 3F30                        u7735 2CE8  
                      u7911 0182                        u8551 1B78                        u8471 19B6  
                      u8391 3378                        u9271 2E94                        u8631 1EEE  
                      u9351 26D0                        u9191 3ABC                        u9431 280A  
                      u8720 4850                        u7840 3600                        u6960 22C4  
                      u6880 211C                        u7760 2D82                        u7736 2CF2  
                      u7680 47E4                        u7920 0196                        u8560 1C16  
                      u8480 19E8                        u9280 2F38                        u8640 20DA  
                      u8800 0BE6                        u9360 26F6                        u9440 281C  
                      u8721 484C                        u7841 35FC                        u6961 22C0  
                      u6881 2118                        u7761 2D7E                        u7737 2D02  
                      u7681 47E0                        u7921 0192                        u8297 352C  
                      u8561 1C12                        u8481 19E4                        u9281 2F34  
                      u8641 20D6                        u8801 0BE2                        u9361 26F2  
                      u9441 2818                        u8570 491C                        u8650 41E6  
                      u7850 3616                        u6970 22E8                        u6890 2160  
                      u7770 2DD6                        u7690 453A                        u7930 01D4  
                      u8490 1A34                        u9290 3012                        u8730 475A  
                      u8810 0BF6                        u9370 270A                        u9450 2842  
                      u8571 4918                        u8651 41E2                        u7851 3612  
                      u6971 22E4                        u6891 215C                        u7755 2D5C  
                      u7691 4536                        u7931 01D0                        u8491 1A30  
                      u9291 300E                        u8731 4756                        u8811 0BF2  
                      u9371 2706                        u9451 283E                        u8580 492A  
                      u8660 4204                        u7860 36BA                        u6980 22FE  
                      u7780 2DF2                        u7940 01E6                        u8740 476E  
                      u8820 0CD2                        u9380 271E                        u9460 2860  
                      u8581 4926                        u8661 4200                        u7861 36B6  
                      u6981 22FA                        u7781 2DEE                        u7941 01E2  
                      u8741 476A                        u8821 0CCE                        u9381 271A  
                      u9461 285C                        u9517 276E                        u8670 4220  
                      u7870 36CC                        u6990 231C                        u7790 2E2E  
                      u7950 0260                        u8590 4610                        u8830 0DAC  
                      u8750 0B34                        u9390 2732                        u9470 286E  
                      u8671 421C                        u7871 36C8                        u6991 2318  
                      u7791 2E2A                        u7775 2DCC                        u7951 025C  
                      u8591 460C                        u9607 301E                        u8831 0DA8  
                      u8751 0B2E                        u9391 272E                        u9471 286A  
                      u9527 27D6                        u8680 425E                        u7880 36E6  
                      u7960 0272                        u8840 0DCA                        u8760 0B36  
                      u9480 2894                        u9617 3F8E                        u7881 36E2  
                      u7961 026E                        u8841 0DC6                        u8905 498A  
                      u9481 2890                        u9537 2828                        u8690 4274  
                      u7890 36F6                        u7970 02EC                        u8850 0DDA  
                      u8770 0B58                        u8906 498C                        u9490 28A2  
                      u9627 403C                        u8691 4270                        u7891 36F2  
                      u7971 02E8                        u8851 0DD6                        u8771 0B54  
                      u8915 497C                        u9491 289E                        u9547 287A  
                      u7980 0378                        u8860 0E5A                        u8780 0B6E  
                      u8916 497E                        u8940 480E                        u7981 0374  
                      u8861 0E56                        u8781 0B6A                        u8925 496E  
                      u8941 480A                        u9557 39B6                        u8950 3FA6  
                      u7990 03AA                        u8870 0F04                        u8790 0BC8  
                      u8926 4970                        u8951 3FA2                        u8687 4254  
                      u7991 03A6                        u8871 0F00                        u8791 0BC4  
                      u8935 49B4                        u9567 3A96                        u8960 4036  
                      u8936 49B6                        u8961 4032                        u9577 3B08  
                      u8971 3B62                        u9587 3842                        u8980 3B80  
                      u8981 3B7C                        u9597 2744                        u8885 49A6  
                      u8990 3B98                        u8886 49A8                        u8991 3B94  
                      u8895 4998                        u8896 499A                        _TMR1 0FCE  
                      abs@a 000C                        _dbuf 0125                        _half FEFF  
                      _labs 452C                        _main 2762                        _dtoa 35B2  
                      _prec 0057                        _sinf 0B12                        pad@i 001E  
                      pad@p 001B                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf1 0FE7                        indf2 0FDF                        fsr1l 0FE1  
                      fsr2l 0FD9                        _stoa 3414                        btemp 005A  
             ___fpclassifyf 3E6E                        prodh 0FF4                        prodl 0FF3  
                      start 0114             ___fldiv@new_exp 003E                ___param_bank 0000  
                     ??_ISR 0001              _LCD_ShowString 41D4                       ??_abs 000E  
                     ??_pad 001D            __end_of_LCD_Init 4046            __end_of_LCD_Send 492E  
             ___fltol@sign1 0052                       ?_labs 0006             __end_of___fladd 14DE  
                     ?_main 0001                       ?_dtoa 0020             __end_of___fldiv 247A  
           __end_of___awdiv 41D4             __end_of___cosdf 3260             __end_of___flneg 47AE  
                     STR_10 FF36                       STR_11 FF36                       STR_12 FF36  
                     STR_20 FFD6                       STR_13 FF36                       STR_21 FFC5  
                     STR_30 FFEE                       STR_14 FFE5                       STR_22 FFD5  
                     STR_23 FFCB                       STR_15 FFDB                       STR_24 FFCC  
                     STR_16 FFE0                       STR_33 FFBE                       STR_25 FF23  
                     STR_17 FFFA                       STR_26 FFD1                       STR_18 FFF6  
                     STR_27 FFEA                       STR_19 FFF2             __end_of___awmod 4336  
                     ?_sinf 00A4             __end_of___flmul 1908             __end_of___flsub 46AC  
           __end_of___fltol 3D6A                       ?_stoa 0010             ___awdiv@divisor 0008  
                     _RC1IE 7CED                       _RC1IF 7CF5             __end_of___sindf 2C3A  
                     i2l384 0088                       i2l394 0108                       i2l386 0074  
              ___sindf$4153 0070                ___sindf$4154 0074                ___sindf$4155 0078  
           ___awdiv@counter 000A                vfpfcnvrt@fmt 00BB                       _TX1IF 7CF4  
           __end_of_pio2_1t FEF7                       _fabsf 4852                       _flags 0059  
                     _gmail 0175         read_prec_or_width@c 000E         read_prec_or_width@n 000F  
                     _fputc 4046                       _fputs 46F2                       labs@a 0006  
                     pad@fp 0017                       _width 0055             __end_of_invpio2 FEFF  
                     _putch 494E                       dtoa@d 0022                       dtoa@i 002B  
                     dtoa@p 0028                       dtoa@s 002A                       dtoa@w 0026  
      __end_of_LED1_Control 49AA             __end_of_runGAME 49BC             __end_of_runGPIO 389E  
                     pclath 0FFA                       tablat 0FF5             __end_of_runUART 3A0A  
      __end_of_LED2_Control 499C                       sinf@n 00B0                       sinf@x 00A4  
                     sinf@y 00B6                       plusw1 0FE3                       plusw2 0FDB  
                     stoa@l 001C                       stoa@p 0016                       stoa@s 0012  
                     stoa@w 0018                       ttemp5 005B                       ttemp6 005E  
                     ttemp7 0062        __end_of_LED3_Control 498E                       status 0FD8  
                     wtemp8 005B             __end_of_sprintf 46F2              ?___fpclassifyf 0006  
      __end_of_LED4_Control 4980        __end_of_LED5_Control 4972             runUART@reversed 00D4  
      __end_of_LED6_Control 49B8             __initialization 461C      __end_of_LCD_ShowString 4286  
              __end_of_half FF03                __end_of_labs 4582                __end_of_main 2A08  
              __end_of_dtoa 372E                __end_of_sinf 101C                __end_of_stoa 35B2  
              LCD_Send@data 0006                      ??_labs 000A                      ??_main 00FA  
                    ??_dtoa 0024                      ??_sinf 0054                      ??_stoa 0014  
         __end_of_LCD_Clear 4852               __activetblptr 0002  __end_of_read_prec_or_width 43E4  
              ?_moveDisplay 00E7                      ?_fabsf 0006                      ?_fputc 0007  
                    ?_fputs 0010                      _ADRESH 0FC4                      _ADRESL 0FC3  
                    _CCPR1L 0FBE            ___awdiv@dividend 0006                      ?_putch 0001  
                    _GODONE 7E11                      _GPIOIE 0124                      i2l5510 0040  
                    i2l5520 0090                      i2l5512 004E                      i2l5504 0012  
                    i2l5530 00C4                      i2l5514 0066                      i2l5506 0020  
                    i2l5522 0092                      i2l5540 0100                      i2l5532 00D6  
                    i2l5524 00A0                      i2l5508 002E                      i2l5534 00E6  
                    i2l5526 00AE                      i2l5518 0082                      i2l5536 00EE  
                    i2l5528 00C0                      i2l5538 00F2                      _RCREG1 0FAE  
             ___rem_pio2f@n 00A0               ___rem_pio2f@t 009C               ___rem_pio2f@x 0084  
             ___rem_pio2f@y 0088               vfpfcnvrt@done 00C4                      _UARTIE 0123  
                    _SPBRG1 0FAF                      _TMR1IE 7CE8                      _TMR1IF 7CF0  
                    _TMR2IE 7CE9                      _TMR2IF 7CF1                      _TMR1ON 7E68  
                    _TMR2ON 7DD2                      _SSP1IF 7CF3                      _SSP2IF 7D27  
                    _TXREG1 0FAD            __end_of___xxtofl 3414                _CCPTMRS0bits 0F49  
              vfprintf@cfmt 00CC             ?_LCD_ShowString 0007                      _s1pio2 FF1F  
                    _s2pio2 FF1B                      _s3pio2 FF17                      _s4pio2 FF13  
                    ___flge 3D6A                      ___fleq 43E4                   ??___fladd 004E  
                    ___wmul 48E2                   ??___fldiv 0035                   ??___awdiv 000A  
                 ??___cosdf 0052                   ??___flneg 0052                   ??___awmod 000A  
                 ??___flmul 001C                   ??___flsub 0052                   ??___fltol 0068  
          runUART@keepState 00F3                      _efgtoa 0118                   ??___sindf 0052  
                    _pio2_1 FEF7                      _floorf 2C3A                      fabsf@u 000A  
                    fabsf@x 0006                      _memcpy 4582        read_prec_or_width@ap 000D  
                    clear_0 4642            ___awdiv@quotient 000C                      _runADC 2E50  
                    _runDAC 247A             ___awmod@divisor 0008                      isa$std 0001  
                    _runPWM 3A0A             ___awmod@counter 000A                      _printf 492E  
                    pad@buf 0019                      dtoa@fp 0020                      _strcpy 47AE  
                    _strlen 47E6                      fputc@c 0007                      fputs@c 0014  
                    fputs@i 0015                      fputs@s 0010            __end_of_runMUSIC 49BA  
           ___fpclassifyf@e 000E             ___fpclassifyf@u 0010             ___fpclassifyf@x 0006  
              __mediumconst FEE2                   ??_runGAME 0006                      sinf@ux 00BA  
                 ??_runGPIO 0007                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8           __end_of_SPI_write 4774                   ??_runUART 00D2  
                    stoa@cp 001A                      stoa@fp 0010            __end_of_vfprintf 461C  
                 ??_sprintf 0054                  ___flge@ff1 002D                  ___flge@ff2 0031  
           ??___fpclassifyf 000A                ___xxtofl@arg 0010                ___xxtofl@exp 000F  
              ___xxtofl@val 0006                  ___fleq@ff1 0006                  ___fleq@ff2 000A  
                __accesstop 0060     __end_of__initialization 4656                   ?_LCD_Init 0001  
                 ?_LCD_Send 0001                  ___flneg@f1 0080               ___rparam_used 0001  
                ___fltol@f1 0064              __pcstackCOMRAM 0001           LED4_Control@state 0006  
              __pidataBANK1 48BA               __end_of_fabsf 4886               __end_of_fputc 4110  
             __end_of_fputs 4736               __end_of_putch 4964                  __end_of_C0 FF13  
                __end_of_C1 FF0F                  __end_of_C2 FF0B                  __end_of_C3 FF07  
                __end_of_S1 FEF3                  __end_of_S2 FEEF                  __end_of_S3 FEEB  
                __end_of_S4 FEE7                     ??_fabsf 000A                     ??_fputc 000B  
                   ??_fputs 0014                     ??_putch 0006                  __pbssBANK0 00FE  
                __pbssBANK1 0100                  ??_LCD_Init 0007                  ??_LCD_Send 0006  
               runADC@F6965 0100                SPI_write@LSB 0007                SPI_write@MSB 0006  
                   ISR@temp 0005                     ?___flge 002D                     ?___fleq 0006  
                   ?___wmul 0006                     ?_efgtoa 0084               ??___rem_pio2f 0089  
                   ?_floorf 0046                _LED1_Control 499C                     ?_memcpy 0006  
                   ?_runADC 0001                     ?_runDAC 0001                _LED2_Control 498E  
                   ?_runPWM 0001                     ?_printf 00CE                     ?_strcpy 0006  
                   ?_strlen 0006                _LED3_Control 4980                _LED4_Control 4972  
                 ?___xxtofl 0006                _LED5_Control 4964              ___rem_pio2f@fn 0098  
            ___rem_pio2f@ty 008B              ___rem_pio2f@ux 0094                _LED6_Control 49AA  
                   _SSP2ADD 0F6E                     _SSP1BUF 0FC9                     _SSP2BUF 0F6F  
         runGPIO@LEDControl 0015             LCD_ShowString@i 000C                     __Hparam 0000  
                   __Lparam 0000                   ?_runMUSIC 0001                     ___fladd 101C  
                   ___fldiv 20E0                     ___awdiv 4110                     ___cosdf 3062  
                   ___flneg 4774                     ___awmod 4286                     ___flmul 14DE  
                   ___flsub 4664                     ___fltol 3C62                     ___sindf 2A08  
                 ?_vfprintf 00C7              main@setUpAgain 00FC                     __pcinit 461C  
                   __ramtop 1000                     __ptext0 2762                     __ptext1 389E  
                   __ptext2 47E6                     __ptext3 3A0A                     __ptext4 49B8  
                   __ptext5 372E                     __ptext6 4964                     __ptext7 4972  
                   __ptext8 4980                     __ptext9 498E                     _pio2_1t FEF3  
                 _T1CONbits 0FCD             runPWM@keepState 0010       read_prec_or_width@fmt 000C  
                ??___xxtofl 000A         __end_of___rem_pio2f 20E0            ___awmod@dividend 0006  
                   _invpio2 FEFB                     _runGAME 49BA                     _runGPIO 372E  
                   efgtoa@c 008A                     efgtoa@d 0098                     efgtoa@e 009C  
                   efgtoa@f 0086                     efgtoa@g 00AF                     efgtoa@h 00A6  
                   efgtoa@i 00A4                     efgtoa@l 00AA                     efgtoa@m 009A  
                   efgtoa@n 00B3                     efgtoa@p 008F                     efgtoa@t 0091  
                   efgtoa@u 00B5                     efgtoa@w 009E                     _runUART 389E  
                 _LCD_Clear 481C                     _sprintf 46AC            ___rem_pio2f$4152 008F  
      end_of_initialization 4656                     floorf@e 0064                     floorf@m 0060  
                   floorf@u 0066                     floorf@x 0046                     memcpy@d 000D  
                   memcpy@n 000A                     memcpy@s 000F                     fputc@fp 0009  
          ___rem_pio2f@F526 0115               __Lmediumconst FEE2                     fputs@fp 0012  
          ??_LCD_ShowString 0009          _read_prec_or_width 4336           LED1_Control@state 0006  
     LCD_ShowString@lineNum 000B            ___rem_pio2f@sign 0093                  ??_runMUSIC 0006  
         __end_of_vfpfcnvrt 1D1E                  efgtoa@mode 0096                  efgtoa@sign 00AE  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 000C  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 00BF                  ??_vfprintf 0054                     strcpy@d 000A  
                   strlen@a 0008                     strlen@s 0006                   _PORTAbits 0F80  
                 _PORTCbits 0F82                 ___fladd@grs 0063               ___xxtofl@sign 000E  
                 _TRISAbits 0F92                   _TRISBbits 0F93                   _TRISCbits 0F94  
                 _TRISDbits 0F95                  ?_LCD_Clear 0001        ??_read_prec_or_width 000E  
               ___fldiv@grs 0040                 ___fldiv@rem 0039                   _SPI_write 4736  
               ___flmul@grs 0022                 _CCP1CONbits 0FBD           LED5_Control@state 0006  
            __end_of_s1pio2 FF23              __end_of_s2pio2 FF1F              __end_of_s3pio2 FF1B  
            __end_of_s4pio2 FF17              __end_of___flge 3E6E              __end_of___fleq 448E  
               vfpfcnvrt@ap 00BC                 vfpfcnvrt@cp 00C5                 ___rem_pio2f 1D1E  
               vfpfcnvrt@fp 00B9              __end_of___wmul 4908              __end_of_efgtoa 0B12  
            __end_of_pio2_1 FEFB        moveDisplay@menuItem1 0195        moveDisplay@menuItem2 01A6  
            __end_of_floorf 2E50        moveDisplay@menuItems 01B7              __end_of_memcpy 45D2  
                floorf@F521 0119              __end_of_runADC 3062              __end_of_runDAC 2762  
            __end_of_runPWM 3B50              __end_of_printf 494E              __end_of_strcpy 47E6  
            __end_of_strlen 481C         start_initialization 461C                 __end_of_ISR 0114  
               __end_of_abs 48BA                 __end_of_pad 452C                  ?_SPI_write 0001  
     __end_of___fpclassifyf 3F6C             runADC@keepState 01B2                 vfprintf@fmt 00C9  
                  ??___flge 0035                    ??___fleq 000E                    ??___wmul 000A  
                  ??_efgtoa 008B                 __pdataBANK1 01C8                    ??_floorf 004A  
                  ??_memcpy 000C                    ??_runADC 00E7                    ??_runDAC 00D2  
                  ??_runPWM 000E                    ??_printf 0054                    ??_strcpy 000A  
                  ??_strlen 0008                   ___fladd@a 004A                   ___fladd@b 0046  
                 ___fldiv@a 0031                   ___fldiv@b 002D               runGPIO@states 0009  
                 ___cosdf@r 0068                   ___cosdf@w 0078                   ___cosdf@x 0064  
                 ___cosdf@z 007C                   ___flmul@a 0018                   ___flmul@b 0014  
               __pbssCOMRAM 0055                   ___flsub@a 0068                   ___flsub@b 0064  
             __pcstackBANK0 0060               __pcstackBANK1 0195                 ??_LCD_Clear 0007  
                 ___sindf@r 0068                   ___sindf@s 007C                   ___sindf@w 006C  
                 ___sindf@x 0064                   ___sindf@z 0080       runGPIO@numberOfStates 0022  
               _efgtoa$3705 0093                   _dtoa$3674 0024               SPI_write@data 0008  
                 __pintcode 0008               __pmediumconst FEE2                    ?___fladd 0046  
                  ?___fldiv 002D                    ?___awdiv 0006                    ?___cosdf 0064  
                  ?___flneg 0080                    ?___awmod 0006                    ?___flmul 0014  
                  ?___flsub 0064                    ?___fltol 0064                  runADC@pot1 01AE  
                runADC@pot2 01B0                    ?___sindf 0064                  runADC@text 0195  
                 fabsf@F465 0111               ??_moveDisplay 00E8                    ?_runGAME 0001  
                  ?_runGPIO 0001                    ?_runUART 0001             runDAC@keepState 00DB  
                  ?_sprintf 00CE                   _sinf$4148 00B2                   _sinf$3870 00AC  
                 _sinf$3869 00A8                 ??_SPI_write 0006              runDAC@DACindex 00DD  
                  _LCD_Init 3F6C                    _LCD_Send 4908              ___wmul@product 000A  
                  _LATAbits 0F89                    _LATBbits 0F8A                    _LATCbits 0F8B  
                  _LATDbits 0F8C                  runUART@len 00F4           LED2_Control@state 0006  
                  i2u631_40 0020                    i2u631_41 001C                    i2u640_40 00D6  
                  i2u632_40 002E                    i2u640_41 00D2                    i2u632_41 002A  
                  i2u633_40 0040                    i2u633_41 003C                    i2u634_40 004E  
                  i2u634_41 004A                    i2u635_40 0074                    i2u635_41 0070  
                  i2u636_40 0082                    i2u636_41 007E                    i2u637_40 00A0  
                  i2u637_41 009C                    i2u638_40 00AE                    i2u638_41 00AA  
                  i2u639_40 00C0                    i2u639_41 00BC                    i2u963_47 0058  
                 _vfpfcnvrt 1908                  _ADCON0bits 0FC2                  _ADCON2bits 0FC0  
         ___wmul@multiplier 0006                   main@menuI 00FD            moveDisplay@F6963 01C8  
                vfpfcnvrt@c 00C3                   copy_data0 4630         __end_of_moveDisplay 3C62  
          moveDisplay@menuI 01C7            moveDisplay@where 00E7                runGPIO@F6975 01E4  
              runGPIO@F6993 01D8                runGPIO@GPIOi 0024                    __Hrparam 0000  
                 memcpy@tmp 000C                  vfprintf@ap 00CB                    __Lrparam 0000  
                vfprintf@fp 00C7          runGPIO@GPIOreverse 0021           LED6_Control@state 0006  
              ?___rem_pio2f 0084                  ?_vfpfcnvrt 00B9         runDAC@selectModeDAC 00DC  
                _ANSELAbits 0F38                  _ANSELBbits 0F39                  _ANSELCbits 0F3A  
                _ANSELDbits 0F3B                  _ANSELEbits 0F3C          ___fpclassifyf@F465 011D  
                sprintf@fmt 00D0                    ___xxtofl 3260                    __ptext10 499C  
                  __ptext11 49AA                    __ptext20 4736                    __ptext12 49BA  
                  __ptext21 2E50                    __ptext13 247A                    __ptext30 0118  
                  __ptext22 3260                    __ptext14 0B12                    __ptext31 47AE  
                  __ptext23 3B50                    __ptext15 2A08                    __ptext40 14DE  
                  __ptext32 4582                    __ptext24 46AC                    __ptext16 1D1E  
                  __ptext41 3D6A                    __ptext33 452C                    __ptext25 45D2  
                  __ptext17 4852                    __ptext50 4286                    __ptext42 43E4  
                  __ptext34 2C3A                    __ptext26 1908                    __ptext18 3062  
                  __ptext51 4110                    __ptext43 20E0                    __ptext35 3E6E  
                  __ptext27 3414                    __ptext19 492E                    __ptext52 41D4  
                  __ptext44 35B2                    __ptext36 3C62                    __ptext28 4336  
                  __ptext53 481C                    __ptext45 448E                    __ptext37 4664  
                  __ptext29 48E2                    __ptext54 3F6C                    __ptext46 46F2  
                  __ptext38 101C                    __ptext55 4908                    __ptext47 4046  
                  __ptext39 4774                    __ptext48 494E                    __ptext49 4886  
            runADC@voltage1 01A6              runADC@voltage2 01AA                _SSP1CON1bits 0FC6  
              _SSP2CON1bits 0F6C                _SSP2CON2bits 0F6B                  strcpy@dest 0006  
                  efgtoa@fp 0084                    efgtoa@ne 008D                    efgtoa@pp 0095  
                  efgtoa@ou 00A0                    _runMUSIC 49B8                    isa$xinst 0000  
                  int$flags 005A                 _runDAC$4145 00D3                 _runDAC$4146 00D7  
                  _vfprintf 45D2               ?_LED1_Control 0001                   printf@fmt 00CE  
              _SSP1STATbits 0FC7               ?_LED2_Control 0001                _SSP2STATbits 0F6D  
             ?_LED3_Control 0001               ?_LED4_Control 0001                   putch@data 0006  
             ?_LED5_Control 0001                    memcpy@d1 0006               ?_LED6_Control 0001  
                  memcpy@s1 0008                 _moveDisplay 3B50                    intlevel2 0000  
                 sprintf@ap 00DA                   strcpy@src 0008                  _RCSTA1bits 0FAB  
                  sinf@sign 00B1                    runGPIO@j 0025                    runUART@i 00F6  
                  runUART@p 00F8                 efgtoa@nmode 0097                    printf@ap 0054  
            ??_LED1_Control 0006              ??_LED2_Control 0006                 ??_vfpfcnvrt 00BD  
    LCD_ShowString@textData 0007              ??_LED3_Control 0006              ??_LED4_Control 0006  
                  sprintf@f 00DB                    sprintf@s 00CE              ??_LED5_Control 0006  
            ??_LED6_Control 0006            runPWM@multiplier 0011               ___fladd@signs 0060  
              ___fladd@aexp 0061                ___fladd@bexp 0062                ___cosdf$4150 0070  
              ___cosdf$4151 0074                ___cosdf$4149 006C               _keepStateGPIO 00FE  
         LED3_Control@state 0006  
