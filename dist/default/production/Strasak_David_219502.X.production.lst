

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 17 21:47:28 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83   000000                     
    84                           ; Generated 12/10/2023 GMT
    85                           ; 
    86                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F46K22 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118   000000                     
   119                           	psect	idataBANK1
   120   005198                     __pidataBANK1:
   121                           	callstack 0
   122                           
   123                           ;initializer for moveDisplay@F6965
   124   005198  DC                 	db	low STR_17
   125   005199  FF                 	db	high STR_17
   126   00519A  E1                 	db	low STR_18
   127   00519B  FF                 	db	high STR_18
   128   00519C  FB                 	db	low STR_19
   129   00519D  FF                 	db	high STR_19
   130   00519E  F7                 	db	low STR_20
   131   00519F  FF                 	db	high STR_20
   132   0051A0  F3                 	db	low STR_21
   133   0051A1  FF                 	db	high STR_21
   134   0051A2  D7                 	db	low STR_22
   135   0051A3  FF                 	db	high STR_22
   136   0051A4  C6                 	db	low STR_23
   137   0051A5  FF                 	db	high STR_23
   138   0051A6  D6                 	db	low (STR_28+4)
   139   0051A7  FF                 	db	high (STR_28+4)
   140                           
   141                           ;initializer for runGPIO@F6993
   142   0051A8  20                 	db	32
   143   0051A9  30                 	db	48
   144   0051AA  18                 	db	24
   145   0051AB  0C                 	db	12
   146   0051AC  06                 	db	6
   147   0051AD  03                 	db	3
   148   0051AE  01                 	db	1
   149   0051AF  03                 	db	3
   150   0051B0  06                 	db	6
   151   0051B1  0C                 	db	12
   152   0051B2  18                 	db	24
   153   0051B3  30                 	db	48
   154                           
   155                           ;initializer for runGPIO@F6975
   156   0051B4  7A                 	db	low _LED1_Control
   157   0051B5  52                 	db	high _LED1_Control
   158   0051B6  6C                 	db	low _LED2_Control
   159   0051B7  52                 	db	high _LED2_Control
   160   0051B8  5E                 	db	low _LED3_Control
   161   0051B9  52                 	db	high _LED3_Control
   162   0051BA  50                 	db	low _LED4_Control
   163   0051BB  52                 	db	high _LED4_Control
   164   0051BC  42                 	db	low _LED5_Control
   165   0051BD  52                 	db	high _LED5_Control
   166   0051BE  88                 	db	low _LED6_Control
   167   0051BF  52                 	db	high _LED6_Control
   168                           
   169                           	psect	mediumconst
   170   00FE7A                     __pmediumconst:
   171                           	callstack 0
   172   00FE7A  00                 	db	0
   173   00FE7B  6C3C               	dw	27708
   174   00FE7D  3636               	dw	13878
   175   00FE7F                     __end_of_S4:
   176                           	callstack 0
   177   00FE7F  07CF               	dw	1999
   178   00FE81  B950               	dw	47440
   179   00FE83                     __end_of_S3:
   180                           	callstack 0
   181   00FE83  8884               	dw	34948
   182   00FE85  3C08               	dw	15368
   183   00FE87                     __end_of_S2:
   184                           	callstack 0
   185   00FE87  AAAB               	dw	43691
   186   00FE89  BE2A               	dw	48682
   187   00FE8B                     __end_of_S1:
   188                           	callstack 0
   189   00FE8B  85A3               	dw	34211
   190   00FE8D  3288               	dw	12936
   191   00FE8F                     __end_of_pio2_1t:
   192                           	callstack 0
   193   00FE8F  0FDA               	dw	4058
   194   00FE91  3FC9               	dw	16329
   195   00FE93                     __end_of_pio2_1:
   196                           	callstack 0
   197   00FE93  F983               	dw	63875
   198   00FE95  3F22               	dw	16162
   199   00FE97                     __end_of_invpio2:
   200                           	callstack 0
   201   00FE97  0000               	dw	0
   202   00FE99  3F00               	dw	16128
   203   00FE9B                     __end_of_half:
   204                           	callstack 0
   205   00FE9B  9A17               	dw	39447
   206   00FE9D  37CC               	dw	14284
   207   00FE9F                     __end_of_C3:
   208                           	callstack 0
   209   00FE9F  043F               	dw	1087
   210   00FEA1  BAB6               	dw	47798
   211   00FEA3                     __end_of_C2:
   212                           	callstack 0
   213   00FEA3  AA9F               	dw	43679
   214   00FEA5  3D2A               	dw	15658
   215   00FEA7                     __end_of_C1:
   216                           	callstack 0
   217   00FEA7  0000               	dw	0
   218   00FEA9  BF00               	dw	48896
   219   00FEAB                     __end_of_C0:
   220                           	callstack 0
   221   00FEAB  0FDB               	dw	4059
   222   00FEAD  40C9               	dw	16585
   223   00FEAF                     __end_of_s4pio2:
   224                           	callstack 0
   225   00FEAF  CBE4               	dw	52196
   226   00FEB1  4096               	dw	16534
   227   00FEB3                     __end_of_s3pio2:
   228                           	callstack 0
   229   00FEB3  0FDB               	dw	4059
   230   00FEB5  4049               	dw	16457
   231   00FEB7                     __end_of_s2pio2:
   232                           	callstack 0
   233   00FEB7  0FDB               	dw	4059
   234   00FEB9  3FC9               	dw	16329
   235   00FEBB                     __end_of_s1pio2:
   236                           	callstack 0
   237   000000                     _ADRESL	set	4035
   238   000000                     _RCREG1	set	4014
   239   000000                     _ANSELCbits	set	3898
   240   000000                     _TXREG1	set	4013
   241   000000                     _ADRESH	set	4036
   242   000000                     _LATBbits	set	3978
   243   000000                     _TXSTA1bits	set	4012
   244   000000                     _ANSELBbits	set	3897
   245   000000                     _TRISBbits	set	3987
   246   000000                     _SSP2STATbits	set	3949
   247   000000                     _SSP2ADD	set	3950
   248   000000                     _ANSELDbits	set	3899
   249   000000                     _PORTAbits	set	3968
   250   000000                     _PORTCbits	set	3970
   251   000000                     _LATCbits	set	3979
   252   000000                     _LATDbits	set	3980
   253   000000                     _ANSELAbits	set	3896
   254   000000                     _TRISAbits	set	3986
   255   000000                     _TRISCbits	set	3988
   256   000000                     _TMR2IE	set	31977
   257   000000                     _TMR2IF	set	31985
   258   000000                     _RC1IF	set	31989
   259   000000                     _RC1IE	set	31981
   260   000000                     _TMR1ON	set	32360
   261   000000                     _TMR1IF	set	31984
   262   000000                     _GIE	set	32663
   263   000000                     _TX1IF	set	31988
   264   000000                     _GODONE	set	32273
   265   000000                     _TRISDbits	set	3989
   266   000000                     _TMR1IE	set	31976
   267   000000                     _SSP1IF	set	31987
   268   000000                     _SSP2IF	set	32039
   269   000000                     _LATAbits	set	3977
   270   000000                     _CCPTMRS0bits	set	3913
   271   000000                     _ANSELEbits	set	3900
   272   000000                     _SSP2CON2bits	set	3947
   273   000000                     _SSP2CON1bits	set	3948
   274   000000                     _SSP2BUF	set	3951
   275   000000                     _RCSTA1bits	set	4011
   276   000000                     _SPBRG1	set	4015
   277   000000                     _ADCON2bits	set	4032
   278   000000                     _SSP1CON1bits	set	4038
   279   000000                     _SSP1BUF	set	4041
   280   000000                     _SSP1STATbits	set	4039
   281   000000                     _ADCON0bits	set	4034
   282   000000                     _PR2	set	4027
   283   000000                     _TMR2ON	set	32210
   284   000000                     _T1CONbits	set	4045
   285   000000                     _TMR1	set	4046
   286   000000                     _PEIE	set	32662
   287   000000                     _CCP1CONbits	set	4029
   288   000000                     _CCPR1L	set	4030
   289   00FEBB                     STR_29:
   290   00FEBB  25                 	db	37
   291   00FEBC  75                 	db	117	;'u'
   292   00FEBD  20                 	db	32
   293   00FEBE  20                 	db	32
   294   00FEBF  20                 	db	32
   295   00FEC0  20                 	db	32
   296   00FEC1  20                 	db	32
   297   00FEC2  20                 	db	32
   298   00FEC3  20                 	db	32
   299   00FEC4  20                 	db	32
   300   00FEC5  20                 	db	32
   301   00FEC6  20                 	db	32
   302   00FEC7  20                 	db	32
   303   00FEC8  20                 	db	32
   304   00FEC9  20                 	db	32
   305   00FECA  20                 	db	32
   306   00FECB  20                 	db	32
   307   00FECC  20                 	db	32
   308   00FECD  00                 	db	0
   309   00FECE                     STR_27:
   310   00FECE  50                 	db	80	;'P'
   311   00FECF  4F                 	db	79	;'O'
   312   00FED0  54                 	db	84	;'T'
   313   00FED1  31                 	db	49	;'1'
   314   00FED2  3A                 	db	58	;':'
   315   00FED3  25                 	db	37
   316   00FED4  2E                 	db	46
   317   00FED5  31                 	db	49	;'1'
   318   00FED6  66                 	db	102	;'f'
   319   00FED7  50                 	db	80	;'P'
   320   00FED8  4F                 	db	79	;'O'
   321   00FED9  54                 	db	84	;'T'
   322   00FEDA  32                 	db	50	;'2'
   323   00FEDB  3A                 	db	58	;':'
   324   00FEDC  25                 	db	37
   325   00FEDD  2E                 	db	46
   326   00FEDE  31                 	db	49	;'1'
   327   00FEDF  66                 	db	102	;'f'
   328   00FEE0  00                 	db	0
   329   00FEE1                     STR_32:
   330   00FEE1  53                 	db	83	;'S'
   331   00FEE2  6B                 	db	107	;'k'
   332   00FEE3  6F                 	db	111	;'o'
   333   00FEE4  72                 	db	114	;'r'
   334   00FEE5  65                 	db	101	;'e'
   335   00FEE6  3A                 	db	58	;':'
   336   00FEE7  20                 	db	32
   337   00FEE8  25                 	db	37
   338   00FEE9  75                 	db	117	;'u'
   339   00FEEA  20                 	db	32
   340   00FEEB  20                 	db	32
   341   00FEEC  20                 	db	32
   342   00FEED  20                 	db	32
   343   00FEEE  20                 	db	32
   344   00FEEF  20                 	db	32
   345   00FEF0  20                 	db	32
   346   00FEF1  20                 	db	32
   347   00FEF2  00                 	db	0
   348   00FEF3                     STR_30:
   349   00FEF3  25                 	db	37
   350   00FEF4  68                 	db	104	;'h'
   351   00FEF5  75                 	db	117	;'u'
   352   00FEF6  20                 	db	32
   353   00FEF7  20                 	db	32
   354   00FEF8  20                 	db	32
   355   00FEF9  20                 	db	32
   356   00FEFA  20                 	db	32
   357   00FEFB  20                 	db	32
   358   00FEFC  20                 	db	32
   359   00FEFD  20                 	db	32
   360   00FEFE  20                 	db	32
   361   00FEFF  20                 	db	32
   362   00FF00  20                 	db	32
   363   00FF01  20                 	db	32
   364   00FF02  20                 	db	32
   365   00FF03  00                 	db	0
   366   00FF04                     STR_33:
   367   00FF04  47                 	db	71	;'G'
   368   00FF05  41                 	db	65	;'A'
   369   00FF06  4D                 	db	77	;'M'
   370   00FF07  45                 	db	69	;'E'
   371   00FF08  20                 	db	32
   372   00FF09  4F                 	db	79	;'O'
   373   00FF0A  56                 	db	86	;'V'
   374   00FF0B  45                 	db	69	;'E'
   375   00FF0C  52                 	db	82	;'R'
   376   00FF0D  20                 	db	32
   377   00FF0E  20                 	db	32
   378   00FF0F  20                 	db	32
   379   00FF10  20                 	db	32
   380   00FF11  20                 	db	32
   381   00FF12  20                 	db	32
   382   00FF13  20                 	db	32
   383   00FF14  00                 	db	0
   384   00FF15                     STR_3:
   385   00FF15  42                 	db	66	;'B'
   386   00FF16  52                 	db	82	;'R'
   387   00FF17  3A                 	db	58	;':'
   388   00FF18  20                 	db	32
   389   00FF19  31                 	db	49	;'1'
   390   00FF1A  39                 	db	57	;'9'
   391   00FF1B  32                 	db	50	;'2'
   392   00FF1C  30                 	db	48	;'0'
   393   00FF1D  30                 	db	48	;'0'
   394   00FF1E  20                 	db	32
   395   00FF1F  20                 	db	32
   396   00FF20  20                 	db	32
   397   00FF21  20                 	db	32
   398   00FF22  20                 	db	32
   399   00FF23  20                 	db	32
   400   00FF24  20                 	db	32
   401   00FF25  00                 	db	0
   402   00FF26                     STR_12:
   403   00FF26  50                 	db	80	;'P'
   404   00FF27  72                 	db	114	;'r'
   405   00FF28  69                 	db	105	;'i'
   406   00FF29  70                 	db	112	;'p'
   407   00FF2A  72                 	db	114	;'r'
   408   00FF2B  61                 	db	97	;'a'
   409   00FF2C  76                 	db	118	;'v'
   410   00FF2D  69                 	db	105	;'i'
   411   00FF2E  74                 	db	116	;'t'
   412   00FF2F  20                 	db	32
   413   00FF30  20                 	db	32
   414   00FF31  20                 	db	32
   415   00FF32  20                 	db	32
   416   00FF33  20                 	db	32
   417   00FF34  20                 	db	32
   418   00FF35  20                 	db	32
   419   00FF36  00                 	db	0
   420   00FF37                     STR_1:
   421   00FF37  50                 	db	80	;'P'
   422   00FF38  6F                 	db	111	;'o'
   423   00FF39  7A                 	db	122	;'z'
   424   00FF3A  6F                 	db	111	;'o'
   425   00FF3B  72                 	db	114	;'r'
   426   00FF3C  21                 	db	33
   427   00FF3D  20                 	db	32
   428   00FF3E  48                 	db	72	;'H'
   429   00FF3F  61                 	db	97	;'a'
   430   00FF40  64                 	db	100	;'d'
   431   00FF41  21                 	db	33
   432   00FF42  21                 	db	33
   433   00FF43  21                 	db	33
   434   00FF44  20                 	db	32
   435   00FF45  20                 	db	32
   436   00FF46  20                 	db	32
   437   00FF47  00                 	db	0
   438   00FF48                     STR_10:
   439   00FF48  4C                 	db	76	;'L'
   440   00FF49  61                 	db	97	;'a'
   441   00FF4A  64                 	db	100	;'d'
   442   00FF4B  65                 	db	101	;'e'
   443   00FF4C  6E                 	db	110	;'n'
   444   00FF4D  69                 	db	105	;'i'
   445   00FF4E  20                 	db	32
   446   00FF4F  70                 	db	112	;'p'
   447   00FF50  6F                 	db	111	;'o'
   448   00FF51  74                 	db	116	;'t'
   449   00FF52  61                 	db	97	;'a'
   450   00FF53  6B                 	db	107	;'k'
   451   00FF54  75                 	db	117	;'u'
   452   00FF55  20                 	db	32
   453   00FF56  20                 	db	32
   454   00FF57  20                 	db	32
   455   00FF58  00                 	db	0
   456   00FF59                     STR_5:
   457   00FF59  5A                 	db	90	;'Z'
   458   00FF5A  6D                 	db	109	;'m'
   459   00FF5B  61                 	db	97	;'a'
   460   00FF5C  63                 	db	99	;'c'
   461   00FF5D  6B                 	db	107	;'k'
   462   00FF5E  6E                 	db	110	;'n'
   463   00FF5F  65                 	db	101	;'e'
   464   00FF60  74                 	db	116	;'t'
   465   00FF61  65                 	db	101	;'e'
   466   00FF62  20                 	db	32
   467   00FF63  42                 	db	66	;'B'
   468   00FF64  54                 	db	84	;'T'
   469   00FF65  4E                 	db	78	;'N'
   470   00FF66  32                 	db	50	;'2'
   471   00FF67  20                 	db	32
   472   00FF68  20                 	db	32
   473   00FF69  00                 	db	0
   474   00FF6A                     STR_8:
   475   00FF6A  52                 	db	82	;'R'
   476   00FF6B  42                 	db	66	;'B'
   477   00FF6C  30                 	db	48	;'0'
   478   00FF6D  2D                 	db	45
   479   00FF6E  41                 	db	65	;'A'
   480   00FF6F  32                 	db	50	;'2'
   481   00FF70  2C                 	db	44
   482   00FF71  20                 	db	32
   483   00FF72  42                 	db	66	;'B'
   484   00FF73  52                 	db	82	;'R'
   485   00FF74  3A                 	db	58	;':'
   486   00FF75  31                 	db	49	;'1'
   487   00FF76  39                 	db	57	;'9'
   488   00FF77  32                 	db	50	;'2'
   489   00FF78  30                 	db	48	;'0'
   490   00FF79  30                 	db	48	;'0'
   491   00FF7A  00                 	db	0
   492   00FF7B                     STR_7:
   493   00FF7B  56                 	db	86	;'V'
   494   00FF7C  6F                 	db	111	;'o'
   495   00FF7D  6C                 	db	108	;'l'
   496   00FF7E  74                 	db	116	;'t'
   497   00FF7F  79                 	db	121	;'y'
   498   00FF80  20                 	db	32
   499   00FF81  6E                 	db	110	;'n'
   500   00FF82  61                 	db	97	;'a'
   501   00FF83  20                 	db	32
   502   00FF84  50                 	db	80	;'P'
   503   00FF85  4F                 	db	79	;'O'
   504   00FF86  54                 	db	84	;'T'
   505   00FF87  65                 	db	101	;'e'
   506   00FF88  63                 	db	99	;'c'
   507   00FF89  68                 	db	104	;'h'
   508   00FF8A  3A                 	db	58	;':'
   509   00FF8B  00                 	db	0
   510   00FF8C                     STR_4:
   511   00FF8C  4B                 	db	75	;'K'
   512   00FF8D  6F                 	db	111	;'o'
   513   00FF8E  6E                 	db	110	;'n'
   514   00FF8F  65                 	db	101	;'e'
   515   00FF90  63                 	db	99	;'c'
   516   00FF91  20                 	db	32
   517   00FF92  2D                 	db	45
   518   00FF93  20                 	db	32
   519   00FF94  6E                 	db	110	;'n'
   520   00FF95  65                 	db	101	;'e'
   521   00FF96  77                 	db	119	;'w'
   522   00FF97  20                 	db	32
   523   00FF98  6C                 	db	108	;'l'
   524   00FF99  69                 	db	105	;'i'
   525   00FF9A  6E                 	db	110	;'n'
   526   00FF9B  65                 	db	101	;'e'
   527   00FF9C  00                 	db	0
   528   00FF9D                     STR_9:
   529   00FF9D  31                 	db	49	;'1'
   530   00FF9E  3A                 	db	58	;':'
   531   00FF9F  74                 	db	116	;'t'
   532   00FFA0  72                 	db	114	;'r'
   533   00FFA1  2C                 	db	44
   534   00FFA2  32                 	db	50	;'2'
   535   00FFA3  3A                 	db	58	;':'
   536   00FFA4  73                 	db	115	;'s'
   537   00FFA5  69                 	db	105	;'i'
   538   00FFA6  6E                 	db	110	;'n'
   539   00FFA7  2C                 	db	44
   540   00FFA8  33                 	db	51	;'3'
   541   00FFA9  3A                 	db	58	;':'
   542   00FFAA  70                 	db	112	;'p'
   543   00FFAB  69                 	db	105	;'i'
   544   00FFAC  6C                 	db	108	;'l'
   545   00FFAD  00                 	db	0
   546   00FFAE                     STR_13:
   547   00FFAE  20                 	db	32
   548   00FFAF  20                 	db	32
   549   00FFB0  20                 	db	32
   550   00FFB1  20                 	db	32
   551   00FFB2  20                 	db	32
   552   00FFB3  20                 	db	32
   553   00FFB4  20                 	db	32
   554   00FFB5  20                 	db	32
   555   00FFB6  20                 	db	32
   556   00FFB7  20                 	db	32
   557   00FFB8  20                 	db	32
   558   00FFB9  50                 	db	80	;'P'
   559   00FFBA  6F                 	db	111	;'o'
   560   00FFBB  7A                 	db	122	;'z'
   561   00FFBC  6F                 	db	111	;'o'
   562   00FFBD  72                 	db	114	;'r'
   563   00FFBE  00                 	db	0
   564   00FFBF                     STR_40:
   565   00FFBF  28                 	db	40
   566   00FFC0  6E                 	db	110	;'n'
   567   00FFC1  75                 	db	117	;'u'
   568   00FFC2  6C                 	db	108	;'l'
   569   00FFC3  6C                 	db	108	;'l'
   570   00FFC4  29                 	db	41
   571   00FFC5  00                 	db	0
   572   00FFC6                     STR_23:
   573   00FFC6  4D                 	db	77	;'M'
   574   00FFC7  55                 	db	85	;'U'
   575   00FFC8  53                 	db	83	;'S'
   576   00FFC9  49                 	db	73	;'I'
   577   00FFCA  43                 	db	67	;'C'
   578   00FFCB  00                 	db	0
   579   00FFCC                     STR_25:
   580   00FFCC  3E                 	db	62	;'>'
   581   00FFCD  25                 	db	37
   582   00FFCE  2D                 	db	45
   583   00FFCF  2A                 	db	42
   584   00FFD0  73                 	db	115	;'s'
   585   00FFD1  00                 	db	0
   586   00FFD2                     STR_28:
   587   00FFD2  25                 	db	37
   588   00FFD3  73                 	db	115	;'s'
   589   00FFD4  20                 	db	32
   590   00FFD5  0A                 	db	10
   591   00FFD6  00                 	db	0
   592   00FFD7                     STR_22:
   593   00FFD7  47                 	db	71	;'G'
   594   00FFD8  41                 	db	65	;'A'
   595   00FFD9  4D                 	db	77	;'M'
   596   00FFDA  45                 	db	69	;'E'
   597   00FFDB  00                 	db	0
   598   00FFDC                     STR_17:
   599   00FFDC  47                 	db	71	;'G'
   600   00FFDD  50                 	db	80	;'P'
   601   00FFDE  49                 	db	73	;'I'
   602   00FFDF  4F                 	db	79	;'O'
   603   00FFE0  00                 	db	0
   604   00FFE1                     STR_18:
   605   00FFE1  55                 	db	85	;'U'
   606   00FFE2  41                 	db	65	;'A'
   607   00FFE3  52                 	db	82	;'R'
   608   00FFE4  54                 	db	84	;'T'
   609   00FFE5  00                 	db	0
   610   00FFE6                     STR_16:
   611   00FFE6  25                 	db	37
   612   00FFE7  64                 	db	100	;'d'
   613   00FFE8  20                 	db	32
   614   00FFE9  0D                 	db	13
   615   00FFEA  00                 	db	0
   616   00FFEB                     STR_34:
   617   00FFEB  69                 	db	105	;'i'
   618   00FFEC  6E                 	db	110	;'n'
   619   00FFED  66                 	db	102	;'f'
   620   00FFEE  00                 	db	0
   621   00FFEF                     STR_37:
   622   00FFEF  6E                 	db	110	;'n'
   623   00FFF0  61                 	db	97	;'a'
   624   00FFF1  6E                 	db	110	;'n'
   625   00FFF2  00                 	db	0
   626   00FFF3                     STR_21:
   627   00FFF3  44                 	db	68	;'D'
   628   00FFF4  41                 	db	65	;'A'
   629   00FFF5  43                 	db	67	;'C'
   630   00FFF6  00                 	db	0
   631   00FFF7                     STR_20:
   632   00FFF7  41                 	db	65	;'A'
   633   00FFF8  44                 	db	68	;'D'
   634   00FFF9  43                 	db	67	;'C'
   635   00FFFA  00                 	db	0
   636   00FFFB                     STR_19:
   637   00FFFB  50                 	db	80	;'P'
   638   00FFFC  57                 	db	87	;'W'
   639   00FFFD  4D                 	db	77	;'M'
   640   00FFFE  00                 	db	0
   641   00FFFF  00                 	db	0	; dummy byte at the end
   642   000000                     
   643                           ; #config settings
   644                           
   645                           	psect	cinit
   646   004E54                     __pcinit:
   647                           	callstack 0
   648   004E54                     start_initialization:
   649                           	callstack 0
   650   004E54                     __initialization:
   651                           	callstack 0
   652                           
   653                           ; Initialize objects allocated to BANK1 (40 bytes)
   654                           ; load TBLPTR registers with __pidataBANK1
   655   004E54  0E98               	movlw	low __pidataBANK1
   656   004E56  6EF6               	movwf	tblptrl,c
   657   004E58  0E51               	movlw	high __pidataBANK1
   658   004E5A  6EF7               	movwf	tblptrh,c
   659   004E5C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   660   004E5E  6EF8               	movwf	tblptru,c
   661   004E60  EE01  F0CE         	lfsr	0,__pdataBANK1
   662   004E64  EE10 F028          	lfsr	1,40
   663   004E68                     copy_data0:
   664   004E68  0009               	tblrd		*+
   665   004E6A  CFF5 FFEE          	movff	tablat,postinc0
   666   004E6E  50E5               	movf	postdec1,w,c
   667   004E70  50E1               	movf	fsr1l,w,c
   668   004E72  E1FA               	bnz	copy_data0
   669                           
   670                           ; Clear objects allocated to BANK2 (42 bytes)
   671   004E74  EE02  F000         	lfsr	0,__pbssBANK2
   672   004E78  0E2A               	movlw	42
   673   004E7A                     clear_0:
   674   004E7A  6AEE               	clrf	postinc0,c
   675   004E7C  06E8               	decf	wreg,f,c
   676   004E7E  E1FD               	bnz	clear_0
   677                           
   678                           ; Clear objects allocated to BANK1 (155 bytes)
   679   004E80  EE01  F000         	lfsr	0,__pbssBANK1
   680   004E84  0E9B               	movlw	155
   681   004E86                     clear_1:
   682   004E86  6AEE               	clrf	postinc0,c
   683   004E88  06E8               	decf	wreg,f,c
   684   004E8A  E1FD               	bnz	clear_1
   685                           
   686                           ; Clear objects allocated to BANK0 (1 bytes)
   687   004E8C  0100               	movlb	0
   688   004E8E  6BFE               	clrf	__pbssBANK0& (0+255),b
   689                           
   690                           ; Clear objects allocated to COMRAM (5 bytes)
   691   004E90  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   692   004E92  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   693   004E94  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   694   004E96  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   695   004E98  6A55               	clrf	__pbssCOMRAM& (0+255),c
   696   004E9A                     end_of_initialization:
   697                           	callstack 0
   698   004E9A                     __end_of__initialization:
   699                           	callstack 0
   700   004E9A  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   701   004E9C  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   702   004E9E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   703   004EA0  6EF8               	movwf	tblptru,c
   704   004EA2  0100               	movlb	0
   705   004EA4  EFF7  F014         	goto	_main	;jump to C main() function
   706                           
   707                           	psect	bssCOMRAM
   708   000055                     __pbssCOMRAM:
   709                           	callstack 0
   710   000055                     _width:
   711                           	callstack 0
   712   000055                     	ds	2
   713   000057                     _prec:
   714                           	callstack 0
   715   000057                     	ds	2
   716   000059                     _flags:
   717                           	callstack 0
   718   000059                     	ds	1
   719                           
   720                           	psect	bssBANK0
   721   0000FE                     __pbssBANK0:
   722                           	callstack 0
   723   0000FE                     _keepStateGPIO:
   724                           	callstack 0
   725   0000FE                     	ds	1
   726                           
   727                           	psect	bssBANK1
   728   000100                     __pbssBANK1:
   729                           	callstack 0
   730   000100                     	ds	17
   731   000111                     fabsf@F465:
   732                           	callstack 0
   733   000111                     	ds	4
   734   000115                     ___rem_pio2f@F526:
   735                           	callstack 0
   736   000115                     	ds	4
   737   000119                     floorf@F521:
   738                           	callstack 0
   739   000119                     	ds	4
   740   00011D                     ___fpclassifyf@F465:
   741                           	callstack 0
   742   00011D                     	ds	4
   743   000121                     ISR@i:
   744                           	callstack 0
   745   000121                     	ds	2
   746   000123                     _GAMEtime:
   747                           	callstack 0
   748   000123                     	ds	1
   749   000124                     _GAMEIE:
   750                           	callstack 0
   751   000124                     	ds	1
   752   000125                     _UARTIE:
   753                           	callstack 0
   754   000125                     	ds	1
   755   000126                     _GPIOIE:
   756                           	callstack 0
   757   000126                     	ds	1
   758   000127                     _dbuf:
   759                           	callstack 0
   760   000127                     	ds	80
   761   000177                     _gmail:
   762                           	callstack 0
   763   000177                     	ds	32
   764   000197                     _seed:
   765                           	callstack 0
   766   000197                     	ds	4
   767                           
   768                           	psect	dataBANK1
   769   0001CE                     __pdataBANK1:
   770                           	callstack 0
   771   0001CE                     moveDisplay@F6965:
   772                           	callstack 0
   773   0001CE                     	ds	16
   774   0001DE                     runGPIO@F6993:
   775                           	callstack 0
   776   0001DE                     	ds	12
   777   0001EA                     runGPIO@F6975:
   778                           	callstack 0
   779   0001EA                     	ds	12
   780                           
   781                           	psect	bssBANK2
   782   000200                     __pbssBANK2:
   783                           	callstack 0
   784   000200                     	ds	25
   785   000219                     	ds	17
   786                           
   787                           	psect	cstackBANK1
   788   00019B                     __pcstackBANK1:
   789                           	callstack 0
   790   00019B                     moveDisplay@menuItem1:
   791                           	callstack 0
   792   00019B                     runADC@text:
   793                           	callstack 0
   794   00019B                     runGAME@text:
   795                           	callstack 0
   796                           
   797                           ; 17 bytes @ 0x0
   798   00019B                     	ds	17
   799   0001AC                     runADC@voltage1:
   800                           	callstack 0
   801   0001AC                     moveDisplay@menuItem2:
   802                           	callstack 0
   803   0001AC                     runGAME@approxText:
   804                           	callstack 0
   805                           
   806                           ; 25 bytes @ 0x11
   807   0001AC                     	ds	4
   808   0001B0                     runADC@voltage2:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x15
   812   0001B0                     	ds	4
   813   0001B4                     runADC@pot1:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x19
   817   0001B4                     	ds	2
   818   0001B6                     runADC@pot2:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x1B
   822   0001B6                     	ds	2
   823   0001B8                     runADC@keepState:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x1D
   827   0001B8                     	ds	5
   828   0001BD                     moveDisplay@menuItems:
   829                           	callstack 0
   830                           
   831                           ; 16 bytes @ 0x22
   832   0001BD                     	ds	8
   833   0001C5                     runGAME@GAMEpart:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x2A
   837   0001C5                     	ds	1
   838   0001C6                     runGAME@keepStateGAME:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x2B
   842   0001C6                     	ds	1
   843   0001C7                     runGAME@GAMEround:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x2C
   847   0001C7                     	ds	1
   848   0001C8                     runGAME@GAMEdivider:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x2D
   852   0001C8                     	ds	1
   853   0001C9                     runGAME@pot1:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x2E
   857   0001C9                     	ds	2
   858   0001CB                     runGAME@randomNumber:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x30
   862   0001CB                     	ds	2
   863   0001CD                     moveDisplay@menuI:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x32
   867   0001CD                     	ds	1
   868                           
   869                           	psect	cstackBANK0
   870   000060                     __pcstackBANK0:
   871                           	callstack 0
   872   000060                     ___fladd@signs:
   873                           	callstack 0
   874   000060                     floorf@m:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x0
   878   000060                     	ds	1
   879   000061                     ___fladd@aexp:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x1
   883   000061                     	ds	1
   884   000062                     ___fladd@bexp:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0x2
   888   000062                     	ds	1
   889   000063                     ___fladd@grs:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x3
   893   000063                     	ds	1
   894   000064                     ?___flsub:
   895                           	callstack 0
   896   000064                     ?___sindf:
   897                           	callstack 0
   898   000064                     ?___cosdf:
   899                           	callstack 0
   900   000064                     ?___fltol:
   901                           	callstack 0
   902   000064                     floorf@e:
   903                           	callstack 0
   904   000064                     ___fltol@f1:
   905                           	callstack 0
   906   000064                     ___flsub@b:
   907                           	callstack 0
   908   000064                     ___cosdf@x:
   909                           	callstack 0
   910   000064                     ___sindf@x:
   911                           	callstack 0
   912                           
   913                           ; 4 bytes @ 0x4
   914   000064                     	ds	2
   915   000066                     floorf@u:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x6
   919   000066                     	ds	2
   920   000068                     ??___fltol:
   921   000068                     ___flsub@a:
   922                           	callstack 0
   923   000068                     ___cosdf@r:
   924                           	callstack 0
   925   000068                     ___sindf@r:
   926                           	callstack 0
   927                           
   928                           ; 4 bytes @ 0x8
   929   000068                     	ds	4
   930   00006C                     ___sindf@w:
   931                           	callstack 0
   932   00006C                     ___cosdf$4528:
   933                           	callstack 0
   934                           
   935                           ; 4 bytes @ 0xC
   936   00006C                     	ds	4
   937   000070                     ___cosdf$4529:
   938                           	callstack 0
   939   000070                     ___sindf$4532:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0x10
   943   000070                     	ds	4
   944   000074                     ___cosdf$4530:
   945                           	callstack 0
   946   000074                     ___sindf$4533:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x14
   950   000074                     	ds	4
   951   000078                     ___cosdf@w:
   952                           	callstack 0
   953   000078                     ___sindf$4534:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0x18
   957   000078                     	ds	4
   958   00007C                     ___cosdf@z:
   959                           	callstack 0
   960   00007C                     ___sindf@s:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x1C
   964   00007C                     	ds	4
   965   000080                     ?___flneg:
   966                           	callstack 0
   967   000080                     ___flneg@f1:
   968                           	callstack 0
   969   000080                     ___sindf@z:
   970                           	callstack 0
   971                           
   972                           ; 4 bytes @ 0x20
   973   000080                     	ds	4
   974   000084                     ?___rem_pio2f:
   975                           	callstack 0
   976   000084                     efgtoa@fp:
   977                           	callstack 0
   978   000084                     ___rem_pio2f@x:
   979                           	callstack 0
   980                           
   981                           ; 4 bytes @ 0x24
   982   000084                     	ds	2
   983   000086                     efgtoa@f:
   984                           	callstack 0
   985                           
   986                           ; 4 bytes @ 0x26
   987   000086                     	ds	2
   988   000088                     ___rem_pio2f@y:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x28
   992   000088                     	ds	1
   993   000089                     ??___rem_pio2f:
   994                           
   995                           ; 1 bytes @ 0x29
   996   000089                     	ds	1
   997   00008A                     efgtoa@c:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x2A
  1001   00008A                     	ds	1
  1002   00008B                     ??_efgtoa:
  1003   00008B                     ___rem_pio2f@ty:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x2B
  1007   00008B                     	ds	2
  1008   00008D                     efgtoa@ne:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x2D
  1012   00008D                     	ds	2
  1013   00008F                     efgtoa@p:
  1014                           	callstack 0
  1015   00008F                     ___rem_pio2f$4531:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x2F
  1019   00008F                     	ds	2
  1020   000091                     efgtoa@t:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x31
  1024   000091                     	ds	2
  1025   000093                     ___rem_pio2f@sign:
  1026                           	callstack 0
  1027   000093                     _efgtoa$4068:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x33
  1031   000093                     	ds	1
  1032   000094                     ___rem_pio2f@ux:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x34
  1036   000094                     	ds	1
  1037   000095                     efgtoa@pp:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x35
  1041   000095                     	ds	1
  1042   000096                     efgtoa@mode:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x36
  1046   000096                     	ds	1
  1047   000097                     efgtoa@nmode:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x37
  1051   000097                     	ds	1
  1052   000098                     efgtoa@d:
  1053                           	callstack 0
  1054   000098                     ___rem_pio2f@fn:
  1055                           	callstack 0
  1056                           
  1057                           ; 4 bytes @ 0x38
  1058   000098                     	ds	2
  1059   00009A                     efgtoa@m:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x3A
  1063   00009A                     	ds	2
  1064   00009C                     efgtoa@e:
  1065                           	callstack 0
  1066   00009C                     ___rem_pio2f@t:
  1067                           	callstack 0
  1068                           
  1069                           ; 4 bytes @ 0x3C
  1070   00009C                     	ds	2
  1071   00009E                     efgtoa@w:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x3E
  1075   00009E                     	ds	2
  1076   0000A0                     efgtoa@ou:
  1077                           	callstack 0
  1078   0000A0                     ___rem_pio2f@n:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x40
  1082   0000A0                     	ds	4
  1083   0000A4                     ?_sinf:
  1084                           	callstack 0
  1085   0000A4                     efgtoa@i:
  1086                           	callstack 0
  1087   0000A4                     sinf@x:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0x44
  1091   0000A4                     	ds	2
  1092   0000A6                     efgtoa@h:
  1093                           	callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x46
  1096   0000A6                     	ds	2
  1097   0000A8                     _sinf$4243:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x48
  1101   0000A8                     	ds	2
  1102   0000AA                     efgtoa@l:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x4A
  1106   0000AA                     	ds	2
  1107   0000AC                     _sinf$4244:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x4C
  1111   0000AC                     	ds	2
  1112   0000AE                     efgtoa@sign:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x4E
  1116   0000AE                     	ds	1
  1117   0000AF                     efgtoa@g:
  1118                           	callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x4F
  1121   0000AF                     	ds	1
  1122   0000B0                     sinf@n:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x50
  1126   0000B0                     	ds	1
  1127   0000B1                     sinf@sign:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x51
  1131   0000B1                     	ds	1
  1132   0000B2                     _sinf$4527:
  1133                           	callstack 0
  1134                           
  1135                           ; 4 bytes @ 0x52
  1136   0000B2                     	ds	1
  1137   0000B3                     efgtoa@n:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x53
  1141   0000B3                     	ds	2
  1142   0000B5                     efgtoa@u:
  1143                           	callstack 0
  1144                           
  1145                           ; 4 bytes @ 0x55
  1146   0000B5                     	ds	1
  1147   0000B6                     sinf@y:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x56
  1151   0000B6                     	ds	3
  1152   0000B9                     vfpfcnvrt@fp:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x59
  1156   0000B9                     	ds	1
  1157   0000BA                     sinf@ux:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x5A
  1161   0000BA                     	ds	1
  1162   0000BB                     vfpfcnvrt@fmt:
  1163                           	callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x5B
  1166   0000BB                     	ds	1
  1167   0000BC                     vfpfcnvrt@ap:
  1168                           	callstack 0
  1169                           
  1170                           ; 1 bytes @ 0x5C
  1171   0000BC                     	ds	1
  1172   0000BD                     ??_vfpfcnvrt:
  1173                           
  1174                           ; 1 bytes @ 0x5D
  1175   0000BD                     	ds	2
  1176   0000BF                     vfpfcnvrt@done:
  1177                           	callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x5F
  1180   0000BF                     	ds	1
  1181   0000C0                     vfpfcnvrt@convarg:
  1182                           	callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x60
  1185   0000C0                     	ds	4
  1186   0000C4                     vfpfcnvrt@c:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x64
  1190   0000C4                     	ds	1
  1191   0000C5                     vfpfcnvrt@cp:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x65
  1195   0000C5                     	ds	2
  1196   0000C7                     ?_vfprintf:
  1197                           	callstack 0
  1198   0000C7                     vfprintf@fp:
  1199                           	callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x67
  1202   0000C7                     	ds	2
  1203   0000C9                     vfprintf@fmt:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x69
  1207   0000C9                     	ds	2
  1208   0000CB                     vfprintf@ap:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x6B
  1212   0000CB                     	ds	1
  1213   0000CC                     vfprintf@cfmt:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x6C
  1217   0000CC                     	ds	2
  1218   0000CE                     ?_printf:
  1219                           	callstack 0
  1220   0000CE                     ?_sprintf:
  1221                           	callstack 0
  1222   0000CE                     sprintf@s:
  1223                           	callstack 0
  1224   0000CE                     printf@fmt:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x6E
  1228   0000CE                     	ds	2
  1229   0000D0                     sprintf@fmt:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x70
  1233   0000D0                     	ds	2
  1234   0000D2                     ??_runUART:
  1235   0000D2                     ??_runDAC:
  1236                           
  1237                           ; 1 bytes @ 0x72
  1238   0000D2                     	ds	1
  1239   0000D3                     _runDAC$4524:
  1240                           	callstack 0
  1241                           
  1242                           ; 4 bytes @ 0x73
  1243   0000D3                     	ds	1
  1244   0000D4                     runUART@reversed:
  1245                           	callstack 0
  1246                           
  1247                           ; 31 bytes @ 0x74
  1248   0000D4                     	ds	3
  1249   0000D7                     _runDAC$4525:
  1250                           	callstack 0
  1251                           
  1252                           ; 4 bytes @ 0x77
  1253   0000D7                     	ds	3
  1254   0000DA                     sprintf@ap:
  1255                           	callstack 0
  1256                           
  1257                           ; 1 bytes @ 0x7A
  1258   0000DA                     	ds	1
  1259   0000DB                     runDAC@keepState:
  1260                           	callstack 0
  1261   0000DB                     sprintf@f:
  1262                           	callstack 0
  1263                           
  1264                           ; 12 bytes @ 0x7B
  1265   0000DB                     	ds	1
  1266   0000DC                     runDAC@selectModeDAC:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x7C
  1270   0000DC                     	ds	1
  1271   0000DD                     runDAC@DACindex:
  1272                           	callstack 0
  1273                           
  1274                           ; 1 bytes @ 0x7D
  1275   0000DD                     	ds	10
  1276   0000E7                     ??_runADC:
  1277   0000E7                     ??_runGAME:
  1278   0000E7                     moveDisplay@where:
  1279                           	callstack 0
  1280                           
  1281                           ; 1 bytes @ 0x87
  1282   0000E7                     	ds	1
  1283   0000E8                     ??_moveDisplay:
  1284                           
  1285                           ; 1 bytes @ 0x88
  1286   0000E8                     	ds	11
  1287   0000F3                     runUART@keepState:
  1288                           	callstack 0
  1289                           
  1290                           ; 1 bytes @ 0x93
  1291   0000F3                     	ds	1
  1292   0000F4                     runUART@len:
  1293                           	callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x94
  1296   0000F4                     	ds	2
  1297   0000F6                     runUART@i:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x96
  1301   0000F6                     	ds	2
  1302   0000F8                     runUART@p:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0x98
  1306   0000F8                     	ds	2
  1307   0000FA                     ??_main:
  1308                           
  1309                           ; 1 bytes @ 0x9A
  1310   0000FA                     	ds	2
  1311   0000FC                     main@setUpAgain:
  1312                           	callstack 0
  1313                           
  1314                           ; 1 bytes @ 0x9C
  1315   0000FC                     	ds	1
  1316   0000FD                     main@menuI:
  1317                           	callstack 0
  1318                           
  1319                           ; 1 bytes @ 0x9D
  1320   0000FD                     	ds	1
  1321                           
  1322                           	psect	cstackCOMRAM
  1323   000001                     __pcstackCOMRAM:
  1324                           	callstack 0
  1325   000001                     ??_ISR:
  1326                           
  1327                           ; 1 bytes @ 0x0
  1328   000001                     	ds	4
  1329   000005                     ISR@temp:
  1330                           	callstack 0
  1331                           
  1332                           ; 1 bytes @ 0x4
  1333   000005                     	ds	1
  1334   000006                     ?_strlen:
  1335                           	callstack 0
  1336   000006                     ?___fpclassifyf:
  1337                           	callstack 0
  1338   000006                     ?___wmul:
  1339                           	callstack 0
  1340   000006                     ?___awmod:
  1341                           	callstack 0
  1342   000006                     ?___lwdiv:
  1343                           	callstack 0
  1344   000006                     ?___lwmod:
  1345                           	callstack 0
  1346   000006                     ?_labs:
  1347                           	callstack 0
  1348   000006                     ?_fabsf:
  1349                           	callstack 0
  1350   000006                     ?___lmul:
  1351                           	callstack 0
  1352   000006                     ?___xxtofl:
  1353                           	callstack 0
  1354   000006                     LCD_Send@data:
  1355                           	callstack 0
  1356   000006                     SPI_write@MSB:
  1357                           	callstack 0
  1358   000006                     putch@data:
  1359                           	callstack 0
  1360   000006                     LED1_Control@state:
  1361                           	callstack 0
  1362   000006                     LED2_Control@state:
  1363                           	callstack 0
  1364   000006                     LED3_Control@state:
  1365                           	callstack 0
  1366   000006                     LED4_Control@state:
  1367                           	callstack 0
  1368   000006                     LED5_Control@state:
  1369                           	callstack 0
  1370   000006                     LED6_Control@state:
  1371                           	callstack 0
  1372   000006                     ___lbdiv@divisor:
  1373                           	callstack 0
  1374   000006                     ___wmul@multiplier:
  1375                           	callstack 0
  1376   000006                     ___awmod@dividend:
  1377                           	callstack 0
  1378   000006                     ___lwdiv@dividend:
  1379                           	callstack 0
  1380   000006                     ___lwmod@dividend:
  1381                           	callstack 0
  1382   000006                     memcpy@d1:
  1383                           	callstack 0
  1384   000006                     strcpy@dest:
  1385                           	callstack 0
  1386   000006                     strlen@s:
  1387                           	callstack 0
  1388   000006                     ___lmul@multiplier:
  1389                           	callstack 0
  1390   000006                     ___fleq@ff1:
  1391                           	callstack 0
  1392   000006                     ___xxtofl@val:
  1393                           	callstack 0
  1394   000006                     ___fpclassifyf@x:
  1395                           	callstack 0
  1396   000006                     labs@a:
  1397                           	callstack 0
  1398   000006                     fabsf@x:
  1399                           	callstack 0
  1400                           
  1401                           ; 4 bytes @ 0x5
  1402   000006                     	ds	1
  1403   000007                     ??_LCD_Init:
  1404   000007                     ??_runGPIO:
  1405   000007                     SPI_write@LSB:
  1406                           	callstack 0
  1407   000007                     ___lbdiv@dividend:
  1408                           	callstack 0
  1409   000007                     LCD_ShowString@textData:
  1410                           	callstack 0
  1411   000007                     fputc@c:
  1412                           	callstack 0
  1413                           
  1414                           ; 2 bytes @ 0x6
  1415   000007                     	ds	1
  1416   000008                     SPI_write@data:
  1417                           	callstack 0
  1418   000008                     ___lbdiv@counter:
  1419                           	callstack 0
  1420   000008                     ___wmul@multiplicand:
  1421                           	callstack 0
  1422   000008                     ___awmod@divisor:
  1423                           	callstack 0
  1424   000008                     ___lwdiv@divisor:
  1425                           	callstack 0
  1426   000008                     ___lwmod@divisor:
  1427                           	callstack 0
  1428   000008                     memcpy@s1:
  1429                           	callstack 0
  1430   000008                     strcpy@src:
  1431                           	callstack 0
  1432   000008                     strlen@a:
  1433                           	callstack 0
  1434                           
  1435                           ; 2 bytes @ 0x7
  1436   000008                     	ds	1
  1437   000009                     ??_LCD_ShowString:
  1438   000009                     ___lbdiv@quotient:
  1439                           	callstack 0
  1440   000009                     fputc@fp:
  1441                           	callstack 0
  1442   000009                     runGPIO@states:
  1443                           	callstack 0
  1444                           
  1445                           ; 12 bytes @ 0x8
  1446   000009                     	ds	1
  1447   00000A                     ??___fpclassifyf:
  1448   00000A                     ??_labs:
  1449   00000A                     ??___xxtofl:
  1450   00000A                     ___awmod@counter:
  1451                           	callstack 0
  1452   00000A                     ___lwdiv@counter:
  1453                           	callstack 0
  1454   00000A                     ___lwmod@counter:
  1455                           	callstack 0
  1456   00000A                     ___wmul@product:
  1457                           	callstack 0
  1458   00000A                     memcpy@n:
  1459                           	callstack 0
  1460   00000A                     strcpy@d:
  1461                           	callstack 0
  1462   00000A                     ___lmul@multiplicand:
  1463                           	callstack 0
  1464   00000A                     ___fleq@ff2:
  1465                           	callstack 0
  1466   00000A                     fabsf@u:
  1467                           	callstack 0
  1468                           
  1469                           ; 4 bytes @ 0x9
  1470   00000A                     	ds	1
  1471   00000B                     ??_fputc:
  1472   00000B                     LCD_ShowString@lineNum:
  1473                           	callstack 0
  1474   00000B                     ___awmod@sign:
  1475                           	callstack 0
  1476   00000B                     ___lwdiv@quotient:
  1477                           	callstack 0
  1478                           
  1479                           ; 2 bytes @ 0xA
  1480   00000B                     	ds	1
  1481   00000C                     ?_abs:
  1482                           	callstack 0
  1483   00000C                     ?_read_prec_or_width:
  1484                           	callstack 0
  1485   00000C                     LCD_ShowString@i:
  1486                           	callstack 0
  1487   00000C                     read_prec_or_width@fmt:
  1488                           	callstack 0
  1489   00000C                     memcpy@tmp:
  1490                           	callstack 0
  1491   00000C                     abs@a:
  1492                           	callstack 0
  1493                           
  1494                           ; 2 bytes @ 0xB
  1495   00000C                     	ds	1
  1496   00000D                     read_prec_or_width@ap:
  1497                           	callstack 0
  1498   00000D                     memcpy@d:
  1499                           	callstack 0
  1500                           
  1501                           ; 2 bytes @ 0xC
  1502   00000D                     	ds	1
  1503   00000E                     ??_abs:
  1504   00000E                     ??___fleq:
  1505   00000E                     ___xxtofl@sign:
  1506                           	callstack 0
  1507   00000E                     read_prec_or_width@c:
  1508                           	callstack 0
  1509   00000E                     ___fpclassifyf@e:
  1510                           	callstack 0
  1511   00000E                     ___lmul@product:
  1512                           	callstack 0
  1513                           
  1514                           ; 4 bytes @ 0xD
  1515   00000E                     	ds	1
  1516   00000F                     ___xxtofl@exp:
  1517                           	callstack 0
  1518   00000F                     read_prec_or_width@n:
  1519                           	callstack 0
  1520   00000F                     memcpy@s:
  1521                           	callstack 0
  1522                           
  1523                           ; 2 bytes @ 0xE
  1524   00000F                     	ds	1
  1525   000010                     stoa@fp:
  1526                           	callstack 0
  1527   000010                     fputs@s:
  1528                           	callstack 0
  1529   000010                     ___xxtofl@arg:
  1530                           	callstack 0
  1531   000010                     ___fpclassifyf@u:
  1532                           	callstack 0
  1533                           
  1534                           ; 4 bytes @ 0xF
  1535   000010                     	ds	2
  1536   000012                     ?_rand:
  1537                           	callstack 0
  1538   000012                     stoa@s:
  1539                           	callstack 0
  1540   000012                     fputs@fp:
  1541                           	callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x11
  1544   000012                     	ds	2
  1545   000014                     ??_rand:
  1546   000014                     ??_stoa:
  1547   000014                     ?___flmul:
  1548                           	callstack 0
  1549   000014                     fputs@c:
  1550                           	callstack 0
  1551   000014                     ___flmul@b:
  1552                           	callstack 0
  1553                           
  1554                           ; 4 bytes @ 0x13
  1555   000014                     	ds	1
  1556   000015                     fputs@i:
  1557                           	callstack 0
  1558   000015                     runGPIO@LEDControl:
  1559                           	callstack 0
  1560                           
  1561                           ; 12 bytes @ 0x14
  1562   000015                     	ds	1
  1563   000016                     stoa@p:
  1564                           	callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x15
  1567   000016                     	ds	1
  1568   000017                     pad@fp:
  1569                           	callstack 0
  1570                           
  1571                           ; 2 bytes @ 0x16
  1572   000017                     	ds	1
  1573   000018                     ?___awdiv:
  1574                           	callstack 0
  1575   000018                     ___awdiv@dividend:
  1576                           	callstack 0
  1577   000018                     stoa@w:
  1578                           	callstack 0
  1579   000018                     ___flmul@a:
  1580                           	callstack 0
  1581                           
  1582                           ; 4 bytes @ 0x17
  1583   000018                     	ds	1
  1584   000019                     pad@buf:
  1585                           	callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x18
  1588   000019                     	ds	1
  1589   00001A                     ___awdiv@divisor:
  1590                           	callstack 0
  1591   00001A                     stoa@cp:
  1592                           	callstack 0
  1593                           
  1594                           ; 2 bytes @ 0x19
  1595   00001A                     	ds	1
  1596   00001B                     pad@p:
  1597                           	callstack 0
  1598                           
  1599                           ; 2 bytes @ 0x1A
  1600   00001B                     	ds	1
  1601   00001C                     ??___flmul:
  1602   00001C                     ___awdiv@counter:
  1603                           	callstack 0
  1604   00001C                     stoa@l:
  1605                           	callstack 0
  1606                           
  1607                           ; 2 bytes @ 0x1B
  1608   00001C                     	ds	1
  1609   00001D                     ??_pad:
  1610   00001D                     ___awdiv@sign:
  1611                           	callstack 0
  1612                           
  1613                           ; 1 bytes @ 0x1C
  1614   00001D                     	ds	1
  1615   00001E                     ___awdiv@quotient:
  1616                           	callstack 0
  1617   00001E                     pad@i:
  1618                           	callstack 0
  1619                           
  1620                           ; 2 bytes @ 0x1D
  1621   00001E                     	ds	2
  1622   000020                     ??_runPWM:
  1623   000020                     ___flmul@sign:
  1624                           	callstack 0
  1625   000020                     dtoa@fp:
  1626                           	callstack 0
  1627   000020                     utoa@fp:
  1628                           	callstack 0
  1629                           
  1630                           ; 2 bytes @ 0x1F
  1631   000020                     	ds	1
  1632   000021                     ___flmul@aexp:
  1633                           	callstack 0
  1634   000021                     runGPIO@numberOfStates:
  1635                           	callstack 0
  1636                           
  1637                           ; 2 bytes @ 0x20
  1638   000021                     	ds	1
  1639   000022                     runPWM@keepState:
  1640                           	callstack 0
  1641   000022                     dtoa@d:
  1642                           	callstack 0
  1643   000022                     utoa@d:
  1644                           	callstack 0
  1645   000022                     ___flmul@grs:
  1646                           	callstack 0
  1647                           
  1648                           ; 4 bytes @ 0x21
  1649   000022                     	ds	1
  1650   000023                     runGPIO@GPIOi:
  1651                           	callstack 0
  1652   000023                     runPWM@multiplier:
  1653                           	callstack 0
  1654                           
  1655                           ; 1 bytes @ 0x22
  1656   000023                     	ds	1
  1657   000024                     runGPIO@j:
  1658                           	callstack 0
  1659   000024                     _dtoa$4037:
  1660                           	callstack 0
  1661   000024                     utoa@w:
  1662                           	callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x23
  1665   000024                     	ds	2
  1666   000026                     ___flmul@bexp:
  1667                           	callstack 0
  1668   000026                     dtoa@w:
  1669                           	callstack 0
  1670   000026                     utoa@p:
  1671                           	callstack 0
  1672                           
  1673                           ; 2 bytes @ 0x25
  1674   000026                     	ds	1
  1675   000027                     ___flmul@prod:
  1676                           	callstack 0
  1677                           
  1678                           ; 4 bytes @ 0x26
  1679   000027                     	ds	1
  1680   000028                     dtoa@p:
  1681                           	callstack 0
  1682   000028                     utoa@i:
  1683                           	callstack 0
  1684                           
  1685                           ; 2 bytes @ 0x27
  1686   000028                     	ds	2
  1687   00002A                     dtoa@s:
  1688                           	callstack 0
  1689                           
  1690                           ; 1 bytes @ 0x29
  1691   00002A                     	ds	1
  1692   00002B                     ___flmul@temp:
  1693                           	callstack 0
  1694   00002B                     dtoa@i:
  1695                           	callstack 0
  1696                           
  1697                           ; 2 bytes @ 0x2A
  1698   00002B                     	ds	2
  1699   00002D                     ?___fldiv:
  1700                           	callstack 0
  1701   00002D                     ___flge@ff1:
  1702                           	callstack 0
  1703   00002D                     ___fldiv@b:
  1704                           	callstack 0
  1705                           
  1706                           ; 4 bytes @ 0x2C
  1707   00002D                     	ds	4
  1708   000031                     ___flge@ff2:
  1709                           	callstack 0
  1710   000031                     ___fldiv@a:
  1711                           	callstack 0
  1712                           
  1713                           ; 4 bytes @ 0x30
  1714   000031                     	ds	4
  1715   000035                     ??___fldiv:
  1716   000035                     ??___flge:
  1717                           
  1718                           ; 1 bytes @ 0x34
  1719   000035                     	ds	4
  1720   000039                     ___fldiv@rem:
  1721                           	callstack 0
  1722                           
  1723                           ; 4 bytes @ 0x38
  1724   000039                     	ds	4
  1725   00003D                     ___fldiv@sign:
  1726                           	callstack 0
  1727                           
  1728                           ; 1 bytes @ 0x3C
  1729   00003D                     	ds	1
  1730   00003E                     ___fldiv@new_exp:
  1731                           	callstack 0
  1732                           
  1733                           ; 2 bytes @ 0x3D
  1734   00003E                     	ds	2
  1735   000040                     ___fldiv@grs:
  1736                           	callstack 0
  1737                           
  1738                           ; 4 bytes @ 0x3F
  1739   000040                     	ds	4
  1740   000044                     ___fldiv@bexp:
  1741                           	callstack 0
  1742                           
  1743                           ; 1 bytes @ 0x43
  1744   000044                     	ds	1
  1745   000045                     ___fldiv@aexp:
  1746                           	callstack 0
  1747                           
  1748                           ; 1 bytes @ 0x44
  1749   000045                     	ds	1
  1750   000046                     ?___fladd:
  1751                           	callstack 0
  1752   000046                     ?_floorf:
  1753                           	callstack 0
  1754   000046                     ___fladd@b:
  1755                           	callstack 0
  1756   000046                     floorf@x:
  1757                           	callstack 0
  1758                           
  1759                           ; 4 bytes @ 0x45
  1760   000046                     	ds	4
  1761   00004A                     ??_floorf:
  1762   00004A                     ___fladd@a:
  1763                           	callstack 0
  1764                           
  1765                           ; 4 bytes @ 0x49
  1766   00004A                     	ds	4
  1767   00004E                     ??___fladd:
  1768                           
  1769                           ; 1 bytes @ 0x4D
  1770   00004E                     	ds	4
  1771   000052                     ___fltol@sign1:
  1772                           	callstack 0
  1773                           
  1774                           ; 1 bytes @ 0x51
  1775   000052                     	ds	1
  1776   000053                     ___fltol@exp1:
  1777                           	callstack 0
  1778                           
  1779                           ; 1 bytes @ 0x52
  1780   000053                     	ds	1
  1781   000054                     printf@ap:
  1782                           	callstack 0
  1783                           
  1784                           ; 1 bytes @ 0x53
  1785   000054                     	ds	1
  1786                           
  1787 ;;
  1788 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1789 ;;
  1790 ;; *************** function _main *****************
  1791 ;; Defined at:
  1792 ;;		line 10 in file "main.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;		None
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  menuI           1  157[BANK0 ] unsigned char 
  1797 ;;  setUpAgain      1  156[BANK0 ] unsigned char 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;Total ram usage:        4 bytes
  1812 ;; Hardware stack levels required when called: 10
  1813 ;; This function calls:
  1814 ;;		_LCD_Init
  1815 ;;		_LCD_ShowString
  1816 ;;		_moveDisplay
  1817 ;;		_runADC
  1818 ;;		_runDAC
  1819 ;;		_runGAME
  1820 ;;		_runGPIO
  1821 ;;		_runMUSIC
  1822 ;;		_runPWM
  1823 ;;		_runUART
  1824 ;; This function is called by:
  1825 ;;		Startup code after reset
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text0
  1830   0029EE                     __ptext0:
  1831                           	callstack 0
  1832   0029EE                     _main:
  1833                           	callstack 21
  1834   0029EE                     
  1835                           ;main.c: 11:     _delay((unsigned long)((100)*(32E6/4000.0)));
  1836   0029EE  0E05               	movlw	5
  1837   0029F0  0100               	movlb	0	; () banked
  1838   0029F2  6FFB               	movwf	(??_main+1)& (0+255),b
  1839   0029F4  0E0F               	movlw	15
  1840   0029F6  6FFA               	movwf	??_main& (0+255),b
  1841   0029F8  0EF1               	movlw	241
  1842   0029FA                     u10357:
  1843   0029FA  2EE8               	decfsz	wreg,f,c
  1844   0029FC  D7FE               	bra	u10357
  1845   0029FE  2FFA               	decfsz	??_main& (0+255),f,b
  1846   002A00  D7FC               	bra	u10357
  1847   002A02  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1848   002A04  D7FA               	bra	u10357
  1849   002A06                     
  1850                           ;main.c: 13:     TRISCbits.RC0 = 1;
  1851   002A06  8094               	bsf	148,0,c	;volatile
  1852   002A08                     
  1853                           ;main.c: 14:     TRISAbits.RA4 = 1;
  1854   002A08  8892               	bsf	146,4,c	;volatile
  1855   002A0A                     
  1856                           ;main.c: 15:     TRISAbits.RA3 = 1;
  1857   002A0A  8692               	bsf	146,3,c	;volatile
  1858   002A0C                     
  1859                           ;main.c: 16:     TRISAbits.RA2 = 1;
  1860   002A0C  8492               	bsf	146,2,c	;volatile
  1861   002A0E                     
  1862                           ;main.c: 17:     ANSELAbits.ANSA3 = 0;
  1863   002A0E  010F               	movlb	15	; () banked
  1864   002A10  9738               	bcf	56,3,b	;volatile
  1865   002A12                     
  1866                           ; BSR set to: 15
  1867                           ;main.c: 18:     ANSELAbits.ANSA2 = 0;
  1868   002A12  9538               	bcf	56,2,b	;volatile
  1869   002A14                     
  1870                           ; BSR set to: 15
  1871                           ;main.c: 21:     TRISDbits.RD2 = 0;
  1872   002A14  9495               	bcf	149,2,c	;volatile
  1873   002A16                     
  1874                           ; BSR set to: 15
  1875                           ;main.c: 22:     TRISDbits.RD3 = 0;
  1876   002A16  9695               	bcf	149,3,c	;volatile
  1877   002A18                     
  1878                           ; BSR set to: 15
  1879                           ;main.c: 23:     TRISCbits.RC4 = 0;
  1880   002A18  9894               	bcf	148,4,c	;volatile
  1881   002A1A                     
  1882                           ; BSR set to: 15
  1883                           ;main.c: 24:     TRISDbits.RD4 = 0;
  1884   002A1A  9895               	bcf	149,4,c	;volatile
  1885   002A1C                     
  1886                           ; BSR set to: 15
  1887                           ;main.c: 25:     TRISDbits.RD5 = 0;
  1888   002A1C  9A95               	bcf	149,5,c	;volatile
  1889   002A1E                     
  1890                           ; BSR set to: 15
  1891                           ;main.c: 26:     TRISDbits.RD6 = 0;
  1892   002A1E  9C95               	bcf	149,6,c	;volatile
  1893   002A20                     
  1894                           ; BSR set to: 15
  1895                           ;main.c: 27:     LATDbits.LD2 = 1;
  1896   002A20  848C               	bsf	140,2,c	;volatile
  1897   002A22                     
  1898                           ; BSR set to: 15
  1899                           ;main.c: 28:     LATDbits.LD3 = 1;
  1900   002A22  868C               	bsf	140,3,c	;volatile
  1901   002A24                     
  1902                           ; BSR set to: 15
  1903                           ;main.c: 29:     LATCbits.LC4 = 1;
  1904   002A24  888B               	bsf	139,4,c	;volatile
  1905   002A26                     
  1906                           ; BSR set to: 15
  1907                           ;main.c: 30:     LATDbits.LD4 = 1;
  1908   002A26  888C               	bsf	140,4,c	;volatile
  1909   002A28                     
  1910                           ; BSR set to: 15
  1911                           ;main.c: 31:     LATDbits.LD5 = 1;
  1912   002A28  8A8C               	bsf	140,5,c	;volatile
  1913   002A2A                     
  1914                           ; BSR set to: 15
  1915                           ;main.c: 32:     LATDbits.LD6 = 1;
  1916   002A2A  8C8C               	bsf	140,6,c	;volatile
  1917   002A2C                     
  1918                           ; BSR set to: 15
  1919                           ;main.c: 35:     LCD_Init();
  1920   002A2C  EC19  F023         	call	_LCD_Init	;wreg free
  1921   002A30                     
  1922                           ;main.c: 36:     uint8_t menuI = 0;
  1923   002A30  0E00               	movlw	0
  1924   002A32  0100               	movlb	0	; () banked
  1925   002A34  6FFD               	movwf	main@menuI& (0+255),b
  1926   002A36                     
  1927                           ; BSR set to: 0
  1928                           ;main.c: 37:     uint8_t setUpAgain = 0;
  1929   002A36  0E00               	movlw	0
  1930   002A38  6FFC               	movwf	main@setUpAgain& (0+255),b
  1931   002A3A                     
  1932                           ; BSR set to: 0
  1933                           ;main.c: 44:     menuI = moveDisplay(menuI,0);
  1934   002A3A  0E00               	movlw	0
  1935   002A3C  6FE7               	movwf	moveDisplay@where& (0+255),b
  1936   002A3E  51FD               	movf	main@menuI& (0+255),w,b
  1937   002A40  EC93  F020         	call	_moveDisplay
  1938   002A44  0100               	movlb	0	; () banked
  1939   002A46  6FFD               	movwf	main@menuI& (0+255),b
  1940   002A48                     l8388:
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;main.c: 47:         if(PORTCbits.RC0){
  1944   002A48  A082               	btfss	130,0,c	;volatile
  1945   002A4A  EF29  F015         	goto	u10251
  1946   002A4E  EF2B  F015         	goto	u10250
  1947   002A52                     u10251:
  1948   002A52  EF4D  F015         	goto	l56
  1949   002A56                     u10250:
  1950   002A56                     
  1951                           ; BSR set to: 0
  1952                           ;main.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1953   002A56  0E03               	movlw	3
  1954   002A58  0100               	movlb	0	; () banked
  1955   002A5A  6FFB               	movwf	(??_main+1)& (0+255),b
  1956   002A5C  0E08               	movlw	8
  1957   002A5E  6FFA               	movwf	??_main& (0+255),b
  1958   002A60  0E77               	movlw	119
  1959   002A62                     u10367:
  1960   002A62  2EE8               	decfsz	wreg,f,c
  1961   002A64  D7FE               	bra	u10367
  1962   002A66  2FFA               	decfsz	??_main& (0+255),f,b
  1963   002A68  D7FC               	bra	u10367
  1964   002A6A  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1965   002A6C  D7FA               	bra	u10367
  1966   002A6E                     
  1967                           ;main.c: 49:             if(PORTCbits.RC0){
  1968   002A6E  A082               	btfss	130,0,c	;volatile
  1969   002A70  EF3C  F015         	goto	u10261
  1970   002A74  EF3E  F015         	goto	u10260
  1971   002A78                     u10261:
  1972   002A78  EF4D  F015         	goto	l56
  1973   002A7C                     u10260:
  1974   002A7C                     
  1975                           ;main.c: 50:                 menuI = moveDisplay(menuI,2);
  1976   002A7C  0E02               	movlw	2
  1977   002A7E  0100               	movlb	0	; () banked
  1978   002A80  6FE7               	movwf	moveDisplay@where& (0+255),b
  1979   002A82  51FD               	movf	main@menuI& (0+255),w,b
  1980   002A84  EC93  F020         	call	_moveDisplay
  1981   002A88  0100               	movlb	0	; () banked
  1982   002A8A  6FFD               	movwf	main@menuI& (0+255),b
  1983   002A8C                     l58:
  1984   002A8C  B082               	btfsc	130,0,c	;volatile
  1985   002A8E  EF4B  F015         	goto	u10271
  1986   002A92  EF4D  F015         	goto	u10270
  1987   002A96                     u10271:
  1988   002A96  EF46  F015         	goto	l58
  1989   002A9A                     u10270:
  1990   002A9A                     l56:
  1991                           
  1992                           ;main.c: 54:         if(PORTAbits.RA4){
  1993   002A9A  A880               	btfss	128,4,c	;volatile
  1994   002A9C  EF52  F015         	goto	u10281
  1995   002AA0  EF54  F015         	goto	u10280
  1996   002AA4                     u10281:
  1997   002AA4  EF76  F015         	goto	l61
  1998   002AA8                     u10280:
  1999   002AA8                     
  2000                           ;main.c: 55:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2001   002AA8  0E03               	movlw	3
  2002   002AAA  0100               	movlb	0	; () banked
  2003   002AAC  6FFB               	movwf	(??_main+1)& (0+255),b
  2004   002AAE  0E08               	movlw	8
  2005   002AB0  6FFA               	movwf	??_main& (0+255),b
  2006   002AB2  0E77               	movlw	119
  2007   002AB4                     u10377:
  2008   002AB4  2EE8               	decfsz	wreg,f,c
  2009   002AB6  D7FE               	bra	u10377
  2010   002AB8  2FFA               	decfsz	??_main& (0+255),f,b
  2011   002ABA  D7FC               	bra	u10377
  2012   002ABC  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2013   002ABE  D7FA               	bra	u10377
  2014   002AC0                     
  2015                           ;main.c: 56:             if(PORTAbits.RA4){
  2016   002AC0  A880               	btfss	128,4,c	;volatile
  2017   002AC2  EF65  F015         	goto	u10291
  2018   002AC6  EF67  F015         	goto	u10290
  2019   002ACA                     u10291:
  2020   002ACA  EF76  F015         	goto	l61
  2021   002ACE                     u10290:
  2022   002ACE                     
  2023                           ;main.c: 57:                 menuI = moveDisplay(menuI,1);
  2024   002ACE  0E01               	movlw	1
  2025   002AD0  0100               	movlb	0	; () banked
  2026   002AD2  6FE7               	movwf	moveDisplay@where& (0+255),b
  2027   002AD4  51FD               	movf	main@menuI& (0+255),w,b
  2028   002AD6  EC93  F020         	call	_moveDisplay
  2029   002ADA  0100               	movlb	0	; () banked
  2030   002ADC  6FFD               	movwf	main@menuI& (0+255),b
  2031   002ADE                     l63:
  2032   002ADE  B880               	btfsc	128,4,c	;volatile
  2033   002AE0  EF74  F015         	goto	u10301
  2034   002AE4  EF76  F015         	goto	u10300
  2035   002AE8                     u10301:
  2036   002AE8  EF6F  F015         	goto	l63
  2037   002AEC                     u10300:
  2038   002AEC                     l61:
  2039                           
  2040                           ;main.c: 61:         if(PORTAbits.RA3){
  2041   002AEC  A680               	btfss	128,3,c	;volatile
  2042   002AEE  EF7B  F015         	goto	u10311
  2043   002AF2  EF7D  F015         	goto	u10310
  2044   002AF6                     u10311:
  2045   002AF6  EF66  F016         	goto	l66
  2046   002AFA                     u10310:
  2047   002AFA                     
  2048                           ;main.c: 62:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2049   002AFA  0E03               	movlw	3
  2050   002AFC  0100               	movlb	0	; () banked
  2051   002AFE  6FFB               	movwf	(??_main+1)& (0+255),b
  2052   002B00  0E08               	movlw	8
  2053   002B02  6FFA               	movwf	??_main& (0+255),b
  2054   002B04  0E77               	movlw	119
  2055   002B06                     u10387:
  2056   002B06  2EE8               	decfsz	wreg,f,c
  2057   002B08  D7FE               	bra	u10387
  2058   002B0A  2FFA               	decfsz	??_main& (0+255),f,b
  2059   002B0C  D7FC               	bra	u10387
  2060   002B0E  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2061   002B10  D7FA               	bra	u10387
  2062   002B12                     
  2063                           ;main.c: 63:             if(PORTAbits.RA3){
  2064   002B12  A680               	btfss	128,3,c	;volatile
  2065   002B14  EF8E  F015         	goto	u10321
  2066   002B18  EF90  F015         	goto	u10320
  2067   002B1C                     u10321:
  2068   002B1C  EF66  F016         	goto	l66
  2069   002B20                     u10320:
  2070   002B20                     l68:
  2071   002B20  B680               	btfsc	128,3,c	;volatile
  2072   002B22  EF95  F015         	goto	u10331
  2073   002B26  EF97  F015         	goto	u10330
  2074   002B2A                     u10331:
  2075   002B2A  EF90  F015         	goto	l68
  2076   002B2E                     u10330:
  2077   002B2E  EF46  F016         	goto	l8460
  2078   002B32                     l8408:
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;main.c: 67:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  2082   002B32  0E37               	movlw	low STR_1
  2083   002B34  6E07               	movwf	LCD_ShowString@textData^0,c
  2084   002B36  0EFF               	movlw	high STR_1
  2085   002B38  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2086   002B3A  0E01               	movlw	1
  2087   002B3C  EC4D  F024         	call	_LCD_ShowString
  2088                           
  2089                           ;main.c: 68:                         LCD_ShowString((char)2, "                ");
  2090   002B40  0EBD               	movlw	low (STR_29+2)
  2091   002B42  6E07               	movwf	LCD_ShowString@textData^0,c
  2092   002B44  0EFE               	movlw	high (STR_29+2)
  2093   002B46  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2094   002B48  0E02               	movlw	2
  2095   002B4A  EC4D  F024         	call	_LCD_ShowString
  2096   002B4E                     
  2097                           ;main.c: 69:                         runGPIO();
  2098   002B4E  EC3A  F01F         	call	_runGPIO	;wreg free
  2099   002B52                     l8412:
  2100                           
  2101                           ;main.c: 70:                         setUpAgain = 1;
  2102   002B52  0E01               	movlw	1
  2103   002B54  0100               	movlb	0	; () banked
  2104   002B56  6FFC               	movwf	main@setUpAgain& (0+255),b
  2105                           
  2106                           ;main.c: 71:                         break;
  2107   002B58  EF66  F016         	goto	l66
  2108   002B5C                     l8414:
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;main.c: 73:                         LCD_ShowString((char)1, "BR: 19200       ");
  2112   002B5C  0E15               	movlw	low STR_3
  2113   002B5E  6E07               	movwf	LCD_ShowString@textData^0,c
  2114   002B60  0EFF               	movlw	high STR_3
  2115   002B62  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2116   002B64  0E01               	movlw	1
  2117   002B66  EC4D  F024         	call	_LCD_ShowString
  2118                           
  2119                           ;main.c: 74:                         LCD_ShowString((char)2, "Konec - new line");
  2120   002B6A  0E8C               	movlw	low STR_4
  2121   002B6C  6E07               	movwf	LCD_ShowString@textData^0,c
  2122   002B6E  0EFF               	movlw	high STR_4
  2123   002B70  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2124   002B72  0E02               	movlw	2
  2125   002B74  EC4D  F024         	call	_LCD_ShowString
  2126   002B78                     
  2127                           ;main.c: 75:                         runUART();
  2128   002B78  EC84  F01E         	call	_runUART	;wreg free
  2129   002B7C  EFA9  F015         	goto	l8412
  2130   002B80                     l8420:
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;main.c: 79:                         LCD_ShowString((char)1, "Zmacknete BTN2  ");
  2134   002B80  0E59               	movlw	low STR_5
  2135   002B82  6E07               	movwf	LCD_ShowString@textData^0,c
  2136   002B84  0EFF               	movlw	high STR_5
  2137   002B86  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2138   002B88  0E01               	movlw	1
  2139   002B8A  EC4D  F024         	call	_LCD_ShowString
  2140                           
  2141                           ;main.c: 80:                         LCD_ShowString((char)2, "                ");
  2142   002B8E  0EBD               	movlw	low (STR_29+2)
  2143   002B90  6E07               	movwf	LCD_ShowString@textData^0,c
  2144   002B92  0EFE               	movlw	high (STR_29+2)
  2145   002B94  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2146   002B96  0E02               	movlw	2
  2147   002B98  EC4D  F024         	call	_LCD_ShowString
  2148   002B9C                     
  2149                           ;main.c: 81:                         runPWM();
  2150   002B9C  ECF0  F01F         	call	_runPWM	;wreg free
  2151   002BA0  EFA9  F015         	goto	l8412
  2152   002BA4                     l8426:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;main.c: 85:                         LCD_ShowString((char)1, "Volty na POTech:");
  2156   002BA4  0E7B               	movlw	low STR_7
  2157   002BA6  6E07               	movwf	LCD_ShowString@textData^0,c
  2158   002BA8  0EFF               	movlw	high STR_7
  2159   002BAA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2160   002BAC  0E01               	movlw	1
  2161   002BAE  EC4D  F024         	call	_LCD_ShowString
  2162   002BB2                     
  2163                           ;main.c: 86:                         runADC();
  2164   002BB2  EC15  F01A         	call	_runADC	;wreg free
  2165   002BB6  EFA9  F015         	goto	l8412
  2166   002BBA                     l8432:
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;main.c: 90:                         LCD_ShowString((char)1, "RB0-A2, BR:19200");
  2170   002BBA  0E6A               	movlw	low STR_8
  2171   002BBC  6E07               	movwf	LCD_ShowString@textData^0,c
  2172   002BBE  0EFF               	movlw	high STR_8
  2173   002BC0  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2174   002BC2  0E01               	movlw	1
  2175   002BC4  EC4D  F024         	call	_LCD_ShowString
  2176                           
  2177                           ;main.c: 91:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  2178   002BC8  0E9D               	movlw	low STR_9
  2179   002BCA  6E07               	movwf	LCD_ShowString@textData^0,c
  2180   002BCC  0EFF               	movlw	high STR_9
  2181   002BCE  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2182   002BD0  0E02               	movlw	2
  2183   002BD2  EC4D  F024         	call	_LCD_ShowString
  2184   002BD6                     
  2185                           ;main.c: 92:                         runDAC();
  2186   002BD6  EC7D  F016         	call	_runDAC	;wreg free
  2187   002BDA  EFA9  F015         	goto	l8412
  2188   002BDE                     l8438:
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;main.c: 96:                         LCD_ShowString((char)1, "Ladeni potaku   ");
  2192   002BDE  0E48               	movlw	low STR_10
  2193   002BE0  6E07               	movwf	LCD_ShowString@textData^0,c
  2194   002BE2  0EFF               	movlw	high STR_10
  2195   002BE4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2196   002BE6  0E01               	movlw	1
  2197   002BE8  EC4D  F024         	call	_LCD_ShowString
  2198                           
  2199                           ;main.c: 97:                         LCD_ShowString((char)2, "                ");
  2200   002BEC  0EBD               	movlw	low (STR_29+2)
  2201   002BEE  6E07               	movwf	LCD_ShowString@textData^0,c
  2202   002BF0  0EFE               	movlw	high (STR_29+2)
  2203   002BF2  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2204   002BF4  0E02               	movlw	2
  2205   002BF6  EC4D  F024         	call	_LCD_ShowString
  2206   002BFA                     
  2207                           ;main.c: 98:                         _delay((unsigned long)((1000)*(32E6/4000.0)));
  2208   002BFA  0E29               	movlw	41
  2209   002BFC  0100               	movlb	0	; () banked
  2210   002BFE  6FFB               	movwf	(??_main+1)& (0+255),b
  2211   002C00  0E96               	movlw	150
  2212   002C02  6FFA               	movwf	??_main& (0+255),b
  2213   002C04  0E7F               	movlw	127
  2214   002C06                     u10397:
  2215   002C06  2EE8               	decfsz	wreg,f,c
  2216   002C08  D7FE               	bra	u10397
  2217   002C0A  2FFA               	decfsz	??_main& (0+255),f,b
  2218   002C0C  D7FC               	bra	u10397
  2219   002C0E  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2220   002C10  D7FA               	bra	u10397
  2221   002C12                     
  2222                           ;main.c: 99:                         LCD_ShowString((char)1, "Pripravit       ");
  2223   002C12  0E26               	movlw	low STR_12
  2224   002C14  6E07               	movwf	LCD_ShowString@textData^0,c
  2225   002C16  0EFF               	movlw	high STR_12
  2226   002C18  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2227   002C1A  0E01               	movlw	1
  2228   002C1C  EC4D  F024         	call	_LCD_ShowString
  2229                           
  2230                           ;main.c: 100:                         _delay((unsigned long)((1000)*(32E6/4000.0)));
  2231   002C20  0E29               	movlw	41
  2232   002C22  0100               	movlb	0	; () banked
  2233   002C24  6FFB               	movwf	(??_main+1)& (0+255),b
  2234   002C26  0E96               	movlw	150
  2235   002C28  6FFA               	movwf	??_main& (0+255),b
  2236   002C2A  0E7F               	movlw	127
  2237   002C2C                     u10407:
  2238   002C2C  2EE8               	decfsz	wreg,f,c
  2239   002C2E  D7FE               	bra	u10407
  2240   002C30  2FFA               	decfsz	??_main& (0+255),f,b
  2241   002C32  D7FC               	bra	u10407
  2242   002C34  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2243   002C36  D7FA               	bra	u10407
  2244   002C38                     
  2245                           ;main.c: 101:                         LCD_ShowString((char)2, "           Pozor");
  2246   002C38  0EAE               	movlw	low STR_13
  2247   002C3A  6E07               	movwf	LCD_ShowString@textData^0,c
  2248   002C3C  0EFF               	movlw	high STR_13
  2249   002C3E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2250   002C40  0E02               	movlw	2
  2251   002C42  EC4D  F024         	call	_LCD_ShowString
  2252   002C46                     
  2253                           ;main.c: 102:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2254   002C46  0E52               	movlw	82
  2255   002C48  0100               	movlb	0	; () banked
  2256   002C4A  6FFB               	movwf	(??_main+1)& (0+255),b
  2257   002C4C  0E2B               	movlw	43
  2258   002C4E  6FFA               	movwf	??_main& (0+255),b
  2259   002C50  0E00               	movlw	0
  2260   002C52                     u10417:
  2261   002C52  2EE8               	decfsz	wreg,f,c
  2262   002C54  D7FE               	bra	u10417
  2263   002C56  2FFA               	decfsz	??_main& (0+255),f,b
  2264   002C58  D7FC               	bra	u10417
  2265   002C5A  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2266   002C5C  D7FA               	bra	u10417
  2267   002C5E  0000               	nop	
  2268   002C60                     
  2269                           ;main.c: 103:                         runGAME();
  2270   002C60  EC4F  F00F         	call	_runGAME	;wreg free
  2271   002C64  EFA9  F015         	goto	l8412
  2272   002C68                     l8452:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;main.c: 107:                         LCD_ShowString((char)1, "                ");
  2276   002C68  0EBD               	movlw	low (STR_29+2)
  2277   002C6A  6E07               	movwf	LCD_ShowString@textData^0,c
  2278   002C6C  0EFE               	movlw	high (STR_29+2)
  2279   002C6E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2280   002C70  0E01               	movlw	1
  2281   002C72  EC4D  F024         	call	_LCD_ShowString
  2282                           
  2283                           ;main.c: 108:                         LCD_ShowString((char)2, "                ");
  2284   002C76  0EBD               	movlw	low (STR_29+2)
  2285   002C78  6E07               	movwf	LCD_ShowString@textData^0,c
  2286   002C7A  0EFE               	movlw	high (STR_29+2)
  2287   002C7C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2288   002C7E  0E02               	movlw	2
  2289   002C80  EC4D  F024         	call	_LCD_ShowString
  2290   002C84                     
  2291                           ;main.c: 109:                         runMUSIC();
  2292   002C84  EC4B  F029         	call	_runMUSIC	;wreg free
  2293   002C88  EFA9  F015         	goto	l8412
  2294   002C8C                     l8460:
  2295   002C8C  0100               	movlb	0	; () banked
  2296   002C8E  51FD               	movf	main@menuI& (0+255),w,b
  2297                           
  2298                           ; Switch size 1, requested type "simple"
  2299                           ; Number of cases is 7, Range of values is 0 to 6
  2300                           ; switch strategies available:
  2301                           ; Name         Instructions Cycles
  2302                           ; simple_byte           22    12 (average)
  2303                           ;	Chosen strategy is simple_byte
  2304   002C90  0A00               	xorlw	0	; case 0
  2305   002C92  B4D8               	btfsc	status,2,c
  2306   002C94  EF99  F015         	goto	l8408
  2307   002C98  0A01               	xorlw	1	; case 1
  2308   002C9A  B4D8               	btfsc	status,2,c
  2309   002C9C  EFAE  F015         	goto	l8414
  2310   002CA0  0A03               	xorlw	3	; case 2
  2311   002CA2  B4D8               	btfsc	status,2,c
  2312   002CA4  EFC0  F015         	goto	l8420
  2313   002CA8  0A01               	xorlw	1	; case 3
  2314   002CAA  B4D8               	btfsc	status,2,c
  2315   002CAC  EFD2  F015         	goto	l8426
  2316   002CB0  0A07               	xorlw	7	; case 4
  2317   002CB2  B4D8               	btfsc	status,2,c
  2318   002CB4  EFDD  F015         	goto	l8432
  2319   002CB8  0A01               	xorlw	1	; case 5
  2320   002CBA  B4D8               	btfsc	status,2,c
  2321   002CBC  EFEF  F015         	goto	l8438
  2322   002CC0  0A03               	xorlw	3	; case 6
  2323   002CC2  B4D8               	btfsc	status,2,c
  2324   002CC4  EF34  F016         	goto	l8452
  2325   002CC8  EF66  F016         	goto	l66
  2326   002CCC                     l66:
  2327                           
  2328                           ;main.c: 116:         if(PORTAbits.RA2){
  2329   002CCC  5080               	movf	128,w,c	;volatile
  2330   002CCE                     
  2331                           ;main.c: 120:         if(setUpAgain){
  2332   002CCE  0100               	movlb	0	; () banked
  2333   002CD0  51FC               	movf	main@setUpAgain& (0+255),w,b
  2334   002CD2  B4D8               	btfsc	status,2,c
  2335   002CD4  EF6E  F016         	goto	u10341
  2336   002CD8  EF70  F016         	goto	u10340
  2337   002CDC                     u10341:
  2338   002CDC  EF24  F015         	goto	l8388
  2339   002CE0                     u10340:
  2340   002CE0                     
  2341                           ; BSR set to: 0
  2342                           ;main.c: 121:         menuI = moveDisplay(menuI,0);
  2343   002CE0  0E00               	movlw	0
  2344   002CE2  6FE7               	movwf	moveDisplay@where& (0+255),b
  2345   002CE4  51FD               	movf	main@menuI& (0+255),w,b
  2346   002CE6  EC93  F020         	call	_moveDisplay
  2347   002CEA  0100               	movlb	0	; () banked
  2348   002CEC  6FFD               	movwf	main@menuI& (0+255),b
  2349   002CEE                     
  2350                           ; BSR set to: 0
  2351                           ;main.c: 122:         setUpAgain = 0;
  2352   002CEE  0E00               	movlw	0
  2353   002CF0  6FFC               	movwf	main@setUpAgain& (0+255),b
  2354   002CF2  EF24  F015         	goto	l8388
  2355   002CF6  EFA7  F000         	goto	start
  2356   002CFA                     __end_of_main:
  2357                           	callstack 0
  2358                           
  2359 ;; *************** function _runUART *****************
  2360 ;; Defined at:
  2361 ;;		line 4 in file "UART.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  p               2  152[BANK0 ] int 
  2366 ;;  i               2  150[BANK0 ] unsigned int 
  2367 ;;  reversed       31  116[BANK0 ] unsigned char [31]
  2368 ;;  len             2  148[BANK0 ] unsigned int 
  2369 ;;  keepState       1  147[BANK0 ] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2380 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;Total ram usage:       40 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 9
  2386 ;; This function calls:
  2387 ;;		_printf
  2388 ;;		_strlen
  2389 ;; This function is called by:
  2390 ;;		_main
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text1
  2395   003D08                     __ptext1:
  2396                           	callstack 0
  2397   003D08                     _runUART:
  2398                           	callstack 21
  2399   003D08                     
  2400                           ;UART.c: 6:     TRISAbits.RA2 = 1;
  2401   003D08  8492               	bsf	146,2,c	;volatile
  2402                           
  2403                           ;UART.c: 8:     ANSELCbits.ANSC6 = 0;
  2404   003D0A  010F               	movlb	15	; () banked
  2405   003D0C  9D3A               	bcf	58,6,b	;volatile
  2406                           
  2407                           ;UART.c: 9:     ANSELCbits.ANSC7 = 0;
  2408   003D0E  9F3A               	bcf	58,7,b	;volatile
  2409                           
  2410                           ;UART.c: 10:     TRISCbits.TRISC6 = 1;
  2411   003D10  8C94               	bsf	148,6,c	;volatile
  2412                           
  2413                           ;UART.c: 11:     TRISCbits.TRISC7 = 1;
  2414   003D12  8E94               	bsf	148,7,c	;volatile
  2415   003D14                     
  2416                           ; BSR set to: 15
  2417                           ;UART.c: 14:     SPBRG1 = 25;
  2418   003D14  0E19               	movlw	25
  2419   003D16  6EAF               	movwf	175,c	;volatile
  2420   003D18                     
  2421                           ; BSR set to: 15
  2422                           ;UART.c: 16:     TXSTA1bits.SYNC = 0;
  2423   003D18  98AC               	bcf	172,4,c	;volatile
  2424   003D1A                     
  2425                           ; BSR set to: 15
  2426                           ;UART.c: 17:     RCSTA1bits.SPEN = 1;
  2427   003D1A  8EAB               	bsf	171,7,c	;volatile
  2428   003D1C                     
  2429                           ; BSR set to: 15
  2430                           ;UART.c: 18:     TXSTA1bits.TXEN = 1;
  2431   003D1C  8AAC               	bsf	172,5,c	;volatile
  2432   003D1E                     
  2433                           ; BSR set to: 15
  2434                           ;UART.c: 19:     RCSTA1bits.CREN = 1;
  2435   003D1E  88AB               	bsf	171,4,c	;volatile
  2436                           
  2437                           ;UART.c: 21:     UARTIE = 1;
  2438   003D20  0E01               	movlw	1
  2439   003D22  0101               	movlb	1	; () banked
  2440   003D24  6F25               	movwf	_UARTIE& (0+255),b
  2441   003D26                     
  2442                           ; BSR set to: 1
  2443                           ;UART.c: 22:     RC1IE = 1;
  2444   003D26  8A9D               	bsf	3997,5,c	;volatile
  2445   003D28                     
  2446                           ; BSR set to: 1
  2447                           ;UART.c: 23:     PEIE = 1;
  2448   003D28  8CF2               	bsf	4082,6,c	;volatile
  2449   003D2A                     
  2450                           ; BSR set to: 1
  2451                           ;UART.c: 24:     GIE = 1;
  2452   003D2A  8EF2               	bsf	4082,7,c	;volatile
  2453                           
  2454                           ;UART.c: 26:     uint8_t keepState = 1;
  2455   003D2C  0E01               	movlw	1
  2456   003D2E  0100               	movlb	0	; () banked
  2457   003D30  6FF3               	movwf	runUART@keepState& (0+255),b
  2458                           
  2459                           ;UART.c: 28:     while(keepState){
  2460   003D32  EF27  F01F         	goto	l579
  2461   003D36                     l8026:
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;UART.c: 29:         if(gmail.full){
  2465   003D36  0101               	movlb	1	; () banked
  2466   003D38  5196               	movf	(_gmail+31)& (0+255),w,b	;volatile
  2467   003D3A  B4D8               	btfsc	status,2,c
  2468   003D3C  EFA2  F01E         	goto	u9841
  2469   003D40  EFA4  F01E         	goto	u9840
  2470   003D44                     u9841:
  2471   003D44  EF03  F01F         	goto	l581
  2472   003D48                     u9840:
  2473   003D48                     
  2474                           ; BSR set to: 1
  2475                           ;UART.c: 30:             char reversed[31];;UART.c: 31:             size_t len = strlen(
      +                          (const char*)gmail.data);
  2476   003D48  0E77               	movlw	low _gmail
  2477   003D4A  6E06               	movwf	strlen@s^0,c
  2478   003D4C  0E01               	movlw	high _gmail
  2479   003D4E  6E07               	movwf	(strlen@s+1)^0,c
  2480   003D50  EC62  F028         	call	_strlen	;wreg free
  2481   003D54  C006  F0F4         	movff	?_strlen,runUART@len
  2482   003D58  C007  F0F5         	movff	?_strlen+1,runUART@len+1
  2483   003D5C                     
  2484                           ;UART.c: 33:             for(size_t i = 0; i < len; i++) {
  2485   003D5C  0E00               	movlw	0
  2486   003D5E  0100               	movlb	0	; () banked
  2487   003D60  6FF7               	movwf	(runUART@i+1)& (0+255),b
  2488   003D62  0E00               	movlw	0
  2489   003D64  6FF6               	movwf	runUART@i& (0+255),b
  2490   003D66  EFCB  F01E         	goto	l8036
  2491   003D6A                     l8032:
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;UART.c: 34:                 reversed[i] = gmail.data[len - 1 - i];
  2495   003D6A  0E76               	movlw	low (_gmail+65535)
  2496   003D6C  6FD2               	movwf	??_runUART& (0+255),b
  2497   003D6E  0E01               	movlw	high (_gmail+65535)
  2498   003D70  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2499   003D72  51F6               	movf	runUART@i& (0+255),w,b
  2500   003D74  5FD2               	subwf	??_runUART& (0+255),f,b
  2501   003D76  51F7               	movf	(runUART@i+1)& (0+255),w,b
  2502   003D78  5BD3               	subwfb	(??_runUART+1)& (0+255),f,b
  2503   003D7A  51F4               	movf	runUART@len& (0+255),w,b
  2504   003D7C  25D2               	addwf	??_runUART& (0+255),w,b
  2505   003D7E  6ED9               	movwf	fsr2l,c
  2506   003D80  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2507   003D82  21D3               	addwfc	(??_runUART+1)& (0+255),w,b
  2508   003D84  6EDA               	movwf	fsr2h,c
  2509   003D86  51F6               	movf	runUART@i& (0+255),w,b
  2510   003D88  0FD4               	addlw	low runUART@reversed
  2511   003D8A  6EE1               	movwf	fsr1l,c
  2512   003D8C  6AE2               	clrf	fsr1h,c
  2513   003D8E  CFDF FFE7          	movff	indf2,indf1
  2514   003D92                     
  2515                           ; BSR set to: 0
  2516                           ;UART.c: 35:             }
  2517   003D92  4BF6               	infsnz	runUART@i& (0+255),f,b
  2518   003D94  2BF7               	incf	(runUART@i+1)& (0+255),f,b
  2519   003D96                     l8036:
  2520                           
  2521                           ; BSR set to: 0
  2522   003D96  51F4               	movf	runUART@len& (0+255),w,b
  2523   003D98  5DF6               	subwf	runUART@i& (0+255),w,b
  2524   003D9A  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2525   003D9C  59F7               	subwfb	(runUART@i+1)& (0+255),w,b
  2526   003D9E  A0D8               	btfss	status,0,c
  2527   003DA0  EFD4  F01E         	goto	u9851
  2528   003DA4  EFD6  F01E         	goto	u9850
  2529   003DA8                     u9851:
  2530   003DA8  EFB5  F01E         	goto	l8032
  2531   003DAC                     u9850:
  2532   003DAC                     
  2533                           ; BSR set to: 0
  2534                           ;UART.c: 36:             reversed[len] = '\0';
  2535   003DAC  51F4               	movf	runUART@len& (0+255),w,b
  2536   003DAE  0FD4               	addlw	low runUART@reversed
  2537   003DB0  6ED9               	movwf	fsr2l,c
  2538   003DB2  6ADA               	clrf	fsr2h,c
  2539   003DB4  6ADF               	clrf	indf2,c
  2540   003DB6                     
  2541                           ; BSR set to: 0
  2542                           ;UART.c: 37:             printf("%s \n", reversed);
  2543   003DB6  0ED2               	movlw	low STR_28
  2544   003DB8  6FCE               	movwf	printf@fmt& (0+255),b
  2545   003DBA  0EFF               	movlw	high STR_28
  2546   003DBC  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  2547   003DBE  0ED4               	movlw	low runUART@reversed
  2548   003DC0  6FD0               	movwf	(?_printf+2)& (0+255),b
  2549   003DC2  6BD1               	clrf	(?_printf+3)& (0+255),b
  2550   003DC4  EC06  F029         	call	_printf	;wreg free
  2551   003DC8                     
  2552                           ;UART.c: 39:             gmail.full = 0;
  2553   003DC8  0E00               	movlw	0
  2554   003DCA  0101               	movlb	1	; () banked
  2555   003DCC  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
  2556   003DCE                     
  2557                           ; BSR set to: 1
  2558                           ;UART.c: 41:             for(int p = 0; p < 31; p++) {
  2559   003DCE  0E00               	movlw	0
  2560   003DD0  0100               	movlb	0	; () banked
  2561   003DD2  6FF9               	movwf	(runUART@p+1)& (0+255),b
  2562   003DD4  0E00               	movlw	0
  2563   003DD6  6FF8               	movwf	runUART@p& (0+255),b
  2564   003DD8                     l8050:
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;UART.c: 42:                 gmail.data[p] = '\0';
  2568   003DD8  0E77               	movlw	low _gmail
  2569   003DDA  25F8               	addwf	runUART@p& (0+255),w,b
  2570   003DDC  6ED9               	movwf	fsr2l,c
  2571   003DDE  0E01               	movlw	high _gmail
  2572   003DE0  21F9               	addwfc	(runUART@p+1)& (0+255),w,b
  2573   003DE2  6EDA               	movwf	fsr2h,c
  2574   003DE4  6ADF               	clrf	indf2,c
  2575   003DE6                     
  2576                           ; BSR set to: 0
  2577                           ;UART.c: 43:             }
  2578   003DE6  4BF8               	infsnz	runUART@p& (0+255),f,b
  2579   003DE8  2BF9               	incf	(runUART@p+1)& (0+255),f,b
  2580   003DEA                     
  2581                           ; BSR set to: 0
  2582   003DEA  BFF9               	btfsc	(runUART@p+1)& (0+255),7,b
  2583   003DEC  EF01  F01F         	goto	u9861
  2584   003DF0  51F9               	movf	(runUART@p+1)& (0+255),w,b
  2585   003DF2  E109               	bnz	u9860
  2586   003DF4  0E1F               	movlw	31
  2587   003DF6  5DF8               	subwf	runUART@p& (0+255),w,b
  2588   003DF8  A0D8               	btfss	status,0,c
  2589   003DFA  EF01  F01F         	goto	u9861
  2590   003DFE  EF03  F01F         	goto	u9860
  2591   003E02                     u9861:
  2592   003E02  EFEC  F01E         	goto	l8050
  2593   003E06                     u9860:
  2594   003E06                     l581:
  2595                           
  2596                           ;UART.c: 47:         if(PORTAbits.RA2){
  2597   003E06  A480               	btfss	128,2,c	;volatile
  2598   003E08  EF08  F01F         	goto	u9871
  2599   003E0C  EF0A  F01F         	goto	u9870
  2600   003E10                     u9871:
  2601   003E10  EF27  F01F         	goto	l579
  2602   003E14                     u9870:
  2603   003E14                     
  2604                           ;UART.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2605   003E14  0E03               	movlw	3
  2606   003E16  0100               	movlb	0	; () banked
  2607   003E18  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2608   003E1A  0E08               	movlw	8
  2609   003E1C  6FD2               	movwf	??_runUART& (0+255),b
  2610   003E1E  0E77               	movlw	119
  2611   003E20                     u10427:
  2612   003E20  2EE8               	decfsz	wreg,f,c
  2613   003E22  D7FE               	bra	u10427
  2614   003E24  2FD2               	decfsz	??_runUART& (0+255),f,b
  2615   003E26  D7FC               	bra	u10427
  2616   003E28  2FD3               	decfsz	(??_runUART+1)& (0+255),f,b
  2617   003E2A  D7FA               	bra	u10427
  2618   003E2C                     
  2619                           ;UART.c: 49:             if(PORTAbits.RA2){
  2620   003E2C  A480               	btfss	128,2,c	;volatile
  2621   003E2E  EF1B  F01F         	goto	u9881
  2622   003E32  EF1D  F01F         	goto	u9880
  2623   003E36                     u9881:
  2624   003E36  EF27  F01F         	goto	l579
  2625   003E3A                     u9880:
  2626   003E3A                     l589:
  2627   003E3A  B480               	btfsc	128,2,c	;volatile
  2628   003E3C  EF22  F01F         	goto	u9891
  2629   003E40  EF24  F01F         	goto	u9890
  2630   003E44                     u9891:
  2631   003E44  EF1D  F01F         	goto	l589
  2632   003E48                     u9890:
  2633   003E48                     
  2634                           ;UART.c: 51:                 keepState = 0;
  2635   003E48  0E00               	movlw	0
  2636   003E4A  0100               	movlb	0	; () banked
  2637   003E4C  6FF3               	movwf	runUART@keepState& (0+255),b
  2638   003E4E                     l579:
  2639                           
  2640                           ;UART.c: 28:     while(keepState){
  2641   003E4E  0100               	movlb	0	; () banked
  2642   003E50  51F3               	movf	runUART@keepState& (0+255),w,b
  2643   003E52  A4D8               	btfss	status,2,c
  2644   003E54  EF2E  F01F         	goto	u9901
  2645   003E58  EF30  F01F         	goto	u9900
  2646   003E5C                     u9901:
  2647   003E5C  EF9B  F01E         	goto	l8026
  2648   003E60                     u9900:
  2649   003E60                     
  2650                           ; BSR set to: 0
  2651                           ;UART.c: 58:     RCSTA1bits.SPEN = 0;
  2652   003E60  9EAB               	bcf	171,7,c	;volatile
  2653                           
  2654                           ;UART.c: 59:     TXSTA1bits.TXEN = 0;
  2655   003E62  9AAC               	bcf	172,5,c	;volatile
  2656                           
  2657                           ;UART.c: 60:     RCSTA1bits.CREN = 0;
  2658   003E64  98AB               	bcf	171,4,c	;volatile
  2659   003E66                     
  2660                           ; BSR set to: 0
  2661                           ;UART.c: 61:     UARTIE = 0;
  2662   003E66  0E00               	movlw	0
  2663   003E68  0101               	movlb	1	; () banked
  2664   003E6A  6F25               	movwf	_UARTIE& (0+255),b
  2665   003E6C                     
  2666                           ; BSR set to: 1
  2667                           ;UART.c: 62:     RC1IE = 0;
  2668   003E6C  9A9D               	bcf	3997,5,c	;volatile
  2669   003E6E                     
  2670                           ; BSR set to: 1
  2671                           ;UART.c: 63:     PEIE = 0;
  2672   003E6E  9CF2               	bcf	4082,6,c	;volatile
  2673   003E70                     
  2674                           ; BSR set to: 1
  2675                           ;UART.c: 64:     GIE = 0;
  2676   003E70  9EF2               	bcf	4082,7,c	;volatile
  2677   003E72                     
  2678                           ; BSR set to: 1
  2679   003E72  0012               	return		;funcret
  2680   003E74                     __end_of_runUART:
  2681                           	callstack 0
  2682                           
  2683 ;; *************** function _strlen *****************
  2684 ;; Defined at:
  2685 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strlen.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  s               2    5[COMRAM] PTR const unsigned char 
  2688 ;;		 -> gmail$data(31), gmail(32), 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  a               2    7[COMRAM] PTR const unsigned char 
  2691 ;;		 -> gmail$data(31), gmail(32), 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  2    5[COMRAM] unsigned int 
  2694 ;; Registers used:
  2695 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;Total ram usage:        4 bytes
  2706 ;; Hardware stack levels used: 1
  2707 ;; Hardware stack levels required when called: 1
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_runUART
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text2
  2716   0050C4                     __ptext2:
  2717                           	callstack 0
  2718   0050C4                     _strlen:
  2719                           	callstack 28
  2720   0050C4  C006  F008         	movff	strlen@s,strlen@a
  2721   0050C8  C007  F009         	movff	strlen@s+1,strlen@a+1
  2722   0050CC  EF6A  F028         	goto	l7888
  2723   0050D0                     l7886:
  2724   0050D0  4A06               	infsnz	strlen@s^0,f,c
  2725   0050D2  2A07               	incf	(strlen@s+1)^0,f,c
  2726   0050D4                     l7888:
  2727   0050D4  C006  FFD9         	movff	strlen@s,fsr2l
  2728   0050D8  C007  FFDA         	movff	strlen@s+1,fsr2h
  2729   0050DC  50DF               	movf	indf2,w,c
  2730   0050DE  A4D8               	btfss	status,2,c
  2731   0050E0  EF74  F028         	goto	u9651
  2732   0050E4  EF76  F028         	goto	u9650
  2733   0050E8                     u9651:
  2734   0050E8  EF68  F028         	goto	l7886
  2735   0050EC                     u9650:
  2736   0050EC  5008               	movf	strlen@a^0,w,c
  2737   0050EE  5C06               	subwf	strlen@s^0,w,c
  2738   0050F0  6E06               	movwf	?_strlen^0,c
  2739   0050F2  5009               	movf	(strlen@a+1)^0,w,c
  2740   0050F4  5807               	subwfb	(strlen@s+1)^0,w,c
  2741   0050F6  6E07               	movwf	(?_strlen+1)^0,c
  2742   0050F8  0012               	return		;funcret
  2743   0050FA                     __end_of_strlen:
  2744                           	callstack 0
  2745                           
  2746 ;; *************** function _runPWM *****************
  2747 ;; Defined at:
  2748 ;;		line 11 in file "PWM.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  multiplier      1   34[COMRAM] unsigned char 
  2753 ;;  keepState       1   33[COMRAM] unsigned char 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      void 
  2756 ;; Registers used:
  2757 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;Total ram usage:        4 bytes
  2768 ;; Hardware stack levels used: 1
  2769 ;; Hardware stack levels required when called: 2
  2770 ;; This function calls:
  2771 ;;		___awdiv
  2772 ;; This function is called by:
  2773 ;;		_main
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text3
  2778   003FE0                     __ptext3:
  2779                           	callstack 0
  2780   003FE0                     _runPWM:
  2781                           	callstack 28
  2782   003FE0                     
  2783                           ;PWM.c: 13:     TRISCbits.RC2 = 1;
  2784   003FE0  8494               	bsf	148,2,c	;volatile
  2785   003FE2                     
  2786                           ;PWM.c: 14:     CCPTMRS0bits.C1TSEL = 0b00;
  2787   003FE2  0EFC               	movlw	-4
  2788   003FE4  010F               	movlb	15	; () banked
  2789   003FE6  1749               	andwf	73,f,b	;volatile
  2790                           
  2791                           ;PWM.c: 15:     PR2 = 199;
  2792   003FE8  0EC7               	movlw	199
  2793   003FEA  6EBB               	movwf	187,c	;volatile
  2794                           
  2795                           ;PWM.c: 16:     CCP1CONbits.CCP1M |= 0b1100;
  2796   003FEC  0E0C               	movlw	12
  2797   003FEE  12BD               	iorwf	189,f,c	;volatile
  2798                           
  2799                           ;PWM.c: 17:     CCP1CONbits.P1M = 0b10;
  2800   003FF0  50BD               	movf	189,w,c	;volatile
  2801   003FF2  0B3F               	andlw	-193
  2802   003FF4  0980               	iorlw	128
  2803   003FF6  6EBD               	movwf	189,c	;volatile
  2804                           
  2805                           ;PWM.c: 18:     CCPR1L = 0;
  2806   003FF8  0E00               	movlw	0
  2807   003FFA  6EBE               	movwf	190,c	;volatile
  2808   003FFC                     
  2809                           ; BSR set to: 15
  2810                           ;PWM.c: 19:     TMR2IF = 0;
  2811   003FFC  929E               	bcf	3998,1,c	;volatile
  2812   003FFE                     
  2813                           ; BSR set to: 15
  2814                           ;PWM.c: 20:     TMR2ON = 1;
  2815   003FFE  84BA               	bsf	4026,2,c	;volatile
  2816   004000                     l519:
  2817   004000  A29E               	btfss	3998,1,c	;volatile
  2818   004002  EF05  F020         	goto	u9911
  2819   004006  EF07  F020         	goto	u9910
  2820   00400A                     u9911:
  2821   00400A  EF00  F020         	goto	l519
  2822   00400E                     u9910:
  2823   00400E                     
  2824                           ;PWM.c: 22:     TRISCbits.RC2 = 1;
  2825   00400E  8494               	bsf	148,2,c	;volatile
  2826                           
  2827                           ;PWM.c: 25:     TRISAbits.RA4 = 1;
  2828   004010  8892               	bsf	146,4,c	;volatile
  2829                           
  2830                           ;PWM.c: 26:     TRISAbits.RA2 = 1;
  2831   004012  8492               	bsf	146,2,c	;volatile
  2832                           
  2833                           ;PWM.c: 28:     TRISDbits.RD2 = 0;
  2834   004014  9495               	bcf	149,2,c	;volatile
  2835                           
  2836                           ;PWM.c: 29:     TRISDbits.RD3 = 0;
  2837   004016  9695               	bcf	149,3,c	;volatile
  2838                           
  2839                           ;PWM.c: 30:     TRISCbits.RC4 = 0;
  2840   004018  9894               	bcf	148,4,c	;volatile
  2841                           
  2842                           ;PWM.c: 31:     TRISDbits.RD4 = 0;
  2843   00401A  9895               	bcf	149,4,c	;volatile
  2844                           
  2845                           ;PWM.c: 32:     TRISDbits.RD5 = 0;
  2846   00401C  9A95               	bcf	149,5,c	;volatile
  2847                           
  2848                           ;PWM.c: 33:     TRISDbits.RD6 = 0;
  2849   00401E  9C95               	bcf	149,6,c	;volatile
  2850                           
  2851                           ;PWM.c: 34:     LATDbits.LD2 = 1;
  2852   004020  848C               	bsf	140,2,c	;volatile
  2853                           
  2854                           ;PWM.c: 35:     LATDbits.LD3 = 1;
  2855   004022  868C               	bsf	140,3,c	;volatile
  2856                           
  2857                           ;PWM.c: 36:     LATCbits.LC4 = 1;
  2858   004024  888B               	bsf	139,4,c	;volatile
  2859                           
  2860                           ;PWM.c: 37:     LATDbits.LD4 = 1;
  2861   004026  888C               	bsf	140,4,c	;volatile
  2862                           
  2863                           ;PWM.c: 38:     LATDbits.LD5 = 1;
  2864   004028  8A8C               	bsf	140,5,c	;volatile
  2865                           
  2866                           ;PWM.c: 39:     LATDbits.LD6 = 1;
  2867   00402A  8C8C               	bsf	140,6,c	;volatile
  2868   00402C                     
  2869                           ;PWM.c: 41:     uint8_t keepState;;PWM.c: 42:     keepState = 1;
  2870   00402C  0E01               	movlw	1
  2871   00402E  6E22               	movwf	runPWM@keepState^0,c
  2872                           
  2873                           ;PWM.c: 44:     uint8_t multiplier;;PWM.c: 45:     multiplier = 0;
  2874   004030  0E00               	movlw	0
  2875   004032  6E23               	movwf	runPWM@multiplier^0,c
  2876                           
  2877                           ;PWM.c: 47:     while(keepState){
  2878   004034  EF86  F020         	goto	l522
  2879   004038                     l8084:
  2880                           
  2881                           ;PWM.c: 49:         CCPR1L = multiplier*199/5;
  2882   004038  5023               	movf	runPWM@multiplier^0,w,c
  2883   00403A  0DC7               	mullw	199
  2884   00403C  CFF3 F018          	movff	prodl,___awdiv@dividend
  2885   004040  CFF4 F019          	movff	prodh,___awdiv@dividend+1
  2886   004044  0E00               	movlw	0
  2887   004046  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  2888   004048  0E05               	movlw	5
  2889   00404A  6E1A               	movwf	___awdiv@divisor^0,c
  2890   00404C  ECEB  F023         	call	___awdiv	;wreg free
  2891   004050  5018               	movf	?___awdiv^0,w,c
  2892   004052  6EBE               	movwf	190,c	;volatile
  2893   004054                     
  2894                           ;PWM.c: 51:         if(PORTAbits.RA4){
  2895   004054  A880               	btfss	128,4,c	;volatile
  2896   004056  EF2F  F020         	goto	u9921
  2897   00405A  EF31  F020         	goto	u9920
  2898   00405E                     u9921:
  2899   00405E  EF63  F020         	goto	l8102
  2900   004062                     u9920:
  2901   004062                     
  2902                           ;PWM.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2903   004062  0E03               	movlw	3
  2904   004064  6E21               	movwf	(??_runPWM+1)^0,c
  2905   004066  0E08               	movlw	8
  2906   004068  6E20               	movwf	??_runPWM^0,c
  2907   00406A  0E77               	movlw	119
  2908   00406C                     u10437:
  2909   00406C  2EE8               	decfsz	wreg,f,c
  2910   00406E  D7FE               	bra	u10437
  2911   004070  2E20               	decfsz	??_runPWM^0,f,c
  2912   004072  D7FC               	bra	u10437
  2913   004074  2E21               	decfsz	(??_runPWM+1)^0,f,c
  2914   004076  D7FA               	bra	u10437
  2915   004078  0000               	nop	
  2916   00407A                     
  2917                           ;PWM.c: 53:             if(PORTAbits.RA4){
  2918   00407A  A880               	btfss	128,4,c	;volatile
  2919   00407C  EF42  F020         	goto	u9931
  2920   004080  EF44  F020         	goto	u9930
  2921   004084                     u9931:
  2922   004084  EF63  F020         	goto	l8102
  2923   004088                     u9930:
  2924   004088                     l526:
  2925   004088  B880               	btfsc	128,4,c	;volatile
  2926   00408A  EF49  F020         	goto	u9941
  2927   00408E  EF4B  F020         	goto	u9940
  2928   004092                     u9941:
  2929   004092  EF44  F020         	goto	l526
  2930   004096                     u9940:
  2931   004096                     
  2932                           ;PWM.c: 55:                 if(multiplier == 5 ){
  2933   004096  0E05               	movlw	5
  2934   004098  1823               	xorwf	runPWM@multiplier^0,w,c
  2935   00409A  A4D8               	btfss	status,2,c
  2936   00409C  EF52  F020         	goto	u9951
  2937   0040A0  EF54  F020         	goto	u9950
  2938   0040A4                     u9951:
  2939   0040A4  EF58  F020         	goto	l8098
  2940   0040A8                     u9950:
  2941   0040A8                     
  2942                           ;PWM.c: 56:                     multiplier = 0;
  2943   0040A8  0E00               	movlw	0
  2944   0040AA  6E23               	movwf	runPWM@multiplier^0,c
  2945                           
  2946                           ;PWM.c: 57:                 } else if(multiplier <5){
  2947   0040AC  EF63  F020         	goto	l8102
  2948   0040B0                     l8098:
  2949   0040B0  0E05               	movlw	5
  2950   0040B2  6023               	cpfslt	runPWM@multiplier^0,c
  2951   0040B4  EF5E  F020         	goto	u9961
  2952   0040B8  EF60  F020         	goto	u9960
  2953   0040BC                     u9961:
  2954   0040BC  EF63  F020         	goto	l525
  2955   0040C0                     u9960:
  2956   0040C0                     
  2957                           ;PWM.c: 58:                     multiplier++;
  2958   0040C0  2A23               	incf	runPWM@multiplier^0,f,c
  2959   0040C2  EF63  F020         	goto	l8102
  2960   0040C6                     l525:
  2961   0040C6                     l8102:
  2962                           
  2963                           ;PWM.c: 63:         if(PORTAbits.RA2){
  2964   0040C6  A480               	btfss	128,2,c	;volatile
  2965   0040C8  EF68  F020         	goto	u9971
  2966   0040CC  EF6A  F020         	goto	u9970
  2967   0040D0                     u9971:
  2968   0040D0  EF86  F020         	goto	l522
  2969   0040D4                     u9970:
  2970   0040D4                     
  2971                           ;PWM.c: 64:         _delay((unsigned long)((50)*(32E6/4000.0)));
  2972   0040D4  0E03               	movlw	3
  2973   0040D6  6E21               	movwf	(??_runPWM+1)^0,c
  2974   0040D8  0E08               	movlw	8
  2975   0040DA  6E20               	movwf	??_runPWM^0,c
  2976   0040DC  0E77               	movlw	119
  2977   0040DE                     u10447:
  2978   0040DE  2EE8               	decfsz	wreg,f,c
  2979   0040E0  D7FE               	bra	u10447
  2980   0040E2  2E20               	decfsz	??_runPWM^0,f,c
  2981   0040E4  D7FC               	bra	u10447
  2982   0040E6  2E21               	decfsz	(??_runPWM+1)^0,f,c
  2983   0040E8  D7FA               	bra	u10447
  2984   0040EA  0000               	nop	
  2985   0040EC                     
  2986                           ;PWM.c: 65:         if(PORTAbits.RA2){
  2987   0040EC  A480               	btfss	128,2,c	;volatile
  2988   0040EE  EF7B  F020         	goto	u9981
  2989   0040F2  EF7D  F020         	goto	u9980
  2990   0040F6                     u9981:
  2991   0040F6  EF86  F020         	goto	l522
  2992   0040FA                     u9980:
  2993   0040FA                     l534:
  2994   0040FA  B480               	btfsc	128,2,c	;volatile
  2995   0040FC  EF82  F020         	goto	u9991
  2996   004100  EF84  F020         	goto	u9990
  2997   004104                     u9991:
  2998   004104  EF7D  F020         	goto	l534
  2999   004108                     u9990:
  3000   004108                     
  3001                           ;PWM.c: 67:             keepState = 0;
  3002   004108  0E00               	movlw	0
  3003   00410A  6E22               	movwf	runPWM@keepState^0,c
  3004   00410C                     l522:
  3005                           
  3006                           ;PWM.c: 47:     while(keepState){
  3007   00410C  5022               	movf	runPWM@keepState^0,w,c
  3008   00410E  A4D8               	btfss	status,2,c
  3009   004110  EF8C  F020         	goto	u10001
  3010   004114  EF8E  F020         	goto	u10000
  3011   004118                     u10001:
  3012   004118  EF1C  F020         	goto	l8084
  3013   00411C                     u10000:
  3014   00411C                     
  3015                           ;PWM.c: 74:     CCP1CONbits.CCP1M = 0b0000;
  3016   00411C  0EF0               	movlw	-16
  3017   00411E  16BD               	andwf	189,f,c	;volatile
  3018   004120                     
  3019                           ;PWM.c: 75:     TMR2ON = 0;
  3020   004120  94BA               	bcf	4026,2,c	;volatile
  3021   004122                     
  3022                           ;PWM.c: 76:     TMR2IE = 0;
  3023   004122  929D               	bcf	3997,1,c	;volatile
  3024   004124  0012               	return		;funcret
  3025   004126                     __end_of_runPWM:
  3026                           	callstack 0
  3027                           
  3028 ;; *************** function _runMUSIC *****************
  3029 ;; Defined at:
  3030 ;;		line 10 in file "MUSIC.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		None
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;Total ram usage:        0 bytes
  3049 ;; Hardware stack levels used: 1
  3050 ;; Hardware stack levels required when called: 1
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	text4
  3059   005296                     __ptext4:
  3060                           	callstack 0
  3061   005296                     _runMUSIC:
  3062                           	callstack 29
  3063   005296  0012               	return		;funcret
  3064   005298                     __end_of_runMUSIC:
  3065                           	callstack 0
  3066                           
  3067 ;; *************** function _runGPIO *****************
  3068 ;; Defined at:
  3069 ;;		line 19 in file "GPIO.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;		None
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  j               2   35[COMRAM] int 
  3074 ;;  states         12    8[COMRAM] unsigned char [12]
  3075 ;;  LEDControl     12   20[COMRAM] PTR FTN(unsigned char ,)
  3076 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  3077 ;;		 -> LED2_Control(1), LED1_Control(1), 
  3078 ;;  numberOfStat    2   32[COMRAM] int 
  3079 ;;  GPIOi           1   34[COMRAM] unsigned char 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Locals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;Total ram usage:       31 bytes
  3094 ;; Hardware stack levels used: 1
  3095 ;; Hardware stack levels required when called: 2
  3096 ;; This function calls:
  3097 ;;		_LED1_Control
  3098 ;;		_LED2_Control
  3099 ;;		_LED3_Control
  3100 ;;		_LED4_Control
  3101 ;;		_LED5_Control
  3102 ;;		_LED6_Control
  3103 ;; This function is called by:
  3104 ;;		_main
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text5
  3109   003E74                     __ptext5:
  3110                           	callstack 0
  3111   003E74                     _runGPIO:
  3112                           	callstack 28
  3113   003E74                     
  3114                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  3115   003E74  9495               	bcf	149,2,c	;volatile
  3116                           
  3117                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  3118   003E76  9695               	bcf	149,3,c	;volatile
  3119                           
  3120                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  3121   003E78  9894               	bcf	148,4,c	;volatile
  3122                           
  3123                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  3124   003E7A  9895               	bcf	149,4,c	;volatile
  3125                           
  3126                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  3127   003E7C  9A95               	bcf	149,5,c	;volatile
  3128                           
  3129                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  3130   003E7E  9C95               	bcf	149,6,c	;volatile
  3131                           
  3132                           ;GPIO.c: 27:     ANSELDbits.ANSD2 = 0;
  3133   003E80  010F               	movlb	15	; () banked
  3134   003E82  953B               	bcf	59,2,b	;volatile
  3135                           
  3136                           ;GPIO.c: 28:     ANSELDbits.ANSD3 = 0;
  3137   003E84  973B               	bcf	59,3,b	;volatile
  3138                           
  3139                           ;GPIO.c: 29:     ANSELCbits.ANSC4 = 0;
  3140   003E86  993A               	bcf	58,4,b	;volatile
  3141                           
  3142                           ;GPIO.c: 30:     ANSELDbits.ANSD4 = 0;
  3143   003E88  993B               	bcf	59,4,b	;volatile
  3144                           
  3145                           ;GPIO.c: 31:     ANSELDbits.ANSD5 = 0;
  3146   003E8A  9B3B               	bcf	59,5,b	;volatile
  3147                           
  3148                           ;GPIO.c: 32:     ANSELDbits.ANSD6 = 0;
  3149   003E8C  9D3B               	bcf	59,6,b	;volatile
  3150                           
  3151                           ;GPIO.c: 33:     LATDbits.LD2 = 1;
  3152   003E8E  848C               	bsf	140,2,c	;volatile
  3153                           
  3154                           ;GPIO.c: 34:     LATDbits.LD3 = 1;
  3155   003E90  868C               	bsf	140,3,c	;volatile
  3156                           
  3157                           ;GPIO.c: 35:     LATCbits.LC4 = 1;
  3158   003E92  888B               	bsf	139,4,c	;volatile
  3159                           
  3160                           ;GPIO.c: 36:     LATDbits.LD4 = 1;
  3161   003E94  888C               	bsf	140,4,c	;volatile
  3162                           
  3163                           ;GPIO.c: 37:     LATDbits.LD5 = 1;
  3164   003E96  8A8C               	bsf	140,5,c	;volatile
  3165                           
  3166                           ;GPIO.c: 38:     LATDbits.LD6 = 1;
  3167   003E98  8C8C               	bsf	140,6,c	;volatile
  3168                           
  3169                           ;GPIO.c: 41:     TRISAbits.RA2 = 1;
  3170   003E9A  8492               	bsf	146,2,c	;volatile
  3171                           
  3172                           ;GPIO.c: 42:     ANSELAbits.ANSA2 = 0;
  3173   003E9C  9538               	bcf	56,2,b	;volatile
  3174   003E9E                     
  3175                           ; BSR set to: 15
  3176                           ;GPIO.c: 47:     T1CONbits.TMR1CS = 0b00;
  3177   003E9E  0E3F               	movlw	-193
  3178   003EA0  16CD               	andwf	205,f,c	;volatile
  3179                           
  3180                           ;GPIO.c: 48:     T1CONbits.T1CKPS = 0b11;
  3181   003EA2  0E30               	movlw	48
  3182   003EA4  12CD               	iorwf	205,f,c	;volatile
  3183   003EA6                     
  3184                           ; BSR set to: 15
  3185                           ;GPIO.c: 49:     TMR1IE = 1;
  3186   003EA6  809D               	bsf	3997,0,c	;volatile
  3187   003EA8                     
  3188                           ; BSR set to: 15
  3189                           ;GPIO.c: 50:     PEIE = 1;
  3190   003EA8  8CF2               	bsf	4082,6,c	;volatile
  3191   003EAA                     
  3192                           ; BSR set to: 15
  3193                           ;GPIO.c: 51:     GIE = 1;
  3194   003EAA  8EF2               	bsf	4082,7,c	;volatile
  3195                           
  3196                           ;GPIO.c: 52:     GPIOIE = 1;
  3197   003EAC  0E01               	movlw	1
  3198   003EAE  0101               	movlb	1	; () banked
  3199   003EB0  6F26               	movwf	_GPIOIE& (0+255),b
  3200   003EB2                     
  3201                           ; BSR set to: 1
  3202                           ;GPIO.c: 53:     TMR1IF = 1;
  3203   003EB2  809E               	bsf	3998,0,c	;volatile
  3204                           
  3205                           ;GPIO.c: 54:     TMR1 = 0xFFFF - (25000 - 1);
  3206   003EB4  0E9E               	movlw	158
  3207   003EB6  6ECF               	movwf	207,c	;volatile
  3208   003EB8  0E58               	movlw	88
  3209   003EBA  6ECE               	movwf	206,c	;volatile
  3210   003EBC                     
  3211                           ; BSR set to: 1
  3212                           ;GPIO.c: 55:     TMR1ON = 1;
  3213   003EBC  80CD               	bsf	4045,0,c	;volatile
  3214                           
  3215                           ;GPIO.c: 58:     keepStateGPIO = 1;
  3216   003EBE  0E01               	movlw	1
  3217   003EC0  0100               	movlb	0	; () banked
  3218   003EC2  6FFE               	movwf	_keepStateGPIO& (0+255),b
  3219   003EC4                     
  3220                           ; BSR set to: 0
  3221                           ;GPIO.c: 60:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  3222   003EC4  EE21  F0EA         	lfsr	2,runGPIO@F6975
  3223   003EC8  EE10  F015         	lfsr	1,runGPIO@LEDControl
  3224   003ECC  0E0B               	movlw	11
  3225   003ECE                     u9751:
  3226   003ECE  CFDB FFE3          	movff	plusw2,plusw1
  3227   003ED2  06E8               	decf	wreg,f,c
  3228   003ED4  E2FC               	bc	u9751
  3229   003ED6                     
  3230                           ; BSR set to: 0
  3231                           ;GPIO.c: 61:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  3232   003ED6  EE21  F0DE         	lfsr	2,runGPIO@F6993
  3233   003EDA  EE10  F009         	lfsr	1,runGPIO@states
  3234   003EDE  0E0B               	movlw	11
  3235   003EE0                     u9761:
  3236   003EE0  CFDB FFE3          	movff	plusw2,plusw1
  3237   003EE4  06E8               	decf	wreg,f,c
  3238   003EE6  E2FC               	bc	u9761
  3239                           
  3240                           ;GPIO.c: 62:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  3241   003EE8  0E00               	movlw	0
  3242   003EEA  6E22               	movwf	(runGPIO@numberOfStates+1)^0,c
  3243   003EEC  0E0C               	movlw	12
  3244   003EEE  6E21               	movwf	runGPIO@numberOfStates^0,c
  3245                           
  3246                           ;GPIO.c: 63:     uint8_t GPIOi;;GPIO.c: 64:     GPIOi = 0;
  3247   003EF0  0E00               	movlw	0
  3248   003EF2  6E23               	movwf	runGPIO@GPIOi^0,c
  3249                           
  3250                           ;GPIO.c: 66:     while(keepStateGPIO){
  3251   003EF4  EFDB  F01F         	goto	l372
  3252   003EF8                     l7986:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;GPIO.c: 68:         for(int j = 0; j < 6; j++) {
  3256   003EF8  0E00               	movlw	0
  3257   003EFA  6E25               	movwf	(runGPIO@j+1)^0,c
  3258   003EFC  0E00               	movlw	0
  3259   003EFE  6E24               	movwf	runGPIO@j^0,c
  3260   003F00                     l7992:
  3261                           
  3262                           ;GPIO.c: 69:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  3263   003F00  5024               	movf	runGPIO@j^0,w,c
  3264   003F02  0D02               	mullw	2
  3265   003F04  50F3               	movf	243,w,c
  3266   003F06  0F15               	addlw	low runGPIO@LEDControl
  3267   003F08  6ED9               	movwf	fsr2l,c
  3268   003F0A  6ADA               	clrf	fsr2h,c
  3269   003F0C  D802               	call	u9778
  3270   003F0E  EFAD  F01F         	goto	u9779
  3271   003F12                     u9778:
  3272   003F12  0005               	push	
  3273   003F14  6EFA               	movwf	pclath,c
  3274   003F16  50DE               	movf	postinc2,w,c
  3275   003F18  6EFD               	movwf	tosl,c
  3276   003F1A  50DE               	movf	postinc2,w,c
  3277   003F1C  6EFE               	movwf	tosh,c
  3278   003F1E  50F8               	movf	tblptru,w,c
  3279   003F20  6EFF               	movwf	tosu,c
  3280   003F22  50FA               	movf	pclath,w,c
  3281   003F24  5024               	movf	runGPIO@j^0,w,c
  3282   003F26  0805               	sublw	5
  3283   003F28  6E07               	movwf	??_runGPIO^0,c
  3284   003F2A  5023               	movf	runGPIO@GPIOi^0,w,c
  3285   003F2C  0F09               	addlw	low runGPIO@states
  3286   003F2E  6ED9               	movwf	fsr2l,c
  3287   003F30  6ADA               	clrf	fsr2h,c
  3288   003F32  50DF               	movf	indf2,w,c
  3289   003F34  6E08               	movwf	(??_runGPIO+1)^0,c
  3290   003F36  2A07               	incf	??_runGPIO^0,f,c
  3291   003F38  EFA0  F01F         	goto	u9784
  3292   003F3C                     u9785:
  3293   003F3C  90D8               	bcf	status,0,c
  3294   003F3E  3208               	rrcf	(??_runGPIO+1)^0,f,c
  3295   003F40                     u9784:
  3296   003F40  2E07               	decfsz	??_runGPIO^0,f,c
  3297   003F42  EF9E  F01F         	goto	u9785
  3298   003F46  A008               	btfss	(??_runGPIO+1)^0,0,c
  3299   003F48  EFA8  F01F         	goto	u9791
  3300   003F4C  EFAB  F01F         	goto	u9790
  3301   003F50                     u9791:
  3302   003F50  0E01               	movlw	1
  3303   003F52  EFAC  F01F         	goto	u9800
  3304   003F56                     u9790:
  3305   003F56  0E00               	movlw	0
  3306   003F58                     u9800:
  3307   003F58  0012               	return		;indir
  3308   003F5A                     u9779:
  3309   003F5A                     
  3310                           ;GPIO.c: 70:         }
  3311   003F5A  4A24               	infsnz	runGPIO@j^0,f,c
  3312   003F5C  2A25               	incf	(runGPIO@j+1)^0,f,c
  3313   003F5E  BE25               	btfsc	(runGPIO@j+1)^0,7,c
  3314   003F60  EFBB  F01F         	goto	u9811
  3315   003F64  5025               	movf	(runGPIO@j+1)^0,w,c
  3316   003F66  E109               	bnz	u9810
  3317   003F68  0E06               	movlw	6
  3318   003F6A  5C24               	subwf	runGPIO@j^0,w,c
  3319   003F6C  A0D8               	btfss	status,0,c
  3320   003F6E  EFBB  F01F         	goto	u9811
  3321   003F72  EFBD  F01F         	goto	u9810
  3322   003F76                     u9811:
  3323   003F76  EF80  F01F         	goto	l7992
  3324   003F7A                     u9810:
  3325   003F7A                     
  3326                           ;GPIO.c: 71:         _delay((unsigned long)((400)*(32E6/4000.0)));
  3327   003F7A  0E11               	movlw	17
  3328   003F7C  6E08               	movwf	(??_runGPIO+1)^0,c
  3329   003F7E  0E3C               	movlw	60
  3330   003F80  6E07               	movwf	??_runGPIO^0,c
  3331   003F82  0ECB               	movlw	203
  3332   003F84                     u10457:
  3333   003F84  2EE8               	decfsz	wreg,f,c
  3334   003F86  D7FE               	bra	u10457
  3335   003F88  2E07               	decfsz	??_runGPIO^0,f,c
  3336   003F8A  D7FC               	bra	u10457
  3337   003F8C  2E08               	decfsz	(??_runGPIO+1)^0,f,c
  3338   003F8E  D7FA               	bra	u10457
  3339   003F90  0000               	nop	
  3340   003F92                     
  3341                           ;GPIO.c: 72:         GPIOi++;
  3342   003F92  2A23               	incf	runGPIO@GPIOi^0,f,c
  3343                           
  3344                           ;GPIO.c: 73:         if(GPIOi == numberOfStates){
  3345   003F94  5023               	movf	runGPIO@GPIOi^0,w,c
  3346   003F96  6E07               	movwf	??_runGPIO^0,c
  3347   003F98  6A08               	clrf	(??_runGPIO+1)^0,c
  3348   003F9A  5021               	movf	runGPIO@numberOfStates^0,w,c
  3349   003F9C  1807               	xorwf	??_runGPIO^0,w,c
  3350   003F9E  E107               	bnz	u9821
  3351   003FA0  5022               	movf	(runGPIO@numberOfStates+1)^0,w,c
  3352   003FA2  1808               	xorwf	(??_runGPIO+1)^0,w,c
  3353   003FA4  A4D8               	btfss	status,2,c
  3354   003FA6  EFD7  F01F         	goto	u9821
  3355   003FAA  EFD9  F01F         	goto	u9820
  3356   003FAE                     u9821:
  3357   003FAE  EFDB  F01F         	goto	l372
  3358   003FB2                     u9820:
  3359   003FB2                     
  3360                           ;GPIO.c: 74:             GPIOi = 0;
  3361   003FB2  0E00               	movlw	0
  3362   003FB4  6E23               	movwf	runGPIO@GPIOi^0,c
  3363   003FB6                     l372:
  3364                           
  3365                           ;GPIO.c: 66:     while(keepStateGPIO){
  3366   003FB6  0100               	movlb	0	; () banked
  3367   003FB8  51FE               	movf	_keepStateGPIO& (0+255),w,b
  3368   003FBA  A4D8               	btfss	status,2,c
  3369   003FBC  EFE2  F01F         	goto	u9831
  3370   003FC0  EFE4  F01F         	goto	u9830
  3371   003FC4                     u9831:
  3372   003FC4  EF7C  F01F         	goto	l7986
  3373   003FC8                     u9830:
  3374   003FC8                     
  3375                           ; BSR set to: 0
  3376                           ;GPIO.c: 79:     LATDbits.LD2 = 1;
  3377   003FC8  848C               	bsf	140,2,c	;volatile
  3378                           
  3379                           ;GPIO.c: 80:     LATDbits.LD3 = 1;
  3380   003FCA  868C               	bsf	140,3,c	;volatile
  3381                           
  3382                           ;GPIO.c: 81:     LATCbits.LC4 = 1;
  3383   003FCC  888B               	bsf	139,4,c	;volatile
  3384                           
  3385                           ;GPIO.c: 82:     LATDbits.LD4 = 1;
  3386   003FCE  888C               	bsf	140,4,c	;volatile
  3387                           
  3388                           ;GPIO.c: 83:     LATDbits.LD5 = 1;
  3389   003FD0  8A8C               	bsf	140,5,c	;volatile
  3390                           
  3391                           ;GPIO.c: 84:     LATDbits.LD6 = 1;
  3392   003FD2  8C8C               	bsf	140,6,c	;volatile
  3393                           
  3394                           ;GPIO.c: 85:     TMR1ON = 0;
  3395   003FD4  90CD               	bcf	4045,0,c	;volatile
  3396                           
  3397                           ;GPIO.c: 86:     TMR1IE = 0;
  3398   003FD6  909D               	bcf	3997,0,c	;volatile
  3399   003FD8                     
  3400                           ; BSR set to: 0
  3401                           ;GPIO.c: 87:     GPIOIE = 0;
  3402   003FD8  0E00               	movlw	0
  3403   003FDA  0101               	movlb	1	; () banked
  3404   003FDC  6F26               	movwf	_GPIOIE& (0+255),b
  3405   003FDE                     
  3406                           ; BSR set to: 1
  3407   003FDE  0012               	return		;funcret
  3408   003FE0                     __end_of_runGPIO:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function _LED5_Control *****************
  3412 ;; Defined at:
  3413 ;;		line 14 in file "GPIO.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  state           1    wreg     unsigned char 
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;  state           1    5[COMRAM] unsigned char 
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      void 
  3420 ;; Registers used:
  3421 ;;		wreg
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;Total ram usage:        1 bytes
  3432 ;; Hardware stack levels used: 1
  3433 ;; Hardware stack levels required when called: 1
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_runGPIO
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text6
  3442   005242                     __ptext6:
  3443                           	callstack 0
  3444   005242                     _LED5_Control:
  3445                           	callstack 28
  3446                           
  3447                           ; BSR set to: 1
  3448                           ;incstack = 0
  3449                           ;LED5_Control@state stored from wreg
  3450   005242  6E06               	movwf	LED5_Control@state^0,c
  3451   005244  B006               	btfsc	LED5_Control@state^0,0,c
  3452   005246  D002               	bra	u9635
  3453   005248  9A8C               	bcf	140,5,c	;volatile
  3454   00524A  D001               	bra	u9636
  3455   00524C                     u9635:
  3456   00524C  8A8C               	bsf	140,5,c	;volatile
  3457   00524E                     u9636:
  3458   00524E  0012               	return		;funcret
  3459   005250                     __end_of_LED5_Control:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _LED4_Control *****************
  3463 ;; Defined at:
  3464 ;;		line 13 in file "GPIO.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  state           1    wreg     unsigned char 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  state           1    5[COMRAM] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;Total ram usage:        1 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 1
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_runGPIO
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text7
  3493   005250                     __ptext7:
  3494                           	callstack 0
  3495   005250                     _LED4_Control:
  3496                           	callstack 28
  3497                           
  3498                           ;incstack = 0
  3499                           ;LED4_Control@state stored from wreg
  3500   005250  6E06               	movwf	LED4_Control@state^0,c
  3501   005252  B006               	btfsc	LED4_Control@state^0,0,c
  3502   005254  D002               	bra	u9625
  3503   005256  988C               	bcf	140,4,c	;volatile
  3504   005258  D001               	bra	u9626
  3505   00525A                     u9625:
  3506   00525A  888C               	bsf	140,4,c	;volatile
  3507   00525C                     u9626:
  3508   00525C  0012               	return		;funcret
  3509   00525E                     __end_of_LED4_Control:
  3510                           	callstack 0
  3511                           
  3512 ;; *************** function _LED3_Control *****************
  3513 ;; Defined at:
  3514 ;;		line 12 in file "GPIO.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  state           1    wreg     unsigned char 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  state           1    5[COMRAM] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;Total ram usage:        1 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; Hardware stack levels required when called: 1
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_runGPIO
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text8
  3543   00525E                     __ptext8:
  3544                           	callstack 0
  3545   00525E                     _LED3_Control:
  3546                           	callstack 28
  3547                           
  3548                           ;incstack = 0
  3549                           ;LED3_Control@state stored from wreg
  3550   00525E  6E06               	movwf	LED3_Control@state^0,c
  3551   005260  B006               	btfsc	LED3_Control@state^0,0,c
  3552   005262  D002               	bra	u9615
  3553   005264  988B               	bcf	139,4,c	;volatile
  3554   005266  D001               	bra	u9616
  3555   005268                     u9615:
  3556   005268  888B               	bsf	139,4,c	;volatile
  3557   00526A                     u9616:
  3558   00526A  0012               	return		;funcret
  3559   00526C                     __end_of_LED3_Control:
  3560                           	callstack 0
  3561                           
  3562 ;; *************** function _LED2_Control *****************
  3563 ;; Defined at:
  3564 ;;		line 11 in file "GPIO.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  state           1    wreg     unsigned char 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  state           1    5[COMRAM] unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;Total ram usage:        1 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 1
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_runGPIO
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text9
  3593   00526C                     __ptext9:
  3594                           	callstack 0
  3595   00526C                     _LED2_Control:
  3596                           	callstack 28
  3597                           
  3598                           ;incstack = 0
  3599                           ;LED2_Control@state stored from wreg
  3600   00526C  6E06               	movwf	LED2_Control@state^0,c
  3601   00526E  B006               	btfsc	LED2_Control@state^0,0,c
  3602   005270  D002               	bra	u9605
  3603   005272  968C               	bcf	140,3,c	;volatile
  3604   005274  D001               	bra	u9606
  3605   005276                     u9605:
  3606   005276  868C               	bsf	140,3,c	;volatile
  3607   005278                     u9606:
  3608   005278  0012               	return		;funcret
  3609   00527A                     __end_of_LED2_Control:
  3610                           	callstack 0
  3611                           
  3612 ;; *************** function _LED1_Control *****************
  3613 ;; Defined at:
  3614 ;;		line 10 in file "GPIO.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;  state           1    wreg     unsigned char 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  state           1    5[COMRAM] unsigned char 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		wreg
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;Total ram usage:        1 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; Hardware stack levels required when called: 1
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		_runGPIO
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text10
  3643   00527A                     __ptext10:
  3644                           	callstack 0
  3645   00527A                     _LED1_Control:
  3646                           	callstack 28
  3647                           
  3648                           ;incstack = 0
  3649                           ;LED1_Control@state stored from wreg
  3650   00527A  6E06               	movwf	LED1_Control@state^0,c
  3651   00527C  B006               	btfsc	LED1_Control@state^0,0,c
  3652   00527E  D002               	bra	u9595
  3653   005280  948C               	bcf	140,2,c	;volatile
  3654   005282  D001               	bra	u9596
  3655   005284                     u9595:
  3656   005284  848C               	bsf	140,2,c	;volatile
  3657   005286                     u9596:
  3658   005286  0012               	return		;funcret
  3659   005288                     __end_of_LED1_Control:
  3660                           	callstack 0
  3661                           
  3662 ;; *************** function _LED6_Control *****************
  3663 ;; Defined at:
  3664 ;;		line 15 in file "GPIO.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  state           1    wreg     unsigned char 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  state           1    5[COMRAM] unsigned char 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;Total ram usage:        1 bytes
  3683 ;; Hardware stack levels used: 1
  3684 ;; Hardware stack levels required when called: 1
  3685 ;; This function calls:
  3686 ;;		Nothing
  3687 ;; This function is called by:
  3688 ;;		_runGPIO
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text11
  3693   005288                     __ptext11:
  3694                           	callstack 0
  3695   005288                     _LED6_Control:
  3696                           	callstack 28
  3697                           
  3698                           ;incstack = 0
  3699                           ;LED6_Control@state stored from wreg
  3700   005288  6E06               	movwf	LED6_Control@state^0,c
  3701   00528A  B006               	btfsc	LED6_Control@state^0,0,c
  3702   00528C  D002               	bra	u9645
  3703   00528E  9C8C               	bcf	140,6,c	;volatile
  3704   005290  D001               	bra	u9646
  3705   005292                     u9645:
  3706   005292  8C8C               	bsf	140,6,c	;volatile
  3707   005294                     u9646:
  3708   005294  0012               	return		;funcret
  3709   005296                     __end_of_LED6_Control:
  3710                           	callstack 0
  3711                           
  3712 ;; *************** function _runGAME *****************
  3713 ;; Defined at:
  3714 ;;		line 10 in file "GAME.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  approxText     25   17[BANK1 ] unsigned char [25]
  3719 ;;  text           17    0[BANK1 ] unsigned char [17]
  3720 ;;  randomNumber    2   48[BANK1 ] unsigned short 
  3721 ;;  pot1            2   46[BANK1 ] unsigned short 
  3722 ;;  GAMEdivider     1   45[BANK1 ] unsigned char 
  3723 ;;  GAMEround       1   44[BANK1 ] unsigned char 
  3724 ;;  keepStateGAM    1   43[BANK1 ] unsigned char 
  3725 ;;  GAMEpart        1   42[BANK1 ] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;Total ram usage:       52 bytes
  3740 ;; Hardware stack levels used: 1
  3741 ;; Hardware stack levels required when called: 9
  3742 ;; This function calls:
  3743 ;;		_LCD_ShowString
  3744 ;;		___awdiv
  3745 ;;		___lbdiv
  3746 ;;		_rand
  3747 ;;		_sprintf
  3748 ;; This function is called by:
  3749 ;;		_main
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text12
  3754   001E9E                     __ptext12:
  3755                           	callstack 0
  3756   001E9E                     _runGAME:
  3757                           	callstack 21
  3758   001E9E                     
  3759                           ;GAME.c: 12:     TRISDbits.RD2 = 0;
  3760   001E9E  9495               	bcf	149,2,c	;volatile
  3761                           
  3762                           ;GAME.c: 13:     TRISDbits.RD3 = 0;
  3763   001EA0  9695               	bcf	149,3,c	;volatile
  3764                           
  3765                           ;GAME.c: 14:     TRISCbits.RC4 = 0;
  3766   001EA2  9894               	bcf	148,4,c	;volatile
  3767                           
  3768                           ;GAME.c: 15:     TRISDbits.RD4 = 0;
  3769   001EA4  9895               	bcf	149,4,c	;volatile
  3770                           
  3771                           ;GAME.c: 16:     TRISDbits.RD5 = 0;
  3772   001EA6  9A95               	bcf	149,5,c	;volatile
  3773                           
  3774                           ;GAME.c: 17:     TRISDbits.RD6 = 0;
  3775   001EA8  9C95               	bcf	149,6,c	;volatile
  3776                           
  3777                           ;GAME.c: 18:     ANSELDbits.ANSD2 = 0;
  3778   001EAA  010F               	movlb	15	; () banked
  3779   001EAC  953B               	bcf	59,2,b	;volatile
  3780                           
  3781                           ;GAME.c: 19:     ANSELDbits.ANSD3 = 0;
  3782   001EAE  973B               	bcf	59,3,b	;volatile
  3783                           
  3784                           ;GAME.c: 20:     ANSELCbits.ANSC4 = 0;
  3785   001EB0  993A               	bcf	58,4,b	;volatile
  3786                           
  3787                           ;GAME.c: 21:     ANSELDbits.ANSD4 = 0;
  3788   001EB2  993B               	bcf	59,4,b	;volatile
  3789                           
  3790                           ;GAME.c: 22:     ANSELDbits.ANSD5 = 0;
  3791   001EB4  9B3B               	bcf	59,5,b	;volatile
  3792                           
  3793                           ;GAME.c: 23:     ANSELDbits.ANSD6 = 0;
  3794   001EB6  9D3B               	bcf	59,6,b	;volatile
  3795                           
  3796                           ;GAME.c: 24:     LATDbits.LD2 = 1;
  3797   001EB8  848C               	bsf	140,2,c	;volatile
  3798                           
  3799                           ;GAME.c: 25:     LATDbits.LD3 = 1;
  3800   001EBA  868C               	bsf	140,3,c	;volatile
  3801                           
  3802                           ;GAME.c: 26:     LATCbits.LC4 = 1;
  3803   001EBC  888B               	bsf	139,4,c	;volatile
  3804                           
  3805                           ;GAME.c: 27:     LATDbits.LD4 = 1;
  3806   001EBE  888C               	bsf	140,4,c	;volatile
  3807                           
  3808                           ;GAME.c: 28:     LATDbits.LD5 = 1;
  3809   001EC0  8A8C               	bsf	140,5,c	;volatile
  3810                           
  3811                           ;GAME.c: 29:     LATDbits.LD6 = 1;
  3812   001EC2  8C8C               	bsf	140,6,c	;volatile
  3813                           
  3814                           ;GAME.c: 32:     TRISAbits.RA2 = 1;
  3815   001EC4  8492               	bsf	146,2,c	;volatile
  3816                           
  3817                           ;GAME.c: 33:     ANSELAbits.ANSA2 = 0;
  3818   001EC6  9538               	bcf	56,2,b	;volatile
  3819                           
  3820                           ;GAME.c: 36:     ANSELAbits.ANSA5 = 1;
  3821   001EC8  8B38               	bsf	56,5,b	;volatile
  3822                           
  3823                           ;GAME.c: 37:     ADCON2bits.ADFM = 1;
  3824   001ECA  8EC0               	bsf	192,7,c	;volatile
  3825   001ECC                     
  3826                           ; BSR set to: 15
  3827                           ;GAME.c: 38:     ADCON2bits.ADCS = 0b110;
  3828   001ECC  50C0               	movf	192,w,c	;volatile
  3829   001ECE  0BF8               	andlw	-8
  3830   001ED0  0906               	iorlw	6
  3831   001ED2  6EC0               	movwf	192,c	;volatile
  3832                           
  3833                           ;GAME.c: 39:     ADCON2bits.ACQT = 0b110;
  3834   001ED4  50C0               	movf	192,w,c	;volatile
  3835   001ED6  0BC7               	andlw	-57
  3836   001ED8  0930               	iorlw	48
  3837   001EDA  6EC0               	movwf	192,c	;volatile
  3838   001EDC                     
  3839                           ; BSR set to: 15
  3840                           ;GAME.c: 40:     ADCON0bits.ADON = 1;
  3841   001EDC  80C2               	bsf	194,0,c	;volatile
  3842   001EDE                     
  3843                           ; BSR set to: 15
  3844                           ;GAME.c: 42:     uint16_t pot1;;GAME.c: 43:     char text[17] = "";
  3845   001EDE  EE21  F09B         	lfsr	2,runGAME@text
  3846   001EE2  0E10               	movlw	16
  3847   001EE4                     u10161:
  3848   001EE4  6ADE               	clrf	postinc2,c
  3849   001EE6  06E8               	decf	wreg,f,c
  3850   001EE8  E2FD               	bc	u10161
  3851   001EEA                     
  3852                           ; BSR set to: 15
  3853                           ;GAME.c: 44:     uint8_t keepStateGAME;;GAME.c: 48:     T1CONbits.TMR1CS = 0b00;
  3854   001EEA  0E3F               	movlw	-193
  3855   001EEC  16CD               	andwf	205,f,c	;volatile
  3856   001EEE                     
  3857                           ; BSR set to: 15
  3858                           ;GAME.c: 49:     T1CONbits.T1CKPS = 0b11;
  3859   001EEE  0E30               	movlw	48
  3860   001EF0  12CD               	iorwf	205,f,c	;volatile
  3861   001EF2                     
  3862                           ; BSR set to: 15
  3863                           ;GAME.c: 50:     TMR1IE = 1;
  3864   001EF2  809D               	bsf	3997,0,c	;volatile
  3865   001EF4                     
  3866                           ; BSR set to: 15
  3867                           ;GAME.c: 51:     PEIE = 1;
  3868   001EF4  8CF2               	bsf	4082,6,c	;volatile
  3869   001EF6                     
  3870                           ; BSR set to: 15
  3871                           ;GAME.c: 52:     GIE = 1;
  3872   001EF6  8EF2               	bsf	4082,7,c	;volatile
  3873   001EF8                     
  3874                           ; BSR set to: 15
  3875                           ;GAME.c: 53:     GAMEIE = 1;
  3876   001EF8  0E01               	movlw	1
  3877   001EFA  0101               	movlb	1	; () banked
  3878   001EFC  6F24               	movwf	_GAMEIE& (0+255),b
  3879   001EFE                     
  3880                           ; BSR set to: 1
  3881                           ;GAME.c: 54:     TMR1IF = 1;
  3882   001EFE  809E               	bsf	3998,0,c	;volatile
  3883   001F00                     
  3884                           ; BSR set to: 1
  3885                           ;GAME.c: 55:     TMR1 = 0xFFFF - (62500 - 1);
  3886   001F00  0E0B               	movlw	11
  3887   001F02  6ECF               	movwf	207,c	;volatile
  3888   001F04  0EDC               	movlw	220
  3889   001F06  6ECE               	movwf	206,c	;volatile
  3890   001F08                     
  3891                           ; BSR set to: 1
  3892                           ;GAME.c: 56:     TMR1ON = 1;
  3893   001F08  80CD               	bsf	4045,0,c	;volatile
  3894   001F0A                     
  3895                           ; BSR set to: 1
  3896                           ;GAME.c: 58:     GAMEtime = 0;
  3897   001F0A  0E00               	movlw	0
  3898   001F0C  6F23               	movwf	_GAMEtime& (0+255),b
  3899   001F0E                     
  3900                           ; BSR set to: 1
  3901                           ;GAME.c: 59:     uint8_t GAMEround = 1;
  3902   001F0E  0E01               	movlw	1
  3903   001F10  6FC7               	movwf	runGAME@GAMEround& (0+255),b
  3904   001F12                     
  3905                           ; BSR set to: 1
  3906                           ;GAME.c: 62:     char approxText[25] = "";
  3907   001F12  EE21  F0AC         	lfsr	2,runGAME@approxText
  3908   001F16  0E18               	movlw	24
  3909   001F18                     u10171:
  3910   001F18  6ADE               	clrf	postinc2,c
  3911   001F1A  06E8               	decf	wreg,f,c
  3912   001F1C  E2FD               	bc	u10171
  3913   001F1E                     
  3914                           ; BSR set to: 1
  3915                           ;GAME.c: 65:     uint16_t randomNumber;;GAME.c: 66:     randomNumber = (uint16_t)(2 + ra
      +                          nd() / ((0x7fff) / (1023 - 2 + 1) + 1));
  3916   001F1E  EC33  F026         	call	_rand
  3917   001F22  C012  F018         	movff	?_rand,___awdiv@dividend
  3918   001F26  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  3919   001F2A  0E00               	movlw	0
  3920   001F2C  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  3921   001F2E  0E21               	movlw	33
  3922   001F30  6E1A               	movwf	___awdiv@divisor^0,c
  3923   001F32  ECEB  F023         	call	___awdiv	;wreg free
  3924   001F36  0E02               	movlw	2
  3925   001F38  2418               	addwf	?___awdiv^0,w,c
  3926   001F3A  0101               	movlb	1	; () banked
  3927   001F3C  6FCB               	movwf	runGAME@randomNumber& (0+255),b
  3928   001F3E  0E00               	movlw	0
  3929   001F40  2019               	addwfc	(?___awdiv+1)^0,w,c
  3930   001F42  6FCC               	movwf	(runGAME@randomNumber+1)& (0+255),b
  3931   001F44                     
  3932                           ; BSR set to: 1
  3933                           ;GAME.c: 67:     sprintf(approxText, "%u                ", randomNumber);
  3934   001F44  0EAC               	movlw	low runGAME@approxText
  3935   001F46  0100               	movlb	0	; () banked
  3936   001F48  6FCE               	movwf	sprintf@s& (0+255),b
  3937   001F4A  0E01               	movlw	high runGAME@approxText
  3938   001F4C  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  3939   001F4E  0EBB               	movlw	low STR_29
  3940   001F50  6FD0               	movwf	sprintf@fmt& (0+255),b
  3941   001F52  0EFE               	movlw	high STR_29
  3942   001F54  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  3943   001F56  C1CB  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  3944   001F5A  C1CC  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  3945   001F5E  ECC5  F027         	call	_sprintf	;wreg free
  3946   001F62                     
  3947                           ;GAME.c: 68:     LCD_ShowString((char)1, approxText);
  3948   001F62  0EAC               	movlw	low runGAME@approxText
  3949   001F64  6E07               	movwf	LCD_ShowString@textData^0,c
  3950   001F66  0E01               	movlw	high runGAME@approxText
  3951   001F68  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  3952   001F6A  0E01               	movlw	1
  3953   001F6C  EC4D  F024         	call	_LCD_ShowString
  3954   001F70                     
  3955                           ;GAME.c: 69:     keepStateGAME = 1;
  3956   001F70  0E01               	movlw	1
  3957   001F72  0101               	movlb	1	; () banked
  3958   001F74  6FC6               	movwf	runGAME@keepStateGAME& (0+255),b
  3959                           
  3960                           ;GAME.c: 72:     while(keepStateGAME){
  3961   001F76  EF35  F011         	goto	l662
  3962   001F7A                     l8274:
  3963                           
  3964                           ; BSR set to: 1
  3965                           ;GAME.c: 74:         ADCON0bits.CHS = 4;
  3966   001F7A  50C2               	movf	194,w,c	;volatile
  3967   001F7C  0B83               	andlw	-125
  3968   001F7E  0910               	iorlw	16
  3969   001F80  6EC2               	movwf	194,c	;volatile
  3970   001F82                     
  3971                           ; BSR set to: 1
  3972                           ;GAME.c: 75:         GODONE = 1;
  3973   001F82  82C2               	bsf	4034,1,c	;volatile
  3974   001F84                     l664:
  3975   001F84  B2C2               	btfsc	4034,1,c	;volatile
  3976   001F86  EFC7  F00F         	goto	u10181
  3977   001F8A  EFC9  F00F         	goto	u10180
  3978   001F8E                     u10181:
  3979   001F8E  EFC2  F00F         	goto	l664
  3980   001F92                     u10180:
  3981   001F92                     
  3982                           ;GAME.c: 77:         pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  3983   001F92  50C3               	movf	195,w,c	;volatile
  3984   001F94  CFC4 F0E7          	movff	4036,??_runGAME	;volatile
  3985   001F98  0100               	movlb	0	; () banked
  3986   001F9A  6BE8               	clrf	(??_runGAME+1)& (0+255),b
  3987   001F9C  C0E7  F0E8         	movff	??_runGAME,??_runGAME+1
  3988   001FA0  6BE7               	clrf	??_runGAME& (0+255),b
  3989   001FA2  11E7               	iorwf	??_runGAME& (0+255),w,b
  3990   001FA4  0101               	movlb	1	; () banked
  3991   001FA6  6FC9               	movwf	runGAME@pot1& (0+255),b
  3992   001FA8  0100               	movlb	0	; () banked
  3993   001FAA  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  3994   001FAC  0101               	movlb	1	; () banked
  3995   001FAE  6FCA               	movwf	(runGAME@pot1+1)& (0+255),b
  3996   001FB0                     
  3997                           ; BSR set to: 1
  3998                           ;GAME.c: 79:         sprintf(text, "%hu             ", pot1);
  3999   001FB0  0E9B               	movlw	low runGAME@text
  4000   001FB2  0100               	movlb	0	; () banked
  4001   001FB4  6FCE               	movwf	sprintf@s& (0+255),b
  4002   001FB6  0E01               	movlw	high runGAME@text
  4003   001FB8  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4004   001FBA  0EF3               	movlw	low STR_30
  4005   001FBC  6FD0               	movwf	sprintf@fmt& (0+255),b
  4006   001FBE  0EFE               	movlw	high STR_30
  4007   001FC0  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4008   001FC2  C1C9  F0D2         	movff	runGAME@pot1,?_sprintf+4
  4009   001FC6  C1CA  F0D3         	movff	runGAME@pot1+1,?_sprintf+5
  4010   001FCA  ECC5  F027         	call	_sprintf	;wreg free
  4011   001FCE                     
  4012                           ;GAME.c: 80:         LCD_ShowString((char)2, text);
  4013   001FCE  0E9B               	movlw	low runGAME@text
  4014   001FD0  6E07               	movwf	LCD_ShowString@textData^0,c
  4015   001FD2  0E01               	movlw	high runGAME@text
  4016   001FD4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4017   001FD6  0E02               	movlw	2
  4018   001FD8  EC4D  F024         	call	_LCD_ShowString
  4019                           
  4020                           ;GAME.c: 82:         switch(GAMEround){
  4021   001FDC  EF04  F010         	goto	l8296
  4022   001FE0                     l8284:
  4023                           
  4024                           ; BSR set to: 1
  4025                           ;GAME.c: 84:                 GAMEdivider = 26;
  4026   001FE0  0E1A               	movlw	26
  4027   001FE2  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4028                           
  4029                           ;GAME.c: 85:                 break;
  4030   001FE4  EF18  F010         	goto	l8298
  4031   001FE8                     l8286:
  4032                           
  4033                           ; BSR set to: 1
  4034                           ;GAME.c: 87:                 GAMEdivider = 24;
  4035   001FE8  0E18               	movlw	24
  4036   001FEA  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4037                           
  4038                           ;GAME.c: 88:                 break;
  4039   001FEC  EF18  F010         	goto	l8298
  4040   001FF0                     l8288:
  4041                           
  4042                           ; BSR set to: 1
  4043                           ;GAME.c: 90:                 GAMEdivider = 18;
  4044   001FF0  0E12               	movlw	18
  4045   001FF2  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4046                           
  4047                           ;GAME.c: 91:                 break;
  4048   001FF4  EF18  F010         	goto	l8298
  4049   001FF8                     l8290:
  4050                           
  4051                           ; BSR set to: 1
  4052                           ;GAME.c: 93:                 GAMEdivider = 16;
  4053   001FF8  0E10               	movlw	16
  4054   001FFA  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4055                           
  4056                           ;GAME.c: 94:                 break;
  4057   001FFC  EF18  F010         	goto	l8298
  4058   002000                     l8292:
  4059                           
  4060                           ; BSR set to: 1
  4061                           ;GAME.c: 96:                 GAMEdivider = 15;
  4062   002000  0E0F               	movlw	15
  4063   002002  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4064                           
  4065                           ;GAME.c: 97:                 break;
  4066   002004  EF18  F010         	goto	l8298
  4067   002008                     l8296:
  4068   002008  0101               	movlb	1	; () banked
  4069   00200A  51C7               	movf	runGAME@GAMEround& (0+255),w,b
  4070                           
  4071                           ; Switch size 1, requested type "simple"
  4072                           ; Number of cases is 4, Range of values is 1 to 4
  4073                           ; switch strategies available:
  4074                           ; Name         Instructions Cycles
  4075                           ; simple_byte           13     7 (average)
  4076                           ;	Chosen strategy is simple_byte
  4077   00200C  0A01               	xorlw	1	; case 1
  4078   00200E  B4D8               	btfsc	status,2,c
  4079   002010  EFF0  F00F         	goto	l8284
  4080   002014  0A03               	xorlw	3	; case 2
  4081   002016  B4D8               	btfsc	status,2,c
  4082   002018  EFF4  F00F         	goto	l8286
  4083   00201C  0A01               	xorlw	1	; case 3
  4084   00201E  B4D8               	btfsc	status,2,c
  4085   002020  EFF8  F00F         	goto	l8288
  4086   002024  0A07               	xorlw	7	; case 4
  4087   002026  B4D8               	btfsc	status,2,c
  4088   002028  EFFC  F00F         	goto	l8290
  4089   00202C  EF00  F010         	goto	l8292
  4090   002030                     l8298:
  4091                           
  4092                           ; BSR set to: 1
  4093                           ;GAME.c: 100:         GAMEpart = GAMEtime/GAMEdivider;
  4094   002030  C1C8  F006         	movff	runGAME@GAMEdivider,___lbdiv@divisor
  4095   002034  5123               	movf	_GAMEtime& (0+255),w,b
  4096   002036  ECD1  F026         	call	___lbdiv
  4097   00203A  0101               	movlb	1	; () banked
  4098   00203C  6FC5               	movwf	runGAME@GAMEpart& (0+255),b
  4099                           
  4100                           ;GAME.c: 101:         switch(GAMEpart){
  4101   00203E  EFEE  F010         	goto	l8328
  4102   002042                     l675:
  4103                           
  4104                           ; BSR set to: 1
  4105                           ;GAME.c: 103:                 LATDbits.LD2 = 1;
  4106   002042  848C               	bsf	140,2,c	;volatile
  4107                           
  4108                           ;GAME.c: 104:                 LATDbits.LD3 = 1;
  4109   002044  868C               	bsf	140,3,c	;volatile
  4110                           
  4111                           ;GAME.c: 105:                 LATCbits.LC4 = 1;
  4112   002046  888B               	bsf	139,4,c	;volatile
  4113                           
  4114                           ;GAME.c: 106:                 LATDbits.LD4 = 1;
  4115   002048  888C               	bsf	140,4,c	;volatile
  4116                           
  4117                           ;GAME.c: 107:                 LATDbits.LD5 = 1;
  4118   00204A  8A8C               	bsf	140,5,c	;volatile
  4119                           
  4120                           ;GAME.c: 108:                 LATDbits.LD6 = 1;
  4121   00204C  8C8C               	bsf	140,6,c	;volatile
  4122                           
  4123                           ;GAME.c: 109:                 break;
  4124   00204E  EF11  F011         	goto	l676
  4125   002052                     l677:
  4126                           
  4127                           ; BSR set to: 1
  4128                           ;GAME.c: 111:                 LATDbits.LD2 = 0;
  4129   002052  948C               	bcf	140,2,c	;volatile
  4130                           
  4131                           ;GAME.c: 112:                 LATDbits.LD3 = 1;
  4132   002054  868C               	bsf	140,3,c	;volatile
  4133                           
  4134                           ;GAME.c: 113:                 LATCbits.LC4 = 1;
  4135   002056  888B               	bsf	139,4,c	;volatile
  4136                           
  4137                           ;GAME.c: 114:                 LATDbits.LD4 = 1;
  4138   002058  888C               	bsf	140,4,c	;volatile
  4139                           
  4140                           ;GAME.c: 115:                 LATDbits.LD5 = 1;
  4141   00205A  8A8C               	bsf	140,5,c	;volatile
  4142                           
  4143                           ;GAME.c: 116:                 LATDbits.LD6 = 1;
  4144   00205C  8C8C               	bsf	140,6,c	;volatile
  4145                           
  4146                           ;GAME.c: 117:                 break;
  4147   00205E  EF11  F011         	goto	l676
  4148   002062                     l678:
  4149                           
  4150                           ; BSR set to: 1
  4151                           ;GAME.c: 119:                 LATDbits.LD2 = 0;
  4152   002062  948C               	bcf	140,2,c	;volatile
  4153                           
  4154                           ;GAME.c: 120:                 LATDbits.LD3 = 0;
  4155   002064  968C               	bcf	140,3,c	;volatile
  4156                           
  4157                           ;GAME.c: 121:                 LATCbits.LC4 = 1;
  4158   002066  888B               	bsf	139,4,c	;volatile
  4159                           
  4160                           ;GAME.c: 122:                 LATDbits.LD4 = 1;
  4161   002068  888C               	bsf	140,4,c	;volatile
  4162                           
  4163                           ;GAME.c: 123:                 LATDbits.LD5 = 1;
  4164   00206A  8A8C               	bsf	140,5,c	;volatile
  4165                           
  4166                           ;GAME.c: 124:                 LATDbits.LD6 = 1;
  4167   00206C  8C8C               	bsf	140,6,c	;volatile
  4168                           
  4169                           ;GAME.c: 125:                 break;
  4170   00206E  EF11  F011         	goto	l676
  4171   002072                     l679:
  4172                           
  4173                           ; BSR set to: 1
  4174                           ;GAME.c: 127:                 LATDbits.LD2 = 0;
  4175   002072  948C               	bcf	140,2,c	;volatile
  4176                           
  4177                           ;GAME.c: 128:                 LATDbits.LD3 = 0;
  4178   002074  968C               	bcf	140,3,c	;volatile
  4179                           
  4180                           ;GAME.c: 129:                 LATCbits.LC4 = 0;
  4181   002076  988B               	bcf	139,4,c	;volatile
  4182                           
  4183                           ;GAME.c: 130:                 LATDbits.LD4 = 1;
  4184   002078  888C               	bsf	140,4,c	;volatile
  4185                           
  4186                           ;GAME.c: 131:                 LATDbits.LD5 = 1;
  4187   00207A  8A8C               	bsf	140,5,c	;volatile
  4188                           
  4189                           ;GAME.c: 132:                 LATDbits.LD6 = 1;
  4190   00207C  8C8C               	bsf	140,6,c	;volatile
  4191                           
  4192                           ;GAME.c: 133:                 break;
  4193   00207E  EF11  F011         	goto	l676
  4194   002082                     l680:
  4195                           
  4196                           ; BSR set to: 1
  4197                           ;GAME.c: 135:                 LATDbits.LD2 = 0;
  4198   002082  948C               	bcf	140,2,c	;volatile
  4199                           
  4200                           ;GAME.c: 136:                 LATDbits.LD3 = 0;
  4201   002084  968C               	bcf	140,3,c	;volatile
  4202                           
  4203                           ;GAME.c: 137:                 LATCbits.LC4 = 0;
  4204   002086  988B               	bcf	139,4,c	;volatile
  4205                           
  4206                           ;GAME.c: 138:                 LATDbits.LD4 = 0;
  4207   002088  988C               	bcf	140,4,c	;volatile
  4208                           
  4209                           ;GAME.c: 139:                 LATDbits.LD5 = 1;
  4210   00208A  8A8C               	bsf	140,5,c	;volatile
  4211                           
  4212                           ;GAME.c: 140:                 LATDbits.LD6 = 1;
  4213   00208C  8C8C               	bsf	140,6,c	;volatile
  4214                           
  4215                           ;GAME.c: 141:                 break;
  4216   00208E  EF11  F011         	goto	l676
  4217   002092                     l681:
  4218                           
  4219                           ; BSR set to: 1
  4220                           ;GAME.c: 143:                 LATDbits.LD2 = 0;
  4221   002092  948C               	bcf	140,2,c	;volatile
  4222                           
  4223                           ;GAME.c: 144:                 LATDbits.LD3 = 0;
  4224   002094  968C               	bcf	140,3,c	;volatile
  4225                           
  4226                           ;GAME.c: 145:                 LATCbits.LC4 = 0;
  4227   002096  988B               	bcf	139,4,c	;volatile
  4228                           
  4229                           ;GAME.c: 146:                 LATDbits.LD4 = 0;
  4230   002098  988C               	bcf	140,4,c	;volatile
  4231                           
  4232                           ;GAME.c: 147:                 LATDbits.LD5 = 0;
  4233   00209A  9A8C               	bcf	140,5,c	;volatile
  4234                           
  4235                           ;GAME.c: 148:                 LATDbits.LD6 = 1;
  4236   00209C  8C8C               	bsf	140,6,c	;volatile
  4237                           
  4238                           ;GAME.c: 149:                 break;
  4239   00209E  EF11  F011         	goto	l676
  4240   0020A2                     l682:
  4241                           
  4242                           ; BSR set to: 1
  4243                           ;GAME.c: 151:                 LATDbits.LD2 = 0;
  4244   0020A2  948C               	bcf	140,2,c	;volatile
  4245                           
  4246                           ;GAME.c: 152:                 LATDbits.LD3 = 0;
  4247   0020A4  968C               	bcf	140,3,c	;volatile
  4248                           
  4249                           ;GAME.c: 153:                 LATCbits.LC4 = 0;
  4250   0020A6  988B               	bcf	139,4,c	;volatile
  4251                           
  4252                           ;GAME.c: 154:                 LATDbits.LD4 = 0;
  4253   0020A8  988C               	bcf	140,4,c	;volatile
  4254                           
  4255                           ;GAME.c: 155:                 LATDbits.LD5 = 0;
  4256   0020AA  9A8C               	bcf	140,5,c	;volatile
  4257                           
  4258                           ;GAME.c: 156:                 LATDbits.LD6 = 0;
  4259   0020AC  9C8C               	bcf	140,6,c	;volatile
  4260                           
  4261                           ;GAME.c: 157:                 break;
  4262   0020AE  EF11  F011         	goto	l676
  4263   0020B2                     l8300:
  4264                           
  4265                           ; BSR set to: 1
  4266                           ;GAME.c: 159:                 GAMEtime = 0;
  4267   0020B2  0E00               	movlw	0
  4268   0020B4  6F23               	movwf	_GAMEtime& (0+255),b
  4269   0020B6                     
  4270                           ; BSR set to: 1
  4271                           ;GAME.c: 160:                 if(pot1 >= randomNumber - 2 && pot1 <= randomNumber + 2){
  4272   0020B6  0EFE               	movlw	254
  4273   0020B8  25CB               	addwf	runGAME@randomNumber& (0+255),w,b
  4274   0020BA  0100               	movlb	0	; () banked
  4275   0020BC  6FE7               	movwf	??_runGAME& (0+255),b
  4276   0020BE  0EFF               	movlw	255
  4277   0020C0  0101               	movlb	1	; () banked
  4278   0020C2  21CC               	addwfc	(runGAME@randomNumber+1)& (0+255),w,b
  4279   0020C4  0100               	movlb	0	; () banked
  4280   0020C6  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4281   0020C8  51E7               	movf	??_runGAME& (0+255),w,b
  4282   0020CA  0101               	movlb	1	; () banked
  4283   0020CC  5DC9               	subwf	runGAME@pot1& (0+255),w,b
  4284   0020CE  0100               	movlb	0	; () banked
  4285   0020D0  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  4286   0020D2  0101               	movlb	1	; () banked
  4287   0020D4  59CA               	subwfb	(runGAME@pot1+1)& (0+255),w,b
  4288   0020D6  A0D8               	btfss	status,0,c
  4289   0020D8  EF70  F010         	goto	u10191
  4290   0020DC  EF72  F010         	goto	u10190
  4291   0020E0                     u10191:
  4292   0020E0  EFBA  F010         	goto	l684
  4293   0020E4                     u10190:
  4294   0020E4                     
  4295                           ; BSR set to: 1
  4296   0020E4  0E02               	movlw	2
  4297   0020E6  25CB               	addwf	runGAME@randomNumber& (0+255),w,b
  4298   0020E8  0100               	movlb	0	; () banked
  4299   0020EA  6FE7               	movwf	??_runGAME& (0+255),b
  4300   0020EC  0E00               	movlw	0
  4301   0020EE  0101               	movlb	1	; () banked
  4302   0020F0  21CC               	addwfc	(runGAME@randomNumber+1)& (0+255),w,b
  4303   0020F2  0100               	movlb	0	; () banked
  4304   0020F4  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4305   0020F6  0101               	movlb	1	; () banked
  4306   0020F8  51C9               	movf	runGAME@pot1& (0+255),w,b
  4307   0020FA  0100               	movlb	0	; () banked
  4308   0020FC  5DE7               	subwf	??_runGAME& (0+255),w,b
  4309   0020FE  0101               	movlb	1	; () banked
  4310   002100  51CA               	movf	(runGAME@pot1+1)& (0+255),w,b
  4311   002102  0100               	movlb	0	; () banked
  4312   002104  59E8               	subwfb	(??_runGAME+1)& (0+255),w,b
  4313   002106  A0D8               	btfss	status,0,c
  4314   002108  EF88  F010         	goto	u10201
  4315   00210C  EF8A  F010         	goto	u10200
  4316   002110                     u10201:
  4317   002110  EFBA  F010         	goto	l684
  4318   002114                     u10200:
  4319   002114                     
  4320                           ; BSR set to: 0
  4321                           ;GAME.c: 161:                     GAMEround += 1;
  4322   002114  0101               	movlb	1	; () banked
  4323   002116  2BC7               	incf	runGAME@GAMEround& (0+255),f,b
  4324   002118                     
  4325                           ; BSR set to: 1
  4326                           ;GAME.c: 162:                     randomNumber = (uint16_t)(2 + rand() / ((0x7fff) / (10
      +                          23 - 2 + 1) + 1));
  4327   002118  EC33  F026         	call	_rand	;wreg free
  4328   00211C  C012  F018         	movff	?_rand,___awdiv@dividend
  4329   002120  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  4330   002124  0E00               	movlw	0
  4331   002126  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  4332   002128  0E21               	movlw	33
  4333   00212A  6E1A               	movwf	___awdiv@divisor^0,c
  4334   00212C  ECEB  F023         	call	___awdiv	;wreg free
  4335   002130  0E02               	movlw	2
  4336   002132  2418               	addwf	?___awdiv^0,w,c
  4337   002134  0101               	movlb	1	; () banked
  4338   002136  6FCB               	movwf	runGAME@randomNumber& (0+255),b
  4339   002138  0E00               	movlw	0
  4340   00213A  2019               	addwfc	(?___awdiv+1)^0,w,c
  4341   00213C  6FCC               	movwf	(runGAME@randomNumber+1)& (0+255),b
  4342   00213E                     
  4343                           ; BSR set to: 1
  4344                           ;GAME.c: 163:                     sprintf(approxText, "%u                ", randomNumber
      +                          );
  4345   00213E  0EAC               	movlw	low runGAME@approxText
  4346   002140  0100               	movlb	0	; () banked
  4347   002142  6FCE               	movwf	sprintf@s& (0+255),b
  4348   002144  0E01               	movlw	high runGAME@approxText
  4349   002146  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4350   002148  0EBB               	movlw	low STR_29
  4351   00214A  6FD0               	movwf	sprintf@fmt& (0+255),b
  4352   00214C  0EFE               	movlw	high STR_29
  4353   00214E  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4354   002150  C1CB  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  4355   002154  C1CC  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  4356   002158  ECC5  F027         	call	_sprintf	;wreg free
  4357   00215C                     
  4358                           ;GAME.c: 164:                     keepStateGAME = 1;
  4359   00215C  0E01               	movlw	1
  4360   00215E  0101               	movlb	1	; () banked
  4361   002160  6FC6               	movwf	runGAME@keepStateGAME& (0+255),b
  4362   002162                     
  4363                           ; BSR set to: 1
  4364                           ;GAME.c: 165:                     LCD_ShowString((char)1, approxText);
  4365   002162  0EAC               	movlw	low runGAME@approxText
  4366   002164  6E07               	movwf	LCD_ShowString@textData^0,c
  4367   002166  0E01               	movlw	high runGAME@approxText
  4368   002168  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4369   00216A  0E01               	movlw	1
  4370   00216C  EC4D  F024         	call	_LCD_ShowString
  4371                           
  4372                           ;GAME.c: 166:                 } else {
  4373   002170  EF11  F011         	goto	l676
  4374   002174                     l684:
  4375                           
  4376                           ;GAME.c: 167:                     ADCON0bits.ADON = 0;
  4377   002174  90C2               	bcf	194,0,c	;volatile
  4378   002176                     
  4379                           ;GAME.c: 168:                     sprintf(approxText, "Skore: %u        ", GAMEround - 1
      +                          );
  4380   002176  0EAC               	movlw	low runGAME@approxText
  4381   002178  0100               	movlb	0	; () banked
  4382   00217A  6FCE               	movwf	sprintf@s& (0+255),b
  4383   00217C  0E01               	movlw	high runGAME@approxText
  4384   00217E  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4385   002180  0EE1               	movlw	low STR_32
  4386   002182  6FD0               	movwf	sprintf@fmt& (0+255),b
  4387   002184  0EFE               	movlw	high STR_32
  4388   002186  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4389   002188  0EFF               	movlw	255
  4390   00218A  0101               	movlb	1	; () banked
  4391   00218C  25C7               	addwf	runGAME@GAMEround& (0+255),w,b
  4392   00218E  0100               	movlb	0	; () banked
  4393   002190  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  4394   002192  6BD3               	clrf	(?_sprintf+5)& (0+255),b
  4395   002194  0EFF               	movlw	255
  4396   002196  23D3               	addwfc	(?_sprintf+5)& (0+255),f,b
  4397   002198  ECC5  F027         	call	_sprintf	;wreg free
  4398   00219C                     
  4399                           ;GAME.c: 169:                     LCD_ShowString((char)1, "GAME OVER       ");
  4400   00219C  0E04               	movlw	low STR_33
  4401   00219E  6E07               	movwf	LCD_ShowString@textData^0,c
  4402   0021A0  0EFF               	movlw	high STR_33
  4403   0021A2  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4404   0021A4  0E01               	movlw	1
  4405   0021A6  EC4D  F024         	call	_LCD_ShowString
  4406   0021AA                     
  4407                           ;GAME.c: 170:                     LCD_ShowString((char)2, approxText);
  4408   0021AA  0EAC               	movlw	low runGAME@approxText
  4409   0021AC  6E07               	movwf	LCD_ShowString@textData^0,c
  4410   0021AE  0E01               	movlw	high runGAME@approxText
  4411   0021B0  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4412   0021B2  0E02               	movlw	2
  4413   0021B4  EC4D  F024         	call	_LCD_ShowString
  4414   0021B8                     
  4415                           ;GAME.c: 171:                     keepStateGAME = 0;
  4416   0021B8  0E00               	movlw	0
  4417   0021BA  0101               	movlb	1	; () banked
  4418   0021BC  6FC6               	movwf	runGAME@keepStateGAME& (0+255),b
  4419   0021BE                     
  4420                           ; BSR set to: 1
  4421                           ;GAME.c: 172:                     _delay((unsigned long)((2000)*(32E6/4000.0)));
  4422   0021BE  0E52               	movlw	82
  4423   0021C0  0100               	movlb	0	; () banked
  4424   0021C2  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4425   0021C4  0E2B               	movlw	43
  4426   0021C6  6FE7               	movwf	??_runGAME& (0+255),b
  4427   0021C8  0E00               	movlw	0
  4428   0021CA                     u10467:
  4429   0021CA  2EE8               	decfsz	wreg,f,c
  4430   0021CC  D7FE               	bra	u10467
  4431   0021CE  2FE7               	decfsz	??_runGAME& (0+255),f,b
  4432   0021D0  D7FC               	bra	u10467
  4433   0021D2  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  4434   0021D4  D7FA               	bra	u10467
  4435   0021D6  0000               	nop	
  4436   0021D8  EF11  F011         	goto	l676
  4437   0021DC                     l8328:
  4438                           
  4439                           ; BSR set to: 1
  4440   0021DC  51C5               	movf	runGAME@GAMEpart& (0+255),w,b
  4441                           
  4442                           ; Switch size 1, requested type "simple"
  4443                           ; Number of cases is 8, Range of values is 0 to 7
  4444                           ; switch strategies available:
  4445                           ; Name         Instructions Cycles
  4446                           ; simple_byte           25    13 (average)
  4447                           ;	Chosen strategy is simple_byte
  4448   0021DE  0A00               	xorlw	0	; case 0
  4449   0021E0  B4D8               	btfsc	status,2,c
  4450   0021E2  EF21  F010         	goto	l675
  4451   0021E6  0A01               	xorlw	1	; case 1
  4452   0021E8  B4D8               	btfsc	status,2,c
  4453   0021EA  EF29  F010         	goto	l677
  4454   0021EE  0A03               	xorlw	3	; case 2
  4455   0021F0  B4D8               	btfsc	status,2,c
  4456   0021F2  EF31  F010         	goto	l678
  4457   0021F6  0A01               	xorlw	1	; case 3
  4458   0021F8  B4D8               	btfsc	status,2,c
  4459   0021FA  EF39  F010         	goto	l679
  4460   0021FE  0A07               	xorlw	7	; case 4
  4461   002200  B4D8               	btfsc	status,2,c
  4462   002202  EF41  F010         	goto	l680
  4463   002206  0A01               	xorlw	1	; case 5
  4464   002208  B4D8               	btfsc	status,2,c
  4465   00220A  EF49  F010         	goto	l681
  4466   00220E  0A03               	xorlw	3	; case 6
  4467   002210  B4D8               	btfsc	status,2,c
  4468   002212  EF51  F010         	goto	l682
  4469   002216  0A01               	xorlw	1	; case 7
  4470   002218  B4D8               	btfsc	status,2,c
  4471   00221A  EF59  F010         	goto	l8300
  4472   00221E  EF11  F011         	goto	l676
  4473   002222                     l676:
  4474                           
  4475                           ;GAME.c: 177:         if(PORTAbits.RA2){
  4476   002222  A480               	btfss	128,2,c	;volatile
  4477   002224  EF16  F011         	goto	u10211
  4478   002228  EF18  F011         	goto	u10210
  4479   00222C                     u10211:
  4480   00222C  EF35  F011         	goto	l662
  4481   002230                     u10210:
  4482   002230                     
  4483                           ;GAME.c: 178:             _delay((unsigned long)((50)*(32E6/4000.0)));
  4484   002230  0E03               	movlw	3
  4485   002232  0100               	movlb	0	; () banked
  4486   002234  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4487   002236  0E08               	movlw	8
  4488   002238  6FE7               	movwf	??_runGAME& (0+255),b
  4489   00223A  0E77               	movlw	119
  4490   00223C                     u10477:
  4491   00223C  2EE8               	decfsz	wreg,f,c
  4492   00223E  D7FE               	bra	u10477
  4493   002240  2FE7               	decfsz	??_runGAME& (0+255),f,b
  4494   002242  D7FC               	bra	u10477
  4495   002244  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  4496   002246  D7FA               	bra	u10477
  4497   002248                     
  4498                           ;GAME.c: 179:             if(PORTAbits.RA2){
  4499   002248  A480               	btfss	128,2,c	;volatile
  4500   00224A  EF29  F011         	goto	u10221
  4501   00224E  EF2B  F011         	goto	u10220
  4502   002252                     u10221:
  4503   002252  EF35  F011         	goto	l662
  4504   002256                     u10220:
  4505   002256                     l688:
  4506   002256  B480               	btfsc	128,2,c	;volatile
  4507   002258  EF30  F011         	goto	u10231
  4508   00225C  EF32  F011         	goto	u10230
  4509   002260                     u10231:
  4510   002260  EF2B  F011         	goto	l688
  4511   002264                     u10230:
  4512   002264                     
  4513                           ;GAME.c: 181:                 keepStateGAME = 0;
  4514   002264  0E00               	movlw	0
  4515   002266  0101               	movlb	1	; () banked
  4516   002268  6FC6               	movwf	runGAME@keepStateGAME& (0+255),b
  4517   00226A                     l662:
  4518                           
  4519                           ;GAME.c: 72:     while(keepStateGAME){
  4520   00226A  0101               	movlb	1	; () banked
  4521   00226C  51C6               	movf	runGAME@keepStateGAME& (0+255),w,b
  4522   00226E  A4D8               	btfss	status,2,c
  4523   002270  EF3C  F011         	goto	u10241
  4524   002274  EF3E  F011         	goto	u10240
  4525   002278                     u10241:
  4526   002278  EFBD  F00F         	goto	l8274
  4527   00227C                     u10240:
  4528   00227C                     
  4529                           ; BSR set to: 1
  4530                           ;GAME.c: 187:     LATDbits.LD2 = 1;
  4531   00227C  848C               	bsf	140,2,c	;volatile
  4532                           
  4533                           ;GAME.c: 188:     LATDbits.LD3 = 1;
  4534   00227E  868C               	bsf	140,3,c	;volatile
  4535                           
  4536                           ;GAME.c: 189:     LATCbits.LC4 = 1;
  4537   002280  888B               	bsf	139,4,c	;volatile
  4538                           
  4539                           ;GAME.c: 190:     LATDbits.LD4 = 1;
  4540   002282  888C               	bsf	140,4,c	;volatile
  4541                           
  4542                           ;GAME.c: 191:     LATDbits.LD5 = 1;
  4543   002284  8A8C               	bsf	140,5,c	;volatile
  4544                           
  4545                           ;GAME.c: 192:     LATDbits.LD6 = 1;
  4546   002286  8C8C               	bsf	140,6,c	;volatile
  4547                           
  4548                           ;GAME.c: 193:     TMR1ON = 0;
  4549   002288  90CD               	bcf	4045,0,c	;volatile
  4550                           
  4551                           ;GAME.c: 194:     TMR1IE = 0;
  4552   00228A  909D               	bcf	3997,0,c	;volatile
  4553   00228C                     
  4554                           ; BSR set to: 1
  4555                           ;GAME.c: 195:     GAMEIE = 0;
  4556   00228C  0E00               	movlw	0
  4557   00228E  6F24               	movwf	_GAMEIE& (0+255),b
  4558   002290                     
  4559                           ; BSR set to: 1
  4560   002290  0012               	return		;funcret
  4561   002292                     __end_of_runGAME:
  4562                           	callstack 0
  4563                           
  4564 ;; *************** function _rand *****************
  4565 ;; Defined at:
  4566 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\rand.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;		None
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;		None
  4571 ;; Return value:  Size  Location     Type
  4572 ;;                  2   17[COMRAM] int 
  4573 ;; Registers used:
  4574 ;;		wreg, status,2, status,0, cstack
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;Total ram usage:        6 bytes
  4585 ;; Hardware stack levels used: 1
  4586 ;; Hardware stack levels required when called: 2
  4587 ;; This function calls:
  4588 ;;		___lmul
  4589 ;; This function is called by:
  4590 ;;		_runGAME
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594                           	psect	text13
  4595   004C66                     __ptext13:
  4596                           	callstack 0
  4597   004C66                     _rand:
  4598                           	callstack 27
  4599   004C66  C197  F006         	movff	_seed,___lmul@multiplier
  4600   004C6A  C198  F007         	movff	_seed+1,___lmul@multiplier+1
  4601   004C6E  C199  F008         	movff	_seed+2,___lmul@multiplier+2
  4602   004C72  C19A  F009         	movff	_seed+3,___lmul@multiplier+3
  4603   004C76  0E2D               	movlw	45
  4604   004C78  6E0A               	movwf	___lmul@multiplicand^0,c
  4605   004C7A  0E7F               	movlw	127
  4606   004C7C  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  4607   004C7E  0E95               	movlw	149
  4608   004C80  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  4609   004C82  0E4C               	movlw	76
  4610   004C84  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  4611   004C86  EC6A  F026         	call	___lmul	;wreg free
  4612   004C8A  0E01               	movlw	1
  4613   004C8C  2406               	addwf	?___lmul^0,w,c
  4614   004C8E  0101               	movlb	1	; () banked
  4615   004C90  6F97               	movwf	_seed& (0+255),b
  4616   004C92  0E00               	movlw	0
  4617   004C94  2007               	addwfc	(?___lmul+1)^0,w,c
  4618   004C96  6F98               	movwf	(_seed+1)& (0+255),b
  4619   004C98  0E00               	movlw	0
  4620   004C9A  2008               	addwfc	(?___lmul+2)^0,w,c
  4621   004C9C  6F99               	movwf	(_seed+2)& (0+255),b
  4622   004C9E  0E00               	movlw	0
  4623   004CA0  2009               	addwfc	(?___lmul+3)^0,w,c
  4624   004CA2  6F9A               	movwf	(_seed+3)& (0+255),b
  4625   004CA4                     
  4626                           ; BSR set to: 1
  4627   004CA4  C197  F014         	movff	_seed,??_rand
  4628   004CA8  C198  F015         	movff	_seed+1,??_rand+1
  4629   004CAC  C199  F016         	movff	_seed+2,??_rand+2
  4630   004CB0  C19A  F017         	movff	_seed+3,??_rand+3
  4631   004CB4  0E12               	movlw	18
  4632   004CB6  EF62  F026         	goto	u9660
  4633   004CBA                     u9665:
  4634   004CBA  90D8               	bcf	status,0,c
  4635   004CBC  3217               	rrcf	(??_rand+3)^0,f,c
  4636   004CBE  3216               	rrcf	(??_rand+2)^0,f,c
  4637   004CC0  3215               	rrcf	(??_rand+1)^0,f,c
  4638   004CC2  3214               	rrcf	??_rand^0,f,c
  4639   004CC4                     u9660:
  4640   004CC4  2EE8               	decfsz	wreg,f,c
  4641   004CC6  EF5D  F026         	goto	u9665
  4642   004CCA  C014  F012         	movff	??_rand,?_rand
  4643   004CCE  C015  F013         	movff	??_rand+1,?_rand+1
  4644   004CD2                     
  4645                           ; BSR set to: 1
  4646   004CD2  0012               	return		;funcret
  4647   004CD4                     __end_of_rand:
  4648                           	callstack 0
  4649                           
  4650 ;; *************** function ___lmul *****************
  4651 ;; Defined at:
  4652 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul32.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;  multiplier      4    5[COMRAM] unsigned long 
  4655 ;;  multiplicand    4    9[COMRAM] unsigned long 
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;  product         4   13[COMRAM] unsigned long 
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  4    5[COMRAM] unsigned long 
  4660 ;; Registers used:
  4661 ;;		wreg, status,2, status,0
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4667 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4668 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;Total ram usage:       12 bytes
  4672 ;; Hardware stack levels used: 1
  4673 ;; Hardware stack levels required when called: 1
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_rand
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text14
  4682   004CD4                     __ptext14:
  4683                           	callstack 0
  4684   004CD4                     ___lmul:
  4685                           	callstack 27
  4686   004CD4  0E00               	movlw	0
  4687   004CD6  6E0E               	movwf	___lmul@product^0,c
  4688   004CD8  0E00               	movlw	0
  4689   004CDA  6E0F               	movwf	(___lmul@product+1)^0,c
  4690   004CDC  0E00               	movlw	0
  4691   004CDE  6E10               	movwf	(___lmul@product+2)^0,c
  4692   004CE0  0E00               	movlw	0
  4693   004CE2  6E11               	movwf	(___lmul@product+3)^0,c
  4694   004CE4                     l7640:
  4695   004CE4  A006               	btfss	___lmul@multiplier^0,0,c
  4696   004CE6  EF77  F026         	goto	u9281
  4697   004CEA  EF79  F026         	goto	u9280
  4698   004CEE                     u9281:
  4699   004CEE  EF81  F026         	goto	l7644
  4700   004CF2                     u9280:
  4701   004CF2  500A               	movf	___lmul@multiplicand^0,w,c
  4702   004CF4  260E               	addwf	___lmul@product^0,f,c
  4703   004CF6  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  4704   004CF8  220F               	addwfc	(___lmul@product+1)^0,f,c
  4705   004CFA  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  4706   004CFC  2210               	addwfc	(___lmul@product+2)^0,f,c
  4707   004CFE  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  4708   004D00  2211               	addwfc	(___lmul@product+3)^0,f,c
  4709   004D02                     l7644:
  4710   004D02  90D8               	bcf	status,0,c
  4711   004D04  360A               	rlcf	___lmul@multiplicand^0,f,c
  4712   004D06  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4713   004D08  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4714   004D0A  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4715   004D0C  90D8               	bcf	status,0,c
  4716   004D0E  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  4717   004D10  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  4718   004D12  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  4719   004D14  3206               	rrcf	___lmul@multiplier^0,f,c
  4720   004D16  5006               	movf	___lmul@multiplier^0,w,c
  4721   004D18  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  4722   004D1A  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  4723   004D1C  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  4724   004D1E  A4D8               	btfss	status,2,c
  4725   004D20  EF94  F026         	goto	u9291
  4726   004D24  EF96  F026         	goto	u9290
  4727   004D28                     u9291:
  4728   004D28  EF72  F026         	goto	l7640
  4729   004D2C                     u9290:
  4730   004D2C  C00E  F006         	movff	___lmul@product,?___lmul
  4731   004D30  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  4732   004D34  C010  F008         	movff	___lmul@product+2,?___lmul+2
  4733   004D38  C011  F009         	movff	___lmul@product+3,?___lmul+3
  4734   004D3C  0012               	return		;funcret
  4735   004D3E                     __end_of___lmul:
  4736                           	callstack 0
  4737                           
  4738 ;; *************** function ___lbdiv *****************
  4739 ;; Defined at:
  4740 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lbdiv.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  dividend        1    wreg     unsigned char 
  4743 ;;  divisor         1    5[COMRAM] unsigned char 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  dividend        1    6[COMRAM] unsigned char 
  4746 ;;  quotient        1    8[COMRAM] unsigned char 
  4747 ;;  counter         1    7[COMRAM] unsigned char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      unsigned char 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4757 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;Total ram usage:        4 bytes
  4762 ;; Hardware stack levels used: 1
  4763 ;; Hardware stack levels required when called: 1
  4764 ;; This function calls:
  4765 ;;		Nothing
  4766 ;; This function is called by:
  4767 ;;		_runGAME
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           	psect	text15
  4772   004DA2                     __ptext15:
  4773                           	callstack 0
  4774   004DA2                     ___lbdiv:
  4775                           	callstack 28
  4776                           
  4777                           ;incstack = 0
  4778                           ;___lbdiv@dividend stored from wreg
  4779   004DA2  6E07               	movwf	___lbdiv@dividend^0,c
  4780   004DA4  0E00               	movlw	0
  4781   004DA6  6E09               	movwf	___lbdiv@quotient^0,c
  4782   004DA8  5006               	movf	___lbdiv@divisor^0,w,c
  4783   004DAA  B4D8               	btfsc	status,2,c
  4784   004DAC  EFDA  F026         	goto	u9671
  4785   004DB0  EFDC  F026         	goto	u9670
  4786   004DB4                     u9671:
  4787   004DB4  EFFD  F026         	goto	l7922
  4788   004DB8                     u9670:
  4789   004DB8  0E01               	movlw	1
  4790   004DBA  6E08               	movwf	___lbdiv@counter^0,c
  4791   004DBC  EFE3  F026         	goto	l7910
  4792   004DC0                     l7906:
  4793   004DC0  90D8               	bcf	status,0,c
  4794   004DC2  3606               	rlcf	___lbdiv@divisor^0,f,c
  4795   004DC4  2A08               	incf	___lbdiv@counter^0,f,c
  4796   004DC6                     l7910:
  4797   004DC6  AE06               	btfss	___lbdiv@divisor^0,7,c
  4798   004DC8  EFE8  F026         	goto	u9681
  4799   004DCC  EFEA  F026         	goto	u9680
  4800   004DD0                     u9681:
  4801   004DD0  EFE0  F026         	goto	l7906
  4802   004DD4                     u9680:
  4803   004DD4                     l7912:
  4804   004DD4  90D8               	bcf	status,0,c
  4805   004DD6  3609               	rlcf	___lbdiv@quotient^0,f,c
  4806   004DD8  5006               	movf	___lbdiv@divisor^0,w,c
  4807   004DDA  5C07               	subwf	___lbdiv@dividend^0,w,c
  4808   004DDC  A0D8               	btfss	status,0,c
  4809   004DDE  EFF3  F026         	goto	u9691
  4810   004DE2  EFF5  F026         	goto	u9690
  4811   004DE6                     u9691:
  4812   004DE6  EFF8  F026         	goto	l7918
  4813   004DEA                     u9690:
  4814   004DEA  5006               	movf	___lbdiv@divisor^0,w,c
  4815   004DEC  5E07               	subwf	___lbdiv@dividend^0,f,c
  4816   004DEE  8009               	bsf	___lbdiv@quotient^0,0,c
  4817   004DF0                     l7918:
  4818   004DF0  90D8               	bcf	status,0,c
  4819   004DF2  3206               	rrcf	___lbdiv@divisor^0,f,c
  4820   004DF4  2E08               	decfsz	___lbdiv@counter^0,f,c
  4821   004DF6  EFEA  F026         	goto	l7912
  4822   004DFA                     l7922:
  4823   004DFA  5009               	movf	___lbdiv@quotient^0,w,c
  4824   004DFC  0012               	return		;funcret
  4825   004DFE                     __end_of___lbdiv:
  4826                           	callstack 0
  4827                           
  4828 ;; *************** function _runDAC *****************
  4829 ;; Defined at:
  4830 ;;		line 10 in file "DAC.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;		None
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  DACindex        1  125[BANK0 ] unsigned char 
  4835 ;;  selectModeDA    1  124[BANK0 ] unsigned char 
  4836 ;;  keepState       1  123[BANK0 ] unsigned char 
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4847 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4848 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4849 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4850 ;;Total ram usage:       12 bytes
  4851 ;; Hardware stack levels used: 1
  4852 ;; Hardware stack levels required when called: 9
  4853 ;; This function calls:
  4854 ;;		_SPI_write
  4855 ;;		___fladd
  4856 ;;		___fldiv
  4857 ;;		___flmul
  4858 ;;		___fltol
  4859 ;;		___xxtofl
  4860 ;;		_printf
  4861 ;;		_sinf
  4862 ;; This function is called by:
  4863 ;;		_main
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text16
  4868   002CFA                     __ptext16:
  4869                           	callstack 0
  4870   002CFA                     _runDAC:
  4871                           	callstack 21
  4872   002CFA                     
  4873                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  4874   002CFA  8094               	bsf	148,0,c	;volatile
  4875                           
  4876                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  4877   002CFC  8892               	bsf	146,4,c	;volatile
  4878                           
  4879                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  4880   002CFE  8692               	bsf	146,3,c	;volatile
  4881                           
  4882                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  4883   002D00  8492               	bsf	146,2,c	;volatile
  4884                           
  4885                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  4886   002D02  010F               	movlb	15	; () banked
  4887   002D04  9738               	bcf	56,3,b	;volatile
  4888                           
  4889                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  4890   002D06  9538               	bcf	56,2,b	;volatile
  4891                           
  4892                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  4893   002D08  9693               	bcf	147,3,c	;volatile
  4894                           
  4895                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  4896   002D0A  9694               	bcf	148,3,c	;volatile
  4897                           
  4898                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  4899   002D0C  9A94               	bcf	148,5,c	;volatile
  4900   002D0E                     
  4901                           ; BSR set to: 15
  4902                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  4903   002D0E  50C6               	movf	198,w,c	;volatile
  4904   002D10  0BF0               	andlw	-16
  4905   002D12  0902               	iorlw	2
  4906   002D14  6EC6               	movwf	198,c	;volatile
  4907   002D16                     
  4908                           ; BSR set to: 15
  4909                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  4910   002D16  98C6               	bcf	198,4,c	;volatile
  4911   002D18                     
  4912                           ; BSR set to: 15
  4913                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  4914   002D18  8CC7               	bsf	199,6,c	;volatile
  4915   002D1A                     
  4916                           ; BSR set to: 15
  4917                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  4918   002D1A  8AC6               	bsf	198,5,c	;volatile
  4919   002D1C                     
  4920                           ; BSR set to: 15
  4921                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  4922   002D1C  8139               	bsf	57,0,b	;volatile
  4923   002D1E                     
  4924                           ; BSR set to: 15
  4925                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  4926   002D1E  9EC0               	bcf	192,7,c	;volatile
  4927                           
  4928                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  4929   002D20  50C0               	movf	192,w,c	;volatile
  4930   002D22  0BF8               	andlw	-8
  4931   002D24  0906               	iorlw	6
  4932   002D26  6EC0               	movwf	192,c	;volatile
  4933                           
  4934                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  4935   002D28  50C0               	movf	192,w,c	;volatile
  4936   002D2A  0BC7               	andlw	-57
  4937   002D2C  0930               	iorlw	48
  4938   002D2E  6EC0               	movwf	192,c	;volatile
  4939   002D30                     
  4940                           ; BSR set to: 15
  4941                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  4942   002D30  80C2               	bsf	194,0,c	;volatile
  4943                           
  4944                           ;DAC.c: 38:     SPBRG1 = 25;
  4945   002D32  0E19               	movlw	25
  4946   002D34  6EAF               	movwf	175,c	;volatile
  4947   002D36                     
  4948                           ; BSR set to: 15
  4949                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  4950   002D36  8EAB               	bsf	171,7,c	;volatile
  4951   002D38                     
  4952                           ; BSR set to: 15
  4953                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  4954   002D38  98AC               	bcf	172,4,c	;volatile
  4955   002D3A                     
  4956                           ; BSR set to: 15
  4957                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  4958   002D3A  8AAC               	bsf	172,5,c	;volatile
  4959   002D3C                     
  4960                           ; BSR set to: 15
  4961                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  4962   002D3C  88AB               	bsf	171,4,c	;volatile
  4963   002D3E                     
  4964                           ; BSR set to: 15
  4965                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  4966   002D3E  868A               	bsf	138,3,c	;volatile
  4967                           
  4968                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  4969   002D40  50C2               	movf	194,w,c	;volatile
  4970   002D42  0B83               	andlw	-125
  4971   002D44  0930               	iorlw	48
  4972   002D46  6EC2               	movwf	194,c	;volatile
  4973                           
  4974                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  4975   002D48  0E01               	movlw	1
  4976   002D4A  0100               	movlb	0	; () banked
  4977   002D4C  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  4978                           
  4979                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  4980   002D4E  0E01               	movlw	1
  4981   002D50  6FDB               	movwf	runDAC@keepState& (0+255),b
  4982                           
  4983                           ;DAC.c: 52:     uint8_t DACindex = 0;
  4984   002D52  0E00               	movlw	0
  4985   002D54  6FDD               	movwf	runDAC@DACindex& (0+255),b
  4986                           
  4987                           ;DAC.c: 54:     while(keepState){
  4988   002D56  EFE7  F017         	goto	l8228
  4989   002D5A                     l8186:
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;DAC.c: 57:                 if(DACindex<255/2){
  4993   002D5A  0E7F               	movlw	127
  4994   002D5C  61DD               	cpfslt	runDAC@DACindex& (0+255),b
  4995   002D5E  EFB3  F016         	goto	u10081
  4996   002D62  EFB5  F016         	goto	u10080
  4997   002D66                     u10081:
  4998   002D66  EFDD  F016         	goto	l8190
  4999   002D6A                     u10080:
  5000   002D6A                     
  5001                           ; BSR set to: 0
  5002                           ;DAC.c: 58:                     SPI_write((uint8_t)(1.9*DACindex));
  5003   002D6A  0E33               	movlw	51
  5004   002D6C  6E18               	movwf	___flmul@a^0,c
  5005   002D6E  0E33               	movlw	51
  5006   002D70  6E19               	movwf	(___flmul@a+1)^0,c
  5007   002D72  0EF3               	movlw	243
  5008   002D74  6E1A               	movwf	(___flmul@a+2)^0,c
  5009   002D76  0E3F               	movlw	63
  5010   002D78  6E1B               	movwf	(___flmul@a+3)^0,c
  5011   002D7A  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5012   002D7C  6E06               	movwf	___xxtofl@val^0,c
  5013   002D7E  6A07               	clrf	(___xxtofl@val+1)^0,c
  5014   002D80  6A08               	clrf	(___xxtofl@val+2)^0,c
  5015   002D82  6A09               	clrf	(___xxtofl@val+3)^0,c
  5016   002D84  0E01               	movlw	1
  5017   002D86  EC1D  F01C         	call	___xxtofl
  5018   002D8A  C006  F014         	movff	?___xxtofl,___flmul@b
  5019   002D8E  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5020   002D92  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5021   002D96  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5022   002D9A  EC3A  F00D         	call	___flmul	;wreg free
  5023   002D9E  C014  F064         	movff	?___flmul,___fltol@f1
  5024   002DA2  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  5025   002DA6  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  5026   002DAA  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  5027   002DAE  EC1C  F021         	call	___fltol	;wreg free
  5028   002DB2  0100               	movlb	0	; () banked
  5029   002DB4  5164               	movf	?___fltol& (0+255),w,b
  5030   002DB6  EC0A  F028         	call	_SPI_write
  5031   002DBA                     l8190:
  5032                           
  5033                           ;DAC.c: 60:                 if(DACindex>=255/2){
  5034   002DBA  0E7E               	movlw	126
  5035   002DBC  0100               	movlb	0	; () banked
  5036   002DBE  65DD               	cpfsgt	runDAC@DACindex& (0+255),b
  5037   002DC0  EFE4  F016         	goto	u10091
  5038   002DC4  EFE6  F016         	goto	u10090
  5039   002DC8                     u10091:
  5040   002DC8  EFA2  F017         	goto	l231
  5041   002DCC                     u10090:
  5042   002DCC                     
  5043                           ; BSR set to: 0
  5044                           ;DAC.c: 61:                     SPI_write((uint8_t)(1.9*(255-DACindex)));
  5045   002DCC  0E33               	movlw	51
  5046   002DCE  6E18               	movwf	___flmul@a^0,c
  5047   002DD0  0E33               	movlw	51
  5048   002DD2  6E19               	movwf	(___flmul@a+1)^0,c
  5049   002DD4  0EF3               	movlw	243
  5050   002DD6  6E1A               	movwf	(___flmul@a+2)^0,c
  5051   002DD8  0E3F               	movlw	63
  5052   002DDA  6E1B               	movwf	(___flmul@a+3)^0,c
  5053   002DDC  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5054   002DDE  0AFF               	xorlw	255
  5055   002DE0  6FD2               	movwf	??_runDAC& (0+255),b
  5056   002DE2  51D2               	movf	??_runDAC& (0+255),w,b
  5057   002DE4  6E06               	movwf	___xxtofl@val^0,c
  5058   002DE6  6A07               	clrf	(___xxtofl@val+1)^0,c
  5059   002DE8  6A08               	clrf	(___xxtofl@val+2)^0,c
  5060   002DEA  6A09               	clrf	(___xxtofl@val+3)^0,c
  5061   002DEC  0E01               	movlw	1
  5062   002DEE  EC1D  F01C         	call	___xxtofl
  5063   002DF2  C006  F014         	movff	?___xxtofl,___flmul@b
  5064   002DF6  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5065   002DFA  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5066   002DFE  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5067   002E02  EC3A  F00D         	call	___flmul	;wreg free
  5068   002E06  C014  F064         	movff	?___flmul,___fltol@f1
  5069   002E0A  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  5070   002E0E  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  5071   002E12  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  5072   002E16  EC1C  F021         	call	___fltol	;wreg free
  5073   002E1A  0100               	movlb	0	; () banked
  5074   002E1C  5164               	movf	?___fltol& (0+255),w,b
  5075   002E1E  EC0A  F028         	call	_SPI_write
  5076   002E22  EFA2  F017         	goto	l231
  5077   002E26                     l8194:
  5078                           
  5079                           ; BSR set to: 0
  5080                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5081   002E26  0E00               	movlw	0
  5082   002E28  6E31               	movwf	___fldiv@a^0,c
  5083   002E2A  0E00               	movlw	0
  5084   002E2C  6E32               	movwf	(___fldiv@a+1)^0,c
  5085   002E2E  0E7F               	movlw	127
  5086   002E30  6E33               	movwf	(___fldiv@a+2)^0,c
  5087   002E32  0E43               	movlw	67
  5088   002E34  6E34               	movwf	(___fldiv@a+3)^0,c
  5089   002E36  0EC3               	movlw	195
  5090   002E38  6E18               	movwf	___flmul@a^0,c
  5091   002E3A  0EF5               	movlw	245
  5092   002E3C  6E19               	movwf	(___flmul@a+1)^0,c
  5093   002E3E  0EC8               	movlw	200
  5094   002E40  6E1A               	movwf	(___flmul@a+2)^0,c
  5095   002E42  0E40               	movlw	64
  5096   002E44  6E1B               	movwf	(___flmul@a+3)^0,c
  5097   002E46  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5098   002E48  6E06               	movwf	___xxtofl@val^0,c
  5099   002E4A  6A07               	clrf	(___xxtofl@val+1)^0,c
  5100   002E4C  6A08               	clrf	(___xxtofl@val+2)^0,c
  5101   002E4E  6A09               	clrf	(___xxtofl@val+3)^0,c
  5102   002E50  0E01               	movlw	1
  5103   002E52  EC1D  F01C         	call	___xxtofl
  5104   002E56  C006  F014         	movff	?___xxtofl,___flmul@b
  5105   002E5A  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5106   002E5E  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5107   002E62  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5108   002E66  EC3A  F00D         	call	___flmul	;wreg free
  5109   002E6A  C014  F02D         	movff	?___flmul,___fldiv@b
  5110   002E6E  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  5111   002E72  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  5112   002E76  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  5113   002E7A  EC2A  F013         	call	___fldiv	;wreg free
  5114   002E7E  C02D  F0D3         	movff	?___fldiv,_runDAC$4524
  5115   002E82  C02E  F0D4         	movff	?___fldiv+1,_runDAC$4524+1
  5116   002E86  C02F  F0D5         	movff	?___fldiv+2,_runDAC$4524+2
  5117   002E8A  C030  F0D6         	movff	?___fldiv+3,_runDAC$4524+3
  5118   002E8E                     
  5119                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5120   002E8E  C0D3  F0A4         	movff	_runDAC$4524,sinf@x
  5121   002E92  C0D4  F0A5         	movff	_runDAC$4524+1,sinf@x+1
  5122   002E96  C0D5  F0A6         	movff	_runDAC$4524+2,sinf@x+2
  5123   002E9A  C0D6  F0A7         	movff	_runDAC$4524+3,sinf@x+3
  5124   002E9E  EC54  F008         	call	_sinf	;wreg free
  5125   002EA2  C0A4  F0D7         	movff	?_sinf,_runDAC$4525
  5126   002EA6  C0A5  F0D8         	movff	?_sinf+1,_runDAC$4525+1
  5127   002EAA  C0A6  F0D9         	movff	?_sinf+2,_runDAC$4525+2
  5128   002EAE  C0A7  F0DA         	movff	?_sinf+3,_runDAC$4525+3
  5129   002EB2                     
  5130                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5131   002EB2  0E00               	movlw	0
  5132   002EB4  6E4A               	movwf	___fladd@a^0,c
  5133   002EB6  0E00               	movlw	0
  5134   002EB8  6E4B               	movwf	(___fladd@a+1)^0,c
  5135   002EBA  0EFE               	movlw	254
  5136   002EBC  6E4C               	movwf	(___fladd@a+2)^0,c
  5137   002EBE  0E42               	movlw	66
  5138   002EC0  6E4D               	movwf	(___fladd@a+3)^0,c
  5139   002EC2  0E00               	movlw	0
  5140   002EC4  6E18               	movwf	___flmul@a^0,c
  5141   002EC6  0E00               	movlw	0
  5142   002EC8  6E19               	movwf	(___flmul@a+1)^0,c
  5143   002ECA  0EFE               	movlw	254
  5144   002ECC  6E1A               	movwf	(___flmul@a+2)^0,c
  5145   002ECE  0E42               	movlw	66
  5146   002ED0  6E1B               	movwf	(___flmul@a+3)^0,c
  5147   002ED2  C0D7  F014         	movff	_runDAC$4525,___flmul@b
  5148   002ED6  C0D8  F015         	movff	_runDAC$4525+1,___flmul@b+1
  5149   002EDA  C0D9  F016         	movff	_runDAC$4525+2,___flmul@b+2
  5150   002EDE  C0DA  F017         	movff	_runDAC$4525+3,___flmul@b+3
  5151   002EE2  EC3A  F00D         	call	___flmul	;wreg free
  5152   002EE6  C014  F046         	movff	?___flmul,___fladd@b
  5153   002EEA  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5154   002EEE  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5155   002EF2  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5156   002EF6  ECD9  F00A         	call	___fladd	;wreg free
  5157   002EFA  C046  F064         	movff	?___fladd,___fltol@f1
  5158   002EFE  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  5159   002F02  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  5160   002F06  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  5161   002F0A  EC1C  F021         	call	___fltol	;wreg free
  5162   002F0E  0100               	movlb	0	; () banked
  5163   002F10  5164               	movf	?___fltol& (0+255),w,b
  5164   002F12  EC0A  F028         	call	_SPI_write
  5165                           
  5166                           ;DAC.c: 66:                 break;
  5167   002F16  EFA2  F017         	goto	l231
  5168   002F1A                     l8200:
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  5172   002F1A  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5173   002F1C  0AFF               	xorlw	255
  5174   002F1E  EC0A  F028         	call	_SPI_write
  5175                           
  5176                           ;DAC.c: 69:                 break;
  5177   002F22  EFA2  F017         	goto	l231
  5178   002F26                     l8204:
  5179                           
  5180                           ; BSR set to: 0
  5181   002F26  51DC               	movf	runDAC@selectModeDAC& (0+255),w,b
  5182                           
  5183                           ; Switch size 1, requested type "simple"
  5184                           ; Number of cases is 3, Range of values is 1 to 3
  5185                           ; switch strategies available:
  5186                           ; Name         Instructions Cycles
  5187                           ; simple_byte           10     6 (average)
  5188                           ;	Chosen strategy is simple_byte
  5189   002F28  0A01               	xorlw	1	; case 1
  5190   002F2A  B4D8               	btfsc	status,2,c
  5191   002F2C  EFAD  F016         	goto	l8186
  5192   002F30  0A03               	xorlw	3	; case 2
  5193   002F32  B4D8               	btfsc	status,2,c
  5194   002F34  EF13  F017         	goto	l8194
  5195   002F38  0A01               	xorlw	1	; case 3
  5196   002F3A  B4D8               	btfsc	status,2,c
  5197   002F3C  EF8D  F017         	goto	l8200
  5198   002F40  EFA2  F017         	goto	l231
  5199   002F44                     l231:
  5200                           
  5201                           ;DAC.c: 71:         GODONE = 1;
  5202   002F44  82C2               	bsf	4034,1,c	;volatile
  5203   002F46                     l234:
  5204   002F46  B2C2               	btfsc	4034,1,c	;volatile
  5205   002F48  EFA8  F017         	goto	u10101
  5206   002F4C  EFAA  F017         	goto	u10100
  5207   002F50                     u10101:
  5208   002F50  EFA3  F017         	goto	l234
  5209   002F54                     u10100:
  5210   002F54                     
  5211                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  5212   002F54  0EE6               	movlw	low STR_16
  5213   002F56  0100               	movlb	0	; () banked
  5214   002F58  6FCE               	movwf	printf@fmt& (0+255),b
  5215   002F5A  0EFF               	movlw	high STR_16
  5216   002F5C  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  5217   002F5E  CFC4 F0D0          	movff	4036,?_printf+2	;volatile
  5218   002F62  6BD1               	clrf	(?_printf+3)& (0+255),b
  5219   002F64  EC06  F029         	call	_printf	;wreg free
  5220   002F68                     
  5221                           ;DAC.c: 75:         if(PORTCbits.RC0){
  5222   002F68  A082               	btfss	130,0,c	;volatile
  5223   002F6A  EFB9  F017         	goto	u10111
  5224   002F6E  EFBB  F017         	goto	u10110
  5225   002F72                     u10111:
  5226   002F72  EFBE  F017         	goto	l8212
  5227   002F76                     u10110:
  5228   002F76                     
  5229                           ;DAC.c: 76:             selectModeDAC = 1;
  5230   002F76  0E01               	movlw	1
  5231   002F78  0100               	movlb	0	; () banked
  5232   002F7A  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5233   002F7C                     l8212:
  5234                           
  5235                           ;DAC.c: 78:         if(PORTAbits.RA4){
  5236   002F7C  A880               	btfss	128,4,c	;volatile
  5237   002F7E  EFC3  F017         	goto	u10121
  5238   002F82  EFC5  F017         	goto	u10120
  5239   002F86                     u10121:
  5240   002F86  EFC8  F017         	goto	l8216
  5241   002F8A                     u10120:
  5242   002F8A                     
  5243                           ;DAC.c: 79:             selectModeDAC = 2;
  5244   002F8A  0E02               	movlw	2
  5245   002F8C  0100               	movlb	0	; () banked
  5246   002F8E  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5247   002F90                     l8216:
  5248                           
  5249                           ;DAC.c: 81:         if(PORTAbits.RA3){
  5250   002F90  A680               	btfss	128,3,c	;volatile
  5251   002F92  EFCD  F017         	goto	u10131
  5252   002F96  EFCF  F017         	goto	u10130
  5253   002F9A                     u10131:
  5254   002F9A  EFD2  F017         	goto	l8220
  5255   002F9E                     u10130:
  5256   002F9E                     
  5257                           ;DAC.c: 82:             selectModeDAC = 3;
  5258   002F9E  0E03               	movlw	3
  5259   002FA0  0100               	movlb	0	; () banked
  5260   002FA2  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5261   002FA4                     l8220:
  5262                           
  5263                           ;DAC.c: 84:         if(PORTAbits.RA2){
  5264   002FA4  A480               	btfss	128,2,c	;volatile
  5265   002FA6  EFD7  F017         	goto	u10141
  5266   002FAA  EFD9  F017         	goto	u10140
  5267   002FAE                     u10141:
  5268   002FAE  EFDC  F017         	goto	l8224
  5269   002FB2                     u10140:
  5270   002FB2                     
  5271                           ;DAC.c: 85:             keepState = 0;
  5272   002FB2  0E00               	movlw	0
  5273   002FB4  0100               	movlb	0	; () banked
  5274   002FB6  6FDB               	movwf	runDAC@keepState& (0+255),b
  5275   002FB8                     l8224:
  5276                           
  5277                           ;DAC.c: 87:         DACindex++;
  5278   002FB8  0100               	movlb	0	; () banked
  5279   002FBA  2BDD               	incf	runDAC@DACindex& (0+255),f,b
  5280   002FBC                     
  5281                           ; BSR set to: 0
  5282                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  5283   002FBC  0E68               	movlw	104
  5284   002FBE  0100               	movlb	0	; () banked
  5285   002FC0  6FD2               	movwf	??_runDAC& (0+255),b
  5286   002FC2  0EE4               	movlw	228
  5287   002FC4                     u10487:
  5288   002FC4  2EE8               	decfsz	wreg,f,c
  5289   002FC6  D7FE               	bra	u10487
  5290   002FC8  2FD2               	decfsz	??_runDAC& (0+255),f,b
  5291   002FCA  D7FC               	bra	u10487
  5292   002FCC  0000               	nop	
  5293   002FCE                     l8228:
  5294                           
  5295                           ;DAC.c: 54:     while(keepState){
  5296   002FCE  0100               	movlb	0	; () banked
  5297   002FD0  51DB               	movf	runDAC@keepState& (0+255),w,b
  5298   002FD2  A4D8               	btfss	status,2,c
  5299   002FD4  EFEE  F017         	goto	u10151
  5300   002FD8  EFF0  F017         	goto	u10150
  5301   002FDC                     u10151:
  5302   002FDC  EF93  F017         	goto	l8204
  5303   002FE0                     u10150:
  5304   002FE0                     
  5305                           ; BSR set to: 0
  5306   002FE0  0012               	return		;funcret
  5307   002FE2                     __end_of_runDAC:
  5308                           	callstack 0
  5309                           
  5310 ;; *************** function _sinf *****************
  5311 ;; Defined at:
  5312 ;;		line 27 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sinf.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;  x               4   68[BANK0 ] float 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;  ux              4   90[BANK0 ] struct .
  5317 ;;  y               4   86[BANK0 ] struct .
  5318 ;;  sign            1   81[BANK0 ] _Bool 
  5319 ;;  n               1   80[BANK0 ] unsigned char 
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  4   68[BANK0 ] float 
  5322 ;; Registers used:
  5323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5329 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5330 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;Total ram usage:       26 bytes
  5334 ;; Hardware stack levels used: 1
  5335 ;; Hardware stack levels required when called: 4
  5336 ;; This function calls:
  5337 ;;		___cosdf
  5338 ;;		___fladd
  5339 ;;		___flneg
  5340 ;;		___rem_pio2f
  5341 ;;		___sindf
  5342 ;; This function is called by:
  5343 ;;		_runDAC
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text17
  5348   0010A8                     __ptext17:
  5349                           	callstack 0
  5350   0010A8                     _sinf:
  5351                           	callstack 25
  5352   0010A8  C0A4  F0BA         	movff	sinf@x,sinf@ux
  5353   0010AC  C0A5  F0BB         	movff	sinf@x+1,sinf@ux+1
  5354   0010B0  C0A6  F0BC         	movff	sinf@x+2,sinf@ux+2
  5355   0010B4  C0A7  F0BD         	movff	sinf@x+3,sinf@ux+3
  5356   0010B8  0100               	movlb	0	; () banked
  5357   0010BA  BFBD               	btfsc	(sinf@ux+3)& (0+255),7,b
  5358   0010BC  EF62  F008         	goto	u9461
  5359   0010C0  EF65  F008         	goto	u9460
  5360   0010C4                     u9461:
  5361   0010C4  0E01               	movlw	1
  5362   0010C6  EF66  F008         	goto	u9470
  5363   0010CA                     u9460:
  5364   0010CA  0E00               	movlw	0
  5365   0010CC                     u9470:
  5366   0010CC  6FB1               	movwf	sinf@sign& (0+255),b
  5367   0010CE                     
  5368                           ; BSR set to: 0
  5369   0010CE  9FBD               	bcf	(sinf@ux+3)& (0+255),7,b
  5370   0010D0                     
  5371                           ; BSR set to: 0
  5372   0010D0  0EDB               	movlw	219
  5373   0010D2  5DBA               	subwf	sinf@ux& (0+255),w,b
  5374   0010D4  0E0F               	movlw	15
  5375   0010D6  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5376   0010D8  0E49               	movlw	73
  5377   0010DA  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5378   0010DC  0E3F               	movlw	63
  5379   0010DE  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5380   0010E0  B0D8               	btfsc	status,0,c
  5381   0010E2  EF75  F008         	goto	u9481
  5382   0010E6  EF77  F008         	goto	u9480
  5383   0010EA                     u9481:
  5384   0010EA  EFA0  F008         	goto	l7766
  5385   0010EE                     u9480:
  5386   0010EE                     
  5387                           ; BSR set to: 0
  5388   0010EE  0E80               	movlw	128
  5389   0010F0  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  5390   0010F2  0E39               	movlw	57
  5391   0010F4  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5392   0010F6  B0D8               	btfsc	status,0,c
  5393   0010F8  EF80  F008         	goto	u9491
  5394   0010FC  EF82  F008         	goto	u9490
  5395   001100                     u9491:
  5396   001100  EF8C  F008         	goto	l7762
  5397   001104                     u9490:
  5398   001104                     
  5399                           ; BSR set to: 0
  5400   001104  C0A4  F0A4         	movff	sinf@x,?_sinf
  5401   001108  C0A5  F0A5         	movff	sinf@x+1,?_sinf+1
  5402   00110C  C0A6  F0A6         	movff	sinf@x+2,?_sinf+2
  5403   001110  C0A7  F0A7         	movff	sinf@x+3,?_sinf+3
  5404   001114  EFD8  F00A         	goto	l1694
  5405   001118                     l7762:
  5406                           
  5407                           ; BSR set to: 0
  5408   001118  C0A4  F064         	movff	sinf@x,___sindf@x
  5409   00111C  C0A5  F065         	movff	sinf@x+1,___sindf@x+1
  5410   001120  C0A6  F066         	movff	sinf@x+2,___sindf@x+2
  5411   001124  C0A7  F067         	movff	sinf@x+3,___sindf@x+3
  5412   001128  ECF1  F017         	call	___sindf	;wreg free
  5413   00112C  C064  F0A4         	movff	?___sindf,?_sinf
  5414   001130  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5415   001134  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5416   001138  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5417   00113C  EFD8  F00A         	goto	l1694
  5418   001140                     l7766:
  5419                           
  5420                           ; BSR set to: 0
  5421   001140  0ED2               	movlw	210
  5422   001142  5DBA               	subwf	sinf@ux& (0+255),w,b
  5423   001144  0E53               	movlw	83
  5424   001146  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5425   001148  0E7B               	movlw	123
  5426   00114A  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5427   00114C  0E40               	movlw	64
  5428   00114E  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5429   001150  B0D8               	btfsc	status,0,c
  5430   001152  EFAD  F008         	goto	u9501
  5431   001156  EFAF  F008         	goto	u9500
  5432   00115A                     u9501:
  5433   00115A  EF92  F009         	goto	l7796
  5434   00115E                     u9500:
  5435   00115E                     
  5436                           ; BSR set to: 0
  5437   00115E  0EE4               	movlw	228
  5438   001160  5DBA               	subwf	sinf@ux& (0+255),w,b
  5439   001162  0ECB               	movlw	203
  5440   001164  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5441   001166  0E16               	movlw	22
  5442   001168  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5443   00116A  0E40               	movlw	64
  5444   00116C  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5445   00116E  B0D8               	btfsc	status,0,c
  5446   001170  EFBC  F008         	goto	u9511
  5447   001174  EFBE  F008         	goto	u9510
  5448   001178                     u9511:
  5449   001178  EF2C  F009         	goto	l7786
  5450   00117C                     u9510:
  5451   00117C                     
  5452                           ; BSR set to: 0
  5453   00117C  51B1               	movf	sinf@sign& (0+255),w,b
  5454   00117E  B4D8               	btfsc	status,2,c
  5455   001180  EFC4  F008         	goto	u9521
  5456   001184  EFC6  F008         	goto	u9520
  5457   001188                     u9521:
  5458   001188  EFFE  F008         	goto	l7780
  5459   00118C                     u9520:
  5460   00118C                     
  5461                           ; BSR set to: 0
  5462   00118C  0EDB               	movlw	219
  5463   00118E  6E4A               	movwf	___fladd@a^0,c
  5464   001190  0E0F               	movlw	15
  5465   001192  6E4B               	movwf	(___fladd@a+1)^0,c
  5466   001194  0EC9               	movlw	201
  5467   001196  6E4C               	movwf	(___fladd@a+2)^0,c
  5468   001198  0E3F               	movlw	63
  5469   00119A  6E4D               	movwf	(___fladd@a+3)^0,c
  5470   00119C  C0A4  F046         	movff	sinf@x,___fladd@b
  5471   0011A0  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5472   0011A4  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5473   0011A8  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5474   0011AC  ECD9  F00A         	call	___fladd	;wreg free
  5475   0011B0  C046  F0B2         	movff	?___fladd,_sinf$4527
  5476   0011B4  C047  F0B3         	movff	?___fladd+1,_sinf$4527+1
  5477   0011B8  C048  F0B4         	movff	?___fladd+2,_sinf$4527+2
  5478   0011BC  C049  F0B5         	movff	?___fladd+3,_sinf$4527+3
  5479   0011C0                     l7774:
  5480   0011C0  C0B2  F064         	movff	_sinf$4527,___cosdf@x
  5481   0011C4  C0B3  F065         	movff	_sinf$4527+1,___cosdf@x+1
  5482   0011C8  C0B4  F066         	movff	_sinf$4527+2,___cosdf@x+2
  5483   0011CC  C0B5  F067         	movff	_sinf$4527+3,___cosdf@x+3
  5484   0011D0  EC1E  F01B         	call	___cosdf	;wreg free
  5485   0011D4  C064  F080         	movff	?___cosdf,___flneg@f1
  5486   0011D8  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  5487   0011DC  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  5488   0011E0  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  5489   0011E4  EC29  F028         	call	___flneg	;wreg free
  5490   0011E8  C080  F0A4         	movff	?___flneg,?_sinf
  5491   0011EC  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  5492   0011F0  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  5493   0011F4  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  5494   0011F8  EFD8  F00A         	goto	l1694
  5495   0011FC                     l7780:
  5496                           
  5497                           ; BSR set to: 0
  5498   0011FC  C0A4  F046         	movff	sinf@x,___fladd@b
  5499   001200  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5500   001204  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5501   001208  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5502   00120C  0EDB               	movlw	219
  5503   00120E  6E4A               	movwf	___fladd@a^0,c
  5504   001210  0E0F               	movlw	15
  5505   001212  6E4B               	movwf	(___fladd@a+1)^0,c
  5506   001214  0EC9               	movlw	201
  5507   001216  6E4C               	movwf	(___fladd@a+2)^0,c
  5508   001218  0EBF               	movlw	191
  5509   00121A  6E4D               	movwf	(___fladd@a+3)^0,c
  5510   00121C  ECD9  F00A         	call	___fladd	;wreg free
  5511   001220  C046  F0B2         	movff	?___fladd,_sinf$4527
  5512   001224  C047  F0B3         	movff	?___fladd+1,_sinf$4527+1
  5513   001228  C048  F0B4         	movff	?___fladd+2,_sinf$4527+2
  5514   00122C  C049  F0B5         	movff	?___fladd+3,_sinf$4527+3
  5515   001230                     l7782:
  5516   001230  C0B2  F064         	movff	_sinf$4527,___cosdf@x
  5517   001234  C0B3  F065         	movff	_sinf$4527+1,___cosdf@x+1
  5518   001238  C0B4  F066         	movff	_sinf$4527+2,___cosdf@x+2
  5519   00123C  C0B5  F067         	movff	_sinf$4527+3,___cosdf@x+3
  5520   001240  EC1E  F01B         	call	___cosdf	;wreg free
  5521   001244  C064  F0A4         	movff	?___cosdf,?_sinf
  5522   001248  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  5523   00124C  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  5524   001250  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  5525   001254  EFD8  F00A         	goto	l1694
  5526   001258                     l7786:
  5527                           
  5528                           ; BSR set to: 0
  5529   001258  51B1               	movf	sinf@sign& (0+255),w,b
  5530   00125A  A4D8               	btfss	status,2,c
  5531   00125C  EF32  F009         	goto	u9531
  5532   001260  EF34  F009         	goto	u9530
  5533   001264                     u9531:
  5534   001264  EF5A  F009         	goto	l7790
  5535   001268                     u9530:
  5536   001268                     
  5537                           ; BSR set to: 0
  5538   001268  0EDB               	movlw	219
  5539   00126A  6E4A               	movwf	___fladd@a^0,c
  5540   00126C  0E0F               	movlw	15
  5541   00126E  6E4B               	movwf	(___fladd@a+1)^0,c
  5542   001270  0E49               	movlw	73
  5543   001272  6E4C               	movwf	(___fladd@a+2)^0,c
  5544   001274  0EC0               	movlw	192
  5545   001276  6E4D               	movwf	(___fladd@a+3)^0,c
  5546   001278  C0A4  F046         	movff	sinf@x,___fladd@b
  5547   00127C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5548   001280  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5549   001284  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5550   001288  ECD9  F00A         	call	___fladd	;wreg free
  5551   00128C  C046  F080         	movff	?___fladd,___flneg@f1
  5552   001290  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5553   001294  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5554   001298  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5555   00129C  EC29  F028         	call	___flneg	;wreg free
  5556   0012A0  C080  F0A8         	movff	?___flneg,_sinf$4243
  5557   0012A4  C081  F0A9         	movff	?___flneg+1,_sinf$4243+1
  5558   0012A8  C082  F0AA         	movff	?___flneg+2,_sinf$4243+2
  5559   0012AC  C083  F0AB         	movff	?___flneg+3,_sinf$4243+3
  5560   0012B0  EF7E  F009         	goto	l7792
  5561   0012B4                     l7790:
  5562                           
  5563                           ; BSR set to: 0
  5564   0012B4  0EDB               	movlw	219
  5565   0012B6  6E4A               	movwf	___fladd@a^0,c
  5566   0012B8  0E0F               	movlw	15
  5567   0012BA  6E4B               	movwf	(___fladd@a+1)^0,c
  5568   0012BC  0E49               	movlw	73
  5569   0012BE  6E4C               	movwf	(___fladd@a+2)^0,c
  5570   0012C0  0E40               	movlw	64
  5571   0012C2  6E4D               	movwf	(___fladd@a+3)^0,c
  5572   0012C4  C0A4  F046         	movff	sinf@x,___fladd@b
  5573   0012C8  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5574   0012CC  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5575   0012D0  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5576   0012D4  ECD9  F00A         	call	___fladd	;wreg free
  5577   0012D8  C046  F080         	movff	?___fladd,___flneg@f1
  5578   0012DC  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5579   0012E0  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5580   0012E4  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5581   0012E8  EC29  F028         	call	___flneg	;wreg free
  5582   0012EC  C080  F0A8         	movff	?___flneg,_sinf$4243
  5583   0012F0  C081  F0A9         	movff	?___flneg+1,_sinf$4243+1
  5584   0012F4  C082  F0AA         	movff	?___flneg+2,_sinf$4243+2
  5585   0012F8  C083  F0AB         	movff	?___flneg+3,_sinf$4243+3
  5586   0012FC                     l7792:
  5587   0012FC  C0A8  F064         	movff	_sinf$4243,___sindf@x
  5588   001300  C0A9  F065         	movff	_sinf$4243+1,___sindf@x+1
  5589   001304  C0AA  F066         	movff	_sinf$4243+2,___sindf@x+2
  5590   001308  C0AB  F067         	movff	_sinf$4243+3,___sindf@x+3
  5591   00130C  ECF1  F017         	call	___sindf	;wreg free
  5592   001310  C064  F0A4         	movff	?___sindf,?_sinf
  5593   001314  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5594   001318  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5595   00131C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5596   001320  EFD8  F00A         	goto	l1694
  5597   001324                     l7796:
  5598                           
  5599                           ; BSR set to: 0
  5600   001324  0ED6               	movlw	214
  5601   001326  5DBA               	subwf	sinf@ux& (0+255),w,b
  5602   001328  0E31               	movlw	49
  5603   00132A  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5604   00132C  0EE2               	movlw	226
  5605   00132E  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5606   001330  0E40               	movlw	64
  5607   001332  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5608   001334  B0D8               	btfsc	status,0,c
  5609   001336  EF9F  F009         	goto	u9541
  5610   00133A  EFA1  F009         	goto	u9540
  5611   00133E                     u9541:
  5612   00133E  EF42  F00A         	goto	l7826
  5613   001342                     u9540:
  5614   001342                     
  5615                           ; BSR set to: 0
  5616   001342  0EE0               	movlw	224
  5617   001344  5DBA               	subwf	sinf@ux& (0+255),w,b
  5618   001346  0EED               	movlw	237
  5619   001348  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5620   00134A  0EAF               	movlw	175
  5621   00134C  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5622   00134E  0E40               	movlw	64
  5623   001350  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5624   001352  B0D8               	btfsc	status,0,c
  5625   001354  EFAE  F009         	goto	u9551
  5626   001358  EFB0  F009         	goto	u9550
  5627   00135C                     u9551:
  5628   00135C  EFF0  F009         	goto	l7816
  5629   001360                     u9550:
  5630   001360                     
  5631                           ; BSR set to: 0
  5632   001360  51B1               	movf	sinf@sign& (0+255),w,b
  5633   001362  B4D8               	btfsc	status,2,c
  5634   001364  EFB6  F009         	goto	u9561
  5635   001368  EFB8  F009         	goto	u9560
  5636   00136C                     u9561:
  5637   00136C  EFD4  F009         	goto	l7810
  5638   001370                     u9560:
  5639   001370                     
  5640                           ; BSR set to: 0
  5641   001370  C0A4  F046         	movff	sinf@x,___fladd@b
  5642   001374  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5643   001378  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5644   00137C  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5645   001380  0EE4               	movlw	228
  5646   001382  6E4A               	movwf	___fladd@a^0,c
  5647   001384  0ECB               	movlw	203
  5648   001386  6E4B               	movwf	(___fladd@a+1)^0,c
  5649   001388  0E96               	movlw	150
  5650   00138A  6E4C               	movwf	(___fladd@a+2)^0,c
  5651   00138C  0E40               	movlw	64
  5652   00138E  6E4D               	movwf	(___fladd@a+3)^0,c
  5653   001390  ECD9  F00A         	call	___fladd	;wreg free
  5654   001394  C046  F0B2         	movff	?___fladd,_sinf$4527
  5655   001398  C047  F0B3         	movff	?___fladd+1,_sinf$4527+1
  5656   00139C  C048  F0B4         	movff	?___fladd+2,_sinf$4527+2
  5657   0013A0  C049  F0B5         	movff	?___fladd+3,_sinf$4527+3
  5658   0013A4  EF18  F009         	goto	l7782
  5659   0013A8                     l7810:
  5660                           
  5661                           ; BSR set to: 0
  5662   0013A8  0EE4               	movlw	228
  5663   0013AA  6E4A               	movwf	___fladd@a^0,c
  5664   0013AC  0ECB               	movlw	203
  5665   0013AE  6E4B               	movwf	(___fladd@a+1)^0,c
  5666   0013B0  0E96               	movlw	150
  5667   0013B2  6E4C               	movwf	(___fladd@a+2)^0,c
  5668   0013B4  0EC0               	movlw	192
  5669   0013B6  6E4D               	movwf	(___fladd@a+3)^0,c
  5670   0013B8  C0A4  F046         	movff	sinf@x,___fladd@b
  5671   0013BC  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5672   0013C0  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5673   0013C4  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5674   0013C8  ECD9  F00A         	call	___fladd	;wreg free
  5675   0013CC  C046  F0B2         	movff	?___fladd,_sinf$4527
  5676   0013D0  C047  F0B3         	movff	?___fladd+1,_sinf$4527+1
  5677   0013D4  C048  F0B4         	movff	?___fladd+2,_sinf$4527+2
  5678   0013D8  C049  F0B5         	movff	?___fladd+3,_sinf$4527+3
  5679   0013DC  EFE0  F008         	goto	l7774
  5680   0013E0                     l7816:
  5681                           
  5682                           ; BSR set to: 0
  5683   0013E0  51B1               	movf	sinf@sign& (0+255),w,b
  5684   0013E2  A4D8               	btfss	status,2,c
  5685   0013E4  EFF6  F009         	goto	u9571
  5686   0013E8  EFF8  F009         	goto	u9570
  5687   0013EC                     u9571:
  5688   0013EC  EF14  F00A         	goto	l7820
  5689   0013F0                     u9570:
  5690   0013F0                     
  5691                           ; BSR set to: 0
  5692   0013F0  C0A4  F046         	movff	sinf@x,___fladd@b
  5693   0013F4  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5694   0013F8  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5695   0013FC  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5696   001400  0EDB               	movlw	219
  5697   001402  6E4A               	movwf	___fladd@a^0,c
  5698   001404  0E0F               	movlw	15
  5699   001406  6E4B               	movwf	(___fladd@a+1)^0,c
  5700   001408  0EC9               	movlw	201
  5701   00140A  6E4C               	movwf	(___fladd@a+2)^0,c
  5702   00140C  0EC0               	movlw	192
  5703   00140E  6E4D               	movwf	(___fladd@a+3)^0,c
  5704   001410  ECD9  F00A         	call	___fladd	;wreg free
  5705   001414  C046  F0AC         	movff	?___fladd,_sinf$4244
  5706   001418  C047  F0AD         	movff	?___fladd+1,_sinf$4244+1
  5707   00141C  C048  F0AE         	movff	?___fladd+2,_sinf$4244+2
  5708   001420  C049  F0AF         	movff	?___fladd+3,_sinf$4244+3
  5709   001424  EF2E  F00A         	goto	l7822
  5710   001428                     l7820:
  5711                           
  5712                           ; BSR set to: 0
  5713   001428  C0A4  F046         	movff	sinf@x,___fladd@b
  5714   00142C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5715   001430  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5716   001434  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5717   001438  0EDB               	movlw	219
  5718   00143A  6E4A               	movwf	___fladd@a^0,c
  5719   00143C  0E0F               	movlw	15
  5720   00143E  6E4B               	movwf	(___fladd@a+1)^0,c
  5721   001440  0EC9               	movlw	201
  5722   001442  6E4C               	movwf	(___fladd@a+2)^0,c
  5723   001444  0E40               	movlw	64
  5724   001446  6E4D               	movwf	(___fladd@a+3)^0,c
  5725   001448  ECD9  F00A         	call	___fladd	;wreg free
  5726   00144C  C046  F0AC         	movff	?___fladd,_sinf$4244
  5727   001450  C047  F0AD         	movff	?___fladd+1,_sinf$4244+1
  5728   001454  C048  F0AE         	movff	?___fladd+2,_sinf$4244+2
  5729   001458  C049  F0AF         	movff	?___fladd+3,_sinf$4244+3
  5730   00145C                     l7822:
  5731   00145C  C0AC  F064         	movff	_sinf$4244,___sindf@x
  5732   001460  C0AD  F065         	movff	_sinf$4244+1,___sindf@x+1
  5733   001464  C0AE  F066         	movff	_sinf$4244+2,___sindf@x+2
  5734   001468  C0AF  F067         	movff	_sinf$4244+3,___sindf@x+3
  5735   00146C  ECF1  F017         	call	___sindf	;wreg free
  5736   001470  C064  F0A4         	movff	?___sindf,?_sinf
  5737   001474  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5738   001478  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5739   00147C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5740   001480  EFD8  F00A         	goto	l1694
  5741   001484                     l7826:
  5742                           
  5743                           ; BSR set to: 0
  5744   001484  0E80               	movlw	128
  5745   001486  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  5746   001488  0E7F               	movlw	127
  5747   00148A  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5748   00148C  A0D8               	btfss	status,0,c
  5749   00148E  EF4B  F00A         	goto	u9581
  5750   001492  EF4D  F00A         	goto	u9580
  5751   001496                     u9581:
  5752   001496  EF5F  F00A         	goto	l7834
  5753   00149A                     u9580:
  5754   00149A                     
  5755                           ; BSR set to: 0
  5756   00149A  0EFF               	movlw	255
  5757   00149C  13BA               	iorwf	sinf@ux& (0+255),f,b
  5758   00149E  0EFF               	movlw	255
  5759   0014A0  13BB               	iorwf	(sinf@ux+1)& (0+255),f,b
  5760   0014A2  0EFF               	movlw	255
  5761   0014A4  13BC               	iorwf	(sinf@ux+2)& (0+255),f,b
  5762   0014A6  0E00               	movlw	0
  5763   0014A8  13BD               	iorwf	(sinf@ux+3)& (0+255),f,b
  5764   0014AA                     
  5765                           ; BSR set to: 0
  5766   0014AA  C0BA  F0A4         	movff	sinf@ux,?_sinf
  5767   0014AE  C0BB  F0A5         	movff	sinf@ux+1,?_sinf+1
  5768   0014B2  C0BC  F0A6         	movff	sinf@ux+2,?_sinf+2
  5769   0014B6  C0BD  F0A7         	movff	sinf@ux+3,?_sinf+3
  5770   0014BA  EFD8  F00A         	goto	l1694
  5771   0014BE                     l7834:
  5772                           
  5773                           ; BSR set to: 0
  5774   0014BE  C0A4  F084         	movff	sinf@x,___rem_pio2f@x
  5775   0014C2  C0A5  F085         	movff	sinf@x+1,___rem_pio2f@x+1
  5776   0014C6  C0A6  F086         	movff	sinf@x+2,___rem_pio2f@x+2
  5777   0014CA  C0A7  F087         	movff	sinf@x+3,___rem_pio2f@x+3
  5778   0014CE  0EB6               	movlw	low sinf@y
  5779   0014D0  6F88               	movwf	___rem_pio2f@y& (0+255),b
  5780   0014D2  EC49  F011         	call	___rem_pio2f	;wreg free
  5781   0014D6  0100               	movlb	0	; () banked
  5782   0014D8  5184               	movf	?___rem_pio2f& (0+255),w,b
  5783   0014DA  0B03               	andlw	3
  5784   0014DC  6FB0               	movwf	sinf@n& (0+255),b
  5785   0014DE  EFC9  F00A         	goto	l7852
  5786   0014E2                     l7836:
  5787                           
  5788                           ; BSR set to: 0
  5789   0014E2  C0B6  F080         	movff	sinf@y,___flneg@f1
  5790   0014E6  C0B7  F081         	movff	sinf@y+1,___flneg@f1+1
  5791   0014EA  C0B8  F082         	movff	sinf@y+2,___flneg@f1+2
  5792   0014EE  C0B9  F083         	movff	sinf@y+3,___flneg@f1+3
  5793   0014F2  EC29  F028         	call	___flneg	;wreg free
  5794   0014F6  C080  F0B6         	movff	?___flneg,sinf@y
  5795   0014FA  C081  F0B7         	movff	?___flneg+1,sinf@y+1
  5796   0014FE  C082  F0B8         	movff	?___flneg+2,sinf@y+2
  5797   001502  C083  F0B9         	movff	?___flneg+3,sinf@y+3
  5798   001506                     l7838:
  5799   001506  C0B6  F064         	movff	sinf@y,___sindf@x
  5800   00150A  C0B7  F065         	movff	sinf@y+1,___sindf@x+1
  5801   00150E  C0B8  F066         	movff	sinf@y+2,___sindf@x+2
  5802   001512  C0B9  F067         	movff	sinf@y+3,___sindf@x+3
  5803   001516  ECF1  F017         	call	___sindf	;wreg free
  5804   00151A  C064  F0A4         	movff	?___sindf,?_sinf
  5805   00151E  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5806   001522  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5807   001526  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5808   00152A  EFD8  F00A         	goto	l1694
  5809   00152E                     l7842:
  5810                           
  5811                           ; BSR set to: 0
  5812   00152E  C0B6  F064         	movff	sinf@y,___cosdf@x
  5813   001532  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  5814   001536  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  5815   00153A  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  5816   00153E  EC1E  F01B         	call	___cosdf	;wreg free
  5817   001542  C064  F0A4         	movff	?___cosdf,?_sinf
  5818   001546  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  5819   00154A  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  5820   00154E  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  5821   001552  EFD8  F00A         	goto	l1694
  5822   001556                     l7846:
  5823                           
  5824                           ; BSR set to: 0
  5825   001556  C0B6  F064         	movff	sinf@y,___cosdf@x
  5826   00155A  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  5827   00155E  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  5828   001562  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  5829   001566  EC1E  F01B         	call	___cosdf	;wreg free
  5830   00156A  C064  F080         	movff	?___cosdf,___flneg@f1
  5831   00156E  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  5832   001572  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  5833   001576  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  5834   00157A  EC29  F028         	call	___flneg	;wreg free
  5835   00157E  C080  F0A4         	movff	?___flneg,?_sinf
  5836   001582  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  5837   001586  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  5838   00158A  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  5839   00158E  EFD8  F00A         	goto	l1694
  5840   001592                     l7852:
  5841                           
  5842                           ; BSR set to: 0
  5843   001592  51B0               	movf	sinf@n& (0+255),w,b
  5844                           
  5845                           ; Switch size 1, requested type "simple"
  5846                           ; Number of cases is 3, Range of values is 0 to 2
  5847                           ; switch strategies available:
  5848                           ; Name         Instructions Cycles
  5849                           ; simple_byte           10     6 (average)
  5850                           ;	Chosen strategy is simple_byte
  5851   001594  0A00               	xorlw	0	; case 0
  5852   001596  B4D8               	btfsc	status,2,c
  5853   001598  EF83  F00A         	goto	l7838
  5854   00159C  0A01               	xorlw	1	; case 1
  5855   00159E  B4D8               	btfsc	status,2,c
  5856   0015A0  EF97  F00A         	goto	l7842
  5857   0015A4  0A03               	xorlw	3	; case 2
  5858   0015A6  B4D8               	btfsc	status,2,c
  5859   0015A8  EF71  F00A         	goto	l7836
  5860   0015AC  EFAB  F00A         	goto	l7846
  5861   0015B0                     l1694:
  5862   0015B0  0012               	return		;funcret
  5863   0015B2                     __end_of_sinf:
  5864                           	callstack 0
  5865                           
  5866 ;; *************** function ___sindf *****************
  5867 ;; Defined at:
  5868 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__sindf.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;  x               4    4[BANK0 ] float 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  z               4   32[BANK0 ] float 
  5873 ;;  s               4   28[BANK0 ] float 
  5874 ;;  w               4   12[BANK0 ] float 
  5875 ;;  r               4    8[BANK0 ] float 
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  4    4[BANK0 ] float 
  5878 ;; Registers used:
  5879 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5885 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5886 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;Total ram usage:       32 bytes
  5890 ;; Hardware stack levels used: 1
  5891 ;; Hardware stack levels required when called: 2
  5892 ;; This function calls:
  5893 ;;		___fladd
  5894 ;;		___flmul
  5895 ;; This function is called by:
  5896 ;;		_sinf
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           
  5900                           	psect	text18
  5901   002FE2                     __ptext18:
  5902                           	callstack 0
  5903   002FE2                     ___sindf:
  5904                           	callstack 26
  5905   002FE2  C064  F014         	movff	___sindf@x,___flmul@b
  5906   002FE6  C065  F015         	movff	___sindf@x+1,___flmul@b+1
  5907   002FEA  C066  F016         	movff	___sindf@x+2,___flmul@b+2
  5908   002FEE  C067  F017         	movff	___sindf@x+3,___flmul@b+3
  5909   002FF2  C064  F018         	movff	___sindf@x,___flmul@a
  5910   002FF6  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  5911   002FFA  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  5912   002FFE  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  5913   003002  EC3A  F00D         	call	___flmul	;wreg free
  5914   003006  C014  F080         	movff	?___flmul,___sindf@z
  5915   00300A  C015  F081         	movff	?___flmul+1,___sindf@z+1
  5916   00300E  C016  F082         	movff	?___flmul+2,___sindf@z+2
  5917   003012  C017  F083         	movff	?___flmul+3,___sindf@z+3
  5918   003016  C080  F014         	movff	___sindf@z,___flmul@b
  5919   00301A  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  5920   00301E  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  5921   003022  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  5922   003026  C080  F018         	movff	___sindf@z,___flmul@a
  5923   00302A  C081  F019         	movff	___sindf@z+1,___flmul@a+1
  5924   00302E  C082  F01A         	movff	___sindf@z+2,___flmul@a+2
  5925   003032  C083  F01B         	movff	___sindf@z+3,___flmul@a+3
  5926   003036  EC3A  F00D         	call	___flmul	;wreg free
  5927   00303A  C014  F06C         	movff	?___flmul,___sindf@w
  5928   00303E  C015  F06D         	movff	?___flmul+1,___sindf@w+1
  5929   003042  C016  F06E         	movff	?___flmul+2,___sindf@w+2
  5930   003046  C017  F06F         	movff	?___flmul+3,___sindf@w+3
  5931   00304A  0E3C               	movlw	60
  5932   00304C  6E18               	movwf	___flmul@a^0,c
  5933   00304E  0E6C               	movlw	108
  5934   003050  6E19               	movwf	(___flmul@a+1)^0,c
  5935   003052  0E36               	movlw	54
  5936   003054  6E1A               	movwf	(___flmul@a+2)^0,c
  5937   003056  0E36               	movlw	54
  5938   003058  6E1B               	movwf	(___flmul@a+3)^0,c
  5939   00305A  C080  F014         	movff	___sindf@z,___flmul@b
  5940   00305E  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  5941   003062  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  5942   003066  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  5943   00306A  EC3A  F00D         	call	___flmul	;wreg free
  5944   00306E  C014  F046         	movff	?___flmul,___fladd@b
  5945   003072  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5946   003076  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5947   00307A  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5948   00307E  0ECF               	movlw	207
  5949   003080  6E4A               	movwf	___fladd@a^0,c
  5950   003082  0E07               	movlw	7
  5951   003084  6E4B               	movwf	(___fladd@a+1)^0,c
  5952   003086  0E50               	movlw	80
  5953   003088  6E4C               	movwf	(___fladd@a+2)^0,c
  5954   00308A  0EB9               	movlw	185
  5955   00308C  6E4D               	movwf	(___fladd@a+3)^0,c
  5956   00308E  ECD9  F00A         	call	___fladd	;wreg free
  5957   003092  C046  F068         	movff	?___fladd,___sindf@r
  5958   003096  C047  F069         	movff	?___fladd+1,___sindf@r+1
  5959   00309A  C048  F06A         	movff	?___fladd+2,___sindf@r+2
  5960   00309E  C049  F06B         	movff	?___fladd+3,___sindf@r+3
  5961   0030A2  C080  F014         	movff	___sindf@z,___flmul@b
  5962   0030A6  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  5963   0030AA  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  5964   0030AE  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  5965   0030B2  C064  F018         	movff	___sindf@x,___flmul@a
  5966   0030B6  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  5967   0030BA  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  5968   0030BE  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  5969   0030C2  EC3A  F00D         	call	___flmul	;wreg free
  5970   0030C6  C014  F07C         	movff	?___flmul,___sindf@s
  5971   0030CA  C015  F07D         	movff	?___flmul+1,___sindf@s+1
  5972   0030CE  C016  F07E         	movff	?___flmul+2,___sindf@s+2
  5973   0030D2  C017  F07F         	movff	?___flmul+3,___sindf@s+3
  5974   0030D6  0EAB               	movlw	171
  5975   0030D8  6E4A               	movwf	___fladd@a^0,c
  5976   0030DA  0EAA               	movlw	170
  5977   0030DC  6E4B               	movwf	(___fladd@a+1)^0,c
  5978   0030DE  0E2A               	movlw	42
  5979   0030E0  6E4C               	movwf	(___fladd@a+2)^0,c
  5980   0030E2  0EBE               	movlw	190
  5981   0030E4  6E4D               	movwf	(___fladd@a+3)^0,c
  5982   0030E6  0E84               	movlw	132
  5983   0030E8  6E18               	movwf	___flmul@a^0,c
  5984   0030EA  0E88               	movlw	136
  5985   0030EC  6E19               	movwf	(___flmul@a+1)^0,c
  5986   0030EE  0E08               	movlw	8
  5987   0030F0  6E1A               	movwf	(___flmul@a+2)^0,c
  5988   0030F2  0E3C               	movlw	60
  5989   0030F4  6E1B               	movwf	(___flmul@a+3)^0,c
  5990   0030F6  C080  F014         	movff	___sindf@z,___flmul@b
  5991   0030FA  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  5992   0030FE  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  5993   003102  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  5994   003106  EC3A  F00D         	call	___flmul	;wreg free
  5995   00310A  C014  F046         	movff	?___flmul,___fladd@b
  5996   00310E  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5997   003112  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5998   003116  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5999   00311A  ECD9  F00A         	call	___fladd	;wreg free
  6000   00311E  C046  F070         	movff	?___fladd,___sindf$4532
  6001   003122  C047  F071         	movff	?___fladd+1,___sindf$4532+1
  6002   003126  C048  F072         	movff	?___fladd+2,___sindf$4532+2
  6003   00312A  C049  F073         	movff	?___fladd+3,___sindf$4532+3
  6004   00312E  C06C  F018         	movff	___sindf@w,___flmul@a
  6005   003132  C06D  F019         	movff	___sindf@w+1,___flmul@a+1
  6006   003136  C06E  F01A         	movff	___sindf@w+2,___flmul@a+2
  6007   00313A  C06F  F01B         	movff	___sindf@w+3,___flmul@a+3
  6008   00313E  C07C  F014         	movff	___sindf@s,___flmul@b
  6009   003142  C07D  F015         	movff	___sindf@s+1,___flmul@b+1
  6010   003146  C07E  F016         	movff	___sindf@s+2,___flmul@b+2
  6011   00314A  C07F  F017         	movff	___sindf@s+3,___flmul@b+3
  6012   00314E  EC3A  F00D         	call	___flmul	;wreg free
  6013   003152  C014  F074         	movff	?___flmul,___sindf$4533
  6014   003156  C015  F075         	movff	?___flmul+1,___sindf$4533+1
  6015   00315A  C016  F076         	movff	?___flmul+2,___sindf$4533+2
  6016   00315E  C017  F077         	movff	?___flmul+3,___sindf$4533+3
  6017   003162  C064  F04A         	movff	___sindf@x,___fladd@a
  6018   003166  C065  F04B         	movff	___sindf@x+1,___fladd@a+1
  6019   00316A  C066  F04C         	movff	___sindf@x+2,___fladd@a+2
  6020   00316E  C067  F04D         	movff	___sindf@x+3,___fladd@a+3
  6021   003172  C07C  F018         	movff	___sindf@s,___flmul@a
  6022   003176  C07D  F019         	movff	___sindf@s+1,___flmul@a+1
  6023   00317A  C07E  F01A         	movff	___sindf@s+2,___flmul@a+2
  6024   00317E  C07F  F01B         	movff	___sindf@s+3,___flmul@a+3
  6025   003182  C070  F014         	movff	___sindf$4532,___flmul@b
  6026   003186  C071  F015         	movff	___sindf$4532+1,___flmul@b+1
  6027   00318A  C072  F016         	movff	___sindf$4532+2,___flmul@b+2
  6028   00318E  C073  F017         	movff	___sindf$4532+3,___flmul@b+3
  6029   003192  EC3A  F00D         	call	___flmul	;wreg free
  6030   003196  C014  F046         	movff	?___flmul,___fladd@b
  6031   00319A  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6032   00319E  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6033   0031A2  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6034   0031A6  ECD9  F00A         	call	___fladd	;wreg free
  6035   0031AA  C046  F078         	movff	?___fladd,___sindf$4534
  6036   0031AE  C047  F079         	movff	?___fladd+1,___sindf$4534+1
  6037   0031B2  C048  F07A         	movff	?___fladd+2,___sindf$4534+2
  6038   0031B6  C049  F07B         	movff	?___fladd+3,___sindf$4534+3
  6039   0031BA  C078  F046         	movff	___sindf$4534,___fladd@b
  6040   0031BE  C079  F047         	movff	___sindf$4534+1,___fladd@b+1
  6041   0031C2  C07A  F048         	movff	___sindf$4534+2,___fladd@b+2
  6042   0031C6  C07B  F049         	movff	___sindf$4534+3,___fladd@b+3
  6043   0031CA  C068  F018         	movff	___sindf@r,___flmul@a
  6044   0031CE  C069  F019         	movff	___sindf@r+1,___flmul@a+1
  6045   0031D2  C06A  F01A         	movff	___sindf@r+2,___flmul@a+2
  6046   0031D6  C06B  F01B         	movff	___sindf@r+3,___flmul@a+3
  6047   0031DA  C074  F014         	movff	___sindf$4533,___flmul@b
  6048   0031DE  C075  F015         	movff	___sindf$4533+1,___flmul@b+1
  6049   0031E2  C076  F016         	movff	___sindf$4533+2,___flmul@b+2
  6050   0031E6  C077  F017         	movff	___sindf$4533+3,___flmul@b+3
  6051   0031EA  EC3A  F00D         	call	___flmul	;wreg free
  6052   0031EE  C014  F04A         	movff	?___flmul,___fladd@a
  6053   0031F2  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6054   0031F6  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6055   0031FA  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6056   0031FE  ECD9  F00A         	call	___fladd	;wreg free
  6057   003202  C046  F064         	movff	?___fladd,?___sindf
  6058   003206  C047  F065         	movff	?___fladd+1,?___sindf+1
  6059   00320A  C048  F066         	movff	?___fladd+2,?___sindf+2
  6060   00320E  C049  F067         	movff	?___fladd+3,?___sindf+3
  6061   003212  0012               	return		;funcret
  6062   003214                     __end_of___sindf:
  6063                           	callstack 0
  6064                           
  6065 ;; *************** function ___rem_pio2f *****************
  6066 ;; Defined at:
  6067 ;;		line 44 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__rem_pio2f.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;  x               4   36[BANK0 ] float 
  6070 ;;  y               1   40[BANK0 ] PTR 
  6071 ;;		 -> sinf@y(4), 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  n               4   64[BANK0 ] long 
  6074 ;;  t               4   60[BANK0 ] float 
  6075 ;;  fn              4   56[BANK0 ] float 
  6076 ;;  ux              4   52[BANK0 ] struct .
  6077 ;;  ty              4   43[BANK0 ] [1]
  6078 ;;  sign            1   51[BANK0 ] _Bool 
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  2   36[BANK0 ] int 
  6081 ;; Registers used:
  6082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6088 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;Total ram usage:       32 bytes
  6093 ;; Hardware stack levels used: 1
  6094 ;; Hardware stack levels required when called: 3
  6095 ;; This function calls:
  6096 ;;		___fladd
  6097 ;;		___flmul
  6098 ;;		___flneg
  6099 ;;		___flsub
  6100 ;;		___fltol
  6101 ;;		___xxtofl
  6102 ;;		_fabsf
  6103 ;; This function is called by:
  6104 ;;		_sinf
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text19
  6109   002292                     __ptext19:
  6110                           	callstack 0
  6111   002292                     ___rem_pio2f:
  6112                           	callstack 25
  6113   002292  C115  F094         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  6114   002296  C116  F095         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  6115   00229A  C117  F096         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  6116   00229E  C118  F097         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  6117   0022A2  C084  F094         	movff	___rem_pio2f@x,___rem_pio2f@ux
  6118   0022A6  C085  F095         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  6119   0022AA  C086  F096         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  6120   0022AE  C087  F097         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  6121   0022B2  0100               	movlb	0	; () banked
  6122   0022B4  BF97               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  6123   0022B6  EF5F  F011         	goto	u9311
  6124   0022BA  EF62  F011         	goto	u9310
  6125   0022BE                     u9311:
  6126   0022BE  0E01               	movlw	1
  6127   0022C0  EF63  F011         	goto	u9320
  6128   0022C4                     u9310:
  6129   0022C4  0E00               	movlw	0
  6130   0022C6                     u9320:
  6131   0022C6  6F93               	movwf	___rem_pio2f@sign& (0+255),b
  6132   0022C8                     
  6133                           ; BSR set to: 0
  6134   0022C8  9F97               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  6135   0022CA                     
  6136                           ; BSR set to: 0
  6137   0022CA  0EDB               	movlw	219
  6138   0022CC  5D94               	subwf	___rem_pio2f@ux& (0+255),w,b
  6139   0022CE  0E0F               	movlw	15
  6140   0022D0  5995               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  6141   0022D2  0EC9               	movlw	201
  6142   0022D4  5996               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  6143   0022D6  0E4D               	movlw	77
  6144   0022D8  5997               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  6145   0022DA  B0D8               	btfsc	status,0,c
  6146   0022DC  EF72  F011         	goto	u9331
  6147   0022E0  EF74  F011         	goto	u9330
  6148   0022E4                     u9331:
  6149   0022E4  EF60  F012         	goto	l7692
  6150   0022E8                     u9330:
  6151   0022E8                     
  6152                           ; BSR set to: 0
  6153   0022E8  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  6154   0022EC  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  6155   0022F0  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  6156   0022F4  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  6157   0022F8  EC98  F028         	call	_fabsf	;wreg free
  6158   0022FC  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  6159   002300  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  6160   002304  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  6161   002308  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  6162   00230C  0E00               	movlw	0
  6163   00230E  6E4A               	movwf	___fladd@a^0,c
  6164   002310  0E00               	movlw	0
  6165   002312  6E4B               	movwf	(___fladd@a+1)^0,c
  6166   002314  0E00               	movlw	0
  6167   002316  6E4C               	movwf	(___fladd@a+2)^0,c
  6168   002318  0E3F               	movlw	63
  6169   00231A  6E4D               	movwf	(___fladd@a+3)^0,c
  6170   00231C  0E83               	movlw	131
  6171   00231E  6E18               	movwf	___flmul@a^0,c
  6172   002320  0EF9               	movlw	249
  6173   002322  6E19               	movwf	(___flmul@a+1)^0,c
  6174   002324  0E22               	movlw	34
  6175   002326  6E1A               	movwf	(___flmul@a+2)^0,c
  6176   002328  0E3F               	movlw	63
  6177   00232A  6E1B               	movwf	(___flmul@a+3)^0,c
  6178   00232C  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  6179   002330  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  6180   002334  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  6181   002338  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  6182   00233C  EC3A  F00D         	call	___flmul	;wreg free
  6183   002340  C014  F046         	movff	?___flmul,___fladd@b
  6184   002344  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6185   002348  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6186   00234C  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6187   002350  ECD9  F00A         	call	___fladd	;wreg free
  6188   002354  C046  F064         	movff	?___fladd,___fltol@f1
  6189   002358  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  6190   00235C  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  6191   002360  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  6192   002364  EC1C  F021         	call	___fltol	;wreg free
  6193   002368  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  6194   00236C  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  6195   002370  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  6196   002374  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  6197   002378  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  6198   00237C  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  6199   002380  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  6200   002384  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  6201   002388  0E01               	movlw	1
  6202   00238A  EC1D  F01C         	call	___xxtofl
  6203   00238E  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  6204   002392  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  6205   002396  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  6206   00239A  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  6207   00239E  0EDA               	movlw	218
  6208   0023A0  6E18               	movwf	___flmul@a^0,c
  6209   0023A2  0E0F               	movlw	15
  6210   0023A4  6E19               	movwf	(___flmul@a+1)^0,c
  6211   0023A6  0EC9               	movlw	201
  6212   0023A8  6E1A               	movwf	(___flmul@a+2)^0,c
  6213   0023AA  0E3F               	movlw	63
  6214   0023AC  6E1B               	movwf	(___flmul@a+3)^0,c
  6215   0023AE  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6216   0023B2  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6217   0023B6  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6218   0023BA  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6219   0023BE  EC3A  F00D         	call	___flmul	;wreg free
  6220   0023C2  C014  F068         	movff	?___flmul,___flsub@a
  6221   0023C6  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6222   0023CA  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6223   0023CE  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6224   0023D2  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  6225   0023D6  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  6226   0023DA  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  6227   0023DE  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  6228   0023E2  ECA1  F027         	call	___flsub	;wreg free
  6229   0023E6  C064  F08F         	movff	?___flsub,___rem_pio2f$4531
  6230   0023EA  C065  F090         	movff	?___flsub+1,___rem_pio2f$4531+1
  6231   0023EE  C066  F091         	movff	?___flsub+2,___rem_pio2f$4531+2
  6232   0023F2  C067  F092         	movff	?___flsub+3,___rem_pio2f$4531+3
  6233   0023F6  C08F  F064         	movff	___rem_pio2f$4531,___flsub@b
  6234   0023FA  C090  F065         	movff	___rem_pio2f$4531+1,___flsub@b+1
  6235   0023FE  C091  F066         	movff	___rem_pio2f$4531+2,___flsub@b+2
  6236   002402  C092  F067         	movff	___rem_pio2f$4531+3,___flsub@b+3
  6237   002406  0EA3               	movlw	163
  6238   002408  6E18               	movwf	___flmul@a^0,c
  6239   00240A  0E85               	movlw	133
  6240   00240C  6E19               	movwf	(___flmul@a+1)^0,c
  6241   00240E  0E88               	movlw	136
  6242   002410  6E1A               	movwf	(___flmul@a+2)^0,c
  6243   002412  0E32               	movlw	50
  6244   002414  6E1B               	movwf	(___flmul@a+3)^0,c
  6245   002416  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6246   00241A  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6247   00241E  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6248   002422  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6249   002426  EC3A  F00D         	call	___flmul	;wreg free
  6250   00242A  C014  F068         	movff	?___flmul,___flsub@a
  6251   00242E  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6252   002432  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6253   002436  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6254   00243A  ECA1  F027         	call	___flsub	;wreg free
  6255   00243E  0100               	movlb	0	; () banked
  6256   002440  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6257   002442  6ED9               	movwf	fsr2l,c
  6258   002444  6ADA               	clrf	fsr2h,c
  6259   002446  C064  FFDE         	movff	?___flsub,postinc2
  6260   00244A  C065  FFDE         	movff	?___flsub+1,postinc2
  6261   00244E  C066  FFDE         	movff	?___flsub+2,postinc2
  6262   002452  C067  FFDE         	movff	?___flsub+3,postinc2
  6263   002456                     
  6264                           ; BSR set to: 0
  6265   002456  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  6266   002458  B4D8               	btfsc	status,2,c
  6267   00245A  EF31  F012         	goto	u9341
  6268   00245E  EF33  F012         	goto	u9340
  6269   002462                     u9341:
  6270   002462  EF5A  F012         	goto	l1744
  6271   002466                     u9340:
  6272   002466                     l7686:
  6273                           
  6274                           ; BSR set to: 0
  6275   002466  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6276   002468  6ED9               	movwf	fsr2l,c
  6277   00246A  6ADA               	clrf	fsr2h,c
  6278   00246C  CFDE F080          	movff	postinc2,___flneg@f1
  6279   002470  CFDE F081          	movff	postinc2,___flneg@f1+1
  6280   002474  CFDE F082          	movff	postinc2,___flneg@f1+2
  6281   002478  CFDE F083          	movff	postinc2,___flneg@f1+3
  6282   00247C  EC29  F028         	call	___flneg	;wreg free
  6283   002480  0100               	movlb	0	; () banked
  6284   002482  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6285   002484  6ED9               	movwf	fsr2l,c
  6286   002486  6ADA               	clrf	fsr2h,c
  6287   002488  C080  FFDE         	movff	?___flneg,postinc2
  6288   00248C  C081  FFDE         	movff	?___flneg+1,postinc2
  6289   002490  C082  FFDE         	movff	?___flneg+2,postinc2
  6290   002494  C083  FFDE         	movff	?___flneg+3,postinc2
  6291   002498                     
  6292                           ; BSR set to: 0
  6293   002498  C0A0  F089         	movff	___rem_pio2f@n,??___rem_pio2f
  6294   00249C  C0A1  F08A         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  6295   0024A0  1F89               	comf	??___rem_pio2f& (0+255),f,b
  6296   0024A2  1F8A               	comf	(??___rem_pio2f+1)& (0+255),f,b
  6297   0024A4  4B89               	infsnz	??___rem_pio2f& (0+255),f,b
  6298   0024A6  2B8A               	incf	(??___rem_pio2f+1)& (0+255),f,b
  6299   0024A8  C089  F084         	movff	??___rem_pio2f,?___rem_pio2f
  6300   0024AC  C08A  F085         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  6301   0024B0  EF29  F013         	goto	l1745
  6302   0024B4                     l1744:
  6303                           
  6304                           ; BSR set to: 0
  6305   0024B4  C0A0  F084         	movff	___rem_pio2f@n,?___rem_pio2f
  6306   0024B8  C0A1  F085         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  6307   0024BC  EF29  F013         	goto	l1745
  6308   0024C0                     l7692:
  6309                           
  6310                           ; BSR set to: 0
  6311   0024C0  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  6312   0024C4  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  6313   0024C8  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  6314   0024CC  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  6315   0024D0  EC98  F028         	call	_fabsf	;wreg free
  6316   0024D4  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  6317   0024D8  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  6318   0024DC  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  6319   0024E0  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  6320   0024E4  0E00               	movlw	0
  6321   0024E6  6E4A               	movwf	___fladd@a^0,c
  6322   0024E8  0E00               	movlw	0
  6323   0024EA  6E4B               	movwf	(___fladd@a+1)^0,c
  6324   0024EC  0E00               	movlw	0
  6325   0024EE  6E4C               	movwf	(___fladd@a+2)^0,c
  6326   0024F0  0E3F               	movlw	63
  6327   0024F2  6E4D               	movwf	(___fladd@a+3)^0,c
  6328   0024F4  0E83               	movlw	131
  6329   0024F6  6E18               	movwf	___flmul@a^0,c
  6330   0024F8  0EF9               	movlw	249
  6331   0024FA  6E19               	movwf	(___flmul@a+1)^0,c
  6332   0024FC  0E22               	movlw	34
  6333   0024FE  6E1A               	movwf	(___flmul@a+2)^0,c
  6334   002500  0E3F               	movlw	63
  6335   002502  6E1B               	movwf	(___flmul@a+3)^0,c
  6336   002504  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  6337   002508  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  6338   00250C  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  6339   002510  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  6340   002514  EC3A  F00D         	call	___flmul	;wreg free
  6341   002518  C014  F046         	movff	?___flmul,___fladd@b
  6342   00251C  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6343   002520  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6344   002524  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6345   002528  ECD9  F00A         	call	___fladd	;wreg free
  6346   00252C  C046  F064         	movff	?___fladd,___fltol@f1
  6347   002530  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  6348   002534  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  6349   002538  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  6350   00253C  EC1C  F021         	call	___fltol	;wreg free
  6351   002540  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  6352   002544  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  6353   002548  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  6354   00254C  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  6355   002550  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  6356   002554  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  6357   002558  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  6358   00255C  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  6359   002560  0E01               	movlw	1
  6360   002562  EC1D  F01C         	call	___xxtofl
  6361   002566  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  6362   00256A  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  6363   00256E  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  6364   002572  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  6365   002576  0EDA               	movlw	218
  6366   002578  6E18               	movwf	___flmul@a^0,c
  6367   00257A  0E0F               	movlw	15
  6368   00257C  6E19               	movwf	(___flmul@a+1)^0,c
  6369   00257E  0EC9               	movlw	201
  6370   002580  6E1A               	movwf	(___flmul@a+2)^0,c
  6371   002582  0E3F               	movlw	63
  6372   002584  6E1B               	movwf	(___flmul@a+3)^0,c
  6373   002586  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6374   00258A  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6375   00258E  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6376   002592  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6377   002596  EC3A  F00D         	call	___flmul	;wreg free
  6378   00259A  C014  F068         	movff	?___flmul,___flsub@a
  6379   00259E  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6380   0025A2  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6381   0025A6  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6382   0025AA  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  6383   0025AE  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  6384   0025B2  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  6385   0025B6  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  6386   0025BA  ECA1  F027         	call	___flsub	;wreg free
  6387   0025BE  C064  F08F         	movff	?___flsub,___rem_pio2f$4531
  6388   0025C2  C065  F090         	movff	?___flsub+1,___rem_pio2f$4531+1
  6389   0025C6  C066  F091         	movff	?___flsub+2,___rem_pio2f$4531+2
  6390   0025CA  C067  F092         	movff	?___flsub+3,___rem_pio2f$4531+3
  6391   0025CE  C08F  F064         	movff	___rem_pio2f$4531,___flsub@b
  6392   0025D2  C090  F065         	movff	___rem_pio2f$4531+1,___flsub@b+1
  6393   0025D6  C091  F066         	movff	___rem_pio2f$4531+2,___flsub@b+2
  6394   0025DA  C092  F067         	movff	___rem_pio2f$4531+3,___flsub@b+3
  6395   0025DE  0EA3               	movlw	163
  6396   0025E0  6E18               	movwf	___flmul@a^0,c
  6397   0025E2  0E85               	movlw	133
  6398   0025E4  6E19               	movwf	(___flmul@a+1)^0,c
  6399   0025E6  0E88               	movlw	136
  6400   0025E8  6E1A               	movwf	(___flmul@a+2)^0,c
  6401   0025EA  0E32               	movlw	50
  6402   0025EC  6E1B               	movwf	(___flmul@a+3)^0,c
  6403   0025EE  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6404   0025F2  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6405   0025F6  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6406   0025FA  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6407   0025FE  EC3A  F00D         	call	___flmul	;wreg free
  6408   002602  C014  F068         	movff	?___flmul,___flsub@a
  6409   002606  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6410   00260A  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6411   00260E  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6412   002612  ECA1  F027         	call	___flsub	;wreg free
  6413   002616  C064  F08B         	movff	?___flsub,___rem_pio2f@ty
  6414   00261A  C065  F08C         	movff	?___flsub+1,___rem_pio2f@ty+1
  6415   00261E  C066  F08D         	movff	?___flsub+2,___rem_pio2f@ty+2
  6416   002622  C067  F08E         	movff	?___flsub+3,___rem_pio2f@ty+3
  6417   002626  0100               	movlb	0	; () banked
  6418   002628  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6419   00262A  6ED9               	movwf	fsr2l,c
  6420   00262C  6ADA               	clrf	fsr2h,c
  6421   00262E  C08B  FFDE         	movff	___rem_pio2f@ty,postinc2
  6422   002632  C08C  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  6423   002636  C08D  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  6424   00263A  C08E  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  6425   00263E                     
  6426                           ; BSR set to: 0
  6427   00263E  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  6428   002640  B4D8               	btfsc	status,2,c
  6429   002642  EF25  F013         	goto	u9351
  6430   002646  EF27  F013         	goto	u9350
  6431   00264A                     u9351:
  6432   00264A  EF5A  F012         	goto	l1744
  6433   00264E                     u9350:
  6434   00264E  EF33  F012         	goto	l7686
  6435   002652                     l1745:
  6436                           
  6437                           ; BSR set to: 0
  6438   002652  0012               	return		;funcret
  6439   002654                     __end_of___rem_pio2f:
  6440                           	callstack 0
  6441                           
  6442 ;; *************** function _fabsf *****************
  6443 ;; Defined at:
  6444 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fabsf.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  x               4    5[COMRAM] float 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  u               4    9[COMRAM] struct .
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  4    5[COMRAM] float 
  6451 ;; Registers used:
  6452 ;;		status,2, status,0
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;Total ram usage:        8 bytes
  6463 ;; Hardware stack levels used: 1
  6464 ;; Hardware stack levels required when called: 1
  6465 ;; This function calls:
  6466 ;;		Nothing
  6467 ;; This function is called by:
  6468 ;;		___rem_pio2f
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text20
  6473   005130                     __ptext20:
  6474                           	callstack 0
  6475   005130                     _fabsf:
  6476                           	callstack 26
  6477   005130  C111  F00A         	movff	fabsf@F465,fabsf@u
  6478   005134  C112  F00B         	movff	fabsf@F465+1,fabsf@u+1
  6479   005138  C113  F00C         	movff	fabsf@F465+2,fabsf@u+2
  6480   00513C  C114  F00D         	movff	fabsf@F465+3,fabsf@u+3
  6481   005140  C006  F00A         	movff	fabsf@x,fabsf@u
  6482   005144  C007  F00B         	movff	fabsf@x+1,fabsf@u+1
  6483   005148  C008  F00C         	movff	fabsf@x+2,fabsf@u+2
  6484   00514C  C009  F00D         	movff	fabsf@x+3,fabsf@u+3
  6485   005150  9E0D               	bcf	(fabsf@u+3)^0,7,c
  6486   005152  C00A  F006         	movff	fabsf@u,?_fabsf
  6487   005156  C00B  F007         	movff	fabsf@u+1,?_fabsf+1
  6488   00515A  C00C  F008         	movff	fabsf@u+2,?_fabsf+2
  6489   00515E  C00D  F009         	movff	fabsf@u+3,?_fabsf+3
  6490   005162  0012               	return		;funcret
  6491   005164                     __end_of_fabsf:
  6492                           	callstack 0
  6493                           
  6494 ;; *************** function ___cosdf *****************
  6495 ;; Defined at:
  6496 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__cosdf.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  x               4    4[BANK0 ] float 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;  z               4   28[BANK0 ] float 
  6501 ;;  w               4   24[BANK0 ] float 
  6502 ;;  r               4    8[BANK0 ] float 
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  4    4[BANK0 ] float 
  6505 ;; Registers used:
  6506 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6512 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6513 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6515 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6516 ;;Total ram usage:       28 bytes
  6517 ;; Hardware stack levels used: 1
  6518 ;; Hardware stack levels required when called: 2
  6519 ;; This function calls:
  6520 ;;		___fladd
  6521 ;;		___flmul
  6522 ;; This function is called by:
  6523 ;;		_sinf
  6524 ;; This function uses a non-reentrant model
  6525 ;;
  6526                           
  6527                           	psect	text21
  6528   00363C                     __ptext21:
  6529                           	callstack 0
  6530   00363C                     ___cosdf:
  6531                           	callstack 26
  6532   00363C  C064  F014         	movff	___cosdf@x,___flmul@b
  6533   003640  C065  F015         	movff	___cosdf@x+1,___flmul@b+1
  6534   003644  C066  F016         	movff	___cosdf@x+2,___flmul@b+2
  6535   003648  C067  F017         	movff	___cosdf@x+3,___flmul@b+3
  6536   00364C  C064  F018         	movff	___cosdf@x,___flmul@a
  6537   003650  C065  F019         	movff	___cosdf@x+1,___flmul@a+1
  6538   003654  C066  F01A         	movff	___cosdf@x+2,___flmul@a+2
  6539   003658  C067  F01B         	movff	___cosdf@x+3,___flmul@a+3
  6540   00365C  EC3A  F00D         	call	___flmul	;wreg free
  6541   003660  C014  F07C         	movff	?___flmul,___cosdf@z
  6542   003664  C015  F07D         	movff	?___flmul+1,___cosdf@z+1
  6543   003668  C016  F07E         	movff	?___flmul+2,___cosdf@z+2
  6544   00366C  C017  F07F         	movff	?___flmul+3,___cosdf@z+3
  6545   003670  C07C  F014         	movff	___cosdf@z,___flmul@b
  6546   003674  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6547   003678  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6548   00367C  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6549   003680  C07C  F018         	movff	___cosdf@z,___flmul@a
  6550   003684  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6551   003688  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6552   00368C  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6553   003690  EC3A  F00D         	call	___flmul	;wreg free
  6554   003694  C014  F078         	movff	?___flmul,___cosdf@w
  6555   003698  C015  F079         	movff	?___flmul+1,___cosdf@w+1
  6556   00369C  C016  F07A         	movff	?___flmul+2,___cosdf@w+2
  6557   0036A0  C017  F07B         	movff	?___flmul+3,___cosdf@w+3
  6558   0036A4  0E17               	movlw	23
  6559   0036A6  6E18               	movwf	___flmul@a^0,c
  6560   0036A8  0E9A               	movlw	154
  6561   0036AA  6E19               	movwf	(___flmul@a+1)^0,c
  6562   0036AC  0ECC               	movlw	204
  6563   0036AE  6E1A               	movwf	(___flmul@a+2)^0,c
  6564   0036B0  0E37               	movlw	55
  6565   0036B2  6E1B               	movwf	(___flmul@a+3)^0,c
  6566   0036B4  C07C  F014         	movff	___cosdf@z,___flmul@b
  6567   0036B8  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6568   0036BC  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6569   0036C0  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6570   0036C4  EC3A  F00D         	call	___flmul	;wreg free
  6571   0036C8  C014  F046         	movff	?___flmul,___fladd@b
  6572   0036CC  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6573   0036D0  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6574   0036D4  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6575   0036D8  0E3F               	movlw	63
  6576   0036DA  6E4A               	movwf	___fladd@a^0,c
  6577   0036DC  0E04               	movlw	4
  6578   0036DE  6E4B               	movwf	(___fladd@a+1)^0,c
  6579   0036E0  0EB6               	movlw	182
  6580   0036E2  6E4C               	movwf	(___fladd@a+2)^0,c
  6581   0036E4  0EBA               	movlw	186
  6582   0036E6  6E4D               	movwf	(___fladd@a+3)^0,c
  6583   0036E8  ECD9  F00A         	call	___fladd	;wreg free
  6584   0036EC  C046  F068         	movff	?___fladd,___cosdf@r
  6585   0036F0  C047  F069         	movff	?___fladd+1,___cosdf@r+1
  6586   0036F4  C048  F06A         	movff	?___fladd+2,___cosdf@r+2
  6587   0036F8  C049  F06B         	movff	?___fladd+3,___cosdf@r+3
  6588   0036FC  0E00               	movlw	0
  6589   0036FE  6E4A               	movwf	___fladd@a^0,c
  6590   003700  0E00               	movlw	0
  6591   003702  6E4B               	movwf	(___fladd@a+1)^0,c
  6592   003704  0E80               	movlw	128
  6593   003706  6E4C               	movwf	(___fladd@a+2)^0,c
  6594   003708  0E3F               	movlw	63
  6595   00370A  6E4D               	movwf	(___fladd@a+3)^0,c
  6596   00370C  0E00               	movlw	0
  6597   00370E  6E18               	movwf	___flmul@a^0,c
  6598   003710  0E00               	movlw	0
  6599   003712  6E19               	movwf	(___flmul@a+1)^0,c
  6600   003714  0E00               	movlw	0
  6601   003716  6E1A               	movwf	(___flmul@a+2)^0,c
  6602   003718  0EBF               	movlw	191
  6603   00371A  6E1B               	movwf	(___flmul@a+3)^0,c
  6604   00371C  C07C  F014         	movff	___cosdf@z,___flmul@b
  6605   003720  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6606   003724  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6607   003728  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6608   00372C  EC3A  F00D         	call	___flmul	;wreg free
  6609   003730  C014  F046         	movff	?___flmul,___fladd@b
  6610   003734  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6611   003738  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6612   00373C  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6613   003740  ECD9  F00A         	call	___fladd	;wreg free
  6614   003744  C046  F06C         	movff	?___fladd,___cosdf$4528
  6615   003748  C047  F06D         	movff	?___fladd+1,___cosdf$4528+1
  6616   00374C  C048  F06E         	movff	?___fladd+2,___cosdf$4528+2
  6617   003750  C049  F06F         	movff	?___fladd+3,___cosdf$4528+3
  6618   003754  C07C  F018         	movff	___cosdf@z,___flmul@a
  6619   003758  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6620   00375C  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6621   003760  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6622   003764  C078  F014         	movff	___cosdf@w,___flmul@b
  6623   003768  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6624   00376C  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6625   003770  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6626   003774  EC3A  F00D         	call	___flmul	;wreg free
  6627   003778  C014  F070         	movff	?___flmul,___cosdf$4529
  6628   00377C  C015  F071         	movff	?___flmul+1,___cosdf$4529+1
  6629   003780  C016  F072         	movff	?___flmul+2,___cosdf$4529+2
  6630   003784  C017  F073         	movff	?___flmul+3,___cosdf$4529+3
  6631   003788  0E9F               	movlw	159
  6632   00378A  6E18               	movwf	___flmul@a^0,c
  6633   00378C  0EAA               	movlw	170
  6634   00378E  6E19               	movwf	(___flmul@a+1)^0,c
  6635   003790  0E2A               	movlw	42
  6636   003792  6E1A               	movwf	(___flmul@a+2)^0,c
  6637   003794  0E3D               	movlw	61
  6638   003796  6E1B               	movwf	(___flmul@a+3)^0,c
  6639   003798  C078  F014         	movff	___cosdf@w,___flmul@b
  6640   00379C  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6641   0037A0  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6642   0037A4  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6643   0037A8  EC3A  F00D         	call	___flmul	;wreg free
  6644   0037AC  C014  F04A         	movff	?___flmul,___fladd@a
  6645   0037B0  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6646   0037B4  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6647   0037B8  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6648   0037BC  C06C  F046         	movff	___cosdf$4528,___fladd@b
  6649   0037C0  C06D  F047         	movff	___cosdf$4528+1,___fladd@b+1
  6650   0037C4  C06E  F048         	movff	___cosdf$4528+2,___fladd@b+2
  6651   0037C8  C06F  F049         	movff	___cosdf$4528+3,___fladd@b+3
  6652   0037CC  ECD9  F00A         	call	___fladd	;wreg free
  6653   0037D0  C046  F074         	movff	?___fladd,___cosdf$4530
  6654   0037D4  C047  F075         	movff	?___fladd+1,___cosdf$4530+1
  6655   0037D8  C048  F076         	movff	?___fladd+2,___cosdf$4530+2
  6656   0037DC  C049  F077         	movff	?___fladd+3,___cosdf$4530+3
  6657   0037E0  C074  F046         	movff	___cosdf$4530,___fladd@b
  6658   0037E4  C075  F047         	movff	___cosdf$4530+1,___fladd@b+1
  6659   0037E8  C076  F048         	movff	___cosdf$4530+2,___fladd@b+2
  6660   0037EC  C077  F049         	movff	___cosdf$4530+3,___fladd@b+3
  6661   0037F0  C068  F018         	movff	___cosdf@r,___flmul@a
  6662   0037F4  C069  F019         	movff	___cosdf@r+1,___flmul@a+1
  6663   0037F8  C06A  F01A         	movff	___cosdf@r+2,___flmul@a+2
  6664   0037FC  C06B  F01B         	movff	___cosdf@r+3,___flmul@a+3
  6665   003800  C070  F014         	movff	___cosdf$4529,___flmul@b
  6666   003804  C071  F015         	movff	___cosdf$4529+1,___flmul@b+1
  6667   003808  C072  F016         	movff	___cosdf$4529+2,___flmul@b+2
  6668   00380C  C073  F017         	movff	___cosdf$4529+3,___flmul@b+3
  6669   003810  EC3A  F00D         	call	___flmul	;wreg free
  6670   003814  C014  F04A         	movff	?___flmul,___fladd@a
  6671   003818  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6672   00381C  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6673   003820  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6674   003824  ECD9  F00A         	call	___fladd	;wreg free
  6675   003828  C046  F064         	movff	?___fladd,?___cosdf
  6676   00382C  C047  F065         	movff	?___fladd+1,?___cosdf+1
  6677   003830  C048  F066         	movff	?___fladd+2,?___cosdf+2
  6678   003834  C049  F067         	movff	?___fladd+3,?___cosdf+3
  6679   003838  0012               	return		;funcret
  6680   00383A                     __end_of___cosdf:
  6681                           	callstack 0
  6682                           
  6683 ;; *************** function _printf *****************
  6684 ;; Defined at:
  6685 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\printf.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  6688 ;;		 -> STR_28(5), STR_16(5), 
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;  ret             2    0        int 
  6691 ;;  ap              1   83[COMRAM] PTR void [1]
  6692 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6693 ;; Return value:  Size  Location     Type
  6694 ;;                  2  110[BANK0 ] int 
  6695 ;; Registers used:
  6696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6702 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6706 ;;Total ram usage:        5 bytes
  6707 ;; Hardware stack levels used: 1
  6708 ;; Hardware stack levels required when called: 8
  6709 ;; This function calls:
  6710 ;;		_vfprintf
  6711 ;; This function is called by:
  6712 ;;		_runDAC
  6713 ;;		_runUART
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           	psect	text22
  6718   00520C                     __ptext22:
  6719                           	callstack 0
  6720   00520C                     _printf:
  6721                           	callstack 21
  6722   00520C  0ED0               	movlw	low (?_printf+2)
  6723   00520E  6E54               	movwf	printf@ap^0,c
  6724   005210  0E00               	movlw	0
  6725   005212  0100               	movlb	0	; () banked
  6726   005214  6FC7               	movwf	vfprintf@fp& (0+255),b
  6727   005216  0E00               	movlw	0
  6728   005218  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6729   00521A  C0CE  F0C9         	movff	printf@fmt,vfprintf@fmt
  6730   00521E  C0CF  F0CA         	movff	printf@fmt+1,vfprintf@fmt+1
  6731   005222  0E54               	movlw	low printf@ap
  6732   005224  6FCB               	movwf	vfprintf@ap& (0+255),b
  6733   005226  EC7C  F027         	call	_vfprintf	;wreg free
  6734   00522A  0012               	return		;funcret
  6735   00522C                     __end_of_printf:
  6736                           	callstack 0
  6737                           
  6738 ;; *************** function _SPI_write *****************
  6739 ;; Defined at:
  6740 ;;		line 93 in file "DAC.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  data            1    wreg     unsigned char 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;  data            1    7[COMRAM] unsigned char 
  6745 ;;  LSB             1    6[COMRAM] unsigned char 
  6746 ;;  MSB             1    5[COMRAM] unsigned char 
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  1    wreg      void 
  6749 ;; Registers used:
  6750 ;;		wreg, status,2, status,0
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6757 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6759 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6760 ;;Total ram usage:        3 bytes
  6761 ;; Hardware stack levels used: 1
  6762 ;; Hardware stack levels required when called: 1
  6763 ;; This function calls:
  6764 ;;		Nothing
  6765 ;; This function is called by:
  6766 ;;		_runDAC
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           	psect	text23
  6771   005014                     __ptext23:
  6772                           	callstack 0
  6773   005014                     _SPI_write:
  6774                           	callstack 28
  6775                           
  6776                           ;incstack = 0
  6777                           ;SPI_write@data stored from wreg
  6778   005014  6E08               	movwf	SPI_write@data^0,c
  6779   005016                     
  6780                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  6781   005016  3808               	swapf	SPI_write@data^0,w,c
  6782   005018  0B0F               	andlw	15
  6783   00501A  0930               	iorlw	48
  6784   00501C  6E06               	movwf	SPI_write@MSB^0,c
  6785                           
  6786                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  6787   00501E  3808               	swapf	SPI_write@data^0,w,c
  6788   005020  0BF0               	andlw	240
  6789   005022  6E07               	movwf	SPI_write@LSB^0,c
  6790   005024                     
  6791                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  6792   005024  968A               	bcf	138,3,c	;volatile
  6793   005026                     
  6794                           ;DAC.c: 101:     SSP1BUF = MSB;
  6795   005026  C006  FFC9         	movff	SPI_write@MSB,4041	;volatile
  6796   00502A                     l245:
  6797   00502A  A69E               	btfss	3998,3,c	;volatile
  6798   00502C  EF1A  F028         	goto	u9441
  6799   005030  EF1C  F028         	goto	u9440
  6800   005034                     u9441:
  6801   005034  EF15  F028         	goto	l245
  6802   005038                     u9440:
  6803   005038                     
  6804                           ;DAC.c: 103:     SSP1IF = 0;
  6805   005038  969E               	bcf	3998,3,c	;volatile
  6806                           
  6807                           ;DAC.c: 105:     SSP1BUF = LSB;
  6808   00503A  C007  FFC9         	movff	SPI_write@LSB,4041	;volatile
  6809   00503E                     l248:
  6810   00503E  A69E               	btfss	3998,3,c	;volatile
  6811   005040  EF24  F028         	goto	u9451
  6812   005044  EF26  F028         	goto	u9450
  6813   005048                     u9451:
  6814   005048  EF1F  F028         	goto	l248
  6815   00504C                     u9450:
  6816   00504C                     
  6817                           ;DAC.c: 107:     SSP1IF = 0;
  6818   00504C  969E               	bcf	3998,3,c	;volatile
  6819                           
  6820                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  6821   00504E  868A               	bsf	138,3,c	;volatile
  6822   005050  0012               	return		;funcret
  6823   005052                     __end_of_SPI_write:
  6824                           	callstack 0
  6825                           
  6826 ;; *************** function _runADC *****************
  6827 ;; Defined at:
  6828 ;;		line 13 in file "ADC.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;		None
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;  text           17    0[BANK1 ] unsigned char [17]
  6833 ;;  voltage2        4   21[BANK1 ] float 
  6834 ;;  voltage1        4   17[BANK1 ] float 
  6835 ;;  pot2            2   27[BANK1 ] unsigned short 
  6836 ;;  pot1            2   25[BANK1 ] unsigned short 
  6837 ;;  keepState       1   29[BANK1 ] unsigned char 
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  1    wreg      void 
  6840 ;; Registers used:
  6841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6848 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6849 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6850 ;;      Totals:         0       2      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6851 ;;Total ram usage:       32 bytes
  6852 ;; Hardware stack levels used: 1
  6853 ;; Hardware stack levels required when called: 9
  6854 ;; This function calls:
  6855 ;;		_LCD_ShowString
  6856 ;;		___fldiv
  6857 ;;		___flmul
  6858 ;;		___xxtofl
  6859 ;;		_sprintf
  6860 ;; This function is called by:
  6861 ;;		_main
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865                           	psect	text24
  6866   00342A                     __ptext24:
  6867                           	callstack 0
  6868   00342A                     _runADC:
  6869                           	callstack 21
  6870   00342A                     
  6871                           ;ADC.c: 16: ANSELAbits.ANSA5 = 1;
  6872   00342A  010F               	movlb	15	; () banked
  6873   00342C  8B38               	bsf	56,5,b	;volatile
  6874                           
  6875                           ;ADC.c: 17: ANSELEbits.ANSE0 = 1;
  6876   00342E  813C               	bsf	60,0,b	;volatile
  6877                           
  6878                           ;ADC.c: 19: ADCON2bits.ADFM = 1;
  6879   003430  8EC0               	bsf	192,7,c	;volatile
  6880   003432                     
  6881                           ; BSR set to: 15
  6882                           ;ADC.c: 20: ADCON2bits.ADCS = 0b110;
  6883   003432  50C0               	movf	192,w,c	;volatile
  6884   003434  0BF8               	andlw	-8
  6885   003436  0906               	iorlw	6
  6886   003438  6EC0               	movwf	192,c	;volatile
  6887                           
  6888                           ;ADC.c: 21: ADCON2bits.ACQT = 0b110;
  6889   00343A  50C0               	movf	192,w,c	;volatile
  6890   00343C  0BC7               	andlw	-57
  6891   00343E  0930               	iorlw	48
  6892   003440  6EC0               	movwf	192,c	;volatile
  6893   003442                     
  6894                           ; BSR set to: 15
  6895                           ;ADC.c: 22: ADCON0bits.ADON = 1;
  6896   003442  80C2               	bsf	194,0,c	;volatile
  6897   003444                     
  6898                           ; BSR set to: 15
  6899                           ;ADC.c: 25: uint16_t pot1, pot2;;ADC.c: 26: float voltage1, voltage2;;ADC.c: 27: char te
      +                          xt[17] = "";
  6900   003444  EE21  F09B         	lfsr	2,runADC@text
  6901   003448  0E10               	movlw	16
  6902   00344A                     u10011:
  6903   00344A  6ADE               	clrf	postinc2,c
  6904   00344C  06E8               	decf	wreg,f,c
  6905   00344E  E2FD               	bc	u10011
  6906   003450                     
  6907                           ; BSR set to: 15
  6908                           ;ADC.c: 28: uint8_t keepState = 1;
  6909   003450  0E01               	movlw	1
  6910   003452  0101               	movlb	1	; () banked
  6911   003454  6FB8               	movwf	runADC@keepState& (0+255),b
  6912                           
  6913                           ;ADC.c: 30: while(keepState){
  6914   003456  EF13  F01B         	goto	l462
  6915   00345A                     l8130:
  6916                           
  6917                           ; BSR set to: 1
  6918                           ;ADC.c: 32:     ADCON0bits.CHS = 5;
  6919   00345A  50C2               	movf	194,w,c	;volatile
  6920   00345C  0B83               	andlw	-125
  6921   00345E  0914               	iorlw	20
  6922   003460  6EC2               	movwf	194,c	;volatile
  6923   003462                     
  6924                           ; BSR set to: 1
  6925                           ;ADC.c: 33:     GODONE = 1;
  6926   003462  82C2               	bsf	4034,1,c	;volatile
  6927   003464                     l464:
  6928   003464  B2C2               	btfsc	4034,1,c	;volatile
  6929   003466  EF37  F01A         	goto	u10021
  6930   00346A  EF39  F01A         	goto	u10020
  6931   00346E                     u10021:
  6932   00346E  EF32  F01A         	goto	l464
  6933   003472                     u10020:
  6934   003472                     
  6935                           ;ADC.c: 35:     pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  6936   003472  50C3               	movf	195,w,c	;volatile
  6937   003474  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  6938   003478  0100               	movlb	0	; () banked
  6939   00347A  6BE8               	clrf	(??_runADC+1)& (0+255),b
  6940   00347C  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  6941   003480  6BE7               	clrf	??_runADC& (0+255),b
  6942   003482  11E7               	iorwf	??_runADC& (0+255),w,b
  6943   003484  0101               	movlb	1	; () banked
  6944   003486  6FB4               	movwf	runADC@pot1& (0+255),b
  6945   003488  0100               	movlb	0	; () banked
  6946   00348A  51E8               	movf	(??_runADC+1)& (0+255),w,b
  6947   00348C  0101               	movlb	1	; () banked
  6948   00348E  6FB5               	movwf	(runADC@pot1+1)& (0+255),b
  6949   003490                     
  6950                           ; BSR set to: 1
  6951                           ;ADC.c: 36:     voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  6952   003490  0E00               	movlw	0
  6953   003492  6E31               	movwf	___fldiv@a^0,c
  6954   003494  0EC0               	movlw	192
  6955   003496  6E32               	movwf	(___fldiv@a+1)^0,c
  6956   003498  0E7F               	movlw	127
  6957   00349A  6E33               	movwf	(___fldiv@a+2)^0,c
  6958   00349C  0E44               	movlw	68
  6959   00349E  6E34               	movwf	(___fldiv@a+3)^0,c
  6960   0034A0  C1B4  F006         	movff	runADC@pot1,___xxtofl@val
  6961   0034A4  C1B5  F007         	movff	runADC@pot1+1,___xxtofl@val+1
  6962   0034A8  6A08               	clrf	(___xxtofl@val+2)^0,c
  6963   0034AA  6A09               	clrf	(___xxtofl@val+3)^0,c
  6964   0034AC  0E00               	movlw	0
  6965   0034AE  EC1D  F01C         	call	___xxtofl
  6966   0034B2  C006  F02D         	movff	?___xxtofl,___fldiv@b
  6967   0034B6  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  6968   0034BA  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  6969   0034BE  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  6970   0034C2  EC2A  F013         	call	___fldiv	;wreg free
  6971   0034C6  C02D  F014         	movff	?___fldiv,___flmul@b
  6972   0034CA  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  6973   0034CE  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  6974   0034D2  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  6975   0034D6  0E33               	movlw	51
  6976   0034D8  6E18               	movwf	___flmul@a^0,c
  6977   0034DA  0E33               	movlw	51
  6978   0034DC  6E19               	movwf	(___flmul@a+1)^0,c
  6979   0034DE  0E53               	movlw	83
  6980   0034E0  6E1A               	movwf	(___flmul@a+2)^0,c
  6981   0034E2  0E40               	movlw	64
  6982   0034E4  6E1B               	movwf	(___flmul@a+3)^0,c
  6983   0034E6  EC3A  F00D         	call	___flmul	;wreg free
  6984   0034EA  C014  F1AC         	movff	?___flmul,runADC@voltage1
  6985   0034EE  C015  F1AD         	movff	?___flmul+1,runADC@voltage1+1
  6986   0034F2  C016  F1AE         	movff	?___flmul+2,runADC@voltage1+2
  6987   0034F6  C017  F1AF         	movff	?___flmul+3,runADC@voltage1+3
  6988   0034FA                     
  6989                           ;ADC.c: 39:     ADCON0bits.CHS = 4;
  6990   0034FA  50C2               	movf	194,w,c	;volatile
  6991   0034FC  0B83               	andlw	-125
  6992   0034FE  0910               	iorlw	16
  6993   003500  6EC2               	movwf	194,c	;volatile
  6994   003502                     
  6995                           ;ADC.c: 40:     GODONE = 1;
  6996   003502  82C2               	bsf	4034,1,c	;volatile
  6997   003504                     l467:
  6998   003504  B2C2               	btfsc	4034,1,c	;volatile
  6999   003506  EF87  F01A         	goto	u10031
  7000   00350A  EF89  F01A         	goto	u10030
  7001   00350E                     u10031:
  7002   00350E  EF82  F01A         	goto	l467
  7003   003512                     u10030:
  7004   003512                     
  7005                           ;ADC.c: 42:     pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  7006   003512  50C3               	movf	195,w,c	;volatile
  7007   003514  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  7008   003518  0100               	movlb	0	; () banked
  7009   00351A  6BE8               	clrf	(??_runADC+1)& (0+255),b
  7010   00351C  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  7011   003520  6BE7               	clrf	??_runADC& (0+255),b
  7012   003522  11E7               	iorwf	??_runADC& (0+255),w,b
  7013   003524  0101               	movlb	1	; () banked
  7014   003526  6FB6               	movwf	runADC@pot2& (0+255),b
  7015   003528  0100               	movlb	0	; () banked
  7016   00352A  51E8               	movf	(??_runADC+1)& (0+255),w,b
  7017   00352C  0101               	movlb	1	; () banked
  7018   00352E  6FB7               	movwf	(runADC@pot2+1)& (0+255),b
  7019   003530                     
  7020                           ; BSR set to: 1
  7021                           ;ADC.c: 43:     voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  7022   003530  0E00               	movlw	0
  7023   003532  6E31               	movwf	___fldiv@a^0,c
  7024   003534  0EC0               	movlw	192
  7025   003536  6E32               	movwf	(___fldiv@a+1)^0,c
  7026   003538  0E7F               	movlw	127
  7027   00353A  6E33               	movwf	(___fldiv@a+2)^0,c
  7028   00353C  0E44               	movlw	68
  7029   00353E  6E34               	movwf	(___fldiv@a+3)^0,c
  7030   003540  C1B6  F006         	movff	runADC@pot2,___xxtofl@val
  7031   003544  C1B7  F007         	movff	runADC@pot2+1,___xxtofl@val+1
  7032   003548  6A08               	clrf	(___xxtofl@val+2)^0,c
  7033   00354A  6A09               	clrf	(___xxtofl@val+3)^0,c
  7034   00354C  0E00               	movlw	0
  7035   00354E  EC1D  F01C         	call	___xxtofl
  7036   003552  C006  F02D         	movff	?___xxtofl,___fldiv@b
  7037   003556  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  7038   00355A  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  7039   00355E  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  7040   003562  EC2A  F013         	call	___fldiv	;wreg free
  7041   003566  C02D  F014         	movff	?___fldiv,___flmul@b
  7042   00356A  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  7043   00356E  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  7044   003572  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  7045   003576  0E33               	movlw	51
  7046   003578  6E18               	movwf	___flmul@a^0,c
  7047   00357A  0E33               	movlw	51
  7048   00357C  6E19               	movwf	(___flmul@a+1)^0,c
  7049   00357E  0E53               	movlw	83
  7050   003580  6E1A               	movwf	(___flmul@a+2)^0,c
  7051   003582  0E40               	movlw	64
  7052   003584  6E1B               	movwf	(___flmul@a+3)^0,c
  7053   003586  EC3A  F00D         	call	___flmul	;wreg free
  7054   00358A  C014  F1B0         	movff	?___flmul,runADC@voltage2
  7055   00358E  C015  F1B1         	movff	?___flmul+1,runADC@voltage2+1
  7056   003592  C016  F1B2         	movff	?___flmul+2,runADC@voltage2+2
  7057   003596  C017  F1B3         	movff	?___flmul+3,runADC@voltage2+3
  7058   00359A                     
  7059                           ;ADC.c: 45:     sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  7060   00359A  0E9B               	movlw	low runADC@text
  7061   00359C  0100               	movlb	0	; () banked
  7062   00359E  6FCE               	movwf	sprintf@s& (0+255),b
  7063   0035A0  0E01               	movlw	high runADC@text
  7064   0035A2  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7065   0035A4  0ECE               	movlw	low STR_27
  7066   0035A6  6FD0               	movwf	sprintf@fmt& (0+255),b
  7067   0035A8  0EFE               	movlw	high STR_27
  7068   0035AA  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7069   0035AC  C1AC  F0D2         	movff	runADC@voltage1,?_sprintf+4
  7070   0035B0  C1AD  F0D3         	movff	runADC@voltage1+1,?_sprintf+5
  7071   0035B4  C1AE  F0D4         	movff	runADC@voltage1+2,?_sprintf+6
  7072   0035B8  C1AF  F0D5         	movff	runADC@voltage1+3,?_sprintf+7
  7073   0035BC  C1B0  F0D6         	movff	runADC@voltage2,?_sprintf+8
  7074   0035C0  C1B1  F0D7         	movff	runADC@voltage2+1,?_sprintf+9
  7075   0035C4  C1B2  F0D8         	movff	runADC@voltage2+2,?_sprintf+10
  7076   0035C8  C1B3  F0D9         	movff	runADC@voltage2+3,?_sprintf+11
  7077   0035CC  ECC5  F027         	call	_sprintf	;wreg free
  7078   0035D0                     
  7079                           ;ADC.c: 46:     LCD_ShowString(2, text);
  7080   0035D0  0E9B               	movlw	low runADC@text
  7081   0035D2  6E07               	movwf	LCD_ShowString@textData^0,c
  7082   0035D4  0E01               	movlw	high runADC@text
  7083   0035D6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7084   0035D8  0E02               	movlw	2
  7085   0035DA  EC4D  F024         	call	_LCD_ShowString
  7086   0035DE                     
  7087                           ;ADC.c: 48:     if(PORTAbits.RA2){
  7088   0035DE  A480               	btfss	128,2,c	;volatile
  7089   0035E0  EFF4  F01A         	goto	u10041
  7090   0035E4  EFF6  F01A         	goto	u10040
  7091   0035E8                     u10041:
  7092   0035E8  EF13  F01B         	goto	l462
  7093   0035EC                     u10040:
  7094   0035EC                     
  7095                           ;ADC.c: 49:         _delay((unsigned long)((50)*(32E6/4000.0)));
  7096   0035EC  0E03               	movlw	3
  7097   0035EE  0100               	movlb	0	; () banked
  7098   0035F0  6FE8               	movwf	(??_runADC+1)& (0+255),b
  7099   0035F2  0E08               	movlw	8
  7100   0035F4  6FE7               	movwf	??_runADC& (0+255),b
  7101   0035F6  0E77               	movlw	119
  7102   0035F8                     u10497:
  7103   0035F8  2EE8               	decfsz	wreg,f,c
  7104   0035FA  D7FE               	bra	u10497
  7105   0035FC  2FE7               	decfsz	??_runADC& (0+255),f,b
  7106   0035FE  D7FC               	bra	u10497
  7107   003600  2FE8               	decfsz	(??_runADC+1)& (0+255),f,b
  7108   003602  D7FA               	bra	u10497
  7109   003604                     
  7110                           ;ADC.c: 50:         if(PORTAbits.RA2){
  7111   003604  A480               	btfss	128,2,c	;volatile
  7112   003606  EF07  F01B         	goto	u10051
  7113   00360A  EF09  F01B         	goto	u10050
  7114   00360E                     u10051:
  7115   00360E  EF13  F01B         	goto	l462
  7116   003612                     u10050:
  7117   003612                     l472:
  7118   003612  B480               	btfsc	128,2,c	;volatile
  7119   003614  EF0E  F01B         	goto	u10061
  7120   003618  EF10  F01B         	goto	u10060
  7121   00361C                     u10061:
  7122   00361C  EF09  F01B         	goto	l472
  7123   003620                     u10060:
  7124   003620                     
  7125                           ;ADC.c: 52:             keepState = 0;
  7126   003620  0E00               	movlw	0
  7127   003622  0101               	movlb	1	; () banked
  7128   003624  6FB8               	movwf	runADC@keepState& (0+255),b
  7129   003626                     l462:
  7130                           
  7131                           ;ADC.c: 30: while(keepState){
  7132   003626  0101               	movlb	1	; () banked
  7133   003628  51B8               	movf	runADC@keepState& (0+255),w,b
  7134   00362A  A4D8               	btfss	status,2,c
  7135   00362C  EF1A  F01B         	goto	u10071
  7136   003630  EF1C  F01B         	goto	u10070
  7137   003634                     u10071:
  7138   003634  EF2D  F01A         	goto	l8130
  7139   003638                     u10070:
  7140   003638                     
  7141                           ; BSR set to: 1
  7142                           ;ADC.c: 58: ADCON0bits.ADON = 0;
  7143   003638  90C2               	bcf	194,0,c	;volatile
  7144   00363A                     
  7145                           ; BSR set to: 1
  7146   00363A  0012               	return		;funcret
  7147   00363C                     __end_of_runADC:
  7148                           	callstack 0
  7149                           
  7150 ;; *************** function ___xxtofl *****************
  7151 ;; Defined at:
  7152 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\xxtofl.c"
  7153 ;; Parameters:    Size  Location     Type
  7154 ;;  sign            1    wreg     unsigned char 
  7155 ;;  val             4    5[COMRAM] long 
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;  sign            1   13[COMRAM] unsigned char 
  7158 ;;  arg             4   15[COMRAM] unsigned long 
  7159 ;;  exp             1   14[COMRAM] unsigned char 
  7160 ;; Return value:  Size  Location     Type
  7161 ;;                  4    5[COMRAM] unsigned char 
  7162 ;; Registers used:
  7163 ;;		wreg, status,2, status,0
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7169 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7170 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7171 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;Total ram usage:       14 bytes
  7174 ;; Hardware stack levels used: 1
  7175 ;; Hardware stack levels required when called: 1
  7176 ;; This function calls:
  7177 ;;		Nothing
  7178 ;; This function is called by:
  7179 ;;		_runDAC
  7180 ;;		_runADC
  7181 ;;		___rem_pio2f
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           	psect	text25
  7186   00383A                     __ptext25:
  7187                           	callstack 0
  7188   00383A                     ___xxtofl:
  7189                           	callstack 26
  7190                           
  7191                           ; BSR set to: 1
  7192                           ;incstack = 0
  7193                           ;___xxtofl@sign stored from wreg
  7194   00383A  6E0E               	movwf	___xxtofl@sign^0,c
  7195   00383C  500E               	movf	___xxtofl@sign^0,w,c
  7196   00383E  B4D8               	btfsc	status,2,c
  7197   003840  EF24  F01C         	goto	u9031
  7198   003844  EF26  F01C         	goto	u9030
  7199   003848                     u9031:
  7200   003848  EF48  F01C         	goto	l1365
  7201   00384C                     u9030:
  7202   00384C  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7203   00384E  EF2D  F01C         	goto	u9040
  7204   003852  EF2B  F01C         	goto	u9041
  7205   003856                     u9041:
  7206   003856  EF48  F01C         	goto	l1365
  7207   00385A                     u9040:
  7208   00385A  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  7209   00385E  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  7210   003862  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  7211   003866  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  7212   00386A  1E0A               	comf	??___xxtofl^0,f,c
  7213   00386C  1E0B               	comf	(??___xxtofl+1)^0,f,c
  7214   00386E  1E0C               	comf	(??___xxtofl+2)^0,f,c
  7215   003870  1E0D               	comf	(??___xxtofl+3)^0,f,c
  7216   003872  2A0A               	incf	??___xxtofl^0,f,c
  7217   003874  0E00               	movlw	0
  7218   003876  220B               	addwfc	(??___xxtofl+1)^0,f,c
  7219   003878  220C               	addwfc	(??___xxtofl+2)^0,f,c
  7220   00387A  220D               	addwfc	(??___xxtofl+3)^0,f,c
  7221   00387C  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  7222   003880  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  7223   003884  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  7224   003888  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  7225   00388C  EF50  F01C         	goto	l7434
  7226   003890                     l1365:
  7227   003890  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  7228   003894  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7229   003898  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7230   00389C  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7231   0038A0                     l7434:
  7232   0038A0  5006               	movf	___xxtofl@val^0,w,c
  7233   0038A2  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  7234   0038A4  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  7235   0038A6  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  7236   0038A8  A4D8               	btfss	status,2,c
  7237   0038AA  EF59  F01C         	goto	u9051
  7238   0038AE  EF5B  F01C         	goto	u9050
  7239   0038B2                     u9051:
  7240   0038B2  EF65  F01C         	goto	l7440
  7241   0038B6                     u9050:
  7242   0038B6  0E00               	movlw	0
  7243   0038B8  6E06               	movwf	?___xxtofl^0,c
  7244   0038BA  0E00               	movlw	0
  7245   0038BC  6E07               	movwf	(?___xxtofl+1)^0,c
  7246   0038BE  0E00               	movlw	0
  7247   0038C0  6E08               	movwf	(?___xxtofl+2)^0,c
  7248   0038C2  0E00               	movlw	0
  7249   0038C4  6E09               	movwf	(?___xxtofl+3)^0,c
  7250   0038C6  EFF6  F01C         	goto	l1368
  7251   0038CA                     l7440:
  7252   0038CA  0E96               	movlw	150
  7253   0038CC  6E0F               	movwf	___xxtofl@exp^0,c
  7254   0038CE  EF6F  F01C         	goto	l7444
  7255   0038D2                     l7442:
  7256   0038D2  2A0F               	incf	___xxtofl@exp^0,f,c
  7257   0038D4  90D8               	bcf	status,0,c
  7258   0038D6  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7259   0038D8  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7260   0038DA  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7261   0038DC  3210               	rrcf	___xxtofl@arg^0,f,c
  7262   0038DE                     l7444:
  7263   0038DE  0E00               	movlw	0
  7264   0038E0  1410               	andwf	___xxtofl@arg^0,w,c
  7265   0038E2  6E0A               	movwf	??___xxtofl^0,c
  7266   0038E4  0E00               	movlw	0
  7267   0038E6  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7268   0038E8  6E0B               	movwf	(??___xxtofl+1)^0,c
  7269   0038EA  0E00               	movlw	0
  7270   0038EC  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7271   0038EE  6E0C               	movwf	(??___xxtofl+2)^0,c
  7272   0038F0  0EFE               	movlw	254
  7273   0038F2  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7274   0038F4  6E0D               	movwf	(??___xxtofl+3)^0,c
  7275   0038F6  500A               	movf	??___xxtofl^0,w,c
  7276   0038F8  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7277   0038FA  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7278   0038FC  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7279   0038FE  A4D8               	btfss	status,2,c
  7280   003900  EF84  F01C         	goto	u9061
  7281   003904  EF86  F01C         	goto	u9060
  7282   003908                     u9061:
  7283   003908  EF69  F01C         	goto	l7442
  7284   00390C                     u9060:
  7285   00390C  EF94  F01C         	goto	l1372
  7286   003910                     l7446:
  7287   003910  2A0F               	incf	___xxtofl@exp^0,f,c
  7288   003912  0E01               	movlw	1
  7289   003914  2610               	addwf	___xxtofl@arg^0,f,c
  7290   003916  0E00               	movlw	0
  7291   003918  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  7292   00391A  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  7293   00391C  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  7294   00391E  90D8               	bcf	status,0,c
  7295   003920  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7296   003922  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7297   003924  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7298   003926  3210               	rrcf	___xxtofl@arg^0,f,c
  7299   003928                     l1372:
  7300   003928  0E00               	movlw	0
  7301   00392A  1410               	andwf	___xxtofl@arg^0,w,c
  7302   00392C  6E0A               	movwf	??___xxtofl^0,c
  7303   00392E  0E00               	movlw	0
  7304   003930  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7305   003932  6E0B               	movwf	(??___xxtofl+1)^0,c
  7306   003934  0E00               	movlw	0
  7307   003936  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7308   003938  6E0C               	movwf	(??___xxtofl+2)^0,c
  7309   00393A  0EFF               	movlw	255
  7310   00393C  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7311   00393E  6E0D               	movwf	(??___xxtofl+3)^0,c
  7312   003940  500A               	movf	??___xxtofl^0,w,c
  7313   003942  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7314   003944  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7315   003946  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7316   003948  A4D8               	btfss	status,2,c
  7317   00394A  EFA9  F01C         	goto	u9071
  7318   00394E  EFAB  F01C         	goto	u9070
  7319   003952                     u9071:
  7320   003952  EF88  F01C         	goto	l7446
  7321   003956                     u9070:
  7322   003956  EFB3  F01C         	goto	l7454
  7323   00395A                     l7452:
  7324   00395A  060F               	decf	___xxtofl@exp^0,f,c
  7325   00395C  90D8               	bcf	status,0,c
  7326   00395E  3610               	rlcf	___xxtofl@arg^0,f,c
  7327   003960  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  7328   003962  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  7329   003964  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  7330   003966                     l7454:
  7331   003966  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  7332   003968  EFB8  F01C         	goto	u9081
  7333   00396C  EFBA  F01C         	goto	u9080
  7334   003970                     u9081:
  7335   003970  EFC2  F01C         	goto	l1379
  7336   003974                     u9080:
  7337   003974  0E02               	movlw	2
  7338   003976  600F               	cpfslt	___xxtofl@exp^0,c
  7339   003978  EFC0  F01C         	goto	u9091
  7340   00397C  EFC2  F01C         	goto	u9090
  7341   003980                     u9091:
  7342   003980  EFAD  F01C         	goto	l7452
  7343   003984                     u9090:
  7344   003984                     l1379:
  7345   003984  B00F               	btfsc	___xxtofl@exp^0,0,c
  7346   003986  EFC7  F01C         	goto	u9101
  7347   00398A  EFC9  F01C         	goto	u9100
  7348   00398E                     u9101:
  7349   00398E  EFCA  F01C         	goto	l7460
  7350   003992                     u9100:
  7351   003992  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  7352   003994                     l7460:
  7353   003994  90D8               	bcf	status,0,c
  7354   003996  320F               	rrcf	___xxtofl@exp^0,f,c
  7355   003998  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  7356   00399C  6A0B               	clrf	(??___xxtofl+1)^0,c
  7357   00399E  6A0C               	clrf	(??___xxtofl+2)^0,c
  7358   0039A0  6A0D               	clrf	(??___xxtofl+3)^0,c
  7359   0039A2  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  7360   0039A6  6A0C               	clrf	(??___xxtofl+2)^0,c
  7361   0039A8  6A0B               	clrf	(??___xxtofl+1)^0,c
  7362   0039AA  6A0A               	clrf	??___xxtofl^0,c
  7363   0039AC  500A               	movf	??___xxtofl^0,w,c
  7364   0039AE  1210               	iorwf	___xxtofl@arg^0,f,c
  7365   0039B0  500B               	movf	(??___xxtofl+1)^0,w,c
  7366   0039B2  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  7367   0039B4  500C               	movf	(??___xxtofl+2)^0,w,c
  7368   0039B6  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  7369   0039B8  500D               	movf	(??___xxtofl+3)^0,w,c
  7370   0039BA  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  7371   0039BC  500E               	movf	___xxtofl@sign^0,w,c
  7372   0039BE  B4D8               	btfsc	status,2,c
  7373   0039C0  EFE4  F01C         	goto	u9111
  7374   0039C4  EFE6  F01C         	goto	u9110
  7375   0039C8                     u9111:
  7376   0039C8  EFEE  F01C         	goto	l7470
  7377   0039CC                     u9110:
  7378   0039CC  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7379   0039CE  EFED  F01C         	goto	u9120
  7380   0039D2  EFEB  F01C         	goto	u9121
  7381   0039D6                     u9121:
  7382   0039D6  EFEE  F01C         	goto	l7470
  7383   0039DA                     u9120:
  7384   0039DA  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  7385   0039DC                     l7470:
  7386   0039DC  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  7387   0039E0  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  7388   0039E4  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  7389   0039E8  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  7390   0039EC                     l1368:
  7391   0039EC  0012               	return		;funcret
  7392   0039EE                     __end_of___xxtofl:
  7393                           	callstack 0
  7394                           
  7395 ;; *************** function _moveDisplay *****************
  7396 ;; Defined at:
  7397 ;;		line 11 in file "menu.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  menuI           1    wreg     unsigned char 
  7400 ;;  where           1  135[BANK0 ] unsigned char 
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;  menuI           1   50[BANK1 ] unsigned char 
  7403 ;;  menuItem2      17   17[BANK1 ] unsigned char [17]
  7404 ;;  menuItem1      17    0[BANK1 ] unsigned char [17]
  7405 ;;  menuItems      16   34[BANK1 ] PTR unsigned char [8]
  7406 ;;		 -> STR_24(1), STR_23(6), STR_22(5), STR_21(4), 
  7407 ;;		 -> STR_20(4), STR_19(4), STR_18(5), STR_17(5), 
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  1    wreg      unsigned char 
  7410 ;; Registers used:
  7411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7417 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7418 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7419 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7420 ;;      Totals:         0       3      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7421 ;;Total ram usage:       54 bytes
  7422 ;; Hardware stack levels used: 1
  7423 ;; Hardware stack levels required when called: 9
  7424 ;; This function calls:
  7425 ;;		_LCD_Clear
  7426 ;;		_LCD_ShowString
  7427 ;;		_sprintf
  7428 ;; This function is called by:
  7429 ;;		_main
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           	psect	text26
  7434   004126                     __ptext26:
  7435                           	callstack 0
  7436   004126                     _moveDisplay:
  7437                           	callstack 21
  7438                           
  7439                           ;incstack = 0
  7440                           ;moveDisplay@menuI stored from wreg
  7441   004126  0101               	movlb	1	; () banked
  7442   004128  6FCD               	movwf	moveDisplay@menuI& (0+255),b
  7443   00412A                     
  7444                           ;menu.c: 12:     LCD_Clear();
  7445   00412A  EC7D  F028         	call	_LCD_Clear	;wreg free
  7446   00412E                     
  7447                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  7448   00412E  EE21  F0CE         	lfsr	2,moveDisplay@F6965
  7449   004132  EE11  F0BD         	lfsr	1,moveDisplay@menuItems
  7450   004136  0E0F               	movlw	15
  7451   004138                     u9721:
  7452   004138  CFDB FFE3          	movff	plusw2,plusw1
  7453   00413C  06E8               	decf	wreg,f,c
  7454   00413E  E2FC               	bc	u9721
  7455                           
  7456                           ;menu.c: 14:     switch (where){
  7457   004140  EFBA  F020         	goto	l7956
  7458   004144                     l7946:
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;menu.c: 18:             if(menuI<6){
  7462   004144  0E06               	movlw	6
  7463   004146  0101               	movlb	1	; () banked
  7464   004148  61CD               	cpfslt	moveDisplay@menuI& (0+255),b
  7465   00414A  EFA9  F020         	goto	u9731
  7466   00414E  EFAB  F020         	goto	u9730
  7467   004152                     u9731:
  7468   004152  EFCA  F020         	goto	l7958
  7469   004156                     u9730:
  7470   004156                     
  7471                           ; BSR set to: 1
  7472                           ;menu.c: 19:             menuI++;
  7473   004156  2BCD               	incf	moveDisplay@menuI& (0+255),f,b
  7474   004158  EFCA  F020         	goto	l7958
  7475   00415C                     l7950:
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;menu.c: 23:             if(menuI>0){
  7479   00415C  0101               	movlb	1	; () banked
  7480   00415E  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7481   004160  B4D8               	btfsc	status,2,c
  7482   004162  EFB5  F020         	goto	u9741
  7483   004166  EFB7  F020         	goto	u9740
  7484   00416A                     u9741:
  7485   00416A  EFCA  F020         	goto	l7958
  7486   00416E                     u9740:
  7487   00416E                     
  7488                           ; BSR set to: 1
  7489                           ;menu.c: 24:             menuI--;
  7490   00416E  07CD               	decf	moveDisplay@menuI& (0+255),f,b
  7491   004170  EFCA  F020         	goto	l7958
  7492   004174                     l7956:
  7493   004174  0100               	movlb	0	; () banked
  7494   004176  51E7               	movf	moveDisplay@where& (0+255),w,b
  7495                           
  7496                           ; Switch size 1, requested type "simple"
  7497                           ; Number of cases is 3, Range of values is 0 to 2
  7498                           ; switch strategies available:
  7499                           ; Name         Instructions Cycles
  7500                           ; simple_byte           10     6 (average)
  7501                           ;	Chosen strategy is simple_byte
  7502   004178  0A00               	xorlw	0	; case 0
  7503   00417A  B4D8               	btfsc	status,2,c
  7504   00417C  EFCA  F020         	goto	l7958
  7505   004180  0A01               	xorlw	1	; case 1
  7506   004182  B4D8               	btfsc	status,2,c
  7507   004184  EFA2  F020         	goto	l7946
  7508   004188  0A03               	xorlw	3	; case 2
  7509   00418A  B4D8               	btfsc	status,2,c
  7510   00418C  EFAE  F020         	goto	l7950
  7511   004190  EFCA  F020         	goto	l7958
  7512   004194                     l7958:
  7513                           
  7514                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  7515   004194  0E9B               	movlw	low moveDisplay@menuItem1
  7516   004196  0100               	movlb	0	; () banked
  7517   004198  6FCE               	movwf	sprintf@s& (0+255),b
  7518   00419A  0E01               	movlw	high moveDisplay@menuItem1
  7519   00419C  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7520   00419E  0ECC               	movlw	low STR_25
  7521   0041A0  6FD0               	movwf	sprintf@fmt& (0+255),b
  7522   0041A2  0EFF               	movlw	high STR_25
  7523   0041A4  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7524   0041A6  0E00               	movlw	0
  7525   0041A8  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7526   0041AA  0E0F               	movlw	15
  7527   0041AC  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7528   0041AE  0101               	movlb	1	; () banked
  7529   0041B0  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7530   0041B2  0D02               	mullw	2
  7531   0041B4  0EBD               	movlw	low moveDisplay@menuItems
  7532   0041B6  24F3               	addwf	243,w,c
  7533   0041B8  6ED9               	movwf	fsr2l,c
  7534   0041BA  0E01               	movlw	high moveDisplay@menuItems
  7535   0041BC  20F4               	addwfc	prodh,w,c
  7536   0041BE  6EDA               	movwf	fsr2h,c
  7537   0041C0  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7538   0041C4  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7539   0041C8  ECC5  F027         	call	_sprintf	;wreg free
  7540                           
  7541                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  7542   0041CC  0EAC               	movlw	low moveDisplay@menuItem2
  7543   0041CE  0100               	movlb	0	; () banked
  7544   0041D0  6FCE               	movwf	sprintf@s& (0+255),b
  7545   0041D2  0E01               	movlw	high moveDisplay@menuItem2
  7546   0041D4  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7547   0041D6  0ECD               	movlw	low (STR_25+1)
  7548   0041D8  6FD0               	movwf	sprintf@fmt& (0+255),b
  7549   0041DA  0EFF               	movlw	high (STR_25+1)
  7550   0041DC  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7551   0041DE  0E00               	movlw	0
  7552   0041E0  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7553   0041E2  0E10               	movlw	16
  7554   0041E4  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7555   0041E6  0101               	movlb	1	; () banked
  7556   0041E8  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7557   0041EA  0100               	movlb	0	; () banked
  7558   0041EC  6FE8               	movwf	??_moveDisplay& (0+255),b
  7559   0041EE  6BE9               	clrf	(??_moveDisplay+1)& (0+255),b
  7560   0041F0  90D8               	bcf	status,0,c
  7561   0041F2  37E8               	rlcf	??_moveDisplay& (0+255),f,b
  7562   0041F4  37E9               	rlcf	(??_moveDisplay+1)& (0+255),f,b
  7563   0041F6  0E02               	movlw	2
  7564   0041F8  27E8               	addwf	??_moveDisplay& (0+255),f,b
  7565   0041FA  0E00               	movlw	0
  7566   0041FC  23E9               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  7567   0041FE  0EBD               	movlw	low moveDisplay@menuItems
  7568   004200  25E8               	addwf	??_moveDisplay& (0+255),w,b
  7569   004202  6ED9               	movwf	fsr2l,c
  7570   004204  0E01               	movlw	high moveDisplay@menuItems
  7571   004206  21E9               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  7572   004208  6EDA               	movwf	fsr2h,c
  7573   00420A  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7574   00420E  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7575   004212  ECC5  F027         	call	_sprintf	;wreg free
  7576   004216                     
  7577                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  7578   004216  0E9B               	movlw	low moveDisplay@menuItem1
  7579   004218  6E07               	movwf	LCD_ShowString@textData^0,c
  7580   00421A  0E01               	movlw	high moveDisplay@menuItem1
  7581   00421C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7582   00421E  0E01               	movlw	1
  7583   004220  EC4D  F024         	call	_LCD_ShowString
  7584   004224                     
  7585                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  7586   004224  0EAC               	movlw	low moveDisplay@menuItem2
  7587   004226  6E07               	movwf	LCD_ShowString@textData^0,c
  7588   004228  0E01               	movlw	high moveDisplay@menuItem2
  7589   00422A  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7590   00422C  0E02               	movlw	2
  7591   00422E  EC4D  F024         	call	_LCD_ShowString
  7592   004232                     
  7593                           ;menu.c: 35:     return menuI;
  7594   004232  0101               	movlb	1	; () banked
  7595   004234  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7596   004236                     
  7597                           ; BSR set to: 1
  7598   004236  0012               	return		;funcret
  7599   004238                     __end_of_moveDisplay:
  7600                           	callstack 0
  7601                           
  7602 ;; *************** function _sprintf *****************
  7603 ;; Defined at:
  7604 ;;		line 9 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_sprintf.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;  s               2  110[BANK0 ] PTR unsigned char 
  7607 ;;		 -> runGAME@approxText(25), runGAME@text(17), runADC@text(17), moveDisplay@menuItem2(17), 
  7608 ;;		 -> moveDisplay@menuItem1(17), 
  7609 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  7610 ;;		 -> STR_32(18), STR_31(19), STR_30(17), STR_29(19), 
  7611 ;;		 -> STR_27(19), STR_26(5), STR_25(6), 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  f              12  123[BANK0 ] struct _IO_FILE
  7614 ;;  ret             2    0        int 
  7615 ;;  ap              1  122[BANK0 ] PTR void [1]
  7616 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  2  110[BANK0 ] int 
  7619 ;; Registers used:
  7620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7626 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7627 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7629 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7630 ;;Total ram usage:       25 bytes
  7631 ;; Hardware stack levels used: 1
  7632 ;; Hardware stack levels required when called: 8
  7633 ;; This function calls:
  7634 ;;		_vfprintf
  7635 ;; This function is called by:
  7636 ;;		_moveDisplay
  7637 ;;		_runADC
  7638 ;;		_runGAME
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           	psect	text27
  7643   004F8A                     __ptext27:
  7644                           	callstack 0
  7645   004F8A                     _sprintf:
  7646                           	callstack 21
  7647   004F8A  0ED2               	movlw	low (?_sprintf+4)
  7648   004F8C  0100               	movlb	0	; () banked
  7649   004F8E  6FDA               	movwf	sprintf@ap& (0+255),b
  7650   004F90  C0CE  F0DB         	movff	sprintf@s,sprintf@f
  7651   004F94  C0CF  F0DC         	movff	sprintf@s+1,sprintf@f+1
  7652   004F98                     
  7653                           ; BSR set to: 0
  7654   004F98  0E00               	movlw	0
  7655   004F9A  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  7656   004F9C  0E00               	movlw	0
  7657   004F9E  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  7658   004FA0                     
  7659                           ; BSR set to: 0
  7660   004FA0  0E00               	movlw	0
  7661   004FA2  6FE6               	movwf	(sprintf@f+11)& (0+255),b
  7662   004FA4  0E00               	movlw	0
  7663   004FA6  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  7664   004FA8                     
  7665                           ; BSR set to: 0
  7666   004FA8  0EDB               	movlw	low sprintf@f
  7667   004FAA  6FC7               	movwf	vfprintf@fp& (0+255),b
  7668   004FAC  6BC8               	clrf	(vfprintf@fp+1)& (0+255),b
  7669   004FAE  C0D0  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  7670   004FB2  C0D1  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7671   004FB6  0EDA               	movlw	low sprintf@ap
  7672   004FB8  6FCB               	movwf	vfprintf@ap& (0+255),b
  7673   004FBA  EC7C  F027         	call	_vfprintf	;wreg free
  7674   004FBE  0100               	movlb	0	; () banked
  7675   004FC0  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  7676   004FC2  25CE               	addwf	sprintf@s& (0+255),w,b
  7677   004FC4  6ED9               	movwf	fsr2l,c
  7678   004FC6  51DF               	movf	(sprintf@f+4)& (0+255),w,b
  7679   004FC8  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  7680   004FCA  6EDA               	movwf	fsr2h,c
  7681   004FCC  6ADF               	clrf	indf2,c
  7682   004FCE                     
  7683                           ; BSR set to: 0
  7684   004FCE  0012               	return		;funcret
  7685   004FD0                     __end_of_sprintf:
  7686                           	callstack 0
  7687                           
  7688 ;; *************** function _vfprintf *****************
  7689 ;; Defined at:
  7690 ;;		line 1817 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7691 ;; Parameters:    Size  Location     Type
  7692 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  7693 ;;		 -> NULL(0), sprintf@f(12), 
  7694 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  7695 ;;		 -> STR_32(18), STR_31(19), STR_30(17), STR_29(19), 
  7696 ;;		 -> STR_28(5), STR_27(19), STR_26(5), STR_25(6), 
  7697 ;;		 -> STR_16(5), 
  7698 ;;  ap              1  107[BANK0 ] PTR PTR void 
  7699 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  7702 ;;		 -> STR_32(18), STR_31(19), STR_30(17), STR_29(19), 
  7703 ;;		 -> STR_28(5), STR_27(19), STR_26(5), STR_25(6), 
  7704 ;;		 -> STR_16(5), 
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  2  103[BANK0 ] int 
  7707 ;; Registers used:
  7708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7714 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7717 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7718 ;;Total ram usage:        7 bytes
  7719 ;; Hardware stack levels used: 1
  7720 ;; Hardware stack levels required when called: 7
  7721 ;; This function calls:
  7722 ;;		_vfpfcnvrt
  7723 ;; This function is called by:
  7724 ;;		_sprintf
  7725 ;;		_printf
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           	psect	text28
  7730   004EF8                     __ptext28:
  7731                           	callstack 0
  7732   004EF8                     _vfprintf:
  7733                           	callstack 21
  7734   004EF8                     
  7735                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE *fp, const 
      +                          char *fmt, va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1818: {;D:\MP
      +                          LABX\Compiler\pic\sources\c99\common\doprnt.c: 1820:     char *cfmt;;D:\MPLABX\Compiler\
      +                          pic\sources\c99\common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7736   004EF8  C0C9  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  7737   004EFC  C0CA  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7738                           
  7739                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  7740   004F00  EF8D  F027         	goto	l7652
  7741   004F04                     l7650:
  7742                           
  7743                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt, ap);
  7744   004F04  C0C7  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  7745   004F08  C0C8  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7746   004F0C  0ECC               	movlw	low vfprintf@cfmt
  7747   004F0E  0100               	movlb	0	; () banked
  7748   004F10  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  7749   004F12  C0CB  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  7750   004F16  ECA6  F005         	call	_vfpfcnvrt	;wreg free
  7751   004F1A                     l7652:
  7752                           
  7753                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  7754   004F1A  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  7755   004F1E  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7756   004F22                     	if	0	;tblptru may be non-zero
  7757   004F22                     	endif
  7758   004F22                     	if	0	;tblptru may be non-zero
  7759   004F22                     	endif
  7760   004F22  0008               	tblrd		*
  7761   004F24  50F5               	movf	tablat,w,c
  7762   004F26  0900               	iorlw	0
  7763   004F28  A4D8               	btfss	status,2,c
  7764   004F2A  EF99  F027         	goto	u9301
  7765   004F2E  EF9B  F027         	goto	u9300
  7766   004F32                     u9301:
  7767   004F32  EF82  F027         	goto	l7650
  7768   004F36                     u9300:
  7769   004F36                     
  7770                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  7771   004F36  0E00               	movlw	0
  7772   004F38  0100               	movlb	0	; () banked
  7773   004F3A  6FC8               	movwf	(?_vfprintf+1)& (0+255),b
  7774   004F3C  0E00               	movlw	0
  7775   004F3E  6FC7               	movwf	?_vfprintf& (0+255),b
  7776   004F40                     
  7777                           ; BSR set to: 0
  7778   004F40  0012               	return		;funcret
  7779   004F42                     __end_of_vfprintf:
  7780                           	callstack 0
  7781                           
  7782 ;; *************** function _vfpfcnvrt *****************
  7783 ;; Defined at:
  7784 ;;		line 1177 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  7787 ;;		 -> NULL(0), sprintf@f(12), 
  7788 ;;  fmt             1   91[BANK0 ] PTR PTR unsigned char 
  7789 ;;		 -> vfprintf@cfmt(2), 
  7790 ;;  ap              1   92[BANK0 ] PTR PTR void 
  7791 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;  convarg         4   96[BANK0 ] struct .
  7794 ;;  cp              2  101[BANK0 ] PTR unsigned char 
  7795 ;;		 -> STR_32(18), STR_31(19), STR_30(17), STR_29(19), 
  7796 ;;		 -> STR_28(5), STR_27(19), STR_26(5), STR_25(6), 
  7797 ;;		 -> STR_16(5), 
  7798 ;;  c               1  100[BANK0 ] unsigned char 
  7799 ;;  done            1   95[BANK0 ] _Bool 
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  1    wreg      void 
  7802 ;; Registers used:
  7803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7809 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7810 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7811 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7812 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7813 ;;Total ram usage:       14 bytes
  7814 ;; Hardware stack levels used: 1
  7815 ;; Hardware stack levels required when called: 6
  7816 ;; This function calls:
  7817 ;;		_dtoa
  7818 ;;		_efgtoa
  7819 ;;		_fputc
  7820 ;;		_read_prec_or_width
  7821 ;;		_stoa
  7822 ;;		_utoa
  7823 ;; This function is called by:
  7824 ;;		_vfprintf
  7825 ;; This function uses a non-reentrant model
  7826 ;;
  7827                           
  7828                           	psect	text29
  7829   000B4C                     __ptext29:
  7830                           	callstack 0
  7831   000B4C                     _vfpfcnvrt:
  7832                           	callstack 21
  7833   000B4C                     
  7834                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1178: {;D:\MPLABX\Co
      +                          mpiler\pic\sources\c99\common\doprnt.c: 1179:     char c, *cp;;D:\MPLABX\Compiler\pic\so
      +                          urces\c99\common\doprnt.c: 1180:     _Bool done;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1188:  } convarg;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1201:
      +                               if ((*fmt)[0] == '%') {
  7835   000B4C  0100               	movlb	0	; () banked
  7836   000B4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7837   000B50  6ED9               	movwf	fsr2l,c
  7838   000B52  6ADA               	clrf	fsr2h,c
  7839   000B54  CFDE FFF6          	movff	postinc2,tblptrl
  7840   000B58  CFDD FFF7          	movff	postdec2,tblptrh
  7841   000B5C                     	if	0	;tblptru may be non-zero
  7842   000B5C                     	endif
  7843   000B5C                     	if	0	;tblptru may be non-zero
  7844   000B5C                     	endif
  7845   000B5C  0008               	tblrd		*
  7846   000B5E  50F5               	movf	tablat,w,c
  7847   000B60  0A25               	xorlw	37
  7848   000B62  A4D8               	btfss	status,2,c
  7849   000B64  EFB6  F005         	goto	u9131
  7850   000B68  EFB8  F005         	goto	u9130
  7851   000B6C                     u9131:
  7852   000B6C  EF40  F008         	goto	l7622
  7853   000B70                     u9130:
  7854   000B70                     
  7855                           ; BSR set to: 0
  7856                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  7857   000B70  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7858   000B72  6ED9               	movwf	fsr2l,c
  7859   000B74  6ADA               	clrf	fsr2h,c
  7860   000B76  2ADE               	incf	postinc2,f,c
  7861   000B78  0E00               	movlw	0
  7862   000B7A  22DD               	addwfc	postdec2,f,c
  7863   000B7C                     
  7864                           ; BSR set to: 0
  7865                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1204:         flags = width = 0;
  7866   000B7C  0E00               	movlw	0
  7867   000B7E  6E56               	movwf	(_width+1)^0,c
  7868   000B80  0E00               	movlw	0
  7869   000B82  6E55               	movwf	_width^0,c
  7870   000B84  C055  F059         	movff	_width,_flags
  7871   000B88                     
  7872                           ; BSR set to: 0
  7873                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1205:         prec = -1;
  7874   000B88  6857               	setf	_prec^0,c
  7875   000B8A  6858               	setf	(_prec+1)^0,c
  7876   000B8C                     
  7877                           ; BSR set to: 0
  7878                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1209:         done = 0;
  7879   000B8C  0E00               	movlw	0
  7880   000B8E  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  7881                           
  7882                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  7883   000B90  EFE6  F005         	goto	l7494
  7884   000B94                     l7484:
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1214:                     flags |= 
      +                          (1 << 0);
  7888   000B94  8059               	bsf	_flags^0,0,c
  7889   000B96                     
  7890                           ; BSR set to: 0
  7891                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1215:                     ++*fmt;
  7892   000B96  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7893   000B98  6ED9               	movwf	fsr2l,c
  7894   000B9A  6ADA               	clrf	fsr2h,c
  7895   000B9C  2ADE               	incf	postinc2,f,c
  7896   000B9E  0E00               	movlw	0
  7897   000BA0  22DD               	addwfc	postdec2,f,c
  7898                           
  7899                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1216:                     break;
  7900   000BA2  EFE6  F005         	goto	l7494
  7901   000BA6                     l7488:
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1243:                     done = 1;
  7905   000BA6  0E01               	movlw	1
  7906   000BA8  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  7907                           
  7908                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1244:                     break;
  7909   000BAA  EFE6  F005         	goto	l7494
  7910   000BAE                     l7492:
  7911                           
  7912                           ; BSR set to: 0
  7913   000BAE  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7914   000BB0  6ED9               	movwf	fsr2l,c
  7915   000BB2  6ADA               	clrf	fsr2h,c
  7916   000BB4  CFDE FFF6          	movff	postinc2,tblptrl
  7917   000BB8  CFDD FFF7          	movff	postdec2,tblptrh
  7918   000BBC                     	if	0	;tblptru may be non-zero
  7919   000BBC                     	endif
  7920   000BBC                     	if	0	;tblptru may be non-zero
  7921   000BBC                     	endif
  7922   000BBC  0008               	tblrd		*
  7923   000BBE  50F5               	movf	tablat,w,c
  7924                           
  7925                           ; Switch size 1, requested type "simple"
  7926                           ; Number of cases is 1, Range of values is 45 to 45
  7927                           ; switch strategies available:
  7928                           ; Name         Instructions Cycles
  7929                           ; simple_byte            4     3 (average)
  7930                           ;	Chosen strategy is simple_byte
  7931   000BC0  0A2D               	xorlw	45	; case 45
  7932   000BC2  B4D8               	btfsc	status,2,c
  7933   000BC4  EFCA  F005         	goto	l7484
  7934   000BC8  EFD3  F005         	goto	l7488
  7935   000BCC                     l7494:
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  7939   000BCC  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  7940   000BCE  B4D8               	btfsc	status,2,c
  7941   000BD0  EFEC  F005         	goto	u9141
  7942   000BD4  EFEE  F005         	goto	u9140
  7943   000BD8                     u9141:
  7944   000BD8  EFD7  F005         	goto	l7492
  7945   000BDC                     u9140:
  7946   000BDC                     
  7947                           ; BSR set to: 0
  7948                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1256:   width = read_prec_or_width(
      +                          fmt, ap);
  7949   000BDC  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  7950   000BE0  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  7951   000BE4  ECFE  F024         	call	_read_prec_or_width	;wreg free
  7952   000BE8  C00C  F055         	movff	?_read_prec_or_width,_width
  7953   000BEC  C00D  F056         	movff	?_read_prec_or_width+1,_width+1
  7954   000BF0                     
  7955                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1257:   if (width < 0) {
  7956   000BF0  BE56               	btfsc	(_width+1)^0,7,c
  7957   000BF2  EFFF  F005         	goto	u9150
  7958   000BF6  EFFD  F005         	goto	u9151
  7959   000BFA                     u9151:
  7960   000BFA  EF04  F006         	goto	l7502
  7961   000BFE                     u9150:
  7962   000BFE                     
  7963                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1258:    flags |= (1 << 0);
  7964   000BFE  8059               	bsf	_flags^0,0,c
  7965                           
  7966                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1259:    width = -width;
  7967   000C00  6C55               	negf	_width^0,c
  7968   000C02  1E56               	comf	(_width+1)^0,f,c
  7969   000C04  B0D8               	btfsc	status,0,c
  7970   000C06  2A56               	incf	(_width+1)^0,f,c
  7971   000C08                     l7502:
  7972                           
  7973                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1265:         if ((*fmt)[0] == '.')
      +                           {
  7974   000C08  0100               	movlb	0	; () banked
  7975   000C0A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7976   000C0C  6ED9               	movwf	fsr2l,c
  7977   000C0E  6ADA               	clrf	fsr2h,c
  7978   000C10  CFDE FFF6          	movff	postinc2,tblptrl
  7979   000C14  CFDD FFF7          	movff	postdec2,tblptrh
  7980   000C18                     	if	0	;tblptru may be non-zero
  7981   000C18                     	endif
  7982   000C18                     	if	0	;tblptru may be non-zero
  7983   000C18                     	endif
  7984   000C18  0008               	tblrd		*
  7985   000C1A  50F5               	movf	tablat,w,c
  7986   000C1C  0A2E               	xorlw	46
  7987   000C1E  A4D8               	btfss	status,2,c
  7988   000C20  EF14  F006         	goto	u9161
  7989   000C24  EF16  F006         	goto	u9160
  7990   000C28                     u9161:
  7991   000C28  EF26  F006         	goto	l7508
  7992   000C2C                     u9160:
  7993   000C2C                     
  7994                           ; BSR set to: 0
  7995                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1266:             ++*fmt;
  7996   000C2C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7997   000C2E  6ED9               	movwf	fsr2l,c
  7998   000C30  6ADA               	clrf	fsr2h,c
  7999   000C32  2ADE               	incf	postinc2,f,c
  8000   000C34  0E00               	movlw	0
  8001   000C36  22DD               	addwfc	postdec2,f,c
  8002   000C38                     
  8003                           ; BSR set to: 0
  8004                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1267:    prec = read_prec_or_width(
      +                          fmt, ap);
  8005   000C38  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  8006   000C3C  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  8007   000C40  ECFE  F024         	call	_read_prec_or_width	;wreg free
  8008   000C44  C00C  F057         	movff	?_read_prec_or_width,_prec
  8009   000C48  C00D  F058         	movff	?_read_prec_or_width+1,_prec+1
  8010   000C4C                     l7508:
  8011                           
  8012                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt;
  8013   000C4C  0100               	movlb	0	; () banked
  8014   000C4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8015   000C50  6ED9               	movwf	fsr2l,c
  8016   000C52  6ADA               	clrf	fsr2h,c
  8017   000C54  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  8018   000C58  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  8019   000C5C                     
  8020                           ; BSR set to: 0
  8021                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  8022   000C5C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8023   000C60  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8024   000C64                     	if	0	;tblptru may be non-zero
  8025   000C64                     	endif
  8026   000C64                     	if	0	;tblptru may be non-zero
  8027   000C64                     	endif
  8028   000C64  0008               	tblrd		*
  8029   000C66  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  8030                           
  8031                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1294:   switch(c) {
  8032   000C6A  EF43  F006         	goto	l7520
  8033   000C6E                     l7512:
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1298:     cp++;
  8037   000C6E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  8038   000C70  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  8039                           
  8040                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1305:     break;
  8041   000C72  EF56  F006         	goto	l7522
  8042   000C76                     l7514:
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1350:     c = 'i';
  8046   000C76  0E69               	movlw	105
  8047   000C78  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8048                           
  8049                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1351:     break;
  8050   000C7A  EF56  F006         	goto	l7522
  8051   000C7E                     l7516:
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  8055   000C7E  0E00               	movlw	0
  8056   000C80  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8057                           
  8058                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1354:     break;
  8059   000C82  EF56  F006         	goto	l7522
  8060   000C86                     l7520:
  8061                           
  8062                           ; BSR set to: 0
  8063   000C86  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8064                           
  8065                           ; Switch size 1, requested type "simple"
  8066                           ; Number of cases is 4, Range of values is 100 to 117
  8067                           ; switch strategies available:
  8068                           ; Name         Instructions Cycles
  8069                           ; simple_byte           13     7 (average)
  8070                           ;	Chosen strategy is simple_byte
  8071   000C88  0A64               	xorlw	100	; case 100
  8072   000C8A  B4D8               	btfsc	status,2,c
  8073   000C8C  EF3B  F006         	goto	l7514
  8074   000C90  0A0C               	xorlw	12	; case 104
  8075   000C92  B4D8               	btfsc	status,2,c
  8076   000C94  EF37  F006         	goto	l7512
  8077   000C98  0A01               	xorlw	1	; case 105
  8078   000C9A  B4D8               	btfsc	status,2,c
  8079   000C9C  EF3B  F006         	goto	l7514
  8080   000CA0  0A1C               	xorlw	28	; case 117
  8081   000CA2  B4D8               	btfsc	status,2,c
  8082   000CA4  EF3B  F006         	goto	l7514
  8083   000CA8  EF3F  F006         	goto	l7516
  8084   000CAC                     l7522:
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1361:   if (*cp == 'd' || *cp == 'i
      +                          ') {
  8088   000CAC  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8089   000CB0  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8090   000CB4                     	if	0	;tblptru may be non-zero
  8091   000CB4                     	endif
  8092   000CB4                     	if	0	;tblptru may be non-zero
  8093   000CB4                     	endif
  8094   000CB4  0008               	tblrd		*
  8095   000CB6  50F5               	movf	tablat,w,c
  8096   000CB8  0A64               	xorlw	100
  8097   000CBA  B4D8               	btfsc	status,2,c
  8098   000CBC  EF62  F006         	goto	u9171
  8099   000CC0  EF64  F006         	goto	u9170
  8100   000CC4                     u9171:
  8101   000CC4  EF90  F006         	goto	l7532
  8102   000CC8                     u9170:
  8103   000CC8                     
  8104                           ; BSR set to: 0
  8105   000CC8  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8106   000CCC  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8107   000CD0                     	if	0	;tblptru may be non-zero
  8108   000CD0                     	endif
  8109   000CD0                     	if	0	;tblptru may be non-zero
  8110   000CD0                     	endif
  8111   000CD0  0008               	tblrd		*
  8112   000CD2  50F5               	movf	tablat,w,c
  8113   000CD4  0A69               	xorlw	105
  8114   000CD6  A4D8               	btfss	status,2,c
  8115   000CD8  EF70  F006         	goto	u9181
  8116   000CDC  EF72  F006         	goto	u9180
  8117   000CE0                     u9181:
  8118   000CE0  EFB4  F006         	goto	l7540
  8119   000CE4                     u9180:
  8120   000CE4  EF90  F006         	goto	l7532
  8121   000CE8                     l7526:
  8122                           
  8123                           ; BSR set to: 0
  8124                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1365:      convarg.sint = (vfpf_sin
      +                          t_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8125   000CE8  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8126   000CEA  6ED9               	movwf	fsr2l,c
  8127   000CEC  6ADA               	clrf	fsr2h,c
  8128   000CEE  0E02               	movlw	2
  8129   000CF0  26DF               	addwf	indf2,f,c
  8130   000CF2  5CDF               	subwf	indf2,w,c
  8131   000CF4  6ED9               	movwf	fsr2l,c
  8132   000CF6  6ADA               	clrf	fsr2h,c
  8133   000CF8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8134   000CFC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8135                           
  8136                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1366:      break;
  8137   000D00  EF9B  F006         	goto	l7534
  8138   000D04                     l7528:
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1369:      convarg.sint = (vfpf_sin
      +                          t_t)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  8142   000D04  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8143   000D06  6ED9               	movwf	fsr2l,c
  8144   000D08  6ADA               	clrf	fsr2h,c
  8145   000D0A  0E02               	movlw	2
  8146   000D0C  26DF               	addwf	indf2,f,c
  8147   000D0E  5CDF               	subwf	indf2,w,c
  8148   000D10  6ED9               	movwf	fsr2l,c
  8149   000D12  6ADA               	clrf	fsr2h,c
  8150   000D14  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8151   000D18  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8152                           
  8153                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1370:      break;
  8154   000D1C  EF9B  F006         	goto	l7534
  8155   000D20                     l7532:
  8156                           
  8157                           ; BSR set to: 0
  8158   000D20  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8159                           
  8160                           ; Switch size 1, requested type "simple"
  8161                           ; Number of cases is 2, Range of values is 104 to 105
  8162                           ; switch strategies available:
  8163                           ; Name         Instructions Cycles
  8164                           ; simple_byte            7     4 (average)
  8165                           ;	Chosen strategy is simple_byte
  8166   000D22  0A68               	xorlw	104	; case 104
  8167   000D24  B4D8               	btfsc	status,2,c
  8168   000D26  EF82  F006         	goto	l7528
  8169   000D2A  0A01               	xorlw	1	; case 105
  8170   000D2C  B4D8               	btfsc	status,2,c
  8171   000D2E  EF74  F006         	goto	l7526
  8172   000D32  EF9B  F006         	goto	l7534
  8173   000D36                     l7534:
  8174                           
  8175                           ; BSR set to: 0
  8176                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1406:    *fmt = cp+1;
  8177   000D36  0E01               	movlw	1
  8178   000D38  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8179   000D3A  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8180   000D3C  0E00               	movlw	0
  8181   000D3E  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8182   000D40  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8183   000D42  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8184   000D44  6ED9               	movwf	fsr2l,c
  8185   000D46  6ADA               	clrf	fsr2h,c
  8186   000D48  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8187   000D4C  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8188   000D50                     
  8189                           ; BSR set to: 0
  8190                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1432:    return (void) dtoa(fp, con
      +                          varg.sint);;	Return value of _vfpfcnvrt is never used
  8191   000D50  C0B9  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  8192   000D54  C0BA  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8193   000D58  C0C0  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  8194   000D5C  C0C1  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  8195   000D60  ECC6  F01D         	call	_dtoa	;wreg free
  8196   000D64  EF53  F008         	goto	l1560
  8197   000D68                     l7540:
  8198                           
  8199                           ; BSR set to: 0
  8200   000D68  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8201   000D6C  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8202   000D70                     	if	0	;tblptru may be non-zero
  8203   000D70                     	endif
  8204   000D70                     	if	0	;tblptru may be non-zero
  8205   000D70                     	endif
  8206   000D70  0008               	tblrd		*
  8207   000D72  50F5               	movf	tablat,w,c
  8208   000D74  0A75               	xorlw	117
  8209   000D76  A4D8               	btfss	status,2,c
  8210   000D78  EFC0  F006         	goto	u9191
  8211   000D7C  EFC2  F006         	goto	u9190
  8212   000D80                     u9191:
  8213   000D80  EF12  F007         	goto	l7560
  8214   000D84                     u9190:
  8215   000D84  EFE0  F006         	goto	l7548
  8216   000D88                     l7542:
  8217                           
  8218                           ; BSR set to: 0
  8219                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1456:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8220   000D88  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8221   000D8A  6ED9               	movwf	fsr2l,c
  8222   000D8C  6ADA               	clrf	fsr2h,c
  8223   000D8E  0E02               	movlw	2
  8224   000D90  26DF               	addwf	indf2,f,c
  8225   000D92  5CDF               	subwf	indf2,w,c
  8226   000D94  6ED9               	movwf	fsr2l,c
  8227   000D96  6ADA               	clrf	fsr2h,c
  8228   000D98  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8229   000D9C  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8230                           
  8231                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1457:      break;
  8232   000DA0  EFEB  F006         	goto	l7550
  8233   000DA4                     l7544:
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1460:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned short)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8237   000DA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8238   000DA6  6ED9               	movwf	fsr2l,c
  8239   000DA8  6ADA               	clrf	fsr2h,c
  8240   000DAA  0E02               	movlw	2
  8241   000DAC  26DF               	addwf	indf2,f,c
  8242   000DAE  5CDF               	subwf	indf2,w,c
  8243   000DB0  6ED9               	movwf	fsr2l,c
  8244   000DB2  6ADA               	clrf	fsr2h,c
  8245   000DB4  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8246   000DB8  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8247                           
  8248                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1461:      break;
  8249   000DBC  EFEB  F006         	goto	l7550
  8250   000DC0                     l7548:
  8251                           
  8252                           ; BSR set to: 0
  8253   000DC0  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8254                           
  8255                           ; Switch size 1, requested type "simple"
  8256                           ; Number of cases is 2, Range of values is 104 to 105
  8257                           ; switch strategies available:
  8258                           ; Name         Instructions Cycles
  8259                           ; simple_byte            7     4 (average)
  8260                           ;	Chosen strategy is simple_byte
  8261   000DC2  0A68               	xorlw	104	; case 104
  8262   000DC4  B4D8               	btfsc	status,2,c
  8263   000DC6  EFD2  F006         	goto	l7544
  8264   000DCA  0A01               	xorlw	1	; case 105
  8265   000DCC  B4D8               	btfsc	status,2,c
  8266   000DCE  EFC4  F006         	goto	l7542
  8267   000DD2  EFEB  F006         	goto	l7550
  8268   000DD6                     l7550:
  8269                           
  8270                           ; BSR set to: 0
  8271                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1497:    *fmt = cp+1;
  8272   000DD6  0E01               	movlw	1
  8273   000DD8  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8274   000DDA  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8275   000DDC  0E00               	movlw	0
  8276   000DDE  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8277   000DE0  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8278   000DE2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8279   000DE4  6ED9               	movwf	fsr2l,c
  8280   000DE6  6ADA               	clrf	fsr2h,c
  8281   000DE8  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8282   000DEC  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8283                           
  8284                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1498:    switch (*cp) {
  8285   000DF0  EF06  F007         	goto	l7558
  8286   000DF4                     l7552:
  8287                           
  8288                           ; BSR set to: 0
  8289                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1542:      return (void) utoa(fp, c
      +                          onvarg.uint);;	Return value of _vfpfcnvrt is never used
  8290   000DF4  C0B9  F020         	movff	vfpfcnvrt@fp,utoa@fp
  8291   000DF8  C0BA  F021         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  8292   000DFC  C0C0  F022         	movff	vfpfcnvrt@convarg,utoa@d
  8293   000E00  C0C1  F023         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  8294   000E04  ECA1  F022         	call	_utoa	;wreg free
  8295   000E08  EF53  F008         	goto	l1560
  8296   000E0C                     l7558:
  8297                           
  8298                           ; BSR set to: 0
  8299   000E0C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8300   000E10  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8301   000E14                     	if	0	;tblptru may be non-zero
  8302   000E14                     	endif
  8303   000E14                     	if	0	;tblptru may be non-zero
  8304   000E14                     	endif
  8305   000E14  0008               	tblrd		*
  8306   000E16  50F5               	movf	tablat,w,c
  8307                           
  8308                           ; Switch size 1, requested type "simple"
  8309                           ; Number of cases is 1, Range of values is 117 to 117
  8310                           ; switch strategies available:
  8311                           ; Name         Instructions Cycles
  8312                           ; simple_byte            4     3 (average)
  8313                           ;	Chosen strategy is simple_byte
  8314   000E18  0A75               	xorlw	117	; case 117
  8315   000E1A  B4D8               	btfsc	status,2,c
  8316   000E1C  EFFA  F006         	goto	l7552
  8317   000E20  EF12  F007         	goto	l7560
  8318   000E24                     l7560:
  8319                           
  8320                           ; BSR set to: 0
  8321                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  8322   000E24  0E00               	movlw	0
  8323   000E26  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8324   000E28                     
  8325                           ; BSR set to: 0
  8326                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt)[0] == 's') {
  8327   000E28  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8328   000E2A  6ED9               	movwf	fsr2l,c
  8329   000E2C  6ADA               	clrf	fsr2h,c
  8330   000E2E  CFDE FFF6          	movff	postinc2,tblptrl
  8331   000E32  CFDD FFF7          	movff	postdec2,tblptrh
  8332   000E36                     	if	0	;tblptru may be non-zero
  8333   000E36                     	endif
  8334   000E36                     	if	0	;tblptru may be non-zero
  8335   000E36                     	endif
  8336   000E36  0008               	tblrd		*
  8337   000E38  50F5               	movf	tablat,w,c
  8338   000E3A  0A73               	xorlw	115
  8339   000E3C  A4D8               	btfss	status,2,c
  8340   000E3E  EF23  F007         	goto	u9201
  8341   000E42  EF25  F007         	goto	u9200
  8342   000E46                     u9201:
  8343   000E46  EF2F  F007         	goto	l7568
  8344   000E4A                     u9200:
  8345   000E4A                     
  8346                           ; BSR set to: 0
  8347                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  8348   000E4A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8349   000E4C  6ED9               	movwf	fsr2l,c
  8350   000E4E  6ADA               	clrf	fsr2h,c
  8351   000E50  2ADE               	incf	postinc2,f,c
  8352   000E52  0E00               	movlw	0
  8353   000E54  22DD               	addwfc	postdec2,f,c
  8354   000E56                     l7566:
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1659:    done = 1;
  8358   000E56  0E01               	movlw	1
  8359   000E58  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8360                           
  8361                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1660:   }
  8362   000E5A  EF7B  F007         	goto	l7578
  8363   000E5E                     l7568:
  8364                           
  8365                           ; BSR set to: 0
  8366   000E5E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8367   000E60  6ED9               	movwf	fsr2l,c
  8368   000E62  6ADA               	clrf	fsr2h,c
  8369   000E64  CFDE FFF6          	movff	postinc2,tblptrl
  8370   000E68  CFDD FFF7          	movff	postdec2,tblptrh
  8371   000E6C                     	if	0	;tblptru may be non-zero
  8372   000E6C                     	endif
  8373   000E6C                     	if	0	;tblptru may be non-zero
  8374   000E6C                     	endif
  8375   000E6C  0008               	tblrd		*
  8376   000E6E  50F5               	movf	tablat,w,c
  8377   000E70  0A6C               	xorlw	108
  8378   000E72  A4D8               	btfss	status,2,c
  8379   000E74  EF3E  F007         	goto	u9211
  8380   000E78  EF40  F007         	goto	u9210
  8381   000E7C                     u9211:
  8382   000E7C  EF7B  F007         	goto	l7578
  8383   000E80                     u9210:
  8384   000E80                     
  8385                           ; BSR set to: 0
  8386   000E80  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8387   000E82  6ED9               	movwf	fsr2l,c
  8388   000E84  6ADA               	clrf	fsr2h,c
  8389   000E86  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8390   000E8A  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8391   000E8E  0E01               	movlw	1
  8392   000E90  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8393   000E92  0E00               	movlw	0
  8394   000E94  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8395   000E96  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8396   000E9A  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8397   000E9E                     	if	0	;tblptru may be non-zero
  8398   000E9E                     	endif
  8399   000E9E                     	if	0	;tblptru may be non-zero
  8400   000E9E                     	endif
  8401   000E9E  0008               	tblrd		*
  8402   000EA0  50F5               	movf	tablat,w,c
  8403   000EA2  0A6C               	xorlw	108
  8404   000EA4  A4D8               	btfss	status,2,c
  8405   000EA6  EF57  F007         	goto	u9221
  8406   000EAA  EF59  F007         	goto	u9220
  8407   000EAE                     u9221:
  8408   000EAE  EF7B  F007         	goto	l7578
  8409   000EB2                     u9220:
  8410   000EB2                     
  8411                           ; BSR set to: 0
  8412   000EB2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8413   000EB4  6ED9               	movwf	fsr2l,c
  8414   000EB6  6ADA               	clrf	fsr2h,c
  8415   000EB8  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8416   000EBC  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8417   000EC0  0E02               	movlw	2
  8418   000EC2  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8419   000EC4  0E00               	movlw	0
  8420   000EC6  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8421   000EC8  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8422   000ECC  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8423   000ED0                     	if	0	;tblptru may be non-zero
  8424   000ED0                     	endif
  8425   000ED0                     	if	0	;tblptru may be non-zero
  8426   000ED0                     	endif
  8427   000ED0  0008               	tblrd		*
  8428   000ED2  50F5               	movf	tablat,w,c
  8429   000ED4  0A73               	xorlw	115
  8430   000ED6  A4D8               	btfss	status,2,c
  8431   000ED8  EF70  F007         	goto	u9231
  8432   000EDC  EF72  F007         	goto	u9230
  8433   000EE0                     u9231:
  8434   000EE0  EF7B  F007         	goto	l7578
  8435   000EE4                     u9230:
  8436   000EE4                     
  8437                           ; BSR set to: 0
  8438                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 3;
  8439   000EE4  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8440   000EE6  6ED9               	movwf	fsr2l,c
  8441   000EE8  6ADA               	clrf	fsr2h,c
  8442   000EEA  0E03               	movlw	3
  8443   000EEC  26DE               	addwf	postinc2,f,c
  8444   000EEE  0E00               	movlw	0
  8445   000EF0  22DD               	addwfc	postdec2,f,c
  8446   000EF2  EF2B  F007         	goto	l7566
  8447   000EF6                     l7578:
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1665:   if (done) {
  8451   000EF6  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  8452   000EF8  B4D8               	btfsc	status,2,c
  8453   000EFA  EF81  F007         	goto	u9241
  8454   000EFE  EF83  F007         	goto	u9240
  8455   000F02                     u9241:
  8456   000F02  EF97  F007         	goto	l7584
  8457   000F06                     u9240:
  8458   000F06                     
  8459                           ; BSR set to: 0
  8460                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1682:    return (void) stoa(fp, (*(
      +                          char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpfcnvrt is never use
      +                          d
  8461   000F06  C0B9  F010         	movff	vfpfcnvrt@fp,stoa@fp
  8462   000F0A  C0BA  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8463   000F0E  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8464   000F10  6ED9               	movwf	fsr2l,c
  8465   000F12  6ADA               	clrf	fsr2h,c
  8466   000F14  0E02               	movlw	2
  8467   000F16  26DF               	addwf	indf2,f,c
  8468   000F18  5CDF               	subwf	indf2,w,c
  8469   000F1A  6ED9               	movwf	fsr2l,c
  8470   000F1C  6ADA               	clrf	fsr2h,c
  8471   000F1E  CFDE F012          	movff	postinc2,stoa@s
  8472   000F22  CFDE F013          	movff	postinc2,stoa@s+1
  8473   000F26  ECF7  F01C         	call	_stoa	;wreg free
  8474   000F2A  EF53  F008         	goto	l1560
  8475   000F2E                     l7584:
  8476                           
  8477                           ; BSR set to: 0
  8478                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt;
  8479   000F2E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8480   000F30  6ED9               	movwf	fsr2l,c
  8481   000F32  6ADA               	clrf	fsr2h,c
  8482   000F34  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  8483   000F38  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  8484   000F3C                     
  8485                           ; BSR set to: 0
  8486                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  8487   000F3C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8488   000F40  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8489   000F44                     	if	0	;tblptru may be non-zero
  8490   000F44                     	endif
  8491   000F44                     	if	0	;tblptru may be non-zero
  8492   000F44                     	endif
  8493   000F44  0008               	tblrd		*
  8494   000F46  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  8495                           
  8496                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1691:   switch(c) {
  8497   000F4A  EFB3  F007         	goto	l7596
  8498   000F4E                     l7588:
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  8502   000F4E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  8503   000F50  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  8504                           
  8505                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1696:     break;
  8506   000F52  EFC2  F007         	goto	l7598
  8507   000F56                     l7590:
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1721:     c = 'l';
  8511   000F56  0E6C               	movlw	108
  8512   000F58  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8513                           
  8514                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1722:     break;
  8515   000F5A  EFC2  F007         	goto	l7598
  8516   000F5E                     l7592:
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  8520   000F5E  0E00               	movlw	0
  8521   000F60  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8522                           
  8523                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1725:     break;
  8524   000F62  EFC2  F007         	goto	l7598
  8525   000F66                     l7596:
  8526                           
  8527                           ; BSR set to: 0
  8528   000F66  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8529                           
  8530                           ; Switch size 1, requested type "simple"
  8531                           ; Number of cases is 3, Range of values is 76 to 108
  8532                           ; switch strategies available:
  8533                           ; Name         Instructions Cycles
  8534                           ; simple_byte           10     6 (average)
  8535                           ;	Chosen strategy is simple_byte
  8536   000F68  0A4C               	xorlw	76	; case 76
  8537   000F6A  B4D8               	btfsc	status,2,c
  8538   000F6C  EFA7  F007         	goto	l7588
  8539   000F70  0A2A               	xorlw	42	; case 102
  8540   000F72  B4D8               	btfsc	status,2,c
  8541   000F74  EFAB  F007         	goto	l7590
  8542   000F78  0A0A               	xorlw	10	; case 108
  8543   000F7A  B4D8               	btfsc	status,2,c
  8544   000F7C  EFA7  F007         	goto	l7588
  8545   000F80  EFAF  F007         	goto	l7592
  8546   000F84                     l7598:
  8547                           
  8548                           ; BSR set to: 0
  8549   000F84  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8550   000F88  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8551   000F8C                     	if	0	;tblptru may be non-zero
  8552   000F8C                     	endif
  8553   000F8C                     	if	0	;tblptru may be non-zero
  8554   000F8C                     	endif
  8555   000F8C  0008               	tblrd		*
  8556   000F8E  50F5               	movf	tablat,w,c
  8557   000F90  0A66               	xorlw	102
  8558   000F92  A4D8               	btfss	status,2,c
  8559   000F94  EFCE  F007         	goto	u9251
  8560   000F98  EFD0  F007         	goto	u9250
  8561   000F9C                     u9251:
  8562   000F9C  EF37  F008         	goto	l7618
  8563   000FA0                     u9250:
  8564   000FA0  EFFA  F007         	goto	l7606
  8565   000FA4                     l7600:
  8566                           
  8567                           ; BSR set to: 0
  8568                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1756:      convarg.f = (long double
      +                          )(*(double *)__va_arg(*(double **)ap, (double)0));
  8569   000FA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8570   000FA6  6ED9               	movwf	fsr2l,c
  8571   000FA8  6ADA               	clrf	fsr2h,c
  8572   000FAA  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8573   000FAE  0E04               	movlw	4
  8574   000FB0  26DF               	addwf	indf2,f,c
  8575   000FB2  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8576   000FB4  6ED9               	movwf	fsr2l,c
  8577   000FB6  6ADA               	clrf	fsr2h,c
  8578   000FB8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8579   000FBC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8580   000FC0  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8581   000FC4  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8582                           
  8583                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1757:      break;
  8584   000FC8  EF05  F008         	goto	l7608
  8585   000FCC                     l7602:
  8586                           
  8587                           ; BSR set to: 0
  8588                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1759:      convarg.f = (long double
      +                          )(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  8589   000FCC  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8590   000FCE  6ED9               	movwf	fsr2l,c
  8591   000FD0  6ADA               	clrf	fsr2h,c
  8592   000FD2  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8593   000FD6  0E04               	movlw	4
  8594   000FD8  26DF               	addwf	indf2,f,c
  8595   000FDA  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8596   000FDC  6ED9               	movwf	fsr2l,c
  8597   000FDE  6ADA               	clrf	fsr2h,c
  8598   000FE0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8599   000FE4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8600   000FE8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8601   000FEC  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8602                           
  8603                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1760:      break;
  8604   000FF0  EF05  F008         	goto	l7608
  8605   000FF4                     l7606:
  8606                           
  8607                           ; BSR set to: 0
  8608   000FF4  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8609                           
  8610                           ; Switch size 1, requested type "simple"
  8611                           ; Number of cases is 2, Range of values is 76 to 108
  8612                           ; switch strategies available:
  8613                           ; Name         Instructions Cycles
  8614                           ; simple_byte            7     4 (average)
  8615                           ;	Chosen strategy is simple_byte
  8616   000FF6  0A4C               	xorlw	76	; case 76
  8617   000FF8  B4D8               	btfsc	status,2,c
  8618   000FFA  EFE6  F007         	goto	l7602
  8619   000FFE  0A20               	xorlw	32	; case 108
  8620   001000  B4D8               	btfsc	status,2,c
  8621   001002  EFD2  F007         	goto	l7600
  8622   001006  EF05  F008         	goto	l7608
  8623   00100A                     l7608:
  8624                           
  8625                           ; BSR set to: 0
  8626                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1762:    *fmt = cp+1;
  8627   00100A  0E01               	movlw	1
  8628   00100C  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8629   00100E  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8630   001010  0E00               	movlw	0
  8631   001012  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8632   001014  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8633   001016  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8634   001018  6ED9               	movwf	fsr2l,c
  8635   00101A  6ADA               	clrf	fsr2h,c
  8636   00101C  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8637   001020  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8638                           
  8639                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1763:    switch (*cp) {
  8640   001024  EF2B  F008         	goto	l7616
  8641   001028                     l7610:
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1790:      return (void) efgtoa(fp,
      +                           convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  8645   001028  C0B9  F084         	movff	vfpfcnvrt@fp,efgtoa@fp
  8646   00102C  C0BA  F085         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  8647   001030  C0C0  F086         	movff	vfpfcnvrt@convarg,efgtoa@f
  8648   001034  C0C1  F087         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  8649   001038  C0C2  F088         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  8650   00103C  C0C3  F089         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  8651   001040  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8652   001044  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8653   001048                     	if	0	;tblptru may be non-zero
  8654   001048                     	endif
  8655   001048                     	if	0	;tblptru may be non-zero
  8656   001048                     	endif
  8657   001048  0008               	tblrd		*
  8658   00104A  CFF5 F08A          	movff	tablat,efgtoa@c
  8659   00104E  ECA9  F000         	call	_efgtoa	;wreg free
  8660   001052  EF53  F008         	goto	l1560
  8661   001056                     l7616:
  8662                           
  8663                           ; BSR set to: 0
  8664   001056  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8665   00105A  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8666   00105E                     	if	0	;tblptru may be non-zero
  8667   00105E                     	endif
  8668   00105E                     	if	0	;tblptru may be non-zero
  8669   00105E                     	endif
  8670   00105E  0008               	tblrd		*
  8671   001060  50F5               	movf	tablat,w,c
  8672                           
  8673                           ; Switch size 1, requested type "simple"
  8674                           ; Number of cases is 1, Range of values is 102 to 102
  8675                           ; switch strategies available:
  8676                           ; Name         Instructions Cycles
  8677                           ; simple_byte            4     3 (average)
  8678                           ;	Chosen strategy is simple_byte
  8679   001062  0A66               	xorlw	102	; case 102
  8680   001064  B4D8               	btfsc	status,2,c
  8681   001066  EF14  F008         	goto	l7610
  8682   00106A  EF37  F008         	goto	l7618
  8683   00106E                     l7618:
  8684                           
  8685                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  8686   00106E  0100               	movlb	0	; () banked
  8687   001070  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8688   001072  6ED9               	movwf	fsr2l,c
  8689   001074  6ADA               	clrf	fsr2h,c
  8690   001076  2ADE               	incf	postinc2,f,c
  8691   001078  0E00               	movlw	0
  8692   00107A  22DD               	addwfc	postdec2,f,c
  8693   00107C  EF53  F008         	goto	l1560
  8694   001080                     l7622:
  8695                           
  8696                           ; BSR set to: 0
  8697                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*fmt)[0], fp)
      +                          ;
  8698   001080  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8699   001082  6ED9               	movwf	fsr2l,c
  8700   001084  6ADA               	clrf	fsr2h,c
  8701   001086  CFDE FFF6          	movff	postinc2,tblptrl
  8702   00108A  CFDD FFF7          	movff	postdec2,tblptrh
  8703   00108E                     	if	0	;tblptru may be non-zero
  8704   00108E                     	endif
  8705   00108E                     	if	0	;tblptru may be non-zero
  8706   00108E                     	endif
  8707   00108E  0008               	tblrd		*
  8708   001090  50F5               	movf	tablat,w,c
  8709   001092  6E07               	movwf	fputc@c^0,c
  8710   001094  6A08               	clrf	(fputc@c+1)^0,c
  8711   001096  C0B9  F009         	movff	vfpfcnvrt@fp,fputc@fp
  8712   00109A  C0BA  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8713   00109E  EC86  F023         	call	_fputc	;wreg free
  8714   0010A2  EF37  F008         	goto	l7618
  8715   0010A6                     l1560:
  8716   0010A6  0012               	return		;funcret
  8717   0010A8                     __end_of_vfpfcnvrt:
  8718                           	callstack 0
  8719                           
  8720 ;; *************** function _utoa *****************
  8721 ;; Defined at:
  8722 ;;		line 1001 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  8723 ;; Parameters:    Size  Location     Type
  8724 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  8725 ;;		 -> NULL(0), sprintf@f(12), 
  8726 ;;  d               2   33[COMRAM] unsigned int 
  8727 ;; Auto vars:     Size  Location     Type
  8728 ;;  i               2   39[COMRAM] int 
  8729 ;;  p               2   37[COMRAM] int 
  8730 ;;  w               2   35[COMRAM] int 
  8731 ;; Return value:  Size  Location     Type
  8732 ;;                  1    wreg      void 
  8733 ;; Registers used:
  8734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8735 ;; Tracked objects:
  8736 ;;		On entry : 0/0
  8737 ;;		On exit  : 0/0
  8738 ;;		Unchanged: 0/0
  8739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8741 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8743 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8744 ;;Total ram usage:       10 bytes
  8745 ;; Hardware stack levels used: 1
  8746 ;; Hardware stack levels required when called: 5
  8747 ;; This function calls:
  8748 ;;		___lwdiv
  8749 ;;		___lwmod
  8750 ;;		_pad
  8751 ;; This function is called by:
  8752 ;;		_vfpfcnvrt
  8753 ;; This function uses a non-reentrant model
  8754 ;;
  8755                           
  8756                           	psect	text30
  8757   004542                     __ptext30:
  8758                           	callstack 0
  8759   004542                     _utoa:
  8760                           	callstack 21
  8761   004542                     
  8762                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1001: static void utoa(FILE *fp, vf
      +                          pf_uint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1002: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 1003:     int i, w;;D:\MPLABX\Compiler\pic\sources\
      +                          c99\common\doprnt.c: 1005:  int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1
      +                          017:     p = (0 <= prec) ? prec : 1;
  8763   004542  BE58               	btfsc	(_prec+1)^0,7,c
  8764   004544  EFA8  F022         	goto	u8970
  8765   004548  EFA6  F022         	goto	u8971
  8766   00454C                     u8971:
  8767   00454C  EFAE  F022         	goto	l1517
  8768   004550                     u8970:
  8769   004550  0E00               	movlw	0
  8770   004552  6E27               	movwf	(utoa@p+1)^0,c
  8771   004554  0E01               	movlw	1
  8772   004556  6E26               	movwf	utoa@p^0,c
  8773   004558  EFB2  F022         	goto	l1519
  8774   00455C                     l1517:
  8775   00455C  C057  F026         	movff	_prec,utoa@p
  8776   004560  C058  F027         	movff	_prec+1,utoa@p+1
  8777   004564                     l1519:
  8778                           
  8779                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1019:     w = width;
  8780   004564  C055  F024         	movff	_width,utoa@w
  8781   004568  C056  F025         	movff	_width+1,utoa@w+1
  8782   00456C                     
  8783                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1022:     i = sizeof(dbuf) - 1;
  8784   00456C  0E00               	movlw	0
  8785   00456E  6E29               	movwf	(utoa@i+1)^0,c
  8786   004570  0E4F               	movlw	79
  8787   004572  6E28               	movwf	utoa@i^0,c
  8788   004574                     
  8789                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i] = '\0';
  8790   004574  0E00               	movlw	0
  8791   004576  0101               	movlb	1	; () banked
  8792   004578  6F76               	movwf	(_dbuf+79)& (0+255),b
  8793                           
  8794                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  8795   00457A  EFE9  F022         	goto	l7404
  8796   00457E                     l7394:
  8797                           
  8798                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1033:     )) {;D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 1034:         --i;
  8799   00457E  0628               	decf	utoa@i^0,f,c
  8800   004580  A0D8               	btfss	status,0,c
  8801   004582  0629               	decf	(utoa@i+1)^0,f,c
  8802   004584                     
  8803                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1035:         dbuf[i] = '0' + (d % 
      +                          10);
  8804   004584  0E27               	movlw	low _dbuf
  8805   004586  2428               	addwf	utoa@i^0,w,c
  8806   004588  6ED9               	movwf	fsr2l,c
  8807   00458A  0E01               	movlw	high _dbuf
  8808   00458C  2029               	addwfc	(utoa@i+1)^0,w,c
  8809   00458E  6EDA               	movwf	fsr2h,c
  8810   004590  C022  F006         	movff	utoa@d,___lwmod@dividend
  8811   004594  C023  F007         	movff	utoa@d+1,___lwmod@dividend+1
  8812   004598  0E00               	movlw	0
  8813   00459A  6E09               	movwf	(___lwmod@divisor+1)^0,c
  8814   00459C  0E0A               	movlw	10
  8815   00459E  6E08               	movwf	___lwmod@divisor^0,c
  8816   0045A0  EC9F  F026         	call	___lwmod	;wreg free
  8817   0045A4  5006               	movf	?___lwmod^0,w,c
  8818   0045A6  0F30               	addlw	48
  8819   0045A8  6EDF               	movwf	indf2,c
  8820   0045AA                     
  8821                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1037:         --p;
  8822   0045AA  0626               	decf	utoa@p^0,f,c
  8823   0045AC  A0D8               	btfss	status,0,c
  8824   0045AE  0627               	decf	(utoa@p+1)^0,f,c
  8825   0045B0                     
  8826                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1041:         --w;
  8827   0045B0  0624               	decf	utoa@w^0,f,c
  8828   0045B2  A0D8               	btfss	status,0,c
  8829   0045B4  0625               	decf	(utoa@w+1)^0,f,c
  8830   0045B6                     
  8831                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1042:         d = d / 10;
  8832   0045B6  C022  F006         	movff	utoa@d,___lwdiv@dividend
  8833   0045BA  C023  F007         	movff	utoa@d+1,___lwdiv@dividend+1
  8834   0045BE  0E00               	movlw	0
  8835   0045C0  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  8836   0045C2  0E0A               	movlw	10
  8837   0045C4  6E08               	movwf	___lwdiv@divisor^0,c
  8838   0045C6  ECF9  F025         	call	___lwdiv	;wreg free
  8839   0045CA  C006  F022         	movff	?___lwdiv,utoa@d
  8840   0045CE  C007  F023         	movff	?___lwdiv+1,utoa@d+1
  8841   0045D2                     l7404:
  8842                           
  8843                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  8844   0045D2  5028               	movf	utoa@i^0,w,c
  8845   0045D4  1029               	iorwf	(utoa@i+1)^0,w,c
  8846   0045D6  B4D8               	btfsc	status,2,c
  8847   0045D8  EFF0  F022         	goto	u8981
  8848   0045DC  EFF2  F022         	goto	u8980
  8849   0045E0                     u8981:
  8850   0045E0  EF08  F023         	goto	l7410
  8851   0045E4                     u8980:
  8852   0045E4  5022               	movf	utoa@d^0,w,c
  8853   0045E6  1023               	iorwf	(utoa@d+1)^0,w,c
  8854   0045E8  A4D8               	btfss	status,2,c
  8855   0045EA  EFF9  F022         	goto	u8991
  8856   0045EE  EFFB  F022         	goto	u8990
  8857   0045F2                     u8991:
  8858   0045F2  EFBF  F022         	goto	l7394
  8859   0045F6                     u8990:
  8860   0045F6  BE27               	btfsc	(utoa@p+1)^0,7,c
  8861   0045F8  EF08  F023         	goto	u9000
  8862   0045FC  5027               	movf	(utoa@p+1)^0,w,c
  8863   0045FE  E106               	bnz	u9001
  8864   004600  0426               	decf	utoa@p^0,w,c
  8865   004602  B0D8               	btfsc	status,0,c
  8866   004604  EF06  F023         	goto	u9001
  8867   004608  EF08  F023         	goto	u9000
  8868   00460C                     u9001:
  8869   00460C  EFBF  F022         	goto	l7394
  8870   004610                     u9000:
  8871   004610                     l7410:
  8872                           
  8873                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1046:     return (void) pad(fp, &db
      +                          uf[i], w);
  8874   004610  C020  F017         	movff	utoa@fp,pad@fp
  8875   004614  C021  F018         	movff	utoa@fp+1,pad@fp+1
  8876   004618  0E27               	movlw	low _dbuf
  8877   00461A  2428               	addwf	utoa@i^0,w,c
  8878   00461C  6E19               	movwf	pad@buf^0,c
  8879   00461E  0E01               	movlw	high _dbuf
  8880   004620  2029               	addwfc	(utoa@i+1)^0,w,c
  8881   004622  6E1A               	movwf	(pad@buf+1)^0,c
  8882   004624  C024  F01B         	movff	utoa@w,pad@p
  8883   004628  C025  F01C         	movff	utoa@w+1,pad@p+1
  8884   00462C  ECAA  F025         	call	_pad	;wreg free
  8885   004630  0012               	return		;funcret
  8886   004632                     __end_of_utoa:
  8887                           	callstack 0
  8888                           
  8889 ;; *************** function ___lwmod *****************
  8890 ;; Defined at:
  8891 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwmod.c"
  8892 ;; Parameters:    Size  Location     Type
  8893 ;;  dividend        2    5[COMRAM] unsigned int 
  8894 ;;  divisor         2    7[COMRAM] unsigned int 
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;  counter         1    9[COMRAM] unsigned char 
  8897 ;; Return value:  Size  Location     Type
  8898 ;;                  2    5[COMRAM] unsigned int 
  8899 ;; Registers used:
  8900 ;;		wreg, status,2, status,0
  8901 ;; Tracked objects:
  8902 ;;		On entry : 0/0
  8903 ;;		On exit  : 0/0
  8904 ;;		Unchanged: 0/0
  8905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8909 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8910 ;;Total ram usage:        5 bytes
  8911 ;; Hardware stack levels used: 1
  8912 ;; Hardware stack levels required when called: 1
  8913 ;; This function calls:
  8914 ;;		Nothing
  8915 ;; This function is called by:
  8916 ;;		_utoa
  8917 ;; This function uses a non-reentrant model
  8918 ;;
  8919                           
  8920                           	psect	text31
  8921   004D3E                     __ptext31:
  8922                           	callstack 0
  8923   004D3E                     ___lwmod:
  8924                           	callstack 24
  8925   004D3E  5008               	movf	___lwmod@divisor^0,w,c
  8926   004D40  1009               	iorwf	(___lwmod@divisor+1)^0,w,c
  8927   004D42  B4D8               	btfsc	status,2,c
  8928   004D44  EFA6  F026         	goto	u8171
  8929   004D48  EFA8  F026         	goto	u8170
  8930   004D4C                     u8171:
  8931   004D4C  EFCC  F026         	goto	l1211
  8932   004D50                     u8170:
  8933   004D50  0E01               	movlw	1
  8934   004D52  6E0A               	movwf	___lwmod@counter^0,c
  8935   004D54  EFB0  F026         	goto	l6978
  8936   004D58                     l6976:
  8937   004D58  90D8               	bcf	status,0,c
  8938   004D5A  3608               	rlcf	___lwmod@divisor^0,f,c
  8939   004D5C  3609               	rlcf	(___lwmod@divisor+1)^0,f,c
  8940   004D5E  2A0A               	incf	___lwmod@counter^0,f,c
  8941   004D60                     l6978:
  8942   004D60  AE09               	btfss	(___lwmod@divisor+1)^0,7,c
  8943   004D62  EFB5  F026         	goto	u8181
  8944   004D66  EFB7  F026         	goto	u8180
  8945   004D6A                     u8181:
  8946   004D6A  EFAC  F026         	goto	l6976
  8947   004D6E                     u8180:
  8948   004D6E                     l6980:
  8949   004D6E  5008               	movf	___lwmod@divisor^0,w,c
  8950   004D70  5C06               	subwf	___lwmod@dividend^0,w,c
  8951   004D72  5009               	movf	(___lwmod@divisor+1)^0,w,c
  8952   004D74  5807               	subwfb	(___lwmod@dividend+1)^0,w,c
  8953   004D76  A0D8               	btfss	status,0,c
  8954   004D78  EFC0  F026         	goto	u8191
  8955   004D7C  EFC2  F026         	goto	u8190
  8956   004D80                     u8191:
  8957   004D80  EFC6  F026         	goto	l6984
  8958   004D84                     u8190:
  8959   004D84  5008               	movf	___lwmod@divisor^0,w,c
  8960   004D86  5E06               	subwf	___lwmod@dividend^0,f,c
  8961   004D88  5009               	movf	(___lwmod@divisor+1)^0,w,c
  8962   004D8A  5A07               	subwfb	(___lwmod@dividend+1)^0,f,c
  8963   004D8C                     l6984:
  8964   004D8C  90D8               	bcf	status,0,c
  8965   004D8E  3209               	rrcf	(___lwmod@divisor+1)^0,f,c
  8966   004D90  3208               	rrcf	___lwmod@divisor^0,f,c
  8967   004D92  2E0A               	decfsz	___lwmod@counter^0,f,c
  8968   004D94  EFB7  F026         	goto	l6980
  8969   004D98                     l1211:
  8970   004D98  C006  F006         	movff	___lwmod@dividend,?___lwmod
  8971   004D9C  C007  F007         	movff	___lwmod@dividend+1,?___lwmod+1
  8972   004DA0  0012               	return		;funcret
  8973   004DA2                     __end_of___lwmod:
  8974                           	callstack 0
  8975                           
  8976 ;; *************** function ___lwdiv *****************
  8977 ;; Defined at:
  8978 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwdiv.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  dividend        2    5[COMRAM] unsigned int 
  8981 ;;  divisor         2    7[COMRAM] unsigned int 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  quotient        2   10[COMRAM] unsigned int 
  8984 ;;  counter         1    9[COMRAM] unsigned char 
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  2    5[COMRAM] unsigned int 
  8987 ;; Registers used:
  8988 ;;		wreg, status,2, status,0
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8995 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8997 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8998 ;;Total ram usage:        7 bytes
  8999 ;; Hardware stack levels used: 1
  9000 ;; Hardware stack levels required when called: 1
  9001 ;; This function calls:
  9002 ;;		Nothing
  9003 ;; This function is called by:
  9004 ;;		_utoa
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           	psect	text32
  9009   004BF2                     __ptext32:
  9010                           	callstack 0
  9011   004BF2                     ___lwdiv:
  9012                           	callstack 24
  9013   004BF2  0E00               	movlw	0
  9014   004BF4  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9015   004BF6  0E00               	movlw	0
  9016   004BF8  6E0B               	movwf	___lwdiv@quotient^0,c
  9017   004BFA  5008               	movf	___lwdiv@divisor^0,w,c
  9018   004BFC  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9019   004BFE  B4D8               	btfsc	status,2,c
  9020   004C00  EF04  F026         	goto	u8141
  9021   004C04  EF06  F026         	goto	u8140
  9022   004C08                     u8141:
  9023   004C08  EF2E  F026         	goto	l1201
  9024   004C0C                     u8140:
  9025   004C0C  0E01               	movlw	1
  9026   004C0E  6E0A               	movwf	___lwdiv@counter^0,c
  9027   004C10  EF0E  F026         	goto	l6958
  9028   004C14                     l6956:
  9029   004C14  90D8               	bcf	status,0,c
  9030   004C16  3608               	rlcf	___lwdiv@divisor^0,f,c
  9031   004C18  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9032   004C1A  2A0A               	incf	___lwdiv@counter^0,f,c
  9033   004C1C                     l6958:
  9034   004C1C  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  9035   004C1E  EF13  F026         	goto	u8151
  9036   004C22  EF15  F026         	goto	u8150
  9037   004C26                     u8151:
  9038   004C26  EF0A  F026         	goto	l6956
  9039   004C2A                     u8150:
  9040   004C2A                     l6960:
  9041   004C2A  90D8               	bcf	status,0,c
  9042   004C2C  360B               	rlcf	___lwdiv@quotient^0,f,c
  9043   004C2E  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9044   004C30  5008               	movf	___lwdiv@divisor^0,w,c
  9045   004C32  5C06               	subwf	___lwdiv@dividend^0,w,c
  9046   004C34  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9047   004C36  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9048   004C38  A0D8               	btfss	status,0,c
  9049   004C3A  EF21  F026         	goto	u8161
  9050   004C3E  EF23  F026         	goto	u8160
  9051   004C42                     u8161:
  9052   004C42  EF28  F026         	goto	l6968
  9053   004C46                     u8160:
  9054   004C46  5008               	movf	___lwdiv@divisor^0,w,c
  9055   004C48  5E06               	subwf	___lwdiv@dividend^0,f,c
  9056   004C4A  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9057   004C4C  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9058   004C4E  800B               	bsf	___lwdiv@quotient^0,0,c
  9059   004C50                     l6968:
  9060   004C50  90D8               	bcf	status,0,c
  9061   004C52  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9062   004C54  3208               	rrcf	___lwdiv@divisor^0,f,c
  9063   004C56  2E0A               	decfsz	___lwdiv@counter^0,f,c
  9064   004C58  EF15  F026         	goto	l6960
  9065   004C5C                     l1201:
  9066   004C5C  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  9067   004C60  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9068   004C64  0012               	return		;funcret
  9069   004C66                     __end_of___lwdiv:
  9070                           	callstack 0
  9071                           
  9072 ;; *************** function _stoa *****************
  9073 ;; Defined at:
  9074 ;;		line 942 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  9077 ;;		 -> NULL(0), sprintf@f(12), 
  9078 ;;  s               2   17[COMRAM] PTR unsigned char 
  9079 ;;		 -> ?_printf(2), ?_sprintf(2), runUART@reversed(31), STR_24(1), 
  9080 ;;		 -> STR_23(6), STR_22(5), STR_21(4), STR_20(4), 
  9081 ;;		 -> STR_19(4), STR_18(5), STR_17(5), 
  9082 ;; Auto vars:     Size  Location     Type
  9083 ;;  l               2   27[COMRAM] int 
  9084 ;;  cp              2   25[COMRAM] PTR unsigned char 
  9085 ;;		 -> ?_printf(2), STR_40(7), ?_sprintf(2), runUART@reversed(31), 
  9086 ;;		 -> STR_24(1), STR_23(6), STR_22(5), STR_21(4), 
  9087 ;;		 -> STR_20(4), STR_19(4), STR_18(5), STR_17(5), 
  9088 ;;  w               2   23[COMRAM] int 
  9089 ;;  p               2   21[COMRAM] int 
  9090 ;; Return value:  Size  Location     Type
  9091 ;;                  1    wreg      void 
  9092 ;; Registers used:
  9093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9100 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9101 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9102 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9103 ;;Total ram usage:       14 bytes
  9104 ;; Hardware stack levels used: 1
  9105 ;; Hardware stack levels required when called: 3
  9106 ;; This function calls:
  9107 ;;		_fputc
  9108 ;; This function is called by:
  9109 ;;		_vfpfcnvrt
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113                           	psect	text33
  9114   0039EE                     __ptext33:
  9115                           	callstack 0
  9116   0039EE                     _stoa:
  9117                           	callstack 23
  9118   0039EE                     
  9119                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 942: static void stoa(FILE *fp, cha
      +                          r *s);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 943: {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 944:     char *cp;;D:\MPLABX\Compiler\pic\sources\c99\commo
      +                          n\doprnt.c: 945:     int l, p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 947: 
      +                           int w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 951:     cp = s;
  9120   0039EE  C012  F01A         	movff	stoa@s,stoa@cp
  9121   0039F2  C013  F01B         	movff	stoa@s+1,stoa@cp+1
  9122                           
  9123                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 952:     if (!cp) {
  9124   0039F6  501A               	movf	stoa@cp^0,w,c
  9125   0039F8  101B               	iorwf	(stoa@cp+1)^0,w,c
  9126   0039FA  A4D8               	btfss	status,2,c
  9127   0039FC  EF02  F01D         	goto	u8861
  9128   003A00  EF04  F01D         	goto	u8860
  9129   003A04                     u8861:
  9130   003A04  EF08  F01D         	goto	l7352
  9131   003A08                     u8860:
  9132   003A08                     
  9133                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 953:         cp = "(null)";
  9134   003A08  0EBF               	movlw	low STR_40
  9135   003A0A  6E1A               	movwf	stoa@cp^0,c
  9136   003A0C  0EFF               	movlw	high STR_40
  9137   003A0E  6E1B               	movwf	(stoa@cp+1)^0,c
  9138   003A10                     l7352:
  9139                           
  9140                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 957:  for (l = 0; cp[l] != '\0'; l+
      +                          +) {
  9141   003A10  0E00               	movlw	0
  9142   003A12  6E1D               	movwf	(stoa@l+1)^0,c
  9143   003A14  0E00               	movlw	0
  9144   003A16  6E1C               	movwf	stoa@l^0,c
  9145   003A18  EF10  F01D         	goto	l7356
  9146   003A1C                     l7354:
  9147   003A1C  4A1C               	infsnz	stoa@l^0,f,c
  9148   003A1E  2A1D               	incf	(stoa@l+1)^0,f,c
  9149   003A20                     l7356:
  9150   003A20  501C               	movf	stoa@l^0,w,c
  9151   003A22  241A               	addwf	stoa@cp^0,w,c
  9152   003A24  6E14               	movwf	??_stoa^0,c
  9153   003A26  501D               	movf	(stoa@l+1)^0,w,c
  9154   003A28  201B               	addwfc	(stoa@cp+1)^0,w,c
  9155   003A2A  6E15               	movwf	(??_stoa+1)^0,c
  9156   003A2C  C014  FFF6         	movff	??_stoa,tblptrl
  9157   003A30  C015  FFF7         	movff	??_stoa+1,tblptrh
  9158   003A34  0E00               	movlw	low (__mediumconst shr (0+16))
  9159   003A36  6EF8               	movwf	tblptru,c
  9160   003A38  0E0F               	movlw	(high __ramtop+-1)
  9161   003A3A  64F7               	cpfsgt	tblptrh,c
  9162   003A3C  D003               	bra	u8877
  9163   003A3E  0008               	tblrd		*
  9164   003A40  50F5               	movf	tablat,w,c
  9165   003A42  D005               	bra	u8870
  9166   003A44                     u8877:
  9167   003A44  CFF6 FFE1          	movff	tblptrl,fsr1l
  9168   003A48  CFF7 FFE2          	movff	tblptrh,fsr1h
  9169   003A4C  50E7               	movf	indf1,w,c
  9170   003A4E                     u8870:
  9171   003A4E  0900               	iorlw	0
  9172   003A50  A4D8               	btfss	status,2,c
  9173   003A52  EF2D  F01D         	goto	u8881
  9174   003A56  EF2F  F01D         	goto	u8880
  9175   003A5A                     u8881:
  9176   003A5A  EF0E  F01D         	goto	l7354
  9177   003A5E                     u8880:
  9178   003A5E                     
  9179                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 961:  if (!(prec < 0) && (prec < l)
      +                          ) {
  9180   003A5E  BE58               	btfsc	(_prec+1)^0,7,c
  9181   003A60  EF34  F01D         	goto	u8891
  9182   003A64  EF36  F01D         	goto	u8890
  9183   003A68                     u8891:
  9184   003A68  EF49  F01D         	goto	l1501
  9185   003A6C                     u8890:
  9186   003A6C  501C               	movf	stoa@l^0,w,c
  9187   003A6E  5C57               	subwf	_prec^0,w,c
  9188   003A70  5058               	movf	(_prec+1)^0,w,c
  9189   003A72  0A80               	xorlw	128
  9190   003A74  6E14               	movwf	??_stoa^0,c
  9191   003A76  501D               	movf	(stoa@l+1)^0,w,c
  9192   003A78  0A80               	xorlw	128
  9193   003A7A  5814               	subwfb	??_stoa^0,w,c
  9194   003A7C  B0D8               	btfsc	status,0,c
  9195   003A7E  EF43  F01D         	goto	u8901
  9196   003A82  EF45  F01D         	goto	u8900
  9197   003A86                     u8901:
  9198   003A86  EF49  F01D         	goto	l1501
  9199   003A8A                     u8900:
  9200   003A8A                     
  9201                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 962:   l = prec;
  9202   003A8A  C057  F01C         	movff	_prec,stoa@l
  9203   003A8E  C058  F01D         	movff	_prec+1,stoa@l+1
  9204   003A92                     l1501:
  9205                           
  9206                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 965:     p = l;
  9207   003A92  C01C  F016         	movff	stoa@l,stoa@p
  9208   003A96  C01D  F017         	movff	stoa@l+1,stoa@p+1
  9209                           
  9210                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 969:     w = width;
  9211   003A9A  C055  F018         	movff	_width,stoa@w
  9212   003A9E  C056  F019         	movff	_width+1,stoa@w+1
  9213                           
  9214                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 970:     if (!(flags & (1 << 0))) {
  9215   003AA2  B059               	btfsc	_flags^0,0,c
  9216   003AA4  EF56  F01D         	goto	u8911
  9217   003AA8  EF58  F01D         	goto	u8910
  9218   003AAC                     u8911:
  9219   003AAC  EF94  F01D         	goto	l7376
  9220   003AB0                     u8910:
  9221   003AB0  EF66  F01D         	goto	l7370
  9222   003AB4                     l7366:
  9223                           
  9224                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 972:             fputc(' ', fp);
  9225   003AB4  0E00               	movlw	0
  9226   003AB6  6E08               	movwf	(fputc@c+1)^0,c
  9227   003AB8  0E20               	movlw	32
  9228   003ABA  6E07               	movwf	fputc@c^0,c
  9229   003ABC  C010  F009         	movff	stoa@fp,fputc@fp
  9230   003AC0  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9231   003AC4  EC86  F023         	call	_fputc	;wreg free
  9232   003AC8                     
  9233                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 973:             ++l;
  9234   003AC8  4A1C               	infsnz	stoa@l^0,f,c
  9235   003ACA  2A1D               	incf	(stoa@l+1)^0,f,c
  9236   003ACC                     l7370:
  9237                           
  9238                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 971:         while (l < w) {
  9239   003ACC  5018               	movf	stoa@w^0,w,c
  9240   003ACE  5C1C               	subwf	stoa@l^0,w,c
  9241   003AD0  501D               	movf	(stoa@l+1)^0,w,c
  9242   003AD2  0A80               	xorlw	128
  9243   003AD4  6E14               	movwf	??_stoa^0,c
  9244   003AD6  5019               	movf	(stoa@w+1)^0,w,c
  9245   003AD8  0A80               	xorlw	128
  9246   003ADA  5814               	subwfb	??_stoa^0,w,c
  9247   003ADC  A0D8               	btfss	status,0,c
  9248   003ADE  EF73  F01D         	goto	u8921
  9249   003AE2  EF75  F01D         	goto	u8920
  9250   003AE6                     u8921:
  9251   003AE6  EF5A  F01D         	goto	l7366
  9252   003AEA                     u8920:
  9253   003AEA  EF94  F01D         	goto	l7376
  9254   003AEE                     l7372:
  9255                           
  9256                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 980:         fputc(*cp, fp);
  9257   003AEE  C01A  FFF6         	movff	stoa@cp,tblptrl
  9258   003AF2  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  9259   003AF6  0E00               	movlw	low (__mediumconst shr (0+16))
  9260   003AF8  6EF8               	movwf	tblptru,c
  9261   003AFA  0E0F               	movlw	(high __ramtop+-1)
  9262   003AFC  64F7               	cpfsgt	tblptrh,c
  9263   003AFE  D003               	bra	u8937
  9264   003B00  0008               	tblrd		*
  9265   003B02  50F5               	movf	tablat,w,c
  9266   003B04  D005               	bra	u8930
  9267   003B06                     u8937:
  9268   003B06  CFF6 FFE1          	movff	tblptrl,fsr1l
  9269   003B0A  CFF7 FFE2          	movff	tblptrh,fsr1h
  9270   003B0E  50E7               	movf	indf1,w,c
  9271   003B10                     u8930:
  9272   003B10  6E14               	movwf	??_stoa^0,c
  9273   003B12  5014               	movf	??_stoa^0,w,c
  9274   003B14  6E07               	movwf	fputc@c^0,c
  9275   003B16  6A08               	clrf	(fputc@c+1)^0,c
  9276   003B18  C010  F009         	movff	stoa@fp,fputc@fp
  9277   003B1C  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9278   003B20  EC86  F023         	call	_fputc	;wreg free
  9279   003B24                     
  9280                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 981:         ++cp;
  9281   003B24  4A1A               	infsnz	stoa@cp^0,f,c
  9282   003B26  2A1B               	incf	(stoa@cp+1)^0,f,c
  9283   003B28                     l7376:
  9284                           
  9285                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 979:     while (p--) {
  9286   003B28  0616               	decf	stoa@p^0,f,c
  9287   003B2A  A0D8               	btfss	status,0,c
  9288   003B2C  0617               	decf	(stoa@p+1)^0,f,c
  9289   003B2E  2816               	incf	stoa@p^0,w,c
  9290   003B30  E106               	bnz	u8941
  9291   003B32  2817               	incf	(stoa@p+1)^0,w,c
  9292   003B34  A4D8               	btfss	status,2,c
  9293   003B36  EF9F  F01D         	goto	u8941
  9294   003B3A  EFA1  F01D         	goto	u8940
  9295   003B3E                     u8941:
  9296   003B3E  EF77  F01D         	goto	l7372
  9297   003B42                     u8940:
  9298   003B42                     
  9299                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 986:     if (flags & (1 << 0)) {
  9300   003B42  A059               	btfss	_flags^0,0,c
  9301   003B44  EFA6  F01D         	goto	u8951
  9302   003B48  EFA8  F01D         	goto	u8950
  9303   003B4C                     u8951:
  9304   003B4C  EFC5  F01D         	goto	l1513
  9305   003B50                     u8950:
  9306   003B50  EFB6  F01D         	goto	l7384
  9307   003B54                     l7380:
  9308                           
  9309                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 988:             fputc(' ', fp);
  9310   003B54  0E00               	movlw	0
  9311   003B56  6E08               	movwf	(fputc@c+1)^0,c
  9312   003B58  0E20               	movlw	32
  9313   003B5A  6E07               	movwf	fputc@c^0,c
  9314   003B5C  C010  F009         	movff	stoa@fp,fputc@fp
  9315   003B60  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9316   003B64  EC86  F023         	call	_fputc	;wreg free
  9317   003B68                     
  9318                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 989:             ++l;
  9319   003B68  4A1C               	infsnz	stoa@l^0,f,c
  9320   003B6A  2A1D               	incf	(stoa@l+1)^0,f,c
  9321   003B6C                     l7384:
  9322                           
  9323                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 987:         while (l < w) {
  9324   003B6C  5018               	movf	stoa@w^0,w,c
  9325   003B6E  5C1C               	subwf	stoa@l^0,w,c
  9326   003B70  501D               	movf	(stoa@l+1)^0,w,c
  9327   003B72  0A80               	xorlw	128
  9328   003B74  6E14               	movwf	??_stoa^0,c
  9329   003B76  5019               	movf	(stoa@w+1)^0,w,c
  9330   003B78  0A80               	xorlw	128
  9331   003B7A  5814               	subwfb	??_stoa^0,w,c
  9332   003B7C  A0D8               	btfss	status,0,c
  9333   003B7E  EFC3  F01D         	goto	u8961
  9334   003B82  EFC5  F01D         	goto	u8960
  9335   003B86                     u8961:
  9336   003B86  EFAA  F01D         	goto	l7380
  9337   003B8A                     u8960:
  9338   003B8A                     l1513:
  9339   003B8A  0012               	return		;funcret
  9340   003B8C                     __end_of_stoa:
  9341                           	callstack 0
  9342                           
  9343 ;; *************** function _read_prec_or_width *****************
  9344 ;; Defined at:
  9345 ;;		line 1158 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;  fmt             1   11[COMRAM] PTR PTR const unsigned c
  9348 ;;		 -> vfprintf@cfmt(2), 
  9349 ;;  ap              1   12[COMRAM] PTR PTR void [1]
  9350 ;;		 -> printf@ap(1), sprintf@ap(1), 
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;  c               1   13[COMRAM] unsigned char 
  9353 ;;  n               2   14[COMRAM] int 
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  2   11[COMRAM] int 
  9356 ;; Registers used:
  9357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9364 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9366 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9367 ;;Total ram usage:        5 bytes
  9368 ;; Hardware stack levels used: 1
  9369 ;; Hardware stack levels required when called: 2
  9370 ;; This function calls:
  9371 ;;		___wmul
  9372 ;; This function is called by:
  9373 ;;		_vfpfcnvrt
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           	psect	text34
  9378   0049FC                     __ptext34:
  9379                           	callstack 0
  9380   0049FC                     _read_prec_or_width:
  9381                           	callstack 24
  9382   0049FC                     
  9383                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1159:     int n = 0;
  9384   0049FC  0E00               	movlw	0
  9385   0049FE  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9386   004A00  0E00               	movlw	0
  9387   004A02  6E0F               	movwf	read_prec_or_width@n^0,c
  9388   004A04                     
  9389                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1160:     if ((*fmt)[0] == '*') {
  9390   004A04  500C               	movf	read_prec_or_width@fmt^0,w,c
  9391   004A06  6ED9               	movwf	fsr2l,c
  9392   004A08  6ADA               	clrf	fsr2h,c
  9393   004A0A  CFDE FFF6          	movff	postinc2,tblptrl
  9394   004A0E  CFDD FFF7          	movff	postdec2,tblptrh
  9395   004A12                     	if	0	;tblptru may be non-zero
  9396   004A12                     	endif
  9397   004A12                     	if	0	;tblptru may be non-zero
  9398   004A12                     	endif
  9399   004A12  0008               	tblrd		*
  9400   004A14  50F5               	movf	tablat,w,c
  9401   004A16  0A2A               	xorlw	42
  9402   004A18  A4D8               	btfss	status,2,c
  9403   004A1A  EF11  F025         	goto	u9011
  9404   004A1E  EF13  F025         	goto	u9010
  9405   004A22                     u9011:
  9406   004A22  EF3D  F025         	goto	l7426
  9407   004A26                     u9010:
  9408   004A26                     
  9409                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1161:         ++*fmt;
  9410   004A26  500C               	movf	read_prec_or_width@fmt^0,w,c
  9411   004A28  6ED9               	movwf	fsr2l,c
  9412   004A2A  6ADA               	clrf	fsr2h,c
  9413   004A2C  2ADE               	incf	postinc2,f,c
  9414   004A2E  0E00               	movlw	0
  9415   004A30  22DD               	addwfc	postdec2,f,c
  9416   004A32                     
  9417                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1162:         n = (*(int *)__va_arg
      +                          (*(int **)*ap, (int)0));
  9418   004A32  500D               	movf	read_prec_or_width@ap^0,w,c
  9419   004A34  6ED9               	movwf	fsr2l,c
  9420   004A36  6ADA               	clrf	fsr2h,c
  9421   004A38  0E02               	movlw	2
  9422   004A3A  26DF               	addwf	indf2,f,c
  9423   004A3C  5CDF               	subwf	indf2,w,c
  9424   004A3E  6ED9               	movwf	fsr2l,c
  9425   004A40  6ADA               	clrf	fsr2h,c
  9426   004A42  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  9427   004A46  CFDE F010          	movff	postinc2,read_prec_or_width@n+1
  9428                           
  9429                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1163:     } else {
  9430   004A4A  EF50  F025         	goto	l1529
  9431   004A4E                     l7422:
  9432                           
  9433                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1166:             n = n * 10 + c;
  9434   004A4E  C00F  F006         	movff	read_prec_or_width@n,___wmul@multiplier
  9435   004A52  C010  F007         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  9436   004A56  0E00               	movlw	0
  9437   004A58  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  9438   004A5A  0E0A               	movlw	10
  9439   004A5C  6E08               	movwf	___wmul@multiplicand^0,c
  9440   004A5E  ECE0  F028         	call	___wmul	;wreg free
  9441   004A62  500E               	movf	read_prec_or_width@c^0,w,c
  9442   004A64  2406               	addwf	?___wmul^0,w,c
  9443   004A66  6E0F               	movwf	read_prec_or_width@n^0,c
  9444   004A68  0E00               	movlw	0
  9445   004A6A  2007               	addwfc	(?___wmul+1)^0,w,c
  9446   004A6C  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9447   004A6E                     
  9448                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1167:             ++*fmt;
  9449   004A6E  500C               	movf	read_prec_or_width@fmt^0,w,c
  9450   004A70  6ED9               	movwf	fsr2l,c
  9451   004A72  6ADA               	clrf	fsr2h,c
  9452   004A74  2ADE               	incf	postinc2,f,c
  9453   004A76  0E00               	movlw	0
  9454   004A78  22DD               	addwfc	postdec2,f,c
  9455   004A7A                     l7426:
  9456                           
  9457                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1165:         while ((c = ((unsigne
      +                          d)(*fmt)[0]) - '0') < 10) {
  9458   004A7A  500C               	movf	read_prec_or_width@fmt^0,w,c
  9459   004A7C  6ED9               	movwf	fsr2l,c
  9460   004A7E  6ADA               	clrf	fsr2h,c
  9461   004A80  CFDE FFF6          	movff	postinc2,tblptrl
  9462   004A84  CFDD FFF7          	movff	postdec2,tblptrh
  9463   004A88                     	if	0	;tblptru may be non-zero
  9464   004A88                     	endif
  9465   004A88                     	if	0	;tblptru may be non-zero
  9466   004A88                     	endif
  9467   004A88  0008               	tblrd		*
  9468   004A8A  50F5               	movf	tablat,w,c
  9469   004A8C  0FD0               	addlw	208
  9470   004A8E  6E0E               	movwf	read_prec_or_width@c^0,c
  9471   004A90  0E09               	movlw	9
  9472   004A92  640E               	cpfsgt	read_prec_or_width@c^0,c
  9473   004A94  EF4E  F025         	goto	u9021
  9474   004A98  EF50  F025         	goto	u9020
  9475   004A9C                     u9021:
  9476   004A9C  EF27  F025         	goto	l7422
  9477   004AA0                     u9020:
  9478   004AA0                     l1529:
  9479                           
  9480                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1170:     return n;
  9481   004AA0  C00F  F00C         	movff	read_prec_or_width@n,?_read_prec_or_width
  9482   004AA4  C010  F00D         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  9483   004AA8  0012               	return		;funcret
  9484   004AAA                     __end_of_read_prec_or_width:
  9485                           	callstack 0
  9486                           
  9487 ;; *************** function ___wmul *****************
  9488 ;; Defined at:
  9489 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul16.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;  multiplier      2    5[COMRAM] unsigned int 
  9492 ;;  multiplicand    2    7[COMRAM] unsigned int 
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;  product         2    9[COMRAM] unsigned int 
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  2    5[COMRAM] unsigned int 
  9497 ;; Registers used:
  9498 ;;		wreg, status,2, status,0, prodl, prodh
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9507 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9508 ;;Total ram usage:        6 bytes
  9509 ;; Hardware stack levels used: 1
  9510 ;; Hardware stack levels required when called: 1
  9511 ;; This function calls:
  9512 ;;		Nothing
  9513 ;; This function is called by:
  9514 ;;		_read_prec_or_width
  9515 ;; This function uses a non-reentrant model
  9516 ;;
  9517                           
  9518                           	psect	text35
  9519   0051C0                     __ptext35:
  9520                           	callstack 0
  9521   0051C0                     ___wmul:
  9522                           	callstack 24
  9523   0051C0  5006               	movf	___wmul@multiplier^0,w,c
  9524   0051C2  0208               	mulwf	___wmul@multiplicand^0,c
  9525   0051C4  CFF3 F00A          	movff	prodl,___wmul@product
  9526   0051C8  CFF4 F00B          	movff	prodh,___wmul@product+1
  9527   0051CC  5006               	movf	___wmul@multiplier^0,w,c
  9528   0051CE  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  9529   0051D0  50F3               	movf	243,w,c
  9530   0051D2  260B               	addwf	(___wmul@product+1)^0,f,c
  9531   0051D4  5007               	movf	(___wmul@multiplier+1)^0,w,c
  9532   0051D6  0208               	mulwf	___wmul@multiplicand^0,c
  9533   0051D8  50F3               	movf	243,w,c
  9534   0051DA  260B               	addwf	(___wmul@product+1)^0,f,c
  9535   0051DC  C00A  F006         	movff	___wmul@product,?___wmul
  9536   0051E0  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  9537   0051E4  0012               	return		;funcret
  9538   0051E6                     __end_of___wmul:
  9539                           	callstack 0
  9540                           
  9541 ;; *************** function _efgtoa *****************
  9542 ;; Defined at:
  9543 ;;		line 587 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  9546 ;;		 -> NULL(0), sprintf@f(12), 
  9547 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  9548 ;;  c               1   42[BANK0 ] unsigned char 
  9549 ;; Auto vars:     Size  Location     Type
  9550 ;;  u               4   85[BANK0 ] struct flui
  9551 ;;  g               4   79[BANK0 ] struct flui
  9552 ;;  l               4   74[BANK0 ] struct flui
  9553 ;;  h               4   70[BANK0 ] struct flui
  9554 ;;  ou              4   64[BANK0 ] struct flui
  9555 ;;  n               2   83[BANK0 ] int 
  9556 ;;  i               2   68[BANK0 ] int 
  9557 ;;  w               2   62[BANK0 ] int 
  9558 ;;  e               2   60[BANK0 ] int 
  9559 ;;  m               2   58[BANK0 ] int 
  9560 ;;  d               2   56[BANK0 ] int 
  9561 ;;  t               2   49[BANK0 ] int 
  9562 ;;  p               2   47[BANK0 ] int 
  9563 ;;  ne              2   45[BANK0 ] int 
  9564 ;;  sign            1   78[BANK0 ] unsigned char 
  9565 ;;  nmode           1   55[BANK0 ] unsigned char 
  9566 ;;  mode            1   54[BANK0 ] unsigned char 
  9567 ;;  pp              1   53[BANK0 ] unsigned char 
  9568 ;;  esign           1    0        unsigned char 
  9569 ;; Return value:  Size  Location     Type
  9570 ;;                  1    wreg      void 
  9571 ;; Registers used:
  9572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9573 ;; Tracked objects:
  9574 ;;		On entry : 0/0
  9575 ;;		On exit  : 0/0
  9576 ;;		Unchanged: 0/0
  9577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9578 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9579 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9580 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9581 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9582 ;;Total ram usage:       53 bytes
  9583 ;; Hardware stack levels used: 1
  9584 ;; Hardware stack levels required when called: 5
  9585 ;; This function calls:
  9586 ;;		___fladd
  9587 ;;		___fldiv
  9588 ;;		___fleq
  9589 ;;		___flge
  9590 ;;		___flmul
  9591 ;;		___flneg
  9592 ;;		___flsub
  9593 ;;		___fltol
  9594 ;;		___fpclassifyf
  9595 ;;		_floorf
  9596 ;;		_labs
  9597 ;;		_memcpy
  9598 ;;		_pad
  9599 ;;		_strcpy
  9600 ;; This function is called by:
  9601 ;;		_vfpfcnvrt
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605                           	psect	text36
  9606   000152                     __ptext36:
  9607                           	callstack 0
  9608   000152                     _efgtoa:
  9609                           	callstack 21
  9610   000152                     
  9611                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 587: static void efgtoa(FILE *fp, l
      +                          ong double f, char c);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 588: {;D:\MPLA
      +                          BX\Compiler\pic\sources\c99\common\doprnt.c: 589:     char mode, nmode, pp, sign, esign;
      +                          ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, 
      +                          t, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 591:     long double h, l;;D:\
      +                          MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 592:  union flui g, u, ou;
  9612   000152  0E00               	movlw	0
  9613   000154  0100               	movlb	0	; () banked
  9614   000156  6FAE               	movwf	efgtoa@sign& (0+255),b
  9615   000158                     
  9616                           ; BSR set to: 0
  9617                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  9618   000158  C086  F0AF         	movff	efgtoa@f,efgtoa@g
  9619   00015C  C087  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  9620   000160  C088  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  9621   000164  C089  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  9622   000168                     
  9623                           ; BSR set to: 0
  9624                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 597:     if (g.f < 0.0) {
  9625   000168  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  9626   00016A  EFBB  F000         	goto	u8540
  9627   00016E  EFB9  F000         	goto	u8541
  9628   000172                     u8541:
  9629   000172  EFCF  F000         	goto	l7136
  9630   000176                     u8540:
  9631   000176                     
  9632                           ; BSR set to: 0
  9633                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 598:         sign = 1;
  9634   000176  0E01               	movlw	1
  9635   000178  6FAE               	movwf	efgtoa@sign& (0+255),b
  9636   00017A                     
  9637                           ; BSR set to: 0
  9638                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 599:         g.f = -g.f;
  9639   00017A  C0AF  F080         	movff	efgtoa@g,___flneg@f1
  9640   00017E  C0B0  F081         	movff	efgtoa@g+1,___flneg@f1+1
  9641   000182  C0B1  F082         	movff	efgtoa@g+2,___flneg@f1+2
  9642   000186  C0B2  F083         	movff	efgtoa@g+3,___flneg@f1+3
  9643   00018A  EC29  F028         	call	___flneg	;wreg free
  9644   00018E  C080  F0AF         	movff	?___flneg,efgtoa@g
  9645   000192  C081  F0B0         	movff	?___flneg+1,efgtoa@g+1
  9646   000196  C082  F0B1         	movff	?___flneg+2,efgtoa@g+2
  9647   00019A  C083  F0B2         	movff	?___flneg+3,efgtoa@g+3
  9648   00019E                     l7136:
  9649                           
  9650                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  9651   00019E  0E00               	movlw	0
  9652   0001A0  0100               	movlb	0	; () banked
  9653   0001A2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9654   0001A4  0E00               	movlw	0
  9655   0001A6  6FB3               	movwf	efgtoa@n& (0+255),b
  9656   0001A8                     
  9657                           ; BSR set to: 0
  9658                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 604:     w = width;
  9659   0001A8  C055  F09E         	movff	_width,efgtoa@w
  9660   0001AC  C056  F09F         	movff	_width+1,efgtoa@w+1
  9661   0001B0                     
  9662                           ; BSR set to: 0
  9663                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 605:     if (sign
  9664   0001B0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9665   0001B2  B4D8               	btfsc	status,2,c
  9666   0001B4  EFDE  F000         	goto	u8551
  9667   0001B8  EFE0  F000         	goto	u8550
  9668   0001BC                     u8551:
  9669   0001BC  EFF4  F000         	goto	l7150
  9670   0001C0                     u8550:
  9671   0001C0                     
  9672                           ; BSR set to: 0
  9673                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 609:    ) {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 610:   sign = sign ? '-' : '+';
  9674   0001C0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9675   0001C2  A4D8               	btfss	status,2,c
  9676   0001C4  EFE6  F000         	goto	u8561
  9677   0001C8  EFE8  F000         	goto	u8560
  9678   0001CC                     u8561:
  9679   0001CC  EFEE  F000         	goto	l7146
  9680   0001D0                     u8560:
  9681   0001D0                     
  9682                           ; BSR set to: 0
  9683   0001D0  0E00               	movlw	0
  9684   0001D2  6F94               	movwf	(_efgtoa$4068+1)& (0+255),b
  9685   0001D4  0E2B               	movlw	43
  9686   0001D6  6F93               	movwf	_efgtoa$4068& (0+255),b
  9687   0001D8  EFF2  F000         	goto	l7148
  9688   0001DC                     l7146:
  9689                           
  9690                           ; BSR set to: 0
  9691   0001DC  0E00               	movlw	0
  9692   0001DE  6F94               	movwf	(_efgtoa$4068+1)& (0+255),b
  9693   0001E0  0E2D               	movlw	45
  9694   0001E2  6F93               	movwf	_efgtoa$4068& (0+255),b
  9695   0001E4                     l7148:
  9696                           
  9697                           ; BSR set to: 0
  9698   0001E4  C093  F0AE         	movff	_efgtoa$4068,efgtoa@sign
  9699   0001E8                     l7150:
  9700                           
  9701                           ; BSR set to: 0
  9702                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 619:     if (( __fpclassifyf(g.f) =
      +                          = 1 )) {
  9703   0001E8  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  9704   0001EC  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9705   0001F0  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9706   0001F4  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9707   0001F8  EC22  F022         	call	___fpclassifyf	;wreg free
  9708   0001FC  0406               	decf	?___fpclassifyf^0,w,c
  9709   0001FE  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9710   000200  A4D8               	btfss	status,2,c
  9711   000202  EF05  F001         	goto	u8571
  9712   000206  EF07  F001         	goto	u8570
  9713   00020A                     u8571:
  9714   00020A  EF3A  F001         	goto	l7168
  9715   00020E                     u8570:
  9716   00020E                     
  9717                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 620:   if (sign) {
  9718   00020E  0100               	movlb	0	; () banked
  9719   000210  51AE               	movf	efgtoa@sign& (0+255),w,b
  9720   000212  B4D8               	btfsc	status,2,c
  9721   000214  EF0E  F001         	goto	u8581
  9722   000218  EF10  F001         	goto	u8580
  9723   00021C                     u8581:
  9724   00021C  EF19  F001         	goto	l7160
  9725   000220                     u8580:
  9726   000220                     
  9727                           ; BSR set to: 0
  9728                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] = sign;
  9729   000220  C0AE  F127         	movff	efgtoa@sign,_dbuf
  9730   000224                     
  9731                           ; BSR set to: 0
  9732                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 622:    w--;
  9733   000224  079E               	decf	efgtoa@w& (0+255),f,b
  9734   000226  A0D8               	btfss	status,0,c
  9735   000228  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9736   00022A                     
  9737                           ; BSR set to: 0
  9738                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  9739   00022A  0E00               	movlw	0
  9740   00022C  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9741   00022E  0E01               	movlw	1
  9742   000230  6FB3               	movwf	efgtoa@n& (0+255),b
  9743   000232                     l7160:
  9744                           
  9745                           ; BSR set to: 0
  9746                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 631:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 632:             strcpy(&dbuf[n], "inf");
  9747   000232  0E27               	movlw	low _dbuf
  9748   000234  25B3               	addwf	efgtoa@n& (0+255),w,b
  9749   000236  6E06               	movwf	strcpy@dest^0,c
  9750   000238  0E01               	movlw	high _dbuf
  9751   00023A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9752   00023C  6E07               	movwf	(strcpy@dest+1)^0,c
  9753   00023E  0EEB               	movlw	low STR_34
  9754   000240  6E08               	movwf	strcpy@src^0,c
  9755   000242  0EFF               	movlw	high STR_34
  9756   000244  6E09               	movwf	(strcpy@src+1)^0,c
  9757   000246  EC46  F028         	call	_strcpy	;wreg free
  9758   00024A                     l7162:
  9759                           
  9760                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 633:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9761   00024A  0100               	movlb	0	; () banked
  9762   00024C  0EFD               	movlw	253
  9763   00024E  279E               	addwf	efgtoa@w& (0+255),f,b
  9764   000250  0EFF               	movlw	255
  9765   000252  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  9766   000254                     
  9767                           ; BSR set to: 0
  9768                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 635:         return (void) pad(fp, 
      +                          &dbuf[0], w);
  9769   000254  C084  F017         	movff	efgtoa@fp,pad@fp
  9770   000258  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  9771   00025C  0E27               	movlw	low _dbuf
  9772   00025E  6E19               	movwf	pad@buf^0,c
  9773   000260  0E01               	movlw	high _dbuf
  9774   000262  6E1A               	movwf	(pad@buf+1)^0,c
  9775   000264  C09E  F01B         	movff	efgtoa@w,pad@p
  9776   000268  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  9777   00026C  ECAA  F025         	call	_pad	;wreg free
  9778   000270  EFA5  F005         	goto	l1452
  9779   000274                     l7168:
  9780                           
  9781                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 637:     if (( __fpclassifyf(g.f) =
      +                          = 0 )) {
  9782   000274  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  9783   000278  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9784   00027C  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9785   000280  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9786   000284  EC22  F022         	call	___fpclassifyf	;wreg free
  9787   000288  5006               	movf	?___fpclassifyf^0,w,c
  9788   00028A  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9789   00028C  A4D8               	btfss	status,2,c
  9790   00028E  EF4B  F001         	goto	u8591
  9791   000292  EF4D  F001         	goto	u8590
  9792   000296                     u8591:
  9793   000296  EF6D  F001         	goto	l7186
  9794   00029A                     u8590:
  9795   00029A                     
  9796                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 638:   if (sign) {
  9797   00029A  0100               	movlb	0	; () banked
  9798   00029C  51AE               	movf	efgtoa@sign& (0+255),w,b
  9799   00029E  B4D8               	btfsc	status,2,c
  9800   0002A0  EF54  F001         	goto	u8601
  9801   0002A4  EF56  F001         	goto	u8600
  9802   0002A8                     u8601:
  9803   0002A8  EF5F  F001         	goto	l7178
  9804   0002AC                     u8600:
  9805   0002AC                     
  9806                           ; BSR set to: 0
  9807                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] = sign;
  9808   0002AC  C0AE  F127         	movff	efgtoa@sign,_dbuf
  9809   0002B0                     
  9810                           ; BSR set to: 0
  9811                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 640:    w--;
  9812   0002B0  079E               	decf	efgtoa@w& (0+255),f,b
  9813   0002B2  A0D8               	btfss	status,0,c
  9814   0002B4  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9815   0002B6                     
  9816                           ; BSR set to: 0
  9817                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  9818   0002B6  0E00               	movlw	0
  9819   0002B8  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9820   0002BA  0E01               	movlw	1
  9821   0002BC  6FB3               	movwf	efgtoa@n& (0+255),b
  9822   0002BE                     l7178:
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 649:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 650:             strcpy(&dbuf[n], "nan");
  9826   0002BE  0E27               	movlw	low _dbuf
  9827   0002C0  25B3               	addwf	efgtoa@n& (0+255),w,b
  9828   0002C2  6E06               	movwf	strcpy@dest^0,c
  9829   0002C4  0E01               	movlw	high _dbuf
  9830   0002C6  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9831   0002C8  6E07               	movwf	(strcpy@dest+1)^0,c
  9832   0002CA  0EEF               	movlw	low STR_37
  9833   0002CC  6E08               	movwf	strcpy@src^0,c
  9834   0002CE  0EFF               	movlw	high STR_37
  9835   0002D0  6E09               	movwf	(strcpy@src+1)^0,c
  9836   0002D2  EC46  F028         	call	_strcpy	;wreg free
  9837   0002D6  EF25  F001         	goto	l7162
  9838   0002DA                     l7186:
  9839                           
  9840                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.0;
  9841   0002DA  0E00               	movlw	0
  9842   0002DC  0100               	movlb	0	; () banked
  9843   0002DE  6FB5               	movwf	efgtoa@u& (0+255),b
  9844   0002E0  0E00               	movlw	0
  9845   0002E2  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  9846   0002E4  0E80               	movlw	128
  9847   0002E6  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  9848   0002E8  0E3F               	movlw	63
  9849   0002EA  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  9850                           
  9851                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  9852   0002EC  0E00               	movlw	0
  9853   0002EE  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  9854   0002F0  0E00               	movlw	0
  9855   0002F2  6F9C               	movwf	efgtoa@e& (0+255),b
  9856   0002F4                     
  9857                           ; BSR set to: 0
  9858                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f == 0.0)) {
  9859   0002F4  C0AF  F006         	movff	efgtoa@g,___fleq@ff1
  9860   0002F8  C0B0  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  9861   0002FC  C0B1  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  9862   000300  C0B2  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  9863   000304  0E00               	movlw	0
  9864   000306  6E0A               	movwf	___fleq@ff2^0,c
  9865   000308  0E00               	movlw	0
  9866   00030A  6E0B               	movwf	(___fleq@ff2+1)^0,c
  9867   00030C  0E00               	movlw	0
  9868   00030E  6E0C               	movwf	(___fleq@ff2+2)^0,c
  9869   000310  0E00               	movlw	0
  9870   000312  6E0D               	movwf	(___fleq@ff2+3)^0,c
  9871   000314  EC55  F025         	call	___fleq	;wreg free
  9872   000318  B0D8               	btfsc	status,0,c
  9873   00031A  EF91  F001         	goto	u8611
  9874   00031E  EF93  F001         	goto	u8610
  9875   000322                     u8611:
  9876   000322  EF72  F002         	goto	l1455
  9877   000326                     u8610:
  9878   000326  EFA0  F001         	goto	l7194
  9879   00032A                     l1457:
  9880                           
  9881                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  9882   00032A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  9883   00032E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  9884   000332  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  9885   000336  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  9886   00033A                     
  9887                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 662:    ++e;
  9888   00033A  0100               	movlb	0	; () banked
  9889   00033C  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  9890   00033E  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  9891   000340                     l7194:
  9892                           
  9893                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 660:   while ((labs((g).u-((ou.f = 
      +                          u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  9894   000340  C0B5  F014         	movff	efgtoa@u,___flmul@b
  9895   000344  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  9896   000348  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  9897   00034C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  9898   000350  0E00               	movlw	0
  9899   000352  6E18               	movwf	___flmul@a^0,c
  9900   000354  0E00               	movlw	0
  9901   000356  6E19               	movwf	(___flmul@a+1)^0,c
  9902   000358  0E20               	movlw	32
  9903   00035A  6E1A               	movwf	(___flmul@a+2)^0,c
  9904   00035C  0E41               	movlw	65
  9905   00035E  6E1B               	movwf	(___flmul@a+3)^0,c
  9906   000360  EC3A  F00D         	call	___flmul	;wreg free
  9907   000364  C014  F0A0         	movff	?___flmul,efgtoa@ou
  9908   000368  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
  9909   00036C  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
  9910   000370  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
  9911   000374  0100               	movlb	0	; () banked
  9912   000376  51A0               	movf	efgtoa@ou& (0+255),w,b
  9913   000378  5DAF               	subwf	efgtoa@g& (0+255),w,b
  9914   00037A  6E06               	movwf	labs@a^0,c
  9915   00037C  51A1               	movf	(efgtoa@ou+1)& (0+255),w,b
  9916   00037E  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  9917   000380  6E07               	movwf	(labs@a+1)^0,c
  9918   000382  51A2               	movf	(efgtoa@ou+2)& (0+255),w,b
  9919   000384  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  9920   000386  6E08               	movwf	(labs@a+2)^0,c
  9921   000388  51A3               	movf	(efgtoa@ou+3)& (0+255),w,b
  9922   00038A  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  9923   00038C  6E09               	movwf	(labs@a+3)^0,c
  9924   00038E  ECFF  F026         	call	_labs	;wreg free
  9925   000392  BE09               	btfsc	(?_labs+3)^0,7,c
  9926   000394  EFD7  F001         	goto	u8621
  9927   000398  5009               	movf	(?_labs+3)^0,w,c
  9928   00039A  1008               	iorwf	(?_labs+2)^0,w,c
  9929   00039C  1007               	iorwf	(?_labs+1)^0,w,c
  9930   00039E  E109               	bnz	u8620
  9931   0003A0  0E02               	movlw	2
  9932   0003A2  5C06               	subwf	?_labs^0,w,c
  9933   0003A4  A0D8               	btfss	status,0,c
  9934   0003A6  EFD7  F001         	goto	u8621
  9935   0003AA  EFD9  F001         	goto	u8620
  9936   0003AE                     u8621:
  9937   0003AE  EF95  F001         	goto	l1457
  9938   0003B2                     u8620:
  9939   0003B2  C0A0  F02D         	movff	efgtoa@ou,___flge@ff1
  9940   0003B6  C0A1  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
  9941   0003BA  C0A2  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
  9942   0003BE  C0A3  F030         	movff	efgtoa@ou+3,___flge@ff1+3
  9943   0003C2  C0AF  F031         	movff	efgtoa@g,___flge@ff2
  9944   0003C6  C0B0  F032         	movff	efgtoa@g+1,___flge@ff2+1
  9945   0003CA  C0B1  F033         	movff	efgtoa@g+2,___flge@ff2+2
  9946   0003CE  C0B2  F034         	movff	efgtoa@g+3,___flge@ff2+3
  9947   0003D2  ECA0  F021         	call	___flge	;wreg free
  9948   0003D6  A0D8               	btfss	status,0,c
  9949   0003D8  EFF0  F001         	goto	u8631
  9950   0003DC  EFF2  F001         	goto	u8630
  9951   0003E0                     u8631:
  9952   0003E0  EF95  F001         	goto	l1457
  9953   0003E4                     u8630:
  9954   0003E4                     
  9955                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 664:   if ((labs((g).u-(u).u) <= 1)
      +                          ) {
  9956   0003E4  0100               	movlb	0	; () banked
  9957   0003E6  51B5               	movf	efgtoa@u& (0+255),w,b
  9958   0003E8  5DAF               	subwf	efgtoa@g& (0+255),w,b
  9959   0003EA  6E06               	movwf	labs@a^0,c
  9960   0003EC  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  9961   0003EE  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  9962   0003F0  6E07               	movwf	(labs@a+1)^0,c
  9963   0003F2  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  9964   0003F4  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  9965   0003F6  6E08               	movwf	(labs@a+2)^0,c
  9966   0003F8  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  9967   0003FA  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  9968   0003FC  6E09               	movwf	(labs@a+3)^0,c
  9969   0003FE  ECFF  F026         	call	_labs	;wreg free
  9970   000402  BE09               	btfsc	(?_labs+3)^0,7,c
  9971   000404  EF11  F002         	goto	u8640
  9972   000408  5009               	movf	(?_labs+3)^0,w,c
  9973   00040A  1008               	iorwf	(?_labs+2)^0,w,c
  9974   00040C  1007               	iorwf	(?_labs+1)^0,w,c
  9975   00040E  E107               	bnz	u8641
  9976   000410  0E02               	movlw	2
  9977   000412  5C06               	subwf	?_labs^0,w,c
  9978   000414  B0D8               	btfsc	status,0,c
  9979   000416  EF0F  F002         	goto	u8641
  9980   00041A  EF11  F002         	goto	u8640
  9981   00041E                     u8641:
  9982   00041E  EF59  F002         	goto	l7212
  9983   000422                     u8640:
  9984   000422                     l7202:
  9985                           
  9986                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 665:    g = u;
  9987   000422  C0B5  F0AF         	movff	efgtoa@u,efgtoa@g
  9988   000426  C0B6  F0B0         	movff	efgtoa@u+1,efgtoa@g+1
  9989   00042A  C0B7  F0B1         	movff	efgtoa@u+2,efgtoa@g+2
  9990   00042E  C0B8  F0B2         	movff	efgtoa@u+3,efgtoa@g+3
  9991                           
  9992                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 666:   }
  9993   000432  EF72  F002         	goto	l1455
  9994   000436                     l7204:
  9995                           
  9996                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 669:     u.f = u.f/10.0;
  9997   000436  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  9998   00043A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  9999   00043E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10000   000442  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10001   000446  0E00               	movlw	0
 10002   000448  6E31               	movwf	___fldiv@a^0,c
 10003   00044A  0E00               	movlw	0
 10004   00044C  6E32               	movwf	(___fldiv@a+1)^0,c
 10005   00044E  0E20               	movlw	32
 10006   000450  6E33               	movwf	(___fldiv@a+2)^0,c
 10007   000452  0E41               	movlw	65
 10008   000454  6E34               	movwf	(___fldiv@a+3)^0,c
 10009   000456  EC2A  F013         	call	___fldiv	;wreg free
 10010   00045A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10011   00045E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10012   000462  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10013   000466  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10014   00046A                     
 10015                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 670:     --e;
 10016   00046A  0100               	movlb	0	; () banked
 10017   00046C  079C               	decf	efgtoa@e& (0+255),f,b
 10018   00046E  A0D8               	btfss	status,0,c
 10019   000470  079D               	decf	(efgtoa@e+1)& (0+255),f,b
 10020   000472                     
 10021                           ; BSR set to: 0
 10022                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 671:     if ((labs((g).u-(u).u) <= 
      +                          1)) {
 10023   000472  51B5               	movf	efgtoa@u& (0+255),w,b
 10024   000474  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10025   000476  6E06               	movwf	labs@a^0,c
 10026   000478  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
 10027   00047A  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10028   00047C  6E07               	movwf	(labs@a+1)^0,c
 10029   00047E  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
 10030   000480  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10031   000482  6E08               	movwf	(labs@a+2)^0,c
 10032   000484  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
 10033   000486  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10034   000488  6E09               	movwf	(labs@a+3)^0,c
 10035   00048A  ECFF  F026         	call	_labs	;wreg free
 10036   00048E  BE09               	btfsc	(?_labs+3)^0,7,c
 10037   000490  EF57  F002         	goto	u8650
 10038   000494  5009               	movf	(?_labs+3)^0,w,c
 10039   000496  1008               	iorwf	(?_labs+2)^0,w,c
 10040   000498  1007               	iorwf	(?_labs+1)^0,w,c
 10041   00049A  E107               	bnz	u8651
 10042   00049C  0E02               	movlw	2
 10043   00049E  5C06               	subwf	?_labs^0,w,c
 10044   0004A0  B0D8               	btfsc	status,0,c
 10045   0004A2  EF55  F002         	goto	u8651
 10046   0004A6  EF57  F002         	goto	u8650
 10047   0004AA                     u8651:
 10048   0004AA  EF59  F002         	goto	l7212
 10049   0004AE                     u8650:
 10050   0004AE  EF11  F002         	goto	l7202
 10051   0004B2                     l7212:
 10052                           
 10053                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 668:    while (g.f < u.f) {
 10054   0004B2  C0AF  F02D         	movff	efgtoa@g,___flge@ff1
 10055   0004B6  C0B0  F02E         	movff	efgtoa@g+1,___flge@ff1+1
 10056   0004BA  C0B1  F02F         	movff	efgtoa@g+2,___flge@ff1+2
 10057   0004BE  C0B2  F030         	movff	efgtoa@g+3,___flge@ff1+3
 10058   0004C2  C0B5  F031         	movff	efgtoa@u,___flge@ff2
 10059   0004C6  C0B6  F032         	movff	efgtoa@u+1,___flge@ff2+1
 10060   0004CA  C0B7  F033         	movff	efgtoa@u+2,___flge@ff2+2
 10061   0004CE  C0B8  F034         	movff	efgtoa@u+3,___flge@ff2+3
 10062   0004D2  ECA0  F021         	call	___flge	;wreg free
 10063   0004D6  A0D8               	btfss	status,0,c
 10064   0004D8  EF70  F002         	goto	u8661
 10065   0004DC  EF72  F002         	goto	u8660
 10066   0004E0                     u8661:
 10067   0004E0  EF1B  F002         	goto	l7204
 10068   0004E4                     u8660:
 10069   0004E4                     l1455:
 10070                           
 10071                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 10072   0004E4  C08A  F096         	movff	efgtoa@c,efgtoa@mode
 10073                           
 10074                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 685:     nmode = mode;
 10075   0004E8  C096  F097         	movff	efgtoa@mode,efgtoa@nmode
 10076   0004EC                     
 10077                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 695:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
 10078   0004EC  BE58               	btfsc	(_prec+1)^0,7,c
 10079   0004EE  EF7B  F002         	goto	u8671
 10080   0004F2  EF7D  F002         	goto	u8670
 10081   0004F6                     u8671:
 10082   0004F6  EF83  F002         	goto	l7218
 10083   0004FA                     u8670:
 10084   0004FA  C057  F08F         	movff	_prec,efgtoa@p
 10085   0004FE  C058  F090         	movff	_prec+1,efgtoa@p+1
 10086   000502  EF88  F002         	goto	l7220
 10087   000506                     l7218:
 10088   000506  0E00               	movlw	0
 10089   000508  0100               	movlb	0	; () banked
 10090   00050A  6F90               	movwf	(efgtoa@p+1)& (0+255),b
 10091   00050C  0E06               	movlw	6
 10092   00050E  6F8F               	movwf	efgtoa@p& (0+255),b
 10093   000510                     l7220:
 10094                           
 10095                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 697:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 711:     m = p;
 10096   000510  C08F  F09A         	movff	efgtoa@p,efgtoa@m
 10097   000514  C090  F09B         	movff	efgtoa@p+1,efgtoa@m+1
 10098   000518                     
 10099                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 715:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 716:         ++m;
 10100   000518  0100               	movlb	0	; () banked
 10101   00051A  4B9A               	infsnz	efgtoa@m& (0+255),f,b
 10102   00051C  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
 10103   00051E                     
 10104                           ; BSR set to: 0
 10105                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 717:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 721:     if (nmode == 'f') {
 10106   00051E  0E66               	movlw	102
 10107   000520  1997               	xorwf	efgtoa@nmode& (0+255),w,b
 10108   000522  A4D8               	btfss	status,2,c
 10109   000524  EF96  F002         	goto	u8681
 10110   000528  EF98  F002         	goto	u8680
 10111   00052C                     u8681:
 10112   00052C  EFB8  F002         	goto	l7234
 10113   000530                     u8680:
 10114   000530                     
 10115                           ; BSR set to: 0
 10116                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 722:         if (e < 0) {
 10117   000530  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10118   000532  EF9F  F002         	goto	u8690
 10119   000536  EF9D  F002         	goto	u8691
 10120   00053A                     u8691:
 10121   00053A  EFAB  F002         	goto	l7230
 10122   00053E                     u8690:
 10123   00053E                     
 10124                           ; BSR set to: 0
 10125                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 723:             u.f = 1.0;
 10126   00053E  0E00               	movlw	0
 10127   000540  6FB5               	movwf	efgtoa@u& (0+255),b
 10128   000542  0E00               	movlw	0
 10129   000544  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
 10130   000546  0E80               	movlw	128
 10131   000548  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
 10132   00054A  0E3F               	movlw	63
 10133   00054C  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
 10134                           
 10135                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 724:             e = 0;
 10136   00054E  0E00               	movlw	0
 10137   000550  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
 10138   000552  0E00               	movlw	0
 10139   000554  6F9C               	movwf	efgtoa@e& (0+255),b
 10140   000556                     l7230:
 10141                           
 10142                           ; BSR set to: 0
 10143                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 726:         if (!(mode == 'g')) {
 10144   000556  0E67               	movlw	103
 10145   000558  1996               	xorwf	efgtoa@mode& (0+255),w,b
 10146   00055A  B4D8               	btfsc	status,2,c
 10147   00055C  EFB2  F002         	goto	u8701
 10148   000560  EFB4  F002         	goto	u8700
 10149   000564                     u8701:
 10150   000564  EFB8  F002         	goto	l7234
 10151   000568                     u8700:
 10152   000568                     
 10153                           ; BSR set to: 0
 10154                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 727:             m += e;
 10155   000568  519C               	movf	efgtoa@e& (0+255),w,b
 10156   00056A  279A               	addwf	efgtoa@m& (0+255),f,b
 10157   00056C  519D               	movf	(efgtoa@e+1)& (0+255),w,b
 10158   00056E  239B               	addwfc	(efgtoa@m+1)& (0+255),f,b
 10159   000570                     l7234:
 10160                           
 10161                           ; BSR set to: 0
 10162                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 10163   000570  0E00               	movlw	0
 10164   000572  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10165   000574  0E00               	movlw	0
 10166   000576  6FA4               	movwf	efgtoa@i& (0+255),b
 10167   000578                     
 10168                           ; BSR set to: 0
 10169                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 10170   000578  C0AF  F0A6         	movff	efgtoa@g,efgtoa@h
 10171   00057C  C0B0  F0A7         	movff	efgtoa@g+1,efgtoa@h+1
 10172   000580  C0B1  F0A8         	movff	efgtoa@g+2,efgtoa@h+2
 10173   000584  C0B2  F0A9         	movff	efgtoa@g+3,efgtoa@h+3
 10174   000588                     
 10175                           ; BSR set to: 0
 10176                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 10177   000588  C0B5  F0A0         	movff	efgtoa@u,efgtoa@ou
 10178   00058C  C0B6  F0A1         	movff	efgtoa@u+1,efgtoa@ou+1
 10179   000590  C0B7  F0A2         	movff	efgtoa@u+2,efgtoa@ou+2
 10180   000594  C0B8  F0A3         	movff	efgtoa@u+3,efgtoa@ou+3
 10181                           
 10182                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
 10183   000598  EF49  F003         	goto	l7248
 10184   00059C                     l7240:
 10185                           
 10186                           ; BSR set to: 0
 10187                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 737:         l = floorf(h/u.f);
 10188   00059C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
 10189   0005A0  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
 10190   0005A4  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
 10191   0005A8  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
 10192   0005AC  C0B5  F031         	movff	efgtoa@u,___fldiv@a
 10193   0005B0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
 10194   0005B4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
 10195   0005B8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
 10196   0005BC  EC2A  F013         	call	___fldiv	;wreg free
 10197   0005C0  C02D  F046         	movff	?___fldiv,floorf@x
 10198   0005C4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
 10199   0005C8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
 10200   0005CC  C030  F049         	movff	?___fldiv+3,floorf@x+3
 10201   0005D0  EC0A  F019         	call	_floorf	;wreg free
 10202   0005D4  C046  F0AA         	movff	?_floorf,efgtoa@l
 10203   0005D8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
 10204   0005DC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
 10205   0005E0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
 10206                           
 10207                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 738:         d = (int)l;
 10208   0005E4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10209   0005E8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10210   0005EC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10211   0005F0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10212   0005F4  EC1C  F021         	call	___fltol	;wreg free
 10213   0005F8  C064  F098         	movff	?___fltol,efgtoa@d
 10214   0005FC  C065  F099         	movff	?___fltol+1,efgtoa@d+1
 10215   000600                     
 10216                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 739:         h -= l*u.f;
 10217   000600  C0A6  F064         	movff	efgtoa@h,___flsub@b
 10218   000604  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
 10219   000608  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
 10220   00060C  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
 10221   000610  C0AA  F018         	movff	efgtoa@l,___flmul@a
 10222   000614  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
 10223   000618  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
 10224   00061C  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
 10225   000620  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10226   000624  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10227   000628  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10228   00062C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10229   000630  EC3A  F00D         	call	___flmul	;wreg free
 10230   000634  C014  F068         	movff	?___flmul,___flsub@a
 10231   000638  C015  F069         	movff	?___flmul+1,___flsub@a+1
 10232   00063C  C016  F06A         	movff	?___flmul+2,___flsub@a+2
 10233   000640  C017  F06B         	movff	?___flmul+3,___flsub@a+3
 10234   000644  ECA1  F027         	call	___flsub	;wreg free
 10235   000648  C064  F0A6         	movff	?___flsub,efgtoa@h
 10236   00064C  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
 10237   000650  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
 10238   000654  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
 10239   000658                     
 10240                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 740:         u.f = u.f/10.0;
 10241   000658  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10242   00065C  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10243   000660  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10244   000664  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10245   000668  0E00               	movlw	0
 10246   00066A  6E31               	movwf	___fldiv@a^0,c
 10247   00066C  0E00               	movlw	0
 10248   00066E  6E32               	movwf	(___fldiv@a+1)^0,c
 10249   000670  0E20               	movlw	32
 10250   000672  6E33               	movwf	(___fldiv@a+2)^0,c
 10251   000674  0E41               	movlw	65
 10252   000676  6E34               	movwf	(___fldiv@a+3)^0,c
 10253   000678  EC2A  F013         	call	___fldiv	;wreg free
 10254   00067C  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10255   000680  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10256   000684  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10257   000688  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10258   00068C                     
 10259                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 741:         ++i;
 10260   00068C  0100               	movlb	0	; () banked
 10261   00068E  4BA4               	infsnz	efgtoa@i& (0+255),f,b
 10262   000690  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
 10263   000692                     l7248:
 10264                           
 10265                           ; BSR set to: 0
 10266                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
 10267   000692  519A               	movf	efgtoa@m& (0+255),w,b
 10268   000694  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10269   000696  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10270   000698  0A80               	xorlw	128
 10271   00069A  6F8B               	movwf	??_efgtoa& (0+255),b
 10272   00069C  519B               	movf	(efgtoa@m+1)& (0+255),w,b
 10273   00069E  0A80               	xorlw	128
 10274   0006A0  598B               	subwfb	??_efgtoa& (0+255),w,b
 10275   0006A2  A0D8               	btfss	status,0,c
 10276   0006A4  EF56  F003         	goto	u8711
 10277   0006A8  EF58  F003         	goto	u8710
 10278   0006AC                     u8711:
 10279   0006AC  EFCE  F002         	goto	l7240
 10280   0006B0                     u8710:
 10281   0006B0                     
 10282                           ; BSR set to: 0
 10283                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 745:     l = u.f*5.0;
 10284   0006B0  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10285   0006B4  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10286   0006B8  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10287   0006BC  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10288   0006C0  0E00               	movlw	0
 10289   0006C2  6E18               	movwf	___flmul@a^0,c
 10290   0006C4  0E00               	movlw	0
 10291   0006C6  6E19               	movwf	(___flmul@a+1)^0,c
 10292   0006C8  0EA0               	movlw	160
 10293   0006CA  6E1A               	movwf	(___flmul@a+2)^0,c
 10294   0006CC  0E40               	movlw	64
 10295   0006CE  6E1B               	movwf	(___flmul@a+3)^0,c
 10296   0006D0  EC3A  F00D         	call	___flmul	;wreg free
 10297   0006D4  C014  F0AA         	movff	?___flmul,efgtoa@l
 10298   0006D8  C015  F0AB         	movff	?___flmul+1,efgtoa@l+1
 10299   0006DC  C016  F0AC         	movff	?___flmul+2,efgtoa@l+2
 10300   0006E0  C017  F0AD         	movff	?___flmul+3,efgtoa@l+3
 10301   0006E4                     
 10302                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 746:     if (h < l) {
 10303   0006E4  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
 10304   0006E8  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
 10305   0006EC  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
 10306   0006F0  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
 10307   0006F4  C0AA  F031         	movff	efgtoa@l,___flge@ff2
 10308   0006F8  C0AB  F032         	movff	efgtoa@l+1,___flge@ff2+1
 10309   0006FC  C0AC  F033         	movff	efgtoa@l+2,___flge@ff2+2
 10310   000700  C0AD  F034         	movff	efgtoa@l+3,___flge@ff2+3
 10311   000704  ECA0  F021         	call	___flge	;wreg free
 10312   000708  B0D8               	btfsc	status,0,c
 10313   00070A  EF89  F003         	goto	u8721
 10314   00070E  EF8B  F003         	goto	u8720
 10315   000712                     u8721:
 10316   000712  EF96  F003         	goto	l7256
 10317   000716                     u8720:
 10318   000716                     
 10319                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 747:         l = 0.0;
 10320   000716  0E00               	movlw	0
 10321   000718  0100               	movlb	0	; () banked
 10322   00071A  6FAA               	movwf	efgtoa@l& (0+255),b
 10323   00071C  0E00               	movlw	0
 10324   00071E  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
 10325   000720  0E00               	movlw	0
 10326   000722  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
 10327   000724  0E00               	movlw	0
 10328   000726  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10329                           
 10330                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 748:     } else {
 10331   000728  EFBF  F003         	goto	l7262
 10332   00072C                     l7256:
 10333                           
 10334                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 750:         if ((h == l) && !(d % 
      +                          2)) {
 10335   00072C  C0A6  F006         	movff	efgtoa@h,___fleq@ff1
 10336   000730  C0A7  F007         	movff	efgtoa@h+1,___fleq@ff1+1
 10337   000734  C0A8  F008         	movff	efgtoa@h+2,___fleq@ff1+2
 10338   000738  C0A9  F009         	movff	efgtoa@h+3,___fleq@ff1+3
 10339   00073C  C0AA  F00A         	movff	efgtoa@l,___fleq@ff2
 10340   000740  C0AB  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
 10341   000744  C0AC  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
 10342   000748  C0AD  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
 10343   00074C  EC55  F025         	call	___fleq	;wreg free
 10344   000750  A0D8               	btfss	status,0,c
 10345   000752  EFAD  F003         	goto	u8731
 10346   000756  EFAF  F003         	goto	u8730
 10347   00075A                     u8731:
 10348   00075A  EFBF  F003         	goto	l7262
 10349   00075E                     u8730:
 10350   00075E  0100               	movlb	0	; () banked
 10351   000760  B198               	btfsc	efgtoa@d& (0+255),0,b
 10352   000762  EFB5  F003         	goto	u8741
 10353   000766  EFB7  F003         	goto	u8740
 10354   00076A                     u8741:
 10355   00076A  EFBF  F003         	goto	l7262
 10356   00076E                     u8740:
 10357   00076E                     
 10358                           ; BSR set to: 0
 10359                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 751:             l = 0.0;
 10360   00076E  0E00               	movlw	0
 10361   000770  6FAA               	movwf	efgtoa@l& (0+255),b
 10362   000772  0E00               	movlw	0
 10363   000774  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
 10364   000776  0E00               	movlw	0
 10365   000778  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
 10366   00077A  0E00               	movlw	0
 10367   00077C  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10368   00077E                     l7262:
 10369                           
 10370                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 756:     h = g.f + l;
 10371   00077E  C0AF  F046         	movff	efgtoa@g,___fladd@b
 10372   000782  C0B0  F047         	movff	efgtoa@g+1,___fladd@b+1
 10373   000786  C0B1  F048         	movff	efgtoa@g+2,___fladd@b+2
 10374   00078A  C0B2  F049         	movff	efgtoa@g+3,___fladd@b+3
 10375   00078E  C0AA  F04A         	movff	efgtoa@l,___fladd@a
 10376   000792  C0AB  F04B         	movff	efgtoa@l+1,___fladd@a+1
 10377   000796  C0AC  F04C         	movff	efgtoa@l+2,___fladd@a+2
 10378   00079A  C0AD  F04D         	movff	efgtoa@l+3,___fladd@a+3
 10379   00079E  ECD9  F00A         	call	___fladd	;wreg free
 10380   0007A2  C046  F0A6         	movff	?___fladd,efgtoa@h
 10381   0007A6  C047  F0A7         	movff	?___fladd+1,efgtoa@h+1
 10382   0007AA  C048  F0A8         	movff	?___fladd+2,efgtoa@h+2
 10383   0007AE  C049  F0A9         	movff	?___fladd+3,efgtoa@h+3
 10384   0007B2                     
 10385                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 758:  if (h >= (ou.f*10.0)) {
 10386   0007B2  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
 10387   0007B6  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
 10388   0007BA  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
 10389   0007BE  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
 10390   0007C2  0E00               	movlw	0
 10391   0007C4  6E18               	movwf	___flmul@a^0,c
 10392   0007C6  0E00               	movlw	0
 10393   0007C8  6E19               	movwf	(___flmul@a+1)^0,c
 10394   0007CA  0E20               	movlw	32
 10395   0007CC  6E1A               	movwf	(___flmul@a+2)^0,c
 10396   0007CE  0E41               	movlw	65
 10397   0007D0  6E1B               	movwf	(___flmul@a+3)^0,c
 10398   0007D2  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10399   0007D6  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10400   0007DA  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10401   0007DE  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10402   0007E2  EC3A  F00D         	call	___flmul	;wreg free
 10403   0007E6  C014  F031         	movff	?___flmul,___flge@ff2
 10404   0007EA  C015  F032         	movff	?___flmul+1,___flge@ff2+1
 10405   0007EE  C016  F033         	movff	?___flmul+2,___flge@ff2+2
 10406   0007F2  C017  F034         	movff	?___flmul+3,___flge@ff2+3
 10407   0007F6  ECA0  F021         	call	___flge	;wreg free
 10408   0007FA  A0D8               	btfss	status,0,c
 10409   0007FC  EF02  F004         	goto	u8751
 10410   000800  EF04  F004         	goto	u8750
 10411   000804                     u8751:
 10412   000804  EF2D  F004         	goto	l7274
 10413   000808                     u8750:
 10414   000808                     
 10415                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 759:   e++;
 10416   000808  0100               	movlb	0	; () banked
 10417   00080A  4B9C               	infsnz	efgtoa@e& (0+255),f,b
 10418   00080C  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
 10419   00080E                     
 10420                           ; BSR set to: 0
 10421                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10.0;
 10422   00080E  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10423   000812  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10424   000816  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10425   00081A  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10426   00081E  0E00               	movlw	0
 10427   000820  6E18               	movwf	___flmul@a^0,c
 10428   000822  0E00               	movlw	0
 10429   000824  6E19               	movwf	(___flmul@a+1)^0,c
 10430   000826  0E20               	movlw	32
 10431   000828  6E1A               	movwf	(___flmul@a+2)^0,c
 10432   00082A  0E41               	movlw	65
 10433   00082C  6E1B               	movwf	(___flmul@a+3)^0,c
 10434   00082E  EC3A  F00D         	call	___flmul	;wreg free
 10435   000832  C014  F0A0         	movff	?___flmul,efgtoa@ou
 10436   000836  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
 10437   00083A  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
 10438   00083E  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
 10439   000842                     
 10440                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 762:   if (nmode == 'f') {
 10441   000842  0E66               	movlw	102
 10442   000844  0100               	movlb	0	; () banked
 10443   000846  1997               	xorwf	efgtoa@nmode& (0+255),w,b
 10444   000848  A4D8               	btfss	status,2,c
 10445   00084A  EF29  F004         	goto	u8761
 10446   00084E  EF2B  F004         	goto	u8760
 10447   000852                     u8761:
 10448   000852  EF2D  F004         	goto	l7274
 10449   000856                     u8760:
 10450   000856                     
 10451                           ; BSR set to: 0
 10452                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 764:    m++;
 10453   000856  4B9A               	infsnz	efgtoa@m& (0+255),f,b
 10454   000858  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
 10455   00085A                     l7274:
 10456                           
 10457                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 10458   00085A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
 10459   00085E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
 10460   000862  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
 10461   000866  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
 10462   00086A                     
 10463                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 10464   00086A  C09C  F08D         	movff	efgtoa@e,efgtoa@ne
 10465   00086E  C09D  F08E         	movff	efgtoa@e+1,efgtoa@ne+1
 10466   000872                     
 10467                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 10468   000872  0E00               	movlw	0
 10469   000874  0100               	movlb	0	; () banked
 10470   000876  6F95               	movwf	efgtoa@pp& (0+255),b
 10471   000878                     
 10472                           ; BSR set to: 0
 10473                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 10474   000878  0E00               	movlw	0
 10475   00087A  6F92               	movwf	(efgtoa@t+1)& (0+255),b
 10476   00087C  0E00               	movlw	0
 10477   00087E  6F91               	movwf	efgtoa@t& (0+255),b
 10478   000880                     
 10479                           ; BSR set to: 0
 10480                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 10481   000880  0E00               	movlw	0
 10482   000882  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10483   000884  0E00               	movlw	0
 10484   000886  6FA4               	movwf	efgtoa@i& (0+255),b
 10485                           
 10486                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10487   000888  EF2B  F005         	goto	l7324
 10488   00088C                     l7284:
 10489                           
 10490                           ; BSR set to: 0
 10491                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 780:         l = floorf(h/u.f);
 10492   00088C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
 10493   000890  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
 10494   000894  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
 10495   000898  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
 10496   00089C  C0B5  F031         	movff	efgtoa@u,___fldiv@a
 10497   0008A0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
 10498   0008A4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
 10499   0008A8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
 10500   0008AC  EC2A  F013         	call	___fldiv	;wreg free
 10501   0008B0  C02D  F046         	movff	?___fldiv,floorf@x
 10502   0008B4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
 10503   0008B8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
 10504   0008BC  C030  F049         	movff	?___fldiv+3,floorf@x+3
 10505   0008C0  EC0A  F019         	call	_floorf	;wreg free
 10506   0008C4  C046  F0AA         	movff	?_floorf,efgtoa@l
 10507   0008C8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
 10508   0008CC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
 10509   0008D0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
 10510                           
 10511                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 781:         d = (int)l > 9 ? 9 : (
      +                          int)l;
 10512   0008D4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10513   0008D8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10514   0008DC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10515   0008E0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10516   0008E4  EC1C  F021         	call	___fltol	;wreg free
 10517   0008E8  0100               	movlb	0	; () banked
 10518   0008EA  BF65               	btfsc	(?___fltol+1)& (0+255),7,b
 10519   0008EC  EF83  F004         	goto	u8770
 10520   0008F0  5165               	movf	(?___fltol+1)& (0+255),w,b
 10521   0008F2  E107               	bnz	u8771
 10522   0008F4  0E0A               	movlw	10
 10523   0008F6  5D64               	subwf	?___fltol& (0+255),w,b
 10524   0008F8  B0D8               	btfsc	status,0,c
 10525   0008FA  EF81  F004         	goto	u8771
 10526   0008FE  EF83  F004         	goto	u8770
 10527   000902                     u8771:
 10528   000902  EF93  F004         	goto	l7288
 10529   000906                     u8770:
 10530   000906                     
 10531                           ; BSR set to: 0
 10532   000906  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10533   00090A  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10534   00090E  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10535   000912  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10536   000916  EC1C  F021         	call	___fltol	;wreg free
 10537   00091A  C064  F098         	movff	?___fltol,efgtoa@d
 10538   00091E  C065  F099         	movff	?___fltol+1,efgtoa@d+1
 10539   000922  EF97  F004         	goto	l1485
 10540   000926                     l7288:
 10541                           
 10542                           ; BSR set to: 0
 10543   000926  0E00               	movlw	0
 10544   000928  6F99               	movwf	(efgtoa@d+1)& (0+255),b
 10545   00092A  0E09               	movlw	9
 10546   00092C  6F98               	movwf	efgtoa@d& (0+255),b
 10547   00092E                     l1485:
 10548                           
 10549                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 792:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 793:             if (!pp && (ne < 0)) {
 10550   00092E  0100               	movlb	0	; () banked
 10551   000930  5195               	movf	efgtoa@pp& (0+255),w,b
 10552   000932  A4D8               	btfss	status,2,c
 10553   000934  EF9E  F004         	goto	u8781
 10554   000938  EFA0  F004         	goto	u8780
 10555   00093C                     u8781:
 10556   00093C  EFC8  F004         	goto	l7308
 10557   000940                     u8780:
 10558   000940                     
 10559                           ; BSR set to: 0
 10560   000940  BF8E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10561   000942  EFA7  F004         	goto	u8790
 10562   000946  EFA5  F004         	goto	u8791
 10563   00094A                     u8791:
 10564   00094A  EFC8  F004         	goto	l7308
 10565   00094E                     u8790:
 10566   00094E                     
 10567                           ; BSR set to: 0
 10568                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 794:                 dbuf[n++] = '.
      +                          ';
 10569   00094E  0E27               	movlw	low _dbuf
 10570   000950  25B3               	addwf	efgtoa@n& (0+255),w,b
 10571   000952  6ED9               	movwf	fsr2l,c
 10572   000954  0E01               	movlw	high _dbuf
 10573   000956  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10574   000958  6EDA               	movwf	fsr2h,c
 10575   00095A  0E2E               	movlw	46
 10576   00095C  6EDF               	movwf	indf2,c
 10577   00095E                     
 10578                           ; BSR set to: 0
 10579   00095E  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10580   000960  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10581   000962                     
 10582                           ; BSR set to: 0
 10583                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 795:                 --w;
 10584   000962  079E               	decf	efgtoa@w& (0+255),f,b
 10585   000964  A0D8               	btfss	status,0,c
 10586   000966  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10587   000968                     
 10588                           ; BSR set to: 0
 10589                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 796:                 pp = 1;
 10590   000968  0E01               	movlw	1
 10591   00096A  6F95               	movwf	efgtoa@pp& (0+255),b
 10592   00096C  EFC8  F004         	goto	l7308
 10593   000970                     l7300:
 10594                           
 10595                           ; BSR set to: 0
 10596                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 799:                 dbuf[n++] = '0
      +                          ';
 10597   000970  0E27               	movlw	low _dbuf
 10598   000972  25B3               	addwf	efgtoa@n& (0+255),w,b
 10599   000974  6ED9               	movwf	fsr2l,c
 10600   000976  0E01               	movlw	high _dbuf
 10601   000978  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10602   00097A  6EDA               	movwf	fsr2h,c
 10603   00097C  0E30               	movlw	48
 10604   00097E  6EDF               	movwf	indf2,c
 10605   000980                     
 10606                           ; BSR set to: 0
 10607   000980  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10608   000982  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10609   000984                     
 10610                           ; BSR set to: 0
 10611                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 800:                 --w;
 10612   000984  079E               	decf	efgtoa@w& (0+255),f,b
 10613   000986  A0D8               	btfss	status,0,c
 10614   000988  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10615   00098A                     
 10616                           ; BSR set to: 0
 10617                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 801:                 --t;
 10618   00098A  0791               	decf	efgtoa@t& (0+255),f,b
 10619   00098C  A0D8               	btfss	status,0,c
 10620   00098E  0792               	decf	(efgtoa@t+1)& (0+255),f,b
 10621   000990                     l7308:
 10622                           
 10623                           ; BSR set to: 0
 10624                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 798:             while (t) {
 10625   000990  5191               	movf	efgtoa@t& (0+255),w,b
 10626   000992  1192               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10627   000994  A4D8               	btfss	status,2,c
 10628   000996  EFCF  F004         	goto	u8801
 10629   00099A  EFD1  F004         	goto	u8800
 10630   00099E                     u8801:
 10631   00099E  EFB8  F004         	goto	l7300
 10632   0009A2                     u8800:
 10633   0009A2                     
 10634                           ; BSR set to: 0
 10635                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 803:             dbuf[n++] = (char)
      +                          ((int)'0' + d);
 10636   0009A2  0E27               	movlw	low _dbuf
 10637   0009A4  25B3               	addwf	efgtoa@n& (0+255),w,b
 10638   0009A6  6ED9               	movwf	fsr2l,c
 10639   0009A8  0E01               	movlw	high _dbuf
 10640   0009AA  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10641   0009AC  6EDA               	movwf	fsr2h,c
 10642   0009AE  5198               	movf	efgtoa@d& (0+255),w,b
 10643   0009B0  0F30               	addlw	48
 10644   0009B2  6EDF               	movwf	indf2,c
 10645   0009B4                     
 10646                           ; BSR set to: 0
 10647   0009B4  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10648   0009B6  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10649   0009B8                     
 10650                           ; BSR set to: 0
 10651                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 804:             --w;
 10652   0009B8  079E               	decf	efgtoa@w& (0+255),f,b
 10653   0009BA  A0D8               	btfss	status,0,c
 10654   0009BC  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10655   0009BE                     
 10656                           ; BSR set to: 0
 10657                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 805:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 806:         h -= l*u.f;
 10658   0009BE  C0A6  F064         	movff	efgtoa@h,___flsub@b
 10659   0009C2  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
 10660   0009C6  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
 10661   0009CA  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
 10662   0009CE  C0AA  F018         	movff	efgtoa@l,___flmul@a
 10663   0009D2  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
 10664   0009D6  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
 10665   0009DA  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
 10666   0009DE  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10667   0009E2  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10668   0009E6  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10669   0009EA  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10670   0009EE  EC3A  F00D         	call	___flmul	;wreg free
 10671   0009F2  C014  F068         	movff	?___flmul,___flsub@a
 10672   0009F6  C015  F069         	movff	?___flmul+1,___flsub@a+1
 10673   0009FA  C016  F06A         	movff	?___flmul+2,___flsub@a+2
 10674   0009FE  C017  F06B         	movff	?___flmul+3,___flsub@a+3
 10675   000A02  ECA1  F027         	call	___flsub	;wreg free
 10676   000A06  C064  F0A6         	movff	?___flsub,efgtoa@h
 10677   000A0A  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
 10678   000A0E  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
 10679   000A12  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
 10680   000A16                     
 10681                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 807:         u.f = u.f/10.0;
 10682   000A16  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10683   000A1A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10684   000A1E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10685   000A22  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10686   000A26  0E00               	movlw	0
 10687   000A28  6E31               	movwf	___fldiv@a^0,c
 10688   000A2A  0E00               	movlw	0
 10689   000A2C  6E32               	movwf	(___fldiv@a+1)^0,c
 10690   000A2E  0E20               	movlw	32
 10691   000A30  6E33               	movwf	(___fldiv@a+2)^0,c
 10692   000A32  0E41               	movlw	65
 10693   000A34  6E34               	movwf	(___fldiv@a+3)^0,c
 10694   000A36  EC2A  F013         	call	___fldiv	;wreg free
 10695   000A3A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10696   000A3E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10697   000A42  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10698   000A46  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10699   000A4A                     
 10700                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 808:         --ne;
 10701   000A4A  0100               	movlb	0	; () banked
 10702   000A4C  078D               	decf	efgtoa@ne& (0+255),f,b
 10703   000A4E  A0D8               	btfss	status,0,c
 10704   000A50  078E               	decf	(efgtoa@ne+1)& (0+255),f,b
 10705   000A52                     
 10706                           ; BSR set to: 0
 10707                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 809:         ++i;
 10708   000A52  4BA4               	infsnz	efgtoa@i& (0+255),f,b
 10709   000A54  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
 10710   000A56                     l7324:
 10711                           
 10712                           ; BSR set to: 0
 10713                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10714   000A56  519A               	movf	efgtoa@m& (0+255),w,b
 10715   000A58  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10716   000A5A  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10717   000A5C  0A80               	xorlw	128
 10718   000A5E  6F8B               	movwf	??_efgtoa& (0+255),b
 10719   000A60  519B               	movf	(efgtoa@m+1)& (0+255),w,b
 10720   000A62  0A80               	xorlw	128
 10721   000A64  598B               	subwfb	??_efgtoa& (0+255),w,b
 10722   000A66  B0D8               	btfsc	status,0,c
 10723   000A68  EF38  F005         	goto	u8811
 10724   000A6C  EF3A  F005         	goto	u8810
 10725   000A70                     u8811:
 10726   000A70  EF48  F005         	goto	l7328
 10727   000A74                     u8810:
 10728   000A74                     
 10729                           ; BSR set to: 0
 10730   000A74  BFB4               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10731   000A76  EF46  F005         	goto	u8821
 10732   000A7A  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10733   000A7C  E109               	bnz	u8820
 10734   000A7E  0E4B               	movlw	75
 10735   000A80  5DB3               	subwf	efgtoa@n& (0+255),w,b
 10736   000A82  A0D8               	btfss	status,0,c
 10737   000A84  EF46  F005         	goto	u8821
 10738   000A88  EF48  F005         	goto	u8820
 10739   000A8C                     u8821:
 10740   000A8C  EF46  F004         	goto	l7284
 10741   000A90                     u8820:
 10742   000A90                     l7328:
 10743                           
 10744                           ; BSR set to: 0
 10745                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(dbuf) - 1;
 10746   000A90  0E00               	movlw	0
 10747   000A92  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10748   000A94  0E4F               	movlw	79
 10749   000A96  6FA4               	movwf	efgtoa@i& (0+255),b
 10750   000A98                     
 10751                           ; BSR set to: 0
 10752                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] = '\0';
 10753   000A98  0E27               	movlw	low _dbuf
 10754   000A9A  25A4               	addwf	efgtoa@i& (0+255),w,b
 10755   000A9C  6ED9               	movwf	fsr2l,c
 10756   000A9E  0E01               	movlw	high _dbuf
 10757   000AA0  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10758   000AA2  6EDA               	movwf	fsr2h,c
 10759   000AA4  6ADF               	clrf	indf2,c
 10760   000AA6                     
 10761                           ; BSR set to: 0
 10762                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbuf[i-n], &dbuf[0], 
      +                          (size_t)n);
 10763   000AA6  0E27               	movlw	low _dbuf
 10764   000AA8  6F8B               	movwf	??_efgtoa& (0+255),b
 10765   000AAA  0E01               	movlw	high _dbuf
 10766   000AAC  6F8C               	movwf	(??_efgtoa+1)& (0+255),b
 10767   000AAE  51B3               	movf	efgtoa@n& (0+255),w,b
 10768   000AB0  5F8B               	subwf	??_efgtoa& (0+255),f,b
 10769   000AB2  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10770   000AB4  5B8C               	subwfb	(??_efgtoa+1)& (0+255),f,b
 10771   000AB6  51A4               	movf	efgtoa@i& (0+255),w,b
 10772   000AB8  258B               	addwf	??_efgtoa& (0+255),w,b
 10773   000ABA  6E06               	movwf	memcpy@d1^0,c
 10774   000ABC  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10775   000ABE  218C               	addwfc	(??_efgtoa+1)& (0+255),w,b
 10776   000AC0  6E07               	movwf	(memcpy@d1+1)^0,c
 10777   000AC2  0E27               	movlw	low _dbuf
 10778   000AC4  6E08               	movwf	memcpy@s1^0,c
 10779   000AC6  0E01               	movlw	high _dbuf
 10780   000AC8  6E09               	movwf	(memcpy@s1+1)^0,c
 10781   000ACA  C0B3  F00A         	movff	efgtoa@n,memcpy@n
 10782   000ACE  C0B4  F00B         	movff	efgtoa@n+1,memcpy@n+1
 10783   000AD2  EC54  F027         	call	_memcpy	;wreg free
 10784   000AD6                     
 10785                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 10786   000AD6  0100               	movlb	0	; () banked
 10787   000AD8  51B3               	movf	efgtoa@n& (0+255),w,b
 10788   000ADA  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10789   000ADC  6FB3               	movwf	efgtoa@n& (0+255),b
 10790   000ADE  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10791   000AE0  59A5               	subwfb	(efgtoa@i+1)& (0+255),w,b
 10792   000AE2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
 10793   000AE4                     
 10794                           ; BSR set to: 0
 10795                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 850:  i = sign == 0 ? 0 : 1;
 10796   000AE4  51AE               	movf	efgtoa@sign& (0+255),w,b
 10797   000AE6  A4D8               	btfss	status,2,c
 10798   000AE8  EF78  F005         	goto	u8831
 10799   000AEC  EF7B  F005         	goto	u8830
 10800   000AF0                     u8831:
 10801   000AF0  0E01               	movlw	1
 10802   000AF2  EF7C  F005         	goto	u8840
 10803   000AF6                     u8830:
 10804   000AF6  0E00               	movlw	0
 10805   000AF8                     u8840:
 10806   000AF8  6FA4               	movwf	efgtoa@i& (0+255),b
 10807   000AFA  6BA5               	clrf	(efgtoa@i+1)& (0+255),b
 10808   000AFC                     
 10809                           ; BSR set to: 0
 10810                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 10811   000AFC  51AE               	movf	efgtoa@sign& (0+255),w,b
 10812   000AFE  B4D8               	btfsc	status,2,c
 10813   000B00  EF84  F005         	goto	u8851
 10814   000B04  EF86  F005         	goto	u8850
 10815   000B08                     u8851:
 10816   000B08  EF91  F005         	goto	l7342
 10817   000B0C                     u8850:
 10818   000B0C                     
 10819                           ; BSR set to: 0
 10820                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] = sign;
 10821   000B0C  07B3               	decf	efgtoa@n& (0+255),f,b
 10822   000B0E  A0D8               	btfss	status,0,c
 10823   000B10  07B4               	decf	(efgtoa@n+1)& (0+255),f,b
 10824   000B12  0E27               	movlw	low _dbuf
 10825   000B14  25B3               	addwf	efgtoa@n& (0+255),w,b
 10826   000B16  6ED9               	movwf	fsr2l,c
 10827   000B18  0E01               	movlw	high _dbuf
 10828   000B1A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10829   000B1C  6EDA               	movwf	fsr2h,c
 10830   000B1E  C0AE  FFDF         	movff	efgtoa@sign,indf2
 10831   000B22                     l7342:
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 10835   000B22  51A4               	movf	efgtoa@i& (0+255),w,b
 10836   000B24  5F9E               	subwf	efgtoa@w& (0+255),f,b
 10837   000B26  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10838   000B28  5B9F               	subwfb	(efgtoa@w+1)& (0+255),f,b
 10839   000B2A                     
 10840                           ; BSR set to: 0
 10841                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 867:     return (void) pad(fp, &dbu
      +                          f[n], w);
 10842   000B2A  C084  F017         	movff	efgtoa@fp,pad@fp
 10843   000B2E  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
 10844   000B32  0E27               	movlw	low _dbuf
 10845   000B34  25B3               	addwf	efgtoa@n& (0+255),w,b
 10846   000B36  6E19               	movwf	pad@buf^0,c
 10847   000B38  0E01               	movlw	high _dbuf
 10848   000B3A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10849   000B3C  6E1A               	movwf	(pad@buf+1)^0,c
 10850   000B3E  C09E  F01B         	movff	efgtoa@w,pad@p
 10851   000B42  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
 10852   000B46  ECAA  F025         	call	_pad	;wreg free
 10853   000B4A                     l1452:
 10854   000B4A  0012               	return		;funcret
 10855   000B4C                     __end_of_efgtoa:
 10856                           	callstack 0
 10857                           
 10858 ;; *************** function _strcpy *****************
 10859 ;; Defined at:
 10860 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strcpy.c"
 10861 ;; Parameters:    Size  Location     Type
 10862 ;;  dest            2    5[COMRAM] PTR unsigned char 
 10863 ;;		 -> dbuf(80), 
 10864 ;;  src             2    7[COMRAM] PTR const unsigned char 
 10865 ;;		 -> STR_37(4), STR_34(4), 
 10866 ;; Auto vars:     Size  Location     Type
 10867 ;;  d               2    9[COMRAM] PTR unsigned char 
 10868 ;;		 -> dbuf(80), 
 10869 ;; Return value:  Size  Location     Type
 10870 ;;                  2    5[COMRAM] PTR unsigned char 
 10871 ;; Registers used:
 10872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10873 ;; Tracked objects:
 10874 ;;		On entry : 0/0
 10875 ;;		On exit  : 0/0
 10876 ;;		Unchanged: 0/0
 10877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10879 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10881 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10882 ;;Total ram usage:        6 bytes
 10883 ;; Hardware stack levels used: 1
 10884 ;; Hardware stack levels required when called: 1
 10885 ;; This function calls:
 10886 ;;		Nothing
 10887 ;; This function is called by:
 10888 ;;		_efgtoa
 10889 ;; This function uses a non-reentrant model
 10890 ;;
 10891                           
 10892                           	psect	text37
 10893   00508C                     __ptext37:
 10894                           	callstack 0
 10895   00508C                     _strcpy:
 10896                           	callstack 24
 10897   00508C  C006  F00A         	movff	strcpy@dest,strcpy@d
 10898   005090  C007  F00B         	movff	strcpy@dest+1,strcpy@d+1
 10899   005094                     l7032:
 10900   005094  C008  FFF6         	movff	strcpy@src,tblptrl
 10901   005098  C009  FFF7         	movff	strcpy@src+1,tblptrh
 10902   00509C  4A08               	infsnz	strcpy@src^0,f,c
 10903   00509E  2A09               	incf	(strcpy@src+1)^0,f,c
 10904   0050A0                     	if	0	;tblptru may be non-zero
 10905   0050A0                     	endif
 10906   0050A0                     	if	0	;tblptru may be non-zero
 10907   0050A0                     	endif
 10908   0050A0  C00A  FFD9         	movff	strcpy@d,fsr2l
 10909   0050A4  C00B  FFDA         	movff	strcpy@d+1,fsr2h
 10910   0050A8  4A0A               	infsnz	strcpy@d^0,f,c
 10911   0050AA  2A0B               	incf	(strcpy@d+1)^0,f,c
 10912   0050AC  0008               	tblrd		*
 10913   0050AE  CFF5 FFDF          	movff	tablat,indf2
 10914   0050B2  50DF               	movf	indf2,w,c
 10915   0050B4  A4D8               	btfss	status,2,c
 10916   0050B6  EF5F  F028         	goto	u8321
 10917   0050BA  EF61  F028         	goto	u8320
 10918   0050BE                     u8321:
 10919   0050BE  EF4A  F028         	goto	l7032
 10920   0050C2                     u8320:
 10921   0050C2  0012               	return		;funcret
 10922   0050C4                     __end_of_strcpy:
 10923                           	callstack 0
 10924                           
 10925 ;; *************** function _memcpy *****************
 10926 ;; Defined at:
 10927 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\memcpy.c"
 10928 ;; Parameters:    Size  Location     Type
 10929 ;;  d1              2    5[COMRAM] PTR void 
 10930 ;;		 -> dbuf(80), 
 10931 ;;  s1              2    7[COMRAM] PTR const void 
 10932 ;;		 -> dbuf(80), 
 10933 ;;  n               2    9[COMRAM] unsigned int 
 10934 ;; Auto vars:     Size  Location     Type
 10935 ;;  s               2   14[COMRAM] PTR const unsigned char 
 10936 ;;		 -> dbuf(80), 
 10937 ;;  d               2   12[COMRAM] PTR unsigned char 
 10938 ;;		 -> dbuf(80), 
 10939 ;;  tmp             1   11[COMRAM] unsigned char 
 10940 ;; Return value:  Size  Location     Type
 10941 ;;                  2    5[COMRAM] PTR void 
 10942 ;; Registers used:
 10943 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10944 ;; Tracked objects:
 10945 ;;		On entry : 0/0
 10946 ;;		On exit  : 0/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10949 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10950 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10952 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10953 ;;Total ram usage:       11 bytes
 10954 ;; Hardware stack levels used: 1
 10955 ;; Hardware stack levels required when called: 1
 10956 ;; This function calls:
 10957 ;;		Nothing
 10958 ;; This function is called by:
 10959 ;;		_efgtoa
 10960 ;; This function uses a non-reentrant model
 10961 ;;
 10962                           
 10963                           	psect	text38
 10964   004EA8                     __ptext38:
 10965                           	callstack 0
 10966   004EA8                     _memcpy:
 10967                           	callstack 24
 10968   004EA8  C008  F00F         	movff	memcpy@s1,memcpy@s
 10969   004EAC  C009  F010         	movff	memcpy@s1+1,memcpy@s+1
 10970   004EB0  C006  F00D         	movff	memcpy@d1,memcpy@d
 10971   004EB4  C007  F00E         	movff	memcpy@d1+1,memcpy@d+1
 10972   004EB8  EF6E  F027         	goto	l7080
 10973   004EBC                     l7072:
 10974   004EBC  C00F  FFD9         	movff	memcpy@s,fsr2l
 10975   004EC0  C010  FFDA         	movff	memcpy@s+1,fsr2h
 10976   004EC4  50DF               	movf	indf2,w,c
 10977   004EC6  6E0C               	movwf	memcpy@tmp^0,c
 10978   004EC8  4A0F               	infsnz	memcpy@s^0,f,c
 10979   004ECA  2A10               	incf	(memcpy@s+1)^0,f,c
 10980   004ECC  C00D  FFD9         	movff	memcpy@d,fsr2l
 10981   004ED0  C00E  FFDA         	movff	memcpy@d+1,fsr2h
 10982   004ED4  C00C  FFDF         	movff	memcpy@tmp,indf2
 10983   004ED8  4A0D               	infsnz	memcpy@d^0,f,c
 10984   004EDA  2A0E               	incf	(memcpy@d+1)^0,f,c
 10985   004EDC                     l7080:
 10986   004EDC  060A               	decf	memcpy@n^0,f,c
 10987   004EDE  A0D8               	btfss	status,0,c
 10988   004EE0  060B               	decf	(memcpy@n+1)^0,f,c
 10989   004EE2  280A               	incf	memcpy@n^0,w,c
 10990   004EE4  E106               	bnz	u8441
 10991   004EE6  280B               	incf	(memcpy@n+1)^0,w,c
 10992   004EE8  A4D8               	btfss	status,2,c
 10993   004EEA  EF79  F027         	goto	u8441
 10994   004EEE  EF7B  F027         	goto	u8440
 10995   004EF2                     u8441:
 10996   004EF2  EF5E  F027         	goto	l7072
 10997   004EF6                     u8440:
 10998   004EF6  0012               	return		;funcret
 10999   004EF8                     __end_of_memcpy:
 11000                           	callstack 0
 11001                           
 11002 ;; *************** function _labs *****************
 11003 ;; Defined at:
 11004 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\labs.c"
 11005 ;; Parameters:    Size  Location     Type
 11006 ;;  a               4    5[COMRAM] long 
 11007 ;; Auto vars:     Size  Location     Type
 11008 ;;		None
 11009 ;; Return value:  Size  Location     Type
 11010 ;;                  4    5[COMRAM] long 
 11011 ;; Registers used:
 11012 ;;		wreg, status,2, status,0
 11013 ;; Tracked objects:
 11014 ;;		On entry : 0/0
 11015 ;;		On exit  : 0/0
 11016 ;;		Unchanged: 0/0
 11017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11020 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11021 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11022 ;;Total ram usage:        8 bytes
 11023 ;; Hardware stack levels used: 1
 11024 ;; Hardware stack levels required when called: 1
 11025 ;; This function calls:
 11026 ;;		Nothing
 11027 ;; This function is called by:
 11028 ;;		_efgtoa
 11029 ;; This function uses a non-reentrant model
 11030 ;;
 11031                           
 11032                           	psect	text39
 11033   004DFE                     __ptext39:
 11034                           	callstack 0
 11035   004DFE                     _labs:
 11036                           	callstack 24
 11037   004DFE  BE09               	btfsc	(labs@a+3)^0,7,c
 11038   004E00  EF04  F027         	goto	u8331
 11039   004E04  EF06  F027         	goto	u8330
 11040   004E08                     u8331:
 11041   004E08  EF10  F027         	goto	l7038
 11042   004E0C                     u8330:
 11043   004E0C  C006  F006         	movff	labs@a,?_labs
 11044   004E10  C007  F007         	movff	labs@a+1,?_labs+1
 11045   004E14  C008  F008         	movff	labs@a+2,?_labs+2
 11046   004E18  C009  F009         	movff	labs@a+3,?_labs+3
 11047   004E1C  EF29  F027         	goto	l1634
 11048   004E20                     l7038:
 11049   004E20  C006  F00A         	movff	labs@a,??_labs
 11050   004E24  C007  F00B         	movff	labs@a+1,??_labs+1
 11051   004E28  C008  F00C         	movff	labs@a+2,??_labs+2
 11052   004E2C  C009  F00D         	movff	labs@a+3,??_labs+3
 11053   004E30  1E0A               	comf	??_labs^0,f,c
 11054   004E32  1E0B               	comf	(??_labs+1)^0,f,c
 11055   004E34  1E0C               	comf	(??_labs+2)^0,f,c
 11056   004E36  1E0D               	comf	(??_labs+3)^0,f,c
 11057   004E38  2A0A               	incf	??_labs^0,f,c
 11058   004E3A  0E00               	movlw	0
 11059   004E3C  220B               	addwfc	(??_labs+1)^0,f,c
 11060   004E3E  220C               	addwfc	(??_labs+2)^0,f,c
 11061   004E40  220D               	addwfc	(??_labs+3)^0,f,c
 11062   004E42  C00A  F006         	movff	??_labs,?_labs
 11063   004E46  C00B  F007         	movff	??_labs+1,?_labs+1
 11064   004E4A  C00C  F008         	movff	??_labs+2,?_labs+2
 11065   004E4E  C00D  F009         	movff	??_labs+3,?_labs+3
 11066   004E52                     l1634:
 11067   004E52  0012               	return		;funcret
 11068   004E54                     __end_of_labs:
 11069                           	callstack 0
 11070                           
 11071 ;; *************** function _floorf *****************
 11072 ;; Defined at:
 11073 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\floorf.c"
 11074 ;; Parameters:    Size  Location     Type
 11075 ;;  x               4   69[COMRAM] float 
 11076 ;; Auto vars:     Size  Location     Type
 11077 ;;  u               4    6[BANK0 ] struct .
 11078 ;;  m               4    0[BANK0 ] unsigned long 
 11079 ;;  e               2    4[BANK0 ] int 
 11080 ;; Return value:  Size  Location     Type
 11081 ;;                  4   69[COMRAM] float 
 11082 ;; Registers used:
 11083 ;;		wreg, status,2, status,0
 11084 ;; Tracked objects:
 11085 ;;		On entry : 0/0
 11086 ;;		On exit  : 0/0
 11087 ;;		Unchanged: 0/0
 11088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11089 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11090 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11091 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11092 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11093 ;;Total ram usage:       20 bytes
 11094 ;; Hardware stack levels used: 1
 11095 ;; Hardware stack levels required when called: 1
 11096 ;; This function calls:
 11097 ;;		Nothing
 11098 ;; This function is called by:
 11099 ;;		_efgtoa
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           	psect	text40
 11104   003214                     __ptext40:
 11105                           	callstack 0
 11106   003214                     _floorf:
 11107                           	callstack 24
 11108   003214  C119  F066         	movff	floorf@F521,floorf@u
 11109   003218  C11A  F067         	movff	floorf@F521+1,floorf@u+1
 11110   00321C  C11B  F068         	movff	floorf@F521+2,floorf@u+2
 11111   003220  C11C  F069         	movff	floorf@F521+3,floorf@u+3
 11112   003224  C046  F066         	movff	floorf@x,floorf@u
 11113   003228  C047  F067         	movff	floorf@x+1,floorf@u+1
 11114   00322C  C048  F068         	movff	floorf@x+2,floorf@u+2
 11115   003230  C049  F069         	movff	floorf@x+3,floorf@u+3
 11116   003234  0E81               	movlw	129
 11117   003236  6E4A               	movwf	??_floorf^0,c
 11118   003238  0EFF               	movlw	255
 11119   00323A  6E4B               	movwf	(??_floorf+1)^0,c
 11120   00323C  C066  F04C         	movff	floorf@u,??_floorf+2
 11121   003240  C067  F04D         	movff	floorf@u+1,??_floorf+3
 11122   003244  C068  F04E         	movff	floorf@u+2,??_floorf+4
 11123   003248  C069  F04F         	movff	floorf@u+3,??_floorf+5
 11124   00324C  0E18               	movlw	24
 11125   00324E  EF2E  F019         	goto	u8340
 11126   003252                     u8345:
 11127   003252  90D8               	bcf	status,0,c
 11128   003254  324F               	rrcf	(??_floorf+5)^0,f,c
 11129   003256  324E               	rrcf	(??_floorf+4)^0,f,c
 11130   003258  324D               	rrcf	(??_floorf+3)^0,f,c
 11131   00325A  324C               	rrcf	(??_floorf+2)^0,f,c
 11132   00325C                     u8340:
 11133   00325C  2EE8               	decfsz	wreg,f,c
 11134   00325E  EF29  F019         	goto	u8345
 11135   003262  504C               	movf	(??_floorf+2)^0,w,c
 11136   003264  244A               	addwf	??_floorf^0,w,c
 11137   003266  0100               	movlb	0	; () banked
 11138   003268  6F64               	movwf	floorf@e& (0+255),b
 11139   00326A  0E00               	movlw	0
 11140   00326C  204B               	addwfc	(??_floorf+1)^0,w,c
 11141   00326E  6F65               	movwf	(floorf@e+1)& (0+255),b
 11142   003270  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 11143   003272  EF44  F019         	goto	u8351
 11144   003276  5165               	movf	(floorf@e+1)& (0+255),w,b
 11145   003278  E109               	bnz	u8350
 11146   00327A  0E17               	movlw	23
 11147   00327C  5D64               	subwf	floorf@e& (0+255),w,b
 11148   00327E  A0D8               	btfss	status,0,c
 11149   003280  EF44  F019         	goto	u8351
 11150   003284  EF46  F019         	goto	u8350
 11151   003288                     u8351:
 11152   003288  EF50  F019         	goto	l7048
 11153   00328C                     u8350:
 11154   00328C                     l7046:
 11155                           
 11156                           ; BSR set to: 0
 11157   00328C  C046  F046         	movff	floorf@x,?_floorf
 11158   003290  C047  F047         	movff	floorf@x+1,?_floorf+1
 11159   003294  C048  F048         	movff	floorf@x+2,?_floorf+2
 11160   003298  C049  F049         	movff	floorf@x+3,?_floorf+3
 11161   00329C  EF14  F01A         	goto	l1620
 11162   0032A0                     l7048:
 11163                           
 11164                           ; BSR set to: 0
 11165   0032A0  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 11166   0032A2  EF55  F019         	goto	u8361
 11167   0032A6  EF57  F019         	goto	u8360
 11168   0032AA                     u8361:
 11169   0032AA  EFC8  F019         	goto	l7058
 11170   0032AE                     u8360:
 11171   0032AE                     
 11172                           ; BSR set to: 0
 11173   0032AE  C064  F04A         	movff	floorf@e,??_floorf
 11174   0032B2  0EFF               	movlw	255
 11175   0032B4  6E4B               	movwf	(??_floorf+1)^0,c
 11176   0032B6  0EFF               	movlw	255
 11177   0032B8  6E4C               	movwf	(??_floorf+2)^0,c
 11178   0032BA  0E7F               	movlw	127
 11179   0032BC  6E4D               	movwf	(??_floorf+3)^0,c
 11180   0032BE  0E00               	movlw	0
 11181   0032C0  6E4E               	movwf	(??_floorf+4)^0,c
 11182   0032C2                     u8375:
 11183   0032C2  664A               	tstfsz	??_floorf^0,c
 11184   0032C4  EF66  F019         	goto	u8376
 11185   0032C8  EF6E  F019         	goto	u8377
 11186   0032CC                     u8376:
 11187   0032CC  344E               	rlcf	(??_floorf+4)^0,w,c
 11188   0032CE  324E               	rrcf	(??_floorf+4)^0,f,c
 11189   0032D0  324D               	rrcf	(??_floorf+3)^0,f,c
 11190   0032D2  324C               	rrcf	(??_floorf+2)^0,f,c
 11191   0032D4  324B               	rrcf	(??_floorf+1)^0,f,c
 11192   0032D6  2E4A               	decfsz	??_floorf^0,f,c
 11193   0032D8  EF61  F019         	goto	u8375
 11194   0032DC                     u8377:
 11195   0032DC  C04B  F060         	movff	??_floorf+1,floorf@m
 11196   0032E0  C04C  F061         	movff	??_floorf+2,floorf@m+1
 11197   0032E4  C04D  F062         	movff	??_floorf+3,floorf@m+2
 11198   0032E8  C04E  F063         	movff	??_floorf+4,floorf@m+3
 11199   0032EC  0100               	movlb	0	; () banked
 11200   0032EE  5160               	movf	floorf@m& (0+255),w,b
 11201   0032F0  1566               	andwf	floorf@u& (0+255),w,b
 11202   0032F2  6E4A               	movwf	??_floorf^0,c
 11203   0032F4  5161               	movf	(floorf@m+1)& (0+255),w,b
 11204   0032F6  1567               	andwf	(floorf@u+1)& (0+255),w,b
 11205   0032F8  6E4B               	movwf	(??_floorf+1)^0,c
 11206   0032FA  5162               	movf	(floorf@m+2)& (0+255),w,b
 11207   0032FC  1568               	andwf	(floorf@u+2)& (0+255),w,b
 11208   0032FE  6E4C               	movwf	(??_floorf+2)^0,c
 11209   003300  5163               	movf	(floorf@m+3)& (0+255),w,b
 11210   003302  1569               	andwf	(floorf@u+3)& (0+255),w,b
 11211   003304  6E4D               	movwf	(??_floorf+3)^0,c
 11212   003306  504A               	movf	??_floorf^0,w,c
 11213   003308  104B               	iorwf	(??_floorf+1)^0,w,c
 11214   00330A  104C               	iorwf	(??_floorf+2)^0,w,c
 11215   00330C  104D               	iorwf	(??_floorf+3)^0,w,c
 11216   00330E  A4D8               	btfss	status,2,c
 11217   003310  EF8C  F019         	goto	u8381
 11218   003314  EF8E  F019         	goto	u8380
 11219   003318                     u8381:
 11220   003318  EF90  F019         	goto	l7054
 11221   00331C                     u8380:
 11222   00331C  EF46  F019         	goto	l7046
 11223   003320                     l7054:
 11224                           
 11225                           ; BSR set to: 0
 11226   003320  C066  F04A         	movff	floorf@u,??_floorf
 11227   003324  C067  F04B         	movff	floorf@u+1,??_floorf+1
 11228   003328  C068  F04C         	movff	floorf@u+2,??_floorf+2
 11229   00332C  C069  F04D         	movff	floorf@u+3,??_floorf+3
 11230   003330  0E20               	movlw	32
 11231   003332  EFA0  F019         	goto	u8390
 11232   003336                     u8395:
 11233   003336  90D8               	bcf	status,0,c
 11234   003338  324D               	rrcf	(??_floorf+3)^0,f,c
 11235   00333A  324C               	rrcf	(??_floorf+2)^0,f,c
 11236   00333C  324B               	rrcf	(??_floorf+1)^0,f,c
 11237   00333E  324A               	rrcf	??_floorf^0,f,c
 11238   003340                     u8390:
 11239   003340  2EE8               	decfsz	wreg,f,c
 11240   003342  EF9B  F019         	goto	u8395
 11241   003346  504A               	movf	??_floorf^0,w,c
 11242   003348  104B               	iorwf	(??_floorf+1)^0,w,c
 11243   00334A  104C               	iorwf	(??_floorf+2)^0,w,c
 11244   00334C  104D               	iorwf	(??_floorf+3)^0,w,c
 11245   00334E  B4D8               	btfsc	status,2,c
 11246   003350  EFAC  F019         	goto	u8401
 11247   003354  EFAE  F019         	goto	u8400
 11248   003358                     u8401:
 11249   003358  EFB6  F019         	goto	l1623
 11250   00335C                     u8400:
 11251   00335C                     
 11252                           ; BSR set to: 0
 11253   00335C  5160               	movf	floorf@m& (0+255),w,b
 11254   00335E  2766               	addwf	floorf@u& (0+255),f,b
 11255   003360  5161               	movf	(floorf@m+1)& (0+255),w,b
 11256   003362  2367               	addwfc	(floorf@u+1)& (0+255),f,b
 11257   003364  5162               	movf	(floorf@m+2)& (0+255),w,b
 11258   003366  2368               	addwfc	(floorf@u+2)& (0+255),f,b
 11259   003368  5163               	movf	(floorf@m+3)& (0+255),w,b
 11260   00336A  2369               	addwfc	(floorf@u+3)& (0+255),f,b
 11261   00336C                     l1623:
 11262                           
 11263                           ; BSR set to: 0
 11264   00336C  1D60               	comf	floorf@m& (0+255),w,b
 11265   00336E  6E4A               	movwf	??_floorf^0,c
 11266   003370  1D61               	comf	(floorf@m+1)& (0+255),w,b
 11267   003372  6E4B               	movwf	(??_floorf+1)^0,c
 11268   003374  1D62               	comf	(floorf@m+2)& (0+255),w,b
 11269   003376  6E4C               	movwf	(??_floorf+2)^0,c
 11270   003378  1D63               	comf	(floorf@m+3)& (0+255),w,b
 11271   00337A  6E4D               	movwf	(??_floorf+3)^0,c
 11272   00337C  504A               	movf	??_floorf^0,w,c
 11273   00337E  1766               	andwf	floorf@u& (0+255),f,b
 11274   003380  504B               	movf	(??_floorf+1)^0,w,c
 11275   003382  1767               	andwf	(floorf@u+1)& (0+255),f,b
 11276   003384  504C               	movf	(??_floorf+2)^0,w,c
 11277   003386  1768               	andwf	(floorf@u+2)& (0+255),f,b
 11278   003388  504D               	movf	(??_floorf+3)^0,w,c
 11279   00338A  1769               	andwf	(floorf@u+3)& (0+255),f,b
 11280   00338C  EF0C  F01A         	goto	l7066
 11281   003390                     l7058:
 11282                           
 11283                           ; BSR set to: 0
 11284   003390  C066  F04A         	movff	floorf@u,??_floorf
 11285   003394  C067  F04B         	movff	floorf@u+1,??_floorf+1
 11286   003398  C068  F04C         	movff	floorf@u+2,??_floorf+2
 11287   00339C  C069  F04D         	movff	floorf@u+3,??_floorf+3
 11288   0033A0  0E20               	movlw	32
 11289   0033A2  EFD8  F019         	goto	u8410
 11290   0033A6                     u8415:
 11291   0033A6  90D8               	bcf	status,0,c
 11292   0033A8  324D               	rrcf	(??_floorf+3)^0,f,c
 11293   0033AA  324C               	rrcf	(??_floorf+2)^0,f,c
 11294   0033AC  324B               	rrcf	(??_floorf+1)^0,f,c
 11295   0033AE  324A               	rrcf	??_floorf^0,f,c
 11296   0033B0                     u8410:
 11297   0033B0  2EE8               	decfsz	wreg,f,c
 11298   0033B2  EFD3  F019         	goto	u8415
 11299   0033B6  504A               	movf	??_floorf^0,w,c
 11300   0033B8  104B               	iorwf	(??_floorf+1)^0,w,c
 11301   0033BA  104C               	iorwf	(??_floorf+2)^0,w,c
 11302   0033BC  104D               	iorwf	(??_floorf+3)^0,w,c
 11303   0033BE  A4D8               	btfss	status,2,c
 11304   0033C0  EFE4  F019         	goto	u8421
 11305   0033C4  EFE6  F019         	goto	u8420
 11306   0033C8                     u8421:
 11307   0033C8  EFF0  F019         	goto	l7062
 11308   0033CC                     u8420:
 11309   0033CC                     
 11310                           ; BSR set to: 0
 11311   0033CC  0E00               	movlw	0
 11312   0033CE  6F66               	movwf	floorf@u& (0+255),b
 11313   0033D0  0E00               	movlw	0
 11314   0033D2  6F67               	movwf	(floorf@u+1)& (0+255),b
 11315   0033D4  0E00               	movlw	0
 11316   0033D6  6F68               	movwf	(floorf@u+2)& (0+255),b
 11317   0033D8  0E00               	movlw	0
 11318   0033DA  6F69               	movwf	(floorf@u+3)& (0+255),b
 11319   0033DC  EF0C  F01A         	goto	l7066
 11320   0033E0                     l7062:
 11321                           
 11322                           ; BSR set to: 0
 11323   0033E0  90D8               	bcf	status,0,c
 11324   0033E2  3566               	rlcf	floorf@u& (0+255),w,b
 11325   0033E4  6E4A               	movwf	??_floorf^0,c
 11326   0033E6  3567               	rlcf	(floorf@u+1)& (0+255),w,b
 11327   0033E8  6E4B               	movwf	(??_floorf+1)^0,c
 11328   0033EA  3568               	rlcf	(floorf@u+2)& (0+255),w,b
 11329   0033EC  6E4C               	movwf	(??_floorf+2)^0,c
 11330   0033EE  3569               	rlcf	(floorf@u+3)& (0+255),w,b
 11331   0033F0  6E4D               	movwf	(??_floorf+3)^0,c
 11332   0033F2  504A               	movf	??_floorf^0,w,c
 11333   0033F4  104B               	iorwf	(??_floorf+1)^0,w,c
 11334   0033F6  104C               	iorwf	(??_floorf+2)^0,w,c
 11335   0033F8  104D               	iorwf	(??_floorf+3)^0,w,c
 11336   0033FA  B4D8               	btfsc	status,2,c
 11337   0033FC  EF02  F01A         	goto	u8431
 11338   003400  EF04  F01A         	goto	u8430
 11339   003404                     u8431:
 11340   003404  EF0C  F01A         	goto	l7066
 11341   003408                     u8430:
 11342   003408                     
 11343                           ; BSR set to: 0
 11344   003408  0E00               	movlw	0
 11345   00340A  6F66               	movwf	floorf@u& (0+255),b
 11346   00340C  0E00               	movlw	0
 11347   00340E  6F67               	movwf	(floorf@u+1)& (0+255),b
 11348   003410  0E80               	movlw	128
 11349   003412  6F68               	movwf	(floorf@u+2)& (0+255),b
 11350   003414  0EBF               	movlw	191
 11351   003416  6F69               	movwf	(floorf@u+3)& (0+255),b
 11352   003418                     l7066:
 11353                           
 11354                           ; BSR set to: 0
 11355   003418  C066  F046         	movff	floorf@u,?_floorf
 11356   00341C  C067  F047         	movff	floorf@u+1,?_floorf+1
 11357   003420  C068  F048         	movff	floorf@u+2,?_floorf+2
 11358   003424  C069  F049         	movff	floorf@u+3,?_floorf+3
 11359   003428                     l1620:
 11360                           
 11361                           ; BSR set to: 0
 11362   003428  0012               	return		;funcret
 11363   00342A                     __end_of_floorf:
 11364                           	callstack 0
 11365                           
 11366 ;; *************** function ___fpclassifyf *****************
 11367 ;; Defined at:
 11368 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__fpclassifyf.c"
 11369 ;; Parameters:    Size  Location     Type
 11370 ;;  x               4    5[COMRAM] float 
 11371 ;; Auto vars:     Size  Location     Type
 11372 ;;  u               4   15[COMRAM] struct .
 11373 ;;  e               2   13[COMRAM] int 
 11374 ;; Return value:  Size  Location     Type
 11375 ;;                  2    5[COMRAM] int 
 11376 ;; Registers used:
 11377 ;;		wreg, status,2, status,0
 11378 ;; Tracked objects:
 11379 ;;		On entry : 0/0
 11380 ;;		On exit  : 0/0
 11381 ;;		Unchanged: 0/0
 11382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11383 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11384 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11385 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11386 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11387 ;;Total ram usage:       14 bytes
 11388 ;; Hardware stack levels used: 1
 11389 ;; Hardware stack levels required when called: 1
 11390 ;; This function calls:
 11391 ;;		Nothing
 11392 ;; This function is called by:
 11393 ;;		_efgtoa
 11394 ;; This function uses a non-reentrant model
 11395 ;;
 11396                           
 11397                           	psect	text41
 11398   004444                     __ptext41:
 11399                           	callstack 0
 11400   004444                     ___fpclassifyf:
 11401                           	callstack 24
 11402   004444  C11D  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
 11403   004448  C11E  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 11404   00444C  C11F  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 11405   004450  C120  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 11406   004454  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 11407   004458  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11408   00445C  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11409   004460  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11410   004464  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11411   004468  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11412   00446C  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11413   004470  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11414   004474  0E18               	movlw	24
 11415   004476  EF42  F022         	goto	u8250
 11416   00447A                     u8255:
 11417   00447A  90D8               	bcf	status,0,c
 11418   00447C  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 11419   00447E  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 11420   004480  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 11421   004482  320A               	rrcf	??___fpclassifyf^0,f,c
 11422   004484                     u8250:
 11423   004484  2EE8               	decfsz	wreg,f,c
 11424   004486  EF3D  F022         	goto	u8255
 11425   00448A  500A               	movf	??___fpclassifyf^0,w,c
 11426   00448C  6E0E               	movwf	___fpclassifyf@e^0,c
 11427   00448E  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 11428   004490  500E               	movf	___fpclassifyf@e^0,w,c
 11429   004492  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11430   004494  A4D8               	btfss	status,2,c
 11431   004496  EF4F  F022         	goto	u8261
 11432   00449A  EF51  F022         	goto	u8260
 11433   00449E                     u8261:
 11434   00449E  EF71  F022         	goto	l7020
 11435   0044A2                     u8260:
 11436   0044A2  90D8               	bcf	status,0,c
 11437   0044A4  3410               	rlcf	___fpclassifyf@u^0,w,c
 11438   0044A6  6E0A               	movwf	??___fpclassifyf^0,c
 11439   0044A8  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11440   0044AA  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 11441   0044AC  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11442   0044AE  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 11443   0044B0  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11444   0044B2  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 11445   0044B4  500A               	movf	??___fpclassifyf^0,w,c
 11446   0044B6  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11447   0044B8  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11448   0044BA  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11449   0044BC  A4D8               	btfss	status,2,c
 11450   0044BE  EF63  F022         	goto	u8271
 11451   0044C2  EF65  F022         	goto	u8270
 11452   0044C6                     u8271:
 11453   0044C6  EF6B  F022         	goto	l7016
 11454   0044CA                     u8270:
 11455   0044CA  0E00               	movlw	0
 11456   0044CC  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11457   0044CE  0E02               	movlw	2
 11458   0044D0  6E06               	movwf	?___fpclassifyf^0,c
 11459   0044D2  EFA0  F022         	goto	l1606
 11460   0044D6                     l7016:
 11461   0044D6  0E00               	movlw	0
 11462   0044D8  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11463   0044DA  0E03               	movlw	3
 11464   0044DC  6E06               	movwf	?___fpclassifyf^0,c
 11465   0044DE  EFA0  F022         	goto	l1606
 11466   0044E2                     l7020:
 11467   0044E2  280E               	incf	___fpclassifyf@e^0,w,c
 11468   0044E4  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11469   0044E6  A4D8               	btfss	status,2,c
 11470   0044E8  EF78  F022         	goto	u8281
 11471   0044EC  EF7A  F022         	goto	u8280
 11472   0044F0                     u8281:
 11473   0044F0  EF9C  F022         	goto	l7026
 11474   0044F4                     u8280:
 11475   0044F4  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11476   0044F8  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11477   0044FC  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11478   004500  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11479   004504  0E09               	movlw	9
 11480   004506                     u8295:
 11481   004506  90D8               	bcf	status,0,c
 11482   004508  360A               	rlcf	??___fpclassifyf^0,f,c
 11483   00450A  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 11484   00450C  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 11485   00450E  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 11486   004510  2EE8               	decfsz	wreg,f,c
 11487   004512  EF83  F022         	goto	u8295
 11488   004516  500A               	movf	??___fpclassifyf^0,w,c
 11489   004518  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11490   00451A  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11491   00451C  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11492   00451E  B4D8               	btfsc	status,2,c
 11493   004520  EF94  F022         	goto	u8301
 11494   004524  EF97  F022         	goto	u8300
 11495   004528                     u8301:
 11496   004528  0E01               	movlw	1
 11497   00452A  EF98  F022         	goto	u8310
 11498   00452E                     u8300:
 11499   00452E  0E00               	movlw	0
 11500   004530                     u8310:
 11501   004530  6E06               	movwf	?___fpclassifyf^0,c
 11502   004532  6A07               	clrf	(?___fpclassifyf+1)^0,c
 11503   004534  EFA0  F022         	goto	l1606
 11504   004538                     l7026:
 11505   004538  0E00               	movlw	0
 11506   00453A  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11507   00453C  0E04               	movlw	4
 11508   00453E  6E06               	movwf	?___fpclassifyf^0,c
 11509   004540                     l1606:
 11510   004540  0012               	return		;funcret
 11511   004542                     __end_of___fpclassifyf:
 11512                           	callstack 0
 11513                           
 11514 ;; *************** function ___fltol *****************
 11515 ;; Defined at:
 11516 ;;		line 43 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fltol.c"
 11517 ;; Parameters:    Size  Location     Type
 11518 ;;  f1              4    4[BANK0 ] int 
 11519 ;; Auto vars:     Size  Location     Type
 11520 ;;  exp1            1   82[COMRAM] unsigned char 
 11521 ;;  sign1           1   81[COMRAM] unsigned char 
 11522 ;; Return value:  Size  Location     Type
 11523 ;;                  4    4[BANK0 ] long 
 11524 ;; Registers used:
 11525 ;;		wreg, status,2, status,0
 11526 ;; Tracked objects:
 11527 ;;		On entry : 0/0
 11528 ;;		On exit  : 0/0
 11529 ;;		Unchanged: 0/0
 11530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11531 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11532 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11533 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11534 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11535 ;;Total ram usage:       10 bytes
 11536 ;; Hardware stack levels used: 1
 11537 ;; Hardware stack levels required when called: 1
 11538 ;; This function calls:
 11539 ;;		Nothing
 11540 ;; This function is called by:
 11541 ;;		_runDAC
 11542 ;;		_efgtoa
 11543 ;;		___rem_pio2f
 11544 ;; This function uses a non-reentrant model
 11545 ;;
 11546                           
 11547                           	psect	text42
 11548   004238                     __ptext42:
 11549                           	callstack 0
 11550   004238                     ___fltol:
 11551                           	callstack 24
 11552   004238  0100               	movlb	0	; () banked
 11553   00423A  3566               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11554   00423C  3567               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11555   00423E  6E53               	movwf	___fltol@exp1^0,c
 11556   004240  5053               	movf	___fltol@exp1^0,w,c
 11557   004242  A4D8               	btfss	status,2,c
 11558   004244  EF26  F021         	goto	u8071
 11559   004248  EF28  F021         	goto	u8070
 11560   00424C                     u8071:
 11561   00424C  EF32  F021         	goto	l6912
 11562   004250                     u8070:
 11563   004250                     l6908:
 11564                           
 11565                           ; BSR set to: 0
 11566   004250  0E00               	movlw	0
 11567   004252  6F64               	movwf	?___fltol& (0+255),b
 11568   004254  0E00               	movlw	0
 11569   004256  6F65               	movwf	(?___fltol+1)& (0+255),b
 11570   004258  0E00               	movlw	0
 11571   00425A  6F66               	movwf	(?___fltol+2)& (0+255),b
 11572   00425C  0E00               	movlw	0
 11573   00425E  6F67               	movwf	(?___fltol+3)& (0+255),b
 11574   004260  EF9F  F021         	goto	l1007
 11575   004264                     l6912:
 11576                           
 11577                           ; BSR set to: 0
 11578   004264  C064  F068         	movff	___fltol@f1,??___fltol
 11579   004268  C065  F069         	movff	___fltol@f1+1,??___fltol+1
 11580   00426C  C066  F06A         	movff	___fltol@f1+2,??___fltol+2
 11581   004270  C067  F06B         	movff	___fltol@f1+3,??___fltol+3
 11582   004274  0E20               	movlw	32
 11583   004276  EF42  F021         	goto	u8080
 11584   00427A                     u8085:
 11585   00427A  90D8               	bcf	status,0,c
 11586   00427C  336B               	rrcf	(??___fltol+3)& (0+255),f,b
 11587   00427E  336A               	rrcf	(??___fltol+2)& (0+255),f,b
 11588   004280  3369               	rrcf	(??___fltol+1)& (0+255),f,b
 11589   004282  3368               	rrcf	??___fltol& (0+255),f,b
 11590   004284                     u8080:
 11591   004284  2EE8               	decfsz	wreg,f,c
 11592   004286  EF3D  F021         	goto	u8085
 11593   00428A  5168               	movf	??___fltol& (0+255),w,b
 11594   00428C  6E52               	movwf	___fltol@sign1^0,c
 11595   00428E                     
 11596                           ; BSR set to: 0
 11597   00428E  8F66               	bsf	(___fltol@f1+2)& (0+255),7,b
 11598   004290                     
 11599                           ; BSR set to: 0
 11600   004290  0EFF               	movlw	255
 11601   004292  1764               	andwf	___fltol@f1& (0+255),f,b
 11602   004294  0EFF               	movlw	255
 11603   004296  1765               	andwf	(___fltol@f1+1)& (0+255),f,b
 11604   004298  0EFF               	movlw	255
 11605   00429A  1766               	andwf	(___fltol@f1+2)& (0+255),f,b
 11606   00429C  0E00               	movlw	0
 11607   00429E  1767               	andwf	(___fltol@f1+3)& (0+255),f,b
 11608   0042A0                     
 11609                           ; BSR set to: 0
 11610   0042A0  0E96               	movlw	150
 11611   0042A2  5E53               	subwf	___fltol@exp1^0,f,c
 11612   0042A4                     
 11613                           ; BSR set to: 0
 11614   0042A4  BE53               	btfsc	___fltol@exp1^0,7,c
 11615   0042A6  EF59  F021         	goto	u8090
 11616   0042AA  EF57  F021         	goto	u8091
 11617   0042AE                     u8091:
 11618   0042AE  EF6F  F021         	goto	l6932
 11619   0042B2                     u8090:
 11620   0042B2                     
 11621                           ; BSR set to: 0
 11622   0042B2  5053               	movf	___fltol@exp1^0,w,c
 11623   0042B4  0A80               	xorlw	128
 11624   0042B6  0F97               	addlw	151
 11625   0042B8  B0D8               	btfsc	status,0,c
 11626   0042BA  EF61  F021         	goto	u8101
 11627   0042BE  EF63  F021         	goto	u8100
 11628   0042C2                     u8101:
 11629   0042C2  EF65  F021         	goto	l6928
 11630   0042C6                     u8100:
 11631   0042C6  EF28  F021         	goto	l6908
 11632   0042CA                     l6928:
 11633                           
 11634                           ; BSR set to: 0
 11635   0042CA  90D8               	bcf	status,0,c
 11636   0042CC  3367               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11637   0042CE  3366               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11638   0042D0  3365               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11639   0042D2  3364               	rrcf	___fltol@f1& (0+255),f,b
 11640   0042D4                     
 11641                           ; BSR set to: 0
 11642   0042D4  3E53               	incfsz	___fltol@exp1^0,f,c
 11643   0042D6  EF65  F021         	goto	l6928
 11644   0042DA  EF87  F021         	goto	l6942
 11645   0042DE                     l6932:
 11646                           
 11647                           ; BSR set to: 0
 11648   0042DE  0E1F               	movlw	31
 11649   0042E0  6453               	cpfsgt	___fltol@exp1^0,c
 11650   0042E2  EF75  F021         	goto	u8111
 11651   0042E6  EF77  F021         	goto	u8110
 11652   0042EA                     u8111:
 11653   0042EA  EF7F  F021         	goto	l6940
 11654   0042EE                     u8110:
 11655   0042EE  EF28  F021         	goto	l6908
 11656   0042F2                     l6938:
 11657                           
 11658                           ; BSR set to: 0
 11659   0042F2  90D8               	bcf	status,0,c
 11660   0042F4  3764               	rlcf	___fltol@f1& (0+255),f,b
 11661   0042F6  3765               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11662   0042F8  3766               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11663   0042FA  3767               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11664   0042FC  0653               	decf	___fltol@exp1^0,f,c
 11665   0042FE                     l6940:
 11666                           
 11667                           ; BSR set to: 0
 11668   0042FE  5053               	movf	___fltol@exp1^0,w,c
 11669   004300  A4D8               	btfss	status,2,c
 11670   004302  EF85  F021         	goto	u8121
 11671   004306  EF87  F021         	goto	u8120
 11672   00430A                     u8121:
 11673   00430A  EF79  F021         	goto	l6938
 11674   00430E                     u8120:
 11675   00430E                     l6942:
 11676                           
 11677                           ; BSR set to: 0
 11678   00430E  5052               	movf	___fltol@sign1^0,w,c
 11679   004310  B4D8               	btfsc	status,2,c
 11680   004312  EF8D  F021         	goto	u8131
 11681   004316  EF8F  F021         	goto	u8130
 11682   00431A                     u8131:
 11683   00431A  EF97  F021         	goto	l6946
 11684   00431E                     u8130:
 11685   00431E                     
 11686                           ; BSR set to: 0
 11687   00431E  1F67               	comf	(___fltol@f1+3)& (0+255),f,b
 11688   004320  1F66               	comf	(___fltol@f1+2)& (0+255),f,b
 11689   004322  1F65               	comf	(___fltol@f1+1)& (0+255),f,b
 11690   004324  6D64               	negf	___fltol@f1& (0+255),b
 11691   004326  0E00               	movlw	0
 11692   004328  2365               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11693   00432A  2366               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11694   00432C  2367               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11695   00432E                     l6946:
 11696                           
 11697                           ; BSR set to: 0
 11698   00432E  C064  F064         	movff	___fltol@f1,?___fltol
 11699   004332  C065  F065         	movff	___fltol@f1+1,?___fltol+1
 11700   004336  C066  F066         	movff	___fltol@f1+2,?___fltol+2
 11701   00433A  C067  F067         	movff	___fltol@f1+3,?___fltol+3
 11702   00433E                     l1007:
 11703                           
 11704                           ; BSR set to: 0
 11705   00433E  0012               	return		;funcret
 11706   004340                     __end_of___fltol:
 11707                           	callstack 0
 11708                           
 11709 ;; *************** function ___flsub *****************
 11710 ;; Defined at:
 11711 ;;		line 245 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 11712 ;; Parameters:    Size  Location     Type
 11713 ;;  b               4    4[BANK0 ] long 
 11714 ;;  a               4    8[BANK0 ] long 
 11715 ;; Auto vars:     Size  Location     Type
 11716 ;;		None
 11717 ;; Return value:  Size  Location     Type
 11718 ;;                  4    4[BANK0 ] long 
 11719 ;; Registers used:
 11720 ;;		wreg, status,2, status,0, cstack
 11721 ;; Tracked objects:
 11722 ;;		On entry : 0/0
 11723 ;;		On exit  : 0/0
 11724 ;;		Unchanged: 0/0
 11725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11726 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11729 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11730 ;;Total ram usage:        8 bytes
 11731 ;; Hardware stack levels used: 1
 11732 ;; Hardware stack levels required when called: 2
 11733 ;; This function calls:
 11734 ;;		___fladd
 11735 ;; This function is called by:
 11736 ;;		_efgtoa
 11737 ;;		___rem_pio2f
 11738 ;; This function uses a non-reentrant model
 11739 ;;
 11740                           
 11741                           	psect	text43
 11742   004F42                     __ptext43:
 11743                           	callstack 0
 11744   004F42                     ___flsub:
 11745                           	callstack 23
 11746   004F42  0E00               	movlw	0
 11747   004F44  0100               	movlb	0	; () banked
 11748   004F46  1B68               	xorwf	___flsub@a& (0+255),f,b
 11749   004F48  0E00               	movlw	0
 11750   004F4A  1B69               	xorwf	(___flsub@a+1)& (0+255),f,b
 11751   004F4C  0E00               	movlw	0
 11752   004F4E  1B6A               	xorwf	(___flsub@a+2)& (0+255),f,b
 11753   004F50  0E80               	movlw	128
 11754   004F52  1B6B               	xorwf	(___flsub@a+3)& (0+255),f,b
 11755   004F54                     
 11756                           ; BSR set to: 0
 11757   004F54  C064  F046         	movff	___flsub@b,___fladd@b
 11758   004F58  C065  F047         	movff	___flsub@b+1,___fladd@b+1
 11759   004F5C  C066  F048         	movff	___flsub@b+2,___fladd@b+2
 11760   004F60  C067  F049         	movff	___flsub@b+3,___fladd@b+3
 11761   004F64  C068  F04A         	movff	___flsub@a,___fladd@a
 11762   004F68  C069  F04B         	movff	___flsub@a+1,___fladd@a+1
 11763   004F6C  C06A  F04C         	movff	___flsub@a+2,___fladd@a+2
 11764   004F70  C06B  F04D         	movff	___flsub@a+3,___fladd@a+3
 11765   004F74  ECD9  F00A         	call	___fladd	;wreg free
 11766   004F78  C046  F064         	movff	?___fladd,?___flsub
 11767   004F7C  C047  F065         	movff	?___fladd+1,?___flsub+1
 11768   004F80  C048  F066         	movff	?___fladd+2,?___flsub+2
 11769   004F84  C049  F067         	movff	?___fladd+3,?___flsub+3
 11770   004F88  0012               	return		;funcret
 11771   004F8A                     __end_of___flsub:
 11772                           	callstack 0
 11773                           
 11774 ;; *************** function ___fladd *****************
 11775 ;; Defined at:
 11776 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 11777 ;; Parameters:    Size  Location     Type
 11778 ;;  b               4   69[COMRAM] long 
 11779 ;;  a               4   73[COMRAM] long 
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;  grs             1    3[BANK0 ] unsigned char 
 11782 ;;  bexp            1    2[BANK0 ] unsigned char 
 11783 ;;  aexp            1    1[BANK0 ] unsigned char 
 11784 ;;  signs           1    0[BANK0 ] unsigned char 
 11785 ;; Return value:  Size  Location     Type
 11786 ;;                  4   69[COMRAM] unsigned char 
 11787 ;; Registers used:
 11788 ;;		wreg, status,2, status,0
 11789 ;; Tracked objects:
 11790 ;;		On entry : 0/0
 11791 ;;		On exit  : 0/0
 11792 ;;		Unchanged: 0/0
 11793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11794 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11795 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11796 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11797 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11798 ;;Total ram usage:       16 bytes
 11799 ;; Hardware stack levels used: 1
 11800 ;; Hardware stack levels required when called: 1
 11801 ;; This function calls:
 11802 ;;		Nothing
 11803 ;; This function is called by:
 11804 ;;		_runDAC
 11805 ;;		___flsub
 11806 ;;		_efgtoa
 11807 ;;		_sinf
 11808 ;;		___cosdf
 11809 ;;		___rem_pio2f
 11810 ;;		___sindf
 11811 ;; This function uses a non-reentrant model
 11812 ;;
 11813                           
 11814                           	psect	text44
 11815   0015B2                     __ptext44:
 11816                           	callstack 0
 11817   0015B2                     ___fladd:
 11818                           	callstack 23
 11819   0015B2  5049               	movf	(___fladd@b+3)^0,w,c
 11820   0015B4  0B80               	andlw	128
 11821   0015B6  0100               	movlb	0	; () banked
 11822   0015B8  6F60               	movwf	___fladd@signs& (0+255),b
 11823   0015BA  5049               	movf	(___fladd@b+3)^0,w,c
 11824   0015BC  2449               	addwf	(___fladd@b+3)^0,w,c
 11825   0015BE  6F62               	movwf	___fladd@bexp& (0+255),b
 11826   0015C0                     
 11827                           ; BSR set to: 0
 11828   0015C0  AE48               	btfss	(___fladd@b+2)^0,7,c
 11829   0015C2  EFE5  F00A         	goto	u7041
 11830   0015C6  EFE7  F00A         	goto	u7040
 11831   0015CA                     u7041:
 11832   0015CA  EFE8  F00A         	goto	l6296
 11833   0015CE                     u7040:
 11834   0015CE                     
 11835                           ; BSR set to: 0
 11836   0015CE  8162               	bsf	___fladd@bexp& (0+255),0,b
 11837   0015D0                     l6296:
 11838                           
 11839                           ; BSR set to: 0
 11840   0015D0  5162               	movf	___fladd@bexp& (0+255),w,b
 11841   0015D2  B4D8               	btfsc	status,2,c
 11842   0015D4  EFEE  F00A         	goto	u7051
 11843   0015D8  EFF0  F00A         	goto	u7050
 11844   0015DC                     u7051:
 11845   0015DC  EF05  F00B         	goto	l6306
 11846   0015E0                     u7050:
 11847   0015E0                     
 11848                           ; BSR set to: 0
 11849   0015E0  2962               	incf	___fladd@bexp& (0+255),w,b
 11850   0015E2  A4D8               	btfss	status,2,c
 11851   0015E4  EFF6  F00A         	goto	u7061
 11852   0015E8  EFF8  F00A         	goto	u7060
 11853   0015EC                     u7061:
 11854   0015EC  EF00  F00B         	goto	l6302
 11855   0015F0                     u7060:
 11856   0015F0                     
 11857                           ; BSR set to: 0
 11858   0015F0  0E00               	movlw	0
 11859   0015F2  6E46               	movwf	___fladd@b^0,c
 11860   0015F4  0E00               	movlw	0
 11861   0015F6  6E47               	movwf	(___fladd@b+1)^0,c
 11862   0015F8  0E00               	movlw	0
 11863   0015FA  6E48               	movwf	(___fladd@b+2)^0,c
 11864   0015FC  0E00               	movlw	0
 11865   0015FE  6E49               	movwf	(___fladd@b+3)^0,c
 11866   001600                     l6302:
 11867                           
 11868                           ; BSR set to: 0
 11869   001600  8E48               	bsf	(___fladd@b+2)^0,7,c
 11870   001602                     
 11871                           ; BSR set to: 0
 11872   001602  0E00               	movlw	0
 11873   001604  6E49               	movwf	(___fladd@b+3)^0,c
 11874   001606  EF0D  F00B         	goto	l6308
 11875   00160A                     l6306:
 11876                           
 11877                           ; BSR set to: 0
 11878   00160A  0E00               	movlw	0
 11879   00160C  6E46               	movwf	___fladd@b^0,c
 11880   00160E  0E00               	movlw	0
 11881   001610  6E47               	movwf	(___fladd@b+1)^0,c
 11882   001612  0E00               	movlw	0
 11883   001614  6E48               	movwf	(___fladd@b+2)^0,c
 11884   001616  0E00               	movlw	0
 11885   001618  6E49               	movwf	(___fladd@b+3)^0,c
 11886   00161A                     l6308:
 11887                           
 11888                           ; BSR set to: 0
 11889   00161A  504D               	movf	(___fladd@a+3)^0,w,c
 11890   00161C  0B80               	andlw	128
 11891   00161E  6F61               	movwf	___fladd@aexp& (0+255),b
 11892   001620                     
 11893                           ; BSR set to: 0
 11894   001620  5160               	movf	___fladd@signs& (0+255),w,b
 11895   001622  1961               	xorwf	___fladd@aexp& (0+255),w,b
 11896   001624  B4D8               	btfsc	status,2,c
 11897   001626  EF17  F00B         	goto	u7071
 11898   00162A  EF19  F00B         	goto	u7070
 11899   00162E                     u7071:
 11900   00162E  EF1A  F00B         	goto	l6314
 11901   001632                     u7070:
 11902   001632                     
 11903                           ; BSR set to: 0
 11904   001632  8D60               	bsf	___fladd@signs& (0+255),6,b
 11905   001634                     l6314:
 11906                           
 11907                           ; BSR set to: 0
 11908   001634  504D               	movf	(___fladd@a+3)^0,w,c
 11909   001636  244D               	addwf	(___fladd@a+3)^0,w,c
 11910   001638  6F61               	movwf	___fladd@aexp& (0+255),b
 11911   00163A                     
 11912                           ; BSR set to: 0
 11913   00163A  AE4C               	btfss	(___fladd@a+2)^0,7,c
 11914   00163C  EF22  F00B         	goto	u7081
 11915   001640  EF24  F00B         	goto	u7080
 11916   001644                     u7081:
 11917   001644  EF25  F00B         	goto	l6320
 11918   001648                     u7080:
 11919   001648                     
 11920                           ; BSR set to: 0
 11921   001648  8161               	bsf	___fladd@aexp& (0+255),0,b
 11922   00164A                     l6320:
 11923                           
 11924                           ; BSR set to: 0
 11925   00164A  5161               	movf	___fladd@aexp& (0+255),w,b
 11926   00164C  B4D8               	btfsc	status,2,c
 11927   00164E  EF2B  F00B         	goto	u7091
 11928   001652  EF2D  F00B         	goto	u7090
 11929   001656                     u7091:
 11930   001656  EF42  F00B         	goto	l6330
 11931   00165A                     u7090:
 11932   00165A                     
 11933                           ; BSR set to: 0
 11934   00165A  2961               	incf	___fladd@aexp& (0+255),w,b
 11935   00165C  A4D8               	btfss	status,2,c
 11936   00165E  EF33  F00B         	goto	u7101
 11937   001662  EF35  F00B         	goto	u7100
 11938   001666                     u7101:
 11939   001666  EF3D  F00B         	goto	l6326
 11940   00166A                     u7100:
 11941   00166A                     
 11942                           ; BSR set to: 0
 11943   00166A  0E00               	movlw	0
 11944   00166C  6E4A               	movwf	___fladd@a^0,c
 11945   00166E  0E00               	movlw	0
 11946   001670  6E4B               	movwf	(___fladd@a+1)^0,c
 11947   001672  0E00               	movlw	0
 11948   001674  6E4C               	movwf	(___fladd@a+2)^0,c
 11949   001676  0E00               	movlw	0
 11950   001678  6E4D               	movwf	(___fladd@a+3)^0,c
 11951   00167A                     l6326:
 11952                           
 11953                           ; BSR set to: 0
 11954   00167A  8E4C               	bsf	(___fladd@a+2)^0,7,c
 11955   00167C                     
 11956                           ; BSR set to: 0
 11957   00167C  0E00               	movlw	0
 11958   00167E  6E4D               	movwf	(___fladd@a+3)^0,c
 11959   001680  EF4A  F00B         	goto	l6332
 11960   001684                     l6330:
 11961                           
 11962                           ; BSR set to: 0
 11963   001684  0E00               	movlw	0
 11964   001686  6E4A               	movwf	___fladd@a^0,c
 11965   001688  0E00               	movlw	0
 11966   00168A  6E4B               	movwf	(___fladd@a+1)^0,c
 11967   00168C  0E00               	movlw	0
 11968   00168E  6E4C               	movwf	(___fladd@a+2)^0,c
 11969   001690  0E00               	movlw	0
 11970   001692  6E4D               	movwf	(___fladd@a+3)^0,c
 11971   001694                     l6332:
 11972                           
 11973                           ; BSR set to: 0
 11974   001694  5162               	movf	___fladd@bexp& (0+255),w,b
 11975   001696  5D61               	subwf	___fladd@aexp& (0+255),w,b
 11976   001698  B0D8               	btfsc	status,0,c
 11977   00169A  EF51  F00B         	goto	u7111
 11978   00169E  EF53  F00B         	goto	u7110
 11979   0016A2                     u7111:
 11980   0016A2  EF7A  F00B         	goto	l6368
 11981   0016A6                     u7110:
 11982   0016A6                     
 11983                           ; BSR set to: 0
 11984   0016A6  AD60               	btfss	___fladd@signs& (0+255),6,b
 11985   0016A8  EF58  F00B         	goto	u7121
 11986   0016AC  EF5A  F00B         	goto	u7120
 11987   0016B0                     u7121:
 11988   0016B0  EF5C  F00B         	goto	l6338
 11989   0016B4                     u7120:
 11990   0016B4                     
 11991                           ; BSR set to: 0
 11992   0016B4  0E80               	movlw	128
 11993   0016B6  1B60               	xorwf	___fladd@signs& (0+255),f,b
 11994   0016B8                     l6338:
 11995                           
 11996                           ; BSR set to: 0
 11997   0016B8  C062  F063         	movff	___fladd@bexp,___fladd@grs
 11998   0016BC                     
 11999                           ; BSR set to: 0
 12000   0016BC  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 12001   0016C0                     
 12002                           ; BSR set to: 0
 12003   0016C0  C063  F061         	movff	___fladd@grs,___fladd@aexp
 12004   0016C4                     
 12005                           ; BSR set to: 0
 12006   0016C4  C046  F063         	movff	___fladd@b,___fladd@grs
 12007   0016C8                     
 12008                           ; BSR set to: 0
 12009   0016C8  C04A  F046         	movff	___fladd@a,___fladd@b
 12010   0016CC                     
 12011                           ; BSR set to: 0
 12012   0016CC  C063  F04A         	movff	___fladd@grs,___fladd@a
 12013   0016D0                     
 12014                           ; BSR set to: 0
 12015   0016D0  C047  F063         	movff	___fladd@b+1,___fladd@grs
 12016   0016D4                     
 12017                           ; BSR set to: 0
 12018   0016D4  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
 12019   0016D8                     
 12020                           ; BSR set to: 0
 12021   0016D8  C063  F04B         	movff	___fladd@grs,___fladd@a+1
 12022   0016DC                     
 12023                           ; BSR set to: 0
 12024   0016DC  C048  F063         	movff	___fladd@b+2,___fladd@grs
 12025   0016E0                     
 12026                           ; BSR set to: 0
 12027   0016E0  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
 12028   0016E4                     
 12029                           ; BSR set to: 0
 12030   0016E4  C063  F04C         	movff	___fladd@grs,___fladd@a+2
 12031   0016E8                     
 12032                           ; BSR set to: 0
 12033   0016E8  C049  F063         	movff	___fladd@b+3,___fladd@grs
 12034   0016EC                     
 12035                           ; BSR set to: 0
 12036   0016EC  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
 12037   0016F0                     
 12038                           ; BSR set to: 0
 12039   0016F0  C063  F04D         	movff	___fladd@grs,___fladd@a+3
 12040   0016F4                     l6368:
 12041                           
 12042                           ; BSR set to: 0
 12043   0016F4  0E00               	movlw	0
 12044   0016F6  6F63               	movwf	___fladd@grs& (0+255),b
 12045   0016F8                     
 12046                           ; BSR set to: 0
 12047   0016F8  5162               	movf	___fladd@bexp& (0+255),w,b
 12048   0016FA  C061  F04E         	movff	___fladd@aexp,??___fladd
 12049   0016FE  6A4F               	clrf	(??___fladd+1)^0,c
 12050   001700  5E4E               	subwf	??___fladd^0,f,c
 12051   001702  0E00               	movlw	0
 12052   001704  5A4F               	subwfb	(??___fladd+1)^0,f,c
 12053   001706  BE4F               	btfsc	(??___fladd+1)^0,7,c
 12054   001708  EF8F  F00B         	goto	u7131
 12055   00170C  504F               	movf	(??___fladd+1)^0,w,c
 12056   00170E  E109               	bnz	u7130
 12057   001710  0E1A               	movlw	26
 12058   001712  5C4E               	subwf	??___fladd^0,w,c
 12059   001714  A0D8               	btfss	status,0,c
 12060   001716  EF8F  F00B         	goto	u7131
 12061   00171A  EF91  F00B         	goto	u7130
 12062   00171E                     u7131:
 12063   00171E  EFC8  F00B         	goto	l1239
 12064   001722                     u7130:
 12065   001722                     
 12066                           ; BSR set to: 0
 12067   001722  5046               	movf	___fladd@b^0,w,c
 12068   001724  1047               	iorwf	(___fladd@b+1)^0,w,c
 12069   001726  1048               	iorwf	(___fladd@b+2)^0,w,c
 12070   001728  1049               	iorwf	(___fladd@b+3)^0,w,c
 12071   00172A  A4D8               	btfss	status,2,c
 12072   00172C  EF9A  F00B         	goto	u7141
 12073   001730  EF9D  F00B         	goto	u7140
 12074   001734                     u7141:
 12075   001734  0E01               	movlw	1
 12076   001736  EF9E  F00B         	goto	u7150
 12077   00173A                     u7140:
 12078   00173A  0E00               	movlw	0
 12079   00173C                     u7150:
 12080   00173C  6F63               	movwf	___fladd@grs& (0+255),b
 12081   00173E                     
 12082                           ; BSR set to: 0
 12083   00173E  0E00               	movlw	0
 12084   001740  6E46               	movwf	___fladd@b^0,c
 12085   001742  0E00               	movlw	0
 12086   001744  6E47               	movwf	(___fladd@b+1)^0,c
 12087   001746  0E00               	movlw	0
 12088   001748  6E48               	movwf	(___fladd@b+2)^0,c
 12089   00174A  0E00               	movlw	0
 12090   00174C  6E49               	movwf	(___fladd@b+3)^0,c
 12091   00174E                     
 12092                           ; BSR set to: 0
 12093   00174E  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 12094   001752  EFD1  F00B         	goto	l1238
 12095   001756                     l1240:
 12096                           
 12097                           ; BSR set to: 0
 12098   001756  A163               	btfss	___fladd@grs& (0+255),0,b
 12099   001758  EFB0  F00B         	goto	u7161
 12100   00175C  EFB2  F00B         	goto	u7160
 12101   001760                     u7161:
 12102   001760  EFB8  F00B         	goto	l6380
 12103   001764                     u7160:
 12104   001764                     
 12105                           ; BSR set to: 0
 12106   001764  90D8               	bcf	status,0,c
 12107   001766  3163               	rrcf	___fladd@grs& (0+255),w,b
 12108   001768  0901               	iorlw	1
 12109   00176A  6F63               	movwf	___fladd@grs& (0+255),b
 12110   00176C  EFBA  F00B         	goto	l6382
 12111   001770                     l6380:
 12112                           
 12113                           ; BSR set to: 0
 12114   001770  90D8               	bcf	status,0,c
 12115   001772  3363               	rrcf	___fladd@grs& (0+255),f,b
 12116   001774                     l6382:
 12117                           
 12118                           ; BSR set to: 0
 12119   001774  A046               	btfss	___fladd@b^0,0,c
 12120   001776  EFBF  F00B         	goto	u7171
 12121   00177A  EFC1  F00B         	goto	u7170
 12122   00177E                     u7171:
 12123   00177E  EFC2  F00B         	goto	l6386
 12124   001782                     u7170:
 12125   001782                     
 12126                           ; BSR set to: 0
 12127   001782  8F63               	bsf	___fladd@grs& (0+255),7,b
 12128   001784                     l6386:
 12129                           
 12130                           ; BSR set to: 0
 12131   001784  3449               	rlcf	(___fladd@b+3)^0,w,c
 12132   001786  3249               	rrcf	(___fladd@b+3)^0,f,c
 12133   001788  3248               	rrcf	(___fladd@b+2)^0,f,c
 12134   00178A  3247               	rrcf	(___fladd@b+1)^0,f,c
 12135   00178C  3246               	rrcf	___fladd@b^0,f,c
 12136   00178E                     
 12137                           ; BSR set to: 0
 12138   00178E  2B62               	incf	___fladd@bexp& (0+255),f,b
 12139   001790                     l1239:
 12140                           
 12141                           ; BSR set to: 0
 12142   001790  5161               	movf	___fladd@aexp& (0+255),w,b
 12143   001792  5D62               	subwf	___fladd@bexp& (0+255),w,b
 12144   001794  A0D8               	btfss	status,0,c
 12145   001796  EFCF  F00B         	goto	u7181
 12146   00179A  EFD1  F00B         	goto	u7180
 12147   00179E                     u7181:
 12148   00179E  EFAB  F00B         	goto	l1240
 12149   0017A2                     u7180:
 12150   0017A2                     l1238:
 12151                           
 12152                           ; BSR set to: 0
 12153   0017A2  BD60               	btfsc	___fladd@signs& (0+255),6,b
 12154   0017A4  EFD6  F00B         	goto	u7191
 12155   0017A8  EFD8  F00B         	goto	u7190
 12156   0017AC                     u7191:
 12157   0017AC  EF18  F00C         	goto	l6414
 12158   0017B0                     u7190:
 12159   0017B0                     
 12160                           ; BSR set to: 0
 12161   0017B0  5162               	movf	___fladd@bexp& (0+255),w,b
 12162   0017B2  A4D8               	btfss	status,2,c
 12163   0017B4  EFDE  F00B         	goto	u7201
 12164   0017B8  EFE0  F00B         	goto	u7200
 12165   0017BC                     u7201:
 12166   0017BC  EFEA  F00B         	goto	l6396
 12167   0017C0                     u7200:
 12168   0017C0                     
 12169                           ; BSR set to: 0
 12170   0017C0  0E00               	movlw	0
 12171   0017C2  6E46               	movwf	?___fladd^0,c
 12172   0017C4  0E00               	movlw	0
 12173   0017C6  6E47               	movwf	(?___fladd+1)^0,c
 12174   0017C8  0E00               	movlw	0
 12175   0017CA  6E48               	movwf	(?___fladd+2)^0,c
 12176   0017CC  0E00               	movlw	0
 12177   0017CE  6E49               	movwf	(?___fladd+3)^0,c
 12178   0017D0  EF39  F00D         	goto	l1247
 12179   0017D4                     l6396:
 12180                           
 12181                           ; BSR set to: 0
 12182   0017D4  504A               	movf	___fladd@a^0,w,c
 12183   0017D6  2646               	addwf	___fladd@b^0,f,c
 12184   0017D8  504B               	movf	(___fladd@a+1)^0,w,c
 12185   0017DA  2247               	addwfc	(___fladd@b+1)^0,f,c
 12186   0017DC  504C               	movf	(___fladd@a+2)^0,w,c
 12187   0017DE  2248               	addwfc	(___fladd@b+2)^0,f,c
 12188   0017E0  504D               	movf	(___fladd@a+3)^0,w,c
 12189   0017E2  2249               	addwfc	(___fladd@b+3)^0,f,c
 12190   0017E4                     
 12191                           ; BSR set to: 0
 12192   0017E4  A049               	btfss	(___fladd@b+3)^0,0,c
 12193   0017E6  EFF7  F00B         	goto	u7211
 12194   0017EA  EFF9  F00B         	goto	u7210
 12195   0017EE                     u7211:
 12196   0017EE  EFA5  F00C         	goto	l6450
 12197   0017F2                     u7210:
 12198   0017F2                     
 12199                           ; BSR set to: 0
 12200   0017F2  A163               	btfss	___fladd@grs& (0+255),0,b
 12201   0017F4  EFFE  F00B         	goto	u7221
 12202   0017F8  EF00  F00C         	goto	u7220
 12203   0017FC                     u7221:
 12204   0017FC  EF06  F00C         	goto	l6404
 12205   001800                     u7220:
 12206   001800                     
 12207                           ; BSR set to: 0
 12208   001800  90D8               	bcf	status,0,c
 12209   001802  3163               	rrcf	___fladd@grs& (0+255),w,b
 12210   001804  0901               	iorlw	1
 12211   001806  6F63               	movwf	___fladd@grs& (0+255),b
 12212   001808  EF08  F00C         	goto	l6406
 12213   00180C                     l6404:
 12214                           
 12215                           ; BSR set to: 0
 12216   00180C  90D8               	bcf	status,0,c
 12217   00180E  3363               	rrcf	___fladd@grs& (0+255),f,b
 12218   001810                     l6406:
 12219                           
 12220                           ; BSR set to: 0
 12221   001810  A046               	btfss	___fladd@b^0,0,c
 12222   001812  EF0D  F00C         	goto	u7231
 12223   001816  EF0F  F00C         	goto	u7230
 12224   00181A                     u7231:
 12225   00181A  EF10  F00C         	goto	l6410
 12226   00181E                     u7230:
 12227   00181E                     
 12228                           ; BSR set to: 0
 12229   00181E  8F63               	bsf	___fladd@grs& (0+255),7,b
 12230   001820                     l6410:
 12231                           
 12232                           ; BSR set to: 0
 12233   001820  3449               	rlcf	(___fladd@b+3)^0,w,c
 12234   001822  3249               	rrcf	(___fladd@b+3)^0,f,c
 12235   001824  3248               	rrcf	(___fladd@b+2)^0,f,c
 12236   001826  3247               	rrcf	(___fladd@b+1)^0,f,c
 12237   001828  3246               	rrcf	___fladd@b^0,f,c
 12238   00182A                     
 12239                           ; BSR set to: 0
 12240   00182A  2B62               	incf	___fladd@bexp& (0+255),f,b
 12241   00182C  EFA5  F00C         	goto	l6450
 12242   001830                     l6414:
 12243                           
 12244                           ; BSR set to: 0
 12245   001830  504A               	movf	___fladd@a^0,w,c
 12246   001832  5C46               	subwf	___fladd@b^0,w,c
 12247   001834  504B               	movf	(___fladd@a+1)^0,w,c
 12248   001836  5847               	subwfb	(___fladd@b+1)^0,w,c
 12249   001838  504C               	movf	(___fladd@a+2)^0,w,c
 12250   00183A  5848               	subwfb	(___fladd@b+2)^0,w,c
 12251   00183C  5049               	movf	(___fladd@b+3)^0,w,c
 12252   00183E  0A80               	xorlw	128
 12253   001840  6E4E               	movwf	??___fladd^0,c
 12254   001842  504D               	movf	(___fladd@a+3)^0,w,c
 12255   001844  0A80               	xorlw	128
 12256   001846  584E               	subwfb	??___fladd^0,w,c
 12257   001848  B0D8               	btfsc	status,0,c
 12258   00184A  EF29  F00C         	goto	u7241
 12259   00184E  EF2B  F00C         	goto	u7240
 12260   001852                     u7241:
 12261   001852  EF56  F00C         	goto	l6424
 12262   001856                     u7240:
 12263   001856                     
 12264                           ; BSR set to: 0
 12265   001856  5046               	movf	___fladd@b^0,w,c
 12266   001858  5C4A               	subwf	___fladd@a^0,w,c
 12267   00185A  6E4E               	movwf	??___fladd^0,c
 12268   00185C  5047               	movf	(___fladd@b+1)^0,w,c
 12269   00185E  584B               	subwfb	(___fladd@a+1)^0,w,c
 12270   001860  6E4F               	movwf	(??___fladd+1)^0,c
 12271   001862  5048               	movf	(___fladd@b+2)^0,w,c
 12272   001864  584C               	subwfb	(___fladd@a+2)^0,w,c
 12273   001866  6E50               	movwf	(??___fladd+2)^0,c
 12274   001868  5049               	movf	(___fladd@b+3)^0,w,c
 12275   00186A  584D               	subwfb	(___fladd@a+3)^0,w,c
 12276   00186C  6E51               	movwf	(??___fladd+3)^0,c
 12277   00186E  0EFF               	movlw	255
 12278   001870  244E               	addwf	??___fladd^0,w,c
 12279   001872  6E46               	movwf	___fladd@b^0,c
 12280   001874  0EFF               	movlw	255
 12281   001876  204F               	addwfc	(??___fladd+1)^0,w,c
 12282   001878  6E47               	movwf	(___fladd@b+1)^0,c
 12283   00187A  0EFF               	movlw	255
 12284   00187C  2050               	addwfc	(??___fladd+2)^0,w,c
 12285   00187E  6E48               	movwf	(___fladd@b+2)^0,c
 12286   001880  0EFF               	movlw	255
 12287   001882  2051               	addwfc	(??___fladd+3)^0,w,c
 12288   001884  6E49               	movwf	(___fladd@b+3)^0,c
 12289   001886  0E80               	movlw	128
 12290   001888  1B60               	xorwf	___fladd@signs& (0+255),f,b
 12291   00188A                     
 12292                           ; BSR set to: 0
 12293   00188A  6D63               	negf	___fladd@grs& (0+255),b
 12294   00188C                     
 12295                           ; BSR set to: 0
 12296   00188C  5163               	movf	___fladd@grs& (0+255),w,b
 12297   00188E  A4D8               	btfss	status,2,c
 12298   001890  EF4C  F00C         	goto	u7251
 12299   001894  EF4E  F00C         	goto	u7250
 12300   001898                     u7251:
 12301   001898  EF5E  F00C         	goto	l1255
 12302   00189C                     u7250:
 12303   00189C                     
 12304                           ; BSR set to: 0
 12305   00189C  0E01               	movlw	1
 12306   00189E  2646               	addwf	___fladd@b^0,f,c
 12307   0018A0  0E00               	movlw	0
 12308   0018A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 12309   0018A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 12310   0018A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 12311   0018A8  EF5E  F00C         	goto	l1255
 12312   0018AC                     l6424:
 12313                           
 12314                           ; BSR set to: 0
 12315   0018AC  504A               	movf	___fladd@a^0,w,c
 12316   0018AE  5E46               	subwf	___fladd@b^0,f,c
 12317   0018B0  504B               	movf	(___fladd@a+1)^0,w,c
 12318   0018B2  5A47               	subwfb	(___fladd@b+1)^0,f,c
 12319   0018B4  504C               	movf	(___fladd@a+2)^0,w,c
 12320   0018B6  5A48               	subwfb	(___fladd@b+2)^0,f,c
 12321   0018B8  504D               	movf	(___fladd@a+3)^0,w,c
 12322   0018BA  5A49               	subwfb	(___fladd@b+3)^0,f,c
 12323   0018BC                     l1255:
 12324                           
 12325                           ; BSR set to: 0
 12326   0018BC  5046               	movf	___fladd@b^0,w,c
 12327   0018BE  1047               	iorwf	(___fladd@b+1)^0,w,c
 12328   0018C0  1048               	iorwf	(___fladd@b+2)^0,w,c
 12329   0018C2  1049               	iorwf	(___fladd@b+3)^0,w,c
 12330   0018C4  A4D8               	btfss	status,2,c
 12331   0018C6  EF67  F00C         	goto	u7261
 12332   0018CA  EF69  F00C         	goto	u7260
 12333   0018CE                     u7261:
 12334   0018CE  EF9E  F00C         	goto	l6448
 12335   0018D2                     u7260:
 12336   0018D2                     
 12337                           ; BSR set to: 0
 12338   0018D2  5163               	movf	___fladd@grs& (0+255),w,b
 12339   0018D4  A4D8               	btfss	status,2,c
 12340   0018D6  EF6F  F00C         	goto	u7271
 12341   0018DA  EF71  F00C         	goto	u7270
 12342   0018DE                     u7271:
 12343   0018DE  EF9E  F00C         	goto	l6448
 12344   0018E2                     u7270:
 12345   0018E2                     
 12346                           ; BSR set to: 0
 12347   0018E2  0E00               	movlw	0
 12348   0018E4  6E46               	movwf	?___fladd^0,c
 12349   0018E6  0E00               	movlw	0
 12350   0018E8  6E47               	movwf	(?___fladd+1)^0,c
 12351   0018EA  0E00               	movlw	0
 12352   0018EC  6E48               	movwf	(?___fladd+2)^0,c
 12353   0018EE  0E00               	movlw	0
 12354   0018F0  6E49               	movwf	(?___fladd+3)^0,c
 12355   0018F2  EF39  F00D         	goto	l1247
 12356   0018F6                     l6432:
 12357                           
 12358                           ; BSR set to: 0
 12359   0018F6  90D8               	bcf	status,0,c
 12360   0018F8  3646               	rlcf	___fladd@b^0,f,c
 12361   0018FA  3647               	rlcf	(___fladd@b+1)^0,f,c
 12362   0018FC  3648               	rlcf	(___fladd@b+2)^0,f,c
 12363   0018FE  3649               	rlcf	(___fladd@b+3)^0,f,c
 12364   001900                     
 12365                           ; BSR set to: 0
 12366   001900  AF63               	btfss	___fladd@grs& (0+255),7,b
 12367   001902  EF85  F00C         	goto	u7281
 12368   001906  EF87  F00C         	goto	u7280
 12369   00190A                     u7281:
 12370   00190A  EF88  F00C         	goto	l6438
 12371   00190E                     u7280:
 12372   00190E                     
 12373                           ; BSR set to: 0
 12374   00190E  8046               	bsf	___fladd@b^0,0,c
 12375   001910                     l6438:
 12376                           
 12377                           ; BSR set to: 0
 12378   001910  A163               	btfss	___fladd@grs& (0+255),0,b
 12379   001912  EF8D  F00C         	goto	u7291
 12380   001916  EF8F  F00C         	goto	u7290
 12381   00191A                     u7291:
 12382   00191A  EF93  F00C         	goto	l6442
 12383   00191E                     u7290:
 12384   00191E                     
 12385                           ; BSR set to: 0
 12386   00191E  80D8               	bsf	status,0,c
 12387   001920  3763               	rlcf	___fladd@grs& (0+255),f,b
 12388   001922  EF95  F00C         	goto	l6444
 12389   001926                     l6442:
 12390                           
 12391                           ; BSR set to: 0
 12392   001926  90D8               	bcf	status,0,c
 12393   001928  3763               	rlcf	___fladd@grs& (0+255),f,b
 12394   00192A                     l6444:
 12395                           
 12396                           ; BSR set to: 0
 12397   00192A  5162               	movf	___fladd@bexp& (0+255),w,b
 12398   00192C  B4D8               	btfsc	status,2,c
 12399   00192E  EF9B  F00C         	goto	u7301
 12400   001932  EF9D  F00C         	goto	u7300
 12401   001936                     u7301:
 12402   001936  EF9E  F00C         	goto	l6448
 12403   00193A                     u7300:
 12404   00193A                     
 12405                           ; BSR set to: 0
 12406   00193A  0762               	decf	___fladd@bexp& (0+255),f,b
 12407   00193C                     l6448:
 12408                           
 12409                           ; BSR set to: 0
 12410   00193C  AE48               	btfss	(___fladd@b+2)^0,7,c
 12411   00193E  EFA3  F00C         	goto	u7311
 12412   001942  EFA5  F00C         	goto	u7310
 12413   001946                     u7311:
 12414   001946  EF7B  F00C         	goto	l6432
 12415   00194A                     u7310:
 12416   00194A                     l6450:
 12417                           
 12418                           ; BSR set to: 0
 12419   00194A  0E00               	movlw	0
 12420   00194C  6F61               	movwf	___fladd@aexp& (0+255),b
 12421   00194E                     
 12422                           ; BSR set to: 0
 12423   00194E  AF63               	btfss	___fladd@grs& (0+255),7,b
 12424   001950  EFAC  F00C         	goto	u7321
 12425   001954  EFAE  F00C         	goto	u7320
 12426   001958                     u7321:
 12427   001958  EFC6  F00C         	goto	l1264
 12428   00195C                     u7320:
 12429   00195C                     
 12430                           ; BSR set to: 0
 12431   00195C  C063  F04E         	movff	___fladd@grs,??___fladd
 12432   001960  0E7F               	movlw	127
 12433   001962  164E               	andwf	??___fladd^0,f,c
 12434   001964  B4D8               	btfsc	status,2,c
 12435   001966  EFB7  F00C         	goto	u7331
 12436   00196A  EFB9  F00C         	goto	u7330
 12437   00196E                     u7331:
 12438   00196E  EFBD  F00C         	goto	l1265
 12439   001972                     u7330:
 12440   001972                     l6456:
 12441                           
 12442                           ; BSR set to: 0
 12443   001972  0E01               	movlw	1
 12444   001974  6F61               	movwf	___fladd@aexp& (0+255),b
 12445   001976  EFC6  F00C         	goto	l1264
 12446   00197A                     l1265:
 12447                           
 12448                           ; BSR set to: 0
 12449   00197A  A046               	btfss	___fladd@b^0,0,c
 12450   00197C  EFC2  F00C         	goto	u7341
 12451   001980  EFC4  F00C         	goto	u7340
 12452   001984                     u7341:
 12453   001984  EFC6  F00C         	goto	l1264
 12454   001988                     u7340:
 12455   001988  EFB9  F00C         	goto	l6456
 12456   00198C                     l1264:
 12457                           
 12458                           ; BSR set to: 0
 12459   00198C  5161               	movf	___fladd@aexp& (0+255),w,b
 12460   00198E  B4D8               	btfsc	status,2,c
 12461   001990  EFCC  F00C         	goto	u7351
 12462   001994  EFCE  F00C         	goto	u7350
 12463   001998                     u7351:
 12464   001998  EFF9  F00C         	goto	l6468
 12465   00199C                     u7350:
 12466   00199C                     
 12467                           ; BSR set to: 0
 12468   00199C  0E01               	movlw	1
 12469   00199E  2646               	addwf	___fladd@b^0,f,c
 12470   0019A0  0E00               	movlw	0
 12471   0019A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 12472   0019A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 12473   0019A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 12474   0019A8                     
 12475                           ; BSR set to: 0
 12476   0019A8  A049               	btfss	(___fladd@b+3)^0,0,c
 12477   0019AA  EFD9  F00C         	goto	u7361
 12478   0019AE  EFDB  F00C         	goto	u7360
 12479   0019B2                     u7361:
 12480   0019B2  EFF9  F00C         	goto	l6468
 12481   0019B6                     u7360:
 12482   0019B6                     
 12483                           ; BSR set to: 0
 12484   0019B6  C046  F04E         	movff	___fladd@b,??___fladd
 12485   0019BA  C047  F04F         	movff	___fladd@b+1,??___fladd+1
 12486   0019BE  C048  F050         	movff	___fladd@b+2,??___fladd+2
 12487   0019C2  C049  F051         	movff	___fladd@b+3,??___fladd+3
 12488   0019C6  3451               	rlcf	(??___fladd+3)^0,w,c
 12489   0019C8  3251               	rrcf	(??___fladd+3)^0,f,c
 12490   0019CA  3250               	rrcf	(??___fladd+2)^0,f,c
 12491   0019CC  324F               	rrcf	(??___fladd+1)^0,f,c
 12492   0019CE  324E               	rrcf	??___fladd^0,f,c
 12493   0019D0  C04E  F046         	movff	??___fladd,___fladd@b
 12494   0019D4  C04F  F047         	movff	??___fladd+1,___fladd@b+1
 12495   0019D8  C050  F048         	movff	??___fladd+2,___fladd@b+2
 12496   0019DC  C051  F049         	movff	??___fladd+3,___fladd@b+3
 12497   0019E0  2962               	incf	___fladd@bexp& (0+255),w,b
 12498   0019E2  B4D8               	btfsc	status,2,c
 12499   0019E4  EFF6  F00C         	goto	u7371
 12500   0019E8  EFF8  F00C         	goto	u7370
 12501   0019EC                     u7371:
 12502   0019EC  EFF9  F00C         	goto	l6468
 12503   0019F0                     u7370:
 12504   0019F0                     
 12505                           ; BSR set to: 0
 12506   0019F0  2B62               	incf	___fladd@bexp& (0+255),f,b
 12507   0019F2                     l6468:
 12508                           
 12509                           ; BSR set to: 0
 12510   0019F2  2962               	incf	___fladd@bexp& (0+255),w,b
 12511   0019F4  B4D8               	btfsc	status,2,c
 12512   0019F6  EFFF  F00C         	goto	u7381
 12513   0019FA  EF01  F00D         	goto	u7380
 12514   0019FE                     u7381:
 12515   0019FE  EF09  F00D         	goto	l6472
 12516   001A02                     u7380:
 12517   001A02                     
 12518                           ; BSR set to: 0
 12519   001A02  5162               	movf	___fladd@bexp& (0+255),w,b
 12520   001A04  A4D8               	btfss	status,2,c
 12521   001A06  EF07  F00D         	goto	u7391
 12522   001A0A  EF09  F00D         	goto	u7390
 12523   001A0E                     u7391:
 12524   001A0E  EF1B  F00D         	goto	l6476
 12525   001A12                     u7390:
 12526   001A12                     l6472:
 12527                           
 12528                           ; BSR set to: 0
 12529   001A12  0E00               	movlw	0
 12530   001A14  6E46               	movwf	___fladd@b^0,c
 12531   001A16  0E00               	movlw	0
 12532   001A18  6E47               	movwf	(___fladd@b+1)^0,c
 12533   001A1A  0E00               	movlw	0
 12534   001A1C  6E48               	movwf	(___fladd@b+2)^0,c
 12535   001A1E  0E00               	movlw	0
 12536   001A20  6E49               	movwf	(___fladd@b+3)^0,c
 12537   001A22  5162               	movf	___fladd@bexp& (0+255),w,b
 12538   001A24  A4D8               	btfss	status,2,c
 12539   001A26  EF17  F00D         	goto	u7401
 12540   001A2A  EF19  F00D         	goto	u7400
 12541   001A2E                     u7401:
 12542   001A2E  EF1B  F00D         	goto	l6476
 12543   001A32                     u7400:
 12544   001A32                     
 12545                           ; BSR set to: 0
 12546   001A32  0E00               	movlw	0
 12547   001A34  6F60               	movwf	___fladd@signs& (0+255),b
 12548   001A36                     l6476:
 12549                           
 12550                           ; BSR set to: 0
 12551   001A36  A162               	btfss	___fladd@bexp& (0+255),0,b
 12552   001A38  EF20  F00D         	goto	u7411
 12553   001A3C  EF22  F00D         	goto	u7410
 12554   001A40                     u7411:
 12555   001A40  EF25  F00D         	goto	l6480
 12556   001A44                     u7410:
 12557   001A44                     
 12558                           ; BSR set to: 0
 12559   001A44  8E48               	bsf	(___fladd@b+2)^0,7,c
 12560   001A46  EF26  F00D         	goto	l6482
 12561   001A4A                     l6480:
 12562                           
 12563                           ; BSR set to: 0
 12564   001A4A  9E48               	bcf	(___fladd@b+2)^0,7,c
 12565   001A4C                     l6482:
 12566                           
 12567                           ; BSR set to: 0
 12568   001A4C  90D8               	bcf	status,0,c
 12569   001A4E  3162               	rrcf	___fladd@bexp& (0+255),w,b
 12570   001A50  6E49               	movwf	(___fladd@b+3)^0,c
 12571   001A52                     
 12572                           ; BSR set to: 0
 12573   001A52  AF60               	btfss	___fladd@signs& (0+255),7,b
 12574   001A54  EF2E  F00D         	goto	u7421
 12575   001A58  EF30  F00D         	goto	u7420
 12576   001A5C                     u7421:
 12577   001A5C  EF31  F00D         	goto	l6488
 12578   001A60                     u7420:
 12579   001A60                     
 12580                           ; BSR set to: 0
 12581   001A60  8E49               	bsf	(___fladd@b+3)^0,7,c
 12582   001A62                     l6488:
 12583                           
 12584                           ; BSR set to: 0
 12585   001A62  C046  F046         	movff	___fladd@b,?___fladd
 12586   001A66  C047  F047         	movff	___fladd@b+1,?___fladd+1
 12587   001A6A  C048  F048         	movff	___fladd@b+2,?___fladd+2
 12588   001A6E  C049  F049         	movff	___fladd@b+3,?___fladd+3
 12589   001A72                     l1247:
 12590                           
 12591                           ; BSR set to: 0
 12592   001A72  0012               	return		;funcret
 12593   001A74                     __end_of___fladd:
 12594                           	callstack 0
 12595                           
 12596 ;; *************** function ___flneg *****************
 12597 ;; Defined at:
 12598 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flneg.c"
 12599 ;; Parameters:    Size  Location     Type
 12600 ;;  f1              4   32[BANK0 ] unsigned char 
 12601 ;; Auto vars:     Size  Location     Type
 12602 ;;		None
 12603 ;; Return value:  Size  Location     Type
 12604 ;;                  4   32[BANK0 ] unsigned char 
 12605 ;; Registers used:
 12606 ;;		wreg, status,2, status,0
 12607 ;; Tracked objects:
 12608 ;;		On entry : 0/0
 12609 ;;		On exit  : 0/0
 12610 ;;		Unchanged: 0/0
 12611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12612 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12615 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12616 ;;Total ram usage:        4 bytes
 12617 ;; Hardware stack levels used: 1
 12618 ;; Hardware stack levels required when called: 1
 12619 ;; This function calls:
 12620 ;;		Nothing
 12621 ;; This function is called by:
 12622 ;;		_efgtoa
 12623 ;;		_sinf
 12624 ;;		___rem_pio2f
 12625 ;; This function uses a non-reentrant model
 12626 ;;
 12627                           
 12628                           	psect	text45
 12629   005052                     __ptext45:
 12630                           	callstack 0
 12631   005052                     ___flneg:
 12632                           	callstack 24
 12633   005052  0100               	movlb	0	; () banked
 12634   005054  5180               	movf	___flneg@f1& (0+255),w,b
 12635   005056  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12636   005058  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12637   00505A  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12638   00505C  B4D8               	btfsc	status,2,c
 12639   00505E  EF33  F028         	goto	u8061
 12640   005062  EF35  F028         	goto	u8060
 12641   005066                     u8061:
 12642   005066  EF3D  F028         	goto	l6902
 12643   00506A                     u8060:
 12644   00506A                     
 12645                           ; BSR set to: 0
 12646   00506A  0E00               	movlw	0
 12647   00506C  1B80               	xorwf	___flneg@f1& (0+255),f,b
 12648   00506E  0E00               	movlw	0
 12649   005070  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12650   005072  0E00               	movlw	0
 12651   005074  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12652   005076  0E80               	movlw	128
 12653   005078  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12654   00507A                     l6902:
 12655                           
 12656                           ; BSR set to: 0
 12657   00507A  C080  F080         	movff	___flneg@f1,?___flneg
 12658   00507E  C081  F081         	movff	___flneg@f1+1,?___flneg+1
 12659   005082  C082  F082         	movff	___flneg@f1+2,?___flneg+2
 12660   005086  C083  F083         	movff	___flneg@f1+3,?___flneg+3
 12661   00508A                     
 12662                           ; BSR set to: 0
 12663   00508A  0012               	return		;funcret
 12664   00508C                     __end_of___flneg:
 12665                           	callstack 0
 12666                           
 12667 ;; *************** function ___flmul *****************
 12668 ;; Defined at:
 12669 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcmul.c"
 12670 ;; Parameters:    Size  Location     Type
 12671 ;;  b               4   19[COMRAM] unsigned char 
 12672 ;;  a               4   23[COMRAM] unsigned char 
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;  prod            4   38[COMRAM] struct .
 12675 ;;  grs             4   33[COMRAM] unsigned long 
 12676 ;;  temp            2   42[COMRAM] struct .
 12677 ;;  bexp            1   37[COMRAM] unsigned char 
 12678 ;;  aexp            1   32[COMRAM] unsigned char 
 12679 ;;  sign            1   31[COMRAM] unsigned char 
 12680 ;; Return value:  Size  Location     Type
 12681 ;;                  4   19[COMRAM] unsigned char 
 12682 ;; Registers used:
 12683 ;;		wreg, status,2, status,0, prodl, prodh
 12684 ;; Tracked objects:
 12685 ;;		On entry : 0/0
 12686 ;;		On exit  : 0/0
 12687 ;;		Unchanged: 0/0
 12688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12689 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12690 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12691 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12692 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12693 ;;Total ram usage:       25 bytes
 12694 ;; Hardware stack levels used: 1
 12695 ;; Hardware stack levels required when called: 1
 12696 ;; This function calls:
 12697 ;;		Nothing
 12698 ;; This function is called by:
 12699 ;;		_runDAC
 12700 ;;		_runADC
 12701 ;;		_efgtoa
 12702 ;;		___cosdf
 12703 ;;		___rem_pio2f
 12704 ;;		___sindf
 12705 ;; This function uses a non-reentrant model
 12706 ;;
 12707                           
 12708                           	psect	text46
 12709   001A74                     __ptext46:
 12710                           	callstack 0
 12711   001A74                     ___flmul:
 12712                           	callstack 24
 12713   001A74  5017               	movf	(___flmul@b+3)^0,w,c
 12714   001A76  0B80               	andlw	128
 12715   001A78  6E20               	movwf	___flmul@sign^0,c
 12716   001A7A  5017               	movf	(___flmul@b+3)^0,w,c
 12717   001A7C  2417               	addwf	(___flmul@b+3)^0,w,c
 12718   001A7E  6E26               	movwf	___flmul@bexp^0,c
 12719   001A80  AE16               	btfss	(___flmul@b+2)^0,7,c
 12720   001A82  EF45  F00D         	goto	u7671
 12721   001A86  EF47  F00D         	goto	u7670
 12722   001A8A                     u7671:
 12723   001A8A  EF48  F00D         	goto	l6650
 12724   001A8E                     u7670:
 12725   001A8E  8026               	bsf	___flmul@bexp^0,0,c
 12726   001A90                     l6650:
 12727   001A90  5026               	movf	___flmul@bexp^0,w,c
 12728   001A92  B4D8               	btfsc	status,2,c
 12729   001A94  EF4E  F00D         	goto	u7681
 12730   001A98  EF50  F00D         	goto	u7680
 12731   001A9C                     u7681:
 12732   001A9C  EF63  F00D         	goto	l6658
 12733   001AA0                     u7680:
 12734   001AA0  2826               	incf	___flmul@bexp^0,w,c
 12735   001AA2  A4D8               	btfss	status,2,c
 12736   001AA4  EF56  F00D         	goto	u7691
 12737   001AA8  EF58  F00D         	goto	u7690
 12738   001AAC                     u7691:
 12739   001AAC  EF60  F00D         	goto	l6656
 12740   001AB0                     u7690:
 12741   001AB0  0E00               	movlw	0
 12742   001AB2  6E14               	movwf	___flmul@b^0,c
 12743   001AB4  0E00               	movlw	0
 12744   001AB6  6E15               	movwf	(___flmul@b+1)^0,c
 12745   001AB8  0E00               	movlw	0
 12746   001ABA  6E16               	movwf	(___flmul@b+2)^0,c
 12747   001ABC  0E00               	movlw	0
 12748   001ABE  6E17               	movwf	(___flmul@b+3)^0,c
 12749   001AC0                     l6656:
 12750   001AC0  8E16               	bsf	(___flmul@b+2)^0,7,c
 12751   001AC2  EF6B  F00D         	goto	l6660
 12752   001AC6                     l6658:
 12753   001AC6  0E00               	movlw	0
 12754   001AC8  6E14               	movwf	___flmul@b^0,c
 12755   001ACA  0E00               	movlw	0
 12756   001ACC  6E15               	movwf	(___flmul@b+1)^0,c
 12757   001ACE  0E00               	movlw	0
 12758   001AD0  6E16               	movwf	(___flmul@b+2)^0,c
 12759   001AD2  0E00               	movlw	0
 12760   001AD4  6E17               	movwf	(___flmul@b+3)^0,c
 12761   001AD6                     l6660:
 12762   001AD6  501B               	movf	(___flmul@a+3)^0,w,c
 12763   001AD8  0B80               	andlw	128
 12764   001ADA  1A20               	xorwf	___flmul@sign^0,f,c
 12765   001ADC  501B               	movf	(___flmul@a+3)^0,w,c
 12766   001ADE  241B               	addwf	(___flmul@a+3)^0,w,c
 12767   001AE0  6E21               	movwf	___flmul@aexp^0,c
 12768   001AE2  AE1A               	btfss	(___flmul@a+2)^0,7,c
 12769   001AE4  EF76  F00D         	goto	u7701
 12770   001AE8  EF78  F00D         	goto	u7700
 12771   001AEC                     u7701:
 12772   001AEC  EF79  F00D         	goto	l6668
 12773   001AF0                     u7700:
 12774   001AF0  8021               	bsf	___flmul@aexp^0,0,c
 12775   001AF2                     l6668:
 12776   001AF2  5021               	movf	___flmul@aexp^0,w,c
 12777   001AF4  B4D8               	btfsc	status,2,c
 12778   001AF6  EF7F  F00D         	goto	u7711
 12779   001AFA  EF81  F00D         	goto	u7710
 12780   001AFE                     u7711:
 12781   001AFE  EF94  F00D         	goto	l6676
 12782   001B02                     u7710:
 12783   001B02  2821               	incf	___flmul@aexp^0,w,c
 12784   001B04  A4D8               	btfss	status,2,c
 12785   001B06  EF87  F00D         	goto	u7721
 12786   001B0A  EF89  F00D         	goto	u7720
 12787   001B0E                     u7721:
 12788   001B0E  EF91  F00D         	goto	l6674
 12789   001B12                     u7720:
 12790   001B12  0E00               	movlw	0
 12791   001B14  6E18               	movwf	___flmul@a^0,c
 12792   001B16  0E00               	movlw	0
 12793   001B18  6E19               	movwf	(___flmul@a+1)^0,c
 12794   001B1A  0E00               	movlw	0
 12795   001B1C  6E1A               	movwf	(___flmul@a+2)^0,c
 12796   001B1E  0E00               	movlw	0
 12797   001B20  6E1B               	movwf	(___flmul@a+3)^0,c
 12798   001B22                     l6674:
 12799   001B22  8E1A               	bsf	(___flmul@a+2)^0,7,c
 12800   001B24  EF9C  F00D         	goto	l1324
 12801   001B28                     l6676:
 12802   001B28  0E00               	movlw	0
 12803   001B2A  6E18               	movwf	___flmul@a^0,c
 12804   001B2C  0E00               	movlw	0
 12805   001B2E  6E19               	movwf	(___flmul@a+1)^0,c
 12806   001B30  0E00               	movlw	0
 12807   001B32  6E1A               	movwf	(___flmul@a+2)^0,c
 12808   001B34  0E00               	movlw	0
 12809   001B36  6E1B               	movwf	(___flmul@a+3)^0,c
 12810   001B38                     l1324:
 12811   001B38  5021               	movf	___flmul@aexp^0,w,c
 12812   001B3A  B4D8               	btfsc	status,2,c
 12813   001B3C  EFA2  F00D         	goto	u7731
 12814   001B40  EFA4  F00D         	goto	u7730
 12815   001B44                     u7731:
 12816   001B44  EFAC  F00D         	goto	l6680
 12817   001B48                     u7730:
 12818   001B48  5026               	movf	___flmul@bexp^0,w,c
 12819   001B4A  A4D8               	btfss	status,2,c
 12820   001B4C  EFAA  F00D         	goto	u7741
 12821   001B50  EFAC  F00D         	goto	u7740
 12822   001B54                     u7741:
 12823   001B54  EFB6  F00D         	goto	l6684
 12824   001B58                     u7740:
 12825   001B58                     l6680:
 12826   001B58  0E00               	movlw	0
 12827   001B5A  6E14               	movwf	?___flmul^0,c
 12828   001B5C  0E00               	movlw	0
 12829   001B5E  6E15               	movwf	(?___flmul+1)^0,c
 12830   001B60  0E00               	movlw	0
 12831   001B62  6E16               	movwf	(?___flmul+2)^0,c
 12832   001B64  0E00               	movlw	0
 12833   001B66  6E17               	movwf	(?___flmul+3)^0,c
 12834   001B68  EF4E  F00F         	goto	l1328
 12835   001B6C                     l6684:
 12836   001B6C  501A               	movf	(___flmul@a+2)^0,w,c
 12837   001B6E  0214               	mulwf	___flmul@b^0,c
 12838   001B70  CFF3 F02B          	movff	prodl,___flmul@temp
 12839   001B74  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12840   001B78  502B               	movf	___flmul@temp^0,w,c
 12841   001B7A  6E22               	movwf	___flmul@grs^0,c
 12842   001B7C  6A23               	clrf	(___flmul@grs+1)^0,c
 12843   001B7E  6A24               	clrf	(___flmul@grs+2)^0,c
 12844   001B80  6A25               	clrf	(___flmul@grs+3)^0,c
 12845   001B82  502C               	movf	(___flmul@temp+1)^0,w,c
 12846   001B84  6E27               	movwf	___flmul@prod^0,c
 12847   001B86  6A28               	clrf	(___flmul@prod+1)^0,c
 12848   001B88  6A29               	clrf	(___flmul@prod+2)^0,c
 12849   001B8A  6A2A               	clrf	(___flmul@prod+3)^0,c
 12850   001B8C  5019               	movf	(___flmul@a+1)^0,w,c
 12851   001B8E  0215               	mulwf	(___flmul@b+1)^0,c
 12852   001B90  CFF3 F02B          	movff	prodl,___flmul@temp
 12853   001B94  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12854   001B98  502B               	movf	___flmul@temp^0,w,c
 12855   001B9A  2622               	addwf	___flmul@grs^0,f,c
 12856   001B9C  0E00               	movlw	0
 12857   001B9E  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12858   001BA0  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12859   001BA2  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12860   001BA4  502C               	movf	(___flmul@temp+1)^0,w,c
 12861   001BA6  2627               	addwf	___flmul@prod^0,f,c
 12862   001BA8  0E00               	movlw	0
 12863   001BAA  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12864   001BAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12865   001BAE  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12866   001BB0  5018               	movf	___flmul@a^0,w,c
 12867   001BB2  0216               	mulwf	(___flmul@b+2)^0,c
 12868   001BB4  CFF3 F02B          	movff	prodl,___flmul@temp
 12869   001BB8  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12870   001BBC  502B               	movf	___flmul@temp^0,w,c
 12871   001BBE  2622               	addwf	___flmul@grs^0,f,c
 12872   001BC0  0E00               	movlw	0
 12873   001BC2  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12874   001BC4  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12875   001BC6  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12876   001BC8  502C               	movf	(___flmul@temp+1)^0,w,c
 12877   001BCA  2627               	addwf	___flmul@prod^0,f,c
 12878   001BCC  0E00               	movlw	0
 12879   001BCE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12880   001BD0  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12881   001BD2  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12882   001BD4  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 12883   001BD8  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 12884   001BDC  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 12885   001BE0  6A22               	clrf	___flmul@grs^0,c
 12886   001BE2  5018               	movf	___flmul@a^0,w,c
 12887   001BE4  0215               	mulwf	(___flmul@b+1)^0,c
 12888   001BE6  CFF3 F02B          	movff	prodl,___flmul@temp
 12889   001BEA  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12890   001BEE  502B               	movf	___flmul@temp^0,w,c
 12891   001BF0  2622               	addwf	___flmul@grs^0,f,c
 12892   001BF2  502C               	movf	(___flmul@temp+1)^0,w,c
 12893   001BF4  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12894   001BF6  0E00               	movlw	0
 12895   001BF8  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12896   001BFA  0E00               	movlw	0
 12897   001BFC  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12898   001BFE  5019               	movf	(___flmul@a+1)^0,w,c
 12899   001C00  0214               	mulwf	___flmul@b^0,c
 12900   001C02  CFF3 F02B          	movff	prodl,___flmul@temp
 12901   001C06  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12902   001C0A  502B               	movf	___flmul@temp^0,w,c
 12903   001C0C  2622               	addwf	___flmul@grs^0,f,c
 12904   001C0E  502C               	movf	(___flmul@temp+1)^0,w,c
 12905   001C10  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12906   001C12  0E00               	movlw	0
 12907   001C14  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12908   001C16  0E00               	movlw	0
 12909   001C18  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12910   001C1A  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 12911   001C1E  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 12912   001C22  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 12913   001C26  6A22               	clrf	___flmul@grs^0,c
 12914   001C28  5018               	movf	___flmul@a^0,w,c
 12915   001C2A  0214               	mulwf	___flmul@b^0,c
 12916   001C2C  CFF3 F02B          	movff	prodl,___flmul@temp
 12917   001C30  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12918   001C34  502B               	movf	___flmul@temp^0,w,c
 12919   001C36  2622               	addwf	___flmul@grs^0,f,c
 12920   001C38  502C               	movf	(___flmul@temp+1)^0,w,c
 12921   001C3A  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12922   001C3C  0E00               	movlw	0
 12923   001C3E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12924   001C40  0E00               	movlw	0
 12925   001C42  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12926   001C44  501A               	movf	(___flmul@a+2)^0,w,c
 12927   001C46  0215               	mulwf	(___flmul@b+1)^0,c
 12928   001C48  CFF3 F02B          	movff	prodl,___flmul@temp
 12929   001C4C  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12930   001C50  502B               	movf	___flmul@temp^0,w,c
 12931   001C52  2627               	addwf	___flmul@prod^0,f,c
 12932   001C54  502C               	movf	(___flmul@temp+1)^0,w,c
 12933   001C56  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12934   001C58  0E00               	movlw	0
 12935   001C5A  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12936   001C5C  0E00               	movlw	0
 12937   001C5E  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12938   001C60  5019               	movf	(___flmul@a+1)^0,w,c
 12939   001C62  0216               	mulwf	(___flmul@b+2)^0,c
 12940   001C64  CFF3 F02B          	movff	prodl,___flmul@temp
 12941   001C68  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12942   001C6C  502B               	movf	___flmul@temp^0,w,c
 12943   001C6E  2627               	addwf	___flmul@prod^0,f,c
 12944   001C70  502C               	movf	(___flmul@temp+1)^0,w,c
 12945   001C72  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12946   001C74  0E00               	movlw	0
 12947   001C76  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12948   001C78  0E00               	movlw	0
 12949   001C7A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12950   001C7C  501A               	movf	(___flmul@a+2)^0,w,c
 12951   001C7E  0216               	mulwf	(___flmul@b+2)^0,c
 12952   001C80  CFF3 F02B          	movff	prodl,___flmul@temp
 12953   001C84  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12954   001C88  502B               	movf	___flmul@temp^0,w,c
 12955   001C8A  6E1C               	movwf	??___flmul^0,c
 12956   001C8C  502C               	movf	(___flmul@temp+1)^0,w,c
 12957   001C8E  6E1D               	movwf	(??___flmul+1)^0,c
 12958   001C90  6A1E               	clrf	(??___flmul+2)^0,c
 12959   001C92  6A1F               	clrf	(??___flmul+3)^0,c
 12960   001C94  C01E  F01F         	movff	??___flmul+2,??___flmul+3
 12961   001C98  C01D  F01E         	movff	??___flmul+1,??___flmul+2
 12962   001C9C  C01C  F01D         	movff	??___flmul,??___flmul+1
 12963   001CA0  6A1C               	clrf	??___flmul^0,c
 12964   001CA2  501C               	movf	??___flmul^0,w,c
 12965   001CA4  2627               	addwf	___flmul@prod^0,f,c
 12966   001CA6  501D               	movf	(??___flmul+1)^0,w,c
 12967   001CA8  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12968   001CAA  501E               	movf	(??___flmul+2)^0,w,c
 12969   001CAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12970   001CAE  501F               	movf	(??___flmul+3)^0,w,c
 12971   001CB0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12972   001CB2  C022  F01C         	movff	___flmul@grs,??___flmul
 12973   001CB6  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
 12974   001CBA  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
 12975   001CBE  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
 12976   001CC2  0E19               	movlw	25
 12977   001CC4  EF69  F00E         	goto	u7750
 12978   001CC8                     u7755:
 12979   001CC8  90D8               	bcf	status,0,c
 12980   001CCA  321F               	rrcf	(??___flmul+3)^0,f,c
 12981   001CCC  321E               	rrcf	(??___flmul+2)^0,f,c
 12982   001CCE  321D               	rrcf	(??___flmul+1)^0,f,c
 12983   001CD0  321C               	rrcf	??___flmul^0,f,c
 12984   001CD2                     u7750:
 12985   001CD2  2EE8               	decfsz	wreg,f,c
 12986   001CD4  EF64  F00E         	goto	u7755
 12987   001CD8  501C               	movf	??___flmul^0,w,c
 12988   001CDA  2627               	addwf	___flmul@prod^0,f,c
 12989   001CDC  501D               	movf	(??___flmul+1)^0,w,c
 12990   001CDE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12991   001CE0  501E               	movf	(??___flmul+2)^0,w,c
 12992   001CE2  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12993   001CE4  501F               	movf	(??___flmul+3)^0,w,c
 12994   001CE6  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12995   001CE8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 12996   001CEC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 12997   001CF0  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 12998   001CF4  6A22               	clrf	___flmul@grs^0,c
 12999   001CF6  5021               	movf	___flmul@aexp^0,w,c
 13000   001CF8  C026  F01C         	movff	___flmul@bexp,??___flmul
 13001   001CFC  6A1D               	clrf	(??___flmul+1)^0,c
 13002   001CFE  261C               	addwf	??___flmul^0,f,c
 13003   001D00  0E00               	movlw	0
 13004   001D02  221D               	addwfc	(??___flmul+1)^0,f,c
 13005   001D04  0E82               	movlw	130
 13006   001D06  241C               	addwf	??___flmul^0,w,c
 13007   001D08  6E2B               	movwf	___flmul@temp^0,c
 13008   001D0A  0EFF               	movlw	255
 13009   001D0C  201D               	addwfc	(??___flmul+1)^0,w,c
 13010   001D0E  6E2C               	movwf	(___flmul@temp+1)^0,c
 13011   001D10  EF9F  F00E         	goto	l6732
 13012   001D14                     l6726:
 13013   001D14  90D8               	bcf	status,0,c
 13014   001D16  3627               	rlcf	___flmul@prod^0,f,c
 13015   001D18  3628               	rlcf	(___flmul@prod+1)^0,f,c
 13016   001D1A  3629               	rlcf	(___flmul@prod+2)^0,f,c
 13017   001D1C  362A               	rlcf	(___flmul@prod+3)^0,f,c
 13018   001D1E  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13019   001D20  EF94  F00E         	goto	u7761
 13020   001D24  EF96  F00E         	goto	u7760
 13021   001D28                     u7761:
 13022   001D28  EF97  F00E         	goto	l1331
 13023   001D2C                     u7760:
 13024   001D2C  8027               	bsf	___flmul@prod^0,0,c
 13025   001D2E                     l1331:
 13026   001D2E  90D8               	bcf	status,0,c
 13027   001D30  3622               	rlcf	___flmul@grs^0,f,c
 13028   001D32  3623               	rlcf	(___flmul@grs+1)^0,f,c
 13029   001D34  3624               	rlcf	(___flmul@grs+2)^0,f,c
 13030   001D36  3625               	rlcf	(___flmul@grs+3)^0,f,c
 13031   001D38  062B               	decf	___flmul@temp^0,f,c
 13032   001D3A  A0D8               	btfss	status,0,c
 13033   001D3C  062C               	decf	(___flmul@temp+1)^0,f,c
 13034   001D3E                     l6732:
 13035   001D3E  AE29               	btfss	(___flmul@prod+2)^0,7,c
 13036   001D40  EFA4  F00E         	goto	u7771
 13037   001D44  EFA6  F00E         	goto	u7770
 13038   001D48                     u7771:
 13039   001D48  EF8A  F00E         	goto	l6726
 13040   001D4C                     u7770:
 13041   001D4C  0E00               	movlw	0
 13042   001D4E  6E21               	movwf	___flmul@aexp^0,c
 13043   001D50  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13044   001D52  EFAD  F00E         	goto	u7781
 13045   001D56  EFAF  F00E         	goto	u7780
 13046   001D5A                     u7781:
 13047   001D5A  EFD3  F00E         	goto	l1333
 13048   001D5E                     u7780:
 13049   001D5E  0EFF               	movlw	255
 13050   001D60  1422               	andwf	___flmul@grs^0,w,c
 13051   001D62  6E1C               	movwf	??___flmul^0,c
 13052   001D64  0EFF               	movlw	255
 13053   001D66  1423               	andwf	(___flmul@grs+1)^0,w,c
 13054   001D68  6E1D               	movwf	(??___flmul+1)^0,c
 13055   001D6A  0EFF               	movlw	255
 13056   001D6C  1424               	andwf	(___flmul@grs+2)^0,w,c
 13057   001D6E  6E1E               	movwf	(??___flmul+2)^0,c
 13058   001D70  0E7F               	movlw	127
 13059   001D72  1425               	andwf	(___flmul@grs+3)^0,w,c
 13060   001D74  6E1F               	movwf	(??___flmul+3)^0,c
 13061   001D76  501C               	movf	??___flmul^0,w,c
 13062   001D78  101D               	iorwf	(??___flmul+1)^0,w,c
 13063   001D7A  101E               	iorwf	(??___flmul+2)^0,w,c
 13064   001D7C  101F               	iorwf	(??___flmul+3)^0,w,c
 13065   001D7E  B4D8               	btfsc	status,2,c
 13066   001D80  EFC4  F00E         	goto	u7791
 13067   001D84  EFC6  F00E         	goto	u7790
 13068   001D88                     u7791:
 13069   001D88  EFCA  F00E         	goto	l1334
 13070   001D8C                     u7790:
 13071   001D8C                     l6740:
 13072   001D8C  0E01               	movlw	1
 13073   001D8E  6E21               	movwf	___flmul@aexp^0,c
 13074   001D90  EFD3  F00E         	goto	l1333
 13075   001D94                     l1334:
 13076   001D94  A027               	btfss	___flmul@prod^0,0,c
 13077   001D96  EFCF  F00E         	goto	u7801
 13078   001D9A  EFD1  F00E         	goto	u7800
 13079   001D9E                     u7801:
 13080   001D9E  EFD3  F00E         	goto	l1333
 13081   001DA2                     u7800:
 13082   001DA2  EFC6  F00E         	goto	l6740
 13083   001DA6                     l1333:
 13084   001DA6  5021               	movf	___flmul@aexp^0,w,c
 13085   001DA8  B4D8               	btfsc	status,2,c
 13086   001DAA  EFD9  F00E         	goto	u7811
 13087   001DAE  EFDB  F00E         	goto	u7810
 13088   001DB2                     u7811:
 13089   001DB2  EFFF  F00E         	goto	l6752
 13090   001DB6                     u7810:
 13091   001DB6  0E01               	movlw	1
 13092   001DB8  2627               	addwf	___flmul@prod^0,f,c
 13093   001DBA  0E00               	movlw	0
 13094   001DBC  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13095   001DBE  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13096   001DC0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13097   001DC2  A02A               	btfss	(___flmul@prod+3)^0,0,c
 13098   001DC4  EFE6  F00E         	goto	u7821
 13099   001DC8  EFE8  F00E         	goto	u7820
 13100   001DCC                     u7821:
 13101   001DCC  EFFF  F00E         	goto	l6752
 13102   001DD0                     u7820:
 13103   001DD0  C027  F01C         	movff	___flmul@prod,??___flmul
 13104   001DD4  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
 13105   001DD8  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
 13106   001DDC  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
 13107   001DE0  341F               	rlcf	(??___flmul+3)^0,w,c
 13108   001DE2  321F               	rrcf	(??___flmul+3)^0,f,c
 13109   001DE4  321E               	rrcf	(??___flmul+2)^0,f,c
 13110   001DE6  321D               	rrcf	(??___flmul+1)^0,f,c
 13111   001DE8  321C               	rrcf	??___flmul^0,f,c
 13112   001DEA  C01C  F027         	movff	??___flmul,___flmul@prod
 13113   001DEE  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
 13114   001DF2  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
 13115   001DF6  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
 13116   001DFA  4A2B               	infsnz	___flmul@temp^0,f,c
 13117   001DFC  2A2C               	incf	(___flmul@temp+1)^0,f,c
 13118   001DFE                     l6752:
 13119   001DFE  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 13120   001E00  EF0A  F00F         	goto	u7831
 13121   001E04  502C               	movf	(___flmul@temp+1)^0,w,c
 13122   001E06  E108               	bnz	u7830
 13123   001E08  282B               	incf	___flmul@temp^0,w,c
 13124   001E0A  A0D8               	btfss	status,0,c
 13125   001E0C  EF0A  F00F         	goto	u7831
 13126   001E10  EF0C  F00F         	goto	u7830
 13127   001E14                     u7831:
 13128   001E14  EF16  F00F         	goto	l6756
 13129   001E18                     u7830:
 13130   001E18  0E00               	movlw	0
 13131   001E1A  6E27               	movwf	___flmul@prod^0,c
 13132   001E1C  0E00               	movlw	0
 13133   001E1E  6E28               	movwf	(___flmul@prod+1)^0,c
 13134   001E20  0E80               	movlw	128
 13135   001E22  6E29               	movwf	(___flmul@prod+2)^0,c
 13136   001E24  0E7F               	movlw	127
 13137   001E26  6E2A               	movwf	(___flmul@prod+3)^0,c
 13138   001E28  EF44  F00F         	goto	l6768
 13139   001E2C                     l6756:
 13140   001E2C  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 13141   001E2E  EF23  F00F         	goto	u7840
 13142   001E32  502C               	movf	(___flmul@temp+1)^0,w,c
 13143   001E34  E106               	bnz	u7841
 13144   001E36  042B               	decf	___flmul@temp^0,w,c
 13145   001E38  B0D8               	btfsc	status,0,c
 13146   001E3A  EF21  F00F         	goto	u7841
 13147   001E3E  EF23  F00F         	goto	u7840
 13148   001E42                     u7841:
 13149   001E42  EF2F  F00F         	goto	l1341
 13150   001E46                     u7840:
 13151   001E46  0E00               	movlw	0
 13152   001E48  6E27               	movwf	___flmul@prod^0,c
 13153   001E4A  0E00               	movlw	0
 13154   001E4C  6E28               	movwf	(___flmul@prod+1)^0,c
 13155   001E4E  0E00               	movlw	0
 13156   001E50  6E29               	movwf	(___flmul@prod+2)^0,c
 13157   001E52  0E00               	movlw	0
 13158   001E54  6E2A               	movwf	(___flmul@prod+3)^0,c
 13159   001E56  0E00               	movlw	0
 13160   001E58  6E20               	movwf	___flmul@sign^0,c
 13161   001E5A  EF44  F00F         	goto	l6768
 13162   001E5E                     l1341:
 13163   001E5E  C02B  F026         	movff	___flmul@temp,___flmul@bexp
 13164   001E62  0EFF               	movlw	255
 13165   001E64  1627               	andwf	___flmul@prod^0,f,c
 13166   001E66  0EFF               	movlw	255
 13167   001E68  1628               	andwf	(___flmul@prod+1)^0,f,c
 13168   001E6A  0E7F               	movlw	127
 13169   001E6C  1629               	andwf	(___flmul@prod+2)^0,f,c
 13170   001E6E  0E00               	movlw	0
 13171   001E70  162A               	andwf	(___flmul@prod+3)^0,f,c
 13172   001E72  A026               	btfss	___flmul@bexp^0,0,c
 13173   001E74  EF3E  F00F         	goto	u7851
 13174   001E78  EF40  F00F         	goto	u7850
 13175   001E7C                     u7851:
 13176   001E7C  EF41  F00F         	goto	l6766
 13177   001E80                     u7850:
 13178   001E80  8E29               	bsf	(___flmul@prod+2)^0,7,c
 13179   001E82                     l6766:
 13180   001E82  90D8               	bcf	status,0,c
 13181   001E84  3026               	rrcf	___flmul@bexp^0,w,c
 13182   001E86  6E2A               	movwf	(___flmul@prod+3)^0,c
 13183   001E88                     l6768:
 13184   001E88  5020               	movf	___flmul@sign^0,w,c
 13185   001E8A  122A               	iorwf	(___flmul@prod+3)^0,f,c
 13186   001E8C  C027  F014         	movff	___flmul@prod,?___flmul
 13187   001E90  C028  F015         	movff	___flmul@prod+1,?___flmul+1
 13188   001E94  C029  F016         	movff	___flmul@prod+2,?___flmul+2
 13189   001E98  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
 13190   001E9C                     l1328:
 13191   001E9C  0012               	return		;funcret
 13192   001E9E                     __end_of___flmul:
 13193                           	callstack 0
 13194                           
 13195 ;; *************** function ___flge *****************
 13196 ;; Defined at:
 13197 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flge.c"
 13198 ;; Parameters:    Size  Location     Type
 13199 ;;  ff1             4   44[COMRAM] unsigned char 
 13200 ;;  ff2             4   48[COMRAM] unsigned char 
 13201 ;; Auto vars:     Size  Location     Type
 13202 ;;		None
 13203 ;; Return value:  Size  Location     Type
 13204 ;;		None               void
 13205 ;; Registers used:
 13206 ;;		wreg, status,2, status,0
 13207 ;; Tracked objects:
 13208 ;;		On entry : 0/0
 13209 ;;		On exit  : 0/0
 13210 ;;		Unchanged: 0/0
 13211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13212 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13214 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13215 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13216 ;;Total ram usage:       12 bytes
 13217 ;; Hardware stack levels used: 1
 13218 ;; Hardware stack levels required when called: 1
 13219 ;; This function calls:
 13220 ;;		Nothing
 13221 ;; This function is called by:
 13222 ;;		_efgtoa
 13223 ;; This function uses a non-reentrant model
 13224 ;;
 13225                           
 13226                           	psect	text47
 13227   004340                     __ptext47:
 13228                           	callstack 0
 13229   004340                     ___flge:
 13230                           	callstack 24
 13231   004340  0E00               	movlw	0
 13232   004342  142D               	andwf	___flge@ff1^0,w,c
 13233   004344  6E35               	movwf	??___flge^0,c
 13234   004346  0E00               	movlw	0
 13235   004348  142E               	andwf	(___flge@ff1+1)^0,w,c
 13236   00434A  6E36               	movwf	(??___flge+1)^0,c
 13237   00434C  0E80               	movlw	128
 13238   00434E  142F               	andwf	(___flge@ff1+2)^0,w,c
 13239   004350  6E37               	movwf	(??___flge+2)^0,c
 13240   004352  0E7F               	movlw	127
 13241   004354  1430               	andwf	(___flge@ff1+3)^0,w,c
 13242   004356  6E38               	movwf	(??___flge+3)^0,c
 13243   004358  5035               	movf	??___flge^0,w,c
 13244   00435A  1036               	iorwf	(??___flge+1)^0,w,c
 13245   00435C  1037               	iorwf	(??___flge+2)^0,w,c
 13246   00435E  1038               	iorwf	(??___flge+3)^0,w,c
 13247   004360  A4D8               	btfss	status,2,c
 13248   004362  EFB5  F021         	goto	u8011
 13249   004366  EFB7  F021         	goto	u8010
 13250   00436A                     u8011:
 13251   00436A  EFBF  F021         	goto	l6880
 13252   00436E                     u8010:
 13253   00436E  0E00               	movlw	0
 13254   004370  6E2D               	movwf	___flge@ff1^0,c
 13255   004372  0E00               	movlw	0
 13256   004374  6E2E               	movwf	(___flge@ff1+1)^0,c
 13257   004376  0E00               	movlw	0
 13258   004378  6E2F               	movwf	(___flge@ff1+2)^0,c
 13259   00437A  0E00               	movlw	0
 13260   00437C  6E30               	movwf	(___flge@ff1+3)^0,c
 13261   00437E                     l6880:
 13262   00437E  0E00               	movlw	0
 13263   004380  1431               	andwf	___flge@ff2^0,w,c
 13264   004382  6E35               	movwf	??___flge^0,c
 13265   004384  0E00               	movlw	0
 13266   004386  1432               	andwf	(___flge@ff2+1)^0,w,c
 13267   004388  6E36               	movwf	(??___flge+1)^0,c
 13268   00438A  0E80               	movlw	128
 13269   00438C  1433               	andwf	(___flge@ff2+2)^0,w,c
 13270   00438E  6E37               	movwf	(??___flge+2)^0,c
 13271   004390  0E7F               	movlw	127
 13272   004392  1434               	andwf	(___flge@ff2+3)^0,w,c
 13273   004394  6E38               	movwf	(??___flge+3)^0,c
 13274   004396  5035               	movf	??___flge^0,w,c
 13275   004398  1036               	iorwf	(??___flge+1)^0,w,c
 13276   00439A  1037               	iorwf	(??___flge+2)^0,w,c
 13277   00439C  1038               	iorwf	(??___flge+3)^0,w,c
 13278   00439E  A4D8               	btfss	status,2,c
 13279   0043A0  EFD4  F021         	goto	u8021
 13280   0043A4  EFD6  F021         	goto	u8020
 13281   0043A8                     u8021:
 13282   0043A8  EFDE  F021         	goto	l6884
 13283   0043AC                     u8020:
 13284   0043AC  0E00               	movlw	0
 13285   0043AE  6E31               	movwf	___flge@ff2^0,c
 13286   0043B0  0E00               	movlw	0
 13287   0043B2  6E32               	movwf	(___flge@ff2+1)^0,c
 13288   0043B4  0E00               	movlw	0
 13289   0043B6  6E33               	movwf	(___flge@ff2+2)^0,c
 13290   0043B8  0E00               	movlw	0
 13291   0043BA  6E34               	movwf	(___flge@ff2+3)^0,c
 13292   0043BC                     l6884:
 13293   0043BC  AE30               	btfss	(___flge@ff1+3)^0,7,c
 13294   0043BE  EFE3  F021         	goto	u8031
 13295   0043C2  EFE5  F021         	goto	u8030
 13296   0043C6                     u8031:
 13297   0043C6  EFEE  F021         	goto	l6888
 13298   0043CA                     u8030:
 13299   0043CA  6C2D               	negf	___flge@ff1^0,c
 13300   0043CC  1E2E               	comf	(___flge@ff1+1)^0,f,c
 13301   0043CE  B0D8               	btfsc	status,0,c
 13302   0043D0  2A2E               	incf	(___flge@ff1+1)^0,f,c
 13303   0043D2  1E2F               	comf	(___flge@ff1+2)^0,f,c
 13304   0043D4  B0D8               	btfsc	status,0,c
 13305   0043D6  2A2F               	incf	(___flge@ff1+2)^0,f,c
 13306   0043D8  0E80               	movlw	128
 13307   0043DA  5630               	subfwb	(___flge@ff1+3)^0,f,c
 13308   0043DC                     l6888:
 13309   0043DC  AE34               	btfss	(___flge@ff2+3)^0,7,c
 13310   0043DE  EFF3  F021         	goto	u8041
 13311   0043E2  EFF5  F021         	goto	u8040
 13312   0043E6                     u8041:
 13313   0043E6  EFFE  F021         	goto	l975
 13314   0043EA                     u8040:
 13315   0043EA  6C31               	negf	___flge@ff2^0,c
 13316   0043EC  1E32               	comf	(___flge@ff2+1)^0,f,c
 13317   0043EE  B0D8               	btfsc	status,0,c
 13318   0043F0  2A32               	incf	(___flge@ff2+1)^0,f,c
 13319   0043F2  1E33               	comf	(___flge@ff2+2)^0,f,c
 13320   0043F4  B0D8               	btfsc	status,0,c
 13321   0043F6  2A33               	incf	(___flge@ff2+2)^0,f,c
 13322   0043F8  0E80               	movlw	128
 13323   0043FA  5634               	subfwb	(___flge@ff2+3)^0,f,c
 13324   0043FC                     l975:
 13325   0043FC  0E00               	movlw	0
 13326   0043FE  1A2D               	xorwf	___flge@ff1^0,f,c
 13327   004400  0E00               	movlw	0
 13328   004402  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
 13329   004404  0E00               	movlw	0
 13330   004406  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
 13331   004408  0E80               	movlw	128
 13332   00440A  1A30               	xorwf	(___flge@ff1+3)^0,f,c
 13333   00440C  0E00               	movlw	0
 13334   00440E  1A31               	xorwf	___flge@ff2^0,f,c
 13335   004410  0E00               	movlw	0
 13336   004412  1A32               	xorwf	(___flge@ff2+1)^0,f,c
 13337   004414  0E00               	movlw	0
 13338   004416  1A33               	xorwf	(___flge@ff2+2)^0,f,c
 13339   004418  0E80               	movlw	128
 13340   00441A  1A34               	xorwf	(___flge@ff2+3)^0,f,c
 13341   00441C  5031               	movf	___flge@ff2^0,w,c
 13342   00441E  5C2D               	subwf	___flge@ff1^0,w,c
 13343   004420  5032               	movf	(___flge@ff2+1)^0,w,c
 13344   004422  582E               	subwfb	(___flge@ff1+1)^0,w,c
 13345   004424  5033               	movf	(___flge@ff2+2)^0,w,c
 13346   004426  582F               	subwfb	(___flge@ff1+2)^0,w,c
 13347   004428  5034               	movf	(___flge@ff2+3)^0,w,c
 13348   00442A  5830               	subwfb	(___flge@ff1+3)^0,w,c
 13349   00442C  B0D8               	btfsc	status,0,c
 13350   00442E  EF1B  F022         	goto	u8051
 13351   004432  EF1D  F022         	goto	u8050
 13352   004436                     u8051:
 13353   004436  EF20  F022         	goto	l6894
 13354   00443A                     u8050:
 13355   00443A  90D8               	bcf	status,0,c
 13356   00443C  EF21  F022         	goto	l980
 13357   004440                     l6894:
 13358   004440  80D8               	bsf	status,0,c
 13359   004442                     l980:
 13360   004442  0012               	return		;funcret
 13361   004444                     __end_of___flge:
 13362                           	callstack 0
 13363                           
 13364 ;; *************** function ___fleq *****************
 13365 ;; Defined at:
 13366 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fleq.c"
 13367 ;; Parameters:    Size  Location     Type
 13368 ;;  ff1             4    5[COMRAM] unsigned char 
 13369 ;;  ff2             4    9[COMRAM] unsigned char 
 13370 ;; Auto vars:     Size  Location     Type
 13371 ;;		None
 13372 ;; Return value:  Size  Location     Type
 13373 ;;		None               void
 13374 ;; Registers used:
 13375 ;;		wreg, status,2, status,0
 13376 ;; Tracked objects:
 13377 ;;		On entry : 0/0
 13378 ;;		On exit  : 0/0
 13379 ;;		Unchanged: 0/0
 13380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13381 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13383 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13384 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13385 ;;Total ram usage:       12 bytes
 13386 ;; Hardware stack levels used: 1
 13387 ;; Hardware stack levels required when called: 1
 13388 ;; This function calls:
 13389 ;;		Nothing
 13390 ;; This function is called by:
 13391 ;;		_efgtoa
 13392 ;; This function uses a non-reentrant model
 13393 ;;
 13394                           
 13395                           	psect	text48
 13396   004AAA                     __ptext48:
 13397                           	callstack 0
 13398   004AAA                     ___fleq:
 13399                           	callstack 24
 13400   004AAA  0E00               	movlw	0
 13401   004AAC  1406               	andwf	___fleq@ff1^0,w,c
 13402   004AAE  6E0E               	movwf	??___fleq^0,c
 13403   004AB0  0E00               	movlw	0
 13404   004AB2  1407               	andwf	(___fleq@ff1+1)^0,w,c
 13405   004AB4  6E0F               	movwf	(??___fleq+1)^0,c
 13406   004AB6  0E80               	movlw	128
 13407   004AB8  1408               	andwf	(___fleq@ff1+2)^0,w,c
 13408   004ABA  6E10               	movwf	(??___fleq+2)^0,c
 13409   004ABC  0E7F               	movlw	127
 13410   004ABE  1409               	andwf	(___fleq@ff1+3)^0,w,c
 13411   004AC0  6E11               	movwf	(??___fleq+3)^0,c
 13412   004AC2  500E               	movf	??___fleq^0,w,c
 13413   004AC4  100F               	iorwf	(??___fleq+1)^0,w,c
 13414   004AC6  1010               	iorwf	(??___fleq+2)^0,w,c
 13415   004AC8  1011               	iorwf	(??___fleq+3)^0,w,c
 13416   004ACA  A4D8               	btfss	status,2,c
 13417   004ACC  EF6A  F025         	goto	u7981
 13418   004AD0  EF6C  F025         	goto	u7980
 13419   004AD4                     u7981:
 13420   004AD4  EF74  F025         	goto	l6864
 13421   004AD8                     u7980:
 13422   004AD8  0E00               	movlw	0
 13423   004ADA  6E06               	movwf	___fleq@ff1^0,c
 13424   004ADC  0E00               	movlw	0
 13425   004ADE  6E07               	movwf	(___fleq@ff1+1)^0,c
 13426   004AE0  0E00               	movlw	0
 13427   004AE2  6E08               	movwf	(___fleq@ff1+2)^0,c
 13428   004AE4  0E00               	movlw	0
 13429   004AE6  6E09               	movwf	(___fleq@ff1+3)^0,c
 13430   004AE8                     l6864:
 13431   004AE8  0E00               	movlw	0
 13432   004AEA  140A               	andwf	___fleq@ff2^0,w,c
 13433   004AEC  6E0E               	movwf	??___fleq^0,c
 13434   004AEE  0E00               	movlw	0
 13435   004AF0  140B               	andwf	(___fleq@ff2+1)^0,w,c
 13436   004AF2  6E0F               	movwf	(??___fleq+1)^0,c
 13437   004AF4  0E80               	movlw	128
 13438   004AF6  140C               	andwf	(___fleq@ff2+2)^0,w,c
 13439   004AF8  6E10               	movwf	(??___fleq+2)^0,c
 13440   004AFA  0E7F               	movlw	127
 13441   004AFC  140D               	andwf	(___fleq@ff2+3)^0,w,c
 13442   004AFE  6E11               	movwf	(??___fleq+3)^0,c
 13443   004B00  500E               	movf	??___fleq^0,w,c
 13444   004B02  100F               	iorwf	(??___fleq+1)^0,w,c
 13445   004B04  1010               	iorwf	(??___fleq+2)^0,w,c
 13446   004B06  1011               	iorwf	(??___fleq+3)^0,w,c
 13447   004B08  A4D8               	btfss	status,2,c
 13448   004B0A  EF89  F025         	goto	u7991
 13449   004B0E  EF8B  F025         	goto	u7990
 13450   004B12                     u7991:
 13451   004B12  EF93  F025         	goto	l6868
 13452   004B16                     u7990:
 13453   004B16  0E00               	movlw	0
 13454   004B18  6E0A               	movwf	___fleq@ff2^0,c
 13455   004B1A  0E00               	movlw	0
 13456   004B1C  6E0B               	movwf	(___fleq@ff2+1)^0,c
 13457   004B1E  0E00               	movlw	0
 13458   004B20  6E0C               	movwf	(___fleq@ff2+2)^0,c
 13459   004B22  0E00               	movlw	0
 13460   004B24  6E0D               	movwf	(___fleq@ff2+3)^0,c
 13461   004B26                     l6868:
 13462   004B26  500A               	movf	___fleq@ff2^0,w,c
 13463   004B28  1806               	xorwf	___fleq@ff1^0,w,c
 13464   004B2A  E10F               	bnz	u8000
 13465   004B2C  500B               	movf	(___fleq@ff2+1)^0,w,c
 13466   004B2E  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 13467   004B30  E10C               	bnz	u8000
 13468   004B32  500C               	movf	(___fleq@ff2+2)^0,w,c
 13469   004B34  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 13470   004B36  E109               	bnz	u8000
 13471   004B38  500D               	movf	(___fleq@ff2+3)^0,w,c
 13472   004B3A  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 13473   004B3C  B4D8               	btfsc	status,2,c
 13474   004B3E  EFA3  F025         	goto	u8001
 13475   004B42  EFA5  F025         	goto	u8000
 13476   004B46                     u8001:
 13477   004B46  EFA8  F025         	goto	l6872
 13478   004B4A                     u8000:
 13479   004B4A  90D8               	bcf	status,0,c
 13480   004B4C  EFA9  F025         	goto	l969
 13481   004B50                     l6872:
 13482   004B50  80D8               	bsf	status,0,c
 13483   004B52                     l969:
 13484   004B52  0012               	return		;funcret
 13485   004B54                     __end_of___fleq:
 13486                           	callstack 0
 13487                           
 13488 ;; *************** function ___fldiv *****************
 13489 ;; Defined at:
 13490 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcdiv.c"
 13491 ;; Parameters:    Size  Location     Type
 13492 ;;  b               4   44[COMRAM] unsigned char 
 13493 ;;  a               4   48[COMRAM] unsigned char 
 13494 ;; Auto vars:     Size  Location     Type
 13495 ;;  grs             4   63[COMRAM] unsigned long 
 13496 ;;  rem             4   56[COMRAM] unsigned long 
 13497 ;;  new_exp         2   61[COMRAM] short 
 13498 ;;  aexp            1   68[COMRAM] unsigned char 
 13499 ;;  bexp            1   67[COMRAM] unsigned char 
 13500 ;;  sign            1   60[COMRAM] unsigned char 
 13501 ;; Return value:  Size  Location     Type
 13502 ;;                  4   44[COMRAM] unsigned char 
 13503 ;; Registers used:
 13504 ;;		wreg, status,2, status,0
 13505 ;; Tracked objects:
 13506 ;;		On entry : 0/0
 13507 ;;		On exit  : 0/0
 13508 ;;		Unchanged: 0/0
 13509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13510 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13511 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13512 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13513 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13514 ;;Total ram usage:       25 bytes
 13515 ;; Hardware stack levels used: 1
 13516 ;; Hardware stack levels required when called: 1
 13517 ;; This function calls:
 13518 ;;		Nothing
 13519 ;; This function is called by:
 13520 ;;		_runDAC
 13521 ;;		_runADC
 13522 ;;		_efgtoa
 13523 ;; This function uses a non-reentrant model
 13524 ;;
 13525                           
 13526                           	psect	text49
 13527   002654                     __ptext49:
 13528                           	callstack 0
 13529   002654                     ___fldiv:
 13530                           	callstack 24
 13531   002654  5030               	movf	(___fldiv@b+3)^0,w,c
 13532   002656  0B80               	andlw	128
 13533   002658  6E3D               	movwf	___fldiv@sign^0,c
 13534   00265A  5030               	movf	(___fldiv@b+3)^0,w,c
 13535   00265C  2430               	addwf	(___fldiv@b+3)^0,w,c
 13536   00265E  6E44               	movwf	___fldiv@bexp^0,c
 13537   002660  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 13538   002662  EF35  F013         	goto	u7441
 13539   002666  EF37  F013         	goto	u7440
 13540   00266A                     u7441:
 13541   00266A  EF38  F013         	goto	l6512
 13542   00266E                     u7440:
 13543   00266E  8044               	bsf	___fldiv@bexp^0,0,c
 13544   002670                     l6512:
 13545   002670  5044               	movf	___fldiv@bexp^0,w,c
 13546   002672  B4D8               	btfsc	status,2,c
 13547   002674  EF3E  F013         	goto	u7451
 13548   002678  EF40  F013         	goto	u7450
 13549   00267C                     u7451:
 13550   00267C  EF55  F013         	goto	l6522
 13551   002680                     u7450:
 13552   002680  2844               	incf	___fldiv@bexp^0,w,c
 13553   002682  A4D8               	btfss	status,2,c
 13554   002684  EF46  F013         	goto	u7461
 13555   002688  EF48  F013         	goto	u7460
 13556   00268C                     u7461:
 13557   00268C  EF50  F013         	goto	l6518
 13558   002690                     u7460:
 13559   002690  0E00               	movlw	0
 13560   002692  6E2D               	movwf	___fldiv@b^0,c
 13561   002694  0E00               	movlw	0
 13562   002696  6E2E               	movwf	(___fldiv@b+1)^0,c
 13563   002698  0E00               	movlw	0
 13564   00269A  6E2F               	movwf	(___fldiv@b+2)^0,c
 13565   00269C  0E00               	movlw	0
 13566   00269E  6E30               	movwf	(___fldiv@b+3)^0,c
 13567   0026A0                     l6518:
 13568   0026A0  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 13569   0026A2  0E00               	movlw	0
 13570   0026A4  6E30               	movwf	(___fldiv@b+3)^0,c
 13571   0026A6  EF5D  F013         	goto	l6524
 13572   0026AA                     l6522:
 13573   0026AA  0E00               	movlw	0
 13574   0026AC  6E2D               	movwf	___fldiv@b^0,c
 13575   0026AE  0E00               	movlw	0
 13576   0026B0  6E2E               	movwf	(___fldiv@b+1)^0,c
 13577   0026B2  0E00               	movlw	0
 13578   0026B4  6E2F               	movwf	(___fldiv@b+2)^0,c
 13579   0026B6  0E00               	movlw	0
 13580   0026B8  6E30               	movwf	(___fldiv@b+3)^0,c
 13581   0026BA                     l6524:
 13582   0026BA  5034               	movf	(___fldiv@a+3)^0,w,c
 13583   0026BC  0B80               	andlw	128
 13584   0026BE  1A3D               	xorwf	___fldiv@sign^0,f,c
 13585   0026C0  5034               	movf	(___fldiv@a+3)^0,w,c
 13586   0026C2  2434               	addwf	(___fldiv@a+3)^0,w,c
 13587   0026C4  6E45               	movwf	___fldiv@aexp^0,c
 13588   0026C6  AE33               	btfss	(___fldiv@a+2)^0,7,c
 13589   0026C8  EF68  F013         	goto	u7471
 13590   0026CC  EF6A  F013         	goto	u7470
 13591   0026D0                     u7471:
 13592   0026D0  EF6B  F013         	goto	l6532
 13593   0026D4                     u7470:
 13594   0026D4  8045               	bsf	___fldiv@aexp^0,0,c
 13595   0026D6                     l6532:
 13596   0026D6  5045               	movf	___fldiv@aexp^0,w,c
 13597   0026D8  B4D8               	btfsc	status,2,c
 13598   0026DA  EF71  F013         	goto	u7481
 13599   0026DE  EF73  F013         	goto	u7480
 13600   0026E2                     u7481:
 13601   0026E2  EF88  F013         	goto	l6542
 13602   0026E6                     u7480:
 13603   0026E6  2845               	incf	___fldiv@aexp^0,w,c
 13604   0026E8  A4D8               	btfss	status,2,c
 13605   0026EA  EF79  F013         	goto	u7491
 13606   0026EE  EF7B  F013         	goto	u7490
 13607   0026F2                     u7491:
 13608   0026F2  EF83  F013         	goto	l6538
 13609   0026F6                     u7490:
 13610   0026F6  0E00               	movlw	0
 13611   0026F8  6E31               	movwf	___fldiv@a^0,c
 13612   0026FA  0E00               	movlw	0
 13613   0026FC  6E32               	movwf	(___fldiv@a+1)^0,c
 13614   0026FE  0E00               	movlw	0
 13615   002700  6E33               	movwf	(___fldiv@a+2)^0,c
 13616   002702  0E00               	movlw	0
 13617   002704  6E34               	movwf	(___fldiv@a+3)^0,c
 13618   002706                     l6538:
 13619   002706  8E33               	bsf	(___fldiv@a+2)^0,7,c
 13620   002708  0E00               	movlw	0
 13621   00270A  6E34               	movwf	(___fldiv@a+3)^0,c
 13622   00270C  EF90  F013         	goto	l6544
 13623   002710                     l6542:
 13624   002710  0E00               	movlw	0
 13625   002712  6E31               	movwf	___fldiv@a^0,c
 13626   002714  0E00               	movlw	0
 13627   002716  6E32               	movwf	(___fldiv@a+1)^0,c
 13628   002718  0E00               	movlw	0
 13629   00271A  6E33               	movwf	(___fldiv@a+2)^0,c
 13630   00271C  0E00               	movlw	0
 13631   00271E  6E34               	movwf	(___fldiv@a+3)^0,c
 13632   002720                     l6544:
 13633   002720  5031               	movf	___fldiv@a^0,w,c
 13634   002722  1032               	iorwf	(___fldiv@a+1)^0,w,c
 13635   002724  1033               	iorwf	(___fldiv@a+2)^0,w,c
 13636   002726  1034               	iorwf	(___fldiv@a+3)^0,w,c
 13637   002728  A4D8               	btfss	status,2,c
 13638   00272A  EF99  F013         	goto	u7501
 13639   00272E  EF9B  F013         	goto	u7500
 13640   002732                     u7501:
 13641   002732  EFB3  F013         	goto	l6556
 13642   002736                     u7500:
 13643   002736  0E00               	movlw	0
 13644   002738  6E2D               	movwf	___fldiv@b^0,c
 13645   00273A  0E00               	movlw	0
 13646   00273C  6E2E               	movwf	(___fldiv@b+1)^0,c
 13647   00273E  0E00               	movlw	0
 13648   002740  6E2F               	movwf	(___fldiv@b+2)^0,c
 13649   002742  0E00               	movlw	0
 13650   002744  6E30               	movwf	(___fldiv@b+3)^0,c
 13651   002746  0E80               	movlw	128
 13652   002748  122F               	iorwf	(___fldiv@b+2)^0,f,c
 13653   00274A  0E7F               	movlw	127
 13654   00274C  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13655   00274E                     l6550:
 13656   00274E  503D               	movf	___fldiv@sign^0,w,c
 13657   002750  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13658   002752  C02D  F02D         	movff	___fldiv@b,?___fldiv
 13659   002756  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
 13660   00275A  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
 13661   00275E  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
 13662   002762  EFF6  F014         	goto	l1292
 13663   002766                     l6556:
 13664   002766  5044               	movf	___fldiv@bexp^0,w,c
 13665   002768  A4D8               	btfss	status,2,c
 13666   00276A  EFB9  F013         	goto	u7511
 13667   00276E  EFBB  F013         	goto	u7510
 13668   002772                     u7511:
 13669   002772  EFC5  F013         	goto	l6564
 13670   002776                     u7510:
 13671   002776  0E00               	movlw	0
 13672   002778  6E2D               	movwf	?___fldiv^0,c
 13673   00277A  0E00               	movlw	0
 13674   00277C  6E2E               	movwf	(?___fldiv+1)^0,c
 13675   00277E  0E00               	movlw	0
 13676   002780  6E2F               	movwf	(?___fldiv+2)^0,c
 13677   002782  0E00               	movlw	0
 13678   002784  6E30               	movwf	(?___fldiv+3)^0,c
 13679   002786  EFF6  F014         	goto	l1292
 13680   00278A                     l6564:
 13681   00278A  5045               	movf	___fldiv@aexp^0,w,c
 13682   00278C  C044  F035         	movff	___fldiv@bexp,??___fldiv
 13683   002790  6A36               	clrf	(??___fldiv+1)^0,c
 13684   002792  5E35               	subwf	??___fldiv^0,f,c
 13685   002794  0E00               	movlw	0
 13686   002796  5A36               	subwfb	(??___fldiv+1)^0,f,c
 13687   002798  0E7F               	movlw	127
 13688   00279A  2435               	addwf	??___fldiv^0,w,c
 13689   00279C  6E3E               	movwf	___fldiv@new_exp^0,c
 13690   00279E  0E00               	movlw	0
 13691   0027A0  2036               	addwfc	(??___fldiv+1)^0,w,c
 13692   0027A2  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 13693   0027A4  C02D  F039         	movff	___fldiv@b,___fldiv@rem
 13694   0027A8  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
 13695   0027AC  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
 13696   0027B0  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
 13697   0027B4  0E00               	movlw	0
 13698   0027B6  6E2D               	movwf	___fldiv@b^0,c
 13699   0027B8  0E00               	movlw	0
 13700   0027BA  6E2E               	movwf	(___fldiv@b+1)^0,c
 13701   0027BC  0E00               	movlw	0
 13702   0027BE  6E2F               	movwf	(___fldiv@b+2)^0,c
 13703   0027C0  0E00               	movlw	0
 13704   0027C2  6E30               	movwf	(___fldiv@b+3)^0,c
 13705   0027C4  0E00               	movlw	0
 13706   0027C6  6E40               	movwf	___fldiv@grs^0,c
 13707   0027C8  0E00               	movlw	0
 13708   0027CA  6E41               	movwf	(___fldiv@grs+1)^0,c
 13709   0027CC  0E00               	movlw	0
 13710   0027CE  6E42               	movwf	(___fldiv@grs+2)^0,c
 13711   0027D0  0E00               	movlw	0
 13712   0027D2  6E43               	movwf	(___fldiv@grs+3)^0,c
 13713   0027D4  0E00               	movlw	0
 13714   0027D6  6E45               	movwf	___fldiv@aexp^0,c
 13715   0027D8  EF26  F014         	goto	l1294
 13716   0027DC                     l6574:
 13717   0027DC  5045               	movf	___fldiv@aexp^0,w,c
 13718   0027DE  B4D8               	btfsc	status,2,c
 13719   0027E0  EFF4  F013         	goto	u7521
 13720   0027E4  EFF6  F013         	goto	u7520
 13721   0027E8                     u7521:
 13722   0027E8  EF0D  F014         	goto	l6582
 13723   0027EC                     u7520:
 13724   0027EC  90D8               	bcf	status,0,c
 13725   0027EE  3639               	rlcf	___fldiv@rem^0,f,c
 13726   0027F0  363A               	rlcf	(___fldiv@rem+1)^0,f,c
 13727   0027F2  363B               	rlcf	(___fldiv@rem+2)^0,f,c
 13728   0027F4  363C               	rlcf	(___fldiv@rem+3)^0,f,c
 13729   0027F6  90D8               	bcf	status,0,c
 13730   0027F8  362D               	rlcf	___fldiv@b^0,f,c
 13731   0027FA  362E               	rlcf	(___fldiv@b+1)^0,f,c
 13732   0027FC  362F               	rlcf	(___fldiv@b+2)^0,f,c
 13733   0027FE  3630               	rlcf	(___fldiv@b+3)^0,f,c
 13734   002800  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13735   002802  EF05  F014         	goto	u7531
 13736   002806  EF07  F014         	goto	u7530
 13737   00280A                     u7531:
 13738   00280A  EF08  F014         	goto	l1297
 13739   00280E                     u7530:
 13740   00280E  802D               	bsf	___fldiv@b^0,0,c
 13741   002810                     l1297:
 13742   002810  90D8               	bcf	status,0,c
 13743   002812  3640               	rlcf	___fldiv@grs^0,f,c
 13744   002814  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 13745   002816  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 13746   002818  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 13747   00281A                     l6582:
 13748   00281A  5031               	movf	___fldiv@a^0,w,c
 13749   00281C  5C39               	subwf	___fldiv@rem^0,w,c
 13750   00281E  5032               	movf	(___fldiv@a+1)^0,w,c
 13751   002820  583A               	subwfb	(___fldiv@rem+1)^0,w,c
 13752   002822  5033               	movf	(___fldiv@a+2)^0,w,c
 13753   002824  583B               	subwfb	(___fldiv@rem+2)^0,w,c
 13754   002826  5034               	movf	(___fldiv@a+3)^0,w,c
 13755   002828  583C               	subwfb	(___fldiv@rem+3)^0,w,c
 13756   00282A  A0D8               	btfss	status,0,c
 13757   00282C  EF1A  F014         	goto	u7541
 13758   002830  EF1C  F014         	goto	u7540
 13759   002834                     u7541:
 13760   002834  EF25  F014         	goto	l6588
 13761   002838                     u7540:
 13762   002838  8C43               	bsf	(___fldiv@grs+3)^0,6,c
 13763   00283A  5031               	movf	___fldiv@a^0,w,c
 13764   00283C  5E39               	subwf	___fldiv@rem^0,f,c
 13765   00283E  5032               	movf	(___fldiv@a+1)^0,w,c
 13766   002840  5A3A               	subwfb	(___fldiv@rem+1)^0,f,c
 13767   002842  5033               	movf	(___fldiv@a+2)^0,w,c
 13768   002844  5A3B               	subwfb	(___fldiv@rem+2)^0,f,c
 13769   002846  5034               	movf	(___fldiv@a+3)^0,w,c
 13770   002848  5A3C               	subwfb	(___fldiv@rem+3)^0,f,c
 13771   00284A                     l6588:
 13772   00284A  2A45               	incf	___fldiv@aexp^0,f,c
 13773   00284C                     l1294:
 13774   00284C  0E19               	movlw	25
 13775   00284E  6445               	cpfsgt	___fldiv@aexp^0,c
 13776   002850  EF2C  F014         	goto	u7551
 13777   002854  EF2E  F014         	goto	u7550
 13778   002858                     u7551:
 13779   002858  EFEE  F013         	goto	l6574
 13780   00285C                     u7550:
 13781   00285C  5039               	movf	___fldiv@rem^0,w,c
 13782   00285E  103A               	iorwf	(___fldiv@rem+1)^0,w,c
 13783   002860  103B               	iorwf	(___fldiv@rem+2)^0,w,c
 13784   002862  103C               	iorwf	(___fldiv@rem+3)^0,w,c
 13785   002864  B4D8               	btfsc	status,2,c
 13786   002866  EF37  F014         	goto	u7561
 13787   00286A  EF39  F014         	goto	u7560
 13788   00286E                     u7561:
 13789   00286E  EF51  F014         	goto	l6600
 13790   002872                     u7560:
 13791   002872  8040               	bsf	___fldiv@grs^0,0,c
 13792   002874  EF51  F014         	goto	l6600
 13793   002878                     l6594:
 13794   002878  90D8               	bcf	status,0,c
 13795   00287A  362D               	rlcf	___fldiv@b^0,f,c
 13796   00287C  362E               	rlcf	(___fldiv@b+1)^0,f,c
 13797   00287E  362F               	rlcf	(___fldiv@b+2)^0,f,c
 13798   002880  3630               	rlcf	(___fldiv@b+3)^0,f,c
 13799   002882  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13800   002884  EF46  F014         	goto	u7571
 13801   002888  EF48  F014         	goto	u7570
 13802   00288C                     u7571:
 13803   00288C  EF49  F014         	goto	l1303
 13804   002890                     u7570:
 13805   002890  802D               	bsf	___fldiv@b^0,0,c
 13806   002892                     l1303:
 13807   002892  90D8               	bcf	status,0,c
 13808   002894  3640               	rlcf	___fldiv@grs^0,f,c
 13809   002896  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 13810   002898  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 13811   00289A  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 13812   00289C  063E               	decf	___fldiv@new_exp^0,f,c
 13813   00289E  A0D8               	btfss	status,0,c
 13814   0028A0  063F               	decf	(___fldiv@new_exp+1)^0,f,c
 13815   0028A2                     l6600:
 13816   0028A2  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 13817   0028A4  EF56  F014         	goto	u7581
 13818   0028A8  EF58  F014         	goto	u7580
 13819   0028AC                     u7581:
 13820   0028AC  EF3C  F014         	goto	l6594
 13821   0028B0                     u7580:
 13822   0028B0  0E00               	movlw	0
 13823   0028B2  6E45               	movwf	___fldiv@aexp^0,c
 13824   0028B4  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13825   0028B6  EF5F  F014         	goto	u7591
 13826   0028BA  EF61  F014         	goto	u7590
 13827   0028BE                     u7591:
 13828   0028BE  EF85  F014         	goto	l1305
 13829   0028C2                     u7590:
 13830   0028C2  0EFF               	movlw	255
 13831   0028C4  1440               	andwf	___fldiv@grs^0,w,c
 13832   0028C6  6E35               	movwf	??___fldiv^0,c
 13833   0028C8  0EFF               	movlw	255
 13834   0028CA  1441               	andwf	(___fldiv@grs+1)^0,w,c
 13835   0028CC  6E36               	movwf	(??___fldiv+1)^0,c
 13836   0028CE  0EFF               	movlw	255
 13837   0028D0  1442               	andwf	(___fldiv@grs+2)^0,w,c
 13838   0028D2  6E37               	movwf	(??___fldiv+2)^0,c
 13839   0028D4  0E7F               	movlw	127
 13840   0028D6  1443               	andwf	(___fldiv@grs+3)^0,w,c
 13841   0028D8  6E38               	movwf	(??___fldiv+3)^0,c
 13842   0028DA  5035               	movf	??___fldiv^0,w,c
 13843   0028DC  1036               	iorwf	(??___fldiv+1)^0,w,c
 13844   0028DE  1037               	iorwf	(??___fldiv+2)^0,w,c
 13845   0028E0  1038               	iorwf	(??___fldiv+3)^0,w,c
 13846   0028E2  B4D8               	btfsc	status,2,c
 13847   0028E4  EF76  F014         	goto	u7601
 13848   0028E8  EF78  F014         	goto	u7600
 13849   0028EC                     u7601:
 13850   0028EC  EF7C  F014         	goto	l1306
 13851   0028F0                     u7600:
 13852   0028F0                     l6608:
 13853   0028F0  0E01               	movlw	1
 13854   0028F2  6E45               	movwf	___fldiv@aexp^0,c
 13855   0028F4  EF85  F014         	goto	l1305
 13856   0028F8                     l1306:
 13857   0028F8  A02D               	btfss	___fldiv@b^0,0,c
 13858   0028FA  EF81  F014         	goto	u7611
 13859   0028FE  EF83  F014         	goto	u7610
 13860   002902                     u7611:
 13861   002902  EF85  F014         	goto	l1305
 13862   002906                     u7610:
 13863   002906  EF78  F014         	goto	l6608
 13864   00290A                     l1305:
 13865   00290A  5045               	movf	___fldiv@aexp^0,w,c
 13866   00290C  B4D8               	btfsc	status,2,c
 13867   00290E  EF8B  F014         	goto	u7621
 13868   002912  EF8D  F014         	goto	u7620
 13869   002916                     u7621:
 13870   002916  EFB1  F014         	goto	l6620
 13871   00291A                     u7620:
 13872   00291A  0E01               	movlw	1
 13873   00291C  262D               	addwf	___fldiv@b^0,f,c
 13874   00291E  0E00               	movlw	0
 13875   002920  222E               	addwfc	(___fldiv@b+1)^0,f,c
 13876   002922  222F               	addwfc	(___fldiv@b+2)^0,f,c
 13877   002924  2230               	addwfc	(___fldiv@b+3)^0,f,c
 13878   002926  A030               	btfss	(___fldiv@b+3)^0,0,c
 13879   002928  EF98  F014         	goto	u7631
 13880   00292C  EF9A  F014         	goto	u7630
 13881   002930                     u7631:
 13882   002930  EFB1  F014         	goto	l6620
 13883   002934                     u7630:
 13884   002934  C02D  F035         	movff	___fldiv@b,??___fldiv
 13885   002938  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
 13886   00293C  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
 13887   002940  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
 13888   002944  3438               	rlcf	(??___fldiv+3)^0,w,c
 13889   002946  3238               	rrcf	(??___fldiv+3)^0,f,c
 13890   002948  3237               	rrcf	(??___fldiv+2)^0,f,c
 13891   00294A  3236               	rrcf	(??___fldiv+1)^0,f,c
 13892   00294C  3235               	rrcf	??___fldiv^0,f,c
 13893   00294E  C035  F02D         	movff	??___fldiv,___fldiv@b
 13894   002952  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
 13895   002956  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
 13896   00295A  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
 13897   00295E  4A3E               	infsnz	___fldiv@new_exp^0,f,c
 13898   002960  2A3F               	incf	(___fldiv@new_exp+1)^0,f,c
 13899   002962                     l6620:
 13900   002962  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13901   002964  EFBC  F014         	goto	u7641
 13902   002968  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 13903   00296A  E108               	bnz	u7640
 13904   00296C  283E               	incf	___fldiv@new_exp^0,w,c
 13905   00296E  A0D8               	btfss	status,0,c
 13906   002970  EFBC  F014         	goto	u7641
 13907   002974  EFBE  F014         	goto	u7640
 13908   002978                     u7641:
 13909   002978  EFC9  F014         	goto	l6624
 13910   00297C                     u7640:
 13911   00297C  0E00               	movlw	0
 13912   00297E  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 13913   002980  683E               	setf	___fldiv@new_exp^0,c
 13914   002982  0E00               	movlw	0
 13915   002984  6E2D               	movwf	___fldiv@b^0,c
 13916   002986  0E00               	movlw	0
 13917   002988  6E2E               	movwf	(___fldiv@b+1)^0,c
 13918   00298A  0E00               	movlw	0
 13919   00298C  6E2F               	movwf	(___fldiv@b+2)^0,c
 13920   00298E  0E00               	movlw	0
 13921   002990  6E30               	movwf	(___fldiv@b+3)^0,c
 13922   002992                     l6624:
 13923   002992  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13924   002994  EFD6  F014         	goto	u7650
 13925   002998  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 13926   00299A  E106               	bnz	u7651
 13927   00299C  043E               	decf	___fldiv@new_exp^0,w,c
 13928   00299E  B0D8               	btfsc	status,0,c
 13929   0029A0  EFD4  F014         	goto	u7651
 13930   0029A4  EFD6  F014         	goto	u7650
 13931   0029A8                     u7651:
 13932   0029A8  EFE4  F014         	goto	l6628
 13933   0029AC                     u7650:
 13934   0029AC  0E00               	movlw	0
 13935   0029AE  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 13936   0029B0  0E00               	movlw	0
 13937   0029B2  6E3E               	movwf	___fldiv@new_exp^0,c
 13938   0029B4  0E00               	movlw	0
 13939   0029B6  6E2D               	movwf	___fldiv@b^0,c
 13940   0029B8  0E00               	movlw	0
 13941   0029BA  6E2E               	movwf	(___fldiv@b+1)^0,c
 13942   0029BC  0E00               	movlw	0
 13943   0029BE  6E2F               	movwf	(___fldiv@b+2)^0,c
 13944   0029C0  0E00               	movlw	0
 13945   0029C2  6E30               	movwf	(___fldiv@b+3)^0,c
 13946   0029C4  0E00               	movlw	0
 13947   0029C6  6E3D               	movwf	___fldiv@sign^0,c
 13948   0029C8                     l6628:
 13949   0029C8  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
 13950   0029CC  A044               	btfss	___fldiv@bexp^0,0,c
 13951   0029CE  EFEB  F014         	goto	u7661
 13952   0029D2  EFED  F014         	goto	u7660
 13953   0029D6                     u7661:
 13954   0029D6  EFF0  F014         	goto	l6634
 13955   0029DA                     u7660:
 13956   0029DA  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 13957   0029DC  EFF1  F014         	goto	l6636
 13958   0029E0                     l6634:
 13959   0029E0  9E2F               	bcf	(___fldiv@b+2)^0,7,c
 13960   0029E2                     l6636:
 13961   0029E2  90D8               	bcf	status,0,c
 13962   0029E4  3044               	rrcf	___fldiv@bexp^0,w,c
 13963   0029E6  6E30               	movwf	(___fldiv@b+3)^0,c
 13964   0029E8  EFA7  F013         	goto	l6550
 13965   0029EC                     l1292:
 13966   0029EC  0012               	return		;funcret
 13967   0029EE                     __end_of___fldiv:
 13968                           	callstack 0
 13969                           
 13970 ;; *************** function _dtoa *****************
 13971 ;; Defined at:
 13972 ;;		line 513 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 13973 ;; Parameters:    Size  Location     Type
 13974 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 13975 ;;		 -> NULL(0), sprintf@f(12), 
 13976 ;;  d               2   33[COMRAM] int 
 13977 ;; Auto vars:     Size  Location     Type
 13978 ;;  i               2   42[COMRAM] int 
 13979 ;;  p               2   39[COMRAM] int 
 13980 ;;  w               2   37[COMRAM] int 
 13981 ;;  s               1   41[COMRAM] unsigned char 
 13982 ;; Return value:  Size  Location     Type
 13983 ;;                  1    wreg      void 
 13984 ;; Registers used:
 13985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13986 ;; Tracked objects:
 13987 ;;		On entry : 0/0
 13988 ;;		On exit  : 0/0
 13989 ;;		Unchanged: 0/0
 13990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13992 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13994 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13995 ;;Total ram usage:       13 bytes
 13996 ;; Hardware stack levels used: 1
 13997 ;; Hardware stack levels required when called: 5
 13998 ;; This function calls:
 13999 ;;		___awdiv
 14000 ;;		___awmod
 14001 ;;		_abs
 14002 ;;		_pad
 14003 ;; This function is called by:
 14004 ;;		_vfpfcnvrt
 14005 ;; This function uses a non-reentrant model
 14006 ;;
 14007                           
 14008                           	psect	text50
 14009   003B8C                     __ptext50:
 14010                           	callstack 0
 14011   003B8C                     _dtoa:
 14012                           	callstack 21
 14013   003B8C                     
 14014                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 513: static void dtoa(FILE *fp, vfp
      +                          f_sint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 514: {;D:\MPLABX\Compile
      +                          r\pic\sources\c99\common\doprnt.c: 515:  char s;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 516:     int i, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 518:
      +                            int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 524:     s = d < 0 ? 1 : 0;
 14015   003B8C  BE23               	btfsc	(dtoa@d+1)^0,7,c
 14016   003B8E  EFCB  F01D         	goto	u8451
 14017   003B92  EFCE  F01D         	goto	u8450
 14018   003B96                     u8451:
 14019   003B96  0E01               	movlw	1
 14020   003B98  EFCF  F01D         	goto	u8460
 14021   003B9C                     u8450:
 14022   003B9C  0E00               	movlw	0
 14023   003B9E                     u8460:
 14024   003B9E  6E2A               	movwf	dtoa@s^0,c
 14025                           
 14026                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 533:     p = (0 <= prec) ? prec : 1
      +                          ;
 14027   003BA0  BE58               	btfsc	(_prec+1)^0,7,c
 14028   003BA2  EFD7  F01D         	goto	u8470
 14029   003BA6  EFD5  F01D         	goto	u8471
 14030   003BAA                     u8471:
 14031   003BAA  EFDD  F01D         	goto	l1427
 14032   003BAE                     u8470:
 14033   003BAE  0E00               	movlw	0
 14034   003BB0  6E29               	movwf	(dtoa@p+1)^0,c
 14035   003BB2  0E01               	movlw	1
 14036   003BB4  6E28               	movwf	dtoa@p^0,c
 14037   003BB6  EFE1  F01D         	goto	l1429
 14038   003BBA                     l1427:
 14039   003BBA  C057  F028         	movff	_prec,dtoa@p
 14040   003BBE  C058  F029         	movff	_prec+1,dtoa@p+1
 14041   003BC2                     l1429:
 14042                           
 14043                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 535:     w = width;
 14044   003BC2  C055  F026         	movff	_width,dtoa@w
 14045   003BC6  C056  F027         	movff	_width+1,dtoa@w+1
 14046   003BCA                     
 14047                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 536:     if (s
 14048   003BCA  502A               	movf	dtoa@s^0,w,c
 14049   003BCC  B4D8               	btfsc	status,2,c
 14050   003BCE  EFEB  F01D         	goto	u8481
 14051   003BD2  EFED  F01D         	goto	u8480
 14052   003BD6                     u8481:
 14053   003BD6  EF04  F01E         	goto	l1430
 14054   003BDA                     u8480:
 14055   003BDA                     
 14056                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 540:     ) {;D:\MPLABX\Compiler\pic
      +                          \sources\c99\common\doprnt.c: 541:         --w;
 14057   003BDA  0626               	decf	dtoa@w^0,f,c
 14058   003BDC  A0D8               	btfss	status,0,c
 14059   003BDE  0627               	decf	(dtoa@w+1)^0,f,c
 14060   003BE0                     
 14061                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-' : '+';
 14062   003BE0  502A               	movf	dtoa@s^0,w,c
 14063   003BE2  A4D8               	btfss	status,2,c
 14064   003BE4  EFF6  F01D         	goto	u8491
 14065   003BE8  EFF8  F01D         	goto	u8490
 14066   003BEC                     u8491:
 14067   003BEC  EFFE  F01D         	goto	l7094
 14068   003BF0                     u8490:
 14069   003BF0  0E00               	movlw	0
 14070   003BF2  6E25               	movwf	(_dtoa$4037+1)^0,c
 14071   003BF4  0E2B               	movlw	43
 14072   003BF6  6E24               	movwf	_dtoa$4037^0,c
 14073   003BF8  EF02  F01E         	goto	l7096
 14074   003BFC                     l7094:
 14075   003BFC  0E00               	movlw	0
 14076   003BFE  6E25               	movwf	(_dtoa$4037+1)^0,c
 14077   003C00  0E2D               	movlw	45
 14078   003C02  6E24               	movwf	_dtoa$4037^0,c
 14079   003C04                     l7096:
 14080   003C04  C024  F02A         	movff	_dtoa$4037,dtoa@s
 14081   003C08                     l1430:
 14082                           
 14083                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 552:     i = sizeof(dbuf) - 1;
 14084   003C08  0E00               	movlw	0
 14085   003C0A  6E2C               	movwf	(dtoa@i+1)^0,c
 14086   003C0C  0E4F               	movlw	79
 14087   003C0E  6E2B               	movwf	dtoa@i^0,c
 14088   003C10                     
 14089                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] = '\0';
 14090   003C10  0E00               	movlw	0
 14091   003C12  0101               	movlb	1	; () banked
 14092   003C14  6F76               	movwf	(_dbuf+79)& (0+255),b
 14093                           
 14094                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 14095   003C16  EF3D  F01E         	goto	l7110
 14096   003C1A                     l7100:
 14097                           
 14098                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 563:     )) {;D:\MPLABX\Compiler\pi
      +                          c\sources\c99\common\doprnt.c: 564:         --i;
 14099   003C1A  062B               	decf	dtoa@i^0,f,c
 14100   003C1C  A0D8               	btfss	status,0,c
 14101   003C1E  062C               	decf	(dtoa@i+1)^0,f,c
 14102   003C20                     
 14103                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 565:         dbuf[i] = (char)((int)
      +                          '0' + abs(d % 10));
 14104   003C20  0E27               	movlw	low _dbuf
 14105   003C22  242B               	addwf	dtoa@i^0,w,c
 14106   003C24  6ED9               	movwf	fsr2l,c
 14107   003C26  0E01               	movlw	high _dbuf
 14108   003C28  202C               	addwfc	(dtoa@i+1)^0,w,c
 14109   003C2A  6EDA               	movwf	fsr2h,c
 14110   003C2C  C022  F006         	movff	dtoa@d,___awmod@dividend
 14111   003C30  C023  F007         	movff	dtoa@d+1,___awmod@dividend+1
 14112   003C34  0E00               	movlw	0
 14113   003C36  6E09               	movwf	(___awmod@divisor+1)^0,c
 14114   003C38  0E0A               	movlw	10
 14115   003C3A  6E08               	movwf	___awmod@divisor^0,c
 14116   003C3C  ECA6  F024         	call	___awmod	;wreg free
 14117   003C40  C006  F00C         	movff	?___awmod,abs@a
 14118   003C44  C007  F00D         	movff	?___awmod+1,abs@a+1
 14119   003C48  ECB2  F028         	call	_abs	;wreg free
 14120   003C4C  500C               	movf	?_abs^0,w,c
 14121   003C4E  0F30               	addlw	48
 14122   003C50  6EDF               	movwf	indf2,c
 14123   003C52                     
 14124                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 567:         --p;
 14125   003C52  0628               	decf	dtoa@p^0,f,c
 14126   003C54  A0D8               	btfss	status,0,c
 14127   003C56  0629               	decf	(dtoa@p+1)^0,f,c
 14128   003C58                     
 14129                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 571:         --w;
 14130   003C58  0626               	decf	dtoa@w^0,f,c
 14131   003C5A  A0D8               	btfss	status,0,c
 14132   003C5C  0627               	decf	(dtoa@w+1)^0,f,c
 14133   003C5E                     
 14134                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 572:         d = d / 10;
 14135   003C5E  C022  F018         	movff	dtoa@d,___awdiv@dividend
 14136   003C62  C023  F019         	movff	dtoa@d+1,___awdiv@dividend+1
 14137   003C66  0E00               	movlw	0
 14138   003C68  6E1B               	movwf	(___awdiv@divisor+1)^0,c
 14139   003C6A  0E0A               	movlw	10
 14140   003C6C  6E1A               	movwf	___awdiv@divisor^0,c
 14141   003C6E  ECEB  F023         	call	___awdiv	;wreg free
 14142   003C72  C018  F022         	movff	?___awdiv,dtoa@d
 14143   003C76  C019  F023         	movff	?___awdiv+1,dtoa@d+1
 14144   003C7A                     l7110:
 14145                           
 14146                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 14147   003C7A  BE2C               	btfsc	(dtoa@i+1)^0,7,c
 14148   003C7C  EF48  F01E         	goto	u8501
 14149   003C80  502C               	movf	(dtoa@i+1)^0,w,c
 14150   003C82  E108               	bnz	u8500
 14151   003C84  042B               	decf	dtoa@i^0,w,c
 14152   003C86  A0D8               	btfss	status,0,c
 14153   003C88  EF48  F01E         	goto	u8501
 14154   003C8C  EF4A  F01E         	goto	u8500
 14155   003C90                     u8501:
 14156   003C90  EF60  F01E         	goto	l7116
 14157   003C94                     u8500:
 14158   003C94  5022               	movf	dtoa@d^0,w,c
 14159   003C96  1023               	iorwf	(dtoa@d+1)^0,w,c
 14160   003C98  A4D8               	btfss	status,2,c
 14161   003C9A  EF51  F01E         	goto	u8511
 14162   003C9E  EF53  F01E         	goto	u8510
 14163   003CA2                     u8511:
 14164   003CA2  EF0D  F01E         	goto	l7100
 14165   003CA6                     u8510:
 14166   003CA6  BE29               	btfsc	(dtoa@p+1)^0,7,c
 14167   003CA8  EF60  F01E         	goto	u8520
 14168   003CAC  5029               	movf	(dtoa@p+1)^0,w,c
 14169   003CAE  E106               	bnz	u8521
 14170   003CB0  0428               	decf	dtoa@p^0,w,c
 14171   003CB2  B0D8               	btfsc	status,0,c
 14172   003CB4  EF5E  F01E         	goto	u8521
 14173   003CB8  EF60  F01E         	goto	u8520
 14174   003CBC                     u8521:
 14175   003CBC  EF0D  F01E         	goto	l7100
 14176   003CC0                     u8520:
 14177   003CC0                     l7116:
 14178                           
 14179                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 576:     if (s != 0) {
 14180   003CC0  502A               	movf	dtoa@s^0,w,c
 14181   003CC2  B4D8               	btfsc	status,2,c
 14182   003CC4  EF66  F01E         	goto	u8531
 14183   003CC8  EF68  F01E         	goto	u8530
 14184   003CCC                     u8531:
 14185   003CCC  EF73  F01E         	goto	l7122
 14186   003CD0                     u8530:
 14187   003CD0                     
 14188                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 577:         --i;
 14189   003CD0  062B               	decf	dtoa@i^0,f,c
 14190   003CD2  A0D8               	btfss	status,0,c
 14191   003CD4  062C               	decf	(dtoa@i+1)^0,f,c
 14192   003CD6                     
 14193                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 578:         dbuf[i] = s;
 14194   003CD6  0E27               	movlw	low _dbuf
 14195   003CD8  242B               	addwf	dtoa@i^0,w,c
 14196   003CDA  6ED9               	movwf	fsr2l,c
 14197   003CDC  0E01               	movlw	high _dbuf
 14198   003CDE  202C               	addwfc	(dtoa@i+1)^0,w,c
 14199   003CE0  6EDA               	movwf	fsr2h,c
 14200   003CE2  C02A  FFDF         	movff	dtoa@s,indf2
 14201   003CE6                     l7122:
 14202                           
 14203                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 582:     return (void) pad(fp, &dbu
      +                          f[i], w);
 14204   003CE6  C020  F017         	movff	dtoa@fp,pad@fp
 14205   003CEA  C021  F018         	movff	dtoa@fp+1,pad@fp+1
 14206   003CEE  0E27               	movlw	low _dbuf
 14207   003CF0  242B               	addwf	dtoa@i^0,w,c
 14208   003CF2  6E19               	movwf	pad@buf^0,c
 14209   003CF4  0E01               	movlw	high _dbuf
 14210   003CF6  202C               	addwfc	(dtoa@i+1)^0,w,c
 14211   003CF8  6E1A               	movwf	(pad@buf+1)^0,c
 14212   003CFA  C026  F01B         	movff	dtoa@w,pad@p
 14213   003CFE  C027  F01C         	movff	dtoa@w+1,pad@p+1
 14214   003D02  ECAA  F025         	call	_pad	;wreg free
 14215   003D06  0012               	return		;funcret
 14216   003D08                     __end_of_dtoa:
 14217                           	callstack 0
 14218                           
 14219 ;; *************** function _pad *****************
 14220 ;; Defined at:
 14221 ;;		line 193 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 14222 ;; Parameters:    Size  Location     Type
 14223 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 14224 ;;		 -> NULL(0), sprintf@f(12), 
 14225 ;;  buf             2   24[COMRAM] PTR unsigned char 
 14226 ;;		 -> dbuf(80), 
 14227 ;;  p               2   26[COMRAM] int 
 14228 ;; Auto vars:     Size  Location     Type
 14229 ;;  i               2   29[COMRAM] int 
 14230 ;; Return value:  Size  Location     Type
 14231 ;;                  1    wreg      void 
 14232 ;; Registers used:
 14233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14234 ;; Tracked objects:
 14235 ;;		On entry : 0/0
 14236 ;;		On exit  : 0/0
 14237 ;;		Unchanged: 0/0
 14238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14239 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14240 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14242 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14243 ;;Total ram usage:        9 bytes
 14244 ;; Hardware stack levels used: 1
 14245 ;; Hardware stack levels required when called: 4
 14246 ;; This function calls:
 14247 ;;		_fputc
 14248 ;;		_fputs
 14249 ;; This function is called by:
 14250 ;;		_dtoa
 14251 ;;		_efgtoa
 14252 ;;		_utoa
 14253 ;; This function uses a non-reentrant model
 14254 ;;
 14255                           
 14256                           	psect	text51
 14257   004B54                     __ptext51:
 14258                           	callstack 0
 14259   004B54                     _pad:
 14260                           	callstack 21
 14261   004B54                     
 14262                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 193: static void pad(FILE *fp, char
      +                           *buf, int p);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 194: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 195:     int i;;D:\MPLABX\Compiler\pic\sources\c99\
      +                          common\doprnt.c: 199:     if (flags & (1 << 0)) {
 14263   004B54  A059               	btfss	_flags^0,0,c
 14264   004B56  EFAF  F025         	goto	u8201
 14265   004B5A  EFB1  F025         	goto	u8200
 14266   004B5E                     u8201:
 14267   004B5E  EFBB  F025         	goto	l6992
 14268   004B62                     u8200:
 14269   004B62                     
 14270                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 200:         fputs((const char *)bu
      +                          f, fp);
 14271   004B62  C019  F010         	movff	pad@buf,fputs@s
 14272   004B66  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14273   004B6A  C017  F012         	movff	pad@fp,fputs@fp
 14274   004B6E  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14275   004B72  ECE8  F027         	call	_fputs	;wreg free
 14276   004B76                     l6992:
 14277                           
 14278                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) {
 14279   004B76  BE1C               	btfsc	(pad@p+1)^0,7,c
 14280   004B78  EFC2  F025         	goto	u8210
 14281   004B7C  EFC0  F025         	goto	u8211
 14282   004B80                     u8211:
 14283   004B80  EFC6  F025         	goto	l1418
 14284   004B84                     u8210:
 14285   004B84                     
 14286                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 14287   004B84  0E00               	movlw	0
 14288   004B86  6E1C               	movwf	(pad@p+1)^0,c
 14289   004B88  0E00               	movlw	0
 14290   004B8A  6E1B               	movwf	pad@p^0,c
 14291   004B8C                     l1418:
 14292                           
 14293                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 14294   004B8C  0E00               	movlw	0
 14295   004B8E  6E1F               	movwf	(pad@i+1)^0,c
 14296   004B90  0E00               	movlw	0
 14297   004B92  6E1E               	movwf	pad@i^0,c
 14298                           
 14299                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 14300   004B94  EFD8  F025         	goto	l7000
 14301   004B98                     l6996:
 14302                           
 14303                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 210:         fputc(' ', fp);
 14304   004B98  0E00               	movlw	0
 14305   004B9A  6E08               	movwf	(fputc@c+1)^0,c
 14306   004B9C  0E20               	movlw	32
 14307   004B9E  6E07               	movwf	fputc@c^0,c
 14308   004BA0  C017  F009         	movff	pad@fp,fputc@fp
 14309   004BA4  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 14310   004BA8  EC86  F023         	call	_fputc	;wreg free
 14311   004BAC                     
 14312                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 211:         ++i;
 14313   004BAC  4A1E               	infsnz	pad@i^0,f,c
 14314   004BAE  2A1F               	incf	(pad@i+1)^0,f,c
 14315   004BB0                     l7000:
 14316                           
 14317                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 14318   004BB0  501B               	movf	pad@p^0,w,c
 14319   004BB2  5C1E               	subwf	pad@i^0,w,c
 14320   004BB4  501F               	movf	(pad@i+1)^0,w,c
 14321   004BB6  0A80               	xorlw	128
 14322   004BB8  6E1D               	movwf	??_pad^0,c
 14323   004BBA  501C               	movf	(pad@p+1)^0,w,c
 14324   004BBC  0A80               	xorlw	128
 14325   004BBE  581D               	subwfb	??_pad^0,w,c
 14326   004BC0  A0D8               	btfss	status,0,c
 14327   004BC2  EFE5  F025         	goto	u8221
 14328   004BC6  EFE7  F025         	goto	u8220
 14329   004BCA                     u8221:
 14330   004BCA  EFCC  F025         	goto	l6996
 14331   004BCE                     u8220:
 14332   004BCE                     
 14333                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 216:     if (!(flags & (1 << 0))) {
 14334   004BCE  B059               	btfsc	_flags^0,0,c
 14335   004BD0  EFEC  F025         	goto	u8231
 14336   004BD4  EFEE  F025         	goto	u8230
 14337   004BD8                     u8231:
 14338   004BD8  EFF8  F025         	goto	l1423
 14339   004BDC                     u8230:
 14340   004BDC                     
 14341                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 218:         fputs((const char *)bu
      +                          f, fp);
 14342   004BDC  C019  F010         	movff	pad@buf,fputs@s
 14343   004BE0  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14344   004BE4  C017  F012         	movff	pad@fp,fputs@fp
 14345   004BE8  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14346   004BEC  ECE8  F027         	call	_fputs	;wreg free
 14347   004BF0                     l1423:
 14348   004BF0  0012               	return		;funcret
 14349   004BF2                     __end_of_pad:
 14350                           	callstack 0
 14351                           
 14352 ;; *************** function _fputs *****************
 14353 ;; Defined at:
 14354 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputs.c"
 14355 ;; Parameters:    Size  Location     Type
 14356 ;;  s               2   15[COMRAM] PTR const unsigned char 
 14357 ;;		 -> dbuf(80), 
 14358 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 14359 ;;		 -> NULL(0), sprintf@f(12), 
 14360 ;; Auto vars:     Size  Location     Type
 14361 ;;  i               2   20[COMRAM] int 
 14362 ;;  c               1   19[COMRAM] unsigned char 
 14363 ;; Return value:  Size  Location     Type
 14364 ;;                  2   15[COMRAM] int 
 14365 ;; Registers used:
 14366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14367 ;; Tracked objects:
 14368 ;;		On entry : 0/0
 14369 ;;		On exit  : 0/0
 14370 ;;		Unchanged: 0/0
 14371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14373 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14375 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14376 ;;Total ram usage:        7 bytes
 14377 ;; Hardware stack levels used: 1
 14378 ;; Hardware stack levels required when called: 3
 14379 ;; This function calls:
 14380 ;;		_fputc
 14381 ;; This function is called by:
 14382 ;;		_pad
 14383 ;; This function uses a non-reentrant model
 14384 ;;
 14385                           
 14386                           	psect	text52
 14387   004FD0                     __ptext52:
 14388                           	callstack 0
 14389   004FD0                     _fputs:
 14390                           	callstack 21
 14391   004FD0  0E00               	movlw	0
 14392   004FD2  6E16               	movwf	(fputs@i+1)^0,c
 14393   004FD4  0E00               	movlw	0
 14394   004FD6  6E15               	movwf	fputs@i^0,c
 14395   004FD8  EFF9  F027         	goto	l6498
 14396   004FDC                     l6494:
 14397   004FDC  C014  F007         	movff	fputs@c,fputc@c
 14398   004FE0  6A08               	clrf	(fputc@c+1)^0,c
 14399   004FE2  C012  F009         	movff	fputs@fp,fputc@fp
 14400   004FE6  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 14401   004FEA  EC86  F023         	call	_fputc	;wreg free
 14402   004FEE  4A15               	infsnz	fputs@i^0,f,c
 14403   004FF0  2A16               	incf	(fputs@i+1)^0,f,c
 14404   004FF2                     l6498:
 14405   004FF2  5015               	movf	fputs@i^0,w,c
 14406   004FF4  2410               	addwf	fputs@s^0,w,c
 14407   004FF6  6ED9               	movwf	fsr2l,c
 14408   004FF8  5016               	movf	(fputs@i+1)^0,w,c
 14409   004FFA  2011               	addwfc	(fputs@s+1)^0,w,c
 14410   004FFC  6EDA               	movwf	fsr2h,c
 14411   004FFE  50DF               	movf	indf2,w,c
 14412   005000  6E14               	movwf	fputs@c^0,c
 14413   005002  5014               	movf	fputs@c^0,w,c
 14414   005004  A4D8               	btfss	status,2,c
 14415   005006  EF07  F028         	goto	u7431
 14416   00500A  EF09  F028         	goto	u7430
 14417   00500E                     u7431:
 14418   00500E  EFEE  F027         	goto	l6494
 14419   005012                     u7430:
 14420   005012  0012               	return		;funcret
 14421   005014                     __end_of_fputs:
 14422                           	callstack 0
 14423                           
 14424 ;; *************** function _fputc *****************
 14425 ;; Defined at:
 14426 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputc.c"
 14427 ;; Parameters:    Size  Location     Type
 14428 ;;  c               2    6[COMRAM] int 
 14429 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 14430 ;;		 -> NULL(0), sprintf@f(12), 
 14431 ;; Auto vars:     Size  Location     Type
 14432 ;;		None
 14433 ;; Return value:  Size  Location     Type
 14434 ;;                  2    6[COMRAM] int 
 14435 ;; Registers used:
 14436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14437 ;; Tracked objects:
 14438 ;;		On entry : 0/0
 14439 ;;		On exit  : 0/0
 14440 ;;		Unchanged: 0/0
 14441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14444 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14445 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14446 ;;Total ram usage:        9 bytes
 14447 ;; Hardware stack levels used: 1
 14448 ;; Hardware stack levels required when called: 2
 14449 ;; This function calls:
 14450 ;;		_putch
 14451 ;; This function is called by:
 14452 ;;		_pad
 14453 ;;		_stoa
 14454 ;;		_vfpfcnvrt
 14455 ;;		_fputs
 14456 ;; This function uses a non-reentrant model
 14457 ;;
 14458                           
 14459                           	psect	text53
 14460   00470C                     __ptext53:
 14461                           	callstack 0
 14462   00470C                     _fputc:
 14463                           	callstack 21
 14464   00470C  5009               	movf	fputc@fp^0,w,c
 14465   00470E  100A               	iorwf	(fputc@fp+1)^0,w,c
 14466   004710  B4D8               	btfsc	status,2,c
 14467   004712  EF8D  F023         	goto	u7001
 14468   004716  EF8F  F023         	goto	u7000
 14469   00471A                     u7001:
 14470   00471A  EF98  F023         	goto	l6280
 14471   00471E                     u7000:
 14472   00471E  5009               	movf	fputc@fp^0,w,c
 14473   004720  100A               	iorwf	(fputc@fp+1)^0,w,c
 14474   004722  A4D8               	btfss	status,2,c
 14475   004724  EF96  F023         	goto	u7011
 14476   004728  EF98  F023         	goto	u7010
 14477   00472C                     u7011:
 14478   00472C  EF9D  F023         	goto	l6282
 14479   004730                     u7010:
 14480   004730                     l6280:
 14481   004730  5007               	movf	fputc@c^0,w,c
 14482   004732  EC16  F029         	call	_putch
 14483   004736  EFEA  F023         	goto	l1652
 14484   00473A                     l6282:
 14485   00473A  EE20 F00A          	lfsr	2,10
 14486   00473E  5009               	movf	fputc@fp^0,w,c
 14487   004740  26D9               	addwf	fsr2l,f,c
 14488   004742  500A               	movf	(fputc@fp+1)^0,w,c
 14489   004744  22DA               	addwfc	fsr2h,f,c
 14490   004746  50DE               	movf	postinc2,w,c
 14491   004748  10DE               	iorwf	postinc2,w,c
 14492   00474A  B4D8               	btfsc	status,2,c
 14493   00474C  EFAA  F023         	goto	u7021
 14494   004750  EFAC  F023         	goto	u7020
 14495   004754                     u7021:
 14496   004754  EFC7  F023         	goto	l6286
 14497   004758                     u7020:
 14498   004758  EE20 F00A          	lfsr	2,10
 14499   00475C  5009               	movf	fputc@fp^0,w,c
 14500   00475E  26D9               	addwf	fsr2l,f,c
 14501   004760  500A               	movf	(fputc@fp+1)^0,w,c
 14502   004762  22DA               	addwfc	fsr2h,f,c
 14503   004764  EE10 F003          	lfsr	1,3
 14504   004768  5009               	movf	fputc@fp^0,w,c
 14505   00476A  26E1               	addwf	fsr1l,f,c
 14506   00476C  500A               	movf	(fputc@fp+1)^0,w,c
 14507   00476E  22E2               	addwfc	fsr1h,f,c
 14508   004770  50DE               	movf	postinc2,w,c
 14509   004772  5CE6               	subwf	postinc1,w,c
 14510   004774  50E6               	movf	postinc1,w,c
 14511   004776  0A80               	xorlw	128
 14512   004778  6E0F               	movwf	(??_fputc+4)^0,c
 14513   00477A  50DE               	movf	postinc2,w,c
 14514   00477C  0A80               	xorlw	128
 14515   00477E  580F               	subwfb	(??_fputc+4)^0,w,c
 14516   004780  B0D8               	btfsc	status,0,c
 14517   004782  EFC5  F023         	goto	u7031
 14518   004786  EFC7  F023         	goto	u7030
 14519   00478A                     u7031:
 14520   00478A  EFEA  F023         	goto	l1652
 14521   00478E                     u7030:
 14522   00478E                     l6286:
 14523   00478E  EE20 F003          	lfsr	2,3
 14524   004792  5009               	movf	fputc@fp^0,w,c
 14525   004794  26D9               	addwf	fsr2l,f,c
 14526   004796  500A               	movf	(fputc@fp+1)^0,w,c
 14527   004798  22DA               	addwfc	fsr2h,f,c
 14528   00479A  CFDE F00B          	movff	postinc2,??_fputc
 14529   00479E  CFDD F00C          	movff	postdec2,??_fputc+1
 14530   0047A2  C009  FFD9         	movff	fputc@fp,fsr2l
 14531   0047A6  C00A  FFDA         	movff	fputc@fp+1,fsr2h
 14532   0047AA  CFDE F00D          	movff	postinc2,??_fputc+2
 14533   0047AE  CFDD F00E          	movff	postdec2,??_fputc+3
 14534   0047B2  500B               	movf	??_fputc^0,w,c
 14535   0047B4  240D               	addwf	(??_fputc+2)^0,w,c
 14536   0047B6  6ED9               	movwf	fsr2l,c
 14537   0047B8  500C               	movf	(??_fputc+1)^0,w,c
 14538   0047BA  200E               	addwfc	(??_fputc+3)^0,w,c
 14539   0047BC  6EDA               	movwf	fsr2h,c
 14540   0047BE  C007  FFDF         	movff	fputc@c,indf2
 14541   0047C2  EE20 F003          	lfsr	2,3
 14542   0047C6  5009               	movf	fputc@fp^0,w,c
 14543   0047C8  26D9               	addwf	fsr2l,f,c
 14544   0047CA  500A               	movf	(fputc@fp+1)^0,w,c
 14545   0047CC  22DA               	addwfc	fsr2h,f,c
 14546   0047CE  2ADE               	incf	postinc2,f,c
 14547   0047D0  0E00               	movlw	0
 14548   0047D2  22DD               	addwfc	postdec2,f,c
 14549   0047D4                     l1652:
 14550   0047D4  0012               	return		;funcret
 14551   0047D6                     __end_of_fputc:
 14552                           	callstack 0
 14553                           
 14554 ;; *************** function _putch *****************
 14555 ;; Defined at:
 14556 ;;		line 11 in file "putch.c"
 14557 ;; Parameters:    Size  Location     Type
 14558 ;;  data            1    wreg     unsigned char 
 14559 ;; Auto vars:     Size  Location     Type
 14560 ;;  data            1    5[COMRAM] unsigned char 
 14561 ;; Return value:  Size  Location     Type
 14562 ;;                  1    wreg      void 
 14563 ;; Registers used:
 14564 ;;		wreg
 14565 ;; Tracked objects:
 14566 ;;		On entry : 0/0
 14567 ;;		On exit  : 0/0
 14568 ;;		Unchanged: 0/0
 14569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14573 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14574 ;;Total ram usage:        1 bytes
 14575 ;; Hardware stack levels used: 1
 14576 ;; Hardware stack levels required when called: 1
 14577 ;; This function calls:
 14578 ;;		Nothing
 14579 ;; This function is called by:
 14580 ;;		_fputc
 14581 ;; This function uses a non-reentrant model
 14582 ;;
 14583                           
 14584                           	psect	text54
 14585   00522C                     __ptext54:
 14586                           	callstack 0
 14587   00522C                     _putch:
 14588                           	callstack 21
 14589                           
 14590                           ;incstack = 0
 14591                           ;putch@data stored from wreg
 14592   00522C  6E06               	movwf	putch@data^0,c
 14593   00522E                     l270:
 14594   00522E  A89E               	btfss	3998,4,c	;volatile
 14595   005230  EF1C  F029         	goto	u6991
 14596   005234  EF1E  F029         	goto	u6990
 14597   005238                     u6991:
 14598   005238  EF17  F029         	goto	l270
 14599   00523C                     u6990:
 14600   00523C                     
 14601                           ;putch.c: 13:     TXREG1 = data;
 14602   00523C  C006  FFAD         	movff	putch@data,4013	;volatile
 14603   005240  0012               	return		;funcret
 14604   005242                     __end_of_putch:
 14605                           	callstack 0
 14606                           
 14607 ;; *************** function _abs *****************
 14608 ;; Defined at:
 14609 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\abs.c"
 14610 ;; Parameters:    Size  Location     Type
 14611 ;;  a               2   11[COMRAM] int 
 14612 ;; Auto vars:     Size  Location     Type
 14613 ;;		None
 14614 ;; Return value:  Size  Location     Type
 14615 ;;                  2   11[COMRAM] int 
 14616 ;; Registers used:
 14617 ;;		wreg, status,2, status,0
 14618 ;; Tracked objects:
 14619 ;;		On entry : 0/0
 14620 ;;		On exit  : 0/0
 14621 ;;		Unchanged: 0/0
 14622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14625 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14626 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14627 ;;Total ram usage:        4 bytes
 14628 ;; Hardware stack levels used: 1
 14629 ;; Hardware stack levels required when called: 1
 14630 ;; This function calls:
 14631 ;;		Nothing
 14632 ;; This function is called by:
 14633 ;;		_dtoa
 14634 ;; This function uses a non-reentrant model
 14635 ;;
 14636                           
 14637                           	psect	text55
 14638   005164                     __ptext55:
 14639                           	callstack 0
 14640   005164                     _abs:
 14641                           	callstack 24
 14642   005164  BE0D               	btfsc	(abs@a+1)^0,7,c
 14643   005166  EFB7  F028         	goto	u8241
 14644   00516A  EFB9  F028         	goto	u8240
 14645   00516E                     u8241:
 14646   00516E  EFBF  F028         	goto	l1611
 14647   005172                     u8240:
 14648   005172  C00C  F00C         	movff	abs@a,?_abs
 14649   005176  C00D  F00D         	movff	abs@a+1,?_abs+1
 14650   00517A  EFCB  F028         	goto	l1614
 14651   00517E                     l1611:
 14652   00517E  C00C  F00E         	movff	abs@a,??_abs
 14653   005182  C00D  F00F         	movff	abs@a+1,??_abs+1
 14654   005186  1E0E               	comf	??_abs^0,f,c
 14655   005188  1E0F               	comf	(??_abs+1)^0,f,c
 14656   00518A  4A0E               	infsnz	??_abs^0,f,c
 14657   00518C  2A0F               	incf	(??_abs+1)^0,f,c
 14658   00518E  C00E  F00C         	movff	??_abs,?_abs
 14659   005192  C00F  F00D         	movff	??_abs+1,?_abs+1
 14660   005196                     l1614:
 14661   005196  0012               	return		;funcret
 14662   005198                     __end_of_abs:
 14663                           	callstack 0
 14664                           
 14665 ;; *************** function ___awmod *****************
 14666 ;; Defined at:
 14667 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awmod.c"
 14668 ;; Parameters:    Size  Location     Type
 14669 ;;  dividend        2    5[COMRAM] int 
 14670 ;;  divisor         2    7[COMRAM] int 
 14671 ;; Auto vars:     Size  Location     Type
 14672 ;;  sign            1   10[COMRAM] unsigned char 
 14673 ;;  counter         1    9[COMRAM] unsigned char 
 14674 ;; Return value:  Size  Location     Type
 14675 ;;                  2    5[COMRAM] int 
 14676 ;; Registers used:
 14677 ;;		wreg, status,2, status,0
 14678 ;; Tracked objects:
 14679 ;;		On entry : 0/0
 14680 ;;		On exit  : 0/0
 14681 ;;		Unchanged: 0/0
 14682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14683 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14684 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14686 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14687 ;;Total ram usage:        6 bytes
 14688 ;; Hardware stack levels used: 1
 14689 ;; Hardware stack levels required when called: 1
 14690 ;; This function calls:
 14691 ;;		Nothing
 14692 ;; This function is called by:
 14693 ;;		_dtoa
 14694 ;; This function uses a non-reentrant model
 14695 ;;
 14696                           
 14697                           	psect	text56
 14698   00494C                     __ptext56:
 14699                           	callstack 0
 14700   00494C                     ___awmod:
 14701                           	callstack 24
 14702   00494C  0E00               	movlw	0
 14703   00494E  6E0B               	movwf	___awmod@sign^0,c
 14704   004950  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 14705   004952  EFAF  F024         	goto	u7920
 14706   004956  EFAD  F024         	goto	u7921
 14707   00495A                     u7921:
 14708   00495A  EFB5  F024         	goto	l6832
 14709   00495E                     u7920:
 14710   00495E  6C06               	negf	___awmod@dividend^0,c
 14711   004960  1E07               	comf	(___awmod@dividend+1)^0,f,c
 14712   004962  B0D8               	btfsc	status,0,c
 14713   004964  2A07               	incf	(___awmod@dividend+1)^0,f,c
 14714   004966  0E01               	movlw	1
 14715   004968  6E0B               	movwf	___awmod@sign^0,c
 14716   00496A                     l6832:
 14717   00496A  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 14718   00496C  EFBC  F024         	goto	u7930
 14719   004970  EFBA  F024         	goto	u7931
 14720   004974                     u7931:
 14721   004974  EFC0  F024         	goto	l6836
 14722   004978                     u7930:
 14723   004978  6C08               	negf	___awmod@divisor^0,c
 14724   00497A  1E09               	comf	(___awmod@divisor+1)^0,f,c
 14725   00497C  B0D8               	btfsc	status,0,c
 14726   00497E  2A09               	incf	(___awmod@divisor+1)^0,f,c
 14727   004980                     l6836:
 14728   004980  5008               	movf	___awmod@divisor^0,w,c
 14729   004982  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 14730   004984  B4D8               	btfsc	status,2,c
 14731   004986  EFC7  F024         	goto	u7941
 14732   00498A  EFC9  F024         	goto	u7940
 14733   00498E                     u7941:
 14734   00498E  EFED  F024         	goto	l6852
 14735   004992                     u7940:
 14736   004992  0E01               	movlw	1
 14737   004994  6E0A               	movwf	___awmod@counter^0,c
 14738   004996  EFD1  F024         	goto	l6842
 14739   00499A                     l6840:
 14740   00499A  90D8               	bcf	status,0,c
 14741   00499C  3608               	rlcf	___awmod@divisor^0,f,c
 14742   00499E  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 14743   0049A0  2A0A               	incf	___awmod@counter^0,f,c
 14744   0049A2                     l6842:
 14745   0049A2  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 14746   0049A4  EFD6  F024         	goto	u7951
 14747   0049A8  EFD8  F024         	goto	u7950
 14748   0049AC                     u7951:
 14749   0049AC  EFCD  F024         	goto	l6840
 14750   0049B0                     u7950:
 14751   0049B0                     l6844:
 14752   0049B0  5008               	movf	___awmod@divisor^0,w,c
 14753   0049B2  5C06               	subwf	___awmod@dividend^0,w,c
 14754   0049B4  5009               	movf	(___awmod@divisor+1)^0,w,c
 14755   0049B6  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 14756   0049B8  A0D8               	btfss	status,0,c
 14757   0049BA  EFE1  F024         	goto	u7961
 14758   0049BE  EFE3  F024         	goto	u7960
 14759   0049C2                     u7961:
 14760   0049C2  EFE7  F024         	goto	l6848
 14761   0049C6                     u7960:
 14762   0049C6  5008               	movf	___awmod@divisor^0,w,c
 14763   0049C8  5E06               	subwf	___awmod@dividend^0,f,c
 14764   0049CA  5009               	movf	(___awmod@divisor+1)^0,w,c
 14765   0049CC  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 14766   0049CE                     l6848:
 14767   0049CE  90D8               	bcf	status,0,c
 14768   0049D0  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 14769   0049D2  3208               	rrcf	___awmod@divisor^0,f,c
 14770   0049D4  2E0A               	decfsz	___awmod@counter^0,f,c
 14771   0049D6  EFD8  F024         	goto	l6844
 14772   0049DA                     l6852:
 14773   0049DA  500B               	movf	___awmod@sign^0,w,c
 14774   0049DC  B4D8               	btfsc	status,2,c
 14775   0049DE  EFF3  F024         	goto	u7971
 14776   0049E2  EFF5  F024         	goto	u7970
 14777   0049E6                     u7971:
 14778   0049E6  EFF9  F024         	goto	l6856
 14779   0049EA                     u7970:
 14780   0049EA  6C06               	negf	___awmod@dividend^0,c
 14781   0049EC  1E07               	comf	(___awmod@dividend+1)^0,f,c
 14782   0049EE  B0D8               	btfsc	status,0,c
 14783   0049F0  2A07               	incf	(___awmod@dividend+1)^0,f,c
 14784   0049F2                     l6856:
 14785   0049F2  C006  F006         	movff	___awmod@dividend,?___awmod
 14786   0049F6  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 14787   0049FA  0012               	return		;funcret
 14788   0049FC                     __end_of___awmod:
 14789                           	callstack 0
 14790                           
 14791 ;; *************** function ___awdiv *****************
 14792 ;; Defined at:
 14793 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awdiv.c"
 14794 ;; Parameters:    Size  Location     Type
 14795 ;;  dividend        2   23[COMRAM] int 
 14796 ;;  divisor         2   25[COMRAM] int 
 14797 ;; Auto vars:     Size  Location     Type
 14798 ;;  quotient        2   29[COMRAM] int 
 14799 ;;  sign            1   28[COMRAM] unsigned char 
 14800 ;;  counter         1   27[COMRAM] unsigned char 
 14801 ;; Return value:  Size  Location     Type
 14802 ;;                  2   23[COMRAM] int 
 14803 ;; Registers used:
 14804 ;;		wreg, status,2, status,0
 14805 ;; Tracked objects:
 14806 ;;		On entry : 0/0
 14807 ;;		On exit  : 0/0
 14808 ;;		Unchanged: 0/0
 14809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14811 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14813 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14814 ;;Total ram usage:        8 bytes
 14815 ;; Hardware stack levels used: 1
 14816 ;; Hardware stack levels required when called: 1
 14817 ;; This function calls:
 14818 ;;		Nothing
 14819 ;; This function is called by:
 14820 ;;		_runPWM
 14821 ;;		_runGAME
 14822 ;;		_dtoa
 14823 ;; This function uses a non-reentrant model
 14824 ;;
 14825                           
 14826                           	psect	text57
 14827   0047D6                     __ptext57:
 14828                           	callstack 0
 14829   0047D6                     ___awdiv:
 14830                           	callstack 24
 14831   0047D6  0E00               	movlw	0
 14832   0047D8  6E1D               	movwf	___awdiv@sign^0,c
 14833   0047DA  BE1B               	btfsc	(___awdiv@divisor+1)^0,7,c
 14834   0047DC  EFF4  F023         	goto	u7860
 14835   0047E0  EFF2  F023         	goto	u7861
 14836   0047E4                     u7861:
 14837   0047E4  EFFA  F023         	goto	l6788
 14838   0047E8                     u7860:
 14839   0047E8  6C1A               	negf	___awdiv@divisor^0,c
 14840   0047EA  1E1B               	comf	(___awdiv@divisor+1)^0,f,c
 14841   0047EC  B0D8               	btfsc	status,0,c
 14842   0047EE  2A1B               	incf	(___awdiv@divisor+1)^0,f,c
 14843   0047F0  0E01               	movlw	1
 14844   0047F2  6E1D               	movwf	___awdiv@sign^0,c
 14845   0047F4                     l6788:
 14846   0047F4  BE19               	btfsc	(___awdiv@dividend+1)^0,7,c
 14847   0047F6  EF01  F024         	goto	u7870
 14848   0047FA  EFFF  F023         	goto	u7871
 14849   0047FE                     u7871:
 14850   0047FE  EF07  F024         	goto	l6794
 14851   004802                     u7870:
 14852   004802  6C18               	negf	___awdiv@dividend^0,c
 14853   004804  1E19               	comf	(___awdiv@dividend+1)^0,f,c
 14854   004806  B0D8               	btfsc	status,0,c
 14855   004808  2A19               	incf	(___awdiv@dividend+1)^0,f,c
 14856   00480A  0E01               	movlw	1
 14857   00480C  1A1D               	xorwf	___awdiv@sign^0,f,c
 14858   00480E                     l6794:
 14859   00480E  0E00               	movlw	0
 14860   004810  6E1F               	movwf	(___awdiv@quotient+1)^0,c
 14861   004812  0E00               	movlw	0
 14862   004814  6E1E               	movwf	___awdiv@quotient^0,c
 14863   004816  501A               	movf	___awdiv@divisor^0,w,c
 14864   004818  101B               	iorwf	(___awdiv@divisor+1)^0,w,c
 14865   00481A  B4D8               	btfsc	status,2,c
 14866   00481C  EF12  F024         	goto	u7881
 14867   004820  EF14  F024         	goto	u7880
 14868   004824                     u7881:
 14869   004824  EF3C  F024         	goto	l6816
 14870   004828                     u7880:
 14871   004828  0E01               	movlw	1
 14872   00482A  6E1C               	movwf	___awdiv@counter^0,c
 14873   00482C  EF1C  F024         	goto	l6802
 14874   004830                     l6800:
 14875   004830  90D8               	bcf	status,0,c
 14876   004832  361A               	rlcf	___awdiv@divisor^0,f,c
 14877   004834  361B               	rlcf	(___awdiv@divisor+1)^0,f,c
 14878   004836  2A1C               	incf	___awdiv@counter^0,f,c
 14879   004838                     l6802:
 14880   004838  AE1B               	btfss	(___awdiv@divisor+1)^0,7,c
 14881   00483A  EF21  F024         	goto	u7891
 14882   00483E  EF23  F024         	goto	u7890
 14883   004842                     u7891:
 14884   004842  EF18  F024         	goto	l6800
 14885   004846                     u7890:
 14886   004846                     l6804:
 14887   004846  90D8               	bcf	status,0,c
 14888   004848  361E               	rlcf	___awdiv@quotient^0,f,c
 14889   00484A  361F               	rlcf	(___awdiv@quotient+1)^0,f,c
 14890   00484C  501A               	movf	___awdiv@divisor^0,w,c
 14891   00484E  5C18               	subwf	___awdiv@dividend^0,w,c
 14892   004850  501B               	movf	(___awdiv@divisor+1)^0,w,c
 14893   004852  5819               	subwfb	(___awdiv@dividend+1)^0,w,c
 14894   004854  A0D8               	btfss	status,0,c
 14895   004856  EF2F  F024         	goto	u7901
 14896   00485A  EF31  F024         	goto	u7900
 14897   00485E                     u7901:
 14898   00485E  EF36  F024         	goto	l6812
 14899   004862                     u7900:
 14900   004862  501A               	movf	___awdiv@divisor^0,w,c
 14901   004864  5E18               	subwf	___awdiv@dividend^0,f,c
 14902   004866  501B               	movf	(___awdiv@divisor+1)^0,w,c
 14903   004868  5A19               	subwfb	(___awdiv@dividend+1)^0,f,c
 14904   00486A  801E               	bsf	___awdiv@quotient^0,0,c
 14905   00486C                     l6812:
 14906   00486C  90D8               	bcf	status,0,c
 14907   00486E  321B               	rrcf	(___awdiv@divisor+1)^0,f,c
 14908   004870  321A               	rrcf	___awdiv@divisor^0,f,c
 14909   004872  2E1C               	decfsz	___awdiv@counter^0,f,c
 14910   004874  EF23  F024         	goto	l6804
 14911   004878                     l6816:
 14912   004878  501D               	movf	___awdiv@sign^0,w,c
 14913   00487A  B4D8               	btfsc	status,2,c
 14914   00487C  EF42  F024         	goto	u7911
 14915   004880  EF44  F024         	goto	u7910
 14916   004884                     u7911:
 14917   004884  EF48  F024         	goto	l6820
 14918   004888                     u7910:
 14919   004888  6C1E               	negf	___awdiv@quotient^0,c
 14920   00488A  1E1F               	comf	(___awdiv@quotient+1)^0,f,c
 14921   00488C  B0D8               	btfsc	status,0,c
 14922   00488E  2A1F               	incf	(___awdiv@quotient+1)^0,f,c
 14923   004890                     l6820:
 14924   004890  C01E  F018         	movff	___awdiv@quotient,?___awdiv
 14925   004894  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
 14926   004898  0012               	return		;funcret
 14927   00489A                     __end_of___awdiv:
 14928                           	callstack 0
 14929                           
 14930 ;; *************** function _LCD_ShowString *****************
 14931 ;; Defined at:
 14932 ;;		line 55 in file "lcd.c"
 14933 ;; Parameters:    Size  Location     Type
 14934 ;;  lineNum         1    wreg     unsigned char 
 14935 ;;  textData        2    6[COMRAM] PTR unsigned char 
 14936 ;;		 -> STR_33(17), runGAME@approxText(25), runGAME@text(17), runADC@text(17), 
 14937 ;;		 -> moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_15(17), STR_14(17), 
 14938 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 14939 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_6(17), 
 14940 ;;		 -> STR_5(17), STR_4(17), STR_3(17), STR_2(17), 
 14941 ;;		 -> STR_1(17), 
 14942 ;; Auto vars:     Size  Location     Type
 14943 ;;  lineNum         1   10[COMRAM] unsigned char 
 14944 ;;  i               1   11[COMRAM] unsigned char 
 14945 ;; Return value:  Size  Location     Type
 14946 ;;                  1    wreg      void 
 14947 ;; Registers used:
 14948 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14949 ;; Tracked objects:
 14950 ;;		On entry : 0/0
 14951 ;;		On exit  : 0/0
 14952 ;;		Unchanged: 0/0
 14953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14957 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14958 ;;Total ram usage:        6 bytes
 14959 ;; Hardware stack levels used: 1
 14960 ;; Hardware stack levels required when called: 2
 14961 ;; This function calls:
 14962 ;;		_LCD_Send
 14963 ;; This function is called by:
 14964 ;;		_main
 14965 ;;		_moveDisplay
 14966 ;;		_runADC
 14967 ;;		_runGAME
 14968 ;; This function uses a non-reentrant model
 14969 ;;
 14970                           
 14971                           	psect	text58
 14972   00489A                     __ptext58:
 14973                           	callstack 0
 14974   00489A                     _LCD_ShowString:
 14975                           	callstack 27
 14976                           
 14977                           ;incstack = 0
 14978                           ;LCD_ShowString@lineNum stored from wreg
 14979   00489A  6E0B               	movwf	LCD_ShowString@lineNum^0,c
 14980   00489C                     
 14981                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 14982   00489C  806B               	bsf	107,0,c	;volatile
 14983   00489E                     l132:
 14984   00489E  B06B               	btfsc	107,0,c	;volatile
 14985   0048A0  EF54  F024         	goto	u9361
 14986   0048A4  EF56  F024         	goto	u9360
 14987   0048A8                     u9361:
 14988   0048A8  EF4F  F024         	goto	l132
 14989   0048AC                     u9360:
 14990   0048AC                     
 14991                           ;lcd.c: 62:     SSP2IF = 0;
 14992   0048AC  9EA4               	bcf	4004,7,c	;volatile
 14993   0048AE                     
 14994                           ;lcd.c: 64:     LCD_Send(0x7c);
 14995   0048AE  0E7C               	movlw	124
 14996   0048B0  ECF3  F028         	call	_LCD_Send
 14997                           
 14998                           ;lcd.c: 66:     LCD_Send(0x80);
 14999   0048B4  0E80               	movlw	128
 15000   0048B6  ECF3  F028         	call	_LCD_Send
 15001   0048BA                     
 15002                           ;lcd.c: 68:     if(lineNum == 1){
 15003   0048BA  040B               	decf	LCD_ShowString@lineNum^0,w,c
 15004   0048BC  A4D8               	btfss	status,2,c
 15005   0048BE  EF63  F024         	goto	u9371
 15006   0048C2  EF65  F024         	goto	u9370
 15007   0048C6                     u9371:
 15008   0048C6  EF6A  F024         	goto	l7722
 15009   0048CA                     u9370:
 15010   0048CA                     
 15011                           ;lcd.c: 69:         LCD_Send(0x80);
 15012   0048CA  0E80               	movlw	128
 15013   0048CC  ECF3  F028         	call	_LCD_Send
 15014                           
 15015                           ;lcd.c: 70:     }
 15016   0048D0  EF76  F024         	goto	l136
 15017   0048D4                     l7722:
 15018   0048D4  0E02               	movlw	2
 15019   0048D6  180B               	xorwf	LCD_ShowString@lineNum^0,w,c
 15020   0048D8  A4D8               	btfss	status,2,c
 15021   0048DA  EF71  F024         	goto	u9381
 15022   0048DE  EF73  F024         	goto	u9380
 15023   0048E2                     u9381:
 15024   0048E2  EF76  F024         	goto	l136
 15025   0048E6                     u9380:
 15026   0048E6                     
 15027                           ;lcd.c: 72:         LCD_Send(0xC0);
 15028   0048E6  0EC0               	movlw	192
 15029   0048E8  ECF3  F028         	call	_LCD_Send
 15030   0048EC                     l136:
 15031                           
 15032                           ;lcd.c: 75:     LCD_Send(0x40);
 15033   0048EC  0E40               	movlw	64
 15034   0048EE  ECF3  F028         	call	_LCD_Send
 15035   0048F2                     
 15036                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 15037   0048F2  0E00               	movlw	0
 15038   0048F4  6E0C               	movwf	LCD_ShowString@i^0,c
 15039   0048F6                     l7732:
 15040                           
 15041                           ;lcd.c: 78:         LCD_Send(textData[i]);
 15042   0048F6  500C               	movf	LCD_ShowString@i^0,w,c
 15043   0048F8  2407               	addwf	LCD_ShowString@textData^0,w,c
 15044   0048FA  6E09               	movwf	??_LCD_ShowString^0,c
 15045   0048FC  0E00               	movlw	0
 15046   0048FE  2008               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 15047   004900  6E0A               	movwf	(??_LCD_ShowString+1)^0,c
 15048   004902  C009  FFF6         	movff	??_LCD_ShowString,tblptrl
 15049   004906  C00A  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 15050   00490A  0E00               	movlw	low (__mediumconst shr (0+16))
 15051   00490C  6EF8               	movwf	tblptru,c
 15052   00490E  0E0F               	movlw	(high __ramtop+-1)
 15053   004910  64F7               	cpfsgt	tblptrh,c
 15054   004912  D003               	bra	u9397
 15055   004914  0008               	tblrd		*
 15056   004916  50F5               	movf	tablat,w,c
 15057   004918  D005               	bra	u9390
 15058   00491A                     u9397:
 15059   00491A  CFF6 FFE1          	movff	tblptrl,fsr1l
 15060   00491E  CFF7 FFE2          	movff	tblptrh,fsr1h
 15061   004922  50E7               	movf	indf1,w,c
 15062   004924                     u9390:
 15063   004924  ECF3  F028         	call	_LCD_Send
 15064   004928                     
 15065                           ;lcd.c: 79:     }
 15066   004928  2A0C               	incf	LCD_ShowString@i^0,f,c
 15067   00492A  0E0F               	movlw	15
 15068   00492C  640C               	cpfsgt	LCD_ShowString@i^0,c
 15069   00492E  EF9B  F024         	goto	u9401
 15070   004932  EF9D  F024         	goto	u9400
 15071   004936                     u9401:
 15072   004936  EF7B  F024         	goto	l7732
 15073   00493A                     u9400:
 15074   00493A                     
 15075                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 15076   00493A  846B               	bsf	107,2,c	;volatile
 15077   00493C                     l140:
 15078   00493C  B46B               	btfsc	107,2,c	;volatile
 15079   00493E  EFA3  F024         	goto	u9411
 15080   004942  EFA5  F024         	goto	u9410
 15081   004946                     u9411:
 15082   004946  EF9E  F024         	goto	l140
 15083   00494A                     u9410:
 15084   00494A  0012               	return		;funcret
 15085   00494C                     __end_of_LCD_ShowString:
 15086                           	callstack 0
 15087                           
 15088 ;; *************** function _LCD_Clear *****************
 15089 ;; Defined at:
 15090 ;;		line 94 in file "lcd.c"
 15091 ;; Parameters:    Size  Location     Type
 15092 ;;		None
 15093 ;; Auto vars:     Size  Location     Type
 15094 ;;		None
 15095 ;; Return value:  Size  Location     Type
 15096 ;;                  1    wreg      void 
 15097 ;; Registers used:
 15098 ;;		wreg, cstack
 15099 ;; Tracked objects:
 15100 ;;		On entry : 0/0
 15101 ;;		On exit  : 0/0
 15102 ;;		Unchanged: 0/0
 15103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15108 ;;Total ram usage:        0 bytes
 15109 ;; Hardware stack levels used: 1
 15110 ;; Hardware stack levels required when called: 2
 15111 ;; This function calls:
 15112 ;;		_LCD_Send
 15113 ;; This function is called by:
 15114 ;;		_moveDisplay
 15115 ;; This function uses a non-reentrant model
 15116 ;;
 15117                           
 15118                           	psect	text59
 15119   0050FA                     __ptext59:
 15120                           	callstack 0
 15121   0050FA                     _LCD_Clear:
 15122                           	callstack 27
 15123   0050FA                     
 15124                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
 15125   0050FA  806B               	bsf	107,0,c	;volatile
 15126   0050FC                     l155:
 15127   0050FC  B06B               	btfsc	107,0,c	;volatile
 15128   0050FE  EF83  F028         	goto	u9421
 15129   005102  EF85  F028         	goto	u9420
 15130   005106                     u9421:
 15131   005106  EF7E  F028         	goto	l155
 15132   00510A                     u9420:
 15133   00510A                     
 15134                           ;lcd.c: 97:     SSP2IF = 0;
 15135   00510A  9EA4               	bcf	4004,7,c	;volatile
 15136   00510C                     
 15137                           ;lcd.c: 99:     LCD_Send(0x7C);
 15138   00510C  0E7C               	movlw	124
 15139   00510E  ECF3  F028         	call	_LCD_Send
 15140                           
 15141                           ;lcd.c: 100:     LCD_Send(0x80);
 15142   005112  0E80               	movlw	128
 15143   005114  ECF3  F028         	call	_LCD_Send
 15144                           
 15145                           ;lcd.c: 101:     LCD_Send(0x01);
 15146   005118  0E01               	movlw	1
 15147   00511A  ECF3  F028         	call	_LCD_Send
 15148   00511E                     
 15149                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
 15150   00511E  846B               	bsf	107,2,c	;volatile
 15151   005120                     l158:
 15152   005120  B46B               	btfsc	107,2,c	;volatile
 15153   005122  EF95  F028         	goto	u9431
 15154   005126  EF97  F028         	goto	u9430
 15155   00512A                     u9431:
 15156   00512A  EF90  F028         	goto	l158
 15157   00512E                     u9430:
 15158   00512E  0012               	return		;funcret
 15159   005130                     __end_of_LCD_Clear:
 15160                           	callstack 0
 15161                           
 15162 ;; *************** function _LCD_Init *****************
 15163 ;; Defined at:
 15164 ;;		line 3 in file "lcd.c"
 15165 ;; Parameters:    Size  Location     Type
 15166 ;;		None
 15167 ;; Auto vars:     Size  Location     Type
 15168 ;;		None
 15169 ;; Return value:  Size  Location     Type
 15170 ;;                  1    wreg      void 
 15171 ;; Registers used:
 15172 ;;		wreg, status,2, cstack
 15173 ;; Tracked objects:
 15174 ;;		On entry : 0/0
 15175 ;;		On exit  : 0/0
 15176 ;;		Unchanged: 0/0
 15177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15180 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15181 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15182 ;;Total ram usage:        1 bytes
 15183 ;; Hardware stack levels used: 1
 15184 ;; Hardware stack levels required when called: 2
 15185 ;; This function calls:
 15186 ;;		_LCD_Send
 15187 ;; This function is called by:
 15188 ;;		_main
 15189 ;; This function uses a non-reentrant model
 15190 ;;
 15191                           
 15192                           	psect	text60
 15193   004632                     __ptext60:
 15194                           	callstack 0
 15195   004632                     _LCD_Init:
 15196                           	callstack 28
 15197   004632                     
 15198                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 15199   004632  010F               	movlb	15	; () banked
 15200   004634  913B               	bcf	59,0,b	;volatile
 15201                           
 15202                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 15203   004636  933B               	bcf	59,1,b	;volatile
 15204                           
 15205                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 15206   004638  8095               	bsf	149,0,c	;volatile
 15207                           
 15208                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 15209   00463A  8295               	bsf	149,1,c	;volatile
 15210                           
 15211                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 15212   00463C  9092               	bcf	146,0,c	;volatile
 15213                           
 15214                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 15215   00463E  8089               	bsf	137,0,c	;volatile
 15216   004640                     
 15217                           ; BSR set to: 15
 15218                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 15219   004640  506C               	movf	108,w,c	;volatile
 15220   004642  0BF0               	andlw	-16
 15221   004644  0908               	iorlw	8
 15222   004646  6E6C               	movwf	108,c	;volatile
 15223                           
 15224                           ;lcd.c: 15:     SSP2ADD = 19;
 15225   004648  0E13               	movlw	19
 15226   00464A  6E6E               	movwf	110,c	;volatile
 15227   00464C                     
 15228                           ; BSR set to: 15
 15229                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 15230   00464C  8A6C               	bsf	108,5,c	;volatile
 15231   00464E                     
 15232                           ; BSR set to: 15
 15233                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 15234   00464E  0E34               	movlw	52
 15235   004650  6E07               	movwf	??_LCD_Init^0,c
 15236   004652  0EF2               	movlw	242
 15237   004654                     u10507:
 15238   004654  2EE8               	decfsz	wreg,f,c
 15239   004656  D7FE               	bra	u10507
 15240   004658  2E07               	decfsz	??_LCD_Init^0,f,c
 15241   00465A  D7FC               	bra	u10507
 15242   00465C                     
 15243                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 15244   00465C  806B               	bsf	107,0,c	;volatile
 15245   00465E                     l123:
 15246   00465E  B06B               	btfsc	107,0,c	;volatile
 15247   004660  EF34  F023         	goto	u9701
 15248   004664  EF36  F023         	goto	u9700
 15249   004668                     u9701:
 15250   004668  EF2F  F023         	goto	l123
 15251   00466C                     u9700:
 15252   00466C                     
 15253                           ;lcd.c: 22:     SSP2IF = 0;
 15254   00466C  9EA4               	bcf	4004,7,c	;volatile
 15255   00466E                     
 15256                           ;lcd.c: 27:     LCD_Send(0x7C);
 15257   00466E  0E7C               	movlw	124
 15258   004670  ECF3  F028         	call	_LCD_Send
 15259                           
 15260                           ;lcd.c: 28:     LCD_Send(0x80);
 15261   004674  0E80               	movlw	128
 15262   004676  ECF3  F028         	call	_LCD_Send
 15263                           
 15264                           ;lcd.c: 29:     LCD_Send(0x38);
 15265   00467A  0E38               	movlw	56
 15266   00467C  ECF3  F028         	call	_LCD_Send
 15267                           
 15268                           ;lcd.c: 30:     LCD_Send(0x80);
 15269   004680  0E80               	movlw	128
 15270   004682  ECF3  F028         	call	_LCD_Send
 15271                           
 15272                           ;lcd.c: 31:     LCD_Send(0x39);
 15273   004686  0E39               	movlw	57
 15274   004688  ECF3  F028         	call	_LCD_Send
 15275                           
 15276                           ;lcd.c: 32:     LCD_Send(0x80);
 15277   00468C  0E80               	movlw	128
 15278   00468E  ECF3  F028         	call	_LCD_Send
 15279                           
 15280                           ;lcd.c: 33:     LCD_Send(0x17);
 15281   004692  0E17               	movlw	23
 15282   004694  ECF3  F028         	call	_LCD_Send
 15283                           
 15284                           ;lcd.c: 34:     LCD_Send(0x80);
 15285   004698  0E80               	movlw	128
 15286   00469A  ECF3  F028         	call	_LCD_Send
 15287                           
 15288                           ;lcd.c: 35:     LCD_Send(0x7A);
 15289   00469E  0E7A               	movlw	122
 15290   0046A0  ECF3  F028         	call	_LCD_Send
 15291                           
 15292                           ;lcd.c: 36:     LCD_Send(0x80);
 15293   0046A4  0E80               	movlw	128
 15294   0046A6  ECF3  F028         	call	_LCD_Send
 15295                           
 15296                           ;lcd.c: 37:     LCD_Send(0x5E);
 15297   0046AA  0E5E               	movlw	94
 15298   0046AC  ECF3  F028         	call	_LCD_Send
 15299                           
 15300                           ;lcd.c: 38:     LCD_Send(0x80);
 15301   0046B0  0E80               	movlw	128
 15302   0046B2  ECF3  F028         	call	_LCD_Send
 15303                           
 15304                           ;lcd.c: 39:     LCD_Send(0x6B);
 15305   0046B6  0E6B               	movlw	107
 15306   0046B8  ECF3  F028         	call	_LCD_Send
 15307                           
 15308                           ;lcd.c: 40:     LCD_Send(0x80);
 15309   0046BC  0E80               	movlw	128
 15310   0046BE  ECF3  F028         	call	_LCD_Send
 15311                           
 15312                           ;lcd.c: 41:     LCD_Send(0x0C);
 15313   0046C2  0E0C               	movlw	12
 15314   0046C4  ECF3  F028         	call	_LCD_Send
 15315                           
 15316                           ;lcd.c: 42:     LCD_Send(0x80);
 15317   0046C8  0E80               	movlw	128
 15318   0046CA  ECF3  F028         	call	_LCD_Send
 15319                           
 15320                           ;lcd.c: 43:     LCD_Send(0x01);
 15321   0046CE  0E01               	movlw	1
 15322   0046D0  ECF3  F028         	call	_LCD_Send
 15323                           
 15324                           ;lcd.c: 44:     LCD_Send(0x80);
 15325   0046D4  0E80               	movlw	128
 15326   0046D6  ECF3  F028         	call	_LCD_Send
 15327                           
 15328                           ;lcd.c: 45:     LCD_Send(0x06);
 15329   0046DA  0E06               	movlw	6
 15330   0046DC  ECF3  F028         	call	_LCD_Send
 15331                           
 15332                           ;lcd.c: 46:     LCD_Send(0x80);
 15333   0046E0  0E80               	movlw	128
 15334   0046E2  ECF3  F028         	call	_LCD_Send
 15335                           
 15336                           ;lcd.c: 47:     LCD_Send(0x02);
 15337   0046E6  0E02               	movlw	2
 15338   0046E8  ECF3  F028         	call	_LCD_Send
 15339   0046EC                     
 15340                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 15341   0046EC  846B               	bsf	107,2,c	;volatile
 15342   0046EE                     l126:
 15343   0046EE  B46B               	btfsc	107,2,c	;volatile
 15344   0046F0  EF7C  F023         	goto	u9711
 15345   0046F4  EF7E  F023         	goto	u9710
 15346   0046F8                     u9711:
 15347   0046F8  EF77  F023         	goto	l126
 15348   0046FC                     u9710:
 15349   0046FC                     
 15350                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 15351   0046FC  0E34               	movlw	52
 15352   0046FE  6E07               	movwf	??_LCD_Init^0,c
 15353   004700  0EF2               	movlw	242
 15354   004702                     u10517:
 15355   004702  2EE8               	decfsz	wreg,f,c
 15356   004704  D7FE               	bra	u10517
 15357   004706  2E07               	decfsz	??_LCD_Init^0,f,c
 15358   004708  D7FC               	bra	u10517
 15359   00470A  0012               	return		;funcret
 15360   00470C                     __end_of_LCD_Init:
 15361                           	callstack 0
 15362                           
 15363 ;; *************** function _LCD_Send *****************
 15364 ;; Defined at:
 15365 ;;		line 85 in file "lcd.c"
 15366 ;; Parameters:    Size  Location     Type
 15367 ;;  data            1    wreg     unsigned char 
 15368 ;; Auto vars:     Size  Location     Type
 15369 ;;  data            1    5[COMRAM] unsigned char 
 15370 ;; Return value:  Size  Location     Type
 15371 ;;                  1    wreg      void 
 15372 ;; Registers used:
 15373 ;;		wreg
 15374 ;; Tracked objects:
 15375 ;;		On entry : 0/0
 15376 ;;		On exit  : 0/0
 15377 ;;		Unchanged: 0/0
 15378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15382 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15383 ;;Total ram usage:        1 bytes
 15384 ;; Hardware stack levels used: 1
 15385 ;; Hardware stack levels required when called: 1
 15386 ;; This function calls:
 15387 ;;		Nothing
 15388 ;; This function is called by:
 15389 ;;		_LCD_Init
 15390 ;;		_LCD_ShowString
 15391 ;;		_LCD_Clear
 15392 ;; This function uses a non-reentrant model
 15393 ;;
 15394                           
 15395                           	psect	text61
 15396   0051E6                     __ptext61:
 15397                           	callstack 0
 15398   0051E6                     _LCD_Send:
 15399                           	callstack 27
 15400                           
 15401                           ;incstack = 0
 15402                           ;LCD_Send@data stored from wreg
 15403   0051E6  6E06               	movwf	LCD_Send@data^0,c
 15404   0051E8                     
 15405                           ;lcd.c: 87:     SSP2BUF = data;
 15406   0051E8  C006  FF6F         	movff	LCD_Send@data,3951	;volatile
 15407   0051EC                     l146:
 15408   0051EC  B06D               	btfsc	109,0,c	;volatile
 15409   0051EE  EFFB  F028         	goto	u9261
 15410   0051F2  EFFD  F028         	goto	u9260
 15411   0051F6                     u9261:
 15412   0051F6  EFF6  F028         	goto	l146
 15413   0051FA                     u9260:
 15414   0051FA                     l149:
 15415   0051FA  AEA4               	btfss	4004,7,c	;volatile
 15416   0051FC  EF02  F029         	goto	u9271
 15417   005200  EF04  F029         	goto	u9270
 15418   005204                     u9271:
 15419   005204  EFFD  F028         	goto	l149
 15420   005208                     u9270:
 15421   005208                     
 15422                           ;lcd.c: 90:     SSP2IF = 0;
 15423   005208  9EA4               	bcf	4004,7,c	;volatile
 15424   00520A  0012               	return		;funcret
 15425   00520C                     __end_of_LCD_Send:
 15426                           	callstack 0
 15427                           
 15428 ;; *************** function _ISR *****************
 15429 ;; Defined at:
 15430 ;;		line 11 in file "interrupt.c"
 15431 ;; Parameters:    Size  Location     Type
 15432 ;;		None
 15433 ;; Auto vars:     Size  Location     Type
 15434 ;;  temp            1    4[COMRAM] unsigned char 
 15435 ;; Return value:  Size  Location     Type
 15436 ;;                  1    wreg      void 
 15437 ;; Registers used:
 15438 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15439 ;; Tracked objects:
 15440 ;;		On entry : 0/0
 15441 ;;		On exit  : 0/0
 15442 ;;		Unchanged: 0/0
 15443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15446 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15447 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15448 ;;Total ram usage:        5 bytes
 15449 ;; Hardware stack levels used: 1
 15450 ;; This function calls:
 15451 ;;		Nothing
 15452 ;; This function is called by:
 15453 ;;		Interrupt level 2
 15454 ;; This function uses a non-reentrant model
 15455 ;;
 15456                           
 15457                           	psect	intcode
 15458   000008                     __pintcode:
 15459                           	callstack 0
 15460   000008                     _ISR:
 15461                           	callstack 21
 15462                           
 15463                           ;incstack = 0
 15464   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15465   00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
 15466   00000E  CFDA F004          	movff	fsr2h,??_ISR+3
 15467   000012                     
 15468                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 15469   000012  A09D               	btfss	3997,0,c	;volatile
 15470   000014  EF0E  F000         	goto	i2u686_41
 15471   000018  EF10  F000         	goto	i2u686_40
 15472   00001C                     i2u686_41:
 15473   00001C  EF49  F000         	goto	i2l6240
 15474   000020                     i2u686_40:
 15475   000020  A09E               	btfss	3998,0,c	;volatile
 15476   000022  EF15  F000         	goto	i2u687_41
 15477   000026  EF17  F000         	goto	i2u687_40
 15478   00002A                     i2u687_41:
 15479   00002A  EF49  F000         	goto	i2l6240
 15480   00002E                     i2u687_40:
 15481   00002E  0101               	movlb	1	; () banked
 15482   000030  5126               	movf	_GPIOIE& (0+255),w,b
 15483   000032  B4D8               	btfsc	status,2,c
 15484   000034  EF1E  F000         	goto	i2u688_41
 15485   000038  EF20  F000         	goto	i2u688_40
 15486   00003C                     i2u688_41:
 15487   00003C  EF49  F000         	goto	i2l6240
 15488   000040                     i2u688_40:
 15489   000040                     
 15490                           ; BSR set to: 1
 15491                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 15492   000040  A480               	btfss	128,2,c	;volatile
 15493   000042  EF25  F000         	goto	i2u689_41
 15494   000046  EF27  F000         	goto	i2u689_40
 15495   00004A                     i2u689_41:
 15496   00004A  EF44  F000         	goto	i2l412
 15497   00004E                     i2u689_40:
 15498   00004E                     
 15499                           ; BSR set to: 1
 15500                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 15501   00004E  0E03               	movlw	3
 15502   000050  6E02               	movwf	(??_ISR+1)^0,c
 15503   000052  0E08               	movlw	8
 15504   000054  6E01               	movwf	??_ISR^0,c
 15505   000056  0E77               	movlw	119
 15506   000058                     i2u1052_47:
 15507   000058  2EE8               	decfsz	wreg,f,c
 15508   00005A  D7FE               	bra	i2u1052_47
 15509   00005C  2E01               	decfsz	??_ISR^0,f,c
 15510   00005E  D7FC               	bra	i2u1052_47
 15511   000060  2E02               	decfsz	(??_ISR+1)^0,f,c
 15512   000062  D7FA               	bra	i2u1052_47
 15513   000064  0000               	nop	
 15514   000066                     
 15515                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 15516   000066  A480               	btfss	128,2,c	;volatile
 15517   000068  EF38  F000         	goto	i2u690_41
 15518   00006C  EF3A  F000         	goto	i2u690_40
 15519   000070                     i2u690_41:
 15520   000070  EF44  F000         	goto	i2l412
 15521   000074                     i2u690_40:
 15522   000074                     i2l414:
 15523   000074  B480               	btfsc	128,2,c	;volatile
 15524   000076  EF3F  F000         	goto	i2u691_41
 15525   00007A  EF41  F000         	goto	i2u691_40
 15526   00007E                     i2u691_41:
 15527   00007E  EF3A  F000         	goto	i2l414
 15528   000082                     i2u691_40:
 15529   000082                     
 15530                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 15531   000082  0E00               	movlw	0
 15532   000084  0100               	movlb	0	; () banked
 15533   000086  6FFE               	movwf	_keepStateGPIO& (0+255),b
 15534   000088                     i2l412:
 15535                           
 15536                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 15537   000088  0E9E               	movlw	158
 15538   00008A  6ECF               	movwf	207,c	;volatile
 15539   00008C  0E58               	movlw	88
 15540   00008E  6ECE               	movwf	206,c	;volatile
 15541   000090                     
 15542                           ;interrupt.c: 23:         TMR1IF = 0;
 15543   000090  909E               	bcf	3998,0,c	;volatile
 15544   000092                     i2l6240:
 15545                           
 15546                           ;interrupt.c: 26:     if(TMR1IE && TMR1IF && GAMEIE){
 15547   000092  A09D               	btfss	3997,0,c	;volatile
 15548   000094  EF4E  F000         	goto	i2u692_41
 15549   000098  EF50  F000         	goto	i2u692_40
 15550   00009C                     i2u692_41:
 15551   00009C  EF66  F000         	goto	i2l6252
 15552   0000A0                     i2u692_40:
 15553   0000A0  A09E               	btfss	3998,0,c	;volatile
 15554   0000A2  EF55  F000         	goto	i2u693_41
 15555   0000A6  EF57  F000         	goto	i2u693_40
 15556   0000AA                     i2u693_41:
 15557   0000AA  EF66  F000         	goto	i2l6252
 15558   0000AE                     i2u693_40:
 15559   0000AE  0101               	movlb	1	; () banked
 15560   0000B0  5124               	movf	_GAMEIE& (0+255),w,b
 15561   0000B2  B4D8               	btfsc	status,2,c
 15562   0000B4  EF5E  F000         	goto	i2u694_41
 15563   0000B8  EF60  F000         	goto	i2u694_40
 15564   0000BC                     i2u694_41:
 15565   0000BC  EF66  F000         	goto	i2l6252
 15566   0000C0                     i2u694_40:
 15567   0000C0                     
 15568                           ; BSR set to: 1
 15569                           ;interrupt.c: 27:         GAMEtime += 1;
 15570   0000C0  2B23               	incf	_GAMEtime& (0+255),f,b
 15571   0000C2                     
 15572                           ; BSR set to: 1
 15573                           ;interrupt.c: 29:         TMR1 = 0xFFFF - (62500 - 1);
 15574   0000C2  0E0B               	movlw	11
 15575   0000C4  6ECF               	movwf	207,c	;volatile
 15576   0000C6  0EDC               	movlw	220
 15577   0000C8  6ECE               	movwf	206,c	;volatile
 15578   0000CA                     
 15579                           ; BSR set to: 1
 15580                           ;interrupt.c: 30:         TMR1IF = 0;
 15581   0000CA  909E               	bcf	3998,0,c	;volatile
 15582   0000CC                     i2l6252:
 15583                           
 15584                           ;interrupt.c: 33:     if(RC1IE && RC1IF && UARTIE){
 15585   0000CC  AA9D               	btfss	3997,5,c	;volatile
 15586   0000CE  EF6B  F000         	goto	i2u695_41
 15587   0000D2  EF6D  F000         	goto	i2u695_40
 15588   0000D6                     i2u695_41:
 15589   0000D6  EFA1  F000         	goto	i2l423
 15590   0000DA                     i2u695_40:
 15591   0000DA  AA9E               	btfss	3998,5,c	;volatile
 15592   0000DC  EF72  F000         	goto	i2u696_41
 15593   0000E0  EF74  F000         	goto	i2u696_40
 15594   0000E4                     i2u696_41:
 15595   0000E4  EFA1  F000         	goto	i2l423
 15596   0000E8                     i2u696_40:
 15597   0000E8  0101               	movlb	1	; () banked
 15598   0000EA  5125               	movf	_UARTIE& (0+255),w,b
 15599   0000EC  B4D8               	btfsc	status,2,c
 15600   0000EE  EF7B  F000         	goto	i2u697_41
 15601   0000F2  EF7D  F000         	goto	i2u697_40
 15602   0000F6                     i2u697_41:
 15603   0000F6  EFA1  F000         	goto	i2l423
 15604   0000FA                     i2u697_40:
 15605   0000FA                     
 15606                           ; BSR set to: 1
 15607                           ;interrupt.c: 34:         char temp = RCREG1;
 15608   0000FA  CFAE F005          	movff	4014,ISR@temp	;volatile
 15609   0000FE                     
 15610                           ; BSR set to: 1
 15611                           ;interrupt.c: 35:         static int i = 0;;interrupt.c: 37:         if(temp != '\n'){
 15612   0000FE  0E0A               	movlw	10
 15613   000100  1805               	xorwf	ISR@temp^0,w,c
 15614   000102  B4D8               	btfsc	status,2,c
 15615   000104  EF86  F000         	goto	i2u698_41
 15616   000108  EF88  F000         	goto	i2u698_40
 15617   00010C                     i2u698_41:
 15618   00010C  EF94  F000         	goto	i2l6266
 15619   000110                     i2u698_40:
 15620   000110                     
 15621                           ; BSR set to: 1
 15622                           ;interrupt.c: 38:             gmail.data[i] = temp;
 15623   000110  0E77               	movlw	low _gmail
 15624   000112  2521               	addwf	ISR@i& (0+255),w,b
 15625   000114  6ED9               	movwf	fsr2l,c
 15626   000116  0E01               	movlw	high _gmail
 15627   000118  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15628   00011A  6EDA               	movwf	fsr2h,c
 15629   00011C  C005  FFDF         	movff	ISR@temp,indf2
 15630   000120                     
 15631                           ; BSR set to: 1
 15632                           ;interrupt.c: 39:             i++;
 15633   000120  4B21               	infsnz	ISR@i& (0+255),f,b
 15634   000122  2B22               	incf	(ISR@i+1)& (0+255),f,b
 15635                           
 15636                           ;interrupt.c: 40:         } else {
 15637   000124  EFA1  F000         	goto	i2l423
 15638   000128                     i2l6266:
 15639                           
 15640                           ; BSR set to: 1
 15641                           ;interrupt.c: 41:             gmail.full = 1;
 15642   000128  0E01               	movlw	1
 15643   00012A  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
 15644   00012C                     
 15645                           ; BSR set to: 1
 15646                           ;interrupt.c: 42:             gmail.data[i] = '\0';
 15647   00012C  0E77               	movlw	low _gmail
 15648   00012E  2521               	addwf	ISR@i& (0+255),w,b
 15649   000130  6ED9               	movwf	fsr2l,c
 15650   000132  0E01               	movlw	high _gmail
 15651   000134  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15652   000136  6EDA               	movwf	fsr2h,c
 15653   000138  6ADF               	clrf	indf2,c
 15654   00013A                     
 15655                           ; BSR set to: 1
 15656                           ;interrupt.c: 43:             i = 0;
 15657   00013A  0E00               	movlw	0
 15658   00013C  6F22               	movwf	(ISR@i+1)& (0+255),b
 15659   00013E  0E00               	movlw	0
 15660   000140  6F21               	movwf	ISR@i& (0+255),b
 15661   000142                     i2l423:
 15662   000142  C004  FFDA         	movff	??_ISR+3,fsr2h
 15663   000146  C003  FFD9         	movff	??_ISR+2,fsr2l
 15664   00014A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15665   00014C  0011               	retfie		f
 15666   00014E                     __end_of_ISR:
 15667                           	callstack 0
 15668                           
 15669                           	psect	rparam
 15670   000000                     
 15671                           	psect	temp
 15672   00005A                     btemp:
 15673                           	callstack 0
 15674   00005A                     	ds	1
 15675   000000                     int$flags	set	btemp
 15676   000000                     wtemp8	set	btemp+1
 15677   000000                     ttemp5	set	btemp+1
 15678   000000                     ttemp6	set	btemp+4
 15679   000000                     ttemp7	set	btemp+8
 15680                           
 15681                           	psect	config
 15682                           
 15683                           ; Padding undefined space
 15684   300000                     	org	3145728
 15685   300000  FF                 	db	255
 15686                           
 15687                           ;Config register CONFIG1H @ 0x300001
 15688                           ;	Oscillator Selection bits
 15689                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 15690                           ;	4X PLL Enable
 15691                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15692                           ;	Primary clock enable bit
 15693                           ;	PRICLKEN = 0x1, unprogrammed default
 15694                           ;	Fail-Safe Clock Monitor Enable bit
 15695                           ;	FCMEN = 0x0, unprogrammed default
 15696                           ;	Internal/External Oscillator Switchover bit
 15697                           ;	IESO = 0x0, unprogrammed default
 15698   300001                     	org	3145729
 15699   300001  33                 	db	51
 15700                           
 15701                           ;Config register CONFIG2L @ 0x300002
 15702                           ;	unspecified, using default values
 15703                           ;	Power-up Timer Enable bit
 15704                           ;	PWRTEN = 0x1, unprogrammed default
 15705                           ;	Brown-out Reset Enable bits
 15706                           ;	BOREN = 0x3, unprogrammed default
 15707                           ;	Brown Out Reset Voltage bits
 15708                           ;	BORV = 0x3, unprogrammed default
 15709   300002                     	org	3145730
 15710   300002  1F                 	db	31
 15711                           
 15712                           ;Config register CONFIG2H @ 0x300003
 15713                           ;	Watchdog Timer Enable bits
 15714                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15715                           ;	Watchdog Timer Postscale Select bits
 15716                           ;	WDTPS = 0xF, unprogrammed default
 15717   300003                     	org	3145731
 15718   300003  3C                 	db	60
 15719                           tosu	equ	0xFFF
 15720                           tosh	equ	0xFFE
 15721                           tosl	equ	0xFFD
 15722                           stkptr	equ	0xFFC
 15723                           pclatu	equ	0xFFB
 15724                           pclath	equ	0xFFA
 15725                           pcl	equ	0xFF9
 15726                           tblptru	equ	0xFF8
 15727                           tblptrh	equ	0xFF7
 15728                           tblptrl	equ	0xFF6
 15729                           tablat	equ	0xFF5
 15730                           prodh	equ	0xFF4
 15731                           prodl	equ	0xFF3
 15732                           indf0	equ	0xFEF
 15733                           postinc0	equ	0xFEE
 15734                           postdec0	equ	0xFED
 15735                           preinc0	equ	0xFEC
 15736                           plusw0	equ	0xFEB
 15737                           fsr0h	equ	0xFEA
 15738                           fsr0l	equ	0xFE9
 15739                           wreg	equ	0xFE8
 15740                           indf1	equ	0xFE7
 15741                           postinc1	equ	0xFE6
 15742                           postdec1	equ	0xFE5
 15743                           preinc1	equ	0xFE4
 15744                           plusw1	equ	0xFE3
 15745                           fsr1h	equ	0xFE2
 15746                           fsr1l	equ	0xFE1
 15747                           bsr	equ	0xFE0
 15748                           indf2	equ	0xFDF
 15749                           postinc2	equ	0xFDE
 15750                           postdec2	equ	0xFDD
 15751                           preinc2	equ	0xFDC
 15752                           plusw2	equ	0xFDB
 15753                           fsr2h	equ	0xFDA
 15754                           fsr2l	equ	0xFD9
 15755                           status	equ	0xFD8

Data Sizes:
    Strings     324
    Constant    64
    Data        40
    BSS         203
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    158     159
    BANK1           256     51     246
    BANK2           256      0      42
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 25
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[25]), 
		 -> runGAME@text(BANK1[17]), STR_1(CODE[17]), STR_10(CODE[17]), STR_11(CODE[17]), 
		 -> STR_12(CODE[17]), STR_13(CODE[17]), STR_14(CODE[17]), STR_15(CODE[17]), 
		 -> STR_2(CODE[17]), STR_3(CODE[17]), STR_33(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[17]), STR_6(CODE[17]), STR_7(CODE[17]), STR_8(CODE[17]), 
		 -> STR_9(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    moveDisplay$4526	PTR unsigned char  size(2) Largest target is 6
		 -> STR_17(CODE[5]), STR_18(CODE[5]), STR_19(CODE[4]), STR_20(CODE[4]), 
		 -> STR_21(CODE[4]), STR_22(CODE[5]), STR_23(CODE[6]), STR_24(CODE[1]), 

    moveDisplay@F6965	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_17(CODE[5]), STR_18(CODE[5]), STR_19(CODE[4]), STR_20(CODE[4]), 
		 -> STR_21(CODE[4]), STR_22(CODE[5]), STR_23(CODE[6]), STR_24(CODE[1]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_17(CODE[5]), STR_18(CODE[5]), STR_19(CODE[4]), STR_20(CODE[4]), 
		 -> STR_21(CODE[4]), STR_22(CODE[5]), STR_23(CODE[6]), STR_24(CODE[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_16(CODE[5]), STR_28(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6975	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S3927$buffer	PTR unsigned char  size(2) Largest target is 0

    S3927$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_25(CODE[6]), STR_26(CODE[5]), STR_27(CODE[19]), STR_29(CODE[19]), 
		 -> STR_30(CODE[17]), STR_31(CODE[19]), STR_32(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[25]), 
		 -> runGAME@text(BANK1[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_17(CODE[5]), 
		 -> STR_18(CODE[5]), STR_19(CODE[4]), STR_20(CODE[4]), STR_21(CODE[4]), 
		 -> STR_22(CODE[5]), STR_23(CODE[6]), STR_24(CODE[1]), STR_40(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_17(CODE[5]), 
		 -> STR_18(CODE[5]), STR_19(CODE[4]), STR_20(CODE[4]), STR_21(CODE[4]), 
		 -> STR_22(CODE[5]), STR_23(CODE[6]), STR_24(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_34(CODE[4]), STR_37(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_16(CODE[5]), STR_25(CODE[6]), STR_26(CODE[5]), STR_27(CODE[19]), 
		 -> STR_28(CODE[5]), STR_29(CODE[19]), STR_30(CODE[17]), STR_31(CODE[19]), 
		 -> STR_32(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_16(CODE[5]), STR_25(CODE[6]), STR_26(CODE[5]), STR_27(CODE[19]), 
		 -> STR_28(CODE[5]), STR_29(CODE[19]), STR_30(CODE[17]), STR_31(CODE[19]), 
		 -> STR_32(CODE[18]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_16(CODE[5]), STR_25(CODE[6]), STR_26(CODE[5]), STR_27(CODE[19]), 
		 -> STR_28(CODE[5]), STR_29(CODE[19]), STR_30(CODE[17]), STR_31(CODE[19]), 
		 -> STR_32(CODE[18]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runUART->_printf
    _runPWM->___awdiv
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _rand->___lmul
    _runDAC->_printf
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _utoa->_pad
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->___awdiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    ___awdiv->_rand
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_runUART
    _runUART->_printf
    _runGAME->_sprintf
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___flneg
    ___cosdf->___fladd
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  438041
                                            154 BANK0      4     4      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGAME
                            _runGPIO
                           _runMUSIC
                             _runPWM
                            _runUART
 ---------------------------------------------------------------------------------
 (1) _runUART                                             40    40      0   63853
                                            114 BANK0     40    40      0
                             _printf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _runPWM                                               4     4      0    1304
                                             31 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _runMUSIC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             31    31      0     495
                                              6 COMRAM    31    31      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runGAME                                             52    52      0   69451
                                            135 BANK0      2     2      0
                                              0 BANK1     50    50      0
                     _LCD_ShowString
                            ___awdiv
                            ___lbdiv
                               _rand
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     456
                                             17 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     331
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0  153096
                                            114 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   68874
                                             68 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   16012
                                              4 BANK0     32    28      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   27720
                                             36 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   16096
                                              4 BANK0     28    24      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     3      4   63191
                                             83 COMRAM     1     1      0
                                            110 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0     130
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   79687
                                            135 BANK0      2     2      0
                                              0 BANK1     30    30      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         54    53      1   67600
                                            135 BANK0      3     2      1
                                              0 BANK1     51    51      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12   64496
                                            110 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5   62888
                                            103 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   62082
                                             89 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                10     6      4    6310
                                             31 COMRAM    10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     412
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2110
                                             15 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1362
                                             11 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   41068
                                             36 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     463
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             69 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             81 COMRAM     2     2      0
                                              4 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    8147
                                              4 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6862
                                             69 COMRAM    12     4      8
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     875
                                             32 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8273
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    7673
                                             31 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4963
                                             22 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1428
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                             23 COMRAM     8     4      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    2296
                                              6 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      31
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              6 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
               _rand (ARG)
                 ___lmul
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
           _utoa
             ___lwdiv
             ___lwmod
             _pad
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGAME
     _LCD_ShowString
     ___awdiv
     ___lbdiv
     _rand
     _sprintf
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *
   _runMUSIC
   _runPWM
     ___awdiv
   _runUART
     _printf
     _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      2A       9       16.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     33      F6       7       96.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRlllllh     21      0       0      52        0.0%
BITBIGSFRlllllh     10      0       0      51        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRlllllh      C      0       0      53        0.0%
BITBIGSFRhhllhl      A      0       0      44        0.0%
BITBIGSFRhll         7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      45        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRllh         5      0       0      48        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhllhh      1      0       0      43        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     218      54        0.0%
DATA                 0      0     218       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 17 21:47:28 2024

              ___fldiv@aexp 0045                ___fldiv@bexp 0044                ___fldiv@sign 003D  
                        _C0 FEA7                          _C1 FEA3                          _C2 FE9F  
                        _C3 FE9B                          l61 2AEC                          l63 2ADE  
                        l56 2A9A                          l66 2CCC                          l58 2A8C  
                        _S1 FE87                          l68 2B20                          _S2 FE83  
                        _S3 FE7F                          _S4 FE7B                ___awdiv@sign 001D  
       ___wmul@multiplicand 0008                         l123 465E                         l140 493C  
                       l132 489E                         l125 466C                         l126 46EE  
                       l134 48AC                         l151 5208                         l143 494A  
                       l303 4236                         l231 2F44                         l152 520A  
                       l136 48EC                         l129 470A                         l161 512E  
                       l146 51EC                         l250 504C                         l242 2FE0  
                       l234 2F46                         l155 50FC                         l139 493A  
                       l251 5050                         l149 51FA                         l157 510A  
                       l245 502A                         l158 5120                         l270 522E  
                       l350 5286                         l247 5038                         l248 503E  
                       l273 5240                         l353 5278                         l521 400E  
                       l362 524E                         l522 410C                         l356 526A  
                       l372 3FB6                         l365 5294                         l525 40C6  
                       l710 51E4                         l462 3626                         l534 40FA  
                       l526 4088                         l359 525C                         l519 4000  
                       l472 3612                         l464 3464                         l721 4D2C  
                       l377 3FC8                         l722 4D3C                         l378 3FDE  
                       l538 4124                         l475 3638                         l467 3504  
                       l707 5296                         l476 363A                         l581 3E06  
                       l662 226A                         l680 2082                         l664 1F84  
                       l592 3E60                         l681 2092                         l593 3E72  
                       l682 20A2                         l691 227C                         l675 2042  
                       l579 3E4E                         l692 2290                         l684 2174  
                       l676 2222                         l941 4898                         l677 2052  
                       l589 3E3A                         l678 2062                         l679 2072  
                       l688 2256                         l954 49FA                         l980 4442  
                       l975 43FC                         l984 508A                         l969 4B52  
                       _GIE 7F97                         _PR2 0FBB                         _ISR 0008  
                       _abs 5164                         _pad 4B54                ___awmod@sign 000B  
                       prod 0FF3                         tosl 0FFD                         wreg 0FE8  
                _TXSTA1bits 0FAC                ___flmul@aexp 0021                ___flmul@bexp 0026  
              ___flmul@sign 0020                ___flmul@temp 002B                ___flmul@prod 0027  
                      ?_ISR 0001                        ISR@i 0121                ___fltol@exp1 0053  
                      l1007 433E                        l1201 4C5C                        l1211 4D98  
                      ?_abs 000C                        l1116 4DFC                        l1303 2892  
                      l1240 1756                        l1208 4C64                        l1305 290A  
                      l1306 28F8                        l1218 4DA0                        l1331 1D2E  
                      l1324 1B38                        l1421 4BCE                        l1341 1E5E  
                      l1333 1DA6                        l1501 3A92                        l1430 3C08  
                      l1334 1D94                        l1238 17A2                        l1423 4BF0  
                      l1255 18BC                        l1247 1A72                        l1239 1790  
                      l1328 1E9C                        l1264 198C                        l1280 4F88  
                      l1441 3D06                        l1265 197A                        l1513 3B8A  
                      l1418 4B8C                        l1611 517E                        l1427 3BBA  
                      l1292 29EC                        l1620 3428                        l1452 0B4A  
                      l1508 3B42                        l1372 3928                        l1429 3BC2  
                      l1533 4AA8                        l1525 4630                        l1517 455C  
                      l1365 3890                        l1614 5196                        l1294 284C  
                      l1606 4540                        l1623 336C                        l1455 04E4  
                      l1519 4564                        l1640 4EF6                        l1560 10A6  
                      l1368 39EC                        l1297 2810                        l1457 032A  
                      l1529 4AA0                        l1634 4E52                        l1379 3984  
                      l1652 47D4                        l1660 5012                        l1388 4FCE  
                      l1485 092E                        l1728 3838                        l1744 24B4  
                      l1745 2652                        l1762 5162                        l1667 522A  
                      l1675 4CD2                        l1596 4F40                        l1757 3212  
                      l1694 15B0                        l1774 50F8                        l7000 4BB0  
                      l1768 50C2                        l7002 4BDC                        l7010 4464  
                      l7004 5164                        l7100 3C1A                        l6300 15F0  
                      l7012 44A2                        l7020 44E2                        l7006 5172  
                      l7102 3C20                        l7110 3C7A                        l6310 1620  
                      l6302 1600                        l7022 44F4                        l7014 44CA  
                      l7030 508C                        ?_pad 0017                        l7120 3CD6  
                      l7112 3C94                        l7104 3C52                        l6400 17F2  
                      l6320 164A                        l6312 1632                        l6304 1602  
                      l7016 44D6                        l7008 4444                        l7032 5094  
                      l7200 03E4                        l8000 3F92                        l7122 3CE6  
                      l7114 3CA6                        l7106 3C58                        l6410 1820  
                      l6402 1800                        l6322 165A                        l6330 1684  
                      l6314 1634                        l6306 160A                        l7026 4538  
                      l7050 32AE                        l7042 3214                        l7034 4DFE  
                      l7202 0422                        l7130 0168                        l8002 3FB2  
                      l8010 3D14                        l7116 3CC0                        l7108 3C5E  
                      l6420 188C                        l6412 182A                        l6404 180C  
                      l6340 16BC                        l6332 1694                        l6324 166A  
                      l6316 163A                        l6308 161A                        l7060 33CC  
                      l7044 3234                        l7036 4E0C                        l7300 0970  
                      l7220 0510                        l7204 0436                        l7212 04B2  
                      l7140 01B0                        l7132 0176                        l6500 51C0  
                      l8004 3FD8                        l8100 40C0                        l8020 3D26  
                      l8012 3D18                        l7118 3CD0                        l6510 266E  
                      l6422 189C                        l6406 1810                        l6414 1830  
                      l6350 16D0                        l6342 16C0                        l6334 16A6  
                      l6326 167A                        l6318 1648                        l7062 33E0  
                      l7054 3320                        l7046 328C                        l7038 4E20  
                      l7070 4EA8                        l7310 09A2                        l7302 0980  
                      l7230 0556                        l7222 0518                        l7214 04EC  
                      l7206 046A                        l7142 01C0                        l7150 01E8  
                      l7134 017A                        l7126 0152                        l6502 51DC  
                      l8110 4108                        l8102 40C6                        l8030 3D5C  
                      l8022 3D28                        l8014 3D1A                        l6272 522E  
                      l6280 4730                        l6600 28A2                        l6520 26A2  
                      l6512 2670                        l6440 191E                        l6432 18F6  
                      l6416 1856                        l6424 18AC                        l6408 181E  
                      l6360 16E4                        l6352 16D4                        l6344 16C4  
                      l6336 16B4                        l6328 167C                        l7064 3408  
                      l7056 335C                        l7048 32A0                        l7072 4EBC  
                      l7080 4EDC                        l7320 0A4A                        l7312 09B4  
                      l7304 0984                        l7240 059C                        l7232 0568  
                      l7224 051E                        l7216 04FA                        l7208 0472  
                      l7160 0232                        l7152 020E                        l7144 01D0  
                      l7136 019E                        l7128 0158                        l7400 45B0  
                      l8120 342A                        l8200 2F1A                        l8112 411C  
                      l8104 40D4                        l8040 3DB6                        l8032 3D6A  
                      l8024 3D2A                        l8016 3D1C                        l8008 3D08  
                      l6274 523C                        l6282 473A                        l7090 3BE0  
                      l7082 3B8C                        l6602 28B0                        l6530 26D4  
                      l6514 2680                        l6522 26AA                        l6506 2654  
                      l6442 1926                        l6434 1900                        l6426 18D2  
                      l6418 188A                        l6450 194A                        l6370 16F8  
                      l6362 16E8                        l6354 16D8                        l6346 16C8  
                      l6338 16B8                        l6290 15B2                        l7066 3418  
                      l7058 3390                        l7074 4EC8                        l7330 0A98  
                      l7322 0A52                        l7314 09B8                        l7306 098A  
                      l7250 06B0                        l7242 0600                        l7226 0530  
                      l7234 0570                        l7218 0506                        l7170 029A  
                      l7162 024A                        l7154 0220                        l7146 01DC  
                      l7138 01A8                        l7410 4610                        l7402 45B6  
                      l8130 345A                        l8122 3432                        l8210 2F76  
                      l8114 4120                        l8106 40EC                        l8050 3DD8  
                      l8042 3DC8                        l8034 3D92                        l8026 3D36  
                      l8018 3D1E                        l6284 4758                        l6276 470C  
                      l7092 3BF0                        l7084 3BAE                        l6612 291A  
                      l6620 2962                        l6604 28B4                        l6540 2708  
                      l6532 26D6                        l6524 26BA                        l6516 2690  
                      l6508 2660                        l6700 1BE2                        l6460 199C  
                      l6452 194E                        l6444 192A                        l6436 190E  
                      l6428 18E2                        l6380 1770                        l6372 1722  
                      l6364 16EC                        l6356 16DC                        l6348 16CC  
                      l6292 15C0                        l7076 4ECC                        l7340 0B0C  
                      l7332 0AA6                        l7316 09BE                        l7308 0990  
                      l7324 0A56                        l7260 076E                        l7252 06E4  
                      l7244 0658                        l7236 0578                        l7228 053E  
                      l7172 02AC                        l7164 0254                        l7156 0224  
                      l7148 01E4                        l7420 4A32                        l7404 45D2  
                      l7500 0BFE                        l8140 3502                        l8132 3462  
                      l8124 3442                        l8220 2FA4                        l8212 2F7C  
                      l8204 2F26                        l8300 20B2                        l8116 4122  
                      l8052 3DE6                        l8044 3DCE                        l8036 3D96  
                      l8028 3D48                        l6286 478E                        l6278 471E  
                      l7094 3BFC                        l7086 3BCA                        l6630 29CC  
                      l6622 297C                        l6614 2926                        l6606 28C2  
                      l6550 274E                        l6534 26E6                        l6542 2710  
                      l6526 26C0                        l6518 26A0                        l6710 1C34  
                      l6702 1BEE                        l6470 1A02                        l6462 19A8  
                      l6454 195C                        l6446 193A                        l6438 1910  
                      l6390 17B0                        l6382 1774                        l6374 173E  
                      l6366 16F0                        l6358 16E0                        l6294 15CE  
                      l7078 4ED8                        l7342 0B22                        l7334 0AD6  
                      l7326 0A74                        l7318 0A16                        l7270 0842  
                      l7262 077E                        l7254 0716                        l7246 068C  
                      l7238 0588                        l7174 02B0                        l7158 022A  
                      l7422 4A4E                        l7414 49FC                        l7350 3A08  
                      l7406 45E4                        l7510 0C5C                        l7502 0C08  
                      l7430 384C                        l8150 35DE                        l8142 3512  
                      l8134 3472                        l8126 3444                        l8222 2FB2  
                      l8214 2F8A                        l8206 2F54                        l8310 213E  
                      l8302 20B6                        l8230 1E9E                        l8070 3E70  
                      l8062 3E48                        l8054 3DEA                        l8038 3DAC  
                      l6800 4830                        l7096 3C04                        l7088 3BDA  
                      l6632 29DA                        l6624 2992                        l6616 2934  
                      l6608 28F0                        l6560 2776                        l6552 2752  
                      l6544 2720                        l6536 26F6                        l6528 26C6  
                      l6720 1CB2                        l6712 1C44                        l6704 1BFE  
                      l6480 1A4A                        l6472 1A12                        l6464 19B6  
                      l6456 1972                        l6448 193C                        l6392 17C0  
                      l6384 1782                        l6376 174E                        l6368 16F4  
                      l6296 15D0                        l7344 0B2A                        l7336 0AE4  
                      l7328 0A90                        l7280 0878                        l7272 0856  
                      l7264 07B2                        l7256 072C                        l7248 0692  
                      l7192 033A                        l7176 02B6                        l7168 0274  
                      l7424 4A6E                        l7416 4A04                        l7360 3A6C  
                      l7352 3A10                        l7408 45F6                        l7600 0FA4  
                      l7512 0C6E                        l7520 0C86                        l7504 0C2C  
                      l7440 38CA                        l7432 385A                        l8152 35EC  
                      l8144 3530                        l8136 3490                        l8128 3450  
                      l8224 2FB8                        l8216 2F90                        l8208 2F68  
                      l8160 2CFA                        l8320 21AA                        l8312 215C  
                      l8304 20E4                        l8240 1EEE                        l8232 1ECC  
                      l8080 3FFE                        l8064 3E66                        l8056 3E14  
                      l8400 2ACE                        l6810 486A                        l6802 4838  
                      l7098 3C10                        l6634 29E0                        l6626 29AC  
                      l6618 295E                        l6570 27C4                        l6546 2736  
                      l6538 2706                        l6730 1D2C                        l6722 1CE8  
                      l6714 1C60                        l6706 1C0A                        l6650 1A90  
                      l6482 1A4C                        l6474 1A32                        l6466 19F0  
                      l6386 1784                        l6378 1764                        l6298 15E0  
                      l7338 0AFC                        l7290 0940                        l7282 0880  
                      l7266 0808                        l7274 085A                        l7258 075E  
                      l7194 0340                        l7178 02BE                        l7186 02DA  
                      l7418 4A26                        l7426 4A7A                        l7370 3ACC  
                      l7362 3A8A                        l7354 3A1C                        l7610 1028  
                      l7602 0FCC                        l7514 0C76                        l7522 0CAC  
                      l7506 0C38                        l7450 391E                        l7442 38D2  
                      l7434 38A0                        l8154 3604                        l8146 359A  
                      l8138 34FA                        l8226 2FBC                        l8218 2F9E  
                      l8170 2D1C                        l8162 2D0E                        l8330 2230  
                      l8322 21B8                        l8314 2162                        l8306 2114  
                      l8250 1EFE                        l8242 1EF2                        l8234 1EDC  
                      l8090 407A                        l8082 402C                        l8074 3FE0  
                      l8066 3E6C                        l8058 3E2C                        l8410 2B4E  
                      l8402 2AFA                        l6820 4890                        l6812 486C  
                      l6804 4846                        l6492 4FD0                        l6636 29E2  
                      l6628 29C8                        l6580 280E                        l6572 27D4  
                      l6564 278A                        l6548 2746                        l6556 2766  
                      l6740 1D8C                        l6732 1D3E                        l6724 1CF6  
                      l6716 1C6C                        l6708 1C1A                        l6660 1AD6  
                      l6652 1AA0                        l6644 1A74                        l6900 506A  
                      l6484 1A52                        l6476 1A36                        l6468 19F2  
                      l6396 17D4                        l6388 178E                        l7292 094E  
                      l7284 088C                        l7276 086A                        l7268 080E  
                      l7196 0374                        l7188 02F4                        l7380 3B54  
                      l7372 3AEE                        l7356 3A20                        l7348 39EE  
                      l7540 0D68                        l7524 0CC8                        l7532 0D20  
                      l7516 0C7E                        l7508 0C4C                        l7460 3994  
                      l7452 395A                        l7444 38DE                        l7436 38B6  
                      l7428 383C                        l8148 35D0                        l7700 25CE  
                      l8228 2FCE                        l8180 2D3A                        l8172 2D1E  
                      l8164 2D16                        l8332 2248                        l8324 21BE  
                      l8316 2176                        l8308 2118                        l8260 1F12  
                      l8252 1F00                        l8244 1EF4                        l8236 1EDE  
                      l8084 4038                        l8076 3FE2                        l8068 3E6E  
                      l8420 2B80                        l8412 2B52                        l8404 2B12  
                      l6814 4872                        l6806 484C                        l6830 4966  
                      l6494 4FDC                        l6590 285C                        l6582 281A  
                      l6574 27DC                        l6566 27A4                        l6558 2776  
                      l6750 1DFA                        l6734 1D4C                        l6726 1D14  
                      l6718 1C88                        l6670 1B02                        l6662 1ADC  
                      l6654 1AB0                        l6646 1A80                        l6902 507A  
                      l6486 1A60                        l6478 1A44                        l6398 17E4  
                      l7294 095E                        l7286 0906                        l7278 0872  
                      l7198 03B2                        l7382 3B68                        l7374 3B24  
                      l7366 3AB4                        l7358 3A5E                        l7390 456C  
                      l7606 0FF4                        l7550 0DD6                        l7542 0D88  
                      l7534 0D36                        l7526 0CE8                        l7622 1080  
                      l7470 39DC                        l7462 3998                        l7454 3966  
                      l7446 3910                        l8158 3620                        l7630 5150  
                      l7702 2626                        l8190 2DBA                        l8182 2D3C  
                      l8174 2D30                        l8166 2D18                        l8318 219C  
                      l8270 1F62                        l8262 1F12                        l8254 1F08  
                      l8246 1EF6                        l8238 1EEA                        l8094 4096  
                      l8086 4054                        l8078 3FFC                        l8422 2B9C  
                      l8414 2B5C                        l8350 2A0C                        l8342 29EE  
                      l7720 48CA                        l7712 489C                        l6808 4862  
                      l6816 4878                        l6840 499A                        l6832 496A  
                      l6824 494C                        l6496 4FEE                        l6592 2872  
                      l6584 2838                        l6576 27EC                        l6568 27B4  
                      l6760 1E62                        l6744 1DB6                        l6752 1DFE  
                      l6736 1D50                        l6728 1D1E                        l6680 1B58  
                      l6672 1B12                        l6664 1AE2                        l6656 1AC0  
                      l6648 1A8E                        l6488 1A62                        l6920 42A4  
                      l6912 4264                        l7296 0962                        l7288 0926  
                      l7384 3B6C                        l7368 3AC8                        l7376 3B28  
                      l7392 4574                        l7616 1056                        l7608 100A  
                      l7552 0DF4                        l7544 0DA4                        l7560 0E24  
                      l7536 0D50                        l7528 0D04                        l7480 0B88  
                      l7464 39BC                        l7456 3974                        l7448 3912  
                      l7632 5152                        l7704 263E                        l7800 1360  
                      l8192 2DCC                        l8184 2D3E                        l8176 2D36  
                      l8168 2D1A                        l7640 4CE4                        l8336 2264  
                      l8328 21DC                        l8280 1FB0                        l8272 1F70  
                      l8264 1F12                        l8256 1F0A                        l8248 1EF8  
                      l8096 40A8                        l8088 4062                        l8440 2BFA  
                      l8432 2BBA                        l8416 2B78                        l8408 2B32  
                      l8360 2A18                        l8352 2A0E                        l8344 2A06  
                      l7722 48D4                        l7714 489C                        l6818 4888  
                      l6850 49D4                        l6842 49A2                        l6834 4978  
                      l6826 4950                        l6498 4FF2                        l6594 2878  
                      l6586 283A                        l6578 2800                        l6770 1E8C  
                      l6762 1E72                        l6754 1E18                        l6746 1DC2  
                      l6738 1D5E                        l6690 1B98                        l6674 1B22  
                      l6666 1AF0                        l6658 1AC6                        l6930 42D4  
                      l6922 42B2                        l6914 428E                        l6906 4238  
                      l7298 0968                        l7394 457E                        l7386 4542  
                      l7618 106E                        l7570 0E80                        l7562 0E28  
                      l7482 0B8C                        l7474 0B4C                        l7650 4F04  
                      l7466 39CC                        l7458 3992                        l7802 1370  
                      l7810 13A8                        l8194 2E26                        l8186 2D5A  
                      l8178 2D38                        l7642 4CF2                        l8338 228C  
                      l8290 1FF8                        l8282 1FCE                        l8274 1F7A  
                      l8266 1F1E                        l8258 1F0E                        l8098 40B0  
                      l8442 2C12                        l8434 2BD6                        l8426 2BA4  
                      l8370 2A22                        l8362 2A1A                        l8354 2A12  
                      l8346 2A08                        l7636 51E8                        l7740 510C  
                      l7732 48F6                        l7724 48E6                        l7716 48AE  
                      l6780 47D6                        l6844 49B0                        l6852 49DA  
                      l6836 4980                        l6828 495E                        l6596 2882  
                      l6588 284A                        l6860 4AAA                        l6764 1E80  
                      l6756 1E2C                        l6748 1DD0                        l6692 1BA4  
                      l6684 1B6C                        l6676 1B28                        l6668 1AF2  
                      l6940 42FE                        l6932 42DE                        l6916 4290  
                      l6908 4250                        l7396 4584                        l7388 4550  
                      l7580 0F06                        l7572 0EB2                        l7564 0E4A  
                      l7548 0DC0                        l7492 0BAE                        l7484 0B94  
                      l7476 0B70                        l7652 4F1A                        l7468 39DA  
                      l7628 5130                        l7820 1428                        l8196 2E8E  
                      l8188 2D6A                        l7900 4DA4                        l7644 4D02  
                      l8292 2000                        l8284 1FE0                        l8276 1F82  
                      l8268 1F44                        l8452 2C68                        l8444 2C38  
                      l8428 2BB2                        l8460 2C8C                        l8380 2A2C  
                      l8372 2A24                        l8364 2A1C                        l8356 2A14  
                      l8348 2A0A                        l7742 511E                        l7734 4928  
                      l7726 48F2                        l7718 48BA                        l6790 4802  
                      l6782 47DA                        l6854 49EA                        l6846 49C6  
                      l6838 4992                        l6598 2890                        l6870 4B4A  
                      l6862 4AD8                        l6766 1E82                        l6758 1E46  
                      l6694 1BBC                        l6686 1B78                        l6678 1B48  
                      l6774 4F42                        l6942 430E                        l6918 42A0  
                      l6950 4BF2                        l7398 45AA                        l7590 0F56  
                      l7574 0EE4                        l7566 0E56                        l7558 0E0C  
                      l7486 0B96                        l7494 0BCC                        l7478 0B7C  
                      l7654 4F36                        l7662 363C                        l7670 22C8  
                      l7830 14AA                        l7822 145C                        l7750 10A8  
                      l8198 2EB2                        l7910 4DC6                        l7902 4DA8  
                      l7646 4D0C                        l7638 4CD4                        l8286 1FE8  
                      l8278 1F92                        l8462 2CCE                        l8454 2C84  
                      l8446 2C46                        l8438 2BDE                        l8390 2A56  
                      l8382 2A30                        l8374 2A26                        l8366 2A1E  
                      l8358 2A16                        l7736 492A                        l6792 480A  
                      l6784 47E8                        l6856 49F2                        l6848 49CE  
                      l6872 4B50                        l6864 4AE8                        l6880 437E  
                      l6768 1E88                        l6696 1BC8                        l6688 1B82  
                      l6776 4F54                        l6944 431E                        l6928 42CA  
                      l6960 4C2A                        l6952 4BFA                        l7592 0F5E  
                      l7584 0F2E                        l7568 0E5E                        l7496 0BDC  
                      l7488 0BA6                        l7648 4EF8                        l7744 5016  
                      l7680 239E                        l7672 22CA                        l7816 13E0  
                      l7760 1104                        l7752 10B8                        l7920 4DF4  
                      l7912 4DD4                        l7904 4DB8                        l8288 1FF0  
                      l8296 2008                        l8464 2CE0                        l8448 2C60  
                      l8392 2A6E                        l8384 2A36                        l8376 2A28  
                      l8368 2A20                        l7930 464C                        l7738 50FA  
                      l6794 480E                        l6786 47F0                        l6866 4B16  
                      l6890 43EA                        l6882 43AC                        l6698 1BD4  
                      l6946 432E                        l6938 42F2                        l6970 4C56  
                      l6962 4C30                        l6954 4C0C                        l7586 0F3C  
                      l7578 0EF6                        l7498 0BF0                        l7746 5024  
                      l7682 23F6                        l7674 22E8                        l7666 2292  
                      l7658 2FE2                        l7842 152E                        l7834 14BE  
                      l7818 13F0                        l7826 1484                        l7770 117C  
                      l7762 1118                        l7754 10CE                        l7914 4DEA  
                      l7906 4DC0                        l7922 4DFA                        l8298 2030  
                      l8466 2CEE                        l8394 2A7C                        l8386 2A3A  
                      l8378 2A2A                        l7940 46FC                        l7932 464E  
                      l6796 4816                        l6788 47F4                        l6868 4B26  
                      l6892 443A                        l6884 43BC                        l6876 4340  
                      l6964 4C46                        l6956 4C14                        l6980 4D6E  
                      l6972 4D3E                        l7588 0F4E                        l7596 0F66  
                      l7860 4F8A                        l7748 5026                        l7684 2456  
                      l7676 230C                        l7692 24C0                        l7668 22B2  
                      l7836 14E2                        l7852 1592                        l7828 149A  
                      l7772 118C                        l7780 11FC                        l7756 10D0  
                      l7916 4DEE                        l7908 4DC4                        l8396 2AA8  
                      l8388 2A48                        l7934 465C                        l7926 4632  
                      l6798 4828                        l6990 4B62                        l6894 4440  
                      l6886 43CA                        l6878 436E                        l6966 4C4E  
                      l6958 4C1C                        l6982 4D84                        l6974 4D50  
                      l7598 0F84                        l7862 4F98                        l7950 415C  
                      l7942 412A                        l7854 520C                        l7694 24E4  
                      l7686 2466                        l7678 2378                        l7846 1556  
                      l7838 1506                        l7790 12B4                        l7782 1230  
                      l7774 11C0                        l7758 10EE                        l7766 1140  
                      l7918 4DF0                        l8398 2AC0                        l7936 466E  
                      l7928 4640                        l6992 4B76                        l6888 43DC  
                      l6968 4C50                        l6984 4D8C                        l6976 4D58  
                      l7864 4FA0                        l7960 4216                        l7952 416E  
                      l7944 412E                        l7856 5210                        l7696 2550  
                      l7688 2498                        l7792 12FC                        l7768 115E  
                      l7872 527C                        l7880 5244                        l7938 46EC  
                      l6994 4B84                        l6898 5052                        l6986 4D92  
                      l6978 4D60                        l7866 4FA8                        l7962 4224  
                      l7946 4144                        l7698 2576                        l7786 1258  
                      l7882 528A                        l7874 526E                        l7970 3E9E  
                      l7890 50EC                        l6996 4B98                        l6988 4B54  
                      l7868 4FBE                        l7964 4232                        l7948 4156  
                      l7956 4174                        l7788 1268                        l7796 1324  
                      l7876 5260                        l7980 3EBC                        l7972 3EA6  
                      l7884 50C4                        l6998 4BAC                        l7958 4194  
                      l7798 1342                        l7894 4C66                        l7878 5252  
                      l7982 3EC4                        l7974 3EA8                        l7886 50D0  
                      l7896 4CA4                        l7992 3F00                        l7984 3ED6  
                      l7976 3EAA                        l7968 3E74                        l7888 50D4  
                      l7994 3F5A                        l7986 3EF8                        l7978 3EB2  
                      l7996 3F5E                        l7998 3F7A                        STR_1 FF37  
                      STR_2 FEBD                        STR_3 FF15                        STR_4 FF8C  
                      STR_5 FF59                        STR_6 FEBD                        STR_7 FF7B  
                      STR_8 FF6A                        STR_9 FF9D                        u7000 471E  
                      u7001 471A                        u7010 4730                        u7011 472C  
                      _PEIE 7F96                        u7020 4758                        u7100 166A  
                      u7021 4754                        u7101 1666                        u7030 478E  
                      u7110 16A6                        u7031 478A                        u7111 16A2  
                      u8000 4B4A                        u7200 17C0                        u7120 16B4  
                      u7040 15CE                        u8001 4B46                        u7201 17BC  
                      u7121 16B0                        u7041 15CA                        u8010 436E  
                      u7210 17F2                        u7130 1722                        u7050 15E0  
                      u8011 436A                        u7211 17EE                        u7131 171E  
                      u7051 15DC                        u8020 43AC                        u7300 193A  
                      u7220 1800                        u7140 173A                        u7060 15F0  
                      u8100 42C6                        u8021 43A8                        u7301 1936  
                      u7221 17FC                        u7141 1734                        u7061 15EC  
                      u8101 42C2                        u8030 43CA                        u7310 194A  
                      u7230 181E                        u7150 173C                        u7070 1632  
                      u8110 42EE                        u8031 43C6                        u7311 1946  
                      u7231 181A                        u7071 162E                        u8111 42EA  
                      u8200 4B62                        u8040 43EA                        u7400 1A32  
                      u7320 195C                        u7240 1856                        u7160 1764  
                      u7080 1648                        u8120 430E                        u9000 4610  
                      u8201 4B5E                        u8041 43E6                        u7401 1A2E  
                      u7321 1958                        u7241 1852                        u7161 1760  
                      u7081 1644                        u8121 430A                        u9001 460C  
                      u8210 4B84                        u8050 443A                        u7410 1A44  
                      u7330 1972                        u7250 189C                        u7170 1782  
                      u7090 165A                        u8130 431E                        u9010 4A26  
                      u8211 4B80                        u8051 4436                        u7411 1A40  
                      u7331 196E                        u7251 1898                        u7171 177E  
                      u7091 1656                        u8131 431A                        u9011 4A22  
                      u8220 4BCE                        u7500 2736                        u8060 506A  
                      u7420 1A60                        u7340 1988                        u7260 18D2  
                      u7180 17A2                        u8300 452E                        u9020 4AA0  
                      u8140 4C0C                        u9100 3992                        u8221 4BCA  
                      u7501 2732                        u8061 5066                        u7421 1A5C  
                      u7341 1984                        u7261 18CE                        u7181 179E  
                      u8301 4528                        u9021 4A9C                        u8141 4C08  
                      u9101 398E                        u7430 5012                        u8230 4BDC  
                      u7510 2776                        u7350 199C                        u7270 18E2  
                      u7190 17B0                        u8070 4250                        u8310 4530  
                      u8150 4C2A                        u9110 39CC                        u9030 384C  
                      u7431 500E                        u8231 4BD8                        u7511 2772  
                      u7351 1998                        u7271 18DE                        u7191 17AC  
                      u8071 424C                        u8151 4C26                        u9111 39C8  
                      u9031 3848                        u8240 5172                        u7600 28F0  
                      u7520 27EC                        u7440 266E                        u7360 19B6  
                      u7280 190E                        u8080 4284                        u8400 335C  
                      u8320 50C2                        u8160 4C46                        u9200 0E4A  
                      u9120 39DA                        u9040 385A                        u8241 516E  
                      u7601 28EC                        u7521 27E8                        u7441 266A  
                      u7361 19B2                        u7281 190A                        u8401 3358  
                      u8321 50BE                        u8161 4C42                        u9201 0E46  
                      u9121 39D6                        u9041 3856                        u7610 2906  
                      u7530 280E                        u7450 2680                        u7370 19F0  
                      u7290 191E                        u8090 42B2                        u8250 4484  
                      u8410 33B0                        u8330 4E0C                        u8170 4D50  
                      u9210 0E80                        u9130 0B70                        u9050 38B6  
                      u7611 2902                        u7531 280A                        u7451 267C  
                      u7371 19EC                        u7291 191A                        u8091 42AE  
                      u8331 4E08                        u8171 4D4C                        u9211 0E7C  
                      u9131 0B6C                        u9051 38B2                        u8500 3C94  
                      u7620 291A                        u7540 2838                        u7460 2690  
                      u7700 1AF0                        u7380 1A02                        u8260 44A2  
                      u8420 33CC                        u8340 325C                        u8180 4D6E  
                      u9220 0EB2                        u9140 0BDC                        u9300 4F36  
                      u9060 390C                        u8501 3C90                        u7621 2916  
                      u7541 2834                        u7461 268C                        u7701 1AEC  
                      u7381 19FE                        u8085 427A                        u8261 449E  
                      u8421 33C8                        u8181 4D6A                        u9221 0EAE  
                      u9141 0BD8                        u9301 4F32                        u9061 3908  
                      u8510 3CA6                        u7630 2934                        u7550 285C  
                      u7470 26D4                        u7710 1B02                        u7390 1A12  
                      u8270 44CA                        u8430 3408                        u8350 328C  
                      u8190 4D84                        u9230 0EE4                        u9150 0BFE  
                      u9070 3956                        u9310 22C4                        u8511 3CA2  
                      u7631 2930                        u7551 2858                        u7471 26D0  
                      u7711 1AFE                        u7391 1A0E                        u8271 44C6  
                      u8255 447A                        u8431 3404                        u8415 33A6  
                      u8351 3288                        u8191 4D80                        u9231 0EE0  
                      u9151 0BFA                        u9071 3952                        u9311 22BE  
                      u9400 493A                        u8520 3CC0                        u7640 297C  
                      u7560 2872                        u7480 26E6                        u7800 1DA2  
                      u7720 1B12                        u8280 44F4                        u8360 32AE  
                      u8440 4EF6                        u8600 02AC                        u9240 0F06  
                      u9160 0C2C                        u9080 3974                        u9320 22C6  
                      u9401 4936                        u8521 3CBC                        u7641 2978  
                      u7561 286E                        u7481 26E2                        u7801 1D9E  
                      u7721 1B0E                        u8281 44F0                        u8361 32AA  
                      u8345 3252                        u8441 4EF2                        u8601 02A8  
                      u9241 0F02                        u9161 0C28                        u9081 3970  
                      u9410 494A                        u8530 3CD0                        u8450 3B9C  
                      u7650 29AC                        u7570 2890                        u7490 26F6  
                      u7810 1DB6                        u7730 1B48                        u8610 0326  
                      u9250 0FA0                        u9170 0CC8                        u9090 3984  
                      u9330 22E8                        u9411 4946                        u8531 3CCC  
                      u8451 3B96                        u7651 29A8                        u7571 288C  
                      u7491 26F2                        u7811 1DB2                        u7731 1B44  
                      u8611 0322                        u9251 0F9C                        u9171 0CC4  
                      u9091 3980                        u9331 22E4                        u9260 51FA  
                      u9420 510A                        u7900 4862                        u8460 3B9E  
                      u7660 29DA                        u7580 28B0                        u7820 1DD0  
                      u7740 1B58                        u8380 331C                        u8700 0568  
                      u8620 03B2                        u8540 0176                        u9180 0CE4  
                      u9340 2466                        u9500 115E                        u9261 51F6  
                      u9421 5106                        u7901 485E                        u7661 29D6  
                      u7581 28AC                        u7821 1DCC                        u7741 1B54  
                      u8381 3318                        u8701 0564                        u8621 03AE  
                      u8541 0172                        u9181 0CE0                        u9341 2462  
                      u9501 115A                        u9270 5208                        u9430 512E  
                      u7910 4888                        u8470 3BAE                        u7590 28C2  
                      u7830 1E18                        u7750 1CD2                        u7670 1A8E  
                      u8390 3340                        u8710 06B0                        u8630 03E4  
                      u8550 01C0                        u9190 0D84                        u9350 264E  
                      u9510 117C                        u9271 5204                        u9431 512A  
                      u7911 4884                        u8471 3BAA                        u7591 28BE  
                      u7831 1E14                        u7671 1A8A                        u8295 4506  
                      u8375 32C2                        u8711 06AC                        u8631 03E0  
                      u8551 01BC                        u9191 0D80                        u9351 264A  
                      u9511 1178                        u9360 48AC                        u7920 495E  
                      u8480 3BDA                        u7840 1E46                        u7760 1D2C  
                      u7680 1AA0                        u8376 32CC                        u8800 09A2  
                      u8720 0716                        u8640 0422                        u8560 01D0  
                      u9440 5038                        u9520 118C                        u9280 4CF2  
                      u9361 48A8                        u7921 495A                        u8481 3BD6  
                      u7841 1E42                        u7761 1D28                        u7681 1A9C  
                      u8377 32DC                        u8801 099E                        u8721 0712  
                      u8641 041E                        u8561 01CC                        u9441 5034  
                      u9521 1188                        u9281 4CEE                        u9370 48CA  
                      u7930 4978                        u8490 3BF0                        u7850 1E80  
                      u7770 1D4C                        u7690 1AB0                        u8810 0A74  
                      u8730 075E                        u8650 04AE                        u8570 020E  
                      u9450 504C                        u9530 1268                        u9290 4D2C  
                      u9371 48C6                        u7931 4974                        u8491 3BEC  
                      u7851 1E7C                        u7771 1D48                        u7755 1CC8  
                      u7691 1AAC                        u8395 3336                        u8811 0A70  
                      u8731 075A                        u8651 04AA                        u8571 020A  
                      u9451 5048                        u9531 1264                        u9291 4D28  
                      u9700 466C                        u9380 48E6                        u7860 47E8  
                      u7940 4992                        u7780 1D5E                        u8820 0A90  
                      u8740 076E                        u8660 04E4                        u8580 0220  
                      u8900 3A8A                        u9540 1342                        u9460 10CA  
                      u9701 4668                        u9381 48E2                        u7861 47E4  
                      u7941 498E                        u7781 1D5A                        u8821 0A8C  
                      u8741 076A                        u8661 04E0                        u8581 021C  
                      u8901 3A86                        u9541 133E                        u9461 10C4  
                      u9605 5276                        u9710 46FC                        u9390 4924  
                      u7870 4802                        u7950 49B0                        u6990 523C  
                      u7790 1D8C                        u8830 0AF6                        u8750 0808  
                      u8670 04FA                        u8590 029A                        u8910 3AB0  
                      u9550 1360                        u9470 10CC                        u9606 5278  
                      u9711 46F8                        u7871 47FE                        u7951 49AC  
                      u6991 5238                        u7791 1D88                        u8831 0AF0  
                      u8751 0804                        u8671 04F6                        u8591 0296  
                      u8911 3AAC                        u9551 135C                        u9615 5268  
                      u7880 4828                        u7960 49C6                        u8840 0AF8  
                      u8760 0856                        u8680 0530                        u8920 3AEA  
                      u9560 1370                        u9480 10EE                        u9616 526A  
                      u9800 3F58                        u7881 4824                        u7961 49C2  
                      u8761 0852                        u8681 052C                        u8921 3AE6  
                      u9721 4138                        u9561 136C                        u9481 10EA  
                      u9625 525A                        u7890 4846                        u7970 49EA  
                      u8850 0B0C                        u8770 0906                        u8690 053E  
                      u8930 3B10                        u9730 4156                        u9570 13F0  
                      u9490 1104                        u9626 525C                        u9810 3F7A  
                      u9650 50EC                        u7891 4842                        u7971 49E6  
                      u8851 0B08                        u8771 0902                        u8691 053A  
                      u9731 4152                        u9571 13EC                        u9491 1100  
                      u9635 524C                        u9811 3F76                        u9651 50E8  
                      u7980 4AD8                        u8780 0940                        u8940 3B42  
                      u8860 3A08                        u9740 416E                        u9580 149A  
                      u9660 4CC4                        u9636 524E                        u9820 3FB2  
                      u9900 3E60                        u9397 491A                        u7981 4AD4  
                      u8781 093C                        u8941 3B3E                        u8861 3A04  
                      u9741 416A                        u9581 1496                        u9645 5292  
                      u9821 3FAE                        u9901 3E5C                        u7990 4B16  
                      u8790 094E                        u8950 3B50                        u8870 3A4E  
                      u9670 4DB8                        u9646 5294                        u9830 3FC8  
                      u9910 400E                        u7991 4B12                        u8791 094A  
                      u8951 3B4C                        u9671 4DB4                        u9831 3FC4  
                      u9751 3ECE                        u9911 400A                        u8960 3B8A  
                      u8880 3A5E                        u9680 4DD4                        u9920 4062  
                      u9840 3D48                        u8961 3B86                        u8937 3B06  
                      u8881 3A5A                        u9681 4DD0                        u9665 4CBA  
                      u9761 3EE0                        u9921 405E                        u9841 3D44  
                      u8890 3A6C                        u8970 4550                        u9690 4DEA  
                      u9930 4088                        u9850 3DAC                        u8891 3A68  
                      u8971 454C                        u9691 4DE6                        u9595 5284  
                      u9931 4084                        u9851 3DA8                        u8980 45E4  
                      u9596 5286                        u9940 4096                        u9860 3E06  
                      u8877 3A44                        u8981 45E0                        u9941 4092  
                      u9861 3E02                        u8990 45F6                        u9790 3F56  
                      u9950 40A8                        u9870 3E14                        u8991 45F2  
                      u9791 3F50                        u9951 40A4                        u9871 3E10  
                      u9784 3F40                        u9960 40C0                        u9880 3E3A  
                      u9785 3F3C                        u9961 40BC                        u9881 3E36  
                      _TMR1 0FCE                        u9778 3F12                        u9970 40D4  
                      u9890 3E48                        u9779 3F5A                        u9971 40D0  
                      u9891 3E44                        u9980 40FA                        u9981 40F6  
                      u9990 4108                        u9991 4104                        abs@a 000C  
                      _dbuf 0127                        _half FE97                        _labs 4DFE  
                      _main 29EE                        _dtoa 3B8C                        _rand 4C66  
                      _seed 0197                        _prec 0057                        _sinf 10A8  
                      pad@i 001E                        pad@p 001B                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        _stoa 39EE  
                      btemp 005A                        _utoa 4542               ___fpclassifyf 4444  
                      prodh 0FF4                        prodl 0FF3                        start 014E  
           ___fldiv@new_exp 003E                ___param_bank 0000                       ??_ISR 0001  
            _LCD_ShowString 489A                       ??_abs 000E                       ??_pad 001D  
          __end_of_LCD_Init 470C            __end_of_LCD_Send 520C               ___fltol@sign1 0052  
                     ?_labs 0006             __end_of___fladd 1A74                       ?_main 0001  
                     ?_dtoa 0020             __end_of___fldiv 29EE                       ?_rand 0012  
           __end_of___awdiv 489A             __end_of___cosdf 383A             __end_of___lbdiv 4DFE  
           __end_of___flneg 508C                       STR_10 FF48                       STR_11 FEBD  
                     STR_12 FF26                       STR_20 FFF7                       STR_13 FFAE  
                     STR_21 FFF3                       STR_14 FEBD                       STR_30 FEF3  
                     STR_22 FFD7                       STR_15 FEBD                       STR_31 FEBB  
                     STR_23 FFC6                       STR_16 FFE6                       STR_40 FFBF  
                     STR_32 FEE1                       STR_24 FFD6                       STR_25 FFCC  
                     STR_33 FF04                       STR_17 FFDC                       STR_26 FFCD  
                     STR_34 FFEB                       STR_18 FFE1                       STR_27 FECE  
                     STR_19 FFFB                       STR_28 FFD2             __end_of___awmod 49FC  
                     STR_37 FFEF                       STR_29 FEBB                       ?_sinf 00A4  
           __end_of___flmul 1E9E             __end_of___flsub 4F8A             __end_of___fltol 4340  
                     ?_stoa 0010                       u10000 411C                       u10001 4118  
                     u10011 344A                       u10020 3472                       u10100 2F54  
                     u10021 346E                       u10101 2F50                       u10030 3512  
                     u10110 2F76                       u10031 350E                       u10111 2F72  
                     ?_utoa 0020                       u10040 35EC                       u10120 2F8A  
                     u10200 2114                       u10041 35E8                       u10121 2F86  
                     u10201 2110                       u10050 3612                       u10130 2F9E  
                     u10210 2230                       u10051 360E                       u10131 2F9A  
                     u10211 222C                       u10060 3620                       u10140 2FB2  
                     u10220 2256                       u10300 2AEC                       u10061 361C  
                     u10141 2FAE                       u10221 2252                       u10301 2AE8  
                     u10070 3638                       u10150 2FE0                       u10230 2264  
                     u10310 2AFA                       u10071 3634                       u10151 2FDC  
                     u10231 2260                       u10311 2AF6                       u10080 2D6A  
                     u10240 227C                       u10320 2B20                       u10081 2D66  
                     u10241 2278                       u10161 1EE4                       u10321 2B1C  
                     u10090 2DCC                       u10330 2B2E                       u10250 2A56  
                     u10091 2DC8                       u10171 1F18                       u10331 2B2A  
                     u10251 2A52                       u10180 1F92                       u10340 2CE0  
                     u10260 2A7C                       u10181 1F8E                       u10341 2CDC  
                     u10261 2A78                       u10190 20E4                       u10270 2A9A  
                     u10191 20E0                       u10407 2C2C                       u10271 2A96  
                     u10280 2AA8                       u10417 2C52                       u10281 2AA4  
                     u10290 2ACE                       u10507 4654                       u10427 3E20  
                     u10291 2ACA             ___awdiv@divisor 001A                       u10517 4702  
                     u10437 406C                       u10357 29FA                       u10447 40DE  
                     u10367 2A62                       u10457 3F84                       u10377 2AB4  
                     u10467 21CA                       u10387 2B06                       u10477 223C  
                     u10397 2C06                       u10487 2FC4                       u10497 35F8  
                     _RC1IE 7CED                       _RC1IF 7CF5             __end_of___lwdiv 4C66  
           __end_of___sindf 3214             __end_of___lwmod 4DA2                       i2l412 0088  
                     i2l414 0074                       i2l423 0142                ___sindf$4532 0070  
           ___awdiv@counter 001C                ___sindf$4533 0074                ___sindf$4534 0078  
              vfpfcnvrt@fmt 00BB                       _TX1IF 7CF4         ___lmul@multiplicand 000A  
           __end_of_pio2_1t FE8F                       _fabsf 5130                       _flags 0059  
                     _gmail 0177         read_prec_or_width@c 000E         read_prec_or_width@n 000F  
                     _fputc 470C                       _fputs 4FD0                       labs@a 0006  
                     pad@fp 0017                       _width 0055             __end_of_invpio2 FE97  
                     _putch 522C                       dtoa@d 0022                       dtoa@i 002B  
                     dtoa@p 0028                       dtoa@s 002A                       dtoa@w 0026  
      __end_of_LED1_Control 5288             __end_of_runGAME 2292             __end_of_runGPIO 3FE0  
                     pclath 0FFA                       tablat 0FF5             __end_of_runUART 3E74  
      __end_of_LED2_Control 527A                       sinf@n 00B0                       sinf@x 00A4  
                     sinf@y 00B6                       plusw1 0FE3                       plusw2 0FDB  
                     stoa@l 001C                       stoa@p 0016                       stoa@s 0012  
                     stoa@w 0018                       ttemp5 005B                       ttemp6 005E  
                     ttemp7 0062                       utoa@d 0022        __end_of_LED3_Control 526C  
                     utoa@i 0028                       utoa@p 0026                       utoa@w 0024  
                     status 0FD8                       wtemp8 005B             __end_of_sprintf 4FD0  
            ?___fpclassifyf 0006             ___lbdiv@divisor 0006        __end_of_LED4_Control 525E  
           ___lbdiv@counter 0008        __end_of_LED5_Control 5250             runUART@reversed 00D4  
      __end_of_LED6_Control 5296             __initialization 4E54      __end_of_LCD_ShowString 494C  
              __end_of_half FE9B                __end_of_labs 4E54                __end_of_main 2CFA  
              __end_of_dtoa 3D08                __end_of_rand 4CD4                __end_of_sinf 15B2  
              __end_of_stoa 3B8C                __end_of_utoa 4632                LCD_Send@data 0006  
                    ??_labs 000A                      ??_main 00FA                      ??_dtoa 0024  
                    ??_rand 0014                      ??_sinf 0054                      ??_stoa 0014  
                    ??_utoa 0024           __end_of_LCD_Clear 5130               __activetblptr 0002  
__end_of_read_prec_or_width 4AAA                ?_moveDisplay 00E7                      ?_fabsf 0006  
                    ?_fputc 0007                      ?_fputs 0010                      _ADRESH 0FC4  
                    _ADRESL 0FC3                      _CCPR1L 0FBE            ___awdiv@dividend 0018  
                    _GAMEIE 0124                      ?_putch 0001                      _GODONE 7E11  
                    _GPIOIE 0126                      i2l6230 004E                      i2l6222 0012  
                    i2l6232 0066                      i2l6224 0020                      i2l6240 0092  
                    i2l6250 00CA                      i2l6242 00A0                      i2l6226 002E  
                    i2l6260 00FE                      i2l6244 00AE                      i2l6252 00CC  
                    i2l6236 0082                      i2l6228 0040                      i2l6270 013A  
                    i2l6262 0110                      i2l6254 00DA                      i2l6246 00C0  
                    i2l6238 0090                      i2l6264 0120                      i2l6256 00E8  
                    i2l6248 00C2                      i2l6266 0128                      i2l6258 00FA  
                    i2l6268 012C                      _RCREG1 0FAE               ___rem_pio2f@n 00A0  
             ___rem_pio2f@t 009C               ___rem_pio2f@x 0084               ___rem_pio2f@y 0088  
             vfpfcnvrt@done 00BF                      _UARTIE 0125                      _SPBRG1 0FAF  
                    _TMR1IE 7CE8                      _TMR1IF 7CF0                      _TMR2IE 7CE9  
                    _TMR2IF 7CF1                      _TMR1ON 7E68                      _TMR2ON 7DD2  
                    _SSP1IF 7CF3                      _SSP2IF 7D27                      _TXREG1 0FAD  
          __end_of___xxtofl 39EE                _CCPTMRS0bits 0F49                vfprintf@cfmt 00CC  
           ?_LCD_ShowString 0007                      _s1pio2 FEB7                      _s2pio2 FEB3  
                    _s3pio2 FEAF                      _s4pio2 FEAB                      ___flge 4340  
                    ___fleq 4AAA                      ___lmul 4CD4                   ??___fladd 004E  
                    ___wmul 51C0                   ??___fldiv 0035                   ??___awdiv 001C  
                 ??___cosdf 0052                   ??___lbdiv 0007                   ??___flneg 0052  
                 ??___awmod 000A                   ??___flmul 001C                   ??___flsub 0052  
                 ??___fltol 0068            runUART@keepState 00F3                      _efgtoa 0152  
                 ??___lwdiv 000A                   ??___sindf 0052                   ??___lwmod 000A  
                    _pio2_1 FE8F                      _floorf 3214                      fabsf@u 000A  
                    fabsf@x 0006                      _memcpy 4EA8        read_prec_or_width@ap 000D  
                    clear_0 4E7A                      clear_1 4E86            ___awdiv@quotient 001E  
                    _runADC 342A                      _runDAC 2CFA             ___awmod@divisor 0008  
                    isa$std 0001                      _runPWM 3FE0        runGAME@keepStateGAME 01C6  
           ___awmod@counter 000A                      _printf 520C                      pad@buf 0019  
                    dtoa@fp 0020                      _strcpy 508C                      _strlen 50C4  
                    fputc@c 0007                      fputs@c 0014                      fputs@i 0015  
                    fputs@s 0010            __end_of_runMUSIC 5298             ___fpclassifyf@e 000E  
           ___fpclassifyf@u 0010             ___fpclassifyf@x 0006                __mediumconst FE7A  
                 ??_runGAME 00E7                      sinf@ux 00BA                   ??_runGPIO 0007  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
         __end_of_SPI_write 5052                   ??_runUART 00D2                      stoa@cp 001A  
                    stoa@fp 0010            __end_of_vfprintf 4F42                      utoa@fp 0020  
                 ??_sprintf 0054            ___lbdiv@dividend 0007                  ___flge@ff1 002D  
                ___flge@ff2 0031             ??___fpclassifyf 000A                ___xxtofl@arg 0010  
              ___xxtofl@exp 000F                ___xxtofl@val 0006                  ___fleq@ff1 0006  
                ___fleq@ff2 000A                  __accesstop 0060     __end_of__initialization 4E9A  
                 ?_LCD_Init 0001                   ?_LCD_Send 0001                  ___flneg@f1 0080  
             ___rparam_used 0001                  ___fltol@f1 0064              __pcstackCOMRAM 0001  
         LED4_Control@state 0006                __pidataBANK1 5198               __end_of_fabsf 5164  
             __end_of_fputc 47D6               __end_of_fputs 5014               __end_of_putch 5242  
                __end_of_C0 FEAB                  __end_of_C1 FEA7                  __end_of_C2 FEA3  
                __end_of_C3 FE9F                  __end_of_S1 FE8B                  __end_of_S2 FE87  
                __end_of_S3 FE83                  __end_of_S4 FE7F            ___lbdiv@quotient 0009  
                   ??_fabsf 000A                     ??_fputc 000B                     ??_fputs 0014  
                   ??_putch 0006                  __pbssBANK0 00FE                  __pbssBANK1 0100  
                __pbssBANK2 0200                  ??_LCD_Init 0007                  ??_LCD_Send 0006  
               runADC@F6967 0100                SPI_write@LSB 0007                SPI_write@MSB 0006  
                   ISR@temp 0005                     ?___flge 002D                     ?___fleq 0006  
                   ?___lmul 0006                     ?___wmul 0006                     ?_efgtoa 0084  
             ??___rem_pio2f 0089                     ?_floorf 0046                _LED1_Control 527A  
                   ?_memcpy 0006              ___lmul@product 000E                     ?_runADC 0001  
                   ?_runDAC 0001                _LED2_Control 526C         runGAME@randomNumber 01CB  
                   ?_runPWM 0001                     ?_printf 00CE                     ?_strcpy 0006  
                   ?_strlen 0006                _LED3_Control 525E                _LED4_Control 5250  
                 ?___xxtofl 0006                _LED5_Control 5242              ___rem_pio2f@fn 0098  
            ___rem_pio2f@ty 008B              ___rem_pio2f@ux 0094                _LED6_Control 5288  
                   _SSP2ADD 0F6E                     _SSP1BUF 0FC9                     _SSP2BUF 0F6F  
               runGAME@pot1 01C9                 runGAME@text 019B           runGPIO@LEDControl 0015  
           LCD_ShowString@i 000C                     __Hparam 0000                     __Lparam 0000  
                 ?_runMUSIC 0001                     ___fladd 15B2                     ___fldiv 2654  
                   ___awdiv 47D6                     ___cosdf 363C                     ___lbdiv 4DA2  
                   ___flneg 5052                     ___awmod 494C                     ___flmul 1A74  
                   ___flsub 4F42                     ___fltol 4238                     ___lwdiv 4BF2  
                   ___sindf 2FE2                     ___lwmod 4D3E                   ?_vfprintf 00C7  
            main@setUpAgain 00FC                     __pcinit 4E54                     __ramtop 1000  
                   __ptext0 29EE                     __ptext1 3D08                     __ptext2 50C4  
                   __ptext3 3FE0                     __ptext4 5296                     __ptext5 3E74  
                   __ptext6 5242                     __ptext7 5250                     __ptext8 525E  
                   __ptext9 526C                     _pio2_1t FE8B                   _T1CONbits 0FCD  
           runPWM@keepState 0022       read_prec_or_width@fmt 000C                  ??___xxtofl 000A  
       __end_of___rem_pio2f 2654            ___awmod@dividend 0006                     _invpio2 FE93  
                   _runGAME 1E9E                     _runGPIO 3E74                     efgtoa@c 008A  
                   efgtoa@d 0098                     efgtoa@e 009C                     efgtoa@f 0086  
                   efgtoa@g 00AF                     efgtoa@h 00A6                     efgtoa@i 00A4  
                   efgtoa@l 00AA                     efgtoa@m 009A                     efgtoa@n 00B3  
                   efgtoa@p 008F                     efgtoa@t 0091                     efgtoa@u 00B5  
                   efgtoa@w 009E                     _runUART 3D08                   _LCD_Clear 50FA  
                   _sprintf 4F8A            ___rem_pio2f$4531 008F        end_of_initialization 4E9A  
                   floorf@e 0064                     floorf@m 0060                     floorf@u 0066  
                   floorf@x 0046                     memcpy@d 000D                     memcpy@n 000A  
                   memcpy@s 000F                     fputc@fp 0009            ___rem_pio2f@F526 0115  
             __Lmediumconst FE7A                     fputs@fp 0012            ??_LCD_ShowString 0009  
        _read_prec_or_width 49FC                   i2u1052_47 0058           LED1_Control@state 0006  
     LCD_ShowString@lineNum 000B            ___rem_pio2f@sign 0093          runGAME@GAMEdivider 01C8  
                ??_runMUSIC 0006           __end_of_vfpfcnvrt 10A8                  efgtoa@mode 0096  
                efgtoa@sign 00AE                     postdec1 0FE5                     postdec2 0FDD  
       ?_read_prec_or_width 000C                     postinc0 0FEE                     postinc1 0FE6  
                   postinc2 0FDE            vfpfcnvrt@convarg 00C0                  ??_vfprintf 0054  
                   strcpy@d 000A                     strlen@a 0008                     strlen@s 0006  
                 _PORTAbits 0F80                   _PORTCbits 0F82                 ___fladd@grs 0063  
             ___xxtofl@sign 000E                   _TRISAbits 0F92                   _TRISBbits 0F93  
                 _TRISCbits 0F94                   _TRISDbits 0F95                  ?_LCD_Clear 0001  
      ??_read_prec_or_width 000E                 ___fldiv@grs 0040                 ___fldiv@rem 0039  
                 _SPI_write 5014                 ___flmul@grs 0022                 _CCP1CONbits 0FBD  
         LED5_Control@state 0006              __end_of_s1pio2 FEBB              __end_of_s2pio2 FEB7  
            __end_of_s3pio2 FEB3              __end_of_s4pio2 FEAF              __end_of___flge 4444  
            __end_of___fleq 4B54              __end_of___lmul 4D3E                 vfpfcnvrt@ap 00BC  
               vfpfcnvrt@cp 00C5                 ___rem_pio2f 2292                 vfpfcnvrt@fp 00B9  
            __end_of___wmul 51E6              __end_of_efgtoa 0B4C              __end_of_pio2_1 FE93  
      moveDisplay@menuItem1 019B        moveDisplay@menuItem2 01AC              __end_of_floorf 342A  
      moveDisplay@menuItems 01BD              __end_of_memcpy 4EF8                  floorf@F521 0119  
            __end_of_runADC 363C              __end_of_runDAC 2FE2              __end_of_runPWM 4126  
            __end_of_printf 522C              __end_of_strcpy 50C4              __end_of_strlen 50FA  
       start_initialization 4E54                 __end_of_ISR 014E                 __end_of_abs 5198  
               __end_of_pad 4BF2                  ?_SPI_write 0001       __end_of___fpclassifyf 4542  
           runADC@keepState 01B8                 vfprintf@fmt 00C9                    ??___flge 0035  
                  ??___fleq 000E                    ??___lmul 000E                    ??___wmul 000A  
                  ??_efgtoa 008B                 __pdataBANK1 01CE                    ??_floorf 004A  
                  ??_memcpy 000C                    ??_runADC 00E7                    ??_runDAC 00D2  
                  ??_runPWM 0020                    ??_printf 0054                    ??_strcpy 000A  
                  ??_strlen 0008            runGAME@GAMEround 01C7                   ___fladd@a 004A  
                 ___fladd@b 0046                   ___fldiv@a 0031                   ___fldiv@b 002D  
             runGPIO@states 0009                   ___cosdf@r 0068                   ___cosdf@w 0078  
                 ___cosdf@x 0064                   ___cosdf@z 007C                   ___flmul@a 0018  
                 ___flmul@b 0014                 __pbssCOMRAM 0055                   ___flsub@a 0068  
                 ___flsub@b 0064               __pcstackBANK0 0060               __pcstackBANK1 019B  
               ??_LCD_Clear 0007                   ___sindf@r 0068                   ___sindf@s 007C  
                 ___sindf@w 006C                   ___sindf@x 0064                   ___sindf@z 0080  
     runGPIO@numberOfStates 0021                 _efgtoa$4068 0093            ___lwdiv@dividend 0006  
                 _dtoa$4037 0024               SPI_write@data 0008                   __pintcode 0008  
             __pmediumconst FE7A                    ?___fladd 0046                    ?___fldiv 002D  
                  ?___awdiv 0018                    ?___cosdf 0064                    ?___lbdiv 0006  
                  ?___flneg 0080                    ?___awmod 0006                    ?___flmul 0014  
                  ?___flsub 0064                    ?___fltol 0064                  runADC@pot1 01B4  
                runADC@pot2 01B6                    ?___lwdiv 0006                    ?___sindf 0064  
                  ?___lwmod 0006                  runADC@text 019B                   fabsf@F465 0111  
             ??_moveDisplay 00E8                    ?_runGAME 0001                    ?_runGPIO 0001  
                  ?_runUART 0001             runDAC@keepState 00DB            ___lwdiv@quotient 000B  
                  ?_sprintf 00CE                   _sinf$4243 00A8                   _sinf$4244 00AC  
                 _sinf$4527 00B2                    _GAMEtime 0123                 ??_SPI_write 0006  
            runDAC@DACindex 00DD                    _LCD_Init 4632                    _LCD_Send 51E6  
            ___wmul@product 000A                    _LATAbits 0F89                    _LATBbits 0F8A  
                  _LATCbits 0F8B                    _LATDbits 0F8C                runGAME@F6970 0200  
              runGAME@F6964 0219                  runUART@len 00F4           LED2_Control@state 0006  
                  i2u690_40 0074                    i2u690_41 0070                    i2u691_40 0082  
                  i2u691_41 007E                    i2u692_40 00A0                    i2u692_41 009C  
                  i2u693_40 00AE                    i2u693_41 00AA                    i2u694_40 00C0  
                  i2u686_40 0020                    i2u694_41 00BC                    i2u686_41 001C  
                  i2u695_40 00DA                    i2u687_40 002E                    i2u695_41 00D6  
                  i2u687_41 002A                    i2u696_40 00E8                    i2u688_40 0040  
                  i2u696_41 00E4                    i2u688_41 003C                    i2u697_40 00FA  
                  i2u689_40 004E                    i2u697_41 00F6                    i2u689_41 004A  
                  i2u698_40 0110                    i2u698_41 010C                   _vfpfcnvrt 0B4C  
                _ADCON0bits 0FC2                  _ADCON2bits 0FC0           ___wmul@multiplier 0006  
                 main@menuI 00FD            moveDisplay@F6965 01CE                  vfpfcnvrt@c 00C4  
         ___lmul@multiplier 0006                   copy_data0 4E68           runGAME@approxText 01AC  
       __end_of_moveDisplay 4238            moveDisplay@menuI 01CD            moveDisplay@where 00E7  
              runGPIO@F6975 01EA                runGPIO@F6993 01DE                runGPIO@GPIOi 0023  
                  __Hrparam 0000                   memcpy@tmp 000C                  vfprintf@ap 00CB  
                  __Lrparam 0000                  vfprintf@fp 00C7             runGAME@GAMEpart 01C5  
         LED6_Control@state 0006                ?___rem_pio2f 0084                  ?_vfpfcnvrt 00B9  
       runDAC@selectModeDAC 00DC                  _ANSELAbits 0F38                  _ANSELBbits 0F39  
                _ANSELCbits 0F3A                  _ANSELDbits 0F3B                  _ANSELEbits 0F3C  
        ___fpclassifyf@F465 011D                  sprintf@fmt 00D0                    ___xxtofl 383A  
           ___lwdiv@divisor 0008             ___lwdiv@counter 000A                    __ptext10 527A  
                  __ptext11 5288                    __ptext20 5130                    __ptext12 1E9E  
                  __ptext21 363C                    __ptext13 4C66                    __ptext30 4542  
                  __ptext22 520C                    __ptext14 4CD4                    __ptext31 4D3E  
                  __ptext23 5014                    __ptext15 4DA2                    __ptext40 3214  
                  __ptext32 4BF2                    __ptext24 342A                    __ptext16 2CFA  
                  __ptext41 4444                    __ptext33 39EE                    __ptext25 383A  
                  __ptext17 10A8                    __ptext50 3B8C                    __ptext42 4238  
                  __ptext34 49FC                    __ptext26 4126                    __ptext18 2FE2  
                  __ptext51 4B54                    __ptext43 4F42                    __ptext35 51C0  
                  __ptext27 4F8A                    __ptext19 2292                    __ptext60 4632  
                  __ptext52 4FD0                    __ptext44 15B2                    __ptext36 0152  
                  __ptext28 4EF8                    __ptext61 51E6                    __ptext53 470C  
                  __ptext45 5052                    __ptext37 508C                    __ptext29 0B4C  
                  __ptext54 522C                    __ptext46 1A74                    __ptext38 4EA8  
                  __ptext55 5164                    __ptext47 4340                    __ptext39 4DFE  
                  __ptext56 494C                    __ptext48 4AAA                    __ptext57 47D6  
                  __ptext49 2654                    __ptext58 489A                    __ptext59 50FA  
            runADC@voltage1 01AC              runADC@voltage2 01B0                _SSP1CON1bits 0FC6  
              _SSP2CON1bits 0F6C                _SSP2CON2bits 0F6B                  strcpy@dest 0006  
                  efgtoa@fp 0084                    efgtoa@ne 008D                    efgtoa@pp 0095  
                  efgtoa@ou 00A0                    _runMUSIC 5296                    isa$xinst 0000  
                  int$flags 005A                 _runDAC$4524 00D3                 _runDAC$4525 00D7  
                  _vfprintf 4EF8               ?_LED1_Control 0001                   printf@fmt 00CE  
              _SSP1STATbits 0FC7               ?_LED2_Control 0001                _SSP2STATbits 0F6D  
             ?_LED3_Control 0001               ?_LED4_Control 0001                   putch@data 0006  
             ?_LED5_Control 0001                    memcpy@d1 0006               ?_LED6_Control 0001  
                  memcpy@s1 0008                 _moveDisplay 4126                    intlevel2 0000  
                 sprintf@ap 00DA            ___lwmod@dividend 0006                   strcpy@src 0008  
                _RCSTA1bits 0FAB                    sinf@sign 00B1                    runGPIO@j 0024  
                  runUART@i 00F6                    runUART@p 00F8                 efgtoa@nmode 0097  
                  printf@ap 0054              ??_LED1_Control 0006              ??_LED2_Control 0006  
               ??_vfpfcnvrt 00BD      LCD_ShowString@textData 0007              ??_LED3_Control 0006  
            ??_LED4_Control 0006                    sprintf@f 00DB                    sprintf@s 00CE  
            ??_LED5_Control 0006             ___lwmod@divisor 0008              ??_LED6_Control 0006  
           ___lwmod@counter 000A            runPWM@multiplier 0023               ___fladd@signs 0060  
              ___fladd@aexp 0061                ___fladd@bexp 0062                ___cosdf$4530 0074  
              ___cosdf$4528 006C                ___cosdf$4529 0070               _keepStateGPIO 00FE  
         LED3_Control@state 0006  
