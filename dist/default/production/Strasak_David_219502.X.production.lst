

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Apr 28 15:31:23 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61   000000                     
    62                           ; Generated 12/10/2023 GMT
    63                           ; 
    64                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F46K22 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96   000000                     
    97                           	psect	idataBANK0
    98   00406E                     __pidataBANK0:
    99                           	callstack 0
   100                           
   101                           ;initializer for runGPIO@F6982
   102   00406E  20                 	db	32
   103   00406F  30                 	db	48
   104   004070  18                 	db	24
   105   004071  0C                 	db	12
   106   004072  06                 	db	6
   107   004073  03                 	db	3
   108   004074  01                 	db	1
   109   004075  03                 	db	3
   110   004076  06                 	db	6
   111   004077  0C                 	db	12
   112   004078  18                 	db	24
   113   004079  30                 	db	48
   114                           
   115                           ;initializer for runGPIO@F6964
   116   00407A  F6                 	db	low _LED1_Control
   117   00407B  40                 	db	high _LED1_Control
   118   00407C  E8                 	db	low _LED2_Control
   119   00407D  40                 	db	high _LED2_Control
   120   00407E  DA                 	db	low _LED3_Control
   121   00407F  40                 	db	high _LED3_Control
   122   004080  CC                 	db	low _LED4_Control
   123   004081  40                 	db	high _LED4_Control
   124   004082  BE                 	db	low _LED5_Control
   125   004083  40                 	db	high _LED5_Control
   126   004084  04                 	db	low _LED6_Control
   127   004085  41                 	db	high _LED6_Control
   128                           
   129                           ;initializer for moveDisplay@F6952
   130   004086  9D                 	db	low STR_6
   131   004087  A2                 	db	low STR_7
   132   004088  B4                 	db	low STR_8
   133   004089  B0                 	db	low STR_9
   134   00408A  AC                 	db	low STR_10
   135   00408B  98                 	db	low STR_11
   136   00408C  8C                 	db	low STR_12
   137   00408D  AB                 	db	low (STR_5+4)
   138                           
   139                           	psect	smallconst
   140   001000                     __psmallconst:
   141                           	callstack 0
   142   001000  00                 	db	0
   143   001001  6C3C               	dw	27708
   144   001003  3636               	dw	13878
   145   001005                     __end_of_S4:
   146                           	callstack 0
   147   001005  07CF               	dw	1999
   148   001007  B950               	dw	47440
   149   001009                     __end_of_S3:
   150                           	callstack 0
   151   001009  8884               	dw	34948
   152   00100B  3C08               	dw	15368
   153   00100D                     __end_of_S2:
   154                           	callstack 0
   155   00100D  AAAB               	dw	43691
   156   00100F  BE2A               	dw	48682
   157   001011                     __end_of_S1:
   158                           	callstack 0
   159   001011  85A3               	dw	34211
   160   001013  3288               	dw	12936
   161   001015                     __end_of_pio2_1t:
   162                           	callstack 0
   163   001015  0FDA               	dw	4058
   164   001017  3FC9               	dw	16329
   165   001019                     __end_of_pio2_1:
   166                           	callstack 0
   167   001019  F983               	dw	63875
   168   00101B  3F22               	dw	16162
   169   00101D                     __end_of_invpio2:
   170                           	callstack 0
   171   00101D  0000               	dw	0
   172   00101F  3F00               	dw	16128
   173   001021                     __end_of_half:
   174                           	callstack 0
   175   001021  9A17               	dw	39447
   176   001023  37CC               	dw	14284
   177   001025                     __end_of_C3:
   178                           	callstack 0
   179   001025  043F               	dw	1087
   180   001027  BAB6               	dw	47798
   181   001029                     __end_of_C2:
   182                           	callstack 0
   183   001029  AA9F               	dw	43679
   184   00102B  3D2A               	dw	15658
   185   00102D                     __end_of_C1:
   186                           	callstack 0
   187   00102D  0000               	dw	0
   188   00102F  BF00               	dw	48896
   189   001031                     __end_of_C0:
   190                           	callstack 0
   191   001031  0FDB               	dw	4059
   192   001033  40C9               	dw	16585
   193   001035                     __end_of_s4pio2:
   194                           	callstack 0
   195   001035  CBE4               	dw	52196
   196   001037  4096               	dw	16534
   197   001039                     __end_of_s3pio2:
   198                           	callstack 0
   199   001039  0FDB               	dw	4059
   200   00103B  4049               	dw	16457
   201   00103D                     __end_of_s2pio2:
   202                           	callstack 0
   203   00103D  0FDB               	dw	4059
   204   00103F  3FC9               	dw	16329
   205   001041                     __end_of_s1pio2:
   206                           	callstack 0
   207   000000                     _LATBbits	set	3978
   208   000000                     _TRISBbits	set	3987
   209   000000                     _SSP2STATbits	set	3949
   210   000000                     _SSP2ADD	set	3950
   211   000000                     _TMR1ON	set	32360
   212   000000                     _TMR1IF	set	31984
   213   000000                     _GIE	set	32663
   214   000000                     _TX1IF	set	31988
   215   000000                     _GODONE	set	32273
   216   000000                     _ANSELBbits	set	3897
   217   000000                     _ANSELDbits	set	3899
   218   000000                     _PORTAbits	set	3968
   219   000000                     _PORTCbits	set	3970
   220   000000                     _LATCbits	set	3979
   221   000000                     _LATDbits	set	3980
   222   000000                     _ANSELAbits	set	3896
   223   000000                     _TRISAbits	set	3986
   224   000000                     _TRISCbits	set	3988
   225   000000                     _TRISDbits	set	3989
   226   000000                     _TMR1IE	set	31976
   227   000000                     _SSP1IF	set	31987
   228   000000                     _SSP2IF	set	32039
   229   000000                     _LATAbits	set	3977
   230   000000                     _SSP2CON2bits	set	3947
   231   000000                     _SSP2CON1bits	set	3948
   232   000000                     _SSP2BUF	set	3951
   233   000000                     _RCSTA1bits	set	4011
   234   000000                     _SPBRG1	set	4015
   235   000000                     _ADCON2bits	set	4032
   236   000000                     _SSP1CON1bits	set	4038
   237   000000                     _SSP1BUF	set	4041
   238   000000                     _SSP1STATbits	set	4039
   239   000000                     _ADCON0bits	set	4034
   240   000000                     _ADRESH	set	4036
   241   000000                     _TXREG1	set	4013
   242   000000                     _TXSTA1bits	set	4012
   243   000000                     _T1CONbits	set	4045
   244   000000                     _TMR1	set	4046
   245   000000                     _PEIE	set	32662
   246   001041                     STR_1:
   247   001041  56                 	db	86	;'V'
   248   001042  79                 	db	121	;'y'
   249   001043  74                 	db	116	;'t'
   250   001044  76                 	db	118	;'v'
   251   001045  6F                 	db	111	;'o'
   252   001046  72                 	db	114	;'r'
   253   001047  69                 	db	105	;'i'
   254   001048  6C                 	db	108	;'l'
   255   001049  3A                 	db	58	;':'
   256   00104A  20                 	db	32
   257   00104B  20                 	db	32
   258   00104C  20                 	db	32
   259   00104D  20                 	db	32
   260   00104E  20                 	db	32
   261   00104F  20                 	db	32
   262   001050  20                 	db	32
   263   001051  00                 	db	0
   264   001052                     STR_2:
   265   001052  44                 	db	68	;'D'
   266   001053  61                 	db	97	;'a'
   267   001054  76                 	db	118	;'v'
   268   001055  69                 	db	105	;'i'
   269   001056  64                 	db	100	;'d'
   270   001057  20                 	db	32
   271   001058  53                 	db	83	;'S'
   272   001059  74                 	db	116	;'t'
   273   00105A  72                 	db	114	;'r'
   274   00105B  61                 	db	97	;'a'
   275   00105C  73                 	db	115	;'s'
   276   00105D  61                 	db	97	;'a'
   277   00105E  6B                 	db	107	;'k'
   278   00105F  20                 	db	32
   279   001060  20                 	db	32
   280   001061  20                 	db	32
   281   001062  00                 	db	0
   282   001063                     STR_3:
   283   001063  52                 	db	82	;'R'
   284   001064  42                 	db	66	;'B'
   285   001065  30                 	db	48	;'0'
   286   001066  2D                 	db	45
   287   001067  41                 	db	65	;'A'
   288   001068  32                 	db	50	;'2'
   289   001069  2C                 	db	44
   290   00106A  20                 	db	32
   291   00106B  42                 	db	66	;'B'
   292   00106C  52                 	db	82	;'R'
   293   00106D  3A                 	db	58	;':'
   294   00106E  20                 	db	32
   295   00106F  39                 	db	57	;'9'
   296   001070  36                 	db	54	;'6'
   297   001071  30                 	db	48	;'0'
   298   001072  30                 	db	48	;'0'
   299   001073  00                 	db	0
   300   001074                     STR_4:
   301   001074  31                 	db	49	;'1'
   302   001075  3A                 	db	58	;':'
   303   001076  74                 	db	116	;'t'
   304   001077  72                 	db	114	;'r'
   305   001078  2C                 	db	44
   306   001079  32                 	db	50	;'2'
   307   00107A  3A                 	db	58	;':'
   308   00107B  73                 	db	115	;'s'
   309   00107C  69                 	db	105	;'i'
   310   00107D  6E                 	db	110	;'n'
   311   00107E  2C                 	db	44
   312   00107F  33                 	db	51	;'3'
   313   001080  3A                 	db	58	;':'
   314   001081  70                 	db	112	;'p'
   315   001082  69                 	db	105	;'i'
   316   001083  6C                 	db	108	;'l'
   317   001084  00                 	db	0
   318   001085                     STR_16:
   319   001085  28                 	db	40
   320   001086  6E                 	db	110	;'n'
   321   001087  75                 	db	117	;'u'
   322   001088  6C                 	db	108	;'l'
   323   001089  6C                 	db	108	;'l'
   324   00108A  29                 	db	41
   325   00108B  00                 	db	0
   326   00108C                     STR_12:
   327   00108C  4D                 	db	77	;'M'
   328   00108D  55                 	db	85	;'U'
   329   00108E  53                 	db	83	;'S'
   330   00108F  49                 	db	73	;'I'
   331   001090  43                 	db	67	;'C'
   332   001091  00                 	db	0
   333   001092                     STR_14:
   334   001092  3E                 	db	62	;'>'
   335   001093  25                 	db	37
   336   001094  2D                 	db	45
   337   001095  2A                 	db	42
   338   001096  73                 	db	115	;'s'
   339   001097  00                 	db	0
   340   001098                     STR_11:
   341   001098  47                 	db	71	;'G'
   342   001099  41                 	db	65	;'A'
   343   00109A  4D                 	db	77	;'M'
   344   00109B  45                 	db	69	;'E'
   345   00109C  00                 	db	0
   346   00109D                     STR_6:
   347   00109D  47                 	db	71	;'G'
   348   00109E  50                 	db	80	;'P'
   349   00109F  49                 	db	73	;'I'
   350   0010A0  4F                 	db	79	;'O'
   351   0010A1  00                 	db	0
   352   0010A2                     STR_7:
   353   0010A2  55                 	db	85	;'U'
   354   0010A3  41                 	db	65	;'A'
   355   0010A4  52                 	db	82	;'R'
   356   0010A5  54                 	db	84	;'T'
   357   0010A6  00                 	db	0
   358   0010A7                     STR_5:
   359   0010A7  25                 	db	37
   360   0010A8  64                 	db	100	;'d'
   361   0010A9  20                 	db	32
   362   0010AA  0D                 	db	13
   363   0010AB  00                 	db	0
   364   0010AC                     STR_10:
   365   0010AC  44                 	db	68	;'D'
   366   0010AD  41                 	db	65	;'A'
   367   0010AE  43                 	db	67	;'C'
   368   0010AF  00                 	db	0
   369   0010B0                     STR_9:
   370   0010B0  41                 	db	65	;'A'
   371   0010B1  44                 	db	68	;'D'
   372   0010B2  43                 	db	67	;'C'
   373   0010B3  00                 	db	0
   374   0010B4                     STR_8:
   375   0010B4  50                 	db	80	;'P'
   376   0010B5  57                 	db	87	;'W'
   377   0010B6  4D                 	db	77	;'M'
   378   0010B7  00                 	db	0
   379   0010B8  00                 	db	0	; dummy byte at the end
   380   000000                     
   381                           ; #config settings
   382                           
   383                           	psect	cinit
   384   003DC0                     __pcinit:
   385                           	callstack 0
   386   003DC0                     start_initialization:
   387                           	callstack 0
   388   003DC0                     __initialization:
   389                           	callstack 0
   390                           
   391                           ; Initialize objects allocated to BANK0 (32 bytes)
   392                           ; load TBLPTR registers with __pidataBANK0
   393   003DC0  0E6E               	movlw	low __pidataBANK0
   394   003DC2  6EF6               	movwf	tblptrl,c
   395   003DC4  0E40               	movlw	high __pidataBANK0
   396   003DC6  6EF7               	movwf	tblptrh,c
   397   003DC8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   398   003DCA  6EF8               	movwf	tblptru,c
   399   003DCC  EE00  F0C6         	lfsr	0,__pdataBANK0
   400   003DD0  EE10 F020          	lfsr	1,32
   401   003DD4                     copy_data0:
   402   003DD4  0009               	tblrd		*+
   403   003DD6  CFF5 FFEE          	movff	tablat,postinc0
   404   003DDA  50E5               	movf	postdec1,w,c
   405   003DDC  50E1               	movf	fsr1l,w,c
   406   003DDE  E1FA               	bnz	copy_data0
   407                           
   408                           ; Clear objects allocated to BANK1 (32 bytes)
   409   003DE0  EE01  F000         	lfsr	0,__pbssBANK1
   410   003DE4  0E20               	movlw	32
   411   003DE6                     clear_0:
   412   003DE6  6AEE               	clrf	postinc0,c
   413   003DE8  06E8               	decf	wreg,f,c
   414   003DEA  E1FD               	bnz	clear_0
   415                           
   416                           ; Clear objects allocated to BANK0 (13 bytes)
   417   003DEC  EE00  F0E6         	lfsr	0,__pbssBANK0
   418   003DF0  0E0D               	movlw	13
   419   003DF2                     clear_1:
   420   003DF2  6AEE               	clrf	postinc0,c
   421   003DF4  06E8               	decf	wreg,f,c
   422   003DF6  E1FD               	bnz	clear_1
   423                           
   424                           ; Clear objects allocated to COMRAM (2 bytes)
   425   003DF8  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   426   003DFA  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   427   003DFC                     end_of_initialization:
   428                           	callstack 0
   429   003DFC                     __end_of__initialization:
   430                           	callstack 0
   431   003DFC  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   432   003DFE  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   433   003E00  0E00               	movlw	low (__Lmediumconst shr (0+16))
   434   003E02  6EF8               	movwf	tblptru,c
   435   003E04  0100               	movlb	0
   436   003E06  EF6E  F016         	goto	_main	;jump to C main() function
   437                           
   438                           	psect	bssCOMRAM
   439   00005B                     __pbssCOMRAM:
   440                           	callstack 0
   441   00005B                     _flags:
   442                           	callstack 0
   443   00005B                     	ds	1
   444   00005C                     _keepStateGPIO:
   445                           	callstack 0
   446   00005C                     	ds	1
   447                           
   448                           	psect	bssBANK0
   449   0000E6                     __pbssBANK0:
   450                           	callstack 0
   451   0000E6                     fabsf@F465:
   452                           	callstack 0
   453   0000E6                     	ds	4
   454   0000EA                     ___rem_pio2f@F526:
   455                           	callstack 0
   456   0000EA                     	ds	4
   457   0000EE                     _width:
   458                           	callstack 0
   459   0000EE                     	ds	2
   460   0000F0                     _prec:
   461                           	callstack 0
   462   0000F0                     	ds	2
   463   0000F2                     _GPIOIE:
   464                           	callstack 0
   465   0000F2                     	ds	1
   466                           
   467                           	psect	dataBANK0
   468   0000C6                     __pdataBANK0:
   469                           	callstack 0
   470   0000C6                     runGPIO@F6982:
   471                           	callstack 0
   472   0000C6                     	ds	12
   473   0000D2                     runGPIO@F6964:
   474                           	callstack 0
   475   0000D2                     	ds	12
   476   0000DE                     moveDisplay@F6952:
   477                           	callstack 0
   478   0000DE                     	ds	8
   479                           
   480                           	psect	bssBANK1
   481   000100                     __pbssBANK1:
   482                           	callstack 0
   483   000100                     _dbuf:
   484                           	callstack 0
   485   000100                     	ds	32
   486                           
   487                           	psect	cstackBANK0
   488   000060                     __pcstackBANK0:
   489                           	callstack 0
   490   000060                     ___fltol@sign1:
   491                           	callstack 0
   492   000060                     ___cosdf@r:
   493                           	callstack 0
   494   000060                     ___sindf@r:
   495                           	callstack 0
   496   000060                     moveDisplay@menuItem1:
   497                           	callstack 0
   498                           
   499                           ; 17 bytes @ 0x0
   500   000060                     	ds	1
   501   000061                     ___fltol@exp1:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x1
   505   000061                     	ds	3
   506   000064                     ___sindf@w:
   507                           	callstack 0
   508   000064                     ___cosdf$3214:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x4
   512   000064                     	ds	4
   513   000068                     ___cosdf$3215:
   514                           	callstack 0
   515   000068                     ___sindf$3218:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x8
   519   000068                     	ds	4
   520   00006C                     ___cosdf$3216:
   521                           	callstack 0
   522   00006C                     ___sindf$3219:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0xC
   526   00006C                     	ds	4
   527   000070                     ___cosdf@w:
   528                           	callstack 0
   529   000070                     ___sindf$3220:
   530                           	callstack 0
   531                           
   532                           ; 4 bytes @ 0x10
   533   000070                     	ds	1
   534   000071                     moveDisplay@menuItem2:
   535                           	callstack 0
   536                           
   537                           ; 17 bytes @ 0x11
   538   000071                     	ds	3
   539   000074                     ___cosdf@z:
   540                           	callstack 0
   541   000074                     ___sindf@s:
   542                           	callstack 0
   543                           
   544                           ; 4 bytes @ 0x14
   545   000074                     	ds	4
   546   000078                     ?___flneg:
   547                           	callstack 0
   548   000078                     ___flneg@f1:
   549                           	callstack 0
   550   000078                     ___sindf@z:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x18
   554   000078                     	ds	4
   555   00007C                     ?___rem_pio2f:
   556                           	callstack 0
   557   00007C                     ___rem_pio2f@x:
   558                           	callstack 0
   559                           
   560                           ; 4 bytes @ 0x1C
   561   00007C                     	ds	4
   562   000080                     ___rem_pio2f@y:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x20
   566   000080                     	ds	1
   567   000081                     ??___rem_pio2f:
   568                           
   569                           ; 1 bytes @ 0x21
   570   000081                     	ds	1
   571   000082                     moveDisplay@menuItems:
   572                           	callstack 0
   573                           
   574                           ; 8 bytes @ 0x22
   575   000082                     	ds	1
   576   000083                     ___rem_pio2f@ty:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x23
   580   000083                     	ds	4
   581   000087                     ___rem_pio2f$3217:
   582                           	callstack 0
   583                           
   584                           ; 4 bytes @ 0x27
   585   000087                     	ds	3
   586   00008A                     moveDisplay@menuI:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0x2A
   590   00008A                     	ds	1
   591   00008B                     ___rem_pio2f@sign:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x2B
   595   00008B                     	ds	1
   596   00008C                     ___rem_pio2f@ux:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0x2C
   600   00008C                     	ds	4
   601   000090                     ___rem_pio2f@fn:
   602                           	callstack 0
   603                           
   604                           ; 4 bytes @ 0x30
   605   000090                     	ds	4
   606   000094                     ___rem_pio2f@t:
   607                           	callstack 0
   608                           
   609                           ; 4 bytes @ 0x34
   610   000094                     	ds	4
   611   000098                     ___rem_pio2f@n:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x38
   615   000098                     	ds	4
   616   00009C                     ?_sinf:
   617                           	callstack 0
   618   00009C                     sinf@x:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0x3C
   622   00009C                     	ds	4
   623   0000A0                     _sinf$2947:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x40
   627   0000A0                     	ds	4
   628   0000A4                     _sinf$2948:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x44
   632   0000A4                     	ds	4
   633   0000A8                     sinf@n:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x48
   637   0000A8                     	ds	1
   638   0000A9                     sinf@sign:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x49
   642   0000A9                     	ds	1
   643   0000AA                     _sinf$3213:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x4A
   647   0000AA                     	ds	4
   648   0000AE                     sinf@y:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x4E
   652   0000AE                     	ds	4
   653   0000B2                     sinf@ux:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x52
   657   0000B2                     	ds	4
   658   0000B6                     ??_runDAC:
   659                           
   660                           ; 1 bytes @ 0x56
   661   0000B6                     	ds	1
   662   0000B7                     _runDAC$3210:
   663                           	callstack 0
   664                           
   665                           ; 4 bytes @ 0x57
   666   0000B7                     	ds	4
   667   0000BB                     _runDAC$3211:
   668                           	callstack 0
   669                           
   670                           ; 4 bytes @ 0x5B
   671   0000BB                     	ds	4
   672   0000BF                     runDAC@keepState:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x5F
   676   0000BF                     	ds	1
   677   0000C0                     runDAC@selectModeDAC:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x60
   681   0000C0                     	ds	1
   682   0000C1                     runDAC@DACindex:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0x61
   686   0000C1                     	ds	1
   687   0000C2                     ??_main:
   688                           
   689                           ; 1 bytes @ 0x62
   690   0000C2                     	ds	2
   691   0000C4                     main@setUpAgain:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x64
   695   0000C4                     	ds	1
   696   0000C5                     main@menuI:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x65
   700   0000C5                     	ds	1
   701                           
   702                           	psect	cstackCOMRAM
   703   000001                     __pcstackCOMRAM:
   704                           	callstack 0
   705   000001                     ??_ISR:
   706                           
   707                           ; 1 bytes @ 0x0
   708   000001                     	ds	2
   709   000003                     ?___wmul:
   710                           	callstack 0
   711   000003                     ?___awdiv:
   712                           	callstack 0
   713   000003                     ?___awmod:
   714                           	callstack 0
   715   000003                     ?_fabsf:
   716                           	callstack 0
   717   000003                     ?___xxtofl:
   718                           	callstack 0
   719   000003                     LCD_Send@data:
   720                           	callstack 0
   721   000003                     SPI_write@MSB:
   722                           	callstack 0
   723   000003                     putch@data:
   724                           	callstack 0
   725   000003                     LED1_Control@state:
   726                           	callstack 0
   727   000003                     LED2_Control@state:
   728                           	callstack 0
   729   000003                     LED3_Control@state:
   730                           	callstack 0
   731   000003                     LED4_Control@state:
   732                           	callstack 0
   733   000003                     LED5_Control@state:
   734                           	callstack 0
   735   000003                     LED6_Control@state:
   736                           	callstack 0
   737   000003                     ___wmul@multiplier:
   738                           	callstack 0
   739   000003                     ___awdiv@dividend:
   740                           	callstack 0
   741   000003                     ___awmod@dividend:
   742                           	callstack 0
   743   000003                     ___xxtofl@val:
   744                           	callstack 0
   745   000003                     fabsf@x:
   746                           	callstack 0
   747                           
   748                           ; 4 bytes @ 0x2
   749   000003                     	ds	1
   750   000004                     ??_LCD_Init:
   751   000004                     ??_runGPIO:
   752   000004                     SPI_write@LSB:
   753                           	callstack 0
   754   000004                     LCD_ShowString@textData:
   755                           	callstack 0
   756   000004                     fputc@c:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x3
   760   000004                     	ds	1
   761   000005                     SPI_write@data:
   762                           	callstack 0
   763   000005                     ___wmul@multiplicand:
   764                           	callstack 0
   765   000005                     ___awdiv@divisor:
   766                           	callstack 0
   767   000005                     ___awmod@divisor:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x4
   771   000005                     	ds	1
   772   000006                     ??_LCD_ShowString:
   773   000006                     fputc@fp:
   774                           	callstack 0
   775   000006                     runGPIO@states:
   776                           	callstack 0
   777                           
   778                           ; 12 bytes @ 0x5
   779   000006                     	ds	1
   780   000007                     ??___xxtofl:
   781   000007                     ___awdiv@counter:
   782                           	callstack 0
   783   000007                     ___awmod@counter:
   784                           	callstack 0
   785   000007                     ___wmul@product:
   786                           	callstack 0
   787   000007                     fabsf@u:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x6
   791   000007                     	ds	1
   792   000008                     ??_fputc:
   793   000008                     LCD_ShowString@lineNum:
   794                           	callstack 0
   795   000008                     ___awdiv@sign:
   796                           	callstack 0
   797   000008                     ___awmod@sign:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x7
   801   000008                     	ds	1
   802   000009                     ?_abs:
   803                           	callstack 0
   804   000009                     ?_read_prec_or_width:
   805                           	callstack 0
   806   000009                     LCD_ShowString@i:
   807                           	callstack 0
   808   000009                     read_prec_or_width@fmt:
   809                           	callstack 0
   810   000009                     ___awdiv@quotient:
   811                           	callstack 0
   812   000009                     abs@a:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x8
   816   000009                     	ds	1
   817   00000A                     read_prec_or_width@ap:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x9
   821   00000A                     	ds	1
   822   00000B                     ??_abs:
   823   00000B                     ___xxtofl@sign:
   824                           	callstack 0
   825   00000B                     read_prec_or_width@c:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0xA
   829   00000B                     	ds	1
   830   00000C                     ___xxtofl@exp:
   831                           	callstack 0
   832   00000C                     read_prec_or_width@n:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0xB
   836   00000C                     	ds	1
   837   00000D                     stoa@fp:
   838                           	callstack 0
   839   00000D                     fputs@s:
   840                           	callstack 0
   841   00000D                     ___xxtofl@arg:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0xC
   845   00000D                     	ds	2
   846   00000F                     stoa@s:
   847                           	callstack 0
   848   00000F                     fputs@fp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0xE
   852   00000F                     	ds	2
   853   000011                     ??_stoa:
   854   000011                     ?___flmul:
   855                           	callstack 0
   856   000011                     fputs@c:
   857                           	callstack 0
   858   000011                     ___flmul@b:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0x10
   862   000011                     	ds	1
   863   000012                     fputs@i:
   864                           	callstack 0
   865   000012                     runGPIO@LEDControl:
   866                           	callstack 0
   867                           
   868                           ; 12 bytes @ 0x11
   869   000012                     	ds	1
   870   000013                     stoa@p:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x12
   874   000013                     	ds	1
   875   000014                     pad@fp:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x13
   879   000014                     	ds	1
   880   000015                     stoa@w:
   881                           	callstack 0
   882   000015                     ___flmul@a:
   883                           	callstack 0
   884                           
   885                           ; 4 bytes @ 0x14
   886   000015                     	ds	1
   887   000016                     pad@buf:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x15
   891   000016                     	ds	1
   892   000017                     stoa@cp:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x16
   896   000017                     	ds	1
   897   000018                     pad@p:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x17
   901   000018                     	ds	1
   902   000019                     ??___flmul:
   903   000019                     stoa@l:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x18
   907   000019                     	ds	1
   908   00001A                     ??_pad:
   909                           
   910                           ; 1 bytes @ 0x19
   911   00001A                     	ds	1
   912   00001B                     pad@i:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x1A
   916   00001B                     	ds	2
   917   00001D                     ___flmul@sign:
   918                           	callstack 0
   919   00001D                     dtoa@fp:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x1C
   923   00001D                     	ds	1
   924   00001E                     runGPIO@GPIOreverse:
   925                           	callstack 0
   926   00001E                     ___flmul@grs:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x1D
   930   00001E                     	ds	1
   931   00001F                     runGPIO@numberOfStates:
   932                           	callstack 0
   933   00001F                     dtoa@d:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x1E
   937   00001F                     	ds	2
   938   000021                     runGPIO@GPIOi:
   939                           	callstack 0
   940   000021                     _dtoa$2824:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x20
   944   000021                     	ds	1
   945   000022                     ___flmul@aexp:
   946                           	callstack 0
   947   000022                     runGPIO@j:
   948                           	callstack 0
   949                           
   950                           ; 2 bytes @ 0x21
   951   000022                     	ds	1
   952   000023                     ___flmul@bexp:
   953                           	callstack 0
   954   000023                     dtoa@p:
   955                           	callstack 0
   956                           
   957                           ; 1 bytes @ 0x22
   958   000023                     	ds	1
   959   000024                     dtoa@w:
   960                           	callstack 0
   961   000024                     ___flmul@prod:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x23
   965   000024                     	ds	2
   966   000026                     dtoa@s:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x25
   970   000026                     	ds	1
   971   000027                     dtoa@i:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x26
   975   000027                     	ds	1
   976   000028                     ___flmul@temp:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x27
   980   000028                     	ds	1
   981   000029                     vfpfcnvrt@fp:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x28
   985   000029                     	ds	1
   986   00002A                     ?___fldiv:
   987                           	callstack 0
   988   00002A                     ___fldiv@b:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x29
   992   00002A                     	ds	1
   993   00002B                     vfpfcnvrt@fmt:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x2A
   997   00002B                     	ds	1
   998   00002C                     vfpfcnvrt@ap:
   999                           	callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x2B
  1002   00002C                     	ds	1
  1003   00002D                     ??_vfpfcnvrt:
  1004                           
  1005                           ; 1 bytes @ 0x2C
  1006   00002D                     	ds	1
  1007   00002E                     ___fldiv@a:
  1008                           	callstack 0
  1009   00002E                     vfpfcnvrt@convarg:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x2D
  1013   00002E                     	ds	4
  1014   000032                     ??___fldiv:
  1015   000032                     vfpfcnvrt@cp:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x31
  1019   000032                     	ds	1
  1020   000033                     vfpfcnvrt@done:
  1021                           	callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x32
  1024   000033                     	ds	1
  1025   000034                     ?_vfprintf:
  1026                           	callstack 0
  1027   000034                     vfprintf@fp:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x33
  1031   000034                     	ds	2
  1032   000036                     vfprintf@fmt:
  1033                           	callstack 0
  1034   000036                     ___fldiv@rem:
  1035                           	callstack 0
  1036                           
  1037                           ; 4 bytes @ 0x35
  1038   000036                     	ds	1
  1039   000037                     vfprintf@ap:
  1040                           	callstack 0
  1041                           
  1042                           ; 1 bytes @ 0x36
  1043   000037                     	ds	1
  1044   000038                     vfprintf@cfmt:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x37
  1048   000038                     	ds	1
  1049   000039                     ?_printf:
  1050                           	callstack 0
  1051   000039                     ?_sprintf:
  1052                           	callstack 0
  1053   000039                     sprintf@s:
  1054                           	callstack 0
  1055   000039                     printf@fmt:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x38
  1059   000039                     	ds	1
  1060   00003A                     ___fldiv@sign:
  1061                           	callstack 0
  1062   00003A                     sprintf@fmt:
  1063                           	callstack 0
  1064                           
  1065                           ; 1 bytes @ 0x39
  1066   00003A                     	ds	1
  1067   00003B                     ___fldiv@new_exp:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x3A
  1071   00003B                     	ds	1
  1072   00003C                     printf@ap:
  1073                           	callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x3B
  1076   00003C                     	ds	1
  1077   00003D                     ___fldiv@grs:
  1078                           	callstack 0
  1079                           
  1080                           ; 4 bytes @ 0x3C
  1081   00003D                     	ds	2
  1082   00003F                     sprintf@ap:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x3E
  1086   00003F                     	ds	1
  1087   000040                     sprintf@f:
  1088                           	callstack 0
  1089                           
  1090                           ; 12 bytes @ 0x3F
  1091   000040                     	ds	1
  1092   000041                     ___fldiv@bexp:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x40
  1096   000041                     	ds	1
  1097   000042                     ___fldiv@aexp:
  1098                           	callstack 0
  1099                           
  1100                           ; 1 bytes @ 0x41
  1101   000042                     	ds	1
  1102   000043                     ?___fladd:
  1103                           	callstack 0
  1104   000043                     ___fladd@b:
  1105                           	callstack 0
  1106                           
  1107                           ; 4 bytes @ 0x42
  1108   000043                     	ds	4
  1109   000047                     ___fladd@a:
  1110                           	callstack 0
  1111                           
  1112                           ; 4 bytes @ 0x46
  1113   000047                     	ds	4
  1114   00004B                     ??___fladd:
  1115                           
  1116                           ; 1 bytes @ 0x4A
  1117   00004B                     	ds	1
  1118   00004C                     moveDisplay@where:
  1119                           	callstack 0
  1120                           
  1121                           ; 1 bytes @ 0x4B
  1122   00004C                     	ds	1
  1123   00004D                     ??_moveDisplay:
  1124                           
  1125                           ; 1 bytes @ 0x4C
  1126   00004D                     	ds	2
  1127   00004F                     ___fladd@signs:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x4E
  1131   00004F                     	ds	1
  1132   000050                     ___fladd@aexp:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x4F
  1136   000050                     	ds	1
  1137   000051                     ___fladd@bexp:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x50
  1141   000051                     	ds	1
  1142   000052                     ___fladd@grs:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x51
  1146   000052                     	ds	1
  1147   000053                     ?___flsub:
  1148                           	callstack 0
  1149   000053                     ?___sindf:
  1150                           	callstack 0
  1151   000053                     ?___cosdf:
  1152                           	callstack 0
  1153   000053                     ?___fltol:
  1154                           	callstack 0
  1155   000053                     ___fltol@f1:
  1156                           	callstack 0
  1157   000053                     ___flsub@b:
  1158                           	callstack 0
  1159   000053                     ___cosdf@x:
  1160                           	callstack 0
  1161   000053                     ___sindf@x:
  1162                           	callstack 0
  1163                           
  1164                           ; 4 bytes @ 0x52
  1165   000053                     	ds	4
  1166   000057                     ??___fltol:
  1167   000057                     ___flsub@a:
  1168                           	callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x56
  1171   000057                     	ds	4
  1172   00005B                     
  1173                           ; 1 bytes @ 0x5A
  1174 ;;
  1175 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1176 ;;
  1177 ;; *************** function _main *****************
  1178 ;; Defined at:
  1179 ;;		line 10 in file "main.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;		None
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  menuI           1  101[BANK0 ] unsigned char 
  1184 ;;  setUpAgain      1  100[BANK0 ] unsigned char 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;Total ram usage:        4 bytes
  1199 ;; Hardware stack levels required when called: 10
  1200 ;; This function calls:
  1201 ;;		_LCD_Clear
  1202 ;;		_LCD_Init
  1203 ;;		_LCD_ShowString
  1204 ;;		_moveDisplay
  1205 ;;		_runDAC
  1206 ;;		_runGPIO
  1207 ;; This function is called by:
  1208 ;;		Startup code after reset
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text0
  1213   002CDC                     __ptext0:
  1214                           	callstack 0
  1215   002CDC                     _main:
  1216                           	callstack 21
  1217   002CDC                     
  1218                           ;main.c: 12:     TRISCbits.RC0 = 1;
  1219   002CDC  8094               	bsf	148,0,c	;volatile
  1220                           
  1221                           ;main.c: 13:     TRISAbits.RA4 = 1;
  1222   002CDE  8892               	bsf	146,4,c	;volatile
  1223                           
  1224                           ;main.c: 14:     TRISAbits.RA3 = 1;
  1225   002CE0  8692               	bsf	146,3,c	;volatile
  1226                           
  1227                           ;main.c: 15:     TRISAbits.RA2 = 1;
  1228   002CE2  8492               	bsf	146,2,c	;volatile
  1229                           
  1230                           ;main.c: 16:     ANSELAbits.ANSA3 = 0;
  1231   002CE4  010F               	movlb	15	; () banked
  1232   002CE6  9738               	bcf	56,3,b	;volatile
  1233                           
  1234                           ;main.c: 17:     ANSELAbits.ANSA2 = 0;
  1235   002CE8  9538               	bcf	56,2,b	;volatile
  1236                           
  1237                           ;main.c: 20:     TRISDbits.RD2 = 0;
  1238   002CEA  9495               	bcf	149,2,c	;volatile
  1239                           
  1240                           ;main.c: 21:     TRISDbits.RD3 = 0;
  1241   002CEC  9695               	bcf	149,3,c	;volatile
  1242                           
  1243                           ;main.c: 22:     TRISCbits.RC4 = 0;
  1244   002CEE  9894               	bcf	148,4,c	;volatile
  1245                           
  1246                           ;main.c: 23:     TRISDbits.RD4 = 0;
  1247   002CF0  9895               	bcf	149,4,c	;volatile
  1248                           
  1249                           ;main.c: 24:     TRISDbits.RD5 = 0;
  1250   002CF2  9A95               	bcf	149,5,c	;volatile
  1251                           
  1252                           ;main.c: 25:     TRISDbits.RD6 = 0;
  1253   002CF4  9C95               	bcf	149,6,c	;volatile
  1254                           
  1255                           ;main.c: 26:     LATDbits.LD2 = 1;
  1256   002CF6  848C               	bsf	140,2,c	;volatile
  1257                           
  1258                           ;main.c: 27:     LATDbits.LD3 = 1;
  1259   002CF8  868C               	bsf	140,3,c	;volatile
  1260                           
  1261                           ;main.c: 28:     LATCbits.LC4 = 1;
  1262   002CFA  888B               	bsf	139,4,c	;volatile
  1263                           
  1264                           ;main.c: 29:     LATDbits.LD4 = 1;
  1265   002CFC  888C               	bsf	140,4,c	;volatile
  1266                           
  1267                           ;main.c: 30:     LATDbits.LD5 = 1;
  1268   002CFE  8A8C               	bsf	140,5,c	;volatile
  1269                           
  1270                           ;main.c: 31:     LATDbits.LD6 = 1;
  1271   002D00  8C8C               	bsf	140,6,c	;volatile
  1272   002D02                     
  1273                           ; BSR set to: 15
  1274                           ;main.c: 34:     LCD_Init();
  1275   002D02  EC61  F01C         	call	_LCD_Init	;wreg free
  1276   002D06                     
  1277                           ;main.c: 35:     uint8_t menuI = 0;
  1278   002D06  0E00               	movlw	0
  1279   002D08  0100               	movlb	0	; () banked
  1280   002D0A  6FC5               	movwf	main@menuI& (0+255),b
  1281   002D0C                     
  1282                           ; BSR set to: 0
  1283                           ;main.c: 36:     uint8_t setUpAgain = 0;
  1284   002D0C  0E00               	movlw	0
  1285   002D0E  6FC4               	movwf	main@setUpAgain& (0+255),b
  1286   002D10                     
  1287                           ; BSR set to: 0
  1288                           ;main.c: 38:     LCD_ShowString((char)1, "Vytvoril:       ");
  1289   002D10  0E41               	movlw	low STR_1
  1290   002D12  6E04               	movwf	LCD_ShowString@textData^0,c
  1291   002D14  5004               	movf	LCD_ShowString@textData^0,w,c
  1292   002D16  A4D8               	btfss	status,2,c
  1293   002D18  0E10               	movlw	high __smallconst
  1294   002D1A  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1295   002D1C  0E01               	movlw	1
  1296   002D1E  EC8D  F01D         	call	_LCD_ShowString
  1297   002D22                     
  1298                           ;main.c: 39:     LCD_ShowString((char)2, "David Strasak   ");
  1299   002D22  0E52               	movlw	low STR_2
  1300   002D24  6E04               	movwf	LCD_ShowString@textData^0,c
  1301   002D26  5004               	movf	LCD_ShowString@textData^0,w,c
  1302   002D28  A4D8               	btfss	status,2,c
  1303   002D2A  0E10               	movlw	high __smallconst
  1304   002D2C  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1305   002D2E  0E02               	movlw	2
  1306   002D30  EC8D  F01D         	call	_LCD_ShowString
  1307   002D34                     
  1308                           ;main.c: 40:     _delay((unsigned long)((2000)*(32E6/4000.0)));
  1309   002D34  0E52               	movlw	82
  1310   002D36  0100               	movlb	0	; () banked
  1311   002D38  6FC3               	movwf	(??_main+1)& (0+255),b
  1312   002D3A  0E2B               	movlw	43
  1313   002D3C  6FC2               	movwf	??_main& (0+255),b
  1314   002D3E  0E00               	movlw	0
  1315   002D40                     u5237:
  1316   002D40  2EE8               	decfsz	wreg,f,c
  1317   002D42  D7FE               	bra	u5237
  1318   002D44  2FC2               	decfsz	??_main& (0+255),f,b
  1319   002D46  D7FC               	bra	u5237
  1320   002D48  2FC3               	decfsz	(??_main+1)& (0+255),f,b
  1321   002D4A  D7FA               	bra	u5237
  1322   002D4C  0000               	nop	
  1323   002D4E                     
  1324                           ;main.c: 43:     menuI = moveDisplay(menuI,0);
  1325   002D4E  0E00               	movlw	0
  1326   002D50  6E4C               	movwf	moveDisplay@where^0,c
  1327   002D52  0100               	movlb	0	; () banked
  1328   002D54  51C5               	movf	main@menuI& (0+255),w,b
  1329   002D56  ECEB  F01B         	call	_moveDisplay
  1330   002D5A  0100               	movlb	0	; () banked
  1331   002D5C  6FC5               	movwf	main@menuI& (0+255),b
  1332   002D5E                     l4437:
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;main.c: 46:         if(PORTCbits.RC0){
  1336   002D5E  A082               	btfss	130,0,c	;volatile
  1337   002D60  EFB4  F016         	goto	u5131
  1338   002D64  EFB6  F016         	goto	u5130
  1339   002D68                     u5131:
  1340   002D68  EFD8  F016         	goto	l4447
  1341   002D6C                     u5130:
  1342   002D6C                     
  1343                           ; BSR set to: 0
  1344                           ;main.c: 47:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1345   002D6C  0E03               	movlw	3
  1346   002D6E  0100               	movlb	0	; () banked
  1347   002D70  6FC3               	movwf	(??_main+1)& (0+255),b
  1348   002D72  0E08               	movlw	8
  1349   002D74  6FC2               	movwf	??_main& (0+255),b
  1350   002D76  0E77               	movlw	119
  1351   002D78                     u5247:
  1352   002D78  2EE8               	decfsz	wreg,f,c
  1353   002D7A  D7FE               	bra	u5247
  1354   002D7C  2FC2               	decfsz	??_main& (0+255),f,b
  1355   002D7E  D7FC               	bra	u5247
  1356   002D80  2FC3               	decfsz	(??_main+1)& (0+255),f,b
  1357   002D82  D7FA               	bra	u5247
  1358   002D84                     
  1359                           ;main.c: 48:             if(PORTCbits.RC0){
  1360   002D84  A082               	btfss	130,0,c	;volatile
  1361   002D86  EFC7  F016         	goto	u5141
  1362   002D8A  EFC9  F016         	goto	u5140
  1363   002D8E                     u5141:
  1364   002D8E  EFD8  F016         	goto	l4447
  1365   002D92                     u5140:
  1366   002D92                     l42:
  1367   002D92  B082               	btfsc	130,0,c	;volatile
  1368   002D94  EFCE  F016         	goto	u5151
  1369   002D98  EFD0  F016         	goto	u5150
  1370   002D9C                     u5151:
  1371   002D9C  EFC9  F016         	goto	l42
  1372   002DA0                     u5150:
  1373   002DA0                     
  1374                           ;main.c: 50:                 menuI = moveDisplay(menuI,2);
  1375   002DA0  0E02               	movlw	2
  1376   002DA2  6E4C               	movwf	moveDisplay@where^0,c
  1377   002DA4  0100               	movlb	0	; () banked
  1378   002DA6  51C5               	movf	main@menuI& (0+255),w,b
  1379   002DA8  ECEB  F01B         	call	_moveDisplay
  1380   002DAC  0100               	movlb	0	; () banked
  1381   002DAE  6FC5               	movwf	main@menuI& (0+255),b
  1382   002DB0                     l4447:
  1383                           
  1384                           ;main.c: 53:         if(PORTAbits.RA4){
  1385   002DB0  A880               	btfss	128,4,c	;volatile
  1386   002DB2  EFDD  F016         	goto	u5161
  1387   002DB6  EFDF  F016         	goto	u5160
  1388   002DBA                     u5161:
  1389   002DBA  EF01  F017         	goto	l4457
  1390   002DBE                     u5160:
  1391   002DBE                     
  1392                           ;main.c: 54:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1393   002DBE  0E03               	movlw	3
  1394   002DC0  0100               	movlb	0	; () banked
  1395   002DC2  6FC3               	movwf	(??_main+1)& (0+255),b
  1396   002DC4  0E08               	movlw	8
  1397   002DC6  6FC2               	movwf	??_main& (0+255),b
  1398   002DC8  0E77               	movlw	119
  1399   002DCA                     u5257:
  1400   002DCA  2EE8               	decfsz	wreg,f,c
  1401   002DCC  D7FE               	bra	u5257
  1402   002DCE  2FC2               	decfsz	??_main& (0+255),f,b
  1403   002DD0  D7FC               	bra	u5257
  1404   002DD2  2FC3               	decfsz	(??_main+1)& (0+255),f,b
  1405   002DD4  D7FA               	bra	u5257
  1406   002DD6                     
  1407                           ;main.c: 55:             if(PORTAbits.RA4){
  1408   002DD6  A880               	btfss	128,4,c	;volatile
  1409   002DD8  EFF0  F016         	goto	u5171
  1410   002DDC  EFF2  F016         	goto	u5170
  1411   002DE0                     u5171:
  1412   002DE0  EF01  F017         	goto	l4457
  1413   002DE4                     u5170:
  1414   002DE4                     l47:
  1415   002DE4  B880               	btfsc	128,4,c	;volatile
  1416   002DE6  EFF7  F016         	goto	u5181
  1417   002DEA  EFF9  F016         	goto	u5180
  1418   002DEE                     u5181:
  1419   002DEE  EFF2  F016         	goto	l47
  1420   002DF2                     u5180:
  1421   002DF2                     
  1422                           ;main.c: 57:                 menuI = moveDisplay(menuI,1);
  1423   002DF2  0E01               	movlw	1
  1424   002DF4  6E4C               	movwf	moveDisplay@where^0,c
  1425   002DF6  0100               	movlb	0	; () banked
  1426   002DF8  51C5               	movf	main@menuI& (0+255),w,b
  1427   002DFA  ECEB  F01B         	call	_moveDisplay
  1428   002DFE  0100               	movlb	0	; () banked
  1429   002E00  6FC5               	movwf	main@menuI& (0+255),b
  1430   002E02                     l4457:
  1431                           
  1432                           ;main.c: 60:         if(PORTAbits.RA3){
  1433   002E02  A680               	btfss	128,3,c	;volatile
  1434   002E04  EF06  F017         	goto	u5191
  1435   002E08  EF08  F017         	goto	u5190
  1436   002E0C                     u5191:
  1437   002E0C  EF67  F017         	goto	l50
  1438   002E10                     u5190:
  1439   002E10                     
  1440                           ;main.c: 61:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1441   002E10  0E03               	movlw	3
  1442   002E12  0100               	movlb	0	; () banked
  1443   002E14  6FC3               	movwf	(??_main+1)& (0+255),b
  1444   002E16  0E08               	movlw	8
  1445   002E18  6FC2               	movwf	??_main& (0+255),b
  1446   002E1A  0E77               	movlw	119
  1447   002E1C                     u5267:
  1448   002E1C  2EE8               	decfsz	wreg,f,c
  1449   002E1E  D7FE               	bra	u5267
  1450   002E20  2FC2               	decfsz	??_main& (0+255),f,b
  1451   002E22  D7FC               	bra	u5267
  1452   002E24  2FC3               	decfsz	(??_main+1)& (0+255),f,b
  1453   002E26  D7FA               	bra	u5267
  1454   002E28                     
  1455                           ;main.c: 62:             if(PORTAbits.RA3){
  1456   002E28  A680               	btfss	128,3,c	;volatile
  1457   002E2A  EF19  F017         	goto	u5201
  1458   002E2E  EF1B  F017         	goto	u5200
  1459   002E32                     u5201:
  1460   002E32  EF67  F017         	goto	l50
  1461   002E36                     u5200:
  1462   002E36                     l52:
  1463   002E36  B680               	btfsc	128,3,c	;volatile
  1464   002E38  EF20  F017         	goto	u5211
  1465   002E3C  EF22  F017         	goto	u5210
  1466   002E40                     u5211:
  1467   002E40  EF1B  F017         	goto	l52
  1468   002E44                     u5210:
  1469   002E44  EF43  F017         	goto	l4479
  1470   002E48                     l4465:
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;main.c: 66:                         LCD_Clear();
  1474   002E48  ECC2  F01F         	call	_LCD_Clear	;wreg free
  1475   002E4C                     
  1476                           ;main.c: 67:                         runGPIO();
  1477   002E4C  EC0E  F01A         	call	_runGPIO	;wreg free
  1478   002E50                     l4469:
  1479                           
  1480                           ;main.c: 68:                         setUpAgain = 1;
  1481   002E50  0E01               	movlw	1
  1482   002E52  0100               	movlb	0	; () banked
  1483   002E54  6FC4               	movwf	main@setUpAgain& (0+255),b
  1484                           
  1485                           ;main.c: 69:                         break;
  1486   002E56  EF67  F017         	goto	l50
  1487   002E5A                     l4471:
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;main.c: 77:                         LCD_ShowString((char)1, "RB0-A2, BR: 9600");
  1491   002E5A  0E63               	movlw	low STR_3
  1492   002E5C  6E04               	movwf	LCD_ShowString@textData^0,c
  1493   002E5E  5004               	movf	LCD_ShowString@textData^0,w,c
  1494   002E60  A4D8               	btfss	status,2,c
  1495   002E62  0E10               	movlw	high __smallconst
  1496   002E64  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1497   002E66  0E01               	movlw	1
  1498   002E68  EC8D  F01D         	call	_LCD_ShowString
  1499                           
  1500                           ;main.c: 78:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  1501   002E6C  0E74               	movlw	low STR_4
  1502   002E6E  6E04               	movwf	LCD_ShowString@textData^0,c
  1503   002E70  5004               	movf	LCD_ShowString@textData^0,w,c
  1504   002E72  A4D8               	btfss	status,2,c
  1505   002E74  0E10               	movlw	high __smallconst
  1506   002E76  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1507   002E78  0E02               	movlw	2
  1508   002E7A  EC8D  F01D         	call	_LCD_ShowString
  1509   002E7E                     
  1510                           ;main.c: 79:                         runDAC();
  1511   002E7E  EC31  F014         	call	_runDAC	;wreg free
  1512   002E82  EF28  F017         	goto	l4469
  1513   002E86                     l4479:
  1514   002E86  0100               	movlb	0	; () banked
  1515   002E88  51C5               	movf	main@menuI& (0+255),w,b
  1516                           
  1517                           ; Switch size 1, requested type "simple"
  1518                           ; Number of cases is 8, Range of values is 0 to 7
  1519                           ; switch strategies available:
  1520                           ; Name         Instructions Cycles
  1521                           ; simple_byte           25    13 (average)
  1522                           ;	Chosen strategy is simple_byte
  1523   002E8A  0A00               	xorlw	0	; case 0
  1524   002E8C  B4D8               	btfsc	status,2,c
  1525   002E8E  EF24  F017         	goto	l4465
  1526   002E92  0A01               	xorlw	1	; case 1
  1527   002E94  B4D8               	btfsc	status,2,c
  1528   002E96  EF67  F017         	goto	l50
  1529   002E9A  0A03               	xorlw	3	; case 2
  1530   002E9C  B4D8               	btfsc	status,2,c
  1531   002E9E  EF67  F017         	goto	l50
  1532   002EA2  0A01               	xorlw	1	; case 3
  1533   002EA4  B4D8               	btfsc	status,2,c
  1534   002EA6  EF67  F017         	goto	l50
  1535   002EAA  0A07               	xorlw	7	; case 4
  1536   002EAC  B4D8               	btfsc	status,2,c
  1537   002EAE  EF2D  F017         	goto	l4471
  1538   002EB2  0A01               	xorlw	1	; case 5
  1539   002EB4  B4D8               	btfsc	status,2,c
  1540   002EB6  EF67  F017         	goto	l50
  1541   002EBA  0A03               	xorlw	3	; case 6
  1542   002EBC  B4D8               	btfsc	status,2,c
  1543   002EBE  EF67  F017         	goto	l50
  1544   002EC2  0A01               	xorlw	1	; case 7
  1545   002EC4  B4D8               	btfsc	status,2,c
  1546   002EC6  EF67  F017         	goto	l50
  1547   002ECA  EF67  F017         	goto	l50
  1548   002ECE                     l50:
  1549                           
  1550                           ;main.c: 92:         if(PORTAbits.RA2){
  1551   002ECE  5080               	movf	128,w,c	;volatile
  1552   002ED0                     
  1553                           ;main.c: 96:         if(setUpAgain){
  1554   002ED0  0100               	movlb	0	; () banked
  1555   002ED2  51C4               	movf	main@setUpAgain& (0+255),w,b
  1556   002ED4  B4D8               	btfsc	status,2,c
  1557   002ED6  EF6F  F017         	goto	u5221
  1558   002EDA  EF71  F017         	goto	u5220
  1559   002EDE                     u5221:
  1560   002EDE  EFAF  F016         	goto	l4437
  1561   002EE2                     u5220:
  1562   002EE2                     
  1563                           ; BSR set to: 0
  1564                           ;main.c: 97:         menuI = moveDisplay(menuI,0);
  1565   002EE2  0E00               	movlw	0
  1566   002EE4  6E4C               	movwf	moveDisplay@where^0,c
  1567   002EE6  51C5               	movf	main@menuI& (0+255),w,b
  1568   002EE8  ECEB  F01B         	call	_moveDisplay
  1569   002EEC  0100               	movlb	0	; () banked
  1570   002EEE  6FC5               	movwf	main@menuI& (0+255),b
  1571   002EF0                     
  1572                           ; BSR set to: 0
  1573                           ;main.c: 98:         setUpAgain = 0;
  1574   002EF0  0E00               	movlw	0
  1575   002EF2  6FC4               	movwf	main@setUpAgain& (0+255),b
  1576   002EF4  EFAF  F016         	goto	l4437
  1577   002EF8  EF46  F000         	goto	start
  1578   002EFC                     __end_of_main:
  1579                           	callstack 0
  1580                           
  1581 ;; *************** function _runGPIO *****************
  1582 ;; Defined at:
  1583 ;;		line 19 in file "GPIO.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  j               2   33[COMRAM] int 
  1588 ;;  states         12    5[COMRAM] unsigned char [12]
  1589 ;;  LEDControl     12   17[COMRAM] PTR FTN(unsigned char ,)
  1590 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  1591 ;;		 -> LED2_Control(1), LED1_Control(1), 
  1592 ;;  numberOfStat    2   30[COMRAM] int 
  1593 ;;  GPIOi           1   32[COMRAM] unsigned char 
  1594 ;;  GPIOreverse     1   29[COMRAM] unsigned char 
  1595 ;;  GPIOindex       1    0        unsigned char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;      Locals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;Total ram usage:       32 bytes
  1610 ;; Hardware stack levels used: 1
  1611 ;; Hardware stack levels required when called: 2
  1612 ;; This function calls:
  1613 ;;		_LED1_Control
  1614 ;;		_LED2_Control
  1615 ;;		_LED3_Control
  1616 ;;		_LED4_Control
  1617 ;;		_LED5_Control
  1618 ;;		_LED6_Control
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text1
  1625   00341C                     __ptext1:
  1626                           	callstack 0
  1627   00341C                     _runGPIO:
  1628                           	callstack 28
  1629   00341C                     
  1630                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  1631   00341C  9495               	bcf	149,2,c	;volatile
  1632                           
  1633                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  1634   00341E  9695               	bcf	149,3,c	;volatile
  1635                           
  1636                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  1637   003420  9894               	bcf	148,4,c	;volatile
  1638                           
  1639                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  1640   003422  9895               	bcf	149,4,c	;volatile
  1641                           
  1642                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  1643   003424  9A95               	bcf	149,5,c	;volatile
  1644                           
  1645                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  1646   003426  9C95               	bcf	149,6,c	;volatile
  1647                           
  1648                           ;GPIO.c: 27:     LATDbits.LD2 = 1;
  1649   003428  848C               	bsf	140,2,c	;volatile
  1650                           
  1651                           ;GPIO.c: 28:     LATDbits.LD3 = 1;
  1652   00342A  868C               	bsf	140,3,c	;volatile
  1653                           
  1654                           ;GPIO.c: 29:     LATCbits.LC4 = 1;
  1655   00342C  888B               	bsf	139,4,c	;volatile
  1656                           
  1657                           ;GPIO.c: 30:     LATDbits.LD4 = 1;
  1658   00342E  888C               	bsf	140,4,c	;volatile
  1659                           
  1660                           ;GPIO.c: 31:     LATDbits.LD5 = 1;
  1661   003430  8A8C               	bsf	140,5,c	;volatile
  1662                           
  1663                           ;GPIO.c: 32:     LATDbits.LD6 = 1;
  1664   003432  8C8C               	bsf	140,6,c	;volatile
  1665                           
  1666                           ;GPIO.c: 35:     TRISAbits.RA2 = 1;
  1667   003434  8492               	bsf	146,2,c	;volatile
  1668                           
  1669                           ;GPIO.c: 36:     ANSELAbits.ANSA2 = 0;
  1670   003436  010F               	movlb	15	; () banked
  1671   003438  9538               	bcf	56,2,b	;volatile
  1672   00343A                     
  1673                           ; BSR set to: 15
  1674                           ;GPIO.c: 40:     T1CONbits.TMR1CS = 0b00;
  1675   00343A  0E3F               	movlw	-193
  1676   00343C  16CD               	andwf	205,f,c	;volatile
  1677                           
  1678                           ;GPIO.c: 41:     T1CONbits.T1CKPS = 0b11;
  1679   00343E  0E30               	movlw	48
  1680   003440  12CD               	iorwf	205,f,c	;volatile
  1681   003442                     
  1682                           ; BSR set to: 15
  1683                           ;GPIO.c: 42:     TMR1IE = 1;
  1684   003442  809D               	bsf	3997,0,c	;volatile
  1685   003444                     
  1686                           ; BSR set to: 15
  1687                           ;GPIO.c: 43:     PEIE = 1;
  1688   003444  8CF2               	bsf	4082,6,c	;volatile
  1689   003446                     
  1690                           ; BSR set to: 15
  1691                           ;GPIO.c: 44:     GIE = 1;
  1692   003446  8EF2               	bsf	4082,7,c	;volatile
  1693                           
  1694                           ;GPIO.c: 45:     GPIOIE = 1;
  1695   003448  0E01               	movlw	1
  1696   00344A  0100               	movlb	0	; () banked
  1697   00344C  6FF2               	movwf	_GPIOIE& (0+255),b
  1698   00344E                     
  1699                           ; BSR set to: 0
  1700                           ;GPIO.c: 46:     TMR1IF = 1;
  1701   00344E  809E               	bsf	3998,0,c	;volatile
  1702                           
  1703                           ;GPIO.c: 47:     TMR1 = 0xFFFF - (25000 - 1);
  1704   003450  0E9E               	movlw	158
  1705   003452  6ECF               	movwf	207,c	;volatile
  1706   003454  0E58               	movlw	88
  1707   003456  6ECE               	movwf	206,c	;volatile
  1708   003458                     
  1709                           ; BSR set to: 0
  1710                           ;GPIO.c: 48:     TMR1ON = 1;
  1711   003458  80CD               	bsf	4045,0,c	;volatile
  1712                           
  1713                           ;GPIO.c: 51:     keepStateGPIO = 1;
  1714   00345A  0E01               	movlw	1
  1715   00345C  6E5C               	movwf	_keepStateGPIO^0,c
  1716                           
  1717                           ;GPIO.c: 54:     uint8_t GPIOreverse;;GPIO.c: 55:     GPIOreverse = 0;
  1718   00345E  0E00               	movlw	0
  1719   003460  6E1E               	movwf	runGPIO@GPIOreverse^0,c
  1720   003462                     
  1721                           ; BSR set to: 0
  1722                           ;GPIO.c: 57:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  1723   003462  EE20  F0D2         	lfsr	2,runGPIO@F6964
  1724   003466  EE10  F012         	lfsr	1,runGPIO@LEDControl
  1725   00346A  0E0B               	movlw	11
  1726   00346C                     u4201:
  1727   00346C  CFDB FFE3          	movff	plusw2,plusw1
  1728   003470  06E8               	decf	wreg,f,c
  1729   003472  E2FC               	bc	u4201
  1730   003474                     
  1731                           ; BSR set to: 0
  1732                           ;GPIO.c: 58:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  1733   003474  EE20  F0C6         	lfsr	2,runGPIO@F6982
  1734   003478  EE10  F006         	lfsr	1,runGPIO@states
  1735   00347C  0E0B               	movlw	11
  1736   00347E                     u4211:
  1737   00347E  CFDB FFE3          	movff	plusw2,plusw1
  1738   003482  06E8               	decf	wreg,f,c
  1739   003484  E2FC               	bc	u4211
  1740                           
  1741                           ;GPIO.c: 59:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  1742   003486  0E00               	movlw	0
  1743   003488  6E20               	movwf	(runGPIO@numberOfStates+1)^0,c
  1744   00348A  0E0C               	movlw	12
  1745   00348C  6E1F               	movwf	runGPIO@numberOfStates^0,c
  1746                           
  1747                           ;GPIO.c: 60:     uint8_t GPIOi;;GPIO.c: 61:     GPIOi = 0;
  1748   00348E  0E00               	movlw	0
  1749   003490  6E21               	movwf	runGPIO@GPIOi^0,c
  1750                           
  1751                           ;GPIO.c: 63:     while(keepStateGPIO){
  1752   003492  EFAA  F01A         	goto	l313
  1753   003496                     l3781:
  1754                           
  1755                           ;GPIO.c: 65:         for(int j = 0; j < 6; j++) {
  1756   003496  0E00               	movlw	0
  1757   003498  6E23               	movwf	(runGPIO@j+1)^0,c
  1758   00349A  0E00               	movlw	0
  1759   00349C  6E22               	movwf	runGPIO@j^0,c
  1760   00349E                     l3787:
  1761                           
  1762                           ;GPIO.c: 66:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  1763   00349E  5022               	movf	runGPIO@j^0,w,c
  1764   0034A0  0D02               	mullw	2
  1765   0034A2  50F3               	movf	243,w,c
  1766   0034A4  0F12               	addlw	low runGPIO@LEDControl
  1767   0034A6  6ED9               	movwf	fsr2l,c
  1768   0034A8  6ADA               	clrf	fsr2h,c
  1769   0034AA  D802               	call	u4228
  1770   0034AC  EF7C  F01A         	goto	u4229
  1771   0034B0                     u4228:
  1772   0034B0  0005               	push	
  1773   0034B2  6EFA               	movwf	pclath,c
  1774   0034B4  50DE               	movf	postinc2,w,c
  1775   0034B6  6EFD               	movwf	tosl,c
  1776   0034B8  50DE               	movf	postinc2,w,c
  1777   0034BA  6EFE               	movwf	tosh,c
  1778   0034BC  50F8               	movf	tblptru,w,c
  1779   0034BE  6EFF               	movwf	tosu,c
  1780   0034C0  50FA               	movf	pclath,w,c
  1781   0034C2  5022               	movf	runGPIO@j^0,w,c
  1782   0034C4  0805               	sublw	5
  1783   0034C6  6E04               	movwf	??_runGPIO^0,c
  1784   0034C8  5021               	movf	runGPIO@GPIOi^0,w,c
  1785   0034CA  0F06               	addlw	low runGPIO@states
  1786   0034CC  6ED9               	movwf	fsr2l,c
  1787   0034CE  6ADA               	clrf	fsr2h,c
  1788   0034D0  50DF               	movf	indf2,w,c
  1789   0034D2  6E05               	movwf	(??_runGPIO+1)^0,c
  1790   0034D4  2A04               	incf	??_runGPIO^0,f,c
  1791   0034D6  EF6F  F01A         	goto	u4234
  1792   0034DA                     u4235:
  1793   0034DA  90D8               	bcf	status,0,c
  1794   0034DC  3205               	rrcf	(??_runGPIO+1)^0,f,c
  1795   0034DE                     u4234:
  1796   0034DE  2E04               	decfsz	??_runGPIO^0,f,c
  1797   0034E0  EF6D  F01A         	goto	u4235
  1798   0034E4  A005               	btfss	(??_runGPIO+1)^0,0,c
  1799   0034E6  EF77  F01A         	goto	u4241
  1800   0034EA  EF7A  F01A         	goto	u4240
  1801   0034EE                     u4241:
  1802   0034EE  0E01               	movlw	1
  1803   0034F0  EF7B  F01A         	goto	u4250
  1804   0034F4                     u4240:
  1805   0034F4  0E00               	movlw	0
  1806   0034F6                     u4250:
  1807   0034F6  0012               	return		;indir
  1808   0034F8                     u4229:
  1809   0034F8                     
  1810                           ;GPIO.c: 67:         }
  1811   0034F8  4A22               	infsnz	runGPIO@j^0,f,c
  1812   0034FA  2A23               	incf	(runGPIO@j+1)^0,f,c
  1813   0034FC  BE23               	btfsc	(runGPIO@j+1)^0,7,c
  1814   0034FE  EF8A  F01A         	goto	u4261
  1815   003502  5023               	movf	(runGPIO@j+1)^0,w,c
  1816   003504  E109               	bnz	u4260
  1817   003506  0E06               	movlw	6
  1818   003508  5C22               	subwf	runGPIO@j^0,w,c
  1819   00350A  A0D8               	btfss	status,0,c
  1820   00350C  EF8A  F01A         	goto	u4261
  1821   003510  EF8C  F01A         	goto	u4260
  1822   003514                     u4261:
  1823   003514  EF4F  F01A         	goto	l3787
  1824   003518                     u4260:
  1825   003518                     
  1826                           ;GPIO.c: 68:         _delay((unsigned long)((400)*(32E6/4000.0)));
  1827   003518  0E11               	movlw	17
  1828   00351A  6E05               	movwf	(??_runGPIO+1)^0,c
  1829   00351C  0E3C               	movlw	60
  1830   00351E  6E04               	movwf	??_runGPIO^0,c
  1831   003520  0ECB               	movlw	203
  1832   003522                     u5277:
  1833   003522  2EE8               	decfsz	wreg,f,c
  1834   003524  D7FE               	bra	u5277
  1835   003526  2E04               	decfsz	??_runGPIO^0,f,c
  1836   003528  D7FC               	bra	u5277
  1837   00352A  2E05               	decfsz	(??_runGPIO+1)^0,f,c
  1838   00352C  D7FA               	bra	u5277
  1839   00352E  0000               	nop	
  1840   003530                     
  1841                           ;GPIO.c: 69:         GPIOi++;
  1842   003530  2A21               	incf	runGPIO@GPIOi^0,f,c
  1843                           
  1844                           ;GPIO.c: 70:         if(GPIOi == numberOfStates){
  1845   003532  5021               	movf	runGPIO@GPIOi^0,w,c
  1846   003534  6E04               	movwf	??_runGPIO^0,c
  1847   003536  6A05               	clrf	(??_runGPIO+1)^0,c
  1848   003538  501F               	movf	runGPIO@numberOfStates^0,w,c
  1849   00353A  1804               	xorwf	??_runGPIO^0,w,c
  1850   00353C  E107               	bnz	u4271
  1851   00353E  5020               	movf	(runGPIO@numberOfStates+1)^0,w,c
  1852   003540  1805               	xorwf	(??_runGPIO+1)^0,w,c
  1853   003542  A4D8               	btfss	status,2,c
  1854   003544  EFA6  F01A         	goto	u4271
  1855   003548  EFA8  F01A         	goto	u4270
  1856   00354C                     u4271:
  1857   00354C  EFAA  F01A         	goto	l313
  1858   003550                     u4270:
  1859   003550                     
  1860                           ;GPIO.c: 71:             GPIOi = 0;
  1861   003550  0E00               	movlw	0
  1862   003552  6E21               	movwf	runGPIO@GPIOi^0,c
  1863   003554                     l313:
  1864                           
  1865                           ;GPIO.c: 63:     while(keepStateGPIO){
  1866   003554  505C               	movf	_keepStateGPIO^0,w,c
  1867   003556  A4D8               	btfss	status,2,c
  1868   003558  EFB0  F01A         	goto	u4281
  1869   00355C  EFB2  F01A         	goto	u4280
  1870   003560                     u4281:
  1871   003560  EF4B  F01A         	goto	l3781
  1872   003564                     u4280:
  1873   003564                     
  1874                           ;GPIO.c: 76:     LATDbits.LD2 = 1;
  1875   003564  848C               	bsf	140,2,c	;volatile
  1876                           
  1877                           ;GPIO.c: 77:     LATDbits.LD3 = 1;
  1878   003566  868C               	bsf	140,3,c	;volatile
  1879                           
  1880                           ;GPIO.c: 78:     LATCbits.LC4 = 1;
  1881   003568  888B               	bsf	139,4,c	;volatile
  1882                           
  1883                           ;GPIO.c: 79:     LATDbits.LD4 = 1;
  1884   00356A  888C               	bsf	140,4,c	;volatile
  1885                           
  1886                           ;GPIO.c: 80:     LATDbits.LD5 = 1;
  1887   00356C  8A8C               	bsf	140,5,c	;volatile
  1888                           
  1889                           ;GPIO.c: 81:     LATDbits.LD6 = 1;
  1890   00356E  8C8C               	bsf	140,6,c	;volatile
  1891                           
  1892                           ;GPIO.c: 82:     TMR1ON = 0;
  1893   003570  90CD               	bcf	4045,0,c	;volatile
  1894                           
  1895                           ;GPIO.c: 83:     TMR1IE = 0;
  1896   003572  909D               	bcf	3997,0,c	;volatile
  1897   003574                     
  1898                           ;GPIO.c: 84:     GPIOIE = 0;
  1899   003574  0E00               	movlw	0
  1900   003576  0100               	movlb	0	; () banked
  1901   003578  6FF2               	movwf	_GPIOIE& (0+255),b
  1902   00357A                     
  1903                           ; BSR set to: 0
  1904   00357A  0012               	return		;funcret
  1905   00357C                     __end_of_runGPIO:
  1906                           	callstack 0
  1907                           
  1908 ;; *************** function _LED5_Control *****************
  1909 ;; Defined at:
  1910 ;;		line 14 in file "GPIO.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  state           1    wreg     unsigned char 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  state           1    2[COMRAM] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;Total ram usage:        1 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 1
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_runGPIO
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text2
  1939   0040BE                     __ptext2:
  1940                           	callstack 0
  1941   0040BE                     _LED5_Control:
  1942                           	callstack 28
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;incstack = 0
  1946                           ;LED5_Control@state stored from wreg
  1947   0040BE  6E03               	movwf	LED5_Control@state^0,c
  1948   0040C0  B003               	btfsc	LED5_Control@state^0,0,c
  1949   0040C2  D002               	bra	u3905
  1950   0040C4  9A8C               	bcf	140,5,c	;volatile
  1951   0040C6  D001               	bra	u3906
  1952   0040C8                     u3905:
  1953   0040C8  8A8C               	bsf	140,5,c	;volatile
  1954   0040CA                     u3906:
  1955   0040CA  0012               	return		;funcret
  1956   0040CC                     __end_of_LED5_Control:
  1957                           	callstack 0
  1958                           
  1959 ;; *************** function _LED4_Control *****************
  1960 ;; Defined at:
  1961 ;;		line 13 in file "GPIO.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  state           1    wreg     unsigned char 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  state           1    2[COMRAM] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;Total ram usage:        1 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 1
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_runGPIO
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text3
  1990   0040CC                     __ptext3:
  1991                           	callstack 0
  1992   0040CC                     _LED4_Control:
  1993                           	callstack 28
  1994                           
  1995                           ;incstack = 0
  1996                           ;LED4_Control@state stored from wreg
  1997   0040CC  6E03               	movwf	LED4_Control@state^0,c
  1998   0040CE  B003               	btfsc	LED4_Control@state^0,0,c
  1999   0040D0  D002               	bra	u3895
  2000   0040D2  988C               	bcf	140,4,c	;volatile
  2001   0040D4  D001               	bra	u3896
  2002   0040D6                     u3895:
  2003   0040D6  888C               	bsf	140,4,c	;volatile
  2004   0040D8                     u3896:
  2005   0040D8  0012               	return		;funcret
  2006   0040DA                     __end_of_LED4_Control:
  2007                           	callstack 0
  2008                           
  2009 ;; *************** function _LED3_Control *****************
  2010 ;; Defined at:
  2011 ;;		line 12 in file "GPIO.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;  state           1    wreg     unsigned char 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  state           1    2[COMRAM] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;Total ram usage:        1 bytes
  2030 ;; Hardware stack levels used: 1
  2031 ;; Hardware stack levels required when called: 1
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_runGPIO
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text4
  2040   0040DA                     __ptext4:
  2041                           	callstack 0
  2042   0040DA                     _LED3_Control:
  2043                           	callstack 28
  2044                           
  2045                           ;incstack = 0
  2046                           ;LED3_Control@state stored from wreg
  2047   0040DA  6E03               	movwf	LED3_Control@state^0,c
  2048   0040DC  B003               	btfsc	LED3_Control@state^0,0,c
  2049   0040DE  D002               	bra	u3885
  2050   0040E0  988B               	bcf	139,4,c	;volatile
  2051   0040E2  D001               	bra	u3886
  2052   0040E4                     u3885:
  2053   0040E4  888B               	bsf	139,4,c	;volatile
  2054   0040E6                     u3886:
  2055   0040E6  0012               	return		;funcret
  2056   0040E8                     __end_of_LED3_Control:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _LED2_Control *****************
  2060 ;; Defined at:
  2061 ;;		line 11 in file "GPIO.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  state           1    wreg     unsigned char 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  state           1    2[COMRAM] unsigned char 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;Total ram usage:        1 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; Hardware stack levels required when called: 1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_runGPIO
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text5
  2090   0040E8                     __ptext5:
  2091                           	callstack 0
  2092   0040E8                     _LED2_Control:
  2093                           	callstack 28
  2094                           
  2095                           ;incstack = 0
  2096                           ;LED2_Control@state stored from wreg
  2097   0040E8  6E03               	movwf	LED2_Control@state^0,c
  2098   0040EA  B003               	btfsc	LED2_Control@state^0,0,c
  2099   0040EC  D002               	bra	u3875
  2100   0040EE  968C               	bcf	140,3,c	;volatile
  2101   0040F0  D001               	bra	u3876
  2102   0040F2                     u3875:
  2103   0040F2  868C               	bsf	140,3,c	;volatile
  2104   0040F4                     u3876:
  2105   0040F4  0012               	return		;funcret
  2106   0040F6                     __end_of_LED2_Control:
  2107                           	callstack 0
  2108                           
  2109 ;; *************** function _LED1_Control *****************
  2110 ;; Defined at:
  2111 ;;		line 10 in file "GPIO.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  state           1    wreg     unsigned char 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  state           1    2[COMRAM] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;Total ram usage:        1 bytes
  2130 ;; Hardware stack levels used: 1
  2131 ;; Hardware stack levels required when called: 1
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_runGPIO
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text6
  2140   0040F6                     __ptext6:
  2141                           	callstack 0
  2142   0040F6                     _LED1_Control:
  2143                           	callstack 28
  2144                           
  2145                           ;incstack = 0
  2146                           ;LED1_Control@state stored from wreg
  2147   0040F6  6E03               	movwf	LED1_Control@state^0,c
  2148   0040F8  B003               	btfsc	LED1_Control@state^0,0,c
  2149   0040FA  D002               	bra	u3865
  2150   0040FC  948C               	bcf	140,2,c	;volatile
  2151   0040FE  D001               	bra	u3866
  2152   004100                     u3865:
  2153   004100  848C               	bsf	140,2,c	;volatile
  2154   004102                     u3866:
  2155   004102  0012               	return		;funcret
  2156   004104                     __end_of_LED1_Control:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _LED6_Control *****************
  2160 ;; Defined at:
  2161 ;;		line 15 in file "GPIO.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  state           1    wreg     unsigned char 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  state           1    2[COMRAM] unsigned char 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      void 
  2168 ;; Registers used:
  2169 ;;		wreg
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;Total ram usage:        1 bytes
  2180 ;; Hardware stack levels used: 1
  2181 ;; Hardware stack levels required when called: 1
  2182 ;; This function calls:
  2183 ;;		Nothing
  2184 ;; This function is called by:
  2185 ;;		_runGPIO
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text7
  2190   004104                     __ptext7:
  2191                           	callstack 0
  2192   004104                     _LED6_Control:
  2193                           	callstack 28
  2194                           
  2195                           ;incstack = 0
  2196                           ;LED6_Control@state stored from wreg
  2197   004104  6E03               	movwf	LED6_Control@state^0,c
  2198   004106  B003               	btfsc	LED6_Control@state^0,0,c
  2199   004108  D002               	bra	u3915
  2200   00410A  9C8C               	bcf	140,6,c	;volatile
  2201   00410C  D001               	bra	u3916
  2202   00410E                     u3915:
  2203   00410E  8C8C               	bsf	140,6,c	;volatile
  2204   004110                     u3916:
  2205   004110  0012               	return		;funcret
  2206   004112                     __end_of_LED6_Control:
  2207                           	callstack 0
  2208                           
  2209 ;; *************** function _runDAC *****************
  2210 ;; Defined at:
  2211 ;;		line 10 in file "DAC.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  DACindex        1   97[BANK0 ] unsigned char 
  2216 ;;  selectModeDA    1   96[BANK0 ] unsigned char 
  2217 ;;  keepState       1   95[BANK0 ] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;Total ram usage:       12 bytes
  2232 ;; Hardware stack levels used: 1
  2233 ;; Hardware stack levels required when called: 9
  2234 ;; This function calls:
  2235 ;;		_SPI_write
  2236 ;;		___fladd
  2237 ;;		___fldiv
  2238 ;;		___flmul
  2239 ;;		___fltol
  2240 ;;		___xxtofl
  2241 ;;		_printf
  2242 ;;		_sinf
  2243 ;; This function is called by:
  2244 ;;		_main
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text8
  2249   002862                     __ptext8:
  2250                           	callstack 0
  2251   002862                     _runDAC:
  2252                           	callstack 21
  2253   002862                     
  2254                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  2255   002862  8094               	bsf	148,0,c	;volatile
  2256                           
  2257                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  2258   002864  8892               	bsf	146,4,c	;volatile
  2259                           
  2260                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  2261   002866  8692               	bsf	146,3,c	;volatile
  2262                           
  2263                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  2264   002868  8492               	bsf	146,2,c	;volatile
  2265                           
  2266                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  2267   00286A  010F               	movlb	15	; () banked
  2268   00286C  9738               	bcf	56,3,b	;volatile
  2269                           
  2270                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  2271   00286E  9538               	bcf	56,2,b	;volatile
  2272                           
  2273                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  2274   002870  9693               	bcf	147,3,c	;volatile
  2275                           
  2276                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  2277   002872  9694               	bcf	148,3,c	;volatile
  2278                           
  2279                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  2280   002874  9A94               	bcf	148,5,c	;volatile
  2281   002876                     
  2282                           ; BSR set to: 15
  2283                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  2284   002876  50C6               	movf	198,w,c	;volatile
  2285   002878  0BF0               	andlw	-16
  2286   00287A  0902               	iorlw	2
  2287   00287C  6EC6               	movwf	198,c	;volatile
  2288   00287E                     
  2289                           ; BSR set to: 15
  2290                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  2291   00287E  98C6               	bcf	198,4,c	;volatile
  2292   002880                     
  2293                           ; BSR set to: 15
  2294                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  2295   002880  8CC7               	bsf	199,6,c	;volatile
  2296   002882                     
  2297                           ; BSR set to: 15
  2298                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  2299   002882  8AC6               	bsf	198,5,c	;volatile
  2300   002884                     
  2301                           ; BSR set to: 15
  2302                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  2303   002884  8139               	bsf	57,0,b	;volatile
  2304   002886                     
  2305                           ; BSR set to: 15
  2306                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  2307   002886  9EC0               	bcf	192,7,c	;volatile
  2308                           
  2309                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  2310   002888  50C0               	movf	192,w,c	;volatile
  2311   00288A  0BF8               	andlw	-8
  2312   00288C  0906               	iorlw	6
  2313   00288E  6EC0               	movwf	192,c	;volatile
  2314                           
  2315                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  2316   002890  50C0               	movf	192,w,c	;volatile
  2317   002892  0BC7               	andlw	-57
  2318   002894  0930               	iorlw	48
  2319   002896  6EC0               	movwf	192,c	;volatile
  2320   002898                     
  2321                           ; BSR set to: 15
  2322                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  2323   002898  80C2               	bsf	194,0,c	;volatile
  2324                           
  2325                           ;DAC.c: 38:     SPBRG1 = 51;
  2326   00289A  0E33               	movlw	51
  2327   00289C  6EAF               	movwf	175,c	;volatile
  2328   00289E                     
  2329                           ; BSR set to: 15
  2330                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  2331   00289E  8EAB               	bsf	171,7,c	;volatile
  2332   0028A0                     
  2333                           ; BSR set to: 15
  2334                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  2335   0028A0  98AC               	bcf	172,4,c	;volatile
  2336   0028A2                     
  2337                           ; BSR set to: 15
  2338                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  2339   0028A2  8AAC               	bsf	172,5,c	;volatile
  2340   0028A4                     
  2341                           ; BSR set to: 15
  2342                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  2343   0028A4  88AB               	bsf	171,4,c	;volatile
  2344   0028A6                     
  2345                           ; BSR set to: 15
  2346                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  2347   0028A6  868A               	bsf	138,3,c	;volatile
  2348                           
  2349                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  2350   0028A8  50C2               	movf	194,w,c	;volatile
  2351   0028AA  0B83               	andlw	-125
  2352   0028AC  0930               	iorlw	48
  2353   0028AE  6EC2               	movwf	194,c	;volatile
  2354                           
  2355                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  2356   0028B0  0E01               	movlw	1
  2357   0028B2  0100               	movlb	0	; () banked
  2358   0028B4  6FC0               	movwf	runDAC@selectModeDAC& (0+255),b
  2359                           
  2360                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  2361   0028B6  0E01               	movlw	1
  2362   0028B8  6FBF               	movwf	runDAC@keepState& (0+255),b
  2363                           
  2364                           ;DAC.c: 52:     uint8_t DACindex = 0;
  2365   0028BA  0E00               	movlw	0
  2366   0028BC  6FC1               	movwf	runDAC@DACindex& (0+255),b
  2367                           
  2368                           ;DAC.c: 54:     while(keepState){
  2369   0028BE  EF4B  F015         	goto	l4419
  2370   0028C2                     l4377:
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;DAC.c: 57:                 if(DACindex<255/2){
  2374   0028C2  0E7F               	movlw	127
  2375   0028C4  61C1               	cpfslt	runDAC@DACindex& (0+255),b
  2376   0028C6  EF67  F014         	goto	u5051
  2377   0028CA  EF69  F014         	goto	u5050
  2378   0028CE                     u5051:
  2379   0028CE  EF6C  F014         	goto	l4381
  2380   0028D2                     u5050:
  2381   0028D2                     
  2382                           ; BSR set to: 0
  2383                           ;DAC.c: 58:                     SPI_write(DACindex);
  2384   0028D2  51C1               	movf	runDAC@DACindex& (0+255),w,b
  2385   0028D4  EC6B  F01F         	call	_SPI_write
  2386   0028D8                     l4381:
  2387                           
  2388                           ;DAC.c: 60:                 if(DACindex>=255/2){
  2389   0028D8  0E7E               	movlw	126
  2390   0028DA  0100               	movlb	0	; () banked
  2391   0028DC  65C1               	cpfsgt	runDAC@DACindex& (0+255),b
  2392   0028DE  EF73  F014         	goto	u5061
  2393   0028E2  EF75  F014         	goto	u5060
  2394   0028E6                     u5061:
  2395   0028E6  EF09  F015         	goto	l200
  2396   0028EA                     u5060:
  2397   0028EA                     
  2398                           ; BSR set to: 0
  2399                           ;DAC.c: 61:                     SPI_write(255-DACindex);
  2400   0028EA  51C1               	movf	runDAC@DACindex& (0+255),w,b
  2401   0028EC  0AFF               	xorlw	255
  2402   0028EE  EC6B  F01F         	call	_SPI_write
  2403   0028F2  EF09  F015         	goto	l200
  2404   0028F6                     l4385:
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  2408   0028F6  0E00               	movlw	0
  2409   0028F8  6E2E               	movwf	___fldiv@a^0,c
  2410   0028FA  0E00               	movlw	0
  2411   0028FC  6E2F               	movwf	(___fldiv@a+1)^0,c
  2412   0028FE  0E7F               	movlw	127
  2413   002900  6E30               	movwf	(___fldiv@a+2)^0,c
  2414   002902  0E43               	movlw	67
  2415   002904  6E31               	movwf	(___fldiv@a+3)^0,c
  2416   002906  0EC3               	movlw	195
  2417   002908  6E15               	movwf	___flmul@a^0,c
  2418   00290A  0EF5               	movlw	245
  2419   00290C  6E16               	movwf	(___flmul@a+1)^0,c
  2420   00290E  0EC8               	movlw	200
  2421   002910  6E17               	movwf	(___flmul@a+2)^0,c
  2422   002912  0E40               	movlw	64
  2423   002914  6E18               	movwf	(___flmul@a+3)^0,c
  2424   002916  51C1               	movf	runDAC@DACindex& (0+255),w,b
  2425   002918  6E03               	movwf	___xxtofl@val^0,c
  2426   00291A  6A04               	clrf	(___xxtofl@val+1)^0,c
  2427   00291C  6A05               	clrf	(___xxtofl@val+2)^0,c
  2428   00291E  6A06               	clrf	(___xxtofl@val+3)^0,c
  2429   002920  0E01               	movlw	1
  2430   002922  EC7D  F018         	call	___xxtofl
  2431   002926  C003  F011         	movff	?___xxtofl,___flmul@b
  2432   00292A  C004  F012         	movff	?___xxtofl+1,___flmul@b+1
  2433   00292E  C005  F013         	movff	?___xxtofl+2,___flmul@b+2
  2434   002932  C006  F014         	movff	?___xxtofl+3,___flmul@b+3
  2435   002936  EC42  F00D         	call	___flmul	;wreg free
  2436   00293A  C011  F02A         	movff	?___flmul,___fldiv@b
  2437   00293E  C012  F02B         	movff	?___flmul+1,___fldiv@b+1
  2438   002942  C013  F02C         	movff	?___flmul+2,___fldiv@b+2
  2439   002946  C014  F02D         	movff	?___flmul+3,___fldiv@b+3
  2440   00294A  EC38  F011         	call	___fldiv	;wreg free
  2441   00294E  C02A  F0B7         	movff	?___fldiv,_runDAC$3210
  2442   002952  C02B  F0B8         	movff	?___fldiv+1,_runDAC$3210+1
  2443   002956  C02C  F0B9         	movff	?___fldiv+2,_runDAC$3210+2
  2444   00295A  C02D  F0BA         	movff	?___fldiv+3,_runDAC$3210+3
  2445   00295E                     
  2446                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  2447   00295E  C0B7  F09C         	movff	_runDAC$3210,sinf@x
  2448   002962  C0B8  F09D         	movff	_runDAC$3210+1,sinf@x+1
  2449   002966  C0B9  F09E         	movff	_runDAC$3210+2,sinf@x+2
  2450   00296A  C0BA  F09F         	movff	_runDAC$3210+3,sinf@x+3
  2451   00296E  EC5D  F008         	call	_sinf	;wreg free
  2452   002972  C09C  F0BB         	movff	?_sinf,_runDAC$3211
  2453   002976  C09D  F0BC         	movff	?_sinf+1,_runDAC$3211+1
  2454   00297A  C09E  F0BD         	movff	?_sinf+2,_runDAC$3211+2
  2455   00297E  C09F  F0BE         	movff	?_sinf+3,_runDAC$3211+3
  2456   002982                     
  2457                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  2458   002982  0E00               	movlw	0
  2459   002984  6E47               	movwf	___fladd@a^0,c
  2460   002986  0E00               	movlw	0
  2461   002988  6E48               	movwf	(___fladd@a+1)^0,c
  2462   00298A  0EFE               	movlw	254
  2463   00298C  6E49               	movwf	(___fladd@a+2)^0,c
  2464   00298E  0E42               	movlw	66
  2465   002990  6E4A               	movwf	(___fladd@a+3)^0,c
  2466   002992  0E00               	movlw	0
  2467   002994  6E15               	movwf	___flmul@a^0,c
  2468   002996  0E00               	movlw	0
  2469   002998  6E16               	movwf	(___flmul@a+1)^0,c
  2470   00299A  0EFE               	movlw	254
  2471   00299C  6E17               	movwf	(___flmul@a+2)^0,c
  2472   00299E  0E42               	movlw	66
  2473   0029A0  6E18               	movwf	(___flmul@a+3)^0,c
  2474   0029A2  C0BB  F011         	movff	_runDAC$3211,___flmul@b
  2475   0029A6  C0BC  F012         	movff	_runDAC$3211+1,___flmul@b+1
  2476   0029AA  C0BD  F013         	movff	_runDAC$3211+2,___flmul@b+2
  2477   0029AE  C0BE  F014         	movff	_runDAC$3211+3,___flmul@b+3
  2478   0029B2  EC42  F00D         	call	___flmul	;wreg free
  2479   0029B6  C011  F043         	movff	?___flmul,___fladd@b
  2480   0029BA  C012  F044         	movff	?___flmul+1,___fladd@b+1
  2481   0029BE  C013  F045         	movff	?___flmul+2,___fladd@b+2
  2482   0029C2  C014  F046         	movff	?___flmul+3,___fladd@b+3
  2483   0029C6  ECE2  F00A         	call	___fladd	;wreg free
  2484   0029CA  C043  F053         	movff	?___fladd,___fltol@f1
  2485   0029CE  C044  F054         	movff	?___fladd+1,___fltol@f1+1
  2486   0029D2  C045  F055         	movff	?___fladd+2,___fltol@f1+2
  2487   0029D6  C046  F056         	movff	?___fladd+3,___fltol@f1+3
  2488   0029DA  EC67  F01B         	call	___fltol	;wreg free
  2489   0029DE  5053               	movf	?___fltol^0,w,c
  2490   0029E0  EC6B  F01F         	call	_SPI_write
  2491                           
  2492                           ;DAC.c: 66:                 break;
  2493   0029E4  EF09  F015         	goto	l200
  2494   0029E8                     l4391:
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  2498   0029E8  51C1               	movf	runDAC@DACindex& (0+255),w,b
  2499   0029EA  0AFF               	xorlw	255
  2500   0029EC  EC6B  F01F         	call	_SPI_write
  2501                           
  2502                           ;DAC.c: 69:                 break;
  2503   0029F0  EF09  F015         	goto	l200
  2504   0029F4                     l4395:
  2505                           
  2506                           ; BSR set to: 0
  2507   0029F4  51C0               	movf	runDAC@selectModeDAC& (0+255),w,b
  2508                           
  2509                           ; Switch size 1, requested type "simple"
  2510                           ; Number of cases is 3, Range of values is 1 to 3
  2511                           ; switch strategies available:
  2512                           ; Name         Instructions Cycles
  2513                           ; simple_byte           10     6 (average)
  2514                           ;	Chosen strategy is simple_byte
  2515   0029F6  0A01               	xorlw	1	; case 1
  2516   0029F8  B4D8               	btfsc	status,2,c
  2517   0029FA  EF61  F014         	goto	l4377
  2518   0029FE  0A03               	xorlw	3	; case 2
  2519   002A00  B4D8               	btfsc	status,2,c
  2520   002A02  EF7B  F014         	goto	l4385
  2521   002A06  0A01               	xorlw	1	; case 3
  2522   002A08  B4D8               	btfsc	status,2,c
  2523   002A0A  EFF4  F014         	goto	l4391
  2524   002A0E  EF09  F015         	goto	l200
  2525   002A12                     l200:
  2526                           
  2527                           ;DAC.c: 71:         GODONE = 1;
  2528   002A12  82C2               	bsf	4034,1,c	;volatile
  2529   002A14                     l203:
  2530   002A14  B2C2               	btfsc	4034,1,c	;volatile
  2531   002A16  EF0F  F015         	goto	u5071
  2532   002A1A  EF11  F015         	goto	u5070
  2533   002A1E                     u5071:
  2534   002A1E  EF0A  F015         	goto	l203
  2535   002A22                     u5070:
  2536   002A22                     
  2537                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  2538   002A22  0EA7               	movlw	low STR_5
  2539   002A24  6E39               	movwf	printf@fmt^0,c
  2540   002A26  CFC4 F03A          	movff	4036,?_printf+1	;volatile
  2541   002A2A  6A3B               	clrf	(?_printf+2)^0,c
  2542   002A2C  EC47  F020         	call	_printf	;wreg free
  2543   002A30                     
  2544                           ;DAC.c: 75:         if(PORTCbits.RC0){
  2545   002A30  A082               	btfss	130,0,c	;volatile
  2546   002A32  EF1D  F015         	goto	u5081
  2547   002A36  EF1F  F015         	goto	u5080
  2548   002A3A                     u5081:
  2549   002A3A  EF22  F015         	goto	l4403
  2550   002A3E                     u5080:
  2551   002A3E                     
  2552                           ;DAC.c: 76:             selectModeDAC = 1;
  2553   002A3E  0E01               	movlw	1
  2554   002A40  0100               	movlb	0	; () banked
  2555   002A42  6FC0               	movwf	runDAC@selectModeDAC& (0+255),b
  2556   002A44                     l4403:
  2557                           
  2558                           ;DAC.c: 78:         if(PORTAbits.RA4){
  2559   002A44  A880               	btfss	128,4,c	;volatile
  2560   002A46  EF27  F015         	goto	u5091
  2561   002A4A  EF29  F015         	goto	u5090
  2562   002A4E                     u5091:
  2563   002A4E  EF2C  F015         	goto	l4407
  2564   002A52                     u5090:
  2565   002A52                     
  2566                           ;DAC.c: 79:             selectModeDAC = 2;
  2567   002A52  0E02               	movlw	2
  2568   002A54  0100               	movlb	0	; () banked
  2569   002A56  6FC0               	movwf	runDAC@selectModeDAC& (0+255),b
  2570   002A58                     l4407:
  2571                           
  2572                           ;DAC.c: 81:         if(PORTAbits.RA3){
  2573   002A58  A680               	btfss	128,3,c	;volatile
  2574   002A5A  EF31  F015         	goto	u5101
  2575   002A5E  EF33  F015         	goto	u5100
  2576   002A62                     u5101:
  2577   002A62  EF36  F015         	goto	l4411
  2578   002A66                     u5100:
  2579   002A66                     
  2580                           ;DAC.c: 82:             selectModeDAC = 3;
  2581   002A66  0E03               	movlw	3
  2582   002A68  0100               	movlb	0	; () banked
  2583   002A6A  6FC0               	movwf	runDAC@selectModeDAC& (0+255),b
  2584   002A6C                     l4411:
  2585                           
  2586                           ;DAC.c: 84:         if(PORTAbits.RA2){
  2587   002A6C  A480               	btfss	128,2,c	;volatile
  2588   002A6E  EF3B  F015         	goto	u5111
  2589   002A72  EF3D  F015         	goto	u5110
  2590   002A76                     u5111:
  2591   002A76  EF40  F015         	goto	l4415
  2592   002A7A                     u5110:
  2593   002A7A                     
  2594                           ;DAC.c: 85:             keepState = 0;
  2595   002A7A  0E00               	movlw	0
  2596   002A7C  0100               	movlb	0	; () banked
  2597   002A7E  6FBF               	movwf	runDAC@keepState& (0+255),b
  2598   002A80                     l4415:
  2599                           
  2600                           ;DAC.c: 87:         DACindex++;
  2601   002A80  0100               	movlb	0	; () banked
  2602   002A82  2BC1               	incf	runDAC@DACindex& (0+255),f,b
  2603   002A84                     
  2604                           ; BSR set to: 0
  2605                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  2606   002A84  0E68               	movlw	104
  2607   002A86  0100               	movlb	0	; () banked
  2608   002A88  6FB6               	movwf	??_runDAC& (0+255),b
  2609   002A8A  0EE4               	movlw	228
  2610   002A8C                     u5287:
  2611   002A8C  2EE8               	decfsz	wreg,f,c
  2612   002A8E  D7FE               	bra	u5287
  2613   002A90  2FB6               	decfsz	??_runDAC& (0+255),f,b
  2614   002A92  D7FC               	bra	u5287
  2615   002A94  0000               	nop	
  2616   002A96                     l4419:
  2617                           
  2618                           ;DAC.c: 54:     while(keepState){
  2619   002A96  0100               	movlb	0	; () banked
  2620   002A98  51BF               	movf	runDAC@keepState& (0+255),w,b
  2621   002A9A  A4D8               	btfss	status,2,c
  2622   002A9C  EF52  F015         	goto	u5121
  2623   002AA0  EF54  F015         	goto	u5120
  2624   002AA4                     u5121:
  2625   002AA4  EFFA  F014         	goto	l4395
  2626   002AA8                     u5120:
  2627   002AA8                     
  2628                           ; BSR set to: 0
  2629   002AA8  0012               	return		;funcret
  2630   002AAA                     __end_of_runDAC:
  2631                           	callstack 0
  2632                           
  2633 ;; *************** function _sinf *****************
  2634 ;; Defined at:
  2635 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sinf.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  x               4   60[BANK0 ] float 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  ux              4   82[BANK0 ] struct .
  2640 ;;  y               4   78[BANK0 ] struct .
  2641 ;;  sign            1   73[BANK0 ] _Bool 
  2642 ;;  n               1   72[BANK0 ] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  4   60[BANK0 ] float 
  2645 ;; Registers used:
  2646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2652 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;Total ram usage:       26 bytes
  2657 ;; Hardware stack levels used: 1
  2658 ;; Hardware stack levels required when called: 4
  2659 ;; This function calls:
  2660 ;;		___cosdf
  2661 ;;		___fladd
  2662 ;;		___flneg
  2663 ;;		___rem_pio2f
  2664 ;;		___sindf
  2665 ;; This function is called by:
  2666 ;;		_runDAC
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text9
  2671   0010BA                     __ptext9:
  2672                           	callstack 0
  2673   0010BA                     _sinf:
  2674                           	callstack 25
  2675   0010BA  C09C  F0B2         	movff	sinf@x,sinf@ux
  2676   0010BE  C09D  F0B3         	movff	sinf@x+1,sinf@ux+1
  2677   0010C2  C09E  F0B4         	movff	sinf@x+2,sinf@ux+2
  2678   0010C6  C09F  F0B5         	movff	sinf@x+3,sinf@ux+3
  2679   0010CA  0100               	movlb	0	; () banked
  2680   0010CC  BFB5               	btfsc	(sinf@ux+3)& (0+255),7,b
  2681   0010CE  EF6B  F008         	goto	u4891
  2682   0010D2  EF6E  F008         	goto	u4890
  2683   0010D6                     u4891:
  2684   0010D6  0E01               	movlw	1
  2685   0010D8  EF6F  F008         	goto	u4900
  2686   0010DC                     u4890:
  2687   0010DC  0E00               	movlw	0
  2688   0010DE                     u4900:
  2689   0010DE  6FA9               	movwf	sinf@sign& (0+255),b
  2690   0010E0                     
  2691                           ; BSR set to: 0
  2692   0010E0  9FB5               	bcf	(sinf@ux+3)& (0+255),7,b
  2693   0010E2                     
  2694                           ; BSR set to: 0
  2695   0010E2  0EDB               	movlw	219
  2696   0010E4  5DB2               	subwf	sinf@ux& (0+255),w,b
  2697   0010E6  0E0F               	movlw	15
  2698   0010E8  59B3               	subwfb	(sinf@ux+1)& (0+255),w,b
  2699   0010EA  0E49               	movlw	73
  2700   0010EC  59B4               	subwfb	(sinf@ux+2)& (0+255),w,b
  2701   0010EE  0E3F               	movlw	63
  2702   0010F0  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  2703   0010F2  B0D8               	btfsc	status,0,c
  2704   0010F4  EF7E  F008         	goto	u4911
  2705   0010F8  EF80  F008         	goto	u4910
  2706   0010FC                     u4911:
  2707   0010FC  EFA9  F008         	goto	l4219
  2708   001100                     u4910:
  2709   001100                     
  2710                           ; BSR set to: 0
  2711   001100  0E80               	movlw	128
  2712   001102  5DB4               	subwf	(sinf@ux+2)& (0+255),w,b
  2713   001104  0E39               	movlw	57
  2714   001106  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  2715   001108  B0D8               	btfsc	status,0,c
  2716   00110A  EF89  F008         	goto	u4921
  2717   00110E  EF8B  F008         	goto	u4920
  2718   001112                     u4921:
  2719   001112  EF95  F008         	goto	l4215
  2720   001116                     u4920:
  2721   001116                     
  2722                           ; BSR set to: 0
  2723   001116  C09C  F09C         	movff	sinf@x,?_sinf
  2724   00111A  C09D  F09D         	movff	sinf@x+1,?_sinf+1
  2725   00111E  C09E  F09E         	movff	sinf@x+2,?_sinf+2
  2726   001122  C09F  F09F         	movff	sinf@x+3,?_sinf+3
  2727   001126  EFE1  F00A         	goto	l1169
  2728   00112A                     l4215:
  2729                           
  2730                           ; BSR set to: 0
  2731   00112A  C09C  F053         	movff	sinf@x,___sindf@x
  2732   00112E  C09D  F054         	movff	sinf@x+1,___sindf@x+1
  2733   001132  C09E  F055         	movff	sinf@x+2,___sindf@x+2
  2734   001136  C09F  F056         	movff	sinf@x+3,___sindf@x+3
  2735   00113A  EC55  F015         	call	___sindf	;wreg free
  2736   00113E  C053  F09C         	movff	?___sindf,?_sinf
  2737   001142  C054  F09D         	movff	?___sindf+1,?_sinf+1
  2738   001146  C055  F09E         	movff	?___sindf+2,?_sinf+2
  2739   00114A  C056  F09F         	movff	?___sindf+3,?_sinf+3
  2740   00114E  EFE1  F00A         	goto	l1169
  2741   001152                     l4219:
  2742                           
  2743                           ; BSR set to: 0
  2744   001152  0ED2               	movlw	210
  2745   001154  5DB2               	subwf	sinf@ux& (0+255),w,b
  2746   001156  0E53               	movlw	83
  2747   001158  59B3               	subwfb	(sinf@ux+1)& (0+255),w,b
  2748   00115A  0E7B               	movlw	123
  2749   00115C  59B4               	subwfb	(sinf@ux+2)& (0+255),w,b
  2750   00115E  0E40               	movlw	64
  2751   001160  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  2752   001162  B0D8               	btfsc	status,0,c
  2753   001164  EFB6  F008         	goto	u4931
  2754   001168  EFB8  F008         	goto	u4930
  2755   00116C                     u4931:
  2756   00116C  EF9B  F009         	goto	l4249
  2757   001170                     u4930:
  2758   001170                     
  2759                           ; BSR set to: 0
  2760   001170  0EE4               	movlw	228
  2761   001172  5DB2               	subwf	sinf@ux& (0+255),w,b
  2762   001174  0ECB               	movlw	203
  2763   001176  59B3               	subwfb	(sinf@ux+1)& (0+255),w,b
  2764   001178  0E16               	movlw	22
  2765   00117A  59B4               	subwfb	(sinf@ux+2)& (0+255),w,b
  2766   00117C  0E40               	movlw	64
  2767   00117E  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  2768   001180  B0D8               	btfsc	status,0,c
  2769   001182  EFC5  F008         	goto	u4941
  2770   001186  EFC7  F008         	goto	u4940
  2771   00118A                     u4941:
  2772   00118A  EF35  F009         	goto	l4239
  2773   00118E                     u4940:
  2774   00118E                     
  2775                           ; BSR set to: 0
  2776   00118E  51A9               	movf	sinf@sign& (0+255),w,b
  2777   001190  B4D8               	btfsc	status,2,c
  2778   001192  EFCD  F008         	goto	u4951
  2779   001196  EFCF  F008         	goto	u4950
  2780   00119A                     u4951:
  2781   00119A  EF07  F009         	goto	l4233
  2782   00119E                     u4950:
  2783   00119E                     
  2784                           ; BSR set to: 0
  2785   00119E  0EDB               	movlw	219
  2786   0011A0  6E47               	movwf	___fladd@a^0,c
  2787   0011A2  0E0F               	movlw	15
  2788   0011A4  6E48               	movwf	(___fladd@a+1)^0,c
  2789   0011A6  0EC9               	movlw	201
  2790   0011A8  6E49               	movwf	(___fladd@a+2)^0,c
  2791   0011AA  0E3F               	movlw	63
  2792   0011AC  6E4A               	movwf	(___fladd@a+3)^0,c
  2793   0011AE  C09C  F043         	movff	sinf@x,___fladd@b
  2794   0011B2  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  2795   0011B6  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  2796   0011BA  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  2797   0011BE  ECE2  F00A         	call	___fladd	;wreg free
  2798   0011C2  C043  F0AA         	movff	?___fladd,_sinf$3213
  2799   0011C6  C044  F0AB         	movff	?___fladd+1,_sinf$3213+1
  2800   0011CA  C045  F0AC         	movff	?___fladd+2,_sinf$3213+2
  2801   0011CE  C046  F0AD         	movff	?___fladd+3,_sinf$3213+3
  2802   0011D2                     l4227:
  2803   0011D2  C0AA  F053         	movff	_sinf$3213,___cosdf@x
  2804   0011D6  C0AB  F054         	movff	_sinf$3213+1,___cosdf@x+1
  2805   0011DA  C0AC  F055         	movff	_sinf$3213+2,___cosdf@x+2
  2806   0011DE  C0AD  F056         	movff	_sinf$3213+3,___cosdf@x+3
  2807   0011E2  EC7E  F017         	call	___cosdf	;wreg free
  2808   0011E6  C053  F078         	movff	?___cosdf,___flneg@f1
  2809   0011EA  C054  F079         	movff	?___cosdf+1,___flneg@f1+1
  2810   0011EE  C055  F07A         	movff	?___cosdf+2,___flneg@f1+2
  2811   0011F2  C056  F07B         	movff	?___cosdf+3,___flneg@f1+3
  2812   0011F6  EC8A  F01F         	call	___flneg	;wreg free
  2813   0011FA  C078  F09C         	movff	?___flneg,?_sinf
  2814   0011FE  C079  F09D         	movff	?___flneg+1,?_sinf+1
  2815   001202  C07A  F09E         	movff	?___flneg+2,?_sinf+2
  2816   001206  C07B  F09F         	movff	?___flneg+3,?_sinf+3
  2817   00120A  EFE1  F00A         	goto	l1169
  2818   00120E                     l4233:
  2819                           
  2820                           ; BSR set to: 0
  2821   00120E  C09C  F043         	movff	sinf@x,___fladd@b
  2822   001212  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  2823   001216  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  2824   00121A  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  2825   00121E  0EDB               	movlw	219
  2826   001220  6E47               	movwf	___fladd@a^0,c
  2827   001222  0E0F               	movlw	15
  2828   001224  6E48               	movwf	(___fladd@a+1)^0,c
  2829   001226  0EC9               	movlw	201
  2830   001228  6E49               	movwf	(___fladd@a+2)^0,c
  2831   00122A  0EBF               	movlw	191
  2832   00122C  6E4A               	movwf	(___fladd@a+3)^0,c
  2833   00122E  ECE2  F00A         	call	___fladd	;wreg free
  2834   001232  C043  F0AA         	movff	?___fladd,_sinf$3213
  2835   001236  C044  F0AB         	movff	?___fladd+1,_sinf$3213+1
  2836   00123A  C045  F0AC         	movff	?___fladd+2,_sinf$3213+2
  2837   00123E  C046  F0AD         	movff	?___fladd+3,_sinf$3213+3
  2838   001242                     l4235:
  2839   001242  C0AA  F053         	movff	_sinf$3213,___cosdf@x
  2840   001246  C0AB  F054         	movff	_sinf$3213+1,___cosdf@x+1
  2841   00124A  C0AC  F055         	movff	_sinf$3213+2,___cosdf@x+2
  2842   00124E  C0AD  F056         	movff	_sinf$3213+3,___cosdf@x+3
  2843   001252  EC7E  F017         	call	___cosdf	;wreg free
  2844   001256  C053  F09C         	movff	?___cosdf,?_sinf
  2845   00125A  C054  F09D         	movff	?___cosdf+1,?_sinf+1
  2846   00125E  C055  F09E         	movff	?___cosdf+2,?_sinf+2
  2847   001262  C056  F09F         	movff	?___cosdf+3,?_sinf+3
  2848   001266  EFE1  F00A         	goto	l1169
  2849   00126A                     l4239:
  2850                           
  2851                           ; BSR set to: 0
  2852   00126A  51A9               	movf	sinf@sign& (0+255),w,b
  2853   00126C  A4D8               	btfss	status,2,c
  2854   00126E  EF3B  F009         	goto	u4961
  2855   001272  EF3D  F009         	goto	u4960
  2856   001276                     u4961:
  2857   001276  EF63  F009         	goto	l4243
  2858   00127A                     u4960:
  2859   00127A                     
  2860                           ; BSR set to: 0
  2861   00127A  0EDB               	movlw	219
  2862   00127C  6E47               	movwf	___fladd@a^0,c
  2863   00127E  0E0F               	movlw	15
  2864   001280  6E48               	movwf	(___fladd@a+1)^0,c
  2865   001282  0E49               	movlw	73
  2866   001284  6E49               	movwf	(___fladd@a+2)^0,c
  2867   001286  0EC0               	movlw	192
  2868   001288  6E4A               	movwf	(___fladd@a+3)^0,c
  2869   00128A  C09C  F043         	movff	sinf@x,___fladd@b
  2870   00128E  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  2871   001292  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  2872   001296  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  2873   00129A  ECE2  F00A         	call	___fladd	;wreg free
  2874   00129E  C043  F078         	movff	?___fladd,___flneg@f1
  2875   0012A2  C044  F079         	movff	?___fladd+1,___flneg@f1+1
  2876   0012A6  C045  F07A         	movff	?___fladd+2,___flneg@f1+2
  2877   0012AA  C046  F07B         	movff	?___fladd+3,___flneg@f1+3
  2878   0012AE  EC8A  F01F         	call	___flneg	;wreg free
  2879   0012B2  C078  F0A0         	movff	?___flneg,_sinf$2947
  2880   0012B6  C079  F0A1         	movff	?___flneg+1,_sinf$2947+1
  2881   0012BA  C07A  F0A2         	movff	?___flneg+2,_sinf$2947+2
  2882   0012BE  C07B  F0A3         	movff	?___flneg+3,_sinf$2947+3
  2883   0012C2  EF87  F009         	goto	l4245
  2884   0012C6                     l4243:
  2885                           
  2886                           ; BSR set to: 0
  2887   0012C6  0EDB               	movlw	219
  2888   0012C8  6E47               	movwf	___fladd@a^0,c
  2889   0012CA  0E0F               	movlw	15
  2890   0012CC  6E48               	movwf	(___fladd@a+1)^0,c
  2891   0012CE  0E49               	movlw	73
  2892   0012D0  6E49               	movwf	(___fladd@a+2)^0,c
  2893   0012D2  0E40               	movlw	64
  2894   0012D4  6E4A               	movwf	(___fladd@a+3)^0,c
  2895   0012D6  C09C  F043         	movff	sinf@x,___fladd@b
  2896   0012DA  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  2897   0012DE  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  2898   0012E2  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  2899   0012E6  ECE2  F00A         	call	___fladd	;wreg free
  2900   0012EA  C043  F078         	movff	?___fladd,___flneg@f1
  2901   0012EE  C044  F079         	movff	?___fladd+1,___flneg@f1+1
  2902   0012F2  C045  F07A         	movff	?___fladd+2,___flneg@f1+2
  2903   0012F6  C046  F07B         	movff	?___fladd+3,___flneg@f1+3
  2904   0012FA  EC8A  F01F         	call	___flneg	;wreg free
  2905   0012FE  C078  F0A0         	movff	?___flneg,_sinf$2947
  2906   001302  C079  F0A1         	movff	?___flneg+1,_sinf$2947+1
  2907   001306  C07A  F0A2         	movff	?___flneg+2,_sinf$2947+2
  2908   00130A  C07B  F0A3         	movff	?___flneg+3,_sinf$2947+3
  2909   00130E                     l4245:
  2910   00130E  C0A0  F053         	movff	_sinf$2947,___sindf@x
  2911   001312  C0A1  F054         	movff	_sinf$2947+1,___sindf@x+1
  2912   001316  C0A2  F055         	movff	_sinf$2947+2,___sindf@x+2
  2913   00131A  C0A3  F056         	movff	_sinf$2947+3,___sindf@x+3
  2914   00131E  EC55  F015         	call	___sindf	;wreg free
  2915   001322  C053  F09C         	movff	?___sindf,?_sinf
  2916   001326  C054  F09D         	movff	?___sindf+1,?_sinf+1
  2917   00132A  C055  F09E         	movff	?___sindf+2,?_sinf+2
  2918   00132E  C056  F09F         	movff	?___sindf+3,?_sinf+3
  2919   001332  EFE1  F00A         	goto	l1169
  2920   001336                     l4249:
  2921                           
  2922                           ; BSR set to: 0
  2923   001336  0ED6               	movlw	214
  2924   001338  5DB2               	subwf	sinf@ux& (0+255),w,b
  2925   00133A  0E31               	movlw	49
  2926   00133C  59B3               	subwfb	(sinf@ux+1)& (0+255),w,b
  2927   00133E  0EE2               	movlw	226
  2928   001340  59B4               	subwfb	(sinf@ux+2)& (0+255),w,b
  2929   001342  0E40               	movlw	64
  2930   001344  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  2931   001346  B0D8               	btfsc	status,0,c
  2932   001348  EFA8  F009         	goto	u4971
  2933   00134C  EFAA  F009         	goto	u4970
  2934   001350                     u4971:
  2935   001350  EF4B  F00A         	goto	l4279
  2936   001354                     u4970:
  2937   001354                     
  2938                           ; BSR set to: 0
  2939   001354  0EE0               	movlw	224
  2940   001356  5DB2               	subwf	sinf@ux& (0+255),w,b
  2941   001358  0EED               	movlw	237
  2942   00135A  59B3               	subwfb	(sinf@ux+1)& (0+255),w,b
  2943   00135C  0EAF               	movlw	175
  2944   00135E  59B4               	subwfb	(sinf@ux+2)& (0+255),w,b
  2945   001360  0E40               	movlw	64
  2946   001362  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  2947   001364  B0D8               	btfsc	status,0,c
  2948   001366  EFB7  F009         	goto	u4981
  2949   00136A  EFB9  F009         	goto	u4980
  2950   00136E                     u4981:
  2951   00136E  EFF9  F009         	goto	l4269
  2952   001372                     u4980:
  2953   001372                     
  2954                           ; BSR set to: 0
  2955   001372  51A9               	movf	sinf@sign& (0+255),w,b
  2956   001374  B4D8               	btfsc	status,2,c
  2957   001376  EFBF  F009         	goto	u4991
  2958   00137A  EFC1  F009         	goto	u4990
  2959   00137E                     u4991:
  2960   00137E  EFDD  F009         	goto	l4263
  2961   001382                     u4990:
  2962   001382                     
  2963                           ; BSR set to: 0
  2964   001382  C09C  F043         	movff	sinf@x,___fladd@b
  2965   001386  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  2966   00138A  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  2967   00138E  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  2968   001392  0EE4               	movlw	228
  2969   001394  6E47               	movwf	___fladd@a^0,c
  2970   001396  0ECB               	movlw	203
  2971   001398  6E48               	movwf	(___fladd@a+1)^0,c
  2972   00139A  0E96               	movlw	150
  2973   00139C  6E49               	movwf	(___fladd@a+2)^0,c
  2974   00139E  0E40               	movlw	64
  2975   0013A0  6E4A               	movwf	(___fladd@a+3)^0,c
  2976   0013A2  ECE2  F00A         	call	___fladd	;wreg free
  2977   0013A6  C043  F0AA         	movff	?___fladd,_sinf$3213
  2978   0013AA  C044  F0AB         	movff	?___fladd+1,_sinf$3213+1
  2979   0013AE  C045  F0AC         	movff	?___fladd+2,_sinf$3213+2
  2980   0013B2  C046  F0AD         	movff	?___fladd+3,_sinf$3213+3
  2981   0013B6  EF21  F009         	goto	l4235
  2982   0013BA                     l4263:
  2983                           
  2984                           ; BSR set to: 0
  2985   0013BA  0EE4               	movlw	228
  2986   0013BC  6E47               	movwf	___fladd@a^0,c
  2987   0013BE  0ECB               	movlw	203
  2988   0013C0  6E48               	movwf	(___fladd@a+1)^0,c
  2989   0013C2  0E96               	movlw	150
  2990   0013C4  6E49               	movwf	(___fladd@a+2)^0,c
  2991   0013C6  0EC0               	movlw	192
  2992   0013C8  6E4A               	movwf	(___fladd@a+3)^0,c
  2993   0013CA  C09C  F043         	movff	sinf@x,___fladd@b
  2994   0013CE  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  2995   0013D2  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  2996   0013D6  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  2997   0013DA  ECE2  F00A         	call	___fladd	;wreg free
  2998   0013DE  C043  F0AA         	movff	?___fladd,_sinf$3213
  2999   0013E2  C044  F0AB         	movff	?___fladd+1,_sinf$3213+1
  3000   0013E6  C045  F0AC         	movff	?___fladd+2,_sinf$3213+2
  3001   0013EA  C046  F0AD         	movff	?___fladd+3,_sinf$3213+3
  3002   0013EE  EFE9  F008         	goto	l4227
  3003   0013F2                     l4269:
  3004                           
  3005                           ; BSR set to: 0
  3006   0013F2  51A9               	movf	sinf@sign& (0+255),w,b
  3007   0013F4  A4D8               	btfss	status,2,c
  3008   0013F6  EFFF  F009         	goto	u5001
  3009   0013FA  EF01  F00A         	goto	u5000
  3010   0013FE                     u5001:
  3011   0013FE  EF1D  F00A         	goto	l4273
  3012   001402                     u5000:
  3013   001402                     
  3014                           ; BSR set to: 0
  3015   001402  C09C  F043         	movff	sinf@x,___fladd@b
  3016   001406  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3017   00140A  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3018   00140E  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3019   001412  0EDB               	movlw	219
  3020   001414  6E47               	movwf	___fladd@a^0,c
  3021   001416  0E0F               	movlw	15
  3022   001418  6E48               	movwf	(___fladd@a+1)^0,c
  3023   00141A  0EC9               	movlw	201
  3024   00141C  6E49               	movwf	(___fladd@a+2)^0,c
  3025   00141E  0EC0               	movlw	192
  3026   001420  6E4A               	movwf	(___fladd@a+3)^0,c
  3027   001422  ECE2  F00A         	call	___fladd	;wreg free
  3028   001426  C043  F0A4         	movff	?___fladd,_sinf$2948
  3029   00142A  C044  F0A5         	movff	?___fladd+1,_sinf$2948+1
  3030   00142E  C045  F0A6         	movff	?___fladd+2,_sinf$2948+2
  3031   001432  C046  F0A7         	movff	?___fladd+3,_sinf$2948+3
  3032   001436  EF37  F00A         	goto	l4275
  3033   00143A                     l4273:
  3034                           
  3035                           ; BSR set to: 0
  3036   00143A  C09C  F043         	movff	sinf@x,___fladd@b
  3037   00143E  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3038   001442  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3039   001446  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3040   00144A  0EDB               	movlw	219
  3041   00144C  6E47               	movwf	___fladd@a^0,c
  3042   00144E  0E0F               	movlw	15
  3043   001450  6E48               	movwf	(___fladd@a+1)^0,c
  3044   001452  0EC9               	movlw	201
  3045   001454  6E49               	movwf	(___fladd@a+2)^0,c
  3046   001456  0E40               	movlw	64
  3047   001458  6E4A               	movwf	(___fladd@a+3)^0,c
  3048   00145A  ECE2  F00A         	call	___fladd	;wreg free
  3049   00145E  C043  F0A4         	movff	?___fladd,_sinf$2948
  3050   001462  C044  F0A5         	movff	?___fladd+1,_sinf$2948+1
  3051   001466  C045  F0A6         	movff	?___fladd+2,_sinf$2948+2
  3052   00146A  C046  F0A7         	movff	?___fladd+3,_sinf$2948+3
  3053   00146E                     l4275:
  3054   00146E  C0A4  F053         	movff	_sinf$2948,___sindf@x
  3055   001472  C0A5  F054         	movff	_sinf$2948+1,___sindf@x+1
  3056   001476  C0A6  F055         	movff	_sinf$2948+2,___sindf@x+2
  3057   00147A  C0A7  F056         	movff	_sinf$2948+3,___sindf@x+3
  3058   00147E  EC55  F015         	call	___sindf	;wreg free
  3059   001482  C053  F09C         	movff	?___sindf,?_sinf
  3060   001486  C054  F09D         	movff	?___sindf+1,?_sinf+1
  3061   00148A  C055  F09E         	movff	?___sindf+2,?_sinf+2
  3062   00148E  C056  F09F         	movff	?___sindf+3,?_sinf+3
  3063   001492  EFE1  F00A         	goto	l1169
  3064   001496                     l4279:
  3065                           
  3066                           ; BSR set to: 0
  3067   001496  0E80               	movlw	128
  3068   001498  5DB4               	subwf	(sinf@ux+2)& (0+255),w,b
  3069   00149A  0E7F               	movlw	127
  3070   00149C  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  3071   00149E  A0D8               	btfss	status,0,c
  3072   0014A0  EF54  F00A         	goto	u5011
  3073   0014A4  EF56  F00A         	goto	u5010
  3074   0014A8                     u5011:
  3075   0014A8  EF68  F00A         	goto	l4287
  3076   0014AC                     u5010:
  3077   0014AC                     
  3078                           ; BSR set to: 0
  3079   0014AC  0EFF               	movlw	255
  3080   0014AE  13B2               	iorwf	sinf@ux& (0+255),f,b
  3081   0014B0  0EFF               	movlw	255
  3082   0014B2  13B3               	iorwf	(sinf@ux+1)& (0+255),f,b
  3083   0014B4  0EFF               	movlw	255
  3084   0014B6  13B4               	iorwf	(sinf@ux+2)& (0+255),f,b
  3085   0014B8  0E00               	movlw	0
  3086   0014BA  13B5               	iorwf	(sinf@ux+3)& (0+255),f,b
  3087   0014BC                     
  3088                           ; BSR set to: 0
  3089   0014BC  C0B2  F09C         	movff	sinf@ux,?_sinf
  3090   0014C0  C0B3  F09D         	movff	sinf@ux+1,?_sinf+1
  3091   0014C4  C0B4  F09E         	movff	sinf@ux+2,?_sinf+2
  3092   0014C8  C0B5  F09F         	movff	sinf@ux+3,?_sinf+3
  3093   0014CC  EFE1  F00A         	goto	l1169
  3094   0014D0                     l4287:
  3095                           
  3096                           ; BSR set to: 0
  3097   0014D0  C09C  F07C         	movff	sinf@x,___rem_pio2f@x
  3098   0014D4  C09D  F07D         	movff	sinf@x+1,___rem_pio2f@x+1
  3099   0014D8  C09E  F07E         	movff	sinf@x+2,___rem_pio2f@x+2
  3100   0014DC  C09F  F07F         	movff	sinf@x+3,___rem_pio2f@x+3
  3101   0014E0  0EAE               	movlw	low sinf@y
  3102   0014E2  6F80               	movwf	___rem_pio2f@y& (0+255),b
  3103   0014E4  EC57  F00F         	call	___rem_pio2f	;wreg free
  3104   0014E8  0100               	movlb	0	; () banked
  3105   0014EA  517C               	movf	?___rem_pio2f& (0+255),w,b
  3106   0014EC  0B03               	andlw	3
  3107   0014EE  6FA8               	movwf	sinf@n& (0+255),b
  3108   0014F0  EFD2  F00A         	goto	l4305
  3109   0014F4                     l4289:
  3110                           
  3111                           ; BSR set to: 0
  3112   0014F4  C0AE  F078         	movff	sinf@y,___flneg@f1
  3113   0014F8  C0AF  F079         	movff	sinf@y+1,___flneg@f1+1
  3114   0014FC  C0B0  F07A         	movff	sinf@y+2,___flneg@f1+2
  3115   001500  C0B1  F07B         	movff	sinf@y+3,___flneg@f1+3
  3116   001504  EC8A  F01F         	call	___flneg	;wreg free
  3117   001508  C078  F0AE         	movff	?___flneg,sinf@y
  3118   00150C  C079  F0AF         	movff	?___flneg+1,sinf@y+1
  3119   001510  C07A  F0B0         	movff	?___flneg+2,sinf@y+2
  3120   001514  C07B  F0B1         	movff	?___flneg+3,sinf@y+3
  3121   001518                     l4291:
  3122   001518  C0AE  F053         	movff	sinf@y,___sindf@x
  3123   00151C  C0AF  F054         	movff	sinf@y+1,___sindf@x+1
  3124   001520  C0B0  F055         	movff	sinf@y+2,___sindf@x+2
  3125   001524  C0B1  F056         	movff	sinf@y+3,___sindf@x+3
  3126   001528  EC55  F015         	call	___sindf	;wreg free
  3127   00152C  C053  F09C         	movff	?___sindf,?_sinf
  3128   001530  C054  F09D         	movff	?___sindf+1,?_sinf+1
  3129   001534  C055  F09E         	movff	?___sindf+2,?_sinf+2
  3130   001538  C056  F09F         	movff	?___sindf+3,?_sinf+3
  3131   00153C  EFE1  F00A         	goto	l1169
  3132   001540                     l4295:
  3133                           
  3134                           ; BSR set to: 0
  3135   001540  C0AE  F053         	movff	sinf@y,___cosdf@x
  3136   001544  C0AF  F054         	movff	sinf@y+1,___cosdf@x+1
  3137   001548  C0B0  F055         	movff	sinf@y+2,___cosdf@x+2
  3138   00154C  C0B1  F056         	movff	sinf@y+3,___cosdf@x+3
  3139   001550  EC7E  F017         	call	___cosdf	;wreg free
  3140   001554  C053  F09C         	movff	?___cosdf,?_sinf
  3141   001558  C054  F09D         	movff	?___cosdf+1,?_sinf+1
  3142   00155C  C055  F09E         	movff	?___cosdf+2,?_sinf+2
  3143   001560  C056  F09F         	movff	?___cosdf+3,?_sinf+3
  3144   001564  EFE1  F00A         	goto	l1169
  3145   001568                     l4299:
  3146                           
  3147                           ; BSR set to: 0
  3148   001568  C0AE  F053         	movff	sinf@y,___cosdf@x
  3149   00156C  C0AF  F054         	movff	sinf@y+1,___cosdf@x+1
  3150   001570  C0B0  F055         	movff	sinf@y+2,___cosdf@x+2
  3151   001574  C0B1  F056         	movff	sinf@y+3,___cosdf@x+3
  3152   001578  EC7E  F017         	call	___cosdf	;wreg free
  3153   00157C  C053  F078         	movff	?___cosdf,___flneg@f1
  3154   001580  C054  F079         	movff	?___cosdf+1,___flneg@f1+1
  3155   001584  C055  F07A         	movff	?___cosdf+2,___flneg@f1+2
  3156   001588  C056  F07B         	movff	?___cosdf+3,___flneg@f1+3
  3157   00158C  EC8A  F01F         	call	___flneg	;wreg free
  3158   001590  C078  F09C         	movff	?___flneg,?_sinf
  3159   001594  C079  F09D         	movff	?___flneg+1,?_sinf+1
  3160   001598  C07A  F09E         	movff	?___flneg+2,?_sinf+2
  3161   00159C  C07B  F09F         	movff	?___flneg+3,?_sinf+3
  3162   0015A0  EFE1  F00A         	goto	l1169
  3163   0015A4                     l4305:
  3164                           
  3165                           ; BSR set to: 0
  3166   0015A4  51A8               	movf	sinf@n& (0+255),w,b
  3167                           
  3168                           ; Switch size 1, requested type "simple"
  3169                           ; Number of cases is 3, Range of values is 0 to 2
  3170                           ; switch strategies available:
  3171                           ; Name         Instructions Cycles
  3172                           ; simple_byte           10     6 (average)
  3173                           ;	Chosen strategy is simple_byte
  3174   0015A6  0A00               	xorlw	0	; case 0
  3175   0015A8  B4D8               	btfsc	status,2,c
  3176   0015AA  EF8C  F00A         	goto	l4291
  3177   0015AE  0A01               	xorlw	1	; case 1
  3178   0015B0  B4D8               	btfsc	status,2,c
  3179   0015B2  EFA0  F00A         	goto	l4295
  3180   0015B6  0A03               	xorlw	3	; case 2
  3181   0015B8  B4D8               	btfsc	status,2,c
  3182   0015BA  EF7A  F00A         	goto	l4289
  3183   0015BE  EFB4  F00A         	goto	l4299
  3184   0015C2                     l1169:
  3185   0015C2  0012               	return		;funcret
  3186   0015C4                     __end_of_sinf:
  3187                           	callstack 0
  3188                           
  3189 ;; *************** function ___sindf *****************
  3190 ;; Defined at:
  3191 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__sindf.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  x               4   82[COMRAM] float 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  z               4   24[BANK0 ] float 
  3196 ;;  s               4   20[BANK0 ] float 
  3197 ;;  w               4    4[BANK0 ] float 
  3198 ;;  r               4    0[BANK0 ] float 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  4   82[COMRAM] float 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Totals:         4      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;Total ram usage:       32 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; Hardware stack levels required when called: 2
  3215 ;; This function calls:
  3216 ;;		___fladd
  3217 ;;		___flmul
  3218 ;; This function is called by:
  3219 ;;		_sinf
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text10
  3224   002AAA                     __ptext10:
  3225                           	callstack 0
  3226   002AAA                     ___sindf:
  3227                           	callstack 26
  3228   002AAA  C053  F011         	movff	___sindf@x,___flmul@b
  3229   002AAE  C054  F012         	movff	___sindf@x+1,___flmul@b+1
  3230   002AB2  C055  F013         	movff	___sindf@x+2,___flmul@b+2
  3231   002AB6  C056  F014         	movff	___sindf@x+3,___flmul@b+3
  3232   002ABA  C053  F015         	movff	___sindf@x,___flmul@a
  3233   002ABE  C054  F016         	movff	___sindf@x+1,___flmul@a+1
  3234   002AC2  C055  F017         	movff	___sindf@x+2,___flmul@a+2
  3235   002AC6  C056  F018         	movff	___sindf@x+3,___flmul@a+3
  3236   002ACA  EC42  F00D         	call	___flmul	;wreg free
  3237   002ACE  C011  F078         	movff	?___flmul,___sindf@z
  3238   002AD2  C012  F079         	movff	?___flmul+1,___sindf@z+1
  3239   002AD6  C013  F07A         	movff	?___flmul+2,___sindf@z+2
  3240   002ADA  C014  F07B         	movff	?___flmul+3,___sindf@z+3
  3241   002ADE  C078  F011         	movff	___sindf@z,___flmul@b
  3242   002AE2  C079  F012         	movff	___sindf@z+1,___flmul@b+1
  3243   002AE6  C07A  F013         	movff	___sindf@z+2,___flmul@b+2
  3244   002AEA  C07B  F014         	movff	___sindf@z+3,___flmul@b+3
  3245   002AEE  C078  F015         	movff	___sindf@z,___flmul@a
  3246   002AF2  C079  F016         	movff	___sindf@z+1,___flmul@a+1
  3247   002AF6  C07A  F017         	movff	___sindf@z+2,___flmul@a+2
  3248   002AFA  C07B  F018         	movff	___sindf@z+3,___flmul@a+3
  3249   002AFE  EC42  F00D         	call	___flmul	;wreg free
  3250   002B02  C011  F064         	movff	?___flmul,___sindf@w
  3251   002B06  C012  F065         	movff	?___flmul+1,___sindf@w+1
  3252   002B0A  C013  F066         	movff	?___flmul+2,___sindf@w+2
  3253   002B0E  C014  F067         	movff	?___flmul+3,___sindf@w+3
  3254   002B12  0E3C               	movlw	60
  3255   002B14  6E15               	movwf	___flmul@a^0,c
  3256   002B16  0E6C               	movlw	108
  3257   002B18  6E16               	movwf	(___flmul@a+1)^0,c
  3258   002B1A  0E36               	movlw	54
  3259   002B1C  6E17               	movwf	(___flmul@a+2)^0,c
  3260   002B1E  0E36               	movlw	54
  3261   002B20  6E18               	movwf	(___flmul@a+3)^0,c
  3262   002B22  C078  F011         	movff	___sindf@z,___flmul@b
  3263   002B26  C079  F012         	movff	___sindf@z+1,___flmul@b+1
  3264   002B2A  C07A  F013         	movff	___sindf@z+2,___flmul@b+2
  3265   002B2E  C07B  F014         	movff	___sindf@z+3,___flmul@b+3
  3266   002B32  EC42  F00D         	call	___flmul	;wreg free
  3267   002B36  C011  F043         	movff	?___flmul,___fladd@b
  3268   002B3A  C012  F044         	movff	?___flmul+1,___fladd@b+1
  3269   002B3E  C013  F045         	movff	?___flmul+2,___fladd@b+2
  3270   002B42  C014  F046         	movff	?___flmul+3,___fladd@b+3
  3271   002B46  0ECF               	movlw	207
  3272   002B48  6E47               	movwf	___fladd@a^0,c
  3273   002B4A  0E07               	movlw	7
  3274   002B4C  6E48               	movwf	(___fladd@a+1)^0,c
  3275   002B4E  0E50               	movlw	80
  3276   002B50  6E49               	movwf	(___fladd@a+2)^0,c
  3277   002B52  0EB9               	movlw	185
  3278   002B54  6E4A               	movwf	(___fladd@a+3)^0,c
  3279   002B56  ECE2  F00A         	call	___fladd	;wreg free
  3280   002B5A  C043  F060         	movff	?___fladd,___sindf@r
  3281   002B5E  C044  F061         	movff	?___fladd+1,___sindf@r+1
  3282   002B62  C045  F062         	movff	?___fladd+2,___sindf@r+2
  3283   002B66  C046  F063         	movff	?___fladd+3,___sindf@r+3
  3284   002B6A  C078  F011         	movff	___sindf@z,___flmul@b
  3285   002B6E  C079  F012         	movff	___sindf@z+1,___flmul@b+1
  3286   002B72  C07A  F013         	movff	___sindf@z+2,___flmul@b+2
  3287   002B76  C07B  F014         	movff	___sindf@z+3,___flmul@b+3
  3288   002B7A  C053  F015         	movff	___sindf@x,___flmul@a
  3289   002B7E  C054  F016         	movff	___sindf@x+1,___flmul@a+1
  3290   002B82  C055  F017         	movff	___sindf@x+2,___flmul@a+2
  3291   002B86  C056  F018         	movff	___sindf@x+3,___flmul@a+3
  3292   002B8A  EC42  F00D         	call	___flmul	;wreg free
  3293   002B8E  C011  F074         	movff	?___flmul,___sindf@s
  3294   002B92  C012  F075         	movff	?___flmul+1,___sindf@s+1
  3295   002B96  C013  F076         	movff	?___flmul+2,___sindf@s+2
  3296   002B9A  C014  F077         	movff	?___flmul+3,___sindf@s+3
  3297   002B9E  0EAB               	movlw	171
  3298   002BA0  6E47               	movwf	___fladd@a^0,c
  3299   002BA2  0EAA               	movlw	170
  3300   002BA4  6E48               	movwf	(___fladd@a+1)^0,c
  3301   002BA6  0E2A               	movlw	42
  3302   002BA8  6E49               	movwf	(___fladd@a+2)^0,c
  3303   002BAA  0EBE               	movlw	190
  3304   002BAC  6E4A               	movwf	(___fladd@a+3)^0,c
  3305   002BAE  0E84               	movlw	132
  3306   002BB0  6E15               	movwf	___flmul@a^0,c
  3307   002BB2  0E88               	movlw	136
  3308   002BB4  6E16               	movwf	(___flmul@a+1)^0,c
  3309   002BB6  0E08               	movlw	8
  3310   002BB8  6E17               	movwf	(___flmul@a+2)^0,c
  3311   002BBA  0E3C               	movlw	60
  3312   002BBC  6E18               	movwf	(___flmul@a+3)^0,c
  3313   002BBE  C078  F011         	movff	___sindf@z,___flmul@b
  3314   002BC2  C079  F012         	movff	___sindf@z+1,___flmul@b+1
  3315   002BC6  C07A  F013         	movff	___sindf@z+2,___flmul@b+2
  3316   002BCA  C07B  F014         	movff	___sindf@z+3,___flmul@b+3
  3317   002BCE  EC42  F00D         	call	___flmul	;wreg free
  3318   002BD2  C011  F043         	movff	?___flmul,___fladd@b
  3319   002BD6  C012  F044         	movff	?___flmul+1,___fladd@b+1
  3320   002BDA  C013  F045         	movff	?___flmul+2,___fladd@b+2
  3321   002BDE  C014  F046         	movff	?___flmul+3,___fladd@b+3
  3322   002BE2  ECE2  F00A         	call	___fladd	;wreg free
  3323   002BE6  C043  F068         	movff	?___fladd,___sindf$3218
  3324   002BEA  C044  F069         	movff	?___fladd+1,___sindf$3218+1
  3325   002BEE  C045  F06A         	movff	?___fladd+2,___sindf$3218+2
  3326   002BF2  C046  F06B         	movff	?___fladd+3,___sindf$3218+3
  3327   002BF6  C064  F015         	movff	___sindf@w,___flmul@a
  3328   002BFA  C065  F016         	movff	___sindf@w+1,___flmul@a+1
  3329   002BFE  C066  F017         	movff	___sindf@w+2,___flmul@a+2
  3330   002C02  C067  F018         	movff	___sindf@w+3,___flmul@a+3
  3331   002C06  C074  F011         	movff	___sindf@s,___flmul@b
  3332   002C0A  C075  F012         	movff	___sindf@s+1,___flmul@b+1
  3333   002C0E  C076  F013         	movff	___sindf@s+2,___flmul@b+2
  3334   002C12  C077  F014         	movff	___sindf@s+3,___flmul@b+3
  3335   002C16  EC42  F00D         	call	___flmul	;wreg free
  3336   002C1A  C011  F06C         	movff	?___flmul,___sindf$3219
  3337   002C1E  C012  F06D         	movff	?___flmul+1,___sindf$3219+1
  3338   002C22  C013  F06E         	movff	?___flmul+2,___sindf$3219+2
  3339   002C26  C014  F06F         	movff	?___flmul+3,___sindf$3219+3
  3340   002C2A  C053  F047         	movff	___sindf@x,___fladd@a
  3341   002C2E  C054  F048         	movff	___sindf@x+1,___fladd@a+1
  3342   002C32  C055  F049         	movff	___sindf@x+2,___fladd@a+2
  3343   002C36  C056  F04A         	movff	___sindf@x+3,___fladd@a+3
  3344   002C3A  C074  F015         	movff	___sindf@s,___flmul@a
  3345   002C3E  C075  F016         	movff	___sindf@s+1,___flmul@a+1
  3346   002C42  C076  F017         	movff	___sindf@s+2,___flmul@a+2
  3347   002C46  C077  F018         	movff	___sindf@s+3,___flmul@a+3
  3348   002C4A  C068  F011         	movff	___sindf$3218,___flmul@b
  3349   002C4E  C069  F012         	movff	___sindf$3218+1,___flmul@b+1
  3350   002C52  C06A  F013         	movff	___sindf$3218+2,___flmul@b+2
  3351   002C56  C06B  F014         	movff	___sindf$3218+3,___flmul@b+3
  3352   002C5A  EC42  F00D         	call	___flmul	;wreg free
  3353   002C5E  C011  F043         	movff	?___flmul,___fladd@b
  3354   002C62  C012  F044         	movff	?___flmul+1,___fladd@b+1
  3355   002C66  C013  F045         	movff	?___flmul+2,___fladd@b+2
  3356   002C6A  C014  F046         	movff	?___flmul+3,___fladd@b+3
  3357   002C6E  ECE2  F00A         	call	___fladd	;wreg free
  3358   002C72  C043  F070         	movff	?___fladd,___sindf$3220
  3359   002C76  C044  F071         	movff	?___fladd+1,___sindf$3220+1
  3360   002C7A  C045  F072         	movff	?___fladd+2,___sindf$3220+2
  3361   002C7E  C046  F073         	movff	?___fladd+3,___sindf$3220+3
  3362   002C82  C070  F043         	movff	___sindf$3220,___fladd@b
  3363   002C86  C071  F044         	movff	___sindf$3220+1,___fladd@b+1
  3364   002C8A  C072  F045         	movff	___sindf$3220+2,___fladd@b+2
  3365   002C8E  C073  F046         	movff	___sindf$3220+3,___fladd@b+3
  3366   002C92  C060  F015         	movff	___sindf@r,___flmul@a
  3367   002C96  C061  F016         	movff	___sindf@r+1,___flmul@a+1
  3368   002C9A  C062  F017         	movff	___sindf@r+2,___flmul@a+2
  3369   002C9E  C063  F018         	movff	___sindf@r+3,___flmul@a+3
  3370   002CA2  C06C  F011         	movff	___sindf$3219,___flmul@b
  3371   002CA6  C06D  F012         	movff	___sindf$3219+1,___flmul@b+1
  3372   002CAA  C06E  F013         	movff	___sindf$3219+2,___flmul@b+2
  3373   002CAE  C06F  F014         	movff	___sindf$3219+3,___flmul@b+3
  3374   002CB2  EC42  F00D         	call	___flmul	;wreg free
  3375   002CB6  C011  F047         	movff	?___flmul,___fladd@a
  3376   002CBA  C012  F048         	movff	?___flmul+1,___fladd@a+1
  3377   002CBE  C013  F049         	movff	?___flmul+2,___fladd@a+2
  3378   002CC2  C014  F04A         	movff	?___flmul+3,___fladd@a+3
  3379   002CC6  ECE2  F00A         	call	___fladd	;wreg free
  3380   002CCA  C043  F053         	movff	?___fladd,?___sindf
  3381   002CCE  C044  F054         	movff	?___fladd+1,?___sindf+1
  3382   002CD2  C045  F055         	movff	?___fladd+2,?___sindf+2
  3383   002CD6  C046  F056         	movff	?___fladd+3,?___sindf+3
  3384   002CDA  0012               	return		;funcret
  3385   002CDC                     __end_of___sindf:
  3386                           	callstack 0
  3387                           
  3388 ;; *************** function ___rem_pio2f *****************
  3389 ;; Defined at:
  3390 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__rem_pio2f.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  x               4   28[BANK0 ] float 
  3393 ;;  y               1   32[BANK0 ] PTR 
  3394 ;;		 -> sinf@y(4), 
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;  n               4   56[BANK0 ] long 
  3397 ;;  t               4   52[BANK0 ] float 
  3398 ;;  fn              4   48[BANK0 ] float 
  3399 ;;  ux              4   44[BANK0 ] struct .
  3400 ;;  ty              4   35[BANK0 ] [1]
  3401 ;;  sign            1   43[BANK0 ] _Bool 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  2   28[BANK0 ] int 
  3404 ;; Registers used:
  3405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3411 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;Total ram usage:       32 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 3
  3418 ;; This function calls:
  3419 ;;		___fladd
  3420 ;;		___flmul
  3421 ;;		___flneg
  3422 ;;		___flsub
  3423 ;;		___fltol
  3424 ;;		___xxtofl
  3425 ;;		_fabsf
  3426 ;; This function is called by:
  3427 ;;		_sinf
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text11
  3432   001EAE                     __ptext11:
  3433                           	callstack 0
  3434   001EAE                     ___rem_pio2f:
  3435                           	callstack 25
  3436   001EAE  C0EA  F08C         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  3437   001EB2  C0EB  F08D         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  3438   001EB6  C0EC  F08E         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  3439   001EBA  C0ED  F08F         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  3440   001EBE  C07C  F08C         	movff	___rem_pio2f@x,___rem_pio2f@ux
  3441   001EC2  C07D  F08D         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  3442   001EC6  C07E  F08E         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  3443   001ECA  C07F  F08F         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  3444   001ECE  0100               	movlb	0	; () banked
  3445   001ED0  BF8F               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  3446   001ED2  EF6D  F00F         	goto	u4841
  3447   001ED6  EF70  F00F         	goto	u4840
  3448   001EDA                     u4841:
  3449   001EDA  0E01               	movlw	1
  3450   001EDC  EF71  F00F         	goto	u4850
  3451   001EE0                     u4840:
  3452   001EE0  0E00               	movlw	0
  3453   001EE2                     u4850:
  3454   001EE2  6F8B               	movwf	___rem_pio2f@sign& (0+255),b
  3455   001EE4                     
  3456                           ; BSR set to: 0
  3457   001EE4  9F8F               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  3458   001EE6                     
  3459                           ; BSR set to: 0
  3460   001EE6  0EDB               	movlw	219
  3461   001EE8  5D8C               	subwf	___rem_pio2f@ux& (0+255),w,b
  3462   001EEA  0E0F               	movlw	15
  3463   001EEC  598D               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  3464   001EEE  0EC9               	movlw	201
  3465   001EF0  598E               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  3466   001EF2  0E4D               	movlw	77
  3467   001EF4  598F               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  3468   001EF6  B0D8               	btfsc	status,0,c
  3469   001EF8  EF80  F00F         	goto	u4861
  3470   001EFC  EF82  F00F         	goto	u4860
  3471   001F00                     u4861:
  3472   001F00  EF6E  F010         	goto	l4183
  3473   001F04                     u4860:
  3474   001F04                     
  3475                           ; BSR set to: 0
  3476   001F04  C07C  F003         	movff	___rem_pio2f@x,fabsf@x
  3477   001F08  C07D  F004         	movff	___rem_pio2f@x+1,fabsf@x+1
  3478   001F0C  C07E  F005         	movff	___rem_pio2f@x+2,fabsf@x+2
  3479   001F10  C07F  F006         	movff	___rem_pio2f@x+3,fabsf@x+3
  3480   001F14  ECDD  F01F         	call	_fabsf	;wreg free
  3481   001F18  C003  F094         	movff	?_fabsf,___rem_pio2f@t
  3482   001F1C  C004  F095         	movff	?_fabsf+1,___rem_pio2f@t+1
  3483   001F20  C005  F096         	movff	?_fabsf+2,___rem_pio2f@t+2
  3484   001F24  C006  F097         	movff	?_fabsf+3,___rem_pio2f@t+3
  3485   001F28  0E00               	movlw	0
  3486   001F2A  6E47               	movwf	___fladd@a^0,c
  3487   001F2C  0E00               	movlw	0
  3488   001F2E  6E48               	movwf	(___fladd@a+1)^0,c
  3489   001F30  0E00               	movlw	0
  3490   001F32  6E49               	movwf	(___fladd@a+2)^0,c
  3491   001F34  0E3F               	movlw	63
  3492   001F36  6E4A               	movwf	(___fladd@a+3)^0,c
  3493   001F38  0E83               	movlw	131
  3494   001F3A  6E15               	movwf	___flmul@a^0,c
  3495   001F3C  0EF9               	movlw	249
  3496   001F3E  6E16               	movwf	(___flmul@a+1)^0,c
  3497   001F40  0E22               	movlw	34
  3498   001F42  6E17               	movwf	(___flmul@a+2)^0,c
  3499   001F44  0E3F               	movlw	63
  3500   001F46  6E18               	movwf	(___flmul@a+3)^0,c
  3501   001F48  C094  F011         	movff	___rem_pio2f@t,___flmul@b
  3502   001F4C  C095  F012         	movff	___rem_pio2f@t+1,___flmul@b+1
  3503   001F50  C096  F013         	movff	___rem_pio2f@t+2,___flmul@b+2
  3504   001F54  C097  F014         	movff	___rem_pio2f@t+3,___flmul@b+3
  3505   001F58  EC42  F00D         	call	___flmul	;wreg free
  3506   001F5C  C011  F043         	movff	?___flmul,___fladd@b
  3507   001F60  C012  F044         	movff	?___flmul+1,___fladd@b+1
  3508   001F64  C013  F045         	movff	?___flmul+2,___fladd@b+2
  3509   001F68  C014  F046         	movff	?___flmul+3,___fladd@b+3
  3510   001F6C  ECE2  F00A         	call	___fladd	;wreg free
  3511   001F70  C043  F053         	movff	?___fladd,___fltol@f1
  3512   001F74  C044  F054         	movff	?___fladd+1,___fltol@f1+1
  3513   001F78  C045  F055         	movff	?___fladd+2,___fltol@f1+2
  3514   001F7C  C046  F056         	movff	?___fladd+3,___fltol@f1+3
  3515   001F80  EC67  F01B         	call	___fltol	;wreg free
  3516   001F84  C053  F098         	movff	?___fltol,___rem_pio2f@n
  3517   001F88  C054  F099         	movff	?___fltol+1,___rem_pio2f@n+1
  3518   001F8C  C055  F09A         	movff	?___fltol+2,___rem_pio2f@n+2
  3519   001F90  C056  F09B         	movff	?___fltol+3,___rem_pio2f@n+3
  3520   001F94  C098  F003         	movff	___rem_pio2f@n,___xxtofl@val
  3521   001F98  C099  F004         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  3522   001F9C  C09A  F005         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  3523   001FA0  C09B  F006         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  3524   001FA4  0E01               	movlw	1
  3525   001FA6  EC7D  F018         	call	___xxtofl
  3526   001FAA  C003  F090         	movff	?___xxtofl,___rem_pio2f@fn
  3527   001FAE  C004  F091         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  3528   001FB2  C005  F092         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  3529   001FB6  C006  F093         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  3530   001FBA  0EDA               	movlw	218
  3531   001FBC  6E15               	movwf	___flmul@a^0,c
  3532   001FBE  0E0F               	movlw	15
  3533   001FC0  6E16               	movwf	(___flmul@a+1)^0,c
  3534   001FC2  0EC9               	movlw	201
  3535   001FC4  6E17               	movwf	(___flmul@a+2)^0,c
  3536   001FC6  0E3F               	movlw	63
  3537   001FC8  6E18               	movwf	(___flmul@a+3)^0,c
  3538   001FCA  C090  F011         	movff	___rem_pio2f@fn,___flmul@b
  3539   001FCE  C091  F012         	movff	___rem_pio2f@fn+1,___flmul@b+1
  3540   001FD2  C092  F013         	movff	___rem_pio2f@fn+2,___flmul@b+2
  3541   001FD6  C093  F014         	movff	___rem_pio2f@fn+3,___flmul@b+3
  3542   001FDA  EC42  F00D         	call	___flmul	;wreg free
  3543   001FDE  C011  F057         	movff	?___flmul,___flsub@a
  3544   001FE2  C012  F058         	movff	?___flmul+1,___flsub@a+1
  3545   001FE6  C013  F059         	movff	?___flmul+2,___flsub@a+2
  3546   001FEA  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  3547   001FEE  C094  F053         	movff	___rem_pio2f@t,___flsub@b
  3548   001FF2  C095  F054         	movff	___rem_pio2f@t+1,___flsub@b+1
  3549   001FF6  C096  F055         	movff	___rem_pio2f@t+2,___flsub@b+2
  3550   001FFA  C097  F056         	movff	___rem_pio2f@t+3,___flsub@b+3
  3551   001FFE  EC05  F01F         	call	___flsub	;wreg free
  3552   002002  C053  F087         	movff	?___flsub,___rem_pio2f$3217
  3553   002006  C054  F088         	movff	?___flsub+1,___rem_pio2f$3217+1
  3554   00200A  C055  F089         	movff	?___flsub+2,___rem_pio2f$3217+2
  3555   00200E  C056  F08A         	movff	?___flsub+3,___rem_pio2f$3217+3
  3556   002012  C087  F053         	movff	___rem_pio2f$3217,___flsub@b
  3557   002016  C088  F054         	movff	___rem_pio2f$3217+1,___flsub@b+1
  3558   00201A  C089  F055         	movff	___rem_pio2f$3217+2,___flsub@b+2
  3559   00201E  C08A  F056         	movff	___rem_pio2f$3217+3,___flsub@b+3
  3560   002022  0EA3               	movlw	163
  3561   002024  6E15               	movwf	___flmul@a^0,c
  3562   002026  0E85               	movlw	133
  3563   002028  6E16               	movwf	(___flmul@a+1)^0,c
  3564   00202A  0E88               	movlw	136
  3565   00202C  6E17               	movwf	(___flmul@a+2)^0,c
  3566   00202E  0E32               	movlw	50
  3567   002030  6E18               	movwf	(___flmul@a+3)^0,c
  3568   002032  C090  F011         	movff	___rem_pio2f@fn,___flmul@b
  3569   002036  C091  F012         	movff	___rem_pio2f@fn+1,___flmul@b+1
  3570   00203A  C092  F013         	movff	___rem_pio2f@fn+2,___flmul@b+2
  3571   00203E  C093  F014         	movff	___rem_pio2f@fn+3,___flmul@b+3
  3572   002042  EC42  F00D         	call	___flmul	;wreg free
  3573   002046  C011  F057         	movff	?___flmul,___flsub@a
  3574   00204A  C012  F058         	movff	?___flmul+1,___flsub@a+1
  3575   00204E  C013  F059         	movff	?___flmul+2,___flsub@a+2
  3576   002052  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  3577   002056  EC05  F01F         	call	___flsub	;wreg free
  3578   00205A  0100               	movlb	0	; () banked
  3579   00205C  5180               	movf	___rem_pio2f@y& (0+255),w,b
  3580   00205E  6ED9               	movwf	fsr2l,c
  3581   002060  6ADA               	clrf	fsr2h,c
  3582   002062  C053  FFDE         	movff	?___flsub,postinc2
  3583   002066  C054  FFDE         	movff	?___flsub+1,postinc2
  3584   00206A  C055  FFDE         	movff	?___flsub+2,postinc2
  3585   00206E  C056  FFDE         	movff	?___flsub+3,postinc2
  3586   002072                     
  3587                           ; BSR set to: 0
  3588   002072  518B               	movf	___rem_pio2f@sign& (0+255),w,b
  3589   002074  B4D8               	btfsc	status,2,c
  3590   002076  EF3F  F010         	goto	u4871
  3591   00207A  EF41  F010         	goto	u4870
  3592   00207E                     u4871:
  3593   00207E  EF68  F010         	goto	l1219
  3594   002082                     u4870:
  3595   002082                     l4177:
  3596                           
  3597                           ; BSR set to: 0
  3598   002082  5180               	movf	___rem_pio2f@y& (0+255),w,b
  3599   002084  6ED9               	movwf	fsr2l,c
  3600   002086  6ADA               	clrf	fsr2h,c
  3601   002088  CFDE F078          	movff	postinc2,___flneg@f1
  3602   00208C  CFDE F079          	movff	postinc2,___flneg@f1+1
  3603   002090  CFDE F07A          	movff	postinc2,___flneg@f1+2
  3604   002094  CFDE F07B          	movff	postinc2,___flneg@f1+3
  3605   002098  EC8A  F01F         	call	___flneg	;wreg free
  3606   00209C  0100               	movlb	0	; () banked
  3607   00209E  5180               	movf	___rem_pio2f@y& (0+255),w,b
  3608   0020A0  6ED9               	movwf	fsr2l,c
  3609   0020A2  6ADA               	clrf	fsr2h,c
  3610   0020A4  C078  FFDE         	movff	?___flneg,postinc2
  3611   0020A8  C079  FFDE         	movff	?___flneg+1,postinc2
  3612   0020AC  C07A  FFDE         	movff	?___flneg+2,postinc2
  3613   0020B0  C07B  FFDE         	movff	?___flneg+3,postinc2
  3614   0020B4                     
  3615                           ; BSR set to: 0
  3616   0020B4  C098  F081         	movff	___rem_pio2f@n,??___rem_pio2f
  3617   0020B8  C099  F082         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  3618   0020BC  1F81               	comf	??___rem_pio2f& (0+255),f,b
  3619   0020BE  1F82               	comf	(??___rem_pio2f+1)& (0+255),f,b
  3620   0020C0  4B81               	infsnz	??___rem_pio2f& (0+255),f,b
  3621   0020C2  2B82               	incf	(??___rem_pio2f+1)& (0+255),f,b
  3622   0020C4  C081  F07C         	movff	??___rem_pio2f,?___rem_pio2f
  3623   0020C8  C082  F07D         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  3624   0020CC  EF37  F011         	goto	l1220
  3625   0020D0                     l1219:
  3626                           
  3627                           ; BSR set to: 0
  3628   0020D0  C098  F07C         	movff	___rem_pio2f@n,?___rem_pio2f
  3629   0020D4  C099  F07D         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  3630   0020D8  EF37  F011         	goto	l1220
  3631   0020DC                     l4183:
  3632                           
  3633                           ; BSR set to: 0
  3634   0020DC  C07C  F003         	movff	___rem_pio2f@x,fabsf@x
  3635   0020E0  C07D  F004         	movff	___rem_pio2f@x+1,fabsf@x+1
  3636   0020E4  C07E  F005         	movff	___rem_pio2f@x+2,fabsf@x+2
  3637   0020E8  C07F  F006         	movff	___rem_pio2f@x+3,fabsf@x+3
  3638   0020EC  ECDD  F01F         	call	_fabsf	;wreg free
  3639   0020F0  C003  F094         	movff	?_fabsf,___rem_pio2f@t
  3640   0020F4  C004  F095         	movff	?_fabsf+1,___rem_pio2f@t+1
  3641   0020F8  C005  F096         	movff	?_fabsf+2,___rem_pio2f@t+2
  3642   0020FC  C006  F097         	movff	?_fabsf+3,___rem_pio2f@t+3
  3643   002100  0E00               	movlw	0
  3644   002102  6E47               	movwf	___fladd@a^0,c
  3645   002104  0E00               	movlw	0
  3646   002106  6E48               	movwf	(___fladd@a+1)^0,c
  3647   002108  0E00               	movlw	0
  3648   00210A  6E49               	movwf	(___fladd@a+2)^0,c
  3649   00210C  0E3F               	movlw	63
  3650   00210E  6E4A               	movwf	(___fladd@a+3)^0,c
  3651   002110  0E83               	movlw	131
  3652   002112  6E15               	movwf	___flmul@a^0,c
  3653   002114  0EF9               	movlw	249
  3654   002116  6E16               	movwf	(___flmul@a+1)^0,c
  3655   002118  0E22               	movlw	34
  3656   00211A  6E17               	movwf	(___flmul@a+2)^0,c
  3657   00211C  0E3F               	movlw	63
  3658   00211E  6E18               	movwf	(___flmul@a+3)^0,c
  3659   002120  C094  F011         	movff	___rem_pio2f@t,___flmul@b
  3660   002124  C095  F012         	movff	___rem_pio2f@t+1,___flmul@b+1
  3661   002128  C096  F013         	movff	___rem_pio2f@t+2,___flmul@b+2
  3662   00212C  C097  F014         	movff	___rem_pio2f@t+3,___flmul@b+3
  3663   002130  EC42  F00D         	call	___flmul	;wreg free
  3664   002134  C011  F043         	movff	?___flmul,___fladd@b
  3665   002138  C012  F044         	movff	?___flmul+1,___fladd@b+1
  3666   00213C  C013  F045         	movff	?___flmul+2,___fladd@b+2
  3667   002140  C014  F046         	movff	?___flmul+3,___fladd@b+3
  3668   002144  ECE2  F00A         	call	___fladd	;wreg free
  3669   002148  C043  F053         	movff	?___fladd,___fltol@f1
  3670   00214C  C044  F054         	movff	?___fladd+1,___fltol@f1+1
  3671   002150  C045  F055         	movff	?___fladd+2,___fltol@f1+2
  3672   002154  C046  F056         	movff	?___fladd+3,___fltol@f1+3
  3673   002158  EC67  F01B         	call	___fltol	;wreg free
  3674   00215C  C053  F098         	movff	?___fltol,___rem_pio2f@n
  3675   002160  C054  F099         	movff	?___fltol+1,___rem_pio2f@n+1
  3676   002164  C055  F09A         	movff	?___fltol+2,___rem_pio2f@n+2
  3677   002168  C056  F09B         	movff	?___fltol+3,___rem_pio2f@n+3
  3678   00216C  C098  F003         	movff	___rem_pio2f@n,___xxtofl@val
  3679   002170  C099  F004         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  3680   002174  C09A  F005         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  3681   002178  C09B  F006         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  3682   00217C  0E01               	movlw	1
  3683   00217E  EC7D  F018         	call	___xxtofl
  3684   002182  C003  F090         	movff	?___xxtofl,___rem_pio2f@fn
  3685   002186  C004  F091         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  3686   00218A  C005  F092         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  3687   00218E  C006  F093         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  3688   002192  0EDA               	movlw	218
  3689   002194  6E15               	movwf	___flmul@a^0,c
  3690   002196  0E0F               	movlw	15
  3691   002198  6E16               	movwf	(___flmul@a+1)^0,c
  3692   00219A  0EC9               	movlw	201
  3693   00219C  6E17               	movwf	(___flmul@a+2)^0,c
  3694   00219E  0E3F               	movlw	63
  3695   0021A0  6E18               	movwf	(___flmul@a+3)^0,c
  3696   0021A2  C090  F011         	movff	___rem_pio2f@fn,___flmul@b
  3697   0021A6  C091  F012         	movff	___rem_pio2f@fn+1,___flmul@b+1
  3698   0021AA  C092  F013         	movff	___rem_pio2f@fn+2,___flmul@b+2
  3699   0021AE  C093  F014         	movff	___rem_pio2f@fn+3,___flmul@b+3
  3700   0021B2  EC42  F00D         	call	___flmul	;wreg free
  3701   0021B6  C011  F057         	movff	?___flmul,___flsub@a
  3702   0021BA  C012  F058         	movff	?___flmul+1,___flsub@a+1
  3703   0021BE  C013  F059         	movff	?___flmul+2,___flsub@a+2
  3704   0021C2  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  3705   0021C6  C094  F053         	movff	___rem_pio2f@t,___flsub@b
  3706   0021CA  C095  F054         	movff	___rem_pio2f@t+1,___flsub@b+1
  3707   0021CE  C096  F055         	movff	___rem_pio2f@t+2,___flsub@b+2
  3708   0021D2  C097  F056         	movff	___rem_pio2f@t+3,___flsub@b+3
  3709   0021D6  EC05  F01F         	call	___flsub	;wreg free
  3710   0021DA  C053  F087         	movff	?___flsub,___rem_pio2f$3217
  3711   0021DE  C054  F088         	movff	?___flsub+1,___rem_pio2f$3217+1
  3712   0021E2  C055  F089         	movff	?___flsub+2,___rem_pio2f$3217+2
  3713   0021E6  C056  F08A         	movff	?___flsub+3,___rem_pio2f$3217+3
  3714   0021EA  C087  F053         	movff	___rem_pio2f$3217,___flsub@b
  3715   0021EE  C088  F054         	movff	___rem_pio2f$3217+1,___flsub@b+1
  3716   0021F2  C089  F055         	movff	___rem_pio2f$3217+2,___flsub@b+2
  3717   0021F6  C08A  F056         	movff	___rem_pio2f$3217+3,___flsub@b+3
  3718   0021FA  0EA3               	movlw	163
  3719   0021FC  6E15               	movwf	___flmul@a^0,c
  3720   0021FE  0E85               	movlw	133
  3721   002200  6E16               	movwf	(___flmul@a+1)^0,c
  3722   002202  0E88               	movlw	136
  3723   002204  6E17               	movwf	(___flmul@a+2)^0,c
  3724   002206  0E32               	movlw	50
  3725   002208  6E18               	movwf	(___flmul@a+3)^0,c
  3726   00220A  C090  F011         	movff	___rem_pio2f@fn,___flmul@b
  3727   00220E  C091  F012         	movff	___rem_pio2f@fn+1,___flmul@b+1
  3728   002212  C092  F013         	movff	___rem_pio2f@fn+2,___flmul@b+2
  3729   002216  C093  F014         	movff	___rem_pio2f@fn+3,___flmul@b+3
  3730   00221A  EC42  F00D         	call	___flmul	;wreg free
  3731   00221E  C011  F057         	movff	?___flmul,___flsub@a
  3732   002222  C012  F058         	movff	?___flmul+1,___flsub@a+1
  3733   002226  C013  F059         	movff	?___flmul+2,___flsub@a+2
  3734   00222A  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  3735   00222E  EC05  F01F         	call	___flsub	;wreg free
  3736   002232  C053  F083         	movff	?___flsub,___rem_pio2f@ty
  3737   002236  C054  F084         	movff	?___flsub+1,___rem_pio2f@ty+1
  3738   00223A  C055  F085         	movff	?___flsub+2,___rem_pio2f@ty+2
  3739   00223E  C056  F086         	movff	?___flsub+3,___rem_pio2f@ty+3
  3740   002242  0100               	movlb	0	; () banked
  3741   002244  5180               	movf	___rem_pio2f@y& (0+255),w,b
  3742   002246  6ED9               	movwf	fsr2l,c
  3743   002248  6ADA               	clrf	fsr2h,c
  3744   00224A  C083  FFDE         	movff	___rem_pio2f@ty,postinc2
  3745   00224E  C084  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  3746   002252  C085  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  3747   002256  C086  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  3748   00225A                     
  3749                           ; BSR set to: 0
  3750   00225A  518B               	movf	___rem_pio2f@sign& (0+255),w,b
  3751   00225C  B4D8               	btfsc	status,2,c
  3752   00225E  EF33  F011         	goto	u4881
  3753   002262  EF35  F011         	goto	u4880
  3754   002266                     u4881:
  3755   002266  EF68  F010         	goto	l1219
  3756   00226A                     u4880:
  3757   00226A  EF41  F010         	goto	l4177
  3758   00226E                     l1220:
  3759                           
  3760                           ; BSR set to: 0
  3761   00226E  0012               	return		;funcret
  3762   002270                     __end_of___rem_pio2f:
  3763                           	callstack 0
  3764                           
  3765 ;; *************** function _fabsf *****************
  3766 ;; Defined at:
  3767 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fabsf.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  x               4    2[COMRAM] float 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  u               4    6[COMRAM] struct .
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  4    2[COMRAM] float 
  3774 ;; Registers used:
  3775 ;;		status,2, status,0
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;Total ram usage:        8 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 1
  3788 ;; This function calls:
  3789 ;;		Nothing
  3790 ;; This function is called by:
  3791 ;;		___rem_pio2f
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text12
  3796   003FBA                     __ptext12:
  3797                           	callstack 0
  3798   003FBA                     _fabsf:
  3799                           	callstack 26
  3800   003FBA  C0E6  F007         	movff	fabsf@F465,fabsf@u
  3801   003FBE  C0E7  F008         	movff	fabsf@F465+1,fabsf@u+1
  3802   003FC2  C0E8  F009         	movff	fabsf@F465+2,fabsf@u+2
  3803   003FC6  C0E9  F00A         	movff	fabsf@F465+3,fabsf@u+3
  3804   003FCA  C003  F007         	movff	fabsf@x,fabsf@u
  3805   003FCE  C004  F008         	movff	fabsf@x+1,fabsf@u+1
  3806   003FD2  C005  F009         	movff	fabsf@x+2,fabsf@u+2
  3807   003FD6  C006  F00A         	movff	fabsf@x+3,fabsf@u+3
  3808   003FDA  9E0A               	bcf	(fabsf@u+3)^0,7,c
  3809   003FDC  C007  F003         	movff	fabsf@u,?_fabsf
  3810   003FE0  C008  F004         	movff	fabsf@u+1,?_fabsf+1
  3811   003FE4  C009  F005         	movff	fabsf@u+2,?_fabsf+2
  3812   003FE8  C00A  F006         	movff	fabsf@u+3,?_fabsf+3
  3813   003FEC  0012               	return		;funcret
  3814   003FEE                     __end_of_fabsf:
  3815                           	callstack 0
  3816                           
  3817 ;; *************** function ___xxtofl *****************
  3818 ;; Defined at:
  3819 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  sign            1    wreg     unsigned char 
  3822 ;;  val             4    2[COMRAM] long 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  sign            1   10[COMRAM] unsigned char 
  3825 ;;  arg             4   12[COMRAM] unsigned long 
  3826 ;;  exp             1   11[COMRAM] unsigned char 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  4    2[COMRAM] unsigned char 
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3836 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3840 ;;Total ram usage:       14 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 1
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		_runDAC
  3847 ;;		___rem_pio2f
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text13
  3852   0030FA                     __ptext13:
  3853                           	callstack 0
  3854   0030FA                     ___xxtofl:
  3855                           	callstack 26
  3856                           
  3857                           ;incstack = 0
  3858                           ;___xxtofl@sign stored from wreg
  3859   0030FA  6E0B               	movwf	___xxtofl@sign^0,c
  3860   0030FC  500B               	movf	___xxtofl@sign^0,w,c
  3861   0030FE  B4D8               	btfsc	status,2,c
  3862   003100  EF84  F018         	goto	u3351
  3863   003104  EF86  F018         	goto	u3350
  3864   003108                     u3351:
  3865   003108  EFA8  F018         	goto	l1002
  3866   00310C                     u3350:
  3867   00310C  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  3868   00310E  EF8D  F018         	goto	u3360
  3869   003112  EF8B  F018         	goto	u3361
  3870   003116                     u3361:
  3871   003116  EFA8  F018         	goto	l1002
  3872   00311A                     u3360:
  3873   00311A  C003  F007         	movff	___xxtofl@val,??___xxtofl
  3874   00311E  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
  3875   003122  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
  3876   003126  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
  3877   00312A  1E07               	comf	??___xxtofl^0,f,c
  3878   00312C  1E08               	comf	(??___xxtofl+1)^0,f,c
  3879   00312E  1E09               	comf	(??___xxtofl+2)^0,f,c
  3880   003130  1E0A               	comf	(??___xxtofl+3)^0,f,c
  3881   003132  2A07               	incf	??___xxtofl^0,f,c
  3882   003134  0E00               	movlw	0
  3883   003136  2208               	addwfc	(??___xxtofl+1)^0,f,c
  3884   003138  2209               	addwfc	(??___xxtofl+2)^0,f,c
  3885   00313A  220A               	addwfc	(??___xxtofl+3)^0,f,c
  3886   00313C  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
  3887   003140  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
  3888   003144  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
  3889   003148  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
  3890   00314C  EFB0  F018         	goto	l3221
  3891   003150                     l1002:
  3892   003150  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
  3893   003154  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3894   003158  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3895   00315C  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3896   003160                     l3221:
  3897   003160  5003               	movf	___xxtofl@val^0,w,c
  3898   003162  1004               	iorwf	(___xxtofl@val+1)^0,w,c
  3899   003164  1005               	iorwf	(___xxtofl@val+2)^0,w,c
  3900   003166  1006               	iorwf	(___xxtofl@val+3)^0,w,c
  3901   003168  A4D8               	btfss	status,2,c
  3902   00316A  EFB9  F018         	goto	u3371
  3903   00316E  EFBB  F018         	goto	u3370
  3904   003172                     u3371:
  3905   003172  EFC5  F018         	goto	l3227
  3906   003176                     u3370:
  3907   003176  0E00               	movlw	0
  3908   003178  6E03               	movwf	?___xxtofl^0,c
  3909   00317A  0E00               	movlw	0
  3910   00317C  6E04               	movwf	(?___xxtofl+1)^0,c
  3911   00317E  0E00               	movlw	0
  3912   003180  6E05               	movwf	(?___xxtofl+2)^0,c
  3913   003182  0E00               	movlw	0
  3914   003184  6E06               	movwf	(?___xxtofl+3)^0,c
  3915   003186  EF56  F019         	goto	l1005
  3916   00318A                     l3227:
  3917   00318A  0E96               	movlw	150
  3918   00318C  6E0C               	movwf	___xxtofl@exp^0,c
  3919   00318E  EFCF  F018         	goto	l3231
  3920   003192                     l3229:
  3921   003192  2A0C               	incf	___xxtofl@exp^0,f,c
  3922   003194  90D8               	bcf	status,0,c
  3923   003196  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  3924   003198  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  3925   00319A  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  3926   00319C  320D               	rrcf	___xxtofl@arg^0,f,c
  3927   00319E                     l3231:
  3928   00319E  0E00               	movlw	0
  3929   0031A0  140D               	andwf	___xxtofl@arg^0,w,c
  3930   0031A2  6E07               	movwf	??___xxtofl^0,c
  3931   0031A4  0E00               	movlw	0
  3932   0031A6  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  3933   0031A8  6E08               	movwf	(??___xxtofl+1)^0,c
  3934   0031AA  0E00               	movlw	0
  3935   0031AC  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  3936   0031AE  6E09               	movwf	(??___xxtofl+2)^0,c
  3937   0031B0  0EFE               	movlw	254
  3938   0031B2  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  3939   0031B4  6E0A               	movwf	(??___xxtofl+3)^0,c
  3940   0031B6  5007               	movf	??___xxtofl^0,w,c
  3941   0031B8  1008               	iorwf	(??___xxtofl+1)^0,w,c
  3942   0031BA  1009               	iorwf	(??___xxtofl+2)^0,w,c
  3943   0031BC  100A               	iorwf	(??___xxtofl+3)^0,w,c
  3944   0031BE  A4D8               	btfss	status,2,c
  3945   0031C0  EFE4  F018         	goto	u3381
  3946   0031C4  EFE6  F018         	goto	u3380
  3947   0031C8                     u3381:
  3948   0031C8  EFC9  F018         	goto	l3229
  3949   0031CC                     u3380:
  3950   0031CC  EFF4  F018         	goto	l1009
  3951   0031D0                     l3233:
  3952   0031D0  2A0C               	incf	___xxtofl@exp^0,f,c
  3953   0031D2  0E01               	movlw	1
  3954   0031D4  260D               	addwf	___xxtofl@arg^0,f,c
  3955   0031D6  0E00               	movlw	0
  3956   0031D8  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
  3957   0031DA  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
  3958   0031DC  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
  3959   0031DE  90D8               	bcf	status,0,c
  3960   0031E0  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  3961   0031E2  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  3962   0031E4  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  3963   0031E6  320D               	rrcf	___xxtofl@arg^0,f,c
  3964   0031E8                     l1009:
  3965   0031E8  0E00               	movlw	0
  3966   0031EA  140D               	andwf	___xxtofl@arg^0,w,c
  3967   0031EC  6E07               	movwf	??___xxtofl^0,c
  3968   0031EE  0E00               	movlw	0
  3969   0031F0  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  3970   0031F2  6E08               	movwf	(??___xxtofl+1)^0,c
  3971   0031F4  0E00               	movlw	0
  3972   0031F6  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  3973   0031F8  6E09               	movwf	(??___xxtofl+2)^0,c
  3974   0031FA  0EFF               	movlw	255
  3975   0031FC  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  3976   0031FE  6E0A               	movwf	(??___xxtofl+3)^0,c
  3977   003200  5007               	movf	??___xxtofl^0,w,c
  3978   003202  1008               	iorwf	(??___xxtofl+1)^0,w,c
  3979   003204  1009               	iorwf	(??___xxtofl+2)^0,w,c
  3980   003206  100A               	iorwf	(??___xxtofl+3)^0,w,c
  3981   003208  A4D8               	btfss	status,2,c
  3982   00320A  EF09  F019         	goto	u3391
  3983   00320E  EF0B  F019         	goto	u3390
  3984   003212                     u3391:
  3985   003212  EFE8  F018         	goto	l3233
  3986   003216                     u3390:
  3987   003216  EF13  F019         	goto	l3241
  3988   00321A                     l3239:
  3989   00321A  060C               	decf	___xxtofl@exp^0,f,c
  3990   00321C  90D8               	bcf	status,0,c
  3991   00321E  360D               	rlcf	___xxtofl@arg^0,f,c
  3992   003220  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
  3993   003222  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
  3994   003224  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
  3995   003226                     l3241:
  3996   003226  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
  3997   003228  EF18  F019         	goto	u3401
  3998   00322C  EF1A  F019         	goto	u3400
  3999   003230                     u3401:
  4000   003230  EF22  F019         	goto	l1016
  4001   003234                     u3400:
  4002   003234  0E02               	movlw	2
  4003   003236  600C               	cpfslt	___xxtofl@exp^0,c
  4004   003238  EF20  F019         	goto	u3411
  4005   00323C  EF22  F019         	goto	u3410
  4006   003240                     u3411:
  4007   003240  EF0D  F019         	goto	l3239
  4008   003244                     u3410:
  4009   003244                     l1016:
  4010   003244  B00C               	btfsc	___xxtofl@exp^0,0,c
  4011   003246  EF27  F019         	goto	u3421
  4012   00324A  EF29  F019         	goto	u3420
  4013   00324E                     u3421:
  4014   00324E  EF2A  F019         	goto	l3247
  4015   003252                     u3420:
  4016   003252  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
  4017   003254                     l3247:
  4018   003254  90D8               	bcf	status,0,c
  4019   003256  320C               	rrcf	___xxtofl@exp^0,f,c
  4020   003258  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  4021   00325C  6A08               	clrf	(??___xxtofl+1)^0,c
  4022   00325E  6A09               	clrf	(??___xxtofl+2)^0,c
  4023   003260  6A0A               	clrf	(??___xxtofl+3)^0,c
  4024   003262  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  4025   003266  6A09               	clrf	(??___xxtofl+2)^0,c
  4026   003268  6A08               	clrf	(??___xxtofl+1)^0,c
  4027   00326A  6A07               	clrf	??___xxtofl^0,c
  4028   00326C  5007               	movf	??___xxtofl^0,w,c
  4029   00326E  120D               	iorwf	___xxtofl@arg^0,f,c
  4030   003270  5008               	movf	(??___xxtofl+1)^0,w,c
  4031   003272  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
  4032   003274  5009               	movf	(??___xxtofl+2)^0,w,c
  4033   003276  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
  4034   003278  500A               	movf	(??___xxtofl+3)^0,w,c
  4035   00327A  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
  4036   00327C  500B               	movf	___xxtofl@sign^0,w,c
  4037   00327E  B4D8               	btfsc	status,2,c
  4038   003280  EF44  F019         	goto	u3431
  4039   003284  EF46  F019         	goto	u3430
  4040   003288                     u3431:
  4041   003288  EF4E  F019         	goto	l3257
  4042   00328C                     u3430:
  4043   00328C  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  4044   00328E  EF4D  F019         	goto	u3440
  4045   003292  EF4B  F019         	goto	u3441
  4046   003296                     u3441:
  4047   003296  EF4E  F019         	goto	l3257
  4048   00329A                     u3440:
  4049   00329A  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
  4050   00329C                     l3257:
  4051   00329C  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  4052   0032A0  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  4053   0032A4  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  4054   0032A8  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  4055   0032AC                     l1005:
  4056   0032AC  0012               	return		;funcret
  4057   0032AE                     __end_of___xxtofl:
  4058                           	callstack 0
  4059                           
  4060 ;; *************** function ___fltol *****************
  4061 ;; Defined at:
  4062 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  f1              4   82[COMRAM] unsigned char 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;  exp1            1    1[BANK0 ] unsigned char 
  4067 ;;  sign1           1    0[BANK0 ] unsigned char 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  4   82[COMRAM] long 
  4070 ;; Registers used:
  4071 ;;		wreg, status,2, status,0
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4077 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4078 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4079 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4080 ;;      Totals:         8       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;Total ram usage:       10 bytes
  4082 ;; Hardware stack levels used: 1
  4083 ;; Hardware stack levels required when called: 1
  4084 ;; This function calls:
  4085 ;;		Nothing
  4086 ;; This function is called by:
  4087 ;;		_runDAC
  4088 ;;		___rem_pio2f
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text14
  4093   0036CE                     __ptext14:
  4094                           	callstack 0
  4095   0036CE                     ___fltol:
  4096                           	callstack 26
  4097   0036CE  3455               	rlcf	(___fltol@f1+2)^0,w,c
  4098   0036D0  3456               	rlcf	(___fltol@f1+3)^0,w,c
  4099   0036D2  0100               	movlb	0	; () banked
  4100   0036D4  6F61               	movwf	___fltol@exp1& (0+255),b
  4101   0036D6  5161               	movf	___fltol@exp1& (0+255),w,b
  4102   0036D8  A4D8               	btfss	status,2,c
  4103   0036DA  EF71  F01B         	goto	u4661
  4104   0036DE  EF73  F01B         	goto	u4660
  4105   0036E2                     u4661:
  4106   0036E2  EF7D  F01B         	goto	l4033
  4107   0036E6                     u4660:
  4108   0036E6                     l4029:
  4109                           
  4110                           ; BSR set to: 0
  4111   0036E6  0E00               	movlw	0
  4112   0036E8  6E53               	movwf	?___fltol^0,c
  4113   0036EA  0E00               	movlw	0
  4114   0036EC  6E54               	movwf	(?___fltol+1)^0,c
  4115   0036EE  0E00               	movlw	0
  4116   0036F0  6E55               	movwf	(?___fltol+2)^0,c
  4117   0036F2  0E00               	movlw	0
  4118   0036F4  6E56               	movwf	(?___fltol+3)^0,c
  4119   0036F6  EFEA  F01B         	goto	l644
  4120   0036FA                     l4033:
  4121                           
  4122                           ; BSR set to: 0
  4123   0036FA  C053  F057         	movff	___fltol@f1,??___fltol
  4124   0036FE  C054  F058         	movff	___fltol@f1+1,??___fltol+1
  4125   003702  C055  F059         	movff	___fltol@f1+2,??___fltol+2
  4126   003706  C056  F05A         	movff	___fltol@f1+3,??___fltol+3
  4127   00370A  0E20               	movlw	32
  4128   00370C  EF8D  F01B         	goto	u4670
  4129   003710                     u4675:
  4130   003710  90D8               	bcf	status,0,c
  4131   003712  325A               	rrcf	(??___fltol+3)^0,f,c
  4132   003714  3259               	rrcf	(??___fltol+2)^0,f,c
  4133   003716  3258               	rrcf	(??___fltol+1)^0,f,c
  4134   003718  3257               	rrcf	??___fltol^0,f,c
  4135   00371A                     u4670:
  4136   00371A  2EE8               	decfsz	wreg,f,c
  4137   00371C  EF88  F01B         	goto	u4675
  4138   003720  5057               	movf	??___fltol^0,w,c
  4139   003722  6F60               	movwf	___fltol@sign1& (0+255),b
  4140   003724                     
  4141                           ; BSR set to: 0
  4142   003724  8E55               	bsf	(___fltol@f1+2)^0,7,c
  4143   003726                     
  4144                           ; BSR set to: 0
  4145   003726  0EFF               	movlw	255
  4146   003728  1653               	andwf	___fltol@f1^0,f,c
  4147   00372A  0EFF               	movlw	255
  4148   00372C  1654               	andwf	(___fltol@f1+1)^0,f,c
  4149   00372E  0EFF               	movlw	255
  4150   003730  1655               	andwf	(___fltol@f1+2)^0,f,c
  4151   003732  0E00               	movlw	0
  4152   003734  1656               	andwf	(___fltol@f1+3)^0,f,c
  4153   003736                     
  4154                           ; BSR set to: 0
  4155   003736  0E96               	movlw	150
  4156   003738  5F61               	subwf	___fltol@exp1& (0+255),f,b
  4157   00373A                     
  4158                           ; BSR set to: 0
  4159   00373A  BF61               	btfsc	___fltol@exp1& (0+255),7,b
  4160   00373C  EFA4  F01B         	goto	u4680
  4161   003740  EFA2  F01B         	goto	u4681
  4162   003744                     u4681:
  4163   003744  EFBA  F01B         	goto	l4053
  4164   003748                     u4680:
  4165   003748                     
  4166                           ; BSR set to: 0
  4167   003748  5161               	movf	___fltol@exp1& (0+255),w,b
  4168   00374A  0A80               	xorlw	128
  4169   00374C  0F97               	addlw	151
  4170   00374E  B0D8               	btfsc	status,0,c
  4171   003750  EFAC  F01B         	goto	u4691
  4172   003754  EFAE  F01B         	goto	u4690
  4173   003758                     u4691:
  4174   003758  EFB0  F01B         	goto	l4049
  4175   00375C                     u4690:
  4176   00375C  EF73  F01B         	goto	l4029
  4177   003760                     l4049:
  4178                           
  4179                           ; BSR set to: 0
  4180   003760  90D8               	bcf	status,0,c
  4181   003762  3256               	rrcf	(___fltol@f1+3)^0,f,c
  4182   003764  3255               	rrcf	(___fltol@f1+2)^0,f,c
  4183   003766  3254               	rrcf	(___fltol@f1+1)^0,f,c
  4184   003768  3253               	rrcf	___fltol@f1^0,f,c
  4185   00376A                     
  4186                           ; BSR set to: 0
  4187   00376A  3F61               	incfsz	___fltol@exp1& (0+255),f,b
  4188   00376C  EFB0  F01B         	goto	l4049
  4189   003770  EFD2  F01B         	goto	l4063
  4190   003774                     l4053:
  4191                           
  4192                           ; BSR set to: 0
  4193   003774  0E1F               	movlw	31
  4194   003776  6561               	cpfsgt	___fltol@exp1& (0+255),b
  4195   003778  EFC0  F01B         	goto	u4701
  4196   00377C  EFC2  F01B         	goto	u4700
  4197   003780                     u4701:
  4198   003780  EFCA  F01B         	goto	l4061
  4199   003784                     u4700:
  4200   003784  EF73  F01B         	goto	l4029
  4201   003788                     l4059:
  4202                           
  4203                           ; BSR set to: 0
  4204   003788  90D8               	bcf	status,0,c
  4205   00378A  3653               	rlcf	___fltol@f1^0,f,c
  4206   00378C  3654               	rlcf	(___fltol@f1+1)^0,f,c
  4207   00378E  3655               	rlcf	(___fltol@f1+2)^0,f,c
  4208   003790  3656               	rlcf	(___fltol@f1+3)^0,f,c
  4209   003792  0761               	decf	___fltol@exp1& (0+255),f,b
  4210   003794                     l4061:
  4211                           
  4212                           ; BSR set to: 0
  4213   003794  5161               	movf	___fltol@exp1& (0+255),w,b
  4214   003796  A4D8               	btfss	status,2,c
  4215   003798  EFD0  F01B         	goto	u4711
  4216   00379C  EFD2  F01B         	goto	u4710
  4217   0037A0                     u4711:
  4218   0037A0  EFC4  F01B         	goto	l4059
  4219   0037A4                     u4710:
  4220   0037A4                     l4063:
  4221                           
  4222                           ; BSR set to: 0
  4223   0037A4  5160               	movf	___fltol@sign1& (0+255),w,b
  4224   0037A6  B4D8               	btfsc	status,2,c
  4225   0037A8  EFD8  F01B         	goto	u4721
  4226   0037AC  EFDA  F01B         	goto	u4720
  4227   0037B0                     u4721:
  4228   0037B0  EFE2  F01B         	goto	l4067
  4229   0037B4                     u4720:
  4230   0037B4                     
  4231                           ; BSR set to: 0
  4232   0037B4  1E56               	comf	(___fltol@f1+3)^0,f,c
  4233   0037B6  1E55               	comf	(___fltol@f1+2)^0,f,c
  4234   0037B8  1E54               	comf	(___fltol@f1+1)^0,f,c
  4235   0037BA  6C53               	negf	___fltol@f1^0,c
  4236   0037BC  0E00               	movlw	0
  4237   0037BE  2254               	addwfc	(___fltol@f1+1)^0,f,c
  4238   0037C0  2255               	addwfc	(___fltol@f1+2)^0,f,c
  4239   0037C2  2256               	addwfc	(___fltol@f1+3)^0,f,c
  4240   0037C4                     l4067:
  4241                           
  4242                           ; BSR set to: 0
  4243   0037C4  C053  F053         	movff	___fltol@f1,?___fltol
  4244   0037C8  C054  F054         	movff	___fltol@f1+1,?___fltol+1
  4245   0037CC  C055  F055         	movff	___fltol@f1+2,?___fltol+2
  4246   0037D0  C056  F056         	movff	___fltol@f1+3,?___fltol+3
  4247   0037D4                     l644:
  4248                           
  4249                           ; BSR set to: 0
  4250   0037D4  0012               	return		;funcret
  4251   0037D6                     __end_of___fltol:
  4252                           	callstack 0
  4253                           
  4254 ;; *************** function ___flsub *****************
  4255 ;; Defined at:
  4256 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  b               4   82[COMRAM] long 
  4259 ;;  a               4   86[COMRAM] long 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;		None
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  4   82[COMRAM] long 
  4264 ;; Registers used:
  4265 ;;		wreg, status,2, status,0, cstack
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4271 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;Total ram usage:        8 bytes
  4276 ;; Hardware stack levels used: 1
  4277 ;; Hardware stack levels required when called: 2
  4278 ;; This function calls:
  4279 ;;		___fladd
  4280 ;; This function is called by:
  4281 ;;		___rem_pio2f
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text15
  4286   003E0A                     __ptext15:
  4287                           	callstack 0
  4288   003E0A                     ___flsub:
  4289                           	callstack 25
  4290   003E0A  0E00               	movlw	0
  4291   003E0C  1A57               	xorwf	___flsub@a^0,f,c
  4292   003E0E  0E00               	movlw	0
  4293   003E10  1A58               	xorwf	(___flsub@a+1)^0,f,c
  4294   003E12  0E00               	movlw	0
  4295   003E14  1A59               	xorwf	(___flsub@a+2)^0,f,c
  4296   003E16  0E80               	movlw	128
  4297   003E18  1A5A               	xorwf	(___flsub@a+3)^0,f,c
  4298   003E1A  C053  F043         	movff	___flsub@b,___fladd@b
  4299   003E1E  C054  F044         	movff	___flsub@b+1,___fladd@b+1
  4300   003E22  C055  F045         	movff	___flsub@b+2,___fladd@b+2
  4301   003E26  C056  F046         	movff	___flsub@b+3,___fladd@b+3
  4302   003E2A  C057  F047         	movff	___flsub@a,___fladd@a
  4303   003E2E  C058  F048         	movff	___flsub@a+1,___fladd@a+1
  4304   003E32  C059  F049         	movff	___flsub@a+2,___fladd@a+2
  4305   003E36  C05A  F04A         	movff	___flsub@a+3,___fladd@a+3
  4306   003E3A  ECE2  F00A         	call	___fladd	;wreg free
  4307   003E3E  C043  F053         	movff	?___fladd,?___flsub
  4308   003E42  C044  F054         	movff	?___fladd+1,?___flsub+1
  4309   003E46  C045  F055         	movff	?___fladd+2,?___flsub+2
  4310   003E4A  C046  F056         	movff	?___fladd+3,?___flsub+3
  4311   003E4E  0012               	return		;funcret
  4312   003E50                     __end_of___flsub:
  4313                           	callstack 0
  4314                           
  4315 ;; *************** function ___flneg *****************
  4316 ;; Defined at:
  4317 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  f1              4   24[BANK0 ] long 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  4   24[BANK0 ] long 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4331 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;Total ram usage:        4 bytes
  4336 ;; Hardware stack levels used: 1
  4337 ;; Hardware stack levels required when called: 1
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_sinf
  4342 ;;		___rem_pio2f
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text16
  4347   003F14                     __ptext16:
  4348                           	callstack 0
  4349   003F14                     ___flneg:
  4350                           	callstack 26
  4351   003F14  0100               	movlb	0	; () banked
  4352   003F16  5178               	movf	___flneg@f1& (0+255),w,b
  4353   003F18  1179               	iorwf	(___flneg@f1+1)& (0+255),w,b
  4354   003F1A  117A               	iorwf	(___flneg@f1+2)& (0+255),w,b
  4355   003F1C  117B               	iorwf	(___flneg@f1+3)& (0+255),w,b
  4356   003F1E  B4D8               	btfsc	status,2,c
  4357   003F20  EF94  F01F         	goto	u3271
  4358   003F24  EF96  F01F         	goto	u3270
  4359   003F28                     u3271:
  4360   003F28  EF9E  F01F         	goto	l3167
  4361   003F2C                     u3270:
  4362   003F2C                     
  4363                           ; BSR set to: 0
  4364   003F2C  0E00               	movlw	0
  4365   003F2E  1B78               	xorwf	___flneg@f1& (0+255),f,b
  4366   003F30  0E00               	movlw	0
  4367   003F32  1B79               	xorwf	(___flneg@f1+1)& (0+255),f,b
  4368   003F34  0E00               	movlw	0
  4369   003F36  1B7A               	xorwf	(___flneg@f1+2)& (0+255),f,b
  4370   003F38  0E80               	movlw	128
  4371   003F3A  1B7B               	xorwf	(___flneg@f1+3)& (0+255),f,b
  4372   003F3C                     l3167:
  4373                           
  4374                           ; BSR set to: 0
  4375   003F3C  C078  F078         	movff	___flneg@f1,?___flneg
  4376   003F40  C079  F079         	movff	___flneg@f1+1,?___flneg+1
  4377   003F44  C07A  F07A         	movff	___flneg@f1+2,?___flneg+2
  4378   003F48  C07B  F07B         	movff	___flneg@f1+3,?___flneg+3
  4379   003F4C                     
  4380                           ; BSR set to: 0
  4381   003F4C  0012               	return		;funcret
  4382   003F4E                     __end_of___flneg:
  4383                           	callstack 0
  4384                           
  4385 ;; *************** function ___cosdf *****************
  4386 ;; Defined at:
  4387 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__cosdf.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  x               4   82[COMRAM] long 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  z               4   20[BANK0 ] long 
  4392 ;;  w               4   16[BANK0 ] long 
  4393 ;;  r               4    0[BANK0 ] long 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  4   82[COMRAM] float 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4403 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;Total ram usage:       28 bytes
  4408 ;; Hardware stack levels used: 1
  4409 ;; Hardware stack levels required when called: 2
  4410 ;; This function calls:
  4411 ;;		___fladd
  4412 ;;		___flmul
  4413 ;; This function is called by:
  4414 ;;		_sinf
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text17
  4419   002EFC                     __ptext17:
  4420                           	callstack 0
  4421   002EFC                     ___cosdf:
  4422                           	callstack 26
  4423   002EFC  C053  F011         	movff	___cosdf@x,___flmul@b
  4424   002F00  C054  F012         	movff	___cosdf@x+1,___flmul@b+1
  4425   002F04  C055  F013         	movff	___cosdf@x+2,___flmul@b+2
  4426   002F08  C056  F014         	movff	___cosdf@x+3,___flmul@b+3
  4427   002F0C  C053  F015         	movff	___cosdf@x,___flmul@a
  4428   002F10  C054  F016         	movff	___cosdf@x+1,___flmul@a+1
  4429   002F14  C055  F017         	movff	___cosdf@x+2,___flmul@a+2
  4430   002F18  C056  F018         	movff	___cosdf@x+3,___flmul@a+3
  4431   002F1C  EC42  F00D         	call	___flmul	;wreg free
  4432   002F20  C011  F074         	movff	?___flmul,___cosdf@z
  4433   002F24  C012  F075         	movff	?___flmul+1,___cosdf@z+1
  4434   002F28  C013  F076         	movff	?___flmul+2,___cosdf@z+2
  4435   002F2C  C014  F077         	movff	?___flmul+3,___cosdf@z+3
  4436   002F30  C074  F011         	movff	___cosdf@z,___flmul@b
  4437   002F34  C075  F012         	movff	___cosdf@z+1,___flmul@b+1
  4438   002F38  C076  F013         	movff	___cosdf@z+2,___flmul@b+2
  4439   002F3C  C077  F014         	movff	___cosdf@z+3,___flmul@b+3
  4440   002F40  C074  F015         	movff	___cosdf@z,___flmul@a
  4441   002F44  C075  F016         	movff	___cosdf@z+1,___flmul@a+1
  4442   002F48  C076  F017         	movff	___cosdf@z+2,___flmul@a+2
  4443   002F4C  C077  F018         	movff	___cosdf@z+3,___flmul@a+3
  4444   002F50  EC42  F00D         	call	___flmul	;wreg free
  4445   002F54  C011  F070         	movff	?___flmul,___cosdf@w
  4446   002F58  C012  F071         	movff	?___flmul+1,___cosdf@w+1
  4447   002F5C  C013  F072         	movff	?___flmul+2,___cosdf@w+2
  4448   002F60  C014  F073         	movff	?___flmul+3,___cosdf@w+3
  4449   002F64  0E17               	movlw	23
  4450   002F66  6E15               	movwf	___flmul@a^0,c
  4451   002F68  0E9A               	movlw	154
  4452   002F6A  6E16               	movwf	(___flmul@a+1)^0,c
  4453   002F6C  0ECC               	movlw	204
  4454   002F6E  6E17               	movwf	(___flmul@a+2)^0,c
  4455   002F70  0E37               	movlw	55
  4456   002F72  6E18               	movwf	(___flmul@a+3)^0,c
  4457   002F74  C074  F011         	movff	___cosdf@z,___flmul@b
  4458   002F78  C075  F012         	movff	___cosdf@z+1,___flmul@b+1
  4459   002F7C  C076  F013         	movff	___cosdf@z+2,___flmul@b+2
  4460   002F80  C077  F014         	movff	___cosdf@z+3,___flmul@b+3
  4461   002F84  EC42  F00D         	call	___flmul	;wreg free
  4462   002F88  C011  F043         	movff	?___flmul,___fladd@b
  4463   002F8C  C012  F044         	movff	?___flmul+1,___fladd@b+1
  4464   002F90  C013  F045         	movff	?___flmul+2,___fladd@b+2
  4465   002F94  C014  F046         	movff	?___flmul+3,___fladd@b+3
  4466   002F98  0E3F               	movlw	63
  4467   002F9A  6E47               	movwf	___fladd@a^0,c
  4468   002F9C  0E04               	movlw	4
  4469   002F9E  6E48               	movwf	(___fladd@a+1)^0,c
  4470   002FA0  0EB6               	movlw	182
  4471   002FA2  6E49               	movwf	(___fladd@a+2)^0,c
  4472   002FA4  0EBA               	movlw	186
  4473   002FA6  6E4A               	movwf	(___fladd@a+3)^0,c
  4474   002FA8  ECE2  F00A         	call	___fladd	;wreg free
  4475   002FAC  C043  F060         	movff	?___fladd,___cosdf@r
  4476   002FB0  C044  F061         	movff	?___fladd+1,___cosdf@r+1
  4477   002FB4  C045  F062         	movff	?___fladd+2,___cosdf@r+2
  4478   002FB8  C046  F063         	movff	?___fladd+3,___cosdf@r+3
  4479   002FBC  0E00               	movlw	0
  4480   002FBE  6E47               	movwf	___fladd@a^0,c
  4481   002FC0  0E00               	movlw	0
  4482   002FC2  6E48               	movwf	(___fladd@a+1)^0,c
  4483   002FC4  0E80               	movlw	128
  4484   002FC6  6E49               	movwf	(___fladd@a+2)^0,c
  4485   002FC8  0E3F               	movlw	63
  4486   002FCA  6E4A               	movwf	(___fladd@a+3)^0,c
  4487   002FCC  0E00               	movlw	0
  4488   002FCE  6E15               	movwf	___flmul@a^0,c
  4489   002FD0  0E00               	movlw	0
  4490   002FD2  6E16               	movwf	(___flmul@a+1)^0,c
  4491   002FD4  0E00               	movlw	0
  4492   002FD6  6E17               	movwf	(___flmul@a+2)^0,c
  4493   002FD8  0EBF               	movlw	191
  4494   002FDA  6E18               	movwf	(___flmul@a+3)^0,c
  4495   002FDC  C074  F011         	movff	___cosdf@z,___flmul@b
  4496   002FE0  C075  F012         	movff	___cosdf@z+1,___flmul@b+1
  4497   002FE4  C076  F013         	movff	___cosdf@z+2,___flmul@b+2
  4498   002FE8  C077  F014         	movff	___cosdf@z+3,___flmul@b+3
  4499   002FEC  EC42  F00D         	call	___flmul	;wreg free
  4500   002FF0  C011  F043         	movff	?___flmul,___fladd@b
  4501   002FF4  C012  F044         	movff	?___flmul+1,___fladd@b+1
  4502   002FF8  C013  F045         	movff	?___flmul+2,___fladd@b+2
  4503   002FFC  C014  F046         	movff	?___flmul+3,___fladd@b+3
  4504   003000  ECE2  F00A         	call	___fladd	;wreg free
  4505   003004  C043  F064         	movff	?___fladd,___cosdf$3214
  4506   003008  C044  F065         	movff	?___fladd+1,___cosdf$3214+1
  4507   00300C  C045  F066         	movff	?___fladd+2,___cosdf$3214+2
  4508   003010  C046  F067         	movff	?___fladd+3,___cosdf$3214+3
  4509   003014  C074  F015         	movff	___cosdf@z,___flmul@a
  4510   003018  C075  F016         	movff	___cosdf@z+1,___flmul@a+1
  4511   00301C  C076  F017         	movff	___cosdf@z+2,___flmul@a+2
  4512   003020  C077  F018         	movff	___cosdf@z+3,___flmul@a+3
  4513   003024  C070  F011         	movff	___cosdf@w,___flmul@b
  4514   003028  C071  F012         	movff	___cosdf@w+1,___flmul@b+1
  4515   00302C  C072  F013         	movff	___cosdf@w+2,___flmul@b+2
  4516   003030  C073  F014         	movff	___cosdf@w+3,___flmul@b+3
  4517   003034  EC42  F00D         	call	___flmul	;wreg free
  4518   003038  C011  F068         	movff	?___flmul,___cosdf$3215
  4519   00303C  C012  F069         	movff	?___flmul+1,___cosdf$3215+1
  4520   003040  C013  F06A         	movff	?___flmul+2,___cosdf$3215+2
  4521   003044  C014  F06B         	movff	?___flmul+3,___cosdf$3215+3
  4522   003048  0E9F               	movlw	159
  4523   00304A  6E15               	movwf	___flmul@a^0,c
  4524   00304C  0EAA               	movlw	170
  4525   00304E  6E16               	movwf	(___flmul@a+1)^0,c
  4526   003050  0E2A               	movlw	42
  4527   003052  6E17               	movwf	(___flmul@a+2)^0,c
  4528   003054  0E3D               	movlw	61
  4529   003056  6E18               	movwf	(___flmul@a+3)^0,c
  4530   003058  C070  F011         	movff	___cosdf@w,___flmul@b
  4531   00305C  C071  F012         	movff	___cosdf@w+1,___flmul@b+1
  4532   003060  C072  F013         	movff	___cosdf@w+2,___flmul@b+2
  4533   003064  C073  F014         	movff	___cosdf@w+3,___flmul@b+3
  4534   003068  EC42  F00D         	call	___flmul	;wreg free
  4535   00306C  C011  F047         	movff	?___flmul,___fladd@a
  4536   003070  C012  F048         	movff	?___flmul+1,___fladd@a+1
  4537   003074  C013  F049         	movff	?___flmul+2,___fladd@a+2
  4538   003078  C014  F04A         	movff	?___flmul+3,___fladd@a+3
  4539   00307C  C064  F043         	movff	___cosdf$3214,___fladd@b
  4540   003080  C065  F044         	movff	___cosdf$3214+1,___fladd@b+1
  4541   003084  C066  F045         	movff	___cosdf$3214+2,___fladd@b+2
  4542   003088  C067  F046         	movff	___cosdf$3214+3,___fladd@b+3
  4543   00308C  ECE2  F00A         	call	___fladd	;wreg free
  4544   003090  C043  F06C         	movff	?___fladd,___cosdf$3216
  4545   003094  C044  F06D         	movff	?___fladd+1,___cosdf$3216+1
  4546   003098  C045  F06E         	movff	?___fladd+2,___cosdf$3216+2
  4547   00309C  C046  F06F         	movff	?___fladd+3,___cosdf$3216+3
  4548   0030A0  C06C  F043         	movff	___cosdf$3216,___fladd@b
  4549   0030A4  C06D  F044         	movff	___cosdf$3216+1,___fladd@b+1
  4550   0030A8  C06E  F045         	movff	___cosdf$3216+2,___fladd@b+2
  4551   0030AC  C06F  F046         	movff	___cosdf$3216+3,___fladd@b+3
  4552   0030B0  C060  F015         	movff	___cosdf@r,___flmul@a
  4553   0030B4  C061  F016         	movff	___cosdf@r+1,___flmul@a+1
  4554   0030B8  C062  F017         	movff	___cosdf@r+2,___flmul@a+2
  4555   0030BC  C063  F018         	movff	___cosdf@r+3,___flmul@a+3
  4556   0030C0  C068  F011         	movff	___cosdf$3215,___flmul@b
  4557   0030C4  C069  F012         	movff	___cosdf$3215+1,___flmul@b+1
  4558   0030C8  C06A  F013         	movff	___cosdf$3215+2,___flmul@b+2
  4559   0030CC  C06B  F014         	movff	___cosdf$3215+3,___flmul@b+3
  4560   0030D0  EC42  F00D         	call	___flmul	;wreg free
  4561   0030D4  C011  F047         	movff	?___flmul,___fladd@a
  4562   0030D8  C012  F048         	movff	?___flmul+1,___fladd@a+1
  4563   0030DC  C013  F049         	movff	?___flmul+2,___fladd@a+2
  4564   0030E0  C014  F04A         	movff	?___flmul+3,___fladd@a+3
  4565   0030E4  ECE2  F00A         	call	___fladd	;wreg free
  4566   0030E8  C043  F053         	movff	?___fladd,?___cosdf
  4567   0030EC  C044  F054         	movff	?___fladd+1,?___cosdf+1
  4568   0030F0  C045  F055         	movff	?___fladd+2,?___cosdf+2
  4569   0030F4  C046  F056         	movff	?___fladd+3,?___cosdf+3
  4570   0030F8  0012               	return		;funcret
  4571   0030FA                     __end_of___cosdf:
  4572                           	callstack 0
  4573                           
  4574 ;; *************** function ___flmul *****************
  4575 ;; Defined at:
  4576 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  b               4   16[COMRAM] float 
  4579 ;;  a               4   20[COMRAM] float 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  prod            4   35[COMRAM] struct .
  4582 ;;  grs             4   29[COMRAM] unsigned long 
  4583 ;;  temp            2   39[COMRAM] struct .
  4584 ;;  bexp            1   34[COMRAM] unsigned char 
  4585 ;;  aexp            1   33[COMRAM] unsigned char 
  4586 ;;  sign            1   28[COMRAM] unsigned char 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  4   16[COMRAM] unsigned char 
  4589 ;; Registers used:
  4590 ;;		wreg, status,2, status,0, prodl, prodh
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4596 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4600 ;;Total ram usage:       25 bytes
  4601 ;; Hardware stack levels used: 1
  4602 ;; Hardware stack levels required when called: 1
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_runDAC
  4607 ;;		___cosdf
  4608 ;;		___rem_pio2f
  4609 ;;		___sindf
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           	psect	text18
  4614   001A84                     __ptext18:
  4615                           	callstack 0
  4616   001A84                     ___flmul:
  4617                           	callstack 26
  4618   001A84  5014               	movf	(___flmul@b+3)^0,w,c
  4619   001A86  0B80               	andlw	128
  4620   001A88  6E1D               	movwf	___flmul@sign^0,c
  4621   001A8A  5014               	movf	(___flmul@b+3)^0,w,c
  4622   001A8C  2414               	addwf	(___flmul@b+3)^0,w,c
  4623   001A8E  6E23               	movwf	___flmul@bexp^0,c
  4624   001A90  AE13               	btfss	(___flmul@b+2)^0,7,c
  4625   001A92  EF4D  F00D         	goto	u3081
  4626   001A96  EF4F  F00D         	goto	u3080
  4627   001A9A                     u3081:
  4628   001A9A  EF50  F00D         	goto	l3033
  4629   001A9E                     u3080:
  4630   001A9E  8023               	bsf	___flmul@bexp^0,0,c
  4631   001AA0                     l3033:
  4632   001AA0  5023               	movf	___flmul@bexp^0,w,c
  4633   001AA2  B4D8               	btfsc	status,2,c
  4634   001AA4  EF56  F00D         	goto	u3091
  4635   001AA8  EF58  F00D         	goto	u3090
  4636   001AAC                     u3091:
  4637   001AAC  EF6B  F00D         	goto	l3041
  4638   001AB0                     u3090:
  4639   001AB0  2823               	incf	___flmul@bexp^0,w,c
  4640   001AB2  A4D8               	btfss	status,2,c
  4641   001AB4  EF5E  F00D         	goto	u3101
  4642   001AB8  EF60  F00D         	goto	u3100
  4643   001ABC                     u3101:
  4644   001ABC  EF68  F00D         	goto	l3039
  4645   001AC0                     u3100:
  4646   001AC0  0E00               	movlw	0
  4647   001AC2  6E11               	movwf	___flmul@b^0,c
  4648   001AC4  0E00               	movlw	0
  4649   001AC6  6E12               	movwf	(___flmul@b+1)^0,c
  4650   001AC8  0E00               	movlw	0
  4651   001ACA  6E13               	movwf	(___flmul@b+2)^0,c
  4652   001ACC  0E00               	movlw	0
  4653   001ACE  6E14               	movwf	(___flmul@b+3)^0,c
  4654   001AD0                     l3039:
  4655   001AD0  8E13               	bsf	(___flmul@b+2)^0,7,c
  4656   001AD2  EF73  F00D         	goto	l3043
  4657   001AD6                     l3041:
  4658   001AD6  0E00               	movlw	0
  4659   001AD8  6E11               	movwf	___flmul@b^0,c
  4660   001ADA  0E00               	movlw	0
  4661   001ADC  6E12               	movwf	(___flmul@b+1)^0,c
  4662   001ADE  0E00               	movlw	0
  4663   001AE0  6E13               	movwf	(___flmul@b+2)^0,c
  4664   001AE2  0E00               	movlw	0
  4665   001AE4  6E14               	movwf	(___flmul@b+3)^0,c
  4666   001AE6                     l3043:
  4667   001AE6  5018               	movf	(___flmul@a+3)^0,w,c
  4668   001AE8  0B80               	andlw	128
  4669   001AEA  1A1D               	xorwf	___flmul@sign^0,f,c
  4670   001AEC  5018               	movf	(___flmul@a+3)^0,w,c
  4671   001AEE  2418               	addwf	(___flmul@a+3)^0,w,c
  4672   001AF0  6E22               	movwf	___flmul@aexp^0,c
  4673   001AF2  AE17               	btfss	(___flmul@a+2)^0,7,c
  4674   001AF4  EF7E  F00D         	goto	u3111
  4675   001AF8  EF80  F00D         	goto	u3110
  4676   001AFC                     u3111:
  4677   001AFC  EF81  F00D         	goto	l3051
  4678   001B00                     u3110:
  4679   001B00  8022               	bsf	___flmul@aexp^0,0,c
  4680   001B02                     l3051:
  4681   001B02  5022               	movf	___flmul@aexp^0,w,c
  4682   001B04  B4D8               	btfsc	status,2,c
  4683   001B06  EF87  F00D         	goto	u3121
  4684   001B0A  EF89  F00D         	goto	u3120
  4685   001B0E                     u3121:
  4686   001B0E  EF9C  F00D         	goto	l3059
  4687   001B12                     u3120:
  4688   001B12  2822               	incf	___flmul@aexp^0,w,c
  4689   001B14  A4D8               	btfss	status,2,c
  4690   001B16  EF8F  F00D         	goto	u3131
  4691   001B1A  EF91  F00D         	goto	u3130
  4692   001B1E                     u3131:
  4693   001B1E  EF99  F00D         	goto	l3057
  4694   001B22                     u3130:
  4695   001B22  0E00               	movlw	0
  4696   001B24  6E15               	movwf	___flmul@a^0,c
  4697   001B26  0E00               	movlw	0
  4698   001B28  6E16               	movwf	(___flmul@a+1)^0,c
  4699   001B2A  0E00               	movlw	0
  4700   001B2C  6E17               	movwf	(___flmul@a+2)^0,c
  4701   001B2E  0E00               	movlw	0
  4702   001B30  6E18               	movwf	(___flmul@a+3)^0,c
  4703   001B32                     l3057:
  4704   001B32  8E17               	bsf	(___flmul@a+2)^0,7,c
  4705   001B34  EFA4  F00D         	goto	l961
  4706   001B38                     l3059:
  4707   001B38  0E00               	movlw	0
  4708   001B3A  6E15               	movwf	___flmul@a^0,c
  4709   001B3C  0E00               	movlw	0
  4710   001B3E  6E16               	movwf	(___flmul@a+1)^0,c
  4711   001B40  0E00               	movlw	0
  4712   001B42  6E17               	movwf	(___flmul@a+2)^0,c
  4713   001B44  0E00               	movlw	0
  4714   001B46  6E18               	movwf	(___flmul@a+3)^0,c
  4715   001B48                     l961:
  4716   001B48  5022               	movf	___flmul@aexp^0,w,c
  4717   001B4A  B4D8               	btfsc	status,2,c
  4718   001B4C  EFAA  F00D         	goto	u3141
  4719   001B50  EFAC  F00D         	goto	u3140
  4720   001B54                     u3141:
  4721   001B54  EFB4  F00D         	goto	l3063
  4722   001B58                     u3140:
  4723   001B58  5023               	movf	___flmul@bexp^0,w,c
  4724   001B5A  A4D8               	btfss	status,2,c
  4725   001B5C  EFB2  F00D         	goto	u3151
  4726   001B60  EFB4  F00D         	goto	u3150
  4727   001B64                     u3151:
  4728   001B64  EFBE  F00D         	goto	l3067
  4729   001B68                     u3150:
  4730   001B68                     l3063:
  4731   001B68  0E00               	movlw	0
  4732   001B6A  6E11               	movwf	?___flmul^0,c
  4733   001B6C  0E00               	movlw	0
  4734   001B6E  6E12               	movwf	(?___flmul+1)^0,c
  4735   001B70  0E00               	movlw	0
  4736   001B72  6E13               	movwf	(?___flmul+2)^0,c
  4737   001B74  0E00               	movlw	0
  4738   001B76  6E14               	movwf	(?___flmul+3)^0,c
  4739   001B78  EF56  F00F         	goto	l965
  4740   001B7C                     l3067:
  4741   001B7C  5017               	movf	(___flmul@a+2)^0,w,c
  4742   001B7E  0211               	mulwf	___flmul@b^0,c
  4743   001B80  CFF3 F028          	movff	prodl,___flmul@temp
  4744   001B84  CFF4 F029          	movff	prodh,___flmul@temp+1
  4745   001B88  5028               	movf	___flmul@temp^0,w,c
  4746   001B8A  6E1E               	movwf	___flmul@grs^0,c
  4747   001B8C  6A1F               	clrf	(___flmul@grs+1)^0,c
  4748   001B8E  6A20               	clrf	(___flmul@grs+2)^0,c
  4749   001B90  6A21               	clrf	(___flmul@grs+3)^0,c
  4750   001B92  5029               	movf	(___flmul@temp+1)^0,w,c
  4751   001B94  6E24               	movwf	___flmul@prod^0,c
  4752   001B96  6A25               	clrf	(___flmul@prod+1)^0,c
  4753   001B98  6A26               	clrf	(___flmul@prod+2)^0,c
  4754   001B9A  6A27               	clrf	(___flmul@prod+3)^0,c
  4755   001B9C  5016               	movf	(___flmul@a+1)^0,w,c
  4756   001B9E  0212               	mulwf	(___flmul@b+1)^0,c
  4757   001BA0  CFF3 F028          	movff	prodl,___flmul@temp
  4758   001BA4  CFF4 F029          	movff	prodh,___flmul@temp+1
  4759   001BA8  5028               	movf	___flmul@temp^0,w,c
  4760   001BAA  261E               	addwf	___flmul@grs^0,f,c
  4761   001BAC  0E00               	movlw	0
  4762   001BAE  221F               	addwfc	(___flmul@grs+1)^0,f,c
  4763   001BB0  2220               	addwfc	(___flmul@grs+2)^0,f,c
  4764   001BB2  2221               	addwfc	(___flmul@grs+3)^0,f,c
  4765   001BB4  5029               	movf	(___flmul@temp+1)^0,w,c
  4766   001BB6  2624               	addwf	___flmul@prod^0,f,c
  4767   001BB8  0E00               	movlw	0
  4768   001BBA  2225               	addwfc	(___flmul@prod+1)^0,f,c
  4769   001BBC  2226               	addwfc	(___flmul@prod+2)^0,f,c
  4770   001BBE  2227               	addwfc	(___flmul@prod+3)^0,f,c
  4771   001BC0  5015               	movf	___flmul@a^0,w,c
  4772   001BC2  0213               	mulwf	(___flmul@b+2)^0,c
  4773   001BC4  CFF3 F028          	movff	prodl,___flmul@temp
  4774   001BC8  CFF4 F029          	movff	prodh,___flmul@temp+1
  4775   001BCC  5028               	movf	___flmul@temp^0,w,c
  4776   001BCE  261E               	addwf	___flmul@grs^0,f,c
  4777   001BD0  0E00               	movlw	0
  4778   001BD2  221F               	addwfc	(___flmul@grs+1)^0,f,c
  4779   001BD4  2220               	addwfc	(___flmul@grs+2)^0,f,c
  4780   001BD6  2221               	addwfc	(___flmul@grs+3)^0,f,c
  4781   001BD8  5029               	movf	(___flmul@temp+1)^0,w,c
  4782   001BDA  2624               	addwf	___flmul@prod^0,f,c
  4783   001BDC  0E00               	movlw	0
  4784   001BDE  2225               	addwfc	(___flmul@prod+1)^0,f,c
  4785   001BE0  2226               	addwfc	(___flmul@prod+2)^0,f,c
  4786   001BE2  2227               	addwfc	(___flmul@prod+3)^0,f,c
  4787   001BE4  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  4788   001BE8  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  4789   001BEC  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  4790   001BF0  6A1E               	clrf	___flmul@grs^0,c
  4791   001BF2  5015               	movf	___flmul@a^0,w,c
  4792   001BF4  0212               	mulwf	(___flmul@b+1)^0,c
  4793   001BF6  CFF3 F028          	movff	prodl,___flmul@temp
  4794   001BFA  CFF4 F029          	movff	prodh,___flmul@temp+1
  4795   001BFE  5028               	movf	___flmul@temp^0,w,c
  4796   001C00  261E               	addwf	___flmul@grs^0,f,c
  4797   001C02  5029               	movf	(___flmul@temp+1)^0,w,c
  4798   001C04  221F               	addwfc	(___flmul@grs+1)^0,f,c
  4799   001C06  0E00               	movlw	0
  4800   001C08  2220               	addwfc	(___flmul@grs+2)^0,f,c
  4801   001C0A  0E00               	movlw	0
  4802   001C0C  2221               	addwfc	(___flmul@grs+3)^0,f,c
  4803   001C0E  5016               	movf	(___flmul@a+1)^0,w,c
  4804   001C10  0211               	mulwf	___flmul@b^0,c
  4805   001C12  CFF3 F028          	movff	prodl,___flmul@temp
  4806   001C16  CFF4 F029          	movff	prodh,___flmul@temp+1
  4807   001C1A  5028               	movf	___flmul@temp^0,w,c
  4808   001C1C  261E               	addwf	___flmul@grs^0,f,c
  4809   001C1E  5029               	movf	(___flmul@temp+1)^0,w,c
  4810   001C20  221F               	addwfc	(___flmul@grs+1)^0,f,c
  4811   001C22  0E00               	movlw	0
  4812   001C24  2220               	addwfc	(___flmul@grs+2)^0,f,c
  4813   001C26  0E00               	movlw	0
  4814   001C28  2221               	addwfc	(___flmul@grs+3)^0,f,c
  4815   001C2A  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  4816   001C2E  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  4817   001C32  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  4818   001C36  6A1E               	clrf	___flmul@grs^0,c
  4819   001C38  5015               	movf	___flmul@a^0,w,c
  4820   001C3A  0211               	mulwf	___flmul@b^0,c
  4821   001C3C  CFF3 F028          	movff	prodl,___flmul@temp
  4822   001C40  CFF4 F029          	movff	prodh,___flmul@temp+1
  4823   001C44  5028               	movf	___flmul@temp^0,w,c
  4824   001C46  261E               	addwf	___flmul@grs^0,f,c
  4825   001C48  5029               	movf	(___flmul@temp+1)^0,w,c
  4826   001C4A  221F               	addwfc	(___flmul@grs+1)^0,f,c
  4827   001C4C  0E00               	movlw	0
  4828   001C4E  2220               	addwfc	(___flmul@grs+2)^0,f,c
  4829   001C50  0E00               	movlw	0
  4830   001C52  2221               	addwfc	(___flmul@grs+3)^0,f,c
  4831   001C54  5017               	movf	(___flmul@a+2)^0,w,c
  4832   001C56  0212               	mulwf	(___flmul@b+1)^0,c
  4833   001C58  CFF3 F028          	movff	prodl,___flmul@temp
  4834   001C5C  CFF4 F029          	movff	prodh,___flmul@temp+1
  4835   001C60  5028               	movf	___flmul@temp^0,w,c
  4836   001C62  2624               	addwf	___flmul@prod^0,f,c
  4837   001C64  5029               	movf	(___flmul@temp+1)^0,w,c
  4838   001C66  2225               	addwfc	(___flmul@prod+1)^0,f,c
  4839   001C68  0E00               	movlw	0
  4840   001C6A  2226               	addwfc	(___flmul@prod+2)^0,f,c
  4841   001C6C  0E00               	movlw	0
  4842   001C6E  2227               	addwfc	(___flmul@prod+3)^0,f,c
  4843   001C70  5016               	movf	(___flmul@a+1)^0,w,c
  4844   001C72  0213               	mulwf	(___flmul@b+2)^0,c
  4845   001C74  CFF3 F028          	movff	prodl,___flmul@temp
  4846   001C78  CFF4 F029          	movff	prodh,___flmul@temp+1
  4847   001C7C  5028               	movf	___flmul@temp^0,w,c
  4848   001C7E  2624               	addwf	___flmul@prod^0,f,c
  4849   001C80  5029               	movf	(___flmul@temp+1)^0,w,c
  4850   001C82  2225               	addwfc	(___flmul@prod+1)^0,f,c
  4851   001C84  0E00               	movlw	0
  4852   001C86  2226               	addwfc	(___flmul@prod+2)^0,f,c
  4853   001C88  0E00               	movlw	0
  4854   001C8A  2227               	addwfc	(___flmul@prod+3)^0,f,c
  4855   001C8C  5017               	movf	(___flmul@a+2)^0,w,c
  4856   001C8E  0213               	mulwf	(___flmul@b+2)^0,c
  4857   001C90  CFF3 F028          	movff	prodl,___flmul@temp
  4858   001C94  CFF4 F029          	movff	prodh,___flmul@temp+1
  4859   001C98  5028               	movf	___flmul@temp^0,w,c
  4860   001C9A  6E19               	movwf	??___flmul^0,c
  4861   001C9C  5029               	movf	(___flmul@temp+1)^0,w,c
  4862   001C9E  6E1A               	movwf	(??___flmul+1)^0,c
  4863   001CA0  6A1B               	clrf	(??___flmul+2)^0,c
  4864   001CA2  6A1C               	clrf	(??___flmul+3)^0,c
  4865   001CA4  C01B  F01C         	movff	??___flmul+2,??___flmul+3
  4866   001CA8  C01A  F01B         	movff	??___flmul+1,??___flmul+2
  4867   001CAC  C019  F01A         	movff	??___flmul,??___flmul+1
  4868   001CB0  6A19               	clrf	??___flmul^0,c
  4869   001CB2  5019               	movf	??___flmul^0,w,c
  4870   001CB4  2624               	addwf	___flmul@prod^0,f,c
  4871   001CB6  501A               	movf	(??___flmul+1)^0,w,c
  4872   001CB8  2225               	addwfc	(___flmul@prod+1)^0,f,c
  4873   001CBA  501B               	movf	(??___flmul+2)^0,w,c
  4874   001CBC  2226               	addwfc	(___flmul@prod+2)^0,f,c
  4875   001CBE  501C               	movf	(??___flmul+3)^0,w,c
  4876   001CC0  2227               	addwfc	(___flmul@prod+3)^0,f,c
  4877   001CC2  C01E  F019         	movff	___flmul@grs,??___flmul
  4878   001CC6  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
  4879   001CCA  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
  4880   001CCE  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
  4881   001CD2  0E19               	movlw	25
  4882   001CD4  EF71  F00E         	goto	u3160
  4883   001CD8                     u3165:
  4884   001CD8  90D8               	bcf	status,0,c
  4885   001CDA  321C               	rrcf	(??___flmul+3)^0,f,c
  4886   001CDC  321B               	rrcf	(??___flmul+2)^0,f,c
  4887   001CDE  321A               	rrcf	(??___flmul+1)^0,f,c
  4888   001CE0  3219               	rrcf	??___flmul^0,f,c
  4889   001CE2                     u3160:
  4890   001CE2  2EE8               	decfsz	wreg,f,c
  4891   001CE4  EF6C  F00E         	goto	u3165
  4892   001CE8  5019               	movf	??___flmul^0,w,c
  4893   001CEA  2624               	addwf	___flmul@prod^0,f,c
  4894   001CEC  501A               	movf	(??___flmul+1)^0,w,c
  4895   001CEE  2225               	addwfc	(___flmul@prod+1)^0,f,c
  4896   001CF0  501B               	movf	(??___flmul+2)^0,w,c
  4897   001CF2  2226               	addwfc	(___flmul@prod+2)^0,f,c
  4898   001CF4  501C               	movf	(??___flmul+3)^0,w,c
  4899   001CF6  2227               	addwfc	(___flmul@prod+3)^0,f,c
  4900   001CF8  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  4901   001CFC  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  4902   001D00  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  4903   001D04  6A1E               	clrf	___flmul@grs^0,c
  4904   001D06  5022               	movf	___flmul@aexp^0,w,c
  4905   001D08  C023  F019         	movff	___flmul@bexp,??___flmul
  4906   001D0C  6A1A               	clrf	(??___flmul+1)^0,c
  4907   001D0E  2619               	addwf	??___flmul^0,f,c
  4908   001D10  0E00               	movlw	0
  4909   001D12  221A               	addwfc	(??___flmul+1)^0,f,c
  4910   001D14  0E82               	movlw	130
  4911   001D16  2419               	addwf	??___flmul^0,w,c
  4912   001D18  6E28               	movwf	___flmul@temp^0,c
  4913   001D1A  0EFF               	movlw	255
  4914   001D1C  201A               	addwfc	(??___flmul+1)^0,w,c
  4915   001D1E  6E29               	movwf	(___flmul@temp+1)^0,c
  4916   001D20  EFA7  F00E         	goto	l3115
  4917   001D24                     l3109:
  4918   001D24  90D8               	bcf	status,0,c
  4919   001D26  3624               	rlcf	___flmul@prod^0,f,c
  4920   001D28  3625               	rlcf	(___flmul@prod+1)^0,f,c
  4921   001D2A  3626               	rlcf	(___flmul@prod+2)^0,f,c
  4922   001D2C  3627               	rlcf	(___flmul@prod+3)^0,f,c
  4923   001D2E  AE21               	btfss	(___flmul@grs+3)^0,7,c
  4924   001D30  EF9C  F00E         	goto	u3171
  4925   001D34  EF9E  F00E         	goto	u3170
  4926   001D38                     u3171:
  4927   001D38  EF9F  F00E         	goto	l968
  4928   001D3C                     u3170:
  4929   001D3C  8024               	bsf	___flmul@prod^0,0,c
  4930   001D3E                     l968:
  4931   001D3E  90D8               	bcf	status,0,c
  4932   001D40  361E               	rlcf	___flmul@grs^0,f,c
  4933   001D42  361F               	rlcf	(___flmul@grs+1)^0,f,c
  4934   001D44  3620               	rlcf	(___flmul@grs+2)^0,f,c
  4935   001D46  3621               	rlcf	(___flmul@grs+3)^0,f,c
  4936   001D48  0628               	decf	___flmul@temp^0,f,c
  4937   001D4A  A0D8               	btfss	status,0,c
  4938   001D4C  0629               	decf	(___flmul@temp+1)^0,f,c
  4939   001D4E                     l3115:
  4940   001D4E  AE26               	btfss	(___flmul@prod+2)^0,7,c
  4941   001D50  EFAC  F00E         	goto	u3181
  4942   001D54  EFAE  F00E         	goto	u3180
  4943   001D58                     u3181:
  4944   001D58  EF92  F00E         	goto	l3109
  4945   001D5C                     u3180:
  4946   001D5C  0E00               	movlw	0
  4947   001D5E  6E22               	movwf	___flmul@aexp^0,c
  4948   001D60  AE21               	btfss	(___flmul@grs+3)^0,7,c
  4949   001D62  EFB5  F00E         	goto	u3191
  4950   001D66  EFB7  F00E         	goto	u3190
  4951   001D6A                     u3191:
  4952   001D6A  EFDB  F00E         	goto	l970
  4953   001D6E                     u3190:
  4954   001D6E  0EFF               	movlw	255
  4955   001D70  141E               	andwf	___flmul@grs^0,w,c
  4956   001D72  6E19               	movwf	??___flmul^0,c
  4957   001D74  0EFF               	movlw	255
  4958   001D76  141F               	andwf	(___flmul@grs+1)^0,w,c
  4959   001D78  6E1A               	movwf	(??___flmul+1)^0,c
  4960   001D7A  0EFF               	movlw	255
  4961   001D7C  1420               	andwf	(___flmul@grs+2)^0,w,c
  4962   001D7E  6E1B               	movwf	(??___flmul+2)^0,c
  4963   001D80  0E7F               	movlw	127
  4964   001D82  1421               	andwf	(___flmul@grs+3)^0,w,c
  4965   001D84  6E1C               	movwf	(??___flmul+3)^0,c
  4966   001D86  5019               	movf	??___flmul^0,w,c
  4967   001D88  101A               	iorwf	(??___flmul+1)^0,w,c
  4968   001D8A  101B               	iorwf	(??___flmul+2)^0,w,c
  4969   001D8C  101C               	iorwf	(??___flmul+3)^0,w,c
  4970   001D8E  B4D8               	btfsc	status,2,c
  4971   001D90  EFCC  F00E         	goto	u3201
  4972   001D94  EFCE  F00E         	goto	u3200
  4973   001D98                     u3201:
  4974   001D98  EFD2  F00E         	goto	l971
  4975   001D9C                     u3200:
  4976   001D9C                     l3123:
  4977   001D9C  0E01               	movlw	1
  4978   001D9E  6E22               	movwf	___flmul@aexp^0,c
  4979   001DA0  EFDB  F00E         	goto	l970
  4980   001DA4                     l971:
  4981   001DA4  A024               	btfss	___flmul@prod^0,0,c
  4982   001DA6  EFD7  F00E         	goto	u3211
  4983   001DAA  EFD9  F00E         	goto	u3210
  4984   001DAE                     u3211:
  4985   001DAE  EFDB  F00E         	goto	l970
  4986   001DB2                     u3210:
  4987   001DB2  EFCE  F00E         	goto	l3123
  4988   001DB6                     l970:
  4989   001DB6  5022               	movf	___flmul@aexp^0,w,c
  4990   001DB8  B4D8               	btfsc	status,2,c
  4991   001DBA  EFE1  F00E         	goto	u3221
  4992   001DBE  EFE3  F00E         	goto	u3220
  4993   001DC2                     u3221:
  4994   001DC2  EF07  F00F         	goto	l3135
  4995   001DC6                     u3220:
  4996   001DC6  0E01               	movlw	1
  4997   001DC8  2624               	addwf	___flmul@prod^0,f,c
  4998   001DCA  0E00               	movlw	0
  4999   001DCC  2225               	addwfc	(___flmul@prod+1)^0,f,c
  5000   001DCE  2226               	addwfc	(___flmul@prod+2)^0,f,c
  5001   001DD0  2227               	addwfc	(___flmul@prod+3)^0,f,c
  5002   001DD2  A027               	btfss	(___flmul@prod+3)^0,0,c
  5003   001DD4  EFEE  F00E         	goto	u3231
  5004   001DD8  EFF0  F00E         	goto	u3230
  5005   001DDC                     u3231:
  5006   001DDC  EF07  F00F         	goto	l3135
  5007   001DE0                     u3230:
  5008   001DE0  C024  F019         	movff	___flmul@prod,??___flmul
  5009   001DE4  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
  5010   001DE8  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
  5011   001DEC  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
  5012   001DF0  341C               	rlcf	(??___flmul+3)^0,w,c
  5013   001DF2  321C               	rrcf	(??___flmul+3)^0,f,c
  5014   001DF4  321B               	rrcf	(??___flmul+2)^0,f,c
  5015   001DF6  321A               	rrcf	(??___flmul+1)^0,f,c
  5016   001DF8  3219               	rrcf	??___flmul^0,f,c
  5017   001DFA  C019  F024         	movff	??___flmul,___flmul@prod
  5018   001DFE  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
  5019   001E02  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
  5020   001E06  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
  5021   001E0A  4A28               	infsnz	___flmul@temp^0,f,c
  5022   001E0C  2A29               	incf	(___flmul@temp+1)^0,f,c
  5023   001E0E                     l3135:
  5024   001E0E  BE29               	btfsc	(___flmul@temp+1)^0,7,c
  5025   001E10  EF12  F00F         	goto	u3241
  5026   001E14  5029               	movf	(___flmul@temp+1)^0,w,c
  5027   001E16  E108               	bnz	u3240
  5028   001E18  2828               	incf	___flmul@temp^0,w,c
  5029   001E1A  A0D8               	btfss	status,0,c
  5030   001E1C  EF12  F00F         	goto	u3241
  5031   001E20  EF14  F00F         	goto	u3240
  5032   001E24                     u3241:
  5033   001E24  EF1E  F00F         	goto	l3139
  5034   001E28                     u3240:
  5035   001E28  0E00               	movlw	0
  5036   001E2A  6E24               	movwf	___flmul@prod^0,c
  5037   001E2C  0E00               	movlw	0
  5038   001E2E  6E25               	movwf	(___flmul@prod+1)^0,c
  5039   001E30  0E80               	movlw	128
  5040   001E32  6E26               	movwf	(___flmul@prod+2)^0,c
  5041   001E34  0E7F               	movlw	127
  5042   001E36  6E27               	movwf	(___flmul@prod+3)^0,c
  5043   001E38  EF4C  F00F         	goto	l3151
  5044   001E3C                     l3139:
  5045   001E3C  BE29               	btfsc	(___flmul@temp+1)^0,7,c
  5046   001E3E  EF2B  F00F         	goto	u3250
  5047   001E42  5029               	movf	(___flmul@temp+1)^0,w,c
  5048   001E44  E106               	bnz	u3251
  5049   001E46  0428               	decf	___flmul@temp^0,w,c
  5050   001E48  B0D8               	btfsc	status,0,c
  5051   001E4A  EF29  F00F         	goto	u3251
  5052   001E4E  EF2B  F00F         	goto	u3250
  5053   001E52                     u3251:
  5054   001E52  EF37  F00F         	goto	l978
  5055   001E56                     u3250:
  5056   001E56  0E00               	movlw	0
  5057   001E58  6E24               	movwf	___flmul@prod^0,c
  5058   001E5A  0E00               	movlw	0
  5059   001E5C  6E25               	movwf	(___flmul@prod+1)^0,c
  5060   001E5E  0E00               	movlw	0
  5061   001E60  6E26               	movwf	(___flmul@prod+2)^0,c
  5062   001E62  0E00               	movlw	0
  5063   001E64  6E27               	movwf	(___flmul@prod+3)^0,c
  5064   001E66  0E00               	movlw	0
  5065   001E68  6E1D               	movwf	___flmul@sign^0,c
  5066   001E6A  EF4C  F00F         	goto	l3151
  5067   001E6E                     l978:
  5068   001E6E  C028  F023         	movff	___flmul@temp,___flmul@bexp
  5069   001E72  0EFF               	movlw	255
  5070   001E74  1624               	andwf	___flmul@prod^0,f,c
  5071   001E76  0EFF               	movlw	255
  5072   001E78  1625               	andwf	(___flmul@prod+1)^0,f,c
  5073   001E7A  0E7F               	movlw	127
  5074   001E7C  1626               	andwf	(___flmul@prod+2)^0,f,c
  5075   001E7E  0E00               	movlw	0
  5076   001E80  1627               	andwf	(___flmul@prod+3)^0,f,c
  5077   001E82  A023               	btfss	___flmul@bexp^0,0,c
  5078   001E84  EF46  F00F         	goto	u3261
  5079   001E88  EF48  F00F         	goto	u3260
  5080   001E8C                     u3261:
  5081   001E8C  EF49  F00F         	goto	l3149
  5082   001E90                     u3260:
  5083   001E90  8E26               	bsf	(___flmul@prod+2)^0,7,c
  5084   001E92                     l3149:
  5085   001E92  90D8               	bcf	status,0,c
  5086   001E94  3023               	rrcf	___flmul@bexp^0,w,c
  5087   001E96  6E27               	movwf	(___flmul@prod+3)^0,c
  5088   001E98                     l3151:
  5089   001E98  501D               	movf	___flmul@sign^0,w,c
  5090   001E9A  1227               	iorwf	(___flmul@prod+3)^0,f,c
  5091   001E9C  C024  F011         	movff	___flmul@prod,?___flmul
  5092   001EA0  C025  F012         	movff	___flmul@prod+1,?___flmul+1
  5093   001EA4  C026  F013         	movff	___flmul@prod+2,?___flmul+2
  5094   001EA8  C027  F014         	movff	___flmul@prod+3,?___flmul+3
  5095   001EAC                     l965:
  5096   001EAC  0012               	return		;funcret
  5097   001EAE                     __end_of___flmul:
  5098                           	callstack 0
  5099                           
  5100 ;; *************** function ___fladd *****************
  5101 ;; Defined at:
  5102 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;  b               4   66[COMRAM] unsigned char 
  5105 ;;  a               4   70[COMRAM] unsigned char 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  grs             1   81[COMRAM] unsigned char 
  5108 ;;  bexp            1   80[COMRAM] unsigned char 
  5109 ;;  aexp            1   79[COMRAM] unsigned char 
  5110 ;;  signs           1   78[COMRAM] unsigned char 
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  4   66[COMRAM] unsigned char 
  5113 ;; Registers used:
  5114 ;;		wreg, status,2, status,0
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5120 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5121 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5122 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5123 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5124 ;;Total ram usage:       16 bytes
  5125 ;; Hardware stack levels used: 1
  5126 ;; Hardware stack levels required when called: 1
  5127 ;; This function calls:
  5128 ;;		Nothing
  5129 ;; This function is called by:
  5130 ;;		_runDAC
  5131 ;;		___flsub
  5132 ;;		_sinf
  5133 ;;		___cosdf
  5134 ;;		___rem_pio2f
  5135 ;;		___sindf
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text19
  5140   0015C4                     __ptext19:
  5141                           	callstack 0
  5142   0015C4                     ___fladd:
  5143                           	callstack 26
  5144   0015C4  5046               	movf	(___fladd@b+3)^0,w,c
  5145   0015C6  0B80               	andlw	128
  5146   0015C8  6E4F               	movwf	___fladd@signs^0,c
  5147   0015CA  5046               	movf	(___fladd@b+3)^0,w,c
  5148   0015CC  2446               	addwf	(___fladd@b+3)^0,w,c
  5149   0015CE  6E51               	movwf	___fladd@bexp^0,c
  5150   0015D0  AE45               	btfss	(___fladd@b+2)^0,7,c
  5151   0015D2  EFED  F00A         	goto	u2501
  5152   0015D6  EFEF  F00A         	goto	u2500
  5153   0015DA                     u2501:
  5154   0015DA  EFF0  F00A         	goto	l2739
  5155   0015DE                     u2500:
  5156   0015DE  8051               	bsf	___fladd@bexp^0,0,c
  5157   0015E0                     l2739:
  5158   0015E0  5051               	movf	___fladd@bexp^0,w,c
  5159   0015E2  B4D8               	btfsc	status,2,c
  5160   0015E4  EFF6  F00A         	goto	u2511
  5161   0015E8  EFF8  F00A         	goto	u2510
  5162   0015EC                     u2511:
  5163   0015EC  EF0D  F00B         	goto	l2749
  5164   0015F0                     u2510:
  5165   0015F0  2851               	incf	___fladd@bexp^0,w,c
  5166   0015F2  A4D8               	btfss	status,2,c
  5167   0015F4  EFFE  F00A         	goto	u2521
  5168   0015F8  EF00  F00B         	goto	u2520
  5169   0015FC                     u2521:
  5170   0015FC  EF08  F00B         	goto	l2745
  5171   001600                     u2520:
  5172   001600  0E00               	movlw	0
  5173   001602  6E43               	movwf	___fladd@b^0,c
  5174   001604  0E00               	movlw	0
  5175   001606  6E44               	movwf	(___fladd@b+1)^0,c
  5176   001608  0E00               	movlw	0
  5177   00160A  6E45               	movwf	(___fladd@b+2)^0,c
  5178   00160C  0E00               	movlw	0
  5179   00160E  6E46               	movwf	(___fladd@b+3)^0,c
  5180   001610                     l2745:
  5181   001610  8E45               	bsf	(___fladd@b+2)^0,7,c
  5182   001612  0E00               	movlw	0
  5183   001614  6E46               	movwf	(___fladd@b+3)^0,c
  5184   001616  EF15  F00B         	goto	l2751
  5185   00161A                     l2749:
  5186   00161A  0E00               	movlw	0
  5187   00161C  6E43               	movwf	___fladd@b^0,c
  5188   00161E  0E00               	movlw	0
  5189   001620  6E44               	movwf	(___fladd@b+1)^0,c
  5190   001622  0E00               	movlw	0
  5191   001624  6E45               	movwf	(___fladd@b+2)^0,c
  5192   001626  0E00               	movlw	0
  5193   001628  6E46               	movwf	(___fladd@b+3)^0,c
  5194   00162A                     l2751:
  5195   00162A  504A               	movf	(___fladd@a+3)^0,w,c
  5196   00162C  0B80               	andlw	128
  5197   00162E  6E50               	movwf	___fladd@aexp^0,c
  5198   001630  504F               	movf	___fladd@signs^0,w,c
  5199   001632  1850               	xorwf	___fladd@aexp^0,w,c
  5200   001634  B4D8               	btfsc	status,2,c
  5201   001636  EF1F  F00B         	goto	u2531
  5202   00163A  EF21  F00B         	goto	u2530
  5203   00163E                     u2531:
  5204   00163E  EF22  F00B         	goto	l2757
  5205   001642                     u2530:
  5206   001642  8C4F               	bsf	___fladd@signs^0,6,c
  5207   001644                     l2757:
  5208   001644  504A               	movf	(___fladd@a+3)^0,w,c
  5209   001646  244A               	addwf	(___fladd@a+3)^0,w,c
  5210   001648  6E50               	movwf	___fladd@aexp^0,c
  5211   00164A  AE49               	btfss	(___fladd@a+2)^0,7,c
  5212   00164C  EF2A  F00B         	goto	u2541
  5213   001650  EF2C  F00B         	goto	u2540
  5214   001654                     u2541:
  5215   001654  EF2D  F00B         	goto	l2763
  5216   001658                     u2540:
  5217   001658  8050               	bsf	___fladd@aexp^0,0,c
  5218   00165A                     l2763:
  5219   00165A  5050               	movf	___fladd@aexp^0,w,c
  5220   00165C  B4D8               	btfsc	status,2,c
  5221   00165E  EF33  F00B         	goto	u2551
  5222   001662  EF35  F00B         	goto	u2550
  5223   001666                     u2551:
  5224   001666  EF4A  F00B         	goto	l2773
  5225   00166A                     u2550:
  5226   00166A  2850               	incf	___fladd@aexp^0,w,c
  5227   00166C  A4D8               	btfss	status,2,c
  5228   00166E  EF3B  F00B         	goto	u2561
  5229   001672  EF3D  F00B         	goto	u2560
  5230   001676                     u2561:
  5231   001676  EF45  F00B         	goto	l2769
  5232   00167A                     u2560:
  5233   00167A  0E00               	movlw	0
  5234   00167C  6E47               	movwf	___fladd@a^0,c
  5235   00167E  0E00               	movlw	0
  5236   001680  6E48               	movwf	(___fladd@a+1)^0,c
  5237   001682  0E00               	movlw	0
  5238   001684  6E49               	movwf	(___fladd@a+2)^0,c
  5239   001686  0E00               	movlw	0
  5240   001688  6E4A               	movwf	(___fladd@a+3)^0,c
  5241   00168A                     l2769:
  5242   00168A  8E49               	bsf	(___fladd@a+2)^0,7,c
  5243   00168C  0E00               	movlw	0
  5244   00168E  6E4A               	movwf	(___fladd@a+3)^0,c
  5245   001690  EF52  F00B         	goto	l2775
  5246   001694                     l2773:
  5247   001694  0E00               	movlw	0
  5248   001696  6E47               	movwf	___fladd@a^0,c
  5249   001698  0E00               	movlw	0
  5250   00169A  6E48               	movwf	(___fladd@a+1)^0,c
  5251   00169C  0E00               	movlw	0
  5252   00169E  6E49               	movwf	(___fladd@a+2)^0,c
  5253   0016A0  0E00               	movlw	0
  5254   0016A2  6E4A               	movwf	(___fladd@a+3)^0,c
  5255   0016A4                     l2775:
  5256   0016A4  5051               	movf	___fladd@bexp^0,w,c
  5257   0016A6  5C50               	subwf	___fladd@aexp^0,w,c
  5258   0016A8  B0D8               	btfsc	status,0,c
  5259   0016AA  EF59  F00B         	goto	u2571
  5260   0016AE  EF5B  F00B         	goto	u2570
  5261   0016B2                     u2571:
  5262   0016B2  EF82  F00B         	goto	l2811
  5263   0016B6                     u2570:
  5264   0016B6  AC4F               	btfss	___fladd@signs^0,6,c
  5265   0016B8  EF60  F00B         	goto	u2581
  5266   0016BC  EF62  F00B         	goto	u2580
  5267   0016C0                     u2581:
  5268   0016C0  EF64  F00B         	goto	l2781
  5269   0016C4                     u2580:
  5270   0016C4  0E80               	movlw	128
  5271   0016C6  1A4F               	xorwf	___fladd@signs^0,f,c
  5272   0016C8                     l2781:
  5273   0016C8  C051  F052         	movff	___fladd@bexp,___fladd@grs
  5274   0016CC  C050  F051         	movff	___fladd@aexp,___fladd@bexp
  5275   0016D0  C052  F050         	movff	___fladd@grs,___fladd@aexp
  5276   0016D4  C043  F052         	movff	___fladd@b,___fladd@grs
  5277   0016D8  C047  F043         	movff	___fladd@a,___fladd@b
  5278   0016DC  C052  F047         	movff	___fladd@grs,___fladd@a
  5279   0016E0  C044  F052         	movff	___fladd@b+1,___fladd@grs
  5280   0016E4  C048  F044         	movff	___fladd@a+1,___fladd@b+1
  5281   0016E8  C052  F048         	movff	___fladd@grs,___fladd@a+1
  5282   0016EC  C045  F052         	movff	___fladd@b+2,___fladd@grs
  5283   0016F0  C049  F045         	movff	___fladd@a+2,___fladd@b+2
  5284   0016F4  C052  F049         	movff	___fladd@grs,___fladd@a+2
  5285   0016F8  C046  F052         	movff	___fladd@b+3,___fladd@grs
  5286   0016FC  C04A  F046         	movff	___fladd@a+3,___fladd@b+3
  5287   001700  C052  F04A         	movff	___fladd@grs,___fladd@a+3
  5288   001704                     l2811:
  5289   001704  0E00               	movlw	0
  5290   001706  6E52               	movwf	___fladd@grs^0,c
  5291   001708  5051               	movf	___fladd@bexp^0,w,c
  5292   00170A  C050  F04B         	movff	___fladd@aexp,??___fladd
  5293   00170E  6A4C               	clrf	(??___fladd+1)^0,c
  5294   001710  5E4B               	subwf	??___fladd^0,f,c
  5295   001712  0E00               	movlw	0
  5296   001714  5A4C               	subwfb	(??___fladd+1)^0,f,c
  5297   001716  BE4C               	btfsc	(??___fladd+1)^0,7,c
  5298   001718  EF97  F00B         	goto	u2591
  5299   00171C  504C               	movf	(??___fladd+1)^0,w,c
  5300   00171E  E109               	bnz	u2590
  5301   001720  0E1A               	movlw	26
  5302   001722  5C4B               	subwf	??___fladd^0,w,c
  5303   001724  A0D8               	btfss	status,0,c
  5304   001726  EF97  F00B         	goto	u2591
  5305   00172A  EF99  F00B         	goto	u2590
  5306   00172E                     u2591:
  5307   00172E  EFD0  F00B         	goto	l876
  5308   001732                     u2590:
  5309   001732  5043               	movf	___fladd@b^0,w,c
  5310   001734  1044               	iorwf	(___fladd@b+1)^0,w,c
  5311   001736  1045               	iorwf	(___fladd@b+2)^0,w,c
  5312   001738  1046               	iorwf	(___fladd@b+3)^0,w,c
  5313   00173A  A4D8               	btfss	status,2,c
  5314   00173C  EFA2  F00B         	goto	u2601
  5315   001740  EFA5  F00B         	goto	u2600
  5316   001744                     u2601:
  5317   001744  0E01               	movlw	1
  5318   001746  EFA6  F00B         	goto	u2610
  5319   00174A                     u2600:
  5320   00174A  0E00               	movlw	0
  5321   00174C                     u2610:
  5322   00174C  6E52               	movwf	___fladd@grs^0,c
  5323   00174E  0E00               	movlw	0
  5324   001750  6E43               	movwf	___fladd@b^0,c
  5325   001752  0E00               	movlw	0
  5326   001754  6E44               	movwf	(___fladd@b+1)^0,c
  5327   001756  0E00               	movlw	0
  5328   001758  6E45               	movwf	(___fladd@b+2)^0,c
  5329   00175A  0E00               	movlw	0
  5330   00175C  6E46               	movwf	(___fladd@b+3)^0,c
  5331   00175E  C050  F051         	movff	___fladd@aexp,___fladd@bexp
  5332   001762  EFD9  F00B         	goto	l875
  5333   001766                     l877:
  5334   001766  A052               	btfss	___fladd@grs^0,0,c
  5335   001768  EFB8  F00B         	goto	u2621
  5336   00176C  EFBA  F00B         	goto	u2620
  5337   001770                     u2621:
  5338   001770  EFC0  F00B         	goto	l2823
  5339   001774                     u2620:
  5340   001774  90D8               	bcf	status,0,c
  5341   001776  3052               	rrcf	___fladd@grs^0,w,c
  5342   001778  0901               	iorlw	1
  5343   00177A  6E52               	movwf	___fladd@grs^0,c
  5344   00177C  EFC2  F00B         	goto	l2825
  5345   001780                     l2823:
  5346   001780  90D8               	bcf	status,0,c
  5347   001782  3252               	rrcf	___fladd@grs^0,f,c
  5348   001784                     l2825:
  5349   001784  A043               	btfss	___fladd@b^0,0,c
  5350   001786  EFC7  F00B         	goto	u2631
  5351   00178A  EFC9  F00B         	goto	u2630
  5352   00178E                     u2631:
  5353   00178E  EFCA  F00B         	goto	l2829
  5354   001792                     u2630:
  5355   001792  8E52               	bsf	___fladd@grs^0,7,c
  5356   001794                     l2829:
  5357   001794  3446               	rlcf	(___fladd@b+3)^0,w,c
  5358   001796  3246               	rrcf	(___fladd@b+3)^0,f,c
  5359   001798  3245               	rrcf	(___fladd@b+2)^0,f,c
  5360   00179A  3244               	rrcf	(___fladd@b+1)^0,f,c
  5361   00179C  3243               	rrcf	___fladd@b^0,f,c
  5362   00179E  2A51               	incf	___fladd@bexp^0,f,c
  5363   0017A0                     l876:
  5364   0017A0  5050               	movf	___fladd@aexp^0,w,c
  5365   0017A2  5C51               	subwf	___fladd@bexp^0,w,c
  5366   0017A4  A0D8               	btfss	status,0,c
  5367   0017A6  EFD7  F00B         	goto	u2641
  5368   0017AA  EFD9  F00B         	goto	u2640
  5369   0017AE                     u2641:
  5370   0017AE  EFB3  F00B         	goto	l877
  5371   0017B2                     u2640:
  5372   0017B2                     l875:
  5373   0017B2  BC4F               	btfsc	___fladd@signs^0,6,c
  5374   0017B4  EFDE  F00B         	goto	u2651
  5375   0017B8  EFE0  F00B         	goto	u2650
  5376   0017BC                     u2651:
  5377   0017BC  EF20  F00C         	goto	l2857
  5378   0017C0                     u2650:
  5379   0017C0  5051               	movf	___fladd@bexp^0,w,c
  5380   0017C2  A4D8               	btfss	status,2,c
  5381   0017C4  EFE6  F00B         	goto	u2661
  5382   0017C8  EFE8  F00B         	goto	u2660
  5383   0017CC                     u2661:
  5384   0017CC  EFF2  F00B         	goto	l2839
  5385   0017D0                     u2660:
  5386   0017D0  0E00               	movlw	0
  5387   0017D2  6E43               	movwf	?___fladd^0,c
  5388   0017D4  0E00               	movlw	0
  5389   0017D6  6E44               	movwf	(?___fladd+1)^0,c
  5390   0017D8  0E00               	movlw	0
  5391   0017DA  6E45               	movwf	(?___fladd+2)^0,c
  5392   0017DC  0E00               	movlw	0
  5393   0017DE  6E46               	movwf	(?___fladd+3)^0,c
  5394   0017E0  EF41  F00D         	goto	l884
  5395   0017E4                     l2839:
  5396   0017E4  5047               	movf	___fladd@a^0,w,c
  5397   0017E6  2643               	addwf	___fladd@b^0,f,c
  5398   0017E8  5048               	movf	(___fladd@a+1)^0,w,c
  5399   0017EA  2244               	addwfc	(___fladd@b+1)^0,f,c
  5400   0017EC  5049               	movf	(___fladd@a+2)^0,w,c
  5401   0017EE  2245               	addwfc	(___fladd@b+2)^0,f,c
  5402   0017F0  504A               	movf	(___fladd@a+3)^0,w,c
  5403   0017F2  2246               	addwfc	(___fladd@b+3)^0,f,c
  5404   0017F4  A046               	btfss	(___fladd@b+3)^0,0,c
  5405   0017F6  EFFF  F00B         	goto	u2671
  5406   0017FA  EF01  F00C         	goto	u2670
  5407   0017FE                     u2671:
  5408   0017FE  EFAD  F00C         	goto	l2893
  5409   001802                     u2670:
  5410   001802  A052               	btfss	___fladd@grs^0,0,c
  5411   001804  EF06  F00C         	goto	u2681
  5412   001808  EF08  F00C         	goto	u2680
  5413   00180C                     u2681:
  5414   00180C  EF0E  F00C         	goto	l2847
  5415   001810                     u2680:
  5416   001810  90D8               	bcf	status,0,c
  5417   001812  3052               	rrcf	___fladd@grs^0,w,c
  5418   001814  0901               	iorlw	1
  5419   001816  6E52               	movwf	___fladd@grs^0,c
  5420   001818  EF10  F00C         	goto	l2849
  5421   00181C                     l2847:
  5422   00181C  90D8               	bcf	status,0,c
  5423   00181E  3252               	rrcf	___fladd@grs^0,f,c
  5424   001820                     l2849:
  5425   001820  A043               	btfss	___fladd@b^0,0,c
  5426   001822  EF15  F00C         	goto	u2691
  5427   001826  EF17  F00C         	goto	u2690
  5428   00182A                     u2691:
  5429   00182A  EF18  F00C         	goto	l2853
  5430   00182E                     u2690:
  5431   00182E  8E52               	bsf	___fladd@grs^0,7,c
  5432   001830                     l2853:
  5433   001830  3446               	rlcf	(___fladd@b+3)^0,w,c
  5434   001832  3246               	rrcf	(___fladd@b+3)^0,f,c
  5435   001834  3245               	rrcf	(___fladd@b+2)^0,f,c
  5436   001836  3244               	rrcf	(___fladd@b+1)^0,f,c
  5437   001838  3243               	rrcf	___fladd@b^0,f,c
  5438   00183A  2A51               	incf	___fladd@bexp^0,f,c
  5439   00183C  EFAD  F00C         	goto	l2893
  5440   001840                     l2857:
  5441   001840  5047               	movf	___fladd@a^0,w,c
  5442   001842  5C43               	subwf	___fladd@b^0,w,c
  5443   001844  5048               	movf	(___fladd@a+1)^0,w,c
  5444   001846  5844               	subwfb	(___fladd@b+1)^0,w,c
  5445   001848  5049               	movf	(___fladd@a+2)^0,w,c
  5446   00184A  5845               	subwfb	(___fladd@b+2)^0,w,c
  5447   00184C  5046               	movf	(___fladd@b+3)^0,w,c
  5448   00184E  0A80               	xorlw	128
  5449   001850  6E4B               	movwf	??___fladd^0,c
  5450   001852  504A               	movf	(___fladd@a+3)^0,w,c
  5451   001854  0A80               	xorlw	128
  5452   001856  584B               	subwfb	??___fladd^0,w,c
  5453   001858  B0D8               	btfsc	status,0,c
  5454   00185A  EF31  F00C         	goto	u2701
  5455   00185E  EF33  F00C         	goto	u2700
  5456   001862                     u2701:
  5457   001862  EF5E  F00C         	goto	l2867
  5458   001866                     u2700:
  5459   001866  5043               	movf	___fladd@b^0,w,c
  5460   001868  5C47               	subwf	___fladd@a^0,w,c
  5461   00186A  6E4B               	movwf	??___fladd^0,c
  5462   00186C  5044               	movf	(___fladd@b+1)^0,w,c
  5463   00186E  5848               	subwfb	(___fladd@a+1)^0,w,c
  5464   001870  6E4C               	movwf	(??___fladd+1)^0,c
  5465   001872  5045               	movf	(___fladd@b+2)^0,w,c
  5466   001874  5849               	subwfb	(___fladd@a+2)^0,w,c
  5467   001876  6E4D               	movwf	(??___fladd+2)^0,c
  5468   001878  5046               	movf	(___fladd@b+3)^0,w,c
  5469   00187A  584A               	subwfb	(___fladd@a+3)^0,w,c
  5470   00187C  6E4E               	movwf	(??___fladd+3)^0,c
  5471   00187E  0EFF               	movlw	255
  5472   001880  244B               	addwf	??___fladd^0,w,c
  5473   001882  6E43               	movwf	___fladd@b^0,c
  5474   001884  0EFF               	movlw	255
  5475   001886  204C               	addwfc	(??___fladd+1)^0,w,c
  5476   001888  6E44               	movwf	(___fladd@b+1)^0,c
  5477   00188A  0EFF               	movlw	255
  5478   00188C  204D               	addwfc	(??___fladd+2)^0,w,c
  5479   00188E  6E45               	movwf	(___fladd@b+2)^0,c
  5480   001890  0EFF               	movlw	255
  5481   001892  204E               	addwfc	(??___fladd+3)^0,w,c
  5482   001894  6E46               	movwf	(___fladd@b+3)^0,c
  5483   001896  0E80               	movlw	128
  5484   001898  1A4F               	xorwf	___fladd@signs^0,f,c
  5485   00189A  6C52               	negf	___fladd@grs^0,c
  5486   00189C  5052               	movf	___fladd@grs^0,w,c
  5487   00189E  A4D8               	btfss	status,2,c
  5488   0018A0  EF54  F00C         	goto	u2711
  5489   0018A4  EF56  F00C         	goto	u2710
  5490   0018A8                     u2711:
  5491   0018A8  EF66  F00C         	goto	l892
  5492   0018AC                     u2710:
  5493   0018AC  0E01               	movlw	1
  5494   0018AE  2643               	addwf	___fladd@b^0,f,c
  5495   0018B0  0E00               	movlw	0
  5496   0018B2  2244               	addwfc	(___fladd@b+1)^0,f,c
  5497   0018B4  2245               	addwfc	(___fladd@b+2)^0,f,c
  5498   0018B6  2246               	addwfc	(___fladd@b+3)^0,f,c
  5499   0018B8  EF66  F00C         	goto	l892
  5500   0018BC                     l2867:
  5501   0018BC  5047               	movf	___fladd@a^0,w,c
  5502   0018BE  5E43               	subwf	___fladd@b^0,f,c
  5503   0018C0  5048               	movf	(___fladd@a+1)^0,w,c
  5504   0018C2  5A44               	subwfb	(___fladd@b+1)^0,f,c
  5505   0018C4  5049               	movf	(___fladd@a+2)^0,w,c
  5506   0018C6  5A45               	subwfb	(___fladd@b+2)^0,f,c
  5507   0018C8  504A               	movf	(___fladd@a+3)^0,w,c
  5508   0018CA  5A46               	subwfb	(___fladd@b+3)^0,f,c
  5509   0018CC                     l892:
  5510   0018CC  5043               	movf	___fladd@b^0,w,c
  5511   0018CE  1044               	iorwf	(___fladd@b+1)^0,w,c
  5512   0018D0  1045               	iorwf	(___fladd@b+2)^0,w,c
  5513   0018D2  1046               	iorwf	(___fladd@b+3)^0,w,c
  5514   0018D4  A4D8               	btfss	status,2,c
  5515   0018D6  EF6F  F00C         	goto	u2721
  5516   0018DA  EF71  F00C         	goto	u2720
  5517   0018DE                     u2721:
  5518   0018DE  EFA6  F00C         	goto	l2891
  5519   0018E2                     u2720:
  5520   0018E2  5052               	movf	___fladd@grs^0,w,c
  5521   0018E4  A4D8               	btfss	status,2,c
  5522   0018E6  EF77  F00C         	goto	u2731
  5523   0018EA  EF79  F00C         	goto	u2730
  5524   0018EE                     u2731:
  5525   0018EE  EFA6  F00C         	goto	l2891
  5526   0018F2                     u2730:
  5527   0018F2  0E00               	movlw	0
  5528   0018F4  6E43               	movwf	?___fladd^0,c
  5529   0018F6  0E00               	movlw	0
  5530   0018F8  6E44               	movwf	(?___fladd+1)^0,c
  5531   0018FA  0E00               	movlw	0
  5532   0018FC  6E45               	movwf	(?___fladd+2)^0,c
  5533   0018FE  0E00               	movlw	0
  5534   001900  6E46               	movwf	(?___fladd+3)^0,c
  5535   001902  EF41  F00D         	goto	l884
  5536   001906                     l2875:
  5537   001906  90D8               	bcf	status,0,c
  5538   001908  3643               	rlcf	___fladd@b^0,f,c
  5539   00190A  3644               	rlcf	(___fladd@b+1)^0,f,c
  5540   00190C  3645               	rlcf	(___fladd@b+2)^0,f,c
  5541   00190E  3646               	rlcf	(___fladd@b+3)^0,f,c
  5542   001910  AE52               	btfss	___fladd@grs^0,7,c
  5543   001912  EF8D  F00C         	goto	u2741
  5544   001916  EF8F  F00C         	goto	u2740
  5545   00191A                     u2741:
  5546   00191A  EF90  F00C         	goto	l2881
  5547   00191E                     u2740:
  5548   00191E  8043               	bsf	___fladd@b^0,0,c
  5549   001920                     l2881:
  5550   001920  A052               	btfss	___fladd@grs^0,0,c
  5551   001922  EF95  F00C         	goto	u2751
  5552   001926  EF97  F00C         	goto	u2750
  5553   00192A                     u2751:
  5554   00192A  EF9B  F00C         	goto	l2885
  5555   00192E                     u2750:
  5556   00192E  80D8               	bsf	status,0,c
  5557   001930  3652               	rlcf	___fladd@grs^0,f,c
  5558   001932  EF9D  F00C         	goto	l2887
  5559   001936                     l2885:
  5560   001936  90D8               	bcf	status,0,c
  5561   001938  3652               	rlcf	___fladd@grs^0,f,c
  5562   00193A                     l2887:
  5563   00193A  5051               	movf	___fladd@bexp^0,w,c
  5564   00193C  B4D8               	btfsc	status,2,c
  5565   00193E  EFA3  F00C         	goto	u2761
  5566   001942  EFA5  F00C         	goto	u2760
  5567   001946                     u2761:
  5568   001946  EFA6  F00C         	goto	l2891
  5569   00194A                     u2760:
  5570   00194A  0651               	decf	___fladd@bexp^0,f,c
  5571   00194C                     l2891:
  5572   00194C  AE45               	btfss	(___fladd@b+2)^0,7,c
  5573   00194E  EFAB  F00C         	goto	u2771
  5574   001952  EFAD  F00C         	goto	u2770
  5575   001956                     u2771:
  5576   001956  EF83  F00C         	goto	l2875
  5577   00195A                     u2770:
  5578   00195A                     l2893:
  5579   00195A  0E00               	movlw	0
  5580   00195C  6E50               	movwf	___fladd@aexp^0,c
  5581   00195E  AE52               	btfss	___fladd@grs^0,7,c
  5582   001960  EFB4  F00C         	goto	u2781
  5583   001964  EFB6  F00C         	goto	u2780
  5584   001968                     u2781:
  5585   001968  EFCE  F00C         	goto	l901
  5586   00196C                     u2780:
  5587   00196C  C052  F04B         	movff	___fladd@grs,??___fladd
  5588   001970  0E7F               	movlw	127
  5589   001972  164B               	andwf	??___fladd^0,f,c
  5590   001974  B4D8               	btfsc	status,2,c
  5591   001976  EFBF  F00C         	goto	u2791
  5592   00197A  EFC1  F00C         	goto	u2790
  5593   00197E                     u2791:
  5594   00197E  EFC5  F00C         	goto	l902
  5595   001982                     u2790:
  5596   001982                     l2899:
  5597   001982  0E01               	movlw	1
  5598   001984  6E50               	movwf	___fladd@aexp^0,c
  5599   001986  EFCE  F00C         	goto	l901
  5600   00198A                     l902:
  5601   00198A  A043               	btfss	___fladd@b^0,0,c
  5602   00198C  EFCA  F00C         	goto	u2801
  5603   001990  EFCC  F00C         	goto	u2800
  5604   001994                     u2801:
  5605   001994  EFCE  F00C         	goto	l901
  5606   001998                     u2800:
  5607   001998  EFC1  F00C         	goto	l2899
  5608   00199C                     l901:
  5609   00199C  5050               	movf	___fladd@aexp^0,w,c
  5610   00199E  B4D8               	btfsc	status,2,c
  5611   0019A0  EFD4  F00C         	goto	u2811
  5612   0019A4  EFD6  F00C         	goto	u2810
  5613   0019A8                     u2811:
  5614   0019A8  EF01  F00D         	goto	l2911
  5615   0019AC                     u2810:
  5616   0019AC  0E01               	movlw	1
  5617   0019AE  2643               	addwf	___fladd@b^0,f,c
  5618   0019B0  0E00               	movlw	0
  5619   0019B2  2244               	addwfc	(___fladd@b+1)^0,f,c
  5620   0019B4  2245               	addwfc	(___fladd@b+2)^0,f,c
  5621   0019B6  2246               	addwfc	(___fladd@b+3)^0,f,c
  5622   0019B8  A046               	btfss	(___fladd@b+3)^0,0,c
  5623   0019BA  EFE1  F00C         	goto	u2821
  5624   0019BE  EFE3  F00C         	goto	u2820
  5625   0019C2                     u2821:
  5626   0019C2  EF01  F00D         	goto	l2911
  5627   0019C6                     u2820:
  5628   0019C6  C043  F04B         	movff	___fladd@b,??___fladd
  5629   0019CA  C044  F04C         	movff	___fladd@b+1,??___fladd+1
  5630   0019CE  C045  F04D         	movff	___fladd@b+2,??___fladd+2
  5631   0019D2  C046  F04E         	movff	___fladd@b+3,??___fladd+3
  5632   0019D6  344E               	rlcf	(??___fladd+3)^0,w,c
  5633   0019D8  324E               	rrcf	(??___fladd+3)^0,f,c
  5634   0019DA  324D               	rrcf	(??___fladd+2)^0,f,c
  5635   0019DC  324C               	rrcf	(??___fladd+1)^0,f,c
  5636   0019DE  324B               	rrcf	??___fladd^0,f,c
  5637   0019E0  C04B  F043         	movff	??___fladd,___fladd@b
  5638   0019E4  C04C  F044         	movff	??___fladd+1,___fladd@b+1
  5639   0019E8  C04D  F045         	movff	??___fladd+2,___fladd@b+2
  5640   0019EC  C04E  F046         	movff	??___fladd+3,___fladd@b+3
  5641   0019F0  2851               	incf	___fladd@bexp^0,w,c
  5642   0019F2  B4D8               	btfsc	status,2,c
  5643   0019F4  EFFE  F00C         	goto	u2831
  5644   0019F8  EF00  F00D         	goto	u2830
  5645   0019FC                     u2831:
  5646   0019FC  EF01  F00D         	goto	l2911
  5647   001A00                     u2830:
  5648   001A00  2A51               	incf	___fladd@bexp^0,f,c
  5649   001A02                     l2911:
  5650   001A02  2851               	incf	___fladd@bexp^0,w,c
  5651   001A04  B4D8               	btfsc	status,2,c
  5652   001A06  EF07  F00D         	goto	u2841
  5653   001A0A  EF09  F00D         	goto	u2840
  5654   001A0E                     u2841:
  5655   001A0E  EF11  F00D         	goto	l2915
  5656   001A12                     u2840:
  5657   001A12  5051               	movf	___fladd@bexp^0,w,c
  5658   001A14  A4D8               	btfss	status,2,c
  5659   001A16  EF0F  F00D         	goto	u2851
  5660   001A1A  EF11  F00D         	goto	u2850
  5661   001A1E                     u2851:
  5662   001A1E  EF23  F00D         	goto	l2919
  5663   001A22                     u2850:
  5664   001A22                     l2915:
  5665   001A22  0E00               	movlw	0
  5666   001A24  6E43               	movwf	___fladd@b^0,c
  5667   001A26  0E00               	movlw	0
  5668   001A28  6E44               	movwf	(___fladd@b+1)^0,c
  5669   001A2A  0E00               	movlw	0
  5670   001A2C  6E45               	movwf	(___fladd@b+2)^0,c
  5671   001A2E  0E00               	movlw	0
  5672   001A30  6E46               	movwf	(___fladd@b+3)^0,c
  5673   001A32  5051               	movf	___fladd@bexp^0,w,c
  5674   001A34  A4D8               	btfss	status,2,c
  5675   001A36  EF1F  F00D         	goto	u2861
  5676   001A3A  EF21  F00D         	goto	u2860
  5677   001A3E                     u2861:
  5678   001A3E  EF23  F00D         	goto	l2919
  5679   001A42                     u2860:
  5680   001A42  0E00               	movlw	0
  5681   001A44  6E4F               	movwf	___fladd@signs^0,c
  5682   001A46                     l2919:
  5683   001A46  A051               	btfss	___fladd@bexp^0,0,c
  5684   001A48  EF28  F00D         	goto	u2871
  5685   001A4C  EF2A  F00D         	goto	u2870
  5686   001A50                     u2871:
  5687   001A50  EF2D  F00D         	goto	l2923
  5688   001A54                     u2870:
  5689   001A54  8E45               	bsf	(___fladd@b+2)^0,7,c
  5690   001A56  EF2E  F00D         	goto	l2925
  5691   001A5A                     l2923:
  5692   001A5A  9E45               	bcf	(___fladd@b+2)^0,7,c
  5693   001A5C                     l2925:
  5694   001A5C  90D8               	bcf	status,0,c
  5695   001A5E  3051               	rrcf	___fladd@bexp^0,w,c
  5696   001A60  6E46               	movwf	(___fladd@b+3)^0,c
  5697   001A62  AE4F               	btfss	___fladd@signs^0,7,c
  5698   001A64  EF36  F00D         	goto	u2881
  5699   001A68  EF38  F00D         	goto	u2880
  5700   001A6C                     u2881:
  5701   001A6C  EF39  F00D         	goto	l2931
  5702   001A70                     u2880:
  5703   001A70  8E46               	bsf	(___fladd@b+3)^0,7,c
  5704   001A72                     l2931:
  5705   001A72  C043  F043         	movff	___fladd@b,?___fladd
  5706   001A76  C044  F044         	movff	___fladd@b+1,?___fladd+1
  5707   001A7A  C045  F045         	movff	___fladd@b+2,?___fladd+2
  5708   001A7E  C046  F046         	movff	___fladd@b+3,?___fladd+3
  5709   001A82                     l884:
  5710   001A82  0012               	return		;funcret
  5711   001A84                     __end_of___fladd:
  5712                           	callstack 0
  5713                           
  5714 ;; *************** function _printf *****************
  5715 ;; Defined at:
  5716 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  fmt             1   56[COMRAM] PTR const unsigned char 
  5719 ;;		 -> STR_5(5), 
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;  ret             2    0        int 
  5722 ;;  ap              1   59[COMRAM] PTR void [1]
  5723 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  2   56[COMRAM] int 
  5726 ;; Registers used:
  5727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5733 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;Total ram usage:        4 bytes
  5738 ;; Hardware stack levels used: 1
  5739 ;; Hardware stack levels required when called: 8
  5740 ;; This function calls:
  5741 ;;		_vfprintf
  5742 ;; This function is called by:
  5743 ;;		_runDAC
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text20
  5748   00408E                     __ptext20:
  5749                           	callstack 0
  5750   00408E                     _printf:
  5751                           	callstack 21
  5752   00408E  0E3A               	movlw	low (?_printf+1)
  5753   004090  6E3C               	movwf	printf@ap^0,c
  5754   004092  0E00               	movlw	0
  5755   004094  6E34               	movwf	vfprintf@fp^0,c
  5756   004096  0E00               	movlw	0
  5757   004098  6E35               	movwf	(vfprintf@fp+1)^0,c
  5758   00409A  C039  F036         	movff	printf@fmt,vfprintf@fmt
  5759   00409E  0E3C               	movlw	low printf@ap
  5760   0040A0  6E37               	movwf	vfprintf@ap^0,c
  5761   0040A2  EC4A  F01F         	call	_vfprintf	;wreg free
  5762   0040A6  0012               	return		;funcret
  5763   0040A8                     __end_of_printf:
  5764                           	callstack 0
  5765                           
  5766 ;; *************** function ___fldiv *****************
  5767 ;; Defined at:
  5768 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  b               4   41[COMRAM] int 
  5771 ;;  a               4   45[COMRAM] int 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  grs             4   60[COMRAM] unsigned long 
  5774 ;;  rem             4   53[COMRAM] unsigned long 
  5775 ;;  new_exp         2   58[COMRAM] short 
  5776 ;;  aexp            1   65[COMRAM] unsigned char 
  5777 ;;  bexp            1   64[COMRAM] unsigned char 
  5778 ;;  sign            1   57[COMRAM] unsigned char 
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  4   41[COMRAM] unsigned char 
  5781 ;; Registers used:
  5782 ;;		wreg, status,2, status,0
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5788 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5789 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5790 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5791 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5792 ;;Total ram usage:       25 bytes
  5793 ;; Hardware stack levels used: 1
  5794 ;; Hardware stack levels required when called: 1
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_runDAC
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text21
  5803   002270                     __ptext21:
  5804                           	callstack 0
  5805   002270                     ___fldiv:
  5806                           	callstack 28
  5807   002270  502D               	movf	(___fldiv@b+3)^0,w,c
  5808   002272  0B80               	andlw	128
  5809   002274  6E3A               	movwf	___fldiv@sign^0,c
  5810   002276  502D               	movf	(___fldiv@b+3)^0,w,c
  5811   002278  242D               	addwf	(___fldiv@b+3)^0,w,c
  5812   00227A  6E41               	movwf	___fldiv@bexp^0,c
  5813   00227C  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  5814   00227E  EF43  F011         	goto	u3921
  5815   002282  EF45  F011         	goto	u3920
  5816   002286                     u3921:
  5817   002286  EF46  F011         	goto	l3589
  5818   00228A                     u3920:
  5819   00228A  8041               	bsf	___fldiv@bexp^0,0,c
  5820   00228C                     l3589:
  5821   00228C  5041               	movf	___fldiv@bexp^0,w,c
  5822   00228E  B4D8               	btfsc	status,2,c
  5823   002290  EF4C  F011         	goto	u3931
  5824   002294  EF4E  F011         	goto	u3930
  5825   002298                     u3931:
  5826   002298  EF63  F011         	goto	l3599
  5827   00229C                     u3930:
  5828   00229C  2841               	incf	___fldiv@bexp^0,w,c
  5829   00229E  A4D8               	btfss	status,2,c
  5830   0022A0  EF54  F011         	goto	u3941
  5831   0022A4  EF56  F011         	goto	u3940
  5832   0022A8                     u3941:
  5833   0022A8  EF5E  F011         	goto	l3595
  5834   0022AC                     u3940:
  5835   0022AC  0E00               	movlw	0
  5836   0022AE  6E2A               	movwf	___fldiv@b^0,c
  5837   0022B0  0E00               	movlw	0
  5838   0022B2  6E2B               	movwf	(___fldiv@b+1)^0,c
  5839   0022B4  0E00               	movlw	0
  5840   0022B6  6E2C               	movwf	(___fldiv@b+2)^0,c
  5841   0022B8  0E00               	movlw	0
  5842   0022BA  6E2D               	movwf	(___fldiv@b+3)^0,c
  5843   0022BC                     l3595:
  5844   0022BC  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  5845   0022BE  0E00               	movlw	0
  5846   0022C0  6E2D               	movwf	(___fldiv@b+3)^0,c
  5847   0022C2  EF6B  F011         	goto	l3601
  5848   0022C6                     l3599:
  5849   0022C6  0E00               	movlw	0
  5850   0022C8  6E2A               	movwf	___fldiv@b^0,c
  5851   0022CA  0E00               	movlw	0
  5852   0022CC  6E2B               	movwf	(___fldiv@b+1)^0,c
  5853   0022CE  0E00               	movlw	0
  5854   0022D0  6E2C               	movwf	(___fldiv@b+2)^0,c
  5855   0022D2  0E00               	movlw	0
  5856   0022D4  6E2D               	movwf	(___fldiv@b+3)^0,c
  5857   0022D6                     l3601:
  5858   0022D6  5031               	movf	(___fldiv@a+3)^0,w,c
  5859   0022D8  0B80               	andlw	128
  5860   0022DA  1A3A               	xorwf	___fldiv@sign^0,f,c
  5861   0022DC  5031               	movf	(___fldiv@a+3)^0,w,c
  5862   0022DE  2431               	addwf	(___fldiv@a+3)^0,w,c
  5863   0022E0  6E42               	movwf	___fldiv@aexp^0,c
  5864   0022E2  AE30               	btfss	(___fldiv@a+2)^0,7,c
  5865   0022E4  EF76  F011         	goto	u3951
  5866   0022E8  EF78  F011         	goto	u3950
  5867   0022EC                     u3951:
  5868   0022EC  EF79  F011         	goto	l3609
  5869   0022F0                     u3950:
  5870   0022F0  8042               	bsf	___fldiv@aexp^0,0,c
  5871   0022F2                     l3609:
  5872   0022F2  5042               	movf	___fldiv@aexp^0,w,c
  5873   0022F4  B4D8               	btfsc	status,2,c
  5874   0022F6  EF7F  F011         	goto	u3961
  5875   0022FA  EF81  F011         	goto	u3960
  5876   0022FE                     u3961:
  5877   0022FE  EF96  F011         	goto	l3619
  5878   002302                     u3960:
  5879   002302  2842               	incf	___fldiv@aexp^0,w,c
  5880   002304  A4D8               	btfss	status,2,c
  5881   002306  EF87  F011         	goto	u3971
  5882   00230A  EF89  F011         	goto	u3970
  5883   00230E                     u3971:
  5884   00230E  EF91  F011         	goto	l3615
  5885   002312                     u3970:
  5886   002312  0E00               	movlw	0
  5887   002314  6E2E               	movwf	___fldiv@a^0,c
  5888   002316  0E00               	movlw	0
  5889   002318  6E2F               	movwf	(___fldiv@a+1)^0,c
  5890   00231A  0E00               	movlw	0
  5891   00231C  6E30               	movwf	(___fldiv@a+2)^0,c
  5892   00231E  0E00               	movlw	0
  5893   002320  6E31               	movwf	(___fldiv@a+3)^0,c
  5894   002322                     l3615:
  5895   002322  8E30               	bsf	(___fldiv@a+2)^0,7,c
  5896   002324  0E00               	movlw	0
  5897   002326  6E31               	movwf	(___fldiv@a+3)^0,c
  5898   002328  EF9E  F011         	goto	l3621
  5899   00232C                     l3619:
  5900   00232C  0E00               	movlw	0
  5901   00232E  6E2E               	movwf	___fldiv@a^0,c
  5902   002330  0E00               	movlw	0
  5903   002332  6E2F               	movwf	(___fldiv@a+1)^0,c
  5904   002334  0E00               	movlw	0
  5905   002336  6E30               	movwf	(___fldiv@a+2)^0,c
  5906   002338  0E00               	movlw	0
  5907   00233A  6E31               	movwf	(___fldiv@a+3)^0,c
  5908   00233C                     l3621:
  5909   00233C  502E               	movf	___fldiv@a^0,w,c
  5910   00233E  102F               	iorwf	(___fldiv@a+1)^0,w,c
  5911   002340  1030               	iorwf	(___fldiv@a+2)^0,w,c
  5912   002342  1031               	iorwf	(___fldiv@a+3)^0,w,c
  5913   002344  A4D8               	btfss	status,2,c
  5914   002346  EFA7  F011         	goto	u3981
  5915   00234A  EFA9  F011         	goto	u3980
  5916   00234E                     u3981:
  5917   00234E  EFC1  F011         	goto	l3633
  5918   002352                     u3980:
  5919   002352  0E00               	movlw	0
  5920   002354  6E2A               	movwf	___fldiv@b^0,c
  5921   002356  0E00               	movlw	0
  5922   002358  6E2B               	movwf	(___fldiv@b+1)^0,c
  5923   00235A  0E00               	movlw	0
  5924   00235C  6E2C               	movwf	(___fldiv@b+2)^0,c
  5925   00235E  0E00               	movlw	0
  5926   002360  6E2D               	movwf	(___fldiv@b+3)^0,c
  5927   002362  0E80               	movlw	128
  5928   002364  122C               	iorwf	(___fldiv@b+2)^0,f,c
  5929   002366  0E7F               	movlw	127
  5930   002368  122D               	iorwf	(___fldiv@b+3)^0,f,c
  5931   00236A                     l3627:
  5932   00236A  503A               	movf	___fldiv@sign^0,w,c
  5933   00236C  122D               	iorwf	(___fldiv@b+3)^0,f,c
  5934   00236E  C02A  F02A         	movff	___fldiv@b,?___fldiv
  5935   002372  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
  5936   002376  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
  5937   00237A  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
  5938   00237E  EF04  F013         	goto	l929
  5939   002382                     l3633:
  5940   002382  5041               	movf	___fldiv@bexp^0,w,c
  5941   002384  A4D8               	btfss	status,2,c
  5942   002386  EFC7  F011         	goto	u3991
  5943   00238A  EFC9  F011         	goto	u3990
  5944   00238E                     u3991:
  5945   00238E  EFD3  F011         	goto	l3641
  5946   002392                     u3990:
  5947   002392  0E00               	movlw	0
  5948   002394  6E2A               	movwf	?___fldiv^0,c
  5949   002396  0E00               	movlw	0
  5950   002398  6E2B               	movwf	(?___fldiv+1)^0,c
  5951   00239A  0E00               	movlw	0
  5952   00239C  6E2C               	movwf	(?___fldiv+2)^0,c
  5953   00239E  0E00               	movlw	0
  5954   0023A0  6E2D               	movwf	(?___fldiv+3)^0,c
  5955   0023A2  EF04  F013         	goto	l929
  5956   0023A6                     l3641:
  5957   0023A6  5042               	movf	___fldiv@aexp^0,w,c
  5958   0023A8  C041  F032         	movff	___fldiv@bexp,??___fldiv
  5959   0023AC  6A33               	clrf	(??___fldiv+1)^0,c
  5960   0023AE  5E32               	subwf	??___fldiv^0,f,c
  5961   0023B0  0E00               	movlw	0
  5962   0023B2  5A33               	subwfb	(??___fldiv+1)^0,f,c
  5963   0023B4  0E7F               	movlw	127
  5964   0023B6  2432               	addwf	??___fldiv^0,w,c
  5965   0023B8  6E3B               	movwf	___fldiv@new_exp^0,c
  5966   0023BA  0E00               	movlw	0
  5967   0023BC  2033               	addwfc	(??___fldiv+1)^0,w,c
  5968   0023BE  6E3C               	movwf	(___fldiv@new_exp+1)^0,c
  5969   0023C0  C02A  F036         	movff	___fldiv@b,___fldiv@rem
  5970   0023C4  C02B  F037         	movff	___fldiv@b+1,___fldiv@rem+1
  5971   0023C8  C02C  F038         	movff	___fldiv@b+2,___fldiv@rem+2
  5972   0023CC  C02D  F039         	movff	___fldiv@b+3,___fldiv@rem+3
  5973   0023D0  0E00               	movlw	0
  5974   0023D2  6E2A               	movwf	___fldiv@b^0,c
  5975   0023D4  0E00               	movlw	0
  5976   0023D6  6E2B               	movwf	(___fldiv@b+1)^0,c
  5977   0023D8  0E00               	movlw	0
  5978   0023DA  6E2C               	movwf	(___fldiv@b+2)^0,c
  5979   0023DC  0E00               	movlw	0
  5980   0023DE  6E2D               	movwf	(___fldiv@b+3)^0,c
  5981   0023E0  0E00               	movlw	0
  5982   0023E2  6E3D               	movwf	___fldiv@grs^0,c
  5983   0023E4  0E00               	movlw	0
  5984   0023E6  6E3E               	movwf	(___fldiv@grs+1)^0,c
  5985   0023E8  0E00               	movlw	0
  5986   0023EA  6E3F               	movwf	(___fldiv@grs+2)^0,c
  5987   0023EC  0E00               	movlw	0
  5988   0023EE  6E40               	movwf	(___fldiv@grs+3)^0,c
  5989   0023F0  0E00               	movlw	0
  5990   0023F2  6E42               	movwf	___fldiv@aexp^0,c
  5991   0023F4  EF34  F012         	goto	l931
  5992   0023F8                     l3651:
  5993   0023F8  5042               	movf	___fldiv@aexp^0,w,c
  5994   0023FA  B4D8               	btfsc	status,2,c
  5995   0023FC  EF02  F012         	goto	u4001
  5996   002400  EF04  F012         	goto	u4000
  5997   002404                     u4001:
  5998   002404  EF1B  F012         	goto	l3659
  5999   002408                     u4000:
  6000   002408  90D8               	bcf	status,0,c
  6001   00240A  3636               	rlcf	___fldiv@rem^0,f,c
  6002   00240C  3637               	rlcf	(___fldiv@rem+1)^0,f,c
  6003   00240E  3638               	rlcf	(___fldiv@rem+2)^0,f,c
  6004   002410  3639               	rlcf	(___fldiv@rem+3)^0,f,c
  6005   002412  90D8               	bcf	status,0,c
  6006   002414  362A               	rlcf	___fldiv@b^0,f,c
  6007   002416  362B               	rlcf	(___fldiv@b+1)^0,f,c
  6008   002418  362C               	rlcf	(___fldiv@b+2)^0,f,c
  6009   00241A  362D               	rlcf	(___fldiv@b+3)^0,f,c
  6010   00241C  AE40               	btfss	(___fldiv@grs+3)^0,7,c
  6011   00241E  EF13  F012         	goto	u4011
  6012   002422  EF15  F012         	goto	u4010
  6013   002426                     u4011:
  6014   002426  EF16  F012         	goto	l934
  6015   00242A                     u4010:
  6016   00242A  802A               	bsf	___fldiv@b^0,0,c
  6017   00242C                     l934:
  6018   00242C  90D8               	bcf	status,0,c
  6019   00242E  363D               	rlcf	___fldiv@grs^0,f,c
  6020   002430  363E               	rlcf	(___fldiv@grs+1)^0,f,c
  6021   002432  363F               	rlcf	(___fldiv@grs+2)^0,f,c
  6022   002434  3640               	rlcf	(___fldiv@grs+3)^0,f,c
  6023   002436                     l3659:
  6024   002436  502E               	movf	___fldiv@a^0,w,c
  6025   002438  5C36               	subwf	___fldiv@rem^0,w,c
  6026   00243A  502F               	movf	(___fldiv@a+1)^0,w,c
  6027   00243C  5837               	subwfb	(___fldiv@rem+1)^0,w,c
  6028   00243E  5030               	movf	(___fldiv@a+2)^0,w,c
  6029   002440  5838               	subwfb	(___fldiv@rem+2)^0,w,c
  6030   002442  5031               	movf	(___fldiv@a+3)^0,w,c
  6031   002444  5839               	subwfb	(___fldiv@rem+3)^0,w,c
  6032   002446  A0D8               	btfss	status,0,c
  6033   002448  EF28  F012         	goto	u4021
  6034   00244C  EF2A  F012         	goto	u4020
  6035   002450                     u4021:
  6036   002450  EF33  F012         	goto	l3665
  6037   002454                     u4020:
  6038   002454  8C40               	bsf	(___fldiv@grs+3)^0,6,c
  6039   002456  502E               	movf	___fldiv@a^0,w,c
  6040   002458  5E36               	subwf	___fldiv@rem^0,f,c
  6041   00245A  502F               	movf	(___fldiv@a+1)^0,w,c
  6042   00245C  5A37               	subwfb	(___fldiv@rem+1)^0,f,c
  6043   00245E  5030               	movf	(___fldiv@a+2)^0,w,c
  6044   002460  5A38               	subwfb	(___fldiv@rem+2)^0,f,c
  6045   002462  5031               	movf	(___fldiv@a+3)^0,w,c
  6046   002464  5A39               	subwfb	(___fldiv@rem+3)^0,f,c
  6047   002466                     l3665:
  6048   002466  2A42               	incf	___fldiv@aexp^0,f,c
  6049   002468                     l931:
  6050   002468  0E19               	movlw	25
  6051   00246A  6442               	cpfsgt	___fldiv@aexp^0,c
  6052   00246C  EF3A  F012         	goto	u4031
  6053   002470  EF3C  F012         	goto	u4030
  6054   002474                     u4031:
  6055   002474  EFFC  F011         	goto	l3651
  6056   002478                     u4030:
  6057   002478  5036               	movf	___fldiv@rem^0,w,c
  6058   00247A  1037               	iorwf	(___fldiv@rem+1)^0,w,c
  6059   00247C  1038               	iorwf	(___fldiv@rem+2)^0,w,c
  6060   00247E  1039               	iorwf	(___fldiv@rem+3)^0,w,c
  6061   002480  B4D8               	btfsc	status,2,c
  6062   002482  EF45  F012         	goto	u4041
  6063   002486  EF47  F012         	goto	u4040
  6064   00248A                     u4041:
  6065   00248A  EF5F  F012         	goto	l3677
  6066   00248E                     u4040:
  6067   00248E  803D               	bsf	___fldiv@grs^0,0,c
  6068   002490  EF5F  F012         	goto	l3677
  6069   002494                     l3671:
  6070   002494  90D8               	bcf	status,0,c
  6071   002496  362A               	rlcf	___fldiv@b^0,f,c
  6072   002498  362B               	rlcf	(___fldiv@b+1)^0,f,c
  6073   00249A  362C               	rlcf	(___fldiv@b+2)^0,f,c
  6074   00249C  362D               	rlcf	(___fldiv@b+3)^0,f,c
  6075   00249E  AE40               	btfss	(___fldiv@grs+3)^0,7,c
  6076   0024A0  EF54  F012         	goto	u4051
  6077   0024A4  EF56  F012         	goto	u4050
  6078   0024A8                     u4051:
  6079   0024A8  EF57  F012         	goto	l940
  6080   0024AC                     u4050:
  6081   0024AC  802A               	bsf	___fldiv@b^0,0,c
  6082   0024AE                     l940:
  6083   0024AE  90D8               	bcf	status,0,c
  6084   0024B0  363D               	rlcf	___fldiv@grs^0,f,c
  6085   0024B2  363E               	rlcf	(___fldiv@grs+1)^0,f,c
  6086   0024B4  363F               	rlcf	(___fldiv@grs+2)^0,f,c
  6087   0024B6  3640               	rlcf	(___fldiv@grs+3)^0,f,c
  6088   0024B8  063B               	decf	___fldiv@new_exp^0,f,c
  6089   0024BA  A0D8               	btfss	status,0,c
  6090   0024BC  063C               	decf	(___fldiv@new_exp+1)^0,f,c
  6091   0024BE                     l3677:
  6092   0024BE  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  6093   0024C0  EF64  F012         	goto	u4061
  6094   0024C4  EF66  F012         	goto	u4060
  6095   0024C8                     u4061:
  6096   0024C8  EF4A  F012         	goto	l3671
  6097   0024CC                     u4060:
  6098   0024CC  0E00               	movlw	0
  6099   0024CE  6E42               	movwf	___fldiv@aexp^0,c
  6100   0024D0  AE40               	btfss	(___fldiv@grs+3)^0,7,c
  6101   0024D2  EF6D  F012         	goto	u4071
  6102   0024D6  EF6F  F012         	goto	u4070
  6103   0024DA                     u4071:
  6104   0024DA  EF93  F012         	goto	l942
  6105   0024DE                     u4070:
  6106   0024DE  0EFF               	movlw	255
  6107   0024E0  143D               	andwf	___fldiv@grs^0,w,c
  6108   0024E2  6E32               	movwf	??___fldiv^0,c
  6109   0024E4  0EFF               	movlw	255
  6110   0024E6  143E               	andwf	(___fldiv@grs+1)^0,w,c
  6111   0024E8  6E33               	movwf	(??___fldiv+1)^0,c
  6112   0024EA  0EFF               	movlw	255
  6113   0024EC  143F               	andwf	(___fldiv@grs+2)^0,w,c
  6114   0024EE  6E34               	movwf	(??___fldiv+2)^0,c
  6115   0024F0  0E7F               	movlw	127
  6116   0024F2  1440               	andwf	(___fldiv@grs+3)^0,w,c
  6117   0024F4  6E35               	movwf	(??___fldiv+3)^0,c
  6118   0024F6  5032               	movf	??___fldiv^0,w,c
  6119   0024F8  1033               	iorwf	(??___fldiv+1)^0,w,c
  6120   0024FA  1034               	iorwf	(??___fldiv+2)^0,w,c
  6121   0024FC  1035               	iorwf	(??___fldiv+3)^0,w,c
  6122   0024FE  B4D8               	btfsc	status,2,c
  6123   002500  EF84  F012         	goto	u4081
  6124   002504  EF86  F012         	goto	u4080
  6125   002508                     u4081:
  6126   002508  EF8A  F012         	goto	l943
  6127   00250C                     u4080:
  6128   00250C                     l3685:
  6129   00250C  0E01               	movlw	1
  6130   00250E  6E42               	movwf	___fldiv@aexp^0,c
  6131   002510  EF93  F012         	goto	l942
  6132   002514                     l943:
  6133   002514  A02A               	btfss	___fldiv@b^0,0,c
  6134   002516  EF8F  F012         	goto	u4091
  6135   00251A  EF91  F012         	goto	u4090
  6136   00251E                     u4091:
  6137   00251E  EF93  F012         	goto	l942
  6138   002522                     u4090:
  6139   002522  EF86  F012         	goto	l3685
  6140   002526                     l942:
  6141   002526  5042               	movf	___fldiv@aexp^0,w,c
  6142   002528  B4D8               	btfsc	status,2,c
  6143   00252A  EF99  F012         	goto	u4101
  6144   00252E  EF9B  F012         	goto	u4100
  6145   002532                     u4101:
  6146   002532  EFBF  F012         	goto	l3697
  6147   002536                     u4100:
  6148   002536  0E01               	movlw	1
  6149   002538  262A               	addwf	___fldiv@b^0,f,c
  6150   00253A  0E00               	movlw	0
  6151   00253C  222B               	addwfc	(___fldiv@b+1)^0,f,c
  6152   00253E  222C               	addwfc	(___fldiv@b+2)^0,f,c
  6153   002540  222D               	addwfc	(___fldiv@b+3)^0,f,c
  6154   002542  A02D               	btfss	(___fldiv@b+3)^0,0,c
  6155   002544  EFA6  F012         	goto	u4111
  6156   002548  EFA8  F012         	goto	u4110
  6157   00254C                     u4111:
  6158   00254C  EFBF  F012         	goto	l3697
  6159   002550                     u4110:
  6160   002550  C02A  F032         	movff	___fldiv@b,??___fldiv
  6161   002554  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
  6162   002558  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
  6163   00255C  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
  6164   002560  3435               	rlcf	(??___fldiv+3)^0,w,c
  6165   002562  3235               	rrcf	(??___fldiv+3)^0,f,c
  6166   002564  3234               	rrcf	(??___fldiv+2)^0,f,c
  6167   002566  3233               	rrcf	(??___fldiv+1)^0,f,c
  6168   002568  3232               	rrcf	??___fldiv^0,f,c
  6169   00256A  C032  F02A         	movff	??___fldiv,___fldiv@b
  6170   00256E  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
  6171   002572  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
  6172   002576  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
  6173   00257A  4A3B               	infsnz	___fldiv@new_exp^0,f,c
  6174   00257C  2A3C               	incf	(___fldiv@new_exp+1)^0,f,c
  6175   00257E                     l3697:
  6176   00257E  BE3C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6177   002580  EFCA  F012         	goto	u4121
  6178   002584  503C               	movf	(___fldiv@new_exp+1)^0,w,c
  6179   002586  E108               	bnz	u4120
  6180   002588  283B               	incf	___fldiv@new_exp^0,w,c
  6181   00258A  A0D8               	btfss	status,0,c
  6182   00258C  EFCA  F012         	goto	u4121
  6183   002590  EFCC  F012         	goto	u4120
  6184   002594                     u4121:
  6185   002594  EFD7  F012         	goto	l3701
  6186   002598                     u4120:
  6187   002598  0E00               	movlw	0
  6188   00259A  6E3C               	movwf	(___fldiv@new_exp+1)^0,c
  6189   00259C  683B               	setf	___fldiv@new_exp^0,c
  6190   00259E  0E00               	movlw	0
  6191   0025A0  6E2A               	movwf	___fldiv@b^0,c
  6192   0025A2  0E00               	movlw	0
  6193   0025A4  6E2B               	movwf	(___fldiv@b+1)^0,c
  6194   0025A6  0E00               	movlw	0
  6195   0025A8  6E2C               	movwf	(___fldiv@b+2)^0,c
  6196   0025AA  0E00               	movlw	0
  6197   0025AC  6E2D               	movwf	(___fldiv@b+3)^0,c
  6198   0025AE                     l3701:
  6199   0025AE  BE3C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6200   0025B0  EFE4  F012         	goto	u4130
  6201   0025B4  503C               	movf	(___fldiv@new_exp+1)^0,w,c
  6202   0025B6  E106               	bnz	u4131
  6203   0025B8  043B               	decf	___fldiv@new_exp^0,w,c
  6204   0025BA  B0D8               	btfsc	status,0,c
  6205   0025BC  EFE2  F012         	goto	u4131
  6206   0025C0  EFE4  F012         	goto	u4130
  6207   0025C4                     u4131:
  6208   0025C4  EFF2  F012         	goto	l3705
  6209   0025C8                     u4130:
  6210   0025C8  0E00               	movlw	0
  6211   0025CA  6E3C               	movwf	(___fldiv@new_exp+1)^0,c
  6212   0025CC  0E00               	movlw	0
  6213   0025CE  6E3B               	movwf	___fldiv@new_exp^0,c
  6214   0025D0  0E00               	movlw	0
  6215   0025D2  6E2A               	movwf	___fldiv@b^0,c
  6216   0025D4  0E00               	movlw	0
  6217   0025D6  6E2B               	movwf	(___fldiv@b+1)^0,c
  6218   0025D8  0E00               	movlw	0
  6219   0025DA  6E2C               	movwf	(___fldiv@b+2)^0,c
  6220   0025DC  0E00               	movlw	0
  6221   0025DE  6E2D               	movwf	(___fldiv@b+3)^0,c
  6222   0025E0  0E00               	movlw	0
  6223   0025E2  6E3A               	movwf	___fldiv@sign^0,c
  6224   0025E4                     l3705:
  6225   0025E4  C03B  F041         	movff	___fldiv@new_exp,___fldiv@bexp
  6226   0025E8  A041               	btfss	___fldiv@bexp^0,0,c
  6227   0025EA  EFF9  F012         	goto	u4141
  6228   0025EE  EFFB  F012         	goto	u4140
  6229   0025F2                     u4141:
  6230   0025F2  EFFE  F012         	goto	l3711
  6231   0025F6                     u4140:
  6232   0025F6  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  6233   0025F8  EFFF  F012         	goto	l3713
  6234   0025FC                     l3711:
  6235   0025FC  9E2C               	bcf	(___fldiv@b+2)^0,7,c
  6236   0025FE                     l3713:
  6237   0025FE  90D8               	bcf	status,0,c
  6238   002600  3041               	rrcf	___fldiv@bexp^0,w,c
  6239   002602  6E2D               	movwf	(___fldiv@b+3)^0,c
  6240   002604  EFB5  F011         	goto	l3627
  6241   002608                     l929:
  6242   002608  0012               	return		;funcret
  6243   00260A                     __end_of___fldiv:
  6244                           	callstack 0
  6245                           
  6246 ;; *************** function _SPI_write *****************
  6247 ;; Defined at:
  6248 ;;		line 93 in file "DAC.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  data            1    wreg     unsigned char 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  data            1    4[COMRAM] unsigned char 
  6253 ;;  LSB             1    3[COMRAM] unsigned char 
  6254 ;;  MSB             1    2[COMRAM] unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  1    wreg      void 
  6257 ;; Registers used:
  6258 ;;		wreg, status,2, status,0
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6267 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;Total ram usage:        3 bytes
  6269 ;; Hardware stack levels used: 1
  6270 ;; Hardware stack levels required when called: 1
  6271 ;; This function calls:
  6272 ;;		Nothing
  6273 ;; This function is called by:
  6274 ;;		_runDAC
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text22
  6279   003ED6                     __ptext22:
  6280                           	callstack 0
  6281   003ED6                     _SPI_write:
  6282                           	callstack 28
  6283                           
  6284                           ;incstack = 0
  6285                           ;SPI_write@data stored from wreg
  6286   003ED6  6E05               	movwf	SPI_write@data^0,c
  6287   003ED8                     
  6288                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  6289   003ED8  3805               	swapf	SPI_write@data^0,w,c
  6290   003EDA  0B0F               	andlw	15
  6291   003EDC  0930               	iorlw	48
  6292   003EDE  6E03               	movwf	SPI_write@MSB^0,c
  6293                           
  6294                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  6295   003EE0  3805               	swapf	SPI_write@data^0,w,c
  6296   003EE2  0BF0               	andlw	240
  6297   003EE4  6E04               	movwf	SPI_write@LSB^0,c
  6298   003EE6                     
  6299                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  6300   003EE6  968A               	bcf	138,3,c	;volatile
  6301   003EE8                     
  6302                           ;DAC.c: 101:     SSP1BUF = MSB;
  6303   003EE8  C003  FFC9         	movff	SPI_write@MSB,4041	;volatile
  6304   003EEC                     l214:
  6305   003EEC  A69E               	btfss	3998,3,c	;volatile
  6306   003EEE  EF7B  F01F         	goto	u3711
  6307   003EF2  EF7D  F01F         	goto	u3710
  6308   003EF6                     u3711:
  6309   003EF6  EF76  F01F         	goto	l214
  6310   003EFA                     u3710:
  6311   003EFA                     
  6312                           ;DAC.c: 103:     SSP1IF = 0;
  6313   003EFA  969E               	bcf	3998,3,c	;volatile
  6314                           
  6315                           ;DAC.c: 105:     SSP1BUF = LSB;
  6316   003EFC  C004  FFC9         	movff	SPI_write@LSB,4041	;volatile
  6317   003F00                     l217:
  6318   003F00  A69E               	btfss	3998,3,c	;volatile
  6319   003F02  EF85  F01F         	goto	u3721
  6320   003F06  EF87  F01F         	goto	u3720
  6321   003F0A                     u3721:
  6322   003F0A  EF80  F01F         	goto	l217
  6323   003F0E                     u3720:
  6324   003F0E                     
  6325                           ;DAC.c: 107:     SSP1IF = 0;
  6326   003F0E  969E               	bcf	3998,3,c	;volatile
  6327                           
  6328                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  6329   003F10  868A               	bsf	138,3,c	;volatile
  6330   003F12  0012               	return		;funcret
  6331   003F14                     __end_of_SPI_write:
  6332                           	callstack 0
  6333                           
  6334 ;; *************** function _moveDisplay *****************
  6335 ;; Defined at:
  6336 ;;		line 11 in file "menu.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  menuI           1    wreg     unsigned char 
  6339 ;;  where           1   75[COMRAM] unsigned char 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  menuI           1   42[BANK0 ] unsigned char 
  6342 ;;  menuItem2      17   17[BANK0 ] unsigned char [17]
  6343 ;;  menuItem1      17    0[BANK0 ] unsigned char [17]
  6344 ;;  menuItems       8   34[BANK0 ] PTR unsigned char [8]
  6345 ;;		 -> STR_13(1), STR_12(6), STR_11(5), STR_10(4), 
  6346 ;;		 -> STR_9(4), STR_8(4), STR_7(5), STR_6(5), 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      unsigned char 
  6349 ;; Registers used:
  6350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6356 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6357 ;;      Locals:         0      43       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6359 ;;      Totals:         3      43       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6360 ;;Total ram usage:       46 bytes
  6361 ;; Hardware stack levels used: 1
  6362 ;; Hardware stack levels required when called: 9
  6363 ;; This function calls:
  6364 ;;		_LCD_Clear
  6365 ;;		_LCD_ShowString
  6366 ;;		_sprintf
  6367 ;; This function is called by:
  6368 ;;		_main
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           	psect	text23
  6373   0037D6                     __ptext23:
  6374                           	callstack 0
  6375   0037D6                     _moveDisplay:
  6376                           	callstack 21
  6377                           
  6378                           ;incstack = 0
  6379                           ;moveDisplay@menuI stored from wreg
  6380   0037D6  0100               	movlb	0	; () banked
  6381   0037D8  6F8A               	movwf	moveDisplay@menuI& (0+255),b
  6382   0037DA                     
  6383                           ;menu.c: 12:     LCD_Clear();
  6384   0037DA  ECC2  F01F         	call	_LCD_Clear	;wreg free
  6385   0037DE                     
  6386                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  6387   0037DE  EE20  F0DE         	lfsr	2,moveDisplay@F6952
  6388   0037E2  EE10  F082         	lfsr	1,moveDisplay@menuItems
  6389   0037E6  0E07               	movlw	7
  6390   0037E8                     u5021:
  6391   0037E8  CFDB FFE3          	movff	plusw2,plusw1
  6392   0037EC  06E8               	decf	wreg,f,c
  6393   0037EE  E2FC               	bc	u5021
  6394                           
  6395                           ;menu.c: 14:     switch (where){
  6396   0037F0  EF12  F01C         	goto	l4339
  6397   0037F4                     l4329:
  6398                           
  6399                           ;menu.c: 18:             if(menuI<6){
  6400   0037F4  0E06               	movlw	6
  6401   0037F6  0100               	movlb	0	; () banked
  6402   0037F8  618A               	cpfslt	moveDisplay@menuI& (0+255),b
  6403   0037FA  EF01  F01C         	goto	u5031
  6404   0037FE  EF03  F01C         	goto	u5030
  6405   003802                     u5031:
  6406   003802  EF21  F01C         	goto	l4341
  6407   003806                     u5030:
  6408   003806                     
  6409                           ; BSR set to: 0
  6410                           ;menu.c: 19:             menuI++;
  6411   003806  2B8A               	incf	moveDisplay@menuI& (0+255),f,b
  6412   003808  EF21  F01C         	goto	l4341
  6413   00380C                     l4333:
  6414                           
  6415                           ;menu.c: 23:             if(menuI>0){
  6416   00380C  0100               	movlb	0	; () banked
  6417   00380E  518A               	movf	moveDisplay@menuI& (0+255),w,b
  6418   003810  B4D8               	btfsc	status,2,c
  6419   003812  EF0D  F01C         	goto	u5041
  6420   003816  EF0F  F01C         	goto	u5040
  6421   00381A                     u5041:
  6422   00381A  EF21  F01C         	goto	l4341
  6423   00381E                     u5040:
  6424   00381E                     
  6425                           ; BSR set to: 0
  6426                           ;menu.c: 24:             menuI--;
  6427   00381E  078A               	decf	moveDisplay@menuI& (0+255),f,b
  6428   003820  EF21  F01C         	goto	l4341
  6429   003824                     l4339:
  6430   003824  504C               	movf	moveDisplay@where^0,w,c
  6431                           
  6432                           ; Switch size 1, requested type "simple"
  6433                           ; Number of cases is 3, Range of values is 0 to 2
  6434                           ; switch strategies available:
  6435                           ; Name         Instructions Cycles
  6436                           ; simple_byte           10     6 (average)
  6437                           ;	Chosen strategy is simple_byte
  6438   003826  0A00               	xorlw	0	; case 0
  6439   003828  B4D8               	btfsc	status,2,c
  6440   00382A  EF21  F01C         	goto	l4341
  6441   00382E  0A01               	xorlw	1	; case 1
  6442   003830  B4D8               	btfsc	status,2,c
  6443   003832  EFFA  F01B         	goto	l4329
  6444   003836  0A03               	xorlw	3	; case 2
  6445   003838  B4D8               	btfsc	status,2,c
  6446   00383A  EF06  F01C         	goto	l4333
  6447   00383E  EF21  F01C         	goto	l4341
  6448   003842                     l4341:
  6449                           
  6450                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  6451   003842  0E60               	movlw	low moveDisplay@menuItem1
  6452   003844  6E39               	movwf	sprintf@s^0,c
  6453   003846  0E92               	movlw	low STR_14
  6454   003848  6E3A               	movwf	sprintf@fmt^0,c
  6455   00384A  0E00               	movlw	0
  6456   00384C  6E3C               	movwf	(?_sprintf+3)^0,c
  6457   00384E  0E0F               	movlw	15
  6458   003850  6E3B               	movwf	(?_sprintf+2)^0,c
  6459   003852  0100               	movlb	0	; () banked
  6460   003854  518A               	movf	moveDisplay@menuI& (0+255),w,b
  6461   003856  0F82               	addlw	low moveDisplay@menuItems
  6462   003858  6ED9               	movwf	fsr2l,c
  6463   00385A  6ADA               	clrf	fsr2h,c
  6464   00385C  50DF               	movf	indf2,w,c
  6465   00385E  6E4D               	movwf	??_moveDisplay^0,c
  6466   003860  C04D  F03D         	movff	??_moveDisplay,?_sprintf+4
  6467   003864  503D               	movf	(?_sprintf+4)^0,w,c
  6468   003866  A4D8               	btfss	status,2,c
  6469   003868  0E10               	movlw	high __smallconst
  6470   00386A  6E3E               	movwf	(?_sprintf+5)^0,c
  6471   00386C  ECA7  F01F         	call	_sprintf	;wreg free
  6472                           
  6473                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  6474   003870  0E71               	movlw	low moveDisplay@menuItem2
  6475   003872  6E39               	movwf	sprintf@s^0,c
  6476   003874  0E93               	movlw	low (STR_14+1)
  6477   003876  6E3A               	movwf	sprintf@fmt^0,c
  6478   003878  0E00               	movlw	0
  6479   00387A  6E3C               	movwf	(?_sprintf+3)^0,c
  6480   00387C  0E10               	movlw	16
  6481   00387E  6E3B               	movwf	(?_sprintf+2)^0,c
  6482   003880  C08A  F04D         	movff	moveDisplay@menuI,??_moveDisplay
  6483   003884  0E01               	movlw	1
  6484   003886  264D               	addwf	??_moveDisplay^0,f,c
  6485   003888  504D               	movf	??_moveDisplay^0,w,c
  6486   00388A  0F82               	addlw	low moveDisplay@menuItems
  6487   00388C  6ED9               	movwf	fsr2l,c
  6488   00388E  6ADA               	clrf	fsr2h,c
  6489   003890  50DF               	movf	indf2,w,c
  6490   003892  6E4E               	movwf	(??_moveDisplay+1)^0,c
  6491   003894  C04E  F03D         	movff	??_moveDisplay+1,?_sprintf+4
  6492   003898  503D               	movf	(?_sprintf+4)^0,w,c
  6493   00389A  A4D8               	btfss	status,2,c
  6494   00389C  0E10               	movlw	high __smallconst
  6495   00389E  6E3E               	movwf	(?_sprintf+5)^0,c
  6496   0038A0  ECA7  F01F         	call	_sprintf	;wreg free
  6497   0038A4                     
  6498                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  6499   0038A4  0E60               	movlw	low moveDisplay@menuItem1
  6500   0038A6  6E04               	movwf	LCD_ShowString@textData^0,c
  6501   0038A8  6A05               	clrf	(LCD_ShowString@textData+1)^0,c
  6502   0038AA  0E01               	movlw	1
  6503   0038AC  EC8D  F01D         	call	_LCD_ShowString
  6504   0038B0                     
  6505                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  6506   0038B0  0E71               	movlw	low moveDisplay@menuItem2
  6507   0038B2  6E04               	movwf	LCD_ShowString@textData^0,c
  6508   0038B4  6A05               	clrf	(LCD_ShowString@textData+1)^0,c
  6509   0038B6  0E02               	movlw	2
  6510   0038B8  EC8D  F01D         	call	_LCD_ShowString
  6511   0038BC                     
  6512                           ;menu.c: 35:     return menuI;
  6513   0038BC  0100               	movlb	0	; () banked
  6514   0038BE  518A               	movf	moveDisplay@menuI& (0+255),w,b
  6515   0038C0                     
  6516                           ; BSR set to: 0
  6517   0038C0  0012               	return		;funcret
  6518   0038C2                     __end_of_moveDisplay:
  6519                           	callstack 0
  6520                           
  6521 ;; *************** function _sprintf *****************
  6522 ;; Defined at:
  6523 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;  s               1   56[COMRAM] PTR unsigned char 
  6526 ;;		 -> moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), 
  6527 ;;  fmt             1   57[COMRAM] PTR const unsigned char 
  6528 ;;		 -> STR_15(5), STR_14(6), 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  f              12   63[COMRAM] struct _IO_FILE
  6531 ;;  ret             2    0        int 
  6532 ;;  ap              1   62[COMRAM] PTR void [1]
  6533 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  2   56[COMRAM] int 
  6536 ;; Registers used:
  6537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6543 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;Total ram usage:       19 bytes
  6548 ;; Hardware stack levels used: 1
  6549 ;; Hardware stack levels required when called: 8
  6550 ;; This function calls:
  6551 ;;		_vfprintf
  6552 ;; This function is called by:
  6553 ;;		_moveDisplay
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text24
  6558   003F4E                     __ptext24:
  6559                           	callstack 0
  6560   003F4E                     _sprintf:
  6561                           	callstack 21
  6562   003F4E  0E3B               	movlw	low (?_sprintf+2)
  6563   003F50  6E3F               	movwf	sprintf@ap^0,c
  6564   003F52  C039  F040         	movff	sprintf@s,sprintf@f
  6565   003F56  0E00               	movlw	0
  6566   003F58  6E44               	movwf	(sprintf@f+4)^0,c
  6567   003F5A  0E00               	movlw	0
  6568   003F5C  6E43               	movwf	(sprintf@f+3)^0,c
  6569   003F5E  0E00               	movlw	0
  6570   003F60  6E4B               	movwf	(sprintf@f+11)^0,c
  6571   003F62  0E00               	movlw	0
  6572   003F64  6E4A               	movwf	(sprintf@f+10)^0,c
  6573   003F66  0E40               	movlw	low sprintf@f
  6574   003F68  6E34               	movwf	vfprintf@fp^0,c
  6575   003F6A  6A35               	clrf	(vfprintf@fp+1)^0,c
  6576   003F6C  C03A  F036         	movff	sprintf@fmt,vfprintf@fmt
  6577   003F70  0E3F               	movlw	low sprintf@ap
  6578   003F72  6E37               	movwf	vfprintf@ap^0,c
  6579   003F74  EC4A  F01F         	call	_vfprintf	;wreg free
  6580   003F78  5039               	movf	sprintf@s^0,w,c
  6581   003F7A  2443               	addwf	(sprintf@f+3)^0,w,c
  6582   003F7C  6ED9               	movwf	fsr2l,c
  6583   003F7E  6ADA               	clrf	fsr2h,c
  6584   003F80  6ADF               	clrf	indf2,c
  6585   003F82  0012               	return		;funcret
  6586   003F84                     __end_of_sprintf:
  6587                           	callstack 0
  6588                           
  6589 ;; *************** function _vfprintf *****************
  6590 ;; Defined at:
  6591 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  6594 ;;		 -> NULL(0), sprintf@f(12), 
  6595 ;;  fmt             1   53[COMRAM] PTR const unsigned char 
  6596 ;;		 -> STR_15(5), STR_14(6), STR_5(5), 
  6597 ;;  ap              1   54[COMRAM] PTR PTR void 
  6598 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;  cfmt            1   55[COMRAM] PTR unsigned char 
  6601 ;;		 -> STR_15(5), STR_14(6), STR_5(5), 
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  2   51[COMRAM] int 
  6604 ;; Registers used:
  6605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6611 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6614 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6615 ;;Total ram usage:        5 bytes
  6616 ;; Hardware stack levels used: 1
  6617 ;; Hardware stack levels required when called: 7
  6618 ;; This function calls:
  6619 ;;		_vfpfcnvrt
  6620 ;; This function is called by:
  6621 ;;		_sprintf
  6622 ;;		_printf
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           	psect	text25
  6627   003E94                     __ptext25:
  6628                           	callstack 0
  6629   003E94                     _vfprintf:
  6630                           	callstack 21
  6631   003E94                     
  6632                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6633   003E94  C036  F038         	movff	vfprintf@fmt,vfprintf@cfmt
  6634                           
  6635                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6636   003E98  EF58  F01F         	goto	l4151
  6637   003E9C                     l4149:
  6638                           
  6639                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6640   003E9C  C034  F029         	movff	vfprintf@fp,vfpfcnvrt@fp
  6641   003EA0  C035  F02A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6642   003EA4  0E38               	movlw	low vfprintf@cfmt
  6643   003EA6  6E2B               	movwf	vfpfcnvrt@fmt^0,c
  6644   003EA8  C037  F02C         	movff	vfprintf@ap,vfpfcnvrt@ap
  6645   003EAC  EC05  F013         	call	_vfpfcnvrt	;wreg free
  6646   003EB0                     l4151:
  6647                           
  6648                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6649   003EB0  C038  FFF6         	movff	vfprintf@cfmt,tblptrl
  6650   003EB4                     	if	1	;There is more than 1 active tblptr byte
  6651   003EB4  0E10               	movlw	high __smallconst
  6652   003EB6  6EF7               	movwf	tblptrh,c
  6653   003EB8                     	endif
  6654   003EB8                     	if	0	;tblptru may be non-zero
  6655   003EB8                     	endif
  6656   003EB8                     	if	0	;tblptru may be non-zero
  6657   003EB8                     	endif
  6658   003EB8  0008               	tblrd		*
  6659   003EBA  50F5               	movf	tablat,w,c
  6660   003EBC  0900               	iorlw	0
  6661   003EBE  A4D8               	btfss	status,2,c
  6662   003EC0  EF64  F01F         	goto	u4831
  6663   003EC4  EF66  F01F         	goto	u4830
  6664   003EC8                     u4831:
  6665   003EC8  EF4E  F01F         	goto	l4149
  6666   003ECC                     u4830:
  6667   003ECC                     
  6668                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6669   003ECC  0E00               	movlw	0
  6670   003ECE  6E35               	movwf	(?_vfprintf+1)^0,c
  6671   003ED0  0E00               	movlw	0
  6672   003ED2  6E34               	movwf	?_vfprintf^0,c
  6673   003ED4  0012               	return		;funcret
  6674   003ED6                     __end_of_vfprintf:
  6675                           	callstack 0
  6676                           
  6677 ;; *************** function _vfpfcnvrt *****************
  6678 ;; Defined at:
  6679 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  6682 ;;		 -> NULL(0), sprintf@f(12), 
  6683 ;;  fmt             1   42[COMRAM] PTR PTR unsigned char 
  6684 ;;		 -> vfprintf@cfmt(1), 
  6685 ;;  ap              1   43[COMRAM] PTR PTR void 
  6686 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;  convarg         4   45[COMRAM] struct .
  6689 ;;  done            1   50[COMRAM] _Bool 
  6690 ;;  cp              1   49[COMRAM] PTR unsigned char 
  6691 ;;		 -> STR_15(5), STR_14(6), STR_5(5), 
  6692 ;;  c               1    0        unsigned char 
  6693 ;; Return value:  Size  Location     Type
  6694 ;;                  1    wreg      void 
  6695 ;; Registers used:
  6696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6703 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6704 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6706 ;;Total ram usage:       11 bytes
  6707 ;; Hardware stack levels used: 1
  6708 ;; Hardware stack levels required when called: 6
  6709 ;; This function calls:
  6710 ;;		_dtoa
  6711 ;;		_fputc
  6712 ;;		_read_prec_or_width
  6713 ;;		_stoa
  6714 ;; This function is called by:
  6715 ;;		_vfprintf
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           	psect	text26
  6720   00260A                     __ptext26:
  6721                           	callstack 0
  6722   00260A                     _vfpfcnvrt:
  6723                           	callstack 21
  6724   00260A                     
  6725                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6726   00260A  502B               	movf	vfpfcnvrt@fmt^0,w,c
  6727   00260C  6ED9               	movwf	fsr2l,c
  6728   00260E  6ADA               	clrf	fsr2h,c
  6729   002610  CFDF FFF6          	movff	indf2,tblptrl
  6730   002614                     	if	1	;There is more than 1 active tblptr byte
  6731   002614  0E10               	movlw	high __smallconst
  6732   002616  6EF7               	movwf	tblptrh,c
  6733   002618                     	endif
  6734   002618                     	if	0	;tblptru may be non-zero
  6735   002618                     	endif
  6736   002618                     	if	0	;tblptru may be non-zero
  6737   002618                     	endif
  6738   002618  0008               	tblrd		*
  6739   00261A  50F5               	movf	tablat,w,c
  6740   00261C  0A25               	xorlw	37
  6741   00261E  A4D8               	btfss	status,2,c
  6742   002620  EF14  F013         	goto	u4731
  6743   002624  EF16  F013         	goto	u4730
  6744   002628                     u4731:
  6745   002628  EF1D  F014         	goto	l4141
  6746   00262C                     u4730:
  6747   00262C                     
  6748                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  6749   00262C  502B               	movf	vfpfcnvrt@fmt^0,w,c
  6750   00262E  6ED9               	movwf	fsr2l,c
  6751   002630  6ADA               	clrf	fsr2h,c
  6752   002632  2ADF               	incf	indf2,f,c
  6753   002634                     
  6754                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  6755   002634  0E00               	movlw	0
  6756   002636  0100               	movlb	0	; () banked
  6757   002638  6FEF               	movwf	(_width+1)& (0+255),b
  6758   00263A  0E00               	movlw	0
  6759   00263C  6FEE               	movwf	_width& (0+255),b
  6760   00263E  C0EE  F05B         	movff	_width,_flags
  6761   002642                     
  6762                           ; BSR set to: 0
  6763                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  6764   002642  69F0               	setf	_prec& (0+255),b
  6765   002644  69F1               	setf	(_prec+1)& (0+255),b
  6766   002646                     
  6767                           ; BSR set to: 0
  6768                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  6769   002646  0E00               	movlw	0
  6770   002648  6E33               	movwf	vfpfcnvrt@done^0,c
  6771                           
  6772                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  6773   00264A  EF41  F013         	goto	l4091
  6774   00264E                     l4081:
  6775                           
  6776                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1214:            
      +                                   flags |= (1 << 0);
  6777   00264E  805B               	bsf	_flags^0,0,c
  6778   002650                     
  6779                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1215:            
      +                                   ++*fmt;
  6780   002650  502B               	movf	vfpfcnvrt@fmt^0,w,c
  6781   002652  6ED9               	movwf	fsr2l,c
  6782   002654  6ADA               	clrf	fsr2h,c
  6783   002656  2ADF               	incf	indf2,f,c
  6784                           
  6785                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1216:            
      +                                   break;
  6786   002658  EF41  F013         	goto	l4091
  6787   00265C                     l4085:
  6788                           
  6789                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  6790   00265C  0E01               	movlw	1
  6791   00265E  6E33               	movwf	vfpfcnvrt@done^0,c
  6792                           
  6793                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  6794   002660  EF41  F013         	goto	l4091
  6795   002664                     l4089:
  6796   002664  502B               	movf	vfpfcnvrt@fmt^0,w,c
  6797   002666  6ED9               	movwf	fsr2l,c
  6798   002668  6ADA               	clrf	fsr2h,c
  6799   00266A  CFDF FFF6          	movff	indf2,tblptrl
  6800   00266E                     	if	1	;There is more than 1 active tblptr byte
  6801   00266E  0E10               	movlw	high __smallconst
  6802   002670  6EF7               	movwf	tblptrh,c
  6803   002672                     	endif
  6804   002672                     	if	0	;tblptru may be non-zero
  6805   002672                     	endif
  6806   002672                     	if	0	;tblptru may be non-zero
  6807   002672                     	endif
  6808   002672  0008               	tblrd		*
  6809   002674  50F5               	movf	tablat,w,c
  6810                           
  6811                           ; Switch size 1, requested type "simple"
  6812                           ; Number of cases is 1, Range of values is 45 to 45
  6813                           ; switch strategies available:
  6814                           ; Name         Instructions Cycles
  6815                           ; simple_byte            4     3 (average)
  6816                           ;	Chosen strategy is simple_byte
  6817   002676  0A2D               	xorlw	45	; case 45
  6818   002678  B4D8               	btfsc	status,2,c
  6819   00267A  EF27  F013         	goto	l4081
  6820   00267E  EF2E  F013         	goto	l4085
  6821   002682                     l4091:
  6822                           
  6823                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  6824   002682  5033               	movf	vfpfcnvrt@done^0,w,c
  6825   002684  B4D8               	btfsc	status,2,c
  6826   002686  EF47  F013         	goto	u4741
  6827   00268A  EF49  F013         	goto	u4740
  6828   00268E                     u4741:
  6829   00268E  EF32  F013         	goto	l4089
  6830   002692                     u4740:
  6831   002692                     
  6832                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  6833   002692  C02B  F009         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6834   002696  C02C  F00A         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6835   00269A  EC3E  F01E         	call	_read_prec_or_width	;wreg free
  6836   00269E  C009  F0EE         	movff	?_read_prec_or_width,_width
  6837   0026A2  C00A  F0EF         	movff	?_read_prec_or_width+1,_width+1
  6838   0026A6                     
  6839                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  6840   0026A6  0100               	movlb	0	; () banked
  6841   0026A8  BFEF               	btfsc	(_width+1)& (0+255),7,b
  6842   0026AA  EF5B  F013         	goto	u4750
  6843   0026AE  EF59  F013         	goto	u4751
  6844   0026B2                     u4751:
  6845   0026B2  EF60  F013         	goto	l4099
  6846   0026B6                     u4750:
  6847   0026B6                     
  6848                           ; BSR set to: 0
  6849                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  6850   0026B6  805B               	bsf	_flags^0,0,c
  6851                           
  6852                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  6853   0026B8  6DEE               	negf	_width& (0+255),b
  6854   0026BA  1FEF               	comf	(_width+1)& (0+255),f,b
  6855   0026BC  B0D8               	btfsc	status,0,c
  6856   0026BE  2BEF               	incf	(_width+1)& (0+255),f,b
  6857   0026C0                     l4099:
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  6861   0026C0  502B               	movf	vfpfcnvrt@fmt^0,w,c
  6862   0026C2  6ED9               	movwf	fsr2l,c
  6863   0026C4  6ADA               	clrf	fsr2h,c
  6864   0026C6  50DF               	movf	indf2,w,c
  6865   0026C8  6E32               	movwf	vfpfcnvrt@cp^0,c
  6866   0026CA                     
  6867                           ; BSR set to: 0
  6868                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6869   0026CA  C032  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6870   0026CE                     	if	1	;There is more than 1 active tblptr byte
  6871   0026CE  0E10               	movlw	high __smallconst
  6872   0026D0  6EF7               	movwf	tblptrh,c
  6873   0026D2                     	endif
  6874   0026D2                     	if	0	;tblptru may be non-zero
  6875   0026D2                     	endif
  6876   0026D2                     	if	0	;tblptru may be non-zero
  6877   0026D2                     	endif
  6878   0026D2  0008               	tblrd		*
  6879   0026D4  50F5               	movf	tablat,w,c
  6880   0026D6  0A64               	xorlw	100
  6881   0026D8  B4D8               	btfsc	status,2,c
  6882   0026DA  EF71  F013         	goto	u4761
  6883   0026DE  EF73  F013         	goto	u4760
  6884   0026E2                     u4761:
  6885   0026E2  EF81  F013         	goto	l4105
  6886   0026E6                     u4760:
  6887   0026E6                     
  6888                           ; BSR set to: 0
  6889   0026E6  C032  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6890   0026EA                     	if	1	;There is more than 1 active tblptr byte
  6891   0026EA  0E10               	movlw	high __smallconst
  6892   0026EC  6EF7               	movwf	tblptrh,c
  6893   0026EE                     	endif
  6894   0026EE                     	if	0	;tblptru may be non-zero
  6895   0026EE                     	endif
  6896   0026EE                     	if	0	;tblptru may be non-zero
  6897   0026EE                     	endif
  6898   0026EE  0008               	tblrd		*
  6899   0026F0  50F5               	movf	tablat,w,c
  6900   0026F2  0A69               	xorlw	105
  6901   0026F4  A4D8               	btfss	status,2,c
  6902   0026F6  EF7F  F013         	goto	u4771
  6903   0026FA  EF81  F013         	goto	u4770
  6904   0026FE                     u4771:
  6905   0026FE  EF9E  F013         	goto	l4113
  6906   002702                     u4770:
  6907   002702                     l4105:
  6908                           
  6909                           ; BSR set to: 0
  6910                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6911   002702  502C               	movf	vfpfcnvrt@ap^0,w,c
  6912   002704  6ED9               	movwf	fsr2l,c
  6913   002706  6ADA               	clrf	fsr2h,c
  6914   002708  0E02               	movlw	2
  6915   00270A  26DF               	addwf	indf2,f,c
  6916   00270C  5CDF               	subwf	indf2,w,c
  6917   00270E  6ED9               	movwf	fsr2l,c
  6918   002710  6ADA               	clrf	fsr2h,c
  6919   002712  CFDE F02E          	movff	postinc2,vfpfcnvrt@convarg
  6920   002716  CFDE F02F          	movff	postinc2,vfpfcnvrt@convarg+1
  6921   00271A                     
  6922                           ; BSR set to: 0
  6923                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  6924   00271A  502B               	movf	vfpfcnvrt@fmt^0,w,c
  6925   00271C  6ED9               	movwf	fsr2l,c
  6926   00271E  6ADA               	clrf	fsr2h,c
  6927   002720  2832               	incf	vfpfcnvrt@cp^0,w,c
  6928   002722  6EDF               	movwf	indf2,c
  6929   002724                     
  6930                           ; BSR set to: 0
  6931                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  6932   002724  C029  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  6933   002728  C02A  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6934   00272C  C02E  F01F         	movff	vfpfcnvrt@convarg,dtoa@d
  6935   002730  C02F  F020         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6936   002734  ECBE  F01A         	call	_dtoa	;wreg free
  6937   002738  EF30  F014         	goto	l1106
  6938   00273C                     l4113:
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  6942   00273C  0E00               	movlw	0
  6943   00273E  6E33               	movwf	vfpfcnvrt@done^0,c
  6944   002740                     
  6945                           ; BSR set to: 0
  6946                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  6947   002740  502B               	movf	vfpfcnvrt@fmt^0,w,c
  6948   002742  6ED9               	movwf	fsr2l,c
  6949   002744  6ADA               	clrf	fsr2h,c
  6950   002746  CFDF FFF6          	movff	indf2,tblptrl
  6951   00274A                     	if	1	;There is more than 1 active tblptr byte
  6952   00274A  0E10               	movlw	high __smallconst
  6953   00274C  6EF7               	movwf	tblptrh,c
  6954   00274E                     	endif
  6955   00274E                     	if	0	;tblptru may be non-zero
  6956   00274E                     	endif
  6957   00274E                     	if	0	;tblptru may be non-zero
  6958   00274E                     	endif
  6959   00274E  0008               	tblrd		*
  6960   002750  50F5               	movf	tablat,w,c
  6961   002752  0A73               	xorlw	115
  6962   002754  A4D8               	btfss	status,2,c
  6963   002756  EFAF  F013         	goto	u4781
  6964   00275A  EFB1  F013         	goto	u4780
  6965   00275E                     u4781:
  6966   00275E  EFB9  F013         	goto	l4121
  6967   002762                     u4780:
  6968   002762                     
  6969                           ; BSR set to: 0
  6970                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  6971   002762  502B               	movf	vfpfcnvrt@fmt^0,w,c
  6972   002764  6ED9               	movwf	fsr2l,c
  6973   002766  6ADA               	clrf	fsr2h,c
  6974   002768  2ADF               	incf	indf2,f,c
  6975   00276A                     l4119:
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  6979   00276A  0E01               	movlw	1
  6980   00276C  6E33               	movwf	vfpfcnvrt@done^0,c
  6981                           
  6982                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  6983   00276E  EFFB  F013         	goto	l4131
  6984   002772                     l4121:
  6985                           
  6986                           ; BSR set to: 0
  6987   002772  502B               	movf	vfpfcnvrt@fmt^0,w,c
  6988   002774  6ED9               	movwf	fsr2l,c
  6989   002776  6ADA               	clrf	fsr2h,c
  6990   002778  CFDF FFF6          	movff	indf2,tblptrl
  6991   00277C                     	if	1	;There is more than 1 active tblptr byte
  6992   00277C  0E10               	movlw	high __smallconst
  6993   00277E  6EF7               	movwf	tblptrh,c
  6994   002780                     	endif
  6995   002780                     	if	0	;tblptru may be non-zero
  6996   002780                     	endif
  6997   002780                     	if	0	;tblptru may be non-zero
  6998   002780                     	endif
  6999   002780  0008               	tblrd		*
  7000   002782  50F5               	movf	tablat,w,c
  7001   002784  0A6C               	xorlw	108
  7002   002786  A4D8               	btfss	status,2,c
  7003   002788  EFC8  F013         	goto	u4791
  7004   00278C  EFCA  F013         	goto	u4790
  7005   002790                     u4791:
  7006   002790  EFFB  F013         	goto	l4131
  7007   002794                     u4790:
  7008   002794                     
  7009                           ; BSR set to: 0
  7010   002794  502B               	movf	vfpfcnvrt@fmt^0,w,c
  7011   002796  6ED9               	movwf	fsr2l,c
  7012   002798  6ADA               	clrf	fsr2h,c
  7013   00279A  50DF               	movf	indf2,w,c
  7014   00279C  6E2D               	movwf	??_vfpfcnvrt^0,c
  7015   00279E  0E01               	movlw	1
  7016   0027A0  262D               	addwf	??_vfpfcnvrt^0,f,c
  7017   0027A2  C02D  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7018   0027A6                     	if	1	;There is more than 1 active tblptr byte
  7019   0027A6  0E10               	movlw	high __smallconst
  7020   0027A8  6EF7               	movwf	tblptrh,c
  7021   0027AA                     	endif
  7022   0027AA                     	if	0	;tblptru may be non-zero
  7023   0027AA                     	endif
  7024   0027AA                     	if	0	;tblptru may be non-zero
  7025   0027AA                     	endif
  7026   0027AA  0008               	tblrd		*
  7027   0027AC  50F5               	movf	tablat,w,c
  7028   0027AE  0A6C               	xorlw	108
  7029   0027B0  A4D8               	btfss	status,2,c
  7030   0027B2  EFDD  F013         	goto	u4801
  7031   0027B6  EFDF  F013         	goto	u4800
  7032   0027BA                     u4801:
  7033   0027BA  EFFB  F013         	goto	l4131
  7034   0027BE                     u4800:
  7035   0027BE                     
  7036                           ; BSR set to: 0
  7037   0027BE  502B               	movf	vfpfcnvrt@fmt^0,w,c
  7038   0027C0  6ED9               	movwf	fsr2l,c
  7039   0027C2  6ADA               	clrf	fsr2h,c
  7040   0027C4  50DF               	movf	indf2,w,c
  7041   0027C6  6E2D               	movwf	??_vfpfcnvrt^0,c
  7042   0027C8  0E02               	movlw	2
  7043   0027CA  262D               	addwf	??_vfpfcnvrt^0,f,c
  7044   0027CC  C02D  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7045   0027D0                     	if	1	;There is more than 1 active tblptr byte
  7046   0027D0  0E10               	movlw	high __smallconst
  7047   0027D2  6EF7               	movwf	tblptrh,c
  7048   0027D4                     	endif
  7049   0027D4                     	if	0	;tblptru may be non-zero
  7050   0027D4                     	endif
  7051   0027D4                     	if	0	;tblptru may be non-zero
  7052   0027D4                     	endif
  7053   0027D4  0008               	tblrd		*
  7054   0027D6  50F5               	movf	tablat,w,c
  7055   0027D8  0A73               	xorlw	115
  7056   0027DA  A4D8               	btfss	status,2,c
  7057   0027DC  EFF2  F013         	goto	u4811
  7058   0027E0  EFF4  F013         	goto	u4810
  7059   0027E4                     u4811:
  7060   0027E4  EFFB  F013         	goto	l4131
  7061   0027E8                     u4810:
  7062   0027E8                     
  7063                           ; BSR set to: 0
  7064                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  7065   0027E8  502B               	movf	vfpfcnvrt@fmt^0,w,c
  7066   0027EA  6ED9               	movwf	fsr2l,c
  7067   0027EC  6ADA               	clrf	fsr2h,c
  7068   0027EE  0E03               	movlw	3
  7069   0027F0  26DF               	addwf	indf2,f,c
  7070   0027F2  EFB5  F013         	goto	l4119
  7071   0027F6                     l4131:
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  7075   0027F6  5033               	movf	vfpfcnvrt@done^0,w,c
  7076   0027F8  B4D8               	btfsc	status,2,c
  7077   0027FA  EF01  F014         	goto	u4821
  7078   0027FE  EF03  F014         	goto	u4820
  7079   002802                     u4821:
  7080   002802  EF17  F014         	goto	l4137
  7081   002806                     u4820:
  7082   002806                     
  7083                           ; BSR set to: 0
  7084                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
  7085   002806  C029  F00D         	movff	vfpfcnvrt@fp,stoa@fp
  7086   00280A  C02A  F00E         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  7087   00280E  502C               	movf	vfpfcnvrt@ap^0,w,c
  7088   002810  6ED9               	movwf	fsr2l,c
  7089   002812  6ADA               	clrf	fsr2h,c
  7090   002814  0E02               	movlw	2
  7091   002816  26DF               	addwf	indf2,f,c
  7092   002818  5CDF               	subwf	indf2,w,c
  7093   00281A  6ED9               	movwf	fsr2l,c
  7094   00281C  6ADA               	clrf	fsr2h,c
  7095   00281E  CFDE F00F          	movff	postinc2,stoa@s
  7096   002822  CFDE F010          	movff	postinc2,stoa@s+1
  7097   002826  EC57  F019         	call	_stoa	;wreg free
  7098   00282A  EF30  F014         	goto	l1106
  7099   00282E                     l4137:
  7100                           
  7101                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7102   00282E  502B               	movf	vfpfcnvrt@fmt^0,w,c
  7103   002830  6ED9               	movwf	fsr2l,c
  7104   002832  6ADA               	clrf	fsr2h,c
  7105   002834  2ADF               	incf	indf2,f,c
  7106   002836  EF30  F014         	goto	l1106
  7107   00283A                     l4141:
  7108                           
  7109                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7110   00283A  502B               	movf	vfpfcnvrt@fmt^0,w,c
  7111   00283C  6ED9               	movwf	fsr2l,c
  7112   00283E  6ADA               	clrf	fsr2h,c
  7113   002840  CFDF FFF6          	movff	indf2,tblptrl
  7114   002844                     	if	1	;There is more than 1 active tblptr byte
  7115   002844  0E10               	movlw	high __smallconst
  7116   002846  6EF7               	movwf	tblptrh,c
  7117   002848                     	endif
  7118   002848                     	if	0	;tblptru may be non-zero
  7119   002848                     	endif
  7120   002848                     	if	0	;tblptru may be non-zero
  7121   002848                     	endif
  7122   002848  0008               	tblrd		*
  7123   00284A  50F5               	movf	tablat,w,c
  7124   00284C  6E04               	movwf	fputc@c^0,c
  7125   00284E  6A05               	clrf	(fputc@c+1)^0,c
  7126   002850  C029  F006         	movff	vfpfcnvrt@fp,fputc@fp
  7127   002854  C02A  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7128   002858  EC30  F01D         	call	_fputc	;wreg free
  7129   00285C  EF17  F014         	goto	l4137
  7130   002860                     l1106:
  7131   002860  0012               	return		;funcret
  7132   002862                     __end_of_vfpfcnvrt:
  7133                           	callstack 0
  7134                           
  7135 ;; *************** function _stoa *****************
  7136 ;; Defined at:
  7137 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  7140 ;;		 -> NULL(0), sprintf@f(12), 
  7141 ;;  s               2   14[COMRAM] PTR unsigned char 
  7142 ;;		 -> ?_printf(2), ?_sprintf(2), STR_13(1), STR_12(6), 
  7143 ;;		 -> STR_11(5), STR_10(4), STR_9(4), STR_8(4), 
  7144 ;;		 -> STR_7(5), STR_6(5), 
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;  l               2   24[COMRAM] int 
  7147 ;;  cp              2   22[COMRAM] PTR unsigned char 
  7148 ;;		 -> ?_printf(2), STR_16(7), ?_sprintf(2), STR_13(1), 
  7149 ;;		 -> STR_12(6), STR_11(5), STR_10(4), STR_9(4), 
  7150 ;;		 -> STR_8(4), STR_7(5), STR_6(5), 
  7151 ;;  w               2   20[COMRAM] int 
  7152 ;;  p               2   18[COMRAM] int 
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  1    wreg      void 
  7155 ;; Registers used:
  7156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7162 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7163 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7165 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7166 ;;Total ram usage:       14 bytes
  7167 ;; Hardware stack levels used: 1
  7168 ;; Hardware stack levels required when called: 3
  7169 ;; This function calls:
  7170 ;;		_fputc
  7171 ;; This function is called by:
  7172 ;;		_vfpfcnvrt
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           	psect	text27
  7177   0032AE                     __ptext27:
  7178                           	callstack 0
  7179   0032AE                     _stoa:
  7180                           	callstack 23
  7181   0032AE                     
  7182                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
  7183   0032AE  C00F  F017         	movff	stoa@s,stoa@cp
  7184   0032B2  C010  F018         	movff	stoa@s+1,stoa@cp+1
  7185                           
  7186                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
  7187   0032B6  5017               	movf	stoa@cp^0,w,c
  7188   0032B8  1018               	iorwf	(stoa@cp+1)^0,w,c
  7189   0032BA  A4D8               	btfss	status,2,c
  7190   0032BC  EF62  F019         	goto	u2971
  7191   0032C0  EF64  F019         	goto	u2970
  7192   0032C4                     u2971:
  7193   0032C4  EF6A  F019         	goto	l2985
  7194   0032C8                     u2970:
  7195   0032C8                     
  7196                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
  7197   0032C8  0E85               	movlw	low STR_16
  7198   0032CA  6E17               	movwf	stoa@cp^0,c
  7199   0032CC  5017               	movf	stoa@cp^0,w,c
  7200   0032CE  A4D8               	btfss	status,2,c
  7201   0032D0  0E10               	movlw	high __smallconst
  7202   0032D2  6E18               	movwf	(stoa@cp+1)^0,c
  7203   0032D4                     l2985:
  7204                           
  7205                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
  7206   0032D4  0E00               	movlw	0
  7207   0032D6  6E1A               	movwf	(stoa@l+1)^0,c
  7208   0032D8  0E00               	movlw	0
  7209   0032DA  6E19               	movwf	stoa@l^0,c
  7210   0032DC  EF72  F019         	goto	l2989
  7211   0032E0                     l2987:
  7212   0032E0  4A19               	infsnz	stoa@l^0,f,c
  7213   0032E2  2A1A               	incf	(stoa@l+1)^0,f,c
  7214   0032E4                     l2989:
  7215   0032E4  5019               	movf	stoa@l^0,w,c
  7216   0032E6  2417               	addwf	stoa@cp^0,w,c
  7217   0032E8  6E11               	movwf	??_stoa^0,c
  7218   0032EA  501A               	movf	(stoa@l+1)^0,w,c
  7219   0032EC  2018               	addwfc	(stoa@cp+1)^0,w,c
  7220   0032EE  6E12               	movwf	(??_stoa+1)^0,c
  7221   0032F0  C011  FFF6         	movff	??_stoa,tblptrl
  7222   0032F4  C012  FFF7         	movff	??_stoa+1,tblptrh
  7223   0032F8  0E00               	movlw	low (__smallconst shr (0+16))
  7224   0032FA  6EF8               	movwf	tblptru,c
  7225   0032FC  0E0F               	movlw	(high __ramtop+-1)
  7226   0032FE  64F7               	cpfsgt	tblptrh,c
  7227   003300  D003               	bra	u2987
  7228   003302  0008               	tblrd		*
  7229   003304  50F5               	movf	tablat,w,c
  7230   003306  D005               	bra	u2980
  7231   003308                     u2987:
  7232   003308  CFF6 FFE1          	movff	tblptrl,fsr1l
  7233   00330C  CFF7 FFE2          	movff	tblptrh,fsr1h
  7234   003310  50E7               	movf	indf1,w,c
  7235   003312                     u2980:
  7236   003312  0900               	iorlw	0
  7237   003314  A4D8               	btfss	status,2,c
  7238   003316  EF8F  F019         	goto	u2991
  7239   00331A  EF91  F019         	goto	u2990
  7240   00331E                     u2991:
  7241   00331E  EF70  F019         	goto	l2987
  7242   003322                     u2990:
  7243   003322                     
  7244                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 965:     p = l;
  7245   003322  C019  F013         	movff	stoa@l,stoa@p
  7246   003326  C01A  F014         	movff	stoa@l+1,stoa@p+1
  7247                           
  7248                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
  7249   00332A  C0EE  F015         	movff	_width,stoa@w
  7250   00332E  C0EF  F016         	movff	_width+1,stoa@w+1
  7251                           
  7252                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
  7253   003332  B05B               	btfsc	_flags^0,0,c
  7254   003334  EF9E  F019         	goto	u3001
  7255   003338  EFA0  F019         	goto	u3000
  7256   00333C                     u3001:
  7257   00333C  EFDC  F019         	goto	l3003
  7258   003340                     u3000:
  7259   003340  EFAE  F019         	goto	l2997
  7260   003344                     l2993:
  7261                           
  7262                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
  7263   003344  0E00               	movlw	0
  7264   003346  6E05               	movwf	(fputc@c+1)^0,c
  7265   003348  0E20               	movlw	32
  7266   00334A  6E04               	movwf	fputc@c^0,c
  7267   00334C  C00D  F006         	movff	stoa@fp,fputc@fp
  7268   003350  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  7269   003354  EC30  F01D         	call	_fputc	;wreg free
  7270   003358                     
  7271                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
  7272   003358  4A19               	infsnz	stoa@l^0,f,c
  7273   00335A  2A1A               	incf	(stoa@l+1)^0,f,c
  7274   00335C                     l2997:
  7275                           
  7276                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
  7277   00335C  5015               	movf	stoa@w^0,w,c
  7278   00335E  5C19               	subwf	stoa@l^0,w,c
  7279   003360  501A               	movf	(stoa@l+1)^0,w,c
  7280   003362  0A80               	xorlw	128
  7281   003364  6E11               	movwf	??_stoa^0,c
  7282   003366  5016               	movf	(stoa@w+1)^0,w,c
  7283   003368  0A80               	xorlw	128
  7284   00336A  5811               	subwfb	??_stoa^0,w,c
  7285   00336C  A0D8               	btfss	status,0,c
  7286   00336E  EFBB  F019         	goto	u3011
  7287   003372  EFBD  F019         	goto	u3010
  7288   003376                     u3011:
  7289   003376  EFA2  F019         	goto	l2993
  7290   00337A                     u3010:
  7291   00337A  EFDC  F019         	goto	l3003
  7292   00337E                     l2999:
  7293                           
  7294                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
  7295   00337E  C017  FFF6         	movff	stoa@cp,tblptrl
  7296   003382  C018  FFF7         	movff	stoa@cp+1,tblptrh
  7297   003386  0E00               	movlw	low (__smallconst shr (0+16))
  7298   003388  6EF8               	movwf	tblptru,c
  7299   00338A  0E0F               	movlw	(high __ramtop+-1)
  7300   00338C  64F7               	cpfsgt	tblptrh,c
  7301   00338E  D003               	bra	u3027
  7302   003390  0008               	tblrd		*
  7303   003392  50F5               	movf	tablat,w,c
  7304   003394  D005               	bra	u3020
  7305   003396                     u3027:
  7306   003396  CFF6 FFE1          	movff	tblptrl,fsr1l
  7307   00339A  CFF7 FFE2          	movff	tblptrh,fsr1h
  7308   00339E  50E7               	movf	indf1,w,c
  7309   0033A0                     u3020:
  7310   0033A0  6E11               	movwf	??_stoa^0,c
  7311   0033A2  5011               	movf	??_stoa^0,w,c
  7312   0033A4  6E04               	movwf	fputc@c^0,c
  7313   0033A6  6A05               	clrf	(fputc@c+1)^0,c
  7314   0033A8  C00D  F006         	movff	stoa@fp,fputc@fp
  7315   0033AC  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  7316   0033B0  EC30  F01D         	call	_fputc	;wreg free
  7317   0033B4                     
  7318                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
  7319   0033B4  4A17               	infsnz	stoa@cp^0,f,c
  7320   0033B6  2A18               	incf	(stoa@cp+1)^0,f,c
  7321   0033B8                     l3003:
  7322                           
  7323                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
  7324   0033B8  0613               	decf	stoa@p^0,f,c
  7325   0033BA  A0D8               	btfss	status,0,c
  7326   0033BC  0614               	decf	(stoa@p+1)^0,f,c
  7327   0033BE  2813               	incf	stoa@p^0,w,c
  7328   0033C0  E106               	bnz	u3031
  7329   0033C2  2814               	incf	(stoa@p+1)^0,w,c
  7330   0033C4  A4D8               	btfss	status,2,c
  7331   0033C6  EFE7  F019         	goto	u3031
  7332   0033CA  EFE9  F019         	goto	u3030
  7333   0033CE                     u3031:
  7334   0033CE  EFBF  F019         	goto	l2999
  7335   0033D2                     u3030:
  7336   0033D2                     
  7337                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
  7338   0033D2  A05B               	btfss	_flags^0,0,c
  7339   0033D4  EFEE  F019         	goto	u3041
  7340   0033D8  EFF0  F019         	goto	u3040
  7341   0033DC                     u3041:
  7342   0033DC  EF0D  F01A         	goto	l1083
  7343   0033E0                     u3040:
  7344   0033E0  EFFE  F019         	goto	l3011
  7345   0033E4                     l3007:
  7346                           
  7347                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
  7348   0033E4  0E00               	movlw	0
  7349   0033E6  6E05               	movwf	(fputc@c+1)^0,c
  7350   0033E8  0E20               	movlw	32
  7351   0033EA  6E04               	movwf	fputc@c^0,c
  7352   0033EC  C00D  F006         	movff	stoa@fp,fputc@fp
  7353   0033F0  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  7354   0033F4  EC30  F01D         	call	_fputc	;wreg free
  7355   0033F8                     
  7356                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
  7357   0033F8  4A19               	infsnz	stoa@l^0,f,c
  7358   0033FA  2A1A               	incf	(stoa@l+1)^0,f,c
  7359   0033FC                     l3011:
  7360                           
  7361                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
  7362   0033FC  5015               	movf	stoa@w^0,w,c
  7363   0033FE  5C19               	subwf	stoa@l^0,w,c
  7364   003400  501A               	movf	(stoa@l+1)^0,w,c
  7365   003402  0A80               	xorlw	128
  7366   003404  6E11               	movwf	??_stoa^0,c
  7367   003406  5016               	movf	(stoa@w+1)^0,w,c
  7368   003408  0A80               	xorlw	128
  7369   00340A  5811               	subwfb	??_stoa^0,w,c
  7370   00340C  A0D8               	btfss	status,0,c
  7371   00340E  EF0B  F01A         	goto	u3051
  7372   003412  EF0D  F01A         	goto	u3050
  7373   003416                     u3051:
  7374   003416  EFF2  F019         	goto	l3007
  7375   00341A                     u3050:
  7376   00341A                     l1083:
  7377   00341A  0012               	return		;funcret
  7378   00341C                     __end_of_stoa:
  7379                           	callstack 0
  7380                           
  7381 ;; *************** function _read_prec_or_width *****************
  7382 ;; Defined at:
  7383 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;  fmt             1    8[COMRAM] PTR PTR const unsigned c
  7386 ;;		 -> vfprintf@cfmt(1), 
  7387 ;;  ap              1    9[COMRAM] PTR PTR void [1]
  7388 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;  c               1   10[COMRAM] unsigned char 
  7391 ;;  n               2   11[COMRAM] int 
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  2    8[COMRAM] int 
  7394 ;; Registers used:
  7395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7402 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7404 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7405 ;;Total ram usage:        5 bytes
  7406 ;; Hardware stack levels used: 1
  7407 ;; Hardware stack levels required when called: 2
  7408 ;; This function calls:
  7409 ;;		___wmul
  7410 ;; This function is called by:
  7411 ;;		_vfpfcnvrt
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415                           	psect	text28
  7416   003C7C                     __ptext28:
  7417                           	callstack 0
  7418   003C7C                     _read_prec_or_width:
  7419                           	callstack 24
  7420   003C7C                     
  7421                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  7422   003C7C  0E00               	movlw	0
  7423   003C7E  6E0D               	movwf	(read_prec_or_width@n+1)^0,c
  7424   003C80  0E00               	movlw	0
  7425   003C82  6E0C               	movwf	read_prec_or_width@n^0,c
  7426   003C84                     
  7427                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  7428   003C84  5009               	movf	read_prec_or_width@fmt^0,w,c
  7429   003C86  6ED9               	movwf	fsr2l,c
  7430   003C88  6ADA               	clrf	fsr2h,c
  7431   003C8A  CFDF FFF6          	movff	indf2,tblptrl
  7432   003C8E                     	if	1	;There is more than 1 active tblptr byte
  7433   003C8E  0E10               	movlw	high __smallconst
  7434   003C90  6EF7               	movwf	tblptrh,c
  7435   003C92                     	endif
  7436   003C92                     	if	0	;tblptru may be non-zero
  7437   003C92                     	endif
  7438   003C92                     	if	0	;tblptru may be non-zero
  7439   003C92                     	endif
  7440   003C92  0008               	tblrd		*
  7441   003C94  50F5               	movf	tablat,w,c
  7442   003C96  0A2A               	xorlw	42
  7443   003C98  A4D8               	btfss	status,2,c
  7444   003C9A  EF51  F01E         	goto	u3061
  7445   003C9E  EF53  F01E         	goto	u3060
  7446   003CA2                     u3061:
  7447   003CA2  EF79  F01E         	goto	l3025
  7448   003CA6                     u3060:
  7449   003CA6                     
  7450                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  7451   003CA6  5009               	movf	read_prec_or_width@fmt^0,w,c
  7452   003CA8  6ED9               	movwf	fsr2l,c
  7453   003CAA  6ADA               	clrf	fsr2h,c
  7454   003CAC  2ADF               	incf	indf2,f,c
  7455   003CAE                     
  7456                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  7457   003CAE  500A               	movf	read_prec_or_width@ap^0,w,c
  7458   003CB0  6ED9               	movwf	fsr2l,c
  7459   003CB2  6ADA               	clrf	fsr2h,c
  7460   003CB4  0E02               	movlw	2
  7461   003CB6  26DF               	addwf	indf2,f,c
  7462   003CB8  5CDF               	subwf	indf2,w,c
  7463   003CBA  6ED9               	movwf	fsr2l,c
  7464   003CBC  6ADA               	clrf	fsr2h,c
  7465   003CBE  CFDE F00C          	movff	postinc2,read_prec_or_width@n
  7466   003CC2  CFDE F00D          	movff	postinc2,read_prec_or_width@n+1
  7467                           
  7468                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  7469   003CC6  EF8C  F01E         	goto	l1087
  7470   003CCA                     l3021:
  7471                           
  7472                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  7473   003CCA  C00C  F003         	movff	read_prec_or_width@n,___wmul@multiplier
  7474   003CCE  C00D  F004         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  7475   003CD2  0E00               	movlw	0
  7476   003CD4  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  7477   003CD6  0E0A               	movlw	10
  7478   003CD8  6E05               	movwf	___wmul@multiplicand^0,c
  7479   003CDA  EC11  F020         	call	___wmul	;wreg free
  7480   003CDE  500B               	movf	read_prec_or_width@c^0,w,c
  7481   003CE0  2403               	addwf	?___wmul^0,w,c
  7482   003CE2  6E0C               	movwf	read_prec_or_width@n^0,c
  7483   003CE4  0E00               	movlw	0
  7484   003CE6  2004               	addwfc	(?___wmul+1)^0,w,c
  7485   003CE8  6E0D               	movwf	(read_prec_or_width@n+1)^0,c
  7486   003CEA                     
  7487                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  7488   003CEA  5009               	movf	read_prec_or_width@fmt^0,w,c
  7489   003CEC  6ED9               	movwf	fsr2l,c
  7490   003CEE  6ADA               	clrf	fsr2h,c
  7491   003CF0  2ADF               	incf	indf2,f,c
  7492   003CF2                     l3025:
  7493                           
  7494                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  7495   003CF2  5009               	movf	read_prec_or_width@fmt^0,w,c
  7496   003CF4  6ED9               	movwf	fsr2l,c
  7497   003CF6  6ADA               	clrf	fsr2h,c
  7498   003CF8  CFDF FFF6          	movff	indf2,tblptrl
  7499   003CFC                     	if	1	;There is more than 1 active tblptr byte
  7500   003CFC  0E10               	movlw	high __smallconst
  7501   003CFE  6EF7               	movwf	tblptrh,c
  7502   003D00                     	endif
  7503   003D00                     	if	0	;tblptru may be non-zero
  7504   003D00                     	endif
  7505   003D00                     	if	0	;tblptru may be non-zero
  7506   003D00                     	endif
  7507   003D00  0008               	tblrd		*
  7508   003D02  50F5               	movf	tablat,w,c
  7509   003D04  0FD0               	addlw	208
  7510   003D06  6E0B               	movwf	read_prec_or_width@c^0,c
  7511   003D08  0E09               	movlw	9
  7512   003D0A  640B               	cpfsgt	read_prec_or_width@c^0,c
  7513   003D0C  EF8A  F01E         	goto	u3071
  7514   003D10  EF8C  F01E         	goto	u3070
  7515   003D14                     u3071:
  7516   003D14  EF65  F01E         	goto	l3021
  7517   003D18                     u3070:
  7518   003D18                     l1087:
  7519                           
  7520                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  7521   003D18  C00C  F009         	movff	read_prec_or_width@n,?_read_prec_or_width
  7522   003D1C  C00D  F00A         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  7523   003D20  0012               	return		;funcret
  7524   003D22                     __end_of_read_prec_or_width:
  7525                           	callstack 0
  7526                           
  7527 ;; *************** function ___wmul *****************
  7528 ;; Defined at:
  7529 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  7530 ;; Parameters:    Size  Location     Type
  7531 ;;  multiplier      2    2[COMRAM] unsigned int 
  7532 ;;  multiplicand    2    4[COMRAM] unsigned int 
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;  product         2    6[COMRAM] unsigned int 
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  2    2[COMRAM] unsigned int 
  7537 ;; Registers used:
  7538 ;;		wreg, status,2, status,0, prodl, prodh
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7545 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7547 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7548 ;;Total ram usage:        6 bytes
  7549 ;; Hardware stack levels used: 1
  7550 ;; Hardware stack levels required when called: 1
  7551 ;; This function calls:
  7552 ;;		Nothing
  7553 ;; This function is called by:
  7554 ;;		_read_prec_or_width
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558                           	psect	text29
  7559   004022                     __ptext29:
  7560                           	callstack 0
  7561   004022                     ___wmul:
  7562                           	callstack 24
  7563   004022  5003               	movf	___wmul@multiplier^0,w,c
  7564   004024  0205               	mulwf	___wmul@multiplicand^0,c
  7565   004026  CFF3 F007          	movff	prodl,___wmul@product
  7566   00402A  CFF4 F008          	movff	prodh,___wmul@product+1
  7567   00402E  5003               	movf	___wmul@multiplier^0,w,c
  7568   004030  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  7569   004032  50F3               	movf	243,w,c
  7570   004034  2608               	addwf	(___wmul@product+1)^0,f,c
  7571   004036  5004               	movf	(___wmul@multiplier+1)^0,w,c
  7572   004038  0205               	mulwf	___wmul@multiplicand^0,c
  7573   00403A  50F3               	movf	243,w,c
  7574   00403C  2608               	addwf	(___wmul@product+1)^0,f,c
  7575   00403E  C007  F003         	movff	___wmul@product,?___wmul
  7576   004042  C008  F004         	movff	___wmul@product+1,?___wmul+1
  7577   004046  0012               	return		;funcret
  7578   004048                     __end_of___wmul:
  7579                           	callstack 0
  7580                           
  7581 ;; *************** function _dtoa *****************
  7582 ;; Defined at:
  7583 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  7586 ;;		 -> NULL(0), sprintf@f(12), 
  7587 ;;  d               2   30[COMRAM] int 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;  i               2   38[COMRAM] int 
  7590 ;;  w               2   35[COMRAM] int 
  7591 ;;  s               1   37[COMRAM] unsigned char 
  7592 ;;  p               1   34[COMRAM] _Bool 
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  1    wreg      void 
  7595 ;; Registers used:
  7596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7597 ;; Tracked objects:
  7598 ;;		On entry : 0/0
  7599 ;;		On exit  : 0/0
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7602 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7605 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7606 ;;Total ram usage:       12 bytes
  7607 ;; Hardware stack levels used: 1
  7608 ;; Hardware stack levels required when called: 5
  7609 ;; This function calls:
  7610 ;;		___awdiv
  7611 ;;		___awmod
  7612 ;;		_abs
  7613 ;;		_pad
  7614 ;; This function is called by:
  7615 ;;		_vfpfcnvrt
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           	psect	text30
  7620   00357C                     __ptext30:
  7621                           	callstack 0
  7622   00357C                     _dtoa:
  7623                           	callstack 21
  7624   00357C                     
  7625                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  7626   00357C  0E01               	movlw	1
  7627   00357E  6E23               	movwf	dtoa@p^0,c
  7628   003580                     
  7629                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  7630   003580  BE20               	btfsc	(dtoa@d+1)^0,7,c
  7631   003582  EFC5  F01A         	goto	u4581
  7632   003586  EFC8  F01A         	goto	u4580
  7633   00358A                     u4581:
  7634   00358A  0E01               	movlw	1
  7635   00358C  EFC9  F01A         	goto	u4590
  7636   003590                     u4580:
  7637   003590  0E00               	movlw	0
  7638   003592                     u4590:
  7639   003592  6E26               	movwf	dtoa@s^0,c
  7640   003594                     
  7641                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  7642   003594  C0EE  F024         	movff	_width,dtoa@w
  7643   003598  C0EF  F025         	movff	_width+1,dtoa@w+1
  7644   00359C                     
  7645                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  7646   00359C  5026               	movf	dtoa@s^0,w,c
  7647   00359E  B4D8               	btfsc	status,2,c
  7648   0035A0  EFD4  F01A         	goto	u4601
  7649   0035A4  EFD6  F01A         	goto	u4600
  7650   0035A8                     u4601:
  7651   0035A8  EFED  F01A         	goto	l1053
  7652   0035AC                     u4600:
  7653   0035AC                     
  7654                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  7655   0035AC  0624               	decf	dtoa@w^0,f,c
  7656   0035AE  A0D8               	btfss	status,0,c
  7657   0035B0  0625               	decf	(dtoa@w+1)^0,f,c
  7658   0035B2                     
  7659                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  7660   0035B2  5026               	movf	dtoa@s^0,w,c
  7661   0035B4  A4D8               	btfss	status,2,c
  7662   0035B6  EFDF  F01A         	goto	u4611
  7663   0035BA  EFE1  F01A         	goto	u4610
  7664   0035BE                     u4611:
  7665   0035BE  EFE7  F01A         	goto	l3995
  7666   0035C2                     u4610:
  7667   0035C2  0E00               	movlw	0
  7668   0035C4  6E22               	movwf	(_dtoa$2824+1)^0,c
  7669   0035C6  0E2B               	movlw	43
  7670   0035C8  6E21               	movwf	_dtoa$2824^0,c
  7671   0035CA  EFEB  F01A         	goto	l3997
  7672   0035CE                     l3995:
  7673   0035CE  0E00               	movlw	0
  7674   0035D0  6E22               	movwf	(_dtoa$2824+1)^0,c
  7675   0035D2  0E2D               	movlw	45
  7676   0035D4  6E21               	movwf	_dtoa$2824^0,c
  7677   0035D6                     l3997:
  7678   0035D6  C021  F026         	movff	_dtoa$2824,dtoa@s
  7679   0035DA                     l1053:
  7680                           
  7681                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  7682   0035DA  0E00               	movlw	0
  7683   0035DC  6E28               	movwf	(dtoa@i+1)^0,c
  7684   0035DE  0E1F               	movlw	31
  7685   0035E0  6E27               	movwf	dtoa@i^0,c
  7686   0035E2                     
  7687                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  7688   0035E2  0E00               	movlw	0
  7689   0035E4  0101               	movlb	1	; () banked
  7690   0035E6  6F1F               	movwf	(_dbuf+31)& (0+255),b
  7691                           
  7692                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7693   0035E8  EF25  F01B         	goto	l4011
  7694   0035EC                     l4001:
  7695                           
  7696                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  7697   0035EC  0627               	decf	dtoa@i^0,f,c
  7698   0035EE  A0D8               	btfss	status,0,c
  7699   0035F0  0628               	decf	(dtoa@i+1)^0,f,c
  7700   0035F2                     
  7701                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  7702   0035F2  0E00               	movlw	low _dbuf
  7703   0035F4  2427               	addwf	dtoa@i^0,w,c
  7704   0035F6  6ED9               	movwf	fsr2l,c
  7705   0035F8  0E01               	movlw	high _dbuf
  7706   0035FA  2028               	addwfc	(dtoa@i+1)^0,w,c
  7707   0035FC  6EDA               	movwf	fsr2h,c
  7708   0035FE  C01F  F003         	movff	dtoa@d,___awmod@dividend
  7709   003602  C020  F004         	movff	dtoa@d+1,___awmod@dividend+1
  7710   003606  0E00               	movlw	0
  7711   003608  6E06               	movwf	(___awmod@divisor+1)^0,c
  7712   00360A  0E0A               	movlw	10
  7713   00360C  6E05               	movwf	___awmod@divisor^0,c
  7714   00360E  ECE6  F01D         	call	___awmod	;wreg free
  7715   003612  C003  F009         	movff	?___awmod,abs@a
  7716   003616  C004  F00A         	movff	?___awmod+1,abs@a+1
  7717   00361A  ECF7  F01F         	call	_abs	;wreg free
  7718   00361E  5009               	movf	?_abs^0,w,c
  7719   003620  0F30               	addlw	48
  7720   003622  6EDF               	movwf	indf2,c
  7721   003624                     
  7722                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  7723   003624  0E00               	movlw	0
  7724   003626  6E23               	movwf	dtoa@p^0,c
  7725   003628                     
  7726                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  7727   003628  0624               	decf	dtoa@w^0,f,c
  7728   00362A  A0D8               	btfss	status,0,c
  7729   00362C  0625               	decf	(dtoa@w+1)^0,f,c
  7730   00362E                     
  7731                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  7732   00362E  C01F  F003         	movff	dtoa@d,___awdiv@dividend
  7733   003632  C020  F004         	movff	dtoa@d+1,___awdiv@dividend+1
  7734   003636  0E00               	movlw	0
  7735   003638  6E06               	movwf	(___awdiv@divisor+1)^0,c
  7736   00363A  0E0A               	movlw	10
  7737   00363C  6E05               	movwf	___awdiv@divisor^0,c
  7738   00363E  ECCE  F01C         	call	___awdiv	;wreg free
  7739   003642  C003  F01F         	movff	?___awdiv,dtoa@d
  7740   003646  C004  F020         	movff	?___awdiv+1,dtoa@d+1
  7741   00364A                     l4011:
  7742                           
  7743                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7744   00364A  BE28               	btfsc	(dtoa@i+1)^0,7,c
  7745   00364C  EF30  F01B         	goto	u4621
  7746   003650  5028               	movf	(dtoa@i+1)^0,w,c
  7747   003652  E108               	bnz	u4620
  7748   003654  0427               	decf	dtoa@i^0,w,c
  7749   003656  A0D8               	btfss	status,0,c
  7750   003658  EF30  F01B         	goto	u4621
  7751   00365C  EF32  F01B         	goto	u4620
  7752   003660                     u4621:
  7753   003660  EF43  F01B         	goto	l4017
  7754   003664                     u4620:
  7755   003664  501F               	movf	dtoa@d^0,w,c
  7756   003666  1020               	iorwf	(dtoa@d+1)^0,w,c
  7757   003668  A4D8               	btfss	status,2,c
  7758   00366A  EF39  F01B         	goto	u4631
  7759   00366E  EF3B  F01B         	goto	u4630
  7760   003672                     u4631:
  7761   003672  EFF6  F01A         	goto	l4001
  7762   003676                     u4630:
  7763   003676  5023               	movf	dtoa@p^0,w,c
  7764   003678  A4D8               	btfss	status,2,c
  7765   00367A  EF41  F01B         	goto	u4641
  7766   00367E  EF43  F01B         	goto	u4640
  7767   003682                     u4641:
  7768   003682  EFF6  F01A         	goto	l4001
  7769   003686                     u4640:
  7770   003686                     l4017:
  7771                           
  7772                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  7773   003686  5026               	movf	dtoa@s^0,w,c
  7774   003688  B4D8               	btfsc	status,2,c
  7775   00368A  EF49  F01B         	goto	u4651
  7776   00368E  EF4B  F01B         	goto	u4650
  7777   003692                     u4651:
  7778   003692  EF56  F01B         	goto	l4023
  7779   003696                     u4650:
  7780   003696                     
  7781                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  7782   003696  0627               	decf	dtoa@i^0,f,c
  7783   003698  A0D8               	btfss	status,0,c
  7784   00369A  0628               	decf	(dtoa@i+1)^0,f,c
  7785   00369C                     
  7786                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  7787   00369C  0E00               	movlw	low _dbuf
  7788   00369E  2427               	addwf	dtoa@i^0,w,c
  7789   0036A0  6ED9               	movwf	fsr2l,c
  7790   0036A2  0E01               	movlw	high _dbuf
  7791   0036A4  2028               	addwfc	(dtoa@i+1)^0,w,c
  7792   0036A6  6EDA               	movwf	fsr2h,c
  7793   0036A8  C026  FFDF         	movff	dtoa@s,indf2
  7794   0036AC                     l4023:
  7795                           
  7796                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7797   0036AC  C01D  F014         	movff	dtoa@fp,pad@fp
  7798   0036B0  C01E  F015         	movff	dtoa@fp+1,pad@fp+1
  7799   0036B4  0E00               	movlw	low _dbuf
  7800   0036B6  2427               	addwf	dtoa@i^0,w,c
  7801   0036B8  6E16               	movwf	pad@buf^0,c
  7802   0036BA  0E01               	movlw	high _dbuf
  7803   0036BC  2028               	addwfc	(dtoa@i+1)^0,w,c
  7804   0036BE  6E17               	movwf	(pad@buf+1)^0,c
  7805   0036C0  C024  F018         	movff	dtoa@w,pad@p
  7806   0036C4  C025  F019         	movff	dtoa@w+1,pad@p+1
  7807   0036C8  EC91  F01E         	call	_pad	;wreg free
  7808   0036CC  0012               	return		;funcret
  7809   0036CE                     __end_of_dtoa:
  7810                           	callstack 0
  7811                           
  7812 ;; *************** function _pad *****************
  7813 ;; Defined at:
  7814 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  7817 ;;		 -> NULL(0), sprintf@f(12), 
  7818 ;;  buf             2   21[COMRAM] PTR unsigned char 
  7819 ;;		 -> dbuf(32), 
  7820 ;;  p               2   23[COMRAM] int 
  7821 ;; Auto vars:     Size  Location     Type
  7822 ;;  i               2   26[COMRAM] int 
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  1    wreg      void 
  7825 ;; Registers used:
  7826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7832 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7835 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7836 ;;Total ram usage:        9 bytes
  7837 ;; Hardware stack levels used: 1
  7838 ;; Hardware stack levels required when called: 4
  7839 ;; This function calls:
  7840 ;;		_fputc
  7841 ;;		_fputs
  7842 ;; This function is called by:
  7843 ;;		_dtoa
  7844 ;; This function uses a non-reentrant model
  7845 ;;
  7846                           
  7847                           	psect	text31
  7848   003D22                     __ptext31:
  7849                           	callstack 0
  7850   003D22                     _pad:
  7851                           	callstack 21
  7852   003D22                     
  7853                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  7854   003D22  A05B               	btfss	_flags^0,0,c
  7855   003D24  EF96  F01E         	goto	u4541
  7856   003D28  EF98  F01E         	goto	u4540
  7857   003D2C                     u4541:
  7858   003D2C  EFA2  F01E         	goto	l3969
  7859   003D30                     u4540:
  7860   003D30                     
  7861                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  7862   003D30  C016  F00D         	movff	pad@buf,fputs@s
  7863   003D34  C017  F00E         	movff	pad@buf+1,fputs@s+1
  7864   003D38  C014  F00F         	movff	pad@fp,fputs@fp
  7865   003D3C  C015  F010         	movff	pad@fp+1,fputs@fp+1
  7866   003D40  EC28  F01F         	call	_fputs	;wreg free
  7867   003D44                     l3969:
  7868                           
  7869                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  7870   003D44  BE19               	btfsc	(pad@p+1)^0,7,c
  7871   003D46  EFA9  F01E         	goto	u4550
  7872   003D4A  EFA7  F01E         	goto	u4551
  7873   003D4E                     u4551:
  7874   003D4E  EFAD  F01E         	goto	l1045
  7875   003D52                     u4550:
  7876   003D52                     
  7877                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  7878   003D52  0E00               	movlw	0
  7879   003D54  6E19               	movwf	(pad@p+1)^0,c
  7880   003D56  0E00               	movlw	0
  7881   003D58  6E18               	movwf	pad@p^0,c
  7882   003D5A                     l1045:
  7883                           
  7884                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  7885   003D5A  0E00               	movlw	0
  7886   003D5C  6E1C               	movwf	(pad@i+1)^0,c
  7887   003D5E  0E00               	movlw	0
  7888   003D60  6E1B               	movwf	pad@i^0,c
  7889                           
  7890                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7891   003D62  EFBF  F01E         	goto	l3977
  7892   003D66                     l3973:
  7893                           
  7894                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  7895   003D66  0E00               	movlw	0
  7896   003D68  6E05               	movwf	(fputc@c+1)^0,c
  7897   003D6A  0E20               	movlw	32
  7898   003D6C  6E04               	movwf	fputc@c^0,c
  7899   003D6E  C014  F006         	movff	pad@fp,fputc@fp
  7900   003D72  C015  F007         	movff	pad@fp+1,fputc@fp+1
  7901   003D76  EC30  F01D         	call	_fputc	;wreg free
  7902   003D7A                     
  7903                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  7904   003D7A  4A1B               	infsnz	pad@i^0,f,c
  7905   003D7C  2A1C               	incf	(pad@i+1)^0,f,c
  7906   003D7E                     l3977:
  7907                           
  7908                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7909   003D7E  5018               	movf	pad@p^0,w,c
  7910   003D80  5C1B               	subwf	pad@i^0,w,c
  7911   003D82  501C               	movf	(pad@i+1)^0,w,c
  7912   003D84  0A80               	xorlw	128
  7913   003D86  6E1A               	movwf	??_pad^0,c
  7914   003D88  5019               	movf	(pad@p+1)^0,w,c
  7915   003D8A  0A80               	xorlw	128
  7916   003D8C  581A               	subwfb	??_pad^0,w,c
  7917   003D8E  A0D8               	btfss	status,0,c
  7918   003D90  EFCC  F01E         	goto	u4561
  7919   003D94  EFCE  F01E         	goto	u4560
  7920   003D98                     u4561:
  7921   003D98  EFB3  F01E         	goto	l3973
  7922   003D9C                     u4560:
  7923   003D9C                     
  7924                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  7925   003D9C  B05B               	btfsc	_flags^0,0,c
  7926   003D9E  EFD3  F01E         	goto	u4571
  7927   003DA2  EFD5  F01E         	goto	u4570
  7928   003DA6                     u4571:
  7929   003DA6  EFDF  F01E         	goto	l1050
  7930   003DAA                     u4570:
  7931   003DAA                     
  7932                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  7933   003DAA  C016  F00D         	movff	pad@buf,fputs@s
  7934   003DAE  C017  F00E         	movff	pad@buf+1,fputs@s+1
  7935   003DB2  C014  F00F         	movff	pad@fp,fputs@fp
  7936   003DB6  C015  F010         	movff	pad@fp+1,fputs@fp+1
  7937   003DBA  EC28  F01F         	call	_fputs	;wreg free
  7938   003DBE                     l1050:
  7939   003DBE  0012               	return		;funcret
  7940   003DC0                     __end_of_pad:
  7941                           	callstack 0
  7942                           
  7943 ;; *************** function _fputs *****************
  7944 ;; Defined at:
  7945 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  s               2   12[COMRAM] PTR const unsigned char 
  7948 ;;		 -> dbuf(32), 
  7949 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  7950 ;;		 -> NULL(0), sprintf@f(12), 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;  i               2   17[COMRAM] int 
  7953 ;;  c               1   16[COMRAM] unsigned char 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  2   12[COMRAM] int 
  7956 ;; Registers used:
  7957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7963 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7964 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;Total ram usage:        7 bytes
  7968 ;; Hardware stack levels used: 1
  7969 ;; Hardware stack levels required when called: 3
  7970 ;; This function calls:
  7971 ;;		_fputc
  7972 ;; This function is called by:
  7973 ;;		_pad
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           	psect	text32
  7978   003E50                     __ptext32:
  7979                           	callstack 0
  7980   003E50                     _fputs:
  7981                           	callstack 21
  7982   003E50  0E00               	movlw	0
  7983   003E52  6E13               	movwf	(fputs@i+1)^0,c
  7984   003E54  0E00               	movlw	0
  7985   003E56  6E12               	movwf	fputs@i^0,c
  7986   003E58  EF39  F01F         	goto	l3963
  7987   003E5C                     l3959:
  7988   003E5C  C011  F004         	movff	fputs@c,fputc@c
  7989   003E60  6A05               	clrf	(fputc@c+1)^0,c
  7990   003E62  C00F  F006         	movff	fputs@fp,fputc@fp
  7991   003E66  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  7992   003E6A  EC30  F01D         	call	_fputc	;wreg free
  7993   003E6E  4A12               	infsnz	fputs@i^0,f,c
  7994   003E70  2A13               	incf	(fputs@i+1)^0,f,c
  7995   003E72                     l3963:
  7996   003E72  5012               	movf	fputs@i^0,w,c
  7997   003E74  240D               	addwf	fputs@s^0,w,c
  7998   003E76  6ED9               	movwf	fsr2l,c
  7999   003E78  5013               	movf	(fputs@i+1)^0,w,c
  8000   003E7A  200E               	addwfc	(fputs@s+1)^0,w,c
  8001   003E7C  6EDA               	movwf	fsr2h,c
  8002   003E7E  50DF               	movf	indf2,w,c
  8003   003E80  6E11               	movwf	fputs@c^0,c
  8004   003E82  5011               	movf	fputs@c^0,w,c
  8005   003E84  A4D8               	btfss	status,2,c
  8006   003E86  EF47  F01F         	goto	u4531
  8007   003E8A  EF49  F01F         	goto	u4530
  8008   003E8E                     u4531:
  8009   003E8E  EF2E  F01F         	goto	l3959
  8010   003E92                     u4530:
  8011   003E92  0012               	return		;funcret
  8012   003E94                     __end_of_fputs:
  8013                           	callstack 0
  8014                           
  8015 ;; *************** function _fputc *****************
  8016 ;; Defined at:
  8017 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;  c               2    3[COMRAM] int 
  8020 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  8021 ;;		 -> NULL(0), sprintf@f(12), 
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;		None
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  2    3[COMRAM] int 
  8026 ;; Registers used:
  8027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8028 ;; Tracked objects:
  8029 ;;		On entry : 0/0
  8030 ;;		On exit  : 0/0
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8033 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8035 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8036 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8037 ;;Total ram usage:        9 bytes
  8038 ;; Hardware stack levels used: 1
  8039 ;; Hardware stack levels required when called: 2
  8040 ;; This function calls:
  8041 ;;		_putch
  8042 ;; This function is called by:
  8043 ;;		_pad
  8044 ;;		_stoa
  8045 ;;		_vfpfcnvrt
  8046 ;;		_fputs
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           	psect	text33
  8051   003A60                     __ptext33:
  8052                           	callstack 0
  8053   003A60                     _fputc:
  8054                           	callstack 23
  8055   003A60  5006               	movf	fputc@fp^0,w,c
  8056   003A62  1007               	iorwf	(fputc@fp+1)^0,w,c
  8057   003A64  B4D8               	btfsc	status,2,c
  8058   003A66  EF37  F01D         	goto	u2281
  8059   003A6A  EF39  F01D         	goto	u2280
  8060   003A6E                     u2281:
  8061   003A6E  EF42  F01D         	goto	l2609
  8062   003A72                     u2280:
  8063   003A72  5006               	movf	fputc@fp^0,w,c
  8064   003A74  1007               	iorwf	(fputc@fp+1)^0,w,c
  8065   003A76  A4D8               	btfss	status,2,c
  8066   003A78  EF40  F01D         	goto	u2291
  8067   003A7C  EF42  F01D         	goto	u2290
  8068   003A80                     u2291:
  8069   003A80  EF47  F01D         	goto	l2611
  8070   003A84                     u2290:
  8071   003A84                     l2609:
  8072   003A84  5004               	movf	fputc@c^0,w,c
  8073   003A86  EC54  F020         	call	_putch
  8074   003A8A  EF8C  F01D         	goto	l1135
  8075   003A8E                     l2611:
  8076   003A8E  EE20 F00A          	lfsr	2,10
  8077   003A92  5006               	movf	fputc@fp^0,w,c
  8078   003A94  26D9               	addwf	fsr2l,f,c
  8079   003A96  5007               	movf	(fputc@fp+1)^0,w,c
  8080   003A98  22DA               	addwfc	fsr2h,f,c
  8081   003A9A  50DE               	movf	postinc2,w,c
  8082   003A9C  10DE               	iorwf	postinc2,w,c
  8083   003A9E  B4D8               	btfsc	status,2,c
  8084   003AA0  EF54  F01D         	goto	u2301
  8085   003AA4  EF56  F01D         	goto	u2300
  8086   003AA8                     u2301:
  8087   003AA8  EF71  F01D         	goto	l2615
  8088   003AAC                     u2300:
  8089   003AAC  EE20 F00A          	lfsr	2,10
  8090   003AB0  5006               	movf	fputc@fp^0,w,c
  8091   003AB2  26D9               	addwf	fsr2l,f,c
  8092   003AB4  5007               	movf	(fputc@fp+1)^0,w,c
  8093   003AB6  22DA               	addwfc	fsr2h,f,c
  8094   003AB8  EE10 F003          	lfsr	1,3
  8095   003ABC  5006               	movf	fputc@fp^0,w,c
  8096   003ABE  26E1               	addwf	fsr1l,f,c
  8097   003AC0  5007               	movf	(fputc@fp+1)^0,w,c
  8098   003AC2  22E2               	addwfc	fsr1h,f,c
  8099   003AC4  50DE               	movf	postinc2,w,c
  8100   003AC6  5CE6               	subwf	postinc1,w,c
  8101   003AC8  50E6               	movf	postinc1,w,c
  8102   003ACA  0A80               	xorlw	128
  8103   003ACC  6E0C               	movwf	(??_fputc+4)^0,c
  8104   003ACE  50DE               	movf	postinc2,w,c
  8105   003AD0  0A80               	xorlw	128
  8106   003AD2  580C               	subwfb	(??_fputc+4)^0,w,c
  8107   003AD4  B0D8               	btfsc	status,0,c
  8108   003AD6  EF6F  F01D         	goto	u2311
  8109   003ADA  EF71  F01D         	goto	u2310
  8110   003ADE                     u2311:
  8111   003ADE  EF8C  F01D         	goto	l1135
  8112   003AE2                     u2310:
  8113   003AE2                     l2615:
  8114   003AE2  EE20 F003          	lfsr	2,3
  8115   003AE6  5006               	movf	fputc@fp^0,w,c
  8116   003AE8  26D9               	addwf	fsr2l,f,c
  8117   003AEA  5007               	movf	(fputc@fp+1)^0,w,c
  8118   003AEC  22DA               	addwfc	fsr2h,f,c
  8119   003AEE  50DF               	movf	indf2,w,c
  8120   003AF0  6E08               	movwf	??_fputc^0,c
  8121   003AF2  C006  FFD9         	movff	fputc@fp,fsr2l
  8122   003AF6  C007  FFDA         	movff	fputc@fp+1,fsr2h
  8123   003AFA  50DF               	movf	indf2,w,c
  8124   003AFC  2408               	addwf	??_fputc^0,w,c
  8125   003AFE  6ED9               	movwf	fsr2l,c
  8126   003B00  6ADA               	clrf	fsr2h,c
  8127   003B02  C004  FFDF         	movff	fputc@c,indf2
  8128   003B06  EE20 F003          	lfsr	2,3
  8129   003B0A  5006               	movf	fputc@fp^0,w,c
  8130   003B0C  26D9               	addwf	fsr2l,f,c
  8131   003B0E  5007               	movf	(fputc@fp+1)^0,w,c
  8132   003B10  22DA               	addwfc	fsr2h,f,c
  8133   003B12  2ADE               	incf	postinc2,f,c
  8134   003B14  0E00               	movlw	0
  8135   003B16  22DD               	addwfc	postdec2,f,c
  8136   003B18                     l1135:
  8137   003B18  0012               	return		;funcret
  8138   003B1A                     __end_of_fputc:
  8139                           	callstack 0
  8140                           
  8141 ;; *************** function _putch *****************
  8142 ;; Defined at:
  8143 ;;		line 11 in file "putch.c"
  8144 ;; Parameters:    Size  Location     Type
  8145 ;;  data            1    wreg     unsigned char 
  8146 ;; Auto vars:     Size  Location     Type
  8147 ;;  data            1    2[COMRAM] unsigned char 
  8148 ;; Return value:  Size  Location     Type
  8149 ;;                  1    wreg      void 
  8150 ;; Registers used:
  8151 ;;		wreg
  8152 ;; Tracked objects:
  8153 ;;		On entry : 0/0
  8154 ;;		On exit  : 0/0
  8155 ;;		Unchanged: 0/0
  8156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8160 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8161 ;;Total ram usage:        1 bytes
  8162 ;; Hardware stack levels used: 1
  8163 ;; Hardware stack levels required when called: 1
  8164 ;; This function calls:
  8165 ;;		Nothing
  8166 ;; This function is called by:
  8167 ;;		_fputc
  8168 ;; This function uses a non-reentrant model
  8169 ;;
  8170                           
  8171                           	psect	text34
  8172   0040A8                     __ptext34:
  8173                           	callstack 0
  8174   0040A8                     _putch:
  8175                           	callstack 23
  8176                           
  8177                           ;incstack = 0
  8178                           ;putch@data stored from wreg
  8179   0040A8  6E03               	movwf	putch@data^0,c
  8180   0040AA                     l231:
  8181   0040AA  A89E               	btfss	3998,4,c	;volatile
  8182   0040AC  EF5A  F020         	goto	u2271
  8183   0040B0  EF5C  F020         	goto	u2270
  8184   0040B4                     u2271:
  8185   0040B4  EF55  F020         	goto	l231
  8186   0040B8                     u2270:
  8187   0040B8                     
  8188                           ;putch.c: 13:     TXREG1 = data;
  8189   0040B8  C003  FFAD         	movff	putch@data,4013	;volatile
  8190   0040BC  0012               	return		;funcret
  8191   0040BE                     __end_of_putch:
  8192                           	callstack 0
  8193                           
  8194 ;; *************** function _abs *****************
  8195 ;; Defined at:
  8196 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;  a               2    8[COMRAM] int 
  8199 ;; Auto vars:     Size  Location     Type
  8200 ;;		None
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  2    8[COMRAM] int 
  8203 ;; Registers used:
  8204 ;;		wreg, status,2, status,0
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8213 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8214 ;;Total ram usage:        4 bytes
  8215 ;; Hardware stack levels used: 1
  8216 ;; Hardware stack levels required when called: 1
  8217 ;; This function calls:
  8218 ;;		Nothing
  8219 ;; This function is called by:
  8220 ;;		_dtoa
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text35
  8225   003FEE                     __ptext35:
  8226                           	callstack 0
  8227   003FEE                     _abs:
  8228                           	callstack 24
  8229   003FEE  BE0A               	btfsc	(abs@a+1)^0,7,c
  8230   003FF0  EFFC  F01F         	goto	u2491
  8231   003FF4  EFFE  F01F         	goto	u2490
  8232   003FF8                     u2491:
  8233   003FF8  EF04  F020         	goto	l1120
  8234   003FFC                     u2490:
  8235   003FFC  C009  F009         	movff	abs@a,?_abs
  8236   004000  C00A  F00A         	movff	abs@a+1,?_abs+1
  8237   004004  EF10  F020         	goto	l1123
  8238   004008                     l1120:
  8239   004008  C009  F00B         	movff	abs@a,??_abs
  8240   00400C  C00A  F00C         	movff	abs@a+1,??_abs+1
  8241   004010  1E0B               	comf	??_abs^0,f,c
  8242   004012  1E0C               	comf	(??_abs+1)^0,f,c
  8243   004014  4A0B               	infsnz	??_abs^0,f,c
  8244   004016  2A0C               	incf	(??_abs+1)^0,f,c
  8245   004018  C00B  F009         	movff	??_abs,?_abs
  8246   00401C  C00C  F00A         	movff	??_abs+1,?_abs+1
  8247   004020                     l1123:
  8248   004020  0012               	return		;funcret
  8249   004022                     __end_of_abs:
  8250                           	callstack 0
  8251                           
  8252 ;; *************** function ___awmod *****************
  8253 ;; Defined at:
  8254 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;  dividend        2    2[COMRAM] int 
  8257 ;;  divisor         2    4[COMRAM] int 
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;  sign            1    7[COMRAM] unsigned char 
  8260 ;;  counter         1    6[COMRAM] unsigned char 
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  2    2[COMRAM] int 
  8263 ;; Registers used:
  8264 ;;		wreg, status,2, status,0
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8274 ;;Total ram usage:        6 bytes
  8275 ;; Hardware stack levels used: 1
  8276 ;; Hardware stack levels required when called: 1
  8277 ;; This function calls:
  8278 ;;		Nothing
  8279 ;; This function is called by:
  8280 ;;		_dtoa
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           	psect	text36
  8285   003BCC                     __ptext36:
  8286                           	callstack 0
  8287   003BCC                     ___awmod:
  8288                           	callstack 24
  8289   003BCC  0E00               	movlw	0
  8290   003BCE  6E08               	movwf	___awmod@sign^0,c
  8291   003BD0  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
  8292   003BD2  EFEF  F01D         	goto	u2390
  8293   003BD6  EFED  F01D         	goto	u2391
  8294   003BDA                     u2391:
  8295   003BDA  EFF5  F01D         	goto	l2685
  8296   003BDE                     u2390:
  8297   003BDE  6C03               	negf	___awmod@dividend^0,c
  8298   003BE0  1E04               	comf	(___awmod@dividend+1)^0,f,c
  8299   003BE2  B0D8               	btfsc	status,0,c
  8300   003BE4  2A04               	incf	(___awmod@dividend+1)^0,f,c
  8301   003BE6  0E01               	movlw	1
  8302   003BE8  6E08               	movwf	___awmod@sign^0,c
  8303   003BEA                     l2685:
  8304   003BEA  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
  8305   003BEC  EFFC  F01D         	goto	u2400
  8306   003BF0  EFFA  F01D         	goto	u2401
  8307   003BF4                     u2401:
  8308   003BF4  EF00  F01E         	goto	l2689
  8309   003BF8                     u2400:
  8310   003BF8  6C05               	negf	___awmod@divisor^0,c
  8311   003BFA  1E06               	comf	(___awmod@divisor+1)^0,f,c
  8312   003BFC  B0D8               	btfsc	status,0,c
  8313   003BFE  2A06               	incf	(___awmod@divisor+1)^0,f,c
  8314   003C00                     l2689:
  8315   003C00  5005               	movf	___awmod@divisor^0,w,c
  8316   003C02  1006               	iorwf	(___awmod@divisor+1)^0,w,c
  8317   003C04  B4D8               	btfsc	status,2,c
  8318   003C06  EF07  F01E         	goto	u2411
  8319   003C0A  EF09  F01E         	goto	u2410
  8320   003C0E                     u2411:
  8321   003C0E  EF2D  F01E         	goto	l2705
  8322   003C12                     u2410:
  8323   003C12  0E01               	movlw	1
  8324   003C14  6E07               	movwf	___awmod@counter^0,c
  8325   003C16  EF11  F01E         	goto	l2695
  8326   003C1A                     l2693:
  8327   003C1A  90D8               	bcf	status,0,c
  8328   003C1C  3605               	rlcf	___awmod@divisor^0,f,c
  8329   003C1E  3606               	rlcf	(___awmod@divisor+1)^0,f,c
  8330   003C20  2A07               	incf	___awmod@counter^0,f,c
  8331   003C22                     l2695:
  8332   003C22  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  8333   003C24  EF16  F01E         	goto	u2421
  8334   003C28  EF18  F01E         	goto	u2420
  8335   003C2C                     u2421:
  8336   003C2C  EF0D  F01E         	goto	l2693
  8337   003C30                     u2420:
  8338   003C30                     l2697:
  8339   003C30  5005               	movf	___awmod@divisor^0,w,c
  8340   003C32  5C03               	subwf	___awmod@dividend^0,w,c
  8341   003C34  5006               	movf	(___awmod@divisor+1)^0,w,c
  8342   003C36  5804               	subwfb	(___awmod@dividend+1)^0,w,c
  8343   003C38  A0D8               	btfss	status,0,c
  8344   003C3A  EF21  F01E         	goto	u2431
  8345   003C3E  EF23  F01E         	goto	u2430
  8346   003C42                     u2431:
  8347   003C42  EF27  F01E         	goto	l2701
  8348   003C46                     u2430:
  8349   003C46  5005               	movf	___awmod@divisor^0,w,c
  8350   003C48  5E03               	subwf	___awmod@dividend^0,f,c
  8351   003C4A  5006               	movf	(___awmod@divisor+1)^0,w,c
  8352   003C4C  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
  8353   003C4E                     l2701:
  8354   003C4E  90D8               	bcf	status,0,c
  8355   003C50  3206               	rrcf	(___awmod@divisor+1)^0,f,c
  8356   003C52  3205               	rrcf	___awmod@divisor^0,f,c
  8357   003C54  2E07               	decfsz	___awmod@counter^0,f,c
  8358   003C56  EF18  F01E         	goto	l2697
  8359   003C5A                     l2705:
  8360   003C5A  5008               	movf	___awmod@sign^0,w,c
  8361   003C5C  B4D8               	btfsc	status,2,c
  8362   003C5E  EF33  F01E         	goto	u2441
  8363   003C62  EF35  F01E         	goto	u2440
  8364   003C66                     u2441:
  8365   003C66  EF39  F01E         	goto	l2709
  8366   003C6A                     u2440:
  8367   003C6A  6C03               	negf	___awmod@dividend^0,c
  8368   003C6C  1E04               	comf	(___awmod@dividend+1)^0,f,c
  8369   003C6E  B0D8               	btfsc	status,0,c
  8370   003C70  2A04               	incf	(___awmod@dividend+1)^0,f,c
  8371   003C72                     l2709:
  8372   003C72  C003  F003         	movff	___awmod@dividend,?___awmod
  8373   003C76  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
  8374   003C7A  0012               	return		;funcret
  8375   003C7C                     __end_of___awmod:
  8376                           	callstack 0
  8377                           
  8378 ;; *************** function ___awdiv *****************
  8379 ;; Defined at:
  8380 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;  dividend        2    2[COMRAM] int 
  8383 ;;  divisor         2    4[COMRAM] int 
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;  quotient        2    8[COMRAM] int 
  8386 ;;  sign            1    7[COMRAM] unsigned char 
  8387 ;;  counter         1    6[COMRAM] unsigned char 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  2    2[COMRAM] int 
  8390 ;; Registers used:
  8391 ;;		wreg, status,2, status,0
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8398 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8400 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8401 ;;Total ram usage:        8 bytes
  8402 ;; Hardware stack levels used: 1
  8403 ;; Hardware stack levels required when called: 1
  8404 ;; This function calls:
  8405 ;;		Nothing
  8406 ;; This function is called by:
  8407 ;;		_dtoa
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text37
  8412   00399C                     __ptext37:
  8413                           	callstack 0
  8414   00399C                     ___awdiv:
  8415                           	callstack 24
  8416   00399C  0E00               	movlw	0
  8417   00399E  6E08               	movwf	___awdiv@sign^0,c
  8418   0039A0  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
  8419   0039A2  EFD7  F01C         	goto	u2330
  8420   0039A6  EFD5  F01C         	goto	u2331
  8421   0039AA                     u2331:
  8422   0039AA  EFDD  F01C         	goto	l2641
  8423   0039AE                     u2330:
  8424   0039AE  6C05               	negf	___awdiv@divisor^0,c
  8425   0039B0  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  8426   0039B2  B0D8               	btfsc	status,0,c
  8427   0039B4  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  8428   0039B6  0E01               	movlw	1
  8429   0039B8  6E08               	movwf	___awdiv@sign^0,c
  8430   0039BA                     l2641:
  8431   0039BA  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
  8432   0039BC  EFE4  F01C         	goto	u2340
  8433   0039C0  EFE2  F01C         	goto	u2341
  8434   0039C4                     u2341:
  8435   0039C4  EFEA  F01C         	goto	l2647
  8436   0039C8                     u2340:
  8437   0039C8  6C03               	negf	___awdiv@dividend^0,c
  8438   0039CA  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  8439   0039CC  B0D8               	btfsc	status,0,c
  8440   0039CE  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  8441   0039D0  0E01               	movlw	1
  8442   0039D2  1A08               	xorwf	___awdiv@sign^0,f,c
  8443   0039D4                     l2647:
  8444   0039D4  0E00               	movlw	0
  8445   0039D6  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  8446   0039D8  0E00               	movlw	0
  8447   0039DA  6E09               	movwf	___awdiv@quotient^0,c
  8448   0039DC  5005               	movf	___awdiv@divisor^0,w,c
  8449   0039DE  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  8450   0039E0  B4D8               	btfsc	status,2,c
  8451   0039E2  EFF5  F01C         	goto	u2351
  8452   0039E6  EFF7  F01C         	goto	u2350
  8453   0039EA                     u2351:
  8454   0039EA  EF1F  F01D         	goto	l2669
  8455   0039EE                     u2350:
  8456   0039EE  0E01               	movlw	1
  8457   0039F0  6E07               	movwf	___awdiv@counter^0,c
  8458   0039F2  EFFF  F01C         	goto	l2655
  8459   0039F6                     l2653:
  8460   0039F6  90D8               	bcf	status,0,c
  8461   0039F8  3605               	rlcf	___awdiv@divisor^0,f,c
  8462   0039FA  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  8463   0039FC  2A07               	incf	___awdiv@counter^0,f,c
  8464   0039FE                     l2655:
  8465   0039FE  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  8466   003A00  EF04  F01D         	goto	u2361
  8467   003A04  EF06  F01D         	goto	u2360
  8468   003A08                     u2361:
  8469   003A08  EFFB  F01C         	goto	l2653
  8470   003A0C                     u2360:
  8471   003A0C                     l2657:
  8472   003A0C  90D8               	bcf	status,0,c
  8473   003A0E  3609               	rlcf	___awdiv@quotient^0,f,c
  8474   003A10  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  8475   003A12  5005               	movf	___awdiv@divisor^0,w,c
  8476   003A14  5C03               	subwf	___awdiv@dividend^0,w,c
  8477   003A16  5006               	movf	(___awdiv@divisor+1)^0,w,c
  8478   003A18  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  8479   003A1A  A0D8               	btfss	status,0,c
  8480   003A1C  EF12  F01D         	goto	u2371
  8481   003A20  EF14  F01D         	goto	u2370
  8482   003A24                     u2371:
  8483   003A24  EF19  F01D         	goto	l2665
  8484   003A28                     u2370:
  8485   003A28  5005               	movf	___awdiv@divisor^0,w,c
  8486   003A2A  5E03               	subwf	___awdiv@dividend^0,f,c
  8487   003A2C  5006               	movf	(___awdiv@divisor+1)^0,w,c
  8488   003A2E  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  8489   003A30  8009               	bsf	___awdiv@quotient^0,0,c
  8490   003A32                     l2665:
  8491   003A32  90D8               	bcf	status,0,c
  8492   003A34  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  8493   003A36  3205               	rrcf	___awdiv@divisor^0,f,c
  8494   003A38  2E07               	decfsz	___awdiv@counter^0,f,c
  8495   003A3A  EF06  F01D         	goto	l2657
  8496   003A3E                     l2669:
  8497   003A3E  5008               	movf	___awdiv@sign^0,w,c
  8498   003A40  B4D8               	btfsc	status,2,c
  8499   003A42  EF25  F01D         	goto	u2381
  8500   003A46  EF27  F01D         	goto	u2380
  8501   003A4A                     u2381:
  8502   003A4A  EF2B  F01D         	goto	l2673
  8503   003A4E                     u2380:
  8504   003A4E  6C09               	negf	___awdiv@quotient^0,c
  8505   003A50  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  8506   003A52  B0D8               	btfsc	status,0,c
  8507   003A54  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  8508   003A56                     l2673:
  8509   003A56  C009  F003         	movff	___awdiv@quotient,?___awdiv
  8510   003A5A  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  8511   003A5E  0012               	return		;funcret
  8512   003A60                     __end_of___awdiv:
  8513                           	callstack 0
  8514                           
  8515 ;; *************** function _LCD_ShowString *****************
  8516 ;; Defined at:
  8517 ;;		line 55 in file "lcd.c"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;  lineNum         1    wreg     unsigned char 
  8520 ;;  textData        2    3[COMRAM] PTR unsigned char 
  8521 ;;		 -> moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_4(17), STR_3(17), 
  8522 ;;		 -> STR_2(17), STR_1(17), 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;  lineNum         1    7[COMRAM] unsigned char 
  8525 ;;  i               1    8[COMRAM] unsigned char 
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  1    wreg      void 
  8528 ;; Registers used:
  8529 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8536 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8537 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8538 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8539 ;;Total ram usage:        6 bytes
  8540 ;; Hardware stack levels used: 1
  8541 ;; Hardware stack levels required when called: 2
  8542 ;; This function calls:
  8543 ;;		_LCD_Send
  8544 ;; This function is called by:
  8545 ;;		_main
  8546 ;;		_moveDisplay
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text38
  8551   003B1A                     __ptext38:
  8552                           	callstack 0
  8553   003B1A                     _LCD_ShowString:
  8554                           	callstack 27
  8555                           
  8556                           ;incstack = 0
  8557                           ;LCD_ShowString@lineNum stored from wreg
  8558   003B1A  6E08               	movwf	LCD_ShowString@lineNum^0,c
  8559   003B1C                     
  8560                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
  8561   003B1C  806B               	bsf	107,0,c	;volatile
  8562   003B1E                     l109:
  8563   003B1E  B06B               	btfsc	107,0,c	;volatile
  8564   003B20  EF94  F01D         	goto	u3631
  8565   003B24  EF96  F01D         	goto	u3630
  8566   003B28                     u3631:
  8567   003B28  EF8F  F01D         	goto	l109
  8568   003B2C                     u3630:
  8569   003B2C                     
  8570                           ;lcd.c: 62:     SSP2IF = 0;
  8571   003B2C  9EA4               	bcf	4004,7,c	;volatile
  8572   003B2E                     
  8573                           ;lcd.c: 64:     LCD_Send(0x7c);
  8574   003B2E  0E7C               	movlw	124
  8575   003B30  EC24  F020         	call	_LCD_Send
  8576                           
  8577                           ;lcd.c: 66:     LCD_Send(0x80);
  8578   003B34  0E80               	movlw	128
  8579   003B36  EC24  F020         	call	_LCD_Send
  8580   003B3A                     
  8581                           ;lcd.c: 68:     if(lineNum == 1){
  8582   003B3A  0408               	decf	LCD_ShowString@lineNum^0,w,c
  8583   003B3C  A4D8               	btfss	status,2,c
  8584   003B3E  EFA3  F01D         	goto	u3641
  8585   003B42  EFA5  F01D         	goto	u3640
  8586   003B46                     u3641:
  8587   003B46  EFAA  F01D         	goto	l3421
  8588   003B4A                     u3640:
  8589   003B4A                     
  8590                           ;lcd.c: 69:         LCD_Send(0x80);
  8591   003B4A  0E80               	movlw	128
  8592   003B4C  EC24  F020         	call	_LCD_Send
  8593                           
  8594                           ;lcd.c: 70:     }
  8595   003B50  EFB6  F01D         	goto	l113
  8596   003B54                     l3421:
  8597   003B54  0E02               	movlw	2
  8598   003B56  1808               	xorwf	LCD_ShowString@lineNum^0,w,c
  8599   003B58  A4D8               	btfss	status,2,c
  8600   003B5A  EFB1  F01D         	goto	u3651
  8601   003B5E  EFB3  F01D         	goto	u3650
  8602   003B62                     u3651:
  8603   003B62  EFB6  F01D         	goto	l113
  8604   003B66                     u3650:
  8605   003B66                     
  8606                           ;lcd.c: 72:         LCD_Send(0xC0);
  8607   003B66  0EC0               	movlw	192
  8608   003B68  EC24  F020         	call	_LCD_Send
  8609   003B6C                     l113:
  8610                           
  8611                           ;lcd.c: 75:     LCD_Send(0x40);
  8612   003B6C  0E40               	movlw	64
  8613   003B6E  EC24  F020         	call	_LCD_Send
  8614   003B72                     
  8615                           ;lcd.c: 77:     for (i = 0; i<16; i++){
  8616   003B72  0E00               	movlw	0
  8617   003B74  6E09               	movwf	LCD_ShowString@i^0,c
  8618   003B76                     l3431:
  8619                           
  8620                           ;lcd.c: 78:         LCD_Send(textData[i]);
  8621   003B76  5009               	movf	LCD_ShowString@i^0,w,c
  8622   003B78  2404               	addwf	LCD_ShowString@textData^0,w,c
  8623   003B7A  6E06               	movwf	??_LCD_ShowString^0,c
  8624   003B7C  0E00               	movlw	0
  8625   003B7E  2005               	addwfc	(LCD_ShowString@textData+1)^0,w,c
  8626   003B80  6E07               	movwf	(??_LCD_ShowString+1)^0,c
  8627   003B82  C006  FFF6         	movff	??_LCD_ShowString,tblptrl
  8628   003B86  C007  FFF7         	movff	??_LCD_ShowString+1,tblptrh
  8629   003B8A  0E00               	movlw	low (__smallconst shr (0+16))
  8630   003B8C  6EF8               	movwf	tblptru,c
  8631   003B8E  0E0F               	movlw	(high __ramtop+-1)
  8632   003B90  64F7               	cpfsgt	tblptrh,c
  8633   003B92  D003               	bra	u3667
  8634   003B94  0008               	tblrd		*
  8635   003B96  50F5               	movf	tablat,w,c
  8636   003B98  D005               	bra	u3660
  8637   003B9A                     u3667:
  8638   003B9A  CFF6 FFE1          	movff	tblptrl,fsr1l
  8639   003B9E  CFF7 FFE2          	movff	tblptrh,fsr1h
  8640   003BA2  50E7               	movf	indf1,w,c
  8641   003BA4                     u3660:
  8642   003BA4  EC24  F020         	call	_LCD_Send
  8643   003BA8                     
  8644                           ;lcd.c: 79:     }
  8645   003BA8  2A09               	incf	LCD_ShowString@i^0,f,c
  8646   003BAA  0E0F               	movlw	15
  8647   003BAC  6409               	cpfsgt	LCD_ShowString@i^0,c
  8648   003BAE  EFDB  F01D         	goto	u3671
  8649   003BB2  EFDD  F01D         	goto	u3670
  8650   003BB6                     u3671:
  8651   003BB6  EFBB  F01D         	goto	l3431
  8652   003BBA                     u3670:
  8653   003BBA                     
  8654                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
  8655   003BBA  846B               	bsf	107,2,c	;volatile
  8656   003BBC                     l117:
  8657   003BBC  B46B               	btfsc	107,2,c	;volatile
  8658   003BBE  EFE3  F01D         	goto	u3681
  8659   003BC2  EFE5  F01D         	goto	u3680
  8660   003BC6                     u3681:
  8661   003BC6  EFDE  F01D         	goto	l117
  8662   003BCA                     u3680:
  8663   003BCA  0012               	return		;funcret
  8664   003BCC                     __end_of_LCD_ShowString:
  8665                           	callstack 0
  8666                           
  8667 ;; *************** function _LCD_Clear *****************
  8668 ;; Defined at:
  8669 ;;		line 94 in file "lcd.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;		None
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;		None
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  1    wreg      void 
  8676 ;; Registers used:
  8677 ;;		wreg, cstack
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8687 ;;Total ram usage:        0 bytes
  8688 ;; Hardware stack levels used: 1
  8689 ;; Hardware stack levels required when called: 2
  8690 ;; This function calls:
  8691 ;;		_LCD_Send
  8692 ;; This function is called by:
  8693 ;;		_main
  8694 ;;		_moveDisplay
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698                           	psect	text39
  8699   003F84                     __ptext39:
  8700                           	callstack 0
  8701   003F84                     _LCD_Clear:
  8702                           	callstack 27
  8703   003F84                     
  8704                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
  8705   003F84  806B               	bsf	107,0,c	;volatile
  8706   003F86                     l132:
  8707   003F86  B06B               	btfsc	107,0,c	;volatile
  8708   003F88  EFC8  F01F         	goto	u3691
  8709   003F8C  EFCA  F01F         	goto	u3690
  8710   003F90                     u3691:
  8711   003F90  EFC3  F01F         	goto	l132
  8712   003F94                     u3690:
  8713   003F94                     
  8714                           ;lcd.c: 97:     SSP2IF = 0;
  8715   003F94  9EA4               	bcf	4004,7,c	;volatile
  8716   003F96                     
  8717                           ;lcd.c: 99:     LCD_Send(0x7C);
  8718   003F96  0E7C               	movlw	124
  8719   003F98  EC24  F020         	call	_LCD_Send
  8720                           
  8721                           ;lcd.c: 100:     LCD_Send(0x80);
  8722   003F9C  0E80               	movlw	128
  8723   003F9E  EC24  F020         	call	_LCD_Send
  8724                           
  8725                           ;lcd.c: 101:     LCD_Send(0x01);
  8726   003FA2  0E01               	movlw	1
  8727   003FA4  EC24  F020         	call	_LCD_Send
  8728   003FA8                     
  8729                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
  8730   003FA8  846B               	bsf	107,2,c	;volatile
  8731   003FAA                     l135:
  8732   003FAA  B46B               	btfsc	107,2,c	;volatile
  8733   003FAC  EFDA  F01F         	goto	u3701
  8734   003FB0  EFDC  F01F         	goto	u3700
  8735   003FB4                     u3701:
  8736   003FB4  EFD5  F01F         	goto	l135
  8737   003FB8                     u3700:
  8738   003FB8  0012               	return		;funcret
  8739   003FBA                     __end_of_LCD_Clear:
  8740                           	callstack 0
  8741                           
  8742 ;; *************** function _LCD_Init *****************
  8743 ;; Defined at:
  8744 ;;		line 3 in file "lcd.c"
  8745 ;; Parameters:    Size  Location     Type
  8746 ;;		None
  8747 ;; Auto vars:     Size  Location     Type
  8748 ;;		None
  8749 ;; Return value:  Size  Location     Type
  8750 ;;                  1    wreg      void 
  8751 ;; Registers used:
  8752 ;;		wreg, status,2, cstack
  8753 ;; Tracked objects:
  8754 ;;		On entry : 0/0
  8755 ;;		On exit  : 0/0
  8756 ;;		Unchanged: 0/0
  8757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8760 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8761 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8762 ;;Total ram usage:        1 bytes
  8763 ;; Hardware stack levels used: 1
  8764 ;; Hardware stack levels required when called: 2
  8765 ;; This function calls:
  8766 ;;		_LCD_Send
  8767 ;; This function is called by:
  8768 ;;		_main
  8769 ;; This function uses a non-reentrant model
  8770 ;;
  8771                           
  8772                           	psect	text40
  8773   0038C2                     __ptext40:
  8774                           	callstack 0
  8775   0038C2                     _LCD_Init:
  8776                           	callstack 28
  8777   0038C2                     
  8778                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
  8779   0038C2  010F               	movlb	15	; () banked
  8780   0038C4  913B               	bcf	59,0,b	;volatile
  8781                           
  8782                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
  8783   0038C6  933B               	bcf	59,1,b	;volatile
  8784                           
  8785                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
  8786   0038C8  8095               	bsf	149,0,c	;volatile
  8787                           
  8788                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
  8789   0038CA  8295               	bsf	149,1,c	;volatile
  8790                           
  8791                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
  8792   0038CC  9092               	bcf	146,0,c	;volatile
  8793                           
  8794                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
  8795   0038CE  8089               	bsf	137,0,c	;volatile
  8796   0038D0                     
  8797                           ; BSR set to: 15
  8798                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
  8799   0038D0  506C               	movf	108,w,c	;volatile
  8800   0038D2  0BF0               	andlw	-16
  8801   0038D4  0908               	iorlw	8
  8802   0038D6  6E6C               	movwf	108,c	;volatile
  8803                           
  8804                           ;lcd.c: 15:     SSP2ADD = 19;
  8805   0038D8  0E13               	movlw	19
  8806   0038DA  6E6E               	movwf	110,c	;volatile
  8807   0038DC                     
  8808                           ; BSR set to: 15
  8809                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
  8810   0038DC  8A6C               	bsf	108,5,c	;volatile
  8811   0038DE                     
  8812                           ; BSR set to: 15
  8813                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
  8814   0038DE  0E34               	movlw	52
  8815   0038E0  6E04               	movwf	??_LCD_Init^0,c
  8816   0038E2  0EF2               	movlw	242
  8817   0038E4                     u5297:
  8818   0038E4  2EE8               	decfsz	wreg,f,c
  8819   0038E6  D7FE               	bra	u5297
  8820   0038E8  2E04               	decfsz	??_LCD_Init^0,f,c
  8821   0038EA  D7FC               	bra	u5297
  8822   0038EC                     
  8823                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
  8824   0038EC  806B               	bsf	107,0,c	;volatile
  8825   0038EE                     l100:
  8826   0038EE  B06B               	btfsc	107,0,c	;volatile
  8827   0038F0  EF7C  F01C         	goto	u4151
  8828   0038F4  EF7E  F01C         	goto	u4150
  8829   0038F8                     u4151:
  8830   0038F8  EF77  F01C         	goto	l100
  8831   0038FC                     u4150:
  8832   0038FC                     
  8833                           ;lcd.c: 22:     SSP2IF = 0;
  8834   0038FC  9EA4               	bcf	4004,7,c	;volatile
  8835   0038FE                     
  8836                           ;lcd.c: 27:     LCD_Send(0x7C);
  8837   0038FE  0E7C               	movlw	124
  8838   003900  EC24  F020         	call	_LCD_Send
  8839                           
  8840                           ;lcd.c: 28:     LCD_Send(0x80);
  8841   003904  0E80               	movlw	128
  8842   003906  EC24  F020         	call	_LCD_Send
  8843                           
  8844                           ;lcd.c: 29:     LCD_Send(0x38);
  8845   00390A  0E38               	movlw	56
  8846   00390C  EC24  F020         	call	_LCD_Send
  8847                           
  8848                           ;lcd.c: 30:     LCD_Send(0x80);
  8849   003910  0E80               	movlw	128
  8850   003912  EC24  F020         	call	_LCD_Send
  8851                           
  8852                           ;lcd.c: 31:     LCD_Send(0x39);
  8853   003916  0E39               	movlw	57
  8854   003918  EC24  F020         	call	_LCD_Send
  8855                           
  8856                           ;lcd.c: 32:     LCD_Send(0x80);
  8857   00391C  0E80               	movlw	128
  8858   00391E  EC24  F020         	call	_LCD_Send
  8859                           
  8860                           ;lcd.c: 33:     LCD_Send(0x17);
  8861   003922  0E17               	movlw	23
  8862   003924  EC24  F020         	call	_LCD_Send
  8863                           
  8864                           ;lcd.c: 34:     LCD_Send(0x80);
  8865   003928  0E80               	movlw	128
  8866   00392A  EC24  F020         	call	_LCD_Send
  8867                           
  8868                           ;lcd.c: 35:     LCD_Send(0x7A);
  8869   00392E  0E7A               	movlw	122
  8870   003930  EC24  F020         	call	_LCD_Send
  8871                           
  8872                           ;lcd.c: 36:     LCD_Send(0x80);
  8873   003934  0E80               	movlw	128
  8874   003936  EC24  F020         	call	_LCD_Send
  8875                           
  8876                           ;lcd.c: 37:     LCD_Send(0x5E);
  8877   00393A  0E5E               	movlw	94
  8878   00393C  EC24  F020         	call	_LCD_Send
  8879                           
  8880                           ;lcd.c: 38:     LCD_Send(0x80);
  8881   003940  0E80               	movlw	128
  8882   003942  EC24  F020         	call	_LCD_Send
  8883                           
  8884                           ;lcd.c: 39:     LCD_Send(0x6B);
  8885   003946  0E6B               	movlw	107
  8886   003948  EC24  F020         	call	_LCD_Send
  8887                           
  8888                           ;lcd.c: 40:     LCD_Send(0x80);
  8889   00394C  0E80               	movlw	128
  8890   00394E  EC24  F020         	call	_LCD_Send
  8891                           
  8892                           ;lcd.c: 41:     LCD_Send(0x0C);
  8893   003952  0E0C               	movlw	12
  8894   003954  EC24  F020         	call	_LCD_Send
  8895                           
  8896                           ;lcd.c: 42:     LCD_Send(0x80);
  8897   003958  0E80               	movlw	128
  8898   00395A  EC24  F020         	call	_LCD_Send
  8899                           
  8900                           ;lcd.c: 43:     LCD_Send(0x01);
  8901   00395E  0E01               	movlw	1
  8902   003960  EC24  F020         	call	_LCD_Send
  8903                           
  8904                           ;lcd.c: 44:     LCD_Send(0x80);
  8905   003964  0E80               	movlw	128
  8906   003966  EC24  F020         	call	_LCD_Send
  8907                           
  8908                           ;lcd.c: 45:     LCD_Send(0x06);
  8909   00396A  0E06               	movlw	6
  8910   00396C  EC24  F020         	call	_LCD_Send
  8911                           
  8912                           ;lcd.c: 46:     LCD_Send(0x80);
  8913   003970  0E80               	movlw	128
  8914   003972  EC24  F020         	call	_LCD_Send
  8915                           
  8916                           ;lcd.c: 47:     LCD_Send(0x02);
  8917   003976  0E02               	movlw	2
  8918   003978  EC24  F020         	call	_LCD_Send
  8919   00397C                     
  8920                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
  8921   00397C  846B               	bsf	107,2,c	;volatile
  8922   00397E                     l103:
  8923   00397E  B46B               	btfsc	107,2,c	;volatile
  8924   003980  EFC4  F01C         	goto	u4161
  8925   003984  EFC6  F01C         	goto	u4160
  8926   003988                     u4161:
  8927   003988  EFBF  F01C         	goto	l103
  8928   00398C                     u4160:
  8929   00398C                     
  8930                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
  8931   00398C  0E34               	movlw	52
  8932   00398E  6E04               	movwf	??_LCD_Init^0,c
  8933   003990  0EF2               	movlw	242
  8934   003992                     u5307:
  8935   003992  2EE8               	decfsz	wreg,f,c
  8936   003994  D7FE               	bra	u5307
  8937   003996  2E04               	decfsz	??_LCD_Init^0,f,c
  8938   003998  D7FC               	bra	u5307
  8939   00399A  0012               	return		;funcret
  8940   00399C                     __end_of_LCD_Init:
  8941                           	callstack 0
  8942                           
  8943 ;; *************** function _LCD_Send *****************
  8944 ;; Defined at:
  8945 ;;		line 85 in file "lcd.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;  data            1    wreg     unsigned char 
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;  data            1    2[COMRAM] unsigned char 
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  1    wreg      void 
  8952 ;; Registers used:
  8953 ;;		wreg
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8963 ;;Total ram usage:        1 bytes
  8964 ;; Hardware stack levels used: 1
  8965 ;; Hardware stack levels required when called: 1
  8966 ;; This function calls:
  8967 ;;		Nothing
  8968 ;; This function is called by:
  8969 ;;		_LCD_Init
  8970 ;;		_LCD_ShowString
  8971 ;;		_LCD_Clear
  8972 ;; This function uses a non-reentrant model
  8973 ;;
  8974                           
  8975                           	psect	text41
  8976   004048                     __ptext41:
  8977                           	callstack 0
  8978   004048                     _LCD_Send:
  8979                           	callstack 27
  8980                           
  8981                           ;incstack = 0
  8982                           ;LCD_Send@data stored from wreg
  8983   004048  6E03               	movwf	LCD_Send@data^0,c
  8984   00404A                     
  8985                           ;lcd.c: 87:     SSP2BUF = data;
  8986   00404A  C003  FF6F         	movff	LCD_Send@data,3951	;volatile
  8987   00404E                     l123:
  8988   00404E  B06D               	btfsc	109,0,c	;volatile
  8989   004050  EF2C  F020         	goto	u3551
  8990   004054  EF2E  F020         	goto	u3550
  8991   004058                     u3551:
  8992   004058  EF27  F020         	goto	l123
  8993   00405C                     u3550:
  8994   00405C                     l126:
  8995   00405C  AEA4               	btfss	4004,7,c	;volatile
  8996   00405E  EF33  F020         	goto	u3561
  8997   004062  EF35  F020         	goto	u3560
  8998   004066                     u3561:
  8999   004066  EF2E  F020         	goto	l126
  9000   00406A                     u3560:
  9001   00406A                     
  9002                           ;lcd.c: 90:     SSP2IF = 0;
  9003   00406A  9EA4               	bcf	4004,7,c	;volatile
  9004   00406C  0012               	return		;funcret
  9005   00406E                     __end_of_LCD_Send:
  9006                           	callstack 0
  9007                           
  9008 ;; *************** function _ISR *****************
  9009 ;; Defined at:
  9010 ;;		line 11 in file "interrupt.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;		None
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;		None
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  1    wreg      void 
  9017 ;; Registers used:
  9018 ;;		wreg, status,2
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9028 ;;Total ram usage:        2 bytes
  9029 ;; Hardware stack levels used: 1
  9030 ;; This function calls:
  9031 ;;		Nothing
  9032 ;; This function is called by:
  9033 ;;		Interrupt level 2
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           	psect	intcode
  9038   000008                     __pintcode:
  9039                           	callstack 0
  9040   000008                     _ISR:
  9041                           	callstack 21
  9042                           
  9043                           ;incstack = 0
  9044   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9045   00000A                     
  9046                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
  9047   00000A  A09D               	btfss	3997,0,c	;volatile
  9048   00000C  EF0A  F000         	goto	i2u447_41
  9049   000010  EF0C  F000         	goto	i2u447_40
  9050   000014                     i2u447_41:
  9051   000014  EF44  F000         	goto	i2l344
  9052   000018                     i2u447_40:
  9053   000018  A09E               	btfss	3998,0,c	;volatile
  9054   00001A  EF11  F000         	goto	i2u448_41
  9055   00001E  EF13  F000         	goto	i2u448_40
  9056   000022                     i2u448_41:
  9057   000022  EF44  F000         	goto	i2l344
  9058   000026                     i2u448_40:
  9059   000026  0100               	movlb	0	; () banked
  9060   000028  51F2               	movf	_GPIOIE& (0+255),w,b
  9061   00002A  B4D8               	btfsc	status,2,c
  9062   00002C  EF1A  F000         	goto	i2u449_41
  9063   000030  EF1C  F000         	goto	i2u449_40
  9064   000034                     i2u449_41:
  9065   000034  EF44  F000         	goto	i2l344
  9066   000038                     i2u449_40:
  9067   000038                     
  9068                           ; BSR set to: 0
  9069                           ;interrupt.c: 14:         if(PORTAbits.RA2){
  9070   000038  A480               	btfss	128,2,c	;volatile
  9071   00003A  EF21  F000         	goto	i2u450_41
  9072   00003E  EF23  F000         	goto	i2u450_40
  9073   000042                     i2u450_41:
  9074   000042  EF3F  F000         	goto	i2l339
  9075   000046                     i2u450_40:
  9076   000046                     
  9077                           ; BSR set to: 0
  9078                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
  9079   000046  0E03               	movlw	3
  9080   000048  6E02               	movwf	(??_ISR+1)^0,c
  9081   00004A  0E08               	movlw	8
  9082   00004C  6E01               	movwf	??_ISR^0,c
  9083   00004E  0E77               	movlw	119
  9084   000050                     i2u531_47:
  9085   000050  2EE8               	decfsz	wreg,f,c
  9086   000052  D7FE               	bra	i2u531_47
  9087   000054  2E01               	decfsz	??_ISR^0,f,c
  9088   000056  D7FC               	bra	i2u531_47
  9089   000058  2E02               	decfsz	(??_ISR+1)^0,f,c
  9090   00005A  D7FA               	bra	i2u531_47
  9091   00005C  0000               	nop	
  9092   00005E                     
  9093                           ;interrupt.c: 16:             if(PORTAbits.RA2){
  9094   00005E  A480               	btfss	128,2,c	;volatile
  9095   000060  EF34  F000         	goto	i2u451_41
  9096   000064  EF36  F000         	goto	i2u451_40
  9097   000068                     i2u451_41:
  9098   000068  EF3F  F000         	goto	i2l339
  9099   00006C                     i2u451_40:
  9100   00006C                     i2l341:
  9101   00006C  B480               	btfsc	128,2,c	;volatile
  9102   00006E  EF3B  F000         	goto	i2u452_41
  9103   000072  EF3D  F000         	goto	i2u452_40
  9104   000076                     i2u452_41:
  9105   000076  EF36  F000         	goto	i2l341
  9106   00007A                     i2u452_40:
  9107   00007A                     
  9108                           ;interrupt.c: 18:                 keepStateGPIO = 0;
  9109   00007A  0E00               	movlw	0
  9110   00007C  6E5C               	movwf	_keepStateGPIO^0,c
  9111   00007E                     i2l339:
  9112                           
  9113                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
  9114   00007E  0E9E               	movlw	158
  9115   000080  6ECF               	movwf	207,c	;volatile
  9116   000082  0E58               	movlw	88
  9117   000084  6ECE               	movwf	206,c	;volatile
  9118   000086                     
  9119                           ;interrupt.c: 23:         TMR1IF = 0;
  9120   000086  909E               	bcf	3998,0,c	;volatile
  9121   000088                     i2l344:
  9122   000088  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9123   00008A  0011               	retfie		f
  9124   00008C                     __end_of_ISR:
  9125                           	callstack 0
  9126                           
  9127                           	psect	rparam
  9128   000000                     
  9129                           	psect	temp
  9130   00005D                     btemp:
  9131                           	callstack 0
  9132   00005D                     	ds	1
  9133   000000                     int$flags	set	btemp
  9134   000000                     wtemp8	set	btemp+1
  9135   000000                     ttemp5	set	btemp+1
  9136   000000                     ttemp6	set	btemp+4
  9137   000000                     ttemp7	set	btemp+8
  9138                           
  9139                           	psect	config
  9140                           
  9141                           ; Padding undefined space
  9142   300000                     	org	3145728
  9143   300000  FF                 	db	255
  9144                           
  9145                           ;Config register CONFIG1H @ 0x300001
  9146                           ;	Oscillator Selection bits
  9147                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  9148                           ;	4X PLL Enable
  9149                           ;	PLLCFG = ON, Oscillator multiplied by 4
  9150                           ;	Primary clock enable bit
  9151                           ;	PRICLKEN = 0x1, unprogrammed default
  9152                           ;	Fail-Safe Clock Monitor Enable bit
  9153                           ;	FCMEN = 0x0, unprogrammed default
  9154                           ;	Internal/External Oscillator Switchover bit
  9155                           ;	IESO = 0x0, unprogrammed default
  9156   300001                     	org	3145729
  9157   300001  33                 	db	51
  9158                           
  9159                           ;Config register CONFIG2L @ 0x300002
  9160                           ;	unspecified, using default values
  9161                           ;	Power-up Timer Enable bit
  9162                           ;	PWRTEN = 0x1, unprogrammed default
  9163                           ;	Brown-out Reset Enable bits
  9164                           ;	BOREN = 0x3, unprogrammed default
  9165                           ;	Brown Out Reset Voltage bits
  9166                           ;	BORV = 0x3, unprogrammed default
  9167   300002                     	org	3145730
  9168   300002  1F                 	db	31
  9169                           
  9170                           ;Config register CONFIG2H @ 0x300003
  9171                           ;	Watchdog Timer Enable bits
  9172                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  9173                           ;	Watchdog Timer Postscale Select bits
  9174                           ;	WDTPS = 0xF, unprogrammed default
  9175   300003                     	org	3145731
  9176   300003  3C                 	db	60
  9177                           tosu	equ	0xFFF
  9178                           tosh	equ	0xFFE
  9179                           tosl	equ	0xFFD
  9180                           stkptr	equ	0xFFC
  9181                           pclatu	equ	0xFFB
  9182                           pclath	equ	0xFFA
  9183                           pcl	equ	0xFF9
  9184                           tblptru	equ	0xFF8
  9185                           tblptrh	equ	0xFF7
  9186                           tblptrl	equ	0xFF6
  9187                           tablat	equ	0xFF5
  9188                           prodh	equ	0xFF4
  9189                           prodl	equ	0xFF3
  9190                           indf0	equ	0xFEF
  9191                           postinc0	equ	0xFEE
  9192                           postdec0	equ	0xFED
  9193                           preinc0	equ	0xFEC
  9194                           plusw0	equ	0xFEB
  9195                           fsr0h	equ	0xFEA
  9196                           fsr0l	equ	0xFE9
  9197                           wreg	equ	0xFE8
  9198                           indf1	equ	0xFE7
  9199                           postinc1	equ	0xFE6
  9200                           postdec1	equ	0xFE5
  9201                           preinc1	equ	0xFE4
  9202                           plusw1	equ	0xFE3
  9203                           fsr1h	equ	0xFE2
  9204                           fsr1l	equ	0xFE1
  9205                           bsr	equ	0xFE0
  9206                           indf2	equ	0xFDF
  9207                           postinc2	equ	0xFDE
  9208                           postdec2	equ	0xFDD
  9209                           preinc2	equ	0xFDC
  9210                           plusw2	equ	0xFDB
  9211                           fsr2h	equ	0xFDA
  9212                           fsr2l	equ	0xFD9
  9213                           status	equ	0xFD8

Data Sizes:
    Strings     119
    Constant    64
    Data        32
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160    102     147
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK0[17]), moveDisplay@menuItem2(BANK0[17]), STR_1(CODE[17]), STR_2(CODE[17]), 
		 -> STR_3(CODE[17]), STR_4(CODE[17]), 

    moveDisplay$3212	PTR unsigned char  size(1) Largest target is 6
		 -> STR_10(CODE[4]), STR_11(CODE[5]), STR_12(CODE[6]), STR_13(CODE[1]), 
		 -> STR_6(CODE[5]), STR_7(CODE[5]), STR_8(CODE[4]), STR_9(CODE[4]), 

    moveDisplay@F6952	PTR unsigned char [8] size(1) Largest target is 6
		 -> STR_10(CODE[4]), STR_11(CODE[5]), STR_12(CODE[6]), STR_13(CODE[1]), 
		 -> STR_6(CODE[5]), STR_7(CODE[5]), STR_8(CODE[4]), STR_9(CODE[4]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(1) Largest target is 6
		 -> STR_10(CODE[4]), STR_11(CODE[5]), STR_12(CODE[6]), STR_13(CODE[1]), 
		 -> STR_6(CODE[5]), STR_7(CODE[5]), STR_8(CODE[4]), STR_9(CODE[4]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_5(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6964	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S2745$buffer	PTR unsigned char  size(2) Largest target is 0

    S2745$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_14(CODE[6]), STR_15(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> moveDisplay@menuItem1(BANK0[17]), moveDisplay@menuItem2(BANK0[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_10(CODE[4]), STR_11(CODE[5]), 
		 -> STR_12(CODE[6]), STR_13(CODE[1]), STR_16(CODE[7]), STR_6(CODE[5]), 
		 -> STR_7(CODE[5]), STR_8(CODE[4]), STR_9(CODE[4]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 6
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_10(CODE[4]), STR_11(CODE[5]), 
		 -> STR_12(CODE[6]), STR_13(CODE[1]), STR_6(CODE[5]), STR_7(CODE[5]), 
		 -> STR_8(CODE[4]), STR_9(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 6
		 -> STR_14(CODE[6]), STR_15(CODE[5]), STR_5(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 6
		 -> STR_14(CODE[6]), STR_15(CODE[5]), STR_5(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_14(CODE[6]), STR_15(CODE[5]), STR_5(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _runDAC->___fltol
    ___sindf->___fladd
    ___rem_pio2f->___flsub
    ___rem_pio2f->___fltol
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf
    ___cosdf->___fladd
    ___flmul->___xxtofl
    ___fladd->___fldiv
    _printf->_vfprintf
    ___fldiv->___flmul
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_runDAC
    _runDAC->_sinf
    _sinf->___rem_pio2f
    ___rem_pio2f->___flneg
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   86661
                                             98 BANK0      4     4      0
                          _LCD_Clear
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runDAC
                            _runGPIO
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             33    33      0     342
                                              3 COMRAM    32    32      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0   72545
                                             86 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   48324
                                             60 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   10901
                                             82 COMRAM     4     0      4
                                              0 BANK0     28    28      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   19325
                                             28 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     199
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     550
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     607
                                             82 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    5929
                                             82 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     653
                                             24 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   10986
                                             82 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    5088
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    5150
                                             66 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     3      3   10997
                                             56 COMRAM     4     1      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             41 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0      90
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         46    45      1   12904
                                             75 COMRAM     3     2      1
                                              0 BANK0     43    43      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6   11492
                                             56 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   10814
                                             51 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     8      4   10032
                                             40 COMRAM    11     7      4
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    1635
                                             12 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     943
                                              8 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     611
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12     8      4    5135
                                             28 COMRAM    12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    3347
                                             19 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1660
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1160
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              8 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2     613
                                              3 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      22
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      22
                                              3 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Send
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
   _runDAC
     _SPI_write
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
         ___fladd
         ___flmul
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
         ___cosdf (ARG)
         ___fladd (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
           ___fladd
           ___flmul (ARG)
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     66      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRlllllh     2F      0       0      52        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRhhllh      10      0       0      43        0.0%
BITBIGSFRlllllh     10      0       0      51        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRhll         7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      45        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRllh         5      0       0      48        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlllh      1      0       0      44        0.0%
BITBIGSFRhhlhhl      1      0       0      41        0.0%
BITBIGSFRhhlhl       1      0       0      42        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BITBIGSFRllllll      1      0       0      53        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10F      54        0.0%
DATA                 0      0     10F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Apr 28 15:31:23 2024

              ___fldiv@aexp 0042                ___fldiv@bexp 0041                ___fldiv@sign 003A  
                        _C0 102D                          _C1 1029                          _C2 1025  
                        _C3 1021                          l50 2ECE                          l42 2D92  
                        l52 2E36                          l47 2DE4                          _S1 100D  
                        _S2 1009                          _S3 1005                          _S4 1001  
              ___awdiv@sign 0008         ___wmul@multiplicand 0005                         l100 38EE  
                       l102 38FC                         l103 397E                         l111 3B2C  
                       l120 3BCA                         l200 2A12                         l113 3B6C  
                       l106 399A                         l123 404E                         l211 2AA8  
                       l203 2A14                         l132 3F86                         l116 3BBA  
                       l220 3F12                         l300 40D8                         l117 3BBC  
                       l109 3B1E                         l126 405C                         l134 3F94  
                       l214 3EEC                         l135 3FAA                         l231 40AA  
                       l303 40CA                         l128 406A                         l216 3EFA  
                       l129 406C                         l217 3F00                         l313 3554  
                       l138 3FB8                         l234 40BC                         l306 4110  
                       l219 3F0E                         l318 3564                         l319 357A  
                       l256 38C0                         l347 4046                         l291 4102  
                       l621 3F4C                         l294 40F4                         l297 40E6  
                       l644 37D4                         l901 199C                         l902 198A  
                       l591 3C7A                         l578 3A5E                         l931 2468  
                       l940 24AE                         l917 3E4E                         l942 2526  
                       l934 242C                         l943 2514                         l929 2608  
                       l961 1B48                         l970 1DB6                         l875 17B2  
                       l971 1DA4                         l892 18CC                         l884 1A82  
                       l876 17A0                         l877 1766                         l965 1EAC  
                       l968 1D3E                         l978 1E6E                         _GIE 7F97  
                       _ISR 0008                         _abs 3FEE                         _pad 3D22  
              ___awmod@sign 0008                         tosl 0FFD                         wreg 0FE8  
                _TXSTA1bits 0FAC                ___flmul@aexp 0022                ___flmul@bexp 0023  
              ___flmul@sign 001D                ___flmul@temp 0028                ___flmul@prod 0024  
                      ?_ISR 0001                ___fltol@exp1 0061                        l1002 3150  
                      l1005 32AC                        l1120 4008                        l1016 3244  
                      l1025 3F82                        l1009 31E8                        l1050 3DBE  
                      l1106 2860                        l1123 4020                        l1203 30F8  
                      ?_abs 0009                        l1116 3ED4                        l1220 226E  
                      l1045 3D5A                        l1053 35DA                        l1150 40A6  
                      l1135 3B18                        l1143 3E92                        l1071 3322  
                      l1048 3D9C                        l1064 36CC                        l1232 2CDA  
                      l3001 33B4                        l1091 3D20                        l3011 33FC  
                      l1083 341A                        l3003 33B8                        l1219 20D0  
                      l3021 3CCA                        l3013 3C7C                        l3101 1C98  
                      l1237 3FEC                        l1078 33D2                        l3023 3CEA  
                      l1087 3D18                        l3015 3C84                        l3007 33E4  
                      l3111 1D2E                        l3103 1CC2                        l3031 1A9E  
                      l4001 35EC                        l3017 3CA6                        l3025 3CF2  
                      l3009 33F8                        l3121 1D6E                        l3113 1D3C  
                      l3105 1CF8                        l3041 1AD6                        l3033 1AA0  
                      l1169 15C2                        l4003 35F2                        l4011 364A  
                      l3019 3CAE                        l3131 1DE0                        l3123 1D9C  
                      l3115 1D4E                        l3107 1D06                        l3051 1B02  
                      l3043 1AE6                        l3035 1AB0                        l3027 1A84  
                      l4021 369C                        l4013 3664                        l4005 3624  
                      l4101 26CA                        l3141 1E56                        l3133 1E0A  
                      l3117 1D5C                        l3109 1D24                        l3061 1B58  
                      l3053 1B12                        l3045 1AEC                        l3037 1AC0  
                      l3029 1A90                        l3221 3160                        l4023 36AC  
                      l4015 3676                        l4007 3628                        l4103 26E6  
                      l3143 1E72                        l3151 1E98                        l3127 1DC6  
                      l3135 1E0E                        l3119 1D60                        l3071 1B92  
                      l3063 1B68                        l3055 1B22                        l3047 1AF2  
                      l3039 1AD0                        l3231 319E                        l3223 3176  
                      l3215 30FC                        l2601 40AA                        l4017 3686  
                      l4009 362E                        l4121 2772                        l4113 273C  
                      l4105 2702                        l3153 1E9C                        l3145 1E82  
                      l3137 1E28                        l3129 1DD2                        l3081 1BE4  
                      l3073 1BA8                        l3057 1B32                        l3049 1B00  
                      l4041 373A                        l4033 36FA                        l3241 3226  
                      l3233 31D0                        l3217 310C                        l3411 3B1C  
                      l2603 40B8                        l2611 3A8E                        l4019 3696  
                      l4123 2794                        l4131 27F6                        l4115 2740  
                      l4107 271A                        l3147 1E90                        l3139 1E3C  
                      l3091 1C2A                        l3083 1BF2                        l3075 1BB4  
                      l3067 1B7C                        l3059 1B38                        l3163 3F14  
                      l4051 376A                        l4043 3748                        l4035 3724  
                      l4027 36CE                        l3251 327C                        l3243 3234  
                      l3235 31D2                        l3227 318A                        l3219 311A  
                      l4211 1100                        l4203 10BA                        l3421 3B54  
                      l3413 3B1C                        l2701 3C4E                        l2613 3AAC  
                      l2605 3A60                        l4133 2806                        l4125 27BE  
                      l4117 2762                        l4109 2724                        l4141 283A  
                      l3149 1E92                        l3093 1C44                        l3085 1BFE  
                      l3077 1BCC                        l3069 1B88                        l3165 3F2C  
                      l3157 3E0A                        l4061 3794                        l4053 3774  
                      l4037 3726                        l4029 36E6                        l3253 328C  
                      l3245 3252                        l3237 31DE                        l3229 3192  
                      l3341 3FDC                        l4221 1170                        l4213 1116  
                      l4205 10CA                        l3431 3B76                        l3423 3B66  
                      l3415 3B2E                        l2703 3C54                        l2615 3AE2  
                      l2607 3A72                        l4127 27E8                        l4119 276A  
                      l4071 260A                        l4151 3EB0                        l3095 1C54  
                      l3087 1C0E                        l3079 1BD8                        l3167 3F3C  
                      l3159 3E1A                        l4063 37A4                        l4039 3736  
                      l3255 329A                        l3247 3254                        l3239 321A  
                      l4223 118E                        l4215 112A                        l4207 10E0  
                      l3345 404A                        l3441 3FA8                        l3433 3BA8  
                      l3425 3B72                        l3417 3B3A                        l2641 39BA  
                      l2633 399C                        l2705 3C5A                        l2609 3A84  
                      l4137 282E                        l4081 264E                        l4073 262C  
                      l4153 3ECC                        l4321 3F78                        l4313 3F4E  
                      l3601 22D6                        l2801 16F0                        l3097 1C70  
                      l3089 1C1A                        l3361 2EFC                        l4065 37B4  
                      l4049 3760                        l3257 329C                        l3249 3258  
                      l3337 3FBA                        l4161 1EE4                        l4305 15A4  
                      l4241 127A                        l4225 119E                        l4233 120E  
                      l4209 10E2                        l4401 2A3E                        l3435 3BAA  
                      l3419 3B4A                        l2651 39EE                        l2643 39C8  
                      l2635 39A0                        l2707 3C6A                        l2731 3FFC  
                      l2627 4022                        l4083 2650                        l4091 2682  
                      l4075 2634                        l4147 3E94                        l4315 3F56  
                      l4331 3806                        l3443 3ED8                        l3611 2302  
                      l3603 22DC                        l4307 408E                        l2803 16F4  
                      l2811 1704                        l3099 1C7C                        l4067 37C4  
                      l4059 3788                        l3339 3FDA                        l4171 1FBA  
                      l4163 1EE6                        l4251 1354                        l4243 12C6  
                      l4235 1242                        l4227 11D2                        l4219 1152  
                      l4411 2A6C                        l4403 2A44                        l3437 3F84  
                      l2661 3A28                        l2653 39F6                        l2645 39D0  
                      l2637 39AE                        l2709 3C72                        l2629 403E  
                      l4093 2692                        l4085 265C                        l4077 2642  
                      l4149 3E9C                        l4317 3F5E                        l4333 380C  
                      l4341 3842                        l4325 37DA                        l3445 3EE6  
                      l3701 25AE                        l3621 233C                        l3613 2312  
                      l3605 22E2                        l4309 4092                        l2821 1774  
                      l2813 1708                        l2805 16F8                        l2741 15F0  
                      l2733 15C4                        l4173 2012                        l4165 1F04  
                      l4157 1EAE                        l3357 2AAA                        l4253 1372  
                      l4245 130E                        l4413 2A7A                        l4405 2A52  
                      l4421 2CDC                        l3439 3F96                        l2671 3A4E  
                      l2663 3A30                        l2655 39FE                        l2647 39D4  
                      l2639 39B6                        l4095 26A6                        l4079 2646  
                      l4319 3F66                        l4343 38A4                        l4335 381E  
                      l4327 37DE                        l3447 3EE8                        l3711 25FC  
                      l3703 25C8                        l3623 2352                        l3615 2322  
                      l3607 22F0                        l2903 19AC                        l2911 1A02  
                      l2831 179E                        l2823 1780                        l2815 1732  
                      l2807 16FC                        l2751 162A                        l2743 1600  
                      l2735 15D0                        l4191 21EA                        l4175 2072  
                      l4167 1F28                        l4183 20DC                        l4159 1ECE  
                      l4271 1402                        l4255 1382                        l4263 13BA  
                      l4239 126A                        l4415 2A80                        l4407 2A58  
                      l4351 2862                        l4431 2D22                        l4423 2D02  
                      l3721 38C2                        l2673 3A56                        l2665 3A32  
                      l2657 3A0C                        l2649 39DC                        l2681 3BDE  
                      l2729 3FEE                        l4097 26B6                        l4089 2664  
                      l4345 38B0                        l4329 37F4                        l3713 25FE  
                      l3705 25E4                        l3641 23A6                        l3625 2362  
                      l3633 2382                        l3617 2324                        l3609 22F2  
                      l2921 1A54                        l2913 1A12                        l2905 19B8  
                      l2841 17F4                        l2833 17C0                        l2825 1784  
                      l2817 174E                        l2809 1700                        l2761 1658  
                      l2753 1630                        l2745 1610                        l2737 15DE  
                      l4193 2242                        l4185 2100                        l4177 2082  
                      l4169 1F94                        l4281 14AC                        l4273 143A  
                      l4249 1336                        l4417 2A84                        l4409 2A66  
                      l4361 2884                        l4353 2876                        l4441 2D84  
                      l4433 2D34                        l4425 2D06                        l3731 38FE  
                      l3723 38D0                        l2667 3A38                        l2659 3A12  
                      l2691 3C12                        l2683 3BE6                        l4099 26C0  
                      l4347 38BC                        l4339 3824                        l3707 25E8  
                      l3651 23F8                        l3643 23C0                        l3635 2392  
                      l3627 236A                        l3619 232C                        l2931 1A72  
                      l2923 1A5A                        l2915 1A22                        l2907 19C6  
                      l2851 182E                        l2843 1802                        l2835 17D0  
                      l2827 1792                        l2819 175E                        l2771 168C  
                      l2763 165A                        l2755 1642                        l2747 1612  
                      l2739 15E0                        l4195 225A                        l4187 216C  
                      l4179 20B4                        l4291 1518                        l4283 14BC  
                      l4275 146E                        l4419 2A96                        l4371 28A2  
                      l4363 2886                        l4355 287E                        l3571 40F8  
                      l4451 2DD6                        l4435 2D4E                        l4427 2D0C  
                      l3733 397C                        l3725 38DC                        l2669 3A3E  
                      l2693 3C1A                        l2685 3BEA                        l2677 3BCC  
                      l3709 25F6                        l3661 2454                        l3653 2408  
                      l3645 23D0                        l3637 2392                        l3629 236E  
                      l2925 1A5C                        l2917 1A42                        l2909 1A00  
                      l2861 189A                        l2853 1830                        l2845 1810  
                      l2829 1794                        l2781 16C8                        l2765 166A  
                      l2773 1694                        l2757 1644                        l2749 161A  
                      l4189 2192                        l4269 13F2                        l4381 28D8  
                      l4373 28A4                        l4365 2898                        l4357 2880  
                      l3581 4106                        l3573 40EA                        l4461 2E28  
                      l4445 2DA0                        l4437 2D5E                        l4429 2D10  
                      ?_pad 0014                        l3735 398C                        l3727 38DE  
                      l2695 3C22                        l2687 3BF8                        l2679 3BD0  
                      l3671 2494                        l3663 2456                        l3655 241C  
                      l3647 23E0                        l3591 229C                        l3583 2270  
                      l2927 1A62                        l2919 1A46                        l2871 18F2  
                      l2863 189C                        l2855 183A                        l2847 181C  
                      l2839 17E4                        l2791 16DC                        l2783 16CC  
                      l2775 16A4                        l2767 167A                        l2759 164A  
                      l4295 1540                        l4287 14D0                        l4279 1496  
                      l4391 29E8                        l4383 28EA                        l4375 28A6  
                      l4367 289E                        l4359 2882                        l3575 40DC  
                      l4471 2E5A                        l4455 2DF2                        l4439 2D6C  
                      l4447 2DB0                        l3729 38EC                        l2697 3C30  
                      l2689 3C00                        l3681 24D0                        l3673 249E  
                      l3665 2466                        l3657 242A                        l3649 23F0  
                      l3593 22AC                        l3585 227C                        l2929 1A70  
                      l2881 1920                        l2865 18AC                        l2849 1820  
                      l2857 1840                        l2793 16E0                        l2785 16D0  
                      l2777 16B6                        l2769 168A                        l4289 14F4  
                      l4385 28F6                        l4377 28C2                        l4369 28A0  
                      l3577 40CE                        l4481 2ED0                        l4473 2E7E  
                      l4465 2E48                        l4449 2DBE                        l4457 2E02  
                      l2699 3C46                        l3691 2542                        l3683 24DE  
                      l3675 24AC                        l3667 2478                        l3659 2436  
                      l3595 22BC                        l3587 228A                        l2883 192E  
                      l2875 1906                        l2891 194C                        l2859 1866  
                      l2867 18BC                        l2795 16E4                        l2787 16D4  
                      l2779 16C4                        l4299 1568                        l4395 29F4  
                      l4387 295E                        l4379 28D2                        l3579 40C0  
                      l3771 3446                        l3763 341C                        l4483 2EE2  
                      l4467 2E4C                        l4459 2E10                        l2981 32AE  
                      l3693 2550                        l3685 250C                        l3669 248E  
                      l3677 24BE                        l3597 22BE                        l3589 228C  
                      l2885 1936                        l2877 1910                        l2869 18E2  
                      l2893 195A                        l2797 16E8                        l2789 16D8  
                      l4397 2A22                        l4389 2982                        l3781 3496  
                      l3773 344E                        l3765 343A                        l4485 2EF0  
                      l4469 2E50                        l2983 32C8                        l3695 257A  
                      l3679 24CC                        l3599 22C6                        l2895 195E  
                      l2887 193A                        l2879 191E                        l2799 16EC  
                      l4399 2A30                        l3791 34FC                        l3775 3458  
                      l3767 3442                        l4479 2E86                        l3961 3E6E  
                      l2993 3344                        l2985 32D4                        l3689 2536  
                      l3697 257E                        l2897 196C                        l2889 194A  
                      l3793 3518                        l3777 3462                        l3769 3444  
                      l3963 3E72                        l3971 3D52                        l2995 3358  
                      l2987 32E0                        l3699 2598                        l2899 1982  
                      l3795 3530                        l3787 349E                        l3779 3474  
                      l3957 3E50                        l3973 3D66                        l3965 3D22  
                      l3981 357C                        l2997 335C                        l2989 32E4  
                      l3797 3550                        l3789 34F8                        l3959 3E5C  
                      l3975 3D7A                        l3967 3D30                        l3991 35B2  
                      l3983 3580                        l2999 337E                        l3799 3574  
                      l3977 3D7E                        l3969 3D44                        l3993 35C2  
                      l3985 3594                        l3979 3DAA                        l3995 35CE  
                      l3987 359C                        l3997 35D6                        l3989 35AC  
                      l3999 35E2                        STR_1 1041                        STR_2 1052  
                      STR_3 1063                        STR_4 1074                        STR_5 10A7  
                      STR_6 109D                        STR_7 10A2                        STR_8 10B4  
                      STR_9 10B0                        u3000 3340                        u3001 333C  
                      u3010 337A                        u3011 3376                        u2300 3AAC  
                      u3020 33A0                        u3100 1AC0                        u2301 3AA8  
                      u3101 1ABC                        u2310 3AE2                        u3030 33D2  
                      u3110 1B00                        u2311 3ADE                        u3031 33CE  
                      u3111 1AFC                        u2400 3BF8                        u3040 33E0  
                      u4000 2408                        u3200 1D9C                        u3120 1B12  
                      u2401 3BF4                        u3041 33DC                        u4001 2404  
                      u3201 1D98                        u3121 1B0E                        u2330 39AE  
                      u2410 3C12                        u3050 341A                        u4010 242A  
                      u3210 1DB2                        u3130 1B22                        u2331 39AA  
                      u2411 3C0E                        u3051 3416                        u3027 3396  
                      u4011 2426                        u3211 1DAE                        u3131 1B1E  
                      u2340 39C8                        u2420 3C30                        u3060 3CA6  
                      u4100 2536                        u4020 2454                        u2500 15DE  
                      u3220 1DC6                        u3140 1B58                        u2341 39C4  
                      u2421 3C2C                        u3061 3CA2                        u4101 2532  
                      u4021 2450                        u2501 15DA                        u3221 1DC2  
                      u3141 1B54                        u2350 39EE                        u2430 3C46  
                      u2270 40B8                        u3070 3D18                        u4110 2550  
                      u4030 2478                        u2510 15F0                        u3230 1DE0  
                      u3150 1B68                        u2351 39EA                        u2431 3C42  
                      u2271 40B4                        u3071 3D14                        u4111 254C  
                      u4031 2474                        u2511 15EC                        u3231 1DDC  
                      u3151 1B64                        u2360 3A0C                        u2440 3C6A  
                      u2280 3A72                        u4120 2598                        u4040 248E  
                      u2600 174A                        u2520 1600                        u3240 1E28  
                      u3160 1CE2                        u3080 1A9E                        u3400 3234  
                      u5000 1402                        u2361 3A08                        u2441 3C66  
                      u2281 3A6E                        u4121 2594                        u4041 248A  
                      u2601 1744                        u2521 15FC                        u3241 1E24  
                      u3081 1A9A                        u3401 3230                        u5001 13FE  
                      u4201 346C                        u2370 3A28                        u2290 3A84  
                      u4130 25C8                        u4050 24AC                        u2610 174C  
                      u2530 1642                        u3250 1E56                        u3170 1D3C  
                      u3090 1AB0                        u3410 3244                        u5010 14AC  
                      u2371 3A24                        u2291 3A80                        u4131 25C4  
                      u4051 24A8                        u2531 163E                        u3251 1E52  
                      u3171 1D38                        u3091 1AAC                        u3411 3240  
                      u5011 14A8                        u4211 347E                        u2380 3A4E  
                      u4140 25F6                        u4060 24CC                        u2700 1866  
                      u2620 1774                        u2540 1658                        u3260 1E90  
                      u3180 1D5C                        u3420 3252                        u5100 2A66  
                      u2381 3A4A                        u5021 37E8                        u4141 25F2  
                      u4061 24C8                        u2701 1862                        u2621 1770  
                      u2541 1654                        u3261 1E8C                        u3181 1D58  
                      u3165 1CD8                        u3421 324E                        u5101 2A62  
                      u4150 38FC                        u2390 3BDE                        u5030 3806  
                      u4070 24DE                        u2710 18AC                        u2630 1792  
                      u2550 166A                        u3190 1D6E                        u3270 3F2C  
                      u3430 328C                        u3350 310C                        u5110 2A7A  
                      u4151 38F8                        u2391 3BDA                        u5031 3802  
                      u4071 24DA                        u2711 18A8                        u2631 178E  
                      u2551 1666                        u3191 1D6A                        u3271 3F28  
                      u3431 3288                        u3351 3108                        u5111 2A76  
                      u4160 398C                        u5040 381E                        u4080 250C  
                      u2800 1998                        u2720 18E2                        u2640 17B2  
                      u2560 167A                        u3440 329A                        u3360 311A  
                      u5120 2AA8                        u4240 34F4                        u5200 2E36  
                      u4161 3988                        u5041 381A                        u4081 2508  
                      u2801 1994                        u2721 18DE                        u2641 17AE  
                      u2561 1676                        u3441 3296                        u3361 3116  
                      u5121 2AA4                        u4241 34EE                        u5201 2E32  
                      u2490 3FFC                        u4090 2522                        u2810 19AC  
                      u2730 18F2                        u2650 17C0                        u2570 16B6  
                      u3370 3176                        u5050 28D2                        u4250 34F6  
                      u4234 34DE                        u5210 2E44                        u5130 2D6C  
                      u2491 3FF8                        u4091 251E                        u2811 19A8  
                      u2731 18EE                        u2651 17BC                        u2571 16B2  
                      u3371 3172                        u5051 28CE                        u4235 34DA  
                      u5211 2E40                        u5131 2D68                        u3700 3FB8  
                      u2820 19C6                        u2740 191E                        u2660 17D0  
                      u2580 16C4                        u3380 31CC                        u5060 28EA  
                      u4260 3518                        u4228 34B0                        u5220 2EE2  
                      u5140 2D92                        u3701 3FB4                        u2821 19C2  
                      u2741 191A                        u2661 17CC                        u2581 16C0  
                      u3381 31C8                        u5061 28E6                        u4261 3514  
                      u4229 34F8                        u5221 2EDE                        u5141 2D8E  
                      u3550 405C                        u3630 3B2C                        u3710 3EFA  
                      u2830 1A00                        u2750 192E                        u2670 1802  
                      u2590 1732                        u3390 3216                        u5070 2A22  
                      u4270 3550                        u5150 2DA0                        u3551 4058  
                      u3631 3B28                        u3711 3EF6                        u2831 19FC  
                      u2751 192A                        u2671 17FE                        u2591 172E  
                      u3391 3212                        u5071 2A1E                        u4271 354C  
                      u5151 2D9C                        u3560 406A                        u3640 3B4A  
                      u4600 35AC                        u3720 3F0E                        u2840 1A12  
                      u2760 194A                        u2680 1810                        u5080 2A3E  
                      u4280 3564                        u5160 2DBE                        u3561 4066  
                      u3641 3B46                        u4601 35A8                        u3721 3F0A  
                      u2841 1A0E                        u2761 1946                        u2681 180C  
                      u5081 2A3A                        u4281 3560                        u5161 2DBA  
                      u3650 3B66                        u4530 3E92                        u4610 35C2  
                      u2850 1A22                        u2770 195A                        u2690 182E  
                      u5090 2A52                        u5170 2DE4                        u5307 3992  
                      u3651 3B62                        u4531 3E8E                        u4611 35BE  
                      u2851 1A1E                        u2771 1956                        u2691 182A  
                      u5091 2A4E                        u5171 2DE0                        _PEIE 7F96  
                      u3660 3BA4                        u4540 3D30                        u4620 3664  
                      u2860 1A42                        u2780 196C                        u4700 3784  
                      u5180 2DF2                        u4541 3D2C                        u4621 3660  
                      u2861 1A3E                        u2781 1968                        u4701 3780  
                      u5181 2DEE                        u5237 2D40                        u3670 3BBA  
                      u4550 3D52                        u4630 3676                        u2870 1A54  
                      u2790 1982                        u4710 37A4                        u5190 2E10  
                      u3671 3BB6                        u4551 3D4E                        u4631 3672  
                      u2871 1A50                        u2791 197E                        u4711 37A0  
                      u5191 2E0C                        u5247 2D78                        u3680 3BCA  
                      u4560 3D9C                        u4640 3686                        u4800 27BE  
                      u3920 228A                        u2880 1A70                        u4720 37B4  
                      u3681 3BC6                        u4561 3D98                        u4641 3682  
                      u4801 27BA                        u3921 2286                        u2881 1A6C  
                      u4721 37B0                        u3905 40C8                        u5257 2DCA  
                      u3690 3F94                        u4570 3DAA                        u4650 3696  
                      u2970 32C8                        u4810 27E8                        u4730 262C  
                      u3930 229C                        u3906 40CA                        u3691 3F90  
                      u3667 3B9A                        u4571 3DA6                        u4651 3692  
                      u2971 32C4                        u4811 27E4                        u4731 2628  
                      u3931 2298                        u3915 410E                        u5267 2E1C  
                      u4580 3590                        u2980 3312                        u4820 2806  
                      u4740 2692                        u3940 22AC                        u4660 36E6  
                      u4900 10DE                        u3916 4110                        u4581 358A  
                      u4821 2802                        u4741 268E                        u3941 22A8  
                      u4661 36E2                        u5277 3522                        u4590 3592  
                      u2990 3322                        u4750 26B6                        u4830 3ECC  
                      u3950 22F0                        u4670 371A                        u4910 1100  
                      u2991 331E                        u4751 26B2                        u4831 3EC8  
                      u3951 22EC                        u4911 10FC                        u5287 2A8C  
                      u4760 26E6                        u3960 2302                        u4680 3748  
                      u4840 1EE0                        u4920 1116                        u5297 38E4  
                      u4761 26E2                        u3961 22FE                        u4681 3744  
                      u4841 1EDA                        u4921 1112                        u3865 4100  
                      u4770 2702                        u3970 2312                        u4690 375C  
                      u4850 1EE2                        u4930 1170                        u3866 4102  
                      u2987 3308                        u4771 26FE                        u3971 230E  
                      u4691 3758                        u4675 3710                        u4931 116C  
                      u3875 40F2                        u4780 2762                        u3980 2352  
                      u4860 1F04                        u4940 118E                        u3876 40F4  
                      u4781 275E                        u3981 234E                        u4861 1F00  
                      u4941 118A                        u3885 40E4                        u4790 2794  
                      u3990 2392                        u4870 2082                        u4950 119E  
                      u3886 40E6                        u4791 2790                        u3991 238E  
                      u4871 207E                        u4951 119A                        u3895 40D6  
                      u4880 226A                        u4960 127A                        u3896 40D8  
                      u4881 2266                        u4961 1276                        u4970 1354  
                      u4890 10DC                        u4971 1350                        u4891 10D6  
                      u4980 1372                        u4981 136E                        u4990 1382  
                      u4991 137E                        _TMR1 0FCE                        abs@a 0009  
                      _dbuf 0100                        _half 101D                        _main 2CDC  
                      _dtoa 357C                        _prec 00F0                        _sinf 10BA  
                      pad@i 001B                        pad@p 0018                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        _stoa 32AE  
                      btemp 005D                        prodh 0FF4                        prodl 0FF3  
                      start 008C             ___fldiv@new_exp 003B                ___param_bank 0000  
                     ??_ISR 0001              _LCD_ShowString 3B1A                       ??_abs 000B  
                     ??_pad 001A            __end_of_LCD_Init 399C            __end_of_LCD_Send 406E  
             ___fltol@sign1 0060             __end_of___fladd 1A84                       ?_main 0001  
                     ?_dtoa 001D             __end_of___fldiv 260A             __end_of___awdiv 3A60  
           __end_of___cosdf 30FA             __end_of___flneg 3F4E                       STR_10 10AC  
                     STR_11 1098                       STR_12 108C                       STR_13 10AB  
                     STR_14 1092                       STR_15 1093                       STR_16 1085  
           __end_of___awmod 3C7C                       ?_sinf 009C             __end_of___flmul 1EAE  
           __end_of___flsub 3E50             __end_of___fltol 37D6                       ?_stoa 000D  
           ___awdiv@divisor 0005             __end_of___sindf 2CDC                       i2l341 006C  
                     i2l344 0088                       i2l339 007E                ___sindf$3220 0070  
              ___sindf$3218 0068                ___sindf$3219 006C             ___awdiv@counter 0007  
              vfpfcnvrt@fmt 002B                       _TX1IF 7CF4             __end_of_pio2_1t 1015  
                     _fabsf 3FBA                       _flags 005B         read_prec_or_width@c 000B  
       read_prec_or_width@n 000C                       _fputc 3A60                       _fputs 3E50  
                     pad@fp 0014                       _width 00EE             __end_of_invpio2 101D  
                     _putch 40A8                       dtoa@d 001F                       dtoa@i 0027  
                     dtoa@p 0023                       dtoa@s 0026                       dtoa@w 0024  
      __end_of_LED1_Control 4104             __end_of_runGPIO 357C                       pclath 0FFA  
                     tablat 0FF5        __end_of_LED2_Control 40F6                       sinf@n 00A8  
                     sinf@x 009C                       sinf@y 00AE                       plusw1 0FE3  
                     plusw2 0FDB                       stoa@l 0019                       stoa@p 0013  
                     stoa@s 000F                       stoa@w 0015                       ttemp5 005E  
                     ttemp6 0061                       ttemp7 0065        __end_of_LED3_Control 40E8  
                     status 0FD8                       wtemp8 005E             __end_of_sprintf 3F84  
      __end_of_LED4_Control 40DA        __end_of_LED5_Control 40CC        __end_of_LED6_Control 4112  
           __initialization 3DC0      __end_of_LCD_ShowString 3BCC                __end_of_half 1021  
              __end_of_main 2EFC                __end_of_dtoa 36CE                __end_of_sinf 15C4  
              __end_of_stoa 341C                LCD_Send@data 0003                      ??_main 00C2  
                    ??_dtoa 0021                      ??_sinf 005B                      ??_stoa 0011  
         __end_of_LCD_Clear 3FBA               __activetblptr 0002  __end_of_read_prec_or_width 3D22  
              ?_moveDisplay 004C                      ?_fabsf 0003                      ?_fputc 0004  
                    ?_fputs 000D                      _ADRESH 0FC4            ___awdiv@dividend 0003  
                    ?_putch 0001                      _GODONE 7E11                      _GPIOIE 00F2  
                    i2l3941 0018                      i2l3943 0026                      i2l3953 007A  
                    i2l3945 0038                      i2l3955 0086                      i2l3947 0046  
                    i2l3939 000A                      i2l3949 005E               ___rem_pio2f@n 0098  
             ___rem_pio2f@t 0094               ___rem_pio2f@x 007C               ___rem_pio2f@y 0080  
             vfpfcnvrt@done 0033                      _SPBRG1 0FAF                      _TMR1IE 7CE8  
                    _TMR1IF 7CF0                      _TMR1ON 7E68                      _SSP1IF 7CF3  
                    _SSP2IF 7D27                      _TXREG1 0FAD            __end_of___xxtofl 32AE  
              vfprintf@cfmt 0038             ?_LCD_ShowString 0004                      _s1pio2 103D  
                    _s2pio2 1039                      _s3pio2 1035                      _s4pio2 1031  
                 ??___fladd 004B                      ___wmul 4022                   ??___fldiv 0032  
                 ??___awdiv 0007                   ??___cosdf 0057                   ??___flneg 0057  
                 ??___awmod 0007                   ??___flmul 0019                   ??___flsub 005B  
                 ??___fltol 0057                   ??___sindf 0057                      _pio2_1 1015  
                    fabsf@u 0007                      fabsf@x 0003        read_prec_or_width@ap 000A  
                    clear_0 3DE6                      clear_1 3DF2            ___awdiv@quotient 0009  
                    _runDAC 2862             ___awmod@divisor 0005                      isa$std 0001  
           ___awmod@counter 0007                      _printf 408E                      pad@buf 0016  
                    dtoa@fp 001D                      fputc@c 0004                      fputs@c 0011  
                    fputs@i 0012                      fputs@s 000D                __mediumconst 0000  
                    sinf@ux 00B2                   ??_runGPIO 0004                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8           __end_of_SPI_write 3F14  
                    stoa@cp 0017                      stoa@fp 000D            __end_of_vfprintf 3ED6  
                 ??_sprintf 003F                ___xxtofl@arg 000D                ___xxtofl@exp 000C  
              ___xxtofl@val 0003                  __accesstop 0060     __end_of__initialization 3DFC  
                 ?_LCD_Init 0001                   ?_LCD_Send 0001                  ___flneg@f1 0078  
             ___rparam_used 0001                  ___fltol@f1 0053              __pcstackCOMRAM 0001  
         LED4_Control@state 0003                __pidataBANK0 406E               __end_of_fabsf 3FEE  
             __end_of_fputc 3B1A               __end_of_fputs 3E94               __end_of_putch 40BE  
                __end_of_C0 1031                  __end_of_C1 102D                  __end_of_C2 1029  
                __end_of_C3 1025                  __end_of_S1 1011                  __end_of_S2 100D  
                __end_of_S3 1009                  __end_of_S4 1005                     ??_fabsf 0007  
                   ??_fputc 0008                     ??_fputs 0011                     ??_putch 0003  
                __pbssBANK0 00E6                  __pbssBANK1 0100                  ??_LCD_Init 0004  
                ??_LCD_Send 0003                SPI_write@LSB 0004                SPI_write@MSB 0003  
                   ?___wmul 0003               ??___rem_pio2f 0081                _LED1_Control 40F6  
                   ?_runDAC 0001                _LED2_Control 40E8                     ?_printf 0039  
              _LED3_Control 40DA                _LED4_Control 40CC                   ?___xxtofl 0003  
              _LED5_Control 40BE              ___rem_pio2f@fn 0090              ___rem_pio2f@ty 0083  
            ___rem_pio2f@ux 008C                _LED6_Control 4104                     _SSP2ADD 0F6E  
                   _SSP1BUF 0FC9                     _SSP2BUF 0F6F           runGPIO@LEDControl 0012  
           LCD_ShowString@i 0009                     __Hparam 0000                     __Lparam 0000  
                   ___fladd 15C4                     ___fldiv 2270                     ___awdiv 399C  
                   ___cosdf 2EFC                     ___flneg 3F14                     ___awmod 3BCC  
                   ___flmul 1A84                     ___flsub 3E0A                     ___fltol 36CE  
                   ___sindf 2AAA                   ?_vfprintf 0034                __psmallconst 1000  
            main@setUpAgain 00C4                     __pcinit 3DC0                     __ramtop 1000  
                   __ptext0 2CDC                     __ptext1 341C                     __ptext2 40BE  
                   __ptext3 40CC                     __ptext4 40DA                     __ptext5 40E8  
                   __ptext6 40F6                     __ptext7 4104                     __ptext8 2862  
                   __ptext9 10BA                     _pio2_1t 1011                   _T1CONbits 0FCD  
     read_prec_or_width@fmt 0009                  ??___xxtofl 0007         __end_of___rem_pio2f 2270  
          ___awmod@dividend 0003                     _invpio2 1019                     _runGPIO 341C  
                 _LCD_Clear 3F84                     _sprintf 3F4E            ___rem_pio2f$3217 0087  
      end_of_initialization 3DFC                     fputc@fp 0006            ___rem_pio2f@F526 00EA  
             __Lmediumconst 0000                     fputs@fp 000F            ??_LCD_ShowString 0006  
        _read_prec_or_width 3C7C           LED1_Control@state 0003       LCD_ShowString@lineNum 0008  
          ___rem_pio2f@sign 008B           __end_of_vfpfcnvrt 2862                     postdec1 0FE5  
                   postdec2 0FDD         ?_read_prec_or_width 0009                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 002E  
                ??_vfprintf 0038                   _PORTAbits 0F80                   _PORTCbits 0F82  
               ___fladd@grs 0052               ___xxtofl@sign 000B                   _TRISAbits 0F92  
                 _TRISBbits 0F93                   _TRISCbits 0F94                   _TRISDbits 0F95  
                ?_LCD_Clear 0001        ??_read_prec_or_width 000B                 ___fldiv@grs 003D  
               ___fldiv@rem 0036                   _SPI_write 3ED6                 ___flmul@grs 001E  
         LED5_Control@state 0003              __end_of_s1pio2 1041              __end_of_s2pio2 103D  
            __end_of_s3pio2 1039              __end_of_s4pio2 1035                 vfpfcnvrt@ap 002C  
               vfpfcnvrt@cp 0032                 ___rem_pio2f 1EAE                 vfpfcnvrt@fp 0029  
            __end_of___wmul 4048              __end_of_pio2_1 1019        moveDisplay@menuItem1 0060  
      moveDisplay@menuItem2 0071        moveDisplay@menuItems 0082              __end_of_runDAC 2AAA  
            __end_of_printf 40A8         start_initialization 3DC0                 __end_of_ISR 008C  
               __end_of_abs 4022                 __end_of_pad 3DC0                  ?_SPI_write 0001  
               vfprintf@fmt 0036                    ??___wmul 0007                 __pdataBANK0 00C6  
                  ??_runDAC 00B6                    ??_printf 003C                   ___fladd@a 0047  
                 ___fladd@b 0043                   ___fldiv@a 002E                   ___fldiv@b 002A  
             runGPIO@states 0006                   ___cosdf@r 0060                   ___cosdf@w 0070  
                 ___cosdf@x 0053                   ___cosdf@z 0074                   ___flmul@a 0015  
                 ___flmul@b 0011                 __pbssCOMRAM 005B                   ___flsub@a 0057  
                 ___flsub@b 0053               __pcstackBANK0 0060                 ??_LCD_Clear 0004  
                 ___sindf@r 0060                   ___sindf@s 0074                   ___sindf@w 0064  
                 ___sindf@x 0053                   ___sindf@z 0078       runGPIO@numberOfStates 001F  
                 _dtoa$2824 0021               SPI_write@data 0005                   __pintcode 0008  
                  ?___fladd 0043                    ?___fldiv 002A                    ?___awdiv 0003  
                  ?___cosdf 0053                    ?___flneg 0078                    ?___awmod 0003  
                  ?___flmul 0011                    ?___flsub 0053                    ?___fltol 0053  
                  ?___sindf 0053                   fabsf@F465 00E6                 __smallconst 1000  
             ??_moveDisplay 004D                    ?_runGPIO 0001             runDAC@keepState 00BF  
                 _sinf$3213 00AA                    ?_sprintf 0039                   _sinf$2947 00A0  
                 _sinf$2948 00A4                 ??_SPI_write 0003              runDAC@DACindex 00C1  
                  _LCD_Init 38C2                    _LCD_Send 4048              ___wmul@product 0007  
                  _LATAbits 0F89                    _LATBbits 0F8A                    _LATCbits 0F8B  
                  _LATDbits 0F8C           LED2_Control@state 0003                    i2u450_40 0046  
                  i2u450_41 0042                    i2u451_40 006C                    i2u451_41 0068  
                  i2u531_47 0050                    i2u452_40 007A                    i2u452_41 0076  
                  i2u447_40 0018                    i2u447_41 0014                    i2u448_40 0026  
                  i2u448_41 0022                    i2u449_40 0038                    i2u449_41 0034  
                 _vfpfcnvrt 260A                  _ADCON0bits 0FC2                  _ADCON2bits 0FC0  
         ___wmul@multiplier 0003                   main@menuI 00C5            moveDisplay@F6952 00DE  
                 copy_data0 3DD4         __end_of_moveDisplay 38C2            moveDisplay@menuI 008A  
          moveDisplay@where 004C                runGPIO@F6964 00D2                runGPIO@F6982 00C6  
              runGPIO@GPIOi 0021                    __Hrparam 0000                  vfprintf@ap 0037  
                  __Lrparam 0000                  vfprintf@fp 0034          runGPIO@GPIOreverse 001E  
         LED6_Control@state 0003                ?___rem_pio2f 007C                  ?_vfpfcnvrt 0029  
       runDAC@selectModeDAC 00C0                  _ANSELAbits 0F38                  _ANSELBbits 0F39  
                _ANSELDbits 0F3B                  sprintf@fmt 003A                    ___xxtofl 30FA  
                  __ptext10 2AAA                    __ptext11 1EAE                    __ptext20 408E  
                  __ptext12 3FBA                    __ptext21 2270                    __ptext13 30FA  
                  __ptext30 357C                    __ptext22 3ED6                    __ptext14 36CE  
                  __ptext31 3D22                    __ptext23 37D6                    __ptext15 3E0A  
                  __ptext40 38C2                    __ptext32 3E50                    __ptext24 3F4E  
                  __ptext16 3F14                    __ptext41 4048                    __ptext33 3A60  
                  __ptext25 3E94                    __ptext17 2EFC                    __ptext34 40A8  
                  __ptext26 260A                    __ptext18 1A84                    __ptext35 3FEE  
                  __ptext27 32AE                    __ptext19 15C4                    __ptext36 3BCC  
                  __ptext28 3C7C                    __ptext37 399C                    __ptext29 4022  
                  __ptext38 3B1A                    __ptext39 3F84                _SSP1CON1bits 0FC6  
              _SSP2CON1bits 0F6C                _SSP2CON2bits 0F6B                    isa$xinst 0000  
               _runDAC$3210 00B7                 _runDAC$3211 00BB                    int$flags 005D  
                  _vfprintf 3E94               ?_LED1_Control 0001                   printf@fmt 0039  
              _SSP1STATbits 0FC7               ?_LED2_Control 0001                _SSP2STATbits 0F6D  
             ?_LED3_Control 0001               ?_LED4_Control 0001                   putch@data 0003  
             ?_LED5_Control 0001               ?_LED6_Control 0001                 _moveDisplay 37D6  
                  intlevel2 0000                   sprintf@ap 003F                  _RCSTA1bits 0FAB  
                  sinf@sign 00A9                    runGPIO@j 0022                    printf@ap 003C  
            ??_LED1_Control 0003              ??_LED2_Control 0003                 ??_vfpfcnvrt 002D  
    LCD_ShowString@textData 0004              ??_LED3_Control 0003              ??_LED4_Control 0003  
                  sprintf@f 0040                    sprintf@s 0039              ??_LED5_Control 0003  
            ??_LED6_Control 0003               ___fladd@signs 004F                ___fladd@aexp 0050  
              ___fladd@bexp 0051                ___cosdf$3214 0064                ___cosdf$3215 0068  
              ___cosdf$3216 006C               _keepStateGPIO 005C           LED3_Control@state 0003  
