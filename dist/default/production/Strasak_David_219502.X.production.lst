

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Apr 28 21:11:41 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    72   000000                     
    73                           ; Generated 12/10/2023 GMT
    74                           ; 
    75                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F46K22 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107   000000                     
   108                           	psect	idataBANK1
   109   0055BA                     __pidataBANK1:
   110                           	callstack 0
   111                           
   112                           ;initializer for runGPIO@F6984
   113   0055BA  20                 	db	32
   114   0055BB  30                 	db	48
   115   0055BC  18                 	db	24
   116   0055BD  0C                 	db	12
   117   0055BE  06                 	db	6
   118   0055BF  03                 	db	3
   119   0055C0  01                 	db	1
   120   0055C1  03                 	db	3
   121   0055C2  06                 	db	6
   122   0055C3  0C                 	db	12
   123   0055C4  18                 	db	24
   124   0055C5  30                 	db	48
   125                           
   126                           ;initializer for runGPIO@F6966
   127   0055C6  44                 	db	low _LED1_Control
   128   0055C7  56                 	db	high _LED1_Control
   129   0055C8  36                 	db	low _LED2_Control
   130   0055C9  56                 	db	high _LED2_Control
   131   0055CA  28                 	db	low _LED3_Control
   132   0055CB  56                 	db	high _LED3_Control
   133   0055CC  1A                 	db	low _LED4_Control
   134   0055CD  56                 	db	high _LED4_Control
   135   0055CE  0C                 	db	low _LED5_Control
   136   0055CF  56                 	db	high _LED5_Control
   137   0055D0  52                 	db	low _LED6_Control
   138   0055D1  56                 	db	high _LED6_Control
   139                           
   140                           ;initializer for moveDisplay@F6954
   141   0055D2  D2                 	db	low STR_9
   142   0055D3  D7                 	db	low STR_10
   143   0055D4  F1                 	db	low STR_11
   144   0055D5  ED                 	db	low STR_12
   145   0055D6  E9                 	db	low STR_13
   146   0055D7  CD                 	db	low STR_14
   147   0055D8  C1                 	db	low STR_15
   148   0055D9  E0                 	db	low (STR_8+4)
   149                           
   150                           	psect	smallconst
   151   001000                     __psmallconst:
   152                           	callstack 0
   153   001000  00                 	db	0
   154   001001  6C3C               	dw	27708
   155   001003  3636               	dw	13878
   156   001005                     __end_of_S4:
   157                           	callstack 0
   158   001005  07CF               	dw	1999
   159   001007  B950               	dw	47440
   160   001009                     __end_of_S3:
   161                           	callstack 0
   162   001009  8884               	dw	34948
   163   00100B  3C08               	dw	15368
   164   00100D                     __end_of_S2:
   165                           	callstack 0
   166   00100D  AAAB               	dw	43691
   167   00100F  BE2A               	dw	48682
   168   001011                     __end_of_S1:
   169                           	callstack 0
   170   001011  85A3               	dw	34211
   171   001013  3288               	dw	12936
   172   001015                     __end_of_pio2_1t:
   173                           	callstack 0
   174   001015  0FDA               	dw	4058
   175   001017  3FC9               	dw	16329
   176   001019                     __end_of_pio2_1:
   177                           	callstack 0
   178   001019  F983               	dw	63875
   179   00101B  3F22               	dw	16162
   180   00101D                     __end_of_invpio2:
   181                           	callstack 0
   182   00101D  0000               	dw	0
   183   00101F  3F00               	dw	16128
   184   001021                     __end_of_half:
   185                           	callstack 0
   186   001021  9A17               	dw	39447
   187   001023  37CC               	dw	14284
   188   001025                     __end_of_C3:
   189                           	callstack 0
   190   001025  043F               	dw	1087
   191   001027  BAB6               	dw	47798
   192   001029                     __end_of_C2:
   193                           	callstack 0
   194   001029  AA9F               	dw	43679
   195   00102B  3D2A               	dw	15658
   196   00102D                     __end_of_C1:
   197                           	callstack 0
   198   00102D  0000               	dw	0
   199   00102F  BF00               	dw	48896
   200   001031                     __end_of_C0:
   201                           	callstack 0
   202   001031  0FDB               	dw	4059
   203   001033  40C9               	dw	16585
   204   001035                     __end_of_s4pio2:
   205                           	callstack 0
   206   001035  CBE4               	dw	52196
   207   001037  4096               	dw	16534
   208   001039                     __end_of_s3pio2:
   209                           	callstack 0
   210   001039  0FDB               	dw	4059
   211   00103B  4049               	dw	16457
   212   00103D                     __end_of_s2pio2:
   213                           	callstack 0
   214   00103D  0FDB               	dw	4059
   215   00103F  3FC9               	dw	16329
   216   001041                     __end_of_s1pio2:
   217                           	callstack 0
   218   000000                     _ADRESL	set	4035
   219   000000                     _ADRESH	set	4036
   220   000000                     _LATBbits	set	3978
   221   000000                     _TRISBbits	set	3987
   222   000000                     _SSP2STATbits	set	3949
   223   000000                     _SSP2ADD	set	3950
   224   000000                     _TMR2IF	set	31985
   225   000000                     _TMR1ON	set	32360
   226   000000                     _TMR1IF	set	31984
   227   000000                     _GIE	set	32663
   228   000000                     _TX1IF	set	31988
   229   000000                     _GODONE	set	32273
   230   000000                     _ANSELBbits	set	3897
   231   000000                     _ANSELDbits	set	3899
   232   000000                     _PORTAbits	set	3968
   233   000000                     _PORTCbits	set	3970
   234   000000                     _LATCbits	set	3979
   235   000000                     _LATDbits	set	3980
   236   000000                     _ANSELAbits	set	3896
   237   000000                     _TRISAbits	set	3986
   238   000000                     _TRISCbits	set	3988
   239   000000                     _TRISDbits	set	3989
   240   000000                     _TMR1IE	set	31976
   241   000000                     _SSP1IF	set	31987
   242   000000                     _SSP2IF	set	32039
   243   000000                     _LATAbits	set	3977
   244   000000                     _CCPTMRS0bits	set	3913
   245   000000                     _ANSELEbits	set	3900
   246   000000                     _SSP2CON2bits	set	3947
   247   000000                     _SSP2CON1bits	set	3948
   248   000000                     _SSP2BUF	set	3951
   249   000000                     _RCSTA1bits	set	4011
   250   000000                     _SPBRG1	set	4015
   251   000000                     _ADCON2bits	set	4032
   252   000000                     _SSP1CON1bits	set	4038
   253   000000                     _SSP1BUF	set	4041
   254   000000                     _SSP1STATbits	set	4039
   255   000000                     _ADCON0bits	set	4034
   256   000000                     _PR2	set	4027
   257   000000                     _TMR2ON	set	32210
   258   000000                     _TXREG1	set	4013
   259   000000                     _TXSTA1bits	set	4012
   260   000000                     _T1CONbits	set	4045
   261   000000                     _TMR1	set	4046
   262   000000                     _PEIE	set	32662
   263   000000                     _CCP1CONbits	set	4029
   264   000000                     _CCPR1L	set	4030
   265   001041                     STR_19:
   266   001041  50                 	db	80	;'P'
   267   001042  4F                 	db	79	;'O'
   268   001043  54                 	db	84	;'T'
   269   001044  31                 	db	49	;'1'
   270   001045  3A                 	db	58	;':'
   271   001046  25                 	db	37
   272   001047  2E                 	db	46
   273   001048  31                 	db	49	;'1'
   274   001049  66                 	db	102	;'f'
   275   00104A  50                 	db	80	;'P'
   276   00104B  4F                 	db	79	;'O'
   277   00104C  54                 	db	84	;'T'
   278   00104D  32                 	db	50	;'2'
   279   00104E  3A                 	db	58	;':'
   280   00104F  25                 	db	37
   281   001050  2E                 	db	46
   282   001051  31                 	db	49	;'1'
   283   001052  66                 	db	102	;'f'
   284   001053  00                 	db	0
   285   001054                     STR_2:
   286   001054  20                 	db	32
   287   001055  20                 	db	32
   288   001056  20                 	db	32
   289   001057  20                 	db	32
   290   001058  20                 	db	32
   291   001059  20                 	db	32
   292   00105A  20                 	db	32
   293   00105B  20                 	db	32
   294   00105C  20                 	db	32
   295   00105D  20                 	db	32
   296   00105E  20                 	db	32
   297   00105F  20                 	db	32
   298   001060  20                 	db	32
   299   001061  20                 	db	32
   300   001062  20                 	db	32
   301   001063  20                 	db	32
   302   001064  00                 	db	0
   303   001065                     STR_1:
   304   001065  50                 	db	80	;'P'
   305   001066  6F                 	db	111	;'o'
   306   001067  7A                 	db	122	;'z'
   307   001068  6F                 	db	111	;'o'
   308   001069  72                 	db	114	;'r'
   309   00106A  21                 	db	33
   310   00106B  20                 	db	32
   311   00106C  48                 	db	72	;'H'
   312   00106D  61                 	db	97	;'a'
   313   00106E  64                 	db	100	;'d'
   314   00106F  21                 	db	33
   315   001070  21                 	db	33
   316   001071  21                 	db	33
   317   001072  20                 	db	32
   318   001073  20                 	db	32
   319   001074  20                 	db	32
   320   001075  00                 	db	0
   321   001076                     STR_5:
   322   001076  56                 	db	86	;'V'
   323   001077  6F                 	db	111	;'o'
   324   001078  6C                 	db	108	;'l'
   325   001079  74                 	db	116	;'t'
   326   00107A  79                 	db	121	;'y'
   327   00107B  20                 	db	32
   328   00107C  6E                 	db	110	;'n'
   329   00107D  61                 	db	97	;'a'
   330   00107E  20                 	db	32
   331   00107F  50                 	db	80	;'P'
   332   001080  4F                 	db	79	;'O'
   333   001081  54                 	db	84	;'T'
   334   001082  3A                 	db	58	;':'
   335   001083  20                 	db	32
   336   001084  20                 	db	32
   337   001085  20                 	db	32
   338   001086  00                 	db	0
   339   001087                     STR_3:
   340   001087  5A                 	db	90	;'Z'
   341   001088  6D                 	db	109	;'m'
   342   001089  61                 	db	97	;'a'
   343   00108A  63                 	db	99	;'c'
   344   00108B  6B                 	db	107	;'k'
   345   00108C  6E                 	db	110	;'n'
   346   00108D  65                 	db	101	;'e'
   347   00108E  74                 	db	116	;'t'
   348   00108F  65                 	db	101	;'e'
   349   001090  20                 	db	32
   350   001091  42                 	db	66	;'B'
   351   001092  54                 	db	84	;'T'
   352   001093  4E                 	db	78	;'N'
   353   001094  32                 	db	50	;'2'
   354   001095  20                 	db	32
   355   001096  20                 	db	32
   356   001097  00                 	db	0
   357   001098                     STR_6:
   358   001098  52                 	db	82	;'R'
   359   001099  42                 	db	66	;'B'
   360   00109A  30                 	db	48	;'0'
   361   00109B  2D                 	db	45
   362   00109C  41                 	db	65	;'A'
   363   00109D  32                 	db	50	;'2'
   364   00109E  2C                 	db	44
   365   00109F  20                 	db	32
   366   0010A0  42                 	db	66	;'B'
   367   0010A1  52                 	db	82	;'R'
   368   0010A2  3A                 	db	58	;':'
   369   0010A3  20                 	db	32
   370   0010A4  39                 	db	57	;'9'
   371   0010A5  36                 	db	54	;'6'
   372   0010A6  30                 	db	48	;'0'
   373   0010A7  30                 	db	48	;'0'
   374   0010A8  00                 	db	0
   375   0010A9                     STR_7:
   376   0010A9  31                 	db	49	;'1'
   377   0010AA  3A                 	db	58	;':'
   378   0010AB  74                 	db	116	;'t'
   379   0010AC  72                 	db	114	;'r'
   380   0010AD  2C                 	db	44
   381   0010AE  32                 	db	50	;'2'
   382   0010AF  3A                 	db	58	;':'
   383   0010B0  73                 	db	115	;'s'
   384   0010B1  69                 	db	105	;'i'
   385   0010B2  6E                 	db	110	;'n'
   386   0010B3  2C                 	db	44
   387   0010B4  33                 	db	51	;'3'
   388   0010B5  3A                 	db	58	;':'
   389   0010B6  70                 	db	112	;'p'
   390   0010B7  69                 	db	105	;'i'
   391   0010B8  6C                 	db	108	;'l'
   392   0010B9  00                 	db	0
   393   0010BA                     STR_26:
   394   0010BA  28                 	db	40
   395   0010BB  6E                 	db	110	;'n'
   396   0010BC  75                 	db	117	;'u'
   397   0010BD  6C                 	db	108	;'l'
   398   0010BE  6C                 	db	108	;'l'
   399   0010BF  29                 	db	41
   400   0010C0  00                 	db	0
   401   0010C1                     STR_15:
   402   0010C1  4D                 	db	77	;'M'
   403   0010C2  55                 	db	85	;'U'
   404   0010C3  53                 	db	83	;'S'
   405   0010C4  49                 	db	73	;'I'
   406   0010C5  43                 	db	67	;'C'
   407   0010C6  00                 	db	0
   408   0010C7                     STR_17:
   409   0010C7  3E                 	db	62	;'>'
   410   0010C8  25                 	db	37
   411   0010C9  2D                 	db	45
   412   0010CA  2A                 	db	42
   413   0010CB  73                 	db	115	;'s'
   414   0010CC  00                 	db	0
   415   0010CD                     STR_14:
   416   0010CD  47                 	db	71	;'G'
   417   0010CE  41                 	db	65	;'A'
   418   0010CF  4D                 	db	77	;'M'
   419   0010D0  45                 	db	69	;'E'
   420   0010D1  00                 	db	0
   421   0010D2                     STR_9:
   422   0010D2  47                 	db	71	;'G'
   423   0010D3  50                 	db	80	;'P'
   424   0010D4  49                 	db	73	;'I'
   425   0010D5  4F                 	db	79	;'O'
   426   0010D6  00                 	db	0
   427   0010D7                     STR_10:
   428   0010D7  55                 	db	85	;'U'
   429   0010D8  41                 	db	65	;'A'
   430   0010D9  52                 	db	82	;'R'
   431   0010DA  54                 	db	84	;'T'
   432   0010DB  00                 	db	0
   433   0010DC                     STR_8:
   434   0010DC  25                 	db	37
   435   0010DD  64                 	db	100	;'d'
   436   0010DE  20                 	db	32
   437   0010DF  0D                 	db	13
   438   0010E0  00                 	db	0
   439   0010E1                     STR_20:
   440   0010E1  69                 	db	105	;'i'
   441   0010E2  6E                 	db	110	;'n'
   442   0010E3  66                 	db	102	;'f'
   443   0010E4  00                 	db	0
   444   0010E5                     STR_23:
   445   0010E5  6E                 	db	110	;'n'
   446   0010E6  61                 	db	97	;'a'
   447   0010E7  6E                 	db	110	;'n'
   448   0010E8  00                 	db	0
   449   0010E9                     STR_13:
   450   0010E9  44                 	db	68	;'D'
   451   0010EA  41                 	db	65	;'A'
   452   0010EB  43                 	db	67	;'C'
   453   0010EC  00                 	db	0
   454   0010ED                     STR_12:
   455   0010ED  41                 	db	65	;'A'
   456   0010EE  44                 	db	68	;'D'
   457   0010EF  43                 	db	67	;'C'
   458   0010F0  00                 	db	0
   459   0010F1                     STR_11:
   460   0010F1  50                 	db	80	;'P'
   461   0010F2  57                 	db	87	;'W'
   462   0010F3  4D                 	db	77	;'M'
   463   0010F4  00                 	db	0
   464   0010F5  00                 	db	0	; dummy byte at the end
   465   000000                     
   466                           ; #config settings
   467                           
   468                           	psect	cinit
   469   0052C4                     __pcinit:
   470                           	callstack 0
   471   0052C4                     start_initialization:
   472                           	callstack 0
   473   0052C4                     __initialization:
   474                           	callstack 0
   475                           
   476                           ; Initialize objects allocated to BANK1 (32 bytes)
   477                           ; load TBLPTR registers with __pidataBANK1
   478   0052C4  0EBA               	movlw	low __pidataBANK1
   479   0052C6  6EF6               	movwf	tblptrl,c
   480   0052C8  0E55               	movlw	high __pidataBANK1
   481   0052CA  6EF7               	movwf	tblptrh,c
   482   0052CC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   483   0052CE  6EF8               	movwf	tblptru,c
   484   0052D0  EE01  F09F         	lfsr	0,__pdataBANK1
   485   0052D4  EE10 F020          	lfsr	1,32
   486   0052D8                     copy_data0:
   487   0052D8  0009               	tblrd		*+
   488   0052DA  CFF5 FFEE          	movff	tablat,postinc0
   489   0052DE  50E5               	movf	postdec1,w,c
   490   0052E0  50E1               	movf	fsr1l,w,c
   491   0052E2  E1FA               	bnz	copy_data0
   492                           
   493                           ; Clear objects allocated to BANK1 (114 bytes)
   494   0052E4  EE01  F000         	lfsr	0,__pbssBANK1
   495   0052E8  0E72               	movlw	114
   496   0052EA                     clear_0:
   497   0052EA  6AEE               	clrf	postinc0,c
   498   0052EC  06E8               	decf	wreg,f,c
   499   0052EE  E1FD               	bnz	clear_0
   500                           
   501                           ; Clear objects allocated to BANK0 (4 bytes)
   502   0052F0  0100               	movlb	0
   503   0052F2  6BFF               	clrf	(__pbssBANK0+3)& (0+255),b
   504   0052F4  6BFE               	clrf	(__pbssBANK0+2)& (0+255),b
   505   0052F6  6BFD               	clrf	(__pbssBANK0+1)& (0+255),b
   506   0052F8  6BFC               	clrf	__pbssBANK0& (0+255),b
   507                           
   508                           ; Clear objects allocated to COMRAM (2 bytes)
   509   0052FA  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   510   0052FC  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   511   0052FE                     end_of_initialization:
   512                           	callstack 0
   513   0052FE                     __end_of__initialization:
   514                           	callstack 0
   515   0052FE  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   516   005300  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   517   005302  0E00               	movlw	low (__Lmediumconst shr (0+16))
   518   005304  6EF8               	movwf	tblptru,c
   519   005306  0100               	movlb	0
   520   005308  EFFE  F019         	goto	_main	;jump to C main() function
   521                           
   522                           	psect	bssCOMRAM
   523   00005B                     __pbssCOMRAM:
   524                           	callstack 0
   525   00005B                     _prec:
   526                           	callstack 0
   527   00005B                     	ds	2
   528                           
   529                           	psect	bssBANK0
   530   0000FC                     __pbssBANK0:
   531                           	callstack 0
   532   0000FC                     _width:
   533                           	callstack 0
   534   0000FC                     	ds	2
   535   0000FE                     _flags:
   536                           	callstack 0
   537   0000FE                     	ds	1
   538   0000FF                     _keepStateGPIO:
   539                           	callstack 0
   540   0000FF                     	ds	1
   541                           
   542                           	psect	bssBANK1
   543   000100                     __pbssBANK1:
   544                           	callstack 0
   545   000100                     	ds	17
   546   000111                     fabsf@F465:
   547                           	callstack 0
   548   000111                     	ds	4
   549   000115                     ___rem_pio2f@F526:
   550                           	callstack 0
   551   000115                     	ds	4
   552   000119                     floorf@F521:
   553                           	callstack 0
   554   000119                     	ds	4
   555   00011D                     ___fpclassifyf@F465:
   556                           	callstack 0
   557   00011D                     	ds	4
   558   000121                     _GPIOIE:
   559                           	callstack 0
   560   000121                     	ds	1
   561   000122                     _dbuf:
   562                           	callstack 0
   563   000122                     	ds	80
   564                           
   565                           	psect	dataBANK1
   566   00019F                     __pdataBANK1:
   567                           	callstack 0
   568   00019F                     runGPIO@F6984:
   569                           	callstack 0
   570   00019F                     	ds	12
   571   0001AB                     runGPIO@F6966:
   572                           	callstack 0
   573   0001AB                     	ds	12
   574   0001B7                     moveDisplay@F6954:
   575                           	callstack 0
   576   0001B7                     	ds	8
   577                           
   578                           	psect	cstackBANK1
   579   000172                     __pcstackBANK1:
   580                           	callstack 0
   581   000172                     moveDisplay@menuItem1:
   582                           	callstack 0
   583                           
   584                           ; 17 bytes @ 0x0
   585   000172                     	ds	17
   586   000183                     moveDisplay@menuItem2:
   587                           	callstack 0
   588                           
   589                           ; 17 bytes @ 0x11
   590   000183                     	ds	17
   591   000194                     moveDisplay@menuItems:
   592                           	callstack 0
   593                           
   594                           ; 8 bytes @ 0x22
   595   000194                     	ds	8
   596   00019C                     moveDisplay@menuI:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x2A
   600   00019C                     	ds	1
   601   00019D                     main@setUpAgain:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x2B
   605   00019D                     	ds	1
   606   00019E                     main@menuI:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x2C
   610   00019E                     	ds	1
   611                           
   612                           	psect	cstackBANK0
   613   000060                     __pcstackBANK0:
   614                           	callstack 0
   615   000060                     ___fltol@sign1:
   616                           	callstack 0
   617   000060                     ___cosdf@r:
   618                           	callstack 0
   619   000060                     ___sindf@r:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x0
   623   000060                     	ds	1
   624   000061                     ___fltol@exp1:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x1
   628   000061                     	ds	3
   629   000064                     ___sindf@w:
   630                           	callstack 0
   631   000064                     ___cosdf$3786:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0x4
   635   000064                     	ds	4
   636   000068                     ___cosdf$3787:
   637                           	callstack 0
   638   000068                     ___sindf$3790:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x8
   642   000068                     	ds	4
   643   00006C                     ___cosdf$3788:
   644                           	callstack 0
   645   00006C                     ___sindf$3791:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0xC
   649   00006C                     	ds	4
   650   000070                     ___cosdf@w:
   651                           	callstack 0
   652   000070                     ___sindf$3792:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x10
   656   000070                     	ds	4
   657   000074                     ___cosdf@z:
   658                           	callstack 0
   659   000074                     ___sindf@s:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0x14
   663   000074                     	ds	4
   664   000078                     ?___flneg:
   665                           	callstack 0
   666   000078                     ___flneg@f1:
   667                           	callstack 0
   668   000078                     ___sindf@z:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0x18
   672   000078                     	ds	4
   673   00007C                     ?___rem_pio2f:
   674                           	callstack 0
   675   00007C                     efgtoa@fp:
   676                           	callstack 0
   677   00007C                     ___rem_pio2f@x:
   678                           	callstack 0
   679                           
   680                           ; 4 bytes @ 0x1C
   681   00007C                     	ds	2
   682   00007E                     efgtoa@f:
   683                           	callstack 0
   684                           
   685                           ; 4 bytes @ 0x1E
   686   00007E                     	ds	2
   687   000080                     ___rem_pio2f@y:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x20
   691   000080                     	ds	1
   692   000081                     ??___rem_pio2f:
   693                           
   694                           ; 1 bytes @ 0x21
   695   000081                     	ds	1
   696   000082                     efgtoa@c:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x22
   700   000082                     	ds	1
   701   000083                     ??_efgtoa:
   702   000083                     ___rem_pio2f@ty:
   703                           	callstack 0
   704                           
   705                           ; 4 bytes @ 0x23
   706   000083                     	ds	2
   707   000085                     efgtoa@ne:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x25
   711   000085                     	ds	2
   712   000087                     efgtoa@p:
   713                           	callstack 0
   714   000087                     ___rem_pio2f$3789:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x27
   718   000087                     	ds	2
   719   000089                     efgtoa@t:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x29
   723   000089                     	ds	2
   724   00008B                     ___rem_pio2f@sign:
   725                           	callstack 0
   726   00008B                     _efgtoa$3345:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x2B
   730   00008B                     	ds	1
   731   00008C                     ___rem_pio2f@ux:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0x2C
   735   00008C                     	ds	1
   736   00008D                     efgtoa@pp:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x2D
   740   00008D                     	ds	1
   741   00008E                     efgtoa@mode:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0x2E
   745   00008E                     	ds	1
   746   00008F                     efgtoa@nmode:
   747                           	callstack 0
   748                           
   749                           ; 1 bytes @ 0x2F
   750   00008F                     	ds	1
   751   000090                     efgtoa@d:
   752                           	callstack 0
   753   000090                     ___rem_pio2f@fn:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x30
   757   000090                     	ds	2
   758   000092                     efgtoa@m:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x32
   762   000092                     	ds	2
   763   000094                     efgtoa@e:
   764                           	callstack 0
   765   000094                     ___rem_pio2f@t:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x34
   769   000094                     	ds	2
   770   000096                     efgtoa@w:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x36
   774   000096                     	ds	2
   775   000098                     efgtoa@ou:
   776                           	callstack 0
   777   000098                     ___rem_pio2f@n:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x38
   781   000098                     	ds	4
   782   00009C                     ?_sinf:
   783                           	callstack 0
   784   00009C                     efgtoa@i:
   785                           	callstack 0
   786   00009C                     sinf@x:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x3C
   790   00009C                     	ds	2
   791   00009E                     efgtoa@h:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x3E
   795   00009E                     	ds	2
   796   0000A0                     _sinf$3509:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x40
   800   0000A0                     	ds	2
   801   0000A2                     efgtoa@l:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x42
   805   0000A2                     	ds	2
   806   0000A4                     _sinf$3510:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x44
   810   0000A4                     	ds	2
   811   0000A6                     efgtoa@sign:
   812                           	callstack 0
   813                           
   814                           ; 1 bytes @ 0x46
   815   0000A6                     	ds	1
   816   0000A7                     efgtoa@g:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x47
   820   0000A7                     	ds	1
   821   0000A8                     sinf@n:
   822                           	callstack 0
   823                           
   824                           ; 1 bytes @ 0x48
   825   0000A8                     	ds	1
   826   0000A9                     sinf@sign:
   827                           	callstack 0
   828                           
   829                           ; 1 bytes @ 0x49
   830   0000A9                     	ds	1
   831   0000AA                     _sinf$3785:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x4A
   835   0000AA                     	ds	1
   836   0000AB                     efgtoa@n:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x4B
   840   0000AB                     	ds	2
   841   0000AD                     efgtoa@u:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x4D
   845   0000AD                     	ds	1
   846   0000AE                     sinf@y:
   847                           	callstack 0
   848                           
   849                           ; 4 bytes @ 0x4E
   850   0000AE                     	ds	3
   851   0000B1                     vfpfcnvrt@fp:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x51
   855   0000B1                     	ds	1
   856   0000B2                     sinf@ux:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0x52
   860   0000B2                     	ds	1
   861   0000B3                     vfpfcnvrt@fmt:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x53
   865   0000B3                     	ds	1
   866   0000B4                     vfpfcnvrt@ap:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x54
   870   0000B4                     	ds	1
   871   0000B5                     ??_vfpfcnvrt:
   872                           
   873                           ; 1 bytes @ 0x55
   874   0000B5                     	ds	1
   875   0000B6                     vfpfcnvrt@convarg:
   876                           	callstack 0
   877                           
   878                           ; 4 bytes @ 0x56
   879   0000B6                     	ds	4
   880   0000BA                     vfpfcnvrt@c:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x5A
   884   0000BA                     	ds	1
   885   0000BB                     vfpfcnvrt@done:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0x5B
   889   0000BB                     	ds	1
   890   0000BC                     vfpfcnvrt@cp:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0x5C
   894   0000BC                     	ds	1
   895   0000BD                     ?_vfprintf:
   896                           	callstack 0
   897   0000BD                     vfprintf@fp:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x5D
   901   0000BD                     	ds	2
   902   0000BF                     vfprintf@fmt:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x5F
   906   0000BF                     	ds	1
   907   0000C0                     vfprintf@ap:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0x60
   911   0000C0                     	ds	1
   912   0000C1                     vfprintf@cfmt:
   913                           	callstack 0
   914                           
   915                           ; 1 bytes @ 0x61
   916   0000C1                     	ds	1
   917   0000C2                     ?_printf:
   918                           	callstack 0
   919   0000C2                     ?_sprintf:
   920                           	callstack 0
   921   0000C2                     printf@fmt:
   922                           	callstack 0
   923   0000C2                     sprintf@s:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x62
   927   0000C2                     	ds	2
   928   0000C4                     sprintf@fmt:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x64
   932   0000C4                     	ds	1
   933   0000C5                     printf@ap:
   934                           	callstack 0
   935                           
   936                           ; 1 bytes @ 0x65
   937   0000C5                     	ds	1
   938   0000C6                     ??_runDAC:
   939                           
   940                           ; 1 bytes @ 0x66
   941   0000C6                     	ds	1
   942   0000C7                     _runDAC$3782:
   943                           	callstack 0
   944                           
   945                           ; 4 bytes @ 0x67
   946   0000C7                     	ds	4
   947   0000CB                     _runDAC$3783:
   948                           	callstack 0
   949                           
   950                           ; 4 bytes @ 0x6B
   951   0000CB                     	ds	2
   952   0000CD                     sprintf@ap:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x6D
   956   0000CD                     	ds	1
   957   0000CE                     sprintf@f:
   958                           	callstack 0
   959                           
   960                           ; 12 bytes @ 0x6E
   961   0000CE                     	ds	1
   962   0000CF                     runDAC@keepState:
   963                           	callstack 0
   964                           
   965                           ; 1 bytes @ 0x6F
   966   0000CF                     	ds	1
   967   0000D0                     runDAC@selectModeDAC:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0x70
   971   0000D0                     	ds	1
   972   0000D1                     runDAC@DACindex:
   973                           	callstack 0
   974                           
   975                           ; 1 bytes @ 0x71
   976   0000D1                     	ds	9
   977   0000DA                     ??_runADC:
   978   0000DA                     moveDisplay@where:
   979                           	callstack 0
   980                           
   981                           ; 1 bytes @ 0x7A
   982   0000DA                     	ds	1
   983   0000DB                     ??_moveDisplay:
   984                           
   985                           ; 1 bytes @ 0x7B
   986   0000DB                     	ds	1
   987   0000DC                     runADC@text:
   988                           	callstack 0
   989                           
   990                           ; 17 bytes @ 0x7C
   991   0000DC                     	ds	17
   992   0000ED                     runADC@voltage1:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x8D
   996   0000ED                     	ds	4
   997   0000F1                     runADC@voltage2:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x91
  1001   0000F1                     	ds	4
  1002   0000F5                     runADC@pot1:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x95
  1006   0000F5                     	ds	2
  1007   0000F7                     runADC@pot2:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x97
  1011   0000F7                     	ds	2
  1012   0000F9                     runADC@keepState:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x99
  1016   0000F9                     	ds	1
  1017   0000FA                     ??_main:
  1018                           
  1019                           ; 1 bytes @ 0x9A
  1020   0000FA                     	ds	2
  1021                           
  1022                           	psect	cstackCOMRAM
  1023   000001                     __pcstackCOMRAM:
  1024                           	callstack 0
  1025   000001                     ??_ISR:
  1026                           
  1027                           ; 1 bytes @ 0x0
  1028   000001                     	ds	2
  1029   000003                     ?___fpclassifyf:
  1030                           	callstack 0
  1031   000003                     ?___wmul:
  1032                           	callstack 0
  1033   000003                     ?___awdiv:
  1034                           	callstack 0
  1035   000003                     ?___awmod:
  1036                           	callstack 0
  1037   000003                     ?_labs:
  1038                           	callstack 0
  1039   000003                     ?_fabsf:
  1040                           	callstack 0
  1041   000003                     ?___xxtofl:
  1042                           	callstack 0
  1043   000003                     LCD_Send@data:
  1044                           	callstack 0
  1045   000003                     SPI_write@MSB:
  1046                           	callstack 0
  1047   000003                     putch@data:
  1048                           	callstack 0
  1049   000003                     LED1_Control@state:
  1050                           	callstack 0
  1051   000003                     LED2_Control@state:
  1052                           	callstack 0
  1053   000003                     LED3_Control@state:
  1054                           	callstack 0
  1055   000003                     LED4_Control@state:
  1056                           	callstack 0
  1057   000003                     LED5_Control@state:
  1058                           	callstack 0
  1059   000003                     LED6_Control@state:
  1060                           	callstack 0
  1061   000003                     ___wmul@multiplier:
  1062                           	callstack 0
  1063   000003                     ___awdiv@dividend:
  1064                           	callstack 0
  1065   000003                     ___awmod@dividend:
  1066                           	callstack 0
  1067   000003                     memcpy@d1:
  1068                           	callstack 0
  1069   000003                     strcpy@dest:
  1070                           	callstack 0
  1071   000003                     ___fleq@ff1:
  1072                           	callstack 0
  1073   000003                     ___xxtofl@val:
  1074                           	callstack 0
  1075   000003                     ___fpclassifyf@x:
  1076                           	callstack 0
  1077   000003                     labs@a:
  1078                           	callstack 0
  1079   000003                     fabsf@x:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x2
  1083   000003                     	ds	1
  1084   000004                     ??_LCD_Init:
  1085   000004                     ??_runGPIO:
  1086   000004                     SPI_write@LSB:
  1087                           	callstack 0
  1088   000004                     LCD_ShowString@textData:
  1089                           	callstack 0
  1090   000004                     fputc@c:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x3
  1094   000004                     	ds	1
  1095   000005                     SPI_write@data:
  1096                           	callstack 0
  1097   000005                     strcpy@src:
  1098                           	callstack 0
  1099   000005                     ___wmul@multiplicand:
  1100                           	callstack 0
  1101   000005                     ___awdiv@divisor:
  1102                           	callstack 0
  1103   000005                     ___awmod@divisor:
  1104                           	callstack 0
  1105   000005                     memcpy@s1:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x4
  1109   000005                     	ds	1
  1110   000006                     ??_LCD_ShowString:
  1111   000006                     ??_strcpy:
  1112   000006                     fputc@fp:
  1113                           	callstack 0
  1114   000006                     runGPIO@states:
  1115                           	callstack 0
  1116                           
  1117                           ; 12 bytes @ 0x5
  1118   000006                     	ds	1
  1119   000007                     ??___fpclassifyf:
  1120   000007                     ??_labs:
  1121   000007                     ??___xxtofl:
  1122   000007                     ___awdiv@counter:
  1123                           	callstack 0
  1124   000007                     ___awmod@counter:
  1125                           	callstack 0
  1126   000007                     ___wmul@product:
  1127                           	callstack 0
  1128   000007                     memcpy@n:
  1129                           	callstack 0
  1130   000007                     strcpy@d:
  1131                           	callstack 0
  1132   000007                     ___fleq@ff2:
  1133                           	callstack 0
  1134   000007                     fabsf@u:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0x6
  1138   000007                     	ds	1
  1139   000008                     ??_fputc:
  1140   000008                     LCD_ShowString@lineNum:
  1141                           	callstack 0
  1142   000008                     ___awdiv@sign:
  1143                           	callstack 0
  1144   000008                     ___awmod@sign:
  1145                           	callstack 0
  1146                           
  1147                           ; 1 bytes @ 0x7
  1148   000008                     	ds	1
  1149   000009                     ?_abs:
  1150                           	callstack 0
  1151   000009                     ?_read_prec_or_width:
  1152                           	callstack 0
  1153   000009                     LCD_ShowString@i:
  1154                           	callstack 0
  1155   000009                     read_prec_or_width@fmt:
  1156                           	callstack 0
  1157   000009                     memcpy@tmp:
  1158                           	callstack 0
  1159   000009                     ___awdiv@quotient:
  1160                           	callstack 0
  1161   000009                     abs@a:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x8
  1165   000009                     	ds	1
  1166   00000A                     read_prec_or_width@ap:
  1167                           	callstack 0
  1168   00000A                     memcpy@d:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x9
  1172   00000A                     	ds	1
  1173   00000B                     ??_runPWM:
  1174   00000B                     ??_abs:
  1175   00000B                     ??___fleq:
  1176   00000B                     ___xxtofl@sign:
  1177                           	callstack 0
  1178   00000B                     read_prec_or_width@c:
  1179                           	callstack 0
  1180   00000B                     ___fpclassifyf@e:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0xA
  1184   00000B                     	ds	1
  1185   00000C                     ___xxtofl@exp:
  1186                           	callstack 0
  1187   00000C                     read_prec_or_width@n:
  1188                           	callstack 0
  1189   00000C                     memcpy@s:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0xB
  1193   00000C                     	ds	1
  1194   00000D                     runPWM@keepState:
  1195                           	callstack 0
  1196   00000D                     stoa@fp:
  1197                           	callstack 0
  1198   00000D                     fputs@s:
  1199                           	callstack 0
  1200   00000D                     ___xxtofl@arg:
  1201                           	callstack 0
  1202   00000D                     ___fpclassifyf@u:
  1203                           	callstack 0
  1204                           
  1205                           ; 4 bytes @ 0xC
  1206   00000D                     	ds	1
  1207   00000E                     runPWM@multiplier:
  1208                           	callstack 0
  1209                           
  1210                           ; 1 bytes @ 0xD
  1211   00000E                     	ds	1
  1212   00000F                     stoa@s:
  1213                           	callstack 0
  1214   00000F                     fputs@fp:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0xE
  1218   00000F                     	ds	2
  1219   000011                     ??_stoa:
  1220   000011                     ?___flmul:
  1221                           	callstack 0
  1222   000011                     fputs@c:
  1223                           	callstack 0
  1224   000011                     ___flmul@b:
  1225                           	callstack 0
  1226                           
  1227                           ; 4 bytes @ 0x10
  1228   000011                     	ds	1
  1229   000012                     fputs@i:
  1230                           	callstack 0
  1231   000012                     runGPIO@LEDControl:
  1232                           	callstack 0
  1233                           
  1234                           ; 12 bytes @ 0x11
  1235   000012                     	ds	1
  1236   000013                     stoa@p:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x12
  1240   000013                     	ds	1
  1241   000014                     pad@fp:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x13
  1245   000014                     	ds	1
  1246   000015                     stoa@w:
  1247                           	callstack 0
  1248   000015                     ___flmul@a:
  1249                           	callstack 0
  1250                           
  1251                           ; 4 bytes @ 0x14
  1252   000015                     	ds	1
  1253   000016                     pad@buf:
  1254                           	callstack 0
  1255                           
  1256                           ; 2 bytes @ 0x15
  1257   000016                     	ds	1
  1258   000017                     stoa@cp:
  1259                           	callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x16
  1262   000017                     	ds	1
  1263   000018                     pad@p:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x17
  1267   000018                     	ds	1
  1268   000019                     ??___flmul:
  1269   000019                     stoa@l:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x18
  1273   000019                     	ds	1
  1274   00001A                     ??_pad:
  1275                           
  1276                           ; 1 bytes @ 0x19
  1277   00001A                     	ds	1
  1278   00001B                     pad@i:
  1279                           	callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x1A
  1282   00001B                     	ds	2
  1283   00001D                     ___flmul@sign:
  1284                           	callstack 0
  1285   00001D                     dtoa@fp:
  1286                           	callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x1C
  1289   00001D                     	ds	1
  1290   00001E                     runGPIO@GPIOreverse:
  1291                           	callstack 0
  1292   00001E                     ___flmul@aexp:
  1293                           	callstack 0
  1294                           
  1295                           ; 1 bytes @ 0x1D
  1296   00001E                     	ds	1
  1297   00001F                     runGPIO@numberOfStates:
  1298                           	callstack 0
  1299   00001F                     dtoa@d:
  1300                           	callstack 0
  1301   00001F                     ___flmul@grs:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x1E
  1305   00001F                     	ds	2
  1306   000021                     runGPIO@GPIOi:
  1307                           	callstack 0
  1308   000021                     _dtoa$3314:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x20
  1312   000021                     	ds	1
  1313   000022                     runGPIO@j:
  1314                           	callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x21
  1317   000022                     	ds	1
  1318   000023                     ___flmul@bexp:
  1319                           	callstack 0
  1320   000023                     dtoa@w:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x22
  1324   000023                     	ds	1
  1325   000024                     ___flmul@prod:
  1326                           	callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x23
  1329   000024                     	ds	1
  1330   000025                     dtoa@p:
  1331                           	callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x24
  1334   000025                     	ds	2
  1335   000027                     dtoa@s:
  1336                           	callstack 0
  1337                           
  1338                           ; 1 bytes @ 0x26
  1339   000027                     	ds	1
  1340   000028                     ___flmul@temp:
  1341                           	callstack 0
  1342   000028                     dtoa@i:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x27
  1346   000028                     	ds	2
  1347   00002A                     ?___fldiv:
  1348                           	callstack 0
  1349   00002A                     ___flge@ff1:
  1350                           	callstack 0
  1351   00002A                     ___fldiv@b:
  1352                           	callstack 0
  1353                           
  1354                           ; 4 bytes @ 0x29
  1355   00002A                     	ds	4
  1356   00002E                     ___flge@ff2:
  1357                           	callstack 0
  1358   00002E                     ___fldiv@a:
  1359                           	callstack 0
  1360                           
  1361                           ; 4 bytes @ 0x2D
  1362   00002E                     	ds	4
  1363   000032                     ??___fldiv:
  1364   000032                     ??___flge:
  1365                           
  1366                           ; 1 bytes @ 0x31
  1367   000032                     	ds	4
  1368   000036                     ___fldiv@rem:
  1369                           	callstack 0
  1370                           
  1371                           ; 4 bytes @ 0x35
  1372   000036                     	ds	4
  1373   00003A                     ___fldiv@sign:
  1374                           	callstack 0
  1375                           
  1376                           ; 1 bytes @ 0x39
  1377   00003A                     	ds	1
  1378   00003B                     ___fldiv@new_exp:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x3A
  1382   00003B                     	ds	2
  1383   00003D                     ___fldiv@grs:
  1384                           	callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x3C
  1387   00003D                     	ds	4
  1388   000041                     ___fldiv@bexp:
  1389                           	callstack 0
  1390                           
  1391                           ; 1 bytes @ 0x40
  1392   000041                     	ds	1
  1393   000042                     ___fldiv@aexp:
  1394                           	callstack 0
  1395                           
  1396                           ; 1 bytes @ 0x41
  1397   000042                     	ds	1
  1398   000043                     ?___fladd:
  1399                           	callstack 0
  1400   000043                     ?_floorf:
  1401                           	callstack 0
  1402   000043                     ___fladd@b:
  1403                           	callstack 0
  1404   000043                     floorf@x:
  1405                           	callstack 0
  1406                           
  1407                           ; 4 bytes @ 0x42
  1408   000043                     	ds	4
  1409   000047                     ??_floorf:
  1410   000047                     ___fladd@a:
  1411                           	callstack 0
  1412                           
  1413                           ; 4 bytes @ 0x46
  1414   000047                     	ds	4
  1415   00004B                     ??___fladd:
  1416                           
  1417                           ; 1 bytes @ 0x4A
  1418   00004B                     	ds	2
  1419   00004D                     floorf@m:
  1420                           	callstack 0
  1421                           
  1422                           ; 4 bytes @ 0x4C
  1423   00004D                     	ds	2
  1424   00004F                     ___fladd@signs:
  1425                           	callstack 0
  1426                           
  1427                           ; 1 bytes @ 0x4E
  1428   00004F                     	ds	1
  1429   000050                     ___fladd@aexp:
  1430                           	callstack 0
  1431                           
  1432                           ; 1 bytes @ 0x4F
  1433   000050                     	ds	1
  1434   000051                     ___fladd@bexp:
  1435                           	callstack 0
  1436   000051                     floorf@e:
  1437                           	callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x50
  1440   000051                     	ds	1
  1441   000052                     ___fladd@grs:
  1442                           	callstack 0
  1443                           
  1444                           ; 1 bytes @ 0x51
  1445   000052                     	ds	1
  1446   000053                     ?___flsub:
  1447                           	callstack 0
  1448   000053                     ?___sindf:
  1449                           	callstack 0
  1450   000053                     ?___cosdf:
  1451                           	callstack 0
  1452   000053                     ?___fltol:
  1453                           	callstack 0
  1454   000053                     ___fltol@f1:
  1455                           	callstack 0
  1456   000053                     ___flsub@b:
  1457                           	callstack 0
  1458   000053                     floorf@u:
  1459                           	callstack 0
  1460   000053                     ___cosdf@x:
  1461                           	callstack 0
  1462   000053                     ___sindf@x:
  1463                           	callstack 0
  1464                           
  1465                           ; 4 bytes @ 0x52
  1466   000053                     	ds	4
  1467   000057                     ??___fltol:
  1468   000057                     ___flsub@a:
  1469                           	callstack 0
  1470                           
  1471                           ; 4 bytes @ 0x56
  1472   000057                     	ds	4
  1473   00005B                     
  1474                           ; 1 bytes @ 0x5A
  1475 ;;
  1476 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1477 ;;
  1478 ;; *************** function _main *****************
  1479 ;; Defined at:
  1480 ;;		line 10 in file "main.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  menuI           1   44[BANK1 ] unsigned char 
  1485 ;;  setUpAgain      1   43[BANK1 ] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;Total ram usage:        4 bytes
  1500 ;; Hardware stack levels required when called: 10
  1501 ;; This function calls:
  1502 ;;		_LCD_Init
  1503 ;;		_LCD_ShowString
  1504 ;;		_moveDisplay
  1505 ;;		_runADC
  1506 ;;		_runDAC
  1507 ;;		_runGPIO
  1508 ;;		_runPWM
  1509 ;; This function is called by:
  1510 ;;		Startup code after reset
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text0
  1515   0033FC                     __ptext0:
  1516                           	callstack 0
  1517   0033FC                     _main:
  1518                           	callstack 21
  1519   0033FC                     
  1520                           ;main.c: 12:     TRISCbits.RC0 = 1;
  1521   0033FC  8094               	bsf	148,0,c	;volatile
  1522                           
  1523                           ;main.c: 13:     TRISAbits.RA4 = 1;
  1524   0033FE  8892               	bsf	146,4,c	;volatile
  1525                           
  1526                           ;main.c: 14:     TRISAbits.RA3 = 1;
  1527   003400  8692               	bsf	146,3,c	;volatile
  1528                           
  1529                           ;main.c: 15:     TRISAbits.RA2 = 1;
  1530   003402  8492               	bsf	146,2,c	;volatile
  1531                           
  1532                           ;main.c: 16:     ANSELAbits.ANSA3 = 0;
  1533   003404  010F               	movlb	15	; () banked
  1534   003406  9738               	bcf	56,3,b	;volatile
  1535                           
  1536                           ;main.c: 17:     ANSELAbits.ANSA2 = 0;
  1537   003408  9538               	bcf	56,2,b	;volatile
  1538                           
  1539                           ;main.c: 20:     TRISDbits.RD2 = 0;
  1540   00340A  9495               	bcf	149,2,c	;volatile
  1541                           
  1542                           ;main.c: 21:     TRISDbits.RD3 = 0;
  1543   00340C  9695               	bcf	149,3,c	;volatile
  1544                           
  1545                           ;main.c: 22:     TRISCbits.RC4 = 0;
  1546   00340E  9894               	bcf	148,4,c	;volatile
  1547                           
  1548                           ;main.c: 23:     TRISDbits.RD4 = 0;
  1549   003410  9895               	bcf	149,4,c	;volatile
  1550                           
  1551                           ;main.c: 24:     TRISDbits.RD5 = 0;
  1552   003412  9A95               	bcf	149,5,c	;volatile
  1553                           
  1554                           ;main.c: 25:     TRISDbits.RD6 = 0;
  1555   003414  9C95               	bcf	149,6,c	;volatile
  1556                           
  1557                           ;main.c: 26:     LATDbits.LD2 = 1;
  1558   003416  848C               	bsf	140,2,c	;volatile
  1559                           
  1560                           ;main.c: 27:     LATDbits.LD3 = 1;
  1561   003418  868C               	bsf	140,3,c	;volatile
  1562                           
  1563                           ;main.c: 28:     LATCbits.LC4 = 1;
  1564   00341A  888B               	bsf	139,4,c	;volatile
  1565                           
  1566                           ;main.c: 29:     LATDbits.LD4 = 1;
  1567   00341C  888C               	bsf	140,4,c	;volatile
  1568                           
  1569                           ;main.c: 30:     LATDbits.LD5 = 1;
  1570   00341E  8A8C               	bsf	140,5,c	;volatile
  1571                           
  1572                           ;main.c: 31:     LATDbits.LD6 = 1;
  1573   003420  8C8C               	bsf	140,6,c	;volatile
  1574   003422                     
  1575                           ; BSR set to: 15
  1576                           ;main.c: 34:     LCD_Init();
  1577   003422  EC31  F026         	call	_LCD_Init	;wreg free
  1578   003426                     
  1579                           ;main.c: 35:     uint8_t menuI = 0;
  1580   003426  0E00               	movlw	0
  1581   003428  0101               	movlb	1	; () banked
  1582   00342A  6F9E               	movwf	main@menuI& (0+255),b
  1583   00342C                     
  1584                           ; BSR set to: 1
  1585                           ;main.c: 36:     uint8_t setUpAgain = 0;
  1586   00342C  0E00               	movlw	0
  1587   00342E  6F9D               	movwf	main@setUpAgain& (0+255),b
  1588   003430                     
  1589                           ; BSR set to: 1
  1590                           ;main.c: 43:     menuI = moveDisplay(menuI,0);
  1591   003430  0E00               	movlw	0
  1592   003432  0100               	movlb	0	; () banked
  1593   003434  6FDA               	movwf	moveDisplay@where& (0+255),b
  1594   003436  0101               	movlb	1	; () banked
  1595   003438  519E               	movf	main@menuI& (0+255),w,b
  1596   00343A  EC23  F024         	call	_moveDisplay
  1597   00343E  0101               	movlb	1	; () banked
  1598   003440  6F9E               	movwf	main@menuI& (0+255),b
  1599   003442                     l6842:
  1600                           
  1601                           ; BSR set to: 1
  1602                           ;main.c: 46:         if(PORTCbits.RC0){
  1603   003442  A082               	btfss	130,0,c	;volatile
  1604   003444  EF26  F01A         	goto	u9091
  1605   003448  EF28  F01A         	goto	u9090
  1606   00344C                     u9091:
  1607   00344C  EF4B  F01A         	goto	l6852
  1608   003450                     u9090:
  1609   003450                     
  1610                           ; BSR set to: 1
  1611                           ;main.c: 47:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1612   003450  0E03               	movlw	3
  1613   003452  0100               	movlb	0	; () banked
  1614   003454  6FFB               	movwf	(??_main+1)& (0+255),b
  1615   003456  0E08               	movlw	8
  1616   003458  6FFA               	movwf	??_main& (0+255),b
  1617   00345A  0E77               	movlw	119
  1618   00345C                     u9197:
  1619   00345C  2EE8               	decfsz	wreg,f,c
  1620   00345E  D7FE               	bra	u9197
  1621   003460  2FFA               	decfsz	??_main& (0+255),f,b
  1622   003462  D7FC               	bra	u9197
  1623   003464  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1624   003466  D7FA               	bra	u9197
  1625   003468                     
  1626                           ;main.c: 48:             if(PORTCbits.RC0){
  1627   003468  A082               	btfss	130,0,c	;volatile
  1628   00346A  EF39  F01A         	goto	u9101
  1629   00346E  EF3B  F01A         	goto	u9100
  1630   003472                     u9101:
  1631   003472  EF4B  F01A         	goto	l6852
  1632   003476                     u9100:
  1633   003476                     l44:
  1634   003476  B082               	btfsc	130,0,c	;volatile
  1635   003478  EF40  F01A         	goto	u9111
  1636   00347C  EF42  F01A         	goto	u9110
  1637   003480                     u9111:
  1638   003480  EF3B  F01A         	goto	l44
  1639   003484                     u9110:
  1640   003484                     
  1641                           ;main.c: 50:                 menuI = moveDisplay(menuI,2);
  1642   003484  0E02               	movlw	2
  1643   003486  0100               	movlb	0	; () banked
  1644   003488  6FDA               	movwf	moveDisplay@where& (0+255),b
  1645   00348A  0101               	movlb	1	; () banked
  1646   00348C  519E               	movf	main@menuI& (0+255),w,b
  1647   00348E  EC23  F024         	call	_moveDisplay
  1648   003492  0101               	movlb	1	; () banked
  1649   003494  6F9E               	movwf	main@menuI& (0+255),b
  1650   003496                     l6852:
  1651                           
  1652                           ;main.c: 53:         if(PORTAbits.RA4){
  1653   003496  A880               	btfss	128,4,c	;volatile
  1654   003498  EF50  F01A         	goto	u9121
  1655   00349C  EF52  F01A         	goto	u9120
  1656   0034A0                     u9121:
  1657   0034A0  EF75  F01A         	goto	l6862
  1658   0034A4                     u9120:
  1659   0034A4                     
  1660                           ;main.c: 54:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1661   0034A4  0E03               	movlw	3
  1662   0034A6  0100               	movlb	0	; () banked
  1663   0034A8  6FFB               	movwf	(??_main+1)& (0+255),b
  1664   0034AA  0E08               	movlw	8
  1665   0034AC  6FFA               	movwf	??_main& (0+255),b
  1666   0034AE  0E77               	movlw	119
  1667   0034B0                     u9207:
  1668   0034B0  2EE8               	decfsz	wreg,f,c
  1669   0034B2  D7FE               	bra	u9207
  1670   0034B4  2FFA               	decfsz	??_main& (0+255),f,b
  1671   0034B6  D7FC               	bra	u9207
  1672   0034B8  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1673   0034BA  D7FA               	bra	u9207
  1674   0034BC                     
  1675                           ;main.c: 55:             if(PORTAbits.RA4){
  1676   0034BC  A880               	btfss	128,4,c	;volatile
  1677   0034BE  EF63  F01A         	goto	u9131
  1678   0034C2  EF65  F01A         	goto	u9130
  1679   0034C6                     u9131:
  1680   0034C6  EF75  F01A         	goto	l6862
  1681   0034CA                     u9130:
  1682   0034CA                     l49:
  1683   0034CA  B880               	btfsc	128,4,c	;volatile
  1684   0034CC  EF6A  F01A         	goto	u9141
  1685   0034D0  EF6C  F01A         	goto	u9140
  1686   0034D4                     u9141:
  1687   0034D4  EF65  F01A         	goto	l49
  1688   0034D8                     u9140:
  1689   0034D8                     
  1690                           ;main.c: 57:                 menuI = moveDisplay(menuI,1);
  1691   0034D8  0E01               	movlw	1
  1692   0034DA  0100               	movlb	0	; () banked
  1693   0034DC  6FDA               	movwf	moveDisplay@where& (0+255),b
  1694   0034DE  0101               	movlb	1	; () banked
  1695   0034E0  519E               	movf	main@menuI& (0+255),w,b
  1696   0034E2  EC23  F024         	call	_moveDisplay
  1697   0034E6  0101               	movlb	1	; () banked
  1698   0034E8  6F9E               	movwf	main@menuI& (0+255),b
  1699   0034EA                     l6862:
  1700                           
  1701                           ;main.c: 60:         if(PORTAbits.RA3){
  1702   0034EA  A680               	btfss	128,3,c	;volatile
  1703   0034EC  EF7A  F01A         	goto	u9151
  1704   0034F0  EF7C  F01A         	goto	u9150
  1705   0034F4                     u9151:
  1706   0034F4  EF0A  F01B         	goto	l52
  1707   0034F8                     u9150:
  1708   0034F8                     
  1709                           ;main.c: 61:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1710   0034F8  0E03               	movlw	3
  1711   0034FA  0100               	movlb	0	; () banked
  1712   0034FC  6FFB               	movwf	(??_main+1)& (0+255),b
  1713   0034FE  0E08               	movlw	8
  1714   003500  6FFA               	movwf	??_main& (0+255),b
  1715   003502  0E77               	movlw	119
  1716   003504                     u9217:
  1717   003504  2EE8               	decfsz	wreg,f,c
  1718   003506  D7FE               	bra	u9217
  1719   003508  2FFA               	decfsz	??_main& (0+255),f,b
  1720   00350A  D7FC               	bra	u9217
  1721   00350C  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1722   00350E  D7FA               	bra	u9217
  1723   003510                     
  1724                           ;main.c: 62:             if(PORTAbits.RA3){
  1725   003510  A680               	btfss	128,3,c	;volatile
  1726   003512  EF8D  F01A         	goto	u9161
  1727   003516  EF8F  F01A         	goto	u9160
  1728   00351A                     u9161:
  1729   00351A  EF0A  F01B         	goto	l52
  1730   00351E                     u9160:
  1731   00351E                     l54:
  1732   00351E  B680               	btfsc	128,3,c	;volatile
  1733   003520  EF94  F01A         	goto	u9171
  1734   003524  EF96  F01A         	goto	u9170
  1735   003528                     u9171:
  1736   003528  EF8F  F01A         	goto	l54
  1737   00352C                     u9170:
  1738   00352C  EFEA  F01A         	goto	l6896
  1739   003530                     l6870:
  1740                           
  1741                           ; BSR set to: 1
  1742                           ;main.c: 66:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  1743   003530  0E65               	movlw	low STR_1
  1744   003532  6E04               	movwf	LCD_ShowString@textData^0,c
  1745   003534  5004               	movf	LCD_ShowString@textData^0,w,c
  1746   003536  A4D8               	btfss	status,2,c
  1747   003538  0E10               	movlw	high __smallconst
  1748   00353A  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1749   00353C  0E01               	movlw	1
  1750   00353E  EC65  F027         	call	_LCD_ShowString
  1751                           
  1752                           ;main.c: 67:                         LCD_ShowString((char)2, "                ");
  1753   003542  0E54               	movlw	low STR_2
  1754   003544  6E04               	movwf	LCD_ShowString@textData^0,c
  1755   003546  5004               	movf	LCD_ShowString@textData^0,w,c
  1756   003548  A4D8               	btfss	status,2,c
  1757   00354A  0E10               	movlw	high __smallconst
  1758   00354C  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1759   00354E  0E02               	movlw	2
  1760   003550  EC65  F027         	call	_LCD_ShowString
  1761   003554                     
  1762                           ;main.c: 68:                         runGPIO();
  1763   003554  ECD2  F022         	call	_runGPIO	;wreg free
  1764   003558                     l6874:
  1765                           
  1766                           ;main.c: 69:                         setUpAgain = 1;
  1767   003558  0E01               	movlw	1
  1768   00355A  0101               	movlb	1	; () banked
  1769   00355C  6F9D               	movwf	main@setUpAgain& (0+255),b
  1770                           
  1771                           ;main.c: 70:                         break;
  1772   00355E  EF0A  F01B         	goto	l52
  1773   003562                     l6876:
  1774                           
  1775                           ; BSR set to: 1
  1776                           ;main.c: 74:                         LCD_ShowString((char)1, "Zmacknete BTN2  ");
  1777   003562  0E87               	movlw	low STR_3
  1778   003564  6E04               	movwf	LCD_ShowString@textData^0,c
  1779   003566  5004               	movf	LCD_ShowString@textData^0,w,c
  1780   003568  A4D8               	btfss	status,2,c
  1781   00356A  0E10               	movlw	high __smallconst
  1782   00356C  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1783   00356E  0E01               	movlw	1
  1784   003570  EC65  F027         	call	_LCD_ShowString
  1785                           
  1786                           ;main.c: 75:                         LCD_ShowString((char)2, "                ");
  1787   003574  0E54               	movlw	low STR_2
  1788   003576  6E04               	movwf	LCD_ShowString@textData^0,c
  1789   003578  5004               	movf	LCD_ShowString@textData^0,w,c
  1790   00357A  A4D8               	btfss	status,2,c
  1791   00357C  0E10               	movlw	high __smallconst
  1792   00357E  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1793   003580  0E02               	movlw	2
  1794   003582  EC65  F027         	call	_LCD_ShowString
  1795   003586                     
  1796                           ;main.c: 76:                         runPWM();
  1797   003586  EC84  F023         	call	_runPWM	;wreg free
  1798   00358A  EFAC  F01A         	goto	l6874
  1799   00358E                     l6882:
  1800                           
  1801                           ; BSR set to: 1
  1802                           ;main.c: 80:                         LCD_ShowString((char)1, "Volty na POT:   ");
  1803   00358E  0E76               	movlw	low STR_5
  1804   003590  6E04               	movwf	LCD_ShowString@textData^0,c
  1805   003592  5004               	movf	LCD_ShowString@textData^0,w,c
  1806   003594  A4D8               	btfss	status,2,c
  1807   003596  0E10               	movlw	high __smallconst
  1808   003598  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1809   00359A  0E01               	movlw	1
  1810   00359C  EC65  F027         	call	_LCD_ShowString
  1811   0035A0                     
  1812                           ;main.c: 81:                         runADC();
  1813   0035A0  EC69  F01F         	call	_runADC	;wreg free
  1814   0035A4  EFAC  F01A         	goto	l6874
  1815   0035A8                     l6888:
  1816                           
  1817                           ; BSR set to: 1
  1818                           ;main.c: 85:                         LCD_ShowString((char)1, "RB0-A2, BR: 9600");
  1819   0035A8  0E98               	movlw	low STR_6
  1820   0035AA  6E04               	movwf	LCD_ShowString@textData^0,c
  1821   0035AC  5004               	movf	LCD_ShowString@textData^0,w,c
  1822   0035AE  A4D8               	btfss	status,2,c
  1823   0035B0  0E10               	movlw	high __smallconst
  1824   0035B2  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1825   0035B4  0E01               	movlw	1
  1826   0035B6  EC65  F027         	call	_LCD_ShowString
  1827                           
  1828                           ;main.c: 86:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  1829   0035BA  0EA9               	movlw	low STR_7
  1830   0035BC  6E04               	movwf	LCD_ShowString@textData^0,c
  1831   0035BE  5004               	movf	LCD_ShowString@textData^0,w,c
  1832   0035C0  A4D8               	btfss	status,2,c
  1833   0035C2  0E10               	movlw	high __smallconst
  1834   0035C4  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  1835   0035C6  0E02               	movlw	2
  1836   0035C8  EC65  F027         	call	_LCD_ShowString
  1837   0035CC                     
  1838                           ;main.c: 87:                         runDAC();
  1839   0035CC  EC23  F01B         	call	_runDAC	;wreg free
  1840   0035D0  EFAC  F01A         	goto	l6874
  1841   0035D4                     l6896:
  1842   0035D4  0101               	movlb	1	; () banked
  1843   0035D6  519E               	movf	main@menuI& (0+255),w,b
  1844                           
  1845                           ; Switch size 1, requested type "simple"
  1846                           ; Number of cases is 7, Range of values is 0 to 6
  1847                           ; switch strategies available:
  1848                           ; Name         Instructions Cycles
  1849                           ; simple_byte           22    12 (average)
  1850                           ;	Chosen strategy is simple_byte
  1851   0035D8  0A00               	xorlw	0	; case 0
  1852   0035DA  B4D8               	btfsc	status,2,c
  1853   0035DC  EF98  F01A         	goto	l6870
  1854   0035E0  0A01               	xorlw	1	; case 1
  1855   0035E2  B4D8               	btfsc	status,2,c
  1856   0035E4  EF0A  F01B         	goto	l52
  1857   0035E8  0A03               	xorlw	3	; case 2
  1858   0035EA  B4D8               	btfsc	status,2,c
  1859   0035EC  EFB1  F01A         	goto	l6876
  1860   0035F0  0A01               	xorlw	1	; case 3
  1861   0035F2  B4D8               	btfsc	status,2,c
  1862   0035F4  EFC7  F01A         	goto	l6882
  1863   0035F8  0A07               	xorlw	7	; case 4
  1864   0035FA  B4D8               	btfsc	status,2,c
  1865   0035FC  EFD4  F01A         	goto	l6888
  1866   003600  0A01               	xorlw	1	; case 5
  1867   003602  B4D8               	btfsc	status,2,c
  1868   003604  EF0A  F01B         	goto	l52
  1869   003608  0A03               	xorlw	3	; case 6
  1870   00360A  B4D8               	btfsc	status,2,c
  1871   00360C  EF0A  F01B         	goto	l52
  1872   003610  EF0A  F01B         	goto	l52
  1873   003614                     l52:
  1874                           
  1875                           ;main.c: 98:         if(PORTAbits.RA2){
  1876   003614  5080               	movf	128,w,c	;volatile
  1877   003616                     
  1878                           ;main.c: 102:         if(setUpAgain){
  1879   003616  0101               	movlb	1	; () banked
  1880   003618  519D               	movf	main@setUpAgain& (0+255),w,b
  1881   00361A  B4D8               	btfsc	status,2,c
  1882   00361C  EF12  F01B         	goto	u9181
  1883   003620  EF14  F01B         	goto	u9180
  1884   003624                     u9181:
  1885   003624  EF21  F01A         	goto	l6842
  1886   003628                     u9180:
  1887   003628                     
  1888                           ; BSR set to: 1
  1889                           ;main.c: 103:         menuI = moveDisplay(menuI,0);
  1890   003628  0E00               	movlw	0
  1891   00362A  0100               	movlb	0	; () banked
  1892   00362C  6FDA               	movwf	moveDisplay@where& (0+255),b
  1893   00362E  0101               	movlb	1	; () banked
  1894   003630  519E               	movf	main@menuI& (0+255),w,b
  1895   003632  EC23  F024         	call	_moveDisplay
  1896   003636  0101               	movlb	1	; () banked
  1897   003638  6F9E               	movwf	main@menuI& (0+255),b
  1898   00363A                     
  1899                           ; BSR set to: 1
  1900                           ;main.c: 104:         setUpAgain = 0;
  1901   00363A  0E00               	movlw	0
  1902   00363C  6F9D               	movwf	main@setUpAgain& (0+255),b
  1903   00363E  EF21  F01A         	goto	l6842
  1904   003642  EF47  F000         	goto	start
  1905   003646                     __end_of_main:
  1906                           	callstack 0
  1907                           
  1908 ;; *************** function _runPWM *****************
  1909 ;; Defined at:
  1910 ;;		line 11 in file "PWM.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  multiplier      1   13[COMRAM] unsigned char 
  1915 ;;  keepState       1   12[COMRAM] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;Total ram usage:        4 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 2
  1932 ;; This function calls:
  1933 ;;		___awdiv
  1934 ;; This function is called by:
  1935 ;;		_main
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text1
  1940   004708                     __ptext1:
  1941                           	callstack 0
  1942   004708                     _runPWM:
  1943                           	callstack 28
  1944   004708                     
  1945                           ;PWM.c: 13:     TRISCbits.RC2 = 1;
  1946   004708  8494               	bsf	148,2,c	;volatile
  1947   00470A                     
  1948                           ;PWM.c: 14:     CCPTMRS0bits.C1TSEL = 0b00;
  1949   00470A  0EFC               	movlw	-4
  1950   00470C  010F               	movlb	15	; () banked
  1951   00470E  1749               	andwf	73,f,b	;volatile
  1952                           
  1953                           ;PWM.c: 15:     PR2 = 199;
  1954   004710  0EC7               	movlw	199
  1955   004712  6EBB               	movwf	187,c	;volatile
  1956                           
  1957                           ;PWM.c: 16:     CCP1CONbits.CCP1M |= 0b1100;
  1958   004714  0E0C               	movlw	12
  1959   004716  12BD               	iorwf	189,f,c	;volatile
  1960                           
  1961                           ;PWM.c: 17:     CCP1CONbits.P1M = 0b10;
  1962   004718  50BD               	movf	189,w,c	;volatile
  1963   00471A  0B3F               	andlw	-193
  1964   00471C  0980               	iorlw	128
  1965   00471E  6EBD               	movwf	189,c	;volatile
  1966                           
  1967                           ;PWM.c: 18:     CCPR1L = 0;
  1968   004720  0E00               	movlw	0
  1969   004722  6EBE               	movwf	190,c	;volatile
  1970   004724                     
  1971                           ; BSR set to: 15
  1972                           ;PWM.c: 19:     TMR2IF = 0;
  1973   004724  929E               	bcf	3998,1,c	;volatile
  1974   004726                     
  1975                           ; BSR set to: 15
  1976                           ;PWM.c: 20:     TMR2ON = 1;
  1977   004726  84BA               	bsf	4026,2,c	;volatile
  1978   004728                     l423:
  1979   004728  A29E               	btfss	3998,1,c	;volatile
  1980   00472A  EF99  F023         	goto	u8841
  1981   00472E  EF9B  F023         	goto	u8840
  1982   004732                     u8841:
  1983   004732  EF94  F023         	goto	l423
  1984   004736                     u8840:
  1985   004736                     
  1986                           ;PWM.c: 22:     TRISCbits.RC2 = 1;
  1987   004736  8494               	bsf	148,2,c	;volatile
  1988                           
  1989                           ;PWM.c: 25:     TRISAbits.RA4 = 1;
  1990   004738  8892               	bsf	146,4,c	;volatile
  1991                           
  1992                           ;PWM.c: 26:     TRISAbits.RA2 = 1;
  1993   00473A  8492               	bsf	146,2,c	;volatile
  1994                           
  1995                           ;PWM.c: 28:     TRISDbits.RD2 = 0;
  1996   00473C  9495               	bcf	149,2,c	;volatile
  1997                           
  1998                           ;PWM.c: 29:     TRISDbits.RD3 = 0;
  1999   00473E  9695               	bcf	149,3,c	;volatile
  2000                           
  2001                           ;PWM.c: 30:     TRISCbits.RC4 = 0;
  2002   004740  9894               	bcf	148,4,c	;volatile
  2003                           
  2004                           ;PWM.c: 31:     TRISDbits.RD4 = 0;
  2005   004742  9895               	bcf	149,4,c	;volatile
  2006                           
  2007                           ;PWM.c: 32:     TRISDbits.RD5 = 0;
  2008   004744  9A95               	bcf	149,5,c	;volatile
  2009                           
  2010                           ;PWM.c: 33:     TRISDbits.RD6 = 0;
  2011   004746  9C95               	bcf	149,6,c	;volatile
  2012                           
  2013                           ;PWM.c: 34:     LATDbits.LD2 = 1;
  2014   004748  848C               	bsf	140,2,c	;volatile
  2015                           
  2016                           ;PWM.c: 35:     LATDbits.LD3 = 1;
  2017   00474A  868C               	bsf	140,3,c	;volatile
  2018                           
  2019                           ;PWM.c: 36:     LATCbits.LC4 = 1;
  2020   00474C  888B               	bsf	139,4,c	;volatile
  2021                           
  2022                           ;PWM.c: 37:     LATDbits.LD4 = 1;
  2023   00474E  888C               	bsf	140,4,c	;volatile
  2024                           
  2025                           ;PWM.c: 38:     LATDbits.LD5 = 1;
  2026   004750  8A8C               	bsf	140,5,c	;volatile
  2027                           
  2028                           ;PWM.c: 39:     LATDbits.LD6 = 1;
  2029   004752  8C8C               	bsf	140,6,c	;volatile
  2030   004754                     
  2031                           ;PWM.c: 41:     uint8_t keepState;;PWM.c: 42:     keepState = 1;
  2032   004754  0E01               	movlw	1
  2033   004756  6E0D               	movwf	runPWM@keepState^0,c
  2034                           
  2035                           ;PWM.c: 44:     uint8_t multiplier;;PWM.c: 45:     multiplier = 0;
  2036   004758  0E00               	movlw	0
  2037   00475A  6E0E               	movwf	runPWM@multiplier^0,c
  2038                           
  2039                           ;PWM.c: 47:     while(keepState){
  2040   00475C  EF1A  F024         	goto	l426
  2041   004760                     l6694:
  2042                           
  2043                           ;PWM.c: 49:         CCPR1L = multiplier*199/5;
  2044   004760  500E               	movf	runPWM@multiplier^0,w,c
  2045   004762  0DC7               	mullw	199
  2046   004764  CFF3 F003          	movff	prodl,___awdiv@dividend
  2047   004768  CFF4 F004          	movff	prodh,___awdiv@dividend+1
  2048   00476C  0E00               	movlw	0
  2049   00476E  6E06               	movwf	(___awdiv@divisor+1)^0,c
  2050   004770  0E05               	movlw	5
  2051   004772  6E05               	movwf	___awdiv@divisor^0,c
  2052   004774  EC03  F027         	call	___awdiv	;wreg free
  2053   004778  5003               	movf	?___awdiv^0,w,c
  2054   00477A  6EBE               	movwf	190,c	;volatile
  2055   00477C                     
  2056                           ;PWM.c: 51:         if(PORTAbits.RA4){
  2057   00477C  A880               	btfss	128,4,c	;volatile
  2058   00477E  EFC3  F023         	goto	u8851
  2059   004782  EFC5  F023         	goto	u8850
  2060   004786                     u8851:
  2061   004786  EFF7  F023         	goto	l6712
  2062   00478A                     u8850:
  2063   00478A                     
  2064                           ;PWM.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2065   00478A  0E03               	movlw	3
  2066   00478C  6E0C               	movwf	(??_runPWM+1)^0,c
  2067   00478E  0E08               	movlw	8
  2068   004790  6E0B               	movwf	??_runPWM^0,c
  2069   004792  0E77               	movlw	119
  2070   004794                     u9227:
  2071   004794  2EE8               	decfsz	wreg,f,c
  2072   004796  D7FE               	bra	u9227
  2073   004798  2E0B               	decfsz	??_runPWM^0,f,c
  2074   00479A  D7FC               	bra	u9227
  2075   00479C  2E0C               	decfsz	(??_runPWM+1)^0,f,c
  2076   00479E  D7FA               	bra	u9227
  2077   0047A0  0000               	nop	
  2078   0047A2                     
  2079                           ;PWM.c: 53:             if(PORTAbits.RA4){
  2080   0047A2  A880               	btfss	128,4,c	;volatile
  2081   0047A4  EFD6  F023         	goto	u8861
  2082   0047A8  EFD8  F023         	goto	u8860
  2083   0047AC                     u8861:
  2084   0047AC  EFF7  F023         	goto	l6712
  2085   0047B0                     u8860:
  2086   0047B0                     l430:
  2087   0047B0  B880               	btfsc	128,4,c	;volatile
  2088   0047B2  EFDD  F023         	goto	u8871
  2089   0047B6  EFDF  F023         	goto	u8870
  2090   0047BA                     u8871:
  2091   0047BA  EFD8  F023         	goto	l430
  2092   0047BE                     u8870:
  2093   0047BE                     
  2094                           ;PWM.c: 55:                 if(multiplier == 5 ){
  2095   0047BE  0E05               	movlw	5
  2096   0047C0  180E               	xorwf	runPWM@multiplier^0,w,c
  2097   0047C2  A4D8               	btfss	status,2,c
  2098   0047C4  EFE6  F023         	goto	u8881
  2099   0047C8  EFE8  F023         	goto	u8880
  2100   0047CC                     u8881:
  2101   0047CC  EFEC  F023         	goto	l6708
  2102   0047D0                     u8880:
  2103   0047D0                     
  2104                           ;PWM.c: 56:                     multiplier = 0;
  2105   0047D0  0E00               	movlw	0
  2106   0047D2  6E0E               	movwf	runPWM@multiplier^0,c
  2107                           
  2108                           ;PWM.c: 57:                 } else if(multiplier <5){
  2109   0047D4  EFF7  F023         	goto	l6712
  2110   0047D8                     l6708:
  2111   0047D8  0E05               	movlw	5
  2112   0047DA  600E               	cpfslt	runPWM@multiplier^0,c
  2113   0047DC  EFF2  F023         	goto	u8891
  2114   0047E0  EFF4  F023         	goto	u8890
  2115   0047E4                     u8891:
  2116   0047E4  EFF7  F023         	goto	l429
  2117   0047E8                     u8890:
  2118   0047E8                     
  2119                           ;PWM.c: 58:                     multiplier++;
  2120   0047E8  2A0E               	incf	runPWM@multiplier^0,f,c
  2121   0047EA  EFF7  F023         	goto	l6712
  2122   0047EE                     l429:
  2123   0047EE                     l6712:
  2124                           
  2125                           ;PWM.c: 63:         if(PORTAbits.RA2){
  2126   0047EE  A480               	btfss	128,2,c	;volatile
  2127   0047F0  EFFC  F023         	goto	u8901
  2128   0047F4  EFFE  F023         	goto	u8900
  2129   0047F8                     u8901:
  2130   0047F8  EF1A  F024         	goto	l426
  2131   0047FC                     u8900:
  2132   0047FC                     
  2133                           ;PWM.c: 64:         _delay((unsigned long)((50)*(32E6/4000.0)));
  2134   0047FC  0E03               	movlw	3
  2135   0047FE  6E0C               	movwf	(??_runPWM+1)^0,c
  2136   004800  0E08               	movlw	8
  2137   004802  6E0B               	movwf	??_runPWM^0,c
  2138   004804  0E77               	movlw	119
  2139   004806                     u9237:
  2140   004806  2EE8               	decfsz	wreg,f,c
  2141   004808  D7FE               	bra	u9237
  2142   00480A  2E0B               	decfsz	??_runPWM^0,f,c
  2143   00480C  D7FC               	bra	u9237
  2144   00480E  2E0C               	decfsz	(??_runPWM+1)^0,f,c
  2145   004810  D7FA               	bra	u9237
  2146   004812  0000               	nop	
  2147   004814                     
  2148                           ;PWM.c: 65:         if(PORTAbits.RA2){
  2149   004814  A480               	btfss	128,2,c	;volatile
  2150   004816  EF0F  F024         	goto	u8911
  2151   00481A  EF11  F024         	goto	u8910
  2152   00481E                     u8911:
  2153   00481E  EF1A  F024         	goto	l426
  2154   004822                     u8910:
  2155   004822                     l438:
  2156   004822  B480               	btfsc	128,2,c	;volatile
  2157   004824  EF16  F024         	goto	u8921
  2158   004828  EF18  F024         	goto	u8920
  2159   00482C                     u8921:
  2160   00482C  EF11  F024         	goto	l438
  2161   004830                     u8920:
  2162   004830                     
  2163                           ;PWM.c: 67:             keepState = 0;
  2164   004830  0E00               	movlw	0
  2165   004832  6E0D               	movwf	runPWM@keepState^0,c
  2166   004834                     l426:
  2167                           
  2168                           ;PWM.c: 47:     while(keepState){
  2169   004834  500D               	movf	runPWM@keepState^0,w,c
  2170   004836  A4D8               	btfss	status,2,c
  2171   004838  EF20  F024         	goto	u8931
  2172   00483C  EF22  F024         	goto	u8930
  2173   004840                     u8931:
  2174   004840  EFB0  F023         	goto	l6694
  2175   004844                     u8930:
  2176   004844  0012               	return		;funcret
  2177   004846                     __end_of_runPWM:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _runGPIO *****************
  2181 ;; Defined at:
  2182 ;;		line 19 in file "GPIO.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  j               2   33[COMRAM] int 
  2187 ;;  states         12    5[COMRAM] unsigned char [12]
  2188 ;;  LEDControl     12   17[COMRAM] PTR FTN(unsigned char ,)
  2189 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  2190 ;;		 -> LED2_Control(1), LED1_Control(1), 
  2191 ;;  numberOfStat    2   30[COMRAM] int 
  2192 ;;  GPIOi           1   32[COMRAM] unsigned char 
  2193 ;;  GPIOreverse     1   29[COMRAM] unsigned char 
  2194 ;;  GPIOindex       1    0        unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Locals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;Total ram usage:       32 bytes
  2209 ;; Hardware stack levels used: 1
  2210 ;; Hardware stack levels required when called: 2
  2211 ;; This function calls:
  2212 ;;		_LED1_Control
  2213 ;;		_LED2_Control
  2214 ;;		_LED3_Control
  2215 ;;		_LED4_Control
  2216 ;;		_LED5_Control
  2217 ;;		_LED6_Control
  2218 ;; This function is called by:
  2219 ;;		_main
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text2
  2224   0045A4                     __ptext2:
  2225                           	callstack 0
  2226   0045A4                     _runGPIO:
  2227                           	callstack 28
  2228   0045A4                     
  2229                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  2230   0045A4  9495               	bcf	149,2,c	;volatile
  2231                           
  2232                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  2233   0045A6  9695               	bcf	149,3,c	;volatile
  2234                           
  2235                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  2236   0045A8  9894               	bcf	148,4,c	;volatile
  2237                           
  2238                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  2239   0045AA  9895               	bcf	149,4,c	;volatile
  2240                           
  2241                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  2242   0045AC  9A95               	bcf	149,5,c	;volatile
  2243                           
  2244                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  2245   0045AE  9C95               	bcf	149,6,c	;volatile
  2246                           
  2247                           ;GPIO.c: 27:     LATDbits.LD2 = 1;
  2248   0045B0  848C               	bsf	140,2,c	;volatile
  2249                           
  2250                           ;GPIO.c: 28:     LATDbits.LD3 = 1;
  2251   0045B2  868C               	bsf	140,3,c	;volatile
  2252                           
  2253                           ;GPIO.c: 29:     LATCbits.LC4 = 1;
  2254   0045B4  888B               	bsf	139,4,c	;volatile
  2255                           
  2256                           ;GPIO.c: 30:     LATDbits.LD4 = 1;
  2257   0045B6  888C               	bsf	140,4,c	;volatile
  2258                           
  2259                           ;GPIO.c: 31:     LATDbits.LD5 = 1;
  2260   0045B8  8A8C               	bsf	140,5,c	;volatile
  2261                           
  2262                           ;GPIO.c: 32:     LATDbits.LD6 = 1;
  2263   0045BA  8C8C               	bsf	140,6,c	;volatile
  2264                           
  2265                           ;GPIO.c: 35:     TRISAbits.RA2 = 1;
  2266   0045BC  8492               	bsf	146,2,c	;volatile
  2267                           
  2268                           ;GPIO.c: 36:     ANSELAbits.ANSA2 = 0;
  2269   0045BE  010F               	movlb	15	; () banked
  2270   0045C0  9538               	bcf	56,2,b	;volatile
  2271   0045C2                     
  2272                           ; BSR set to: 15
  2273                           ;GPIO.c: 40:     T1CONbits.TMR1CS = 0b00;
  2274   0045C2  0E3F               	movlw	-193
  2275   0045C4  16CD               	andwf	205,f,c	;volatile
  2276                           
  2277                           ;GPIO.c: 41:     T1CONbits.T1CKPS = 0b11;
  2278   0045C6  0E30               	movlw	48
  2279   0045C8  12CD               	iorwf	205,f,c	;volatile
  2280   0045CA                     
  2281                           ; BSR set to: 15
  2282                           ;GPIO.c: 42:     TMR1IE = 1;
  2283   0045CA  809D               	bsf	3997,0,c	;volatile
  2284   0045CC                     
  2285                           ; BSR set to: 15
  2286                           ;GPIO.c: 43:     PEIE = 1;
  2287   0045CC  8CF2               	bsf	4082,6,c	;volatile
  2288   0045CE                     
  2289                           ; BSR set to: 15
  2290                           ;GPIO.c: 44:     GIE = 1;
  2291   0045CE  8EF2               	bsf	4082,7,c	;volatile
  2292                           
  2293                           ;GPIO.c: 45:     GPIOIE = 1;
  2294   0045D0  0E01               	movlw	1
  2295   0045D2  0101               	movlb	1	; () banked
  2296   0045D4  6F21               	movwf	_GPIOIE& (0+255),b
  2297   0045D6                     
  2298                           ; BSR set to: 1
  2299                           ;GPIO.c: 46:     TMR1IF = 1;
  2300   0045D6  809E               	bsf	3998,0,c	;volatile
  2301                           
  2302                           ;GPIO.c: 47:     TMR1 = 0xFFFF - (25000 - 1);
  2303   0045D8  0E9E               	movlw	158
  2304   0045DA  6ECF               	movwf	207,c	;volatile
  2305   0045DC  0E58               	movlw	88
  2306   0045DE  6ECE               	movwf	206,c	;volatile
  2307   0045E0                     
  2308                           ; BSR set to: 1
  2309                           ;GPIO.c: 48:     TMR1ON = 1;
  2310   0045E0  80CD               	bsf	4045,0,c	;volatile
  2311                           
  2312                           ;GPIO.c: 51:     keepStateGPIO = 1;
  2313   0045E2  0E01               	movlw	1
  2314   0045E4  0100               	movlb	0	; () banked
  2315   0045E6  6FFF               	movwf	_keepStateGPIO& (0+255),b
  2316                           
  2317                           ;GPIO.c: 54:     uint8_t GPIOreverse;;GPIO.c: 55:     GPIOreverse = 0;
  2318   0045E8  0E00               	movlw	0
  2319   0045EA  6E1E               	movwf	runGPIO@GPIOreverse^0,c
  2320   0045EC                     
  2321                           ; BSR set to: 0
  2322                           ;GPIO.c: 57:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  2323   0045EC  EE21  F0AB         	lfsr	2,runGPIO@F6966
  2324   0045F0  EE10  F012         	lfsr	1,runGPIO@LEDControl
  2325   0045F4  0E0B               	movlw	11
  2326   0045F6                     u8751:
  2327   0045F6  CFDB FFE3          	movff	plusw2,plusw1
  2328   0045FA  06E8               	decf	wreg,f,c
  2329   0045FC  E2FC               	bc	u8751
  2330   0045FE                     
  2331                           ; BSR set to: 0
  2332                           ;GPIO.c: 58:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  2333   0045FE  EE21  F09F         	lfsr	2,runGPIO@F6984
  2334   004602  EE10  F006         	lfsr	1,runGPIO@states
  2335   004606  0E0B               	movlw	11
  2336   004608                     u8761:
  2337   004608  CFDB FFE3          	movff	plusw2,plusw1
  2338   00460C  06E8               	decf	wreg,f,c
  2339   00460E  E2FC               	bc	u8761
  2340                           
  2341                           ;GPIO.c: 59:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  2342   004610  0E00               	movlw	0
  2343   004612  6E20               	movwf	(runGPIO@numberOfStates+1)^0,c
  2344   004614  0E0C               	movlw	12
  2345   004616  6E1F               	movwf	runGPIO@numberOfStates^0,c
  2346                           
  2347                           ;GPIO.c: 60:     uint8_t GPIOi;;GPIO.c: 61:     GPIOi = 0;
  2348   004618  0E00               	movlw	0
  2349   00461A  6E21               	movwf	runGPIO@GPIOi^0,c
  2350                           
  2351                           ;GPIO.c: 63:     while(keepStateGPIO){
  2352   00461C  EF6F  F023         	goto	l314
  2353   004620                     l6662:
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;GPIO.c: 65:         for(int j = 0; j < 6; j++) {
  2357   004620  0E00               	movlw	0
  2358   004622  6E23               	movwf	(runGPIO@j+1)^0,c
  2359   004624  0E00               	movlw	0
  2360   004626  6E22               	movwf	runGPIO@j^0,c
  2361   004628                     l6668:
  2362                           
  2363                           ;GPIO.c: 66:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  2364   004628  5022               	movf	runGPIO@j^0,w,c
  2365   00462A  0D02               	mullw	2
  2366   00462C  50F3               	movf	243,w,c
  2367   00462E  0F12               	addlw	low runGPIO@LEDControl
  2368   004630  6ED9               	movwf	fsr2l,c
  2369   004632  6ADA               	clrf	fsr2h,c
  2370   004634  D802               	call	u8778
  2371   004636  EF41  F023         	goto	u8779
  2372   00463A                     u8778:
  2373   00463A  0005               	push	
  2374   00463C  6EFA               	movwf	pclath,c
  2375   00463E  50DE               	movf	postinc2,w,c
  2376   004640  6EFD               	movwf	tosl,c
  2377   004642  50DE               	movf	postinc2,w,c
  2378   004644  6EFE               	movwf	tosh,c
  2379   004646  50F8               	movf	tblptru,w,c
  2380   004648  6EFF               	movwf	tosu,c
  2381   00464A  50FA               	movf	pclath,w,c
  2382   00464C  5022               	movf	runGPIO@j^0,w,c
  2383   00464E  0805               	sublw	5
  2384   004650  6E04               	movwf	??_runGPIO^0,c
  2385   004652  5021               	movf	runGPIO@GPIOi^0,w,c
  2386   004654  0F06               	addlw	low runGPIO@states
  2387   004656  6ED9               	movwf	fsr2l,c
  2388   004658  6ADA               	clrf	fsr2h,c
  2389   00465A  50DF               	movf	indf2,w,c
  2390   00465C  6E05               	movwf	(??_runGPIO+1)^0,c
  2391   00465E  2A04               	incf	??_runGPIO^0,f,c
  2392   004660  EF34  F023         	goto	u8784
  2393   004664                     u8785:
  2394   004664  90D8               	bcf	status,0,c
  2395   004666  3205               	rrcf	(??_runGPIO+1)^0,f,c
  2396   004668                     u8784:
  2397   004668  2E04               	decfsz	??_runGPIO^0,f,c
  2398   00466A  EF32  F023         	goto	u8785
  2399   00466E  A005               	btfss	(??_runGPIO+1)^0,0,c
  2400   004670  EF3C  F023         	goto	u8791
  2401   004674  EF3F  F023         	goto	u8790
  2402   004678                     u8791:
  2403   004678  0E01               	movlw	1
  2404   00467A  EF40  F023         	goto	u8800
  2405   00467E                     u8790:
  2406   00467E  0E00               	movlw	0
  2407   004680                     u8800:
  2408   004680  0012               	return		;indir
  2409   004682                     u8779:
  2410   004682                     
  2411                           ;GPIO.c: 67:         }
  2412   004682  4A22               	infsnz	runGPIO@j^0,f,c
  2413   004684  2A23               	incf	(runGPIO@j+1)^0,f,c
  2414   004686  BE23               	btfsc	(runGPIO@j+1)^0,7,c
  2415   004688  EF4F  F023         	goto	u8811
  2416   00468C  5023               	movf	(runGPIO@j+1)^0,w,c
  2417   00468E  E109               	bnz	u8810
  2418   004690  0E06               	movlw	6
  2419   004692  5C22               	subwf	runGPIO@j^0,w,c
  2420   004694  A0D8               	btfss	status,0,c
  2421   004696  EF4F  F023         	goto	u8811
  2422   00469A  EF51  F023         	goto	u8810
  2423   00469E                     u8811:
  2424   00469E  EF14  F023         	goto	l6668
  2425   0046A2                     u8810:
  2426   0046A2                     
  2427                           ;GPIO.c: 68:         _delay((unsigned long)((400)*(32E6/4000.0)));
  2428   0046A2  0E11               	movlw	17
  2429   0046A4  6E05               	movwf	(??_runGPIO+1)^0,c
  2430   0046A6  0E3C               	movlw	60
  2431   0046A8  6E04               	movwf	??_runGPIO^0,c
  2432   0046AA  0ECB               	movlw	203
  2433   0046AC                     u9247:
  2434   0046AC  2EE8               	decfsz	wreg,f,c
  2435   0046AE  D7FE               	bra	u9247
  2436   0046B0  2E04               	decfsz	??_runGPIO^0,f,c
  2437   0046B2  D7FC               	bra	u9247
  2438   0046B4  2E05               	decfsz	(??_runGPIO+1)^0,f,c
  2439   0046B6  D7FA               	bra	u9247
  2440   0046B8  0000               	nop	
  2441   0046BA                     
  2442                           ;GPIO.c: 69:         GPIOi++;
  2443   0046BA  2A21               	incf	runGPIO@GPIOi^0,f,c
  2444                           
  2445                           ;GPIO.c: 70:         if(GPIOi == numberOfStates){
  2446   0046BC  5021               	movf	runGPIO@GPIOi^0,w,c
  2447   0046BE  6E04               	movwf	??_runGPIO^0,c
  2448   0046C0  6A05               	clrf	(??_runGPIO+1)^0,c
  2449   0046C2  501F               	movf	runGPIO@numberOfStates^0,w,c
  2450   0046C4  1804               	xorwf	??_runGPIO^0,w,c
  2451   0046C6  E107               	bnz	u8821
  2452   0046C8  5020               	movf	(runGPIO@numberOfStates+1)^0,w,c
  2453   0046CA  1805               	xorwf	(??_runGPIO+1)^0,w,c
  2454   0046CC  A4D8               	btfss	status,2,c
  2455   0046CE  EF6B  F023         	goto	u8821
  2456   0046D2  EF6D  F023         	goto	u8820
  2457   0046D6                     u8821:
  2458   0046D6  EF6F  F023         	goto	l314
  2459   0046DA                     u8820:
  2460   0046DA                     
  2461                           ;GPIO.c: 71:             GPIOi = 0;
  2462   0046DA  0E00               	movlw	0
  2463   0046DC  6E21               	movwf	runGPIO@GPIOi^0,c
  2464   0046DE                     l314:
  2465                           
  2466                           ;GPIO.c: 63:     while(keepStateGPIO){
  2467   0046DE  0100               	movlb	0	; () banked
  2468   0046E0  51FF               	movf	_keepStateGPIO& (0+255),w,b
  2469   0046E2  A4D8               	btfss	status,2,c
  2470   0046E4  EF76  F023         	goto	u8831
  2471   0046E8  EF78  F023         	goto	u8830
  2472   0046EC                     u8831:
  2473   0046EC  EF10  F023         	goto	l6662
  2474   0046F0                     u8830:
  2475   0046F0                     
  2476                           ; BSR set to: 0
  2477                           ;GPIO.c: 76:     LATDbits.LD2 = 1;
  2478   0046F0  848C               	bsf	140,2,c	;volatile
  2479                           
  2480                           ;GPIO.c: 77:     LATDbits.LD3 = 1;
  2481   0046F2  868C               	bsf	140,3,c	;volatile
  2482                           
  2483                           ;GPIO.c: 78:     LATCbits.LC4 = 1;
  2484   0046F4  888B               	bsf	139,4,c	;volatile
  2485                           
  2486                           ;GPIO.c: 79:     LATDbits.LD4 = 1;
  2487   0046F6  888C               	bsf	140,4,c	;volatile
  2488                           
  2489                           ;GPIO.c: 80:     LATDbits.LD5 = 1;
  2490   0046F8  8A8C               	bsf	140,5,c	;volatile
  2491                           
  2492                           ;GPIO.c: 81:     LATDbits.LD6 = 1;
  2493   0046FA  8C8C               	bsf	140,6,c	;volatile
  2494                           
  2495                           ;GPIO.c: 82:     TMR1ON = 0;
  2496   0046FC  90CD               	bcf	4045,0,c	;volatile
  2497                           
  2498                           ;GPIO.c: 83:     TMR1IE = 0;
  2499   0046FE  909D               	bcf	3997,0,c	;volatile
  2500   004700                     
  2501                           ; BSR set to: 0
  2502                           ;GPIO.c: 84:     GPIOIE = 0;
  2503   004700  0E00               	movlw	0
  2504   004702  0101               	movlb	1	; () banked
  2505   004704  6F21               	movwf	_GPIOIE& (0+255),b
  2506   004706                     
  2507                           ; BSR set to: 1
  2508   004706  0012               	return		;funcret
  2509   004708                     __end_of_runGPIO:
  2510                           	callstack 0
  2511                           
  2512 ;; *************** function _LED5_Control *****************
  2513 ;; Defined at:
  2514 ;;		line 14 in file "GPIO.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  state           1    wreg     unsigned char 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  state           1    2[COMRAM] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  1    wreg      void 
  2521 ;; Registers used:
  2522 ;;		wreg
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;Total ram usage:        1 bytes
  2533 ;; Hardware stack levels used: 1
  2534 ;; Hardware stack levels required when called: 1
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_runGPIO
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text3
  2543   00560C                     __ptext3:
  2544                           	callstack 0
  2545   00560C                     _LED5_Control:
  2546                           	callstack 28
  2547                           
  2548                           ; BSR set to: 1
  2549                           ;incstack = 0
  2550                           ;LED5_Control@state stored from wreg
  2551   00560C  6E03               	movwf	LED5_Control@state^0,c
  2552   00560E  B003               	btfsc	LED5_Control@state^0,0,c
  2553   005610  D002               	bra	u8685
  2554   005612  9A8C               	bcf	140,5,c	;volatile
  2555   005614  D001               	bra	u8686
  2556   005616                     u8685:
  2557   005616  8A8C               	bsf	140,5,c	;volatile
  2558   005618                     u8686:
  2559   005618  0012               	return		;funcret
  2560   00561A                     __end_of_LED5_Control:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function _LED4_Control *****************
  2564 ;; Defined at:
  2565 ;;		line 13 in file "GPIO.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  state           1    wreg     unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  state           1    2[COMRAM] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;Total ram usage:        1 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; Hardware stack levels required when called: 1
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_runGPIO
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text4
  2594   00561A                     __ptext4:
  2595                           	callstack 0
  2596   00561A                     _LED4_Control:
  2597                           	callstack 28
  2598                           
  2599                           ;incstack = 0
  2600                           ;LED4_Control@state stored from wreg
  2601   00561A  6E03               	movwf	LED4_Control@state^0,c
  2602   00561C  B003               	btfsc	LED4_Control@state^0,0,c
  2603   00561E  D002               	bra	u8675
  2604   005620  988C               	bcf	140,4,c	;volatile
  2605   005622  D001               	bra	u8676
  2606   005624                     u8675:
  2607   005624  888C               	bsf	140,4,c	;volatile
  2608   005626                     u8676:
  2609   005626  0012               	return		;funcret
  2610   005628                     __end_of_LED4_Control:
  2611                           	callstack 0
  2612                           
  2613 ;; *************** function _LED3_Control *****************
  2614 ;; Defined at:
  2615 ;;		line 12 in file "GPIO.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  state           1    wreg     unsigned char 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  state           1    2[COMRAM] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;Total ram usage:        1 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 1
  2636 ;; This function calls:
  2637 ;;		Nothing
  2638 ;; This function is called by:
  2639 ;;		_runGPIO
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text5
  2644   005628                     __ptext5:
  2645                           	callstack 0
  2646   005628                     _LED3_Control:
  2647                           	callstack 28
  2648                           
  2649                           ;incstack = 0
  2650                           ;LED3_Control@state stored from wreg
  2651   005628  6E03               	movwf	LED3_Control@state^0,c
  2652   00562A  B003               	btfsc	LED3_Control@state^0,0,c
  2653   00562C  D002               	bra	u8665
  2654   00562E  988B               	bcf	139,4,c	;volatile
  2655   005630  D001               	bra	u8666
  2656   005632                     u8665:
  2657   005632  888B               	bsf	139,4,c	;volatile
  2658   005634                     u8666:
  2659   005634  0012               	return		;funcret
  2660   005636                     __end_of_LED3_Control:
  2661                           	callstack 0
  2662                           
  2663 ;; *************** function _LED2_Control *****************
  2664 ;; Defined at:
  2665 ;;		line 11 in file "GPIO.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  state           1    wreg     unsigned char 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  state           1    2[COMRAM] unsigned char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      void 
  2672 ;; Registers used:
  2673 ;;		wreg
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;Total ram usage:        1 bytes
  2684 ;; Hardware stack levels used: 1
  2685 ;; Hardware stack levels required when called: 1
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_runGPIO
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text6
  2694   005636                     __ptext6:
  2695                           	callstack 0
  2696   005636                     _LED2_Control:
  2697                           	callstack 28
  2698                           
  2699                           ;incstack = 0
  2700                           ;LED2_Control@state stored from wreg
  2701   005636  6E03               	movwf	LED2_Control@state^0,c
  2702   005638  B003               	btfsc	LED2_Control@state^0,0,c
  2703   00563A  D002               	bra	u8655
  2704   00563C  968C               	bcf	140,3,c	;volatile
  2705   00563E  D001               	bra	u8656
  2706   005640                     u8655:
  2707   005640  868C               	bsf	140,3,c	;volatile
  2708   005642                     u8656:
  2709   005642  0012               	return		;funcret
  2710   005644                     __end_of_LED2_Control:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function _LED1_Control *****************
  2714 ;; Defined at:
  2715 ;;		line 10 in file "GPIO.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  state           1    wreg     unsigned char 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  state           1    2[COMRAM] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  1    wreg      void 
  2722 ;; Registers used:
  2723 ;;		wreg
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;Total ram usage:        1 bytes
  2734 ;; Hardware stack levels used: 1
  2735 ;; Hardware stack levels required when called: 1
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_runGPIO
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text7
  2744   005644                     __ptext7:
  2745                           	callstack 0
  2746   005644                     _LED1_Control:
  2747                           	callstack 28
  2748                           
  2749                           ;incstack = 0
  2750                           ;LED1_Control@state stored from wreg
  2751   005644  6E03               	movwf	LED1_Control@state^0,c
  2752   005646  B003               	btfsc	LED1_Control@state^0,0,c
  2753   005648  D002               	bra	u8645
  2754   00564A  948C               	bcf	140,2,c	;volatile
  2755   00564C  D001               	bra	u8646
  2756   00564E                     u8645:
  2757   00564E  848C               	bsf	140,2,c	;volatile
  2758   005650                     u8646:
  2759   005650  0012               	return		;funcret
  2760   005652                     __end_of_LED1_Control:
  2761                           	callstack 0
  2762                           
  2763 ;; *************** function _LED6_Control *****************
  2764 ;; Defined at:
  2765 ;;		line 15 in file "GPIO.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;  state           1    wreg     unsigned char 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  state           1    2[COMRAM] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		wreg
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;Total ram usage:        1 bytes
  2784 ;; Hardware stack levels used: 1
  2785 ;; Hardware stack levels required when called: 1
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_runGPIO
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text8
  2794   005652                     __ptext8:
  2795                           	callstack 0
  2796   005652                     _LED6_Control:
  2797                           	callstack 28
  2798                           
  2799                           ;incstack = 0
  2800                           ;LED6_Control@state stored from wreg
  2801   005652  6E03               	movwf	LED6_Control@state^0,c
  2802   005654  B003               	btfsc	LED6_Control@state^0,0,c
  2803   005656  D002               	bra	u8695
  2804   005658  9C8C               	bcf	140,6,c	;volatile
  2805   00565A  D001               	bra	u8696
  2806   00565C                     u8695:
  2807   00565C  8C8C               	bsf	140,6,c	;volatile
  2808   00565E                     u8696:
  2809   00565E  0012               	return		;funcret
  2810   005660                     __end_of_LED6_Control:
  2811                           	callstack 0
  2812                           
  2813 ;; *************** function _runDAC *****************
  2814 ;; Defined at:
  2815 ;;		line 10 in file "DAC.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;		None
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  DACindex        1  113[BANK0 ] unsigned char 
  2820 ;;  selectModeDA    1  112[BANK0 ] unsigned char 
  2821 ;;  keepState       1  111[BANK0 ] unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;Total ram usage:       12 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 9
  2838 ;; This function calls:
  2839 ;;		_SPI_write
  2840 ;;		___fladd
  2841 ;;		___fldiv
  2842 ;;		___flmul
  2843 ;;		___fltol
  2844 ;;		___xxtofl
  2845 ;;		_printf
  2846 ;;		_sinf
  2847 ;; This function is called by:
  2848 ;;		_main
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text9
  2853   003646                     __ptext9:
  2854                           	callstack 0
  2855   003646                     _runDAC:
  2856                           	callstack 21
  2857   003646                     
  2858                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  2859   003646  8094               	bsf	148,0,c	;volatile
  2860                           
  2861                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  2862   003648  8892               	bsf	146,4,c	;volatile
  2863                           
  2864                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  2865   00364A  8692               	bsf	146,3,c	;volatile
  2866                           
  2867                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  2868   00364C  8492               	bsf	146,2,c	;volatile
  2869                           
  2870                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  2871   00364E  010F               	movlb	15	; () banked
  2872   003650  9738               	bcf	56,3,b	;volatile
  2873                           
  2874                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  2875   003652  9538               	bcf	56,2,b	;volatile
  2876                           
  2877                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  2878   003654  9693               	bcf	147,3,c	;volatile
  2879                           
  2880                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  2881   003656  9694               	bcf	148,3,c	;volatile
  2882                           
  2883                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  2884   003658  9A94               	bcf	148,5,c	;volatile
  2885   00365A                     
  2886                           ; BSR set to: 15
  2887                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  2888   00365A  50C6               	movf	198,w,c	;volatile
  2889   00365C  0BF0               	andlw	-16
  2890   00365E  0902               	iorlw	2
  2891   003660  6EC6               	movwf	198,c	;volatile
  2892   003662                     
  2893                           ; BSR set to: 15
  2894                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  2895   003662  98C6               	bcf	198,4,c	;volatile
  2896   003664                     
  2897                           ; BSR set to: 15
  2898                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  2899   003664  8CC7               	bsf	199,6,c	;volatile
  2900   003666                     
  2901                           ; BSR set to: 15
  2902                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  2903   003666  8AC6               	bsf	198,5,c	;volatile
  2904   003668                     
  2905                           ; BSR set to: 15
  2906                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  2907   003668  8139               	bsf	57,0,b	;volatile
  2908   00366A                     
  2909                           ; BSR set to: 15
  2910                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  2911   00366A  9EC0               	bcf	192,7,c	;volatile
  2912                           
  2913                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  2914   00366C  50C0               	movf	192,w,c	;volatile
  2915   00366E  0BF8               	andlw	-8
  2916   003670  0906               	iorlw	6
  2917   003672  6EC0               	movwf	192,c	;volatile
  2918                           
  2919                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  2920   003674  50C0               	movf	192,w,c	;volatile
  2921   003676  0BC7               	andlw	-57
  2922   003678  0930               	iorlw	48
  2923   00367A  6EC0               	movwf	192,c	;volatile
  2924   00367C                     
  2925                           ; BSR set to: 15
  2926                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  2927   00367C  80C2               	bsf	194,0,c	;volatile
  2928                           
  2929                           ;DAC.c: 38:     SPBRG1 = 51;
  2930   00367E  0E33               	movlw	51
  2931   003680  6EAF               	movwf	175,c	;volatile
  2932   003682                     
  2933                           ; BSR set to: 15
  2934                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  2935   003682  8EAB               	bsf	171,7,c	;volatile
  2936   003684                     
  2937                           ; BSR set to: 15
  2938                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  2939   003684  98AC               	bcf	172,4,c	;volatile
  2940   003686                     
  2941                           ; BSR set to: 15
  2942                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  2943   003686  8AAC               	bsf	172,5,c	;volatile
  2944   003688                     
  2945                           ; BSR set to: 15
  2946                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  2947   003688  88AB               	bsf	171,4,c	;volatile
  2948   00368A                     
  2949                           ; BSR set to: 15
  2950                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  2951   00368A  868A               	bsf	138,3,c	;volatile
  2952                           
  2953                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  2954   00368C  50C2               	movf	194,w,c	;volatile
  2955   00368E  0B83               	andlw	-125
  2956   003690  0930               	iorlw	48
  2957   003692  6EC2               	movwf	194,c	;volatile
  2958                           
  2959                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  2960   003694  0E01               	movlw	1
  2961   003696  0100               	movlb	0	; () banked
  2962   003698  6FD0               	movwf	runDAC@selectModeDAC& (0+255),b
  2963                           
  2964                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  2965   00369A  0E01               	movlw	1
  2966   00369C  6FCF               	movwf	runDAC@keepState& (0+255),b
  2967                           
  2968                           ;DAC.c: 52:     uint8_t DACindex = 0;
  2969   00369E  0E00               	movlw	0
  2970   0036A0  6FD1               	movwf	runDAC@DACindex& (0+255),b
  2971                           
  2972                           ;DAC.c: 54:     while(keepState){
  2973   0036A2  EF3E  F01C         	goto	l6830
  2974   0036A6                     l6788:
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;DAC.c: 57:                 if(DACindex<255/2){
  2978   0036A6  0E7F               	movlw	127
  2979   0036A8  61D1               	cpfslt	runDAC@DACindex& (0+255),b
  2980   0036AA  EF59  F01B         	goto	u9011
  2981   0036AE  EF5B  F01B         	goto	u9010
  2982   0036B2                     u9011:
  2983   0036B2  EF5E  F01B         	goto	l6792
  2984   0036B6                     u9010:
  2985   0036B6                     
  2986                           ; BSR set to: 0
  2987                           ;DAC.c: 58:                     SPI_write(DACindex);
  2988   0036B6  51D1               	movf	runDAC@DACindex& (0+255),w,b
  2989   0036B8  EC0F  F02A         	call	_SPI_write
  2990   0036BC                     l6792:
  2991                           
  2992                           ;DAC.c: 60:                 if(DACindex>=255/2){
  2993   0036BC  0E7E               	movlw	126
  2994   0036BE  0100               	movlb	0	; () banked
  2995   0036C0  65D1               	cpfsgt	runDAC@DACindex& (0+255),b
  2996   0036C2  EF65  F01B         	goto	u9021
  2997   0036C6  EF67  F01B         	goto	u9020
  2998   0036CA                     u9021:
  2999   0036CA  EFFB  F01B         	goto	l201
  3000   0036CE                     u9020:
  3001   0036CE                     
  3002                           ; BSR set to: 0
  3003                           ;DAC.c: 61:                     SPI_write(255-DACindex);
  3004   0036CE  51D1               	movf	runDAC@DACindex& (0+255),w,b
  3005   0036D0  0AFF               	xorlw	255
  3006   0036D2  EC0F  F02A         	call	_SPI_write
  3007   0036D6  EFFB  F01B         	goto	l201
  3008   0036DA                     l6796:
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3012   0036DA  0E00               	movlw	0
  3013   0036DC  6E2E               	movwf	___fldiv@a^0,c
  3014   0036DE  0E00               	movlw	0
  3015   0036E0  6E2F               	movwf	(___fldiv@a+1)^0,c
  3016   0036E2  0E7F               	movlw	127
  3017   0036E4  6E30               	movwf	(___fldiv@a+2)^0,c
  3018   0036E6  0E43               	movlw	67
  3019   0036E8  6E31               	movwf	(___fldiv@a+3)^0,c
  3020   0036EA  0EC3               	movlw	195
  3021   0036EC  6E15               	movwf	___flmul@a^0,c
  3022   0036EE  0EF5               	movlw	245
  3023   0036F0  6E16               	movwf	(___flmul@a+1)^0,c
  3024   0036F2  0EC8               	movlw	200
  3025   0036F4  6E17               	movwf	(___flmul@a+2)^0,c
  3026   0036F6  0E40               	movlw	64
  3027   0036F8  6E18               	movwf	(___flmul@a+3)^0,c
  3028   0036FA  51D1               	movf	runDAC@DACindex& (0+255),w,b
  3029   0036FC  6E03               	movwf	___xxtofl@val^0,c
  3030   0036FE  6A04               	clrf	(___xxtofl@val+1)^0,c
  3031   003700  6A05               	clrf	(___xxtofl@val+2)^0,c
  3032   003702  6A06               	clrf	(___xxtofl@val+3)^0,c
  3033   003704  0E01               	movlw	1
  3034   003706  EC67  F020         	call	___xxtofl
  3035   00370A  C003  F011         	movff	?___xxtofl,___flmul@b
  3036   00370E  C004  F012         	movff	?___xxtofl+1,___flmul@b+1
  3037   003712  C005  F013         	movff	?___xxtofl+2,___flmul@b+2
  3038   003716  C006  F014         	movff	?___xxtofl+3,___flmul@b+3
  3039   00371A  EC59  F012         	call	___flmul	;wreg free
  3040   00371E  C011  F02A         	movff	?___flmul,___fldiv@b
  3041   003722  C012  F02B         	movff	?___flmul+1,___fldiv@b+1
  3042   003726  C013  F02C         	movff	?___flmul+2,___fldiv@b+2
  3043   00372A  C014  F02D         	movff	?___flmul+3,___fldiv@b+3
  3044   00372E  EC31  F018         	call	___fldiv	;wreg free
  3045   003732  C02A  F0C7         	movff	?___fldiv,_runDAC$3782
  3046   003736  C02B  F0C8         	movff	?___fldiv+1,_runDAC$3782+1
  3047   00373A  C02C  F0C9         	movff	?___fldiv+2,_runDAC$3782+2
  3048   00373E  C02D  F0CA         	movff	?___fldiv+3,_runDAC$3782+3
  3049   003742                     
  3050                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3051   003742  C0C7  F09C         	movff	_runDAC$3782,sinf@x
  3052   003746  C0C8  F09D         	movff	_runDAC$3782+1,sinf@x+1
  3053   00374A  C0C9  F09E         	movff	_runDAC$3782+2,sinf@x+2
  3054   00374E  C0CA  F09F         	movff	_runDAC$3782+3,sinf@x+3
  3055   003752  EC74  F00D         	call	_sinf	;wreg free
  3056   003756  C09C  F0CB         	movff	?_sinf,_runDAC$3783
  3057   00375A  C09D  F0CC         	movff	?_sinf+1,_runDAC$3783+1
  3058   00375E  C09E  F0CD         	movff	?_sinf+2,_runDAC$3783+2
  3059   003762  C09F  F0CE         	movff	?_sinf+3,_runDAC$3783+3
  3060   003766                     
  3061                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3062   003766  0E00               	movlw	0
  3063   003768  6E47               	movwf	___fladd@a^0,c
  3064   00376A  0E00               	movlw	0
  3065   00376C  6E48               	movwf	(___fladd@a+1)^0,c
  3066   00376E  0EFE               	movlw	254
  3067   003770  6E49               	movwf	(___fladd@a+2)^0,c
  3068   003772  0E42               	movlw	66
  3069   003774  6E4A               	movwf	(___fladd@a+3)^0,c
  3070   003776  0E00               	movlw	0
  3071   003778  6E15               	movwf	___flmul@a^0,c
  3072   00377A  0E00               	movlw	0
  3073   00377C  6E16               	movwf	(___flmul@a+1)^0,c
  3074   00377E  0EFE               	movlw	254
  3075   003780  6E17               	movwf	(___flmul@a+2)^0,c
  3076   003782  0E42               	movlw	66
  3077   003784  6E18               	movwf	(___flmul@a+3)^0,c
  3078   003786  C0CB  F011         	movff	_runDAC$3783,___flmul@b
  3079   00378A  C0CC  F012         	movff	_runDAC$3783+1,___flmul@b+1
  3080   00378E  C0CD  F013         	movff	_runDAC$3783+2,___flmul@b+2
  3081   003792  C0CE  F014         	movff	_runDAC$3783+3,___flmul@b+3
  3082   003796  EC59  F012         	call	___flmul	;wreg free
  3083   00379A  C011  F043         	movff	?___flmul,___fladd@b
  3084   00379E  C012  F044         	movff	?___flmul+1,___fladd@b+1
  3085   0037A2  C013  F045         	movff	?___flmul+2,___fladd@b+2
  3086   0037A6  C014  F046         	movff	?___flmul+3,___fladd@b+3
  3087   0037AA  ECF9  F00F         	call	___fladd	;wreg free
  3088   0037AE  C043  F053         	movff	?___fladd,___fltol@f1
  3089   0037B2  C044  F054         	movff	?___fladd+1,___fltol@f1+1
  3090   0037B6  C045  F055         	movff	?___fladd+2,___fltol@f1+2
  3091   0037BA  C046  F056         	movff	?___fladd+3,___fltol@f1+3
  3092   0037BE  ECAC  F024         	call	___fltol	;wreg free
  3093   0037C2  5053               	movf	?___fltol^0,w,c
  3094   0037C4  EC0F  F02A         	call	_SPI_write
  3095                           
  3096                           ;DAC.c: 66:                 break;
  3097   0037C8  EFFB  F01B         	goto	l201
  3098   0037CC                     l6802:
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  3102   0037CC  51D1               	movf	runDAC@DACindex& (0+255),w,b
  3103   0037CE  0AFF               	xorlw	255
  3104   0037D0  EC0F  F02A         	call	_SPI_write
  3105                           
  3106                           ;DAC.c: 69:                 break;
  3107   0037D4  EFFB  F01B         	goto	l201
  3108   0037D8                     l6806:
  3109                           
  3110                           ; BSR set to: 0
  3111   0037D8  51D0               	movf	runDAC@selectModeDAC& (0+255),w,b
  3112                           
  3113                           ; Switch size 1, requested type "simple"
  3114                           ; Number of cases is 3, Range of values is 1 to 3
  3115                           ; switch strategies available:
  3116                           ; Name         Instructions Cycles
  3117                           ; simple_byte           10     6 (average)
  3118                           ;	Chosen strategy is simple_byte
  3119   0037DA  0A01               	xorlw	1	; case 1
  3120   0037DC  B4D8               	btfsc	status,2,c
  3121   0037DE  EF53  F01B         	goto	l6788
  3122   0037E2  0A03               	xorlw	3	; case 2
  3123   0037E4  B4D8               	btfsc	status,2,c
  3124   0037E6  EF6D  F01B         	goto	l6796
  3125   0037EA  0A01               	xorlw	1	; case 3
  3126   0037EC  B4D8               	btfsc	status,2,c
  3127   0037EE  EFE6  F01B         	goto	l6802
  3128   0037F2  EFFB  F01B         	goto	l201
  3129   0037F6                     l201:
  3130                           
  3131                           ;DAC.c: 71:         GODONE = 1;
  3132   0037F6  82C2               	bsf	4034,1,c	;volatile
  3133   0037F8                     l204:
  3134   0037F8  B2C2               	btfsc	4034,1,c	;volatile
  3135   0037FA  EF01  F01C         	goto	u9031
  3136   0037FE  EF03  F01C         	goto	u9030
  3137   003802                     u9031:
  3138   003802  EFFC  F01B         	goto	l204
  3139   003806                     u9030:
  3140   003806                     
  3141                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  3142   003806  0EDC               	movlw	low STR_8
  3143   003808  0100               	movlb	0	; () banked
  3144   00380A  6FC2               	movwf	printf@fmt& (0+255),b
  3145   00380C  CFC4 F0C3          	movff	4036,?_printf+1	;volatile
  3146   003810  6BC4               	clrf	(?_printf+2)& (0+255),b
  3147   003812  ECED  F02A         	call	_printf	;wreg free
  3148   003816                     
  3149                           ;DAC.c: 75:         if(PORTCbits.RC0){
  3150   003816  A082               	btfss	130,0,c	;volatile
  3151   003818  EF10  F01C         	goto	u9041
  3152   00381C  EF12  F01C         	goto	u9040
  3153   003820                     u9041:
  3154   003820  EF15  F01C         	goto	l6814
  3155   003824                     u9040:
  3156   003824                     
  3157                           ;DAC.c: 76:             selectModeDAC = 1;
  3158   003824  0E01               	movlw	1
  3159   003826  0100               	movlb	0	; () banked
  3160   003828  6FD0               	movwf	runDAC@selectModeDAC& (0+255),b
  3161   00382A                     l6814:
  3162                           
  3163                           ;DAC.c: 78:         if(PORTAbits.RA4){
  3164   00382A  A880               	btfss	128,4,c	;volatile
  3165   00382C  EF1A  F01C         	goto	u9051
  3166   003830  EF1C  F01C         	goto	u9050
  3167   003834                     u9051:
  3168   003834  EF1F  F01C         	goto	l6818
  3169   003838                     u9050:
  3170   003838                     
  3171                           ;DAC.c: 79:             selectModeDAC = 2;
  3172   003838  0E02               	movlw	2
  3173   00383A  0100               	movlb	0	; () banked
  3174   00383C  6FD0               	movwf	runDAC@selectModeDAC& (0+255),b
  3175   00383E                     l6818:
  3176                           
  3177                           ;DAC.c: 81:         if(PORTAbits.RA3){
  3178   00383E  A680               	btfss	128,3,c	;volatile
  3179   003840  EF24  F01C         	goto	u9061
  3180   003844  EF26  F01C         	goto	u9060
  3181   003848                     u9061:
  3182   003848  EF29  F01C         	goto	l6822
  3183   00384C                     u9060:
  3184   00384C                     
  3185                           ;DAC.c: 82:             selectModeDAC = 3;
  3186   00384C  0E03               	movlw	3
  3187   00384E  0100               	movlb	0	; () banked
  3188   003850  6FD0               	movwf	runDAC@selectModeDAC& (0+255),b
  3189   003852                     l6822:
  3190                           
  3191                           ;DAC.c: 84:         if(PORTAbits.RA2){
  3192   003852  A480               	btfss	128,2,c	;volatile
  3193   003854  EF2E  F01C         	goto	u9071
  3194   003858  EF30  F01C         	goto	u9070
  3195   00385C                     u9071:
  3196   00385C  EF33  F01C         	goto	l6826
  3197   003860                     u9070:
  3198   003860                     
  3199                           ;DAC.c: 85:             keepState = 0;
  3200   003860  0E00               	movlw	0
  3201   003862  0100               	movlb	0	; () banked
  3202   003864  6FCF               	movwf	runDAC@keepState& (0+255),b
  3203   003866                     l6826:
  3204                           
  3205                           ;DAC.c: 87:         DACindex++;
  3206   003866  0100               	movlb	0	; () banked
  3207   003868  2BD1               	incf	runDAC@DACindex& (0+255),f,b
  3208   00386A                     
  3209                           ; BSR set to: 0
  3210                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  3211   00386A  0E68               	movlw	104
  3212   00386C  0100               	movlb	0	; () banked
  3213   00386E  6FC6               	movwf	??_runDAC& (0+255),b
  3214   003870  0EE4               	movlw	228
  3215   003872                     u9257:
  3216   003872  2EE8               	decfsz	wreg,f,c
  3217   003874  D7FE               	bra	u9257
  3218   003876  2FC6               	decfsz	??_runDAC& (0+255),f,b
  3219   003878  D7FC               	bra	u9257
  3220   00387A  0000               	nop	
  3221   00387C                     l6830:
  3222                           
  3223                           ;DAC.c: 54:     while(keepState){
  3224   00387C  0100               	movlb	0	; () banked
  3225   00387E  51CF               	movf	runDAC@keepState& (0+255),w,b
  3226   003880  A4D8               	btfss	status,2,c
  3227   003882  EF45  F01C         	goto	u9081
  3228   003886  EF47  F01C         	goto	u9080
  3229   00388A                     u9081:
  3230   00388A  EFEC  F01B         	goto	l6806
  3231   00388E                     u9080:
  3232   00388E                     
  3233                           ; BSR set to: 0
  3234   00388E  0012               	return		;funcret
  3235   003890                     __end_of_runDAC:
  3236                           	callstack 0
  3237                           
  3238 ;; *************** function _sinf *****************
  3239 ;; Defined at:
  3240 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sinf.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  x               4   60[BANK0 ] float 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  ux              4   82[BANK0 ] struct .
  3245 ;;  y               4   78[BANK0 ] struct .
  3246 ;;  sign            1   73[BANK0 ] _Bool 
  3247 ;;  n               1   72[BANK0 ] unsigned char 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  4   60[BANK0 ] float 
  3250 ;; Registers used:
  3251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3257 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;Total ram usage:       26 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; Hardware stack levels required when called: 4
  3264 ;; This function calls:
  3265 ;;		___cosdf
  3266 ;;		___fladd
  3267 ;;		___flneg
  3268 ;;		___rem_pio2f
  3269 ;;		___sindf
  3270 ;; This function is called by:
  3271 ;;		_runDAC
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text10
  3276   001AE8                     __ptext10:
  3277                           	callstack 0
  3278   001AE8                     _sinf:
  3279                           	callstack 25
  3280   001AE8  C09C  F0B2         	movff	sinf@x,sinf@ux
  3281   001AEC  C09D  F0B3         	movff	sinf@x+1,sinf@ux+1
  3282   001AF0  C09E  F0B4         	movff	sinf@x+2,sinf@ux+2
  3283   001AF4  C09F  F0B5         	movff	sinf@x+3,sinf@ux+3
  3284   001AF8  0100               	movlb	0	; () banked
  3285   001AFA  BFB5               	btfsc	(sinf@ux+3)& (0+255),7,b
  3286   001AFC  EF82  F00D         	goto	u8511
  3287   001B00  EF85  F00D         	goto	u8510
  3288   001B04                     u8511:
  3289   001B04  0E01               	movlw	1
  3290   001B06  EF86  F00D         	goto	u8520
  3291   001B0A                     u8510:
  3292   001B0A  0E00               	movlw	0
  3293   001B0C                     u8520:
  3294   001B0C  6FA9               	movwf	sinf@sign& (0+255),b
  3295   001B0E                     
  3296                           ; BSR set to: 0
  3297   001B0E  9FB5               	bcf	(sinf@ux+3)& (0+255),7,b
  3298   001B10                     
  3299                           ; BSR set to: 0
  3300   001B10  0EDB               	movlw	219
  3301   001B12  5DB2               	subwf	sinf@ux& (0+255),w,b
  3302   001B14  0E0F               	movlw	15
  3303   001B16  59B3               	subwfb	(sinf@ux+1)& (0+255),w,b
  3304   001B18  0E49               	movlw	73
  3305   001B1A  59B4               	subwfb	(sinf@ux+2)& (0+255),w,b
  3306   001B1C  0E3F               	movlw	63
  3307   001B1E  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  3308   001B20  B0D8               	btfsc	status,0,c
  3309   001B22  EF95  F00D         	goto	u8531
  3310   001B26  EF97  F00D         	goto	u8530
  3311   001B2A                     u8531:
  3312   001B2A  EFC0  F00D         	goto	l6484
  3313   001B2E                     u8530:
  3314   001B2E                     
  3315                           ; BSR set to: 0
  3316   001B2E  0E80               	movlw	128
  3317   001B30  5DB4               	subwf	(sinf@ux+2)& (0+255),w,b
  3318   001B32  0E39               	movlw	57
  3319   001B34  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  3320   001B36  B0D8               	btfsc	status,0,c
  3321   001B38  EFA0  F00D         	goto	u8541
  3322   001B3C  EFA2  F00D         	goto	u8540
  3323   001B40                     u8541:
  3324   001B40  EFAC  F00D         	goto	l6480
  3325   001B44                     u8540:
  3326   001B44                     
  3327                           ; BSR set to: 0
  3328   001B44  C09C  F09C         	movff	sinf@x,?_sinf
  3329   001B48  C09D  F09D         	movff	sinf@x+1,?_sinf+1
  3330   001B4C  C09E  F09E         	movff	sinf@x+2,?_sinf+2
  3331   001B50  C09F  F09F         	movff	sinf@x+3,?_sinf+3
  3332   001B54  EFF8  F00F         	goto	l1388
  3333   001B58                     l6480:
  3334                           
  3335                           ; BSR set to: 0
  3336   001B58  C09C  F053         	movff	sinf@x,___sindf@x
  3337   001B5C  C09D  F054         	movff	sinf@x+1,___sindf@x+1
  3338   001B60  C09E  F055         	movff	sinf@x+2,___sindf@x+2
  3339   001B64  C09F  F056         	movff	sinf@x+3,___sindf@x+3
  3340   001B68  EC48  F01C         	call	___sindf	;wreg free
  3341   001B6C  C053  F09C         	movff	?___sindf,?_sinf
  3342   001B70  C054  F09D         	movff	?___sindf+1,?_sinf+1
  3343   001B74  C055  F09E         	movff	?___sindf+2,?_sinf+2
  3344   001B78  C056  F09F         	movff	?___sindf+3,?_sinf+3
  3345   001B7C  EFF8  F00F         	goto	l1388
  3346   001B80                     l6484:
  3347                           
  3348                           ; BSR set to: 0
  3349   001B80  0ED2               	movlw	210
  3350   001B82  5DB2               	subwf	sinf@ux& (0+255),w,b
  3351   001B84  0E53               	movlw	83
  3352   001B86  59B3               	subwfb	(sinf@ux+1)& (0+255),w,b
  3353   001B88  0E7B               	movlw	123
  3354   001B8A  59B4               	subwfb	(sinf@ux+2)& (0+255),w,b
  3355   001B8C  0E40               	movlw	64
  3356   001B8E  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  3357   001B90  B0D8               	btfsc	status,0,c
  3358   001B92  EFCD  F00D         	goto	u8551
  3359   001B96  EFCF  F00D         	goto	u8550
  3360   001B9A                     u8551:
  3361   001B9A  EFB2  F00E         	goto	l6514
  3362   001B9E                     u8550:
  3363   001B9E                     
  3364                           ; BSR set to: 0
  3365   001B9E  0EE4               	movlw	228
  3366   001BA0  5DB2               	subwf	sinf@ux& (0+255),w,b
  3367   001BA2  0ECB               	movlw	203
  3368   001BA4  59B3               	subwfb	(sinf@ux+1)& (0+255),w,b
  3369   001BA6  0E16               	movlw	22
  3370   001BA8  59B4               	subwfb	(sinf@ux+2)& (0+255),w,b
  3371   001BAA  0E40               	movlw	64
  3372   001BAC  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  3373   001BAE  B0D8               	btfsc	status,0,c
  3374   001BB0  EFDC  F00D         	goto	u8561
  3375   001BB4  EFDE  F00D         	goto	u8560
  3376   001BB8                     u8561:
  3377   001BB8  EF4C  F00E         	goto	l6504
  3378   001BBC                     u8560:
  3379   001BBC                     
  3380                           ; BSR set to: 0
  3381   001BBC  51A9               	movf	sinf@sign& (0+255),w,b
  3382   001BBE  B4D8               	btfsc	status,2,c
  3383   001BC0  EFE4  F00D         	goto	u8571
  3384   001BC4  EFE6  F00D         	goto	u8570
  3385   001BC8                     u8571:
  3386   001BC8  EF1E  F00E         	goto	l6498
  3387   001BCC                     u8570:
  3388   001BCC                     
  3389                           ; BSR set to: 0
  3390   001BCC  0EDB               	movlw	219
  3391   001BCE  6E47               	movwf	___fladd@a^0,c
  3392   001BD0  0E0F               	movlw	15
  3393   001BD2  6E48               	movwf	(___fladd@a+1)^0,c
  3394   001BD4  0EC9               	movlw	201
  3395   001BD6  6E49               	movwf	(___fladd@a+2)^0,c
  3396   001BD8  0E3F               	movlw	63
  3397   001BDA  6E4A               	movwf	(___fladd@a+3)^0,c
  3398   001BDC  C09C  F043         	movff	sinf@x,___fladd@b
  3399   001BE0  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3400   001BE4  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3401   001BE8  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3402   001BEC  ECF9  F00F         	call	___fladd	;wreg free
  3403   001BF0  C043  F0AA         	movff	?___fladd,_sinf$3785
  3404   001BF4  C044  F0AB         	movff	?___fladd+1,_sinf$3785+1
  3405   001BF8  C045  F0AC         	movff	?___fladd+2,_sinf$3785+2
  3406   001BFC  C046  F0AD         	movff	?___fladd+3,_sinf$3785+3
  3407   001C00                     l6492:
  3408   001C00  C0AA  F053         	movff	_sinf$3785,___cosdf@x
  3409   001C04  C0AB  F054         	movff	_sinf$3785+1,___cosdf@x+1
  3410   001C08  C0AC  F055         	movff	_sinf$3785+2,___cosdf@x+2
  3411   001C0C  C0AD  F056         	movff	_sinf$3785+3,___cosdf@x+3
  3412   001C10  EC6A  F01E         	call	___cosdf	;wreg free
  3413   001C14  C053  F078         	movff	?___cosdf,___flneg@f1
  3414   001C18  C054  F079         	movff	?___cosdf+1,___flneg@f1+1
  3415   001C1C  C055  F07A         	movff	?___cosdf+2,___flneg@f1+2
  3416   001C20  C056  F07B         	movff	?___cosdf+3,___flneg@f1+3
  3417   001C24  EC4B  F02A         	call	___flneg	;wreg free
  3418   001C28  C078  F09C         	movff	?___flneg,?_sinf
  3419   001C2C  C079  F09D         	movff	?___flneg+1,?_sinf+1
  3420   001C30  C07A  F09E         	movff	?___flneg+2,?_sinf+2
  3421   001C34  C07B  F09F         	movff	?___flneg+3,?_sinf+3
  3422   001C38  EFF8  F00F         	goto	l1388
  3423   001C3C                     l6498:
  3424                           
  3425                           ; BSR set to: 0
  3426   001C3C  C09C  F043         	movff	sinf@x,___fladd@b
  3427   001C40  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3428   001C44  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3429   001C48  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3430   001C4C  0EDB               	movlw	219
  3431   001C4E  6E47               	movwf	___fladd@a^0,c
  3432   001C50  0E0F               	movlw	15
  3433   001C52  6E48               	movwf	(___fladd@a+1)^0,c
  3434   001C54  0EC9               	movlw	201
  3435   001C56  6E49               	movwf	(___fladd@a+2)^0,c
  3436   001C58  0EBF               	movlw	191
  3437   001C5A  6E4A               	movwf	(___fladd@a+3)^0,c
  3438   001C5C  ECF9  F00F         	call	___fladd	;wreg free
  3439   001C60  C043  F0AA         	movff	?___fladd,_sinf$3785
  3440   001C64  C044  F0AB         	movff	?___fladd+1,_sinf$3785+1
  3441   001C68  C045  F0AC         	movff	?___fladd+2,_sinf$3785+2
  3442   001C6C  C046  F0AD         	movff	?___fladd+3,_sinf$3785+3
  3443   001C70                     l6500:
  3444   001C70  C0AA  F053         	movff	_sinf$3785,___cosdf@x
  3445   001C74  C0AB  F054         	movff	_sinf$3785+1,___cosdf@x+1
  3446   001C78  C0AC  F055         	movff	_sinf$3785+2,___cosdf@x+2
  3447   001C7C  C0AD  F056         	movff	_sinf$3785+3,___cosdf@x+3
  3448   001C80  EC6A  F01E         	call	___cosdf	;wreg free
  3449   001C84  C053  F09C         	movff	?___cosdf,?_sinf
  3450   001C88  C054  F09D         	movff	?___cosdf+1,?_sinf+1
  3451   001C8C  C055  F09E         	movff	?___cosdf+2,?_sinf+2
  3452   001C90  C056  F09F         	movff	?___cosdf+3,?_sinf+3
  3453   001C94  EFF8  F00F         	goto	l1388
  3454   001C98                     l6504:
  3455                           
  3456                           ; BSR set to: 0
  3457   001C98  51A9               	movf	sinf@sign& (0+255),w,b
  3458   001C9A  A4D8               	btfss	status,2,c
  3459   001C9C  EF52  F00E         	goto	u8581
  3460   001CA0  EF54  F00E         	goto	u8580
  3461   001CA4                     u8581:
  3462   001CA4  EF7A  F00E         	goto	l6508
  3463   001CA8                     u8580:
  3464   001CA8                     
  3465                           ; BSR set to: 0
  3466   001CA8  0EDB               	movlw	219
  3467   001CAA  6E47               	movwf	___fladd@a^0,c
  3468   001CAC  0E0F               	movlw	15
  3469   001CAE  6E48               	movwf	(___fladd@a+1)^0,c
  3470   001CB0  0E49               	movlw	73
  3471   001CB2  6E49               	movwf	(___fladd@a+2)^0,c
  3472   001CB4  0EC0               	movlw	192
  3473   001CB6  6E4A               	movwf	(___fladd@a+3)^0,c
  3474   001CB8  C09C  F043         	movff	sinf@x,___fladd@b
  3475   001CBC  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3476   001CC0  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3477   001CC4  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3478   001CC8  ECF9  F00F         	call	___fladd	;wreg free
  3479   001CCC  C043  F078         	movff	?___fladd,___flneg@f1
  3480   001CD0  C044  F079         	movff	?___fladd+1,___flneg@f1+1
  3481   001CD4  C045  F07A         	movff	?___fladd+2,___flneg@f1+2
  3482   001CD8  C046  F07B         	movff	?___fladd+3,___flneg@f1+3
  3483   001CDC  EC4B  F02A         	call	___flneg	;wreg free
  3484   001CE0  C078  F0A0         	movff	?___flneg,_sinf$3509
  3485   001CE4  C079  F0A1         	movff	?___flneg+1,_sinf$3509+1
  3486   001CE8  C07A  F0A2         	movff	?___flneg+2,_sinf$3509+2
  3487   001CEC  C07B  F0A3         	movff	?___flneg+3,_sinf$3509+3
  3488   001CF0  EF9E  F00E         	goto	l6510
  3489   001CF4                     l6508:
  3490                           
  3491                           ; BSR set to: 0
  3492   001CF4  0EDB               	movlw	219
  3493   001CF6  6E47               	movwf	___fladd@a^0,c
  3494   001CF8  0E0F               	movlw	15
  3495   001CFA  6E48               	movwf	(___fladd@a+1)^0,c
  3496   001CFC  0E49               	movlw	73
  3497   001CFE  6E49               	movwf	(___fladd@a+2)^0,c
  3498   001D00  0E40               	movlw	64
  3499   001D02  6E4A               	movwf	(___fladd@a+3)^0,c
  3500   001D04  C09C  F043         	movff	sinf@x,___fladd@b
  3501   001D08  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3502   001D0C  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3503   001D10  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3504   001D14  ECF9  F00F         	call	___fladd	;wreg free
  3505   001D18  C043  F078         	movff	?___fladd,___flneg@f1
  3506   001D1C  C044  F079         	movff	?___fladd+1,___flneg@f1+1
  3507   001D20  C045  F07A         	movff	?___fladd+2,___flneg@f1+2
  3508   001D24  C046  F07B         	movff	?___fladd+3,___flneg@f1+3
  3509   001D28  EC4B  F02A         	call	___flneg	;wreg free
  3510   001D2C  C078  F0A0         	movff	?___flneg,_sinf$3509
  3511   001D30  C079  F0A1         	movff	?___flneg+1,_sinf$3509+1
  3512   001D34  C07A  F0A2         	movff	?___flneg+2,_sinf$3509+2
  3513   001D38  C07B  F0A3         	movff	?___flneg+3,_sinf$3509+3
  3514   001D3C                     l6510:
  3515   001D3C  C0A0  F053         	movff	_sinf$3509,___sindf@x
  3516   001D40  C0A1  F054         	movff	_sinf$3509+1,___sindf@x+1
  3517   001D44  C0A2  F055         	movff	_sinf$3509+2,___sindf@x+2
  3518   001D48  C0A3  F056         	movff	_sinf$3509+3,___sindf@x+3
  3519   001D4C  EC48  F01C         	call	___sindf	;wreg free
  3520   001D50  C053  F09C         	movff	?___sindf,?_sinf
  3521   001D54  C054  F09D         	movff	?___sindf+1,?_sinf+1
  3522   001D58  C055  F09E         	movff	?___sindf+2,?_sinf+2
  3523   001D5C  C056  F09F         	movff	?___sindf+3,?_sinf+3
  3524   001D60  EFF8  F00F         	goto	l1388
  3525   001D64                     l6514:
  3526                           
  3527                           ; BSR set to: 0
  3528   001D64  0ED6               	movlw	214
  3529   001D66  5DB2               	subwf	sinf@ux& (0+255),w,b
  3530   001D68  0E31               	movlw	49
  3531   001D6A  59B3               	subwfb	(sinf@ux+1)& (0+255),w,b
  3532   001D6C  0EE2               	movlw	226
  3533   001D6E  59B4               	subwfb	(sinf@ux+2)& (0+255),w,b
  3534   001D70  0E40               	movlw	64
  3535   001D72  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  3536   001D74  B0D8               	btfsc	status,0,c
  3537   001D76  EFBF  F00E         	goto	u8591
  3538   001D7A  EFC1  F00E         	goto	u8590
  3539   001D7E                     u8591:
  3540   001D7E  EF62  F00F         	goto	l6544
  3541   001D82                     u8590:
  3542   001D82                     
  3543                           ; BSR set to: 0
  3544   001D82  0EE0               	movlw	224
  3545   001D84  5DB2               	subwf	sinf@ux& (0+255),w,b
  3546   001D86  0EED               	movlw	237
  3547   001D88  59B3               	subwfb	(sinf@ux+1)& (0+255),w,b
  3548   001D8A  0EAF               	movlw	175
  3549   001D8C  59B4               	subwfb	(sinf@ux+2)& (0+255),w,b
  3550   001D8E  0E40               	movlw	64
  3551   001D90  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  3552   001D92  B0D8               	btfsc	status,0,c
  3553   001D94  EFCE  F00E         	goto	u8601
  3554   001D98  EFD0  F00E         	goto	u8600
  3555   001D9C                     u8601:
  3556   001D9C  EF10  F00F         	goto	l6534
  3557   001DA0                     u8600:
  3558   001DA0                     
  3559                           ; BSR set to: 0
  3560   001DA0  51A9               	movf	sinf@sign& (0+255),w,b
  3561   001DA2  B4D8               	btfsc	status,2,c
  3562   001DA4  EFD6  F00E         	goto	u8611
  3563   001DA8  EFD8  F00E         	goto	u8610
  3564   001DAC                     u8611:
  3565   001DAC  EFF4  F00E         	goto	l6528
  3566   001DB0                     u8610:
  3567   001DB0                     
  3568                           ; BSR set to: 0
  3569   001DB0  C09C  F043         	movff	sinf@x,___fladd@b
  3570   001DB4  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3571   001DB8  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3572   001DBC  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3573   001DC0  0EE4               	movlw	228
  3574   001DC2  6E47               	movwf	___fladd@a^0,c
  3575   001DC4  0ECB               	movlw	203
  3576   001DC6  6E48               	movwf	(___fladd@a+1)^0,c
  3577   001DC8  0E96               	movlw	150
  3578   001DCA  6E49               	movwf	(___fladd@a+2)^0,c
  3579   001DCC  0E40               	movlw	64
  3580   001DCE  6E4A               	movwf	(___fladd@a+3)^0,c
  3581   001DD0  ECF9  F00F         	call	___fladd	;wreg free
  3582   001DD4  C043  F0AA         	movff	?___fladd,_sinf$3785
  3583   001DD8  C044  F0AB         	movff	?___fladd+1,_sinf$3785+1
  3584   001DDC  C045  F0AC         	movff	?___fladd+2,_sinf$3785+2
  3585   001DE0  C046  F0AD         	movff	?___fladd+3,_sinf$3785+3
  3586   001DE4  EF38  F00E         	goto	l6500
  3587   001DE8                     l6528:
  3588                           
  3589                           ; BSR set to: 0
  3590   001DE8  0EE4               	movlw	228
  3591   001DEA  6E47               	movwf	___fladd@a^0,c
  3592   001DEC  0ECB               	movlw	203
  3593   001DEE  6E48               	movwf	(___fladd@a+1)^0,c
  3594   001DF0  0E96               	movlw	150
  3595   001DF2  6E49               	movwf	(___fladd@a+2)^0,c
  3596   001DF4  0EC0               	movlw	192
  3597   001DF6  6E4A               	movwf	(___fladd@a+3)^0,c
  3598   001DF8  C09C  F043         	movff	sinf@x,___fladd@b
  3599   001DFC  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3600   001E00  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3601   001E04  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3602   001E08  ECF9  F00F         	call	___fladd	;wreg free
  3603   001E0C  C043  F0AA         	movff	?___fladd,_sinf$3785
  3604   001E10  C044  F0AB         	movff	?___fladd+1,_sinf$3785+1
  3605   001E14  C045  F0AC         	movff	?___fladd+2,_sinf$3785+2
  3606   001E18  C046  F0AD         	movff	?___fladd+3,_sinf$3785+3
  3607   001E1C  EF00  F00E         	goto	l6492
  3608   001E20                     l6534:
  3609                           
  3610                           ; BSR set to: 0
  3611   001E20  51A9               	movf	sinf@sign& (0+255),w,b
  3612   001E22  A4D8               	btfss	status,2,c
  3613   001E24  EF16  F00F         	goto	u8621
  3614   001E28  EF18  F00F         	goto	u8620
  3615   001E2C                     u8621:
  3616   001E2C  EF34  F00F         	goto	l6538
  3617   001E30                     u8620:
  3618   001E30                     
  3619                           ; BSR set to: 0
  3620   001E30  C09C  F043         	movff	sinf@x,___fladd@b
  3621   001E34  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3622   001E38  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3623   001E3C  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3624   001E40  0EDB               	movlw	219
  3625   001E42  6E47               	movwf	___fladd@a^0,c
  3626   001E44  0E0F               	movlw	15
  3627   001E46  6E48               	movwf	(___fladd@a+1)^0,c
  3628   001E48  0EC9               	movlw	201
  3629   001E4A  6E49               	movwf	(___fladd@a+2)^0,c
  3630   001E4C  0EC0               	movlw	192
  3631   001E4E  6E4A               	movwf	(___fladd@a+3)^0,c
  3632   001E50  ECF9  F00F         	call	___fladd	;wreg free
  3633   001E54  C043  F0A4         	movff	?___fladd,_sinf$3510
  3634   001E58  C044  F0A5         	movff	?___fladd+1,_sinf$3510+1
  3635   001E5C  C045  F0A6         	movff	?___fladd+2,_sinf$3510+2
  3636   001E60  C046  F0A7         	movff	?___fladd+3,_sinf$3510+3
  3637   001E64  EF4E  F00F         	goto	l6540
  3638   001E68                     l6538:
  3639                           
  3640                           ; BSR set to: 0
  3641   001E68  C09C  F043         	movff	sinf@x,___fladd@b
  3642   001E6C  C09D  F044         	movff	sinf@x+1,___fladd@b+1
  3643   001E70  C09E  F045         	movff	sinf@x+2,___fladd@b+2
  3644   001E74  C09F  F046         	movff	sinf@x+3,___fladd@b+3
  3645   001E78  0EDB               	movlw	219
  3646   001E7A  6E47               	movwf	___fladd@a^0,c
  3647   001E7C  0E0F               	movlw	15
  3648   001E7E  6E48               	movwf	(___fladd@a+1)^0,c
  3649   001E80  0EC9               	movlw	201
  3650   001E82  6E49               	movwf	(___fladd@a+2)^0,c
  3651   001E84  0E40               	movlw	64
  3652   001E86  6E4A               	movwf	(___fladd@a+3)^0,c
  3653   001E88  ECF9  F00F         	call	___fladd	;wreg free
  3654   001E8C  C043  F0A4         	movff	?___fladd,_sinf$3510
  3655   001E90  C044  F0A5         	movff	?___fladd+1,_sinf$3510+1
  3656   001E94  C045  F0A6         	movff	?___fladd+2,_sinf$3510+2
  3657   001E98  C046  F0A7         	movff	?___fladd+3,_sinf$3510+3
  3658   001E9C                     l6540:
  3659   001E9C  C0A4  F053         	movff	_sinf$3510,___sindf@x
  3660   001EA0  C0A5  F054         	movff	_sinf$3510+1,___sindf@x+1
  3661   001EA4  C0A6  F055         	movff	_sinf$3510+2,___sindf@x+2
  3662   001EA8  C0A7  F056         	movff	_sinf$3510+3,___sindf@x+3
  3663   001EAC  EC48  F01C         	call	___sindf	;wreg free
  3664   001EB0  C053  F09C         	movff	?___sindf,?_sinf
  3665   001EB4  C054  F09D         	movff	?___sindf+1,?_sinf+1
  3666   001EB8  C055  F09E         	movff	?___sindf+2,?_sinf+2
  3667   001EBC  C056  F09F         	movff	?___sindf+3,?_sinf+3
  3668   001EC0  EFF8  F00F         	goto	l1388
  3669   001EC4                     l6544:
  3670                           
  3671                           ; BSR set to: 0
  3672   001EC4  0E80               	movlw	128
  3673   001EC6  5DB4               	subwf	(sinf@ux+2)& (0+255),w,b
  3674   001EC8  0E7F               	movlw	127
  3675   001ECA  59B5               	subwfb	(sinf@ux+3)& (0+255),w,b
  3676   001ECC  A0D8               	btfss	status,0,c
  3677   001ECE  EF6B  F00F         	goto	u8631
  3678   001ED2  EF6D  F00F         	goto	u8630
  3679   001ED6                     u8631:
  3680   001ED6  EF7F  F00F         	goto	l6552
  3681   001EDA                     u8630:
  3682   001EDA                     
  3683                           ; BSR set to: 0
  3684   001EDA  0EFF               	movlw	255
  3685   001EDC  13B2               	iorwf	sinf@ux& (0+255),f,b
  3686   001EDE  0EFF               	movlw	255
  3687   001EE0  13B3               	iorwf	(sinf@ux+1)& (0+255),f,b
  3688   001EE2  0EFF               	movlw	255
  3689   001EE4  13B4               	iorwf	(sinf@ux+2)& (0+255),f,b
  3690   001EE6  0E00               	movlw	0
  3691   001EE8  13B5               	iorwf	(sinf@ux+3)& (0+255),f,b
  3692   001EEA                     
  3693                           ; BSR set to: 0
  3694   001EEA  C0B2  F09C         	movff	sinf@ux,?_sinf
  3695   001EEE  C0B3  F09D         	movff	sinf@ux+1,?_sinf+1
  3696   001EF2  C0B4  F09E         	movff	sinf@ux+2,?_sinf+2
  3697   001EF6  C0B5  F09F         	movff	sinf@ux+3,?_sinf+3
  3698   001EFA  EFF8  F00F         	goto	l1388
  3699   001EFE                     l6552:
  3700                           
  3701                           ; BSR set to: 0
  3702   001EFE  C09C  F07C         	movff	sinf@x,___rem_pio2f@x
  3703   001F02  C09D  F07D         	movff	sinf@x+1,___rem_pio2f@x+1
  3704   001F06  C09E  F07E         	movff	sinf@x+2,___rem_pio2f@x+2
  3705   001F0A  C09F  F07F         	movff	sinf@x+3,___rem_pio2f@x+3
  3706   001F0E  0EAE               	movlw	low sinf@y
  3707   001F10  6F80               	movwf	___rem_pio2f@y& (0+255),b
  3708   001F12  EC50  F016         	call	___rem_pio2f	;wreg free
  3709   001F16  0100               	movlb	0	; () banked
  3710   001F18  517C               	movf	?___rem_pio2f& (0+255),w,b
  3711   001F1A  0B03               	andlw	3
  3712   001F1C  6FA8               	movwf	sinf@n& (0+255),b
  3713   001F1E  EFE9  F00F         	goto	l6570
  3714   001F22                     l6554:
  3715                           
  3716                           ; BSR set to: 0
  3717   001F22  C0AE  F078         	movff	sinf@y,___flneg@f1
  3718   001F26  C0AF  F079         	movff	sinf@y+1,___flneg@f1+1
  3719   001F2A  C0B0  F07A         	movff	sinf@y+2,___flneg@f1+2
  3720   001F2E  C0B1  F07B         	movff	sinf@y+3,___flneg@f1+3
  3721   001F32  EC4B  F02A         	call	___flneg	;wreg free
  3722   001F36  C078  F0AE         	movff	?___flneg,sinf@y
  3723   001F3A  C079  F0AF         	movff	?___flneg+1,sinf@y+1
  3724   001F3E  C07A  F0B0         	movff	?___flneg+2,sinf@y+2
  3725   001F42  C07B  F0B1         	movff	?___flneg+3,sinf@y+3
  3726   001F46                     l6556:
  3727   001F46  C0AE  F053         	movff	sinf@y,___sindf@x
  3728   001F4A  C0AF  F054         	movff	sinf@y+1,___sindf@x+1
  3729   001F4E  C0B0  F055         	movff	sinf@y+2,___sindf@x+2
  3730   001F52  C0B1  F056         	movff	sinf@y+3,___sindf@x+3
  3731   001F56  EC48  F01C         	call	___sindf	;wreg free
  3732   001F5A  C053  F09C         	movff	?___sindf,?_sinf
  3733   001F5E  C054  F09D         	movff	?___sindf+1,?_sinf+1
  3734   001F62  C055  F09E         	movff	?___sindf+2,?_sinf+2
  3735   001F66  C056  F09F         	movff	?___sindf+3,?_sinf+3
  3736   001F6A  EFF8  F00F         	goto	l1388
  3737   001F6E                     l6560:
  3738                           
  3739                           ; BSR set to: 0
  3740   001F6E  C0AE  F053         	movff	sinf@y,___cosdf@x
  3741   001F72  C0AF  F054         	movff	sinf@y+1,___cosdf@x+1
  3742   001F76  C0B0  F055         	movff	sinf@y+2,___cosdf@x+2
  3743   001F7A  C0B1  F056         	movff	sinf@y+3,___cosdf@x+3
  3744   001F7E  EC6A  F01E         	call	___cosdf	;wreg free
  3745   001F82  C053  F09C         	movff	?___cosdf,?_sinf
  3746   001F86  C054  F09D         	movff	?___cosdf+1,?_sinf+1
  3747   001F8A  C055  F09E         	movff	?___cosdf+2,?_sinf+2
  3748   001F8E  C056  F09F         	movff	?___cosdf+3,?_sinf+3
  3749   001F92  EFF8  F00F         	goto	l1388
  3750   001F96                     l6564:
  3751                           
  3752                           ; BSR set to: 0
  3753   001F96  C0AE  F053         	movff	sinf@y,___cosdf@x
  3754   001F9A  C0AF  F054         	movff	sinf@y+1,___cosdf@x+1
  3755   001F9E  C0B0  F055         	movff	sinf@y+2,___cosdf@x+2
  3756   001FA2  C0B1  F056         	movff	sinf@y+3,___cosdf@x+3
  3757   001FA6  EC6A  F01E         	call	___cosdf	;wreg free
  3758   001FAA  C053  F078         	movff	?___cosdf,___flneg@f1
  3759   001FAE  C054  F079         	movff	?___cosdf+1,___flneg@f1+1
  3760   001FB2  C055  F07A         	movff	?___cosdf+2,___flneg@f1+2
  3761   001FB6  C056  F07B         	movff	?___cosdf+3,___flneg@f1+3
  3762   001FBA  EC4B  F02A         	call	___flneg	;wreg free
  3763   001FBE  C078  F09C         	movff	?___flneg,?_sinf
  3764   001FC2  C079  F09D         	movff	?___flneg+1,?_sinf+1
  3765   001FC6  C07A  F09E         	movff	?___flneg+2,?_sinf+2
  3766   001FCA  C07B  F09F         	movff	?___flneg+3,?_sinf+3
  3767   001FCE  EFF8  F00F         	goto	l1388
  3768   001FD2                     l6570:
  3769                           
  3770                           ; BSR set to: 0
  3771   001FD2  51A8               	movf	sinf@n& (0+255),w,b
  3772                           
  3773                           ; Switch size 1, requested type "simple"
  3774                           ; Number of cases is 3, Range of values is 0 to 2
  3775                           ; switch strategies available:
  3776                           ; Name         Instructions Cycles
  3777                           ; simple_byte           10     6 (average)
  3778                           ;	Chosen strategy is simple_byte
  3779   001FD4  0A00               	xorlw	0	; case 0
  3780   001FD6  B4D8               	btfsc	status,2,c
  3781   001FD8  EFA3  F00F         	goto	l6556
  3782   001FDC  0A01               	xorlw	1	; case 1
  3783   001FDE  B4D8               	btfsc	status,2,c
  3784   001FE0  EFB7  F00F         	goto	l6560
  3785   001FE4  0A03               	xorlw	3	; case 2
  3786   001FE6  B4D8               	btfsc	status,2,c
  3787   001FE8  EF91  F00F         	goto	l6554
  3788   001FEC  EFCB  F00F         	goto	l6564
  3789   001FF0                     l1388:
  3790   001FF0  0012               	return		;funcret
  3791   001FF2                     __end_of_sinf:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function ___sindf *****************
  3795 ;; Defined at:
  3796 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__sindf.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  x               4   82[COMRAM] float 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  z               4   24[BANK0 ] float 
  3801 ;;  s               4   20[BANK0 ] float 
  3802 ;;  w               4    4[BANK0 ] float 
  3803 ;;  r               4    0[BANK0 ] float 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  4   82[COMRAM] float 
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3814 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3816 ;;      Totals:         4      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;Total ram usage:       32 bytes
  3818 ;; Hardware stack levels used: 1
  3819 ;; Hardware stack levels required when called: 2
  3820 ;; This function calls:
  3821 ;;		___fladd
  3822 ;;		___flmul
  3823 ;; This function is called by:
  3824 ;;		_sinf
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text11
  3829   003890                     __ptext11:
  3830                           	callstack 0
  3831   003890                     ___sindf:
  3832                           	callstack 26
  3833   003890  C053  F011         	movff	___sindf@x,___flmul@b
  3834   003894  C054  F012         	movff	___sindf@x+1,___flmul@b+1
  3835   003898  C055  F013         	movff	___sindf@x+2,___flmul@b+2
  3836   00389C  C056  F014         	movff	___sindf@x+3,___flmul@b+3
  3837   0038A0  C053  F015         	movff	___sindf@x,___flmul@a
  3838   0038A4  C054  F016         	movff	___sindf@x+1,___flmul@a+1
  3839   0038A8  C055  F017         	movff	___sindf@x+2,___flmul@a+2
  3840   0038AC  C056  F018         	movff	___sindf@x+3,___flmul@a+3
  3841   0038B0  EC59  F012         	call	___flmul	;wreg free
  3842   0038B4  C011  F078         	movff	?___flmul,___sindf@z
  3843   0038B8  C012  F079         	movff	?___flmul+1,___sindf@z+1
  3844   0038BC  C013  F07A         	movff	?___flmul+2,___sindf@z+2
  3845   0038C0  C014  F07B         	movff	?___flmul+3,___sindf@z+3
  3846   0038C4  C078  F011         	movff	___sindf@z,___flmul@b
  3847   0038C8  C079  F012         	movff	___sindf@z+1,___flmul@b+1
  3848   0038CC  C07A  F013         	movff	___sindf@z+2,___flmul@b+2
  3849   0038D0  C07B  F014         	movff	___sindf@z+3,___flmul@b+3
  3850   0038D4  C078  F015         	movff	___sindf@z,___flmul@a
  3851   0038D8  C079  F016         	movff	___sindf@z+1,___flmul@a+1
  3852   0038DC  C07A  F017         	movff	___sindf@z+2,___flmul@a+2
  3853   0038E0  C07B  F018         	movff	___sindf@z+3,___flmul@a+3
  3854   0038E4  EC59  F012         	call	___flmul	;wreg free
  3855   0038E8  C011  F064         	movff	?___flmul,___sindf@w
  3856   0038EC  C012  F065         	movff	?___flmul+1,___sindf@w+1
  3857   0038F0  C013  F066         	movff	?___flmul+2,___sindf@w+2
  3858   0038F4  C014  F067         	movff	?___flmul+3,___sindf@w+3
  3859   0038F8  0E3C               	movlw	60
  3860   0038FA  6E15               	movwf	___flmul@a^0,c
  3861   0038FC  0E6C               	movlw	108
  3862   0038FE  6E16               	movwf	(___flmul@a+1)^0,c
  3863   003900  0E36               	movlw	54
  3864   003902  6E17               	movwf	(___flmul@a+2)^0,c
  3865   003904  0E36               	movlw	54
  3866   003906  6E18               	movwf	(___flmul@a+3)^0,c
  3867   003908  C078  F011         	movff	___sindf@z,___flmul@b
  3868   00390C  C079  F012         	movff	___sindf@z+1,___flmul@b+1
  3869   003910  C07A  F013         	movff	___sindf@z+2,___flmul@b+2
  3870   003914  C07B  F014         	movff	___sindf@z+3,___flmul@b+3
  3871   003918  EC59  F012         	call	___flmul	;wreg free
  3872   00391C  C011  F043         	movff	?___flmul,___fladd@b
  3873   003920  C012  F044         	movff	?___flmul+1,___fladd@b+1
  3874   003924  C013  F045         	movff	?___flmul+2,___fladd@b+2
  3875   003928  C014  F046         	movff	?___flmul+3,___fladd@b+3
  3876   00392C  0ECF               	movlw	207
  3877   00392E  6E47               	movwf	___fladd@a^0,c
  3878   003930  0E07               	movlw	7
  3879   003932  6E48               	movwf	(___fladd@a+1)^0,c
  3880   003934  0E50               	movlw	80
  3881   003936  6E49               	movwf	(___fladd@a+2)^0,c
  3882   003938  0EB9               	movlw	185
  3883   00393A  6E4A               	movwf	(___fladd@a+3)^0,c
  3884   00393C  ECF9  F00F         	call	___fladd	;wreg free
  3885   003940  C043  F060         	movff	?___fladd,___sindf@r
  3886   003944  C044  F061         	movff	?___fladd+1,___sindf@r+1
  3887   003948  C045  F062         	movff	?___fladd+2,___sindf@r+2
  3888   00394C  C046  F063         	movff	?___fladd+3,___sindf@r+3
  3889   003950  C078  F011         	movff	___sindf@z,___flmul@b
  3890   003954  C079  F012         	movff	___sindf@z+1,___flmul@b+1
  3891   003958  C07A  F013         	movff	___sindf@z+2,___flmul@b+2
  3892   00395C  C07B  F014         	movff	___sindf@z+3,___flmul@b+3
  3893   003960  C053  F015         	movff	___sindf@x,___flmul@a
  3894   003964  C054  F016         	movff	___sindf@x+1,___flmul@a+1
  3895   003968  C055  F017         	movff	___sindf@x+2,___flmul@a+2
  3896   00396C  C056  F018         	movff	___sindf@x+3,___flmul@a+3
  3897   003970  EC59  F012         	call	___flmul	;wreg free
  3898   003974  C011  F074         	movff	?___flmul,___sindf@s
  3899   003978  C012  F075         	movff	?___flmul+1,___sindf@s+1
  3900   00397C  C013  F076         	movff	?___flmul+2,___sindf@s+2
  3901   003980  C014  F077         	movff	?___flmul+3,___sindf@s+3
  3902   003984  0EAB               	movlw	171
  3903   003986  6E47               	movwf	___fladd@a^0,c
  3904   003988  0EAA               	movlw	170
  3905   00398A  6E48               	movwf	(___fladd@a+1)^0,c
  3906   00398C  0E2A               	movlw	42
  3907   00398E  6E49               	movwf	(___fladd@a+2)^0,c
  3908   003990  0EBE               	movlw	190
  3909   003992  6E4A               	movwf	(___fladd@a+3)^0,c
  3910   003994  0E84               	movlw	132
  3911   003996  6E15               	movwf	___flmul@a^0,c
  3912   003998  0E88               	movlw	136
  3913   00399A  6E16               	movwf	(___flmul@a+1)^0,c
  3914   00399C  0E08               	movlw	8
  3915   00399E  6E17               	movwf	(___flmul@a+2)^0,c
  3916   0039A0  0E3C               	movlw	60
  3917   0039A2  6E18               	movwf	(___flmul@a+3)^0,c
  3918   0039A4  C078  F011         	movff	___sindf@z,___flmul@b
  3919   0039A8  C079  F012         	movff	___sindf@z+1,___flmul@b+1
  3920   0039AC  C07A  F013         	movff	___sindf@z+2,___flmul@b+2
  3921   0039B0  C07B  F014         	movff	___sindf@z+3,___flmul@b+3
  3922   0039B4  EC59  F012         	call	___flmul	;wreg free
  3923   0039B8  C011  F043         	movff	?___flmul,___fladd@b
  3924   0039BC  C012  F044         	movff	?___flmul+1,___fladd@b+1
  3925   0039C0  C013  F045         	movff	?___flmul+2,___fladd@b+2
  3926   0039C4  C014  F046         	movff	?___flmul+3,___fladd@b+3
  3927   0039C8  ECF9  F00F         	call	___fladd	;wreg free
  3928   0039CC  C043  F068         	movff	?___fladd,___sindf$3790
  3929   0039D0  C044  F069         	movff	?___fladd+1,___sindf$3790+1
  3930   0039D4  C045  F06A         	movff	?___fladd+2,___sindf$3790+2
  3931   0039D8  C046  F06B         	movff	?___fladd+3,___sindf$3790+3
  3932   0039DC  C064  F015         	movff	___sindf@w,___flmul@a
  3933   0039E0  C065  F016         	movff	___sindf@w+1,___flmul@a+1
  3934   0039E4  C066  F017         	movff	___sindf@w+2,___flmul@a+2
  3935   0039E8  C067  F018         	movff	___sindf@w+3,___flmul@a+3
  3936   0039EC  C074  F011         	movff	___sindf@s,___flmul@b
  3937   0039F0  C075  F012         	movff	___sindf@s+1,___flmul@b+1
  3938   0039F4  C076  F013         	movff	___sindf@s+2,___flmul@b+2
  3939   0039F8  C077  F014         	movff	___sindf@s+3,___flmul@b+3
  3940   0039FC  EC59  F012         	call	___flmul	;wreg free
  3941   003A00  C011  F06C         	movff	?___flmul,___sindf$3791
  3942   003A04  C012  F06D         	movff	?___flmul+1,___sindf$3791+1
  3943   003A08  C013  F06E         	movff	?___flmul+2,___sindf$3791+2
  3944   003A0C  C014  F06F         	movff	?___flmul+3,___sindf$3791+3
  3945   003A10  C053  F047         	movff	___sindf@x,___fladd@a
  3946   003A14  C054  F048         	movff	___sindf@x+1,___fladd@a+1
  3947   003A18  C055  F049         	movff	___sindf@x+2,___fladd@a+2
  3948   003A1C  C056  F04A         	movff	___sindf@x+3,___fladd@a+3
  3949   003A20  C074  F015         	movff	___sindf@s,___flmul@a
  3950   003A24  C075  F016         	movff	___sindf@s+1,___flmul@a+1
  3951   003A28  C076  F017         	movff	___sindf@s+2,___flmul@a+2
  3952   003A2C  C077  F018         	movff	___sindf@s+3,___flmul@a+3
  3953   003A30  C068  F011         	movff	___sindf$3790,___flmul@b
  3954   003A34  C069  F012         	movff	___sindf$3790+1,___flmul@b+1
  3955   003A38  C06A  F013         	movff	___sindf$3790+2,___flmul@b+2
  3956   003A3C  C06B  F014         	movff	___sindf$3790+3,___flmul@b+3
  3957   003A40  EC59  F012         	call	___flmul	;wreg free
  3958   003A44  C011  F043         	movff	?___flmul,___fladd@b
  3959   003A48  C012  F044         	movff	?___flmul+1,___fladd@b+1
  3960   003A4C  C013  F045         	movff	?___flmul+2,___fladd@b+2
  3961   003A50  C014  F046         	movff	?___flmul+3,___fladd@b+3
  3962   003A54  ECF9  F00F         	call	___fladd	;wreg free
  3963   003A58  C043  F070         	movff	?___fladd,___sindf$3792
  3964   003A5C  C044  F071         	movff	?___fladd+1,___sindf$3792+1
  3965   003A60  C045  F072         	movff	?___fladd+2,___sindf$3792+2
  3966   003A64  C046  F073         	movff	?___fladd+3,___sindf$3792+3
  3967   003A68  C070  F043         	movff	___sindf$3792,___fladd@b
  3968   003A6C  C071  F044         	movff	___sindf$3792+1,___fladd@b+1
  3969   003A70  C072  F045         	movff	___sindf$3792+2,___fladd@b+2
  3970   003A74  C073  F046         	movff	___sindf$3792+3,___fladd@b+3
  3971   003A78  C060  F015         	movff	___sindf@r,___flmul@a
  3972   003A7C  C061  F016         	movff	___sindf@r+1,___flmul@a+1
  3973   003A80  C062  F017         	movff	___sindf@r+2,___flmul@a+2
  3974   003A84  C063  F018         	movff	___sindf@r+3,___flmul@a+3
  3975   003A88  C06C  F011         	movff	___sindf$3791,___flmul@b
  3976   003A8C  C06D  F012         	movff	___sindf$3791+1,___flmul@b+1
  3977   003A90  C06E  F013         	movff	___sindf$3791+2,___flmul@b+2
  3978   003A94  C06F  F014         	movff	___sindf$3791+3,___flmul@b+3
  3979   003A98  EC59  F012         	call	___flmul	;wreg free
  3980   003A9C  C011  F047         	movff	?___flmul,___fladd@a
  3981   003AA0  C012  F048         	movff	?___flmul+1,___fladd@a+1
  3982   003AA4  C013  F049         	movff	?___flmul+2,___fladd@a+2
  3983   003AA8  C014  F04A         	movff	?___flmul+3,___fladd@a+3
  3984   003AAC  ECF9  F00F         	call	___fladd	;wreg free
  3985   003AB0  C043  F053         	movff	?___fladd,?___sindf
  3986   003AB4  C044  F054         	movff	?___fladd+1,?___sindf+1
  3987   003AB8  C045  F055         	movff	?___fladd+2,?___sindf+2
  3988   003ABC  C046  F056         	movff	?___fladd+3,?___sindf+3
  3989   003AC0  0012               	return		;funcret
  3990   003AC2                     __end_of___sindf:
  3991                           	callstack 0
  3992                           
  3993 ;; *************** function ___rem_pio2f *****************
  3994 ;; Defined at:
  3995 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__rem_pio2f.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  x               4   28[BANK0 ] float 
  3998 ;;  y               1   32[BANK0 ] PTR 
  3999 ;;		 -> sinf@y(4), 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  n               4   56[BANK0 ] long 
  4002 ;;  t               4   52[BANK0 ] float 
  4003 ;;  fn              4   48[BANK0 ] float 
  4004 ;;  ux              4   44[BANK0 ] struct .
  4005 ;;  ty              4   35[BANK0 ] [1]
  4006 ;;  sign            1   43[BANK0 ] _Bool 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  2   28[BANK0 ] int 
  4009 ;; Registers used:
  4010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4016 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;Total ram usage:       32 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 3
  4023 ;; This function calls:
  4024 ;;		___fladd
  4025 ;;		___flmul
  4026 ;;		___flneg
  4027 ;;		___flsub
  4028 ;;		___fltol
  4029 ;;		___xxtofl
  4030 ;;		_fabsf
  4031 ;; This function is called by:
  4032 ;;		_sinf
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text12
  4037   002CA0                     __ptext12:
  4038                           	callstack 0
  4039   002CA0                     ___rem_pio2f:
  4040                           	callstack 25
  4041   002CA0  C115  F08C         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  4042   002CA4  C116  F08D         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  4043   002CA8  C117  F08E         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  4044   002CAC  C118  F08F         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  4045   002CB0  C07C  F08C         	movff	___rem_pio2f@x,___rem_pio2f@ux
  4046   002CB4  C07D  F08D         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  4047   002CB8  C07E  F08E         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  4048   002CBC  C07F  F08F         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  4049   002CC0  0100               	movlb	0	; () banked
  4050   002CC2  BF8F               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  4051   002CC4  EF66  F016         	goto	u8361
  4052   002CC8  EF69  F016         	goto	u8360
  4053   002CCC                     u8361:
  4054   002CCC  0E01               	movlw	1
  4055   002CCE  EF6A  F016         	goto	u8370
  4056   002CD2                     u8360:
  4057   002CD2  0E00               	movlw	0
  4058   002CD4                     u8370:
  4059   002CD4  6F8B               	movwf	___rem_pio2f@sign& (0+255),b
  4060   002CD6                     
  4061                           ; BSR set to: 0
  4062   002CD6  9F8F               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  4063   002CD8                     
  4064                           ; BSR set to: 0
  4065   002CD8  0EDB               	movlw	219
  4066   002CDA  5D8C               	subwf	___rem_pio2f@ux& (0+255),w,b
  4067   002CDC  0E0F               	movlw	15
  4068   002CDE  598D               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  4069   002CE0  0EC9               	movlw	201
  4070   002CE2  598E               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  4071   002CE4  0E4D               	movlw	77
  4072   002CE6  598F               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  4073   002CE8  B0D8               	btfsc	status,0,c
  4074   002CEA  EF79  F016         	goto	u8381
  4075   002CEE  EF7B  F016         	goto	u8380
  4076   002CF2                     u8381:
  4077   002CF2  EF67  F017         	goto	l6410
  4078   002CF6                     u8380:
  4079   002CF6                     
  4080                           ; BSR set to: 0
  4081   002CF6  C07C  F003         	movff	___rem_pio2f@x,fabsf@x
  4082   002CFA  C07D  F004         	movff	___rem_pio2f@x+1,fabsf@x+1
  4083   002CFE  C07E  F005         	movff	___rem_pio2f@x+2,fabsf@x+2
  4084   002D02  C07F  F006         	movff	___rem_pio2f@x+3,fabsf@x+3
  4085   002D06  EC83  F02A         	call	_fabsf	;wreg free
  4086   002D0A  C003  F094         	movff	?_fabsf,___rem_pio2f@t
  4087   002D0E  C004  F095         	movff	?_fabsf+1,___rem_pio2f@t+1
  4088   002D12  C005  F096         	movff	?_fabsf+2,___rem_pio2f@t+2
  4089   002D16  C006  F097         	movff	?_fabsf+3,___rem_pio2f@t+3
  4090   002D1A  0E00               	movlw	0
  4091   002D1C  6E47               	movwf	___fladd@a^0,c
  4092   002D1E  0E00               	movlw	0
  4093   002D20  6E48               	movwf	(___fladd@a+1)^0,c
  4094   002D22  0E00               	movlw	0
  4095   002D24  6E49               	movwf	(___fladd@a+2)^0,c
  4096   002D26  0E3F               	movlw	63
  4097   002D28  6E4A               	movwf	(___fladd@a+3)^0,c
  4098   002D2A  0E83               	movlw	131
  4099   002D2C  6E15               	movwf	___flmul@a^0,c
  4100   002D2E  0EF9               	movlw	249
  4101   002D30  6E16               	movwf	(___flmul@a+1)^0,c
  4102   002D32  0E22               	movlw	34
  4103   002D34  6E17               	movwf	(___flmul@a+2)^0,c
  4104   002D36  0E3F               	movlw	63
  4105   002D38  6E18               	movwf	(___flmul@a+3)^0,c
  4106   002D3A  C094  F011         	movff	___rem_pio2f@t,___flmul@b
  4107   002D3E  C095  F012         	movff	___rem_pio2f@t+1,___flmul@b+1
  4108   002D42  C096  F013         	movff	___rem_pio2f@t+2,___flmul@b+2
  4109   002D46  C097  F014         	movff	___rem_pio2f@t+3,___flmul@b+3
  4110   002D4A  EC59  F012         	call	___flmul	;wreg free
  4111   002D4E  C011  F043         	movff	?___flmul,___fladd@b
  4112   002D52  C012  F044         	movff	?___flmul+1,___fladd@b+1
  4113   002D56  C013  F045         	movff	?___flmul+2,___fladd@b+2
  4114   002D5A  C014  F046         	movff	?___flmul+3,___fladd@b+3
  4115   002D5E  ECF9  F00F         	call	___fladd	;wreg free
  4116   002D62  C043  F053         	movff	?___fladd,___fltol@f1
  4117   002D66  C044  F054         	movff	?___fladd+1,___fltol@f1+1
  4118   002D6A  C045  F055         	movff	?___fladd+2,___fltol@f1+2
  4119   002D6E  C046  F056         	movff	?___fladd+3,___fltol@f1+3
  4120   002D72  ECAC  F024         	call	___fltol	;wreg free
  4121   002D76  C053  F098         	movff	?___fltol,___rem_pio2f@n
  4122   002D7A  C054  F099         	movff	?___fltol+1,___rem_pio2f@n+1
  4123   002D7E  C055  F09A         	movff	?___fltol+2,___rem_pio2f@n+2
  4124   002D82  C056  F09B         	movff	?___fltol+3,___rem_pio2f@n+3
  4125   002D86  C098  F003         	movff	___rem_pio2f@n,___xxtofl@val
  4126   002D8A  C099  F004         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  4127   002D8E  C09A  F005         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  4128   002D92  C09B  F006         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  4129   002D96  0E01               	movlw	1
  4130   002D98  EC67  F020         	call	___xxtofl
  4131   002D9C  C003  F090         	movff	?___xxtofl,___rem_pio2f@fn
  4132   002DA0  C004  F091         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  4133   002DA4  C005  F092         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  4134   002DA8  C006  F093         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  4135   002DAC  0EDA               	movlw	218
  4136   002DAE  6E15               	movwf	___flmul@a^0,c
  4137   002DB0  0E0F               	movlw	15
  4138   002DB2  6E16               	movwf	(___flmul@a+1)^0,c
  4139   002DB4  0EC9               	movlw	201
  4140   002DB6  6E17               	movwf	(___flmul@a+2)^0,c
  4141   002DB8  0E3F               	movlw	63
  4142   002DBA  6E18               	movwf	(___flmul@a+3)^0,c
  4143   002DBC  C090  F011         	movff	___rem_pio2f@fn,___flmul@b
  4144   002DC0  C091  F012         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4145   002DC4  C092  F013         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4146   002DC8  C093  F014         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4147   002DCC  EC59  F012         	call	___flmul	;wreg free
  4148   002DD0  C011  F057         	movff	?___flmul,___flsub@a
  4149   002DD4  C012  F058         	movff	?___flmul+1,___flsub@a+1
  4150   002DD8  C013  F059         	movff	?___flmul+2,___flsub@a+2
  4151   002DDC  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  4152   002DE0  C094  F053         	movff	___rem_pio2f@t,___flsub@b
  4153   002DE4  C095  F054         	movff	___rem_pio2f@t+1,___flsub@b+1
  4154   002DE8  C096  F055         	movff	___rem_pio2f@t+2,___flsub@b+2
  4155   002DEC  C097  F056         	movff	___rem_pio2f@t+3,___flsub@b+3
  4156   002DF0  ECA9  F029         	call	___flsub	;wreg free
  4157   002DF4  C053  F087         	movff	?___flsub,___rem_pio2f$3789
  4158   002DF8  C054  F088         	movff	?___flsub+1,___rem_pio2f$3789+1
  4159   002DFC  C055  F089         	movff	?___flsub+2,___rem_pio2f$3789+2
  4160   002E00  C056  F08A         	movff	?___flsub+3,___rem_pio2f$3789+3
  4161   002E04  C087  F053         	movff	___rem_pio2f$3789,___flsub@b
  4162   002E08  C088  F054         	movff	___rem_pio2f$3789+1,___flsub@b+1
  4163   002E0C  C089  F055         	movff	___rem_pio2f$3789+2,___flsub@b+2
  4164   002E10  C08A  F056         	movff	___rem_pio2f$3789+3,___flsub@b+3
  4165   002E14  0EA3               	movlw	163
  4166   002E16  6E15               	movwf	___flmul@a^0,c
  4167   002E18  0E85               	movlw	133
  4168   002E1A  6E16               	movwf	(___flmul@a+1)^0,c
  4169   002E1C  0E88               	movlw	136
  4170   002E1E  6E17               	movwf	(___flmul@a+2)^0,c
  4171   002E20  0E32               	movlw	50
  4172   002E22  6E18               	movwf	(___flmul@a+3)^0,c
  4173   002E24  C090  F011         	movff	___rem_pio2f@fn,___flmul@b
  4174   002E28  C091  F012         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4175   002E2C  C092  F013         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4176   002E30  C093  F014         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4177   002E34  EC59  F012         	call	___flmul	;wreg free
  4178   002E38  C011  F057         	movff	?___flmul,___flsub@a
  4179   002E3C  C012  F058         	movff	?___flmul+1,___flsub@a+1
  4180   002E40  C013  F059         	movff	?___flmul+2,___flsub@a+2
  4181   002E44  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  4182   002E48  ECA9  F029         	call	___flsub	;wreg free
  4183   002E4C  0100               	movlb	0	; () banked
  4184   002E4E  5180               	movf	___rem_pio2f@y& (0+255),w,b
  4185   002E50  6ED9               	movwf	fsr2l,c
  4186   002E52  6ADA               	clrf	fsr2h,c
  4187   002E54  C053  FFDE         	movff	?___flsub,postinc2
  4188   002E58  C054  FFDE         	movff	?___flsub+1,postinc2
  4189   002E5C  C055  FFDE         	movff	?___flsub+2,postinc2
  4190   002E60  C056  FFDE         	movff	?___flsub+3,postinc2
  4191   002E64                     
  4192                           ; BSR set to: 0
  4193   002E64  518B               	movf	___rem_pio2f@sign& (0+255),w,b
  4194   002E66  B4D8               	btfsc	status,2,c
  4195   002E68  EF38  F017         	goto	u8391
  4196   002E6C  EF3A  F017         	goto	u8390
  4197   002E70                     u8391:
  4198   002E70  EF61  F017         	goto	l1438
  4199   002E74                     u8390:
  4200   002E74                     l6404:
  4201                           
  4202                           ; BSR set to: 0
  4203   002E74  5180               	movf	___rem_pio2f@y& (0+255),w,b
  4204   002E76  6ED9               	movwf	fsr2l,c
  4205   002E78  6ADA               	clrf	fsr2h,c
  4206   002E7A  CFDE F078          	movff	postinc2,___flneg@f1
  4207   002E7E  CFDE F079          	movff	postinc2,___flneg@f1+1
  4208   002E82  CFDE F07A          	movff	postinc2,___flneg@f1+2
  4209   002E86  CFDE F07B          	movff	postinc2,___flneg@f1+3
  4210   002E8A  EC4B  F02A         	call	___flneg	;wreg free
  4211   002E8E  0100               	movlb	0	; () banked
  4212   002E90  5180               	movf	___rem_pio2f@y& (0+255),w,b
  4213   002E92  6ED9               	movwf	fsr2l,c
  4214   002E94  6ADA               	clrf	fsr2h,c
  4215   002E96  C078  FFDE         	movff	?___flneg,postinc2
  4216   002E9A  C079  FFDE         	movff	?___flneg+1,postinc2
  4217   002E9E  C07A  FFDE         	movff	?___flneg+2,postinc2
  4218   002EA2  C07B  FFDE         	movff	?___flneg+3,postinc2
  4219   002EA6                     
  4220                           ; BSR set to: 0
  4221   002EA6  C098  F081         	movff	___rem_pio2f@n,??___rem_pio2f
  4222   002EAA  C099  F082         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  4223   002EAE  1F81               	comf	??___rem_pio2f& (0+255),f,b
  4224   002EB0  1F82               	comf	(??___rem_pio2f+1)& (0+255),f,b
  4225   002EB2  4B81               	infsnz	??___rem_pio2f& (0+255),f,b
  4226   002EB4  2B82               	incf	(??___rem_pio2f+1)& (0+255),f,b
  4227   002EB6  C081  F07C         	movff	??___rem_pio2f,?___rem_pio2f
  4228   002EBA  C082  F07D         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  4229   002EBE  EF30  F018         	goto	l1439
  4230   002EC2                     l1438:
  4231                           
  4232                           ; BSR set to: 0
  4233   002EC2  C098  F07C         	movff	___rem_pio2f@n,?___rem_pio2f
  4234   002EC6  C099  F07D         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  4235   002ECA  EF30  F018         	goto	l1439
  4236   002ECE                     l6410:
  4237                           
  4238                           ; BSR set to: 0
  4239   002ECE  C07C  F003         	movff	___rem_pio2f@x,fabsf@x
  4240   002ED2  C07D  F004         	movff	___rem_pio2f@x+1,fabsf@x+1
  4241   002ED6  C07E  F005         	movff	___rem_pio2f@x+2,fabsf@x+2
  4242   002EDA  C07F  F006         	movff	___rem_pio2f@x+3,fabsf@x+3
  4243   002EDE  EC83  F02A         	call	_fabsf	;wreg free
  4244   002EE2  C003  F094         	movff	?_fabsf,___rem_pio2f@t
  4245   002EE6  C004  F095         	movff	?_fabsf+1,___rem_pio2f@t+1
  4246   002EEA  C005  F096         	movff	?_fabsf+2,___rem_pio2f@t+2
  4247   002EEE  C006  F097         	movff	?_fabsf+3,___rem_pio2f@t+3
  4248   002EF2  0E00               	movlw	0
  4249   002EF4  6E47               	movwf	___fladd@a^0,c
  4250   002EF6  0E00               	movlw	0
  4251   002EF8  6E48               	movwf	(___fladd@a+1)^0,c
  4252   002EFA  0E00               	movlw	0
  4253   002EFC  6E49               	movwf	(___fladd@a+2)^0,c
  4254   002EFE  0E3F               	movlw	63
  4255   002F00  6E4A               	movwf	(___fladd@a+3)^0,c
  4256   002F02  0E83               	movlw	131
  4257   002F04  6E15               	movwf	___flmul@a^0,c
  4258   002F06  0EF9               	movlw	249
  4259   002F08  6E16               	movwf	(___flmul@a+1)^0,c
  4260   002F0A  0E22               	movlw	34
  4261   002F0C  6E17               	movwf	(___flmul@a+2)^0,c
  4262   002F0E  0E3F               	movlw	63
  4263   002F10  6E18               	movwf	(___flmul@a+3)^0,c
  4264   002F12  C094  F011         	movff	___rem_pio2f@t,___flmul@b
  4265   002F16  C095  F012         	movff	___rem_pio2f@t+1,___flmul@b+1
  4266   002F1A  C096  F013         	movff	___rem_pio2f@t+2,___flmul@b+2
  4267   002F1E  C097  F014         	movff	___rem_pio2f@t+3,___flmul@b+3
  4268   002F22  EC59  F012         	call	___flmul	;wreg free
  4269   002F26  C011  F043         	movff	?___flmul,___fladd@b
  4270   002F2A  C012  F044         	movff	?___flmul+1,___fladd@b+1
  4271   002F2E  C013  F045         	movff	?___flmul+2,___fladd@b+2
  4272   002F32  C014  F046         	movff	?___flmul+3,___fladd@b+3
  4273   002F36  ECF9  F00F         	call	___fladd	;wreg free
  4274   002F3A  C043  F053         	movff	?___fladd,___fltol@f1
  4275   002F3E  C044  F054         	movff	?___fladd+1,___fltol@f1+1
  4276   002F42  C045  F055         	movff	?___fladd+2,___fltol@f1+2
  4277   002F46  C046  F056         	movff	?___fladd+3,___fltol@f1+3
  4278   002F4A  ECAC  F024         	call	___fltol	;wreg free
  4279   002F4E  C053  F098         	movff	?___fltol,___rem_pio2f@n
  4280   002F52  C054  F099         	movff	?___fltol+1,___rem_pio2f@n+1
  4281   002F56  C055  F09A         	movff	?___fltol+2,___rem_pio2f@n+2
  4282   002F5A  C056  F09B         	movff	?___fltol+3,___rem_pio2f@n+3
  4283   002F5E  C098  F003         	movff	___rem_pio2f@n,___xxtofl@val
  4284   002F62  C099  F004         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  4285   002F66  C09A  F005         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  4286   002F6A  C09B  F006         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  4287   002F6E  0E01               	movlw	1
  4288   002F70  EC67  F020         	call	___xxtofl
  4289   002F74  C003  F090         	movff	?___xxtofl,___rem_pio2f@fn
  4290   002F78  C004  F091         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  4291   002F7C  C005  F092         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  4292   002F80  C006  F093         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  4293   002F84  0EDA               	movlw	218
  4294   002F86  6E15               	movwf	___flmul@a^0,c
  4295   002F88  0E0F               	movlw	15
  4296   002F8A  6E16               	movwf	(___flmul@a+1)^0,c
  4297   002F8C  0EC9               	movlw	201
  4298   002F8E  6E17               	movwf	(___flmul@a+2)^0,c
  4299   002F90  0E3F               	movlw	63
  4300   002F92  6E18               	movwf	(___flmul@a+3)^0,c
  4301   002F94  C090  F011         	movff	___rem_pio2f@fn,___flmul@b
  4302   002F98  C091  F012         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4303   002F9C  C092  F013         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4304   002FA0  C093  F014         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4305   002FA4  EC59  F012         	call	___flmul	;wreg free
  4306   002FA8  C011  F057         	movff	?___flmul,___flsub@a
  4307   002FAC  C012  F058         	movff	?___flmul+1,___flsub@a+1
  4308   002FB0  C013  F059         	movff	?___flmul+2,___flsub@a+2
  4309   002FB4  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  4310   002FB8  C094  F053         	movff	___rem_pio2f@t,___flsub@b
  4311   002FBC  C095  F054         	movff	___rem_pio2f@t+1,___flsub@b+1
  4312   002FC0  C096  F055         	movff	___rem_pio2f@t+2,___flsub@b+2
  4313   002FC4  C097  F056         	movff	___rem_pio2f@t+3,___flsub@b+3
  4314   002FC8  ECA9  F029         	call	___flsub	;wreg free
  4315   002FCC  C053  F087         	movff	?___flsub,___rem_pio2f$3789
  4316   002FD0  C054  F088         	movff	?___flsub+1,___rem_pio2f$3789+1
  4317   002FD4  C055  F089         	movff	?___flsub+2,___rem_pio2f$3789+2
  4318   002FD8  C056  F08A         	movff	?___flsub+3,___rem_pio2f$3789+3
  4319   002FDC  C087  F053         	movff	___rem_pio2f$3789,___flsub@b
  4320   002FE0  C088  F054         	movff	___rem_pio2f$3789+1,___flsub@b+1
  4321   002FE4  C089  F055         	movff	___rem_pio2f$3789+2,___flsub@b+2
  4322   002FE8  C08A  F056         	movff	___rem_pio2f$3789+3,___flsub@b+3
  4323   002FEC  0EA3               	movlw	163
  4324   002FEE  6E15               	movwf	___flmul@a^0,c
  4325   002FF0  0E85               	movlw	133
  4326   002FF2  6E16               	movwf	(___flmul@a+1)^0,c
  4327   002FF4  0E88               	movlw	136
  4328   002FF6  6E17               	movwf	(___flmul@a+2)^0,c
  4329   002FF8  0E32               	movlw	50
  4330   002FFA  6E18               	movwf	(___flmul@a+3)^0,c
  4331   002FFC  C090  F011         	movff	___rem_pio2f@fn,___flmul@b
  4332   003000  C091  F012         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4333   003004  C092  F013         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4334   003008  C093  F014         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4335   00300C  EC59  F012         	call	___flmul	;wreg free
  4336   003010  C011  F057         	movff	?___flmul,___flsub@a
  4337   003014  C012  F058         	movff	?___flmul+1,___flsub@a+1
  4338   003018  C013  F059         	movff	?___flmul+2,___flsub@a+2
  4339   00301C  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  4340   003020  ECA9  F029         	call	___flsub	;wreg free
  4341   003024  C053  F083         	movff	?___flsub,___rem_pio2f@ty
  4342   003028  C054  F084         	movff	?___flsub+1,___rem_pio2f@ty+1
  4343   00302C  C055  F085         	movff	?___flsub+2,___rem_pio2f@ty+2
  4344   003030  C056  F086         	movff	?___flsub+3,___rem_pio2f@ty+3
  4345   003034  0100               	movlb	0	; () banked
  4346   003036  5180               	movf	___rem_pio2f@y& (0+255),w,b
  4347   003038  6ED9               	movwf	fsr2l,c
  4348   00303A  6ADA               	clrf	fsr2h,c
  4349   00303C  C083  FFDE         	movff	___rem_pio2f@ty,postinc2
  4350   003040  C084  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  4351   003044  C085  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  4352   003048  C086  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  4353   00304C                     
  4354                           ; BSR set to: 0
  4355   00304C  518B               	movf	___rem_pio2f@sign& (0+255),w,b
  4356   00304E  B4D8               	btfsc	status,2,c
  4357   003050  EF2C  F018         	goto	u8401
  4358   003054  EF2E  F018         	goto	u8400
  4359   003058                     u8401:
  4360   003058  EF61  F017         	goto	l1438
  4361   00305C                     u8400:
  4362   00305C  EF3A  F017         	goto	l6404
  4363   003060                     l1439:
  4364                           
  4365                           ; BSR set to: 0
  4366   003060  0012               	return		;funcret
  4367   003062                     __end_of___rem_pio2f:
  4368                           	callstack 0
  4369                           
  4370 ;; *************** function _fabsf *****************
  4371 ;; Defined at:
  4372 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fabsf.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  x               4    2[COMRAM] float 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;  u               4    6[COMRAM] struct .
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  4    2[COMRAM] float 
  4379 ;; Registers used:
  4380 ;;		status,2, status,0
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4386 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;Total ram usage:        8 bytes
  4391 ;; Hardware stack levels used: 1
  4392 ;; Hardware stack levels required when called: 1
  4393 ;; This function calls:
  4394 ;;		Nothing
  4395 ;; This function is called by:
  4396 ;;		___rem_pio2f
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text13
  4401   005506                     __ptext13:
  4402                           	callstack 0
  4403   005506                     _fabsf:
  4404                           	callstack 26
  4405   005506  C111  F007         	movff	fabsf@F465,fabsf@u
  4406   00550A  C112  F008         	movff	fabsf@F465+1,fabsf@u+1
  4407   00550E  C113  F009         	movff	fabsf@F465+2,fabsf@u+2
  4408   005512  C114  F00A         	movff	fabsf@F465+3,fabsf@u+3
  4409   005516  C003  F007         	movff	fabsf@x,fabsf@u
  4410   00551A  C004  F008         	movff	fabsf@x+1,fabsf@u+1
  4411   00551E  C005  F009         	movff	fabsf@x+2,fabsf@u+2
  4412   005522  C006  F00A         	movff	fabsf@x+3,fabsf@u+3
  4413   005526  9E0A               	bcf	(fabsf@u+3)^0,7,c
  4414   005528  C007  F003         	movff	fabsf@u,?_fabsf
  4415   00552C  C008  F004         	movff	fabsf@u+1,?_fabsf+1
  4416   005530  C009  F005         	movff	fabsf@u+2,?_fabsf+2
  4417   005534  C00A  F006         	movff	fabsf@u+3,?_fabsf+3
  4418   005538  0012               	return		;funcret
  4419   00553A                     __end_of_fabsf:
  4420                           	callstack 0
  4421                           
  4422 ;; *************** function ___cosdf *****************
  4423 ;; Defined at:
  4424 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__cosdf.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  x               4   82[COMRAM] float 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  z               4   20[BANK0 ] float 
  4429 ;;  w               4   16[BANK0 ] float 
  4430 ;;  r               4    0[BANK0 ] float 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  4   82[COMRAM] float 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;Total ram usage:       28 bytes
  4445 ;; Hardware stack levels used: 1
  4446 ;; Hardware stack levels required when called: 2
  4447 ;; This function calls:
  4448 ;;		___fladd
  4449 ;;		___flmul
  4450 ;; This function is called by:
  4451 ;;		_sinf
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text14
  4456   003CD4                     __ptext14:
  4457                           	callstack 0
  4458   003CD4                     ___cosdf:
  4459                           	callstack 26
  4460   003CD4  C053  F011         	movff	___cosdf@x,___flmul@b
  4461   003CD8  C054  F012         	movff	___cosdf@x+1,___flmul@b+1
  4462   003CDC  C055  F013         	movff	___cosdf@x+2,___flmul@b+2
  4463   003CE0  C056  F014         	movff	___cosdf@x+3,___flmul@b+3
  4464   003CE4  C053  F015         	movff	___cosdf@x,___flmul@a
  4465   003CE8  C054  F016         	movff	___cosdf@x+1,___flmul@a+1
  4466   003CEC  C055  F017         	movff	___cosdf@x+2,___flmul@a+2
  4467   003CF0  C056  F018         	movff	___cosdf@x+3,___flmul@a+3
  4468   003CF4  EC59  F012         	call	___flmul	;wreg free
  4469   003CF8  C011  F074         	movff	?___flmul,___cosdf@z
  4470   003CFC  C012  F075         	movff	?___flmul+1,___cosdf@z+1
  4471   003D00  C013  F076         	movff	?___flmul+2,___cosdf@z+2
  4472   003D04  C014  F077         	movff	?___flmul+3,___cosdf@z+3
  4473   003D08  C074  F011         	movff	___cosdf@z,___flmul@b
  4474   003D0C  C075  F012         	movff	___cosdf@z+1,___flmul@b+1
  4475   003D10  C076  F013         	movff	___cosdf@z+2,___flmul@b+2
  4476   003D14  C077  F014         	movff	___cosdf@z+3,___flmul@b+3
  4477   003D18  C074  F015         	movff	___cosdf@z,___flmul@a
  4478   003D1C  C075  F016         	movff	___cosdf@z+1,___flmul@a+1
  4479   003D20  C076  F017         	movff	___cosdf@z+2,___flmul@a+2
  4480   003D24  C077  F018         	movff	___cosdf@z+3,___flmul@a+3
  4481   003D28  EC59  F012         	call	___flmul	;wreg free
  4482   003D2C  C011  F070         	movff	?___flmul,___cosdf@w
  4483   003D30  C012  F071         	movff	?___flmul+1,___cosdf@w+1
  4484   003D34  C013  F072         	movff	?___flmul+2,___cosdf@w+2
  4485   003D38  C014  F073         	movff	?___flmul+3,___cosdf@w+3
  4486   003D3C  0E17               	movlw	23
  4487   003D3E  6E15               	movwf	___flmul@a^0,c
  4488   003D40  0E9A               	movlw	154
  4489   003D42  6E16               	movwf	(___flmul@a+1)^0,c
  4490   003D44  0ECC               	movlw	204
  4491   003D46  6E17               	movwf	(___flmul@a+2)^0,c
  4492   003D48  0E37               	movlw	55
  4493   003D4A  6E18               	movwf	(___flmul@a+3)^0,c
  4494   003D4C  C074  F011         	movff	___cosdf@z,___flmul@b
  4495   003D50  C075  F012         	movff	___cosdf@z+1,___flmul@b+1
  4496   003D54  C076  F013         	movff	___cosdf@z+2,___flmul@b+2
  4497   003D58  C077  F014         	movff	___cosdf@z+3,___flmul@b+3
  4498   003D5C  EC59  F012         	call	___flmul	;wreg free
  4499   003D60  C011  F043         	movff	?___flmul,___fladd@b
  4500   003D64  C012  F044         	movff	?___flmul+1,___fladd@b+1
  4501   003D68  C013  F045         	movff	?___flmul+2,___fladd@b+2
  4502   003D6C  C014  F046         	movff	?___flmul+3,___fladd@b+3
  4503   003D70  0E3F               	movlw	63
  4504   003D72  6E47               	movwf	___fladd@a^0,c
  4505   003D74  0E04               	movlw	4
  4506   003D76  6E48               	movwf	(___fladd@a+1)^0,c
  4507   003D78  0EB6               	movlw	182
  4508   003D7A  6E49               	movwf	(___fladd@a+2)^0,c
  4509   003D7C  0EBA               	movlw	186
  4510   003D7E  6E4A               	movwf	(___fladd@a+3)^0,c
  4511   003D80  ECF9  F00F         	call	___fladd	;wreg free
  4512   003D84  C043  F060         	movff	?___fladd,___cosdf@r
  4513   003D88  C044  F061         	movff	?___fladd+1,___cosdf@r+1
  4514   003D8C  C045  F062         	movff	?___fladd+2,___cosdf@r+2
  4515   003D90  C046  F063         	movff	?___fladd+3,___cosdf@r+3
  4516   003D94  0E00               	movlw	0
  4517   003D96  6E47               	movwf	___fladd@a^0,c
  4518   003D98  0E00               	movlw	0
  4519   003D9A  6E48               	movwf	(___fladd@a+1)^0,c
  4520   003D9C  0E80               	movlw	128
  4521   003D9E  6E49               	movwf	(___fladd@a+2)^0,c
  4522   003DA0  0E3F               	movlw	63
  4523   003DA2  6E4A               	movwf	(___fladd@a+3)^0,c
  4524   003DA4  0E00               	movlw	0
  4525   003DA6  6E15               	movwf	___flmul@a^0,c
  4526   003DA8  0E00               	movlw	0
  4527   003DAA  6E16               	movwf	(___flmul@a+1)^0,c
  4528   003DAC  0E00               	movlw	0
  4529   003DAE  6E17               	movwf	(___flmul@a+2)^0,c
  4530   003DB0  0EBF               	movlw	191
  4531   003DB2  6E18               	movwf	(___flmul@a+3)^0,c
  4532   003DB4  C074  F011         	movff	___cosdf@z,___flmul@b
  4533   003DB8  C075  F012         	movff	___cosdf@z+1,___flmul@b+1
  4534   003DBC  C076  F013         	movff	___cosdf@z+2,___flmul@b+2
  4535   003DC0  C077  F014         	movff	___cosdf@z+3,___flmul@b+3
  4536   003DC4  EC59  F012         	call	___flmul	;wreg free
  4537   003DC8  C011  F043         	movff	?___flmul,___fladd@b
  4538   003DCC  C012  F044         	movff	?___flmul+1,___fladd@b+1
  4539   003DD0  C013  F045         	movff	?___flmul+2,___fladd@b+2
  4540   003DD4  C014  F046         	movff	?___flmul+3,___fladd@b+3
  4541   003DD8  ECF9  F00F         	call	___fladd	;wreg free
  4542   003DDC  C043  F064         	movff	?___fladd,___cosdf$3786
  4543   003DE0  C044  F065         	movff	?___fladd+1,___cosdf$3786+1
  4544   003DE4  C045  F066         	movff	?___fladd+2,___cosdf$3786+2
  4545   003DE8  C046  F067         	movff	?___fladd+3,___cosdf$3786+3
  4546   003DEC  C074  F015         	movff	___cosdf@z,___flmul@a
  4547   003DF0  C075  F016         	movff	___cosdf@z+1,___flmul@a+1
  4548   003DF4  C076  F017         	movff	___cosdf@z+2,___flmul@a+2
  4549   003DF8  C077  F018         	movff	___cosdf@z+3,___flmul@a+3
  4550   003DFC  C070  F011         	movff	___cosdf@w,___flmul@b
  4551   003E00  C071  F012         	movff	___cosdf@w+1,___flmul@b+1
  4552   003E04  C072  F013         	movff	___cosdf@w+2,___flmul@b+2
  4553   003E08  C073  F014         	movff	___cosdf@w+3,___flmul@b+3
  4554   003E0C  EC59  F012         	call	___flmul	;wreg free
  4555   003E10  C011  F068         	movff	?___flmul,___cosdf$3787
  4556   003E14  C012  F069         	movff	?___flmul+1,___cosdf$3787+1
  4557   003E18  C013  F06A         	movff	?___flmul+2,___cosdf$3787+2
  4558   003E1C  C014  F06B         	movff	?___flmul+3,___cosdf$3787+3
  4559   003E20  0E9F               	movlw	159
  4560   003E22  6E15               	movwf	___flmul@a^0,c
  4561   003E24  0EAA               	movlw	170
  4562   003E26  6E16               	movwf	(___flmul@a+1)^0,c
  4563   003E28  0E2A               	movlw	42
  4564   003E2A  6E17               	movwf	(___flmul@a+2)^0,c
  4565   003E2C  0E3D               	movlw	61
  4566   003E2E  6E18               	movwf	(___flmul@a+3)^0,c
  4567   003E30  C070  F011         	movff	___cosdf@w,___flmul@b
  4568   003E34  C071  F012         	movff	___cosdf@w+1,___flmul@b+1
  4569   003E38  C072  F013         	movff	___cosdf@w+2,___flmul@b+2
  4570   003E3C  C073  F014         	movff	___cosdf@w+3,___flmul@b+3
  4571   003E40  EC59  F012         	call	___flmul	;wreg free
  4572   003E44  C011  F047         	movff	?___flmul,___fladd@a
  4573   003E48  C012  F048         	movff	?___flmul+1,___fladd@a+1
  4574   003E4C  C013  F049         	movff	?___flmul+2,___fladd@a+2
  4575   003E50  C014  F04A         	movff	?___flmul+3,___fladd@a+3
  4576   003E54  C064  F043         	movff	___cosdf$3786,___fladd@b
  4577   003E58  C065  F044         	movff	___cosdf$3786+1,___fladd@b+1
  4578   003E5C  C066  F045         	movff	___cosdf$3786+2,___fladd@b+2
  4579   003E60  C067  F046         	movff	___cosdf$3786+3,___fladd@b+3
  4580   003E64  ECF9  F00F         	call	___fladd	;wreg free
  4581   003E68  C043  F06C         	movff	?___fladd,___cosdf$3788
  4582   003E6C  C044  F06D         	movff	?___fladd+1,___cosdf$3788+1
  4583   003E70  C045  F06E         	movff	?___fladd+2,___cosdf$3788+2
  4584   003E74  C046  F06F         	movff	?___fladd+3,___cosdf$3788+3
  4585   003E78  C06C  F043         	movff	___cosdf$3788,___fladd@b
  4586   003E7C  C06D  F044         	movff	___cosdf$3788+1,___fladd@b+1
  4587   003E80  C06E  F045         	movff	___cosdf$3788+2,___fladd@b+2
  4588   003E84  C06F  F046         	movff	___cosdf$3788+3,___fladd@b+3
  4589   003E88  C060  F015         	movff	___cosdf@r,___flmul@a
  4590   003E8C  C061  F016         	movff	___cosdf@r+1,___flmul@a+1
  4591   003E90  C062  F017         	movff	___cosdf@r+2,___flmul@a+2
  4592   003E94  C063  F018         	movff	___cosdf@r+3,___flmul@a+3
  4593   003E98  C068  F011         	movff	___cosdf$3787,___flmul@b
  4594   003E9C  C069  F012         	movff	___cosdf$3787+1,___flmul@b+1
  4595   003EA0  C06A  F013         	movff	___cosdf$3787+2,___flmul@b+2
  4596   003EA4  C06B  F014         	movff	___cosdf$3787+3,___flmul@b+3
  4597   003EA8  EC59  F012         	call	___flmul	;wreg free
  4598   003EAC  C011  F047         	movff	?___flmul,___fladd@a
  4599   003EB0  C012  F048         	movff	?___flmul+1,___fladd@a+1
  4600   003EB4  C013  F049         	movff	?___flmul+2,___fladd@a+2
  4601   003EB8  C014  F04A         	movff	?___flmul+3,___fladd@a+3
  4602   003EBC  ECF9  F00F         	call	___fladd	;wreg free
  4603   003EC0  C043  F053         	movff	?___fladd,?___cosdf
  4604   003EC4  C044  F054         	movff	?___fladd+1,?___cosdf+1
  4605   003EC8  C045  F055         	movff	?___fladd+2,?___cosdf+2
  4606   003ECC  C046  F056         	movff	?___fladd+3,?___cosdf+3
  4607   003ED0  0012               	return		;funcret
  4608   003ED2                     __end_of___cosdf:
  4609                           	callstack 0
  4610                           
  4611 ;; *************** function _printf *****************
  4612 ;; Defined at:
  4613 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  fmt             1   98[BANK0 ] PTR const unsigned char 
  4616 ;;		 -> STR_8(5), 
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;  ret             2    0        int 
  4619 ;;  ap              1  101[BANK0 ] PTR void [1]
  4620 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  2   98[BANK0 ] int 
  4623 ;; Registers used:
  4624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4630 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4631 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;Total ram usage:        4 bytes
  4635 ;; Hardware stack levels used: 1
  4636 ;; Hardware stack levels required when called: 8
  4637 ;; This function calls:
  4638 ;;		_vfprintf
  4639 ;; This function is called by:
  4640 ;;		_runDAC
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text15
  4645   0055DA                     __ptext15:
  4646                           	callstack 0
  4647   0055DA                     _printf:
  4648                           	callstack 21
  4649   0055DA  0EC3               	movlw	low (?_printf+1)
  4650   0055DC  0100               	movlb	0	; () banked
  4651   0055DE  6FC5               	movwf	printf@ap& (0+255),b
  4652   0055E0                     
  4653                           ; BSR set to: 0
  4654   0055E0  0E00               	movlw	0
  4655   0055E2  6FBD               	movwf	vfprintf@fp& (0+255),b
  4656   0055E4  0E00               	movlw	0
  4657   0055E6  6FBE               	movwf	(vfprintf@fp+1)& (0+255),b
  4658   0055E8  C0C2  F0BF         	movff	printf@fmt,vfprintf@fmt
  4659   0055EC  0EC5               	movlw	low printf@ap
  4660   0055EE  6FC0               	movwf	vfprintf@ap& (0+255),b
  4661   0055F0  EC86  F029         	call	_vfprintf	;wreg free
  4662   0055F4  0012               	return		;funcret
  4663   0055F6                     __end_of_printf:
  4664                           	callstack 0
  4665                           
  4666 ;; *************** function _SPI_write *****************
  4667 ;; Defined at:
  4668 ;;		line 93 in file "DAC.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  data            1    wreg     unsigned char 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  data            1    4[COMRAM] unsigned char 
  4673 ;;  LSB             1    3[COMRAM] unsigned char 
  4674 ;;  MSB             1    2[COMRAM] unsigned char 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		wreg, status,2, status,0
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;Total ram usage:        3 bytes
  4689 ;; Hardware stack levels used: 1
  4690 ;; Hardware stack levels required when called: 1
  4691 ;; This function calls:
  4692 ;;		Nothing
  4693 ;; This function is called by:
  4694 ;;		_runDAC
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           	psect	text16
  4699   00541E                     __ptext16:
  4700                           	callstack 0
  4701   00541E                     _SPI_write:
  4702                           	callstack 28
  4703                           
  4704                           ;incstack = 0
  4705                           ;SPI_write@data stored from wreg
  4706   00541E  6E05               	movwf	SPI_write@data^0,c
  4707   005420                     
  4708                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  4709   005420  3805               	swapf	SPI_write@data^0,w,c
  4710   005422  0B0F               	andlw	15
  4711   005424  0930               	iorlw	48
  4712   005426  6E03               	movwf	SPI_write@MSB^0,c
  4713                           
  4714                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  4715   005428  3805               	swapf	SPI_write@data^0,w,c
  4716   00542A  0BF0               	andlw	240
  4717   00542C  6E04               	movwf	SPI_write@LSB^0,c
  4718   00542E                     
  4719                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  4720   00542E  968A               	bcf	138,3,c	;volatile
  4721   005430                     
  4722                           ;DAC.c: 101:     SSP1BUF = MSB;
  4723   005430  C003  FFC9         	movff	SPI_write@MSB,4041	;volatile
  4724   005434                     l215:
  4725   005434  A69E               	btfss	3998,3,c	;volatile
  4726   005436  EF1F  F02A         	goto	u8491
  4727   00543A  EF21  F02A         	goto	u8490
  4728   00543E                     u8491:
  4729   00543E  EF1A  F02A         	goto	l215
  4730   005442                     u8490:
  4731   005442                     
  4732                           ;DAC.c: 103:     SSP1IF = 0;
  4733   005442  969E               	bcf	3998,3,c	;volatile
  4734                           
  4735                           ;DAC.c: 105:     SSP1BUF = LSB;
  4736   005444  C004  FFC9         	movff	SPI_write@LSB,4041	;volatile
  4737   005448                     l218:
  4738   005448  A69E               	btfss	3998,3,c	;volatile
  4739   00544A  EF29  F02A         	goto	u8501
  4740   00544E  EF2B  F02A         	goto	u8500
  4741   005452                     u8501:
  4742   005452  EF24  F02A         	goto	l218
  4743   005456                     u8500:
  4744   005456                     
  4745                           ;DAC.c: 107:     SSP1IF = 0;
  4746   005456  969E               	bcf	3998,3,c	;volatile
  4747                           
  4748                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  4749   005458  868A               	bsf	138,3,c	;volatile
  4750   00545A  0012               	return		;funcret
  4751   00545C                     __end_of_SPI_write:
  4752                           	callstack 0
  4753                           
  4754 ;; *************** function _runADC *****************
  4755 ;; Defined at:
  4756 ;;		line 13 in file "ADC.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;		None
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;  text           17  124[BANK0 ] unsigned char [17]
  4761 ;;  voltage2        4  145[BANK0 ] float 
  4762 ;;  voltage1        4  141[BANK0 ] float 
  4763 ;;  pot2            2  151[BANK0 ] unsigned short 
  4764 ;;  pot1            2  149[BANK0 ] unsigned short 
  4765 ;;  keepState       1  153[BANK0 ] unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      void 
  4768 ;; Registers used:
  4769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;Total ram usage:       32 bytes
  4780 ;; Hardware stack levels used: 1
  4781 ;; Hardware stack levels required when called: 9
  4782 ;; This function calls:
  4783 ;;		_LCD_ShowString
  4784 ;;		___fldiv
  4785 ;;		___flmul
  4786 ;;		___xxtofl
  4787 ;;		_sprintf
  4788 ;; This function is called by:
  4789 ;;		_main
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text17
  4794   003ED2                     __ptext17:
  4795                           	callstack 0
  4796   003ED2                     _runADC:
  4797                           	callstack 21
  4798   003ED2                     
  4799                           ;ADC.c: 16: ANSELAbits.ANSA5 = 1;
  4800   003ED2  010F               	movlb	15	; () banked
  4801   003ED4  8B38               	bsf	56,5,b	;volatile
  4802                           
  4803                           ;ADC.c: 17: ANSELEbits.ANSE0 = 1;
  4804   003ED6  813C               	bsf	60,0,b	;volatile
  4805                           
  4806                           ;ADC.c: 19: ADCON2bits.ADFM = 1;
  4807   003ED8  8EC0               	bsf	192,7,c	;volatile
  4808   003EDA                     
  4809                           ; BSR set to: 15
  4810                           ;ADC.c: 20: ADCON2bits.ADCS = 0b110;
  4811   003EDA  50C0               	movf	192,w,c	;volatile
  4812   003EDC  0BF8               	andlw	-8
  4813   003EDE  0906               	iorlw	6
  4814   003EE0  6EC0               	movwf	192,c	;volatile
  4815                           
  4816                           ;ADC.c: 21: ADCON2bits.ACQT = 0b110;
  4817   003EE2  50C0               	movf	192,w,c	;volatile
  4818   003EE4  0BC7               	andlw	-57
  4819   003EE6  0930               	iorlw	48
  4820   003EE8  6EC0               	movwf	192,c	;volatile
  4821   003EEA                     
  4822                           ; BSR set to: 15
  4823                           ;ADC.c: 22: ADCON0bits.ADON = 1;
  4824   003EEA  80C2               	bsf	194,0,c	;volatile
  4825   003EEC                     
  4826                           ; BSR set to: 15
  4827                           ;ADC.c: 25: uint16_t pot1, pot2;;ADC.c: 26: float voltage1, voltage2;;ADC.c: 27: char te
      +                          xt[17] = "";
  4828   003EEC  EE20  F0DC         	lfsr	2,runADC@text
  4829   003EF0  0E10               	movlw	16
  4830   003EF2                     u8941:
  4831   003EF2  6ADE               	clrf	postinc2,c
  4832   003EF4  06E8               	decf	wreg,f,c
  4833   003EF6  E2FD               	bc	u8941
  4834   003EF8                     
  4835                           ; BSR set to: 15
  4836                           ;ADC.c: 28: uint8_t keepState = 1;
  4837   003EF8  0E01               	movlw	1
  4838   003EFA  0100               	movlb	0	; () banked
  4839   003EFC  6FF9               	movwf	runADC@keepState& (0+255),b
  4840                           
  4841                           ;ADC.c: 30: while(keepState){
  4842   003EFE  EF5D  F020         	goto	l376
  4843   003F02                     l6732:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;ADC.c: 32:     ADCON0bits.CHS = 5;
  4847   003F02  50C2               	movf	194,w,c	;volatile
  4848   003F04  0B83               	andlw	-125
  4849   003F06  0914               	iorlw	20
  4850   003F08  6EC2               	movwf	194,c	;volatile
  4851   003F0A                     
  4852                           ; BSR set to: 0
  4853                           ;ADC.c: 33:     GODONE = 1;
  4854   003F0A  82C2               	bsf	4034,1,c	;volatile
  4855   003F0C                     l378:
  4856   003F0C  B2C2               	btfsc	4034,1,c	;volatile
  4857   003F0E  EF8B  F01F         	goto	u8951
  4858   003F12  EF8D  F01F         	goto	u8950
  4859   003F16                     u8951:
  4860   003F16  EF86  F01F         	goto	l378
  4861   003F1A                     u8950:
  4862   003F1A                     
  4863                           ;ADC.c: 35:     pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  4864   003F1A  50C3               	movf	195,w,c	;volatile
  4865   003F1C  CFC4 F0DA          	movff	4036,??_runADC	;volatile
  4866   003F20  0100               	movlb	0	; () banked
  4867   003F22  6BDB               	clrf	(??_runADC+1)& (0+255),b
  4868   003F24  C0DA  F0DB         	movff	??_runADC,??_runADC+1
  4869   003F28  6BDA               	clrf	??_runADC& (0+255),b
  4870   003F2A  11DA               	iorwf	??_runADC& (0+255),w,b
  4871   003F2C  6FF5               	movwf	runADC@pot1& (0+255),b
  4872   003F2E  51DB               	movf	(??_runADC+1)& (0+255),w,b
  4873   003F30  6FF6               	movwf	(runADC@pot1+1)& (0+255),b
  4874   003F32                     
  4875                           ; BSR set to: 0
  4876                           ;ADC.c: 36:     voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  4877   003F32  0E00               	movlw	0
  4878   003F34  6E2E               	movwf	___fldiv@a^0,c
  4879   003F36  0EC0               	movlw	192
  4880   003F38  6E2F               	movwf	(___fldiv@a+1)^0,c
  4881   003F3A  0E7F               	movlw	127
  4882   003F3C  6E30               	movwf	(___fldiv@a+2)^0,c
  4883   003F3E  0E44               	movlw	68
  4884   003F40  6E31               	movwf	(___fldiv@a+3)^0,c
  4885   003F42  C0F5  F003         	movff	runADC@pot1,___xxtofl@val
  4886   003F46  C0F6  F004         	movff	runADC@pot1+1,___xxtofl@val+1
  4887   003F4A  6A05               	clrf	(___xxtofl@val+2)^0,c
  4888   003F4C  6A06               	clrf	(___xxtofl@val+3)^0,c
  4889   003F4E  0E00               	movlw	0
  4890   003F50  EC67  F020         	call	___xxtofl
  4891   003F54  C003  F02A         	movff	?___xxtofl,___fldiv@b
  4892   003F58  C004  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  4893   003F5C  C005  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  4894   003F60  C006  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  4895   003F64  EC31  F018         	call	___fldiv	;wreg free
  4896   003F68  C02A  F011         	movff	?___fldiv,___flmul@b
  4897   003F6C  C02B  F012         	movff	?___fldiv+1,___flmul@b+1
  4898   003F70  C02C  F013         	movff	?___fldiv+2,___flmul@b+2
  4899   003F74  C02D  F014         	movff	?___fldiv+3,___flmul@b+3
  4900   003F78  0E33               	movlw	51
  4901   003F7A  6E15               	movwf	___flmul@a^0,c
  4902   003F7C  0E33               	movlw	51
  4903   003F7E  6E16               	movwf	(___flmul@a+1)^0,c
  4904   003F80  0E53               	movlw	83
  4905   003F82  6E17               	movwf	(___flmul@a+2)^0,c
  4906   003F84  0E40               	movlw	64
  4907   003F86  6E18               	movwf	(___flmul@a+3)^0,c
  4908   003F88  EC59  F012         	call	___flmul	;wreg free
  4909   003F8C  C011  F0ED         	movff	?___flmul,runADC@voltage1
  4910   003F90  C012  F0EE         	movff	?___flmul+1,runADC@voltage1+1
  4911   003F94  C013  F0EF         	movff	?___flmul+2,runADC@voltage1+2
  4912   003F98  C014  F0F0         	movff	?___flmul+3,runADC@voltage1+3
  4913   003F9C                     
  4914                           ;ADC.c: 39:     ADCON0bits.CHS = 4;
  4915   003F9C  50C2               	movf	194,w,c	;volatile
  4916   003F9E  0B83               	andlw	-125
  4917   003FA0  0910               	iorlw	16
  4918   003FA2  6EC2               	movwf	194,c	;volatile
  4919   003FA4                     
  4920                           ;ADC.c: 40:     GODONE = 1;
  4921   003FA4  82C2               	bsf	4034,1,c	;volatile
  4922   003FA6                     l381:
  4923   003FA6  B2C2               	btfsc	4034,1,c	;volatile
  4924   003FA8  EFD8  F01F         	goto	u8961
  4925   003FAC  EFDA  F01F         	goto	u8960
  4926   003FB0                     u8961:
  4927   003FB0  EFD3  F01F         	goto	l381
  4928   003FB4                     u8960:
  4929   003FB4                     
  4930                           ;ADC.c: 42:     pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  4931   003FB4  50C3               	movf	195,w,c	;volatile
  4932   003FB6  CFC4 F0DA          	movff	4036,??_runADC	;volatile
  4933   003FBA  0100               	movlb	0	; () banked
  4934   003FBC  6BDB               	clrf	(??_runADC+1)& (0+255),b
  4935   003FBE  C0DA  F0DB         	movff	??_runADC,??_runADC+1
  4936   003FC2  6BDA               	clrf	??_runADC& (0+255),b
  4937   003FC4  11DA               	iorwf	??_runADC& (0+255),w,b
  4938   003FC6  6FF7               	movwf	runADC@pot2& (0+255),b
  4939   003FC8  51DB               	movf	(??_runADC+1)& (0+255),w,b
  4940   003FCA  6FF8               	movwf	(runADC@pot2+1)& (0+255),b
  4941   003FCC                     
  4942                           ; BSR set to: 0
  4943                           ;ADC.c: 43:     voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  4944   003FCC  0E00               	movlw	0
  4945   003FCE  6E2E               	movwf	___fldiv@a^0,c
  4946   003FD0  0EC0               	movlw	192
  4947   003FD2  6E2F               	movwf	(___fldiv@a+1)^0,c
  4948   003FD4  0E7F               	movlw	127
  4949   003FD6  6E30               	movwf	(___fldiv@a+2)^0,c
  4950   003FD8  0E44               	movlw	68
  4951   003FDA  6E31               	movwf	(___fldiv@a+3)^0,c
  4952   003FDC  C0F7  F003         	movff	runADC@pot2,___xxtofl@val
  4953   003FE0  C0F8  F004         	movff	runADC@pot2+1,___xxtofl@val+1
  4954   003FE4  6A05               	clrf	(___xxtofl@val+2)^0,c
  4955   003FE6  6A06               	clrf	(___xxtofl@val+3)^0,c
  4956   003FE8  0E00               	movlw	0
  4957   003FEA  EC67  F020         	call	___xxtofl
  4958   003FEE  C003  F02A         	movff	?___xxtofl,___fldiv@b
  4959   003FF2  C004  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  4960   003FF6  C005  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  4961   003FFA  C006  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  4962   003FFE  EC31  F018         	call	___fldiv	;wreg free
  4963   004002  C02A  F011         	movff	?___fldiv,___flmul@b
  4964   004006  C02B  F012         	movff	?___fldiv+1,___flmul@b+1
  4965   00400A  C02C  F013         	movff	?___fldiv+2,___flmul@b+2
  4966   00400E  C02D  F014         	movff	?___fldiv+3,___flmul@b+3
  4967   004012  0E33               	movlw	51
  4968   004014  6E15               	movwf	___flmul@a^0,c
  4969   004016  0E33               	movlw	51
  4970   004018  6E16               	movwf	(___flmul@a+1)^0,c
  4971   00401A  0E53               	movlw	83
  4972   00401C  6E17               	movwf	(___flmul@a+2)^0,c
  4973   00401E  0E40               	movlw	64
  4974   004020  6E18               	movwf	(___flmul@a+3)^0,c
  4975   004022  EC59  F012         	call	___flmul	;wreg free
  4976   004026  C011  F0F1         	movff	?___flmul,runADC@voltage2
  4977   00402A  C012  F0F2         	movff	?___flmul+1,runADC@voltage2+1
  4978   00402E  C013  F0F3         	movff	?___flmul+2,runADC@voltage2+2
  4979   004032  C014  F0F4         	movff	?___flmul+3,runADC@voltage2+3
  4980   004036                     
  4981                           ;ADC.c: 45:     sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  4982   004036  0EDC               	movlw	low runADC@text
  4983   004038  0100               	movlb	0	; () banked
  4984   00403A  6FC2               	movwf	sprintf@s& (0+255),b
  4985   00403C  6BC3               	clrf	(sprintf@s+1)& (0+255),b
  4986   00403E  0E41               	movlw	low STR_19
  4987   004040  6FC4               	movwf	sprintf@fmt& (0+255),b
  4988   004042  C0ED  F0C5         	movff	runADC@voltage1,?_sprintf+3
  4989   004046  C0EE  F0C6         	movff	runADC@voltage1+1,?_sprintf+4
  4990   00404A  C0EF  F0C7         	movff	runADC@voltage1+2,?_sprintf+5
  4991   00404E  C0F0  F0C8         	movff	runADC@voltage1+3,?_sprintf+6
  4992   004052  C0F1  F0C9         	movff	runADC@voltage2,?_sprintf+7
  4993   004056  C0F2  F0CA         	movff	runADC@voltage2+1,?_sprintf+8
  4994   00405A  C0F3  F0CB         	movff	runADC@voltage2+2,?_sprintf+9
  4995   00405E  C0F4  F0CC         	movff	runADC@voltage2+3,?_sprintf+10
  4996   004062  ECEE  F029         	call	_sprintf	;wreg free
  4997   004066                     
  4998                           ;ADC.c: 46:     LCD_ShowString(2, text);
  4999   004066  0EDC               	movlw	low runADC@text
  5000   004068  6E04               	movwf	LCD_ShowString@textData^0,c
  5001   00406A  6A05               	clrf	(LCD_ShowString@textData+1)^0,c
  5002   00406C  0E02               	movlw	2
  5003   00406E  EC65  F027         	call	_LCD_ShowString
  5004   004072                     
  5005                           ;ADC.c: 48:     if(PORTAbits.RA2){
  5006   004072  A480               	btfss	128,2,c	;volatile
  5007   004074  EF3E  F020         	goto	u8971
  5008   004078  EF40  F020         	goto	u8970
  5009   00407C                     u8971:
  5010   00407C  EF5D  F020         	goto	l376
  5011   004080                     u8970:
  5012   004080                     
  5013                           ;ADC.c: 49:         _delay((unsigned long)((50)*(32E6/4000.0)));
  5014   004080  0E03               	movlw	3
  5015   004082  0100               	movlb	0	; () banked
  5016   004084  6FDB               	movwf	(??_runADC+1)& (0+255),b
  5017   004086  0E08               	movlw	8
  5018   004088  6FDA               	movwf	??_runADC& (0+255),b
  5019   00408A  0E77               	movlw	119
  5020   00408C                     u9267:
  5021   00408C  2EE8               	decfsz	wreg,f,c
  5022   00408E  D7FE               	bra	u9267
  5023   004090  2FDA               	decfsz	??_runADC& (0+255),f,b
  5024   004092  D7FC               	bra	u9267
  5025   004094  2FDB               	decfsz	(??_runADC+1)& (0+255),f,b
  5026   004096  D7FA               	bra	u9267
  5027   004098                     
  5028                           ;ADC.c: 50:         if(PORTAbits.RA2){
  5029   004098  A480               	btfss	128,2,c	;volatile
  5030   00409A  EF51  F020         	goto	u8981
  5031   00409E  EF53  F020         	goto	u8980
  5032   0040A2                     u8981:
  5033   0040A2  EF5D  F020         	goto	l376
  5034   0040A6                     u8980:
  5035   0040A6                     l386:
  5036   0040A6  B480               	btfsc	128,2,c	;volatile
  5037   0040A8  EF58  F020         	goto	u8991
  5038   0040AC  EF5A  F020         	goto	u8990
  5039   0040B0                     u8991:
  5040   0040B0  EF53  F020         	goto	l386
  5041   0040B4                     u8990:
  5042   0040B4                     
  5043                           ;ADC.c: 52:             keepState = 0;
  5044   0040B4  0E00               	movlw	0
  5045   0040B6  0100               	movlb	0	; () banked
  5046   0040B8  6FF9               	movwf	runADC@keepState& (0+255),b
  5047   0040BA                     l376:
  5048                           
  5049                           ;ADC.c: 30: while(keepState){
  5050   0040BA  0100               	movlb	0	; () banked
  5051   0040BC  51F9               	movf	runADC@keepState& (0+255),w,b
  5052   0040BE  A4D8               	btfss	status,2,c
  5053   0040C0  EF64  F020         	goto	u9001
  5054   0040C4  EF66  F020         	goto	u9000
  5055   0040C8                     u9001:
  5056   0040C8  EF81  F01F         	goto	l6732
  5057   0040CC                     u9000:
  5058   0040CC                     
  5059                           ; BSR set to: 0
  5060   0040CC  0012               	return		;funcret
  5061   0040CE                     __end_of_runADC:
  5062                           	callstack 0
  5063                           
  5064 ;; *************** function ___xxtofl *****************
  5065 ;; Defined at:
  5066 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  sign            1    wreg     unsigned char 
  5069 ;;  val             4    2[COMRAM] long 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  sign            1   10[COMRAM] unsigned char 
  5072 ;;  arg             4   12[COMRAM] unsigned long 
  5073 ;;  exp             1   11[COMRAM] unsigned char 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  4    2[COMRAM] unsigned char 
  5076 ;; Registers used:
  5077 ;;		wreg, status,2, status,0
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;Total ram usage:       14 bytes
  5088 ;; Hardware stack levels used: 1
  5089 ;; Hardware stack levels required when called: 1
  5090 ;; This function calls:
  5091 ;;		Nothing
  5092 ;; This function is called by:
  5093 ;;		_runDAC
  5094 ;;		_runADC
  5095 ;;		___rem_pio2f
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text18
  5100   0040CE                     __ptext18:
  5101                           	callstack 0
  5102   0040CE                     ___xxtofl:
  5103                           	callstack 26
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;incstack = 0
  5107                           ;___xxtofl@sign stored from wreg
  5108   0040CE  6E0B               	movwf	___xxtofl@sign^0,c
  5109   0040D0  500B               	movf	___xxtofl@sign^0,w,c
  5110   0040D2  B4D8               	btfsc	status,2,c
  5111   0040D4  EF6E  F020         	goto	u8111
  5112   0040D8  EF70  F020         	goto	u8110
  5113   0040DC                     u8111:
  5114   0040DC  EF92  F020         	goto	l1100
  5115   0040E0                     u8110:
  5116   0040E0  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  5117   0040E2  EF77  F020         	goto	u8120
  5118   0040E6  EF75  F020         	goto	u8121
  5119   0040EA                     u8121:
  5120   0040EA  EF92  F020         	goto	l1100
  5121   0040EE                     u8120:
  5122   0040EE  C003  F007         	movff	___xxtofl@val,??___xxtofl
  5123   0040F2  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
  5124   0040F6  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
  5125   0040FA  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
  5126   0040FE  1E07               	comf	??___xxtofl^0,f,c
  5127   004100  1E08               	comf	(??___xxtofl+1)^0,f,c
  5128   004102  1E09               	comf	(??___xxtofl+2)^0,f,c
  5129   004104  1E0A               	comf	(??___xxtofl+3)^0,f,c
  5130   004106  2A07               	incf	??___xxtofl^0,f,c
  5131   004108  0E00               	movlw	0
  5132   00410A  2208               	addwfc	(??___xxtofl+1)^0,f,c
  5133   00410C  2209               	addwfc	(??___xxtofl+2)^0,f,c
  5134   00410E  220A               	addwfc	(??___xxtofl+3)^0,f,c
  5135   004110  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
  5136   004114  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
  5137   004118  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
  5138   00411C  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
  5139   004120  EF9A  F020         	goto	l6200
  5140   004124                     l1100:
  5141   004124  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
  5142   004128  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5143   00412C  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5144   004130  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5145   004134                     l6200:
  5146   004134  5003               	movf	___xxtofl@val^0,w,c
  5147   004136  1004               	iorwf	(___xxtofl@val+1)^0,w,c
  5148   004138  1005               	iorwf	(___xxtofl@val+2)^0,w,c
  5149   00413A  1006               	iorwf	(___xxtofl@val+3)^0,w,c
  5150   00413C  A4D8               	btfss	status,2,c
  5151   00413E  EFA3  F020         	goto	u8131
  5152   004142  EFA5  F020         	goto	u8130
  5153   004146                     u8131:
  5154   004146  EFAF  F020         	goto	l6206
  5155   00414A                     u8130:
  5156   00414A  0E00               	movlw	0
  5157   00414C  6E03               	movwf	?___xxtofl^0,c
  5158   00414E  0E00               	movlw	0
  5159   004150  6E04               	movwf	(?___xxtofl+1)^0,c
  5160   004152  0E00               	movlw	0
  5161   004154  6E05               	movwf	(?___xxtofl+2)^0,c
  5162   004156  0E00               	movlw	0
  5163   004158  6E06               	movwf	(?___xxtofl+3)^0,c
  5164   00415A  EF40  F021         	goto	l1103
  5165   00415E                     l6206:
  5166   00415E  0E96               	movlw	150
  5167   004160  6E0C               	movwf	___xxtofl@exp^0,c
  5168   004162  EFB9  F020         	goto	l6210
  5169   004166                     l6208:
  5170   004166  2A0C               	incf	___xxtofl@exp^0,f,c
  5171   004168  90D8               	bcf	status,0,c
  5172   00416A  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  5173   00416C  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  5174   00416E  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  5175   004170  320D               	rrcf	___xxtofl@arg^0,f,c
  5176   004172                     l6210:
  5177   004172  0E00               	movlw	0
  5178   004174  140D               	andwf	___xxtofl@arg^0,w,c
  5179   004176  6E07               	movwf	??___xxtofl^0,c
  5180   004178  0E00               	movlw	0
  5181   00417A  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  5182   00417C  6E08               	movwf	(??___xxtofl+1)^0,c
  5183   00417E  0E00               	movlw	0
  5184   004180  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  5185   004182  6E09               	movwf	(??___xxtofl+2)^0,c
  5186   004184  0EFE               	movlw	254
  5187   004186  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  5188   004188  6E0A               	movwf	(??___xxtofl+3)^0,c
  5189   00418A  5007               	movf	??___xxtofl^0,w,c
  5190   00418C  1008               	iorwf	(??___xxtofl+1)^0,w,c
  5191   00418E  1009               	iorwf	(??___xxtofl+2)^0,w,c
  5192   004190  100A               	iorwf	(??___xxtofl+3)^0,w,c
  5193   004192  A4D8               	btfss	status,2,c
  5194   004194  EFCE  F020         	goto	u8141
  5195   004198  EFD0  F020         	goto	u8140
  5196   00419C                     u8141:
  5197   00419C  EFB3  F020         	goto	l6208
  5198   0041A0                     u8140:
  5199   0041A0  EFDE  F020         	goto	l1107
  5200   0041A4                     l6212:
  5201   0041A4  2A0C               	incf	___xxtofl@exp^0,f,c
  5202   0041A6  0E01               	movlw	1
  5203   0041A8  260D               	addwf	___xxtofl@arg^0,f,c
  5204   0041AA  0E00               	movlw	0
  5205   0041AC  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
  5206   0041AE  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
  5207   0041B0  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
  5208   0041B2  90D8               	bcf	status,0,c
  5209   0041B4  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  5210   0041B6  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  5211   0041B8  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  5212   0041BA  320D               	rrcf	___xxtofl@arg^0,f,c
  5213   0041BC                     l1107:
  5214   0041BC  0E00               	movlw	0
  5215   0041BE  140D               	andwf	___xxtofl@arg^0,w,c
  5216   0041C0  6E07               	movwf	??___xxtofl^0,c
  5217   0041C2  0E00               	movlw	0
  5218   0041C4  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  5219   0041C6  6E08               	movwf	(??___xxtofl+1)^0,c
  5220   0041C8  0E00               	movlw	0
  5221   0041CA  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  5222   0041CC  6E09               	movwf	(??___xxtofl+2)^0,c
  5223   0041CE  0EFF               	movlw	255
  5224   0041D0  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  5225   0041D2  6E0A               	movwf	(??___xxtofl+3)^0,c
  5226   0041D4  5007               	movf	??___xxtofl^0,w,c
  5227   0041D6  1008               	iorwf	(??___xxtofl+1)^0,w,c
  5228   0041D8  1009               	iorwf	(??___xxtofl+2)^0,w,c
  5229   0041DA  100A               	iorwf	(??___xxtofl+3)^0,w,c
  5230   0041DC  A4D8               	btfss	status,2,c
  5231   0041DE  EFF3  F020         	goto	u8151
  5232   0041E2  EFF5  F020         	goto	u8150
  5233   0041E6                     u8151:
  5234   0041E6  EFD2  F020         	goto	l6212
  5235   0041EA                     u8150:
  5236   0041EA  EFFD  F020         	goto	l6220
  5237   0041EE                     l6218:
  5238   0041EE  060C               	decf	___xxtofl@exp^0,f,c
  5239   0041F0  90D8               	bcf	status,0,c
  5240   0041F2  360D               	rlcf	___xxtofl@arg^0,f,c
  5241   0041F4  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
  5242   0041F6  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
  5243   0041F8  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
  5244   0041FA                     l6220:
  5245   0041FA  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
  5246   0041FC  EF02  F021         	goto	u8161
  5247   004200  EF04  F021         	goto	u8160
  5248   004204                     u8161:
  5249   004204  EF0C  F021         	goto	l1114
  5250   004208                     u8160:
  5251   004208  0E02               	movlw	2
  5252   00420A  600C               	cpfslt	___xxtofl@exp^0,c
  5253   00420C  EF0A  F021         	goto	u8171
  5254   004210  EF0C  F021         	goto	u8170
  5255   004214                     u8171:
  5256   004214  EFF7  F020         	goto	l6218
  5257   004218                     u8170:
  5258   004218                     l1114:
  5259   004218  B00C               	btfsc	___xxtofl@exp^0,0,c
  5260   00421A  EF11  F021         	goto	u8181
  5261   00421E  EF13  F021         	goto	u8180
  5262   004222                     u8181:
  5263   004222  EF14  F021         	goto	l6226
  5264   004226                     u8180:
  5265   004226  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
  5266   004228                     l6226:
  5267   004228  90D8               	bcf	status,0,c
  5268   00422A  320C               	rrcf	___xxtofl@exp^0,f,c
  5269   00422C  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  5270   004230  6A08               	clrf	(??___xxtofl+1)^0,c
  5271   004232  6A09               	clrf	(??___xxtofl+2)^0,c
  5272   004234  6A0A               	clrf	(??___xxtofl+3)^0,c
  5273   004236  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  5274   00423A  6A09               	clrf	(??___xxtofl+2)^0,c
  5275   00423C  6A08               	clrf	(??___xxtofl+1)^0,c
  5276   00423E  6A07               	clrf	??___xxtofl^0,c
  5277   004240  5007               	movf	??___xxtofl^0,w,c
  5278   004242  120D               	iorwf	___xxtofl@arg^0,f,c
  5279   004244  5008               	movf	(??___xxtofl+1)^0,w,c
  5280   004246  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
  5281   004248  5009               	movf	(??___xxtofl+2)^0,w,c
  5282   00424A  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
  5283   00424C  500A               	movf	(??___xxtofl+3)^0,w,c
  5284   00424E  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
  5285   004250  500B               	movf	___xxtofl@sign^0,w,c
  5286   004252  B4D8               	btfsc	status,2,c
  5287   004254  EF2E  F021         	goto	u8191
  5288   004258  EF30  F021         	goto	u8190
  5289   00425C                     u8191:
  5290   00425C  EF38  F021         	goto	l6236
  5291   004260                     u8190:
  5292   004260  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  5293   004262  EF37  F021         	goto	u8200
  5294   004266  EF35  F021         	goto	u8201
  5295   00426A                     u8201:
  5296   00426A  EF38  F021         	goto	l6236
  5297   00426E                     u8200:
  5298   00426E  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
  5299   004270                     l6236:
  5300   004270  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  5301   004274  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  5302   004278  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  5303   00427C  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  5304   004280                     l1103:
  5305   004280  0012               	return		;funcret
  5306   004282                     __end_of___xxtofl:
  5307                           	callstack 0
  5308                           
  5309 ;; *************** function _moveDisplay *****************
  5310 ;; Defined at:
  5311 ;;		line 11 in file "menu.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  menuI           1    wreg     unsigned char 
  5314 ;;  where           1  122[BANK0 ] unsigned char 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;  menuI           1   42[BANK1 ] unsigned char 
  5317 ;;  menuItem2      17   17[BANK1 ] unsigned char [17]
  5318 ;;  menuItem1      17    0[BANK1 ] unsigned char [17]
  5319 ;;  menuItems       8   34[BANK1 ] PTR unsigned char [8]
  5320 ;;		 -> STR_16(1), STR_15(6), STR_14(5), STR_13(4), 
  5321 ;;		 -> STR_12(4), STR_11(4), STR_10(5), STR_9(5), 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  1    wreg      unsigned char 
  5324 ;; Registers used:
  5325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5331 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;      Locals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;      Totals:         0       4      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;Total ram usage:       47 bytes
  5336 ;; Hardware stack levels used: 1
  5337 ;; Hardware stack levels required when called: 9
  5338 ;; This function calls:
  5339 ;;		_LCD_Clear
  5340 ;;		_LCD_ShowString
  5341 ;;		_sprintf
  5342 ;; This function is called by:
  5343 ;;		_main
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text19
  5348   004846                     __ptext19:
  5349                           	callstack 0
  5350   004846                     _moveDisplay:
  5351                           	callstack 21
  5352                           
  5353                           ;incstack = 0
  5354                           ;moveDisplay@menuI stored from wreg
  5355   004846  0101               	movlb	1	; () banked
  5356   004848  6F9C               	movwf	moveDisplay@menuI& (0+255),b
  5357   00484A                     
  5358                           ;menu.c: 12:     LCD_Clear();
  5359   00484A  EC68  F02A         	call	_LCD_Clear	;wreg free
  5360   00484E                     
  5361                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  5362   00484E  EE21  F0B7         	lfsr	2,moveDisplay@F6954
  5363   004852  EE11  F094         	lfsr	1,moveDisplay@menuItems
  5364   004856  0E07               	movlw	7
  5365   004858                     u8721:
  5366   004858  CFDB FFE3          	movff	plusw2,plusw1
  5367   00485C  06E8               	decf	wreg,f,c
  5368   00485E  E2FC               	bc	u8721
  5369                           
  5370                           ;menu.c: 14:     switch (where){
  5371   004860  EF4A  F024         	goto	l6632
  5372   004864                     l6622:
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;menu.c: 18:             if(menuI<6){
  5376   004864  0E06               	movlw	6
  5377   004866  0101               	movlb	1	; () banked
  5378   004868  619C               	cpfslt	moveDisplay@menuI& (0+255),b
  5379   00486A  EF39  F024         	goto	u8731
  5380   00486E  EF3B  F024         	goto	u8730
  5381   004872                     u8731:
  5382   004872  EF5A  F024         	goto	l6634
  5383   004876                     u8730:
  5384   004876                     
  5385                           ; BSR set to: 1
  5386                           ;menu.c: 19:             menuI++;
  5387   004876  2B9C               	incf	moveDisplay@menuI& (0+255),f,b
  5388   004878  EF5A  F024         	goto	l6634
  5389   00487C                     l6626:
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;menu.c: 23:             if(menuI>0){
  5393   00487C  0101               	movlb	1	; () banked
  5394   00487E  519C               	movf	moveDisplay@menuI& (0+255),w,b
  5395   004880  B4D8               	btfsc	status,2,c
  5396   004882  EF45  F024         	goto	u8741
  5397   004886  EF47  F024         	goto	u8740
  5398   00488A                     u8741:
  5399   00488A  EF5A  F024         	goto	l6634
  5400   00488E                     u8740:
  5401   00488E                     
  5402                           ; BSR set to: 1
  5403                           ;menu.c: 24:             menuI--;
  5404   00488E  079C               	decf	moveDisplay@menuI& (0+255),f,b
  5405   004890  EF5A  F024         	goto	l6634
  5406   004894                     l6632:
  5407   004894  0100               	movlb	0	; () banked
  5408   004896  51DA               	movf	moveDisplay@where& (0+255),w,b
  5409                           
  5410                           ; Switch size 1, requested type "simple"
  5411                           ; Number of cases is 3, Range of values is 0 to 2
  5412                           ; switch strategies available:
  5413                           ; Name         Instructions Cycles
  5414                           ; simple_byte           10     6 (average)
  5415                           ;	Chosen strategy is simple_byte
  5416   004898  0A00               	xorlw	0	; case 0
  5417   00489A  B4D8               	btfsc	status,2,c
  5418   00489C  EF5A  F024         	goto	l6634
  5419   0048A0  0A01               	xorlw	1	; case 1
  5420   0048A2  B4D8               	btfsc	status,2,c
  5421   0048A4  EF32  F024         	goto	l6622
  5422   0048A8  0A03               	xorlw	3	; case 2
  5423   0048AA  B4D8               	btfsc	status,2,c
  5424   0048AC  EF3E  F024         	goto	l6626
  5425   0048B0  EF5A  F024         	goto	l6634
  5426   0048B4                     l6634:
  5427                           
  5428                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  5429   0048B4  0E72               	movlw	low moveDisplay@menuItem1
  5430   0048B6  0100               	movlb	0	; () banked
  5431   0048B8  6FC2               	movwf	sprintf@s& (0+255),b
  5432   0048BA  0E01               	movlw	high moveDisplay@menuItem1
  5433   0048BC  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  5434   0048BE  0EC7               	movlw	low STR_17
  5435   0048C0  6FC4               	movwf	sprintf@fmt& (0+255),b
  5436   0048C2  0E00               	movlw	0
  5437   0048C4  6FC6               	movwf	(?_sprintf+4)& (0+255),b
  5438   0048C6  0E0F               	movlw	15
  5439   0048C8  6FC5               	movwf	(?_sprintf+3)& (0+255),b
  5440   0048CA  0E94               	movlw	low moveDisplay@menuItems
  5441   0048CC  0101               	movlb	1	; () banked
  5442   0048CE  259C               	addwf	moveDisplay@menuI& (0+255),w,b
  5443   0048D0  6ED9               	movwf	fsr2l,c
  5444   0048D2  6ADA               	clrf	fsr2h,c
  5445   0048D4  0E01               	movlw	high moveDisplay@menuItems
  5446   0048D6  22DA               	addwfc	fsr2h,f,c
  5447   0048D8  50DF               	movf	indf2,w,c
  5448   0048DA  0100               	movlb	0	; () banked
  5449   0048DC  6FDB               	movwf	??_moveDisplay& (0+255),b
  5450   0048DE  C0DB  F0C7         	movff	??_moveDisplay,?_sprintf+5
  5451   0048E2  51C7               	movf	(?_sprintf+5)& (0+255),w,b
  5452   0048E4  A4D8               	btfss	status,2,c
  5453   0048E6  0E10               	movlw	high __smallconst
  5454   0048E8  6FC8               	movwf	(?_sprintf+6)& (0+255),b
  5455   0048EA  ECEE  F029         	call	_sprintf	;wreg free
  5456                           
  5457                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  5458   0048EE  0E83               	movlw	low moveDisplay@menuItem2
  5459   0048F0  0100               	movlb	0	; () banked
  5460   0048F2  6FC2               	movwf	sprintf@s& (0+255),b
  5461   0048F4  0E01               	movlw	high moveDisplay@menuItem2
  5462   0048F6  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  5463   0048F8  0EC8               	movlw	low (STR_17+1)
  5464   0048FA  6FC4               	movwf	sprintf@fmt& (0+255),b
  5465   0048FC  0E00               	movlw	0
  5466   0048FE  6FC6               	movwf	(?_sprintf+4)& (0+255),b
  5467   004900  0E10               	movlw	16
  5468   004902  6FC5               	movwf	(?_sprintf+3)& (0+255),b
  5469   004904  0101               	movlb	1	; () banked
  5470   004906  519C               	movf	moveDisplay@menuI& (0+255),w,b
  5471   004908  0100               	movlb	0	; () banked
  5472   00490A  6FDB               	movwf	??_moveDisplay& (0+255),b
  5473   00490C  6BDC               	clrf	(??_moveDisplay+1)& (0+255),b
  5474   00490E  0E01               	movlw	1
  5475   004910  27DB               	addwf	??_moveDisplay& (0+255),f,b
  5476   004912  0E00               	movlw	0
  5477   004914  23DC               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  5478   004916  0E94               	movlw	low moveDisplay@menuItems
  5479   004918  25DB               	addwf	??_moveDisplay& (0+255),w,b
  5480   00491A  6ED9               	movwf	fsr2l,c
  5481   00491C  0E01               	movlw	high moveDisplay@menuItems
  5482   00491E  21DC               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  5483   004920  6EDA               	movwf	fsr2h,c
  5484   004922  50DF               	movf	indf2,w,c
  5485   004924  6FDD               	movwf	(??_moveDisplay+2)& (0+255),b
  5486   004926  C0DD  F0C7         	movff	??_moveDisplay+2,?_sprintf+5
  5487   00492A  51C7               	movf	(?_sprintf+5)& (0+255),w,b
  5488   00492C  A4D8               	btfss	status,2,c
  5489   00492E  0E10               	movlw	high __smallconst
  5490   004930  6FC8               	movwf	(?_sprintf+6)& (0+255),b
  5491   004932  ECEE  F029         	call	_sprintf	;wreg free
  5492   004936                     
  5493                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  5494   004936  0E72               	movlw	low moveDisplay@menuItem1
  5495   004938  6E04               	movwf	LCD_ShowString@textData^0,c
  5496   00493A  0E01               	movlw	high moveDisplay@menuItem1
  5497   00493C  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  5498   00493E  0E01               	movlw	1
  5499   004940  EC65  F027         	call	_LCD_ShowString
  5500   004944                     
  5501                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  5502   004944  0E83               	movlw	low moveDisplay@menuItem2
  5503   004946  6E04               	movwf	LCD_ShowString@textData^0,c
  5504   004948  0E01               	movlw	high moveDisplay@menuItem2
  5505   00494A  6E05               	movwf	(LCD_ShowString@textData+1)^0,c
  5506   00494C  0E02               	movlw	2
  5507   00494E  EC65  F027         	call	_LCD_ShowString
  5508   004952                     
  5509                           ;menu.c: 35:     return menuI;
  5510   004952  0101               	movlb	1	; () banked
  5511   004954  519C               	movf	moveDisplay@menuI& (0+255),w,b
  5512   004956                     
  5513                           ; BSR set to: 1
  5514   004956  0012               	return		;funcret
  5515   004958                     __end_of_moveDisplay:
  5516                           	callstack 0
  5517                           
  5518 ;; *************** function _sprintf *****************
  5519 ;; Defined at:
  5520 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;  s               2   98[BANK0 ] PTR unsigned char 
  5523 ;;		 -> runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), 
  5524 ;;  fmt             1  100[BANK0 ] PTR const unsigned char 
  5525 ;;		 -> STR_19(19), STR_18(5), STR_17(6), 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  f              12  110[BANK0 ] struct _IO_FILE
  5528 ;;  ret             2    0        int 
  5529 ;;  ap              1  109[BANK0 ] PTR void [1]
  5530 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  2   98[BANK0 ] int 
  5533 ;; Registers used:
  5534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5540 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;Total ram usage:       24 bytes
  5545 ;; Hardware stack levels used: 1
  5546 ;; Hardware stack levels required when called: 8
  5547 ;; This function calls:
  5548 ;;		_vfprintf
  5549 ;; This function is called by:
  5550 ;;		_moveDisplay
  5551 ;;		_runADC
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text20
  5556   0053DC                     __ptext20:
  5557                           	callstack 0
  5558   0053DC                     _sprintf:
  5559                           	callstack 21
  5560   0053DC  0EC5               	movlw	low (?_sprintf+3)
  5561   0053DE  0100               	movlb	0	; () banked
  5562   0053E0  6FCD               	movwf	sprintf@ap& (0+255),b
  5563   0053E2  C0C2  F0CE         	movff	sprintf@s,sprintf@f
  5564   0053E6  C0C3  F0CF         	movff	sprintf@s+1,sprintf@f+1
  5565   0053EA                     
  5566                           ; BSR set to: 0
  5567   0053EA  0E00               	movlw	0
  5568   0053EC  6FD2               	movwf	(sprintf@f+4)& (0+255),b
  5569   0053EE  0E00               	movlw	0
  5570   0053F0  6FD1               	movwf	(sprintf@f+3)& (0+255),b
  5571   0053F2                     
  5572                           ; BSR set to: 0
  5573   0053F2  0E00               	movlw	0
  5574   0053F4  6FD9               	movwf	(sprintf@f+11)& (0+255),b
  5575   0053F6  0E00               	movlw	0
  5576   0053F8  6FD8               	movwf	(sprintf@f+10)& (0+255),b
  5577   0053FA                     
  5578                           ; BSR set to: 0
  5579   0053FA  0ECE               	movlw	low sprintf@f
  5580   0053FC  6FBD               	movwf	vfprintf@fp& (0+255),b
  5581   0053FE  6BBE               	clrf	(vfprintf@fp+1)& (0+255),b
  5582   005400  C0C4  F0BF         	movff	sprintf@fmt,vfprintf@fmt
  5583   005404  0ECD               	movlw	low sprintf@ap
  5584   005406  6FC0               	movwf	vfprintf@ap& (0+255),b
  5585   005408  EC86  F029         	call	_vfprintf	;wreg free
  5586   00540C  0100               	movlb	0	; () banked
  5587   00540E  51D1               	movf	(sprintf@f+3)& (0+255),w,b
  5588   005410  25C2               	addwf	sprintf@s& (0+255),w,b
  5589   005412  6ED9               	movwf	fsr2l,c
  5590   005414  51D2               	movf	(sprintf@f+4)& (0+255),w,b
  5591   005416  21C3               	addwfc	(sprintf@s+1)& (0+255),w,b
  5592   005418  6EDA               	movwf	fsr2h,c
  5593   00541A  6ADF               	clrf	indf2,c
  5594   00541C                     
  5595                           ; BSR set to: 0
  5596   00541C  0012               	return		;funcret
  5597   00541E                     __end_of_sprintf:
  5598                           	callstack 0
  5599                           
  5600 ;; *************** function _vfprintf *****************
  5601 ;; Defined at:
  5602 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;  fp              2   93[BANK0 ] PTR struct _IO_FILE
  5605 ;;		 -> NULL(0), sprintf@f(12), 
  5606 ;;  fmt             1   95[BANK0 ] PTR const unsigned char 
  5607 ;;		 -> STR_19(19), STR_18(5), STR_17(6), STR_8(5), 
  5608 ;;  ap              1   96[BANK0 ] PTR PTR void 
  5609 ;;		 -> printf@ap(1), sprintf@ap(1), 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  cfmt            1   97[BANK0 ] PTR unsigned char 
  5612 ;;		 -> STR_19(19), STR_18(5), STR_17(6), STR_8(5), 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  2   93[BANK0 ] int 
  5615 ;; Registers used:
  5616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5622 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;Total ram usage:        5 bytes
  5627 ;; Hardware stack levels used: 1
  5628 ;; Hardware stack levels required when called: 7
  5629 ;; This function calls:
  5630 ;;		_vfpfcnvrt
  5631 ;; This function is called by:
  5632 ;;		_sprintf
  5633 ;;		_printf
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text21
  5638   00530C                     __ptext21:
  5639                           	callstack 0
  5640   00530C                     _vfprintf:
  5641                           	callstack 21
  5642   00530C                     
  5643                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  5644   00530C  C0BF  F0C1         	movff	vfprintf@fmt,vfprintf@cfmt
  5645                           
  5646                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5647   005310  EF95  F029         	goto	l6370
  5648   005314                     l6368:
  5649                           
  5650                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5651   005314  C0BD  F0B1         	movff	vfprintf@fp,vfpfcnvrt@fp
  5652   005318  C0BE  F0B2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5653   00531C  0EC1               	movlw	low vfprintf@cfmt
  5654   00531E  0100               	movlb	0	; () banked
  5655   005320  6FB3               	movwf	vfpfcnvrt@fmt& (0+255),b
  5656   005322  C0C0  F0B4         	movff	vfprintf@ap,vfpfcnvrt@ap
  5657   005326  EC6E  F014         	call	_vfpfcnvrt	;wreg free
  5658   00532A                     l6370:
  5659                           
  5660                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5661   00532A  C0C1  FFF6         	movff	vfprintf@cfmt,tblptrl
  5662   00532E                     	if	1	;There is more than 1 active tblptr byte
  5663   00532E  0E10               	movlw	high __smallconst
  5664   005330  6EF7               	movwf	tblptrh,c
  5665   005332                     	endif
  5666   005332                     	if	0	;tblptru may be non-zero
  5667   005332                     	endif
  5668   005332                     	if	0	;tblptru may be non-zero
  5669   005332                     	endif
  5670   005332  0008               	tblrd		*
  5671   005334  50F5               	movf	tablat,w,c
  5672   005336  0900               	iorlw	0
  5673   005338  A4D8               	btfss	status,2,c
  5674   00533A  EFA1  F029         	goto	u8351
  5675   00533E  EFA3  F029         	goto	u8350
  5676   005342                     u8351:
  5677   005342  EF8A  F029         	goto	l6368
  5678   005346                     u8350:
  5679   005346                     
  5680                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  5681   005346  0E00               	movlw	0
  5682   005348  0100               	movlb	0	; () banked
  5683   00534A  6FBE               	movwf	(?_vfprintf+1)& (0+255),b
  5684   00534C  0E00               	movlw	0
  5685   00534E  6FBD               	movwf	?_vfprintf& (0+255),b
  5686   005350                     
  5687                           ; BSR set to: 0
  5688   005350  0012               	return		;funcret
  5689   005352                     __end_of_vfprintf:
  5690                           	callstack 0
  5691                           
  5692 ;; *************** function _vfpfcnvrt *****************
  5693 ;; Defined at:
  5694 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;  fp              2   81[BANK0 ] PTR struct _IO_FILE
  5697 ;;		 -> NULL(0), sprintf@f(12), 
  5698 ;;  fmt             1   83[BANK0 ] PTR PTR unsigned char 
  5699 ;;		 -> vfprintf@cfmt(1), 
  5700 ;;  ap              1   84[BANK0 ] PTR PTR void 
  5701 ;;		 -> printf@ap(1), sprintf@ap(1), 
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;  convarg         4   86[BANK0 ] struct .
  5704 ;;  cp              1   92[BANK0 ] PTR unsigned char 
  5705 ;;		 -> STR_19(19), STR_18(5), STR_17(6), STR_8(5), 
  5706 ;;  done            1   91[BANK0 ] _Bool 
  5707 ;;  c               1   90[BANK0 ] unsigned char 
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  1    wreg      void 
  5710 ;; Registers used:
  5711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5717 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5718 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5719 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5720 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5721 ;;Total ram usage:       12 bytes
  5722 ;; Hardware stack levels used: 1
  5723 ;; Hardware stack levels required when called: 6
  5724 ;; This function calls:
  5725 ;;		_dtoa
  5726 ;;		_efgtoa
  5727 ;;		_fputc
  5728 ;;		_read_prec_or_width
  5729 ;;		_stoa
  5730 ;; This function is called by:
  5731 ;;		_vfprintf
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           	psect	text22
  5736   0028DC                     __ptext22:
  5737                           	callstack 0
  5738   0028DC                     _vfpfcnvrt:
  5739                           	callstack 21
  5740   0028DC                     
  5741                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  5742   0028DC  0100               	movlb	0	; () banked
  5743   0028DE  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5744   0028E0  6ED9               	movwf	fsr2l,c
  5745   0028E2  6ADA               	clrf	fsr2h,c
  5746   0028E4  CFDF FFF6          	movff	indf2,tblptrl
  5747   0028E8                     	if	1	;There is more than 1 active tblptr byte
  5748   0028E8  0E10               	movlw	high __smallconst
  5749   0028EA  6EF7               	movwf	tblptrh,c
  5750   0028EC                     	endif
  5751   0028EC                     	if	0	;tblptru may be non-zero
  5752   0028EC                     	endif
  5753   0028EC                     	if	0	;tblptru may be non-zero
  5754   0028EC                     	endif
  5755   0028EC  0008               	tblrd		*
  5756   0028EE  50F5               	movf	tablat,w,c
  5757   0028F0  0A25               	xorlw	37
  5758   0028F2  A4D8               	btfss	status,2,c
  5759   0028F4  EF7E  F014         	goto	u8211
  5760   0028F8  EF80  F014         	goto	u8210
  5761   0028FC                     u8211:
  5762   0028FC  EF3C  F016         	goto	l6350
  5763   002900                     u8210:
  5764   002900                     
  5765                           ; BSR set to: 0
  5766                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  5767   002900  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5768   002902  6ED9               	movwf	fsr2l,c
  5769   002904  6ADA               	clrf	fsr2h,c
  5770   002906  2ADF               	incf	indf2,f,c
  5771   002908                     
  5772                           ; BSR set to: 0
  5773                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  5774   002908  0E00               	movlw	0
  5775   00290A  6FFD               	movwf	(_width+1)& (0+255),b
  5776   00290C  0E00               	movlw	0
  5777   00290E  6FFC               	movwf	_width& (0+255),b
  5778   002910  C0FC  F0FE         	movff	_width,_flags
  5779   002914                     
  5780                           ; BSR set to: 0
  5781                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  5782   002914  685B               	setf	_prec^0,c
  5783   002916  685C               	setf	(_prec+1)^0,c
  5784   002918                     
  5785                           ; BSR set to: 0
  5786                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  5787   002918  0E00               	movlw	0
  5788   00291A  6FBB               	movwf	vfpfcnvrt@done& (0+255),b
  5789                           
  5790                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5791   00291C  EFAA  F014         	goto	l6260
  5792   002920                     l6250:
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1214:            
      +                                   flags |= (1 << 0);
  5796   002920  81FE               	bsf	_flags& (0+255),0,b
  5797   002922                     
  5798                           ; BSR set to: 0
  5799                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1215:            
      +                                   ++*fmt;
  5800   002922  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5801   002924  6ED9               	movwf	fsr2l,c
  5802   002926  6ADA               	clrf	fsr2h,c
  5803   002928  2ADF               	incf	indf2,f,c
  5804                           
  5805                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1216:            
      +                                   break;
  5806   00292A  EFAA  F014         	goto	l6260
  5807   00292E                     l6254:
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  5811   00292E  0E01               	movlw	1
  5812   002930  6FBB               	movwf	vfpfcnvrt@done& (0+255),b
  5813                           
  5814                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  5815   002932  EFAA  F014         	goto	l6260
  5816   002936                     l6258:
  5817                           
  5818                           ; BSR set to: 0
  5819   002936  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5820   002938  6ED9               	movwf	fsr2l,c
  5821   00293A  6ADA               	clrf	fsr2h,c
  5822   00293C  CFDF FFF6          	movff	indf2,tblptrl
  5823   002940                     	if	1	;There is more than 1 active tblptr byte
  5824   002940  0E10               	movlw	high __smallconst
  5825   002942  6EF7               	movwf	tblptrh,c
  5826   002944                     	endif
  5827   002944                     	if	0	;tblptru may be non-zero
  5828   002944                     	endif
  5829   002944                     	if	0	;tblptru may be non-zero
  5830   002944                     	endif
  5831   002944  0008               	tblrd		*
  5832   002946  50F5               	movf	tablat,w,c
  5833                           
  5834                           ; Switch size 1, requested type "simple"
  5835                           ; Number of cases is 1, Range of values is 45 to 45
  5836                           ; switch strategies available:
  5837                           ; Name         Instructions Cycles
  5838                           ; simple_byte            4     3 (average)
  5839                           ;	Chosen strategy is simple_byte
  5840   002948  0A2D               	xorlw	45	; case 45
  5841   00294A  B4D8               	btfsc	status,2,c
  5842   00294C  EF90  F014         	goto	l6250
  5843   002950  EF97  F014         	goto	l6254
  5844   002954                     l6260:
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5848   002954  51BB               	movf	vfpfcnvrt@done& (0+255),w,b
  5849   002956  B4D8               	btfsc	status,2,c
  5850   002958  EFB0  F014         	goto	u8221
  5851   00295C  EFB2  F014         	goto	u8220
  5852   002960                     u8221:
  5853   002960  EF9B  F014         	goto	l6258
  5854   002964                     u8220:
  5855   002964                     
  5856                           ; BSR set to: 0
  5857                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  5858   002964  C0B3  F009         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  5859   002968  C0B4  F00A         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  5860   00296C  EC6B  F028         	call	_read_prec_or_width	;wreg free
  5861   002970  C009  F0FC         	movff	?_read_prec_or_width,_width
  5862   002974  C00A  F0FD         	movff	?_read_prec_or_width+1,_width+1
  5863   002978                     
  5864                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  5865   002978  0100               	movlb	0	; () banked
  5866   00297A  BFFD               	btfsc	(_width+1)& (0+255),7,b
  5867   00297C  EFC4  F014         	goto	u8230
  5868   002980  EFC2  F014         	goto	u8231
  5869   002984                     u8231:
  5870   002984  EFC9  F014         	goto	l6268
  5871   002988                     u8230:
  5872   002988                     
  5873                           ; BSR set to: 0
  5874                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  5875   002988  81FE               	bsf	_flags& (0+255),0,b
  5876                           
  5877                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  5878   00298A  6DFC               	negf	_width& (0+255),b
  5879   00298C  1FFD               	comf	(_width+1)& (0+255),f,b
  5880   00298E  B0D8               	btfsc	status,0,c
  5881   002990  2BFD               	incf	(_width+1)& (0+255),f,b
  5882   002992                     l6268:
  5883                           
  5884                           ; BSR set to: 0
  5885                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  5886   002992  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5887   002994  6ED9               	movwf	fsr2l,c
  5888   002996  6ADA               	clrf	fsr2h,c
  5889   002998  CFDF FFF6          	movff	indf2,tblptrl
  5890   00299C                     	if	1	;There is more than 1 active tblptr byte
  5891   00299C  0E10               	movlw	high __smallconst
  5892   00299E  6EF7               	movwf	tblptrh,c
  5893   0029A0                     	endif
  5894   0029A0                     	if	0	;tblptru may be non-zero
  5895   0029A0                     	endif
  5896   0029A0                     	if	0	;tblptru may be non-zero
  5897   0029A0                     	endif
  5898   0029A0  0008               	tblrd		*
  5899   0029A2  50F5               	movf	tablat,w,c
  5900   0029A4  0A2E               	xorlw	46
  5901   0029A6  A4D8               	btfss	status,2,c
  5902   0029A8  EFD8  F014         	goto	u8241
  5903   0029AC  EFDA  F014         	goto	u8240
  5904   0029B0                     u8241:
  5905   0029B0  EFE8  F014         	goto	l6274
  5906   0029B4                     u8240:
  5907   0029B4                     
  5908                           ; BSR set to: 0
  5909                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  5910   0029B4  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5911   0029B6  6ED9               	movwf	fsr2l,c
  5912   0029B8  6ADA               	clrf	fsr2h,c
  5913   0029BA  2ADF               	incf	indf2,f,c
  5914   0029BC                     
  5915                           ; BSR set to: 0
  5916                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  5917   0029BC  C0B3  F009         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  5918   0029C0  C0B4  F00A         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  5919   0029C4  EC6B  F028         	call	_read_prec_or_width	;wreg free
  5920   0029C8  C009  F05B         	movff	?_read_prec_or_width,_prec
  5921   0029CC  C00A  F05C         	movff	?_read_prec_or_width+1,_prec+1
  5922   0029D0                     l6274:
  5923                           
  5924                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  5925   0029D0  0100               	movlb	0	; () banked
  5926   0029D2  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5927   0029D4  6ED9               	movwf	fsr2l,c
  5928   0029D6  6ADA               	clrf	fsr2h,c
  5929   0029D8  50DF               	movf	indf2,w,c
  5930   0029DA  6FBC               	movwf	vfpfcnvrt@cp& (0+255),b
  5931   0029DC                     
  5932                           ; BSR set to: 0
  5933                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5934   0029DC  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5935   0029E0                     	if	1	;There is more than 1 active tblptr byte
  5936   0029E0  0E10               	movlw	high __smallconst
  5937   0029E2  6EF7               	movwf	tblptrh,c
  5938   0029E4                     	endif
  5939   0029E4                     	if	0	;tblptru may be non-zero
  5940   0029E4                     	endif
  5941   0029E4                     	if	0	;tblptru may be non-zero
  5942   0029E4                     	endif
  5943   0029E4  0008               	tblrd		*
  5944   0029E6  50F5               	movf	tablat,w,c
  5945   0029E8  0A64               	xorlw	100
  5946   0029EA  B4D8               	btfsc	status,2,c
  5947   0029EC  EFFA  F014         	goto	u8251
  5948   0029F0  EFFC  F014         	goto	u8250
  5949   0029F4                     u8251:
  5950   0029F4  EF0A  F015         	goto	l6280
  5951   0029F8                     u8250:
  5952   0029F8                     
  5953                           ; BSR set to: 0
  5954   0029F8  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5955   0029FC                     	if	1	;There is more than 1 active tblptr byte
  5956   0029FC  0E10               	movlw	high __smallconst
  5957   0029FE  6EF7               	movwf	tblptrh,c
  5958   002A00                     	endif
  5959   002A00                     	if	0	;tblptru may be non-zero
  5960   002A00                     	endif
  5961   002A00                     	if	0	;tblptru may be non-zero
  5962   002A00                     	endif
  5963   002A00  0008               	tblrd		*
  5964   002A02  50F5               	movf	tablat,w,c
  5965   002A04  0A69               	xorlw	105
  5966   002A06  A4D8               	btfss	status,2,c
  5967   002A08  EF08  F015         	goto	u8261
  5968   002A0C  EF0A  F015         	goto	u8260
  5969   002A10                     u8261:
  5970   002A10  EF27  F015         	goto	l6288
  5971   002A14                     u8260:
  5972   002A14                     l6280:
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5976   002A14  51B4               	movf	vfpfcnvrt@ap& (0+255),w,b
  5977   002A16  6ED9               	movwf	fsr2l,c
  5978   002A18  6ADA               	clrf	fsr2h,c
  5979   002A1A  0E02               	movlw	2
  5980   002A1C  26DF               	addwf	indf2,f,c
  5981   002A1E  5CDF               	subwf	indf2,w,c
  5982   002A20  6ED9               	movwf	fsr2l,c
  5983   002A22  6ADA               	clrf	fsr2h,c
  5984   002A24  CFDE F0B6          	movff	postinc2,vfpfcnvrt@convarg
  5985   002A28  CFDE F0B7          	movff	postinc2,vfpfcnvrt@convarg+1
  5986   002A2C                     
  5987                           ; BSR set to: 0
  5988                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  5989   002A2C  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5990   002A2E  6ED9               	movwf	fsr2l,c
  5991   002A30  6ADA               	clrf	fsr2h,c
  5992   002A32  29BC               	incf	vfpfcnvrt@cp& (0+255),w,b
  5993   002A34  6EDF               	movwf	indf2,c
  5994   002A36                     
  5995                           ; BSR set to: 0
  5996                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  5997   002A36  C0B1  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  5998   002A3A  C0B2  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5999   002A3E  C0B6  F01F         	movff	vfpfcnvrt@convarg,dtoa@d
  6000   002A42  C0B7  F020         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6001   002A46  EC14  F022         	call	_dtoa	;wreg free
  6002   002A4A  EF4F  F016         	goto	l1272
  6003   002A4E                     l6288:
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  6007   002A4E  0E00               	movlw	0
  6008   002A50  6FBB               	movwf	vfpfcnvrt@done& (0+255),b
  6009   002A52                     
  6010                           ; BSR set to: 0
  6011                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  6012   002A52  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6013   002A54  6ED9               	movwf	fsr2l,c
  6014   002A56  6ADA               	clrf	fsr2h,c
  6015   002A58  CFDF FFF6          	movff	indf2,tblptrl
  6016   002A5C                     	if	1	;There is more than 1 active tblptr byte
  6017   002A5C  0E10               	movlw	high __smallconst
  6018   002A5E  6EF7               	movwf	tblptrh,c
  6019   002A60                     	endif
  6020   002A60                     	if	0	;tblptru may be non-zero
  6021   002A60                     	endif
  6022   002A60                     	if	0	;tblptru may be non-zero
  6023   002A60                     	endif
  6024   002A60  0008               	tblrd		*
  6025   002A62  50F5               	movf	tablat,w,c
  6026   002A64  0A73               	xorlw	115
  6027   002A66  A4D8               	btfss	status,2,c
  6028   002A68  EF38  F015         	goto	u8271
  6029   002A6C  EF3A  F015         	goto	u8270
  6030   002A70                     u8271:
  6031   002A70  EF42  F015         	goto	l6296
  6032   002A74                     u8270:
  6033   002A74                     
  6034                           ; BSR set to: 0
  6035                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  6036   002A74  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6037   002A76  6ED9               	movwf	fsr2l,c
  6038   002A78  6ADA               	clrf	fsr2h,c
  6039   002A7A  2ADF               	incf	indf2,f,c
  6040   002A7C                     l6294:
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  6044   002A7C  0E01               	movlw	1
  6045   002A7E  6FBB               	movwf	vfpfcnvrt@done& (0+255),b
  6046                           
  6047                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  6048   002A80  EF84  F015         	goto	l6306
  6049   002A84                     l6296:
  6050                           
  6051                           ; BSR set to: 0
  6052   002A84  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6053   002A86  6ED9               	movwf	fsr2l,c
  6054   002A88  6ADA               	clrf	fsr2h,c
  6055   002A8A  CFDF FFF6          	movff	indf2,tblptrl
  6056   002A8E                     	if	1	;There is more than 1 active tblptr byte
  6057   002A8E  0E10               	movlw	high __smallconst
  6058   002A90  6EF7               	movwf	tblptrh,c
  6059   002A92                     	endif
  6060   002A92                     	if	0	;tblptru may be non-zero
  6061   002A92                     	endif
  6062   002A92                     	if	0	;tblptru may be non-zero
  6063   002A92                     	endif
  6064   002A92  0008               	tblrd		*
  6065   002A94  50F5               	movf	tablat,w,c
  6066   002A96  0A6C               	xorlw	108
  6067   002A98  A4D8               	btfss	status,2,c
  6068   002A9A  EF51  F015         	goto	u8281
  6069   002A9E  EF53  F015         	goto	u8280
  6070   002AA2                     u8281:
  6071   002AA2  EF84  F015         	goto	l6306
  6072   002AA6                     u8280:
  6073   002AA6                     
  6074                           ; BSR set to: 0
  6075   002AA6  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6076   002AA8  6ED9               	movwf	fsr2l,c
  6077   002AAA  6ADA               	clrf	fsr2h,c
  6078   002AAC  50DF               	movf	indf2,w,c
  6079   002AAE  6FB5               	movwf	??_vfpfcnvrt& (0+255),b
  6080   002AB0  0E01               	movlw	1
  6081   002AB2  27B5               	addwf	??_vfpfcnvrt& (0+255),f,b
  6082   002AB4  C0B5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6083   002AB8                     	if	1	;There is more than 1 active tblptr byte
  6084   002AB8  0E10               	movlw	high __smallconst
  6085   002ABA  6EF7               	movwf	tblptrh,c
  6086   002ABC                     	endif
  6087   002ABC                     	if	0	;tblptru may be non-zero
  6088   002ABC                     	endif
  6089   002ABC                     	if	0	;tblptru may be non-zero
  6090   002ABC                     	endif
  6091   002ABC  0008               	tblrd		*
  6092   002ABE  50F5               	movf	tablat,w,c
  6093   002AC0  0A6C               	xorlw	108
  6094   002AC2  A4D8               	btfss	status,2,c
  6095   002AC4  EF66  F015         	goto	u8291
  6096   002AC8  EF68  F015         	goto	u8290
  6097   002ACC                     u8291:
  6098   002ACC  EF84  F015         	goto	l6306
  6099   002AD0                     u8290:
  6100   002AD0                     
  6101                           ; BSR set to: 0
  6102   002AD0  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6103   002AD2  6ED9               	movwf	fsr2l,c
  6104   002AD4  6ADA               	clrf	fsr2h,c
  6105   002AD6  50DF               	movf	indf2,w,c
  6106   002AD8  6FB5               	movwf	??_vfpfcnvrt& (0+255),b
  6107   002ADA  0E02               	movlw	2
  6108   002ADC  27B5               	addwf	??_vfpfcnvrt& (0+255),f,b
  6109   002ADE  C0B5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6110   002AE2                     	if	1	;There is more than 1 active tblptr byte
  6111   002AE2  0E10               	movlw	high __smallconst
  6112   002AE4  6EF7               	movwf	tblptrh,c
  6113   002AE6                     	endif
  6114   002AE6                     	if	0	;tblptru may be non-zero
  6115   002AE6                     	endif
  6116   002AE6                     	if	0	;tblptru may be non-zero
  6117   002AE6                     	endif
  6118   002AE6  0008               	tblrd		*
  6119   002AE8  50F5               	movf	tablat,w,c
  6120   002AEA  0A73               	xorlw	115
  6121   002AEC  A4D8               	btfss	status,2,c
  6122   002AEE  EF7B  F015         	goto	u8301
  6123   002AF2  EF7D  F015         	goto	u8300
  6124   002AF6                     u8301:
  6125   002AF6  EF84  F015         	goto	l6306
  6126   002AFA                     u8300:
  6127   002AFA                     
  6128                           ; BSR set to: 0
  6129                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  6130   002AFA  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6131   002AFC  6ED9               	movwf	fsr2l,c
  6132   002AFE  6ADA               	clrf	fsr2h,c
  6133   002B00  0E03               	movlw	3
  6134   002B02  26DF               	addwf	indf2,f,c
  6135   002B04  EF3E  F015         	goto	l6294
  6136   002B08                     l6306:
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  6140   002B08  51BB               	movf	vfpfcnvrt@done& (0+255),w,b
  6141   002B0A  B4D8               	btfsc	status,2,c
  6142   002B0C  EF8A  F015         	goto	u8311
  6143   002B10  EF8C  F015         	goto	u8310
  6144   002B14                     u8311:
  6145   002B14  EFA0  F015         	goto	l6312
  6146   002B18                     u8310:
  6147   002B18                     
  6148                           ; BSR set to: 0
  6149                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
  6150   002B18  C0B1  F00D         	movff	vfpfcnvrt@fp,stoa@fp
  6151   002B1C  C0B2  F00E         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6152   002B20  51B4               	movf	vfpfcnvrt@ap& (0+255),w,b
  6153   002B22  6ED9               	movwf	fsr2l,c
  6154   002B24  6ADA               	clrf	fsr2h,c
  6155   002B26  0E02               	movlw	2
  6156   002B28  26DF               	addwf	indf2,f,c
  6157   002B2A  5CDF               	subwf	indf2,w,c
  6158   002B2C  6ED9               	movwf	fsr2l,c
  6159   002B2E  6ADA               	clrf	fsr2h,c
  6160   002B30  CFDE F00F          	movff	postinc2,stoa@s
  6161   002B34  CFDE F010          	movff	postinc2,stoa@s+1
  6162   002B38  EC41  F021         	call	_stoa	;wreg free
  6163   002B3C  EF4F  F016         	goto	l1272
  6164   002B40                     l6312:
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  6168   002B40  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6169   002B42  6ED9               	movwf	fsr2l,c
  6170   002B44  6ADA               	clrf	fsr2h,c
  6171   002B46  50DF               	movf	indf2,w,c
  6172   002B48  6FBC               	movwf	vfpfcnvrt@cp& (0+255),b
  6173   002B4A                     
  6174                           ; BSR set to: 0
  6175                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  6176   002B4A  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6177   002B4E                     	if	1	;There is more than 1 active tblptr byte
  6178   002B4E  0E10               	movlw	high __smallconst
  6179   002B50  6EF7               	movwf	tblptrh,c
  6180   002B52                     	endif
  6181   002B52                     	if	0	;tblptru may be non-zero
  6182   002B52                     	endif
  6183   002B52                     	if	0	;tblptru may be non-zero
  6184   002B52                     	endif
  6185   002B52  0008               	tblrd		*
  6186   002B54  CFF5 F0BA          	movff	tablat,vfpfcnvrt@c
  6187                           
  6188                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  6189   002B58  EFB9  F015         	goto	l6324
  6190   002B5C                     l6316:
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  6194   002B5C  2BBC               	incf	vfpfcnvrt@cp& (0+255),f,b
  6195                           
  6196                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
  6197   002B5E  EFC8  F015         	goto	l6326
  6198   002B62                     l6318:
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  6202   002B62  0E6C               	movlw	108
  6203   002B64  6FBA               	movwf	vfpfcnvrt@c& (0+255),b
  6204                           
  6205                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1722:     break;
  6206   002B66  EFC8  F015         	goto	l6326
  6207   002B6A                     l6320:
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  6211   002B6A  0E00               	movlw	0
  6212   002B6C  6FBA               	movwf	vfpfcnvrt@c& (0+255),b
  6213                           
  6214                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
  6215   002B6E  EFC8  F015         	goto	l6326
  6216   002B72                     l6324:
  6217                           
  6218                           ; BSR set to: 0
  6219   002B72  51BA               	movf	vfpfcnvrt@c& (0+255),w,b
  6220                           
  6221                           ; Switch size 1, requested type "simple"
  6222                           ; Number of cases is 3, Range of values is 76 to 108
  6223                           ; switch strategies available:
  6224                           ; Name         Instructions Cycles
  6225                           ; simple_byte           10     6 (average)
  6226                           ;	Chosen strategy is simple_byte
  6227   002B74  0A4C               	xorlw	76	; case 76
  6228   002B76  B4D8               	btfsc	status,2,c
  6229   002B78  EFAE  F015         	goto	l6316
  6230   002B7C  0A2A               	xorlw	42	; case 102
  6231   002B7E  B4D8               	btfsc	status,2,c
  6232   002B80  EFB1  F015         	goto	l6318
  6233   002B84  0A0A               	xorlw	10	; case 108
  6234   002B86  B4D8               	btfsc	status,2,c
  6235   002B88  EFAE  F015         	goto	l6316
  6236   002B8C  EFB5  F015         	goto	l6320
  6237   002B90                     l6326:
  6238                           
  6239                           ; BSR set to: 0
  6240   002B90  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6241   002B94                     	if	1	;There is more than 1 active tblptr byte
  6242   002B94  0E10               	movlw	high __smallconst
  6243   002B96  6EF7               	movwf	tblptrh,c
  6244   002B98                     	endif
  6245   002B98                     	if	0	;tblptru may be non-zero
  6246   002B98                     	endif
  6247   002B98                     	if	0	;tblptru may be non-zero
  6248   002B98                     	endif
  6249   002B98  0008               	tblrd		*
  6250   002B9A  50F5               	movf	tablat,w,c
  6251   002B9C  0A66               	xorlw	102
  6252   002B9E  A4D8               	btfss	status,2,c
  6253   002BA0  EFD4  F015         	goto	u8321
  6254   002BA4  EFD6  F015         	goto	u8320
  6255   002BA8                     u8321:
  6256   002BA8  EF35  F016         	goto	l6346
  6257   002BAC                     u8320:
  6258   002BAC  EF00  F016         	goto	l6334
  6259   002BB0                     l6328:
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6263   002BB0  51B4               	movf	vfpfcnvrt@ap& (0+255),w,b
  6264   002BB2  6ED9               	movwf	fsr2l,c
  6265   002BB4  6ADA               	clrf	fsr2h,c
  6266   002BB6  CFDF F0B5          	movff	indf2,??_vfpfcnvrt
  6267   002BBA  0E04               	movlw	4
  6268   002BBC  26DF               	addwf	indf2,f,c
  6269   002BBE  51B5               	movf	??_vfpfcnvrt& (0+255),w,b
  6270   002BC0  6ED9               	movwf	fsr2l,c
  6271   002BC2  6ADA               	clrf	fsr2h,c
  6272   002BC4  CFDE F0B6          	movff	postinc2,vfpfcnvrt@convarg
  6273   002BC8  CFDE F0B7          	movff	postinc2,vfpfcnvrt@convarg+1
  6274   002BCC  CFDE F0B8          	movff	postinc2,vfpfcnvrt@convarg+2
  6275   002BD0  CFDE F0B9          	movff	postinc2,vfpfcnvrt@convarg+3
  6276                           
  6277                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
  6278   002BD4  EF0B  F016         	goto	l6336
  6279   002BD8                     l6330:
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6283   002BD8  51B4               	movf	vfpfcnvrt@ap& (0+255),w,b
  6284   002BDA  6ED9               	movwf	fsr2l,c
  6285   002BDC  6ADA               	clrf	fsr2h,c
  6286   002BDE  CFDF F0B5          	movff	indf2,??_vfpfcnvrt
  6287   002BE2  0E04               	movlw	4
  6288   002BE4  26DF               	addwf	indf2,f,c
  6289   002BE6  51B5               	movf	??_vfpfcnvrt& (0+255),w,b
  6290   002BE8  6ED9               	movwf	fsr2l,c
  6291   002BEA  6ADA               	clrf	fsr2h,c
  6292   002BEC  CFDE F0B6          	movff	postinc2,vfpfcnvrt@convarg
  6293   002BF0  CFDE F0B7          	movff	postinc2,vfpfcnvrt@convarg+1
  6294   002BF4  CFDE F0B8          	movff	postinc2,vfpfcnvrt@convarg+2
  6295   002BF8  CFDE F0B9          	movff	postinc2,vfpfcnvrt@convarg+3
  6296                           
  6297                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
  6298   002BFC  EF0B  F016         	goto	l6336
  6299   002C00                     l6334:
  6300                           
  6301                           ; BSR set to: 0
  6302   002C00  51BA               	movf	vfpfcnvrt@c& (0+255),w,b
  6303                           
  6304                           ; Switch size 1, requested type "simple"
  6305                           ; Number of cases is 2, Range of values is 76 to 108
  6306                           ; switch strategies available:
  6307                           ; Name         Instructions Cycles
  6308                           ; simple_byte            7     4 (average)
  6309                           ;	Chosen strategy is simple_byte
  6310   002C02  0A4C               	xorlw	76	; case 76
  6311   002C04  B4D8               	btfsc	status,2,c
  6312   002C06  EFEC  F015         	goto	l6330
  6313   002C0A  0A20               	xorlw	32	; case 108
  6314   002C0C  B4D8               	btfsc	status,2,c
  6315   002C0E  EFD8  F015         	goto	l6328
  6316   002C12  EF0B  F016         	goto	l6336
  6317   002C16                     l6336:
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  6321   002C16  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6322   002C18  6ED9               	movwf	fsr2l,c
  6323   002C1A  6ADA               	clrf	fsr2h,c
  6324   002C1C  29BC               	incf	vfpfcnvrt@cp& (0+255),w,b
  6325   002C1E  6EDF               	movwf	indf2,c
  6326                           
  6327                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  6328   002C20  EF29  F016         	goto	l6344
  6329   002C24                     l6338:
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  6333   002C24  C0B1  F07C         	movff	vfpfcnvrt@fp,efgtoa@fp
  6334   002C28  C0B2  F07D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  6335   002C2C  C0B6  F07E         	movff	vfpfcnvrt@convarg,efgtoa@f
  6336   002C30  C0B7  F07F         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  6337   002C34  C0B8  F080         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  6338   002C38  C0B9  F081         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  6339   002C3C  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6340   002C40                     	if	1	;There is more than 1 active tblptr byte
  6341   002C40  0E10               	movlw	high __smallconst
  6342   002C42  6EF7               	movwf	tblptrh,c
  6343   002C44                     	endif
  6344   002C44                     	if	0	;tblptru may be non-zero
  6345   002C44                     	endif
  6346   002C44                     	if	0	;tblptru may be non-zero
  6347   002C44                     	endif
  6348   002C44  0008               	tblrd		*
  6349   002C46  CFF5 F082          	movff	tablat,efgtoa@c
  6350   002C4A  EC7B  F008         	call	_efgtoa	;wreg free
  6351   002C4E  EF4F  F016         	goto	l1272
  6352   002C52                     l6344:
  6353                           
  6354                           ; BSR set to: 0
  6355   002C52  C0BC  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6356   002C56                     	if	1	;There is more than 1 active tblptr byte
  6357   002C56  0E10               	movlw	high __smallconst
  6358   002C58  6EF7               	movwf	tblptrh,c
  6359   002C5A                     	endif
  6360   002C5A                     	if	0	;tblptru may be non-zero
  6361   002C5A                     	endif
  6362   002C5A                     	if	0	;tblptru may be non-zero
  6363   002C5A                     	endif
  6364   002C5A  0008               	tblrd		*
  6365   002C5C  50F5               	movf	tablat,w,c
  6366                           
  6367                           ; Switch size 1, requested type "simple"
  6368                           ; Number of cases is 1, Range of values is 102 to 102
  6369                           ; switch strategies available:
  6370                           ; Name         Instructions Cycles
  6371                           ; simple_byte            4     3 (average)
  6372                           ;	Chosen strategy is simple_byte
  6373   002C5E  0A66               	xorlw	102	; case 102
  6374   002C60  B4D8               	btfsc	status,2,c
  6375   002C62  EF12  F016         	goto	l6338
  6376   002C66  EF35  F016         	goto	l6346
  6377   002C6A                     l6346:
  6378                           
  6379                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6380   002C6A  0100               	movlb	0	; () banked
  6381   002C6C  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6382   002C6E  6ED9               	movwf	fsr2l,c
  6383   002C70  6ADA               	clrf	fsr2h,c
  6384   002C72  2ADF               	incf	indf2,f,c
  6385   002C74  EF4F  F016         	goto	l1272
  6386   002C78                     l6350:
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6390   002C78  51B3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6391   002C7A  6ED9               	movwf	fsr2l,c
  6392   002C7C  6ADA               	clrf	fsr2h,c
  6393   002C7E  CFDF FFF6          	movff	indf2,tblptrl
  6394   002C82                     	if	1	;There is more than 1 active tblptr byte
  6395   002C82  0E10               	movlw	high __smallconst
  6396   002C84  6EF7               	movwf	tblptrh,c
  6397   002C86                     	endif
  6398   002C86                     	if	0	;tblptru may be non-zero
  6399   002C86                     	endif
  6400   002C86                     	if	0	;tblptru may be non-zero
  6401   002C86                     	endif
  6402   002C86  0008               	tblrd		*
  6403   002C88  50F5               	movf	tablat,w,c
  6404   002C8A  6E04               	movwf	fputc@c^0,c
  6405   002C8C  6A05               	clrf	(fputc@c+1)^0,c
  6406   002C8E  C0B1  F006         	movff	vfpfcnvrt@fp,fputc@fp
  6407   002C92  C0B2  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6408   002C96  EC9E  F026         	call	_fputc	;wreg free
  6409   002C9A  EF35  F016         	goto	l6346
  6410   002C9E                     l1272:
  6411   002C9E  0012               	return		;funcret
  6412   002CA0                     __end_of_vfpfcnvrt:
  6413                           	callstack 0
  6414                           
  6415 ;; *************** function _stoa *****************
  6416 ;; Defined at:
  6417 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  6420 ;;		 -> NULL(0), sprintf@f(12), 
  6421 ;;  s               2   14[COMRAM] PTR unsigned char 
  6422 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(1), STR_15(6), 
  6423 ;;		 -> STR_14(5), STR_13(4), STR_12(4), STR_11(4), 
  6424 ;;		 -> STR_10(5), STR_9(5), 
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  l               2   24[COMRAM] int 
  6427 ;;  cp              2   22[COMRAM] PTR unsigned char 
  6428 ;;		 -> ?_printf(2), STR_26(7), ?_sprintf(2), STR_16(1), 
  6429 ;;		 -> STR_15(6), STR_14(5), STR_13(4), STR_12(4), 
  6430 ;;		 -> STR_11(4), STR_10(5), STR_9(5), 
  6431 ;;  w               2   20[COMRAM] int 
  6432 ;;  p               2   18[COMRAM] int 
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  1    wreg      void 
  6435 ;; Registers used:
  6436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6443 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6445 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;Total ram usage:       14 bytes
  6447 ;; Hardware stack levels used: 1
  6448 ;; Hardware stack levels required when called: 3
  6449 ;; This function calls:
  6450 ;;		_fputc
  6451 ;; This function is called by:
  6452 ;;		_vfpfcnvrt
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text23
  6457   004282                     __ptext23:
  6458                           	callstack 0
  6459   004282                     _stoa:
  6460                           	callstack 23
  6461   004282                     
  6462                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
  6463   004282  C00F  F017         	movff	stoa@s,stoa@cp
  6464   004286  C010  F018         	movff	stoa@s+1,stoa@cp+1
  6465                           
  6466                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
  6467   00428A  5017               	movf	stoa@cp^0,w,c
  6468   00428C  1018               	iorwf	(stoa@cp+1)^0,w,c
  6469   00428E  A4D8               	btfss	status,2,c
  6470   004290  EF4C  F021         	goto	u7981
  6471   004294  EF4E  F021         	goto	u7980
  6472   004298                     u7981:
  6473   004298  EF54  F021         	goto	l6146
  6474   00429C                     u7980:
  6475   00429C                     
  6476                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
  6477   00429C  0EBA               	movlw	low STR_26
  6478   00429E  6E17               	movwf	stoa@cp^0,c
  6479   0042A0  5017               	movf	stoa@cp^0,w,c
  6480   0042A2  A4D8               	btfss	status,2,c
  6481   0042A4  0E10               	movlw	high __smallconst
  6482   0042A6  6E18               	movwf	(stoa@cp+1)^0,c
  6483   0042A8                     l6146:
  6484                           
  6485                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
  6486   0042A8  0E00               	movlw	0
  6487   0042AA  6E1A               	movwf	(stoa@l+1)^0,c
  6488   0042AC  0E00               	movlw	0
  6489   0042AE  6E19               	movwf	stoa@l^0,c
  6490   0042B0  EF5C  F021         	goto	l6150
  6491   0042B4                     l6148:
  6492   0042B4  4A19               	infsnz	stoa@l^0,f,c
  6493   0042B6  2A1A               	incf	(stoa@l+1)^0,f,c
  6494   0042B8                     l6150:
  6495   0042B8  5019               	movf	stoa@l^0,w,c
  6496   0042BA  2417               	addwf	stoa@cp^0,w,c
  6497   0042BC  6E11               	movwf	??_stoa^0,c
  6498   0042BE  501A               	movf	(stoa@l+1)^0,w,c
  6499   0042C0  2018               	addwfc	(stoa@cp+1)^0,w,c
  6500   0042C2  6E12               	movwf	(??_stoa+1)^0,c
  6501   0042C4  C011  FFF6         	movff	??_stoa,tblptrl
  6502   0042C8  C012  FFF7         	movff	??_stoa+1,tblptrh
  6503   0042CC  0E00               	movlw	low (__smallconst shr (0+16))
  6504   0042CE  6EF8               	movwf	tblptru,c
  6505   0042D0  0E0F               	movlw	(high __ramtop+-1)
  6506   0042D2  64F7               	cpfsgt	tblptrh,c
  6507   0042D4  D003               	bra	u7997
  6508   0042D6  0008               	tblrd		*
  6509   0042D8  50F5               	movf	tablat,w,c
  6510   0042DA  D005               	bra	u7990
  6511   0042DC                     u7997:
  6512   0042DC  CFF6 FFE1          	movff	tblptrl,fsr1l
  6513   0042E0  CFF7 FFE2          	movff	tblptrh,fsr1h
  6514   0042E4  50E7               	movf	indf1,w,c
  6515   0042E6                     u7990:
  6516   0042E6  0900               	iorlw	0
  6517   0042E8  A4D8               	btfss	status,2,c
  6518   0042EA  EF79  F021         	goto	u8001
  6519   0042EE  EF7B  F021         	goto	u8000
  6520   0042F2                     u8001:
  6521   0042F2  EF5A  F021         	goto	l6148
  6522   0042F6                     u8000:
  6523   0042F6                     
  6524                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
  6525   0042F6  BE5C               	btfsc	(_prec+1)^0,7,c
  6526   0042F8  EF80  F021         	goto	u8011
  6527   0042FC  EF82  F021         	goto	u8010
  6528   004300                     u8011:
  6529   004300  EF95  F021         	goto	l1236
  6530   004304                     u8010:
  6531   004304  5019               	movf	stoa@l^0,w,c
  6532   004306  5C5B               	subwf	_prec^0,w,c
  6533   004308  505C               	movf	(_prec+1)^0,w,c
  6534   00430A  0A80               	xorlw	128
  6535   00430C  6E11               	movwf	??_stoa^0,c
  6536   00430E  501A               	movf	(stoa@l+1)^0,w,c
  6537   004310  0A80               	xorlw	128
  6538   004312  5811               	subwfb	??_stoa^0,w,c
  6539   004314  B0D8               	btfsc	status,0,c
  6540   004316  EF8F  F021         	goto	u8021
  6541   00431A  EF91  F021         	goto	u8020
  6542   00431E                     u8021:
  6543   00431E  EF95  F021         	goto	l1236
  6544   004322                     u8020:
  6545   004322                     
  6546                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 962:   l = prec;
  6547   004322  C05B  F019         	movff	_prec,stoa@l
  6548   004326  C05C  F01A         	movff	_prec+1,stoa@l+1
  6549   00432A                     l1236:
  6550                           
  6551                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 965:     p = l;
  6552   00432A  C019  F013         	movff	stoa@l,stoa@p
  6553   00432E  C01A  F014         	movff	stoa@l+1,stoa@p+1
  6554                           
  6555                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
  6556   004332  C0FC  F015         	movff	_width,stoa@w
  6557   004336  C0FD  F016         	movff	_width+1,stoa@w+1
  6558                           
  6559                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
  6560   00433A  0100               	movlb	0	; () banked
  6561   00433C  B1FE               	btfsc	_flags& (0+255),0,b
  6562   00433E  EFA3  F021         	goto	u8031
  6563   004342  EFA5  F021         	goto	u8030
  6564   004346                     u8031:
  6565   004346  EFE1  F021         	goto	l6170
  6566   00434A                     u8030:
  6567   00434A  EFB3  F021         	goto	l6164
  6568   00434E                     l6160:
  6569                           
  6570                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
  6571   00434E  0E00               	movlw	0
  6572   004350  6E05               	movwf	(fputc@c+1)^0,c
  6573   004352  0E20               	movlw	32
  6574   004354  6E04               	movwf	fputc@c^0,c
  6575   004356  C00D  F006         	movff	stoa@fp,fputc@fp
  6576   00435A  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  6577   00435E  EC9E  F026         	call	_fputc	;wreg free
  6578   004362                     
  6579                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
  6580   004362  4A19               	infsnz	stoa@l^0,f,c
  6581   004364  2A1A               	incf	(stoa@l+1)^0,f,c
  6582   004366                     l6164:
  6583                           
  6584                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
  6585   004366  5015               	movf	stoa@w^0,w,c
  6586   004368  5C19               	subwf	stoa@l^0,w,c
  6587   00436A  501A               	movf	(stoa@l+1)^0,w,c
  6588   00436C  0A80               	xorlw	128
  6589   00436E  6E11               	movwf	??_stoa^0,c
  6590   004370  5016               	movf	(stoa@w+1)^0,w,c
  6591   004372  0A80               	xorlw	128
  6592   004374  5811               	subwfb	??_stoa^0,w,c
  6593   004376  A0D8               	btfss	status,0,c
  6594   004378  EFC0  F021         	goto	u8041
  6595   00437C  EFC2  F021         	goto	u8040
  6596   004380                     u8041:
  6597   004380  EFA7  F021         	goto	l6160
  6598   004384                     u8040:
  6599   004384  EFE1  F021         	goto	l6170
  6600   004388                     l6166:
  6601                           
  6602                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
  6603   004388  C017  FFF6         	movff	stoa@cp,tblptrl
  6604   00438C  C018  FFF7         	movff	stoa@cp+1,tblptrh
  6605   004390  0E00               	movlw	low (__smallconst shr (0+16))
  6606   004392  6EF8               	movwf	tblptru,c
  6607   004394  0E0F               	movlw	(high __ramtop+-1)
  6608   004396  64F7               	cpfsgt	tblptrh,c
  6609   004398  D003               	bra	u8057
  6610   00439A  0008               	tblrd		*
  6611   00439C  50F5               	movf	tablat,w,c
  6612   00439E  D005               	bra	u8050
  6613   0043A0                     u8057:
  6614   0043A0  CFF6 FFE1          	movff	tblptrl,fsr1l
  6615   0043A4  CFF7 FFE2          	movff	tblptrh,fsr1h
  6616   0043A8  50E7               	movf	indf1,w,c
  6617   0043AA                     u8050:
  6618   0043AA  6E11               	movwf	??_stoa^0,c
  6619   0043AC  5011               	movf	??_stoa^0,w,c
  6620   0043AE  6E04               	movwf	fputc@c^0,c
  6621   0043B0  6A05               	clrf	(fputc@c+1)^0,c
  6622   0043B2  C00D  F006         	movff	stoa@fp,fputc@fp
  6623   0043B6  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  6624   0043BA  EC9E  F026         	call	_fputc	;wreg free
  6625   0043BE                     
  6626                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
  6627   0043BE  4A17               	infsnz	stoa@cp^0,f,c
  6628   0043C0  2A18               	incf	(stoa@cp+1)^0,f,c
  6629   0043C2                     l6170:
  6630                           
  6631                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
  6632   0043C2  0613               	decf	stoa@p^0,f,c
  6633   0043C4  A0D8               	btfss	status,0,c
  6634   0043C6  0614               	decf	(stoa@p+1)^0,f,c
  6635   0043C8  2813               	incf	stoa@p^0,w,c
  6636   0043CA  E106               	bnz	u8061
  6637   0043CC  2814               	incf	(stoa@p+1)^0,w,c
  6638   0043CE  A4D8               	btfss	status,2,c
  6639   0043D0  EFEC  F021         	goto	u8061
  6640   0043D4  EFEE  F021         	goto	u8060
  6641   0043D8                     u8061:
  6642   0043D8  EFC4  F021         	goto	l6166
  6643   0043DC                     u8060:
  6644   0043DC                     
  6645                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
  6646   0043DC  0100               	movlb	0	; () banked
  6647   0043DE  A1FE               	btfss	_flags& (0+255),0,b
  6648   0043E0  EFF4  F021         	goto	u8071
  6649   0043E4  EFF6  F021         	goto	u8070
  6650   0043E8                     u8071:
  6651   0043E8  EF13  F022         	goto	l1248
  6652   0043EC                     u8070:
  6653   0043EC  EF04  F022         	goto	l6178
  6654   0043F0                     l6174:
  6655                           
  6656                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
  6657   0043F0  0E00               	movlw	0
  6658   0043F2  6E05               	movwf	(fputc@c+1)^0,c
  6659   0043F4  0E20               	movlw	32
  6660   0043F6  6E04               	movwf	fputc@c^0,c
  6661   0043F8  C00D  F006         	movff	stoa@fp,fputc@fp
  6662   0043FC  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  6663   004400  EC9E  F026         	call	_fputc	;wreg free
  6664   004404                     
  6665                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
  6666   004404  4A19               	infsnz	stoa@l^0,f,c
  6667   004406  2A1A               	incf	(stoa@l+1)^0,f,c
  6668   004408                     l6178:
  6669                           
  6670                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
  6671   004408  5015               	movf	stoa@w^0,w,c
  6672   00440A  5C19               	subwf	stoa@l^0,w,c
  6673   00440C  501A               	movf	(stoa@l+1)^0,w,c
  6674   00440E  0A80               	xorlw	128
  6675   004410  6E11               	movwf	??_stoa^0,c
  6676   004412  5016               	movf	(stoa@w+1)^0,w,c
  6677   004414  0A80               	xorlw	128
  6678   004416  5811               	subwfb	??_stoa^0,w,c
  6679   004418  A0D8               	btfss	status,0,c
  6680   00441A  EF11  F022         	goto	u8081
  6681   00441E  EF13  F022         	goto	u8080
  6682   004422                     u8081:
  6683   004422  EFF8  F021         	goto	l6174
  6684   004426                     u8080:
  6685   004426                     l1248:
  6686   004426  0012               	return		;funcret
  6687   004428                     __end_of_stoa:
  6688                           	callstack 0
  6689                           
  6690 ;; *************** function _read_prec_or_width *****************
  6691 ;; Defined at:
  6692 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;  fmt             1    8[COMRAM] PTR PTR const unsigned c
  6695 ;;		 -> vfprintf@cfmt(1), 
  6696 ;;  ap              1    9[COMRAM] PTR PTR void [1]
  6697 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  c               1   10[COMRAM] unsigned char 
  6700 ;;  n               2   11[COMRAM] int 
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  2    8[COMRAM] int 
  6703 ;; Registers used:
  6704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6711 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;Total ram usage:        5 bytes
  6715 ;; Hardware stack levels used: 1
  6716 ;; Hardware stack levels required when called: 2
  6717 ;; This function calls:
  6718 ;;		___wmul
  6719 ;; This function is called by:
  6720 ;;		_vfpfcnvrt
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text24
  6725   0050D6                     __ptext24:
  6726                           	callstack 0
  6727   0050D6                     _read_prec_or_width:
  6728                           	callstack 24
  6729   0050D6                     
  6730                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  6731   0050D6  0E00               	movlw	0
  6732   0050D8  6E0D               	movwf	(read_prec_or_width@n+1)^0,c
  6733   0050DA  0E00               	movlw	0
  6734   0050DC  6E0C               	movwf	read_prec_or_width@n^0,c
  6735   0050DE                     
  6736                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  6737   0050DE  5009               	movf	read_prec_or_width@fmt^0,w,c
  6738   0050E0  6ED9               	movwf	fsr2l,c
  6739   0050E2  6ADA               	clrf	fsr2h,c
  6740   0050E4  CFDF FFF6          	movff	indf2,tblptrl
  6741   0050E8                     	if	1	;There is more than 1 active tblptr byte
  6742   0050E8  0E10               	movlw	high __smallconst
  6743   0050EA  6EF7               	movwf	tblptrh,c
  6744   0050EC                     	endif
  6745   0050EC                     	if	0	;tblptru may be non-zero
  6746   0050EC                     	endif
  6747   0050EC                     	if	0	;tblptru may be non-zero
  6748   0050EC                     	endif
  6749   0050EC  0008               	tblrd		*
  6750   0050EE  50F5               	movf	tablat,w,c
  6751   0050F0  0A2A               	xorlw	42
  6752   0050F2  A4D8               	btfss	status,2,c
  6753   0050F4  EF7E  F028         	goto	u8091
  6754   0050F8  EF80  F028         	goto	u8090
  6755   0050FC                     u8091:
  6756   0050FC  EFA6  F028         	goto	l6192
  6757   005100                     u8090:
  6758   005100                     
  6759                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  6760   005100  5009               	movf	read_prec_or_width@fmt^0,w,c
  6761   005102  6ED9               	movwf	fsr2l,c
  6762   005104  6ADA               	clrf	fsr2h,c
  6763   005106  2ADF               	incf	indf2,f,c
  6764   005108                     
  6765                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  6766   005108  500A               	movf	read_prec_or_width@ap^0,w,c
  6767   00510A  6ED9               	movwf	fsr2l,c
  6768   00510C  6ADA               	clrf	fsr2h,c
  6769   00510E  0E02               	movlw	2
  6770   005110  26DF               	addwf	indf2,f,c
  6771   005112  5CDF               	subwf	indf2,w,c
  6772   005114  6ED9               	movwf	fsr2l,c
  6773   005116  6ADA               	clrf	fsr2h,c
  6774   005118  CFDE F00C          	movff	postinc2,read_prec_or_width@n
  6775   00511C  CFDE F00D          	movff	postinc2,read_prec_or_width@n+1
  6776                           
  6777                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  6778   005120  EFB9  F028         	goto	l1252
  6779   005124                     l6188:
  6780                           
  6781                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  6782   005124  C00C  F003         	movff	read_prec_or_width@n,___wmul@multiplier
  6783   005128  C00D  F004         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  6784   00512C  0E00               	movlw	0
  6785   00512E  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  6786   005130  0E0A               	movlw	10
  6787   005132  6E05               	movwf	___wmul@multiplicand^0,c
  6788   005134  ECB7  F02A         	call	___wmul	;wreg free
  6789   005138  500B               	movf	read_prec_or_width@c^0,w,c
  6790   00513A  2403               	addwf	?___wmul^0,w,c
  6791   00513C  6E0C               	movwf	read_prec_or_width@n^0,c
  6792   00513E  0E00               	movlw	0
  6793   005140  2004               	addwfc	(?___wmul+1)^0,w,c
  6794   005142  6E0D               	movwf	(read_prec_or_width@n+1)^0,c
  6795   005144                     
  6796                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  6797   005144  5009               	movf	read_prec_or_width@fmt^0,w,c
  6798   005146  6ED9               	movwf	fsr2l,c
  6799   005148  6ADA               	clrf	fsr2h,c
  6800   00514A  2ADF               	incf	indf2,f,c
  6801   00514C                     l6192:
  6802                           
  6803                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  6804   00514C  5009               	movf	read_prec_or_width@fmt^0,w,c
  6805   00514E  6ED9               	movwf	fsr2l,c
  6806   005150  6ADA               	clrf	fsr2h,c
  6807   005152  CFDF FFF6          	movff	indf2,tblptrl
  6808   005156                     	if	1	;There is more than 1 active tblptr byte
  6809   005156  0E10               	movlw	high __smallconst
  6810   005158  6EF7               	movwf	tblptrh,c
  6811   00515A                     	endif
  6812   00515A                     	if	0	;tblptru may be non-zero
  6813   00515A                     	endif
  6814   00515A                     	if	0	;tblptru may be non-zero
  6815   00515A                     	endif
  6816   00515A  0008               	tblrd		*
  6817   00515C  50F5               	movf	tablat,w,c
  6818   00515E  0FD0               	addlw	208
  6819   005160  6E0B               	movwf	read_prec_or_width@c^0,c
  6820   005162  0E09               	movlw	9
  6821   005164  640B               	cpfsgt	read_prec_or_width@c^0,c
  6822   005166  EFB7  F028         	goto	u8101
  6823   00516A  EFB9  F028         	goto	u8100
  6824   00516E                     u8101:
  6825   00516E  EF92  F028         	goto	l6188
  6826   005172                     u8100:
  6827   005172                     l1252:
  6828                           
  6829                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  6830   005172  C00C  F009         	movff	read_prec_or_width@n,?_read_prec_or_width
  6831   005176  C00D  F00A         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  6832   00517A  0012               	return		;funcret
  6833   00517C                     __end_of_read_prec_or_width:
  6834                           	callstack 0
  6835                           
  6836 ;; *************** function ___wmul *****************
  6837 ;; Defined at:
  6838 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;  multiplier      2    2[COMRAM] unsigned int 
  6841 ;;  multiplicand    2    4[COMRAM] unsigned int 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;  product         2    6[COMRAM] unsigned int 
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  2    2[COMRAM] unsigned int 
  6846 ;; Registers used:
  6847 ;;		wreg, status,2, status,0, prodl, prodh
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6853 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6854 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6856 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6857 ;;Total ram usage:        6 bytes
  6858 ;; Hardware stack levels used: 1
  6859 ;; Hardware stack levels required when called: 1
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_read_prec_or_width
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           	psect	text25
  6868   00556E                     __ptext25:
  6869                           	callstack 0
  6870   00556E                     ___wmul:
  6871                           	callstack 24
  6872   00556E  5003               	movf	___wmul@multiplier^0,w,c
  6873   005570  0205               	mulwf	___wmul@multiplicand^0,c
  6874   005572  CFF3 F007          	movff	prodl,___wmul@product
  6875   005576  CFF4 F008          	movff	prodh,___wmul@product+1
  6876   00557A  5003               	movf	___wmul@multiplier^0,w,c
  6877   00557C  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  6878   00557E  50F3               	movf	243,w,c
  6879   005580  2608               	addwf	(___wmul@product+1)^0,f,c
  6880   005582  5004               	movf	(___wmul@multiplier+1)^0,w,c
  6881   005584  0205               	mulwf	___wmul@multiplicand^0,c
  6882   005586  50F3               	movf	243,w,c
  6883   005588  2608               	addwf	(___wmul@product+1)^0,f,c
  6884   00558A  C007  F003         	movff	___wmul@product,?___wmul
  6885   00558E  C008  F004         	movff	___wmul@product+1,?___wmul+1
  6886   005592  0012               	return		;funcret
  6887   005594                     __end_of___wmul:
  6888                           	callstack 0
  6889                           
  6890 ;; *************** function _efgtoa *****************
  6891 ;; Defined at:
  6892 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  6895 ;;		 -> NULL(0), sprintf@f(12), 
  6896 ;;  f               4   30[BANK0 ] PTR struct _IO_FILE
  6897 ;;  c               1   34[BANK0 ] unsigned char 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;  u               4   77[BANK0 ] struct flui
  6900 ;;  g               4   71[BANK0 ] struct flui
  6901 ;;  l               4   66[BANK0 ] struct flui
  6902 ;;  h               4   62[BANK0 ] struct flui
  6903 ;;  ou              4   56[BANK0 ] struct flui
  6904 ;;  n               2   75[BANK0 ] int 
  6905 ;;  i               2   60[BANK0 ] int 
  6906 ;;  w               2   54[BANK0 ] int 
  6907 ;;  e               2   52[BANK0 ] int 
  6908 ;;  m               2   50[BANK0 ] int 
  6909 ;;  d               2   48[BANK0 ] int 
  6910 ;;  t               2   41[BANK0 ] int 
  6911 ;;  p               2   39[BANK0 ] int 
  6912 ;;  ne              2   37[BANK0 ] int 
  6913 ;;  sign            1   70[BANK0 ] unsigned char 
  6914 ;;  nmode           1   47[BANK0 ] unsigned char 
  6915 ;;  mode            1   46[BANK0 ] unsigned char 
  6916 ;;  pp              1   45[BANK0 ] unsigned char 
  6917 ;;  esign           1    0        unsigned char 
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6927 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6929 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6930 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6931 ;;Total ram usage:       53 bytes
  6932 ;; Hardware stack levels used: 1
  6933 ;; Hardware stack levels required when called: 5
  6934 ;; This function calls:
  6935 ;;		___fladd
  6936 ;;		___fldiv
  6937 ;;		___fleq
  6938 ;;		___flge
  6939 ;;		___flmul
  6940 ;;		___flneg
  6941 ;;		___flsub
  6942 ;;		___fltol
  6943 ;;		___fpclassifyf
  6944 ;;		_floorf
  6945 ;;		_labs
  6946 ;;		_memcpy
  6947 ;;		_pad
  6948 ;;		_strcpy
  6949 ;; This function is called by:
  6950 ;;		_vfpfcnvrt
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text26
  6955   0010F6                     __ptext26:
  6956                           	callstack 0
  6957   0010F6                     _efgtoa:
  6958                           	callstack 21
  6959   0010F6                     
  6960                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  6961   0010F6  0E00               	movlw	0
  6962   0010F8  0100               	movlb	0	; () banked
  6963   0010FA  6FA6               	movwf	efgtoa@sign& (0+255),b
  6964   0010FC                     
  6965                           ; BSR set to: 0
  6966                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  6967   0010FC  C07E  F0A7         	movff	efgtoa@f,efgtoa@g
  6968   001100  C07F  F0A8         	movff	efgtoa@f+1,efgtoa@g+1
  6969   001104  C080  F0A9         	movff	efgtoa@f+2,efgtoa@g+2
  6970   001108  C081  F0AA         	movff	efgtoa@f+3,efgtoa@g+3
  6971   00110C                     
  6972                           ; BSR set to: 0
  6973                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  6974   00110C  BFAA               	btfsc	(efgtoa@g+3)& (0+255),7,b
  6975   00110E  EF8D  F008         	goto	u7660
  6976   001112  EF8B  F008         	goto	u7661
  6977   001116                     u7661:
  6978   001116  EFA1  F008         	goto	l5930
  6979   00111A                     u7660:
  6980   00111A                     
  6981                           ; BSR set to: 0
  6982                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  6983   00111A  0E01               	movlw	1
  6984   00111C  6FA6               	movwf	efgtoa@sign& (0+255),b
  6985   00111E                     
  6986                           ; BSR set to: 0
  6987                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  6988   00111E  C0A7  F078         	movff	efgtoa@g,___flneg@f1
  6989   001122  C0A8  F079         	movff	efgtoa@g+1,___flneg@f1+1
  6990   001126  C0A9  F07A         	movff	efgtoa@g+2,___flneg@f1+2
  6991   00112A  C0AA  F07B         	movff	efgtoa@g+3,___flneg@f1+3
  6992   00112E  EC4B  F02A         	call	___flneg	;wreg free
  6993   001132  C078  F0A7         	movff	?___flneg,efgtoa@g
  6994   001136  C079  F0A8         	movff	?___flneg+1,efgtoa@g+1
  6995   00113A  C07A  F0A9         	movff	?___flneg+2,efgtoa@g+2
  6996   00113E  C07B  F0AA         	movff	?___flneg+3,efgtoa@g+3
  6997   001142                     l5930:
  6998                           
  6999                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  7000   001142  0E00               	movlw	0
  7001   001144  0100               	movlb	0	; () banked
  7002   001146  6FAC               	movwf	(efgtoa@n+1)& (0+255),b
  7003   001148  0E00               	movlw	0
  7004   00114A  6FAB               	movwf	efgtoa@n& (0+255),b
  7005   00114C                     
  7006                           ; BSR set to: 0
  7007                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  7008   00114C  C0FC  F096         	movff	_width,efgtoa@w
  7009   001150  C0FD  F097         	movff	_width+1,efgtoa@w+1
  7010   001154                     
  7011                           ; BSR set to: 0
  7012                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
  7013   001154  51A6               	movf	efgtoa@sign& (0+255),w,b
  7014   001156  B4D8               	btfsc	status,2,c
  7015   001158  EFB0  F008         	goto	u7671
  7016   00115C  EFB2  F008         	goto	u7670
  7017   001160                     u7671:
  7018   001160  EFC6  F008         	goto	l5944
  7019   001164                     u7670:
  7020   001164                     
  7021                           ; BSR set to: 0
  7022                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  7023   001164  51A6               	movf	efgtoa@sign& (0+255),w,b
  7024   001166  A4D8               	btfss	status,2,c
  7025   001168  EFB8  F008         	goto	u7681
  7026   00116C  EFBA  F008         	goto	u7680
  7027   001170                     u7681:
  7028   001170  EFC0  F008         	goto	l5940
  7029   001174                     u7680:
  7030   001174                     
  7031                           ; BSR set to: 0
  7032   001174  0E00               	movlw	0
  7033   001176  6F8C               	movwf	(_efgtoa$3345+1)& (0+255),b
  7034   001178  0E2B               	movlw	43
  7035   00117A  6F8B               	movwf	_efgtoa$3345& (0+255),b
  7036   00117C  EFC4  F008         	goto	l5942
  7037   001180                     l5940:
  7038                           
  7039                           ; BSR set to: 0
  7040   001180  0E00               	movlw	0
  7041   001182  6F8C               	movwf	(_efgtoa$3345+1)& (0+255),b
  7042   001184  0E2D               	movlw	45
  7043   001186  6F8B               	movwf	_efgtoa$3345& (0+255),b
  7044   001188                     l5942:
  7045                           
  7046                           ; BSR set to: 0
  7047   001188  C08B  F0A6         	movff	_efgtoa$3345,efgtoa@sign
  7048   00118C                     l5944:
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  7052   00118C  C0A7  F003         	movff	efgtoa@g,___fpclassifyf@x
  7053   001190  C0A8  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7054   001194  C0A9  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7055   001198  C0AA  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7056   00119C  ECB2  F025         	call	___fpclassifyf	;wreg free
  7057   0011A0  0403               	decf	?___fpclassifyf^0,w,c
  7058   0011A2  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  7059   0011A4  A4D8               	btfss	status,2,c
  7060   0011A6  EFD7  F008         	goto	u7691
  7061   0011AA  EFD9  F008         	goto	u7690
  7062   0011AE                     u7691:
  7063   0011AE  EF0A  F009         	goto	l5962
  7064   0011B2                     u7690:
  7065   0011B2                     
  7066                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  7067   0011B2  0100               	movlb	0	; () banked
  7068   0011B4  51A6               	movf	efgtoa@sign& (0+255),w,b
  7069   0011B6  B4D8               	btfsc	status,2,c
  7070   0011B8  EFE0  F008         	goto	u7701
  7071   0011BC  EFE2  F008         	goto	u7700
  7072   0011C0                     u7701:
  7073   0011C0  EFEB  F008         	goto	l5954
  7074   0011C4                     u7700:
  7075   0011C4                     
  7076                           ; BSR set to: 0
  7077                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  7078   0011C4  C0A6  F122         	movff	efgtoa@sign,_dbuf
  7079   0011C8                     
  7080                           ; BSR set to: 0
  7081                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
  7082   0011C8  0796               	decf	efgtoa@w& (0+255),f,b
  7083   0011CA  A0D8               	btfss	status,0,c
  7084   0011CC  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  7085   0011CE                     
  7086                           ; BSR set to: 0
  7087                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  7088   0011CE  0E00               	movlw	0
  7089   0011D0  6FAC               	movwf	(efgtoa@n+1)& (0+255),b
  7090   0011D2  0E01               	movlw	1
  7091   0011D4  6FAB               	movwf	efgtoa@n& (0+255),b
  7092   0011D6                     l5954:
  7093                           
  7094                           ; BSR set to: 0
  7095                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  7096   0011D6  0E22               	movlw	low _dbuf
  7097   0011D8  25AB               	addwf	efgtoa@n& (0+255),w,b
  7098   0011DA  6E03               	movwf	strcpy@dest^0,c
  7099   0011DC  0E01               	movlw	high _dbuf
  7100   0011DE  21AC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7101   0011E0  6E04               	movwf	(strcpy@dest+1)^0,c
  7102   0011E2  0EE1               	movlw	low STR_20
  7103   0011E4  6E05               	movwf	strcpy@src^0,c
  7104   0011E6  EC2E  F02A         	call	_strcpy	;wreg free
  7105   0011EA                     l5956:
  7106                           
  7107                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  7108   0011EA  0100               	movlb	0	; () banked
  7109   0011EC  0EFD               	movlw	253
  7110   0011EE  2796               	addwf	efgtoa@w& (0+255),f,b
  7111   0011F0  0EFF               	movlw	255
  7112   0011F2  2397               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7113   0011F4                     
  7114                           ; BSR set to: 0
  7115                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  7116   0011F4  C07C  F014         	movff	efgtoa@fp,pad@fp
  7117   0011F8  C07D  F015         	movff	efgtoa@fp+1,pad@fp+1
  7118   0011FC  0E22               	movlw	low _dbuf
  7119   0011FE  6E16               	movwf	pad@buf^0,c
  7120   001200  0E01               	movlw	high _dbuf
  7121   001202  6E17               	movwf	(pad@buf+1)^0,c
  7122   001204  C096  F018         	movff	efgtoa@w,pad@p
  7123   001208  C097  F019         	movff	efgtoa@w+1,pad@p+1
  7124   00120C  ECBE  F028         	call	_pad	;wreg free
  7125   001210  EF73  F00D         	goto	l1187
  7126   001214                     l5962:
  7127                           
  7128                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  7129   001214  C0A7  F003         	movff	efgtoa@g,___fpclassifyf@x
  7130   001218  C0A8  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7131   00121C  C0A9  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7132   001220  C0AA  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7133   001224  ECB2  F025         	call	___fpclassifyf	;wreg free
  7134   001228  5003               	movf	?___fpclassifyf^0,w,c
  7135   00122A  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  7136   00122C  A4D8               	btfss	status,2,c
  7137   00122E  EF1B  F009         	goto	u7711
  7138   001232  EF1D  F009         	goto	u7710
  7139   001236                     u7711:
  7140   001236  EF3B  F009         	goto	l5980
  7141   00123A                     u7710:
  7142   00123A                     
  7143                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  7144   00123A  0100               	movlb	0	; () banked
  7145   00123C  51A6               	movf	efgtoa@sign& (0+255),w,b
  7146   00123E  B4D8               	btfsc	status,2,c
  7147   001240  EF24  F009         	goto	u7721
  7148   001244  EF26  F009         	goto	u7720
  7149   001248                     u7721:
  7150   001248  EF2F  F009         	goto	l5972
  7151   00124C                     u7720:
  7152   00124C                     
  7153                           ; BSR set to: 0
  7154                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  7155   00124C  C0A6  F122         	movff	efgtoa@sign,_dbuf
  7156   001250                     
  7157                           ; BSR set to: 0
  7158                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
  7159   001250  0796               	decf	efgtoa@w& (0+255),f,b
  7160   001252  A0D8               	btfss	status,0,c
  7161   001254  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  7162   001256                     
  7163                           ; BSR set to: 0
  7164                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  7165   001256  0E00               	movlw	0
  7166   001258  6FAC               	movwf	(efgtoa@n+1)& (0+255),b
  7167   00125A  0E01               	movlw	1
  7168   00125C  6FAB               	movwf	efgtoa@n& (0+255),b
  7169   00125E                     l5972:
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  7173   00125E  0E22               	movlw	low _dbuf
  7174   001260  25AB               	addwf	efgtoa@n& (0+255),w,b
  7175   001262  6E03               	movwf	strcpy@dest^0,c
  7176   001264  0E01               	movlw	high _dbuf
  7177   001266  21AC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7178   001268  6E04               	movwf	(strcpy@dest+1)^0,c
  7179   00126A  0EE5               	movlw	low STR_23
  7180   00126C  6E05               	movwf	strcpy@src^0,c
  7181   00126E  EC2E  F02A         	call	_strcpy	;wreg free
  7182   001272  EFF5  F008         	goto	l5956
  7183   001276                     l5980:
  7184                           
  7185                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  7186   001276  0E00               	movlw	0
  7187   001278  0100               	movlb	0	; () banked
  7188   00127A  6FAD               	movwf	efgtoa@u& (0+255),b
  7189   00127C  0E00               	movlw	0
  7190   00127E  6FAE               	movwf	(efgtoa@u+1)& (0+255),b
  7191   001280  0E80               	movlw	128
  7192   001282  6FAF               	movwf	(efgtoa@u+2)& (0+255),b
  7193   001284  0E3F               	movlw	63
  7194   001286  6FB0               	movwf	(efgtoa@u+3)& (0+255),b
  7195                           
  7196                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  7197   001288  0E00               	movlw	0
  7198   00128A  6F95               	movwf	(efgtoa@e+1)& (0+255),b
  7199   00128C  0E00               	movlw	0
  7200   00128E  6F94               	movwf	efgtoa@e& (0+255),b
  7201   001290                     
  7202                           ; BSR set to: 0
  7203                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  7204   001290  C0A7  F003         	movff	efgtoa@g,___fleq@ff1
  7205   001294  C0A8  F004         	movff	efgtoa@g+1,___fleq@ff1+1
  7206   001298  C0A9  F005         	movff	efgtoa@g+2,___fleq@ff1+2
  7207   00129C  C0AA  F006         	movff	efgtoa@g+3,___fleq@ff1+3
  7208   0012A0  0E00               	movlw	0
  7209   0012A2  6E07               	movwf	___fleq@ff2^0,c
  7210   0012A4  0E00               	movlw	0
  7211   0012A6  6E08               	movwf	(___fleq@ff2+1)^0,c
  7212   0012A8  0E00               	movlw	0
  7213   0012AA  6E09               	movwf	(___fleq@ff2+2)^0,c
  7214   0012AC  0E00               	movlw	0
  7215   0012AE  6E0A               	movwf	(___fleq@ff2+3)^0,c
  7216   0012B0  EC16  F028         	call	___fleq	;wreg free
  7217   0012B4  B0D8               	btfsc	status,0,c
  7218   0012B6  EF5F  F009         	goto	u7731
  7219   0012BA  EF61  F009         	goto	u7730
  7220   0012BE                     u7731:
  7221   0012BE  EF40  F00A         	goto	l1190
  7222   0012C2                     u7730:
  7223   0012C2  EF6E  F009         	goto	l5988
  7224   0012C6                     l1192:
  7225                           
  7226                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  7227   0012C6  C098  F0AD         	movff	efgtoa@ou,efgtoa@u
  7228   0012CA  C099  F0AE         	movff	efgtoa@ou+1,efgtoa@u+1
  7229   0012CE  C09A  F0AF         	movff	efgtoa@ou+2,efgtoa@u+2
  7230   0012D2  C09B  F0B0         	movff	efgtoa@ou+3,efgtoa@u+3
  7231   0012D6                     
  7232                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
  7233   0012D6  0100               	movlb	0	; () banked
  7234   0012D8  4B94               	infsnz	efgtoa@e& (0+255),f,b
  7235   0012DA  2B95               	incf	(efgtoa@e+1)& (0+255),f,b
  7236   0012DC                     l5988:
  7237                           
  7238                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  7239   0012DC  C0AD  F011         	movff	efgtoa@u,___flmul@b
  7240   0012E0  C0AE  F012         	movff	efgtoa@u+1,___flmul@b+1
  7241   0012E4  C0AF  F013         	movff	efgtoa@u+2,___flmul@b+2
  7242   0012E8  C0B0  F014         	movff	efgtoa@u+3,___flmul@b+3
  7243   0012EC  0E00               	movlw	0
  7244   0012EE  6E15               	movwf	___flmul@a^0,c
  7245   0012F0  0E00               	movlw	0
  7246   0012F2  6E16               	movwf	(___flmul@a+1)^0,c
  7247   0012F4  0E20               	movlw	32
  7248   0012F6  6E17               	movwf	(___flmul@a+2)^0,c
  7249   0012F8  0E41               	movlw	65
  7250   0012FA  6E18               	movwf	(___flmul@a+3)^0,c
  7251   0012FC  EC59  F012         	call	___flmul	;wreg free
  7252   001300  C011  F098         	movff	?___flmul,efgtoa@ou
  7253   001304  C012  F099         	movff	?___flmul+1,efgtoa@ou+1
  7254   001308  C013  F09A         	movff	?___flmul+2,efgtoa@ou+2
  7255   00130C  C014  F09B         	movff	?___flmul+3,efgtoa@ou+3
  7256   001310  0100               	movlb	0	; () banked
  7257   001312  5198               	movf	efgtoa@ou& (0+255),w,b
  7258   001314  5DA7               	subwf	efgtoa@g& (0+255),w,b
  7259   001316  6E03               	movwf	labs@a^0,c
  7260   001318  5199               	movf	(efgtoa@ou+1)& (0+255),w,b
  7261   00131A  59A8               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7262   00131C  6E04               	movwf	(labs@a+1)^0,c
  7263   00131E  519A               	movf	(efgtoa@ou+2)& (0+255),w,b
  7264   001320  59A9               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7265   001322  6E05               	movwf	(labs@a+2)^0,c
  7266   001324  519B               	movf	(efgtoa@ou+3)& (0+255),w,b
  7267   001326  59AA               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7268   001328  6E06               	movwf	(labs@a+3)^0,c
  7269   00132A  EC0F  F029         	call	_labs	;wreg free
  7270   00132E  BE06               	btfsc	(?_labs+3)^0,7,c
  7271   001330  EFA5  F009         	goto	u7741
  7272   001334  5006               	movf	(?_labs+3)^0,w,c
  7273   001336  1005               	iorwf	(?_labs+2)^0,w,c
  7274   001338  1004               	iorwf	(?_labs+1)^0,w,c
  7275   00133A  E109               	bnz	u7740
  7276   00133C  0E02               	movlw	2
  7277   00133E  5C03               	subwf	?_labs^0,w,c
  7278   001340  A0D8               	btfss	status,0,c
  7279   001342  EFA5  F009         	goto	u7741
  7280   001346  EFA7  F009         	goto	u7740
  7281   00134A                     u7741:
  7282   00134A  EF63  F009         	goto	l1192
  7283   00134E                     u7740:
  7284   00134E  C098  F02A         	movff	efgtoa@ou,___flge@ff1
  7285   001352  C099  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  7286   001356  C09A  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  7287   00135A  C09B  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  7288   00135E  C0A7  F02E         	movff	efgtoa@g,___flge@ff2
  7289   001362  C0A8  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  7290   001366  C0A9  F030         	movff	efgtoa@g+2,___flge@ff2+2
  7291   00136A  C0AA  F031         	movff	efgtoa@g+3,___flge@ff2+3
  7292   00136E  EC30  F025         	call	___flge	;wreg free
  7293   001372  A0D8               	btfss	status,0,c
  7294   001374  EFBE  F009         	goto	u7751
  7295   001378  EFC0  F009         	goto	u7750
  7296   00137C                     u7751:
  7297   00137C  EF63  F009         	goto	l1192
  7298   001380                     u7750:
  7299   001380                     
  7300                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  7301   001380  0100               	movlb	0	; () banked
  7302   001382  51AD               	movf	efgtoa@u& (0+255),w,b
  7303   001384  5DA7               	subwf	efgtoa@g& (0+255),w,b
  7304   001386  6E03               	movwf	labs@a^0,c
  7305   001388  51AE               	movf	(efgtoa@u+1)& (0+255),w,b
  7306   00138A  59A8               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7307   00138C  6E04               	movwf	(labs@a+1)^0,c
  7308   00138E  51AF               	movf	(efgtoa@u+2)& (0+255),w,b
  7309   001390  59A9               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7310   001392  6E05               	movwf	(labs@a+2)^0,c
  7311   001394  51B0               	movf	(efgtoa@u+3)& (0+255),w,b
  7312   001396  59AA               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7313   001398  6E06               	movwf	(labs@a+3)^0,c
  7314   00139A  EC0F  F029         	call	_labs	;wreg free
  7315   00139E  BE06               	btfsc	(?_labs+3)^0,7,c
  7316   0013A0  EFDF  F009         	goto	u7760
  7317   0013A4  5006               	movf	(?_labs+3)^0,w,c
  7318   0013A6  1005               	iorwf	(?_labs+2)^0,w,c
  7319   0013A8  1004               	iorwf	(?_labs+1)^0,w,c
  7320   0013AA  E107               	bnz	u7761
  7321   0013AC  0E02               	movlw	2
  7322   0013AE  5C03               	subwf	?_labs^0,w,c
  7323   0013B0  B0D8               	btfsc	status,0,c
  7324   0013B2  EFDD  F009         	goto	u7761
  7325   0013B6  EFDF  F009         	goto	u7760
  7326   0013BA                     u7761:
  7327   0013BA  EF27  F00A         	goto	l6006
  7328   0013BE                     u7760:
  7329   0013BE                     l5996:
  7330                           
  7331                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
  7332   0013BE  C0AD  F0A7         	movff	efgtoa@u,efgtoa@g
  7333   0013C2  C0AE  F0A8         	movff	efgtoa@u+1,efgtoa@g+1
  7334   0013C6  C0AF  F0A9         	movff	efgtoa@u+2,efgtoa@g+2
  7335   0013CA  C0B0  F0AA         	movff	efgtoa@u+3,efgtoa@g+3
  7336                           
  7337                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
  7338   0013CE  EF40  F00A         	goto	l1190
  7339   0013D2                     l5998:
  7340                           
  7341                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  7342   0013D2  C0AD  F02A         	movff	efgtoa@u,___fldiv@b
  7343   0013D6  C0AE  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  7344   0013DA  C0AF  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  7345   0013DE  C0B0  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  7346   0013E2  0E00               	movlw	0
  7347   0013E4  6E2E               	movwf	___fldiv@a^0,c
  7348   0013E6  0E00               	movlw	0
  7349   0013E8  6E2F               	movwf	(___fldiv@a+1)^0,c
  7350   0013EA  0E20               	movlw	32
  7351   0013EC  6E30               	movwf	(___fldiv@a+2)^0,c
  7352   0013EE  0E41               	movlw	65
  7353   0013F0  6E31               	movwf	(___fldiv@a+3)^0,c
  7354   0013F2  EC31  F018         	call	___fldiv	;wreg free
  7355   0013F6  C02A  F0AD         	movff	?___fldiv,efgtoa@u
  7356   0013FA  C02B  F0AE         	movff	?___fldiv+1,efgtoa@u+1
  7357   0013FE  C02C  F0AF         	movff	?___fldiv+2,efgtoa@u+2
  7358   001402  C02D  F0B0         	movff	?___fldiv+3,efgtoa@u+3
  7359   001406                     
  7360                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
  7361   001406  0100               	movlb	0	; () banked
  7362   001408  0794               	decf	efgtoa@e& (0+255),f,b
  7363   00140A  A0D8               	btfss	status,0,c
  7364   00140C  0795               	decf	(efgtoa@e+1)& (0+255),f,b
  7365   00140E                     
  7366                           ; BSR set to: 0
  7367                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  7368   00140E  51AD               	movf	efgtoa@u& (0+255),w,b
  7369   001410  5DA7               	subwf	efgtoa@g& (0+255),w,b
  7370   001412  6E03               	movwf	labs@a^0,c
  7371   001414  51AE               	movf	(efgtoa@u+1)& (0+255),w,b
  7372   001416  59A8               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7373   001418  6E04               	movwf	(labs@a+1)^0,c
  7374   00141A  51AF               	movf	(efgtoa@u+2)& (0+255),w,b
  7375   00141C  59A9               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7376   00141E  6E05               	movwf	(labs@a+2)^0,c
  7377   001420  51B0               	movf	(efgtoa@u+3)& (0+255),w,b
  7378   001422  59AA               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7379   001424  6E06               	movwf	(labs@a+3)^0,c
  7380   001426  EC0F  F029         	call	_labs	;wreg free
  7381   00142A  BE06               	btfsc	(?_labs+3)^0,7,c
  7382   00142C  EF25  F00A         	goto	u7770
  7383   001430  5006               	movf	(?_labs+3)^0,w,c
  7384   001432  1005               	iorwf	(?_labs+2)^0,w,c
  7385   001434  1004               	iorwf	(?_labs+1)^0,w,c
  7386   001436  E107               	bnz	u7771
  7387   001438  0E02               	movlw	2
  7388   00143A  5C03               	subwf	?_labs^0,w,c
  7389   00143C  B0D8               	btfsc	status,0,c
  7390   00143E  EF23  F00A         	goto	u7771
  7391   001442  EF25  F00A         	goto	u7770
  7392   001446                     u7771:
  7393   001446  EF27  F00A         	goto	l6006
  7394   00144A                     u7770:
  7395   00144A  EFDF  F009         	goto	l5996
  7396   00144E                     l6006:
  7397                           
  7398                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  7399   00144E  C0A7  F02A         	movff	efgtoa@g,___flge@ff1
  7400   001452  C0A8  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  7401   001456  C0A9  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  7402   00145A  C0AA  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  7403   00145E  C0AD  F02E         	movff	efgtoa@u,___flge@ff2
  7404   001462  C0AE  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  7405   001466  C0AF  F030         	movff	efgtoa@u+2,___flge@ff2+2
  7406   00146A  C0B0  F031         	movff	efgtoa@u+3,___flge@ff2+3
  7407   00146E  EC30  F025         	call	___flge	;wreg free
  7408   001472  A0D8               	btfss	status,0,c
  7409   001474  EF3E  F00A         	goto	u7781
  7410   001478  EF40  F00A         	goto	u7780
  7411   00147C                     u7781:
  7412   00147C  EFE9  F009         	goto	l5998
  7413   001480                     u7780:
  7414   001480                     l1190:
  7415                           
  7416                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  7417   001480  C082  F08E         	movff	efgtoa@c,efgtoa@mode
  7418                           
  7419                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  7420   001484  C08E  F08F         	movff	efgtoa@mode,efgtoa@nmode
  7421   001488                     
  7422                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  7423   001488  BE5C               	btfsc	(_prec+1)^0,7,c
  7424   00148A  EF49  F00A         	goto	u7791
  7425   00148E  EF4B  F00A         	goto	u7790
  7426   001492                     u7791:
  7427   001492  EF51  F00A         	goto	l6012
  7428   001496                     u7790:
  7429   001496  C05B  F087         	movff	_prec,efgtoa@p
  7430   00149A  C05C  F088         	movff	_prec+1,efgtoa@p+1
  7431   00149E  EF56  F00A         	goto	l6014
  7432   0014A2                     l6012:
  7433   0014A2  0E00               	movlw	0
  7434   0014A4  0100               	movlb	0	; () banked
  7435   0014A6  6F88               	movwf	(efgtoa@p+1)& (0+255),b
  7436   0014A8  0E06               	movlw	6
  7437   0014AA  6F87               	movwf	efgtoa@p& (0+255),b
  7438   0014AC                     l6014:
  7439                           
  7440                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
  7441   0014AC  C087  F092         	movff	efgtoa@p,efgtoa@m
  7442   0014B0  C088  F093         	movff	efgtoa@p+1,efgtoa@m+1
  7443   0014B4                     
  7444                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
  7445   0014B4  0100               	movlb	0	; () banked
  7446   0014B6  4B92               	infsnz	efgtoa@m& (0+255),f,b
  7447   0014B8  2B93               	incf	(efgtoa@m+1)& (0+255),f,b
  7448   0014BA                     
  7449                           ; BSR set to: 0
  7450                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  7451   0014BA  0E66               	movlw	102
  7452   0014BC  198F               	xorwf	efgtoa@nmode& (0+255),w,b
  7453   0014BE  A4D8               	btfss	status,2,c
  7454   0014C0  EF64  F00A         	goto	u7801
  7455   0014C4  EF66  F00A         	goto	u7800
  7456   0014C8                     u7801:
  7457   0014C8  EF86  F00A         	goto	l6028
  7458   0014CC                     u7800:
  7459   0014CC                     
  7460                           ; BSR set to: 0
  7461                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  7462   0014CC  BF95               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7463   0014CE  EF6D  F00A         	goto	u7810
  7464   0014D2  EF6B  F00A         	goto	u7811
  7465   0014D6                     u7811:
  7466   0014D6  EF79  F00A         	goto	l6024
  7467   0014DA                     u7810:
  7468   0014DA                     
  7469                           ; BSR set to: 0
  7470                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  7471   0014DA  0E00               	movlw	0
  7472   0014DC  6FAD               	movwf	efgtoa@u& (0+255),b
  7473   0014DE  0E00               	movlw	0
  7474   0014E0  6FAE               	movwf	(efgtoa@u+1)& (0+255),b
  7475   0014E2  0E80               	movlw	128
  7476   0014E4  6FAF               	movwf	(efgtoa@u+2)& (0+255),b
  7477   0014E6  0E3F               	movlw	63
  7478   0014E8  6FB0               	movwf	(efgtoa@u+3)& (0+255),b
  7479                           
  7480                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  7481   0014EA  0E00               	movlw	0
  7482   0014EC  6F95               	movwf	(efgtoa@e+1)& (0+255),b
  7483   0014EE  0E00               	movlw	0
  7484   0014F0  6F94               	movwf	efgtoa@e& (0+255),b
  7485   0014F2                     l6024:
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  7489   0014F2  0E67               	movlw	103
  7490   0014F4  198E               	xorwf	efgtoa@mode& (0+255),w,b
  7491   0014F6  B4D8               	btfsc	status,2,c
  7492   0014F8  EF80  F00A         	goto	u7821
  7493   0014FC  EF82  F00A         	goto	u7820
  7494   001500                     u7821:
  7495   001500  EF86  F00A         	goto	l6028
  7496   001504                     u7820:
  7497   001504                     
  7498                           ; BSR set to: 0
  7499                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  7500   001504  5194               	movf	efgtoa@e& (0+255),w,b
  7501   001506  2792               	addwf	efgtoa@m& (0+255),f,b
  7502   001508  5195               	movf	(efgtoa@e+1)& (0+255),w,b
  7503   00150A  2393               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7504   00150C                     l6028:
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  7508   00150C  0E00               	movlw	0
  7509   00150E  6F9D               	movwf	(efgtoa@i+1)& (0+255),b
  7510   001510  0E00               	movlw	0
  7511   001512  6F9C               	movwf	efgtoa@i& (0+255),b
  7512   001514                     
  7513                           ; BSR set to: 0
  7514                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  7515   001514  C0A7  F09E         	movff	efgtoa@g,efgtoa@h
  7516   001518  C0A8  F09F         	movff	efgtoa@g+1,efgtoa@h+1
  7517   00151C  C0A9  F0A0         	movff	efgtoa@g+2,efgtoa@h+2
  7518   001520  C0AA  F0A1         	movff	efgtoa@g+3,efgtoa@h+3
  7519   001524                     
  7520                           ; BSR set to: 0
  7521                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  7522   001524  C0AD  F098         	movff	efgtoa@u,efgtoa@ou
  7523   001528  C0AE  F099         	movff	efgtoa@u+1,efgtoa@ou+1
  7524   00152C  C0AF  F09A         	movff	efgtoa@u+2,efgtoa@ou+2
  7525   001530  C0B0  F09B         	movff	efgtoa@u+3,efgtoa@ou+3
  7526                           
  7527                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  7528   001534  EF17  F00B         	goto	l6042
  7529   001538                     l6034:
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  7533   001538  C09E  F02A         	movff	efgtoa@h,___fldiv@b
  7534   00153C  C09F  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  7535   001540  C0A0  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  7536   001544  C0A1  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  7537   001548  C0AD  F02E         	movff	efgtoa@u,___fldiv@a
  7538   00154C  C0AE  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  7539   001550  C0AF  F030         	movff	efgtoa@u+2,___fldiv@a+2
  7540   001554  C0B0  F031         	movff	efgtoa@u+3,___fldiv@a+3
  7541   001558  EC31  F018         	call	___fldiv	;wreg free
  7542   00155C  C02A  F043         	movff	?___fldiv,floorf@x
  7543   001560  C02B  F044         	movff	?___fldiv+1,floorf@x+1
  7544   001564  C02C  F045         	movff	?___fldiv+2,floorf@x+2
  7545   001568  C02D  F046         	movff	?___fldiv+3,floorf@x+3
  7546   00156C  EC61  F01D         	call	_floorf	;wreg free
  7547   001570  C043  F0A2         	movff	?_floorf,efgtoa@l
  7548   001574  C044  F0A3         	movff	?_floorf+1,efgtoa@l+1
  7549   001578  C045  F0A4         	movff	?_floorf+2,efgtoa@l+2
  7550   00157C  C046  F0A5         	movff	?_floorf+3,efgtoa@l+3
  7551                           
  7552                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  7553   001580  C0A2  F053         	movff	efgtoa@l,___fltol@f1
  7554   001584  C0A3  F054         	movff	efgtoa@l+1,___fltol@f1+1
  7555   001588  C0A4  F055         	movff	efgtoa@l+2,___fltol@f1+2
  7556   00158C  C0A5  F056         	movff	efgtoa@l+3,___fltol@f1+3
  7557   001590  ECAC  F024         	call	___fltol	;wreg free
  7558   001594  C053  F090         	movff	?___fltol,efgtoa@d
  7559   001598  C054  F091         	movff	?___fltol+1,efgtoa@d+1
  7560   00159C                     
  7561                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  7562   00159C  C09E  F053         	movff	efgtoa@h,___flsub@b
  7563   0015A0  C09F  F054         	movff	efgtoa@h+1,___flsub@b+1
  7564   0015A4  C0A0  F055         	movff	efgtoa@h+2,___flsub@b+2
  7565   0015A8  C0A1  F056         	movff	efgtoa@h+3,___flsub@b+3
  7566   0015AC  C0A2  F015         	movff	efgtoa@l,___flmul@a
  7567   0015B0  C0A3  F016         	movff	efgtoa@l+1,___flmul@a+1
  7568   0015B4  C0A4  F017         	movff	efgtoa@l+2,___flmul@a+2
  7569   0015B8  C0A5  F018         	movff	efgtoa@l+3,___flmul@a+3
  7570   0015BC  C0AD  F011         	movff	efgtoa@u,___flmul@b
  7571   0015C0  C0AE  F012         	movff	efgtoa@u+1,___flmul@b+1
  7572   0015C4  C0AF  F013         	movff	efgtoa@u+2,___flmul@b+2
  7573   0015C8  C0B0  F014         	movff	efgtoa@u+3,___flmul@b+3
  7574   0015CC  EC59  F012         	call	___flmul	;wreg free
  7575   0015D0  C011  F057         	movff	?___flmul,___flsub@a
  7576   0015D4  C012  F058         	movff	?___flmul+1,___flsub@a+1
  7577   0015D8  C013  F059         	movff	?___flmul+2,___flsub@a+2
  7578   0015DC  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  7579   0015E0  ECA9  F029         	call	___flsub	;wreg free
  7580   0015E4  C053  F09E         	movff	?___flsub,efgtoa@h
  7581   0015E8  C054  F09F         	movff	?___flsub+1,efgtoa@h+1
  7582   0015EC  C055  F0A0         	movff	?___flsub+2,efgtoa@h+2
  7583   0015F0  C056  F0A1         	movff	?___flsub+3,efgtoa@h+3
  7584   0015F4                     
  7585                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  7586   0015F4  C0AD  F02A         	movff	efgtoa@u,___fldiv@b
  7587   0015F8  C0AE  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  7588   0015FC  C0AF  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  7589   001600  C0B0  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  7590   001604  0E00               	movlw	0
  7591   001606  6E2E               	movwf	___fldiv@a^0,c
  7592   001608  0E00               	movlw	0
  7593   00160A  6E2F               	movwf	(___fldiv@a+1)^0,c
  7594   00160C  0E20               	movlw	32
  7595   00160E  6E30               	movwf	(___fldiv@a+2)^0,c
  7596   001610  0E41               	movlw	65
  7597   001612  6E31               	movwf	(___fldiv@a+3)^0,c
  7598   001614  EC31  F018         	call	___fldiv	;wreg free
  7599   001618  C02A  F0AD         	movff	?___fldiv,efgtoa@u
  7600   00161C  C02B  F0AE         	movff	?___fldiv+1,efgtoa@u+1
  7601   001620  C02C  F0AF         	movff	?___fldiv+2,efgtoa@u+2
  7602   001624  C02D  F0B0         	movff	?___fldiv+3,efgtoa@u+3
  7603   001628                     
  7604                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
  7605   001628  0100               	movlb	0	; () banked
  7606   00162A  4B9C               	infsnz	efgtoa@i& (0+255),f,b
  7607   00162C  2B9D               	incf	(efgtoa@i+1)& (0+255),f,b
  7608   00162E                     l6042:
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  7612   00162E  5192               	movf	efgtoa@m& (0+255),w,b
  7613   001630  5D9C               	subwf	efgtoa@i& (0+255),w,b
  7614   001632  519D               	movf	(efgtoa@i+1)& (0+255),w,b
  7615   001634  0A80               	xorlw	128
  7616   001636  6F83               	movwf	??_efgtoa& (0+255),b
  7617   001638  5193               	movf	(efgtoa@m+1)& (0+255),w,b
  7618   00163A  0A80               	xorlw	128
  7619   00163C  5983               	subwfb	??_efgtoa& (0+255),w,b
  7620   00163E  A0D8               	btfss	status,0,c
  7621   001640  EF24  F00B         	goto	u7831
  7622   001644  EF26  F00B         	goto	u7830
  7623   001648                     u7831:
  7624   001648  EF9C  F00A         	goto	l6034
  7625   00164C                     u7830:
  7626   00164C                     
  7627                           ; BSR set to: 0
  7628                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  7629   00164C  C0AD  F011         	movff	efgtoa@u,___flmul@b
  7630   001650  C0AE  F012         	movff	efgtoa@u+1,___flmul@b+1
  7631   001654  C0AF  F013         	movff	efgtoa@u+2,___flmul@b+2
  7632   001658  C0B0  F014         	movff	efgtoa@u+3,___flmul@b+3
  7633   00165C  0E00               	movlw	0
  7634   00165E  6E15               	movwf	___flmul@a^0,c
  7635   001660  0E00               	movlw	0
  7636   001662  6E16               	movwf	(___flmul@a+1)^0,c
  7637   001664  0EA0               	movlw	160
  7638   001666  6E17               	movwf	(___flmul@a+2)^0,c
  7639   001668  0E40               	movlw	64
  7640   00166A  6E18               	movwf	(___flmul@a+3)^0,c
  7641   00166C  EC59  F012         	call	___flmul	;wreg free
  7642   001670  C011  F0A2         	movff	?___flmul,efgtoa@l
  7643   001674  C012  F0A3         	movff	?___flmul+1,efgtoa@l+1
  7644   001678  C013  F0A4         	movff	?___flmul+2,efgtoa@l+2
  7645   00167C  C014  F0A5         	movff	?___flmul+3,efgtoa@l+3
  7646   001680                     
  7647                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  7648   001680  C09E  F02A         	movff	efgtoa@h,___flge@ff1
  7649   001684  C09F  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  7650   001688  C0A0  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  7651   00168C  C0A1  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  7652   001690  C0A2  F02E         	movff	efgtoa@l,___flge@ff2
  7653   001694  C0A3  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  7654   001698  C0A4  F030         	movff	efgtoa@l+2,___flge@ff2+2
  7655   00169C  C0A5  F031         	movff	efgtoa@l+3,___flge@ff2+3
  7656   0016A0  EC30  F025         	call	___flge	;wreg free
  7657   0016A4  B0D8               	btfsc	status,0,c
  7658   0016A6  EF57  F00B         	goto	u7841
  7659   0016AA  EF59  F00B         	goto	u7840
  7660   0016AE                     u7841:
  7661   0016AE  EF64  F00B         	goto	l6050
  7662   0016B2                     u7840:
  7663   0016B2                     
  7664                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  7665   0016B2  0E00               	movlw	0
  7666   0016B4  0100               	movlb	0	; () banked
  7667   0016B6  6FA2               	movwf	efgtoa@l& (0+255),b
  7668   0016B8  0E00               	movlw	0
  7669   0016BA  6FA3               	movwf	(efgtoa@l+1)& (0+255),b
  7670   0016BC  0E00               	movlw	0
  7671   0016BE  6FA4               	movwf	(efgtoa@l+2)& (0+255),b
  7672   0016C0  0E00               	movlw	0
  7673   0016C2  6FA5               	movwf	(efgtoa@l+3)& (0+255),b
  7674                           
  7675                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 748:     } else {
  7676   0016C4  EF8D  F00B         	goto	l6056
  7677   0016C8                     l6050:
  7678                           
  7679                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  7680   0016C8  C09E  F003         	movff	efgtoa@h,___fleq@ff1
  7681   0016CC  C09F  F004         	movff	efgtoa@h+1,___fleq@ff1+1
  7682   0016D0  C0A0  F005         	movff	efgtoa@h+2,___fleq@ff1+2
  7683   0016D4  C0A1  F006         	movff	efgtoa@h+3,___fleq@ff1+3
  7684   0016D8  C0A2  F007         	movff	efgtoa@l,___fleq@ff2
  7685   0016DC  C0A3  F008         	movff	efgtoa@l+1,___fleq@ff2+1
  7686   0016E0  C0A4  F009         	movff	efgtoa@l+2,___fleq@ff2+2
  7687   0016E4  C0A5  F00A         	movff	efgtoa@l+3,___fleq@ff2+3
  7688   0016E8  EC16  F028         	call	___fleq	;wreg free
  7689   0016EC  A0D8               	btfss	status,0,c
  7690   0016EE  EF7B  F00B         	goto	u7851
  7691   0016F2  EF7D  F00B         	goto	u7850
  7692   0016F6                     u7851:
  7693   0016F6  EF8D  F00B         	goto	l6056
  7694   0016FA                     u7850:
  7695   0016FA  0100               	movlb	0	; () banked
  7696   0016FC  B190               	btfsc	efgtoa@d& (0+255),0,b
  7697   0016FE  EF83  F00B         	goto	u7861
  7698   001702  EF85  F00B         	goto	u7860
  7699   001706                     u7861:
  7700   001706  EF8D  F00B         	goto	l6056
  7701   00170A                     u7860:
  7702   00170A                     
  7703                           ; BSR set to: 0
  7704                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  7705   00170A  0E00               	movlw	0
  7706   00170C  6FA2               	movwf	efgtoa@l& (0+255),b
  7707   00170E  0E00               	movlw	0
  7708   001710  6FA3               	movwf	(efgtoa@l+1)& (0+255),b
  7709   001712  0E00               	movlw	0
  7710   001714  6FA4               	movwf	(efgtoa@l+2)& (0+255),b
  7711   001716  0E00               	movlw	0
  7712   001718  6FA5               	movwf	(efgtoa@l+3)& (0+255),b
  7713   00171A                     l6056:
  7714                           
  7715                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  7716   00171A  C0A7  F043         	movff	efgtoa@g,___fladd@b
  7717   00171E  C0A8  F044         	movff	efgtoa@g+1,___fladd@b+1
  7718   001722  C0A9  F045         	movff	efgtoa@g+2,___fladd@b+2
  7719   001726  C0AA  F046         	movff	efgtoa@g+3,___fladd@b+3
  7720   00172A  C0A2  F047         	movff	efgtoa@l,___fladd@a
  7721   00172E  C0A3  F048         	movff	efgtoa@l+1,___fladd@a+1
  7722   001732  C0A4  F049         	movff	efgtoa@l+2,___fladd@a+2
  7723   001736  C0A5  F04A         	movff	efgtoa@l+3,___fladd@a+3
  7724   00173A  ECF9  F00F         	call	___fladd	;wreg free
  7725   00173E  C043  F09E         	movff	?___fladd,efgtoa@h
  7726   001742  C044  F09F         	movff	?___fladd+1,efgtoa@h+1
  7727   001746  C045  F0A0         	movff	?___fladd+2,efgtoa@h+2
  7728   00174A  C046  F0A1         	movff	?___fladd+3,efgtoa@h+3
  7729   00174E                     
  7730                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  7731   00174E  C09E  F02A         	movff	efgtoa@h,___flge@ff1
  7732   001752  C09F  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  7733   001756  C0A0  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  7734   00175A  C0A1  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  7735   00175E  0E00               	movlw	0
  7736   001760  6E15               	movwf	___flmul@a^0,c
  7737   001762  0E00               	movlw	0
  7738   001764  6E16               	movwf	(___flmul@a+1)^0,c
  7739   001766  0E20               	movlw	32
  7740   001768  6E17               	movwf	(___flmul@a+2)^0,c
  7741   00176A  0E41               	movlw	65
  7742   00176C  6E18               	movwf	(___flmul@a+3)^0,c
  7743   00176E  C098  F011         	movff	efgtoa@ou,___flmul@b
  7744   001772  C099  F012         	movff	efgtoa@ou+1,___flmul@b+1
  7745   001776  C09A  F013         	movff	efgtoa@ou+2,___flmul@b+2
  7746   00177A  C09B  F014         	movff	efgtoa@ou+3,___flmul@b+3
  7747   00177E  EC59  F012         	call	___flmul	;wreg free
  7748   001782  C011  F02E         	movff	?___flmul,___flge@ff2
  7749   001786  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  7750   00178A  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  7751   00178E  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  7752   001792  EC30  F025         	call	___flge	;wreg free
  7753   001796  A0D8               	btfss	status,0,c
  7754   001798  EFD0  F00B         	goto	u7871
  7755   00179C  EFD2  F00B         	goto	u7870
  7756   0017A0                     u7871:
  7757   0017A0  EFFB  F00B         	goto	l6068
  7758   0017A4                     u7870:
  7759   0017A4                     
  7760                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
  7761   0017A4  0100               	movlb	0	; () banked
  7762   0017A6  4B94               	infsnz	efgtoa@e& (0+255),f,b
  7763   0017A8  2B95               	incf	(efgtoa@e+1)& (0+255),f,b
  7764   0017AA                     
  7765                           ; BSR set to: 0
  7766                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  7767   0017AA  C098  F011         	movff	efgtoa@ou,___flmul@b
  7768   0017AE  C099  F012         	movff	efgtoa@ou+1,___flmul@b+1
  7769   0017B2  C09A  F013         	movff	efgtoa@ou+2,___flmul@b+2
  7770   0017B6  C09B  F014         	movff	efgtoa@ou+3,___flmul@b+3
  7771   0017BA  0E00               	movlw	0
  7772   0017BC  6E15               	movwf	___flmul@a^0,c
  7773   0017BE  0E00               	movlw	0
  7774   0017C0  6E16               	movwf	(___flmul@a+1)^0,c
  7775   0017C2  0E20               	movlw	32
  7776   0017C4  6E17               	movwf	(___flmul@a+2)^0,c
  7777   0017C6  0E41               	movlw	65
  7778   0017C8  6E18               	movwf	(___flmul@a+3)^0,c
  7779   0017CA  EC59  F012         	call	___flmul	;wreg free
  7780   0017CE  C011  F098         	movff	?___flmul,efgtoa@ou
  7781   0017D2  C012  F099         	movff	?___flmul+1,efgtoa@ou+1
  7782   0017D6  C013  F09A         	movff	?___flmul+2,efgtoa@ou+2
  7783   0017DA  C014  F09B         	movff	?___flmul+3,efgtoa@ou+3
  7784   0017DE                     
  7785                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  7786   0017DE  0E66               	movlw	102
  7787   0017E0  0100               	movlb	0	; () banked
  7788   0017E2  198F               	xorwf	efgtoa@nmode& (0+255),w,b
  7789   0017E4  A4D8               	btfss	status,2,c
  7790   0017E6  EFF7  F00B         	goto	u7881
  7791   0017EA  EFF9  F00B         	goto	u7880
  7792   0017EE                     u7881:
  7793   0017EE  EFFB  F00B         	goto	l6068
  7794   0017F2                     u7880:
  7795   0017F2                     
  7796                           ; BSR set to: 0
  7797                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
  7798   0017F2  4B92               	infsnz	efgtoa@m& (0+255),f,b
  7799   0017F4  2B93               	incf	(efgtoa@m+1)& (0+255),f,b
  7800   0017F6                     l6068:
  7801                           
  7802                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  7803   0017F6  C098  F0AD         	movff	efgtoa@ou,efgtoa@u
  7804   0017FA  C099  F0AE         	movff	efgtoa@ou+1,efgtoa@u+1
  7805   0017FE  C09A  F0AF         	movff	efgtoa@ou+2,efgtoa@u+2
  7806   001802  C09B  F0B0         	movff	efgtoa@ou+3,efgtoa@u+3
  7807   001806                     
  7808                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  7809   001806  C094  F085         	movff	efgtoa@e,efgtoa@ne
  7810   00180A  C095  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  7811   00180E                     
  7812                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  7813   00180E  0E00               	movlw	0
  7814   001810  0100               	movlb	0	; () banked
  7815   001812  6F8D               	movwf	efgtoa@pp& (0+255),b
  7816   001814                     
  7817                           ; BSR set to: 0
  7818                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  7819   001814  0E00               	movlw	0
  7820   001816  6F8A               	movwf	(efgtoa@t+1)& (0+255),b
  7821   001818  0E00               	movlw	0
  7822   00181A  6F89               	movwf	efgtoa@t& (0+255),b
  7823   00181C                     
  7824                           ; BSR set to: 0
  7825                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  7826   00181C  0E00               	movlw	0
  7827   00181E  6F9D               	movwf	(efgtoa@i+1)& (0+255),b
  7828   001820  0E00               	movlw	0
  7829   001822  6F9C               	movwf	efgtoa@i& (0+255),b
  7830                           
  7831                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7832   001824  EFF9  F00C         	goto	l6118
  7833   001828                     l6078:
  7834                           
  7835                           ; BSR set to: 0
  7836                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  7837   001828  C09E  F02A         	movff	efgtoa@h,___fldiv@b
  7838   00182C  C09F  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  7839   001830  C0A0  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  7840   001834  C0A1  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  7841   001838  C0AD  F02E         	movff	efgtoa@u,___fldiv@a
  7842   00183C  C0AE  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  7843   001840  C0AF  F030         	movff	efgtoa@u+2,___fldiv@a+2
  7844   001844  C0B0  F031         	movff	efgtoa@u+3,___fldiv@a+3
  7845   001848  EC31  F018         	call	___fldiv	;wreg free
  7846   00184C  C02A  F043         	movff	?___fldiv,floorf@x
  7847   001850  C02B  F044         	movff	?___fldiv+1,floorf@x+1
  7848   001854  C02C  F045         	movff	?___fldiv+2,floorf@x+2
  7849   001858  C02D  F046         	movff	?___fldiv+3,floorf@x+3
  7850   00185C  EC61  F01D         	call	_floorf	;wreg free
  7851   001860  C043  F0A2         	movff	?_floorf,efgtoa@l
  7852   001864  C044  F0A3         	movff	?_floorf+1,efgtoa@l+1
  7853   001868  C045  F0A4         	movff	?_floorf+2,efgtoa@l+2
  7854   00186C  C046  F0A5         	movff	?_floorf+3,efgtoa@l+3
  7855                           
  7856                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  7857   001870  C0A2  F053         	movff	efgtoa@l,___fltol@f1
  7858   001874  C0A3  F054         	movff	efgtoa@l+1,___fltol@f1+1
  7859   001878  C0A4  F055         	movff	efgtoa@l+2,___fltol@f1+2
  7860   00187C  C0A5  F056         	movff	efgtoa@l+3,___fltol@f1+3
  7861   001880  ECAC  F024         	call	___fltol	;wreg free
  7862   001884  BE54               	btfsc	(?___fltol+1)^0,7,c
  7863   001886  EF50  F00C         	goto	u7890
  7864   00188A  5054               	movf	(?___fltol+1)^0,w,c
  7865   00188C  E107               	bnz	u7891
  7866   00188E  0E0A               	movlw	10
  7867   001890  5C53               	subwf	?___fltol^0,w,c
  7868   001892  B0D8               	btfsc	status,0,c
  7869   001894  EF4E  F00C         	goto	u7891
  7870   001898  EF50  F00C         	goto	u7890
  7871   00189C                     u7891:
  7872   00189C  EF60  F00C         	goto	l6082
  7873   0018A0                     u7890:
  7874   0018A0  C0A2  F053         	movff	efgtoa@l,___fltol@f1
  7875   0018A4  C0A3  F054         	movff	efgtoa@l+1,___fltol@f1+1
  7876   0018A8  C0A4  F055         	movff	efgtoa@l+2,___fltol@f1+2
  7877   0018AC  C0A5  F056         	movff	efgtoa@l+3,___fltol@f1+3
  7878   0018B0  ECAC  F024         	call	___fltol	;wreg free
  7879   0018B4  C053  F090         	movff	?___fltol,efgtoa@d
  7880   0018B8  C054  F091         	movff	?___fltol+1,efgtoa@d+1
  7881   0018BC  EF65  F00C         	goto	l1220
  7882   0018C0                     l6082:
  7883   0018C0  0E00               	movlw	0
  7884   0018C2  0100               	movlb	0	; () banked
  7885   0018C4  6F91               	movwf	(efgtoa@d+1)& (0+255),b
  7886   0018C6  0E09               	movlw	9
  7887   0018C8  6F90               	movwf	efgtoa@d& (0+255),b
  7888   0018CA                     l1220:
  7889                           
  7890                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  7891   0018CA  0100               	movlb	0	; () banked
  7892   0018CC  518D               	movf	efgtoa@pp& (0+255),w,b
  7893   0018CE  A4D8               	btfss	status,2,c
  7894   0018D0  EF6C  F00C         	goto	u7901
  7895   0018D4  EF6E  F00C         	goto	u7900
  7896   0018D8                     u7901:
  7897   0018D8  EF96  F00C         	goto	l6102
  7898   0018DC                     u7900:
  7899   0018DC                     
  7900                           ; BSR set to: 0
  7901   0018DC  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7902   0018DE  EF75  F00C         	goto	u7910
  7903   0018E2  EF73  F00C         	goto	u7911
  7904   0018E6                     u7911:
  7905   0018E6  EF96  F00C         	goto	l6102
  7906   0018EA                     u7910:
  7907   0018EA                     
  7908                           ; BSR set to: 0
  7909                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  7910   0018EA  0E22               	movlw	low _dbuf
  7911   0018EC  25AB               	addwf	efgtoa@n& (0+255),w,b
  7912   0018EE  6ED9               	movwf	fsr2l,c
  7913   0018F0  0E01               	movlw	high _dbuf
  7914   0018F2  21AC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7915   0018F4  6EDA               	movwf	fsr2h,c
  7916   0018F6  0E2E               	movlw	46
  7917   0018F8  6EDF               	movwf	indf2,c
  7918   0018FA                     
  7919                           ; BSR set to: 0
  7920   0018FA  4BAB               	infsnz	efgtoa@n& (0+255),f,b
  7921   0018FC  2BAC               	incf	(efgtoa@n+1)& (0+255),f,b
  7922   0018FE                     
  7923                           ; BSR set to: 0
  7924                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  7925   0018FE  0796               	decf	efgtoa@w& (0+255),f,b
  7926   001900  A0D8               	btfss	status,0,c
  7927   001902  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  7928   001904                     
  7929                           ; BSR set to: 0
  7930                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  7931   001904  0E01               	movlw	1
  7932   001906  6F8D               	movwf	efgtoa@pp& (0+255),b
  7933   001908  EF96  F00C         	goto	l6102
  7934   00190C                     l6094:
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  7938   00190C  0E22               	movlw	low _dbuf
  7939   00190E  25AB               	addwf	efgtoa@n& (0+255),w,b
  7940   001910  6ED9               	movwf	fsr2l,c
  7941   001912  0E01               	movlw	high _dbuf
  7942   001914  21AC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7943   001916  6EDA               	movwf	fsr2h,c
  7944   001918  0E30               	movlw	48
  7945   00191A  6EDF               	movwf	indf2,c
  7946   00191C                     
  7947                           ; BSR set to: 0
  7948   00191C  4BAB               	infsnz	efgtoa@n& (0+255),f,b
  7949   00191E  2BAC               	incf	(efgtoa@n+1)& (0+255),f,b
  7950   001920                     
  7951                           ; BSR set to: 0
  7952                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  7953   001920  0796               	decf	efgtoa@w& (0+255),f,b
  7954   001922  A0D8               	btfss	status,0,c
  7955   001924  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  7956   001926                     
  7957                           ; BSR set to: 0
  7958                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  7959   001926  0789               	decf	efgtoa@t& (0+255),f,b
  7960   001928  A0D8               	btfss	status,0,c
  7961   00192A  078A               	decf	(efgtoa@t+1)& (0+255),f,b
  7962   00192C                     l6102:
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  7966   00192C  5189               	movf	efgtoa@t& (0+255),w,b
  7967   00192E  118A               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7968   001930  A4D8               	btfss	status,2,c
  7969   001932  EF9D  F00C         	goto	u7921
  7970   001936  EF9F  F00C         	goto	u7920
  7971   00193A                     u7921:
  7972   00193A  EF86  F00C         	goto	l6094
  7973   00193E                     u7920:
  7974   00193E                     
  7975                           ; BSR set to: 0
  7976                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7977   00193E  0E22               	movlw	low _dbuf
  7978   001940  25AB               	addwf	efgtoa@n& (0+255),w,b
  7979   001942  6ED9               	movwf	fsr2l,c
  7980   001944  0E01               	movlw	high _dbuf
  7981   001946  21AC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7982   001948  6EDA               	movwf	fsr2h,c
  7983   00194A  5190               	movf	efgtoa@d& (0+255),w,b
  7984   00194C  0F30               	addlw	48
  7985   00194E  6EDF               	movwf	indf2,c
  7986   001950                     
  7987                           ; BSR set to: 0
  7988   001950  4BAB               	infsnz	efgtoa@n& (0+255),f,b
  7989   001952  2BAC               	incf	(efgtoa@n+1)& (0+255),f,b
  7990   001954                     
  7991                           ; BSR set to: 0
  7992                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  7993   001954  0796               	decf	efgtoa@w& (0+255),f,b
  7994   001956  A0D8               	btfss	status,0,c
  7995   001958  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  7996   00195A                     
  7997                           ; BSR set to: 0
  7998                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  7999   00195A  C09E  F053         	movff	efgtoa@h,___flsub@b
  8000   00195E  C09F  F054         	movff	efgtoa@h+1,___flsub@b+1
  8001   001962  C0A0  F055         	movff	efgtoa@h+2,___flsub@b+2
  8002   001966  C0A1  F056         	movff	efgtoa@h+3,___flsub@b+3
  8003   00196A  C0A2  F015         	movff	efgtoa@l,___flmul@a
  8004   00196E  C0A3  F016         	movff	efgtoa@l+1,___flmul@a+1
  8005   001972  C0A4  F017         	movff	efgtoa@l+2,___flmul@a+2
  8006   001976  C0A5  F018         	movff	efgtoa@l+3,___flmul@a+3
  8007   00197A  C0AD  F011         	movff	efgtoa@u,___flmul@b
  8008   00197E  C0AE  F012         	movff	efgtoa@u+1,___flmul@b+1
  8009   001982  C0AF  F013         	movff	efgtoa@u+2,___flmul@b+2
  8010   001986  C0B0  F014         	movff	efgtoa@u+3,___flmul@b+3
  8011   00198A  EC59  F012         	call	___flmul	;wreg free
  8012   00198E  C011  F057         	movff	?___flmul,___flsub@a
  8013   001992  C012  F058         	movff	?___flmul+1,___flsub@a+1
  8014   001996  C013  F059         	movff	?___flmul+2,___flsub@a+2
  8015   00199A  C014  F05A         	movff	?___flmul+3,___flsub@a+3
  8016   00199E  ECA9  F029         	call	___flsub	;wreg free
  8017   0019A2  C053  F09E         	movff	?___flsub,efgtoa@h
  8018   0019A6  C054  F09F         	movff	?___flsub+1,efgtoa@h+1
  8019   0019AA  C055  F0A0         	movff	?___flsub+2,efgtoa@h+2
  8020   0019AE  C056  F0A1         	movff	?___flsub+3,efgtoa@h+3
  8021   0019B2                     
  8022                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  8023   0019B2  C0AD  F02A         	movff	efgtoa@u,___fldiv@b
  8024   0019B6  C0AE  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  8025   0019BA  C0AF  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  8026   0019BE  C0B0  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  8027   0019C2  0E00               	movlw	0
  8028   0019C4  6E2E               	movwf	___fldiv@a^0,c
  8029   0019C6  0E00               	movlw	0
  8030   0019C8  6E2F               	movwf	(___fldiv@a+1)^0,c
  8031   0019CA  0E20               	movlw	32
  8032   0019CC  6E30               	movwf	(___fldiv@a+2)^0,c
  8033   0019CE  0E41               	movlw	65
  8034   0019D0  6E31               	movwf	(___fldiv@a+3)^0,c
  8035   0019D2  EC31  F018         	call	___fldiv	;wreg free
  8036   0019D6  C02A  F0AD         	movff	?___fldiv,efgtoa@u
  8037   0019DA  C02B  F0AE         	movff	?___fldiv+1,efgtoa@u+1
  8038   0019DE  C02C  F0AF         	movff	?___fldiv+2,efgtoa@u+2
  8039   0019E2  C02D  F0B0         	movff	?___fldiv+3,efgtoa@u+3
  8040   0019E6                     
  8041                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  8042   0019E6  0100               	movlb	0	; () banked
  8043   0019E8  0785               	decf	efgtoa@ne& (0+255),f,b
  8044   0019EA  A0D8               	btfss	status,0,c
  8045   0019EC  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  8046   0019EE                     
  8047                           ; BSR set to: 0
  8048                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
  8049   0019EE  4B9C               	infsnz	efgtoa@i& (0+255),f,b
  8050   0019F0  2B9D               	incf	(efgtoa@i+1)& (0+255),f,b
  8051   0019F2                     l6118:
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8055   0019F2  5192               	movf	efgtoa@m& (0+255),w,b
  8056   0019F4  5D9C               	subwf	efgtoa@i& (0+255),w,b
  8057   0019F6  519D               	movf	(efgtoa@i+1)& (0+255),w,b
  8058   0019F8  0A80               	xorlw	128
  8059   0019FA  6F83               	movwf	??_efgtoa& (0+255),b
  8060   0019FC  5193               	movf	(efgtoa@m+1)& (0+255),w,b
  8061   0019FE  0A80               	xorlw	128
  8062   001A00  5983               	subwfb	??_efgtoa& (0+255),w,b
  8063   001A02  B0D8               	btfsc	status,0,c
  8064   001A04  EF06  F00D         	goto	u7931
  8065   001A08  EF08  F00D         	goto	u7930
  8066   001A0C                     u7931:
  8067   001A0C  EF16  F00D         	goto	l6122
  8068   001A10                     u7930:
  8069   001A10                     
  8070                           ; BSR set to: 0
  8071   001A10  BFAC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8072   001A12  EF14  F00D         	goto	u7941
  8073   001A16  51AC               	movf	(efgtoa@n+1)& (0+255),w,b
  8074   001A18  E109               	bnz	u7940
  8075   001A1A  0E4B               	movlw	75
  8076   001A1C  5DAB               	subwf	efgtoa@n& (0+255),w,b
  8077   001A1E  A0D8               	btfss	status,0,c
  8078   001A20  EF14  F00D         	goto	u7941
  8079   001A24  EF16  F00D         	goto	u7940
  8080   001A28                     u7941:
  8081   001A28  EF14  F00C         	goto	l6078
  8082   001A2C                     u7940:
  8083   001A2C                     l6122:
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  8087   001A2C  0E00               	movlw	0
  8088   001A2E  6F9D               	movwf	(efgtoa@i+1)& (0+255),b
  8089   001A30  0E4F               	movlw	79
  8090   001A32  6F9C               	movwf	efgtoa@i& (0+255),b
  8091   001A34                     
  8092                           ; BSR set to: 0
  8093                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  8094   001A34  0E22               	movlw	low _dbuf
  8095   001A36  259C               	addwf	efgtoa@i& (0+255),w,b
  8096   001A38  6ED9               	movwf	fsr2l,c
  8097   001A3A  0E01               	movlw	high _dbuf
  8098   001A3C  219D               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8099   001A3E  6EDA               	movwf	fsr2h,c
  8100   001A40  6ADF               	clrf	indf2,c
  8101   001A42                     
  8102                           ; BSR set to: 0
  8103                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  8104   001A42  0E22               	movlw	low _dbuf
  8105   001A44  6F83               	movwf	??_efgtoa& (0+255),b
  8106   001A46  0E01               	movlw	high _dbuf
  8107   001A48  6F84               	movwf	(??_efgtoa+1)& (0+255),b
  8108   001A4A  51AB               	movf	efgtoa@n& (0+255),w,b
  8109   001A4C  5F83               	subwf	??_efgtoa& (0+255),f,b
  8110   001A4E  51AC               	movf	(efgtoa@n+1)& (0+255),w,b
  8111   001A50  5B84               	subwfb	(??_efgtoa+1)& (0+255),f,b
  8112   001A52  519C               	movf	efgtoa@i& (0+255),w,b
  8113   001A54  2583               	addwf	??_efgtoa& (0+255),w,b
  8114   001A56  6E03               	movwf	memcpy@d1^0,c
  8115   001A58  519D               	movf	(efgtoa@i+1)& (0+255),w,b
  8116   001A5A  2184               	addwfc	(??_efgtoa+1)& (0+255),w,b
  8117   001A5C  6E04               	movwf	(memcpy@d1+1)^0,c
  8118   001A5E  0E22               	movlw	low _dbuf
  8119   001A60  6E05               	movwf	memcpy@s1^0,c
  8120   001A62  0E01               	movlw	high _dbuf
  8121   001A64  6E06               	movwf	(memcpy@s1+1)^0,c
  8122   001A66  C0AB  F007         	movff	efgtoa@n,memcpy@n
  8123   001A6A  C0AC  F008         	movff	efgtoa@n+1,memcpy@n+1
  8124   001A6E  EC3A  F029         	call	_memcpy	;wreg free
  8125   001A72                     
  8126                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  8127   001A72  0100               	movlb	0	; () banked
  8128   001A74  51AB               	movf	efgtoa@n& (0+255),w,b
  8129   001A76  5D9C               	subwf	efgtoa@i& (0+255),w,b
  8130   001A78  6FAB               	movwf	efgtoa@n& (0+255),b
  8131   001A7A  51AC               	movf	(efgtoa@n+1)& (0+255),w,b
  8132   001A7C  599D               	subwfb	(efgtoa@i+1)& (0+255),w,b
  8133   001A7E  6FAC               	movwf	(efgtoa@n+1)& (0+255),b
  8134   001A80                     
  8135                           ; BSR set to: 0
  8136                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  8137   001A80  51A6               	movf	efgtoa@sign& (0+255),w,b
  8138   001A82  A4D8               	btfss	status,2,c
  8139   001A84  EF46  F00D         	goto	u7951
  8140   001A88  EF49  F00D         	goto	u7950
  8141   001A8C                     u7951:
  8142   001A8C  0E01               	movlw	1
  8143   001A8E  EF4A  F00D         	goto	u7960
  8144   001A92                     u7950:
  8145   001A92  0E00               	movlw	0
  8146   001A94                     u7960:
  8147   001A94  6F9C               	movwf	efgtoa@i& (0+255),b
  8148   001A96  6B9D               	clrf	(efgtoa@i+1)& (0+255),b
  8149   001A98                     
  8150                           ; BSR set to: 0
  8151                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  8152   001A98  51A6               	movf	efgtoa@sign& (0+255),w,b
  8153   001A9A  B4D8               	btfsc	status,2,c
  8154   001A9C  EF52  F00D         	goto	u7971
  8155   001AA0  EF54  F00D         	goto	u7970
  8156   001AA4                     u7971:
  8157   001AA4  EF5F  F00D         	goto	l6136
  8158   001AA8                     u7970:
  8159   001AA8                     
  8160                           ; BSR set to: 0
  8161                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  8162   001AA8  07AB               	decf	efgtoa@n& (0+255),f,b
  8163   001AAA  A0D8               	btfss	status,0,c
  8164   001AAC  07AC               	decf	(efgtoa@n+1)& (0+255),f,b
  8165   001AAE  0E22               	movlw	low _dbuf
  8166   001AB0  25AB               	addwf	efgtoa@n& (0+255),w,b
  8167   001AB2  6ED9               	movwf	fsr2l,c
  8168   001AB4  0E01               	movlw	high _dbuf
  8169   001AB6  21AC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8170   001AB8  6EDA               	movwf	fsr2h,c
  8171   001ABA  C0A6  FFDF         	movff	efgtoa@sign,indf2
  8172   001ABE                     l6136:
  8173                           
  8174                           ; BSR set to: 0
  8175                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  8176   001ABE  519C               	movf	efgtoa@i& (0+255),w,b
  8177   001AC0  5F96               	subwf	efgtoa@w& (0+255),f,b
  8178   001AC2  519D               	movf	(efgtoa@i+1)& (0+255),w,b
  8179   001AC4  5B97               	subwfb	(efgtoa@w+1)& (0+255),f,b
  8180   001AC6                     
  8181                           ; BSR set to: 0
  8182                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  8183   001AC6  C07C  F014         	movff	efgtoa@fp,pad@fp
  8184   001ACA  C07D  F015         	movff	efgtoa@fp+1,pad@fp+1
  8185   001ACE  0E22               	movlw	low _dbuf
  8186   001AD0  25AB               	addwf	efgtoa@n& (0+255),w,b
  8187   001AD2  6E16               	movwf	pad@buf^0,c
  8188   001AD4  0E01               	movlw	high _dbuf
  8189   001AD6  21AC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8190   001AD8  6E17               	movwf	(pad@buf+1)^0,c
  8191   001ADA  C096  F018         	movff	efgtoa@w,pad@p
  8192   001ADE  C097  F019         	movff	efgtoa@w+1,pad@p+1
  8193   001AE2  ECBE  F028         	call	_pad	;wreg free
  8194   001AE6                     l1187:
  8195   001AE6  0012               	return		;funcret
  8196   001AE8                     __end_of_efgtoa:
  8197                           	callstack 0
  8198                           
  8199 ;; *************** function _strcpy *****************
  8200 ;; Defined at:
  8201 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;  dest            2    2[COMRAM] PTR unsigned char 
  8204 ;;		 -> dbuf(80), 
  8205 ;;  src             1    4[COMRAM] PTR const unsigned char 
  8206 ;;		 -> STR_23(4), STR_20(4), 
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;  d               2    6[COMRAM] PTR unsigned char 
  8209 ;;		 -> dbuf(80), 
  8210 ;; Return value:  Size  Location     Type
  8211 ;;                  2    2[COMRAM] PTR unsigned char 
  8212 ;; Registers used:
  8213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8214 ;; Tracked objects:
  8215 ;;		On entry : 0/0
  8216 ;;		On exit  : 0/0
  8217 ;;		Unchanged: 0/0
  8218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8219 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8221 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8222 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8223 ;;Total ram usage:        6 bytes
  8224 ;; Hardware stack levels used: 1
  8225 ;; Hardware stack levels required when called: 1
  8226 ;; This function calls:
  8227 ;;		Nothing
  8228 ;; This function is called by:
  8229 ;;		_efgtoa
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           	psect	text27
  8234   00545C                     __ptext27:
  8235                           	callstack 0
  8236   00545C                     _strcpy:
  8237                           	callstack 24
  8238   00545C  C003  F007         	movff	strcpy@dest,strcpy@d
  8239   005460  C004  F008         	movff	strcpy@dest+1,strcpy@d+1
  8240   005464                     l5826:
  8241   005464  2A05               	incf	strcpy@src^0,f,c
  8242   005466  0405               	decf	strcpy@src^0,w,c
  8243   005468  6E06               	movwf	??_strcpy^0,c
  8244   00546A  C006  FFF6         	movff	??_strcpy,tblptrl
  8245   00546E                     	if	1	;There is more than 1 active tblptr byte
  8246   00546E  0E10               	movlw	high __smallconst
  8247   005470  6EF7               	movwf	tblptrh,c
  8248   005472                     	endif
  8249   005472                     	if	0	;tblptru may be non-zero
  8250   005472                     	endif
  8251   005472                     	if	0	;tblptru may be non-zero
  8252   005472                     	endif
  8253   005472  C007  FFD9         	movff	strcpy@d,fsr2l
  8254   005476  C008  FFDA         	movff	strcpy@d+1,fsr2h
  8255   00547A  4A07               	infsnz	strcpy@d^0,f,c
  8256   00547C  2A08               	incf	(strcpy@d+1)^0,f,c
  8257   00547E  0008               	tblrd		*
  8258   005480  CFF5 FFDF          	movff	tablat,indf2
  8259   005484  50DF               	movf	indf2,w,c
  8260   005486  A4D8               	btfss	status,2,c
  8261   005488  EF48  F02A         	goto	u7441
  8262   00548C  EF4A  F02A         	goto	u7440
  8263   005490                     u7441:
  8264   005490  EF32  F02A         	goto	l5826
  8265   005494                     u7440:
  8266   005494  0012               	return		;funcret
  8267   005496                     __end_of_strcpy:
  8268                           	callstack 0
  8269                           
  8270 ;; *************** function _memcpy *****************
  8271 ;; Defined at:
  8272 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  8273 ;; Parameters:    Size  Location     Type
  8274 ;;  d1              2    2[COMRAM] PTR void 
  8275 ;;		 -> dbuf(80), 
  8276 ;;  s1              2    4[COMRAM] PTR const void 
  8277 ;;		 -> dbuf(80), 
  8278 ;;  n               2    6[COMRAM] unsigned int 
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;  s               2   11[COMRAM] PTR const unsigned char 
  8281 ;;		 -> dbuf(80), 
  8282 ;;  d               2    9[COMRAM] PTR unsigned char 
  8283 ;;		 -> dbuf(80), 
  8284 ;;  tmp             1    8[COMRAM] unsigned char 
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  2    2[COMRAM] PTR void 
  8287 ;; Registers used:
  8288 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8294 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8295 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8297 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8298 ;;Total ram usage:       11 bytes
  8299 ;; Hardware stack levels used: 1
  8300 ;; Hardware stack levels required when called: 1
  8301 ;; This function calls:
  8302 ;;		Nothing
  8303 ;; This function is called by:
  8304 ;;		_efgtoa
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           
  8308                           	psect	text28
  8309   005274                     __ptext28:
  8310                           	callstack 0
  8311   005274                     _memcpy:
  8312                           	callstack 24
  8313   005274  C005  F00C         	movff	memcpy@s1,memcpy@s
  8314   005278  C006  F00D         	movff	memcpy@s1+1,memcpy@s+1
  8315   00527C  C003  F00A         	movff	memcpy@d1,memcpy@d
  8316   005280  C004  F00B         	movff	memcpy@d1+1,memcpy@d+1
  8317   005284  EF54  F029         	goto	l5874
  8318   005288                     l5866:
  8319   005288  C00C  FFD9         	movff	memcpy@s,fsr2l
  8320   00528C  C00D  FFDA         	movff	memcpy@s+1,fsr2h
  8321   005290  50DF               	movf	indf2,w,c
  8322   005292  6E09               	movwf	memcpy@tmp^0,c
  8323   005294  4A0C               	infsnz	memcpy@s^0,f,c
  8324   005296  2A0D               	incf	(memcpy@s+1)^0,f,c
  8325   005298  C00A  FFD9         	movff	memcpy@d,fsr2l
  8326   00529C  C00B  FFDA         	movff	memcpy@d+1,fsr2h
  8327   0052A0  C009  FFDF         	movff	memcpy@tmp,indf2
  8328   0052A4  4A0A               	infsnz	memcpy@d^0,f,c
  8329   0052A6  2A0B               	incf	(memcpy@d+1)^0,f,c
  8330   0052A8                     l5874:
  8331   0052A8  0607               	decf	memcpy@n^0,f,c
  8332   0052AA  A0D8               	btfss	status,0,c
  8333   0052AC  0608               	decf	(memcpy@n+1)^0,f,c
  8334   0052AE  2807               	incf	memcpy@n^0,w,c
  8335   0052B0  E106               	bnz	u7561
  8336   0052B2  2808               	incf	(memcpy@n+1)^0,w,c
  8337   0052B4  A4D8               	btfss	status,2,c
  8338   0052B6  EF5F  F029         	goto	u7561
  8339   0052BA  EF61  F029         	goto	u7560
  8340   0052BE                     u7561:
  8341   0052BE  EF44  F029         	goto	l5866
  8342   0052C2                     u7560:
  8343   0052C2  0012               	return		;funcret
  8344   0052C4                     __end_of_memcpy:
  8345                           	callstack 0
  8346                           
  8347 ;; *************** function _labs *****************
  8348 ;; Defined at:
  8349 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  a               4    2[COMRAM] long 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;		None
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  4    2[COMRAM] long 
  8356 ;; Registers used:
  8357 ;;		wreg, status,2, status,0
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8363 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8365 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8366 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8367 ;;Total ram usage:        8 bytes
  8368 ;; Hardware stack levels used: 1
  8369 ;; Hardware stack levels required when called: 1
  8370 ;; This function calls:
  8371 ;;		Nothing
  8372 ;; This function is called by:
  8373 ;;		_efgtoa
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text29
  8378   00521E                     __ptext29:
  8379                           	callstack 0
  8380   00521E                     _labs:
  8381                           	callstack 24
  8382   00521E  BE06               	btfsc	(labs@a+3)^0,7,c
  8383   005220  EF14  F029         	goto	u7451
  8384   005224  EF16  F029         	goto	u7450
  8385   005228                     u7451:
  8386   005228  EF20  F029         	goto	l5832
  8387   00522C                     u7450:
  8388   00522C  C003  F003         	movff	labs@a,?_labs
  8389   005230  C004  F004         	movff	labs@a+1,?_labs+1
  8390   005234  C005  F005         	movff	labs@a+2,?_labs+2
  8391   005238  C006  F006         	movff	labs@a+3,?_labs+3
  8392   00523C  EF39  F029         	goto	l1336
  8393   005240                     l5832:
  8394   005240  C003  F007         	movff	labs@a,??_labs
  8395   005244  C004  F008         	movff	labs@a+1,??_labs+1
  8396   005248  C005  F009         	movff	labs@a+2,??_labs+2
  8397   00524C  C006  F00A         	movff	labs@a+3,??_labs+3
  8398   005250  1E07               	comf	??_labs^0,f,c
  8399   005252  1E08               	comf	(??_labs+1)^0,f,c
  8400   005254  1E09               	comf	(??_labs+2)^0,f,c
  8401   005256  1E0A               	comf	(??_labs+3)^0,f,c
  8402   005258  2A07               	incf	??_labs^0,f,c
  8403   00525A  0E00               	movlw	0
  8404   00525C  2208               	addwfc	(??_labs+1)^0,f,c
  8405   00525E  2209               	addwfc	(??_labs+2)^0,f,c
  8406   005260  220A               	addwfc	(??_labs+3)^0,f,c
  8407   005262  C007  F003         	movff	??_labs,?_labs
  8408   005266  C008  F004         	movff	??_labs+1,?_labs+1
  8409   00526A  C009  F005         	movff	??_labs+2,?_labs+2
  8410   00526E  C00A  F006         	movff	??_labs+3,?_labs+3
  8411   005272                     l1336:
  8412   005272  0012               	return		;funcret
  8413   005274                     __end_of_labs:
  8414                           	callstack 0
  8415                           
  8416 ;; *************** function _floorf *****************
  8417 ;; Defined at:
  8418 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  x               4   66[COMRAM] float 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  u               4   82[COMRAM] struct .
  8423 ;;  m               4   76[COMRAM] unsigned long 
  8424 ;;  e               2   80[COMRAM] int 
  8425 ;; Return value:  Size  Location     Type
  8426 ;;                  4   66[COMRAM] float 
  8427 ;; Registers used:
  8428 ;;		wreg, status,2, status,0
  8429 ;; Tracked objects:
  8430 ;;		On entry : 0/0
  8431 ;;		On exit  : 0/0
  8432 ;;		Unchanged: 0/0
  8433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8435 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8436 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8437 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8438 ;;Total ram usage:       20 bytes
  8439 ;; Hardware stack levels used: 1
  8440 ;; Hardware stack levels required when called: 1
  8441 ;; This function calls:
  8442 ;;		Nothing
  8443 ;; This function is called by:
  8444 ;;		_efgtoa
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           	psect	text30
  8449   003AC2                     __ptext30:
  8450                           	callstack 0
  8451   003AC2                     _floorf:
  8452                           	callstack 24
  8453   003AC2  C119  F053         	movff	floorf@F521,floorf@u
  8454   003AC6  C11A  F054         	movff	floorf@F521+1,floorf@u+1
  8455   003ACA  C11B  F055         	movff	floorf@F521+2,floorf@u+2
  8456   003ACE  C11C  F056         	movff	floorf@F521+3,floorf@u+3
  8457   003AD2  C043  F053         	movff	floorf@x,floorf@u
  8458   003AD6  C044  F054         	movff	floorf@x+1,floorf@u+1
  8459   003ADA  C045  F055         	movff	floorf@x+2,floorf@u+2
  8460   003ADE  C046  F056         	movff	floorf@x+3,floorf@u+3
  8461   003AE2  0E81               	movlw	129
  8462   003AE4  6E47               	movwf	??_floorf^0,c
  8463   003AE6  0EFF               	movlw	255
  8464   003AE8  6E48               	movwf	(??_floorf+1)^0,c
  8465   003AEA  C053  F049         	movff	floorf@u,??_floorf+2
  8466   003AEE  C054  F04A         	movff	floorf@u+1,??_floorf+3
  8467   003AF2  C055  F04B         	movff	floorf@u+2,??_floorf+4
  8468   003AF6  C056  F04C         	movff	floorf@u+3,??_floorf+5
  8469   003AFA  0E18               	movlw	24
  8470   003AFC  EF85  F01D         	goto	u7460
  8471   003B00                     u7465:
  8472   003B00  90D8               	bcf	status,0,c
  8473   003B02  324C               	rrcf	(??_floorf+5)^0,f,c
  8474   003B04  324B               	rrcf	(??_floorf+4)^0,f,c
  8475   003B06  324A               	rrcf	(??_floorf+3)^0,f,c
  8476   003B08  3249               	rrcf	(??_floorf+2)^0,f,c
  8477   003B0A                     u7460:
  8478   003B0A  2EE8               	decfsz	wreg,f,c
  8479   003B0C  EF80  F01D         	goto	u7465
  8480   003B10  5049               	movf	(??_floorf+2)^0,w,c
  8481   003B12  2447               	addwf	??_floorf^0,w,c
  8482   003B14  6E51               	movwf	floorf@e^0,c
  8483   003B16  0E00               	movlw	0
  8484   003B18  2048               	addwfc	(??_floorf+1)^0,w,c
  8485   003B1A  6E52               	movwf	(floorf@e+1)^0,c
  8486   003B1C  BE52               	btfsc	(floorf@e+1)^0,7,c
  8487   003B1E  EF9A  F01D         	goto	u7471
  8488   003B22  5052               	movf	(floorf@e+1)^0,w,c
  8489   003B24  E109               	bnz	u7470
  8490   003B26  0E17               	movlw	23
  8491   003B28  5C51               	subwf	floorf@e^0,w,c
  8492   003B2A  A0D8               	btfss	status,0,c
  8493   003B2C  EF9A  F01D         	goto	u7471
  8494   003B30  EF9C  F01D         	goto	u7470
  8495   003B34                     u7471:
  8496   003B34  EFA6  F01D         	goto	l5842
  8497   003B38                     u7470:
  8498   003B38                     l5840:
  8499   003B38  C043  F043         	movff	floorf@x,?_floorf
  8500   003B3C  C044  F044         	movff	floorf@x+1,?_floorf+1
  8501   003B40  C045  F045         	movff	floorf@x+2,?_floorf+2
  8502   003B44  C046  F046         	movff	floorf@x+3,?_floorf+3
  8503   003B48  EF69  F01E         	goto	l1322
  8504   003B4C                     l5842:
  8505   003B4C  BE52               	btfsc	(floorf@e+1)^0,7,c
  8506   003B4E  EFAB  F01D         	goto	u7481
  8507   003B52  EFAD  F01D         	goto	u7480
  8508   003B56                     u7481:
  8509   003B56  EF1D  F01E         	goto	l5852
  8510   003B5A                     u7480:
  8511   003B5A  C051  F047         	movff	floorf@e,??_floorf
  8512   003B5E  0EFF               	movlw	255
  8513   003B60  6E48               	movwf	(??_floorf+1)^0,c
  8514   003B62  0EFF               	movlw	255
  8515   003B64  6E49               	movwf	(??_floorf+2)^0,c
  8516   003B66  0E7F               	movlw	127
  8517   003B68  6E4A               	movwf	(??_floorf+3)^0,c
  8518   003B6A  0E00               	movlw	0
  8519   003B6C  6E4B               	movwf	(??_floorf+4)^0,c
  8520   003B6E                     u7495:
  8521   003B6E  6647               	tstfsz	??_floorf^0,c
  8522   003B70  EFBC  F01D         	goto	u7496
  8523   003B74  EFC4  F01D         	goto	u7497
  8524   003B78                     u7496:
  8525   003B78  344B               	rlcf	(??_floorf+4)^0,w,c
  8526   003B7A  324B               	rrcf	(??_floorf+4)^0,f,c
  8527   003B7C  324A               	rrcf	(??_floorf+3)^0,f,c
  8528   003B7E  3249               	rrcf	(??_floorf+2)^0,f,c
  8529   003B80  3248               	rrcf	(??_floorf+1)^0,f,c
  8530   003B82  2E47               	decfsz	??_floorf^0,f,c
  8531   003B84  EFB7  F01D         	goto	u7495
  8532   003B88                     u7497:
  8533   003B88  C048  F04D         	movff	??_floorf+1,floorf@m
  8534   003B8C  C049  F04E         	movff	??_floorf+2,floorf@m+1
  8535   003B90  C04A  F04F         	movff	??_floorf+3,floorf@m+2
  8536   003B94  C04B  F050         	movff	??_floorf+4,floorf@m+3
  8537   003B98  504D               	movf	floorf@m^0,w,c
  8538   003B9A  1453               	andwf	floorf@u^0,w,c
  8539   003B9C  6E47               	movwf	??_floorf^0,c
  8540   003B9E  504E               	movf	(floorf@m+1)^0,w,c
  8541   003BA0  1454               	andwf	(floorf@u+1)^0,w,c
  8542   003BA2  6E48               	movwf	(??_floorf+1)^0,c
  8543   003BA4  504F               	movf	(floorf@m+2)^0,w,c
  8544   003BA6  1455               	andwf	(floorf@u+2)^0,w,c
  8545   003BA8  6E49               	movwf	(??_floorf+2)^0,c
  8546   003BAA  5050               	movf	(floorf@m+3)^0,w,c
  8547   003BAC  1456               	andwf	(floorf@u+3)^0,w,c
  8548   003BAE  6E4A               	movwf	(??_floorf+3)^0,c
  8549   003BB0  5047               	movf	??_floorf^0,w,c
  8550   003BB2  1048               	iorwf	(??_floorf+1)^0,w,c
  8551   003BB4  1049               	iorwf	(??_floorf+2)^0,w,c
  8552   003BB6  104A               	iorwf	(??_floorf+3)^0,w,c
  8553   003BB8  A4D8               	btfss	status,2,c
  8554   003BBA  EFE1  F01D         	goto	u7501
  8555   003BBE  EFE3  F01D         	goto	u7500
  8556   003BC2                     u7501:
  8557   003BC2  EFE5  F01D         	goto	l5848
  8558   003BC6                     u7500:
  8559   003BC6  EF9C  F01D         	goto	l5840
  8560   003BCA                     l5848:
  8561   003BCA  C053  F047         	movff	floorf@u,??_floorf
  8562   003BCE  C054  F048         	movff	floorf@u+1,??_floorf+1
  8563   003BD2  C055  F049         	movff	floorf@u+2,??_floorf+2
  8564   003BD6  C056  F04A         	movff	floorf@u+3,??_floorf+3
  8565   003BDA  0E20               	movlw	32
  8566   003BDC  EFF5  F01D         	goto	u7510
  8567   003BE0                     u7515:
  8568   003BE0  90D8               	bcf	status,0,c
  8569   003BE2  324A               	rrcf	(??_floorf+3)^0,f,c
  8570   003BE4  3249               	rrcf	(??_floorf+2)^0,f,c
  8571   003BE6  3248               	rrcf	(??_floorf+1)^0,f,c
  8572   003BE8  3247               	rrcf	??_floorf^0,f,c
  8573   003BEA                     u7510:
  8574   003BEA  2EE8               	decfsz	wreg,f,c
  8575   003BEC  EFF0  F01D         	goto	u7515
  8576   003BF0  5047               	movf	??_floorf^0,w,c
  8577   003BF2  1048               	iorwf	(??_floorf+1)^0,w,c
  8578   003BF4  1049               	iorwf	(??_floorf+2)^0,w,c
  8579   003BF6  104A               	iorwf	(??_floorf+3)^0,w,c
  8580   003BF8  B4D8               	btfsc	status,2,c
  8581   003BFA  EF01  F01E         	goto	u7521
  8582   003BFE  EF03  F01E         	goto	u7520
  8583   003C02                     u7521:
  8584   003C02  EF0B  F01E         	goto	l1325
  8585   003C06                     u7520:
  8586   003C06  504D               	movf	floorf@m^0,w,c
  8587   003C08  2653               	addwf	floorf@u^0,f,c
  8588   003C0A  504E               	movf	(floorf@m+1)^0,w,c
  8589   003C0C  2254               	addwfc	(floorf@u+1)^0,f,c
  8590   003C0E  504F               	movf	(floorf@m+2)^0,w,c
  8591   003C10  2255               	addwfc	(floorf@u+2)^0,f,c
  8592   003C12  5050               	movf	(floorf@m+3)^0,w,c
  8593   003C14  2256               	addwfc	(floorf@u+3)^0,f,c
  8594   003C16                     l1325:
  8595   003C16  1C4D               	comf	floorf@m^0,w,c
  8596   003C18  6E47               	movwf	??_floorf^0,c
  8597   003C1A  1C4E               	comf	(floorf@m+1)^0,w,c
  8598   003C1C  6E48               	movwf	(??_floorf+1)^0,c
  8599   003C1E  1C4F               	comf	(floorf@m+2)^0,w,c
  8600   003C20  6E49               	movwf	(??_floorf+2)^0,c
  8601   003C22  1C50               	comf	(floorf@m+3)^0,w,c
  8602   003C24  6E4A               	movwf	(??_floorf+3)^0,c
  8603   003C26  5047               	movf	??_floorf^0,w,c
  8604   003C28  1653               	andwf	floorf@u^0,f,c
  8605   003C2A  5048               	movf	(??_floorf+1)^0,w,c
  8606   003C2C  1654               	andwf	(floorf@u+1)^0,f,c
  8607   003C2E  5049               	movf	(??_floorf+2)^0,w,c
  8608   003C30  1655               	andwf	(floorf@u+2)^0,f,c
  8609   003C32  504A               	movf	(??_floorf+3)^0,w,c
  8610   003C34  1656               	andwf	(floorf@u+3)^0,f,c
  8611   003C36  EF61  F01E         	goto	l5860
  8612   003C3A                     l5852:
  8613   003C3A  C053  F047         	movff	floorf@u,??_floorf
  8614   003C3E  C054  F048         	movff	floorf@u+1,??_floorf+1
  8615   003C42  C055  F049         	movff	floorf@u+2,??_floorf+2
  8616   003C46  C056  F04A         	movff	floorf@u+3,??_floorf+3
  8617   003C4A  0E20               	movlw	32
  8618   003C4C  EF2D  F01E         	goto	u7530
  8619   003C50                     u7535:
  8620   003C50  90D8               	bcf	status,0,c
  8621   003C52  324A               	rrcf	(??_floorf+3)^0,f,c
  8622   003C54  3249               	rrcf	(??_floorf+2)^0,f,c
  8623   003C56  3248               	rrcf	(??_floorf+1)^0,f,c
  8624   003C58  3247               	rrcf	??_floorf^0,f,c
  8625   003C5A                     u7530:
  8626   003C5A  2EE8               	decfsz	wreg,f,c
  8627   003C5C  EF28  F01E         	goto	u7535
  8628   003C60  5047               	movf	??_floorf^0,w,c
  8629   003C62  1048               	iorwf	(??_floorf+1)^0,w,c
  8630   003C64  1049               	iorwf	(??_floorf+2)^0,w,c
  8631   003C66  104A               	iorwf	(??_floorf+3)^0,w,c
  8632   003C68  A4D8               	btfss	status,2,c
  8633   003C6A  EF39  F01E         	goto	u7541
  8634   003C6E  EF3B  F01E         	goto	u7540
  8635   003C72                     u7541:
  8636   003C72  EF45  F01E         	goto	l5856
  8637   003C76                     u7540:
  8638   003C76  0E00               	movlw	0
  8639   003C78  6E53               	movwf	floorf@u^0,c
  8640   003C7A  0E00               	movlw	0
  8641   003C7C  6E54               	movwf	(floorf@u+1)^0,c
  8642   003C7E  0E00               	movlw	0
  8643   003C80  6E55               	movwf	(floorf@u+2)^0,c
  8644   003C82  0E00               	movlw	0
  8645   003C84  6E56               	movwf	(floorf@u+3)^0,c
  8646   003C86  EF61  F01E         	goto	l5860
  8647   003C8A                     l5856:
  8648   003C8A  90D8               	bcf	status,0,c
  8649   003C8C  3453               	rlcf	floorf@u^0,w,c
  8650   003C8E  6E47               	movwf	??_floorf^0,c
  8651   003C90  3454               	rlcf	(floorf@u+1)^0,w,c
  8652   003C92  6E48               	movwf	(??_floorf+1)^0,c
  8653   003C94  3455               	rlcf	(floorf@u+2)^0,w,c
  8654   003C96  6E49               	movwf	(??_floorf+2)^0,c
  8655   003C98  3456               	rlcf	(floorf@u+3)^0,w,c
  8656   003C9A  6E4A               	movwf	(??_floorf+3)^0,c
  8657   003C9C  5047               	movf	??_floorf^0,w,c
  8658   003C9E  1048               	iorwf	(??_floorf+1)^0,w,c
  8659   003CA0  1049               	iorwf	(??_floorf+2)^0,w,c
  8660   003CA2  104A               	iorwf	(??_floorf+3)^0,w,c
  8661   003CA4  B4D8               	btfsc	status,2,c
  8662   003CA6  EF57  F01E         	goto	u7551
  8663   003CAA  EF59  F01E         	goto	u7550
  8664   003CAE                     u7551:
  8665   003CAE  EF61  F01E         	goto	l5860
  8666   003CB2                     u7550:
  8667   003CB2  0E00               	movlw	0
  8668   003CB4  6E53               	movwf	floorf@u^0,c
  8669   003CB6  0E00               	movlw	0
  8670   003CB8  6E54               	movwf	(floorf@u+1)^0,c
  8671   003CBA  0E80               	movlw	128
  8672   003CBC  6E55               	movwf	(floorf@u+2)^0,c
  8673   003CBE  0EBF               	movlw	191
  8674   003CC0  6E56               	movwf	(floorf@u+3)^0,c
  8675   003CC2                     l5860:
  8676   003CC2  C053  F043         	movff	floorf@u,?_floorf
  8677   003CC6  C054  F044         	movff	floorf@u+1,?_floorf+1
  8678   003CCA  C055  F045         	movff	floorf@u+2,?_floorf+2
  8679   003CCE  C056  F046         	movff	floorf@u+3,?_floorf+3
  8680   003CD2                     l1322:
  8681   003CD2  0012               	return		;funcret
  8682   003CD4                     __end_of_floorf:
  8683                           	callstack 0
  8684                           
  8685 ;; *************** function ___fpclassifyf *****************
  8686 ;; Defined at:
  8687 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;  x               4    2[COMRAM] float 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;  u               4   12[COMRAM] struct .
  8692 ;;  e               2   10[COMRAM] int 
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  2    2[COMRAM] int 
  8695 ;; Registers used:
  8696 ;;		wreg, status,2, status,0
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8703 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8704 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8705 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8706 ;;Total ram usage:       14 bytes
  8707 ;; Hardware stack levels used: 1
  8708 ;; Hardware stack levels required when called: 1
  8709 ;; This function calls:
  8710 ;;		Nothing
  8711 ;; This function is called by:
  8712 ;;		_efgtoa
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716                           	psect	text31
  8717   004B64                     __ptext31:
  8718                           	callstack 0
  8719   004B64                     ___fpclassifyf:
  8720                           	callstack 24
  8721   004B64  C11D  F00D         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8722   004B68  C11E  F00E         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8723   004B6C  C11F  F00F         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8724   004B70  C120  F010         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8725   004B74  C003  F00D         	movff	___fpclassifyf@x,___fpclassifyf@u
  8726   004B78  C004  F00E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8727   004B7C  C005  F00F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8728   004B80  C006  F010         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8729   004B84  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  8730   004B88  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8731   004B8C  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8732   004B90  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8733   004B94  0E18               	movlw	24
  8734   004B96  EFD2  F025         	goto	u7370
  8735   004B9A                     u7375:
  8736   004B9A  90D8               	bcf	status,0,c
  8737   004B9C  320A               	rrcf	(??___fpclassifyf+3)^0,f,c
  8738   004B9E  3209               	rrcf	(??___fpclassifyf+2)^0,f,c
  8739   004BA0  3208               	rrcf	(??___fpclassifyf+1)^0,f,c
  8740   004BA2  3207               	rrcf	??___fpclassifyf^0,f,c
  8741   004BA4                     u7370:
  8742   004BA4  2EE8               	decfsz	wreg,f,c
  8743   004BA6  EFCD  F025         	goto	u7375
  8744   004BAA  5007               	movf	??___fpclassifyf^0,w,c
  8745   004BAC  6E0B               	movwf	___fpclassifyf@e^0,c
  8746   004BAE  6A0C               	clrf	(___fpclassifyf@e+1)^0,c
  8747   004BB0  500B               	movf	___fpclassifyf@e^0,w,c
  8748   004BB2  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8749   004BB4  A4D8               	btfss	status,2,c
  8750   004BB6  EFDF  F025         	goto	u7381
  8751   004BBA  EFE1  F025         	goto	u7380
  8752   004BBE                     u7381:
  8753   004BBE  EF01  F026         	goto	l5814
  8754   004BC2                     u7380:
  8755   004BC2  90D8               	bcf	status,0,c
  8756   004BC4  340D               	rlcf	___fpclassifyf@u^0,w,c
  8757   004BC6  6E07               	movwf	??___fpclassifyf^0,c
  8758   004BC8  340E               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8759   004BCA  6E08               	movwf	(??___fpclassifyf+1)^0,c
  8760   004BCC  340F               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8761   004BCE  6E09               	movwf	(??___fpclassifyf+2)^0,c
  8762   004BD0  3410               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8763   004BD2  6E0A               	movwf	(??___fpclassifyf+3)^0,c
  8764   004BD4  5007               	movf	??___fpclassifyf^0,w,c
  8765   004BD6  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  8766   004BD8  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  8767   004BDA  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  8768   004BDC  A4D8               	btfss	status,2,c
  8769   004BDE  EFF3  F025         	goto	u7391
  8770   004BE2  EFF5  F025         	goto	u7390
  8771   004BE6                     u7391:
  8772   004BE6  EFFB  F025         	goto	l5810
  8773   004BEA                     u7390:
  8774   004BEA  0E00               	movlw	0
  8775   004BEC  6E04               	movwf	(?___fpclassifyf+1)^0,c
  8776   004BEE  0E02               	movlw	2
  8777   004BF0  6E03               	movwf	?___fpclassifyf^0,c
  8778   004BF2  EF30  F026         	goto	l1308
  8779   004BF6                     l5810:
  8780   004BF6  0E00               	movlw	0
  8781   004BF8  6E04               	movwf	(?___fpclassifyf+1)^0,c
  8782   004BFA  0E03               	movlw	3
  8783   004BFC  6E03               	movwf	?___fpclassifyf^0,c
  8784   004BFE  EF30  F026         	goto	l1308
  8785   004C02                     l5814:
  8786   004C02  280B               	incf	___fpclassifyf@e^0,w,c
  8787   004C04  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8788   004C06  A4D8               	btfss	status,2,c
  8789   004C08  EF08  F026         	goto	u7401
  8790   004C0C  EF0A  F026         	goto	u7400
  8791   004C10                     u7401:
  8792   004C10  EF2C  F026         	goto	l5820
  8793   004C14                     u7400:
  8794   004C14  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  8795   004C18  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8796   004C1C  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8797   004C20  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8798   004C24  0E09               	movlw	9
  8799   004C26                     u7415:
  8800   004C26  90D8               	bcf	status,0,c
  8801   004C28  3607               	rlcf	??___fpclassifyf^0,f,c
  8802   004C2A  3608               	rlcf	(??___fpclassifyf+1)^0,f,c
  8803   004C2C  3609               	rlcf	(??___fpclassifyf+2)^0,f,c
  8804   004C2E  360A               	rlcf	(??___fpclassifyf+3)^0,f,c
  8805   004C30  2EE8               	decfsz	wreg,f,c
  8806   004C32  EF13  F026         	goto	u7415
  8807   004C36  5007               	movf	??___fpclassifyf^0,w,c
  8808   004C38  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  8809   004C3A  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  8810   004C3C  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  8811   004C3E  B4D8               	btfsc	status,2,c
  8812   004C40  EF24  F026         	goto	u7421
  8813   004C44  EF27  F026         	goto	u7420
  8814   004C48                     u7421:
  8815   004C48  0E01               	movlw	1
  8816   004C4A  EF28  F026         	goto	u7430
  8817   004C4E                     u7420:
  8818   004C4E  0E00               	movlw	0
  8819   004C50                     u7430:
  8820   004C50  6E03               	movwf	?___fpclassifyf^0,c
  8821   004C52  6A04               	clrf	(?___fpclassifyf+1)^0,c
  8822   004C54  EF30  F026         	goto	l1308
  8823   004C58                     l5820:
  8824   004C58  0E00               	movlw	0
  8825   004C5A  6E04               	movwf	(?___fpclassifyf+1)^0,c
  8826   004C5C  0E04               	movlw	4
  8827   004C5E  6E03               	movwf	?___fpclassifyf^0,c
  8828   004C60                     l1308:
  8829   004C60  0012               	return		;funcret
  8830   004C62                     __end_of___fpclassifyf:
  8831                           	callstack 0
  8832                           
  8833 ;; *************** function ___fltol *****************
  8834 ;; Defined at:
  8835 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;  f1              4   82[COMRAM] int 
  8838 ;; Auto vars:     Size  Location     Type
  8839 ;;  exp1            1    1[BANK0 ] unsigned char 
  8840 ;;  sign1           1    0[BANK0 ] unsigned char 
  8841 ;; Return value:  Size  Location     Type
  8842 ;;                  4   82[COMRAM] long 
  8843 ;; Registers used:
  8844 ;;		wreg, status,2, status,0
  8845 ;; Tracked objects:
  8846 ;;		On entry : 0/0
  8847 ;;		On exit  : 0/0
  8848 ;;		Unchanged: 0/0
  8849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8850 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8851 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8852 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8853 ;;      Totals:         8       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8854 ;;Total ram usage:       10 bytes
  8855 ;; Hardware stack levels used: 1
  8856 ;; Hardware stack levels required when called: 1
  8857 ;; This function calls:
  8858 ;;		Nothing
  8859 ;; This function is called by:
  8860 ;;		_runDAC
  8861 ;;		_efgtoa
  8862 ;;		___rem_pio2f
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text32
  8867   004958                     __ptext32:
  8868                           	callstack 0
  8869   004958                     ___fltol:
  8870                           	callstack 26
  8871   004958  3455               	rlcf	(___fltol@f1+2)^0,w,c
  8872   00495A  3456               	rlcf	(___fltol@f1+3)^0,w,c
  8873   00495C  0100               	movlb	0	; () banked
  8874   00495E  6F61               	movwf	___fltol@exp1& (0+255),b
  8875   004960  5161               	movf	___fltol@exp1& (0+255),w,b
  8876   004962  A4D8               	btfss	status,2,c
  8877   004964  EFB6  F024         	goto	u7251
  8878   004968  EFB8  F024         	goto	u7250
  8879   00496C                     u7251:
  8880   00496C  EFC2  F024         	goto	l5744
  8881   004970                     u7250:
  8882   004970                     l5740:
  8883                           
  8884                           ; BSR set to: 0
  8885   004970  0E00               	movlw	0
  8886   004972  6E53               	movwf	?___fltol^0,c
  8887   004974  0E00               	movlw	0
  8888   004976  6E54               	movwf	(?___fltol+1)^0,c
  8889   004978  0E00               	movlw	0
  8890   00497A  6E55               	movwf	(?___fltol+2)^0,c
  8891   00497C  0E00               	movlw	0
  8892   00497E  6E56               	movwf	(?___fltol+3)^0,c
  8893   004980  EF2F  F025         	goto	l742
  8894   004984                     l5744:
  8895                           
  8896                           ; BSR set to: 0
  8897   004984  C053  F057         	movff	___fltol@f1,??___fltol
  8898   004988  C054  F058         	movff	___fltol@f1+1,??___fltol+1
  8899   00498C  C055  F059         	movff	___fltol@f1+2,??___fltol+2
  8900   004990  C056  F05A         	movff	___fltol@f1+3,??___fltol+3
  8901   004994  0E20               	movlw	32
  8902   004996  EFD2  F024         	goto	u7260
  8903   00499A                     u7265:
  8904   00499A  90D8               	bcf	status,0,c
  8905   00499C  325A               	rrcf	(??___fltol+3)^0,f,c
  8906   00499E  3259               	rrcf	(??___fltol+2)^0,f,c
  8907   0049A0  3258               	rrcf	(??___fltol+1)^0,f,c
  8908   0049A2  3257               	rrcf	??___fltol^0,f,c
  8909   0049A4                     u7260:
  8910   0049A4  2EE8               	decfsz	wreg,f,c
  8911   0049A6  EFCD  F024         	goto	u7265
  8912   0049AA  5057               	movf	??___fltol^0,w,c
  8913   0049AC  6F60               	movwf	___fltol@sign1& (0+255),b
  8914   0049AE                     
  8915                           ; BSR set to: 0
  8916   0049AE  8E55               	bsf	(___fltol@f1+2)^0,7,c
  8917   0049B0                     
  8918                           ; BSR set to: 0
  8919   0049B0  0EFF               	movlw	255
  8920   0049B2  1653               	andwf	___fltol@f1^0,f,c
  8921   0049B4  0EFF               	movlw	255
  8922   0049B6  1654               	andwf	(___fltol@f1+1)^0,f,c
  8923   0049B8  0EFF               	movlw	255
  8924   0049BA  1655               	andwf	(___fltol@f1+2)^0,f,c
  8925   0049BC  0E00               	movlw	0
  8926   0049BE  1656               	andwf	(___fltol@f1+3)^0,f,c
  8927   0049C0                     
  8928                           ; BSR set to: 0
  8929   0049C0  0E96               	movlw	150
  8930   0049C2  5F61               	subwf	___fltol@exp1& (0+255),f,b
  8931   0049C4                     
  8932                           ; BSR set to: 0
  8933   0049C4  BF61               	btfsc	___fltol@exp1& (0+255),7,b
  8934   0049C6  EFE9  F024         	goto	u7270
  8935   0049CA  EFE7  F024         	goto	u7271
  8936   0049CE                     u7271:
  8937   0049CE  EFFF  F024         	goto	l5764
  8938   0049D2                     u7270:
  8939   0049D2                     
  8940                           ; BSR set to: 0
  8941   0049D2  5161               	movf	___fltol@exp1& (0+255),w,b
  8942   0049D4  0A80               	xorlw	128
  8943   0049D6  0F97               	addlw	151
  8944   0049D8  B0D8               	btfsc	status,0,c
  8945   0049DA  EFF1  F024         	goto	u7281
  8946   0049DE  EFF3  F024         	goto	u7280
  8947   0049E2                     u7281:
  8948   0049E2  EFF5  F024         	goto	l5760
  8949   0049E6                     u7280:
  8950   0049E6  EFB8  F024         	goto	l5740
  8951   0049EA                     l5760:
  8952                           
  8953                           ; BSR set to: 0
  8954   0049EA  90D8               	bcf	status,0,c
  8955   0049EC  3256               	rrcf	(___fltol@f1+3)^0,f,c
  8956   0049EE  3255               	rrcf	(___fltol@f1+2)^0,f,c
  8957   0049F0  3254               	rrcf	(___fltol@f1+1)^0,f,c
  8958   0049F2  3253               	rrcf	___fltol@f1^0,f,c
  8959   0049F4                     
  8960                           ; BSR set to: 0
  8961   0049F4  3F61               	incfsz	___fltol@exp1& (0+255),f,b
  8962   0049F6  EFF5  F024         	goto	l5760
  8963   0049FA  EF17  F025         	goto	l5774
  8964   0049FE                     l5764:
  8965                           
  8966                           ; BSR set to: 0
  8967   0049FE  0E1F               	movlw	31
  8968   004A00  6561               	cpfsgt	___fltol@exp1& (0+255),b
  8969   004A02  EF05  F025         	goto	u7291
  8970   004A06  EF07  F025         	goto	u7290
  8971   004A0A                     u7291:
  8972   004A0A  EF0F  F025         	goto	l5772
  8973   004A0E                     u7290:
  8974   004A0E  EFB8  F024         	goto	l5740
  8975   004A12                     l5770:
  8976                           
  8977                           ; BSR set to: 0
  8978   004A12  90D8               	bcf	status,0,c
  8979   004A14  3653               	rlcf	___fltol@f1^0,f,c
  8980   004A16  3654               	rlcf	(___fltol@f1+1)^0,f,c
  8981   004A18  3655               	rlcf	(___fltol@f1+2)^0,f,c
  8982   004A1A  3656               	rlcf	(___fltol@f1+3)^0,f,c
  8983   004A1C  0761               	decf	___fltol@exp1& (0+255),f,b
  8984   004A1E                     l5772:
  8985                           
  8986                           ; BSR set to: 0
  8987   004A1E  5161               	movf	___fltol@exp1& (0+255),w,b
  8988   004A20  A4D8               	btfss	status,2,c
  8989   004A22  EF15  F025         	goto	u7301
  8990   004A26  EF17  F025         	goto	u7300
  8991   004A2A                     u7301:
  8992   004A2A  EF09  F025         	goto	l5770
  8993   004A2E                     u7300:
  8994   004A2E                     l5774:
  8995                           
  8996                           ; BSR set to: 0
  8997   004A2E  5160               	movf	___fltol@sign1& (0+255),w,b
  8998   004A30  B4D8               	btfsc	status,2,c
  8999   004A32  EF1D  F025         	goto	u7311
  9000   004A36  EF1F  F025         	goto	u7310
  9001   004A3A                     u7311:
  9002   004A3A  EF27  F025         	goto	l5778
  9003   004A3E                     u7310:
  9004   004A3E                     
  9005                           ; BSR set to: 0
  9006   004A3E  1E56               	comf	(___fltol@f1+3)^0,f,c
  9007   004A40  1E55               	comf	(___fltol@f1+2)^0,f,c
  9008   004A42  1E54               	comf	(___fltol@f1+1)^0,f,c
  9009   004A44  6C53               	negf	___fltol@f1^0,c
  9010   004A46  0E00               	movlw	0
  9011   004A48  2254               	addwfc	(___fltol@f1+1)^0,f,c
  9012   004A4A  2255               	addwfc	(___fltol@f1+2)^0,f,c
  9013   004A4C  2256               	addwfc	(___fltol@f1+3)^0,f,c
  9014   004A4E                     l5778:
  9015                           
  9016                           ; BSR set to: 0
  9017   004A4E  C053  F053         	movff	___fltol@f1,?___fltol
  9018   004A52  C054  F054         	movff	___fltol@f1+1,?___fltol+1
  9019   004A56  C055  F055         	movff	___fltol@f1+2,?___fltol+2
  9020   004A5A  C056  F056         	movff	___fltol@f1+3,?___fltol+3
  9021   004A5E                     l742:
  9022                           
  9023                           ; BSR set to: 0
  9024   004A5E  0012               	return		;funcret
  9025   004A60                     __end_of___fltol:
  9026                           	callstack 0
  9027                           
  9028 ;; *************** function ___flsub *****************
  9029 ;; Defined at:
  9030 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;  b               4   82[COMRAM] long 
  9033 ;;  a               4   86[COMRAM] long 
  9034 ;; Auto vars:     Size  Location     Type
  9035 ;;		None
  9036 ;; Return value:  Size  Location     Type
  9037 ;;                  4   82[COMRAM] long 
  9038 ;; Registers used:
  9039 ;;		wreg, status,2, status,0, cstack
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9045 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9048 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9049 ;;Total ram usage:        8 bytes
  9050 ;; Hardware stack levels used: 1
  9051 ;; Hardware stack levels required when called: 2
  9052 ;; This function calls:
  9053 ;;		___fladd
  9054 ;; This function is called by:
  9055 ;;		_efgtoa
  9056 ;;		___rem_pio2f
  9057 ;; This function uses a non-reentrant model
  9058 ;;
  9059                           
  9060                           	psect	text33
  9061   005352                     __ptext33:
  9062                           	callstack 0
  9063   005352                     ___flsub:
  9064                           	callstack 25
  9065   005352  0E00               	movlw	0
  9066   005354  1A57               	xorwf	___flsub@a^0,f,c
  9067   005356  0E00               	movlw	0
  9068   005358  1A58               	xorwf	(___flsub@a+1)^0,f,c
  9069   00535A  0E00               	movlw	0
  9070   00535C  1A59               	xorwf	(___flsub@a+2)^0,f,c
  9071   00535E  0E80               	movlw	128
  9072   005360  1A5A               	xorwf	(___flsub@a+3)^0,f,c
  9073   005362  C053  F043         	movff	___flsub@b,___fladd@b
  9074   005366  C054  F044         	movff	___flsub@b+1,___fladd@b+1
  9075   00536A  C055  F045         	movff	___flsub@b+2,___fladd@b+2
  9076   00536E  C056  F046         	movff	___flsub@b+3,___fladd@b+3
  9077   005372  C057  F047         	movff	___flsub@a,___fladd@a
  9078   005376  C058  F048         	movff	___flsub@a+1,___fladd@a+1
  9079   00537A  C059  F049         	movff	___flsub@a+2,___fladd@a+2
  9080   00537E  C05A  F04A         	movff	___flsub@a+3,___fladd@a+3
  9081   005382  ECF9  F00F         	call	___fladd	;wreg free
  9082   005386  C043  F053         	movff	?___fladd,?___flsub
  9083   00538A  C044  F054         	movff	?___fladd+1,?___flsub+1
  9084   00538E  C045  F055         	movff	?___fladd+2,?___flsub+2
  9085   005392  C046  F056         	movff	?___fladd+3,?___flsub+3
  9086   005396  0012               	return		;funcret
  9087   005398                     __end_of___flsub:
  9088                           	callstack 0
  9089                           
  9090 ;; *************** function ___fladd *****************
  9091 ;; Defined at:
  9092 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  9093 ;; Parameters:    Size  Location     Type
  9094 ;;  b               4   66[COMRAM] long 
  9095 ;;  a               4   70[COMRAM] long 
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;  grs             1   81[COMRAM] unsigned char 
  9098 ;;  bexp            1   80[COMRAM] unsigned char 
  9099 ;;  aexp            1   79[COMRAM] unsigned char 
  9100 ;;  signs           1   78[COMRAM] unsigned char 
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  4   66[COMRAM] unsigned char 
  9103 ;; Registers used:
  9104 ;;		wreg, status,2, status,0
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9110 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9111 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9112 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9113 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9114 ;;Total ram usage:       16 bytes
  9115 ;; Hardware stack levels used: 1
  9116 ;; Hardware stack levels required when called: 1
  9117 ;; This function calls:
  9118 ;;		Nothing
  9119 ;; This function is called by:
  9120 ;;		_runDAC
  9121 ;;		___flsub
  9122 ;;		_efgtoa
  9123 ;;		_sinf
  9124 ;;		___cosdf
  9125 ;;		___rem_pio2f
  9126 ;;		___sindf
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text34
  9131   001FF2                     __ptext34:
  9132                           	callstack 0
  9133   001FF2                     ___fladd:
  9134                           	callstack 26
  9135   001FF2  5046               	movf	(___fladd@b+3)^0,w,c
  9136   001FF4  0B80               	andlw	128
  9137   001FF6  6E4F               	movwf	___fladd@signs^0,c
  9138   001FF8  5046               	movf	(___fladd@b+3)^0,w,c
  9139   001FFA  2446               	addwf	(___fladd@b+3)^0,w,c
  9140   001FFC  6E51               	movwf	___fladd@bexp^0,c
  9141   001FFE  AE45               	btfss	(___fladd@b+2)^0,7,c
  9142   002000  EF04  F010         	goto	u6221
  9143   002004  EF06  F010         	goto	u6220
  9144   002008                     u6221:
  9145   002008  EF07  F010         	goto	l5128
  9146   00200C                     u6220:
  9147   00200C  8051               	bsf	___fladd@bexp^0,0,c
  9148   00200E                     l5128:
  9149   00200E  5051               	movf	___fladd@bexp^0,w,c
  9150   002010  B4D8               	btfsc	status,2,c
  9151   002012  EF0D  F010         	goto	u6231
  9152   002016  EF0F  F010         	goto	u6230
  9153   00201A                     u6231:
  9154   00201A  EF24  F010         	goto	l5138
  9155   00201E                     u6230:
  9156   00201E  2851               	incf	___fladd@bexp^0,w,c
  9157   002020  A4D8               	btfss	status,2,c
  9158   002022  EF15  F010         	goto	u6241
  9159   002026  EF17  F010         	goto	u6240
  9160   00202A                     u6241:
  9161   00202A  EF1F  F010         	goto	l5134
  9162   00202E                     u6240:
  9163   00202E  0E00               	movlw	0
  9164   002030  6E43               	movwf	___fladd@b^0,c
  9165   002032  0E00               	movlw	0
  9166   002034  6E44               	movwf	(___fladd@b+1)^0,c
  9167   002036  0E00               	movlw	0
  9168   002038  6E45               	movwf	(___fladd@b+2)^0,c
  9169   00203A  0E00               	movlw	0
  9170   00203C  6E46               	movwf	(___fladd@b+3)^0,c
  9171   00203E                     l5134:
  9172   00203E  8E45               	bsf	(___fladd@b+2)^0,7,c
  9173   002040  0E00               	movlw	0
  9174   002042  6E46               	movwf	(___fladd@b+3)^0,c
  9175   002044  EF2C  F010         	goto	l5140
  9176   002048                     l5138:
  9177   002048  0E00               	movlw	0
  9178   00204A  6E43               	movwf	___fladd@b^0,c
  9179   00204C  0E00               	movlw	0
  9180   00204E  6E44               	movwf	(___fladd@b+1)^0,c
  9181   002050  0E00               	movlw	0
  9182   002052  6E45               	movwf	(___fladd@b+2)^0,c
  9183   002054  0E00               	movlw	0
  9184   002056  6E46               	movwf	(___fladd@b+3)^0,c
  9185   002058                     l5140:
  9186   002058  504A               	movf	(___fladd@a+3)^0,w,c
  9187   00205A  0B80               	andlw	128
  9188   00205C  6E50               	movwf	___fladd@aexp^0,c
  9189   00205E  504F               	movf	___fladd@signs^0,w,c
  9190   002060  1850               	xorwf	___fladd@aexp^0,w,c
  9191   002062  B4D8               	btfsc	status,2,c
  9192   002064  EF36  F010         	goto	u6251
  9193   002068  EF38  F010         	goto	u6250
  9194   00206C                     u6251:
  9195   00206C  EF39  F010         	goto	l5146
  9196   002070                     u6250:
  9197   002070  8C4F               	bsf	___fladd@signs^0,6,c
  9198   002072                     l5146:
  9199   002072  504A               	movf	(___fladd@a+3)^0,w,c
  9200   002074  244A               	addwf	(___fladd@a+3)^0,w,c
  9201   002076  6E50               	movwf	___fladd@aexp^0,c
  9202   002078  AE49               	btfss	(___fladd@a+2)^0,7,c
  9203   00207A  EF41  F010         	goto	u6261
  9204   00207E  EF43  F010         	goto	u6260
  9205   002082                     u6261:
  9206   002082  EF44  F010         	goto	l5152
  9207   002086                     u6260:
  9208   002086  8050               	bsf	___fladd@aexp^0,0,c
  9209   002088                     l5152:
  9210   002088  5050               	movf	___fladd@aexp^0,w,c
  9211   00208A  B4D8               	btfsc	status,2,c
  9212   00208C  EF4A  F010         	goto	u6271
  9213   002090  EF4C  F010         	goto	u6270
  9214   002094                     u6271:
  9215   002094  EF61  F010         	goto	l5162
  9216   002098                     u6270:
  9217   002098  2850               	incf	___fladd@aexp^0,w,c
  9218   00209A  A4D8               	btfss	status,2,c
  9219   00209C  EF52  F010         	goto	u6281
  9220   0020A0  EF54  F010         	goto	u6280
  9221   0020A4                     u6281:
  9222   0020A4  EF5C  F010         	goto	l5158
  9223   0020A8                     u6280:
  9224   0020A8  0E00               	movlw	0
  9225   0020AA  6E47               	movwf	___fladd@a^0,c
  9226   0020AC  0E00               	movlw	0
  9227   0020AE  6E48               	movwf	(___fladd@a+1)^0,c
  9228   0020B0  0E00               	movlw	0
  9229   0020B2  6E49               	movwf	(___fladd@a+2)^0,c
  9230   0020B4  0E00               	movlw	0
  9231   0020B6  6E4A               	movwf	(___fladd@a+3)^0,c
  9232   0020B8                     l5158:
  9233   0020B8  8E49               	bsf	(___fladd@a+2)^0,7,c
  9234   0020BA  0E00               	movlw	0
  9235   0020BC  6E4A               	movwf	(___fladd@a+3)^0,c
  9236   0020BE  EF69  F010         	goto	l5164
  9237   0020C2                     l5162:
  9238   0020C2  0E00               	movlw	0
  9239   0020C4  6E47               	movwf	___fladd@a^0,c
  9240   0020C6  0E00               	movlw	0
  9241   0020C8  6E48               	movwf	(___fladd@a+1)^0,c
  9242   0020CA  0E00               	movlw	0
  9243   0020CC  6E49               	movwf	(___fladd@a+2)^0,c
  9244   0020CE  0E00               	movlw	0
  9245   0020D0  6E4A               	movwf	(___fladd@a+3)^0,c
  9246   0020D2                     l5164:
  9247   0020D2  5051               	movf	___fladd@bexp^0,w,c
  9248   0020D4  5C50               	subwf	___fladd@aexp^0,w,c
  9249   0020D6  B0D8               	btfsc	status,0,c
  9250   0020D8  EF70  F010         	goto	u6291
  9251   0020DC  EF72  F010         	goto	u6290
  9252   0020E0                     u6291:
  9253   0020E0  EF99  F010         	goto	l5200
  9254   0020E4                     u6290:
  9255   0020E4  AC4F               	btfss	___fladd@signs^0,6,c
  9256   0020E6  EF77  F010         	goto	u6301
  9257   0020EA  EF79  F010         	goto	u6300
  9258   0020EE                     u6301:
  9259   0020EE  EF7B  F010         	goto	l5170
  9260   0020F2                     u6300:
  9261   0020F2  0E80               	movlw	128
  9262   0020F4  1A4F               	xorwf	___fladd@signs^0,f,c
  9263   0020F6                     l5170:
  9264   0020F6  C051  F052         	movff	___fladd@bexp,___fladd@grs
  9265   0020FA  C050  F051         	movff	___fladd@aexp,___fladd@bexp
  9266   0020FE  C052  F050         	movff	___fladd@grs,___fladd@aexp
  9267   002102  C043  F052         	movff	___fladd@b,___fladd@grs
  9268   002106  C047  F043         	movff	___fladd@a,___fladd@b
  9269   00210A  C052  F047         	movff	___fladd@grs,___fladd@a
  9270   00210E  C044  F052         	movff	___fladd@b+1,___fladd@grs
  9271   002112  C048  F044         	movff	___fladd@a+1,___fladd@b+1
  9272   002116  C052  F048         	movff	___fladd@grs,___fladd@a+1
  9273   00211A  C045  F052         	movff	___fladd@b+2,___fladd@grs
  9274   00211E  C049  F045         	movff	___fladd@a+2,___fladd@b+2
  9275   002122  C052  F049         	movff	___fladd@grs,___fladd@a+2
  9276   002126  C046  F052         	movff	___fladd@b+3,___fladd@grs
  9277   00212A  C04A  F046         	movff	___fladd@a+3,___fladd@b+3
  9278   00212E  C052  F04A         	movff	___fladd@grs,___fladd@a+3
  9279   002132                     l5200:
  9280   002132  0E00               	movlw	0
  9281   002134  6E52               	movwf	___fladd@grs^0,c
  9282   002136  5051               	movf	___fladd@bexp^0,w,c
  9283   002138  C050  F04B         	movff	___fladd@aexp,??___fladd
  9284   00213C  6A4C               	clrf	(??___fladd+1)^0,c
  9285   00213E  5E4B               	subwf	??___fladd^0,f,c
  9286   002140  0E00               	movlw	0
  9287   002142  5A4C               	subwfb	(??___fladd+1)^0,f,c
  9288   002144  BE4C               	btfsc	(??___fladd+1)^0,7,c
  9289   002146  EFAE  F010         	goto	u6311
  9290   00214A  504C               	movf	(??___fladd+1)^0,w,c
  9291   00214C  E109               	bnz	u6310
  9292   00214E  0E1A               	movlw	26
  9293   002150  5C4B               	subwf	??___fladd^0,w,c
  9294   002152  A0D8               	btfss	status,0,c
  9295   002154  EFAE  F010         	goto	u6311
  9296   002158  EFB0  F010         	goto	u6310
  9297   00215C                     u6311:
  9298   00215C  EFE7  F010         	goto	l974
  9299   002160                     u6310:
  9300   002160  5043               	movf	___fladd@b^0,w,c
  9301   002162  1044               	iorwf	(___fladd@b+1)^0,w,c
  9302   002164  1045               	iorwf	(___fladd@b+2)^0,w,c
  9303   002166  1046               	iorwf	(___fladd@b+3)^0,w,c
  9304   002168  A4D8               	btfss	status,2,c
  9305   00216A  EFB9  F010         	goto	u6321
  9306   00216E  EFBC  F010         	goto	u6320
  9307   002172                     u6321:
  9308   002172  0E01               	movlw	1
  9309   002174  EFBD  F010         	goto	u6330
  9310   002178                     u6320:
  9311   002178  0E00               	movlw	0
  9312   00217A                     u6330:
  9313   00217A  6E52               	movwf	___fladd@grs^0,c
  9314   00217C  0E00               	movlw	0
  9315   00217E  6E43               	movwf	___fladd@b^0,c
  9316   002180  0E00               	movlw	0
  9317   002182  6E44               	movwf	(___fladd@b+1)^0,c
  9318   002184  0E00               	movlw	0
  9319   002186  6E45               	movwf	(___fladd@b+2)^0,c
  9320   002188  0E00               	movlw	0
  9321   00218A  6E46               	movwf	(___fladd@b+3)^0,c
  9322   00218C  C050  F051         	movff	___fladd@aexp,___fladd@bexp
  9323   002190  EFF0  F010         	goto	l973
  9324   002194                     l975:
  9325   002194  A052               	btfss	___fladd@grs^0,0,c
  9326   002196  EFCF  F010         	goto	u6341
  9327   00219A  EFD1  F010         	goto	u6340
  9328   00219E                     u6341:
  9329   00219E  EFD7  F010         	goto	l5212
  9330   0021A2                     u6340:
  9331   0021A2  90D8               	bcf	status,0,c
  9332   0021A4  3052               	rrcf	___fladd@grs^0,w,c
  9333   0021A6  0901               	iorlw	1
  9334   0021A8  6E52               	movwf	___fladd@grs^0,c
  9335   0021AA  EFD9  F010         	goto	l5214
  9336   0021AE                     l5212:
  9337   0021AE  90D8               	bcf	status,0,c
  9338   0021B0  3252               	rrcf	___fladd@grs^0,f,c
  9339   0021B2                     l5214:
  9340   0021B2  A043               	btfss	___fladd@b^0,0,c
  9341   0021B4  EFDE  F010         	goto	u6351
  9342   0021B8  EFE0  F010         	goto	u6350
  9343   0021BC                     u6351:
  9344   0021BC  EFE1  F010         	goto	l5218
  9345   0021C0                     u6350:
  9346   0021C0  8E52               	bsf	___fladd@grs^0,7,c
  9347   0021C2                     l5218:
  9348   0021C2  3446               	rlcf	(___fladd@b+3)^0,w,c
  9349   0021C4  3246               	rrcf	(___fladd@b+3)^0,f,c
  9350   0021C6  3245               	rrcf	(___fladd@b+2)^0,f,c
  9351   0021C8  3244               	rrcf	(___fladd@b+1)^0,f,c
  9352   0021CA  3243               	rrcf	___fladd@b^0,f,c
  9353   0021CC  2A51               	incf	___fladd@bexp^0,f,c
  9354   0021CE                     l974:
  9355   0021CE  5050               	movf	___fladd@aexp^0,w,c
  9356   0021D0  5C51               	subwf	___fladd@bexp^0,w,c
  9357   0021D2  A0D8               	btfss	status,0,c
  9358   0021D4  EFEE  F010         	goto	u6361
  9359   0021D8  EFF0  F010         	goto	u6360
  9360   0021DC                     u6361:
  9361   0021DC  EFCA  F010         	goto	l975
  9362   0021E0                     u6360:
  9363   0021E0                     l973:
  9364   0021E0  BC4F               	btfsc	___fladd@signs^0,6,c
  9365   0021E2  EFF5  F010         	goto	u6371
  9366   0021E6  EFF7  F010         	goto	u6370
  9367   0021EA                     u6371:
  9368   0021EA  EF37  F011         	goto	l5246
  9369   0021EE                     u6370:
  9370   0021EE  5051               	movf	___fladd@bexp^0,w,c
  9371   0021F0  A4D8               	btfss	status,2,c
  9372   0021F2  EFFD  F010         	goto	u6381
  9373   0021F6  EFFF  F010         	goto	u6380
  9374   0021FA                     u6381:
  9375   0021FA  EF09  F011         	goto	l5228
  9376   0021FE                     u6380:
  9377   0021FE  0E00               	movlw	0
  9378   002200  6E43               	movwf	?___fladd^0,c
  9379   002202  0E00               	movlw	0
  9380   002204  6E44               	movwf	(?___fladd+1)^0,c
  9381   002206  0E00               	movlw	0
  9382   002208  6E45               	movwf	(?___fladd+2)^0,c
  9383   00220A  0E00               	movlw	0
  9384   00220C  6E46               	movwf	(?___fladd+3)^0,c
  9385   00220E  EF58  F012         	goto	l982
  9386   002212                     l5228:
  9387   002212  5047               	movf	___fladd@a^0,w,c
  9388   002214  2643               	addwf	___fladd@b^0,f,c
  9389   002216  5048               	movf	(___fladd@a+1)^0,w,c
  9390   002218  2244               	addwfc	(___fladd@b+1)^0,f,c
  9391   00221A  5049               	movf	(___fladd@a+2)^0,w,c
  9392   00221C  2245               	addwfc	(___fladd@b+2)^0,f,c
  9393   00221E  504A               	movf	(___fladd@a+3)^0,w,c
  9394   002220  2246               	addwfc	(___fladd@b+3)^0,f,c
  9395   002222  A046               	btfss	(___fladd@b+3)^0,0,c
  9396   002224  EF16  F011         	goto	u6391
  9397   002228  EF18  F011         	goto	u6390
  9398   00222C                     u6391:
  9399   00222C  EFC4  F011         	goto	l5282
  9400   002230                     u6390:
  9401   002230  A052               	btfss	___fladd@grs^0,0,c
  9402   002232  EF1D  F011         	goto	u6401
  9403   002236  EF1F  F011         	goto	u6400
  9404   00223A                     u6401:
  9405   00223A  EF25  F011         	goto	l5236
  9406   00223E                     u6400:
  9407   00223E  90D8               	bcf	status,0,c
  9408   002240  3052               	rrcf	___fladd@grs^0,w,c
  9409   002242  0901               	iorlw	1
  9410   002244  6E52               	movwf	___fladd@grs^0,c
  9411   002246  EF27  F011         	goto	l5238
  9412   00224A                     l5236:
  9413   00224A  90D8               	bcf	status,0,c
  9414   00224C  3252               	rrcf	___fladd@grs^0,f,c
  9415   00224E                     l5238:
  9416   00224E  A043               	btfss	___fladd@b^0,0,c
  9417   002250  EF2C  F011         	goto	u6411
  9418   002254  EF2E  F011         	goto	u6410
  9419   002258                     u6411:
  9420   002258  EF2F  F011         	goto	l5242
  9421   00225C                     u6410:
  9422   00225C  8E52               	bsf	___fladd@grs^0,7,c
  9423   00225E                     l5242:
  9424   00225E  3446               	rlcf	(___fladd@b+3)^0,w,c
  9425   002260  3246               	rrcf	(___fladd@b+3)^0,f,c
  9426   002262  3245               	rrcf	(___fladd@b+2)^0,f,c
  9427   002264  3244               	rrcf	(___fladd@b+1)^0,f,c
  9428   002266  3243               	rrcf	___fladd@b^0,f,c
  9429   002268  2A51               	incf	___fladd@bexp^0,f,c
  9430   00226A  EFC4  F011         	goto	l5282
  9431   00226E                     l5246:
  9432   00226E  5047               	movf	___fladd@a^0,w,c
  9433   002270  5C43               	subwf	___fladd@b^0,w,c
  9434   002272  5048               	movf	(___fladd@a+1)^0,w,c
  9435   002274  5844               	subwfb	(___fladd@b+1)^0,w,c
  9436   002276  5049               	movf	(___fladd@a+2)^0,w,c
  9437   002278  5845               	subwfb	(___fladd@b+2)^0,w,c
  9438   00227A  5046               	movf	(___fladd@b+3)^0,w,c
  9439   00227C  0A80               	xorlw	128
  9440   00227E  6E4B               	movwf	??___fladd^0,c
  9441   002280  504A               	movf	(___fladd@a+3)^0,w,c
  9442   002282  0A80               	xorlw	128
  9443   002284  584B               	subwfb	??___fladd^0,w,c
  9444   002286  B0D8               	btfsc	status,0,c
  9445   002288  EF48  F011         	goto	u6421
  9446   00228C  EF4A  F011         	goto	u6420
  9447   002290                     u6421:
  9448   002290  EF75  F011         	goto	l5256
  9449   002294                     u6420:
  9450   002294  5043               	movf	___fladd@b^0,w,c
  9451   002296  5C47               	subwf	___fladd@a^0,w,c
  9452   002298  6E4B               	movwf	??___fladd^0,c
  9453   00229A  5044               	movf	(___fladd@b+1)^0,w,c
  9454   00229C  5848               	subwfb	(___fladd@a+1)^0,w,c
  9455   00229E  6E4C               	movwf	(??___fladd+1)^0,c
  9456   0022A0  5045               	movf	(___fladd@b+2)^0,w,c
  9457   0022A2  5849               	subwfb	(___fladd@a+2)^0,w,c
  9458   0022A4  6E4D               	movwf	(??___fladd+2)^0,c
  9459   0022A6  5046               	movf	(___fladd@b+3)^0,w,c
  9460   0022A8  584A               	subwfb	(___fladd@a+3)^0,w,c
  9461   0022AA  6E4E               	movwf	(??___fladd+3)^0,c
  9462   0022AC  0EFF               	movlw	255
  9463   0022AE  244B               	addwf	??___fladd^0,w,c
  9464   0022B0  6E43               	movwf	___fladd@b^0,c
  9465   0022B2  0EFF               	movlw	255
  9466   0022B4  204C               	addwfc	(??___fladd+1)^0,w,c
  9467   0022B6  6E44               	movwf	(___fladd@b+1)^0,c
  9468   0022B8  0EFF               	movlw	255
  9469   0022BA  204D               	addwfc	(??___fladd+2)^0,w,c
  9470   0022BC  6E45               	movwf	(___fladd@b+2)^0,c
  9471   0022BE  0EFF               	movlw	255
  9472   0022C0  204E               	addwfc	(??___fladd+3)^0,w,c
  9473   0022C2  6E46               	movwf	(___fladd@b+3)^0,c
  9474   0022C4  0E80               	movlw	128
  9475   0022C6  1A4F               	xorwf	___fladd@signs^0,f,c
  9476   0022C8  6C52               	negf	___fladd@grs^0,c
  9477   0022CA  5052               	movf	___fladd@grs^0,w,c
  9478   0022CC  A4D8               	btfss	status,2,c
  9479   0022CE  EF6B  F011         	goto	u6431
  9480   0022D2  EF6D  F011         	goto	u6430
  9481   0022D6                     u6431:
  9482   0022D6  EF7D  F011         	goto	l990
  9483   0022DA                     u6430:
  9484   0022DA  0E01               	movlw	1
  9485   0022DC  2643               	addwf	___fladd@b^0,f,c
  9486   0022DE  0E00               	movlw	0
  9487   0022E0  2244               	addwfc	(___fladd@b+1)^0,f,c
  9488   0022E2  2245               	addwfc	(___fladd@b+2)^0,f,c
  9489   0022E4  2246               	addwfc	(___fladd@b+3)^0,f,c
  9490   0022E6  EF7D  F011         	goto	l990
  9491   0022EA                     l5256:
  9492   0022EA  5047               	movf	___fladd@a^0,w,c
  9493   0022EC  5E43               	subwf	___fladd@b^0,f,c
  9494   0022EE  5048               	movf	(___fladd@a+1)^0,w,c
  9495   0022F0  5A44               	subwfb	(___fladd@b+1)^0,f,c
  9496   0022F2  5049               	movf	(___fladd@a+2)^0,w,c
  9497   0022F4  5A45               	subwfb	(___fladd@b+2)^0,f,c
  9498   0022F6  504A               	movf	(___fladd@a+3)^0,w,c
  9499   0022F8  5A46               	subwfb	(___fladd@b+3)^0,f,c
  9500   0022FA                     l990:
  9501   0022FA  5043               	movf	___fladd@b^0,w,c
  9502   0022FC  1044               	iorwf	(___fladd@b+1)^0,w,c
  9503   0022FE  1045               	iorwf	(___fladd@b+2)^0,w,c
  9504   002300  1046               	iorwf	(___fladd@b+3)^0,w,c
  9505   002302  A4D8               	btfss	status,2,c
  9506   002304  EF86  F011         	goto	u6441
  9507   002308  EF88  F011         	goto	u6440
  9508   00230C                     u6441:
  9509   00230C  EFBD  F011         	goto	l5280
  9510   002310                     u6440:
  9511   002310  5052               	movf	___fladd@grs^0,w,c
  9512   002312  A4D8               	btfss	status,2,c
  9513   002314  EF8E  F011         	goto	u6451
  9514   002318  EF90  F011         	goto	u6450
  9515   00231C                     u6451:
  9516   00231C  EFBD  F011         	goto	l5280
  9517   002320                     u6450:
  9518   002320  0E00               	movlw	0
  9519   002322  6E43               	movwf	?___fladd^0,c
  9520   002324  0E00               	movlw	0
  9521   002326  6E44               	movwf	(?___fladd+1)^0,c
  9522   002328  0E00               	movlw	0
  9523   00232A  6E45               	movwf	(?___fladd+2)^0,c
  9524   00232C  0E00               	movlw	0
  9525   00232E  6E46               	movwf	(?___fladd+3)^0,c
  9526   002330  EF58  F012         	goto	l982
  9527   002334                     l5264:
  9528   002334  90D8               	bcf	status,0,c
  9529   002336  3643               	rlcf	___fladd@b^0,f,c
  9530   002338  3644               	rlcf	(___fladd@b+1)^0,f,c
  9531   00233A  3645               	rlcf	(___fladd@b+2)^0,f,c
  9532   00233C  3646               	rlcf	(___fladd@b+3)^0,f,c
  9533   00233E  AE52               	btfss	___fladd@grs^0,7,c
  9534   002340  EFA4  F011         	goto	u6461
  9535   002344  EFA6  F011         	goto	u6460
  9536   002348                     u6461:
  9537   002348  EFA7  F011         	goto	l5270
  9538   00234C                     u6460:
  9539   00234C  8043               	bsf	___fladd@b^0,0,c
  9540   00234E                     l5270:
  9541   00234E  A052               	btfss	___fladd@grs^0,0,c
  9542   002350  EFAC  F011         	goto	u6471
  9543   002354  EFAE  F011         	goto	u6470
  9544   002358                     u6471:
  9545   002358  EFB2  F011         	goto	l5274
  9546   00235C                     u6470:
  9547   00235C  80D8               	bsf	status,0,c
  9548   00235E  3652               	rlcf	___fladd@grs^0,f,c
  9549   002360  EFB4  F011         	goto	l5276
  9550   002364                     l5274:
  9551   002364  90D8               	bcf	status,0,c
  9552   002366  3652               	rlcf	___fladd@grs^0,f,c
  9553   002368                     l5276:
  9554   002368  5051               	movf	___fladd@bexp^0,w,c
  9555   00236A  B4D8               	btfsc	status,2,c
  9556   00236C  EFBA  F011         	goto	u6481
  9557   002370  EFBC  F011         	goto	u6480
  9558   002374                     u6481:
  9559   002374  EFBD  F011         	goto	l5280
  9560   002378                     u6480:
  9561   002378  0651               	decf	___fladd@bexp^0,f,c
  9562   00237A                     l5280:
  9563   00237A  AE45               	btfss	(___fladd@b+2)^0,7,c
  9564   00237C  EFC2  F011         	goto	u6491
  9565   002380  EFC4  F011         	goto	u6490
  9566   002384                     u6491:
  9567   002384  EF9A  F011         	goto	l5264
  9568   002388                     u6490:
  9569   002388                     l5282:
  9570   002388  0E00               	movlw	0
  9571   00238A  6E50               	movwf	___fladd@aexp^0,c
  9572   00238C  AE52               	btfss	___fladd@grs^0,7,c
  9573   00238E  EFCB  F011         	goto	u6501
  9574   002392  EFCD  F011         	goto	u6500
  9575   002396                     u6501:
  9576   002396  EFE5  F011         	goto	l999
  9577   00239A                     u6500:
  9578   00239A  C052  F04B         	movff	___fladd@grs,??___fladd
  9579   00239E  0E7F               	movlw	127
  9580   0023A0  164B               	andwf	??___fladd^0,f,c
  9581   0023A2  B4D8               	btfsc	status,2,c
  9582   0023A4  EFD6  F011         	goto	u6511
  9583   0023A8  EFD8  F011         	goto	u6510
  9584   0023AC                     u6511:
  9585   0023AC  EFDC  F011         	goto	l1000
  9586   0023B0                     u6510:
  9587   0023B0                     l5288:
  9588   0023B0  0E01               	movlw	1
  9589   0023B2  6E50               	movwf	___fladd@aexp^0,c
  9590   0023B4  EFE5  F011         	goto	l999
  9591   0023B8                     l1000:
  9592   0023B8  A043               	btfss	___fladd@b^0,0,c
  9593   0023BA  EFE1  F011         	goto	u6521
  9594   0023BE  EFE3  F011         	goto	u6520
  9595   0023C2                     u6521:
  9596   0023C2  EFE5  F011         	goto	l999
  9597   0023C6                     u6520:
  9598   0023C6  EFD8  F011         	goto	l5288
  9599   0023CA                     l999:
  9600   0023CA  5050               	movf	___fladd@aexp^0,w,c
  9601   0023CC  B4D8               	btfsc	status,2,c
  9602   0023CE  EFEB  F011         	goto	u6531
  9603   0023D2  EFED  F011         	goto	u6530
  9604   0023D6                     u6531:
  9605   0023D6  EF18  F012         	goto	l5300
  9606   0023DA                     u6530:
  9607   0023DA  0E01               	movlw	1
  9608   0023DC  2643               	addwf	___fladd@b^0,f,c
  9609   0023DE  0E00               	movlw	0
  9610   0023E0  2244               	addwfc	(___fladd@b+1)^0,f,c
  9611   0023E2  2245               	addwfc	(___fladd@b+2)^0,f,c
  9612   0023E4  2246               	addwfc	(___fladd@b+3)^0,f,c
  9613   0023E6  A046               	btfss	(___fladd@b+3)^0,0,c
  9614   0023E8  EFF8  F011         	goto	u6541
  9615   0023EC  EFFA  F011         	goto	u6540
  9616   0023F0                     u6541:
  9617   0023F0  EF18  F012         	goto	l5300
  9618   0023F4                     u6540:
  9619   0023F4  C043  F04B         	movff	___fladd@b,??___fladd
  9620   0023F8  C044  F04C         	movff	___fladd@b+1,??___fladd+1
  9621   0023FC  C045  F04D         	movff	___fladd@b+2,??___fladd+2
  9622   002400  C046  F04E         	movff	___fladd@b+3,??___fladd+3
  9623   002404  344E               	rlcf	(??___fladd+3)^0,w,c
  9624   002406  324E               	rrcf	(??___fladd+3)^0,f,c
  9625   002408  324D               	rrcf	(??___fladd+2)^0,f,c
  9626   00240A  324C               	rrcf	(??___fladd+1)^0,f,c
  9627   00240C  324B               	rrcf	??___fladd^0,f,c
  9628   00240E  C04B  F043         	movff	??___fladd,___fladd@b
  9629   002412  C04C  F044         	movff	??___fladd+1,___fladd@b+1
  9630   002416  C04D  F045         	movff	??___fladd+2,___fladd@b+2
  9631   00241A  C04E  F046         	movff	??___fladd+3,___fladd@b+3
  9632   00241E  2851               	incf	___fladd@bexp^0,w,c
  9633   002420  B4D8               	btfsc	status,2,c
  9634   002422  EF15  F012         	goto	u6551
  9635   002426  EF17  F012         	goto	u6550
  9636   00242A                     u6551:
  9637   00242A  EF18  F012         	goto	l5300
  9638   00242E                     u6550:
  9639   00242E  2A51               	incf	___fladd@bexp^0,f,c
  9640   002430                     l5300:
  9641   002430  2851               	incf	___fladd@bexp^0,w,c
  9642   002432  B4D8               	btfsc	status,2,c
  9643   002434  EF1E  F012         	goto	u6561
  9644   002438  EF20  F012         	goto	u6560
  9645   00243C                     u6561:
  9646   00243C  EF28  F012         	goto	l5304
  9647   002440                     u6560:
  9648   002440  5051               	movf	___fladd@bexp^0,w,c
  9649   002442  A4D8               	btfss	status,2,c
  9650   002444  EF26  F012         	goto	u6571
  9651   002448  EF28  F012         	goto	u6570
  9652   00244C                     u6571:
  9653   00244C  EF3A  F012         	goto	l5308
  9654   002450                     u6570:
  9655   002450                     l5304:
  9656   002450  0E00               	movlw	0
  9657   002452  6E43               	movwf	___fladd@b^0,c
  9658   002454  0E00               	movlw	0
  9659   002456  6E44               	movwf	(___fladd@b+1)^0,c
  9660   002458  0E00               	movlw	0
  9661   00245A  6E45               	movwf	(___fladd@b+2)^0,c
  9662   00245C  0E00               	movlw	0
  9663   00245E  6E46               	movwf	(___fladd@b+3)^0,c
  9664   002460  5051               	movf	___fladd@bexp^0,w,c
  9665   002462  A4D8               	btfss	status,2,c
  9666   002464  EF36  F012         	goto	u6581
  9667   002468  EF38  F012         	goto	u6580
  9668   00246C                     u6581:
  9669   00246C  EF3A  F012         	goto	l5308
  9670   002470                     u6580:
  9671   002470  0E00               	movlw	0
  9672   002472  6E4F               	movwf	___fladd@signs^0,c
  9673   002474                     l5308:
  9674   002474  A051               	btfss	___fladd@bexp^0,0,c
  9675   002476  EF3F  F012         	goto	u6591
  9676   00247A  EF41  F012         	goto	u6590
  9677   00247E                     u6591:
  9678   00247E  EF44  F012         	goto	l5312
  9679   002482                     u6590:
  9680   002482  8E45               	bsf	(___fladd@b+2)^0,7,c
  9681   002484  EF45  F012         	goto	l5314
  9682   002488                     l5312:
  9683   002488  9E45               	bcf	(___fladd@b+2)^0,7,c
  9684   00248A                     l5314:
  9685   00248A  90D8               	bcf	status,0,c
  9686   00248C  3051               	rrcf	___fladd@bexp^0,w,c
  9687   00248E  6E46               	movwf	(___fladd@b+3)^0,c
  9688   002490  AE4F               	btfss	___fladd@signs^0,7,c
  9689   002492  EF4D  F012         	goto	u6601
  9690   002496  EF4F  F012         	goto	u6600
  9691   00249A                     u6601:
  9692   00249A  EF50  F012         	goto	l5320
  9693   00249E                     u6600:
  9694   00249E  8E46               	bsf	(___fladd@b+3)^0,7,c
  9695   0024A0                     l5320:
  9696   0024A0  C043  F043         	movff	___fladd@b,?___fladd
  9697   0024A4  C044  F044         	movff	___fladd@b+1,?___fladd+1
  9698   0024A8  C045  F045         	movff	___fladd@b+2,?___fladd+2
  9699   0024AC  C046  F046         	movff	___fladd@b+3,?___fladd+3
  9700   0024B0                     l982:
  9701   0024B0  0012               	return		;funcret
  9702   0024B2                     __end_of___fladd:
  9703                           	callstack 0
  9704                           
  9705 ;; *************** function ___flneg *****************
  9706 ;; Defined at:
  9707 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;  f1              4   24[BANK0 ] unsigned char 
  9710 ;; Auto vars:     Size  Location     Type
  9711 ;;		None
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  4   24[BANK0 ] unsigned char 
  9714 ;; Registers used:
  9715 ;;		wreg, status,2, status,0
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9721 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9724 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9725 ;;Total ram usage:        4 bytes
  9726 ;; Hardware stack levels used: 1
  9727 ;; Hardware stack levels required when called: 1
  9728 ;; This function calls:
  9729 ;;		Nothing
  9730 ;; This function is called by:
  9731 ;;		_efgtoa
  9732 ;;		_sinf
  9733 ;;		___rem_pio2f
  9734 ;; This function uses a non-reentrant model
  9735 ;;
  9736                           
  9737                           	psect	text35
  9738   005496                     __ptext35:
  9739                           	callstack 0
  9740   005496                     ___flneg:
  9741                           	callstack 26
  9742   005496  0100               	movlb	0	; () banked
  9743   005498  5178               	movf	___flneg@f1& (0+255),w,b
  9744   00549A  1179               	iorwf	(___flneg@f1+1)& (0+255),w,b
  9745   00549C  117A               	iorwf	(___flneg@f1+2)& (0+255),w,b
  9746   00549E  117B               	iorwf	(___flneg@f1+3)& (0+255),w,b
  9747   0054A0  B4D8               	btfsc	status,2,c
  9748   0054A2  EF55  F02A         	goto	u7241
  9749   0054A6  EF57  F02A         	goto	u7240
  9750   0054AA                     u7241:
  9751   0054AA  EF5F  F02A         	goto	l5734
  9752   0054AE                     u7240:
  9753   0054AE                     
  9754                           ; BSR set to: 0
  9755   0054AE  0E00               	movlw	0
  9756   0054B0  1B78               	xorwf	___flneg@f1& (0+255),f,b
  9757   0054B2  0E00               	movlw	0
  9758   0054B4  1B79               	xorwf	(___flneg@f1+1)& (0+255),f,b
  9759   0054B6  0E00               	movlw	0
  9760   0054B8  1B7A               	xorwf	(___flneg@f1+2)& (0+255),f,b
  9761   0054BA  0E80               	movlw	128
  9762   0054BC  1B7B               	xorwf	(___flneg@f1+3)& (0+255),f,b
  9763   0054BE                     l5734:
  9764                           
  9765                           ; BSR set to: 0
  9766   0054BE  C078  F078         	movff	___flneg@f1,?___flneg
  9767   0054C2  C079  F079         	movff	___flneg@f1+1,?___flneg+1
  9768   0054C6  C07A  F07A         	movff	___flneg@f1+2,?___flneg+2
  9769   0054CA  C07B  F07B         	movff	___flneg@f1+3,?___flneg+3
  9770   0054CE                     
  9771                           ; BSR set to: 0
  9772   0054CE  0012               	return		;funcret
  9773   0054D0                     __end_of___flneg:
  9774                           	callstack 0
  9775                           
  9776 ;; *************** function ___flmul *****************
  9777 ;; Defined at:
  9778 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;  b               4   16[COMRAM] unsigned char 
  9781 ;;  a               4   20[COMRAM] unsigned char 
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;  prod            4   35[COMRAM] struct .
  9784 ;;  grs             4   30[COMRAM] unsigned long 
  9785 ;;  temp            2   39[COMRAM] struct .
  9786 ;;  bexp            1   34[COMRAM] unsigned char 
  9787 ;;  aexp            1   29[COMRAM] unsigned char 
  9788 ;;  sign            1   28[COMRAM] unsigned char 
  9789 ;; Return value:  Size  Location     Type
  9790 ;;                  4   16[COMRAM] unsigned char 
  9791 ;; Registers used:
  9792 ;;		wreg, status,2, status,0, prodl, prodh
  9793 ;; Tracked objects:
  9794 ;;		On entry : 0/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9798 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9799 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9800 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9801 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;Total ram usage:       25 bytes
  9803 ;; Hardware stack levels used: 1
  9804 ;; Hardware stack levels required when called: 1
  9805 ;; This function calls:
  9806 ;;		Nothing
  9807 ;; This function is called by:
  9808 ;;		_runDAC
  9809 ;;		_runADC
  9810 ;;		_efgtoa
  9811 ;;		___cosdf
  9812 ;;		___rem_pio2f
  9813 ;;		___sindf
  9814 ;; This function uses a non-reentrant model
  9815 ;;
  9816                           
  9817                           	psect	text36
  9818   0024B2                     __ptext36:
  9819                           	callstack 0
  9820   0024B2                     ___flmul:
  9821                           	callstack 26
  9822   0024B2  5014               	movf	(___flmul@b+3)^0,w,c
  9823   0024B4  0B80               	andlw	128
  9824   0024B6  6E1D               	movwf	___flmul@sign^0,c
  9825   0024B8  5014               	movf	(___flmul@b+3)^0,w,c
  9826   0024BA  2414               	addwf	(___flmul@b+3)^0,w,c
  9827   0024BC  6E23               	movwf	___flmul@bexp^0,c
  9828   0024BE  AE13               	btfss	(___flmul@b+2)^0,7,c
  9829   0024C0  EF64  F012         	goto	u6851
  9830   0024C4  EF66  F012         	goto	u6850
  9831   0024C8                     u6851:
  9832   0024C8  EF67  F012         	goto	l5482
  9833   0024CC                     u6850:
  9834   0024CC  8023               	bsf	___flmul@bexp^0,0,c
  9835   0024CE                     l5482:
  9836   0024CE  5023               	movf	___flmul@bexp^0,w,c
  9837   0024D0  B4D8               	btfsc	status,2,c
  9838   0024D2  EF6D  F012         	goto	u6861
  9839   0024D6  EF6F  F012         	goto	u6860
  9840   0024DA                     u6861:
  9841   0024DA  EF82  F012         	goto	l5490
  9842   0024DE                     u6860:
  9843   0024DE  2823               	incf	___flmul@bexp^0,w,c
  9844   0024E0  A4D8               	btfss	status,2,c
  9845   0024E2  EF75  F012         	goto	u6871
  9846   0024E6  EF77  F012         	goto	u6870
  9847   0024EA                     u6871:
  9848   0024EA  EF7F  F012         	goto	l5488
  9849   0024EE                     u6870:
  9850   0024EE  0E00               	movlw	0
  9851   0024F0  6E11               	movwf	___flmul@b^0,c
  9852   0024F2  0E00               	movlw	0
  9853   0024F4  6E12               	movwf	(___flmul@b+1)^0,c
  9854   0024F6  0E00               	movlw	0
  9855   0024F8  6E13               	movwf	(___flmul@b+2)^0,c
  9856   0024FA  0E00               	movlw	0
  9857   0024FC  6E14               	movwf	(___flmul@b+3)^0,c
  9858   0024FE                     l5488:
  9859   0024FE  8E13               	bsf	(___flmul@b+2)^0,7,c
  9860   002500  EF8A  F012         	goto	l5492
  9861   002504                     l5490:
  9862   002504  0E00               	movlw	0
  9863   002506  6E11               	movwf	___flmul@b^0,c
  9864   002508  0E00               	movlw	0
  9865   00250A  6E12               	movwf	(___flmul@b+1)^0,c
  9866   00250C  0E00               	movlw	0
  9867   00250E  6E13               	movwf	(___flmul@b+2)^0,c
  9868   002510  0E00               	movlw	0
  9869   002512  6E14               	movwf	(___flmul@b+3)^0,c
  9870   002514                     l5492:
  9871   002514  5018               	movf	(___flmul@a+3)^0,w,c
  9872   002516  0B80               	andlw	128
  9873   002518  1A1D               	xorwf	___flmul@sign^0,f,c
  9874   00251A  5018               	movf	(___flmul@a+3)^0,w,c
  9875   00251C  2418               	addwf	(___flmul@a+3)^0,w,c
  9876   00251E  6E1E               	movwf	___flmul@aexp^0,c
  9877   002520  AE17               	btfss	(___flmul@a+2)^0,7,c
  9878   002522  EF95  F012         	goto	u6881
  9879   002526  EF97  F012         	goto	u6880
  9880   00252A                     u6881:
  9881   00252A  EF98  F012         	goto	l5500
  9882   00252E                     u6880:
  9883   00252E  801E               	bsf	___flmul@aexp^0,0,c
  9884   002530                     l5500:
  9885   002530  501E               	movf	___flmul@aexp^0,w,c
  9886   002532  B4D8               	btfsc	status,2,c
  9887   002534  EF9E  F012         	goto	u6891
  9888   002538  EFA0  F012         	goto	u6890
  9889   00253C                     u6891:
  9890   00253C  EFB3  F012         	goto	l5508
  9891   002540                     u6890:
  9892   002540  281E               	incf	___flmul@aexp^0,w,c
  9893   002542  A4D8               	btfss	status,2,c
  9894   002544  EFA6  F012         	goto	u6901
  9895   002548  EFA8  F012         	goto	u6900
  9896   00254C                     u6901:
  9897   00254C  EFB0  F012         	goto	l5506
  9898   002550                     u6900:
  9899   002550  0E00               	movlw	0
  9900   002552  6E15               	movwf	___flmul@a^0,c
  9901   002554  0E00               	movlw	0
  9902   002556  6E16               	movwf	(___flmul@a+1)^0,c
  9903   002558  0E00               	movlw	0
  9904   00255A  6E17               	movwf	(___flmul@a+2)^0,c
  9905   00255C  0E00               	movlw	0
  9906   00255E  6E18               	movwf	(___flmul@a+3)^0,c
  9907   002560                     l5506:
  9908   002560  8E17               	bsf	(___flmul@a+2)^0,7,c
  9909   002562  EFBB  F012         	goto	l1059
  9910   002566                     l5508:
  9911   002566  0E00               	movlw	0
  9912   002568  6E15               	movwf	___flmul@a^0,c
  9913   00256A  0E00               	movlw	0
  9914   00256C  6E16               	movwf	(___flmul@a+1)^0,c
  9915   00256E  0E00               	movlw	0
  9916   002570  6E17               	movwf	(___flmul@a+2)^0,c
  9917   002572  0E00               	movlw	0
  9918   002574  6E18               	movwf	(___flmul@a+3)^0,c
  9919   002576                     l1059:
  9920   002576  501E               	movf	___flmul@aexp^0,w,c
  9921   002578  B4D8               	btfsc	status,2,c
  9922   00257A  EFC1  F012         	goto	u6911
  9923   00257E  EFC3  F012         	goto	u6910
  9924   002582                     u6911:
  9925   002582  EFCB  F012         	goto	l5512
  9926   002586                     u6910:
  9927   002586  5023               	movf	___flmul@bexp^0,w,c
  9928   002588  A4D8               	btfss	status,2,c
  9929   00258A  EFC9  F012         	goto	u6921
  9930   00258E  EFCB  F012         	goto	u6920
  9931   002592                     u6921:
  9932   002592  EFD5  F012         	goto	l5516
  9933   002596                     u6920:
  9934   002596                     l5512:
  9935   002596  0E00               	movlw	0
  9936   002598  6E11               	movwf	?___flmul^0,c
  9937   00259A  0E00               	movlw	0
  9938   00259C  6E12               	movwf	(?___flmul+1)^0,c
  9939   00259E  0E00               	movlw	0
  9940   0025A0  6E13               	movwf	(?___flmul+2)^0,c
  9941   0025A2  0E00               	movlw	0
  9942   0025A4  6E14               	movwf	(?___flmul+3)^0,c
  9943   0025A6  EF6D  F014         	goto	l1063
  9944   0025AA                     l5516:
  9945   0025AA  5017               	movf	(___flmul@a+2)^0,w,c
  9946   0025AC  0211               	mulwf	___flmul@b^0,c
  9947   0025AE  CFF3 F028          	movff	prodl,___flmul@temp
  9948   0025B2  CFF4 F029          	movff	prodh,___flmul@temp+1
  9949   0025B6  5028               	movf	___flmul@temp^0,w,c
  9950   0025B8  6E1F               	movwf	___flmul@grs^0,c
  9951   0025BA  6A20               	clrf	(___flmul@grs+1)^0,c
  9952   0025BC  6A21               	clrf	(___flmul@grs+2)^0,c
  9953   0025BE  6A22               	clrf	(___flmul@grs+3)^0,c
  9954   0025C0  5029               	movf	(___flmul@temp+1)^0,w,c
  9955   0025C2  6E24               	movwf	___flmul@prod^0,c
  9956   0025C4  6A25               	clrf	(___flmul@prod+1)^0,c
  9957   0025C6  6A26               	clrf	(___flmul@prod+2)^0,c
  9958   0025C8  6A27               	clrf	(___flmul@prod+3)^0,c
  9959   0025CA  5016               	movf	(___flmul@a+1)^0,w,c
  9960   0025CC  0212               	mulwf	(___flmul@b+1)^0,c
  9961   0025CE  CFF3 F028          	movff	prodl,___flmul@temp
  9962   0025D2  CFF4 F029          	movff	prodh,___flmul@temp+1
  9963   0025D6  5028               	movf	___flmul@temp^0,w,c
  9964   0025D8  261F               	addwf	___flmul@grs^0,f,c
  9965   0025DA  0E00               	movlw	0
  9966   0025DC  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9967   0025DE  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9968   0025E0  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9969   0025E2  5029               	movf	(___flmul@temp+1)^0,w,c
  9970   0025E4  2624               	addwf	___flmul@prod^0,f,c
  9971   0025E6  0E00               	movlw	0
  9972   0025E8  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9973   0025EA  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9974   0025EC  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9975   0025EE  5015               	movf	___flmul@a^0,w,c
  9976   0025F0  0213               	mulwf	(___flmul@b+2)^0,c
  9977   0025F2  CFF3 F028          	movff	prodl,___flmul@temp
  9978   0025F6  CFF4 F029          	movff	prodh,___flmul@temp+1
  9979   0025FA  5028               	movf	___flmul@temp^0,w,c
  9980   0025FC  261F               	addwf	___flmul@grs^0,f,c
  9981   0025FE  0E00               	movlw	0
  9982   002600  2220               	addwfc	(___flmul@grs+1)^0,f,c
  9983   002602  2221               	addwfc	(___flmul@grs+2)^0,f,c
  9984   002604  2222               	addwfc	(___flmul@grs+3)^0,f,c
  9985   002606  5029               	movf	(___flmul@temp+1)^0,w,c
  9986   002608  2624               	addwf	___flmul@prod^0,f,c
  9987   00260A  0E00               	movlw	0
  9988   00260C  2225               	addwfc	(___flmul@prod+1)^0,f,c
  9989   00260E  2226               	addwfc	(___flmul@prod+2)^0,f,c
  9990   002610  2227               	addwfc	(___flmul@prod+3)^0,f,c
  9991   002612  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  9992   002616  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  9993   00261A  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  9994   00261E  6A1F               	clrf	___flmul@grs^0,c
  9995   002620  5015               	movf	___flmul@a^0,w,c
  9996   002622  0212               	mulwf	(___flmul@b+1)^0,c
  9997   002624  CFF3 F028          	movff	prodl,___flmul@temp
  9998   002628  CFF4 F029          	movff	prodh,___flmul@temp+1
  9999   00262C  5028               	movf	___flmul@temp^0,w,c
 10000   00262E  261F               	addwf	___flmul@grs^0,f,c
 10001   002630  5029               	movf	(___flmul@temp+1)^0,w,c
 10002   002632  2220               	addwfc	(___flmul@grs+1)^0,f,c
 10003   002634  0E00               	movlw	0
 10004   002636  2221               	addwfc	(___flmul@grs+2)^0,f,c
 10005   002638  0E00               	movlw	0
 10006   00263A  2222               	addwfc	(___flmul@grs+3)^0,f,c
 10007   00263C  5016               	movf	(___flmul@a+1)^0,w,c
 10008   00263E  0211               	mulwf	___flmul@b^0,c
 10009   002640  CFF3 F028          	movff	prodl,___flmul@temp
 10010   002644  CFF4 F029          	movff	prodh,___flmul@temp+1
 10011   002648  5028               	movf	___flmul@temp^0,w,c
 10012   00264A  261F               	addwf	___flmul@grs^0,f,c
 10013   00264C  5029               	movf	(___flmul@temp+1)^0,w,c
 10014   00264E  2220               	addwfc	(___flmul@grs+1)^0,f,c
 10015   002650  0E00               	movlw	0
 10016   002652  2221               	addwfc	(___flmul@grs+2)^0,f,c
 10017   002654  0E00               	movlw	0
 10018   002656  2222               	addwfc	(___flmul@grs+3)^0,f,c
 10019   002658  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 10020   00265C  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 10021   002660  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 10022   002664  6A1F               	clrf	___flmul@grs^0,c
 10023   002666  5015               	movf	___flmul@a^0,w,c
 10024   002668  0211               	mulwf	___flmul@b^0,c
 10025   00266A  CFF3 F028          	movff	prodl,___flmul@temp
 10026   00266E  CFF4 F029          	movff	prodh,___flmul@temp+1
 10027   002672  5028               	movf	___flmul@temp^0,w,c
 10028   002674  261F               	addwf	___flmul@grs^0,f,c
 10029   002676  5029               	movf	(___flmul@temp+1)^0,w,c
 10030   002678  2220               	addwfc	(___flmul@grs+1)^0,f,c
 10031   00267A  0E00               	movlw	0
 10032   00267C  2221               	addwfc	(___flmul@grs+2)^0,f,c
 10033   00267E  0E00               	movlw	0
 10034   002680  2222               	addwfc	(___flmul@grs+3)^0,f,c
 10035   002682  5017               	movf	(___flmul@a+2)^0,w,c
 10036   002684  0212               	mulwf	(___flmul@b+1)^0,c
 10037   002686  CFF3 F028          	movff	prodl,___flmul@temp
 10038   00268A  CFF4 F029          	movff	prodh,___flmul@temp+1
 10039   00268E  5028               	movf	___flmul@temp^0,w,c
 10040   002690  2624               	addwf	___flmul@prod^0,f,c
 10041   002692  5029               	movf	(___flmul@temp+1)^0,w,c
 10042   002694  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10043   002696  0E00               	movlw	0
 10044   002698  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10045   00269A  0E00               	movlw	0
 10046   00269C  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10047   00269E  5016               	movf	(___flmul@a+1)^0,w,c
 10048   0026A0  0213               	mulwf	(___flmul@b+2)^0,c
 10049   0026A2  CFF3 F028          	movff	prodl,___flmul@temp
 10050   0026A6  CFF4 F029          	movff	prodh,___flmul@temp+1
 10051   0026AA  5028               	movf	___flmul@temp^0,w,c
 10052   0026AC  2624               	addwf	___flmul@prod^0,f,c
 10053   0026AE  5029               	movf	(___flmul@temp+1)^0,w,c
 10054   0026B0  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10055   0026B2  0E00               	movlw	0
 10056   0026B4  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10057   0026B6  0E00               	movlw	0
 10058   0026B8  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10059   0026BA  5017               	movf	(___flmul@a+2)^0,w,c
 10060   0026BC  0213               	mulwf	(___flmul@b+2)^0,c
 10061   0026BE  CFF3 F028          	movff	prodl,___flmul@temp
 10062   0026C2  CFF4 F029          	movff	prodh,___flmul@temp+1
 10063   0026C6  5028               	movf	___flmul@temp^0,w,c
 10064   0026C8  6E19               	movwf	??___flmul^0,c
 10065   0026CA  5029               	movf	(___flmul@temp+1)^0,w,c
 10066   0026CC  6E1A               	movwf	(??___flmul+1)^0,c
 10067   0026CE  6A1B               	clrf	(??___flmul+2)^0,c
 10068   0026D0  6A1C               	clrf	(??___flmul+3)^0,c
 10069   0026D2  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 10070   0026D6  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 10071   0026DA  C019  F01A         	movff	??___flmul,??___flmul+1
 10072   0026DE  6A19               	clrf	??___flmul^0,c
 10073   0026E0  5019               	movf	??___flmul^0,w,c
 10074   0026E2  2624               	addwf	___flmul@prod^0,f,c
 10075   0026E4  501A               	movf	(??___flmul+1)^0,w,c
 10076   0026E6  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10077   0026E8  501B               	movf	(??___flmul+2)^0,w,c
 10078   0026EA  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10079   0026EC  501C               	movf	(??___flmul+3)^0,w,c
 10080   0026EE  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10081   0026F0  C01F  F019         	movff	___flmul@grs,??___flmul
 10082   0026F4  C020  F01A         	movff	___flmul@grs+1,??___flmul+1
 10083   0026F8  C021  F01B         	movff	___flmul@grs+2,??___flmul+2
 10084   0026FC  C022  F01C         	movff	___flmul@grs+3,??___flmul+3
 10085   002700  0E19               	movlw	25
 10086   002702  EF88  F013         	goto	u6930
 10087   002706                     u6935:
 10088   002706  90D8               	bcf	status,0,c
 10089   002708  321C               	rrcf	(??___flmul+3)^0,f,c
 10090   00270A  321B               	rrcf	(??___flmul+2)^0,f,c
 10091   00270C  321A               	rrcf	(??___flmul+1)^0,f,c
 10092   00270E  3219               	rrcf	??___flmul^0,f,c
 10093   002710                     u6930:
 10094   002710  2EE8               	decfsz	wreg,f,c
 10095   002712  EF83  F013         	goto	u6935
 10096   002716  5019               	movf	??___flmul^0,w,c
 10097   002718  2624               	addwf	___flmul@prod^0,f,c
 10098   00271A  501A               	movf	(??___flmul+1)^0,w,c
 10099   00271C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10100   00271E  501B               	movf	(??___flmul+2)^0,w,c
 10101   002720  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10102   002722  501C               	movf	(??___flmul+3)^0,w,c
 10103   002724  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10104   002726  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 10105   00272A  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 10106   00272E  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 10107   002732  6A1F               	clrf	___flmul@grs^0,c
 10108   002734  501E               	movf	___flmul@aexp^0,w,c
 10109   002736  C023  F019         	movff	___flmul@bexp,??___flmul
 10110   00273A  6A1A               	clrf	(??___flmul+1)^0,c
 10111   00273C  2619               	addwf	??___flmul^0,f,c
 10112   00273E  0E00               	movlw	0
 10113   002740  221A               	addwfc	(??___flmul+1)^0,f,c
 10114   002742  0E82               	movlw	130
 10115   002744  2419               	addwf	??___flmul^0,w,c
 10116   002746  6E28               	movwf	___flmul@temp^0,c
 10117   002748  0EFF               	movlw	255
 10118   00274A  201A               	addwfc	(??___flmul+1)^0,w,c
 10119   00274C  6E29               	movwf	(___flmul@temp+1)^0,c
 10120   00274E  EFBE  F013         	goto	l5564
 10121   002752                     l5558:
 10122   002752  90D8               	bcf	status,0,c
 10123   002754  3624               	rlcf	___flmul@prod^0,f,c
 10124   002756  3625               	rlcf	(___flmul@prod+1)^0,f,c
 10125   002758  3626               	rlcf	(___flmul@prod+2)^0,f,c
 10126   00275A  3627               	rlcf	(___flmul@prod+3)^0,f,c
 10127   00275C  AE22               	btfss	(___flmul@grs+3)^0,7,c
 10128   00275E  EFB3  F013         	goto	u6941
 10129   002762  EFB5  F013         	goto	u6940
 10130   002766                     u6941:
 10131   002766  EFB6  F013         	goto	l1066
 10132   00276A                     u6940:
 10133   00276A  8024               	bsf	___flmul@prod^0,0,c
 10134   00276C                     l1066:
 10135   00276C  90D8               	bcf	status,0,c
 10136   00276E  361F               	rlcf	___flmul@grs^0,f,c
 10137   002770  3620               	rlcf	(___flmul@grs+1)^0,f,c
 10138   002772  3621               	rlcf	(___flmul@grs+2)^0,f,c
 10139   002774  3622               	rlcf	(___flmul@grs+3)^0,f,c
 10140   002776  0628               	decf	___flmul@temp^0,f,c
 10141   002778  A0D8               	btfss	status,0,c
 10142   00277A  0629               	decf	(___flmul@temp+1)^0,f,c
 10143   00277C                     l5564:
 10144   00277C  AE26               	btfss	(___flmul@prod+2)^0,7,c
 10145   00277E  EFC3  F013         	goto	u6951
 10146   002782  EFC5  F013         	goto	u6950
 10147   002786                     u6951:
 10148   002786  EFA9  F013         	goto	l5558
 10149   00278A                     u6950:
 10150   00278A  0E00               	movlw	0
 10151   00278C  6E1E               	movwf	___flmul@aexp^0,c
 10152   00278E  AE22               	btfss	(___flmul@grs+3)^0,7,c
 10153   002790  EFCC  F013         	goto	u6961
 10154   002794  EFCE  F013         	goto	u6960
 10155   002798                     u6961:
 10156   002798  EFF2  F013         	goto	l1068
 10157   00279C                     u6960:
 10158   00279C  0EFF               	movlw	255
 10159   00279E  141F               	andwf	___flmul@grs^0,w,c
 10160   0027A0  6E19               	movwf	??___flmul^0,c
 10161   0027A2  0EFF               	movlw	255
 10162   0027A4  1420               	andwf	(___flmul@grs+1)^0,w,c
 10163   0027A6  6E1A               	movwf	(??___flmul+1)^0,c
 10164   0027A8  0EFF               	movlw	255
 10165   0027AA  1421               	andwf	(___flmul@grs+2)^0,w,c
 10166   0027AC  6E1B               	movwf	(??___flmul+2)^0,c
 10167   0027AE  0E7F               	movlw	127
 10168   0027B0  1422               	andwf	(___flmul@grs+3)^0,w,c
 10169   0027B2  6E1C               	movwf	(??___flmul+3)^0,c
 10170   0027B4  5019               	movf	??___flmul^0,w,c
 10171   0027B6  101A               	iorwf	(??___flmul+1)^0,w,c
 10172   0027B8  101B               	iorwf	(??___flmul+2)^0,w,c
 10173   0027BA  101C               	iorwf	(??___flmul+3)^0,w,c
 10174   0027BC  B4D8               	btfsc	status,2,c
 10175   0027BE  EFE3  F013         	goto	u6971
 10176   0027C2  EFE5  F013         	goto	u6970
 10177   0027C6                     u6971:
 10178   0027C6  EFE9  F013         	goto	l1069
 10179   0027CA                     u6970:
 10180   0027CA                     l5572:
 10181   0027CA  0E01               	movlw	1
 10182   0027CC  6E1E               	movwf	___flmul@aexp^0,c
 10183   0027CE  EFF2  F013         	goto	l1068
 10184   0027D2                     l1069:
 10185   0027D2  A024               	btfss	___flmul@prod^0,0,c
 10186   0027D4  EFEE  F013         	goto	u6981
 10187   0027D8  EFF0  F013         	goto	u6980
 10188   0027DC                     u6981:
 10189   0027DC  EFF2  F013         	goto	l1068
 10190   0027E0                     u6980:
 10191   0027E0  EFE5  F013         	goto	l5572
 10192   0027E4                     l1068:
 10193   0027E4  501E               	movf	___flmul@aexp^0,w,c
 10194   0027E6  B4D8               	btfsc	status,2,c
 10195   0027E8  EFF8  F013         	goto	u6991
 10196   0027EC  EFFA  F013         	goto	u6990
 10197   0027F0                     u6991:
 10198   0027F0  EF1E  F014         	goto	l5584
 10199   0027F4                     u6990:
 10200   0027F4  0E01               	movlw	1
 10201   0027F6  2624               	addwf	___flmul@prod^0,f,c
 10202   0027F8  0E00               	movlw	0
 10203   0027FA  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10204   0027FC  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10205   0027FE  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10206   002800  A027               	btfss	(___flmul@prod+3)^0,0,c
 10207   002802  EF05  F014         	goto	u7001
 10208   002806  EF07  F014         	goto	u7000
 10209   00280A                     u7001:
 10210   00280A  EF1E  F014         	goto	l5584
 10211   00280E                     u7000:
 10212   00280E  C024  F019         	movff	___flmul@prod,??___flmul
 10213   002812  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 10214   002816  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 10215   00281A  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 10216   00281E  341C               	rlcf	(??___flmul+3)^0,w,c
 10217   002820  321C               	rrcf	(??___flmul+3)^0,f,c
 10218   002822  321B               	rrcf	(??___flmul+2)^0,f,c
 10219   002824  321A               	rrcf	(??___flmul+1)^0,f,c
 10220   002826  3219               	rrcf	??___flmul^0,f,c
 10221   002828  C019  F024         	movff	??___flmul,___flmul@prod
 10222   00282C  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 10223   002830  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 10224   002834  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 10225   002838  4A28               	infsnz	___flmul@temp^0,f,c
 10226   00283A  2A29               	incf	(___flmul@temp+1)^0,f,c
 10227   00283C                     l5584:
 10228   00283C  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 10229   00283E  EF29  F014         	goto	u7011
 10230   002842  5029               	movf	(___flmul@temp+1)^0,w,c
 10231   002844  E108               	bnz	u7010
 10232   002846  2828               	incf	___flmul@temp^0,w,c
 10233   002848  A0D8               	btfss	status,0,c
 10234   00284A  EF29  F014         	goto	u7011
 10235   00284E  EF2B  F014         	goto	u7010
 10236   002852                     u7011:
 10237   002852  EF35  F014         	goto	l5588
 10238   002856                     u7010:
 10239   002856  0E00               	movlw	0
 10240   002858  6E24               	movwf	___flmul@prod^0,c
 10241   00285A  0E00               	movlw	0
 10242   00285C  6E25               	movwf	(___flmul@prod+1)^0,c
 10243   00285E  0E80               	movlw	128
 10244   002860  6E26               	movwf	(___flmul@prod+2)^0,c
 10245   002862  0E7F               	movlw	127
 10246   002864  6E27               	movwf	(___flmul@prod+3)^0,c
 10247   002866  EF63  F014         	goto	l5600
 10248   00286A                     l5588:
 10249   00286A  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 10250   00286C  EF42  F014         	goto	u7020
 10251   002870  5029               	movf	(___flmul@temp+1)^0,w,c
 10252   002872  E106               	bnz	u7021
 10253   002874  0428               	decf	___flmul@temp^0,w,c
 10254   002876  B0D8               	btfsc	status,0,c
 10255   002878  EF40  F014         	goto	u7021
 10256   00287C  EF42  F014         	goto	u7020
 10257   002880                     u7021:
 10258   002880  EF4E  F014         	goto	l1076
 10259   002884                     u7020:
 10260   002884  0E00               	movlw	0
 10261   002886  6E24               	movwf	___flmul@prod^0,c
 10262   002888  0E00               	movlw	0
 10263   00288A  6E25               	movwf	(___flmul@prod+1)^0,c
 10264   00288C  0E00               	movlw	0
 10265   00288E  6E26               	movwf	(___flmul@prod+2)^0,c
 10266   002890  0E00               	movlw	0
 10267   002892  6E27               	movwf	(___flmul@prod+3)^0,c
 10268   002894  0E00               	movlw	0
 10269   002896  6E1D               	movwf	___flmul@sign^0,c
 10270   002898  EF63  F014         	goto	l5600
 10271   00289C                     l1076:
 10272   00289C  C028  F023         	movff	___flmul@temp,___flmul@bexp
 10273   0028A0  0EFF               	movlw	255
 10274   0028A2  1624               	andwf	___flmul@prod^0,f,c
 10275   0028A4  0EFF               	movlw	255
 10276   0028A6  1625               	andwf	(___flmul@prod+1)^0,f,c
 10277   0028A8  0E7F               	movlw	127
 10278   0028AA  1626               	andwf	(___flmul@prod+2)^0,f,c
 10279   0028AC  0E00               	movlw	0
 10280   0028AE  1627               	andwf	(___flmul@prod+3)^0,f,c
 10281   0028B0  A023               	btfss	___flmul@bexp^0,0,c
 10282   0028B2  EF5D  F014         	goto	u7031
 10283   0028B6  EF5F  F014         	goto	u7030
 10284   0028BA                     u7031:
 10285   0028BA  EF60  F014         	goto	l5598
 10286   0028BE                     u7030:
 10287   0028BE  8E26               	bsf	(___flmul@prod+2)^0,7,c
 10288   0028C0                     l5598:
 10289   0028C0  90D8               	bcf	status,0,c
 10290   0028C2  3023               	rrcf	___flmul@bexp^0,w,c
 10291   0028C4  6E27               	movwf	(___flmul@prod+3)^0,c
 10292   0028C6                     l5600:
 10293   0028C6  501D               	movf	___flmul@sign^0,w,c
 10294   0028C8  1227               	iorwf	(___flmul@prod+3)^0,f,c
 10295   0028CA  C024  F011         	movff	___flmul@prod,?___flmul
 10296   0028CE  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 10297   0028D2  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 10298   0028D6  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 10299   0028DA                     l1063:
 10300   0028DA  0012               	return		;funcret
 10301   0028DC                     __end_of___flmul:
 10302                           	callstack 0
 10303                           
 10304 ;; *************** function ___flge *****************
 10305 ;; Defined at:
 10306 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;  ff1             4   41[COMRAM] unsigned char 
 10309 ;;  ff2             4   45[COMRAM] unsigned char 
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;		None
 10312 ;; Return value:  Size  Location     Type
 10313 ;;		None               void
 10314 ;; Registers used:
 10315 ;;		wreg, status,2, status,0
 10316 ;; Tracked objects:
 10317 ;;		On entry : 0/0
 10318 ;;		On exit  : 0/0
 10319 ;;		Unchanged: 0/0
 10320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10321 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10323 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10324 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;Total ram usage:       12 bytes
 10326 ;; Hardware stack levels used: 1
 10327 ;; Hardware stack levels required when called: 1
 10328 ;; This function calls:
 10329 ;;		Nothing
 10330 ;; This function is called by:
 10331 ;;		_efgtoa
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335                           	psect	text37
 10336   004A60                     __ptext37:
 10337                           	callstack 0
 10338   004A60                     ___flge:
 10339                           	callstack 24
 10340   004A60  0E00               	movlw	0
 10341   004A62  142A               	andwf	___flge@ff1^0,w,c
 10342   004A64  6E32               	movwf	??___flge^0,c
 10343   004A66  0E00               	movlw	0
 10344   004A68  142B               	andwf	(___flge@ff1+1)^0,w,c
 10345   004A6A  6E33               	movwf	(??___flge+1)^0,c
 10346   004A6C  0E80               	movlw	128
 10347   004A6E  142C               	andwf	(___flge@ff1+2)^0,w,c
 10348   004A70  6E34               	movwf	(??___flge+2)^0,c
 10349   004A72  0E7F               	movlw	127
 10350   004A74  142D               	andwf	(___flge@ff1+3)^0,w,c
 10351   004A76  6E35               	movwf	(??___flge+3)^0,c
 10352   004A78  5032               	movf	??___flge^0,w,c
 10353   004A7A  1033               	iorwf	(??___flge+1)^0,w,c
 10354   004A7C  1034               	iorwf	(??___flge+2)^0,w,c
 10355   004A7E  1035               	iorwf	(??___flge+3)^0,w,c
 10356   004A80  A4D8               	btfss	status,2,c
 10357   004A82  EF45  F025         	goto	u7191
 10358   004A86  EF47  F025         	goto	u7190
 10359   004A8A                     u7191:
 10360   004A8A  EF4F  F025         	goto	l5712
 10361   004A8E                     u7190:
 10362   004A8E  0E00               	movlw	0
 10363   004A90  6E2A               	movwf	___flge@ff1^0,c
 10364   004A92  0E00               	movlw	0
 10365   004A94  6E2B               	movwf	(___flge@ff1+1)^0,c
 10366   004A96  0E00               	movlw	0
 10367   004A98  6E2C               	movwf	(___flge@ff1+2)^0,c
 10368   004A9A  0E00               	movlw	0
 10369   004A9C  6E2D               	movwf	(___flge@ff1+3)^0,c
 10370   004A9E                     l5712:
 10371   004A9E  0E00               	movlw	0
 10372   004AA0  142E               	andwf	___flge@ff2^0,w,c
 10373   004AA2  6E32               	movwf	??___flge^0,c
 10374   004AA4  0E00               	movlw	0
 10375   004AA6  142F               	andwf	(___flge@ff2+1)^0,w,c
 10376   004AA8  6E33               	movwf	(??___flge+1)^0,c
 10377   004AAA  0E80               	movlw	128
 10378   004AAC  1430               	andwf	(___flge@ff2+2)^0,w,c
 10379   004AAE  6E34               	movwf	(??___flge+2)^0,c
 10380   004AB0  0E7F               	movlw	127
 10381   004AB2  1431               	andwf	(___flge@ff2+3)^0,w,c
 10382   004AB4  6E35               	movwf	(??___flge+3)^0,c
 10383   004AB6  5032               	movf	??___flge^0,w,c
 10384   004AB8  1033               	iorwf	(??___flge+1)^0,w,c
 10385   004ABA  1034               	iorwf	(??___flge+2)^0,w,c
 10386   004ABC  1035               	iorwf	(??___flge+3)^0,w,c
 10387   004ABE  A4D8               	btfss	status,2,c
 10388   004AC0  EF64  F025         	goto	u7201
 10389   004AC4  EF66  F025         	goto	u7200
 10390   004AC8                     u7201:
 10391   004AC8  EF6E  F025         	goto	l5716
 10392   004ACC                     u7200:
 10393   004ACC  0E00               	movlw	0
 10394   004ACE  6E2E               	movwf	___flge@ff2^0,c
 10395   004AD0  0E00               	movlw	0
 10396   004AD2  6E2F               	movwf	(___flge@ff2+1)^0,c
 10397   004AD4  0E00               	movlw	0
 10398   004AD6  6E30               	movwf	(___flge@ff2+2)^0,c
 10399   004AD8  0E00               	movlw	0
 10400   004ADA  6E31               	movwf	(___flge@ff2+3)^0,c
 10401   004ADC                     l5716:
 10402   004ADC  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 10403   004ADE  EF73  F025         	goto	u7211
 10404   004AE2  EF75  F025         	goto	u7210
 10405   004AE6                     u7211:
 10406   004AE6  EF7E  F025         	goto	l5720
 10407   004AEA                     u7210:
 10408   004AEA  6C2A               	negf	___flge@ff1^0,c
 10409   004AEC  1E2B               	comf	(___flge@ff1+1)^0,f,c
 10410   004AEE  B0D8               	btfsc	status,0,c
 10411   004AF0  2A2B               	incf	(___flge@ff1+1)^0,f,c
 10412   004AF2  1E2C               	comf	(___flge@ff1+2)^0,f,c
 10413   004AF4  B0D8               	btfsc	status,0,c
 10414   004AF6  2A2C               	incf	(___flge@ff1+2)^0,f,c
 10415   004AF8  0E80               	movlw	128
 10416   004AFA  562D               	subfwb	(___flge@ff1+3)^0,f,c
 10417   004AFC                     l5720:
 10418   004AFC  AE31               	btfss	(___flge@ff2+3)^0,7,c
 10419   004AFE  EF83  F025         	goto	u7221
 10420   004B02  EF85  F025         	goto	u7220
 10421   004B06                     u7221:
 10422   004B06  EF8E  F025         	goto	l710
 10423   004B0A                     u7220:
 10424   004B0A  6C2E               	negf	___flge@ff2^0,c
 10425   004B0C  1E2F               	comf	(___flge@ff2+1)^0,f,c
 10426   004B0E  B0D8               	btfsc	status,0,c
 10427   004B10  2A2F               	incf	(___flge@ff2+1)^0,f,c
 10428   004B12  1E30               	comf	(___flge@ff2+2)^0,f,c
 10429   004B14  B0D8               	btfsc	status,0,c
 10430   004B16  2A30               	incf	(___flge@ff2+2)^0,f,c
 10431   004B18  0E80               	movlw	128
 10432   004B1A  5631               	subfwb	(___flge@ff2+3)^0,f,c
 10433   004B1C                     l710:
 10434   004B1C  0E00               	movlw	0
 10435   004B1E  1A2A               	xorwf	___flge@ff1^0,f,c
 10436   004B20  0E00               	movlw	0
 10437   004B22  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 10438   004B24  0E00               	movlw	0
 10439   004B26  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 10440   004B28  0E80               	movlw	128
 10441   004B2A  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 10442   004B2C  0E00               	movlw	0
 10443   004B2E  1A2E               	xorwf	___flge@ff2^0,f,c
 10444   004B30  0E00               	movlw	0
 10445   004B32  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 10446   004B34  0E00               	movlw	0
 10447   004B36  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 10448   004B38  0E80               	movlw	128
 10449   004B3A  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 10450   004B3C  502E               	movf	___flge@ff2^0,w,c
 10451   004B3E  5C2A               	subwf	___flge@ff1^0,w,c
 10452   004B40  502F               	movf	(___flge@ff2+1)^0,w,c
 10453   004B42  582B               	subwfb	(___flge@ff1+1)^0,w,c
 10454   004B44  5030               	movf	(___flge@ff2+2)^0,w,c
 10455   004B46  582C               	subwfb	(___flge@ff1+2)^0,w,c
 10456   004B48  5031               	movf	(___flge@ff2+3)^0,w,c
 10457   004B4A  582D               	subwfb	(___flge@ff1+3)^0,w,c
 10458   004B4C  B0D8               	btfsc	status,0,c
 10459   004B4E  EFAB  F025         	goto	u7231
 10460   004B52  EFAD  F025         	goto	u7230
 10461   004B56                     u7231:
 10462   004B56  EFB0  F025         	goto	l5726
 10463   004B5A                     u7230:
 10464   004B5A  90D8               	bcf	status,0,c
 10465   004B5C  EFB1  F025         	goto	l715
 10466   004B60                     l5726:
 10467   004B60  80D8               	bsf	status,0,c
 10468   004B62                     l715:
 10469   004B62  0012               	return		;funcret
 10470   004B64                     __end_of___flge:
 10471                           	callstack 0
 10472                           
 10473 ;; *************** function ___fleq *****************
 10474 ;; Defined at:
 10475 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
 10476 ;; Parameters:    Size  Location     Type
 10477 ;;  ff1             4    2[COMRAM] unsigned char 
 10478 ;;  ff2             4    6[COMRAM] unsigned char 
 10479 ;; Auto vars:     Size  Location     Type
 10480 ;;		None
 10481 ;; Return value:  Size  Location     Type
 10482 ;;		None               void
 10483 ;; Registers used:
 10484 ;;		wreg, status,2, status,0
 10485 ;; Tracked objects:
 10486 ;;		On entry : 0/0
 10487 ;;		On exit  : 0/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10490 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10492 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10493 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10494 ;;Total ram usage:       12 bytes
 10495 ;; Hardware stack levels used: 1
 10496 ;; Hardware stack levels required when called: 1
 10497 ;; This function calls:
 10498 ;;		Nothing
 10499 ;; This function is called by:
 10500 ;;		_efgtoa
 10501 ;; This function uses a non-reentrant model
 10502 ;;
 10503                           
 10504                           	psect	text38
 10505   00502C                     __ptext38:
 10506                           	callstack 0
 10507   00502C                     ___fleq:
 10508                           	callstack 24
 10509   00502C  0E00               	movlw	0
 10510   00502E  1403               	andwf	___fleq@ff1^0,w,c
 10511   005030  6E0B               	movwf	??___fleq^0,c
 10512   005032  0E00               	movlw	0
 10513   005034  1404               	andwf	(___fleq@ff1+1)^0,w,c
 10514   005036  6E0C               	movwf	(??___fleq+1)^0,c
 10515   005038  0E80               	movlw	128
 10516   00503A  1405               	andwf	(___fleq@ff1+2)^0,w,c
 10517   00503C  6E0D               	movwf	(??___fleq+2)^0,c
 10518   00503E  0E7F               	movlw	127
 10519   005040  1406               	andwf	(___fleq@ff1+3)^0,w,c
 10520   005042  6E0E               	movwf	(??___fleq+3)^0,c
 10521   005044  500B               	movf	??___fleq^0,w,c
 10522   005046  100C               	iorwf	(??___fleq+1)^0,w,c
 10523   005048  100D               	iorwf	(??___fleq+2)^0,w,c
 10524   00504A  100E               	iorwf	(??___fleq+3)^0,w,c
 10525   00504C  A4D8               	btfss	status,2,c
 10526   00504E  EF2B  F028         	goto	u7161
 10527   005052  EF2D  F028         	goto	u7160
 10528   005056                     u7161:
 10529   005056  EF35  F028         	goto	l5696
 10530   00505A                     u7160:
 10531   00505A  0E00               	movlw	0
 10532   00505C  6E03               	movwf	___fleq@ff1^0,c
 10533   00505E  0E00               	movlw	0
 10534   005060  6E04               	movwf	(___fleq@ff1+1)^0,c
 10535   005062  0E00               	movlw	0
 10536   005064  6E05               	movwf	(___fleq@ff1+2)^0,c
 10537   005066  0E00               	movlw	0
 10538   005068  6E06               	movwf	(___fleq@ff1+3)^0,c
 10539   00506A                     l5696:
 10540   00506A  0E00               	movlw	0
 10541   00506C  1407               	andwf	___fleq@ff2^0,w,c
 10542   00506E  6E0B               	movwf	??___fleq^0,c
 10543   005070  0E00               	movlw	0
 10544   005072  1408               	andwf	(___fleq@ff2+1)^0,w,c
 10545   005074  6E0C               	movwf	(??___fleq+1)^0,c
 10546   005076  0E80               	movlw	128
 10547   005078  1409               	andwf	(___fleq@ff2+2)^0,w,c
 10548   00507A  6E0D               	movwf	(??___fleq+2)^0,c
 10549   00507C  0E7F               	movlw	127
 10550   00507E  140A               	andwf	(___fleq@ff2+3)^0,w,c
 10551   005080  6E0E               	movwf	(??___fleq+3)^0,c
 10552   005082  500B               	movf	??___fleq^0,w,c
 10553   005084  100C               	iorwf	(??___fleq+1)^0,w,c
 10554   005086  100D               	iorwf	(??___fleq+2)^0,w,c
 10555   005088  100E               	iorwf	(??___fleq+3)^0,w,c
 10556   00508A  A4D8               	btfss	status,2,c
 10557   00508C  EF4A  F028         	goto	u7171
 10558   005090  EF4C  F028         	goto	u7170
 10559   005094                     u7171:
 10560   005094  EF54  F028         	goto	l5700
 10561   005098                     u7170:
 10562   005098  0E00               	movlw	0
 10563   00509A  6E07               	movwf	___fleq@ff2^0,c
 10564   00509C  0E00               	movlw	0
 10565   00509E  6E08               	movwf	(___fleq@ff2+1)^0,c
 10566   0050A0  0E00               	movlw	0
 10567   0050A2  6E09               	movwf	(___fleq@ff2+2)^0,c
 10568   0050A4  0E00               	movlw	0
 10569   0050A6  6E0A               	movwf	(___fleq@ff2+3)^0,c
 10570   0050A8                     l5700:
 10571   0050A8  5007               	movf	___fleq@ff2^0,w,c
 10572   0050AA  1803               	xorwf	___fleq@ff1^0,w,c
 10573   0050AC  E10F               	bnz	u7180
 10574   0050AE  5008               	movf	(___fleq@ff2+1)^0,w,c
 10575   0050B0  1804               	xorwf	(___fleq@ff1+1)^0,w,c
 10576   0050B2  E10C               	bnz	u7180
 10577   0050B4  5009               	movf	(___fleq@ff2+2)^0,w,c
 10578   0050B6  1805               	xorwf	(___fleq@ff1+2)^0,w,c
 10579   0050B8  E109               	bnz	u7180
 10580   0050BA  500A               	movf	(___fleq@ff2+3)^0,w,c
 10581   0050BC  1806               	xorwf	(___fleq@ff1+3)^0,w,c
 10582   0050BE  B4D8               	btfsc	status,2,c
 10583   0050C0  EF64  F028         	goto	u7181
 10584   0050C4  EF66  F028         	goto	u7180
 10585   0050C8                     u7181:
 10586   0050C8  EF69  F028         	goto	l5704
 10587   0050CC                     u7180:
 10588   0050CC  90D8               	bcf	status,0,c
 10589   0050CE  EF6A  F028         	goto	l704
 10590   0050D2                     l5704:
 10591   0050D2  80D8               	bsf	status,0,c
 10592   0050D4                     l704:
 10593   0050D4  0012               	return		;funcret
 10594   0050D6                     __end_of___fleq:
 10595                           	callstack 0
 10596                           
 10597 ;; *************** function ___fldiv *****************
 10598 ;; Defined at:
 10599 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
 10600 ;; Parameters:    Size  Location     Type
 10601 ;;  b               4   41[COMRAM] unsigned char 
 10602 ;;  a               4   45[COMRAM] unsigned char 
 10603 ;; Auto vars:     Size  Location     Type
 10604 ;;  grs             4   60[COMRAM] unsigned long 
 10605 ;;  rem             4   53[COMRAM] unsigned long 
 10606 ;;  new_exp         2   58[COMRAM] short 
 10607 ;;  aexp            1   65[COMRAM] unsigned char 
 10608 ;;  bexp            1   64[COMRAM] unsigned char 
 10609 ;;  sign            1   57[COMRAM] unsigned char 
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  4   41[COMRAM] unsigned char 
 10612 ;; Registers used:
 10613 ;;		wreg, status,2, status,0
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10619 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10620 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10621 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10622 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10623 ;;Total ram usage:       25 bytes
 10624 ;; Hardware stack levels used: 1
 10625 ;; Hardware stack levels required when called: 1
 10626 ;; This function calls:
 10627 ;;		Nothing
 10628 ;; This function is called by:
 10629 ;;		_runDAC
 10630 ;;		_runADC
 10631 ;;		_efgtoa
 10632 ;; This function uses a non-reentrant model
 10633 ;;
 10634                           
 10635                           	psect	text39
 10636   003062                     __ptext39:
 10637                           	callstack 0
 10638   003062                     ___fldiv:
 10639                           	callstack 24
 10640   003062  502D               	movf	(___fldiv@b+3)^0,w,c
 10641   003064  0B80               	andlw	128
 10642   003066  6E3A               	movwf	___fldiv@sign^0,c
 10643   003068  502D               	movf	(___fldiv@b+3)^0,w,c
 10644   00306A  242D               	addwf	(___fldiv@b+3)^0,w,c
 10645   00306C  6E41               	movwf	___fldiv@bexp^0,c
 10646   00306E  AE2C               	btfss	(___fldiv@b+2)^0,7,c
 10647   003070  EF3C  F018         	goto	u6621
 10648   003074  EF3E  F018         	goto	u6620
 10649   003078                     u6621:
 10650   003078  EF3F  F018         	goto	l5344
 10651   00307C                     u6620:
 10652   00307C  8041               	bsf	___fldiv@bexp^0,0,c
 10653   00307E                     l5344:
 10654   00307E  5041               	movf	___fldiv@bexp^0,w,c
 10655   003080  B4D8               	btfsc	status,2,c
 10656   003082  EF45  F018         	goto	u6631
 10657   003086  EF47  F018         	goto	u6630
 10658   00308A                     u6631:
 10659   00308A  EF5C  F018         	goto	l5354
 10660   00308E                     u6630:
 10661   00308E  2841               	incf	___fldiv@bexp^0,w,c
 10662   003090  A4D8               	btfss	status,2,c
 10663   003092  EF4D  F018         	goto	u6641
 10664   003096  EF4F  F018         	goto	u6640
 10665   00309A                     u6641:
 10666   00309A  EF57  F018         	goto	l5350
 10667   00309E                     u6640:
 10668   00309E  0E00               	movlw	0
 10669   0030A0  6E2A               	movwf	___fldiv@b^0,c
 10670   0030A2  0E00               	movlw	0
 10671   0030A4  6E2B               	movwf	(___fldiv@b+1)^0,c
 10672   0030A6  0E00               	movlw	0
 10673   0030A8  6E2C               	movwf	(___fldiv@b+2)^0,c
 10674   0030AA  0E00               	movlw	0
 10675   0030AC  6E2D               	movwf	(___fldiv@b+3)^0,c
 10676   0030AE                     l5350:
 10677   0030AE  8E2C               	bsf	(___fldiv@b+2)^0,7,c
 10678   0030B0  0E00               	movlw	0
 10679   0030B2  6E2D               	movwf	(___fldiv@b+3)^0,c
 10680   0030B4  EF64  F018         	goto	l5356
 10681   0030B8                     l5354:
 10682   0030B8  0E00               	movlw	0
 10683   0030BA  6E2A               	movwf	___fldiv@b^0,c
 10684   0030BC  0E00               	movlw	0
 10685   0030BE  6E2B               	movwf	(___fldiv@b+1)^0,c
 10686   0030C0  0E00               	movlw	0
 10687   0030C2  6E2C               	movwf	(___fldiv@b+2)^0,c
 10688   0030C4  0E00               	movlw	0
 10689   0030C6  6E2D               	movwf	(___fldiv@b+3)^0,c
 10690   0030C8                     l5356:
 10691   0030C8  5031               	movf	(___fldiv@a+3)^0,w,c
 10692   0030CA  0B80               	andlw	128
 10693   0030CC  1A3A               	xorwf	___fldiv@sign^0,f,c
 10694   0030CE  5031               	movf	(___fldiv@a+3)^0,w,c
 10695   0030D0  2431               	addwf	(___fldiv@a+3)^0,w,c
 10696   0030D2  6E42               	movwf	___fldiv@aexp^0,c
 10697   0030D4  AE30               	btfss	(___fldiv@a+2)^0,7,c
 10698   0030D6  EF6F  F018         	goto	u6651
 10699   0030DA  EF71  F018         	goto	u6650
 10700   0030DE                     u6651:
 10701   0030DE  EF72  F018         	goto	l5364
 10702   0030E2                     u6650:
 10703   0030E2  8042               	bsf	___fldiv@aexp^0,0,c
 10704   0030E4                     l5364:
 10705   0030E4  5042               	movf	___fldiv@aexp^0,w,c
 10706   0030E6  B4D8               	btfsc	status,2,c
 10707   0030E8  EF78  F018         	goto	u6661
 10708   0030EC  EF7A  F018         	goto	u6660
 10709   0030F0                     u6661:
 10710   0030F0  EF8F  F018         	goto	l5374
 10711   0030F4                     u6660:
 10712   0030F4  2842               	incf	___fldiv@aexp^0,w,c
 10713   0030F6  A4D8               	btfss	status,2,c
 10714   0030F8  EF80  F018         	goto	u6671
 10715   0030FC  EF82  F018         	goto	u6670
 10716   003100                     u6671:
 10717   003100  EF8A  F018         	goto	l5370
 10718   003104                     u6670:
 10719   003104  0E00               	movlw	0
 10720   003106  6E2E               	movwf	___fldiv@a^0,c
 10721   003108  0E00               	movlw	0
 10722   00310A  6E2F               	movwf	(___fldiv@a+1)^0,c
 10723   00310C  0E00               	movlw	0
 10724   00310E  6E30               	movwf	(___fldiv@a+2)^0,c
 10725   003110  0E00               	movlw	0
 10726   003112  6E31               	movwf	(___fldiv@a+3)^0,c
 10727   003114                     l5370:
 10728   003114  8E30               	bsf	(___fldiv@a+2)^0,7,c
 10729   003116  0E00               	movlw	0
 10730   003118  6E31               	movwf	(___fldiv@a+3)^0,c
 10731   00311A  EF97  F018         	goto	l5376
 10732   00311E                     l5374:
 10733   00311E  0E00               	movlw	0
 10734   003120  6E2E               	movwf	___fldiv@a^0,c
 10735   003122  0E00               	movlw	0
 10736   003124  6E2F               	movwf	(___fldiv@a+1)^0,c
 10737   003126  0E00               	movlw	0
 10738   003128  6E30               	movwf	(___fldiv@a+2)^0,c
 10739   00312A  0E00               	movlw	0
 10740   00312C  6E31               	movwf	(___fldiv@a+3)^0,c
 10741   00312E                     l5376:
 10742   00312E  502E               	movf	___fldiv@a^0,w,c
 10743   003130  102F               	iorwf	(___fldiv@a+1)^0,w,c
 10744   003132  1030               	iorwf	(___fldiv@a+2)^0,w,c
 10745   003134  1031               	iorwf	(___fldiv@a+3)^0,w,c
 10746   003136  A4D8               	btfss	status,2,c
 10747   003138  EFA0  F018         	goto	u6681
 10748   00313C  EFA2  F018         	goto	u6680
 10749   003140                     u6681:
 10750   003140  EFBA  F018         	goto	l5388
 10751   003144                     u6680:
 10752   003144  0E00               	movlw	0
 10753   003146  6E2A               	movwf	___fldiv@b^0,c
 10754   003148  0E00               	movlw	0
 10755   00314A  6E2B               	movwf	(___fldiv@b+1)^0,c
 10756   00314C  0E00               	movlw	0
 10757   00314E  6E2C               	movwf	(___fldiv@b+2)^0,c
 10758   003150  0E00               	movlw	0
 10759   003152  6E2D               	movwf	(___fldiv@b+3)^0,c
 10760   003154  0E80               	movlw	128
 10761   003156  122C               	iorwf	(___fldiv@b+2)^0,f,c
 10762   003158  0E7F               	movlw	127
 10763   00315A  122D               	iorwf	(___fldiv@b+3)^0,f,c
 10764   00315C                     l5382:
 10765   00315C  503A               	movf	___fldiv@sign^0,w,c
 10766   00315E  122D               	iorwf	(___fldiv@b+3)^0,f,c
 10767   003160  C02A  F02A         	movff	___fldiv@b,?___fldiv
 10768   003164  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
 10769   003168  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
 10770   00316C  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
 10771   003170  EFFD  F019         	goto	l1027
 10772   003174                     l5388:
 10773   003174  5041               	movf	___fldiv@bexp^0,w,c
 10774   003176  A4D8               	btfss	status,2,c
 10775   003178  EFC0  F018         	goto	u6691
 10776   00317C  EFC2  F018         	goto	u6690
 10777   003180                     u6691:
 10778   003180  EFCC  F018         	goto	l5396
 10779   003184                     u6690:
 10780   003184  0E00               	movlw	0
 10781   003186  6E2A               	movwf	?___fldiv^0,c
 10782   003188  0E00               	movlw	0
 10783   00318A  6E2B               	movwf	(?___fldiv+1)^0,c
 10784   00318C  0E00               	movlw	0
 10785   00318E  6E2C               	movwf	(?___fldiv+2)^0,c
 10786   003190  0E00               	movlw	0
 10787   003192  6E2D               	movwf	(?___fldiv+3)^0,c
 10788   003194  EFFD  F019         	goto	l1027
 10789   003198                     l5396:
 10790   003198  5042               	movf	___fldiv@aexp^0,w,c
 10791   00319A  C041  F032         	movff	___fldiv@bexp,??___fldiv
 10792   00319E  6A33               	clrf	(??___fldiv+1)^0,c
 10793   0031A0  5E32               	subwf	??___fldiv^0,f,c
 10794   0031A2  0E00               	movlw	0
 10795   0031A4  5A33               	subwfb	(??___fldiv+1)^0,f,c
 10796   0031A6  0E7F               	movlw	127
 10797   0031A8  2432               	addwf	??___fldiv^0,w,c
 10798   0031AA  6E3B               	movwf	___fldiv@new_exp^0,c
 10799   0031AC  0E00               	movlw	0
 10800   0031AE  2033               	addwfc	(??___fldiv+1)^0,w,c
 10801   0031B0  6E3C               	movwf	(___fldiv@new_exp+1)^0,c
 10802   0031B2  C02A  F036         	movff	___fldiv@b,___fldiv@rem
 10803   0031B6  C02B  F037         	movff	___fldiv@b+1,___fldiv@rem+1
 10804   0031BA  C02C  F038         	movff	___fldiv@b+2,___fldiv@rem+2
 10805   0031BE  C02D  F039         	movff	___fldiv@b+3,___fldiv@rem+3
 10806   0031C2  0E00               	movlw	0
 10807   0031C4  6E2A               	movwf	___fldiv@b^0,c
 10808   0031C6  0E00               	movlw	0
 10809   0031C8  6E2B               	movwf	(___fldiv@b+1)^0,c
 10810   0031CA  0E00               	movlw	0
 10811   0031CC  6E2C               	movwf	(___fldiv@b+2)^0,c
 10812   0031CE  0E00               	movlw	0
 10813   0031D0  6E2D               	movwf	(___fldiv@b+3)^0,c
 10814   0031D2  0E00               	movlw	0
 10815   0031D4  6E3D               	movwf	___fldiv@grs^0,c
 10816   0031D6  0E00               	movlw	0
 10817   0031D8  6E3E               	movwf	(___fldiv@grs+1)^0,c
 10818   0031DA  0E00               	movlw	0
 10819   0031DC  6E3F               	movwf	(___fldiv@grs+2)^0,c
 10820   0031DE  0E00               	movlw	0
 10821   0031E0  6E40               	movwf	(___fldiv@grs+3)^0,c
 10822   0031E2  0E00               	movlw	0
 10823   0031E4  6E42               	movwf	___fldiv@aexp^0,c
 10824   0031E6  EF2D  F019         	goto	l1029
 10825   0031EA                     l5406:
 10826   0031EA  5042               	movf	___fldiv@aexp^0,w,c
 10827   0031EC  B4D8               	btfsc	status,2,c
 10828   0031EE  EFFB  F018         	goto	u6701
 10829   0031F2  EFFD  F018         	goto	u6700
 10830   0031F6                     u6701:
 10831   0031F6  EF14  F019         	goto	l5414
 10832   0031FA                     u6700:
 10833   0031FA  90D8               	bcf	status,0,c
 10834   0031FC  3636               	rlcf	___fldiv@rem^0,f,c
 10835   0031FE  3637               	rlcf	(___fldiv@rem+1)^0,f,c
 10836   003200  3638               	rlcf	(___fldiv@rem+2)^0,f,c
 10837   003202  3639               	rlcf	(___fldiv@rem+3)^0,f,c
 10838   003204  90D8               	bcf	status,0,c
 10839   003206  362A               	rlcf	___fldiv@b^0,f,c
 10840   003208  362B               	rlcf	(___fldiv@b+1)^0,f,c
 10841   00320A  362C               	rlcf	(___fldiv@b+2)^0,f,c
 10842   00320C  362D               	rlcf	(___fldiv@b+3)^0,f,c
 10843   00320E  AE40               	btfss	(___fldiv@grs+3)^0,7,c
 10844   003210  EF0C  F019         	goto	u6711
 10845   003214  EF0E  F019         	goto	u6710
 10846   003218                     u6711:
 10847   003218  EF0F  F019         	goto	l1032
 10848   00321C                     u6710:
 10849   00321C  802A               	bsf	___fldiv@b^0,0,c
 10850   00321E                     l1032:
 10851   00321E  90D8               	bcf	status,0,c
 10852   003220  363D               	rlcf	___fldiv@grs^0,f,c
 10853   003222  363E               	rlcf	(___fldiv@grs+1)^0,f,c
 10854   003224  363F               	rlcf	(___fldiv@grs+2)^0,f,c
 10855   003226  3640               	rlcf	(___fldiv@grs+3)^0,f,c
 10856   003228                     l5414:
 10857   003228  502E               	movf	___fldiv@a^0,w,c
 10858   00322A  5C36               	subwf	___fldiv@rem^0,w,c
 10859   00322C  502F               	movf	(___fldiv@a+1)^0,w,c
 10860   00322E  5837               	subwfb	(___fldiv@rem+1)^0,w,c
 10861   003230  5030               	movf	(___fldiv@a+2)^0,w,c
 10862   003232  5838               	subwfb	(___fldiv@rem+2)^0,w,c
 10863   003234  5031               	movf	(___fldiv@a+3)^0,w,c
 10864   003236  5839               	subwfb	(___fldiv@rem+3)^0,w,c
 10865   003238  A0D8               	btfss	status,0,c
 10866   00323A  EF21  F019         	goto	u6721
 10867   00323E  EF23  F019         	goto	u6720
 10868   003242                     u6721:
 10869   003242  EF2C  F019         	goto	l5420
 10870   003246                     u6720:
 10871   003246  8C40               	bsf	(___fldiv@grs+3)^0,6,c
 10872   003248  502E               	movf	___fldiv@a^0,w,c
 10873   00324A  5E36               	subwf	___fldiv@rem^0,f,c
 10874   00324C  502F               	movf	(___fldiv@a+1)^0,w,c
 10875   00324E  5A37               	subwfb	(___fldiv@rem+1)^0,f,c
 10876   003250  5030               	movf	(___fldiv@a+2)^0,w,c
 10877   003252  5A38               	subwfb	(___fldiv@rem+2)^0,f,c
 10878   003254  5031               	movf	(___fldiv@a+3)^0,w,c
 10879   003256  5A39               	subwfb	(___fldiv@rem+3)^0,f,c
 10880   003258                     l5420:
 10881   003258  2A42               	incf	___fldiv@aexp^0,f,c
 10882   00325A                     l1029:
 10883   00325A  0E19               	movlw	25
 10884   00325C  6442               	cpfsgt	___fldiv@aexp^0,c
 10885   00325E  EF33  F019         	goto	u6731
 10886   003262  EF35  F019         	goto	u6730
 10887   003266                     u6731:
 10888   003266  EFF5  F018         	goto	l5406
 10889   00326A                     u6730:
 10890   00326A  5036               	movf	___fldiv@rem^0,w,c
 10891   00326C  1037               	iorwf	(___fldiv@rem+1)^0,w,c
 10892   00326E  1038               	iorwf	(___fldiv@rem+2)^0,w,c
 10893   003270  1039               	iorwf	(___fldiv@rem+3)^0,w,c
 10894   003272  B4D8               	btfsc	status,2,c
 10895   003274  EF3E  F019         	goto	u6741
 10896   003278  EF40  F019         	goto	u6740
 10897   00327C                     u6741:
 10898   00327C  EF58  F019         	goto	l5432
 10899   003280                     u6740:
 10900   003280  803D               	bsf	___fldiv@grs^0,0,c
 10901   003282  EF58  F019         	goto	l5432
 10902   003286                     l5426:
 10903   003286  90D8               	bcf	status,0,c
 10904   003288  362A               	rlcf	___fldiv@b^0,f,c
 10905   00328A  362B               	rlcf	(___fldiv@b+1)^0,f,c
 10906   00328C  362C               	rlcf	(___fldiv@b+2)^0,f,c
 10907   00328E  362D               	rlcf	(___fldiv@b+3)^0,f,c
 10908   003290  AE40               	btfss	(___fldiv@grs+3)^0,7,c
 10909   003292  EF4D  F019         	goto	u6751
 10910   003296  EF4F  F019         	goto	u6750
 10911   00329A                     u6751:
 10912   00329A  EF50  F019         	goto	l1038
 10913   00329E                     u6750:
 10914   00329E  802A               	bsf	___fldiv@b^0,0,c
 10915   0032A0                     l1038:
 10916   0032A0  90D8               	bcf	status,0,c
 10917   0032A2  363D               	rlcf	___fldiv@grs^0,f,c
 10918   0032A4  363E               	rlcf	(___fldiv@grs+1)^0,f,c
 10919   0032A6  363F               	rlcf	(___fldiv@grs+2)^0,f,c
 10920   0032A8  3640               	rlcf	(___fldiv@grs+3)^0,f,c
 10921   0032AA  063B               	decf	___fldiv@new_exp^0,f,c
 10922   0032AC  A0D8               	btfss	status,0,c
 10923   0032AE  063C               	decf	(___fldiv@new_exp+1)^0,f,c
 10924   0032B0                     l5432:
 10925   0032B0  AE2C               	btfss	(___fldiv@b+2)^0,7,c
 10926   0032B2  EF5D  F019         	goto	u6761
 10927   0032B6  EF5F  F019         	goto	u6760
 10928   0032BA                     u6761:
 10929   0032BA  EF43  F019         	goto	l5426
 10930   0032BE                     u6760:
 10931   0032BE  0E00               	movlw	0
 10932   0032C0  6E42               	movwf	___fldiv@aexp^0,c
 10933   0032C2  AE40               	btfss	(___fldiv@grs+3)^0,7,c
 10934   0032C4  EF66  F019         	goto	u6771
 10935   0032C8  EF68  F019         	goto	u6770
 10936   0032CC                     u6771:
 10937   0032CC  EF8C  F019         	goto	l1040
 10938   0032D0                     u6770:
 10939   0032D0  0EFF               	movlw	255
 10940   0032D2  143D               	andwf	___fldiv@grs^0,w,c
 10941   0032D4  6E32               	movwf	??___fldiv^0,c
 10942   0032D6  0EFF               	movlw	255
 10943   0032D8  143E               	andwf	(___fldiv@grs+1)^0,w,c
 10944   0032DA  6E33               	movwf	(??___fldiv+1)^0,c
 10945   0032DC  0EFF               	movlw	255
 10946   0032DE  143F               	andwf	(___fldiv@grs+2)^0,w,c
 10947   0032E0  6E34               	movwf	(??___fldiv+2)^0,c
 10948   0032E2  0E7F               	movlw	127
 10949   0032E4  1440               	andwf	(___fldiv@grs+3)^0,w,c
 10950   0032E6  6E35               	movwf	(??___fldiv+3)^0,c
 10951   0032E8  5032               	movf	??___fldiv^0,w,c
 10952   0032EA  1033               	iorwf	(??___fldiv+1)^0,w,c
 10953   0032EC  1034               	iorwf	(??___fldiv+2)^0,w,c
 10954   0032EE  1035               	iorwf	(??___fldiv+3)^0,w,c
 10955   0032F0  B4D8               	btfsc	status,2,c
 10956   0032F2  EF7D  F019         	goto	u6781
 10957   0032F6  EF7F  F019         	goto	u6780
 10958   0032FA                     u6781:
 10959   0032FA  EF83  F019         	goto	l1041
 10960   0032FE                     u6780:
 10961   0032FE                     l5440:
 10962   0032FE  0E01               	movlw	1
 10963   003300  6E42               	movwf	___fldiv@aexp^0,c
 10964   003302  EF8C  F019         	goto	l1040
 10965   003306                     l1041:
 10966   003306  A02A               	btfss	___fldiv@b^0,0,c
 10967   003308  EF88  F019         	goto	u6791
 10968   00330C  EF8A  F019         	goto	u6790
 10969   003310                     u6791:
 10970   003310  EF8C  F019         	goto	l1040
 10971   003314                     u6790:
 10972   003314  EF7F  F019         	goto	l5440
 10973   003318                     l1040:
 10974   003318  5042               	movf	___fldiv@aexp^0,w,c
 10975   00331A  B4D8               	btfsc	status,2,c
 10976   00331C  EF92  F019         	goto	u6801
 10977   003320  EF94  F019         	goto	u6800
 10978   003324                     u6801:
 10979   003324  EFB8  F019         	goto	l5452
 10980   003328                     u6800:
 10981   003328  0E01               	movlw	1
 10982   00332A  262A               	addwf	___fldiv@b^0,f,c
 10983   00332C  0E00               	movlw	0
 10984   00332E  222B               	addwfc	(___fldiv@b+1)^0,f,c
 10985   003330  222C               	addwfc	(___fldiv@b+2)^0,f,c
 10986   003332  222D               	addwfc	(___fldiv@b+3)^0,f,c
 10987   003334  A02D               	btfss	(___fldiv@b+3)^0,0,c
 10988   003336  EF9F  F019         	goto	u6811
 10989   00333A  EFA1  F019         	goto	u6810
 10990   00333E                     u6811:
 10991   00333E  EFB8  F019         	goto	l5452
 10992   003342                     u6810:
 10993   003342  C02A  F032         	movff	___fldiv@b,??___fldiv
 10994   003346  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
 10995   00334A  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
 10996   00334E  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
 10997   003352  3435               	rlcf	(??___fldiv+3)^0,w,c
 10998   003354  3235               	rrcf	(??___fldiv+3)^0,f,c
 10999   003356  3234               	rrcf	(??___fldiv+2)^0,f,c
 11000   003358  3233               	rrcf	(??___fldiv+1)^0,f,c
 11001   00335A  3232               	rrcf	??___fldiv^0,f,c
 11002   00335C  C032  F02A         	movff	??___fldiv,___fldiv@b
 11003   003360  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
 11004   003364  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
 11005   003368  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
 11006   00336C  4A3B               	infsnz	___fldiv@new_exp^0,f,c
 11007   00336E  2A3C               	incf	(___fldiv@new_exp+1)^0,f,c
 11008   003370                     l5452:
 11009   003370  BE3C               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11010   003372  EFC3  F019         	goto	u6821
 11011   003376  503C               	movf	(___fldiv@new_exp+1)^0,w,c
 11012   003378  E108               	bnz	u6820
 11013   00337A  283B               	incf	___fldiv@new_exp^0,w,c
 11014   00337C  A0D8               	btfss	status,0,c
 11015   00337E  EFC3  F019         	goto	u6821
 11016   003382  EFC5  F019         	goto	u6820
 11017   003386                     u6821:
 11018   003386  EFD0  F019         	goto	l5456
 11019   00338A                     u6820:
 11020   00338A  0E00               	movlw	0
 11021   00338C  6E3C               	movwf	(___fldiv@new_exp+1)^0,c
 11022   00338E  683B               	setf	___fldiv@new_exp^0,c
 11023   003390  0E00               	movlw	0
 11024   003392  6E2A               	movwf	___fldiv@b^0,c
 11025   003394  0E00               	movlw	0
 11026   003396  6E2B               	movwf	(___fldiv@b+1)^0,c
 11027   003398  0E00               	movlw	0
 11028   00339A  6E2C               	movwf	(___fldiv@b+2)^0,c
 11029   00339C  0E00               	movlw	0
 11030   00339E  6E2D               	movwf	(___fldiv@b+3)^0,c
 11031   0033A0                     l5456:
 11032   0033A0  BE3C               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11033   0033A2  EFDD  F019         	goto	u6830
 11034   0033A6  503C               	movf	(___fldiv@new_exp+1)^0,w,c
 11035   0033A8  E106               	bnz	u6831
 11036   0033AA  043B               	decf	___fldiv@new_exp^0,w,c
 11037   0033AC  B0D8               	btfsc	status,0,c
 11038   0033AE  EFDB  F019         	goto	u6831
 11039   0033B2  EFDD  F019         	goto	u6830
 11040   0033B6                     u6831:
 11041   0033B6  EFEB  F019         	goto	l5460
 11042   0033BA                     u6830:
 11043   0033BA  0E00               	movlw	0
 11044   0033BC  6E3C               	movwf	(___fldiv@new_exp+1)^0,c
 11045   0033BE  0E00               	movlw	0
 11046   0033C0  6E3B               	movwf	___fldiv@new_exp^0,c
 11047   0033C2  0E00               	movlw	0
 11048   0033C4  6E2A               	movwf	___fldiv@b^0,c
 11049   0033C6  0E00               	movlw	0
 11050   0033C8  6E2B               	movwf	(___fldiv@b+1)^0,c
 11051   0033CA  0E00               	movlw	0
 11052   0033CC  6E2C               	movwf	(___fldiv@b+2)^0,c
 11053   0033CE  0E00               	movlw	0
 11054   0033D0  6E2D               	movwf	(___fldiv@b+3)^0,c
 11055   0033D2  0E00               	movlw	0
 11056   0033D4  6E3A               	movwf	___fldiv@sign^0,c
 11057   0033D6                     l5460:
 11058   0033D6  C03B  F041         	movff	___fldiv@new_exp,___fldiv@bexp
 11059   0033DA  A041               	btfss	___fldiv@bexp^0,0,c
 11060   0033DC  EFF2  F019         	goto	u6841
 11061   0033E0  EFF4  F019         	goto	u6840
 11062   0033E4                     u6841:
 11063   0033E4  EFF7  F019         	goto	l5466
 11064   0033E8                     u6840:
 11065   0033E8  8E2C               	bsf	(___fldiv@b+2)^0,7,c
 11066   0033EA  EFF8  F019         	goto	l5468
 11067   0033EE                     l5466:
 11068   0033EE  9E2C               	bcf	(___fldiv@b+2)^0,7,c
 11069   0033F0                     l5468:
 11070   0033F0  90D8               	bcf	status,0,c
 11071   0033F2  3041               	rrcf	___fldiv@bexp^0,w,c
 11072   0033F4  6E2D               	movwf	(___fldiv@b+3)^0,c
 11073   0033F6  EFAE  F018         	goto	l5382
 11074   0033FA                     l1027:
 11075   0033FA  0012               	return		;funcret
 11076   0033FC                     __end_of___fldiv:
 11077                           	callstack 0
 11078                           
 11079 ;; *************** function _dtoa *****************
 11080 ;; Defined at:
 11081 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 11082 ;; Parameters:    Size  Location     Type
 11083 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
 11084 ;;		 -> NULL(0), sprintf@f(12), 
 11085 ;;  d               2   30[COMRAM] int 
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;  i               2   39[COMRAM] int 
 11088 ;;  p               2   36[COMRAM] int 
 11089 ;;  w               2   34[COMRAM] int 
 11090 ;;  s               1   38[COMRAM] unsigned char 
 11091 ;; Return value:  Size  Location     Type
 11092 ;;                  1    wreg      void 
 11093 ;; Registers used:
 11094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11095 ;; Tracked objects:
 11096 ;;		On entry : 0/0
 11097 ;;		On exit  : 0/0
 11098 ;;		Unchanged: 0/0
 11099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11100 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11101 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11103 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11104 ;;Total ram usage:       13 bytes
 11105 ;; Hardware stack levels used: 1
 11106 ;; Hardware stack levels required when called: 5
 11107 ;; This function calls:
 11108 ;;		___awdiv
 11109 ;;		___awmod
 11110 ;;		_abs
 11111 ;;		_pad
 11112 ;; This function is called by:
 11113 ;;		_vfpfcnvrt
 11114 ;; This function uses a non-reentrant model
 11115 ;;
 11116                           
 11117                           	psect	text40
 11118   004428                     __ptext40:
 11119                           	callstack 0
 11120   004428                     _dtoa:
 11121                           	callstack 21
 11122   004428                     
 11123                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
 11124   004428  BE20               	btfsc	(dtoa@d+1)^0,7,c
 11125   00442A  EF19  F022         	goto	u7571
 11126   00442E  EF1C  F022         	goto	u7570
 11127   004432                     u7571:
 11128   004432  0E01               	movlw	1
 11129   004434  EF1D  F022         	goto	u7580
 11130   004438                     u7570:
 11131   004438  0E00               	movlw	0
 11132   00443A                     u7580:
 11133   00443A  6E27               	movwf	dtoa@s^0,c
 11134                           
 11135                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 11136   00443C  BE5C               	btfsc	(_prec+1)^0,7,c
 11137   00443E  EF25  F022         	goto	u7590
 11138   004442  EF23  F022         	goto	u7591
 11139   004446                     u7591:
 11140   004446  EF2B  F022         	goto	l1162
 11141   00444A                     u7590:
 11142   00444A  0E00               	movlw	0
 11143   00444C  6E26               	movwf	(dtoa@p+1)^0,c
 11144   00444E  0E01               	movlw	1
 11145   004450  6E25               	movwf	dtoa@p^0,c
 11146   004452  EF2F  F022         	goto	l1164
 11147   004456                     l1162:
 11148   004456  C05B  F025         	movff	_prec,dtoa@p
 11149   00445A  C05C  F026         	movff	_prec+1,dtoa@p+1
 11150   00445E                     l1164:
 11151                           
 11152                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 11153   00445E  C0FC  F023         	movff	_width,dtoa@w
 11154   004462  C0FD  F024         	movff	_width+1,dtoa@w+1
 11155   004466                     
 11156                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
 11157   004466  5027               	movf	dtoa@s^0,w,c
 11158   004468  B4D8               	btfsc	status,2,c
 11159   00446A  EF39  F022         	goto	u7601
 11160   00446E  EF3B  F022         	goto	u7600
 11161   004472                     u7601:
 11162   004472  EF52  F022         	goto	l1165
 11163   004476                     u7600:
 11164   004476                     
 11165                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
 11166   004476  0623               	decf	dtoa@w^0,f,c
 11167   004478  A0D8               	btfss	status,0,c
 11168   00447A  0624               	decf	(dtoa@w+1)^0,f,c
 11169   00447C                     
 11170                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 11171   00447C  5027               	movf	dtoa@s^0,w,c
 11172   00447E  A4D8               	btfss	status,2,c
 11173   004480  EF44  F022         	goto	u7611
 11174   004484  EF46  F022         	goto	u7610
 11175   004488                     u7611:
 11176   004488  EF4C  F022         	goto	l5888
 11177   00448C                     u7610:
 11178   00448C  0E00               	movlw	0
 11179   00448E  6E22               	movwf	(_dtoa$3314+1)^0,c
 11180   004490  0E2B               	movlw	43
 11181   004492  6E21               	movwf	_dtoa$3314^0,c
 11182   004494  EF50  F022         	goto	l5890
 11183   004498                     l5888:
 11184   004498  0E00               	movlw	0
 11185   00449A  6E22               	movwf	(_dtoa$3314+1)^0,c
 11186   00449C  0E2D               	movlw	45
 11187   00449E  6E21               	movwf	_dtoa$3314^0,c
 11188   0044A0                     l5890:
 11189   0044A0  C021  F027         	movff	_dtoa$3314,dtoa@s
 11190   0044A4                     l1165:
 11191                           
 11192                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 11193   0044A4  0E00               	movlw	0
 11194   0044A6  6E29               	movwf	(dtoa@i+1)^0,c
 11195   0044A8  0E4F               	movlw	79
 11196   0044AA  6E28               	movwf	dtoa@i^0,c
 11197   0044AC                     
 11198                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 11199   0044AC  0E00               	movlw	0
 11200   0044AE  0101               	movlb	1	; () banked
 11201   0044B0  6F71               	movwf	(_dbuf+79)& (0+255),b
 11202                           
 11203                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 11204   0044B2  EF8B  F022         	goto	l5904
 11205   0044B6                     l5894:
 11206                           
 11207                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
 11208   0044B6  0628               	decf	dtoa@i^0,f,c
 11209   0044B8  A0D8               	btfss	status,0,c
 11210   0044BA  0629               	decf	(dtoa@i+1)^0,f,c
 11211   0044BC                     
 11212                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 11213   0044BC  0E22               	movlw	low _dbuf
 11214   0044BE  2428               	addwf	dtoa@i^0,w,c
 11215   0044C0  6ED9               	movwf	fsr2l,c
 11216   0044C2  0E01               	movlw	high _dbuf
 11217   0044C4  2029               	addwfc	(dtoa@i+1)^0,w,c
 11218   0044C6  6EDA               	movwf	fsr2h,c
 11219   0044C8  C01F  F003         	movff	dtoa@d,___awmod@dividend
 11220   0044CC  C020  F004         	movff	dtoa@d+1,___awmod@dividend+1
 11221   0044D0  0E00               	movlw	0
 11222   0044D2  6E06               	movwf	(___awmod@divisor+1)^0,c
 11223   0044D4  0E0A               	movlw	10
 11224   0044D6  6E05               	movwf	___awmod@divisor^0,c
 11225   0044D8  ECBE  F027         	call	___awmod	;wreg free
 11226   0044DC  C003  F009         	movff	?___awmod,abs@a
 11227   0044E0  C004  F00A         	movff	?___awmod+1,abs@a+1
 11228   0044E4  EC9D  F02A         	call	_abs	;wreg free
 11229   0044E8  5009               	movf	?_abs^0,w,c
 11230   0044EA  0F30               	addlw	48
 11231   0044EC  6EDF               	movwf	indf2,c
 11232   0044EE                     
 11233                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 567:         --p;
 11234   0044EE  0625               	decf	dtoa@p^0,f,c
 11235   0044F0  A0D8               	btfss	status,0,c
 11236   0044F2  0626               	decf	(dtoa@p+1)^0,f,c
 11237   0044F4                     
 11238                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
 11239   0044F4  0623               	decf	dtoa@w^0,f,c
 11240   0044F6  A0D8               	btfss	status,0,c
 11241   0044F8  0624               	decf	(dtoa@w+1)^0,f,c
 11242   0044FA                     
 11243                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 11244   0044FA  C01F  F003         	movff	dtoa@d,___awdiv@dividend
 11245   0044FE  C020  F004         	movff	dtoa@d+1,___awdiv@dividend+1
 11246   004502  0E00               	movlw	0
 11247   004504  6E06               	movwf	(___awdiv@divisor+1)^0,c
 11248   004506  0E0A               	movlw	10
 11249   004508  6E05               	movwf	___awdiv@divisor^0,c
 11250   00450A  EC03  F027         	call	___awdiv	;wreg free
 11251   00450E  C003  F01F         	movff	?___awdiv,dtoa@d
 11252   004512  C004  F020         	movff	?___awdiv+1,dtoa@d+1
 11253   004516                     l5904:
 11254                           
 11255                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 11256   004516  BE29               	btfsc	(dtoa@i+1)^0,7,c
 11257   004518  EF96  F022         	goto	u7621
 11258   00451C  5029               	movf	(dtoa@i+1)^0,w,c
 11259   00451E  E108               	bnz	u7620
 11260   004520  0428               	decf	dtoa@i^0,w,c
 11261   004522  A0D8               	btfss	status,0,c
 11262   004524  EF96  F022         	goto	u7621
 11263   004528  EF98  F022         	goto	u7620
 11264   00452C                     u7621:
 11265   00452C  EFAE  F022         	goto	l5910
 11266   004530                     u7620:
 11267   004530  501F               	movf	dtoa@d^0,w,c
 11268   004532  1020               	iorwf	(dtoa@d+1)^0,w,c
 11269   004534  A4D8               	btfss	status,2,c
 11270   004536  EF9F  F022         	goto	u7631
 11271   00453A  EFA1  F022         	goto	u7630
 11272   00453E                     u7631:
 11273   00453E  EF5B  F022         	goto	l5894
 11274   004542                     u7630:
 11275   004542  BE26               	btfsc	(dtoa@p+1)^0,7,c
 11276   004544  EFAE  F022         	goto	u7640
 11277   004548  5026               	movf	(dtoa@p+1)^0,w,c
 11278   00454A  E106               	bnz	u7641
 11279   00454C  0425               	decf	dtoa@p^0,w,c
 11280   00454E  B0D8               	btfsc	status,0,c
 11281   004550  EFAC  F022         	goto	u7641
 11282   004554  EFAE  F022         	goto	u7640
 11283   004558                     u7641:
 11284   004558  EF5B  F022         	goto	l5894
 11285   00455C                     u7640:
 11286   00455C                     l5910:
 11287                           
 11288                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 11289   00455C  5027               	movf	dtoa@s^0,w,c
 11290   00455E  B4D8               	btfsc	status,2,c
 11291   004560  EFB4  F022         	goto	u7651
 11292   004564  EFB6  F022         	goto	u7650
 11293   004568                     u7651:
 11294   004568  EFC1  F022         	goto	l5916
 11295   00456C                     u7650:
 11296   00456C                     
 11297                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
 11298   00456C  0628               	decf	dtoa@i^0,f,c
 11299   00456E  A0D8               	btfss	status,0,c
 11300   004570  0629               	decf	(dtoa@i+1)^0,f,c
 11301   004572                     
 11302                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 11303   004572  0E22               	movlw	low _dbuf
 11304   004574  2428               	addwf	dtoa@i^0,w,c
 11305   004576  6ED9               	movwf	fsr2l,c
 11306   004578  0E01               	movlw	high _dbuf
 11307   00457A  2029               	addwfc	(dtoa@i+1)^0,w,c
 11308   00457C  6EDA               	movwf	fsr2h,c
 11309   00457E  C027  FFDF         	movff	dtoa@s,indf2
 11310   004582                     l5916:
 11311                           
 11312                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 11313   004582  C01D  F014         	movff	dtoa@fp,pad@fp
 11314   004586  C01E  F015         	movff	dtoa@fp+1,pad@fp+1
 11315   00458A  0E22               	movlw	low _dbuf
 11316   00458C  2428               	addwf	dtoa@i^0,w,c
 11317   00458E  6E16               	movwf	pad@buf^0,c
 11318   004590  0E01               	movlw	high _dbuf
 11319   004592  2029               	addwfc	(dtoa@i+1)^0,w,c
 11320   004594  6E17               	movwf	(pad@buf+1)^0,c
 11321   004596  C023  F018         	movff	dtoa@w,pad@p
 11322   00459A  C024  F019         	movff	dtoa@w+1,pad@p+1
 11323   00459E  ECBE  F028         	call	_pad	;wreg free
 11324   0045A2  0012               	return		;funcret
 11325   0045A4                     __end_of_dtoa:
 11326                           	callstack 0
 11327                           
 11328 ;; *************** function _pad *****************
 11329 ;; Defined at:
 11330 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
 11331 ;; Parameters:    Size  Location     Type
 11332 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 11333 ;;		 -> NULL(0), sprintf@f(12), 
 11334 ;;  buf             2   21[COMRAM] PTR unsigned char 
 11335 ;;		 -> dbuf(80), 
 11336 ;;  p               2   23[COMRAM] int 
 11337 ;; Auto vars:     Size  Location     Type
 11338 ;;  i               2   26[COMRAM] int 
 11339 ;; Return value:  Size  Location     Type
 11340 ;;                  1    wreg      void 
 11341 ;; Registers used:
 11342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11343 ;; Tracked objects:
 11344 ;;		On entry : 0/0
 11345 ;;		On exit  : 0/0
 11346 ;;		Unchanged: 0/0
 11347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11348 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11349 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11351 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11352 ;;Total ram usage:        9 bytes
 11353 ;; Hardware stack levels used: 1
 11354 ;; Hardware stack levels required when called: 4
 11355 ;; This function calls:
 11356 ;;		_fputc
 11357 ;;		_fputs
 11358 ;; This function is called by:
 11359 ;;		_dtoa
 11360 ;;		_efgtoa
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           	psect	text41
 11365   00517C                     __ptext41:
 11366                           	callstack 0
 11367   00517C                     _pad:
 11368                           	callstack 21
 11369   00517C                     
 11370                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 11371   00517C  0100               	movlb	0	; () banked
 11372   00517E  A1FE               	btfss	_flags& (0+255),0,b
 11373   005180  EFC4  F028         	goto	u7321
 11374   005184  EFC6  F028         	goto	u7320
 11375   005188                     u7321:
 11376   005188  EFD0  F028         	goto	l5786
 11377   00518C                     u7320:
 11378   00518C                     
 11379                           ; BSR set to: 0
 11380                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 11381   00518C  C016  F00D         	movff	pad@buf,fputs@s
 11382   005190  C017  F00E         	movff	pad@buf+1,fputs@s+1
 11383   005194  C014  F00F         	movff	pad@fp,fputs@fp
 11384   005198  C015  F010         	movff	pad@fp+1,fputs@fp+1
 11385   00519C  ECCC  F029         	call	_fputs	;wreg free
 11386   0051A0                     l5786:
 11387                           
 11388                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 11389   0051A0  BE19               	btfsc	(pad@p+1)^0,7,c
 11390   0051A2  EFD7  F028         	goto	u7330
 11391   0051A6  EFD5  F028         	goto	u7331
 11392   0051AA                     u7331:
 11393   0051AA  EFDB  F028         	goto	l1153
 11394   0051AE                     u7330:
 11395   0051AE                     
 11396                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 11397   0051AE  0E00               	movlw	0
 11398   0051B0  6E19               	movwf	(pad@p+1)^0,c
 11399   0051B2  0E00               	movlw	0
 11400   0051B4  6E18               	movwf	pad@p^0,c
 11401   0051B6                     l1153:
 11402                           
 11403                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 11404   0051B6  0E00               	movlw	0
 11405   0051B8  6E1C               	movwf	(pad@i+1)^0,c
 11406   0051BA  0E00               	movlw	0
 11407   0051BC  6E1B               	movwf	pad@i^0,c
 11408                           
 11409                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11410   0051BE  EFED  F028         	goto	l5794
 11411   0051C2                     l5790:
 11412                           
 11413                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 11414   0051C2  0E00               	movlw	0
 11415   0051C4  6E05               	movwf	(fputc@c+1)^0,c
 11416   0051C6  0E20               	movlw	32
 11417   0051C8  6E04               	movwf	fputc@c^0,c
 11418   0051CA  C014  F006         	movff	pad@fp,fputc@fp
 11419   0051CE  C015  F007         	movff	pad@fp+1,fputc@fp+1
 11420   0051D2  EC9E  F026         	call	_fputc	;wreg free
 11421   0051D6                     
 11422                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
 11423   0051D6  4A1B               	infsnz	pad@i^0,f,c
 11424   0051D8  2A1C               	incf	(pad@i+1)^0,f,c
 11425   0051DA                     l5794:
 11426                           
 11427                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11428   0051DA  5018               	movf	pad@p^0,w,c
 11429   0051DC  5C1B               	subwf	pad@i^0,w,c
 11430   0051DE  501C               	movf	(pad@i+1)^0,w,c
 11431   0051E0  0A80               	xorlw	128
 11432   0051E2  6E1A               	movwf	??_pad^0,c
 11433   0051E4  5019               	movf	(pad@p+1)^0,w,c
 11434   0051E6  0A80               	xorlw	128
 11435   0051E8  581A               	subwfb	??_pad^0,w,c
 11436   0051EA  A0D8               	btfss	status,0,c
 11437   0051EC  EFFA  F028         	goto	u7341
 11438   0051F0  EFFC  F028         	goto	u7340
 11439   0051F4                     u7341:
 11440   0051F4  EFE1  F028         	goto	l5790
 11441   0051F8                     u7340:
 11442   0051F8                     
 11443                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 11444   0051F8  0100               	movlb	0	; () banked
 11445   0051FA  B1FE               	btfsc	_flags& (0+255),0,b
 11446   0051FC  EF02  F029         	goto	u7351
 11447   005200  EF04  F029         	goto	u7350
 11448   005204                     u7351:
 11449   005204  EF0E  F029         	goto	l1158
 11450   005208                     u7350:
 11451   005208                     
 11452                           ; BSR set to: 0
 11453                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 11454   005208  C016  F00D         	movff	pad@buf,fputs@s
 11455   00520C  C017  F00E         	movff	pad@buf+1,fputs@s+1
 11456   005210  C014  F00F         	movff	pad@fp,fputs@fp
 11457   005214  C015  F010         	movff	pad@fp+1,fputs@fp+1
 11458   005218  ECCC  F029         	call	_fputs	;wreg free
 11459   00521C                     l1158:
 11460   00521C  0012               	return		;funcret
 11461   00521E                     __end_of_pad:
 11462                           	callstack 0
 11463                           
 11464 ;; *************** function _fputs *****************
 11465 ;; Defined at:
 11466 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
 11467 ;; Parameters:    Size  Location     Type
 11468 ;;  s               2   12[COMRAM] PTR const unsigned char 
 11469 ;;		 -> dbuf(80), 
 11470 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 11471 ;;		 -> NULL(0), sprintf@f(12), 
 11472 ;; Auto vars:     Size  Location     Type
 11473 ;;  i               2   17[COMRAM] int 
 11474 ;;  c               1   16[COMRAM] unsigned char 
 11475 ;; Return value:  Size  Location     Type
 11476 ;;                  2   12[COMRAM] int 
 11477 ;; Registers used:
 11478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11479 ;; Tracked objects:
 11480 ;;		On entry : 0/0
 11481 ;;		On exit  : 0/0
 11482 ;;		Unchanged: 0/0
 11483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11485 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11487 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11488 ;;Total ram usage:        7 bytes
 11489 ;; Hardware stack levels used: 1
 11490 ;; Hardware stack levels required when called: 3
 11491 ;; This function calls:
 11492 ;;		_fputc
 11493 ;; This function is called by:
 11494 ;;		_pad
 11495 ;; This function uses a non-reentrant model
 11496 ;;
 11497                           
 11498                           	psect	text42
 11499   005398                     __ptext42:
 11500                           	callstack 0
 11501   005398                     _fputs:
 11502                           	callstack 21
 11503   005398  0E00               	movlw	0
 11504   00539A  6E13               	movwf	(fputs@i+1)^0,c
 11505   00539C  0E00               	movlw	0
 11506   00539E  6E12               	movwf	fputs@i^0,c
 11507   0053A0  EFDD  F029         	goto	l5330
 11508   0053A4                     l5326:
 11509   0053A4  C011  F004         	movff	fputs@c,fputc@c
 11510   0053A8  6A05               	clrf	(fputc@c+1)^0,c
 11511   0053AA  C00F  F006         	movff	fputs@fp,fputc@fp
 11512   0053AE  C010  F007         	movff	fputs@fp+1,fputc@fp+1
 11513   0053B2  EC9E  F026         	call	_fputc	;wreg free
 11514   0053B6  4A12               	infsnz	fputs@i^0,f,c
 11515   0053B8  2A13               	incf	(fputs@i+1)^0,f,c
 11516   0053BA                     l5330:
 11517   0053BA  5012               	movf	fputs@i^0,w,c
 11518   0053BC  240D               	addwf	fputs@s^0,w,c
 11519   0053BE  6ED9               	movwf	fsr2l,c
 11520   0053C0  5013               	movf	(fputs@i+1)^0,w,c
 11521   0053C2  200E               	addwfc	(fputs@s+1)^0,w,c
 11522   0053C4  6EDA               	movwf	fsr2h,c
 11523   0053C6  50DF               	movf	indf2,w,c
 11524   0053C8  6E11               	movwf	fputs@c^0,c
 11525   0053CA  5011               	movf	fputs@c^0,w,c
 11526   0053CC  A4D8               	btfss	status,2,c
 11527   0053CE  EFEB  F029         	goto	u6611
 11528   0053D2  EFED  F029         	goto	u6610
 11529   0053D6                     u6611:
 11530   0053D6  EFD2  F029         	goto	l5326
 11531   0053DA                     u6610:
 11532   0053DA  0012               	return		;funcret
 11533   0053DC                     __end_of_fputs:
 11534                           	callstack 0
 11535                           
 11536 ;; *************** function _fputc *****************
 11537 ;; Defined at:
 11538 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
 11539 ;; Parameters:    Size  Location     Type
 11540 ;;  c               2    3[COMRAM] int 
 11541 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 11542 ;;		 -> NULL(0), sprintf@f(12), 
 11543 ;; Auto vars:     Size  Location     Type
 11544 ;;		None
 11545 ;; Return value:  Size  Location     Type
 11546 ;;                  2    3[COMRAM] int 
 11547 ;; Registers used:
 11548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11549 ;; Tracked objects:
 11550 ;;		On entry : 0/0
 11551 ;;		On exit  : 0/0
 11552 ;;		Unchanged: 0/0
 11553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11554 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11556 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11557 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11558 ;;Total ram usage:        9 bytes
 11559 ;; Hardware stack levels used: 1
 11560 ;; Hardware stack levels required when called: 2
 11561 ;; This function calls:
 11562 ;;		_putch
 11563 ;; This function is called by:
 11564 ;;		_pad
 11565 ;;		_stoa
 11566 ;;		_vfpfcnvrt
 11567 ;;		_fputs
 11568 ;; This function uses a non-reentrant model
 11569 ;;
 11570                           
 11571                           	psect	text43
 11572   004D3C                     __ptext43:
 11573                           	callstack 0
 11574   004D3C                     _fputc:
 11575                           	callstack 23
 11576   004D3C  5006               	movf	fputc@fp^0,w,c
 11577   004D3E  1007               	iorwf	(fputc@fp+1)^0,w,c
 11578   004D40  B4D8               	btfsc	status,2,c
 11579   004D42  EFA5  F026         	goto	u6181
 11580   004D46  EFA7  F026         	goto	u6180
 11581   004D4A                     u6181:
 11582   004D4A  EFB0  F026         	goto	l5112
 11583   004D4E                     u6180:
 11584   004D4E  5006               	movf	fputc@fp^0,w,c
 11585   004D50  1007               	iorwf	(fputc@fp+1)^0,w,c
 11586   004D52  A4D8               	btfss	status,2,c
 11587   004D54  EFAE  F026         	goto	u6191
 11588   004D58  EFB0  F026         	goto	u6190
 11589   004D5C                     u6191:
 11590   004D5C  EFB5  F026         	goto	l5114
 11591   004D60                     u6190:
 11592   004D60                     l5112:
 11593   004D60  5004               	movf	fputc@c^0,w,c
 11594   004D62  ECFB  F02A         	call	_putch
 11595   004D66  EF02  F027         	goto	l1354
 11596   004D6A                     l5114:
 11597   004D6A  EE20 F00A          	lfsr	2,10
 11598   004D6E  5006               	movf	fputc@fp^0,w,c
 11599   004D70  26D9               	addwf	fsr2l,f,c
 11600   004D72  5007               	movf	(fputc@fp+1)^0,w,c
 11601   004D74  22DA               	addwfc	fsr2h,f,c
 11602   004D76  50DE               	movf	postinc2,w,c
 11603   004D78  10DE               	iorwf	postinc2,w,c
 11604   004D7A  B4D8               	btfsc	status,2,c
 11605   004D7C  EFC2  F026         	goto	u6201
 11606   004D80  EFC4  F026         	goto	u6200
 11607   004D84                     u6201:
 11608   004D84  EFDF  F026         	goto	l5118
 11609   004D88                     u6200:
 11610   004D88  EE20 F00A          	lfsr	2,10
 11611   004D8C  5006               	movf	fputc@fp^0,w,c
 11612   004D8E  26D9               	addwf	fsr2l,f,c
 11613   004D90  5007               	movf	(fputc@fp+1)^0,w,c
 11614   004D92  22DA               	addwfc	fsr2h,f,c
 11615   004D94  EE10 F003          	lfsr	1,3
 11616   004D98  5006               	movf	fputc@fp^0,w,c
 11617   004D9A  26E1               	addwf	fsr1l,f,c
 11618   004D9C  5007               	movf	(fputc@fp+1)^0,w,c
 11619   004D9E  22E2               	addwfc	fsr1h,f,c
 11620   004DA0  50DE               	movf	postinc2,w,c
 11621   004DA2  5CE6               	subwf	postinc1,w,c
 11622   004DA4  50E6               	movf	postinc1,w,c
 11623   004DA6  0A80               	xorlw	128
 11624   004DA8  6E0C               	movwf	(??_fputc+4)^0,c
 11625   004DAA  50DE               	movf	postinc2,w,c
 11626   004DAC  0A80               	xorlw	128
 11627   004DAE  580C               	subwfb	(??_fputc+4)^0,w,c
 11628   004DB0  B0D8               	btfsc	status,0,c
 11629   004DB2  EFDD  F026         	goto	u6211
 11630   004DB6  EFDF  F026         	goto	u6210
 11631   004DBA                     u6211:
 11632   004DBA  EF02  F027         	goto	l1354
 11633   004DBE                     u6210:
 11634   004DBE                     l5118:
 11635   004DBE  EE20 F003          	lfsr	2,3
 11636   004DC2  5006               	movf	fputc@fp^0,w,c
 11637   004DC4  26D9               	addwf	fsr2l,f,c
 11638   004DC6  5007               	movf	(fputc@fp+1)^0,w,c
 11639   004DC8  22DA               	addwfc	fsr2h,f,c
 11640   004DCA  CFDE F008          	movff	postinc2,??_fputc
 11641   004DCE  CFDD F009          	movff	postdec2,??_fputc+1
 11642   004DD2  C006  FFD9         	movff	fputc@fp,fsr2l
 11643   004DD6  C007  FFDA         	movff	fputc@fp+1,fsr2h
 11644   004DDA  CFDE F00A          	movff	postinc2,??_fputc+2
 11645   004DDE  CFDD F00B          	movff	postdec2,??_fputc+3
 11646   004DE2  5008               	movf	??_fputc^0,w,c
 11647   004DE4  240A               	addwf	(??_fputc+2)^0,w,c
 11648   004DE6  6ED9               	movwf	fsr2l,c
 11649   004DE8  5009               	movf	(??_fputc+1)^0,w,c
 11650   004DEA  200B               	addwfc	(??_fputc+3)^0,w,c
 11651   004DEC  6EDA               	movwf	fsr2h,c
 11652   004DEE  C004  FFDF         	movff	fputc@c,indf2
 11653   004DF2  EE20 F003          	lfsr	2,3
 11654   004DF6  5006               	movf	fputc@fp^0,w,c
 11655   004DF8  26D9               	addwf	fsr2l,f,c
 11656   004DFA  5007               	movf	(fputc@fp+1)^0,w,c
 11657   004DFC  22DA               	addwfc	fsr2h,f,c
 11658   004DFE  2ADE               	incf	postinc2,f,c
 11659   004E00  0E00               	movlw	0
 11660   004E02  22DD               	addwfc	postdec2,f,c
 11661   004E04                     l1354:
 11662   004E04  0012               	return		;funcret
 11663   004E06                     __end_of_fputc:
 11664                           	callstack 0
 11665                           
 11666 ;; *************** function _putch *****************
 11667 ;; Defined at:
 11668 ;;		line 11 in file "putch.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;  data            1    wreg     unsigned char 
 11671 ;; Auto vars:     Size  Location     Type
 11672 ;;  data            1    2[COMRAM] unsigned char 
 11673 ;; Return value:  Size  Location     Type
 11674 ;;                  1    wreg      void 
 11675 ;; Registers used:
 11676 ;;		wreg
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11686 ;;Total ram usage:        1 bytes
 11687 ;; Hardware stack levels used: 1
 11688 ;; Hardware stack levels required when called: 1
 11689 ;; This function calls:
 11690 ;;		Nothing
 11691 ;; This function is called by:
 11692 ;;		_fputc
 11693 ;; This function uses a non-reentrant model
 11694 ;;
 11695                           
 11696                           	psect	text44
 11697   0055F6                     __ptext44:
 11698                           	callstack 0
 11699   0055F6                     _putch:
 11700                           	callstack 23
 11701                           
 11702                           ;incstack = 0
 11703                           ;putch@data stored from wreg
 11704   0055F6  6E03               	movwf	putch@data^0,c
 11705   0055F8                     l232:
 11706   0055F8  A89E               	btfss	3998,4,c	;volatile
 11707   0055FA  EF01  F02B         	goto	u6171
 11708   0055FE  EF03  F02B         	goto	u6170
 11709   005602                     u6171:
 11710   005602  EFFC  F02A         	goto	l232
 11711   005606                     u6170:
 11712   005606                     
 11713                           ;putch.c: 13:     TXREG1 = data;
 11714   005606  C003  FFAD         	movff	putch@data,4013	;volatile
 11715   00560A  0012               	return		;funcret
 11716   00560C                     __end_of_putch:
 11717                           	callstack 0
 11718                           
 11719 ;; *************** function _abs *****************
 11720 ;; Defined at:
 11721 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
 11722 ;; Parameters:    Size  Location     Type
 11723 ;;  a               2    8[COMRAM] int 
 11724 ;; Auto vars:     Size  Location     Type
 11725 ;;		None
 11726 ;; Return value:  Size  Location     Type
 11727 ;;                  2    8[COMRAM] int 
 11728 ;; Registers used:
 11729 ;;		wreg, status,2, status,0
 11730 ;; Tracked objects:
 11731 ;;		On entry : 0/0
 11732 ;;		On exit  : 0/0
 11733 ;;		Unchanged: 0/0
 11734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11737 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11738 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11739 ;;Total ram usage:        4 bytes
 11740 ;; Hardware stack levels used: 1
 11741 ;; Hardware stack levels required when called: 1
 11742 ;; This function calls:
 11743 ;;		Nothing
 11744 ;; This function is called by:
 11745 ;;		_dtoa
 11746 ;; This function uses a non-reentrant model
 11747 ;;
 11748                           
 11749                           	psect	text45
 11750   00553A                     __ptext45:
 11751                           	callstack 0
 11752   00553A                     _abs:
 11753                           	callstack 24
 11754   00553A  BE0A               	btfsc	(abs@a+1)^0,7,c
 11755   00553C  EFA2  F02A         	goto	u7361
 11756   005540  EFA4  F02A         	goto	u7360
 11757   005544                     u7361:
 11758   005544  EFAA  F02A         	goto	l1313
 11759   005548                     u7360:
 11760   005548  C009  F009         	movff	abs@a,?_abs
 11761   00554C  C00A  F00A         	movff	abs@a+1,?_abs+1
 11762   005550  EFB6  F02A         	goto	l1316
 11763   005554                     l1313:
 11764   005554  C009  F00B         	movff	abs@a,??_abs
 11765   005558  C00A  F00C         	movff	abs@a+1,??_abs+1
 11766   00555C  1E0B               	comf	??_abs^0,f,c
 11767   00555E  1E0C               	comf	(??_abs+1)^0,f,c
 11768   005560  4A0B               	infsnz	??_abs^0,f,c
 11769   005562  2A0C               	incf	(??_abs+1)^0,f,c
 11770   005564  C00B  F009         	movff	??_abs,?_abs
 11771   005568  C00C  F00A         	movff	??_abs+1,?_abs+1
 11772   00556C                     l1316:
 11773   00556C  0012               	return		;funcret
 11774   00556E                     __end_of_abs:
 11775                           	callstack 0
 11776                           
 11777 ;; *************** function ___awmod *****************
 11778 ;; Defined at:
 11779 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 11780 ;; Parameters:    Size  Location     Type
 11781 ;;  dividend        2    2[COMRAM] int 
 11782 ;;  divisor         2    4[COMRAM] int 
 11783 ;; Auto vars:     Size  Location     Type
 11784 ;;  sign            1    7[COMRAM] unsigned char 
 11785 ;;  counter         1    6[COMRAM] unsigned char 
 11786 ;; Return value:  Size  Location     Type
 11787 ;;                  2    2[COMRAM] int 
 11788 ;; Registers used:
 11789 ;;		wreg, status,2, status,0
 11790 ;; Tracked objects:
 11791 ;;		On entry : 0/0
 11792 ;;		On exit  : 0/0
 11793 ;;		Unchanged: 0/0
 11794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11795 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11796 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11798 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11799 ;;Total ram usage:        6 bytes
 11800 ;; Hardware stack levels used: 1
 11801 ;; Hardware stack levels required when called: 1
 11802 ;; This function calls:
 11803 ;;		Nothing
 11804 ;; This function is called by:
 11805 ;;		_dtoa
 11806 ;; This function uses a non-reentrant model
 11807 ;;
 11808                           
 11809                           	psect	text46
 11810   004F7C                     __ptext46:
 11811                           	callstack 0
 11812   004F7C                     ___awmod:
 11813                           	callstack 24
 11814   004F7C  0E00               	movlw	0
 11815   004F7E  6E08               	movwf	___awmod@sign^0,c
 11816   004F80  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
 11817   004F82  EFC7  F027         	goto	u7100
 11818   004F86  EFC5  F027         	goto	u7101
 11819   004F8A                     u7101:
 11820   004F8A  EFCD  F027         	goto	l5664
 11821   004F8E                     u7100:
 11822   004F8E  6C03               	negf	___awmod@dividend^0,c
 11823   004F90  1E04               	comf	(___awmod@dividend+1)^0,f,c
 11824   004F92  B0D8               	btfsc	status,0,c
 11825   004F94  2A04               	incf	(___awmod@dividend+1)^0,f,c
 11826   004F96  0E01               	movlw	1
 11827   004F98  6E08               	movwf	___awmod@sign^0,c
 11828   004F9A                     l5664:
 11829   004F9A  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
 11830   004F9C  EFD4  F027         	goto	u7110
 11831   004FA0  EFD2  F027         	goto	u7111
 11832   004FA4                     u7111:
 11833   004FA4  EFD8  F027         	goto	l5668
 11834   004FA8                     u7110:
 11835   004FA8  6C05               	negf	___awmod@divisor^0,c
 11836   004FAA  1E06               	comf	(___awmod@divisor+1)^0,f,c
 11837   004FAC  B0D8               	btfsc	status,0,c
 11838   004FAE  2A06               	incf	(___awmod@divisor+1)^0,f,c
 11839   004FB0                     l5668:
 11840   004FB0  5005               	movf	___awmod@divisor^0,w,c
 11841   004FB2  1006               	iorwf	(___awmod@divisor+1)^0,w,c
 11842   004FB4  B4D8               	btfsc	status,2,c
 11843   004FB6  EFDF  F027         	goto	u7121
 11844   004FBA  EFE1  F027         	goto	u7120
 11845   004FBE                     u7121:
 11846   004FBE  EF05  F028         	goto	l5684
 11847   004FC2                     u7120:
 11848   004FC2  0E01               	movlw	1
 11849   004FC4  6E07               	movwf	___awmod@counter^0,c
 11850   004FC6  EFE9  F027         	goto	l5674
 11851   004FCA                     l5672:
 11852   004FCA  90D8               	bcf	status,0,c
 11853   004FCC  3605               	rlcf	___awmod@divisor^0,f,c
 11854   004FCE  3606               	rlcf	(___awmod@divisor+1)^0,f,c
 11855   004FD0  2A07               	incf	___awmod@counter^0,f,c
 11856   004FD2                     l5674:
 11857   004FD2  AE06               	btfss	(___awmod@divisor+1)^0,7,c
 11858   004FD4  EFEE  F027         	goto	u7131
 11859   004FD8  EFF0  F027         	goto	u7130
 11860   004FDC                     u7131:
 11861   004FDC  EFE5  F027         	goto	l5672
 11862   004FE0                     u7130:
 11863   004FE0                     l5676:
 11864   004FE0  5005               	movf	___awmod@divisor^0,w,c
 11865   004FE2  5C03               	subwf	___awmod@dividend^0,w,c
 11866   004FE4  5006               	movf	(___awmod@divisor+1)^0,w,c
 11867   004FE6  5804               	subwfb	(___awmod@dividend+1)^0,w,c
 11868   004FE8  A0D8               	btfss	status,0,c
 11869   004FEA  EFF9  F027         	goto	u7141
 11870   004FEE  EFFB  F027         	goto	u7140
 11871   004FF2                     u7141:
 11872   004FF2  EFFF  F027         	goto	l5680
 11873   004FF6                     u7140:
 11874   004FF6  5005               	movf	___awmod@divisor^0,w,c
 11875   004FF8  5E03               	subwf	___awmod@dividend^0,f,c
 11876   004FFA  5006               	movf	(___awmod@divisor+1)^0,w,c
 11877   004FFC  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
 11878   004FFE                     l5680:
 11879   004FFE  90D8               	bcf	status,0,c
 11880   005000  3206               	rrcf	(___awmod@divisor+1)^0,f,c
 11881   005002  3205               	rrcf	___awmod@divisor^0,f,c
 11882   005004  2E07               	decfsz	___awmod@counter^0,f,c
 11883   005006  EFF0  F027         	goto	l5676
 11884   00500A                     l5684:
 11885   00500A  5008               	movf	___awmod@sign^0,w,c
 11886   00500C  B4D8               	btfsc	status,2,c
 11887   00500E  EF0B  F028         	goto	u7151
 11888   005012  EF0D  F028         	goto	u7150
 11889   005016                     u7151:
 11890   005016  EF11  F028         	goto	l5688
 11891   00501A                     u7150:
 11892   00501A  6C03               	negf	___awmod@dividend^0,c
 11893   00501C  1E04               	comf	(___awmod@dividend+1)^0,f,c
 11894   00501E  B0D8               	btfsc	status,0,c
 11895   005020  2A04               	incf	(___awmod@dividend+1)^0,f,c
 11896   005022                     l5688:
 11897   005022  C003  F003         	movff	___awmod@dividend,?___awmod
 11898   005026  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
 11899   00502A  0012               	return		;funcret
 11900   00502C                     __end_of___awmod:
 11901                           	callstack 0
 11902                           
 11903 ;; *************** function ___awdiv *****************
 11904 ;; Defined at:
 11905 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 11906 ;; Parameters:    Size  Location     Type
 11907 ;;  dividend        2    2[COMRAM] int 
 11908 ;;  divisor         2    4[COMRAM] int 
 11909 ;; Auto vars:     Size  Location     Type
 11910 ;;  quotient        2    8[COMRAM] int 
 11911 ;;  sign            1    7[COMRAM] unsigned char 
 11912 ;;  counter         1    6[COMRAM] unsigned char 
 11913 ;; Return value:  Size  Location     Type
 11914 ;;                  2    2[COMRAM] int 
 11915 ;; Registers used:
 11916 ;;		wreg, status,2, status,0
 11917 ;; Tracked objects:
 11918 ;;		On entry : 0/0
 11919 ;;		On exit  : 0/0
 11920 ;;		Unchanged: 0/0
 11921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11923 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11925 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11926 ;;Total ram usage:        8 bytes
 11927 ;; Hardware stack levels used: 1
 11928 ;; Hardware stack levels required when called: 1
 11929 ;; This function calls:
 11930 ;;		Nothing
 11931 ;; This function is called by:
 11932 ;;		_runPWM
 11933 ;;		_dtoa
 11934 ;; This function uses a non-reentrant model
 11935 ;;
 11936                           
 11937                           	psect	text47
 11938   004E06                     __ptext47:
 11939                           	callstack 0
 11940   004E06                     ___awdiv:
 11941                           	callstack 28
 11942   004E06  0E00               	movlw	0
 11943   004E08  6E08               	movwf	___awdiv@sign^0,c
 11944   004E0A  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
 11945   004E0C  EF0C  F027         	goto	u7040
 11946   004E10  EF0A  F027         	goto	u7041
 11947   004E14                     u7041:
 11948   004E14  EF12  F027         	goto	l5620
 11949   004E18                     u7040:
 11950   004E18  6C05               	negf	___awdiv@divisor^0,c
 11951   004E1A  1E06               	comf	(___awdiv@divisor+1)^0,f,c
 11952   004E1C  B0D8               	btfsc	status,0,c
 11953   004E1E  2A06               	incf	(___awdiv@divisor+1)^0,f,c
 11954   004E20  0E01               	movlw	1
 11955   004E22  6E08               	movwf	___awdiv@sign^0,c
 11956   004E24                     l5620:
 11957   004E24  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
 11958   004E26  EF19  F027         	goto	u7050
 11959   004E2A  EF17  F027         	goto	u7051
 11960   004E2E                     u7051:
 11961   004E2E  EF1F  F027         	goto	l5626
 11962   004E32                     u7050:
 11963   004E32  6C03               	negf	___awdiv@dividend^0,c
 11964   004E34  1E04               	comf	(___awdiv@dividend+1)^0,f,c
 11965   004E36  B0D8               	btfsc	status,0,c
 11966   004E38  2A04               	incf	(___awdiv@dividend+1)^0,f,c
 11967   004E3A  0E01               	movlw	1
 11968   004E3C  1A08               	xorwf	___awdiv@sign^0,f,c
 11969   004E3E                     l5626:
 11970   004E3E  0E00               	movlw	0
 11971   004E40  6E0A               	movwf	(___awdiv@quotient+1)^0,c
 11972   004E42  0E00               	movlw	0
 11973   004E44  6E09               	movwf	___awdiv@quotient^0,c
 11974   004E46  5005               	movf	___awdiv@divisor^0,w,c
 11975   004E48  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
 11976   004E4A  B4D8               	btfsc	status,2,c
 11977   004E4C  EF2A  F027         	goto	u7061
 11978   004E50  EF2C  F027         	goto	u7060
 11979   004E54                     u7061:
 11980   004E54  EF54  F027         	goto	l5648
 11981   004E58                     u7060:
 11982   004E58  0E01               	movlw	1
 11983   004E5A  6E07               	movwf	___awdiv@counter^0,c
 11984   004E5C  EF34  F027         	goto	l5634
 11985   004E60                     l5632:
 11986   004E60  90D8               	bcf	status,0,c
 11987   004E62  3605               	rlcf	___awdiv@divisor^0,f,c
 11988   004E64  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
 11989   004E66  2A07               	incf	___awdiv@counter^0,f,c
 11990   004E68                     l5634:
 11991   004E68  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
 11992   004E6A  EF39  F027         	goto	u7071
 11993   004E6E  EF3B  F027         	goto	u7070
 11994   004E72                     u7071:
 11995   004E72  EF30  F027         	goto	l5632
 11996   004E76                     u7070:
 11997   004E76                     l5636:
 11998   004E76  90D8               	bcf	status,0,c
 11999   004E78  3609               	rlcf	___awdiv@quotient^0,f,c
 12000   004E7A  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
 12001   004E7C  5005               	movf	___awdiv@divisor^0,w,c
 12002   004E7E  5C03               	subwf	___awdiv@dividend^0,w,c
 12003   004E80  5006               	movf	(___awdiv@divisor+1)^0,w,c
 12004   004E82  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
 12005   004E84  A0D8               	btfss	status,0,c
 12006   004E86  EF47  F027         	goto	u7081
 12007   004E8A  EF49  F027         	goto	u7080
 12008   004E8E                     u7081:
 12009   004E8E  EF4E  F027         	goto	l5644
 12010   004E92                     u7080:
 12011   004E92  5005               	movf	___awdiv@divisor^0,w,c
 12012   004E94  5E03               	subwf	___awdiv@dividend^0,f,c
 12013   004E96  5006               	movf	(___awdiv@divisor+1)^0,w,c
 12014   004E98  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
 12015   004E9A  8009               	bsf	___awdiv@quotient^0,0,c
 12016   004E9C                     l5644:
 12017   004E9C  90D8               	bcf	status,0,c
 12018   004E9E  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
 12019   004EA0  3205               	rrcf	___awdiv@divisor^0,f,c
 12020   004EA2  2E07               	decfsz	___awdiv@counter^0,f,c
 12021   004EA4  EF3B  F027         	goto	l5636
 12022   004EA8                     l5648:
 12023   004EA8  5008               	movf	___awdiv@sign^0,w,c
 12024   004EAA  B4D8               	btfsc	status,2,c
 12025   004EAC  EF5A  F027         	goto	u7091
 12026   004EB0  EF5C  F027         	goto	u7090
 12027   004EB4                     u7091:
 12028   004EB4  EF60  F027         	goto	l5652
 12029   004EB8                     u7090:
 12030   004EB8  6C09               	negf	___awdiv@quotient^0,c
 12031   004EBA  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
 12032   004EBC  B0D8               	btfsc	status,0,c
 12033   004EBE  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
 12034   004EC0                     l5652:
 12035   004EC0  C009  F003         	movff	___awdiv@quotient,?___awdiv
 12036   004EC4  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
 12037   004EC8  0012               	return		;funcret
 12038   004ECA                     __end_of___awdiv:
 12039                           	callstack 0
 12040                           
 12041 ;; *************** function _LCD_ShowString *****************
 12042 ;; Defined at:
 12043 ;;		line 55 in file "lcd.c"
 12044 ;; Parameters:    Size  Location     Type
 12045 ;;  lineNum         1    wreg     unsigned char 
 12046 ;;  textData        2    3[COMRAM] PTR unsigned char 
 12047 ;;		 -> runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_7(17), 
 12048 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
 12049 ;;		 -> STR_2(17), STR_1(17), 
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;  lineNum         1    7[COMRAM] unsigned char 
 12052 ;;  i               1    8[COMRAM] unsigned char 
 12053 ;; Return value:  Size  Location     Type
 12054 ;;                  1    wreg      void 
 12055 ;; Registers used:
 12056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12057 ;; Tracked objects:
 12058 ;;		On entry : 0/0
 12059 ;;		On exit  : 0/0
 12060 ;;		Unchanged: 0/0
 12061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12065 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12066 ;;Total ram usage:        6 bytes
 12067 ;; Hardware stack levels used: 1
 12068 ;; Hardware stack levels required when called: 2
 12069 ;; This function calls:
 12070 ;;		_LCD_Send
 12071 ;; This function is called by:
 12072 ;;		_main
 12073 ;;		_moveDisplay
 12074 ;;		_runADC
 12075 ;; This function uses a non-reentrant model
 12076 ;;
 12077                           
 12078                           	psect	text48
 12079   004ECA                     __ptext48:
 12080                           	callstack 0
 12081   004ECA                     _LCD_ShowString:
 12082                           	callstack 27
 12083                           
 12084                           ;incstack = 0
 12085                           ;LCD_ShowString@lineNum stored from wreg
 12086   004ECA  6E08               	movwf	LCD_ShowString@lineNum^0,c
 12087   004ECC                     
 12088                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 12089   004ECC  806B               	bsf	107,0,c	;volatile
 12090   004ECE                     l110:
 12091   004ECE  B06B               	btfsc	107,0,c	;volatile
 12092   004ED0  EF6C  F027         	goto	u8411
 12093   004ED4  EF6E  F027         	goto	u8410
 12094   004ED8                     u8411:
 12095   004ED8  EF67  F027         	goto	l110
 12096   004EDC                     u8410:
 12097   004EDC                     
 12098                           ;lcd.c: 62:     SSP2IF = 0;
 12099   004EDC  9EA4               	bcf	4004,7,c	;volatile
 12100   004EDE                     
 12101                           ;lcd.c: 64:     LCD_Send(0x7c);
 12102   004EDE  0E7C               	movlw	124
 12103   004EE0  ECCA  F02A         	call	_LCD_Send
 12104                           
 12105                           ;lcd.c: 66:     LCD_Send(0x80);
 12106   004EE4  0E80               	movlw	128
 12107   004EE6  ECCA  F02A         	call	_LCD_Send
 12108   004EEA                     
 12109                           ;lcd.c: 68:     if(lineNum == 1){
 12110   004EEA  0408               	decf	LCD_ShowString@lineNum^0,w,c
 12111   004EEC  A4D8               	btfss	status,2,c
 12112   004EEE  EF7B  F027         	goto	u8421
 12113   004EF2  EF7D  F027         	goto	u8420
 12114   004EF6                     u8421:
 12115   004EF6  EF82  F027         	goto	l6440
 12116   004EFA                     u8420:
 12117   004EFA                     
 12118                           ;lcd.c: 69:         LCD_Send(0x80);
 12119   004EFA  0E80               	movlw	128
 12120   004EFC  ECCA  F02A         	call	_LCD_Send
 12121                           
 12122                           ;lcd.c: 70:     }
 12123   004F00  EF8E  F027         	goto	l114
 12124   004F04                     l6440:
 12125   004F04  0E02               	movlw	2
 12126   004F06  1808               	xorwf	LCD_ShowString@lineNum^0,w,c
 12127   004F08  A4D8               	btfss	status,2,c
 12128   004F0A  EF89  F027         	goto	u8431
 12129   004F0E  EF8B  F027         	goto	u8430
 12130   004F12                     u8431:
 12131   004F12  EF8E  F027         	goto	l114
 12132   004F16                     u8430:
 12133   004F16                     
 12134                           ;lcd.c: 72:         LCD_Send(0xC0);
 12135   004F16  0EC0               	movlw	192
 12136   004F18  ECCA  F02A         	call	_LCD_Send
 12137   004F1C                     l114:
 12138                           
 12139                           ;lcd.c: 75:     LCD_Send(0x40);
 12140   004F1C  0E40               	movlw	64
 12141   004F1E  ECCA  F02A         	call	_LCD_Send
 12142   004F22                     
 12143                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 12144   004F22  0E00               	movlw	0
 12145   004F24  6E09               	movwf	LCD_ShowString@i^0,c
 12146   004F26                     l6450:
 12147                           
 12148                           ;lcd.c: 78:         LCD_Send(textData[i]);
 12149   004F26  5009               	movf	LCD_ShowString@i^0,w,c
 12150   004F28  2404               	addwf	LCD_ShowString@textData^0,w,c
 12151   004F2A  6E06               	movwf	??_LCD_ShowString^0,c
 12152   004F2C  0E00               	movlw	0
 12153   004F2E  2005               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 12154   004F30  6E07               	movwf	(??_LCD_ShowString+1)^0,c
 12155   004F32  C006  FFF6         	movff	??_LCD_ShowString,tblptrl
 12156   004F36  C007  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 12157   004F3A  0E00               	movlw	low (__smallconst shr (0+16))
 12158   004F3C  6EF8               	movwf	tblptru,c
 12159   004F3E  0E0F               	movlw	(high __ramtop+-1)
 12160   004F40  64F7               	cpfsgt	tblptrh,c
 12161   004F42  D003               	bra	u8447
 12162   004F44  0008               	tblrd		*
 12163   004F46  50F5               	movf	tablat,w,c
 12164   004F48  D005               	bra	u8440
 12165   004F4A                     u8447:
 12166   004F4A  CFF6 FFE1          	movff	tblptrl,fsr1l
 12167   004F4E  CFF7 FFE2          	movff	tblptrh,fsr1h
 12168   004F52  50E7               	movf	indf1,w,c
 12169   004F54                     u8440:
 12170   004F54  ECCA  F02A         	call	_LCD_Send
 12171   004F58                     
 12172                           ;lcd.c: 79:     }
 12173   004F58  2A09               	incf	LCD_ShowString@i^0,f,c
 12174   004F5A  0E0F               	movlw	15
 12175   004F5C  6409               	cpfsgt	LCD_ShowString@i^0,c
 12176   004F5E  EFB3  F027         	goto	u8451
 12177   004F62  EFB5  F027         	goto	u8450
 12178   004F66                     u8451:
 12179   004F66  EF93  F027         	goto	l6450
 12180   004F6A                     u8450:
 12181   004F6A                     
 12182                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 12183   004F6A  846B               	bsf	107,2,c	;volatile
 12184   004F6C                     l118:
 12185   004F6C  B46B               	btfsc	107,2,c	;volatile
 12186   004F6E  EFBB  F027         	goto	u8461
 12187   004F72  EFBD  F027         	goto	u8460
 12188   004F76                     u8461:
 12189   004F76  EFB6  F027         	goto	l118
 12190   004F7A                     u8460:
 12191   004F7A  0012               	return		;funcret
 12192   004F7C                     __end_of_LCD_ShowString:
 12193                           	callstack 0
 12194                           
 12195 ;; *************** function _LCD_Clear *****************
 12196 ;; Defined at:
 12197 ;;		line 94 in file "lcd.c"
 12198 ;; Parameters:    Size  Location     Type
 12199 ;;		None
 12200 ;; Auto vars:     Size  Location     Type
 12201 ;;		None
 12202 ;; Return value:  Size  Location     Type
 12203 ;;                  1    wreg      void 
 12204 ;; Registers used:
 12205 ;;		wreg, cstack
 12206 ;; Tracked objects:
 12207 ;;		On entry : 0/0
 12208 ;;		On exit  : 0/0
 12209 ;;		Unchanged: 0/0
 12210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12215 ;;Total ram usage:        0 bytes
 12216 ;; Hardware stack levels used: 1
 12217 ;; Hardware stack levels required when called: 2
 12218 ;; This function calls:
 12219 ;;		_LCD_Send
 12220 ;; This function is called by:
 12221 ;;		_moveDisplay
 12222 ;; This function uses a non-reentrant model
 12223 ;;
 12224                           
 12225                           	psect	text49
 12226   0054D0                     __ptext49:
 12227                           	callstack 0
 12228   0054D0                     _LCD_Clear:
 12229                           	callstack 27
 12230   0054D0                     
 12231                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
 12232   0054D0  806B               	bsf	107,0,c	;volatile
 12233   0054D2                     l133:
 12234   0054D2  B06B               	btfsc	107,0,c	;volatile
 12235   0054D4  EF6E  F02A         	goto	u8471
 12236   0054D8  EF70  F02A         	goto	u8470
 12237   0054DC                     u8471:
 12238   0054DC  EF69  F02A         	goto	l133
 12239   0054E0                     u8470:
 12240   0054E0                     
 12241                           ;lcd.c: 97:     SSP2IF = 0;
 12242   0054E0  9EA4               	bcf	4004,7,c	;volatile
 12243   0054E2                     
 12244                           ;lcd.c: 99:     LCD_Send(0x7C);
 12245   0054E2  0E7C               	movlw	124
 12246   0054E4  ECCA  F02A         	call	_LCD_Send
 12247                           
 12248                           ;lcd.c: 100:     LCD_Send(0x80);
 12249   0054E8  0E80               	movlw	128
 12250   0054EA  ECCA  F02A         	call	_LCD_Send
 12251                           
 12252                           ;lcd.c: 101:     LCD_Send(0x01);
 12253   0054EE  0E01               	movlw	1
 12254   0054F0  ECCA  F02A         	call	_LCD_Send
 12255   0054F4                     
 12256                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
 12257   0054F4  846B               	bsf	107,2,c	;volatile
 12258   0054F6                     l136:
 12259   0054F6  B46B               	btfsc	107,2,c	;volatile
 12260   0054F8  EF80  F02A         	goto	u8481
 12261   0054FC  EF82  F02A         	goto	u8480
 12262   005500                     u8481:
 12263   005500  EF7B  F02A         	goto	l136
 12264   005504                     u8480:
 12265   005504  0012               	return		;funcret
 12266   005506                     __end_of_LCD_Clear:
 12267                           	callstack 0
 12268                           
 12269 ;; *************** function _LCD_Init *****************
 12270 ;; Defined at:
 12271 ;;		line 3 in file "lcd.c"
 12272 ;; Parameters:    Size  Location     Type
 12273 ;;		None
 12274 ;; Auto vars:     Size  Location     Type
 12275 ;;		None
 12276 ;; Return value:  Size  Location     Type
 12277 ;;                  1    wreg      void 
 12278 ;; Registers used:
 12279 ;;		wreg, status,2, cstack
 12280 ;; Tracked objects:
 12281 ;;		On entry : 0/0
 12282 ;;		On exit  : 0/0
 12283 ;;		Unchanged: 0/0
 12284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12289 ;;Total ram usage:        1 bytes
 12290 ;; Hardware stack levels used: 1
 12291 ;; Hardware stack levels required when called: 2
 12292 ;; This function calls:
 12293 ;;		_LCD_Send
 12294 ;; This function is called by:
 12295 ;;		_main
 12296 ;; This function uses a non-reentrant model
 12297 ;;
 12298                           
 12299                           	psect	text50
 12300   004C62                     __ptext50:
 12301                           	callstack 0
 12302   004C62                     _LCD_Init:
 12303                           	callstack 28
 12304   004C62                     
 12305                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 12306   004C62  010F               	movlb	15	; () banked
 12307   004C64  913B               	bcf	59,0,b	;volatile
 12308                           
 12309                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 12310   004C66  933B               	bcf	59,1,b	;volatile
 12311                           
 12312                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 12313   004C68  8095               	bsf	149,0,c	;volatile
 12314                           
 12315                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 12316   004C6A  8295               	bsf	149,1,c	;volatile
 12317                           
 12318                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 12319   004C6C  9092               	bcf	146,0,c	;volatile
 12320                           
 12321                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 12322   004C6E  8089               	bsf	137,0,c	;volatile
 12323   004C70                     
 12324                           ; BSR set to: 15
 12325                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 12326   004C70  506C               	movf	108,w,c	;volatile
 12327   004C72  0BF0               	andlw	-16
 12328   004C74  0908               	iorlw	8
 12329   004C76  6E6C               	movwf	108,c	;volatile
 12330                           
 12331                           ;lcd.c: 15:     SSP2ADD = 19;
 12332   004C78  0E13               	movlw	19
 12333   004C7A  6E6E               	movwf	110,c	;volatile
 12334   004C7C                     
 12335                           ; BSR set to: 15
 12336                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 12337   004C7C  8A6C               	bsf	108,5,c	;volatile
 12338   004C7E                     
 12339                           ; BSR set to: 15
 12340                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 12341   004C7E  0E34               	movlw	52
 12342   004C80  6E04               	movwf	??_LCD_Init^0,c
 12343   004C82  0EF2               	movlw	242
 12344   004C84                     u9277:
 12345   004C84  2EE8               	decfsz	wreg,f,c
 12346   004C86  D7FE               	bra	u9277
 12347   004C88  2E04               	decfsz	??_LCD_Init^0,f,c
 12348   004C8A  D7FC               	bra	u9277
 12349   004C8C                     
 12350                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 12351   004C8C  806B               	bsf	107,0,c	;volatile
 12352   004C8E                     l101:
 12353   004C8E  B06B               	btfsc	107,0,c	;volatile
 12354   004C90  EF4C  F026         	goto	u8701
 12355   004C94  EF4E  F026         	goto	u8700
 12356   004C98                     u8701:
 12357   004C98  EF47  F026         	goto	l101
 12358   004C9C                     u8700:
 12359   004C9C                     
 12360                           ;lcd.c: 22:     SSP2IF = 0;
 12361   004C9C  9EA4               	bcf	4004,7,c	;volatile
 12362   004C9E                     
 12363                           ;lcd.c: 27:     LCD_Send(0x7C);
 12364   004C9E  0E7C               	movlw	124
 12365   004CA0  ECCA  F02A         	call	_LCD_Send
 12366                           
 12367                           ;lcd.c: 28:     LCD_Send(0x80);
 12368   004CA4  0E80               	movlw	128
 12369   004CA6  ECCA  F02A         	call	_LCD_Send
 12370                           
 12371                           ;lcd.c: 29:     LCD_Send(0x38);
 12372   004CAA  0E38               	movlw	56
 12373   004CAC  ECCA  F02A         	call	_LCD_Send
 12374                           
 12375                           ;lcd.c: 30:     LCD_Send(0x80);
 12376   004CB0  0E80               	movlw	128
 12377   004CB2  ECCA  F02A         	call	_LCD_Send
 12378                           
 12379                           ;lcd.c: 31:     LCD_Send(0x39);
 12380   004CB6  0E39               	movlw	57
 12381   004CB8  ECCA  F02A         	call	_LCD_Send
 12382                           
 12383                           ;lcd.c: 32:     LCD_Send(0x80);
 12384   004CBC  0E80               	movlw	128
 12385   004CBE  ECCA  F02A         	call	_LCD_Send
 12386                           
 12387                           ;lcd.c: 33:     LCD_Send(0x17);
 12388   004CC2  0E17               	movlw	23
 12389   004CC4  ECCA  F02A         	call	_LCD_Send
 12390                           
 12391                           ;lcd.c: 34:     LCD_Send(0x80);
 12392   004CC8  0E80               	movlw	128
 12393   004CCA  ECCA  F02A         	call	_LCD_Send
 12394                           
 12395                           ;lcd.c: 35:     LCD_Send(0x7A);
 12396   004CCE  0E7A               	movlw	122
 12397   004CD0  ECCA  F02A         	call	_LCD_Send
 12398                           
 12399                           ;lcd.c: 36:     LCD_Send(0x80);
 12400   004CD4  0E80               	movlw	128
 12401   004CD6  ECCA  F02A         	call	_LCD_Send
 12402                           
 12403                           ;lcd.c: 37:     LCD_Send(0x5E);
 12404   004CDA  0E5E               	movlw	94
 12405   004CDC  ECCA  F02A         	call	_LCD_Send
 12406                           
 12407                           ;lcd.c: 38:     LCD_Send(0x80);
 12408   004CE0  0E80               	movlw	128
 12409   004CE2  ECCA  F02A         	call	_LCD_Send
 12410                           
 12411                           ;lcd.c: 39:     LCD_Send(0x6B);
 12412   004CE6  0E6B               	movlw	107
 12413   004CE8  ECCA  F02A         	call	_LCD_Send
 12414                           
 12415                           ;lcd.c: 40:     LCD_Send(0x80);
 12416   004CEC  0E80               	movlw	128
 12417   004CEE  ECCA  F02A         	call	_LCD_Send
 12418                           
 12419                           ;lcd.c: 41:     LCD_Send(0x0C);
 12420   004CF2  0E0C               	movlw	12
 12421   004CF4  ECCA  F02A         	call	_LCD_Send
 12422                           
 12423                           ;lcd.c: 42:     LCD_Send(0x80);
 12424   004CF8  0E80               	movlw	128
 12425   004CFA  ECCA  F02A         	call	_LCD_Send
 12426                           
 12427                           ;lcd.c: 43:     LCD_Send(0x01);
 12428   004CFE  0E01               	movlw	1
 12429   004D00  ECCA  F02A         	call	_LCD_Send
 12430                           
 12431                           ;lcd.c: 44:     LCD_Send(0x80);
 12432   004D04  0E80               	movlw	128
 12433   004D06  ECCA  F02A         	call	_LCD_Send
 12434                           
 12435                           ;lcd.c: 45:     LCD_Send(0x06);
 12436   004D0A  0E06               	movlw	6
 12437   004D0C  ECCA  F02A         	call	_LCD_Send
 12438                           
 12439                           ;lcd.c: 46:     LCD_Send(0x80);
 12440   004D10  0E80               	movlw	128
 12441   004D12  ECCA  F02A         	call	_LCD_Send
 12442                           
 12443                           ;lcd.c: 47:     LCD_Send(0x02);
 12444   004D16  0E02               	movlw	2
 12445   004D18  ECCA  F02A         	call	_LCD_Send
 12446   004D1C                     
 12447                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 12448   004D1C  846B               	bsf	107,2,c	;volatile
 12449   004D1E                     l104:
 12450   004D1E  B46B               	btfsc	107,2,c	;volatile
 12451   004D20  EF94  F026         	goto	u8711
 12452   004D24  EF96  F026         	goto	u8710
 12453   004D28                     u8711:
 12454   004D28  EF8F  F026         	goto	l104
 12455   004D2C                     u8710:
 12456   004D2C                     
 12457                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 12458   004D2C  0E34               	movlw	52
 12459   004D2E  6E04               	movwf	??_LCD_Init^0,c
 12460   004D30  0EF2               	movlw	242
 12461   004D32                     u9287:
 12462   004D32  2EE8               	decfsz	wreg,f,c
 12463   004D34  D7FE               	bra	u9287
 12464   004D36  2E04               	decfsz	??_LCD_Init^0,f,c
 12465   004D38  D7FC               	bra	u9287
 12466   004D3A  0012               	return		;funcret
 12467   004D3C                     __end_of_LCD_Init:
 12468                           	callstack 0
 12469                           
 12470 ;; *************** function _LCD_Send *****************
 12471 ;; Defined at:
 12472 ;;		line 85 in file "lcd.c"
 12473 ;; Parameters:    Size  Location     Type
 12474 ;;  data            1    wreg     unsigned char 
 12475 ;; Auto vars:     Size  Location     Type
 12476 ;;  data            1    2[COMRAM] unsigned char 
 12477 ;; Return value:  Size  Location     Type
 12478 ;;                  1    wreg      void 
 12479 ;; Registers used:
 12480 ;;		wreg
 12481 ;; Tracked objects:
 12482 ;;		On entry : 0/0
 12483 ;;		On exit  : 0/0
 12484 ;;		Unchanged: 0/0
 12485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12487 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12489 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12490 ;;Total ram usage:        1 bytes
 12491 ;; Hardware stack levels used: 1
 12492 ;; Hardware stack levels required when called: 1
 12493 ;; This function calls:
 12494 ;;		Nothing
 12495 ;; This function is called by:
 12496 ;;		_LCD_Init
 12497 ;;		_LCD_ShowString
 12498 ;;		_LCD_Clear
 12499 ;; This function uses a non-reentrant model
 12500 ;;
 12501                           
 12502                           	psect	text51
 12503   005594                     __ptext51:
 12504                           	callstack 0
 12505   005594                     _LCD_Send:
 12506                           	callstack 27
 12507                           
 12508                           ;incstack = 0
 12509                           ;LCD_Send@data stored from wreg
 12510   005594  6E03               	movwf	LCD_Send@data^0,c
 12511   005596                     
 12512                           ;lcd.c: 87:     SSP2BUF = data;
 12513   005596  C003  FF6F         	movff	LCD_Send@data,3951	;volatile
 12514   00559A                     l124:
 12515   00559A  B06D               	btfsc	109,0,c	;volatile
 12516   00559C  EFD2  F02A         	goto	u8331
 12517   0055A0  EFD4  F02A         	goto	u8330
 12518   0055A4                     u8331:
 12519   0055A4  EFCD  F02A         	goto	l124
 12520   0055A8                     u8330:
 12521   0055A8                     l127:
 12522   0055A8  AEA4               	btfss	4004,7,c	;volatile
 12523   0055AA  EFD9  F02A         	goto	u8341
 12524   0055AE  EFDB  F02A         	goto	u8340
 12525   0055B2                     u8341:
 12526   0055B2  EFD4  F02A         	goto	l127
 12527   0055B6                     u8340:
 12528   0055B6                     
 12529                           ;lcd.c: 90:     SSP2IF = 0;
 12530   0055B6  9EA4               	bcf	4004,7,c	;volatile
 12531   0055B8  0012               	return		;funcret
 12532   0055BA                     __end_of_LCD_Send:
 12533                           	callstack 0
 12534                           
 12535 ;; *************** function _ISR *****************
 12536 ;; Defined at:
 12537 ;;		line 11 in file "interrupt.c"
 12538 ;; Parameters:    Size  Location     Type
 12539 ;;		None
 12540 ;; Auto vars:     Size  Location     Type
 12541 ;;		None
 12542 ;; Return value:  Size  Location     Type
 12543 ;;                  1    wreg      void 
 12544 ;; Registers used:
 12545 ;;		wreg, status,2
 12546 ;; Tracked objects:
 12547 ;;		On entry : 0/0
 12548 ;;		On exit  : 0/0
 12549 ;;		Unchanged: 0/0
 12550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12553 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12555 ;;Total ram usage:        2 bytes
 12556 ;; Hardware stack levels used: 1
 12557 ;; This function calls:
 12558 ;;		Nothing
 12559 ;; This function is called by:
 12560 ;;		Interrupt level 2
 12561 ;; This function uses a non-reentrant model
 12562 ;;
 12563                           
 12564                           	psect	intcode
 12565   000008                     __pintcode:
 12566                           	callstack 0
 12567   000008                     _ISR:
 12568                           	callstack 21
 12569                           
 12570                           ;incstack = 0
 12571   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12572   00000A                     
 12573                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 12574   00000A  A09D               	btfss	3997,0,c	;volatile
 12575   00000C  EF0A  F000         	goto	i2u611_41
 12576   000010  EF0C  F000         	goto	i2u611_40
 12577   000014                     i2u611_41:
 12578   000014  EF45  F000         	goto	i2l345
 12579   000018                     i2u611_40:
 12580   000018  A09E               	btfss	3998,0,c	;volatile
 12581   00001A  EF11  F000         	goto	i2u612_41
 12582   00001E  EF13  F000         	goto	i2u612_40
 12583   000022                     i2u612_41:
 12584   000022  EF45  F000         	goto	i2l345
 12585   000026                     i2u612_40:
 12586   000026  0101               	movlb	1	; () banked
 12587   000028  5121               	movf	_GPIOIE& (0+255),w,b
 12588   00002A  B4D8               	btfsc	status,2,c
 12589   00002C  EF1A  F000         	goto	i2u613_41
 12590   000030  EF1C  F000         	goto	i2u613_40
 12591   000034                     i2u613_41:
 12592   000034  EF45  F000         	goto	i2l345
 12593   000038                     i2u613_40:
 12594   000038                     
 12595                           ; BSR set to: 1
 12596                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 12597   000038  A480               	btfss	128,2,c	;volatile
 12598   00003A  EF21  F000         	goto	i2u614_41
 12599   00003E  EF23  F000         	goto	i2u614_40
 12600   000042                     i2u614_41:
 12601   000042  EF40  F000         	goto	i2l340
 12602   000046                     i2u614_40:
 12603   000046                     
 12604                           ; BSR set to: 1
 12605                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 12606   000046  0E03               	movlw	3
 12607   000048  6E02               	movwf	(??_ISR+1)^0,c
 12608   00004A  0E08               	movlw	8
 12609   00004C  6E01               	movwf	??_ISR^0,c
 12610   00004E  0E77               	movlw	119
 12611   000050                     i2u929_47:
 12612   000050  2EE8               	decfsz	wreg,f,c
 12613   000052  D7FE               	bra	i2u929_47
 12614   000054  2E01               	decfsz	??_ISR^0,f,c
 12615   000056  D7FC               	bra	i2u929_47
 12616   000058  2E02               	decfsz	(??_ISR+1)^0,f,c
 12617   00005A  D7FA               	bra	i2u929_47
 12618   00005C  0000               	nop	
 12619   00005E                     
 12620                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 12621   00005E  A480               	btfss	128,2,c	;volatile
 12622   000060  EF34  F000         	goto	i2u615_41
 12623   000064  EF36  F000         	goto	i2u615_40
 12624   000068                     i2u615_41:
 12625   000068  EF40  F000         	goto	i2l340
 12626   00006C                     i2u615_40:
 12627   00006C                     i2l342:
 12628   00006C  B480               	btfsc	128,2,c	;volatile
 12629   00006E  EF3B  F000         	goto	i2u616_41
 12630   000072  EF3D  F000         	goto	i2u616_40
 12631   000076                     i2u616_41:
 12632   000076  EF36  F000         	goto	i2l342
 12633   00007A                     i2u616_40:
 12634   00007A                     
 12635                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 12636   00007A  0E00               	movlw	0
 12637   00007C  0100               	movlb	0	; () banked
 12638   00007E  6FFF               	movwf	_keepStateGPIO& (0+255),b
 12639   000080                     i2l340:
 12640                           
 12641                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 12642   000080  0E9E               	movlw	158
 12643   000082  6ECF               	movwf	207,c	;volatile
 12644   000084  0E58               	movlw	88
 12645   000086  6ECE               	movwf	206,c	;volatile
 12646   000088                     
 12647                           ;interrupt.c: 23:         TMR1IF = 0;
 12648   000088  909E               	bcf	3998,0,c	;volatile
 12649   00008A                     i2l345:
 12650   00008A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12651   00008C  0011               	retfie		f
 12652   00008E                     __end_of_ISR:
 12653                           	callstack 0
 12654                           
 12655                           	psect	rparam
 12656   000000                     
 12657                           	psect	temp
 12658   00005D                     btemp:
 12659                           	callstack 0
 12660   00005D                     	ds	1
 12661   000000                     int$flags	set	btemp
 12662   000000                     wtemp8	set	btemp+1
 12663   000000                     ttemp5	set	btemp+1
 12664   000000                     ttemp6	set	btemp+4
 12665   000000                     ttemp7	set	btemp+8
 12666                           
 12667                           	psect	config
 12668                           
 12669                           ; Padding undefined space
 12670   300000                     	org	3145728
 12671   300000  FF                 	db	255
 12672                           
 12673                           ;Config register CONFIG1H @ 0x300001
 12674                           ;	Oscillator Selection bits
 12675                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 12676                           ;	4X PLL Enable
 12677                           ;	PLLCFG = ON, Oscillator multiplied by 4
 12678                           ;	Primary clock enable bit
 12679                           ;	PRICLKEN = 0x1, unprogrammed default
 12680                           ;	Fail-Safe Clock Monitor Enable bit
 12681                           ;	FCMEN = 0x0, unprogrammed default
 12682                           ;	Internal/External Oscillator Switchover bit
 12683                           ;	IESO = 0x0, unprogrammed default
 12684   300001                     	org	3145729
 12685   300001  33                 	db	51
 12686                           
 12687                           ;Config register CONFIG2L @ 0x300002
 12688                           ;	unspecified, using default values
 12689                           ;	Power-up Timer Enable bit
 12690                           ;	PWRTEN = 0x1, unprogrammed default
 12691                           ;	Brown-out Reset Enable bits
 12692                           ;	BOREN = 0x3, unprogrammed default
 12693                           ;	Brown Out Reset Voltage bits
 12694                           ;	BORV = 0x3, unprogrammed default
 12695   300002                     	org	3145730
 12696   300002  1F                 	db	31
 12697                           
 12698                           ;Config register CONFIG2H @ 0x300003
 12699                           ;	Watchdog Timer Enable bits
 12700                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 12701                           ;	Watchdog Timer Postscale Select bits
 12702                           ;	WDTPS = 0xF, unprogrammed default
 12703   300003                     	org	3145731
 12704   300003  3C                 	db	60
 12705                           tosu	equ	0xFFF
 12706                           tosh	equ	0xFFE
 12707                           tosl	equ	0xFFD
 12708                           stkptr	equ	0xFFC
 12709                           pclatu	equ	0xFFB
 12710                           pclath	equ	0xFFA
 12711                           pcl	equ	0xFF9
 12712                           tblptru	equ	0xFF8
 12713                           tblptrh	equ	0xFF7
 12714                           tblptrl	equ	0xFF6
 12715                           tablat	equ	0xFF5
 12716                           prodh	equ	0xFF4
 12717                           prodl	equ	0xFF3
 12718                           indf0	equ	0xFEF
 12719                           postinc0	equ	0xFEE
 12720                           postdec0	equ	0xFED
 12721                           preinc0	equ	0xFEC
 12722                           plusw0	equ	0xFEB
 12723                           fsr0h	equ	0xFEA
 12724                           fsr0l	equ	0xFE9
 12725                           wreg	equ	0xFE8
 12726                           indf1	equ	0xFE7
 12727                           postinc1	equ	0xFE6
 12728                           postdec1	equ	0xFE5
 12729                           preinc1	equ	0xFE4
 12730                           plusw1	equ	0xFE3
 12731                           fsr1h	equ	0xFE2
 12732                           fsr1l	equ	0xFE1
 12733                           bsr	equ	0xFE0
 12734                           indf2	equ	0xFDF
 12735                           postinc2	equ	0xFDE
 12736                           postdec2	equ	0xFDD
 12737                           preinc2	equ	0xFDC
 12738                           plusw2	equ	0xFDB
 12739                           fsr2h	equ	0xFDA
 12740                           fsr2l	equ	0xFD9
 12741                           status	equ	0xFD8

Data Sizes:
    Strings     180
    Constant    64
    Data        32
    BSS         120
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160    156     160
    BANK1           256     45     191
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK0[17]), STR_1(CODE[17]), 
		 -> STR_2(CODE[17]), STR_3(CODE[17]), STR_4(CODE[17]), STR_5(CODE[17]), 
		 -> STR_6(CODE[17]), STR_7(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    moveDisplay$3784	PTR unsigned char  size(1) Largest target is 6
		 -> STR_10(CODE[5]), STR_11(CODE[4]), STR_12(CODE[4]), STR_13(CODE[4]), 
		 -> STR_14(CODE[5]), STR_15(CODE[6]), STR_16(CODE[1]), STR_9(CODE[5]), 

    moveDisplay@F6954	PTR unsigned char [8] size(1) Largest target is 6
		 -> STR_10(CODE[5]), STR_11(CODE[4]), STR_12(CODE[4]), STR_13(CODE[4]), 
		 -> STR_14(CODE[5]), STR_15(CODE[6]), STR_16(CODE[1]), STR_9(CODE[5]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(1) Largest target is 6
		 -> STR_10(CODE[5]), STR_11(CODE[4]), STR_12(CODE[4]), STR_13(CODE[4]), 
		 -> STR_14(CODE[5]), STR_15(CODE[6]), STR_16(CODE[1]), STR_9(CODE[5]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_8(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6966	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S3204$buffer	PTR unsigned char  size(2) Largest target is 0

    S3204$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_17(CODE[6]), STR_18(CODE[5]), STR_19(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK0[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_10(CODE[5]), STR_11(CODE[4]), 
		 -> STR_12(CODE[4]), STR_13(CODE[4]), STR_14(CODE[5]), STR_15(CODE[6]), 
		 -> STR_16(CODE[1]), STR_26(CODE[7]), STR_9(CODE[5]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 6
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_10(CODE[5]), STR_11(CODE[4]), 
		 -> STR_12(CODE[4]), STR_13(CODE[4]), STR_14(CODE[5]), STR_15(CODE[6]), 
		 -> STR_16(CODE[1]), STR_9(CODE[5]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_20(CODE[4]), STR_23(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 19
		 -> STR_17(CODE[6]), STR_18(CODE[5]), STR_19(CODE[19]), STR_8(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 19
		 -> STR_17(CODE[6]), STR_18(CODE[5]), STR_19(CODE[19]), STR_8(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_17(CODE[6]), STR_18(CODE[5]), STR_19(CODE[19]), STR_8(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runPWM->___awdiv
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _runDAC->___fltol
    ___sindf->___fladd
    ___rem_pio2f->___flsub
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___flsub
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___cosdf
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_runADC
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___rem_pio2f->___flneg
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  272040
                                            154 BANK0      2     2      0
                                             43 BANK1      2     2      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGPIO
                             _runPWM
 ---------------------------------------------------------------------------------
 (1) _runPWM                                               4     4      0     944
                                             10 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             33    33      0     501
                                              3 COMRAM    32    32      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0  142648
                                            102 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   67434
                                             60 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   15652
                                             82 COMRAM     4     0      4
                                              0 BANK0     28    28      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   27000
                                             28 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   15736
                                             82 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     3      3   54903
                                             98 BANK0      4     1      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0     130
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   69059
                                            122 BANK0     32    32      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     926
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         47    46      1   57512
                                            122 BANK0      4     3      1
                                              0 BANK1     43    43      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    15     11   55578
                                             98 BANK0     24    13     11
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   54708
                                             93 BANK0      5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     8      4   53908
                                             81 BANK0     12     8      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2110
                                             12 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1362
                                              8 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   40258
                                             28 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3     463
                                              2 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             66 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     877
                                             82 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    8147
                                             82 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    6862
                                             66 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     875
                                             24 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    7913
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             41 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    7043
                                             28 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4693
                                             19 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1428
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                              8 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    1126
                                              3 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      31
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              3 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *
   _runPWM
     ___awdiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2D      BF       7       74.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9C      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRlllllh     21      0       0      53        0.0%
BITBIGSFRlllllh     10      0       0      52        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRlllllh      C      0       0      54        0.0%
BITBIGSFRhhllhl      A      0       0      44        0.0%
BITBIGSFRhll         7      0       0      48        0.0%
BITBIGSFRhhllll      6      0       0      46        0.0%
BITBIGSFRlllhl       6      0       0      50        0.0%
BITBIGSFRhlh         5      0       0      47        0.0%
BITBIGSFRllh         5      0       0      49        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhllhh      1      0       0      43        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlllh      1      0       0      45        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      55        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BB      56        0.0%
DATA                 0      0     1BB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Apr 28 21:11:41 2024

              ___fldiv@aexp 0042                ___fldiv@bexp 0041                ___fldiv@sign 003A  
                        _C0 102D                          _C1 1029                          _C2 1025  
                        _C3 1021                          l52 3614                          l44 3476  
                        l54 351E                          l49 34CA                          _S1 100D  
                        _S2 1009                          _S3 1005                          _S4 1001  
              ___awdiv@sign 0008         ___wmul@multiplicand 0005                         l101 4C8E  
                       l110 4ECE                         l103 4C9C                         l104 4D1E  
                       l112 4EDC                         l121 4F7A                         l201 37F6  
                       l130 55B8                         l114 4F1C                         l107 4D3A  
                       l124 559A                         l220 5456                         l212 388E  
                       l204 37F8                         l133 54D2                         l117 4F6A  
                       l221 545A                         l301 5626                         l118 4F6C  
                       l127 55A8                         l135 54E0                         l215 5434  
                       l136 54F6                         l232 55F8                         l304 5618  
                       l320 4706                         l129 55B6                         l217 5442  
                       l218 5448                         l314 46DE                         l139 5504  
                       l235 560A                         l307 565E                         l430 47B0  
                       l319 46F0                         l423 4728                         l257 4956  
                       l425 4736                         l442 4844                         l426 4834  
                       l292 5650                         l445 5592                         l381 3FA6  
                       l429 47EE                         l710 4B1C                         l390 40CC  
                       l438 4822                         l295 5642                         l704 50D4  
                       l376 40BA                         l386 40A6                         l378 3F0C  
                       l298 5634                         l715 4B62                         l742 4A5E  
                       l719 54CE                         l676 4EC8                         l689 502A  
                       l973 21E0                         l990 22FA                         l982 24B0  
                       l974 21CE                         l975 2194                         _GIE 7F97  
                       l999 23CA                         _PR2 0FBB                         _ISR 0008  
                       _abs 553A                         _pad 517C                ___awmod@sign 0008  
                       tosl 0FFD                         wreg 0FE8                  _TXSTA1bits 0FAC  
              ___flmul@aexp 001E                ___flmul@bexp 0023                ___flmul@sign 001D  
              ___flmul@temp 0028                ___flmul@prod 0024                        ?_ISR 0001  
              ___fltol@exp1 0061                        l1000 23B8                        l1100 4124  
                      l1015 5396                        l1103 4280                        l1040 3318  
                      l1032 321E                        l1041 3306                        l1114 4218  
                      l1027 33FA                        l1123 541C                        l1107 41BC  
                      ?_abs 0009                        l1220 18CA                        l1029 325A  
                      l1038 32A0                        l1063 28DA                        l1313 5554  
                      l1153 51B6                        l1162 4456                        l1066 276C  
                      l1322 3CD2                        l1059 2576                        l1243 43DC  
                      l1316 556C                        l1156 51F8                        l1164 445E  
                      l1076 289C                        l1068 27E4                        l1308 4C60  
                      l1252 5172                        l1236 432A                        l1165 44A4  
                      l1069 27D2                        l1325 3C16                        l1158 521C  
                      l1342 52C2                        l1190 1480                        l1422 3ED0  
                      l1176 45A2                        l1336 5272                        l1192 12C6  
                      l1256 517A                        l1248 4426                        l1272 2C9E  
                      l1354 4E04                        l1362 53DA                        l1187 1AE6  
                      l1451 3AC0                        l1462 5494                        l1438 2EC2  
                      l1439 3060                        l1456 5538                        l1369 55F4  
                      l1298 5350                        l1388 1FF0                        l5110 4D4E  
                      l5104 55F8                        l5112 4D60                        l5200 2132  
                      l6000 1406                        l5106 5606                        l5114 4D6A  
                      l5210 21A2                        l5202 2136                        l5130 201E  
                      l5122 1FF2                        l6010 1496                        l6002 140E  
                      l5116 4D88                        l5108 4D3C                        l5300 2430  
                      l5220 21CC                        l5212 21AE                        l5204 2160  
                      l5140 2058                        l5132 202E                        l5124 1FFE  
                      l6100 1926                        l6020 14CC                        l6012 14A2  
                      l5118 4DBE                        l5310 2482                        l5302 2440  
                      l5230 2222                        l5222 21EE                        l5214 21B2  
                      l5206 217C                        l5150 2086                        l5142 205E  
                      l5134 203E                        l5126 200C                        l6110 195A  
                      l6102 192C                        l6030 1514                        l6022 14DA  
                      l6014 14AC                        l6006 144E                        l5400 31C2  
                      l5320 24A0                        l5312 2488                        l5304 2450  
                      l5240 225C                        l5232 2230                        l5224 21FE  
                      l5216 21C0                        l5208 218C                        l5160 20BA  
                      l5152 2088                        l5144 2070                        l5136 2040  
                      l5128 200E                        l6120 1A10                        l6112 19B2  
                      l6104 193E                        l6040 1628                        l6032 1524  
                      l6024 14F2                        l6016 14B4                        l6008 1488  
                      l6200 4134                        l5330 53BA                        l5410 320E  
                      l5402 31D2                        l5314 248A                        l5306 2470  
                      l5250 22C8                        l5242 225E                        l5234 223E  
                      l5218 21C2                        l5170 20F6                        l5154 2098  
                      l5162 20C2                        l5146 2072                        l5138 2048  
                      l6130 1A80                        l6122 1A2C                        l6114 19E6  
                      l6106 1950                        l6050 16C8                        l6034 1538  
                      l6042 162E                        l6026 1504                        l6018 14BA  
                      l6210 4172                        l6202 414A                        l5324 5398  
                      l5420 3258                        l5412 321C                        l5404 31E2  
                      l5340 306E                        l5500 2530                        l5316 2490  
                      l5308 2474                        l5260 2320                        l5252 22CA  
                      l5244 2268                        l5236 224A                        l5228 2212  
                      l5180 210A                        l5172 20FA                        l5164 20D2  
                      l5156 20A8                        l5148 2078                        l6132 1A98  
                      l6124 1A34                        l6116 19EE                        l6108 1954  
                      l6060 17A4                        l6052 16FA                        l6044 164C  
                      l6036 159C                        l6028 150C                        l5332 556E  
                      l6300 2AD0                        l6220 41FA                        l6212 41A4  
                      l5326 53A4                        l5430 329E                        l5422 326A  
                      l5414 3228                        l5406 31EA                        l5350 30AE  
                      l5342 307C                        l5510 2586                        l5502 2540  
                      l5318 249E                        l5270 234E                        l5254 22DA  
                      l5238 224E                        l5246 226E                        l5190 211E  
                      l5182 210E                        l5174 20FE                        l5166 20E4  
                      l5158 20B8                        l6134 1AA8                        l6126 1A42  
                      l6118 19F2                        l6070 1806                        l6062 17AA  
                      l6054 170A                        l6046 1680                        l6038 15F4  
                      l5334 558A                        l6150 42B8                        l6142 4282  
                      l6302 2AFA                        l6230 4250                        l6222 4208  
                      l6214 41A6                        l6206 415E                        ?_pad 0014  
                      l5328 53B6                        l5440 32FE                        l5424 3280  
                      l5432 32B0                        l5416 3246                        l5408 31FA  
                      l5360 30D4                        l5352 30B0                        l5344 307E  
                      l5600 28C6                        l5520 25C0                        l5512 2596  
                      l5504 2550                        l5272 235C                        l5264 2334  
                      l5280 237A                        l5248 2294                        l5256 22EA  
                      l5192 2122                        l5184 2112                        l5176 2102  
                      l5168 20F2                        l6136 1ABE                        l6128 1A72  
                      l6080 18A0                        l6072 180E                        l6064 17DE  
                      l6056 171A                        l6048 16B2                        l6160 434E  
                      l6152 42F6                        l6144 429C                        l6320 2B6A  
                      l6312 2B40                        l6240 28DC                        l6232 4260  
                      l6224 4226                        l6216 41B2                        l6208 4166  
                      l6400 2E04                        l5450 336C                        l5434 32BE  
                      l5426 3286                        l5418 3248                        l5370 3114  
                      l5362 30E2                        l5346 308E                        l5354 30B8  
                      l5338 3062                        l5602 28CA                        l5530 2612  
                      l5522 25D6                        l5506 2560                        l5274 2364  
                      l5266 233E                        l5258 2310                        l5282 2388  
                      l5194 2126                        l5186 2116                        l5178 2106  
                      l6138 1AC6                        l6090 18FE                        l6082 18C0  
                      l6074 1814                        l6066 17F2                        l6058 174E  
                      l6162 4362                        l6170 43C2                        l6154 4304  
                      l6146 42A8                        l6330 2BD8                        l6314 2B4A  
                      l6306 2B08                        l6250 2920                        l6242 2900  
                      l6234 426E                        l6226 4228                        l6218 41EE  
                      l6402 2E64                        l6410 2ECE                        l5620 4E24  
                      l5612 4E06                        l5460 33D6                        l5444 3328  
                      l5452 3370                        l5436 32C2                        l5428 3290  
                      l5380 3154                        l5372 3116                        l5364 30E4  
                      l5356 30C8                        l5348 309E                        l5700 50A8  
                      l5540 2658                        l5532 2620                        l5524 25E2  
                      l5516 25AA                        l5508 2566                        l5292 23DA  
                      l5284 238C                        l5276 2368                        l5268 234C  
                      l5196 212A                        l5188 211A                        l6092 1904  
                      l6084 18DC                        l6076 181C                        l6068 17F6  
                      l6180 50D6                        l6164 4366                        l6156 4322  
                      l6148 42B4                        l6316 2B5C                        l6324 2B72  
                      l6308 2B18                        l6252 2922                        l6260 2954  
                      l6244 2908                        l6236 4270                        l6228 422C  
                      l6420 3034                        l6412 2EF2                        l6404 2E74  
                      l6500 1C70                        l6430 4ECC                        l5630 4E58  
                      l5622 4E32                        l5614 4E0A                        l5462 33DA  
                      l5454 338A                        l5446 3334                        l5438 32D0  
                      l5390 3184                        l5382 315C                        l5366 30F4  
                      l5374 311E                        l5358 30CE                        l5702 50CC  
                      l5710 4A8E                        l5550 26C6                        l5542 2672  
                      l5534 262C                        l5526 25FA                        l5518 25B6  
                      l5294 23E6                        l5286 239A                        l5278 2378  
                      l5198 212E                        l5606 5352                        l6094 190C  
                      l6086 18EA                        l6078 1828                        l6190 5144  
                      l6182 50DE                        l6174 43F0                        l6166 4388  
                      l6334 2C00                        l6318 2B62                        l6326 2B90  
                      l6270 29B4                        l6262 2964                        l6254 292E  
                      l6246 2914                        l6350 2C78                        l6422 304C  
                      l6414 2F5E                        l6406 2EA6                        l6510 1D3C  
                      l6440 4F04                        l6432 4ECC                        l5640 4E92  
                      l5632 4E60                        l5624 4E3A                        l5616 4E18  
                      l5800 5548                        l5464 33E8                        l5456 33A0  
                      l5448 3342                        l5392 3184                        l5384 3160  
                      l5376 312E                        l5368 3104                        l5704 50D2  
                      l5720 4AFC                        l5712 4A9E                        l5560 275C  
                      l5552 26F0                        l5544 2682                        l5536 263C  
                      l5528 2606                        l5480 24CC                        l5296 23F4  
                      l5288 23B0                        l5608 5362                        l6096 191C  
                      l6088 18FA                        l6184 5100                        l6192 514C  
                      l6176 4404                        l6168 43BE                        l6344 2C52  
                      l6336 2C16                        l6328 2BB0                        l6280 2A14  
                      l6272 29BC                        l6264 2978                        l6248 2918  
                      l6360 5528                        l6416 2F84                        l6520 1DB0  
                      l6504 1C98                        l6600 5654                        l6610 4C8C  
                      l6602 4C62                        l6450 4F26                        l6442 4F16  
                      l6434 4EDE                        l5650 4EB8                        l5642 4E9A  
                      l5634 4E68                        l5626 4E3E                        l5618 4E20  
                      l5466 33EE                        l5458 33BA                        l5378 3144  
                      l5722 4B0A                        l5714 4ACC                        l5570 279C  
                      l5562 276A                        l5554 2726                        l5546 269E  
                      l5538 2648                        l5490 2504                        l5482 24CE  
                      l5730 5496                        l5298 242E                        l5810 4BF6  
                      l5802 4B64                        l6098 1920                        l6186 5108  
                      l6178 4408                        l6338 2C24                        l6346 2C6A  
                      l6290 2A52                        l6282 2A2C                        l6274 29D0  
                      l6266 2988                        l6258 2936                        l6370 532A  
                      l6194 40D0                        l6418 2FDC                        l6506 1CA8  
                      l6514 1D64                        l6364 5596                        l6612 4C9E  
                      l6604 4C70                        l6460 54F4                        l6452 4F58  
                      l6444 4F22                        l6436 4EEA                        l5652 4EC0  
                      l5644 4E9C                        l5636 4E76                        l5628 4E46  
                      l5660 4F8E                        l5900 44F4                        l5468 33F0  
                      l5396 3198                        l5388 3174                        l5724 4B5A  
                      l5716 4ADC                        l5708 4A60                        l5580 280E  
                      l5572 27CA                        l5564 277C                        l5556 2734  
                      l5548 26AA                        l5492 2514                        l5484 24DE  
                      l5476 24B2                        l5732 54AE                        l5740 4970  
                      l5820 4C58                        l5804 4B84                        l6188 5124  
                      l6292 2A74                        l6284 2A36                        l6276 29DC  
                      l6268 2992                        l6372 5346                        l6620 484E  
                      l6196 40E0                        l6380 3CD4                        l6356 5506  
                      l6540 1E9C                        l6516 1D82                        l6508 1CF4  
                      l6700 47A2                        l6614 4D1C                        l6606 4C7C  
                      l6454 4F5A                        l6438 4EFA                        l5646 4EA2  
                      l5638 4E7C                        l5670 4FC2                        l5662 4F96  
                      l5910 455C                        l5902 44FA                        l5398 31B2  
                      l5726 4B60                        l5718 4AEA                        l5590 2884  
                      l5582 2838                        l5566 278A                        l5558 2752  
                      l5494 251A                        l5486 24EE                        l5478 24BE  
                      l5734 54BE                        l5750 49C0                        l5806 4BC2  
                      l5814 4C02                        l5830 522C                        l6294 2A7C  
                      l6278 29F8                        l6366 530C                        l6622 4864  
                      l6198 40EE                        l6462 5420                        l6358 5526  
                      l6390 2CD8                        l6518 1DA0                        l6534 1E20  
                      l6470 1AF8                        l6710 47E8                        l6616 4D2C  
                      l6608 4C7E                        l6456 54D0                        l5648 4EA8  
                      l5680 4FFE                        l5672 4FCA                        l5664 4F9A  
                      l5656 4F7C                        l5912 456C                        l5904 4516  
                      l5592 28A0                        l5576 27F4                        l5584 283C  
                      l5568 278E                        l5496 2520                        l5488 24FE  
                      l5760 49EA                        l5752 49C4                        l5744 4984  
                      l5816 4C14                        l5808 4BEA                        l5840 3B38  
                      l5832 5240                        l5824 545C                        l5920 10F6  
                      l6296 2A84                        l6288 2A4E                        l6368 5314  
                      l6640 4952                        l6624 4876                        l6632 4894  
                      l6464 542E                        l6392 2CF6                        l6384 2CA0  
                      l6376 3890                        l6560 1F6E                        l6552 1EFE  
                      l6536 1E30                        l6528 1DE8                        l6544 1EC4  
                      l6480 1B58                        l6472 1B0E                        l6800 3766  
                      l6720 4830                        l6704 47BE                        l6712 47EE  
                      l6458 54E2                        l5682 5004                        l5674 4FD2  
                      l5666 4FA8                        l5658 4F80                        l5914 4572  
                      l5906 4530                        l5594 28B0                        l5586 2856  
                      l5578 2800                        l5498 252E                        l5770 4A12  
                      l5762 49F4                        l5754 49D2                        l5746 49AE  
                      l5738 4958                        l5850 3C06                        l5842 3B4C  
                      l5826 5464                        l5930 1142                        l5922 10FC  
                      l6298 2AA6                        l6626 487C                        l6634 48B4  
                      l6618 484A                        l6730 3EF8                        l6722 3ED2  
                      l6466 5430                        l6394 2D1A                        l6386 2CC0  
                      l6554 1F22                        l6570 1FD2                        l6546 1EDA  
                      l6538 1E68                        l6490 1BCC                        l6474 1B10  
                      l6810 3816                        l6802 37CC                        l6650 45CC  
                      l6714 47FC                        l6706 47D0                        l5676 4FE0  
                      l5684 500A                        l5668 4FB0                        l5916 4582  
                      l5908 4542                        l5692 502C                        l5596 28BE  
                      l5588 286A                        l5772 4A1E                        l5764 49FE  
                      l5748 49B0                        l5860 3CC2                        l5844 3B5A  
                      l5852 3C3A                        l5836 3AC2                        l5828 521E  
                      l5940 1180                        l5932 114C                        l5924 110C  
                      l6580 53EA                        l6636 4936                        l6628 488E  
                      l6740 3F9C                        l6732 3F02                        l6724 3EDA  
                      l6572 55DA                        l6396 2D86                        l6388 2CD6  
                      l6564 1F96                        l6556 1F46                        l6548 1EEA  
                      l6492 1C00                        l6476 1B2E                        l6484 1B80  
                      l6468 1AE8                        l6820 384C                        l6812 3824  
                      l6660 45FE                        l6652 45CE                        l6644 45A4  
                      l6716 4814                        l6708 47D8                        l6900 3628  
                      l5686 501A                        l5678 4FF6                        l5790 51C2  
                      l5782 517C                        l5694 505A                        l5598 28C0  
                      l5774 4A2E                        l5854 3C76                        l5838 3AE2  
                      l5870 5298                        l5950 11C8                        l5942 1188  
                      l5934 1154                        l5926 111A                        l6582 53F2  
                      l6638 4944                        l6750 4066                        l6742 3FA4  
                      l6734 3F0A                        l6726 3EEA                        l6574 55E0  
                      l6398 2DAC                        l6486 1B9E                        l6478 1B44  
                      l6822 3852                        l6814 382A                        l6806 37D8  
                      l6830 387C                        l6590 5646                        l6670 4682  
                      l6662 4620                        l6654 45D6                        l6646 45C2  
                      l6902 363A                        l5688 5022                        l5792 51D6  
                      l5784 518C                        l5880 4466                        l5696 506A  
                      l5776 4A3E                        l5856 3C8A                        l5848 3BCA  
                      l5872 52A4                        l5864 5274                        l5952 11CE  
                      l5936 1164                        l5944 118C                        l5928 111E  
                      l6584 53FA                        l6760 40B4                        l6752 4072  
                      l6744 3FB4                        l6736 3F1A                        l6728 3EEC  
                      l6488 1BBC                        l6824 3860                        l6816 3838  
                      l6808 3806                        l6592 5638                        l6680 4700  
                      l6672 4686                        l6656 45E0                        l6648 45CA  
                      l6840 3430                        l6832 33FC                        l5794 51DA  
                      l5786 51A0                        l5890 44A0                        l5882 4476  
                      l5698 5098                        l5778 4A4E                        l5858 3CB2  
                      l5866 5288                        l5874 52A8                        l5970 1256  
                      l5954 11D6                        l5946 11B2                        l5962 1214  
                      l5938 1174                        l6586 540C                        l6578 53DC  
                      l6754 4080                        l6746 3FCC                        l6738 3F32  
                      l6498 1C3C                        l6826 3866                        l6818 383E  
                      l6770 3666                        l6762 3646                        l6594 562A  
                      l6674 46A2                        l6658 45EC                        l6690 4726  
                      l6850 3484                        l6842 3442                        l6834 3422  
                      l5796 5208                        l5788 51AE                        l5892 44AC  
                      l5884 447C                        l5876 4428                        l5868 5294  
                      l5972 125E                        l5964 123A                        l5980 1276  
                      l5956 11EA                        l5948 11C4                        l6756 4098  
                      l6748 4036                        l6828 386A                        l6780 3684  
                      l6772 3668                        l6764 365A                        l6596 561C  
                      l6676 46BA                        l6668 4628                        l6692 4754  
                      l6684 4708                        l6860 34D8                        l6844 3450  
                      l6852 3496                        l6836 3426                        l5798 553A  
                      l5894 44B6                        l5886 448C                        l5878 444A  
                      l5990 1310                        l5982 1290                        l5966 124C  
                      l5958 11F4                        l6790 36B6                        l6782 3686  
                      l6774 366A                        l6766 3662                        l6598 560E  
                      l6678 46DA                        l6694 4760                        l6686 470A  
                      l6870 3530                        l6854 34A4                        l6862 34EA  
                      l6846 3468                        l6838 342C                        l5896 44BC  
                      l5888 4498                        l5992 134E                        l5968 1250  
                      l6792 36BC                        l6784 3688                        l6776 367C  
                      l6768 3664                        l6696 477C                        l6688 4724  
                      l6872 3554                        l6864 34F8                        l6856 34BC  
                      l5898 44EE                        l5994 1380                        l5986 12D6  
                      l6794 36CE                        l6786 368A                        l6778 3682  
                      l6698 478A                        l6890 35CC                        l6882 358E  
                      l6874 3558                        l6866 3510                        l5996 13BE  
                      l5988 12DC                        l6796 36DA                        l6788 36A6  
                      l6884 35A0                        l6876 3562                        l5998 13D2  
                      l6798 3742                        l6878 3586                        l6888 35A8  
                      l6896 35D4                        l6898 3616                        STR_1 1065  
                      STR_2 1054                        STR_3 1087                        STR_4 1054  
                      STR_5 1076                        STR_6 1098                        STR_7 10A9  
                      STR_8 10DC                        STR_9 10D2                        u6200 4D88  
                      u7000 280E                        u6201 4D84                        u7001 280A  
                      u6210 4DBE                        u7010 2856                        u6211 4DBA  
                      u7011 2852                        _PEIE 7F96                        u7100 4F8E  
                      u7020 2884                        u6300 20F2                        u6220 200C  
                      u7101 4F8A                        u7021 2880                        u6301 20EE  
                      u6221 2008                        u7110 4FA8                        u7030 28BE  
                      u6310 2160                        u6230 201E                        u7111 4FA4  
                      u7031 28BA                        u6311 215C                        u6231 201A  
                      u7040 4E18                        u7120 4FC2                        u7200 4ACC  
                      u6400 223E                        u6320 2178                        u6240 202E  
                      u8000 42F6                        u7041 4E14                        u7121 4FBE  
                      u7201 4AC8                        u6401 223A                        u6321 2172  
                      u6241 202A                        u8001 42F2                        u7050 4E32  
                      u7130 4FE0                        u6170 5606                        u7210 4AEA  
                      u6410 225C                        u6330 217A                        u6250 2070  
                      u8010 4304                        u7051 4E2E                        u7131 4FDC  
                      u6171 5602                        u7211 4AE6                        u6411 2258  
                      u6251 206C                        u8011 4300                        u7060 4E58  
                      u7140 4FF6                        u6180 4D4E                        u7220 4B0A  
                      u6500 239A                        u6420 2294                        u6340 21A2  
                      u6260 2086                        u7300 4A2E                        u8100 5172  
                      u8020 4322                        u7061 4E54                        u7141 4FF2  
                      u6181 4D4A                        u7221 4B06                        u6501 2396  
                      u6421 2290                        u6341 219E                        u6261 2082  
                      u7301 4A2A                        u8101 516E                        u8021 431E  
                      u7070 4E76                        u7150 501A                        u6190 4D60  
                      u7230 4B5A                        u6510 23B0                        u6430 22DA  
                      u6350 21C0                        u6270 2098                        u7310 4A3E  
                      u8030 434A                        u8110 40E0                        u7071 4E72  
                      u7151 5016                        u6191 4D5C                        u7231 4B56  
                      u6511 23AC                        u6431 22D6                        u6351 21BC  
                      u6271 2094                        u7311 4A3A                        u8031 4346  
                      u8111 40DC                        u7080 4E92                        u7320 518C  
                      u7160 505A                        u7240 54AE                        u6600 249E  
                      u6520 23C6                        u6440 2310                        u6360 21E0  
                      u6280 20A8                        u7400 4C14                        u8040 4384  
                      u8200 426E                        u8120 40EE                        u9000 40CC  
                      u7081 4E8E                        u7321 5188                        u7161 5056  
                      u7241 54AA                        u6601 249A                        u6521 23C2  
                      u6441 230C                        u6361 21DC                        u6281 20A4  
                      u7401 4C10                        u8041 4380                        u8201 426A  
                      u8121 40EA                        u9001 40C8                        u7090 4EB8  
                      u6610 53DA                        u7330 51AE                        u7170 5098  
                      u6530 23DA                        u6450 2320                        u6370 21EE  
                      u6290 20E4                        u7250 4970                        u8050 43AA  
                      u8210 2900                        u8130 414A                        u9010 36B6  
                      u7091 4EB4                        u6611 53D6                        u7331 51AA  
                      u7171 5094                        u6531 23D6                        u6451 231C  
                      u6371 21EA                        u6291 20E0                        u7251 496C  
                      u8211 28FC                        u8131 4146                        u9011 36B2  
                      u7340 51F8                        u6700 31FA                        u6620 307C  
                      u7180 50CC                        u6540 23F4                        u6460 234C  
                      u6380 21FE                        u7260 49A4                        u7420 4C4E  
                      u7500 3BC6                        u8060 43DC                        u8300 2AFA  
                      u8220 2964                        u8140 41A0                        u9020 36CE  
                      u9100 3476                        u7341 51F4                        u6701 31F6  
                      u6621 3078                        u7181 50C8                        u6541 23F0  
                      u6461 2348                        u6381 21FA                        u7421 4C48  
                      u7501 3BC2                        u8061 43D8                        u8301 2AF6  
                      u8221 2960                        u8141 419C                        u9021 36CA  
                      u9101 3472                        u7350 5208                        u6710 321C  
                      u6630 308E                        u7190 4A8E                        u6550 242E  
                      u6470 235C                        u6390 2230                        u7270 49D2  
                      u7430 4C50                        u7510 3BEA                        u8070 43EC  
                      u8310 2B18                        u8230 2988                        u8150 41EA  
                      u9030 3806                        u9110 3484                        u7351 5204  
                      u6711 3218                        u6631 308A                        u7191 4A8A  
                      u6551 242A                        u6471 2358                        u6391 222C  
                      u7271 49CE                        u7415 4C26                        u8071 43E8  
                      u8311 2B14                        u8231 2984                        u8151 41E6  
                      u9031 3802                        u9111 3480                        u7360 5548  
                      u7600 4476                        u6800 3328                        u6720 3246  
                      u6640 309E                        u6560 2440                        u6480 2378  
                      u7280 49E6                        u7520 3C06                        u7440 5494  
                      u8080 4426                        u8320 2BAC                        u8240 29B4  
                      u8160 4208                        u8400 305C                        u9040 3824  
                      u9120 34A4                        u7361 5544                        u7601 4472  
                      u6801 3324                        u6721 3242                        u6641 309A  
                      u6561 243C                        u6481 2374                        u7281 49E2  
                      u7265 499A                        u7521 3C02                        u7441 5490  
                      u8081 4422                        u8057 43A0                        u8321 2BA8  
                      u8241 29B0                        u8161 4204                        u8401 3058  
                      u9041 3820                        u9121 34A0                        u8330 55A8  
                      u8410 4EDC                        u7610 448C                        u6810 3342  
                      u6730 326A                        u6650 30E2                        u6570 2450  
                      u6490 2388                        u7290 4A0E                        u7370 4BA4  
                      u7530 3C5A                        u7450 522C                        u8090 5100  
                      u8250 29F8                        u8170 4218                        u9050 3838  
                      u9130 34CA                        u8331 55A4                        u8411 4ED8  
                      u7611 4488                        u6811 333E                        u6731 3266  
                      u6651 30DE                        u6571 244C                        u6491 2384  
                      u7291 4A0A                        u7515 3BE0                        u7451 5228  
                      u8091 50FC                        u8251 29F4                        u8171 4214  
                      u9051 3834                        u9131 34C6                        u8340 55B6  
                      u8420 4EFA                        u7620 4530                        u6820 338A  
                      u6740 3280                        u6660 30F4                        u6900 2550  
                      u6580 2470                        u7380 4BC2                        u7540 3C76  
                      u7460 3B0A                        u7700 11C4                        u8260 2A14  
                      u8180 4226                        u8500 5456                        u9060 384C  
                      u9140 34D8                        u8341 55B2                        u8421 4EF6  
                      u7621 452C                        u6821 3386                        u6741 327C  
                      u6661 30F0                        u6901 254C                        u6581 246C  
                      u7381 4BBE                        u7541 3C72                        u7701 11C0  
                      u8261 2A10                        u8181 4222                        u8501 5452  
                      u9061 3848                        u9141 34D4                        u8430 4F16  
                      u7630 4542                        u6830 33BA                        u6750 329E  
                      u6670 3104                        u6910 2586                        u6590 2482  
                      u7390 4BEA                        u7550 3CB2                        u7470 3B38  
                      u7710 123A                        u8270 2A74                        u8350 5346  
                      u8190 4260                        u8510 1B0A                        u9070 3860  
                      u9150 34F8                        u8431 4F12                        u7631 453E  
                      u6831 33B6                        u6751 329A                        u6671 3100  
                      u6911 2582                        u6591 247E                        u7391 4BE6  
                      u7375 4B9A                        u7551 3CAE                        u7535 3C50  
                      u7471 3B34                        u7711 1236                        u8271 2A70  
                      u8351 5342                        u8191 425C                        u8511 1B04  
                      u9071 385C                        u9151 34F4                        u9207 34B0  
                      u8440 4F54                        u7640 455C                        u6840 33E8  
                      u6760 32BE                        u6680 3144                        u6920 2596  
                      u7480 3B5A                        u7560 52C2                        u7800 14CC  
                      u7720 124C                        u8280 2AA6                        u8360 2CD2  
                      u8600 1DA0                        u8520 1B0C                        u9080 388E  
                      u9160 351E                        u7641 4558                        u6841 33E4  
                      u6761 32BA                        u6681 3140                        u6921 2592  
                      u7481 3B56                        u7465 3B00                        u7561 52BE  
                      u7801 14C8                        u7721 1248                        u8281 2AA2  
                      u8361 2CCC                        u8601 1D9C                        u9081 388A  
                      u9161 351A                        u9217 3504                        u8450 4F6A  
                      u7650 456C                        u7570 4438                        u6770 32D0  
                      u6690 3184                        u6930 2710                        u6850 24CC  
                      u7810 14DA                        u7730 12C2                        u8290 2AD0  
                      u8370 2CD4                        u8610 1DB0                        u8530 1B2E  
                      u9170 352C                        u9090 3450                        u8451 4F66  
                      u7651 4568                        u7571 4432                        u6771 32CC  
                      u6691 3180                        u6851 24C8                        u7811 14D6  
                      u7731 12BE                        u8291 2ACC                        u8611 1DAC  
                      u8531 1B2A                        u9227 4794                        u9171 3528  
                      u9091 344C                        u8700 4C9C                        u8460 4F7A  
                      u7580 443A                        u6780 32FE                        u6940 276A  
                      u6860 24DE                        u7900 18DC                        u7820 1504  
                      u7740 134E                        u7660 111A                        u8380 2CF6  
                      u8620 1E30                        u8540 1B44                        u9180 3628  
                      u8701 4C98                        u8461 4F76                        u6781 32FA  
                      u6941 2766                        u6861 24DA                        u7901 18D8  
                      u7821 1500                        u7741 134A                        u7661 1116  
                      u8381 2CF2                        u8621 1E2C                        u8541 1B40  
                      u9237 4806                        u9181 3624                        u8710 4D2C  
                      u8470 54E0                        u7590 444A                        u6790 3314  
                      u6950 278A                        u6870 24EE                        u7910 18EA  
                      u7830 164C                        u7750 1380                        u7670 1164  
                      u8390 2E74                        u8630 1EDA                        u8550 1B9E  
                      u8711 4D28                        u8471 54DC                        u8447 4F4A  
                      u7591 4446                        u6791 3310                        u6951 2786  
                      u6935 2706                        u6871 24EA                        u7495 3B6E  
                      u7911 18E6                        u7831 1648                        u7751 137C  
                      u7671 1160                        u8391 2E70                        u8631 1ED6  
                      u8551 1B9A                        u9247 46AC                        u8480 5504  
                      u6960 279C                        u6880 252E                        u7496 3B78  
                      u7920 193E                        u7840 16B2                        u7760 13BE  
                      u7680 1174                        u8560 1BBC                        u8800 4680  
                      u8481 5500                        u6961 2798                        u6881 252A  
                      u7497 3B88                        u7921 193A                        u7841 16AE  
                      u7761 13BA                        u7681 1170                        u8721 4858  
                      u8561 1BB8                        u9257 3872                        u6970 27CA  
                      u6890 2540                        u7930 1A10                        u7850 16FA  
                      u7770 144A                        u7690 11B2                        u8730 4876  
                      u8490 5442                        u8570 1BCC                        u8810 46A2  
                      u6971 27C6                        u6891 253C                        u7931 1A0C  
                      u7851 16F6                        u7771 1446                        u7691 11AE  
                      u8731 4872                        u9267 408C                        u8491 543E  
                      u8571 1BC8                        u8811 469E                        u6980 27E0  
                      u7940 1A2C                        u7860 170A                        u7780 1480  
                      u8740 488E                        u8580 1CA8                        u8820 46DA  
                      u8900 47FC                        u9277 4C84                        u6981 27DC  
                      u7941 1A28                        u7861 1706                        u7781 147C  
                      u8741 488A                        u8581 1CA4                        u8645 564E  
                      u8821 46D6                        u8901 47F8                        u9197 345C  
                      u6990 27F4                        u7950 1A92                        u7870 17A4  
                      u7790 1496                        u8590 1D82                        u8646 5650  
                      u8830 46F0                        u8910 4822                        u9287 4D32  
                      u6991 27F0                        u7951 1A8C                        u7871 17A0  
                      u7791 1492                        u8591 1D7E                        u8655 5640  
                      u8831 46EC                        u8751 45F6                        u8911 481E  
                      u7960 1A94                        u7880 17F2                        u8656 5642  
                      u8920 4830                        u8840 4736                        u7881 17EE  
                      u8665 5632                        u8761 4608                        u8921 482C  
                      u8841 4732                        u7970 1AA8                        u7890 18A0  
                      u8666 5634                        u8930 4844                        u8850 478A  
                      u7971 1AA4                        u7891 189C                        u8675 5624  
                      u8931 4840                        u8851 4786                        u7980 429C  
                      u8676 5626                        u8860 47B0                        u7981 4298  
                      u8941 3EF2                        u8685 5616                        u8861 47AC  
                      u7990 42E6                        u8950 3F1A                        u8686 5618  
                      u8790 467E                        u8870 47BE                        u8951 3F16  
                      u8695 565C                        u8791 4678                        u8871 47BA  
                      u8960 3FB4                        u8696 565E                        u8784 4668  
                      u8880 47D0                        u8961 3FB0                        u8785 4664  
                      u8881 47CC                        u8970 4080                        u8778 463A  
                      u8890 47E8                        u8971 407C                        u8779 4682  
                      u8891 47E4                        u8980 40A6                        u7997 42DC  
                      u8981 40A2                        u8990 40B4                        u8991 40B0  
                      _TMR1 0FCE                        abs@a 0009                        _dbuf 0122  
                      _half 101D                        _labs 521E                        _main 33FC  
                      _dtoa 4428                        _prec 005B                        _sinf 1AE8  
                      pad@i 001B                        pad@p 0018                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        _stoa 4282  
                      btemp 005D               ___fpclassifyf 4B64                        prodh 0FF4  
                      prodl 0FF3                        start 008E             ___fldiv@new_exp 003B  
              ___param_bank 0000                       ??_ISR 0001              _LCD_ShowString 4ECA  
                     ??_abs 000B                       ??_pad 001A            __end_of_LCD_Init 4D3C  
          __end_of_LCD_Send 55BA               ___fltol@sign1 0060                       ?_labs 0003  
           __end_of___fladd 24B2                       ?_main 0001                       ?_dtoa 001D  
           __end_of___fldiv 33FC             __end_of___awdiv 4ECA             __end_of___cosdf 3ED2  
           __end_of___flneg 54D0                       STR_10 10D7                       STR_11 10F1  
                     STR_20 10E1                       STR_12 10ED                       STR_13 10E9  
                     STR_14 10CD                       STR_23 10E5                       STR_15 10C1  
                     STR_16 10E0                       STR_17 10C7                       STR_18 10C8  
                     STR_26 10BA                       STR_19 1041             __end_of___awmod 502C  
                     ?_sinf 009C             __end_of___flmul 28DC             __end_of___flsub 5398  
           __end_of___fltol 4A60                       ?_stoa 000D             ___awdiv@divisor 0005  
           __end_of___sindf 3AC2                       i2l340 0080                       i2l342 006C  
                     i2l345 008A             ___awdiv@counter 0007                ___sindf$3790 0068  
              ___sindf$3791 006C                ___sindf$3792 0070                vfpfcnvrt@fmt 00B3  
                     _TX1IF 7CF4             __end_of_pio2_1t 1015                       _fabsf 5506  
                     _flags 00FE         read_prec_or_width@c 000B         read_prec_or_width@n 000C  
                     _fputc 4D3C                       _fputs 5398                       labs@a 0003  
                     pad@fp 0014                       _width 00FC             __end_of_invpio2 101D  
                     _putch 55F6                       dtoa@d 001F                       dtoa@i 0028  
                     dtoa@p 0025                       dtoa@s 0027                       dtoa@w 0023  
      __end_of_LED1_Control 5652             __end_of_runGPIO 4708                       pclath 0FFA  
                     tablat 0FF5        __end_of_LED2_Control 5644                       sinf@n 00A8  
                     sinf@x 009C                       sinf@y 00AE                       plusw1 0FE3  
                     plusw2 0FDB                       stoa@l 0019                       stoa@p 0013  
                     stoa@s 000F                       stoa@w 0015                       ttemp5 005E  
                     ttemp6 0061                       ttemp7 0065        __end_of_LED3_Control 5636  
                     status 0FD8                       wtemp8 005E             __end_of_sprintf 541E  
            ?___fpclassifyf 0003        __end_of_LED4_Control 5628        __end_of_LED5_Control 561A  
      __end_of_LED6_Control 5660             __initialization 52C4      __end_of_LCD_ShowString 4F7C  
              __end_of_half 1021                __end_of_labs 5274                __end_of_main 3646  
              __end_of_dtoa 45A4                __end_of_sinf 1FF2                __end_of_stoa 4428  
              LCD_Send@data 0003                      ??_labs 0007                      ??_main 00FA  
                    ??_dtoa 0021                      ??_sinf 005B                      ??_stoa 0011  
         __end_of_LCD_Clear 5506               __activetblptr 0002  __end_of_read_prec_or_width 517C  
              ?_moveDisplay 00DA                      ?_fabsf 0003                      ?_fputc 0004  
                    ?_fputs 000D                      _ADRESH 0FC4                      _ADRESL 0FC3  
                    _CCPR1L 0FBE            ___awdiv@dividend 0003                      ?_putch 0001  
                    _GODONE 7E11                      _GPIOIE 0121                      i2l5100 007A  
                    i2l5102 0088                      i2l5090 0026                      i2l5092 0038  
                    i2l5094 0046                      i2l5086 000A                      i2l5096 005E  
                    i2l5088 0018               ___rem_pio2f@n 0098               ___rem_pio2f@t 0094  
             ___rem_pio2f@x 007C               ___rem_pio2f@y 0080               vfpfcnvrt@done 00BB  
                    _SPBRG1 0FAF                      _TMR1IE 7CE8                      _TMR1IF 7CF0  
                    _TMR2IF 7CF1                      _TMR1ON 7E68                      _TMR2ON 7DD2  
                    _SSP1IF 7CF3                      _SSP2IF 7D27                      _TXREG1 0FAD  
          __end_of___xxtofl 4282                _CCPTMRS0bits 0F49                vfprintf@cfmt 00C1  
           ?_LCD_ShowString 0004                      _s1pio2 103D                      _s2pio2 1039  
                    _s3pio2 1035                      _s4pio2 1031                      ___flge 4A60  
                    ___fleq 502C                   ??___fladd 004B                      ___wmul 556E  
                 ??___fldiv 0032                   ??___awdiv 0007                   ??___cosdf 0057  
                 ??___flneg 0057                   ??___awmod 0007                   ??___flmul 0019  
                 ??___flsub 005B                   ??___fltol 0057                      _efgtoa 10F6  
                 ??___sindf 0057                      _pio2_1 1015                      _floorf 3AC2  
                    fabsf@u 0007                      fabsf@x 0003                      _memcpy 5274  
      read_prec_or_width@ap 000A                      clear_0 52EA            ___awdiv@quotient 0009  
                    _runADC 3ED2                      _runDAC 3646             ___awmod@divisor 0005  
                    isa$std 0001                      _runPWM 4708             ___awmod@counter 0007  
                    _printf 55DA                      pad@buf 0016                      dtoa@fp 001D  
                    _strcpy 545C                      fputc@c 0004                      fputs@c 0011  
                    fputs@i 0012                      fputs@s 000D             ___fpclassifyf@e 000B  
           ___fpclassifyf@u 000D             ___fpclassifyf@x 0003                __mediumconst 0000  
                    sinf@ux 00B2                   ??_runGPIO 0004                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8           __end_of_SPI_write 545C  
                    stoa@cp 0017                      stoa@fp 000D            __end_of_vfprintf 5352  
                 ??_sprintf 005B                  ___flge@ff1 002A                  ___flge@ff2 002E  
           ??___fpclassifyf 0007                ___xxtofl@arg 000D                ___xxtofl@exp 000C  
              ___xxtofl@val 0003                  ___fleq@ff1 0003                  ___fleq@ff2 0007  
                __accesstop 0060     __end_of__initialization 52FE                   ?_LCD_Init 0001  
                 ?_LCD_Send 0001                  ___flneg@f1 0078               ___rparam_used 0001  
                ___fltol@f1 0053              __pcstackCOMRAM 0001           LED4_Control@state 0003  
              __pidataBANK1 55BA               __end_of_fabsf 553A               __end_of_fputc 4E06  
             __end_of_fputs 53DC               __end_of_putch 560C                  __end_of_C0 1031  
                __end_of_C1 102D                  __end_of_C2 1029                  __end_of_C3 1025  
                __end_of_S1 1011                  __end_of_S2 100D                  __end_of_S3 1009  
                __end_of_S4 1005                     ??_fabsf 0007                     ??_fputc 0008  
                   ??_fputs 0011                     ??_putch 0003                  __pbssBANK0 00FC  
                __pbssBANK1 0100                  ??_LCD_Init 0004                  ??_LCD_Send 0003  
               runADC@F6956 0100                SPI_write@LSB 0004                SPI_write@MSB 0003  
                   ?___flge 002A                     ?___fleq 0003                     ?___wmul 0003  
                   ?_efgtoa 007C               ??___rem_pio2f 0081                     ?_floorf 0043  
              _LED1_Control 5644                     ?_memcpy 0003                     ?_runADC 0001  
                   ?_runDAC 0001                _LED2_Control 5636                     ?_runPWM 0001  
                   ?_printf 00C2                     ?_strcpy 0003                _LED3_Control 5628  
              _LED4_Control 561A                   ?___xxtofl 0003                _LED5_Control 560C  
            ___rem_pio2f@fn 0090              ___rem_pio2f@ty 0083              ___rem_pio2f@ux 008C  
              _LED6_Control 5652                     _SSP2ADD 0F6E                     _SSP1BUF 0FC9  
                   _SSP2BUF 0F6F           runGPIO@LEDControl 0012             LCD_ShowString@i 0009  
                   __Hparam 0000                     __Lparam 0000                     ___fladd 1FF2  
                   ___fldiv 3062                     ___awdiv 4E06                     ___cosdf 3CD4  
                   ___flneg 5496                     ___awmod 4F7C                     ___flmul 24B2  
                   ___flsub 5352                     ___fltol 4958                     ___sindf 3890  
                 ?_vfprintf 00BD                __psmallconst 1000              main@setUpAgain 019D  
                   __pcinit 52C4                     __ramtop 1000                     __ptext0 33FC  
                   __ptext1 4708                     __ptext2 45A4                     __ptext3 560C  
                   __ptext4 561A                     __ptext5 5628                     __ptext6 5636  
                   __ptext7 5644                     __ptext8 5652                     __ptext9 3646  
                   _pio2_1t 1011                   _T1CONbits 0FCD             runPWM@keepState 000D  
     read_prec_or_width@fmt 0009                  ??___xxtofl 0007         __end_of___rem_pio2f 3062  
          ___awmod@dividend 0003                     _invpio2 1019                     _runGPIO 45A4  
                   efgtoa@c 0082                     efgtoa@d 0090                     efgtoa@e 0094  
                   efgtoa@f 007E                     efgtoa@g 00A7                     efgtoa@h 009E  
                   efgtoa@i 009C                     efgtoa@l 00A2                     efgtoa@m 0092  
                   efgtoa@n 00AB                     efgtoa@p 0087                     efgtoa@t 0089  
                   efgtoa@u 00AD                     efgtoa@w 0096                   _LCD_Clear 54D0  
                   _sprintf 53DC            ___rem_pio2f$3789 0087        end_of_initialization 52FE  
                   floorf@e 0051                     floorf@m 004D                     floorf@u 0053  
                   floorf@x 0043                     memcpy@d 000A                     memcpy@n 0007  
                   memcpy@s 000C                     fputc@fp 0006            ___rem_pio2f@F526 0115  
             __Lmediumconst 0000                     fputs@fp 000F            ??_LCD_ShowString 0006  
        _read_prec_or_width 50D6           LED1_Control@state 0003       LCD_ShowString@lineNum 0008  
          ___rem_pio2f@sign 008B           __end_of_vfpfcnvrt 2CA0                  efgtoa@mode 008E  
                efgtoa@sign 00A6                     postdec1 0FE5                     postdec2 0FDD  
       ?_read_prec_or_width 0009                     postinc0 0FEE                     postinc1 0FE6  
                   postinc2 0FDE            vfpfcnvrt@convarg 00B6                  ??_vfprintf 005B  
                   strcpy@d 0007                   _PORTAbits 0F80                   _PORTCbits 0F82  
               ___fladd@grs 0052               ___xxtofl@sign 000B                   _TRISAbits 0F92  
                 _TRISBbits 0F93                   _TRISCbits 0F94                   _TRISDbits 0F95  
                ?_LCD_Clear 0001        ??_read_prec_or_width 000B                 ___fldiv@grs 003D  
               ___fldiv@rem 0036                   _SPI_write 541E                 ___flmul@grs 001F  
               _CCP1CONbits 0FBD           LED5_Control@state 0003              __end_of_s1pio2 1041  
            __end_of_s2pio2 103D              __end_of_s3pio2 1039              __end_of_s4pio2 1035  
            __end_of___flge 4B64              __end_of___fleq 50D6                 vfpfcnvrt@ap 00B4  
               vfpfcnvrt@cp 00BC                 ___rem_pio2f 2CA0                 vfpfcnvrt@fp 00B1  
            __end_of___wmul 5594              __end_of_efgtoa 1AE8              __end_of_pio2_1 1019  
      moveDisplay@menuItem1 0172        moveDisplay@menuItem2 0183              __end_of_floorf 3CD4  
      moveDisplay@menuItems 0194              __end_of_memcpy 52C4                  floorf@F521 0119  
            __end_of_runADC 40CE              __end_of_runDAC 3890              __end_of_runPWM 4846  
            __end_of_printf 55F6              __end_of_strcpy 5496         start_initialization 52C4  
               __end_of_ISR 008E                 __end_of_abs 556E                 __end_of_pad 521E  
                ?_SPI_write 0001       __end_of___fpclassifyf 4C62             runADC@keepState 00F9  
               vfprintf@fmt 00BF                    ??___flge 0032                    ??___fleq 000B  
                  ??___wmul 0007                    ??_efgtoa 0083                 __pdataBANK1 019F  
                  ??_floorf 0047                    ??_memcpy 0009                    ??_runADC 00DA  
                  ??_runDAC 00C6                    ??_runPWM 000B                    ??_printf 005B  
                  ??_strcpy 0006                   ___fladd@a 0047                   ___fladd@b 0043  
                 ___fldiv@a 002E                   ___fldiv@b 002A               runGPIO@states 0006  
                 ___cosdf@r 0060                   ___cosdf@w 0070                   ___cosdf@x 0053  
                 ___cosdf@z 0074                   ___flmul@a 0015                   ___flmul@b 0011  
               __pbssCOMRAM 005B                   ___flsub@a 0057                   ___flsub@b 0053  
             __pcstackBANK0 0060               __pcstackBANK1 0172                 ??_LCD_Clear 0004  
                 ___sindf@r 0060                   ___sindf@s 0074                   ___sindf@w 0064  
                 ___sindf@x 0053                   ___sindf@z 0078       runGPIO@numberOfStates 001F  
               _efgtoa$3345 008B                   _dtoa$3314 0021               SPI_write@data 0005  
                 __pintcode 0008                    ?___fladd 0043                    ?___fldiv 002A  
                  ?___awdiv 0003                    ?___cosdf 0053                    ?___flneg 0078  
                  ?___awmod 0003                    ?___flmul 0011                    ?___flsub 0053  
                  ?___fltol 0053                  runADC@pot1 00F5                  runADC@pot2 00F7  
                  ?___sindf 0053                  runADC@text 00DC                   fabsf@F465 0111  
               __smallconst 1000               ??_moveDisplay 00DB                    ?_runGPIO 0001  
           runDAC@keepState 00CF                    ?_sprintf 00C2                   _sinf$3510 00A4  
                 _sinf$3509 00A0                   _sinf$3785 00AA                 ??_SPI_write 0003  
            runDAC@DACindex 00D1                    _LCD_Init 4C62                    _LCD_Send 5594  
            ___wmul@product 0007                    _LATAbits 0F89                    _LATBbits 0F8A  
                  _LATCbits 0F8B                    _LATDbits 0F8C           LED2_Control@state 0003  
                  i2u611_40 0018                    i2u611_41 0014                    i2u612_40 0026  
                  i2u612_41 0022                    i2u613_40 0038                    i2u613_41 0034  
                  i2u614_40 0046                    i2u614_41 0042                    i2u615_40 006C  
                  i2u615_41 0068                    i2u616_40 007A                    i2u616_41 0076  
                  i2u929_47 0050                   _vfpfcnvrt 28DC                  _ADCON0bits 0FC2  
                _ADCON2bits 0FC0           ___wmul@multiplier 0003                   main@menuI 019E  
          moveDisplay@F6954 01B7                  vfpfcnvrt@c 00BA                   copy_data0 52D8  
       __end_of_moveDisplay 4958            moveDisplay@menuI 019C            moveDisplay@where 00DA  
              runGPIO@F6966 01AB                runGPIO@F6984 019F                runGPIO@GPIOi 0021  
                  __Hrparam 0000                   memcpy@tmp 0009                  vfprintf@ap 00C0  
                  __Lrparam 0000                  vfprintf@fp 00BD          runGPIO@GPIOreverse 001E  
         LED6_Control@state 0003                ?___rem_pio2f 007C                  ?_vfpfcnvrt 00B1  
       runDAC@selectModeDAC 00D0                  _ANSELAbits 0F38                  _ANSELBbits 0F39  
                _ANSELDbits 0F3B                  _ANSELEbits 0F3C          ___fpclassifyf@F465 011D  
                sprintf@fmt 00C4                    ___xxtofl 40CE                    __ptext10 1AE8  
                  __ptext11 3890                    __ptext20 53DC                    __ptext12 2CA0  
                  __ptext21 530C                    __ptext13 5506                    __ptext30 3AC2  
                  __ptext22 28DC                    __ptext14 3CD4                    __ptext31 4B64  
                  __ptext23 4282                    __ptext15 55DA                    __ptext40 4428  
                  __ptext32 4958                    __ptext24 50D6                    __ptext16 541E  
                  __ptext41 517C                    __ptext33 5352                    __ptext25 556E  
                  __ptext17 3ED2                    __ptext50 4C62                    __ptext42 5398  
                  __ptext34 1FF2                    __ptext26 10F6                    __ptext18 40CE  
                  __ptext51 5594                    __ptext43 4D3C                    __ptext35 5496  
                  __ptext27 545C                    __ptext19 4846                    __ptext44 55F6  
                  __ptext36 24B2                    __ptext28 5274                    __ptext45 553A  
                  __ptext37 4A60                    __ptext29 521E                    __ptext46 4F7C  
                  __ptext38 502C                    __ptext47 4E06                    __ptext39 3062  
                  __ptext48 4ECA                    __ptext49 54D0              runADC@voltage1 00ED  
            runADC@voltage2 00F1                _SSP1CON1bits 0FC6                _SSP2CON1bits 0F6C  
              _SSP2CON2bits 0F6B                  strcpy@dest 0003                    efgtoa@fp 007C  
                  efgtoa@ne 0085                    efgtoa@pp 008D                    efgtoa@ou 0098  
                  isa$xinst 0000                    int$flags 005D                 _runDAC$3782 00C7  
               _runDAC$3783 00CB                    _vfprintf 530C               ?_LED1_Control 0001  
                 printf@fmt 00C2                _SSP1STATbits 0FC7               ?_LED2_Control 0001  
              _SSP2STATbits 0F6D               ?_LED3_Control 0001               ?_LED4_Control 0001  
                 putch@data 0003               ?_LED5_Control 0001                    memcpy@d1 0003  
             ?_LED6_Control 0001                    memcpy@s1 0005                 _moveDisplay 4846  
                  intlevel2 0000                   sprintf@ap 00CD                   strcpy@src 0005  
                _RCSTA1bits 0FAB                    sinf@sign 00A9                    runGPIO@j 0022  
               efgtoa@nmode 008F                    printf@ap 00C5              ??_LED1_Control 0003  
            ??_LED2_Control 0003                 ??_vfpfcnvrt 00B5      LCD_ShowString@textData 0004  
            ??_LED3_Control 0003              ??_LED4_Control 0003                    sprintf@f 00CE  
                  sprintf@s 00C2              ??_LED5_Control 0003              ??_LED6_Control 0003  
          runPWM@multiplier 000E               ___fladd@signs 004F                ___fladd@aexp 0050  
              ___fladd@bexp 0051                ___cosdf$3786 0064                ___cosdf$3787 0068  
              ___cosdf$3788 006C               _keepStateGPIO 00FF           LED3_Control@state 0003  
